int func_0(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x5D0A
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
	}
	if (!bParam5)
	{
		iVar0 = (iVar0 + __LIB_8__::func_119(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_118(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_8__::func_117(__LIB_3__::func_490(iParam2) + 1, iParam0, iParam2));
		}
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_369(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_8__::func_116(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_1(bool bParam0, int iParam1, bool bParam2)//Position - 0xA4E6
{
	int iVar0;
	int iVar1;
	float fVar2;
	if (bParam2)
	{
		if (bParam0)
		{
			iVar0 = Global_262145.f_21600 /* Tunable: 262971166 */;
		}
		else
		{
			iVar0 = Global_262145.f_21599 /* Tunable: 970448219 */;
		}
	}
	else if (bParam0)
	{
		iVar0 = Global_262145.f_18147 /* Tunable: BIKER_BUSINESS_PAID_RESUPPLY_BASE */;
	}
	else
	{
		iVar0 = Global_262145.f_18998 /* Tunable: BIKER_PURCHASE_SUPPLIES_COST_PER_SEGMENT */;
	}
	fVar2 = (SYSTEM::TO_FLOAT((100 - iParam1)) / 20f);
	iVar1 = SYSTEM::CEIL(fVar2);
	iVar1 = __LIB_0__::func_340(iVar1, 0, 5);
	return (iVar1 * iVar0);
}

int func_2(int iParam0)//Position - 0xA682
{
	int iVar0;
	if (__LIB_12__::func_531(PLAYER::PLAYER_ID(), iParam0))
	{
		iVar0 = __LIB_7__::func_933(iParam0);
		return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[iVar0 /*13*/].f_1 == 0;
	}
	return 0;
}

int func_3(int iParam0, int iParam1)//Position - 0xBC72
{
	int iVar0;
	if (__LIB_12__::func_531(iParam0, iParam1))
	{
		iVar0 = __LIB_7__::func_566(iParam0, iParam1);
		if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_4 > 0 && Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_7)
		{
			return 1;
		}
	}
	return 0;
}

int func_4(int iParam0, bool bParam1)//Position - 0xCB6A
{
	int iVar0;
	int iVar1;
	iVar0 = Global_2787772[iParam0];
	iVar1 = __LIB_7__::func_555(PLAYER::PLAYER_ID(), iParam0);
	if (bParam1)
	{
		iVar0 = Global_2787779;
	}
	if (__LIB_7__::func_553(iVar1))
	{
		if (__LIB_7__::func_934(PLAYER::PLAYER_ID(), iVar1) == 2)
		{
			iVar0 *= 2;
		}
	}
	return iVar0;
}

int func_5(int iParam0)//Position - 0x10C85
{
	if (!__LIB_8__::func_150(iParam0))
	{
		return -1;
	}
	return Global_2787882[iParam0];
}

bool func_6(int iParam0, int iParam1)//Position - 0x10CB8
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	if (!__LIB_12__::func_947(iParam1))
	{
		return -1;
	}
	bVar1 = -1;
	if (iParam1 < 4)
	{
		iVar2 = iParam1 * 7;
		iVar3 = iVar2 + 6;
		bVar0 = iVar2;
		while (bVar0 <= iVar3)
		{
			if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_295.f_2, bVar0))
			{
				bVar0 = (bVar0 - iParam1 * 7);
				bVar1 = bVar0;
			}
			else
			{
				bVar0++;
			}
		}
	}
	else
	{
		bVar0 = false;
		while (bVar0 <= 7)
		{
			if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_295.f_3, bVar0))
			{
				bVar1 = bVar0;
			}
			else
			{
				bVar0++;
			}
		}
	}
	return bVar1;
}

void func_7(int iParam0, bool bParam1)//Position - 0x11489
{
	if (!__LIB_7__::func_932(iParam0))
	{
		return;
	}
	__LIB_0__::func_186(__LIB_12__::func_946(iParam0), bParam1, -1);
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[iParam0 /*13*/].f_6 = bParam1;
}

int func_8(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x11930
{
	int iVar0;
	int iVar1;
	iVar1 = __LIB_1__::func_794(iParam1);
	if (__LIB_1__::func_793(iParam1))
	{
		switch (iVar1)
		{
			case 1:
				iVar0 = Global_262145.f_17475 /* Tunable: BIKER_WEED_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17480 /* Tunable: BIKER_WEED_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17485 /* Tunable: BIKER_WEED_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 3:
				iVar0 = Global_262145.f_17474 /* Tunable: BIKER_METH_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17479 /* Tunable: BIKER_METH_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17484 /* Tunable: BIKER_METH_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 4:
				iVar0 = Global_262145.f_17473 /* Tunable: BIKER_CRACK_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17478 /* Tunable: BIKER_CRACK_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17483 /* Tunable: BIKER_CRACK_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 0:
				iVar0 = Global_262145.f_17471 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17476 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17481 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 2:
				iVar0 = Global_262145.f_17472 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17477 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17482 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 5:
				iVar0 = Global_262145.f_21581 /* Tunable: GR_MANU_PRODUCT_VALUE */;
				if (__LIB_12__::func_953(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_21583 /* Tunable: GR_MANU_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_12__::func_953(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_21582 /* Tunable: GR_MANU_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			}
	}
	if (bParam3)
	{
		iVar0 = __LIB_12__::func_500(iVar1, iVar0);
	}
	return iVar0;
}

void func_9(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x1A5
{
	int iVar0;
	if (__LIB_12__::func_531(PLAYER::PLAYER_ID(), iParam1))
	{
		iVar0 = __LIB_7__::func_566(PLAYER::PLAYER_ID(), iParam1);
		if (bParam3)
		{
			Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_10 = iParam2 + 1;
		}
		else
		{
			Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_10 = 0;
		}
	}
}

int func_10(int iParam0, int iParam1, int iParam2)//Position - 0x1CBA
{
	if (iParam0 != 0)
	{
		if (iParam1 != iParam2)
		{
			return 0;
		}
		if (__LIB_0__::func_369(5384, -1, 0) == 0)
		{
			return 0;
		}
		return 1;
	}
	return 0;
}

int func_11(int iParam0)//Position - 0x27FB
{
	switch (iParam0)
	{
		case 179:
			if (__LIB_12__::func_922() < 2)
			{
				return 0;
			}
			break;
		case 148:
			if (__LIB_12__::func_929() < 2)
			{
				return 0;
			}
			break;
		default:
			if (__LIB_12__::func_929() < 2)
			{
				return 0;
			}
			break;
	}
	return 1;
}

int func_12(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x4B54
{
	int iVar0;
	iVar0 = __LIB_8__::func_102(iParam0, iParam1, iParam2, iParam4);
	if (!__LIB_8__::func_101(iParam0))
	{
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_11__::func_468(iParam0, __LIB_3__::func_490(iParam3) + 1, iParam3, -1, iParam2));
		}
	}
	if (__LIB_8__::func_100(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

int func_13(int iParam0, int iParam1)//Position - 0x7451
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			return 0;
		case 8:
			if (iParam1 > 4)
			{
				return 4;
			}
			return iParam1;
		case 1:
			iVar0 = __LIB_0__::func_369(5329, -1, 0);
			if (BitTest(iVar0, 7))
			{
				if (iParam1 > 4)
				{
					return 4;
				}
				return iParam1;
			}
			else
			{
				return 0;
			}
			break;
	}
	return 0;
}

int func_14(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x74B1
{
	int iVar0;
	switch (iParam0)
	{
		case 11:
			iVar0 += 9;
			break;
		case 1:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0 += 10;
			break;
		case 2:
			iVar0 += 12;
			break;
		case 4:
			iVar0 += 10;
			break;
		case 8:
			iVar0++;
			break;
		case 5:
			iVar0 += 2;
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					iVar0++;
					break;
				case 1:
					iVar0++;
					break;
				case 2:
					iVar0 = iVar0;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 3:
					iVar0 += 4;
					break;
				case 4:
					iVar0 += 2;
					break;
				case 5:
					iVar0 += 5;
					break;
			}
			break;
		case 3:
			if (iParam2 >= 4)
			{
				iVar0 += 10;
			}
			else if (iParam2 == 3)
			{
				iVar0 += 8;
			}
			else if (iParam2 == 2)
			{
				iVar0 += 7;
			}
			else if (iParam2 == 1)
			{
				iVar0 += 6;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 34:
					iVar0++;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 6:
					iVar0++;
					break;
				case 7:
					iVar0 += 4;
					break;
				case 8:
					iVar0 += 2;
					break;
			}
			break;
		case 0:
			if (iParam2 >= 3)
			{
				iVar0 += 2;
			}
			else
			{
				iVar0++;
			}
			break;
		case 23:
			iVar0 = (iVar0 + iParam2);
			break;
		case 20:
			iVar0 += 5;
			break;
		case 22:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 25:
			iVar0 = (iVar0 + iParam2);
			break;
		case 24:
			iVar0 = (iVar0 + (3 * iParam2));
			break;
		case 16:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 17:
			iVar0 += 5;
			break;
		case 26:
			iVar0++;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_11__::func_368(iParam0))
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_12__::func_923(iParam0, __LIB_3__::func_490(iParam3) + 1, iParam3, -1, iParam2));
			}
		}
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_8__::func_133(iParam0, __LIB_3__::func_490(iParam3) + 1));
		}
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_132(0, iParam1) != -1)
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_11__::func_374(__LIB_3__::func_490(iParam3) + 1, iParam0));
			}
		}
	}
	if (!bParam4)
	{
		if (__LIB_11__::func_373(iParam0))
		{
			iVar0 = (iVar0 + __LIB_8__::func_131(iParam0));
		}
	}
	return iVar0;
}

bool func_15()//Position - 0xB829
{
	return __LIB_0__::func_369(5396, -1, 0) != 0;
}

int func_16(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0xEBD0
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	var uVar3;
	bVar0 = false;
	if (!__LIB_0__::func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__::getGlobal_1574918()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam2 == joaat("CATEGORY_WEAPON_AMMO") || iParam2 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	bVar2 = false;
	iVar1 = 0;
	while (iVar1 < 15)
	{
		if (Global_4534105[iVar1 /*85*/].f_66.f_2 == 0)
		{
			bVar2 = true;
		}
		else if (Global_4534105[iVar1 /*85*/].f_66.f_5 == 1)
		{
			return 0;
		}
		iVar1++;
	}
	if (!bVar2)
	{
		return 0;
	}
	*iParam0 = 0;
	if (!bVar0)
	{
		if (NETSHOPPING::NET_GAMESERVER_BASKET_IS_ACTIVE())
		{
			NETSHOPPING::NET_GAMESERVER_BASKET_END();
		}
	}
	if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_START(&uVar3, iParam2, iParam3, iParam4))
	{
		*iParam0 = __LIB_12__::func_958(uVar3, iParam1, joaat("SERVICE_INVALID"), iParam3, iParam2, 0, 1, iParam4, uParam5, 0, bVar0);
		return 1;
	}
	return 0;
}

int func_17(int iParam0)//Position - 0x10030
{
	int iVar0;
	iVar0 = __LIB_7__::func_933(iParam0);
	return __LIB_0__::func_369(__LIB_12__::func_951(iVar0), -1, 0);
}

int func_18(int iParam0, int iParam1)//Position - 0x10134
{
	return __LIB_0__::func_369(__LIB_12__::func_513(iParam1), iParam0, 0);
}

bool func_19(int iParam0)//Position - 0x10465
{
	return __LIB_12__::func_954(PLAYER::PLAYER_ID(), iParam0);
}

void func_20(int iParam0, bool bParam1)//Position - 0x10F7F
{
	int iVar0;
	iVar0 = __LIB_0__::func_369(3976, -1, 0);
	if (bParam1)
	{
		MISC::SET_BIT(&iVar0, iParam0);
	}
	else
	{
		MISC::CLEAR_BIT(&iVar0, iParam0);
	}
	Global_2725351 = 1;
	__LIB_0__::func_413(3976, iVar0, -1, 1, 0);
}

int func_21(int iParam0)//Position - 0x2B3B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < __LIB_8__::func_214())
	{
		iVar1 = Global_1892703[iParam0 /*599*/].f_10.f_11[iVar0];
		if (iVar1 != __LIB_0__::getMinusOneOrNull())
		{
			if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar1))
			{
				if (__LIB_1__::func_17(iVar1))
				{
					return 7;
				}
				if (__LIB_0__::func_927(iVar1))
				{
					return 15;
				}
				if (__LIB_1__::func_801(iVar1))
				{
					return 16;
				}
			}
		}
		iVar0++;
	}
	return -1;
}

int func_22(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x4D74
{
	int iVar0;
	iVar0 = __LIB_8__::func_110(iParam0, iParam1, iParam2, iParam4);
	if (!__LIB_11__::func_368(iParam0))
	{
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_12__::func_923(iParam0, __LIB_3__::func_490(iParam3) + 1, iParam3, -1, iParam2));
		}
	}
	if (__LIB_8__::func_103(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

int func_23(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7)//Position - 0xD4B6
{
	bool bVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	bool bVar5;
	bVar0 = false;
	if (!__LIB_0__::func_112())
	{
		bVar0 = true;
	}
	iVar1 = 1;
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__::getGlobal_1574918()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam3 == joaat("CATEGORY_WEAPON_AMMO") || iParam3 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	bVar3 = false;
	iVar2 = 0;
	while (iVar2 < 15)
	{
		if (Global_4534105[iVar2 /*85*/].f_66.f_2 == 0)
		{
			bVar3 = true;
		}
		iVar2++;
	}
	if (!bVar3)
	{
		return 0;
	}
	*uParam0 = 15;
	iVar4 = 2147483647;
	if ((bVar0 || iVar1) || NETSHOPPING::NET_GAMESERVER_BEGIN_SERVICE(&iVar4, iParam3, iParam4, iParam2, iParam5, iParam6))
	{
		if ((bVar0 || iVar1) || NETSHOPPING::NET_GAMESERVER_CHECKOUT_START(iVar4))
		{
			*uParam0 = __LIB_12__::func_958(iVar4, iParam1, iParam4, iParam2, iParam3, iParam5, 0, iParam6, iParam7, 1, 1);
			if (iVar1 && !bVar0)
			{
			}
			if (bVar0)
			{
				if (*uParam0 != -1)
				{
					Global_4534105[*uParam0 /*85*/].f_66.f_8 = 1;
					Global_4534105[*uParam0 /*85*/].f_66.f_12 = 1;
				}
			}
			Global_4535592 = 1;
			return 1;
		}
	}
	else
	{
		if (iParam7 & 2 != 0)
		{
			Global_4535606 = 1;
			Global_4535609 = iParam4;
			Global_4535611 = iParam3;
			Global_4535612 = 1;
			Global_4535610 = iParam5;
		}
		if (iParam7 & 8 != 0)
		{
			Global_4535609 = iParam4;
			Global_4535611 = iParam3;
			Global_4535612 = 1;
			Global_4535610 = iParam5;
		}
		bVar5 = false;
		if (bVar5)
		{
			__LIB_0__::func_948(1, iParam4);
			Global_4535606 = 0;
		}
		if (iParam7 & 4 != 0)
		{
			__LIB_1__::func_374(-1, iParam4, iParam6, iParam5, -1);
		}
	}
	return 0;
}

int func_24()//Position - 0x572
{
	return Global_262145.f_24517 /* Tunable: -1004589438 */;
}

int func_25()//Position - 0x1E85
{
	int iVar0;
	int iVar1;
	iVar0 = 225;
	__LIB_1__::func_775(iVar0, &iVar1, 0);
	if (iVar1 >= 0 && Global_1585857[iVar1 /*142*/].f_66 == joaat("mule4"))
	{
		return 1;
	}
	return 0;
}

int func_26()//Position - 0x200C
{
	int iVar0;
	int iVar1;
	iVar0 = 226;
	__LIB_1__::func_775(iVar0, &iVar1, 0);
	if (iVar1 >= 0 && Global_1585857[iVar1 /*142*/].f_66 == joaat("pounder2"))
	{
		return 1;
	}
	return 0;
}

int func_27(int iParam0)//Position - 0x32FB
{
	return (__LIB_12__::func_928(iParam0) / 5);
}

void func_28(char* sParam0, char* sParam1)//Position - 0x37E1
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, true, -1);
}

int func_29(int iParam0)//Position - 0x3A66
{
	switch (iParam0)
	{
		case 1:
			return 5;
		case 2:
			return 4;
		case 3:
			return 3;
		case 4:
			return 1;
		case 5:
			return 0;
		case 6:
			return 2;
		default:
	}
	return -1;
}

void func_30()//Position - 0xC430
{
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Click_Link", "GTAO_SMG_Hangar_Computer_Sounds", true);
}

int func_31(float fParam0)//Position - 0xD4BB
{
	return SYSTEM::ROUND(((SYSTEM::TO_FLOAT(1000) * fParam0) / 100f));
}

float func_32(int iParam0)//Position - 0xD54E
{
	switch (iParam0)
	{
		case 6:
			return (100f * Global_262145.f_24356 /* Tunable: 1474162560 */);
		case 5:
			return (100f * Global_262145.f_24356 /* Tunable: 1474162560 */);
		default:
	}
	return 100f;
}

float func_33(int iParam0)//Position - 0xD58E
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case default:
	}
	return 0f;
}

bool func_34()//Position - 0xD6FC
{
	return Global_1964706 != -1;
}

void func_35(bool bParam0)//Position - 0xF2B6
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 31))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 31);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 31))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 31);
	}
}

bool func_36()//Position - 0x100E2
{
	return __LIB_0__::func_137(22184, -1);
}

bool func_37()//Position - 0x10134
{
	return __LIB_0__::func_137(22103, -1);
}

void func_38(var uParam0)//Position - 0x10144
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_6 = uParam0;
}

int func_39(int iParam0)//Position - 0x10370
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if ((Global_4718592.f_162510 == 0 || Global_4718592.f_162510 == 1) || Global_4718592.f_162510 == 2)
		{
			return 1;
		}
		return 0;
	}
	if ((BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 2) || BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 3)) || BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 4))
	{
		return 1;
	}
	return 0;
}

bool func_40(int iParam0)//Position - 0x10ADB
{
	return (iParam0 > -1 && iParam0 < 32);
}

char* func_41(int iParam0)//Position - 0x11EDE
{
	switch (__LIB_11__::func_362(iParam0))
	{
		case 6554:
			return "MP_STAT_NIGHTCLUB_STYLE";
			break;
		case 6555:
			return "MP_STAT_NIGHTCLUB_LIGHTING";
			break;
		case 6556:
			return "MP_STAT_NIGHTCLUB_DJCHOICE";
			break;
		case 6557:
			return "MP_STAT_NIGHTCLUB_MOD_4";
			break;
		case 6542:
			return "MP_STAT_BUSINESSHUB_MOD_2";
			break;
		case 7215:
			return "MP_STAT_PROP_NIGHTCLUB_NAME_ID";
			break;
		case 6558:
			return "MP_STAT_NIGHTCLUB_MOD_5";
			break;
		case 6559:
			return "MP_STAT_NIGHTCLUB_MOD_6";
			break;
		case 6560:
			return "MP_STAT_NIGHTCLUB_MOD_7";
			break;
	}
	return "unknown!!!";
}

int func_42()//Position - 0x12451
{
	return iLocal_130;
}

bool func_43(float fParam0, float fParam1, float fParam2, int iParam3)//Position - 0x12978
{
	if (iParam3 <= 0)
	{
		return 0;
	}
	return fParam0 < (fParam1 * fParam2);
}

float func_44(int iParam0)//Position - 0x12992
{
	int iVar0;
	iVar0 = iParam0;
	return SYSTEM::TO_FLOAT(iVar0);
}

int func_45(int iParam0)//Position - 0x139CD
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = (iParam0 + iVar0);
		if (!__LIB_0__::func_137(iVar1, -1))
		{
			return 0;
		}
		iVar0++;
	}
	return 1;
}

void func_46(int iParam0)//Position - 0x13A84
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = (iParam0 + iVar0);
		if (!__LIB_0__::func_137(iVar1, -1))
		{
			__LIB_0__::func_186(iVar1, 1, -1);
			return;
		}
		iVar0++;
	}
}

int func_47(int iParam0)//Position - 0x15F36
{
	switch (iParam0)
	{
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
			return 1;
		default:
	}
	return 0;
}

int func_48(int iParam0, int iParam1)//Position - 0x15F7A
{
	int iVar0;
	int iVar1;
	iVar1 = iParam0;
	if (iVar1 != -1)
	{
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (Global_1892703[iVar1 /*599*/].f_10.f_492[iVar0] != 0 && Global_1892703[iVar1 /*599*/].f_10.f_492[iVar0] == iParam1)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_49()//Position - 0x16A85
{
	switch (Global_1578970)
	{
		case 0:
			return 110;
		case 1:
			return 125;
		case 2:
			return 50;
		case 3:
			return 70;
		case 4:
			return 90;
		default:
	}
	return 0;
}

int func_50(int iParam0)//Position - 0x16ED9
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (Global_4718592.f_162510.f_4 == 1 && BitTest(Global_4718592.f_162510.f_14, 2));
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 18);
}

int func_51(int iParam0)//Position - 0x16F2E
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (Global_4718592.f_162510.f_4 == 0 && BitTest(Global_4718592.f_162510.f_14, 2));
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 17);
}

int func_52(int iParam0)//Position - 0x16F83
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 2;
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 16);
}

int func_53(int iParam0)//Position - 0x16FC6
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 1;
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 15);
}

int func_54(int iParam0)//Position - 0x17009
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 0;
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 14);
}

bool func_55()//Position - 0x124C
{
	return __LIB_1__::func_360(__LIB_11__::func_362(7), -1, 0) == 1;
}

bool func_56()//Position - 0x1261
{
	return __LIB_1__::func_360(__LIB_11__::func_362(2), -1, 0) == 1;
}

void func_57(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x16D0
{
	StringCopy(sParam0, __LIB_11__::func_360(iParam1, iParam2), 64);
	StringConCat(sParam0, "_t0_v", 64);
	StringIntConCat(sParam0, iParam3, 64);
}

int func_58(int iParam0)//Position - 0x24A3
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		iVar1 = (iVar1 + __LIB_12__::func_937(iParam0, iVar0));
		iVar0++;
	}
	return iVar1;
}

int func_59(int iParam0, int iParam1)//Position - 0x2EAE
{
	switch (iParam1)
	{
		case 0:
			return __LIB_4__::func_351(iParam0);
		case 1:
			return __LIB_4__::func_350(iParam0);
		case 2:
			return __LIB_4__::func_349(iParam0);
		case 3:
			return __LIB_4__::func_348(iParam0);
		case 4:
			return __LIB_4__::func_280(iParam0);
		default:
	}
	return 0;
}

int func_60(int iParam0, int iParam1)//Position - 0x625D
{
	switch (iParam0)
	{
		case 14:
		case 5:
		case 0:
		case 3:
		case 2:
			return 0;
		case 6:
			if (__LIB_12__::func_540(iParam1) + 1 == 1)
			{
				return 1;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 1;
}

int func_61()//Position - 0x680C
{
	if (__LIB_0__::func_797() == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return __LIB_12__::func_540(__LIB_0__::func_797());
}

int func_62(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x7CDE
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
	}
	if (!bParam5)
	{
		iVar0 = (iVar0 + __LIB_8__::func_119(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_118(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_8__::func_117(__LIB_12__::func_540(iParam2) + 1, iParam0, iParam2));
		}
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_369(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_8__::func_116(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_63(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x7DE8
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0++;
			break;
		case 24:
			iVar0++;
			break;
		case 10:
			switch (iParam1)
			{
				case 30:
					iVar0 += 4;
					break;
				case 31:
				case 32:
					iVar0 += 3;
					break;
			}
			break;
		case 33:
			switch (iParam1)
			{
				case 89:
					iVar0++;
					break;
				case 90:
					iVar0 += 2;
					break;
			}
			break;
		case 36:
			iVar0 += 2;
			break;
		case 37:
			iVar0 += 2;
			break;
		case 38:
			iVar0++;
			break;
		case 8:
			iVar0 += 7;
			break;
		case 13:
			switch (iParam1)
			{
				case 38:
					iVar0 += 3;
					break;
				case 39:
					iVar0 += 3;
					break;
				case 40:
					iVar0 += 4;
					break;
			}
			break;
		case 16:
			iVar0 += 12;
			break;
		case 35:
			iVar0 += 4;
			break;
		case 4:
			iVar0 += 16;
			break;
		case 46:
			iVar0++;
			break;
		case 9:
			iVar0 += 7;
			break;
		case 14:
			iVar0 += 7;
			break;
		case 17:
			iVar0 += 7;
			break;
		case 47:
			iVar0 += 2;
			break;
		case 11:
			iVar0 += 3;
			break;
		case 18:
			iVar0 += 4;
			break;
		case 6:
			iVar0 += 11;
			break;
		case 48:
			iVar0 += 2;
			break;
		case 44:
			iVar0 += 2;
			break;
		case 21:
			iVar0 += 8;
			break;
		case 22:
			iVar0 += 3;
			break;
		case 7:
			iVar0 += 7;
			break;
		case 15:
			iVar0++;
			break;
		case 2:
			iVar0++;
			break;
		case 34:
			iVar0 += 5;
			break;
		case 27:
			iVar0 += 9;
			break;
		case 26:
			iVar0 += 3;
			break;
		case 31:
			iVar0++;
			break;
		case 3:
			iVar0 += 21;
			break;
		case 12:
			iVar0 += 20;
			break;
		case 41:
			iVar0 += 11;
			break;
		case 49:
			iVar0 += 3;
			break;
		case 29:
			iVar0++;
			break;
		case 5:
			iVar0 += 3;
			break;
		case 50:
			iVar0 += 4;
			break;
		case 23:
			iVar0 += 4;
			break;
		case 20:
			iVar0 += 3;
			break;
		case 32:
			iVar0 = iVar0;
			break;
		case 51:
			iVar0 += 4;
			break;
		case 52:
			iVar0 += 6;
			break;
		case 39:
			iVar0 += 2;
			break;
		case 40:
			iVar0++;
			break;
		case 25:
			iVar0 += 3;
			break;
	}
	if (!bParam5)
	{
		iVar0 = (iVar0 + __LIB_8__::func_122(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_121(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_12__::func_919(__LIB_12__::func_540(iParam2) + 1, iParam0, iParam2));
		}
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_370(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_8__::func_120(iParam0, iParam1));
		}
	}
	return iVar0;
}

float func_64()//Position - 0xD4FE
{
	int iVar0;
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (IntToFloat(Global_4718592.f_162510.f_5) + 0f);
	}
	iVar0 = __LIB_1__::func_360(7213, -1, 0);
	return __LIB_11__::func_414(iVar0);
}

int func_65(int iParam0)//Position - 0xD70A
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull() || !__LIB_7__::func_920(iParam0))
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_2, 1);
}

void func_66(int iParam0, int iParam1, bool bParam2)//Position - 0x147DD
{
	if (!__LIB_3__::func_558())
	{
		PAD::SET_INPUT_EXCLUSIVE(iParam0, iParam1);
		PAD::ENABLE_CONTROL_ACTION(iParam0, iParam1, bParam2);
	}
}

int func_67(int iParam0)//Position - 0x173B4
{
	int iVar0;
	iVar0 = -1;
	if (__LIB_8__::func_393(iParam0, 4))
	{
		iVar0 = 4;
	}
	else if (__LIB_8__::func_393(iParam0, 3))
	{
		iVar0 = 3;
	}
	else if (__LIB_8__::func_393(iParam0, 6))
	{
		iVar0 = 6;
	}
	else if (__LIB_8__::func_393(iParam0, 1))
	{
		iVar0 = 1;
	}
	else if (__LIB_8__::func_393(iParam0, 0))
	{
		iVar0 = 0;
	}
	else if (__LIB_8__::func_393(iParam0, 7))
	{
		iVar0 = 7;
	}
	else if (__LIB_8__::func_393(iParam0, 2))
	{
		iVar0 = 2;
	}
	else if (__LIB_8__::func_393(iParam0, 5))
	{
		iVar0 = 5;
	}
	else if (__LIB_8__::func_393(iParam0, 8))
	{
		iVar0 = 8;
	}
	return iVar0;
}

int func_68(int iParam0, int iParam1)//Position - 0x18F22D
{
	return (__LIB_8__::func_164(iParam0) * iParam1);
}

int func_69(int iParam0)//Position - 0xF88
{
	var uVar0;
	if (iParam0 == -1)
	{
		return 0;
	}
	uVar0 = __LIB_0__::func_253(22032, -1);
	return BitTest(uVar0, iParam0);
}

bool func_70()//Position - 0x112C
{
	return __LIB_1__::func_360(__LIB_11__::func_362(8), -1, 0) == 1;
}

int func_71(int iParam0)//Position - 0x219C
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = 0;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		iVar2 = (5 + iVar0);
		iVar3 = iVar2;
		if (__LIB_11__::func_397(iParam0, iVar3))
		{
			iVar1++;
		}
	else
	{
		}
		else
		{
			iVar0++;
		}
	}
	return iVar1;
}

int func_72(int iParam0)//Position - 0x386C
{
	int iVar0;
	if (!__LIB_8__::func_150(iParam0))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (__LIB_12__::func_983(iVar0, iParam0))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_73(int iParam0)//Position - 0x4853
{
	switch (iParam0)
	{
		case 179:
			if (__LIB_12__::func_922() < 2)
			{
				return 0;
			}
			break;
		case 148:
			if (__LIB_7__::func_911() < 2)
			{
				return 0;
			}
			break;
		default:
			if (__LIB_7__::func_911() < 2)
			{
				return 0;
			}
			break;
	}
	return 1;
}

int func_74(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x5E00
{
	int iVar0;
	iVar0 = __LIB_8__::func_93(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_12__::func_918(iParam0, iParam2));
	return iVar0;
}

int func_75(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x6B28
{
	int iVar0;
	iVar0 = __LIB_8__::func_102(iParam0, iParam1, iParam2, iParam4);
	if (!__LIB_8__::func_101(iParam0))
	{
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_11__::func_468(iParam0, __LIB_12__::func_540(iParam3) + 1, iParam3, -1, iParam2));
		}
	}
	if (__LIB_8__::func_100(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

int func_76(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x9487
{
	int iVar0;
	switch (iParam0)
	{
		case 11:
			iVar0 += 9;
			break;
		case 1:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0 += 10;
			break;
		case 2:
			iVar0 += 12;
			break;
		case 4:
			iVar0 += 10;
			break;
		case 8:
			iVar0++;
			break;
		case 5:
			iVar0 += 2;
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					iVar0++;
					break;
				case 1:
					iVar0++;
					break;
				case 2:
					iVar0 = iVar0;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 3:
					iVar0 += 4;
					break;
				case 4:
					iVar0 += 2;
					break;
				case 5:
					iVar0 += 5;
					break;
			}
			break;
		case 3:
			if (iParam2 >= 4)
			{
				iVar0 += 10;
			}
			else if (iParam2 == 3)
			{
				iVar0 += 8;
			}
			else if (iParam2 == 2)
			{
				iVar0 += 7;
			}
			else if (iParam2 == 1)
			{
				iVar0 += 6;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 34:
					iVar0++;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 6:
					iVar0++;
					break;
				case 7:
					iVar0 += 4;
					break;
				case 8:
					iVar0 += 2;
					break;
			}
			break;
		case 0:
			if (iParam2 >= 3)
			{
				iVar0 += 2;
			}
			else
			{
				iVar0++;
			}
			break;
		case 23:
			iVar0 = (iVar0 + iParam2);
			break;
		case 20:
			iVar0 += 5;
			break;
		case 22:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 25:
			iVar0 = (iVar0 + iParam2);
			break;
		case 24:
			iVar0 = (iVar0 + (3 * iParam2));
			break;
		case 16:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 17:
			iVar0 += 5;
			break;
		case 26:
			iVar0++;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_11__::func_368(iParam0))
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_12__::func_923(iParam0, __LIB_12__::func_540(iParam3) + 1, iParam3, -1, iParam2));
			}
		}
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_8__::func_133(iParam0, __LIB_12__::func_540(iParam3) + 1));
		}
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_132(0, iParam1) != -1)
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_11__::func_374(__LIB_12__::func_540(iParam3) + 1, iParam0));
			}
		}
	}
	if (!bParam4)
	{
		if (__LIB_11__::func_373(iParam0))
		{
			iVar0 = (iVar0 + __LIB_8__::func_131(iParam0));
		}
	}
	return iVar0;
}

float func_77(int iParam0)//Position - 0xD5AA
{
	switch (iParam0)
	{
		case 1:
			return (100f * Global_262145.f_24070 /* Tunable: NIGHTCLUBPOPDECAY */);
		case 2:
			return (100f * Global_262145.f_24071 /* Tunable: INIGHTCLUBPOPDECAYSTAFFUPGRADE */);
		case 3:
			if (__LIB_5__::func_185(PLAYER::PLAYER_ID()) == 299)
			{
				return (100f * Global_262145.f_32580 /* Tunable: 181893059 */);
			}
			return (100f * Global_262145.f_24072 /* Tunable: NIGHTCLUBPOPGAINPERMISSION */);
		case 4:
			return (100f * Global_262145.f_24366 /* Tunable: -666817709 */);
		case 8:
			return (100f * Global_262145.f_32548 /* Tunable: NC_TROUBLEMAKER_POPULARITY_REWARD */);
		case 9:
			return (100f * Global_262145.f_32755 /* Tunable: 396823465 */);
		case 5:
			return (100f * Global_262145.f_24358 /* Tunable: 1403959568 */);
		case 6:
			return (100f * Global_262145.f_24357 /* Tunable: -22448548 */);
		case 7:
			return (100f * Global_262145.f_24367 /* Tunable: 1957287017 */);
		default:
	}
	return 0f;
}

void func_78(int iParam0, bool bParam1)//Position - 0xFF71
{
	int iVar0;
	int iVar1;
	if (!__LIB_4__::func_340(iParam0))
	{
		return;
	}
	if (bParam1)
	{
		__LIB_12__::func_570(iParam0);
	}
	iVar1 = __LIB_1__::func_360(iParam0, -1, 0);
	iVar0 = __LIB_12__::func_667(iParam0, iVar1);
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_3), iVar0);
}

int func_79(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x6D48
{
	int iVar0;
	iVar0 = __LIB_8__::func_110(iParam0, iParam1, iParam2, iParam4);
	if (!__LIB_11__::func_368(iParam0))
	{
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_12__::func_923(iParam0, __LIB_12__::func_540(iParam3) + 1, iParam3, -1, iParam2));
		}
	}
	if (__LIB_8__::func_103(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

void func_80(int iParam0)//Position - 0x13D3D0
{
	int iVar0;
	int iVar1;
	bool bVar2;
	if (__LIB_4__::func_543(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !__LIB_5__::func_195(PLAYER::PLAYER_ID()))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
				if (__LIB_0__::func_695(iVar0))
				{
					iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
					if (!PED::IS_PED_INJURED(iVar1))
					{
						if (PED::IS_PED_A_PLAYER(iVar1))
						{
							bVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
							if (bVar2 != PLAYER::PLAYER_ID() && __LIB_1__::func_693(bVar2, 1, 1))
							{
								if ((__LIB_4__::func_529(bVar2) && __LIB_0__::func_172(__LIB_5__::func_196(bVar2)) == 8) || __LIB_4__::func_529(bVar2))
								{
									if (__LIB_12__::func_927(iParam0))
									{
										if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
										{
											TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
										}
										if (__LIB_4__::func_544(PLAYER::PLAYER_ID()))
										{
											if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
											{
												CAM::DO_SCREEN_FADE_IN(500);
											}
											__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
											__LIB_4__::func_538(0);
											__LIB_4__::func_540(0);
										}
									}
									else if (__LIB_5__::func_337())
									{
										if (CAM::IS_SCREEN_FADED_IN())
										{
											__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 0, 0);
											CAM::DO_SCREEN_FADE_OUT(500);
											__LIB_4__::func_538(1);
										}
										if (CAM::IS_SCREEN_FADED_OUT())
										{
											if (__LIB_2__::func_753(PLAYER::PLAYER_ID()))
											{
												__LIB_4__::func_527(1);
												__LIB_4__::func_542(1);
												__LIB_4__::func_526(1);
												__LIB_4__::func_541(1);
											}
											if (VEHICLE::IS_TURRET_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), __LIB_0__::func_336(PLAYER::PLAYER_PED_ID(), 0)) || (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("hakuchou2")) && __LIB_0__::func_336(PLAYER::PLAYER_PED_ID(), 0) != -1))
											{
												TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
											}
											PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 184, true);
											__LIB_4__::func_537(1);
											__LIB_4__::func_538(0);
										}
									}
									else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
									{
										if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("halftrack")))
										{
											TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 16);
										}
										else
										{
											TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
										}
										if (BitTest(Global_1946250.f_1, 17))
										{
											MISC::CLEAR_BIT(&(Global_1946250.f_1), 17);
										}
										__LIB_4__::func_540(0);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

void func_81(var uParam0, int iParam1, var uParam2, var uParam3)//Position - 0x139D26
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	iVar0 = __LIB_10__::func_12();
	if ((__LIB_12__::func_283(iParam1) && !__LIB_2__::func_731(PLAYER::PLAYER_ID())) && PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
	{
		__LIB_9__::func_284(uParam0, 1);
		__LIB_4__::func_525(0);
	}
	if (__LIB_5__::func_623(iVar0))
	{
		if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && __LIB_10__::func_20(uParam0, PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), iVar0, 1)) && !__LIB_12__::func_283(iParam1))
		{
		}
		else if (!__LIB_3__::func_171(PLAYER::PLAYER_ID()) && PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
		{
			__LIB_9__::func_284(uParam0, 1);
			__LIB_4__::func_525(0);
		}
		if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
		{
			if (PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
			{
				PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(PLAYER::PLAYER_ID()), false);
				if (ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("deluxo") || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("oppressor2"))
				{
					VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(iVar1, 0f);
				}
			}
		}
	}
	if ((__LIB_4__::func_544(PLAYER::PLAYER_ID()) || __LIB_4__::func_543(PLAYER::PLAYER_ID())) && __LIB_12__::func_927(iParam1))
	{
		if (!__LIB_4__::func_953())
		{
			if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
			{
				TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
			}
			__LIB_4__::func_542(0);
			__LIB_4__::func_541(0);
			__LIB_4__::func_527(0);
			__LIB_4__::func_540(0);
			CAM::DO_SCREEN_FADE_IN(500);
			if (__LIB_3__::func_779())
			{
				__LIB_4__::func_539(1);
			}
			__LIB_4__::func_538(0);
			__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
			__LIB_4__::func_537(0);
			if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
			{
				NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
			}
			__LIB_4__::func_538(0);
		}
	}
	if (__LIB_0__::func_833())
	{
		if (Global_1946250.f_523)
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 23 /*INPUT_ENTER*/, true);
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (Global_1853190 != __LIB_0__::getMinusOneOrNull())
		{
			if (PLAYER::PLAYER_ID() == Global_1853190)
			{
				if (__LIB_1__::func_645(PLAYER::PLAYER_ID()))
				{
					if (((__LIB_4__::func_502(PLAYER::PLAYER_ID()) || __LIB_4__::func_452()) || __LIB_4__::func_451()) || Global_1957730)
					{
						__LIB_1__::func_33(1);
					}
				}
			}
		}
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_122(&(uParam0->f_22.f_94));
			}
		}
		if (!__LIB_2__::func_731(PLAYER::PLAYER_ID()))
		{
			if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
			{
				if (!__LIB_1__::func_645(__LIB_6__::func_907(iVar0, 1, 0)))
				{
					__LIB_12__::func_75(uParam0, iVar0);
				}
			}
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (__LIB_0__::func_336(PLAYER::PLAYER_PED_ID(), 0) != -1 && __LIB_4__::func_543(PLAYER::PLAYER_ID()))
		{
			iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar2))
			{
				bVar3 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar2);
				if (__LIB_1__::func_693(bVar3, 1, 1))
				{
					if (__LIB_4__::func_529(bVar3))
					{
						if (__LIB_12__::func_283(iParam1) && !__LIB_2__::func_731(PLAYER::PLAYER_ID()))
						{
							TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
							__LIB_4__::func_537(0);
							__LIB_4__::func_538(0);
							__LIB_4__::func_539(1);
						}
					}
				}
			}
		}
	}
	if (__LIB_4__::func_529(PLAYER::PLAYER_ID()))
	{
		PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 199 /*INPUT_FRONTEND_PAUSE*/, true);
		HUD::DISABLE_FRONTEND_THIS_FRAME();
	}
	__LIB_5__::func_996();
	if (!__LIB_0__::func_893() || __LIB_0__::func_983())
	{
		__LIB_4__::func_491(0);
	}
}

int func_82()//Position - 0x124E
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (Global_78319)
	{
		return 0;
	}
	iVar2 = 0;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4)
	{
		iVar2 = 1;
	}
	if (Global_4541507 || iVar2)
	{
		return 1;
	}
	return 1;
}

int func_83()//Position - 0x1295
{
	if (((Global_20266.f_1 == 1 || Global_20266.f_1 == 3) || Global_20266.f_1 == 0) || Global_20210 == 1)
	{
		Global_20253 = 1;
		return 1;
	}
	return 0;
}

void func_84(float fParam0, float fParam1, char* sParam2, int iParam3)//Position - 0xCF62
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam2);
	HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam0, fParam1, iParam3);
}

int func_85(int iParam0, int iParam1, int iParam2)//Position - 0xEC59
{
	if (PAD::IS_CONTROL_JUST_PRESSED(iParam0, iParam1) || (iParam2 == 1 && PAD::IS_DISABLED_CONTROL_JUST_PRESSED(iParam0, iParam1)))
	{
		if (MISC::IS_PC_VERSION())
		{
			if (MISC::UPDATE_ONSCREEN_KEYBOARD() == 0 || (NETWORK::NETWORK_TEXT_CHAT_IS_TYPING() && PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/)))
			{
				return 0;
			}
		}
		if (HUD::IS_PAUSE_MENU_ACTIVE() || HUD::IS_WARNING_MESSAGE_ACTIVE())
		{
			return 0;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

bool func_86()//Position - 0xECFE
{
	return BitTest(Global_1958711, 18);
}

bool func_87()//Position - 0xF3AA
{
	return BitTest(Global_1958711, 17);
}

int func_88()//Position - 0xFD72
{
	int iVar0;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (VEHICLE::IS_VEHICLE_SEAT_FREE(iVar0, -1, false))
			{
				return 1;
			}
			else if (!VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) == PLAYER::PLAYER_PED_ID())
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_89()//Position - 0x1B9
{
	if (Global_8742 == 1 || Global_20266.f_1 < 7)
	{
		Global_20253 = 1;
		return 1;
	}
	return 0;
}

void func_90()//Position - 0x520
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Back", &Global_20255, true);
	}
}

void func_91(int iParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, char* sParam5, char* sParam6)//Position - 0x400
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, sParam1);
	__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam2);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam3))
	{
		__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam3);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
	{
		__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam4);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
	{
		__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam5);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
	{
		__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam6);
	}
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_92()//Position - 0x7FD
{
	if (__LIB_13__::func_82())
	{
		MOBILE::CELL_SET_INPUT(5);
	}
}

bool func_93()//Position - 0x2F18
{
	return Global_60335;
}

int func_94()//Position - 0x72E3
{
	if (Global_43052 == 15)
	{
		return 0;
	}
	return 1;
}

int func_95(int iParam0, int iParam1)//Position - 0x7820
{
	int iVar0;
	if ((iParam0 != 0 && iParam0 != 1) && iParam0 != 2)
	{
		if ((iParam1 == 0 || iParam1 == 1) || iParam1 == 2)
		{
			iVar0 = iParam1;
			iParam1 = iParam0;
			iParam0 = iVar0;
		}
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 10;
					break;
				case 1:
					return 0;
					break;
				case 2:
					return 2;
					break;
				case 3:
					return 10;
					break;
				case 4:
					return 5;
					break;
				case 5:
					return 8;
					break;
				default:
					return 10;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 10;
					break;
				case 2:
					return 1;
					break;
				case 3:
					return 3;
					break;
				case 4:
					return 6;
					break;
				case 5:
					return 10;
					break;
				default:
					return 10;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return 2;
					break;
				case 1:
					return 1;
					break;
				case 2:
					return 10;
					break;
				case 3:
					return 4;
					break;
				case 4:
					return 7;
					break;
				case 5:
					return 10;
					break;
				default:
					return 10;
					break;
			}
			break;
	}
	return 10;
}

var func_96(int iParam0)//Position - 0x7A02
{
	return Global_1998[iParam0 /*29*/].f_11;
}

void func_97()//Position - 0x956C
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		if (Global_20266 == 0)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 1)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 2)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 3)
		{
			switch (Global_4541505)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				default:
					break;
				}
			}
	}
}

int func_98()//Position - 0x9E3E
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		if (Global_20266.f_1 == 10 || Global_20266.f_1 == 9)
		{
			if (Global_20209 == 0)
			{
				if (Global_7451 != 128)
				{
					if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						if (Global_21605 != 2)
						{
						}
					}
				}
			}
		}
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			return 0;
		}
		if (PED::IS_PED_IN_COVER(PLAYER::PLAYER_PED_ID(), false))
		{
			return 0;
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!CAM::IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING())
			{
				if (ENTITY::IS_ENTITY_IN_WATER(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
				{
					return 0;
				}
			}
		}
		if (((PED::IS_PED_SWIMMING(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || (PED::IS_PED_HANGING_ON_TO_VEHICLE(PLAYER::PLAYER_PED_ID()) && !(BitTest(Global_4718592.f_37, 17) && (NETWORK::NETWORK_IS_ACTIVITY_SESSION() || Global_1922883))))
		{
			return 0;
		}
		if (Global_112434)
		{
			return 0;
		}
	}
	if (Global_78319)
	{
		return 0;
	}
	iVar2 = 0;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4 && (iVar0 == 0 || CAM::IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING()))
	{
		iVar2 = 1;
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
				if ((((((((VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iVar3)) || VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(iVar3))) || VEHICLE::IS_THIS_MODEL_A_QUADBIKE(ENTITY::GET_ENTITY_MODEL(iVar3))) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("seashark")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("seashark2")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rhino")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("submersible")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("submersible2")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("toro"))
				{
					iVar2 = 0;
				}
			}
		}
	}
	if (Global_4541507 || iVar2 == 1)
	{
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("apptrackify")) > 0 || Global_113386.f_14051.f_89)
		{
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("michael2")) > 0)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

void func_99(int iParam0)//Position - 0xA5AF
{
	StringCopy(&(Global_113386.f_20410[iParam0 /*16*/]), "", 16);
	StringCopy(&(Global_113386.f_20410[iParam0 /*16*/].f_4), "", 16);
	Global_113386.f_20410[iParam0 /*16*/].f_8 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_9 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_11 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_10 = -1;
	Global_113386.f_20410[iParam0 /*16*/].f_12 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_13 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_14 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_15 = 0;
}

void func_100(int iParam0, int iParam1)//Position - 0xA649
{
	Global_113386.f_20410[iParam0 /*16*/] = { Global_113386.f_20410[iParam1 /*16*/] };
	Global_113386.f_20410[iParam0 /*16*/].f_4 = { Global_113386.f_20410[iParam1 /*16*/].f_4 };
	Global_113386.f_20410[iParam0 /*16*/].f_8 = Global_113386.f_20410[iParam1 /*16*/].f_8;
	Global_113386.f_20410[iParam0 /*16*/].f_10 = Global_113386.f_20410[iParam1 /*16*/].f_10;
	Global_113386.f_20410[iParam0 /*16*/].f_9 = Global_113386.f_20410[iParam1 /*16*/].f_9;
	Global_113386.f_20410[iParam0 /*16*/].f_11 = Global_113386.f_20410[iParam1 /*16*/].f_11;
	Global_113386.f_20410[iParam0 /*16*/].f_12 = Global_113386.f_20410[iParam1 /*16*/].f_12;
	Global_113386.f_20410[iParam0 /*16*/].f_13 = Global_113386.f_20410[iParam1 /*16*/].f_13;
	Global_113386.f_20410[iParam0 /*16*/].f_14 = Global_113386.f_20410[iParam1 /*16*/].f_14;
	Global_113386.f_20410[iParam0 /*16*/].f_15 = Global_113386.f_20410[iParam1 /*16*/].f_15;
}

int func_101(char* sParam0)//Position - 0xA987
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_20410.f_145)
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam0, &(Global_113386.f_20410[iVar0 /*16*/])))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_102()//Position - 0xAAEE
{
	return Global_78581;
}

int func_103(char* sParam0)//Position - 0xBA35
{
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "0"))
	{
		return 0;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "1"))
	{
		return 1;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "2"))
	{
		return 2;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "3"))
	{
		return 3;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "4"))
	{
		return 4;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "5"))
	{
		return 5;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "6"))
	{
		return 6;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "7"))
	{
		return 7;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "8"))
	{
		return 8;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "9"))
	{
		return 9;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "A"))
	{
		return 10;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "B"))
	{
		return 11;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "C"))
	{
		return 12;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "D"))
	{
		return 13;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "E"))
	{
		return 14;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "F"))
	{
		return 15;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "G"))
	{
		return 16;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "H"))
	{
		return 17;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "I"))
	{
		return 18;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "J"))
	{
		return 19;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "K"))
	{
		return 20;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "L"))
	{
		return 21;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "M"))
	{
		return 22;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "N"))
	{
		return 23;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "O"))
	{
		return 24;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "P"))
	{
		return 25;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Q"))
	{
		return 26;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "R"))
	{
		return 27;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "S"))
	{
		return 28;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "T"))
	{
		return 29;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "U"))
	{
		return 30;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "V"))
	{
		return 31;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "W"))
	{
		return 32;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "X"))
	{
		return 33;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Y"))
	{
		return 34;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Z"))
	{
		return 35;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "z"))
	{
		return -1;
	}
	return -1;
}

void func_104()//Position - 0xC15B
{
	if (__LIB_13__::func_82())
	{
		if (Global_20469 == 0)
		{
			MOBILE::CELL_SET_INPUT(2);
		}
		else
		{
			MOBILE::CELL_SET_INPUT(1);
		}
	}
}

int func_105(int iParam0)//Position - 0xD3BA
{
	int iVar0;
	int iVar1;
	if (NETWORK::NETWORK_CLAN_SERVICE_IS_VALID() && NETWORK::NETWORK_HAS_SOCIAL_CLUB_ACCOUNT())
	{
		iVar0 = NETWORK::NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT();
		if (iVar0 > 0)
		{
			iVar1 = 0;
			while (iVar1 < iVar0)
			{
				NETWORK::NETWORK_CLAN_GET_MEMBERSHIP_DESC(&Global_2787435, iVar1);
				if (iParam0 == Global_2787435)
				{
					return 1;
				}
				iVar1++;
			}
		}
	}
	return 0;
}

void func_106(int iParam0, int iParam1, var uParam2, bool bParam3)//Position - 0x7DB4
{
	int iVar0;
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__::func_153(uParam2)];
	if (iVar0 != 0)
	{
		STATS::STAT_SET_INT(iVar0, iParam1, bParam3);
	}
	switch (iParam0)
	{
		case 788:
			Global_1659687[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 789:
			Global_1659693[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 790:
			Global_1659699[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 791:
			Global_1659705[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8729:
			Global_1659711[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 778:
			Global_1659657[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 779:
			Global_1659663[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 780:
			Global_1659669[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 781:
			Global_1659675[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8731:
			Global_1659681[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 768:
			Global_1659627[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 769:
			Global_1659633[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 770:
			Global_1659639[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 771:
			Global_1659645[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8733:
			Global_1659651[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 758:
			Global_1659717[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 759:
			Global_1659723[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 760:
			Global_1659729[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 761:
			Global_1659735[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8735:
			Global_1659741[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 1304:
			Global_1659747[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 7236:
			Global_1659753[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 640:
			Global_1659759[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 1279:
			Global_1659765[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 1878:
			Global_2869777[0 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 2269:
			Global_2869777[1 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 2932:
			Global_2869777[2 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3061:
			Global_2869777[3 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 11391:
			Global_2869950[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 765:
			Global_1659771[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 766:
			Global_1659777[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 767:
			Global_1659783[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8734:
			Global_1659789[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 9538:
			Global_1659795[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 1237:
			Global_1659801[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3056:
			Global_2869862[0 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3057:
			Global_2869862[1 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3058:
			Global_2869862[2 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3059:
			Global_2869862[3 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3060:
			Global_2869862[4 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3639:
			Global_2869953[0 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3640:
			Global_2869953[1 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3641:
			Global_2869953[2 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3642:
			Global_2869953[3 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3643:
			Global_2869953[4 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3644:
			Global_2869969[0 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3645:
			Global_2869969[1 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3646:
			Global_2869969[2 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3647:
			Global_2869969[3 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3648:
			Global_2869969[4 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3224:
			Global_2869862[5 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3230:
			Global_2869777[4 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3666:
			Global_2869985[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3667:
			Global_2869994[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3668:
			Global_2869988[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3669:
			Global_2869997[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3670:
			Global_2869991[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3671:
			Global_2870000[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3692:
			Global_2870003[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3232:
			Global_2869862[6 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3233:
			Global_2869777[5 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3237:
			Global_2869862[7 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 3235:
			Global_2869777[6 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4022:
			Global_2869862[8 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4023:
			Global_2869777[7 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4025:
			Global_2869862[9 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4026:
			Global_2869777[8 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4028:
			Global_2869862[10 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4029:
			Global_2869777[9 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4031:
			Global_2869862[11 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 4032:
			Global_2869777[10 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6112:
			Global_2869862[12 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6113:
			Global_2869777[11 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6170:
			Global_2869862[13 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6171:
			Global_2869777[12 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6548:
			Global_2869862[14 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6549:
			Global_2869777[13 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6561:
			Global_2869862[15 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6562:
			Global_2869777[14 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6564:
			Global_2869862[16 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6565:
			Global_2869777[15 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6567:
			Global_2869862[17 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 6568:
			Global_2869777[16 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 7286:
			Global_2869777[17 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 7288:
			Global_2869777[18 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 7290:
			Global_2869777[19 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8013:
			Global_2869777[20 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8285:
			Global_2870006[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8286:
			Global_2870009[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8287:
			Global_2870012[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8288:
			Global_2870015[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8289:
			Global_2870018[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8290:
			Global_2870021[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8291:
			Global_2870024[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8292:
			Global_2870027[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8293:
			Global_2870030[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8294:
			Global_2870033[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8295:
			Global_2870036[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8296:
			Global_2870039[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8297:
			Global_2870042[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8905:
			Global_2870045[__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8537:
			Global_2869777[21 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8982:
			Global_2869862[23 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8980:
			Global_2869777[22 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8985:
			Global_2869862[24 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 8983:
			Global_2869777[23 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 9624:
			Global_2869777[24 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 9913:
			Global_2869777[25 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 10443:
			Global_2869862[27 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 10441:
			Global_2869777[26 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 10446:
			Global_2869862[28 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		case 10444:
			Global_2869777[27 /*3*/][__LIB_0__::func_153(uParam2)] = iParam1;
			break;
		default:
			break;
	}
}

void func_107(int iParam0, int iParam1, var uParam2, bool bParam3, bool bParam4)//Position - 0x8AF1
{
	int iVar0;
	if (bParam4)
	{
	}
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__::func_153(uParam2)];
	if (iVar0 != 0)
	{
		STATS::STAT_SET_INT(iVar0, iParam1, bParam3);
	}
}

void func_108()//Position - 0x953C
{
	if (Global_78319)
	{
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 9f, -1f, -1f, 0, 0, 0, 0, 0);
		MISC::CLEAR_BIT(&Global_8136, 17);
	}
}

void func_109()//Position - 0x97E3
{
	if (Global_78319)
	{
		if (__LIB_0__::func_114() == 0)
		{
			return;
		}
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 9f, -1f, -1f, 0, 0, 0, 0, 0);
		MISC::SET_BIT(&Global_8136, 17);
	}
}

void func_110()//Position - 0xC054
{
	if (__LIB_13__::func_82())
	{
		if (Global_20469 == 0)
		{
			MOBILE::CELL_SET_INPUT(1);
		}
		else
		{
			MOBILE::CELL_SET_INPUT(2);
		}
	}
}

void func_111()//Position - 0xC4FB
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Accept", &Global_20255, true);
		__LIB_13__::func_92();
	}
}

int func_112()//Position - 0x125A9
{
	if (Global_1574612)
	{
		return 1;
	}
	if (__LIB_0__::func_192())
	{
		return 1;
	}
	if (__LIB_0__::func_191())
	{
		return 1;
	}
	return __LIB_0__::func_351(120, -1);
}

int func_113(var uParam0, int* iParam1, var uParam2, bool bParam3, bool bParam4, char* sParam5, bool bParam6, int iParam7, bool bParam8, bool bParam9, char* sParam10, bool bParam11, bool bParam12, bool bParam13, bool bParam14, bool bParam15, int iParam16, bool bParam17, int iParam18, bool bParam19, bool bParam20, bool bParam21, bool bParam22, bool bParam23, bool bParam24, bool bParam25, bool bParam26, bool bParam27, bool bParam28, bool bParam29, int iParam30, int iParam31, bool bParam32, char* sParam33, bool bParam34)//Position - 0xF0BC
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char* sVar4;
	char* sVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	struct<16> Var10;
	int iVar11;
	int iVar12;
	int iVar13;
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	switch (*uParam2)
	{
		case 0:
			if (bParam3)
			{
				if (iParam7 == 6)
				{
					iVar6 = 121;
				}
				else if (iParam7 == 7)
				{
					iVar6 = 63;
				}
				else if (__LIB_12__::func_936())
				{
					iVar6 = 21;
				}
				else
				{
					iVar6 = 51;
				}
				if (*iParam1 == 0)
				{
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						if (__LIB_12__::func_936())
						{
							sVar4 = "FMMC_KEY_TIS2SJ";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP2";
						}
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_KEY_TIP7";
						iVar6 = 21;
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_KEY_TIP5";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_KEY_TIP6";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_KEY_TIP10" /* GXT: Enter Synopsis (MAX 125 characters): */;
					}
					else if (iParam7 == 8)
					{
						sVar4 = "FMMC_KEY_TXT7";
					}
					else if (iParam7 == 9)
					{
						sVar4 = "FMMC_KEY_TXT8";
					}
					else if (iParam7 == 10)
					{
						sVar4 = "FMMC_KEY_VSS";
					}
				}
				else if (__LIB_12__::func_936())
				{
					sVar4 = "FMMC_KEY_TIS2FJ";
				}
				else
				{
					sVar4 = "FMMC_KEY_TIP2F";
				}
				if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
				{
					sVar5 = sVar4;
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						sVar4 = "FMMC_SS_RL_35";
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_SS_RL_32";
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_SS_RL_33";
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_SS_RL_34";
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_SS_RL_49";
					}
					else if (iParam7 == 7)
					{
						sVar4 = "FMMC_SS_RL_57";
					}
				}
				if (MISC::IS_PC_VERSION())
				{
					iVar7 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar7 = 0;
				}
				else
				{
					iVar7 = 1;
				}
				if (bParam24)
				{
					if (bParam26)
					{
						sVar4 = "LINE_NUMBER";
					}
					else
					{
						sVar4 = "WEB_SEARCH" /* GXT: Search... */;
					}
				}
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, "", "", "", "", iVar6);
				}
				else
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, sParam5, sParam10, "", "", iVar6);
				}
			}
			else
			{
				if (MISC::IS_PC_VERSION())
				{
					iVar8 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar8 = 0;
				}
				else
				{
					iVar8 = 1;
				}
				if (bParam4)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 10)
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 25;
					}
					if (__LIB_0__::func_261())
					{
						iVar9 = 64;
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_116531)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_116531), "", "", "", iVar9);
					}
				}
				else if (bParam32)
				{
					sVar4 = "CST_KEY_TEXT";
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (bParam25)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_BLIMP";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (iParam30 != -1)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "DMC_HTM_EH";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					Var10 = { Global_4718592.f_169405[iParam30 /*16*/] };
					if (iParam31 > -1)
					{
						Var10 = { Global_4718592.f_169486[iParam30 /*65*/][iParam31 /*16*/] };
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&Var10))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &Var10, "", "", "", iVar9);
					}
				}
				else if (bParam27)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					else
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam34)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDM_T";
					}
					else
					{
						sVar4 = "FMMC_CDM_F1";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam13)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam9)
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_TIPTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPTF";
						}
					}
					else
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_ALTT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_ALTTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_ALTTF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M36";
					}
					iVar11 = 0;
					while (iVar11 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116682[iVar11 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116682[iVar11 /*16*/]), "", 64);
						}
						iVar11++;
					}
					MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116682[0 /*16*/]), &(Global_4718592.f_116682[1 /*16*/]), &(Global_4718592.f_116682[2 /*16*/]), &(Global_4718592.f_116682[3 /*16*/]), &(Global_4718592.f_116682[4 /*16*/]), &(Global_4718592.f_116682[5 /*16*/]), &(Global_4718592.f_116682[6 /*16*/]), &(Global_4718592.f_116682[7 /*16*/]), iVar9);
				}
				else if (bParam6)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP4";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP4F";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_SMS3";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/])))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 126);
					}
					else
					{
						iVar12 = 0;
						while (iVar12 <= 1)
						{
							if (MISC::IS_STRING_NULL(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/])))
							{
								StringCopy(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/]), "", 64);
							}
							iVar12++;
						}
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/]), &(Global_4718592.f_93381[iParam16 /*43*/].f_6[1 /*16*/]), "", "", 126);
					}
				}
				else if (bParam8)
				{
					iVar9 = 61;
					if (bParam11)
					{
						if (__LIB_12__::func_936())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_SOD" /* GXT: Enter your Eyefind subject: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_SODE" /* GXT: Subject too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_SODF" /* GXT: Forbidden text. Try again: */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "CELL_EMAIL_SOD" /* GXT: Enter your Eyefind subject (MAX 60 characters): */;
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "CELL_EMAIL_SODE" /* GXT: Subject too long. Try again (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "CELL_EMAIL_SODF" /* GXT: Forbidden text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
						{
							sVar5 = sVar4;
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					else if (__LIB_12__::func_936())
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8S" /* GXT: Enter Message (MAX 20 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8FS" /* GXT: Invalid Message. Try again (MAX 20 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
						iVar9 = 21;
					}
					else
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8" /* GXT: Enter Message (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8F" /* GXT: Forbidden Text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam12)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP9" /* GXT: Enter Outfit Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP9F" /* GXT: Invalid Outfit Name. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP9N" /* GXT: Outfit Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 16);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", 16);
					}
				}
				else if (bParam14)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP12N" /* GXT: Custom Team Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam28)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIPTN";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPTNF";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam15)
				{
					iVar9 = 61;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam17)
				{
					if (__LIB_0__::func_53())
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 20;
					}
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP14S" /* GXT: Enter Yacht Name (MAX 20 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP14ES" /* GXT: Subject too long. Try again (MAX 20 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP14OS" /* GXT: Empty Text. Try again (MAX 20 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP14FS" /* GXT: Forbidden Text. Try again (MAX 20 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP14N" /* GXT: Yacht Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam29)
				{
					iVar9 = 15;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP16S" /* GXT: Enter Vehicle Name (MAX 15 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP16ES" /* GXT: Subject too long. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP16OS" /* GXT: Empty Text. Try again (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP16FS" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP16IS" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP16N";
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(64);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (iParam18 > 0)
				{
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
					{
						iVar9 = 16;
					}
					else
					{
						iVar9 = 15;
					}
					if (bParam20)
					{
						sVar4 = "FMMC_KEY_TIP15B" /* GXT: You must enter a name (MAX 15 characters): */;
					}
					else if (bParam21)
					{
						sVar4 = "FMMC_KEY_TIP15U" /* GXT: Name already in use. Try again (MAX 15 characters): */;
					}
					else if (bParam19)
					{
						sVar4 = "FMMC_KEY_TIP15N" /* GXT: Name Too Short. Try again (MAX 15 characters): */;
					}
					else if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP15I" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == 0)
					{
						if (iParam18 == 2)
						{
							sVar4 = "FMMC_MCK_TIP15" /* GXT: Enter MC Name (MAX 15 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP15" /* GXT: Enter Organization Name (MAX 15 characters): */;
						}
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP15F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 501;
						if (bParam11)
						{
							if (__LIB_12__::func_936())
							{
								if (*iParam1 == 0)
								{
									sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
								}
								else if (*iParam1 == -1)
								{
									sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
								}
								else
								{
									sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
								}
							}
							else if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMAIL_BOD" /* GXT: Enter your Eyefind message (MAX 500 characters): */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMAIL_BODE" /* GXT: Message too long. Try again (MAX 500 characters): */;
							}
							else
							{
								sVar4 = "CELL_EMAIL_BODF" /* GXT: Forbidden message. Try again (MAX 500 characters): */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP3";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIP3E";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP3F";
						}
					}
					else
					{
						iVar9 = 251;
						if (__LIB_12__::func_936())
						{
							iVar9 = 150;
						}
						if (bParam11)
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
							}
						}
						else if (__LIB_12__::func_936())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "FMMC_KEY_TIPSS";
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "FMMC_KEY_TIPSSE";
							}
							else
							{
								sVar4 = "FMMC_KEY_TIPSSF";
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPS";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIPSE";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPSF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__::func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M20";
						if (bParam11)
						{
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					iVar13 = 0;
					while (iVar13 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116553[iVar13 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116553[iVar13 /*16*/]), "", 64);
						}
						iVar13++;
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					if (bParam11)
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, sParam5, sParam10, "", "", "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116553[0 /*16*/]), &(Global_4718592.f_116553[1 /*16*/]), &(Global_4718592.f_116553[2 /*16*/]), &(Global_4718592.f_116553[3 /*16*/]), &(Global_4718592.f_116553[4 /*16*/]), &(Global_4718592.f_116553[5 /*16*/]), &(Global_4718592.f_116553[6 /*16*/]), &(Global_4718592.f_116553[7 /*16*/]), iVar9);
					}
				}
			}
			StringCopy(&Global_1922008, "", 64);
			*iParam1 = 0;
			*uParam2 = 1;
			break;
		case 1:
			*uParam0 = MISC::UPDATE_ONSCREEN_KEYBOARD();
			switch (*uParam0)
			{
				case 0:
					return 0;
				case 3:
					*uParam2 = 0;
					*uParam0 = 0;
					*iParam1 = 0;
					return 0;
				case 2:
					*iParam1 = 0;
					return 0;
				case 1:
					if ((bParam4 || bParam13) || bParam29)
					{
						if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
							if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
							{
								*iParam1 = 0;
								return 1;
							}
							iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
							iVar3 = 0;
							while (iVar3 <= (iVar1 - 1))
							{
								if (*uParam2 != 0)
								{
									if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
									{
										if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 0, 1)))
										{
											iVar2 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
											StringCopy(&Global_1922008, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 1, iVar2), 64);
										}
									}
									else
									{
										*iParam1 = 0;
										return 1;
									}
								}
								iVar3++;
							}
						}
					}
					if (__LIB_0__::func_261())
					{
						*iParam1 = 0;
						return 1;
					}
					if (SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_PENDING(*iParam1))
						{
							HUD::BUSYSPINNER_OFF();
							iVar0 = SOCIALCLUB::SC_PROFANITY_GET_STRING_STATUS(*iParam1);
							switch (iVar0)
							{
								case 0:
									if (bParam9)
									{
										StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
										iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
										iVar3 = 0;
										while (iVar3 <= (iVar1 - 1))
										{
											if (*uParam2 != 0)
											{
												if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
												{
													if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, iVar3, iVar3 + 1)))
													{
														*iParam1 = -3;
													}
												}
											}
											iVar3++;
										}
									}
									if (*iParam1 != -3)
									{
										*iParam1 = 0;
										return 1;
									}
									else
									{
										*uParam2 = 0;
										*uParam0 = 0;
										return 0;
									}
									break;
								case 1:
									*uParam2 = 0;
									*uParam0 = 0;
									return 0;
									break;
								case -1:
									*uParam2 = 0;
									*uParam0 = 3;
									*iParam1 = 0;
									__LIB_12__::func_935(1);
									return 0;
									break;
							}
						}
						else if (bParam11)
						{
							if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appinternet")) == 0)
							{
								HUD::BUSYSPINNER_OFF();
								*iParam1 = 0;
								return 1;
							}
						}
						break;
					}
					if (bParam4)
					{
						if (bParam22)
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(&Global_1922008, iParam1);
						}
						else
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING(&Global_1922008, iParam1);
						}
					}
					else if (MISC::IS_STRING_NULL_OR_EMPTY(MISC::GET_ONSCREEN_KEYBOARD_RESULT()))
					{
						*iParam1 = -2;
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
					else if (bParam22)
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					else
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					if (__LIB_0__::func_53())
					{
						if ((!NETWORK::NETWORK_IS_SIGNED_ONLINE() || __LIB_1__::func_894() == 0) || __LIB_12__::func_696() == 1)
						{
							*iParam1 = 0;
							*uParam2 = 0;
							*uParam0 = 3;
							return 0;
						}
					}
					if (bParam17)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKYACHTNAME" /* GXT: Registering your yacht's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else if (bParam29)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKVEHICLENAME" /* GXT: Registering your vehicle's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKPROFANITY" /* GXT: Checking your text for profanity.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							*iParam1 = -1;
						}
						else
						{
							*iParam1 = -2;
						}
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
				default:
			}
			break;
	}
	return 0;
}

void func_114()//Position - 0x5EFA
{
	MISC::SET_BIT(&(Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_29), 12);
}

void func_115(var uParam0)//Position - 0x5FFD
{
	Global_2714762.f_42 = uParam0;
}

int func_116(int iParam0)//Position - 0x60A0
{
	switch (iParam0)
	{
		case 3:
		case 8:
		case 14:
		case 15:
			return 1;
		default:
	}
	return 0;
}

void func_117()//Position - 0x5FD6
{
	MISC::SET_BIT(&Global_2714762, 5);
	__LIB_8__::func_320();
}

int func_118(int iParam0, int iParam1)//Position - 0x616C
{
	switch (iParam1)
	{
		case 0:
			return __LIB_6__::func_825(Global_262145.f_5023[iParam0], 0);
			break;
		case 1:
			return __LIB_6__::func_825(Global_262145.f_5032[iParam0], 0);
			break;
		case 2:
			return __LIB_6__::func_825(Global_262145.f_5041[iParam0], 0);
			break;
	}
	return -1;
}

int func_119()//Position - 0x5961
{
	int iVar0;
	int iVar1;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4)
	{
		return 1;
	}
	return 0;
}

void func_120(int iParam0)//Position - 0x48F
{
	if (__LIB_13__::func_82())
	{
		if (iParam0 == 1)
		{
			MOBILE::CELL_HORIZONTAL_MODE_TOGGLE(true);
		}
		else if (Global_20266.f_1 > 3)
		{
			MOBILE::CELL_HORIZONTAL_MODE_TOGGLE(false);
		}
	}
}

int func_121(char* sParam0)//Position - 0x3B5D
{
	if (MISC::ARE_STRINGS_EQUAL(sParam0, &Global_112029))
	{
		return 1;
	}
	if (__LIB_13__::func_101(sParam0))
	{
		return 0;
	}
	return 2;
}

void func_122()//Position - 0xB35
{
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247))
	{
		__LIB_13__::func_108();
		if (Global_20265 == 1)
		{
			if (Global_20254)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 5f, -1f, -1f, "CELL_203" /* GXT: ANSWER */, 0, 0, 0, 0);
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 5f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			if (Global_21652)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (BitTest(Global_8136, 20))
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_204" /* GXT: REJECT */, 0, 0, 0, 0);
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
		}
		else
		{
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
			if (BitTest(Global_8136, 20))
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_202" /* GXT: END CALL */, 0, 0, 0, 0);
				if (Global_20209)
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
				}
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
		}
	}
}

bool func_123()//Position - 0x7D8
{
	return BitTest(Global_1977048.f_1, 31);
}

void func_124()//Position - 0x5D8C
{
	Global_2714762.f_717 = 1;
}

void func_125(int iParam0)//Position - 0x9092
{
	iLocal_131 = iParam0;
}

int func_126(int iParam0)//Position - 0x9784
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_27, 1);
	}
	return 0;
}

int func_127(int iParam0)//Position - 0x9885
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_27, 4);
	}
	return 0;
}

int func_128(int iParam0, int iParam1)//Position - 0x993A
{
	if (iParam0 != -1)
	{
		if (iParam1 >= 0 && iParam1 < 3)
		{
			return Global_1977138[iParam0 /*57*/].f_27.f_17[iParam1 /*3*/];
		}
	}
	return -1;
}

int func_129(int iParam0, int iParam1)//Position - 0x9C54
{
	if (iParam0 != -1)
	{
		if (iParam1 >= 0 && iParam1 < 3)
		{
			return Global_1977138[iParam0 /*57*/].f_27.f_17[iParam1 /*3*/].f_1;
		}
	}
	return 0;
}

void func_130(struct<13> Param0)//Position - 0x5E41
{
	if (__LIB_0__::func_800(Param0))
	{
		Global_2715699.f_6570 = { Param0 };
	}
}

int func_131(bool bParam0)//Position - 0x95FB
{
	if (bParam0)
	{
		return BitTest(__LIB_0__::func_369(9905, -1, 0), 2);
	}
	return __LIB_1__::func_161(PLAYER::PLAYER_ID());
}

bool func_132(bool bParam0)//Position - 0x9821
{
	if (bParam0)
	{
		return BitTest(__LIB_0__::func_369(9905, -1, 0), 0);
	}
	return __LIB_3__::func_621(PLAYER::PLAYER_ID());
}

int func_133()//Position - 0x23AC
{
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775 != __LIB_0__::getMinusOneOrNull())
		{
			if (__LIB_0__::func_156(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775, 0, 1))
			{
				if (__LIB_1__::func_511(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775, 1, 0))
				{
					return 0;
				}
			}
		}
	}
	return 1;
}

void func_134(int iParam0, int iParam1)//Position - 0x164
{
	if ((__LIB_1__::func_501() || !__LIB_1__::func_520(1)) || __LIB_1__::func_726(iParam0) == 3)
	{
		if (!__LIB_1__::func_836(PLAYER::PLAYER_ID(), 0) && !__LIB_1__::func_836(PLAYER::PLAYER_ID(), 3))
		{
			__LIB_7__::func_945(iParam0);
			__LIB_7__::func_941(iParam0, __LIB_0__::func_943(1, 1), __LIB_7__::func_944(), __LIB_7__::func_943(), __LIB_7__::func_942(), iParam1);
		}
	}
}

void func_135(bool bParam0, bool bParam1)//Position - 0x21CB
{
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
	{
		return;
	}
	if (!bParam1 && !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (ENTITY::IS_ENTITY_ATTACHED(PLAYER::PLAYER_PED_ID()))
			{
				ENTITY::DETACH_ENTITY(PLAYER::PLAYER_PED_ID(), true, true);
			}
		}
	}
	if (!bParam0)
	{
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (__LIB_7__::func_277())
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
			}
			if (__LIB_7__::func_155(PLAYER::PLAYER_ID()))
			{
				__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 32768, 0);
			}
			else if (__LIB_7__::func_154())
			{
				__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 32772, 0);
			}
			else if (!bParam1)
			{
				__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 319492, 0);
			}
		}
		else
		{
			__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 57348, 0);
		}
	}
}

int func_136()//Position - 0x96FE
{
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[5 /*13*/].f_4 == 1 && !__LIB_12__::func_944(5))
	{
		return 1;
	}
	return 0;
}

int func_137(int iParam0)//Position - 0x9F41
{
	int iVar0;
	if (__LIB_3__::func_36(iParam0))
	{
		iVar0 = 0;
		while (iVar0 <= 4)
		{
			if (iParam0 == Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/])
			{
				return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/].f_1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_138()//Position - 0xA279
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/] != 0)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

int func_139(int iParam0)//Position - 0xA3BE
{
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iParam0 /*3*/] != 0)
	{
		return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iParam0 /*3*/];
	}
	return 0;
}

int func_140(int iParam0, var uParam1, int iParam2, bool bParam3)//Position - 0xDCE7
{
	int iVar0;
	int iVar1;
	iVar1 = NETWORK::GET_NETWORK_TIME();
	if (bParam3)
	{
		iVar1 = MISC::GET_GAME_TIMER();
	}
	iVar0 = MISC::ABSI((iParam2 - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(iVar1, iParam0))));
	iVar0 = (iVar0 / 1000);
	return iVar0;
}

int func_141(int iParam0)//Position - 0xDD1F
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return Global_1853348[iParam0 /*834*/].f_267.f_278.f_5;
}

int func_142(var uParam0)//Position - 0x10B5B
{
	int iVar0;
	var uVar1;
	iVar0 = uParam0;
	if (STATS::STAT_GET_INT(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_143(var uParam0, var uParam1)//Position - 0x10F73
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_194 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_194.f_1 = uParam1;
}

void func_144(var uParam0)//Position - 0x10FC6
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_212 = uParam0;
}

bool func_145()//Position - 0x1170F
{
	return BitTest(uLocal_109, 0);
}

int func_146(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x4F00
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0++;
			break;
		case 24:
			iVar0++;
			break;
		case 10:
			switch (iParam1)
			{
				case 30:
					iVar0 += 4;
					break;
				case 31:
				case 32:
					iVar0 += 3;
					break;
			}
			break;
		case 33:
			switch (iParam1)
			{
				case 89:
					iVar0++;
					break;
				case 90:
					iVar0 += 2;
					break;
			}
			break;
		case 36:
			iVar0 += 2;
			break;
		case 37:
			iVar0 += 2;
			break;
		case 38:
			iVar0++;
			break;
		case 8:
			iVar0 += 7;
			break;
		case 13:
			switch (iParam1)
			{
				case 38:
					iVar0 += 3;
					break;
				case 39:
					iVar0 += 3;
					break;
				case 40:
					iVar0 += 4;
					break;
			}
			break;
		case 16:
			iVar0 += 12;
			break;
		case 35:
			iVar0 += 4;
			break;
		case 4:
			iVar0 += 16;
			break;
		case 46:
			iVar0++;
			break;
		case 9:
			iVar0 += 7;
			break;
		case 14:
			iVar0 += 7;
			break;
		case 17:
			iVar0 += 7;
			break;
		case 47:
			iVar0 += 2;
			break;
		case 11:
			iVar0 += 3;
			break;
		case 18:
			iVar0 += 4;
			break;
		case 6:
			iVar0 += 11;
			break;
		case 48:
			iVar0 += 2;
			break;
		case 44:
			iVar0 += 2;
			break;
		case 21:
			iVar0 += 8;
			break;
		case 22:
			iVar0 += 3;
			break;
		case 7:
			iVar0 += 7;
			break;
		case 15:
			iVar0++;
			break;
		case 2:
			iVar0++;
			break;
		case 34:
			iVar0 += 5;
			break;
		case 27:
			iVar0 += 9;
			break;
		case 26:
			iVar0 += 3;
			break;
		case 31:
			iVar0++;
			break;
		case 3:
			iVar0 += 21;
			break;
		case 12:
			iVar0 += 20;
			break;
		case 41:
			iVar0 += 11;
			break;
		case 49:
			iVar0 += 3;
			break;
		case 29:
			iVar0++;
			break;
		case 5:
			iVar0 += 3;
			break;
		case 50:
			iVar0 += 4;
			break;
		case 23:
			iVar0 += 4;
			break;
		case 20:
			iVar0 += 3;
			break;
		case 32:
			iVar0 = iVar0;
			break;
		case 51:
			iVar0 += 4;
			break;
		case 52:
			iVar0 += 6;
			break;
		case 39:
			iVar0 += 2;
			break;
		case 40:
			iVar0++;
			break;
		case 25:
			iVar0 += 3;
			break;
	}
	if (!bParam5)
	{
		iVar0 = (iVar0 + __LIB_8__::func_122(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_121(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_12__::func_963(__LIB_3__::func_490(iParam2) + 1, iParam0, iParam2));
		}
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_370(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_8__::func_120(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_147(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x56B4
{
	int iVar0;
	switch (iParam0)
	{
		case 13:
			iVar0 += 4;
			break;
		case 1:
			iVar0 += 10;
			break;
		case 15:
			iVar0 += 21;
			break;
		case 14:
			iVar0 += 2;
			break;
		case 11:
			switch (iParam1)
			{
				case 35:
					iVar0 += 4;
					break;
				case 36:
					iVar0 += 5;
					break;
				case 37:
					iVar0 += 5;
					break;
			}
			break;
		case 5:
			iVar0 += 3;
			break;
		case 6:
			iVar0 += 2;
			break;
		case 0:
			switch (iParam1)
			{
				case 0:
					iVar0 += 5;
					break;
				case 1:
					iVar0 += 5;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 31:
					iVar0 += 2;
					break;
				case 32:
					iVar0++;
					break;
				case 33:
					iVar0 += 2;
					break;
				case 34:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 += 3;
			break;
		case 9:
			switch (iParam1)
			{
				case 28:
					switch (iParam4)
					{
						case 0:
							iVar0 += 3;
							break;
						case 1:
							iVar0 += 4;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
				case 29:
					switch (iParam4)
					{
						case 0:
							iVar0 += 4;
							break;
						case 1:
							iVar0 += 3;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
				case 30:
					switch (iParam4)
					{
						case 0:
							iVar0 += 3;
							break;
						case 1:
							iVar0 += 3;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
			}
			break;
		case 3:
			iVar0 += 6;
			break;
		case 4:
			switch (iParam1)
			{
				case 12:
					iVar0 += 7;
					break;
				case 13:
					iVar0 += 10;
					break;
				case 14:
					iVar0 += 8;
					break;
			}
			break;
		case 2:
			iVar0 += 3;
			break;
		case 8:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0++;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_0__::func_114(iParam0))
		{
			iVar0 = (iVar0 + __LIB_12__::func_998(iParam0, iParam2));
		}
		iVar0 = (iVar0 + __LIB_8__::func_126(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_125(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_8__::func_124(__LIB_3__::func_490(iParam2) + 1, iParam0));
		}
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_371(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_8__::func_123(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_148(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0x6EF3
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					iVar0 += 3;
					break;
				case 1:
					iVar0 += 3;
					break;
				case 2:
					iVar0 += 3;
					break;
			}
			break;
		case 2:
			if (iParam2 >= 4)
			{
				iVar0 = (iVar0 + iParam2 + 2);
			}
			else
			{
				iVar0 += 5;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 9:
					iVar0 += 3;
					break;
				case 10:
					iVar0 += 3;
					break;
				case 11:
					iVar0 += 2;
					break;
				case 12:
					iVar0 += 2;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 14:
					iVar0 += 2;
					break;
				case 15:
					iVar0 += 4;
					break;
				case 13:
					iVar0 += 2;
					break;
			}
			break;
		case 5:
			iVar0 += 4;
			break;
		case 6:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 5;
					break;
				case 21:
					iVar0 += 5;
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 22:
					iVar0 += 4;
					break;
				case 23:
					iVar0 += 3;
					break;
				case 24:
					iVar0 += 3;
					break;
			}
			if (__LIB_11__::func_469(iParam0, __LIB_12__::func_999() + 1, -1, iParam2) == 1)
			{
				iVar0++;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 25:
					iVar0 += 5;
					break;
				case 26:
					iVar0 += 5;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 27:
					iVar0 += 2;
					break;
				case 28:
					iVar0 += 2;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 29:
					iVar0 += 4;
					break;
				case 30:
					iVar0 += 4;
					break;
				case 31:
					iVar0 += 4;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 32:
					iVar0 += 2;
					break;
				case 33:
					iVar0 += 2;
					break;
				case 34:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 = iVar0;
			break;
		case 13:
			switch (iParam1)
			{
				case 35:
					iVar0 += 3;
					break;
				case 36:
					iVar0 += 3;
					break;
				case 37:
					iVar0 += 2;
					break;
			}
			break;
		case 14:
			iVar0 += 8;
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = (iVar0 + iParam2);
			break;
		case 20:
			iVar0 += 5;
			break;
	}
	if (!bParam4)
	{
		if (__LIB_8__::func_112(iParam0))
		{
			iVar0 = (iVar0 + __LIB_11__::func_469(iParam0, __LIB_12__::func_999() + 1, -1, iParam2));
		}
		iVar0 = (iVar0 + __LIB_8__::func_135(iParam0, __LIB_12__::func_999() + 1));
	}
	if (!bParam3)
	{
		if (__LIB_11__::func_375(iParam0))
		{
			iVar0 = (iVar0 + __LIB_8__::func_134(iParam0));
		}
	}
	return iVar0;
}

int func_149(bool bParam0)//Position - 0xF5A2
{
	char* sVar0;
	__LIB_12__::func_996(&sVar0, bParam0);
	return MISC::GET_HASH_KEY(&sVar0);
}

int func_150(int iParam0, int iParam1)//Position - 0x11ED8
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	switch (iParam1)
	{
		case 1:
			return __LIB_11__::func_600(iParam0);
		case 2:
			return __LIB_8__::func_841(iParam0, 4);
		case 3:
			return __LIB_8__::func_841(iParam0, 3);
		case 4:
			return __LIB_8__::func_841(iParam0, 1);
		case 5:
			return __LIB_8__::func_841(iParam0, 0);
		case 6:
			return __LIB_8__::func_841(iParam0, 2);
		case 0:
			if (__LIB_1__::func_655(iParam0) || __LIB_8__::func_151(iParam0))
			{
				return 1;
			}
			break;
	}
	return 0;
}

bool func_151()//Position - 0x11F76
{
	return __LIB_0__::func_137(15966, -1);
}

int func_152(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x2F17
{
	int iVar0;
	iVar0 = __LIB_8__::func_93(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_12__::func_997(iParam0, iParam2));
	return iVar0;
}

int func_153(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x3347
{
	int iVar0;
	iVar0 = __LIB_8__::func_94(iParam0, iParam1, iParam3);
	if (!__LIB_0__::func_114(iParam0))
	{
		iVar0 = (iVar0 + __LIB_12__::func_998(iParam0, iParam2));
	}
	return iVar0;
}

int func_154(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x4301
{
	int iVar0;
	iVar0 = __LIB_8__::func_113(iParam0, iParam1, iParam2, iParam3);
	if (!__LIB_8__::func_112(iParam0))
	{
		iVar0 = (iVar0 + __LIB_11__::func_469(iParam0, __LIB_12__::func_999() + 1, -1, iParam2));
	}
	if (__LIB_8__::func_111(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

int func_155(int iParam0, int iParam1)//Position - 0x5D3B
{
	int iVar0;
	switch (iParam0)
	{
		case 20:
			iVar0 = iVar0;
			break;
		case 0:
			switch (iParam1)
			{
				case 1:
					iVar0 += 7;
					break;
				case 2:
					iVar0 += 6;
					break;
				case 3:
					iVar0 += 4;
					break;
				case 4:
					iVar0 += 2;
					break;
				case 5:
					iVar0 += 3;
					break;
				case 6:
					iVar0 += 2;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 7:
					iVar0 += 4;
					break;
				case 8:
					iVar0 += 4;
					break;
				case 9:
					iVar0 += 2;
					break;
				case 10:
					iVar0 += 2;
					break;
				case 11:
					iVar0 += 2;
					break;
				case 12:
					iVar0 += 4;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 13:
					iVar0 += 2;
					break;
				case 14:
					iVar0 += 4;
					break;
				case 15:
					iVar0 += 6;
					break;
				case 16:
					iVar0 += 3;
					break;
				case 17:
					iVar0 += 3;
					break;
				case 18:
					iVar0 += 2;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 4;
					break;
				case 21:
					iVar0 += 6;
					break;
				case 22:
					iVar0 += 2;
					break;
				case 23:
					iVar0 += 4;
					break;
				case 24:
					iVar0 += 5;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 4;
					break;
				case 21:
					iVar0 += 6;
					break;
				case 22:
					iVar0 += 2;
					break;
				case 23:
					iVar0 += 4;
					break;
				case 24:
					iVar0 += 5;
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 31:
					iVar0 += 5;
					break;
				case 32:
					iVar0 += 2;
					break;
				case 33:
					iVar0 += 3;
					break;
				case 34:
					iVar0 += 5;
					break;
				case 35:
					iVar0 += 5;
					break;
				case 36:
					iVar0 += 5;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 68:
					iVar0 = iVar0;
					break;
				case 69:
					iVar0 = iVar0;
					break;
				case 70:
					iVar0 = iVar0;
					break;
				case 71:
					iVar0 = iVar0;
					break;
				case 72:
					iVar0 = iVar0;
					break;
				case 73:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 74:
					iVar0++;
					break;
				case 75:
					iVar0++;
					break;
				case 76:
					iVar0++;
					break;
				case 77:
					iVar0++;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 78:
					iVar0 = iVar0;
					break;
				case 79:
					iVar0 = iVar0;
					break;
				case 80:
					iVar0 = iVar0;
					break;
				case 81:
					iVar0 = iVar0;
					break;
				case 82:
					iVar0 = iVar0;
					break;
				case 83:
					iVar0 = iVar0;
					break;
				case 84:
					iVar0 = iVar0;
					break;
			}
			break;
		case 7:
			iVar0 += 4;
			break;
		case 8:
			switch (iParam1)
			{
				case 62:
					iVar0 += 6;
					break;
				case 63:
					iVar0 += 6;
					break;
				case 64:
					iVar0 += 6;
					break;
				case 65:
					iVar0 += 6;
					break;
				case 66:
					iVar0 += 6;
					break;
				case 67:
					iVar0 += 6;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 85:
					iVar0 = iVar0;
					break;
				case 86:
					iVar0 = iVar0;
					break;
				case 87:
					iVar0 = iVar0;
					break;
				case 88:
					iVar0 = iVar0;
					break;
				case 89:
					iVar0 = iVar0;
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 90:
					iVar0 += 2;
					break;
				case 91:
					iVar0 += 2;
					break;
				case 92:
					iVar0 += 2;
					break;
				case 93:
					iVar0 += 2;
					break;
				case 94:
					iVar0 += 2;
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 37:
					iVar0 += 3;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 38:
					iVar0 += 4;
					break;
				case 39:
					iVar0 += 4;
					break;
				case 40:
					iVar0 += 4;
					break;
				case 41:
					iVar0 += 4;
					break;
			}
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		default:
			iVar0 = iVar0;
			break;
	}
	if ((__LIB_8__::func_98(iParam0) && iParam0 != 7) || iParam0 == 12)
	{
		iVar0 = (iVar0 + __LIB_11__::func_794(iParam0, __LIB_12__::func_999() + 1));
	}
	return iVar0;
}

int func_156(int iParam0, int iParam1, int iParam2)//Position - 0x7346
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0 = iVar0;
			break;
		case 8:
			iVar0 = iVar0;
			break;
		case 5:
			iVar0 = iVar0;
			break;
		case 11:
			iVar0 += 3;
			break;
		case 13:
			iVar0 = iVar0;
			break;
		case 4:
			switch (iParam1)
			{
				case 1:
					iVar0 += 2;
					break;
				case 2:
					iVar0 += 2;
					break;
				case 3:
					iVar0 += 2;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 18:
					iVar0 += 2;
					break;
				case 19:
					iVar0 += 2;
					break;
				case 20:
					iVar0 += 2;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 21:
					iVar0 += 7;
					break;
				case 22:
					iVar0 += 7;
					break;
				case 23:
					iVar0 += 7;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 27:
					iVar0 = iVar0;
					break;
				case 28:
					iVar0 = iVar0;
					break;
				case 29:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 30:
					iVar0 += 2;
					break;
				case 31:
					iVar0 += 2;
					break;
				case 32:
					iVar0 += 2;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 36:
					iVar0 += 7;
					break;
				case 37:
					iVar0 += 7;
					break;
				case 38:
					iVar0 += 7;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 39:
					iVar0 += 4;
					break;
				case 40:
					iVar0 += 4;
					break;
				case 41:
					iVar0 += 6;
					break;
			}
			break;
		case 17:
			switch (iParam1)
			{
				case 42:
					iVar0 += 2;
					break;
				case 43:
					iVar0 += 2;
					break;
				case 44:
					iVar0 += 2;
					break;
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 45:
					iVar0 += 6;
					break;
				case 46:
					iVar0 += 6;
					break;
				case 47:
					iVar0 += 6;
					break;
			}
			break;
		case 16:
			switch (iParam1)
			{
				case 48:
					iVar0 += 2;
					break;
				case 49:
					iVar0 += 2;
					break;
				case 50:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 += 11;
			break;
	}
	iVar0 = (iVar0 + __LIB_8__::func_137(iParam0, __LIB_12__::func_999() + 1, iParam2));
	iVar0 = (iVar0 + __LIB_11__::func_471(iParam0));
	return iVar0;
}

int func_157(int iParam0, int iParam1)//Position - 0x8407
{
	int iVar0;
	switch (iParam0)
	{
		case 20:
			iVar0 += 2;
			break;
		case 0:
			switch (iParam1)
			{
				case 1:
					iVar0 += 16;
					break;
				case 2:
					iVar0 += 14;
					break;
				case 3:
					iVar0 += 13;
					break;
				case 4:
					iVar0 += 12;
					break;
				case 5:
					iVar0 += 12;
					break;
				case 6:
					iVar0 += 12;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 7:
					iVar0 += 12;
					break;
				case 8:
					iVar0 += 12;
					break;
				case 9:
					iVar0 += 12;
					break;
				case 10:
					iVar0 += 12;
					break;
				case 11:
					iVar0 += 12;
					break;
				case 12:
					iVar0 += 12;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 13:
					iVar0 += 17;
					break;
				case 14:
					iVar0 += 12;
					break;
				case 15:
					iVar0 += 13;
					break;
				case 16:
					iVar0 += 14;
					break;
				case 17:
					iVar0 += 12;
					break;
				case 18:
					iVar0 += 14;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 19:
					iVar0 += 14;
					break;
				case 20:
					iVar0 += 14;
					break;
				case 21:
					iVar0 += 14;
					break;
				case 22:
					iVar0 += 14;
					break;
				case 23:
					iVar0 += 14;
					break;
				case 24:
					iVar0 += 14;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 25:
					iVar0 += 4;
					break;
				case 26:
					iVar0 += 4;
					break;
				case 27:
					iVar0 += 4;
					break;
				case 28:
					iVar0 += 4;
					break;
				case 29:
					iVar0 += 4;
					break;
				case 30:
					iVar0 += 4;
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 31:
					iVar0 += 13;
					break;
				case 32:
					iVar0 += 13;
					break;
				case 33:
					iVar0 += 13;
					break;
				case 34:
					iVar0 += 13;
					break;
				case 35:
					iVar0 += 13;
					break;
				case 36:
					iVar0 += 13;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 68:
					iVar0 = iVar0;
					break;
				case 69:
					iVar0 = iVar0;
					break;
				case 70:
					iVar0 = iVar0;
					break;
				case 71:
					iVar0 = iVar0;
					break;
				case 72:
					iVar0 = iVar0;
					break;
				case 73:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 74:
					iVar0 += 10;
					break;
				case 75:
					iVar0 += 10;
					break;
				case 76:
					iVar0 += 10;
					break;
				case 77:
					iVar0 += 10;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 78:
					iVar0 += 3;
					break;
				case 79:
					iVar0 += 3;
					break;
				case 80:
					iVar0 += 3;
					break;
				case 81:
					iVar0 += 3;
					break;
				case 82:
					iVar0 += 5;
					break;
				case 83:
					iVar0 += 3;
					break;
				case 84:
					iVar0 += 3;
					break;
			}
			break;
		case 7:
			iVar0 += 8;
			break;
		case 8:
			switch (iParam1)
			{
				case 62:
					iVar0 += 8;
					break;
				case 63:
					iVar0 += 8;
					break;
				case 64:
					iVar0 += 8;
					break;
				case 65:
					iVar0 += 8;
					break;
				case 66:
					iVar0 += 8;
					break;
				case 67:
					iVar0 += 8;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 85:
					iVar0 += 3;
					break;
				case 86:
					iVar0 += 3;
					break;
				case 87:
					iVar0 += 3;
					break;
				case 88:
					iVar0 += 3;
					break;
				case 89:
					iVar0 += 3;
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 90:
					iVar0 += 2;
					break;
				case 91:
					iVar0 += 2;
					break;
				case 92:
					iVar0 += 2;
					break;
				case 93:
					iVar0 += 2;
					break;
				case 94:
					iVar0 += 2;
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 37:
					iVar0 += 18;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 38:
					iVar0 += 8;
					break;
				case 39:
					iVar0 += 8;
					break;
				case 40:
					iVar0 += 8;
					break;
				case 41:
					iVar0 += 8;
					break;
			}
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		default:
			iVar0 = iVar0;
			break;
	}
	if (iParam0 == 12 || iParam0 == 9)
	{
		iVar0 = (iVar0 + __LIB_11__::func_794(iParam0, __LIB_12__::func_999() + 1));
	}
	return iVar0;
}

void func_158(int iParam0)//Position - 0xE49A
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_12__::func_975(iParam0);
	iVar1 = __LIB_0__::func_369(iVar0, -1, 0) + 1;
	__LIB_0__::func_413(iVar0, iVar1, -1, 1, 0);
}

int func_159(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0xF2A5
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	var uVar3;
	bVar0 = false;
	if (!__LIB_0__::func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__::getGlobal_1574918()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam2 == joaat("CATEGORY_WEAPON_AMMO") || iParam2 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	bVar2 = false;
	iVar1 = 0;
	while (iVar1 < 15)
	{
		if (Global_4534105[iVar1 /*85*/].f_66.f_2 == 0)
		{
			bVar2 = true;
		}
		else if (Global_4534105[iVar1 /*85*/].f_66.f_5 == 1)
		{
			return 0;
		}
		iVar1++;
	}
	if (!bVar2)
	{
		return 0;
	}
	*iParam0 = 0;
	if (!bVar0)
	{
		if (NETSHOPPING::NET_GAMESERVER_BASKET_IS_ACTIVE())
		{
			NETSHOPPING::NET_GAMESERVER_BASKET_END();
		}
	}
	if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_START(&uVar3, iParam2, iParam3, iParam4))
	{
		*iParam0 = __LIB_12__::func_384(uVar3, iParam1, joaat("SERVICE_INVALID"), iParam3, iParam2, 0, 1, iParam4, uParam5, 0, bVar0);
		return 1;
	}
	return 0;
}

int func_160(int iParam0, int iParam1)//Position - 0x3746
{
	int iVar0;
	iVar0 = __LIB_8__::func_99(iParam0, iParam1);
	if (!__LIB_8__::func_98(iParam0))
	{
		iVar0 = (iVar0 + __LIB_11__::func_794(iParam0, __LIB_12__::func_999() + 1));
	}
	if (iParam0 == 14 || ((((__LIB_8__::func_98(iParam0) && iParam0 != 9) && iParam0 != 16) && iParam0 != 7) && iParam0 != 17))
	{
		iVar0 = (iVar0 + __LIB_11__::func_794(iParam0, __LIB_12__::func_999() + 1));
	}
	if (iParam0 == 7)
	{
		iVar0 += 6;
	}
	if (iParam0 == 17)
	{
		iVar0 += 2;
	}
	return iVar0;
}

void func_161()//Position - 0xAA2
{
	__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_INPUT_EVENT", SYSTEM::TO_FLOAT(3), -1082130432, -1082130432, -1082130432, -1082130432);
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Navigate", &Global_20255, true);
	__LIB_13__::func_104();
}

void func_162()//Position - 0xB00
{
	__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_INPUT_EVENT", SYSTEM::TO_FLOAT(1), -1082130432, -1082130432, -1082130432, -1082130432);
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Navigate", &Global_20255, true);
	__LIB_13__::func_110();
}

void func_163(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0x2443
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[0] = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[1] = uParam1;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[2] = uParam2;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[3] = uParam3;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187.f_5 = uParam4;
}

void func_164(int iParam0, int iParam1, bool bParam2)//Position - 0x2950
{
	*iParam1 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iParam0) / 32f));
	*bParam2 = (iParam0 - *iParam1 * 32);
}

int func_165(int iParam0)//Position - 0xB1E5
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 19);
}

int func_166(int iParam0)//Position - 0x145FF
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	if (!STREAMING::IS_MODEL_A_VEHICLE(iParam0))
	{
		return 0;
	}
	iVar0 = VEHICLE::GET_VEHICLE_CLASS_FROM_NAME(iParam0);
	if ((((((((((((((VEHICLE::IS_THIS_MODEL_A_BOAT(iParam0) || VEHICLE::IS_THIS_MODEL_A_PLANE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_HELI(iParam0)) || VEHICLE::IS_THIS_MODEL_A_BICYCLE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_PLANE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_JETSKI(iParam0)) || VEHICLE::IS_THIS_MODEL_A_TRAIN(iParam0)) || iVar0 == 2) || iVar0 == 12) || iVar0 == 18) || iVar0 == 19) || iVar0 == 11) || iVar0 == 20) || iVar0 == 10) || iVar0 == 17)
	{
		return 0;
	}
	return 1;
}

int func_167(int iParam0)//Position - 0x146D4
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case 3:
			return joaat("prototipo");
		case 4:
		case 5:
		case 6:
			return joaat("tyrus");
		case 7:
		case 8:
		case 9:
			return joaat("bestiagts");
		case 10:
		case 11:
		case 12:
			return joaat("t20");
		case 13:
		case 14:
		case 15:
			return joaat("sheava");
		case 16:
		case 17:
		case 18:
			return joaat("osiris");
		case 19:
		case 20:
		case 21:
			return joaat("fmj");
		case 22:
		case 23:
		case 24:
			return joaat("reaper");
		case 25:
		case 26:
		case 27:
			return joaat("pfister811");
		case 28:
		case 29:
		case 30:
			return joaat("alpha");
		case 31:
		case 32:
		case 33:
			return joaat("mamba");
		case 34:
		case 35:
		case 36:
			return joaat("tampa");
		case 37:
		case 38:
		case 39:
			return joaat("btype3");
		case 40:
		case 41:
		case 42:
			return joaat("feltzer3");
		case 43:
		case 44:
		case 45:
			return joaat("ztype");
		case 46:
		case 47:
		case 48:
			return joaat("tropos");
		case 49:
		case 50:
		case 51:
			return joaat("entityxf");
		case 52:
		case 53:
		case 54:
			return joaat("sultanrs");
		case 55:
		case 56:
		case 57:
			return joaat("zentorno");
		case 58:
		case 59:
		case 60:
			return joaat("omnis");
		case 61:
		case 62:
		case 63:
			return joaat("coquette3");
		case 64:
		case 65:
		case 66:
			return joaat("seven70");
		case 67:
		case 68:
		case 69:
			return joaat("verlierer2");
		case 70:
		case 71:
		case 72:
			return joaat("feltzer2");
		case 73:
		case 74:
		case 75:
			return joaat("coquette2");
		case 76:
		case 77:
		case 78:
			return joaat("cheetah");
		case 79:
		case 80:
		case 81:
			return joaat("nightshade");
		case 82:
		case 83:
		case 84:
			return joaat("banshee2");
		case 85:
		case 86:
		case 87:
			return joaat("turismor");
		case 88:
		case 89:
		case 90:
			return joaat("massacro");
		case 91:
		case 92:
		case 93:
			return joaat("sabregt2");
		case 94:
		case 95:
		case 96:
			return joaat("jester");
		default:
	}
	return 0;
}

int func_168(var uParam0, var uParam1, var uParam2)//Position - 0x163BB
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	bVar0 = false;
	iVar3 = uParam2;
	iVar1 = 0;
	while (iVar1 < 3)
	{
		bVar4 = (iVar3 + iVar1);
		if (bVar4 > 31)
		{
			bVar0 = true;
			bVar4 = (bVar4 - 32);
		}
		if (!bVar0)
		{
			if (BitTest(uParam0, bVar4))
			{
				iVar2++;
			}
		}
		else if (BitTest(uParam1, bVar4))
		{
			iVar2++;
		}
		iVar1++;
	}
	return iVar2;
}

int func_169(int iParam0)//Position - 0x17518
{
	int iVar0;
	if (iParam0 == 8)
	{
		iVar0 = (Global_2789828 - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), Global_2789228.f_144)));
		iVar0 = (iVar0 / 1000);
	}
	else
	{
		iVar0 = (Global_262145.f_19359 /* Tunable: IMPEXP_STEAL_COOLDOWN */ - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(MISC::GET_GAME_TIMER(), Global_2789228.f_146)));
		iVar0 = (iVar0 / 1000);
	}
	return iVar0;
}

int func_170(int iParam0)//Position - 0x17FB8
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (__LIB_0__::func_156(iParam0, 1, 1))
		{
			if (Global_2689235[iParam0 /*453*/].f_318.f_6 != -1)
			{
				return __LIB_0__::func_172(Global_2689235[iParam0 /*453*/].f_318.f_6) == 1;
			}
		}
	}
	return 0;
}

int func_171(int iParam0, int iParam1)//Position - 0x8214
{
	var uVar0;
	switch (iParam0)
	{
		case 0:
			return 0;
		case 8:
			if (iParam1 > 4)
			{
				return 4;
			}
			return iParam1;
		case 1:
			uVar0 = __LIB_0__::func_369(5329, -1, 0);
			if (BitTest(uVar0, 7))
			{
				if (iParam1 > 4)
				{
					return 4;
				}
				return iParam1;
			}
			else
			{
				return 0;
			}
			break;
	}
	return 0;
}

int func_172(int iParam0)//Position - 0x15A70
{
	if (iParam0 == 8)
	{
		if (__LIB_0__::func_864(&(Global_2789228.f_144)) && !__LIB_0__::func_937(&(Global_2789228.f_144), Global_2789828, 0))
		{
			return 0;
		}
	}
	else if (__LIB_0__::func_864(&(Global_2789228.f_146)) && !__LIB_0__::func_937(&(Global_2789228.f_146), Global_262145.f_19359 /* Tunable: IMPEXP_STEAL_COOLDOWN */, 1))
	{
		return 0;
	}
	return 1;
}

int func_173(int iParam0, int iParam1)//Position - 0x93B
{
	int iVar0;
	if (__LIB_12__::func_539(iParam0))
	{
		iVar0 = 0;
		while (iVar0 < 40)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == iParam1 || Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == (1000 + iParam1))
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

void func_174(int* iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x16337
{
	int iVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	iVar0 = uParam2;
	if (iParam3 > 3)
	{
		iParam3 = 3;
	}
	iVar1 = 0;
	while (iVar1 < iParam3)
	{
		bVar2 = false;
		iVar3 = (iVar0 + iVar1);
		if (iVar3 > 31)
		{
			bVar2 = true;
			iVar3 = (iVar3 - 32);
		}
		if (!bVar2)
		{
			MISC::SET_BIT(iParam0, iVar3);
		}
		else
		{
			MISC::SET_BIT(iParam0, iVar3);
		}
		iVar1++;
	}
	if (*iParam0 != 0)
	{
		__LIB_0__::func_413(5370, *iParam0, -1, 1, 0);
	}
	if (*uParam1 != 0)
	{
		__LIB_0__::func_413(5371, *uParam1, -1, 1, 0);
	}
}

int func_175(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9)//Position - 0x1A5B
{
	bool bVar0;
	int iVar1;
	struct<4> Var2;
	bVar0 = false;
	if (!__LIB_0__::func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__::getGlobal_1574918()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam1 == joaat("CATEGORY_WEAPON_AMMO") || iParam1 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	if (iParam2 == 0)
	{
		return 0;
	}
	iVar1 = __LIB_3__::func_534();
	if (iVar1 == -1)
	{
		if (!__LIB_13__::func_159(&iVar1, iParam0, iParam1, iParam3, iParam7, iParam9))
		{
			return 0;
		}
	}
	if (iVar1 != -1)
	{
		if (iParam8 != 0 && __LIB_3__::func_535(iParam1))
		{
			Var2.f_0 = iParam8;
			Var2.f_1 = iParam2;
			Var2.f_2 = iParam5;
			Var2.f_3 = iParam6;
		}
		else
		{
			Var2.f_0 = iParam2;
			Var2.f_1 = iParam8;
			Var2.f_2 = iParam5;
			Var2.f_3 = iParam6;
		}
		Global_4534105[iVar1 /*85*/].f_66.f_1 = Var2.f_2;
		Global_4534105[iVar1 /*85*/].f_66.f_15 = Var2.f_0;
		Global_4534105[iVar1 /*85*/].f_66.f_16 = Var2.f_1;
		if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_ADD_ITEM(&Var2, iParam4))
		{
			return 1;
		}
	}
	return 0;
}

int func_176(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x940C
{
	switch (iParam0)
	{
		case 148:
		case 152:
		case 162:
		case 160:
		case 163:
			return 0;
		case 167:
			return __LIB_8__::func_147(iParam1);
		case 168:
			return 12;
		case 170:
			return 4;
		case 171:
			return 0;
		case 172:
			return 0;
		case 173:
			return 4;
		case 178:
		case 188:
			return __LIB_11__::func_795(iParam1, iParam2, iParam3);
		case 225:
		case 226:
			return __LIB_12__::func_716(iParam1, iParam2, iParam3, 0);
		case 227:
			return 0;
		case 229:
		case 230:
			return __LIB_12__::func_715(iParam1, iParam2, iParam3, 0);
		case 233:
			return __LIB_12__::func_714(iParam1, iParam2, iParam3, 0);
		case 190:
			return 20;
		case 191:
			return 4;
		case 192:
			return __LIB_13__::func_157(iParam1, iParam2);
		case 179:
			return 0;
		case 183:
			return 15;
		case 182:
			return 20;
		case 185:
			return 21;
		case 186:
			return 36;
		case 180:
			return 10;
		case 193:
			return 10;
		case 194:
			return 0;
		case 197:
			return 12;
		case 199:
			return 6;
		case 195:
			return 15;
		case 201:
			return 0;
		case 198:
			return 18;
		case 205:
			return 1;
		case 207:
			return 24;
		case 208:
			return 14;
		case 209:
			return 11;
		case 210:
			return 0;
		case 214:
			return 12;
		case 215:
			return 20;
		case 216:
			return 20;
		case 217:
			return __LIB_8__::func_143();
		case 218:
			return __LIB_8__::func_142();
		case 219:
			return 0;
		case 220:
			return 0;
		case 221:
			return 0;
		case 237:
		case 250:
			return __LIB_8__::func_141(iParam1, iParam2, iParam3);
		case 238:
		case 249:
			return __LIB_8__::func_140(iParam1, iParam2);
		case 239:
			return 6;
		case 240:
			return 11;
		case 241:
			return 14;
		case 242:
			return 14;
		case 244:
			return 9;
		case 248:
			return 10;
		case 243:
			return __LIB_12__::func_713(iParam1, iParam2, 0, -1);
		case 158:
			return __LIB_12__::func_712(iParam1, iParam2, 0, -1);
		case 181:
			return __LIB_12__::func_711(iParam1, iParam2, 0, -1);
		default:
	}
	return 0;
}

int func_177(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x48B3
{
	switch (iParam0)
	{
		case 148:
		case 152:
		case 162:
		case 160:
		case 163:
			return 0;
		case 159:
		case 142:
			return 1;
		case 167:
			return __LIB_8__::func_115(iParam1);
		case 170:
			return 2;
		case 171:
			return 0;
		case 172:
			return 9;
		case 173:
			return 0;
		case 168:
			return 5;
		case 178:
		case 188:
			return __LIB_11__::func_470(iParam1, iParam2, iParam3);
		case 225:
		case 226:
			return __LIB_13__::func_154(iParam1, iParam2, iParam3, iParam4);
		case 227:
			return 0;
		case 229:
		case 230:
			return __LIB_13__::func_22(iParam1, iParam2, iParam3, PLAYER::INT_TO_PLAYERINDEX(iParam5), iParam4);
		case 233:
			return __LIB_13__::func_12(iParam1, iParam2, iParam3, PLAYER::INT_TO_PLAYERINDEX(iParam5), iParam4);
		case 179:
			return 0;
		case 182:
			return 7;
		case 185:
			return 6;
		case 186:
			return 2;
		case 180:
			return 9;
		case 190:
			return 8;
		case 191:
			return 0;
		case 192:
			return __LIB_13__::func_160(iParam1, iParam2);
		case 193:
			return 0;
		case 194:
			return 0;
		case 199:
			return 0;
		case 195:
			return 9;
		case 201:
			return 16;
		case 198:
			return 12;
		case 205:
			return 8;
		case 207:
			return 0;
		case 208:
			return 15;
		case 209:
			return 0;
		case 210:
			return 0;
		case 214:
			return 9;
		case 215:
			return 0;
		case 216:
			return 16;
		case 217:
			return 0;
		case 218:
			return 0;
		case 219:
			return 0;
		case 220:
			return 30;
		case 221:
			return 30;
		case 237:
		case 250:
			return __LIB_11__::func_466(iParam1, iParam2, iParam3);
		case 238:
		case 249:
			return __LIB_8__::func_95(iParam1);
		case 239:
			return 4;
		case 240:
			return 1;
		case 241:
			return 1;
		case 242:
			return 1;
		case 244:
			return 4;
		case 248:
			return 5;
		case 243:
			return __LIB_13__::func_153(iParam1, iParam2, PLAYER::INT_TO_PLAYERINDEX(iParam5), iParam4);
		case 158:
			return __LIB_13__::func_152(iParam1, iParam2, PLAYER::INT_TO_PLAYERINDEX(iParam5), iParam4);
		case 181:
			return __LIB_11__::func_465(iParam1, iParam2, PLAYER::INT_TO_PLAYERINDEX(iParam5), iParam4);
		default:
	}
	return 0;
}

var func_178(int iParam0)//Position - 0x6EC5
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_278.f_1, 5);
}

var func_179(int iParam0)//Position - 0x6EE0
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_278.f_1, 4);
}

void func_180(int iParam0, bool bParam1)//Position - 0x24729
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 29))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 29);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 29))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 29);
		}
	}
}

void func_181(int iParam0, bool bParam1)//Position - 0x247CB
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 30))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 30);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 30))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 30);
		}
	}
}

int func_182(int iParam0)//Position - 0x2FCDC
{
	switch (iParam0)
	{
		case 0:
			return 8253;
			break;
		case 1:
			return 8254;
			break;
		case 2:
			return 8255;
			break;
		case 3:
			return 8256;
			break;
		case 4:
			return 8257;
			break;
		case 5:
			return 8258;
			break;
		case 6:
			return 8259;
			break;
		case 7:
			return 8260;
			break;
		case 8:
			return 8261;
			break;
		case 9:
			return 8262;
			break;
	}
	return 13122;
}

int func_183(int iParam0)//Position - 0x3B311
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_2, 29);
	}
	return 0;
}

int func_184(int iParam0)//Position - 0x3B39E
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_2, 26);
	}
	return 0;
}

void func_185(char* sParam0, int iParam1, int iParam2)//Position - 0x3BE5C
{
	if (iParam2 == 3)
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v3", 64);
				break;
		}
	}
	else if (iParam2 == 4)
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v3", 64);
				break;
		}
	}
	else
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v3", 64);
				break;
			}
	}
}

void func_186(char* sParam0, bool bParam1, int iParam2, int iParam3)//Position - 0x3BF58
{
	StringCopy(sParam0, "FCARCADE_", 64);
	if (bParam1)
	{
		StringConCat(sParam0, "B_", 64);
	}
	else
	{
		StringConCat(sParam0, "C_", 64);
	}
	if (iParam2 == 4)
	{
		StringConCat(sParam0, "LIV_REM", 64);
	}
	else
	{
		StringConCat(sParam0, "UP", 64);
		StringIntConCat(sParam0, iParam2, 64);
		if (iParam2 == 3)
		{
			StringConCat(sParam0, "_C_", 64);
			StringIntConCat(sParam0, iParam3, 64);
		}
	}
}

char* func_187(int iParam0)//Position - 0x3C188
{
	char cVar0[24];
	StringCopy(&cVar0, "ARC_MAC_", 24);
	switch (iParam0)
	{
		case 0:
			StringConCat(&cVar0, "SP_MON", 24);
			break;
		case 1:
			StringConCat(&cVar0, "GUNS", 24);
			break;
		case 5:
			StringConCat(&cVar0, "N_DRIVE_B", 24);
			break;
		case 3:
			StringConCat(&cVar0, "N_DRIVE_C", 24);
			break;
		case 4:
			StringConCat(&cVar0, "N_DRIVE_T", 24);
			break;
		case 2:
			StringConCat(&cVar0, "WIZZARD", 24);
			break;
		case 6:
			StringConCat(&cVar0, "DOTF", 24);
			break;
		case 7:
			StringConCat(&cVar0, "MONKEY", 24);
			break;
		case 8:
			StringConCat(&cVar0, "PEN", 24);
			break;
		case 12:
			StringConCat(&cVar0, "CLAW_CR", 24);
			break;
		case 11:
			StringConCat(&cVar0, "FORTUNE", 24);
			break;
		case 13:
			StringConCat(&cVar0, "LOVE", 24);
			break;
		case 10:
			StringConCat(&cVar0, "S_CRIME", 24);
			break;
		case 9:
			StringConCat(&cVar0, "IAP", 24);
			break;
		case 14:
			StringConCat(&cVar0, "STRENGTH" /* GXT: Strength */, 24);
			break;
		case 15:
			StringConCat(&cVar0, "QUB3D", 24);
			break;
		case 16:
			StringConCat(&cVar0, "CAMHEDZ", 24);
			break;
		default:
			return "";
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

int func_188(int iParam0)//Position - 0x3C2E4
{
	switch (iParam0)
	{
		case 0:
			return 8738;
		case 1:
			return 8739;
		case 5:
			return 8740;
		case 2:
			return 8741;
		case 6:
			return 8742;
		case 7:
			return 8743;
		case 8:
			return 8744;
		case 12:
			return 8745;
		case 11:
			return 8746;
		case 13:
			return 8747;
		case 9:
			return 8748;
		case 3:
			return 8749;
		case 4:
			return 8801;
		case 14:
			return 8978;
		case 15:
			return 8979;
		case 16:
			return 9603;
		default:
	}
	return 13122;
}

int func_189(int iParam0)//Position - 0x3C3E5
{
	switch (iParam0)
	{
		case 0:
			return 8718;
		case 1:
			return 8719;
		case 2:
			return 8720;
		case 3:
			return 8721;
		case 4:
			return 8722;
		case 5:
			return 8723;
		case 6:
			return 8724;
		case 8:
			return 8736;
		case 7:
			return 8737;
		default:
	}
	return 13122;
}

char* func_190(int iParam0, int iParam1)//Position - 0x3C534
{
	char cVar0[16];
	StringCopy(&cVar0, "FCARCADE_", 16);
	switch (iParam0)
	{
		case 0:
			StringConCat(&cVar0, "FLR_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 1:
			StringConCat(&cVar0, "CEIL_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 2:
			StringConCat(&cVar0, "WALL_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 3:
			StringConCat(&cVar0, "QRT", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 4:
			StringConCat(&cVar0, "GRG", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 5:
			StringConCat(&cVar0, "NE", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 6:
			StringConCat(&cVar0, "HS", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 7:
			StringConCat(&cVar0, "DS", 16);
			break;
		case 8:
			StringConCat(&cVar0, "BH", 16);
			break;
		default:
			return "";
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

char* func_191(int iParam0, int iParam1)//Position - 0x3DF91
{
	char cVar0[16];
	StringCopy(&cVar0, "FCHUB_", 16);
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "FCCLUB_GARG_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 1:
			StringCopy(&cVar0, "FCCLUB_STOR_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 2:
			StringConCat(&cVar0, "STA_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 3:
			StringConCat(&cVar0, "SEC_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 4:
			StringConCat(&cVar0, "EQU_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 5:
			StringConCat(&cVar0, "MOD7_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		default:
			return "";
			break;
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

int func_192(int iParam0)//Position - 0x3E4CF
{
	if (iParam0 == 4)
	{
		return 0;
	}
	else if (iParam0 == 3)
	{
		return 1;
	}
	else if (iParam0 == 6)
	{
		return 2;
	}
	else if (iParam0 == 1)
	{
		return 3;
	}
	else if (iParam0 == 0)
	{
		return 4;
	}
	else if (iParam0 == 7)
	{
		return 5;
	}
	else if (iParam0 == 2)
	{
		return 6;
	}
	else if (iParam0 == 5)
	{
		return 7;
	}
	else if (iParam0 == 8)
	{
		return 8;
	}
	if (iParam0 == -1)
	{
		return -1;
	}
	return 0;
}

void func_193(char* sParam0, int iParam1, bool bParam2)//Position - 0x3FC6C
{
	StringCopy(sParam0, "FACTORY_INDEX_", 64);
	StringIntConCat(sParam0, iParam1, 64);
	StringConCat(sParam0, "_t0_v0", 64);
	if (bParam2)
	{
		StringConCat(sParam0, "_CESP", 64);
	}
}

int func_194(int iParam0, int iParam1)//Position - 0x43408
{
	int iVar0;
	var uVar1;
	iVar0 = Global_2826809[iParam0 /*3*/][iParam1];
	if (STATS::STAT_GET_INT(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_195(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x43518
{
	char cVar0[32];
	switch (iParam1)
	{
		case 0:
			StringCopy(&cVar0, "PM_BWALL_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 1:
			StringCopy(&cVar0, "PM_BHANGING_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 2:
			StringCopy(&cVar0, "PM_BFURNITURE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 3:
			return;
			break;
		case 4:
			StringCopy(&cVar0, "PM_BFONT_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 5:
			StringCopy(&cVar0, "PM_BFCOLOUR_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 6:
			StringCopy(&cVar0, "PM_BEMBLEM_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 7:
			StringCopy(&cVar0, "PM_BHIDESINAGE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 8:
			StringCopy(&cVar0, "PM_BGUNLOCK_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 9:
			StringCopy(&cVar0, "PM_BGARAGE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 10:
			StringCopy(&cVar0, "PM_BNAME_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
	}
	StringCopy(sParam0, "PR_", 64);
	StringConCat(sParam0, &cVar0, 64);
	StringConCat(sParam0, "_t", 64);
	StringIntConCat(sParam0, iParam3, 64);
	StringConCat(sParam0, "_v0", 64);
}

int func_196(int iParam0, int iParam1)//Position - 0x4374D
{
	if (__LIB_2__::func_681(iParam0) == 91)
	{
		if (iParam1 == 0)
		{
			return 0;
		}
		else if (iParam1 == 1)
		{
			return 8;
		}
		else if (iParam1 == 2)
		{
			return 2;
		}
		else if (iParam1 == 3)
		{
			return 7;
		}
		else if (iParam1 == 4)
		{
			return 3;
		}
		else if (iParam1 == 5)
		{
			return 4;
		}
		else if (iParam1 == 6)
		{
			return 6;
		}
		else if (iParam1 == 7)
		{
			return 5;
		}
		else if (iParam1 == 8)
		{
			return 1;
		}
	}
	else if (__LIB_2__::func_681(iParam0) == 97)
	{
		if (iParam1 == 0)
		{
			return 0;
		}
		else if (iParam1 == 1)
		{
			return 1;
		}
		else if (iParam1 == 2)
		{
			return 2;
		}
		else if (iParam1 == 3)
		{
			return 3;
		}
		else if (iParam1 == 4)
		{
			return 4;
		}
		else if (iParam1 == 5)
		{
			return 5;
		}
		else if (iParam1 == 6)
		{
			return 6;
		}
		else if (iParam1 == 7)
		{
			return 7;
		}
		else if (iParam1 == 8)
		{
			return 8;
		}
	}
	if (iParam1 == -1)
	{
		return -1;
	}
	return 0;
}

int func_197(int iParam0, int iParam1)//Position - 0x46683
{
	switch (iParam0)
	{
		case 0:
			return 0;
			break;
		case 1:
			if (iParam1 == 0)
			{
				return Global_262145.f_15960 /* Tunable: DYNASTY8_OFFICE_PERSONNEL_FEMALE */;
			}
			else if (iParam1 == 1)
			{
				return Global_262145.f_15961 /* Tunable: DYNASTY8_OFFICE_PERSONNEL_MALE */;
			}
			return 0;
		case 2:
			return Global_262145.f_16825 /* Tunable: DYNASTY8_OFFICE_FONT_COST */;
		case 3:
			return 0;
		case 4:
			return Global_262145.f_15962 /* Tunable: DYNASTY8_OFFICE_GUNLOCKER */;
		case 5:
			return Global_262145.f_15963 /* Tunable: DYNASTY8_OFFICE_VAULT */;
		case 6:
			return Global_262145.f_15964 /* Tunable: DYNASTY8_OFFICE_ACCOMMODATION */;
		case 7:
			return Global_262145.f_15946 /* Tunable: EXEC1_RENAME_ORGANIZATION */;
		case 8:
		case 10:
		case 12:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_19599 /* Tunable: IMPEXP_GARAGE_LIGHTING1_COST */;
				case 1:
					return Global_262145.f_19600 /* Tunable: IMPEXP_GARAGE_LIGHTING2_COST */;
				case 2:
					return Global_262145.f_19601 /* Tunable: IMPEXP_GARAGE_LIGHTING3_COST */;
				case 3:
					return Global_262145.f_19602 /* Tunable: IMPEXP_GARAGE_LIGHTING4_COST */;
				case 4:
					return Global_262145.f_19603 /* Tunable: IMPEXP_GARAGE_LIGHTING5_COST */;
				case 5:
					return Global_262145.f_19604 /* Tunable: IMPEXP_GARAGE_LIGHTING6_COST */;
				case 6:
					return Global_262145.f_19605 /* Tunable: IMPEXP_GARAGE_LIGHTING7_COST */;
				case 7:
					return Global_262145.f_19606 /* Tunable: IMPEXP_GARAGE_LIGHTING8_COST */;
				case 8:
					return Global_262145.f_19607 /* Tunable: IMPEXP_GARAGE_LIGHTING9_COST */;
				default:
			}
			return 0;
			break;
		case 9:
		case 11:
		case 13:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_19608 /* Tunable: IMPEXP_GARAGE_SIGNAGE1_COST */;
				case 1:
					return Global_262145.f_19609 /* Tunable: IMPEXP_GARAGE_SIGNAGE2_COST */;
				case 2:
					return Global_262145.f_19610 /* Tunable: IMPEXP_GARAGE_SIGNAGE3_COST */;
				case 3:
					return Global_262145.f_19611 /* Tunable: IMPEXP_GARAGE_SIGNAGE4_COST */;
				case 4:
					return Global_262145.f_19612 /* Tunable: IMPEXP_GARAGE_SIGNAGE5_COST */;
				case 5:
					return Global_262145.f_19613 /* Tunable: IMPEXP_GARAGE_SIGNAGE6_COST */;
				case 6:
					return Global_262145.f_19614 /* Tunable: IMPEXP_GARAGE_SIGNAGE7_COST */;
				case 7:
					return Global_262145.f_19615 /* Tunable: IMPEXP_GARAGE_SIGNAGE8_COST */;
				case 8:
					return Global_262145.f_19616 /* Tunable: IMPEXP_GARAGE_SIGNAGE9_COST */;
				default:
			}
			return 0;
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_19617 /* Tunable: IMPEXP_MODSHOP_FLOORING1_PURCHASE_COST */;
				case 2:
					return Global_262145.f_19618 /* Tunable: IMPEXP_MODSHOP_FLOORING2_PURCHASE_COST */;
				case 3:
					return Global_262145.f_19619 /* Tunable: IMPEXP_MODSHOP_FLOORING3_PURCHASE_COST */;
				case 4:
					return Global_262145.f_19620 /* Tunable: IMPEXP_MODSHOP_FLOORING4_PURCHASE_COST */;
				case 5:
					return Global_262145.f_19621 /* Tunable: IMPEXP_MODSHOP_FLOORING5_PURCHASE_COST */;
				case 6:
					return Global_262145.f_19622 /* Tunable: IMPEXP_MODSHOP_FLOORING6_PURCHASE_COST */;
				case 7:
					return Global_262145.f_19623 /* Tunable: IMPEXP_MODSHOP_FLOORING7_PURCHASE_COST */;
				case 8:
					return Global_262145.f_19624 /* Tunable: IMPEXP_MODSHOP_FLOORING8_PURCHASE_COST */;
				case 9:
					return Global_262145.f_19625 /* Tunable: IMPEXP_MODSHOP_FLOORING9_PURCHASE_COST */;
				case 10:
					return Global_262145.f_19626 /* Tunable: IMPEXP_MODSHOP_FLOORING10_PURCHASE_COST */;
				case 11:
					return Global_262145.f_19627 /* Tunable: IMPEXP_MODSHOP_FLOORING11_PURCHASE_COST */;
				case 12:
					return Global_262145.f_19628 /* Tunable: IMPEXP_MODSHOP_FLOORING12_PURCHASE_COST */;
				case 13:
					return Global_262145.f_19629 /* Tunable: IMPEXP_MODSHOP_FLOORING13_PURCHASE_COST */;
				case 14:
					return Global_262145.f_19630 /* Tunable: IMPEXP_MODSHOP_FLOORING14_PURCHASE_COST */;
				case 15:
					return Global_262145.f_19631 /* Tunable: IMPEXP_MODSHOP_FLOORING15_PURCHASE_COST */;
				case 16:
					return Global_262145.f_19632 /* Tunable: IMPEXP_MODSHOP_FLOORING16_PURCHASE_COST */;
				case 17:
					return Global_262145.f_19633 /* Tunable: IMPEXP_MODSHOP_FLOORING17_PURCHASE_COST */;
				case 18:
					return Global_262145.f_19634 /* Tunable: IMPEXP_MODSHOP_FLOORING18_PURCHASE_COST */;
				case 19:
					return Global_262145.f_19635 /* Tunable: IMPEXP_MODSHOP_FLOORING19_PURCHASE_COST */;
				case 20:
					return Global_262145.f_19636 /* Tunable: IMPEXP_MODSHOP_FLOORING20_PURCHASE_COST */;
				default:
			}
			return 0;
			break;
	}
	return 0;
}

int func_198(int iParam0)//Position - 0x47F00
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 26);
	}
	return 0;
}

char* func_199(int iParam0)//Position - 0x48252
{
	switch (iParam0)
	{
		case 1:
			return "MP_ARC_1" /* GXT: Pixel Pete's - Paleto Bay */;
		case 2:
			return "MP_ARC_2" /* GXT: Wonderama - Grapeseed */;
		case 3:
			return "MP_ARC_3" /* GXT: Warehouse - Davis */;
		case 4:
			return "MP_ARC_4" /* GXT: Eight-Bit - Vinewood */;
		case 5:
			return "MP_ARC_5" /* GXT: Insert Coin - Rockford Hills */;
		case 6:
			return "MP_ARC_6" /* GXT: Videogeddon - La Mesa */;
		default:
	}
	return "";
}

bool func_200(int iParam0)//Position - 0x48AA9
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 0);
}

bool func_201(int iParam0)//Position - 0x48AC4
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 4);
}

bool func_202(int iParam0)//Position - 0x48E7E
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 5);
}

int func_203(int iParam0)//Position - 0x49E3C
{
	switch (iParam0)
	{
		case 0:
			return 6362;
		case 1:
			return 6363;
		case 2:
			return 6364;
		case 3:
			return 6365;
		case 4:
			return 6366;
		case 5:
			return 6367;
		default:
	}
	return 6362;
}

int func_204(int iParam0)//Position - 0x49EF0
{
	switch (iParam0)
	{
		case 0:
			return 6351;
		case 1:
			return 6352;
		case 2:
			return 6353;
		case 3:
			return 6354;
		case 4:
			return 6355;
		case 5:
			return 6356;
		default:
	}
	return 6351;
}

int func_205(int iParam0)//Position - 0x4C700
{
	switch (iParam0)
	{
		case 5:
		case 6:
		case 11:
		case 8:
		case 9:
		case 10:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 25:
		case 26:
			return 1;
			break;
		case -1:
			return 0;
			break;
	}
	return 0;
}

int func_206(int iParam0, int iParam1)//Position - 0x5162D
{
	if ((__LIB_1__::func_793(iParam0) && __LIB_1__::func_793(iParam1)) && __LIB_1__::func_794(iParam0) == __LIB_1__::func_794(iParam1))
	{
		return 1;
	}
	return 0;
}

int func_207(int iParam0)//Position - 0x53EA7
{
	switch (iParam0)
	{
		case 0:
			return 9861;
		case 1:
			return 9862;
		default:
	}
	return 13122;
}

void func_208(int iParam0, bool bParam1)//Position - 0x540E5
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 2))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 2);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 2))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 2);
		}
	}
}

void func_209(int iParam0, bool bParam1)//Position - 0x54167
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 1))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 1);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 1))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 1);
		}
	}
}

void func_210(int iParam0, bool bParam1)//Position - 0x541E9
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 0))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 0);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 0))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 0);
		}
	}
}

var func_211()//Position - 0x55434
{
	return Global_262145.f_31307 /* Tunable: -952160525 */;
}

void func_212(bool bParam0)//Position - 0x56BE1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 1))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 1);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 1))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 1);
	}
}

void func_213(bool bParam0)//Position - 0x56D07
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 28))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 28);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 28))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 28);
	}
}

void func_214(bool bParam0)//Position - 0x56D7C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 26))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 26);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 26))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 26);
	}
}

void func_215(bool bParam0)//Position - 0x56DF1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 11))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 11);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 11))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 11);
	}
}

void func_216(bool bParam0)//Position - 0x56E66
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 10))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 10);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 10))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 10);
	}
}

void func_217(bool bParam0)//Position - 0x56EDB
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 9);
	}
}

void func_218(bool bParam0)//Position - 0x56F50
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 8))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 8);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 8);
	}
}

void func_219(bool bParam0)//Position - 0x56FC5
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 7);
	}
}

void func_220(bool bParam0)//Position - 0x57036
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 6))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 6);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 6))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 6);
	}
}

void func_221(bool bParam0)//Position - 0x570A7
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 5))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 5);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 5))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 5);
	}
}

void func_222(bool bParam0)//Position - 0x57118
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 4);
	}
}

void func_223(bool bParam0)//Position - 0x57189
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 0))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 0);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 0))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 0);
	}
}

void func_224(bool bParam0)//Position - 0x571FA
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 24))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 24);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 24))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 24);
	}
}

void func_225(bool bParam0)//Position - 0x5726F
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 22))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 22);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 22))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 22);
	}
}

void func_226(bool bParam0)//Position - 0x572E4
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 21);
	}
}

void func_227(bool bParam0)//Position - 0x57359
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 20))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 20);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 20))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 20);
	}
}

void func_228(bool bParam0)//Position - 0x573CE
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 19))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 19);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 19))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 19);
	}
}

void func_229(bool bParam0)//Position - 0x57443
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 18))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 18);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 18))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 18);
	}
}

void func_230(bool bParam0)//Position - 0x574B8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 17))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 17);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 17))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 17);
	}
}

void func_231(bool bParam0)//Position - 0x5752D
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 16))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 16);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 16))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 16);
	}
}

void func_232(bool bParam0)//Position - 0x575A2
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 15))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 15);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 15))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 15);
	}
}

void func_233(bool bParam0)//Position - 0x57617
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 14))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 14);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 14))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 14);
	}
}

void func_234(bool bParam0)//Position - 0x5768C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 13))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 13);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 13))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 13);
	}
}

void func_235(bool bParam0)//Position - 0x57701
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 12))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 12);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 12))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 12);
	}
}

void func_236(bool bParam0)//Position - 0x57776
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 10))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 10);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 10))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 10);
	}
}

void func_237(bool bParam0)//Position - 0x577EB
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 9);
	}
}

void func_238(bool bParam0)//Position - 0x57860
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 8))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 8);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 8);
	}
}

void func_239(bool bParam0)//Position - 0x578D5
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 7);
	}
}

void func_240(bool bParam0)//Position - 0x57946
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 6))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 6);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 6))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 6);
	}
}

void func_241(bool bParam0)//Position - 0x579B7
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 5))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 5);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 5))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 5);
	}
}

void func_242(bool bParam0)//Position - 0x57A28
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 4);
	}
}

void func_243(bool bParam0)//Position - 0x57A99
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 3))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 3);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 3))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 3);
	}
}

void func_244(int iParam0, bool bParam1)//Position - 0x57C09
{
	bool bVar0;
	bVar0 = iParam0;
	if (bParam1)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414, bVar0))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414), bVar0);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414, bVar0))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414), bVar0);
	}
}

void func_245()//Position - 0x5A322
{
	if (__LIB_0__::func_137(22139, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 20);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 20);
	}
	if (__LIB_0__::func_137(22138, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 19);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 19);
	}
	if (__LIB_0__::func_137(22137, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 18);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 18);
	}
}

int func_246(int iParam0, int iParam1)//Position - 0x5B2A0
{
	int iVar0;
	iVar0 = -1;
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					iVar0 = 7;
					break;
				case 1:
					iVar0 = 8;
					break;
				case 2:
					iVar0 = 9;
					break;
				case 3:
					iVar0 = 10;
					break;
				case 4:
					iVar0 = 11;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					iVar0 = 0;
					break;
				case 6:
					iVar0 = 1;
					break;
				case 7:
					iVar0 = 2;
					break;
				case 8:
					iVar0 = 3;
					break;
				case 9:
					iVar0 = 4;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					iVar0 = 12;
					break;
				case 11:
					iVar0 = 13;
					break;
				case 12:
					iVar0 = 14;
					break;
				case 13:
					iVar0 = 15;
					break;
			}
			break;
		case 3:
			iVar0 = 5;
			break;
		case 4:
			iVar0 = 6;
			break;
	}
	return iVar0;
}

bool func_247(int iParam0)//Position - 0x5B80C
{
	return (iParam0 != -1 && iParam0 != 2);
}

bool func_248(int iParam0)//Position - 0x5B868
{
	return (iParam0 == 1 || iParam0 == 0);
}

int func_249(int iParam0, int iParam1)//Position - 0x5B87E
{
	switch (iParam0)
	{
		case 1:
			return (iParam1 >= 1 && iParam1 <= 5);
		case 0:
			return (iParam1 >= 6 && iParam1 <= 15);
		default:
	}
	return 0;
}

void func_250(int iParam0)//Position - 0x5D934
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_23[iVar0]), iVar1);
}

bool func_251(int iParam0)//Position - 0x5D95D
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_23[iVar0], iVar1);
}

void func_252(int iParam0)//Position - 0x5F769
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_21[iVar0]), iVar1);
}

bool func_253(int iParam0)//Position - 0x5F792
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_21[iVar0], iVar1);
}

int func_254(int iParam0, int iParam1)//Position - 0x60C06
{
	if (iParam1 == joaat("WEAPON_KNUCKLE"))
	{
		if (__LIB_0__::func_137(7450, -1))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if (iParam1 == joaat("WEAPON_MUSKET"))
	{
		if (__LIB_0__::func_137(7454, -1))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	switch (iParam0)
	{
		case joaat("GROUP_MELEE"):
			if (__LIB_0__::func_137(7450, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_PISTOL"):
			if (__LIB_0__::func_137(7451, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_HEAVY"):
			if (__LIB_0__::func_137(7456, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_SNIPER"):
			if (__LIB_0__::func_137(7455, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_SHOTGUN"):
			if (__LIB_0__::func_137(7454, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_THROWN"):
			if (__LIB_0__::func_137(7457, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_MG"):
		case joaat("GROUP_SMG"):
			if (__LIB_0__::func_137(7452, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_RIFLE"):
			if (__LIB_0__::func_137(7453, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
	}
	if (iParam1 == joaat("WEAPON_PETROLCAN") && __LIB_0__::func_137(7457, -1))
	{
		return 1;
	}
	return 0;
}

int func_255(int iParam0)//Position - 0x6E123
{
	switch (iParam0)
	{
		case 2:
			return Global_262145.f_18113 /* Tunable: BIKER_BUSINESS_PALETO_BAY_WEED_FARM_BASE */;
		case 1:
			return Global_262145.f_18109 /* Tunable: BIKER_BUSINESS_PALETO_BAY_METH_LAB_BASE */;
		case 3:
			return Global_262145.f_18105 /* Tunable: BIKER_BUSINESS_PALETO_BAY_COCAINE_LOCKUP_BASE */;
		case 5:
			return Global_262145.f_18097 /* Tunable: BIKER_BUSINESS_PALETO_BAY_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 4:
			return Global_262145.f_18101 /* Tunable: BIKER_BUSINESS_PALETO_BAY_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 7:
			return Global_262145.f_18114 /* Tunable: BIKER_BUSINESS_CITY_WEED_FARM_BASE */;
		case 6:
			return Global_262145.f_18110 /* Tunable: BIKER_BUSINESS_CITY_METH_LAB_BASE */;
		case 8:
			return Global_262145.f_18106 /* Tunable: BIKER_BUSINESS_CITY_COCAINE_LOCKUP_BASE */;
		case 10:
			return Global_262145.f_18098 /* Tunable: BIKER_BUSINESS_CITY_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 9:
			return Global_262145.f_18102 /* Tunable: BIKER_BUSINESS_CITY_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 12:
			return Global_262145.f_18115 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_WEED_FARM_BASE */;
		case 11:
			return Global_262145.f_18111 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_METH_LAB_BASE */;
		case 13:
			return Global_262145.f_18107 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_COCAINE_LOCKUP_BASE */;
		case 15:
			return Global_262145.f_18099 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 14:
			return Global_262145.f_18103 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 17:
			return Global_262145.f_18116 /* Tunable: BIKER_BUSINESS_ELYSIAN_WEED_FARM_BASE */;
		case 16:
			return Global_262145.f_18112 /* Tunable: BIKER_BUSINESS_ELYSIAN_METH_LAB_BASE */;
		case 18:
			return Global_262145.f_18108 /* Tunable: BIKER_BUSINESS_ELYSIAN_COCAINE_LOCKUP_BASE */;
		case 20:
			return Global_262145.f_18100 /* Tunable: BIKER_BUSINESS_ELYSIAN_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 19:
			return Global_262145.f_18104 /* Tunable: BIKER_BUSINESS_ELYSIAN_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 21:
			return 2035000;
		case 22:
			return 2120000;
		case 23:
			return 1950000;
		case 24:
			return 2375000;
		case 25:
			return 2205000;
		case 26:
			return 2290000;
		case 27:
			return 1750000;
		case 28:
			return 1165000;
		case 29:
			return 1450000;
		case 30:
			return 1550000;
		case 31:
			return 1650000;
		default:
	}
	return 0;
}

int func_256(int iParam0)//Position - 0x6E337
{
	switch (iParam0)
	{
		case 0:
			return 9456;
		case 1:
			return 9457;
		case 2:
			return 9458;
		case 3:
			return 9459;
		case 4:
			return 9460;
		case 5:
			return 15370;
		default:
	}
	return 9456;
}

int func_257(int iParam0)//Position - 0x6E463
{
	switch (iParam0)
	{
		case 0:
			return 3959;
		case 1:
			return 3960;
		case 2:
			return 3961;
		case 3:
			return 3962;
		case 4:
			return 3963;
		case 5:
			return 5460;
		default:
	}
	return 3959;
}

void func_258(int iParam0)//Position - 0x6E508
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_19[iVar0]), iVar1);
}

bool func_259(int iParam0)//Position - 0x6E531
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_19[iVar0], iVar1);
}

void func_260(int iParam0)//Position - 0x6E557
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(Global_2815059.f_5195.f_19[iVar0]), iVar1);
}

int func_261(int iParam0)//Position - 0x6F7A2
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT5_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_262(int iParam0, bool bParam1)//Position - 0x707F6
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 26))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 26);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 26))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 26);
		}
	}
}

void func_263(int iParam0, bool bParam1)//Position - 0x7086C
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 25))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 25);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 25))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 25);
		}
	}
}

void func_264(int iParam0, bool bParam1)//Position - 0x708E2
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 24))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 24);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 24))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 24);
		}
	}
}

int func_265(int iParam0)//Position - 0x73292
{
	switch (iParam0)
	{
		case 87:
		case 88:
		case 89:
		case 90:
			return 5;
			break;
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
			return 6;
			break;
		case 103:
		case 106:
		case 109:
		case 112:
			return 8;
			break;
		case 104:
		case 107:
		case 110:
		case 113:
			return 9;
			break;
		case 105:
		case 108:
		case 111:
		case 114:
			return 10;
			break;
		case 116:
			return 12;
			break;
		case 118:
			return 14;
			break;
		case 119:
			return 15;
			break;
		case 120:
			return 16;
			break;
		case 121:
			return 17;
			break;
		case 122:
			return 18;
			break;
		case 123:
			return 19;
			break;
		case 124:
			return 20;
			break;
		case 125:
			return 21;
			break;
		case 126:
			return 22;
			break;
		case 127:
			return 25;
			break;
		case 128:
			return 26;
			break;
	}
	return -1;
}

int func_266(int iParam0)//Position - 0x73418
{
	switch (iParam0)
	{
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 106:
		case 109:
		case 112:
		case 104:
		case 107:
		case 110:
		case 113:
		case 105:
		case 108:
		case 111:
		case 114:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 127:
		case 128:
		case 116:
			return 1;
			break;
		case -1:
			return 0;
			break;
	}
	return 0;
}

int func_267()//Position - 0x786EE
{
	return 10388;
}

void func_268(int iParam0)//Position - 0xC23D2
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		MISC::CLEAR_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_20), iParam0);
	}
}

bool func_269(int iParam0)//Position - 0xC57A4
{
	return __LIB_0__::func_165(iParam0, 30);
}

void func_270()//Position - 0xC5FA4
{
	int iVar0;
	iVar0 = __LIB_0__::func_993(17);
	Global_2676732[iVar0 /*83*/] = 17;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_271()//Position - 0xC5FD2
{
	int iVar0;
	iVar0 = __LIB_0__::func_993(16);
	Global_2676732[iVar0 /*83*/] = 16;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_272()//Position - 0xC6029
{
	int iVar0;
	iVar0 = __LIB_0__::func_993(15);
	Global_2676732[iVar0 /*83*/] = 15;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_273(bool bParam0)//Position - 0xC735D
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 3))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 3);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 3))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 3);
	}
}

int func_274(int iParam0)//Position - 0xC83B1
{
	switch (iParam0)
	{
		case 0:
			return 21;
		case 1:
			return 22;
		case 2:
			return 23;
		case 3:
			return 24;
		case 4:
			return 25;
		case 5:
			return 26;
		case 6:
			return 27;
		case 7:
			return 28;
		case 8:
			return 29;
		default:
	}
	return 21;
}

void func_275(int iParam0)//Position - 0xC8B02
{
	int iVar0;
	if (iParam0 == 0)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_16 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_17 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_18 = 0;
	}
	else if (iParam0 == 1)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_19 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_20 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_21 = 0;
	}
	else if (iParam0 == 2)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_22 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_23 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_24 = 0;
	}
	else if (iParam0 == 3)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_25 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_26 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_27 = 0;
	}
	else if (iParam0 == 4)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_28 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_29 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_30 = 0;
	}
	else if (iParam0 == 99)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_31 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_32 = 0;
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_33 = 0;
	}
	else if (iParam0 >= 5)
	{
		iVar0 = 0;
		while (iVar0 < 22)
		{
			Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_36[iVar0] = 0;
			Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_59[iVar0] = 0;
			Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_82[iVar0] = 0;
			iVar0++;
		}
	}
}

int func_276(int iParam0)//Position - 0xC8CD0
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_PROPERTY_HOUSE_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_v0", 64);
			break;
		case 6:
			StringCopy(&cVar0, "MP_STAT_PROP_CLUBHOUSE_v0", 64);
			break;
		case 7:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_5_v0", 64);
			break;
		case 8:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR1_v0", 64);
			break;
		case 9:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR2_v0", 64);
			break;
		case 10:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR3_v0", 64);
			break;
		case 11:
			StringCopy(&cVar0, "MP_STAT_PROP_IE_WAREHOUSE_v0", 64);
			break;
		case 23:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_6_v0", 64);
			break;
		case 24:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_7_v0", 64);
			break;
		case 27:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_8_v0", 64);
			break;
		case 28:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_9_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_277(bool bParam0)//Position - 0xCAD90
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 4);
	}
}

void func_278(int iParam0, bool bParam1)//Position - 0xCADF9
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 24))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 24);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 24))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 24);
		}
	}
}

void func_279(int iParam0, bool bParam1)//Position - 0xCAE7F
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 23))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 23);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 23))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 23);
		}
	}
}

void func_280(bool bParam0)//Position - 0xD57F0
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 6))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 6);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 6))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 6);
	}
}

void func_281(bool bParam0)//Position - 0xD58D1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 19))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 19);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 19))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 19);
	}
}

void func_282(bool bParam0)//Position - 0xD5F40
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 29))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 29);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 29))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 29);
	}
}

void func_283(bool bParam0)//Position - 0xD89C9
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 1))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 1);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 1))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 1);
	}
}

void func_284()//Position - 0xD8C4A
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274 = 0;
	switch (__LIB_0__::func_253(15267, -1))
	{
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 13))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 13);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 0))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 0);
			}
			break;
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 1))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 1);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 2))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 2);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 3))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 3);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 4))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 4);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 5))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 5);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 6))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 6);
			}
			break;
		case 9:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 7))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 7);
			}
			break;
		case 10:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 8))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 8);
			}
			break;
		case 11:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 9))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 9);
			}
			break;
		case 12:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 10))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 10);
			}
			break;
		case 13:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 11))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 11);
			}
			break;
		case 14:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 12))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 12);
			}
			break;
		default:
			break;
	}
}

void func_285()//Position - 0xD9091
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273 = 0;
	switch (__LIB_0__::func_253(15268, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 0))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 0);
			}
			break;
		case 2:
			if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 0))
			{
				MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 0);
			}
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 3))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 3);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 6))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 6);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 9))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 9);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 12))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 12);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 15))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 15);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 18))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 18);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 21))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 21);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 24))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 24);
			}
			break;
		default:
			break;
	}
	switch (__LIB_0__::func_253(15269, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 1))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 1);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 4))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 4);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 7))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 7);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 10))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 10);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 13))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 13);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 16))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 16);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 22))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 22);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 25))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 25);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 19))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 19);
			}
			break;
		default:
			break;
	}
	switch (__LIB_0__::func_253(15270, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 2))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 2);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 5))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 5);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 8))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 8);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 11))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 11);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 14))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 14);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 17))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 17);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 20))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 20);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 23))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 23);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 26))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 26);
			}
			break;
		default:
			break;
	}
}

void func_286(bool bParam0)//Position - 0xD96DF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 13))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 13);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 13))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 13);
	}
}

void func_287(bool bParam0)//Position - 0xD9740
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 7);
	}
}

void func_288(bool bParam0)//Position - 0xD97A9
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 24))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 24);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 24))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 24);
	}
}

void func_289(bool bParam0)//Position - 0xD9816
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 25))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 25);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 25))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 25);
	}
}

void func_290(int iParam0, int iParam1, int iParam2)//Position - 0xD98E0
{
	int iVar0;
	if (iParam1 == -1)
	{
		iParam1 = 255;
	}
	__LIB_12__::func_806(iParam0, &iVar0);
	__LIB_1__::func_379(iVar0, iParam1, iParam2);
}

bool func_291(char* sParam0, int iParam1, int iParam2)//Position - 0x10B4F8
{
	HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(sParam0);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
	return HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
}

void func_292(int iParam0, int iParam1, int iParam2)//Position - 0x10EC1F
{
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && NETWORK::IS_STORE_AVAILABLE_TO_USER())
	{
		Global_75653 = iParam0;
		Global_75654 = iParam1;
		Global_75652 = 1;
		Global_4539884 = iParam2;
	}
}

bool func_293()//Position - 0x116A6A
{
	return __LIB_0__::func_113(joaat("rcbandito"));
}

int func_294(int iParam0, int iParam1, int iParam2)//Position - 0x11B81F
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28445 /* Tunable: CH_ARCADE_FLOOR_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28544 /* Tunable: CH_ARCADE_FLOOR_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28545 /* Tunable: CH_ARCADE_FLOOR_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28546 /* Tunable: CH_ARCADE_FLOOR_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28547 /* Tunable: CH_ARCADE_FLOOR_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28548 /* Tunable: CH_ARCADE_FLOOR_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28549 /* Tunable: CH_ARCADE_FLOOR_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28550 /* Tunable: CH_ARCADE_FLOOR_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28551 /* Tunable: CH_ARCADE_FLOOR_8_BASE_PRICE */;
				default:
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28433 /* Tunable: CH_ARCADE_STYLE_RETRO_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28434 /* Tunable: CH_ARCADE_STYLE_MIRRORED_BASE_PRICE */;
				case 2:
					return Global_262145.f_28435 /* Tunable: CH_ARCADE_STYLE_HIPSTER_BASE_PRICE */;
				default:
			}
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28436 /* Tunable: CH_ARCADE_MURAL_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28535 /* Tunable: CH_ARCADE_MURAL_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28536 /* Tunable: CH_ARCADE_MURAL_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28537 /* Tunable: CH_ARCADE_MURAL_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28538 /* Tunable: CH_ARCADE_MURAL_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28539 /* Tunable: CH_ARCADE_MURAL_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28540 /* Tunable: CH_ARCADE_MURAL_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28541 /* Tunable: CH_ARCADE_MURAL_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28542 /* Tunable: CH_ARCADE_MURAL_8_BASE_PRICE */;
				default:
			}
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28562 /* Tunable: CH_ARCADE_QUARTERS_BASE_PRICE */;
				default:
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28563 /* Tunable: CH_ARCADE_GARAGE_BASE_PRICE */;
				default:
			}
			break;
		case 5:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28454 /* Tunable: CH_ARCADE_NEON_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28553 /* Tunable: CH_ARCADE_NEON_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28554 /* Tunable: CH_ARCADE_NEON_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28555 /* Tunable: CH_ARCADE_NEON_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28556 /* Tunable: CH_ARCADE_NEON_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28557 /* Tunable: CH_ARCADE_NEON_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28558 /* Tunable: CH_ARCADE_NEON_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28559 /* Tunable: CH_ARCADE_NEON_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28560 /* Tunable: CH_ARCADE_NEON_8_BASE_PRICE */;
				default:
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28561 /* Tunable: CH_ARCADE_HIGHSCORE_BASE_PRICE */;
				default:
			}
			break;
		case 8:
			return Global_262145.f_28423 /* Tunable: CH_ARCADE_UPGRADE_CONTROL_BASE_PRICE */;
		case 7:
			return Global_262145.f_28424 /* Tunable: CH_ARCADE_UPGRADE_DRONE_BASE_PRICE */;
	}
	return 0;
}

int func_295(int iParam0, int iParam1, int iParam2)//Position - 0x11CAC1
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 140000;
					break;
				case 2:
					return 147000;
					break;
				case 3:
					return 154350;
					break;
				case 4:
					return 0;
					break;
			}
			return 0;
			break;
		case 3:
			return 695000;
			break;
		case 4:
			return 1425000;
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 141000;
					break;
				case 2:
					return 184500;
					break;
				case 3:
					return 240500;
					break;
				case 4:
					return 312000;
					break;
			}
			return 0;
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 395000;
					break;
				case 2:
					return 414750;
					break;
				case 3:
					return 435500;
					break;
				case 4:
					return 457300;
					break;
			}
			return 0;
			break;
		case 5:
			return 95000;
			break;
	}
	return 0;
}

int func_296(int iParam0, int iParam1, int iParam2)//Position - 0x11CC21
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return 175000;
					break;
				case 1:
					return 225000;
					break;
				case 2:
					return 300000;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return 35000;
					break;
				case 1:
					return 88000;
					break;
				case 2:
					return 140000;
					break;
				case 3:
					return 217500;
					break;
				case 4:
					return 295000;
					break;
			}
			break;
		case 2:
		case 7:
		case 8:
			return 100000;
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 213500;
					break;
				case 2:
					return 213500;
					break;
				case 3:
					return 233500;
					break;
				case 4:
					return 220000;
					break;
				case 5:
					return 220000;
					break;
				case 6:
					return 240000;
					break;
				case 7:
					return 235000;
					break;
				case 8:
					return 235000;
					break;
				case 9:
					return 255000;
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 345000;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return 33500;
					break;
				case 1:
					return 33500;
					break;
				case 2:
					return 33500;
					break;
				case 3:
					return 33500;
					break;
				case 4:
					return 33500;
					break;
				case 5:
					return 33500;
					break;
				case 6:
					return 33500;
					break;
				case 7:
					return 33500;
					break;
				case 8:
					return 33500;
					break;
			}
			break;
		case 5:
			return 475000;
			break;
	}
	return 0;
}

int func_297(int iParam0)//Position - 0x11F903
{
	switch (iParam0)
	{
		case 2:
			return Global_262145.f_18259 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_0 */;
		case 1:
			return Global_262145.f_18271 /* Tunable: BIKER_DISABLE_PURCHASE_METH_0 */;
		case 3:
			return Global_262145.f_18275 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_0 */;
		case 5:
			return Global_262145.f_18263 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_0 */;
		case 4:
			return Global_262145.f_18267 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_0 */;
		case 7:
			return Global_262145.f_18260 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_1 */;
		case 6:
			return Global_262145.f_18272 /* Tunable: BIKER_DISABLE_PURCHASE_METH_1 */;
		case 8:
			return Global_262145.f_18276 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_1 */;
		case 10:
			return Global_262145.f_18264 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_1 */;
		case 9:
			return Global_262145.f_18268 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_1 */;
		case 12:
			return Global_262145.f_18261 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_2 */;
		case 11:
			return Global_262145.f_18273 /* Tunable: BIKER_DISABLE_PURCHASE_METH_2 */;
		case 13:
			return Global_262145.f_18277 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_2 */;
		case 15:
			return Global_262145.f_18265 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_2 */;
		case 14:
			return Global_262145.f_18269 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_2 */;
		case 17:
			return Global_262145.f_18262 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_3 */;
		case 16:
			return Global_262145.f_18274 /* Tunable: BIKER_DISABLE_PURCHASE_METH_3 */;
		case 18:
			return Global_262145.f_18278 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_3 */;
		case 20:
			return Global_262145.f_18266 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_3 */;
		case 19:
			return Global_262145.f_18270 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_3 */;
		case 21:
			return 0;
		case 22:
			return 0;
		case 23:
			return 0;
		case 24:
			return 0;
		case 25:
			return 0;
		case 26:
			return 0;
		case 27:
			return 0;
		case 28:
			return 0;
		case 29:
			return 0;
		case 30:
			return 0;
		case 31:
			return 0;
		default:
	}
	return 1;
}

struct<4> func_298(int iParam0, int iParam1)//Position - 0x120169
{
	struct<4> Var0;
	int iVar1;
	switch (iParam1)
	{
		case 4:
			StringCopy(&Var0, "MP_BWH_CRACK_", 16);
			break;
		case 1:
			StringCopy(&Var0, "MP_BWH_WEED_", 16);
			break;
		case 2:
			StringCopy(&Var0, "MP_BWH_FCASH_", 16);
			break;
		case 3:
			StringCopy(&Var0, "MP_BWH_METH_", 16);
			break;
		case 0:
			StringCopy(&Var0, "MP_BWH_FID_", 16);
			break;
		case 5:
			StringCopy(&Var0, "MP_BWH_WEA_", 16);
			break;
	}
	iVar1 = iParam0;
	if (iParam1 == 5)
	{
		iVar1 = (iVar1 - 21);
		StringIntConCat(&Var0, iVar1, 16);
	}
	else
	{
		StringIntConCat(&Var0, SYSTEM::CEIL((SYSTEM::TO_FLOAT(iVar1) / 5f)), 16);
	}
	StringConCat(&Var0, "D", 16);
	return Var0;
}

int func_299(int iParam0)//Position - 0x12031B
{
	if (Global_262145.f_13123 /* Tunable: APT_DISABLE_CUSTOM1 */ && iParam0 == 83)
	{
		return 1;
	}
	else if (Global_262145.f_13124 /* Tunable: APT_DISABLE_CUSTOM2 */ && iParam0 == 84)
	{
		return 1;
	}
	else if (Global_262145.f_13125 /* Tunable: APT_DISABLE_CUSTOM3 */ && iParam0 == 85)
	{
		return 1;
	}
	else if (Global_262145.f_13135 /* Tunable: APT_DISABLE_STILT1 */ && iParam0 == 73)
	{
		return 1;
	}
	else if (Global_262145.f_13136 /* Tunable: APT_DISABLE_STILT2 */ && iParam0 == 74)
	{
		return 1;
	}
	else if (Global_262145.f_13137 /* Tunable: APT_DISABLE_STILT3 */ && iParam0 == 75)
	{
		return 1;
	}
	else if (Global_262145.f_13138 /* Tunable: APT_DISABLE_STILT4 */ && iParam0 == 76)
	{
		return 1;
	}
	else if (Global_262145.f_13139 /* Tunable: APT_DISABLE_STILT5 */ && iParam0 == 77)
	{
		return 1;
	}
	else if (Global_262145.f_13140 /* Tunable: APT_DISABLE_STILT6 */ && iParam0 == 78)
	{
		return 1;
	}
	else if (Global_262145.f_13141 /* Tunable: APT_DISABLE_STILT7 */ && iParam0 == 79)
	{
		return 1;
	}
	else if (Global_262145.f_13142 /* Tunable: APT_DISABLE_STILT8 */ && iParam0 == 80)
	{
		return 1;
	}
	else if (Global_262145.f_13143 /* Tunable: APT_DISABLE_STILT9 */ && iParam0 == 81)
	{
		return 1;
	}
	else if (Global_262145.f_13144 /* Tunable: APT_DISABLE_STILT10 */ && iParam0 == 82)
	{
		return 1;
	}
	if (Global_262145.f_18247 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_0 */ && iParam0 == 91)
	{
		return 1;
	}
	else if (Global_262145.f_18248 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_1 */ && iParam0 == 92)
	{
		return 1;
	}
	else if (Global_262145.f_18249 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_2 */ && iParam0 == 93)
	{
		return 1;
	}
	else if (Global_262145.f_18250 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_3 */ && iParam0 == 94)
	{
		return 1;
	}
	else if (Global_262145.f_18251 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_4 */ && iParam0 == 95)
	{
		return 1;
	}
	else if (Global_262145.f_18252 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_5 */ && iParam0 == 96)
	{
		return 1;
	}
	else if (Global_262145.f_18253 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_6 */ && iParam0 == 97)
	{
		return 1;
	}
	else if (Global_262145.f_18254 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_7 */ && iParam0 == 98)
	{
		return 1;
	}
	else if (Global_262145.f_18255 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_8 */ && iParam0 == 99)
	{
		return 1;
	}
	else if (Global_262145.f_18256 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_9 */ && iParam0 == 100)
	{
		return 1;
	}
	else if (Global_262145.f_18257 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_10 */ && iParam0 == 101)
	{
		return 1;
	}
	else if (Global_262145.f_18258 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_11 */ && iParam0 == 102)
	{
		return 1;
	}
	return 0;
}

int func_300(int iParam0)//Position - 0x12113E
{
	switch (iParam0)
	{
		case 1:
			return 400000;
			break;
		case 2:
			return 373000;
			break;
		case 3:
			return 391000;
			break;
		case 4:
			return 382000;
			break;
		case 5:
			return 217000;
			break;
		case 6:
			return 223000;
			break;
		case 7:
			return 205000;
			break;
		case 34:
			return 200000;
			break;
		case 35:
			return 335000;
			break;
		case 36:
			return 319000;
			break;
		case 37:
			return 304000;
			break;
		case 38:
			return 235000;
			break;
		case 39:
			return 247000;
			break;
		case 40:
			return 241000;
			break;
		case 41:
			return 253000;
			break;
		case 42:
			return 270000;
			break;
		case 43:
			return 286000;
			break;
		case 8:
			return 130000;
			break;
		case 9:
			return 128000;
			break;
		case 10:
			return 126000;
			break;
		case 11:
			return 146000;
			break;
		case 12:
			return 125000;
			break;
		case 13:
			return 141000;
			break;
		case 14:
			return 150000;
			break;
		case 15:
			return 137000;
			break;
		case 16:
			return 134000;
			break;
		case 17:
			return 115000;
			break;
		case 18:
			return 99000;
			break;
		case 19:
			return 80000;
			break;
		case 20:
			return 87000;
			break;
		case 21:
			return 112000;
			break;
		case 22:
			return 105000;
			break;
		case 23:
			return 93000;
			break;
		case 24:
			return 150000;
			break;
		case 25:
			return 77500;
			break;
		case 26:
			return 142500;
			break;
		case 27:
			return 135000;
			break;
		case 28:
			return 70000;
			break;
		case 29:
			return 29500;
			break;
		case 30:
			return 32000;
			break;
		case 31:
			return 25000;
			break;
		case 32:
			return 80000;
			break;
		case 33:
			return 72500;
			break;
		case 44:
			return 26500;
			break;
		case 45:
			return 26000;
			break;
		case 46:
			return 27500;
			break;
		case 47:
			return 32000;
			break;
		case 48:
			return 31500;
			break;
		case 49:
			return 29000;
			break;
		case 50:
			return 62500;
			break;
		case 51:
			return 28000;
			break;
		case 52:
			return 65000;
			break;
		case 53:
			return 75000;
			break;
		case 54:
			return 105000;
			break;
		case 55:
			return 67500;
			break;
		case 56:
			return 112500;
			break;
		case 57:
			return 120000;
			break;
		case 58:
			return 34000;
			break;
		case 59:
			return 33500;
			break;
		case 60:
			return 35000;
			break;
		case 61:
			return 500000;
			break;
		case 62:
			return 468000;
			break;
		case 63:
			return 484000;
			break;
		case 64:
			return 492000;
			break;
		case 65:
			return 476000;
			break;
		case 66:
			return 175000;
			break;
		case 67:
			return 143000;
			break;
		case 68:
			return 155000;
			break;
		case 69:
			return 165000;
			break;
		case 70:
			return 121000;
			break;
		case 71:
			return 120000;
			break;
		case 72:
			return 118000;
			break;
		case 73:
			return 800000;
		case 74:
			return 762000;
		case 75:
			return 672000;
		case 76:
			return 705000;
		case 77:
			return 478000;
		case 78:
			return 608000;
		case 79:
			return 525000;
		case 80:
			return 571000;
		case 81:
			return 449000;
		case 82:
			return 727000;
		case 83:
			return 985000;
		case 84:
			return 905000;
		case 85:
			return 1100000;
		case 86:
			return 27000000;
		case 87:
			return 3100000;
		case 88:
			return 1000000;
		case 89:
			return 2250000;
		case 90:
			return 4000000;
		case 91:
			return 420000;
		case 92:
			return 365000;
		case 93:
			return 455000;
		case 94:
			return 200000;
		case 95:
			return 242000;
		case 96:
			return 210000;
		case 97:
			return 449000;
		case 98:
			return 472000;
		case 99:
			return 495000;
		case 100:
			return 225000;
		case 101:
			return 250000;
		case 102:
			return 395000;
		case 103:
			return 1150000;
		case 104:
			return 855000;
		case 105:
			return 745000;
		case 106:
			return 1150000;
		case 107:
			return 855000;
		case 108:
			return 745000;
		case 109:
			return 1150000;
		case 110:
			return 855000;
		case 111:
			return 745000;
		case 112:
			return 1150000;
		case 113:
			return 855000;
		case 114:
			return 745000;
		case 115:
			return 3000000;
	}
	return 0;
}

int func_301(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x12226F
{
	int iVar0;
	iVar0 = MISC::GET_HASH_KEY(&uParam0);
	if (iVar0 == Global_262145.f_13425 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE0 */)
	{
		*iParam4 = 0;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13426 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE1 */)
	{
		*iParam4 = 1;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13427 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE2 */)
	{
		*iParam4 = 2;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13428 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE3 */)
	{
		*iParam4 = 3;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13429 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE4 */)
	{
		*iParam4 = 4;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13430 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE5 */)
	{
		*iParam4 = 5;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13431 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE6 */)
	{
		*iParam4 = 6;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13432 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE7 */)
	{
		*iParam4 = 7;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13433 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE8 */)
	{
		*iParam4 = 8;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13434 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE9 */)
	{
		*iParam4 = 9;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13435 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE10 */)
	{
		*iParam4 = 10;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13436 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE11 */)
	{
		*iParam4 = 11;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13437 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE12 */)
	{
		*iParam4 = 12;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13438 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE13 */)
	{
		*iParam4 = 13;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13439 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE14 */)
	{
		*iParam4 = 14;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13440 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE15 */)
	{
		*iParam4 = 15;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13441 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE16 */)
	{
		*iParam4 = 16;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13442 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE17 */)
	{
		*iParam4 = 17;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13443 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE18 */)
	{
		*iParam4 = 18;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13444 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE19 */)
	{
		*iParam4 = 19;
		return 1;
	}
	*iParam4 = -1;
	return 0;
}

int func_302(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x137913
{
	int iVar0;
	if (Global_262145.f_13359 /* Tunable: REBATE_PROPERTY_ALL */)
	{
		*iParam4 = joaat("REBATE_PROPERTY_ALL");
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(&uParam0);
	if (iVar0 == Global_262145.f_12762 /* Tunable: REBATE_PROPERTY_0 */)
	{
		*iParam4 = 0;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12763 /* Tunable: REBATE_PROPERTY_1 */)
	{
		*iParam4 = 1;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12764 /* Tunable: REBATE_PROPERTY_2 */)
	{
		*iParam4 = 2;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12765 /* Tunable: REBATE_PROPERTY_3 */)
	{
		*iParam4 = 3;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12766 /* Tunable: REBATE_PROPERTY_4 */)
	{
		*iParam4 = 4;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12767 /* Tunable: REBATE_PROPERTY_5 */)
	{
		*iParam4 = 5;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12768 /* Tunable: REBATE_PROPERTY_6 */)
	{
		*iParam4 = 6;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12769 /* Tunable: REBATE_PROPERTY_7 */)
	{
		*iParam4 = 7;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12770 /* Tunable: REBATE_PROPERTY_8 */)
	{
		*iParam4 = 8;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12771 /* Tunable: REBATE_PROPERTY_9 */)
	{
		*iParam4 = 9;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12772 /* Tunable: REBATE_PROPERTY_10 */)
	{
		*iParam4 = 10;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12773 /* Tunable: REBATE_PROPERTY_11 */)
	{
		*iParam4 = 11;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12774 /* Tunable: REBATE_PROPERTY_12 */)
	{
		*iParam4 = 12;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12775 /* Tunable: REBATE_PROPERTY_13 */)
	{
		*iParam4 = 13;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12776 /* Tunable: REBATE_PROPERTY_14 */)
	{
		*iParam4 = 14;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12777 /* Tunable: REBATE_PROPERTY_15 */)
	{
		*iParam4 = 15;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12778 /* Tunable: REBATE_PROPERTY_16 */)
	{
		*iParam4 = 16;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12779 /* Tunable: REBATE_PROPERTY_17 */)
	{
		*iParam4 = 17;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12780 /* Tunable: REBATE_PROPERTY_18 */)
	{
		*iParam4 = 18;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12781 /* Tunable: REBATE_PROPERTY_19 */)
	{
		*iParam4 = 19;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12782 /* Tunable: REBATE_PROPERTY_20 */)
	{
		*iParam4 = 20;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12783 /* Tunable: REBATE_PROPERTY_21 */)
	{
		*iParam4 = 21;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12784 /* Tunable: REBATE_PROPERTY_22 */)
	{
		*iParam4 = 22;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12785 /* Tunable: REBATE_PROPERTY_23 */)
	{
		*iParam4 = 23;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12786 /* Tunable: REBATE_PROPERTY_24 */)
	{
		*iParam4 = 24;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12787 /* Tunable: REBATE_PROPERTY_25 */)
	{
		*iParam4 = 25;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12788 /* Tunable: REBATE_PROPERTY_26 */)
	{
		*iParam4 = 26;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12789 /* Tunable: REBATE_PROPERTY_27 */)
	{
		*iParam4 = 27;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12790 /* Tunable: REBATE_PROPERTY_28 */)
	{
		*iParam4 = 28;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12791 /* Tunable: REBATE_PROPERTY_29 */)
	{
		*iParam4 = 29;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12792 /* Tunable: REBATE_PROPERTY_30 */)
	{
		*iParam4 = 30;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12793 /* Tunable: REBATE_PROPERTY_31 */)
	{
		*iParam4 = 31;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12794 /* Tunable: REBATE_PROPERTY_32 */)
	{
		*iParam4 = 32;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12795 /* Tunable: REBATE_PROPERTY_33 */)
	{
		*iParam4 = 33;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12796 /* Tunable: REBATE_PROPERTY_34 */)
	{
		*iParam4 = 34;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12797 /* Tunable: REBATE_PROPERTY_35 */)
	{
		*iParam4 = 35;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12798 /* Tunable: REBATE_PROPERTY_36 */)
	{
		*iParam4 = 36;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12799 /* Tunable: REBATE_PROPERTY_37 */)
	{
		*iParam4 = 37;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12800 /* Tunable: REBATE_PROPERTY_38 */)
	{
		*iParam4 = 38;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12801 /* Tunable: REBATE_PROPERTY_39 */)
	{
		*iParam4 = 39;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12802 /* Tunable: REBATE_PROPERTY_40 */)
	{
		*iParam4 = 40;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12803 /* Tunable: REBATE_PROPERTY_41 */)
	{
		*iParam4 = 41;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12804 /* Tunable: REBATE_PROPERTY_42 */)
	{
		*iParam4 = 42;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12805 /* Tunable: REBATE_PROPERTY_43 */)
	{
		*iParam4 = 43;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12806 /* Tunable: REBATE_PROPERTY_44 */)
	{
		*iParam4 = 44;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12807 /* Tunable: REBATE_PROPERTY_45 */)
	{
		*iParam4 = 45;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12808 /* Tunable: REBATE_PROPERTY_46 */)
	{
		*iParam4 = 46;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12809 /* Tunable: REBATE_PROPERTY_47 */)
	{
		*iParam4 = 47;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12810 /* Tunable: REBATE_PROPERTY_48 */)
	{
		*iParam4 = 48;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12811 /* Tunable: REBATE_PROPERTY_49 */)
	{
		*iParam4 = 49;
		return 1;
	}
	*iParam4 = -1;
	return 0;
}

void func_303(int iParam0)//Position - 0x13C0AC
{
	int iVar0;
	struct<10> Var1;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_866)
	{
		return;
	}
	if (Global_113386.f_7688.f_866 > 1)
	{
		iVar0 = iParam0;
		while (iVar0 <= (Global_113386.f_7688.f_866 - 2))
		{
			Global_113386.f_7688.f_765[iVar0 /*10*/] = { Global_113386.f_7688.f_765[iVar0 + 1 /*10*/] };
			iVar0++;
		}
	}
	if (Global_113386.f_7688.f_866 > 0)
	{
		Global_113386.f_7688.f_765[(Global_113386.f_7688.f_866 - 1) /*10*/] = { Var1 };
		Global_113386.f_7688.f_866 = (Global_113386.f_7688.f_866 - 1);
	}
}

void func_304(int iParam0)//Position - 0x13C2EB
{
	struct<15> Var0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	while (iVar1 < Global_113386.f_7688.f_650)
	{
		if (Global_113386.f_7688.f_199[iVar1 /*15*/] == iParam0)
		{
			iVar2 = iVar1;
			while (iVar2 <= (Global_113386.f_7688.f_650 - 2))
			{
				Global_113386.f_7688.f_199[iVar2 /*15*/] = { Global_113386.f_7688.f_199[iVar2 + 1 /*15*/] };
				iVar2++;
			}
			Global_113386.f_7688.f_199[(Global_113386.f_7688.f_650 - 1) /*15*/] = { Var0 };
			Global_113386.f_7688.f_650 = (Global_113386.f_7688.f_650 - 1);
			return;
		}
		iVar1++;
	}
}

void func_305(int iParam0, int iParam1, int iParam2)//Position - 0x13C4AA
{
	Global_1998[iParam0 /*29*/].f_19[iParam1] = iParam2;
	if (iParam0 < 162)
	{
		Global_113386.f_28050[iParam0 /*29*/].f_19[iParam1] = iParam2;
	}
}

void func_306(char* sParam0, int iParam1, int iParam2)//Position - 0x142486
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, false, true, -1);
}

void func_307(int iParam0, bool bParam1)//Position - 0x147386
{
	int iVar0;
	iParam0 = (iParam0 - 159);
	if (__LIB_12__::func_95(iParam0, &iVar0))
	{
		__LIB_0__::func_186(iVar0, bParam1, -1);
	}
}

void func_308(int iParam0, char* sParam1, float fParam2, char* sParam3, char* sParam4)//Position - 0x14816F
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, sParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(SYSTEM::ROUND(fParam2));
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam3))
	{
		__LIB_0__::func_700(sParam3);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
	{
		__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(sParam4);
	}
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

struct<13> func_309(int iParam0)//Position - 0x14928E
{
	struct<13> Var0;
	NETWORK::NETWORK_HANDLE_FROM_FRIEND(iParam0, &Var0, 13);
	return Var0;
}

int func_310(char* sParam0)//Position - 0x149FB5
{
	int iVar0;
	int iVar1;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		if (MISC::ARE_STRINGS_EQUAL(HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("GB_REST_ACCM" /* GXT: Motorcycle Club */), sParam0) || MISC::ARE_STRINGS_EQUAL(HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("GB_REST_ACC" /* GXT: An Organization */), sParam0))
		{
			return 0;
		}
		iVar1 = 0;
		while (iVar1 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
			if ((NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar0) && PLAYER::PLAYER_ID() != iVar0) && __LIB_0__::func_796(iVar0))
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_1892703[iVar0 /*599*/].f_10.f_105)) && MISC::ARE_STRINGS_EQUAL(&(Global_1892703[iVar0 /*599*/].f_10.f_105), sParam0))
				{
					return 1;
				}
			}
			iVar1++;
		}
	}
	return 0;
}

void func_311(char* sParam0, int iParam1)//Position - 0x24AA
{
	int iVar0;
	int iVar1;
	if (Global_112026 && iParam1)
	{
		if (__LIB_0__::func_1(sParam0) && !HUD::IS_HELP_MESSAGE_FADING_OUT())
		{
			HUD::CLEAR_HELP(false);
		}
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_20410.f_145)
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam0, &(Global_113386.f_20410[iVar0 /*16*/])))
		{
			iVar1 = iVar0;
			while (iVar1 <= (Global_113386.f_20410.f_145 - 2))
			{
				__LIB_13__::func_100(iVar1, iVar1 + 1);
				iVar1++;
			}
			__LIB_13__::func_99((Global_113386.f_20410.f_145 - 1));
			Global_113386.f_20410.f_145 = (Global_113386.f_20410.f_145 - 1);
			__LIB_0__::func_66();
			return;
		}
		iVar0++;
	}
}

int func_312()//Position - 0x6859
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	while (iVar1 < 6)
	{
		iVar2 = iVar1;
		if (__LIB_9__::func_559(iVar2, &uVar0))
		{
			return 0;
		}
		iVar1++;
	}
	return 1;
}

char* func_313(int iParam0)//Position - 0x3DEE4
{
	switch (__LIB_1__::func_788(iParam0))
	{
		case 6541:
			return "MP_STAT_BUSINESSHUB_MOD_1";
			break;
		case 6543:
			return "MP_STAT_BUSINESSHUB_MOD_3";
			break;
		case 6544:
			return "MP_STAT_BUSINESSHUB_MOD_4";
			break;
		case 6545:
			return "MP_STAT_BUSINESSHUB_MOD_5";
			break;
		case 6546:
			return "MP_STAT_BUSINESSHUB_MOD_6";
			break;
		case 6547:
			return "MP_STAT_BUSINESSHUB_MOD_7";
			break;
	}
	return "unknown!!!";
}

void func_314(char* sParam0, int iParam1)//Position - 0x3E14D
{
	StringCopy(sParam0, __LIB_13__::func_41(iParam1), 64);
	StringConCat(sParam0, "_v0", 64);
}

void func_315(char* sParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x46A72
{
	struct<4> Var0;
	StringCopy(sParam0, "FACTORY_INDEX_", 64);
	Var0 = { __LIB_11__::func_616(iParam1) };
	StringCopy(sParam0, "PR_", 64);
	StringConCat(sParam0, &Var0, 64);
	StringConCat(sParam0, "_t0_v", 64);
	StringIntConCat(sParam0, iParam2, 64);
	if (bParam3)
	{
		StringConCat(sParam0, "_CESP", 64);
	}
}

bool func_316()//Position - 0x482B7
{
	return __LIB_1__::func_360(8721, -1, 0) != 0;
}

int func_317(int iParam0, int iParam1, int iParam2)//Position - 0x4846F
{
	int iVar0;
	char* sVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	char cVar5[16];
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__::func_112())
	{
		iVar0 = 0;
		__LIB_13__::func_57(&sVar1, iParam0, iParam2, iVar0);
		iVar2 = MISC::GET_HASH_KEY(&sVar1);
		if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(iVar2))
		{
			iVar3 = NETSHOPPING::NET_GAMESERVER_GET_PRICE(iVar2, joaat("CATEGORY_PROPERTIE"), true);
			StringCopy(&cVar4, __LIB_8__::func_83(iParam1), 16);
			return iVar3;
		}
		else
		{
			StringCopy(&cVar5, __LIB_8__::func_83(iParam1), 16);
		}
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24883 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_1_RENOVATION_ONLY */;
					break;
				case 1:
					return Global_262145.f_24884 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_2 */;
					break;
				case 2:
					return Global_262145.f_24885 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_3 */;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24895 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_DEFAULT_RENOVATION_ONLY */;
					break;
				case 1:
					return Global_262145.f_24896 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_LED_TUBES */;
					break;
				case 2:
					return Global_262145.f_24897 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_GEOMETRIC */;
					break;
				case 3:
					return Global_262145.f_24898 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_RIBBON */;
					break;
				case 4:
					return Global_262145.f_24899 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_LASER_SHOW */;
					break;
			}
			break;
		case 2:
			return Global_262145.f_24426 /* Tunable: -438242317 */;
			break;
		case 7:
			return Global_262145.f_24427 /* Tunable: -1426095971 */;
		case 8:
			return Global_262145.f_24428 /* Tunable: 530619504 */;
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 2:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 3:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
				case 4:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 5:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 6:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
				case 7:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 8:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 9:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return Global_262145.f_24906 /* Tunable: BB_NIGHTCLUB_PROPERTY_DRY_ICE */;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24886 /* Tunable: 91858633 */;
					break;
				case 1:
					return Global_262145.f_24887 /* Tunable: -1168036437 */;
					break;
				case 2:
					return Global_262145.f_24888 /* Tunable: 1788794576 */;
					break;
				case 3:
					return Global_262145.f_24889 /* Tunable: -1100638156 */;
					break;
				case 4:
					return Global_262145.f_24890 /* Tunable: 1443977855 */;
					break;
				case 5:
					return Global_262145.f_24891 /* Tunable: 176534428 */;
					break;
				case 6:
					return Global_262145.f_24892 /* Tunable: -668591946 */;
					break;
				case 7:
					return Global_262145.f_24893 /* Tunable: 2004204966 */;
					break;
				case 8:
					return Global_262145.f_24894 /* Tunable: 1383136622 */;
					break;
			}
			break;
		case 5:
			return Global_262145.f_24425 /* Tunable: 1585043699 */;
			break;
	}
	return 0;
}

bool func_318()//Position - 0x48890
{
	return __LIB_1__::func_360(__LIB_11__::func_362(4), -1, 0) == 1;
}

int func_319(int iParam0)//Position - 0x49F4A
{
	if (__LIB_7__::func_269())
	{
		if (iParam0 == 28 || iParam0 == 14)
		{
			return 1;
		}
	}
	return 0;
}

int func_320()//Position - 0x5916F
{
	int iVar0;
	iVar0 = __LIB_0__::func_818(PLAYER::PLAYER_ID());
	if (((iVar0 != PLAYER::PLAYER_ID() && iVar0 != __LIB_0__::getMinusOneOrNull()) && NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar0)) && iVar0 != -1)
	{
		return 1;
	}
	return 0;
}

void func_321()//Position - 0x59E94
{
	if (__LIB_13__::func_36())
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 24);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 24);
	}
}

void func_322()//Position - 0x59EE8
{
	if (__LIB_13__::func_37())
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 1);
	}
}

bool func_323()//Position - 0x59F69
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 8;
}

bool func_324()//Position - 0x59F7F
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 7;
}

bool func_325()//Position - 0x59F94
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 6;
}

bool func_326()//Position - 0x59FA9
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 5;
}

bool func_327()//Position - 0x59FBE
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 4;
}

bool func_328()//Position - 0x59FD3
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 3;
}

bool func_329()//Position - 0x59FE8
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 2;
}

bool func_330()//Position - 0x59FFD
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 1;
}

bool func_331()//Position - 0x5A012
{
	return __LIB_1__::func_360(__LIB_11__::func_362(6), -1, 0) == 0;
}

bool func_332()//Position - 0x5A027
{
	return __LIB_1__::func_360(__LIB_11__::func_362(5), -1, 0) == 1;
}

bool func_333()//Position - 0x5A03C
{
	return ((__LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 2 || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 5) || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 8);
}

bool func_334()//Position - 0x5A078
{
	return ((__LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 1 || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 4) || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 7);
}

bool func_335()//Position - 0x5A0B3
{
	return ((__LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 7 || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 8) || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 9);
}

bool func_336()//Position - 0x5A0F0
{
	return ((__LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 4 || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 5) || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 6);
}

bool func_337()//Position - 0x5A12B
{
	return ((__LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 1 || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 2) || __LIB_1__::func_360(__LIB_11__::func_362(3), -1, 0) == 3);
}

bool func_338()//Position - 0x5A23D
{
	return __LIB_1__::func_360(__LIB_11__::func_362(0), -1, 0) == 2;
}

bool func_339()//Position - 0x5A252
{
	return __LIB_1__::func_360(__LIB_11__::func_362(0), -1, 0) == 1;
}

bool func_340()//Position - 0x5A267
{
	return __LIB_1__::func_360(__LIB_11__::func_362(0), -1, 0) == 0;
}

bool func_341()//Position - 0x5A27C
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 5;
}

bool func_342()//Position - 0x5A291
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 4;
}

bool func_343()//Position - 0x5A2A6
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 3;
}

bool func_344()//Position - 0x5A2BB
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 2;
}

bool func_345()//Position - 0x5A2D0
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 1;
}

bool func_346()//Position - 0x5A2E5
{
	return __LIB_1__::func_360(__LIB_11__::func_362(1), -1, 0) == 0;
}

bool func_347()//Position - 0x5A2FA
{
	return __LIB_1__::func_360(__LIB_1__::func_788(4), -1, 0) != 0;
}

bool func_348()//Position - 0x5A7F0
{
	return __LIB_1__::func_360(__LIB_1__::func_788(2), -1, 0) >= 5;
}

bool func_349()//Position - 0x5A805
{
	return __LIB_1__::func_360(__LIB_1__::func_788(2), -1, 0) >= 4;
}

bool func_350()//Position - 0x5A81A
{
	return __LIB_1__::func_360(__LIB_1__::func_788(2), -1, 0) >= 3;
}

bool func_351()//Position - 0x5A82F
{
	return __LIB_1__::func_360(__LIB_1__::func_788(2), -1, 0) >= 2;
}

bool func_352()//Position - 0x5A8DB
{
	return __LIB_1__::func_360(__LIB_1__::func_788(3), -1, 0) != 0;
}

void func_353(int iParam0, bool bParam1)//Position - 0x5BAE9
{
	int iVar0;
	int iVar1;
	if (iParam0 == -1)
	{
		return;
	}
	iVar0 = __LIB_0__::func_253(22032, -1);
	iVar1 = iParam0 + 20;
	if (bParam1)
	{
		MISC::SET_BIT(&iVar0, iParam0);
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_1), iVar1);
	}
	else
	{
		MISC::CLEAR_BIT(&iVar0, iParam0);
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_1), iVar1);
	}
	__LIB_1__::func_379(22032, iVar0, -1);
}

bool func_354()//Position - 0x5D7EA
{
	return __LIB_1__::func_360(6167, -1, 0) == 3;
}

bool func_355()//Position - 0x5D7FD
{
	return __LIB_1__::func_360(6167, -1, 0) == 2;
}

void func_356()//Position - 0xC2370
{
	if (__LIB_1__::func_501())
	{
		Global_2715699.f_3076.f_134 = 0;
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_427 = Global_2715699.f_3076.f_134;
	}
}

int func_357(int iParam0)//Position - 0xC55C4
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	if (!__LIB_0__::func_156(iParam0, 0, 1))
	{
		return 0;
	}
	if (__LIB_0__::func_361(iParam0, 0))
	{
		return 0;
	}
	if (BitTest(Global_1853348[iParam0 /*834*/].f_139, 2) || BitTest(Global_1853348[iParam0 /*834*/].f_139, 5))
	{
		return 0;
	}
	if (__LIB_0__::func_315(iParam0))
	{
		return 0;
	}
	return 1;
}

int func_358(int iParam0)//Position - 0xC57B4
{
	if (!__LIB_0__::func_165(iParam0, 2))
	{
		return 1;
	}
	if (__LIB_0__::func_165(iParam0, 1))
	{
		return 1;
	}
	if (__LIB_9__::func_628(iParam0) > 0)
	{
		return 1;
	}
	return 0;
}

int func_359(int iParam0)//Position - 0xC5E68
{
	int iVar0;
	int iVar1;
	if (__LIB_0__::func_156(iParam0, 0, 1))
	{
		if (Global_1892703[iParam0 /*599*/].f_10.f_181 != -1)
		{
			iVar0 = Global_1892703[iParam0 /*599*/].f_10.f_181;
		}
		else
		{
			iVar0 = __LIB_0__::func_991(joaat("MPPLY_VIPGAMEPLAYDISABLEDTIMER"));
		}
		iVar1 = ((iVar0 + __LIB_7__::func_909()) - NETWORK::GET_CLOUD_TIME_AS_INT());
		return iVar1;
	}
	return -1;
}

void func_360()//Position - 0xC6520
{
	__LIB_9__::func_597();
}

void func_361()//Position - 0xC65F5
{
	__LIB_9__::func_600();
}

void func_362()//Position - 0xC6660
{
	if (__LIB_9__::func_603())
	{
		MISC::SET_BIT(&Global_1966179, 1);
	}
}

int func_363()//Position - 0xC6877
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_9__::func_553();
	if (iVar0 <= 0)
	{
		return 0;
	}
	if (MONEY::NETWORK_CASINO_CAN_BUY_CHIPS_PVC())
	{
		if (MONEY::NETWORK_CAN_SPEND_MONEY(iVar0, false, true, false, -1, 0))
		{
			iVar1 = iVar0;
		}
		else
		{
			iVar1 = (MONEY::NETWORK_GET_VC_BANK_BALANCE() + MONEY::NETWORK_GET_VC_WALLET_BALANCE(-1));
		}
	}
	else if (MONEY::NETWORK_CAN_SPEND_MONEY(iVar0, false, true, false, -1, 1))
	{
		iVar1 = iVar0;
	}
	else
	{
		iVar1 = MONEY::NETWORK_GET_EVC_BALANCE();
	}
	return iVar1;
}

void func_364()//Position - 0xCA79E
{
	bool bVar0;
	bVar0 = __LIB_1__::func_676(50, -1);
	if (bVar0)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 19);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 19);
	}
}

void func_365()//Position - 0xCA966
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(73, -1);
	if (iVar0 >= 50)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 13);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 13);
	}
}

void func_366()//Position - 0xCA9B3
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(74, -1);
	if (iVar0 >= 50)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 12);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 12);
	}
}

void func_367()//Position - 0xCAC15
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(82, -1);
	if (iVar0 >= 50)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 4);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 4);
	}
}

void func_368()//Position - 0xCACAB
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(83, -1);
	if (iVar0 >= 1000000)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 2);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 2);
	}
}

void func_369()//Position - 0xCACF8
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(85, -1);
	if (iVar0 >= 55000)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 1);
	}
}

int func_370(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0xDF29F
{
	int iVar0;
	int iVar1;
	struct<7> Var2;
	struct<2> Var3;
	struct<2> Var4;
	int iVar5;
	if ((iParam1 != -1 && iParam1 != 0) && iParam1 != joaat("0"))
	{
		if (iParam0 == joaat("MP_M_Freemode_01"))
		{
			iVar0 = 3;
			iVar1 = 3;
		}
		else
		{
			iVar0 = 4;
			iVar1 = 4;
		}
		FILES::GET_SHOP_PED_COMPONENT(iParam1, &Var2);
		if (Var2.f_1 == iParam1)
		{
			*uParam2 = Var2.f_6;
			*uParam3 = __LIB_0__::func_204(iParam0, iParam1, *uParam2, iVar0);
			return 1;
		}
		FILES::GET_SHOP_PED_PROP(iParam1, &Var3);
		if (Var3.f_1 == iParam1)
		{
			*uParam2 = 14;
			*uParam3 = __LIB_0__::func_204(iParam0, iParam1, *uParam2, iVar0);
			return 1;
		}
		FILES::GET_SHOP_PED_OUTFIT(iParam1, &Var4);
		if (Var4.f_1 == iParam1)
		{
			*uParam2 = 12;
			*uParam3 = __LIB_0__::func_204(iParam0, Var4.f_1, *uParam2, iVar0);
			return 1;
		}
		iVar5 = __LIB_0__::func_266(iParam1, iVar1);
		if (iVar5 != -1)
		{
			*uParam3 = iVar5;
			*uParam2 = 10;
			return 1;
		}
	}
	return 0;
}

bool func_371(int iParam0)//Position - 0x116AE9
{
	return __LIB_0__::func_137(__LIB_12__::func_959(iParam0), -1);
}

int func_372(int iParam0, int iParam1)//Position - 0x13358C
{
	switch (iParam1)
	{
		case 1:
			return !BitTest(Global_91229[iParam0 /*34*/].f_15, 5);
			break;
		case 7:
			return __LIB_0__::func_49(iParam0);
			break;
		default:
			break;
	}
	return 0;
}

int func_373(int iParam0)//Position - 0x13ECB1
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (__LIB_2__::func_885(iParam0) && Global_2689235[iParam0 /*453*/].f_318.f_9 == iParam0)
		{
			return 1;
		}
	}
	return 0;
}

int func_374(int iParam0)//Position - 0x147211
{
	int iVar0;
	iParam0 = (iParam0 - 159);
	if (__LIB_12__::func_95(iParam0, &iVar0))
	{
		return __LIB_0__::func_137(iVar0, -1);
	}
	return 1;
}

int func_375(char* sParam0)//Position - 0x14A05F
{
	int iVar0;
	int iVar1;
	int iVar2;
	char* sVar3;
	iVar0 = LOCALIZATION::GET_CURRENT_LANGUAGE();
	if (((((iVar0 == 7 || iVar0 == 6) || iVar0 == 8) || iVar0 == 9) || iVar0 == 10) || iVar0 == 12)
	{
		return 1;
	}
	iVar1 = 1;
	iVar2 = 0;
	while (iVar2 <= (HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0) - 1))
	{
		sVar3 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, iVar2, iVar2 + 1);
		if (!__LIB_12__::func_934(MISC::GET_HASH_KEY(sVar3), sVar3))
		{
			iVar1 = 0;
		}
		iVar2++;
	}
	return iVar1;
}

int func_376(int iParam0)//Position - 0x4962
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	if (iParam0 == 8)
	{
		return __LIB_0__::func_137(129, -1);
	}
	if (iParam0 == 9)
	{
		return __LIB_0__::func_137(135, -1);
	}
	if (iParam0 == 10)
	{
		return __LIB_0__::func_137(136, -1);
	}
	if (iParam0 == 11)
	{
		return __LIB_0__::func_137(137, -1);
	}
	if (iParam0 == 12)
	{
		iVar0 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar1 = __LIB_1__::func_360(8272, -1, 0);
		if (iVar1 == 0 || iVar0 >= iVar1)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 13)
	{
		iVar2 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar3 = __LIB_1__::func_360(8273, -1, 0);
		if (iVar3 == 0 || iVar2 >= iVar3)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 14)
	{
		iVar4 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar5 = __LIB_1__::func_360(8274, -1, 0);
		if (iVar5 == 0 || iVar4 >= iVar5)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 15)
	{
		iVar6 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar7 = __LIB_1__::func_360(8275, -1, 0);
		if (iVar7 == 0 || iVar6 >= iVar7)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 16)
	{
		iVar8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar9 = __LIB_1__::func_360(8276, -1, 0);
		if (iVar9 == 0 || iVar8 >= iVar9)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 17)
	{
		iVar10 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar11 = __LIB_1__::func_360(8277, -1, 0);
		if (iVar11 == 0 || iVar10 >= iVar11)
		{
			return 0;
		}
		return 1;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return BitTest(Global_113386.f_20564.f_471, iParam0);
	}
	return BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_10, iParam0);
}

void func_377(bool bParam0)//Position - 0x30EB0
{
	int iVar0;
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_384.f_1, 18))
		{
			iVar0 = __LIB_9__::func_586();
			if (iVar0 < 2)
			{
				__LIB_9__::func_585();
				__LIB_9__::func_584(iVar0 + 1);
			}
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_384.f_1), 18);
			__LIB_0__::func_186(26966, 1, -1);
			__LIB_1__::func_333(560777268, 10, 0);
		}
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_384.f_1), 18);
		__LIB_0__::func_186(26966, 0, -1);
	}
}

void func_378(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x428CF
{
	char cVar0[16];
	StringCopy(&cVar0, __LIB_12__::func_632(iParam1, iParam2), 16);
	StringCopy(sParam0, "PR_", 64);
	StringConCat(sParam0, &cVar0, 64);
	StringConCat(sParam0, "_t", 64);
	StringIntConCat(sParam0, iParam3, 64);
	StringConCat(sParam0, "_v0", 64);
}

int func_379(int iParam0)//Position - 0x47275
{
	if (__LIB_7__::func_269())
	{
		if (((iParam0 == 88 || iParam0 == 94) || iParam0 == 18) || iParam0 == 56)
		{
			return 1;
		}
	}
	return 0;
}

void func_380(bool bParam0)//Position - 0x5426B
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2, 17))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2), 17);
		}
		__LIB_1__::func_354(9631, 1, -1, 1, 0);
	}
	else
	{
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2, 17))
		{
			MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2), 17);
		}
		__LIB_1__::func_354(9631, 0, -1, 1, 0);
	}
}

void func_381()//Position - 0x5A3EA
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_8 = (((__LIB_1__::func_677(139, -1) + __LIB_1__::func_677(141, -1)) + __LIB_1__::func_677(140, -1)) + __LIB_1__::func_677(142, -1));
}

void func_382(int iParam0, int iParam1)//Position - 0x5AB22
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
					break;
				case 6:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
					break;
				case 7:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 2, -1, 1, 0);
					break;
				case 8:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 3, -1, 1, 0);
					break;
				case 9:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 4, -1, 1, 0);
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
					break;
				case 11:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
					break;
				case 12:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 2, -1, 1, 0);
					break;
				case 13:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 3, -1, 1, 0);
					break;
			}
			break;
		case 3:
			__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
			break;
		case 4:
			__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
			break;
	}
}

int func_383(int iParam0, int iParam1, int iParam2)//Position - 0x5AC8D
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull() || !__LIB_11__::func_399(iParam1))
	{
		return 0;
	}
	switch (iParam1)
	{
		case 0:
			return __LIB_13__::func_59(iParam0, iParam2);
		case 1:
			return __LIB_11__::func_397(iParam0, iParam2);
		case 3:
			return __LIB_11__::func_396(iParam0);
		case 2:
			return __LIB_12__::func_538(iParam0, iParam2);
		case 4:
			return __LIB_11__::func_391(iParam0);
		default:
	}
	return 0;
}

void func_384(int iParam0, int iParam1)//Position - 0x5B0DB
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 0, -1, 1, 0);
					break;
				case 1:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
					break;
				case 2:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 2, -1, 1, 0);
					break;
				case 3:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 3, -1, 1, 0);
					break;
				case 4:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 4, -1, 1, 0);
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
					break;
				case 6:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 2, -1, 1, 0);
					break;
				case 7:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 3, -1, 1, 0);
					break;
				case 8:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 4, -1, 1, 0);
					break;
				case 9:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 5, -1, 1, 0);
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 2, -1, 1, 0);
					break;
				case 11:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 3, -1, 1, 0);
					break;
				case 12:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 4, -1, 1, 0);
					break;
				case 13:
					__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 5, -1, 1, 0);
					break;
			}
			break;
		case 3:
			__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
			break;
		case 4:
			__LIB_1__::func_354(__LIB_1__::func_788(iParam0), 1, -1, 1, 0);
			break;
	}
}

int func_385(int iParam0)//Position - 0x6EC63
{
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_JBIB_19_0"):
		case joaat("DLC_MP_GR_F_JBIB_25_0"):
		case joaat("CLO_GRM_U_19_0"):
		case joaat("CLO_GRF_U_25_0"):
			if (!__LIB_0__::func_137(15417, -1))
			{
				__LIB_0__::func_186(15417, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_JBIB_19_1"):
		case joaat("DLC_MP_GR_F_JBIB_25_1"):
		case joaat("CLO_GRM_U_19_1"):
		case joaat("CLO_GRF_U_25_1"):
			if (!__LIB_0__::func_137(15418, -1))
			{
				__LIB_0__::func_186(15418, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_JBIB_20_0"):
		case joaat("DLC_MP_GR_F_JBIB_26_0"):
		case joaat("CLO_GRM_U_20_0"):
		case joaat("CLO_GRF_U_26_0"):
			if (!__LIB_0__::func_137(15425, -1))
			{
				__LIB_0__::func_186(15425, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_DECL_5_0"):
		case joaat("DLC_MP_GR_F_DECL_5_0"):
		case joaat("CLO_GRM_DECL_19"):
		case joaat("CLO_GRF_DECL_19"):
			if (!__LIB_0__::func_137(15405, -1))
			{
				__LIB_0__::func_186(15405, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_1"):
		case joaat("DLC_MP_GR_F_DECL_5_1"):
		case joaat("CLO_GRM_DECL_20"):
		case joaat("CLO_GRF_DECL_20"):
			if (!__LIB_0__::func_137(15393, -1))
			{
				__LIB_0__::func_186(15393, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_2"):
		case joaat("DLC_MP_GR_F_DECL_5_2"):
		case joaat("CLO_GRM_DECL_21"):
		case joaat("CLO_GRF_DECL_21"):
			if (!__LIB_0__::func_137(15409, -1))
			{
				__LIB_0__::func_186(15409, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_3"):
		case joaat("DLC_MP_GR_F_DECL_5_3"):
		case joaat("CLO_GRM_DECL_22"):
		case joaat("CLO_GRF_DECL_22"):
			if (!__LIB_0__::func_137(15396, -1))
			{
				__LIB_0__::func_186(15396, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_4"):
		case joaat("DLC_MP_GR_F_DECL_5_4"):
		case joaat("CLO_GRM_DECL_23"):
		case joaat("CLO_GRF_DECL_23"):
			if (!__LIB_0__::func_137(15412, -1))
			{
				__LIB_0__::func_186(15412, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_5"):
		case joaat("DLC_MP_GR_F_DECL_5_5"):
		case joaat("CLO_GRM_DECL_24"):
		case joaat("CLO_GRF_DECL_24"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_6"):
		case joaat("DLC_MP_GR_F_DECL_5_6"):
		case joaat("CLO_GRM_DECL_25"):
		case joaat("CLO_GRF_DECL_25"):
			if (!__LIB_0__::func_137(15403, -1))
			{
				__LIB_0__::func_186(15403, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_7"):
		case joaat("DLC_MP_GR_F_DECL_5_7"):
		case joaat("CLO_GRM_DECL_26"):
		case joaat("CLO_GRF_DECL_26"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_8"):
		case joaat("DLC_MP_GR_F_DECL_5_8"):
		case joaat("CLO_GRM_DECL_27"):
		case joaat("CLO_GRF_DECL_27"):
			if (!__LIB_0__::func_137(15389, -1))
			{
				__LIB_0__::func_186(15389, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_9"):
		case joaat("DLC_MP_GR_F_DECL_5_9"):
		case joaat("CLO_GRM_DECL_28"):
		case joaat("CLO_GRF_DECL_28"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_10"):
		case joaat("DLC_MP_GR_F_DECL_5_10"):
		case joaat("CLO_GRM_DECL_29"):
		case joaat("CLO_GRF_DECL_29"):
			if (!__LIB_0__::func_137(15398, -1))
			{
				__LIB_0__::func_186(15398, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_PHEAD_6_0"):
		case joaat("DLC_MP_GR_F_PHEAD_6_0"):
		case joaat("DLC_MP_GR_M_PHEAD_7_0"):
		case joaat("DLC_MP_GR_F_PHEAD_7_0"):
		case joaat("CLO_GRM_PH_6_0"):
		case joaat("CLO_GRF_PH_6_0"):
			if (!__LIB_0__::func_137(15400, -1))
			{
				__LIB_0__::func_186(15400, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_1"):
		case joaat("DLC_MP_GR_F_PHEAD_6_1"):
		case joaat("DLC_MP_GR_M_PHEAD_7_1"):
		case joaat("DLC_MP_GR_F_PHEAD_7_1"):
		case joaat("CLO_GRM_PH_6_1"):
		case joaat("CLO_GRF_PH_6_1"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_2"):
		case joaat("DLC_MP_GR_F_PHEAD_6_2"):
		case joaat("DLC_MP_GR_M_PHEAD_7_2"):
		case joaat("DLC_MP_GR_F_PHEAD_7_2"):
		case joaat("CLO_GRM_PH_6_2"):
		case joaat("CLO_GRF_PH_6_2"):
			if (!__LIB_0__::func_137(15408, -1))
			{
				__LIB_0__::func_186(15408, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_3"):
		case joaat("DLC_MP_GR_F_PHEAD_6_3"):
		case joaat("DLC_MP_GR_M_PHEAD_7_3"):
		case joaat("DLC_MP_GR_F_PHEAD_7_3"):
		case joaat("CLO_GRM_PH_6_3"):
		case joaat("CLO_GRF_PH_6_3"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_4"):
		case joaat("DLC_MP_GR_F_PHEAD_6_4"):
		case joaat("DLC_MP_GR_M_PHEAD_7_4"):
		case joaat("DLC_MP_GR_F_PHEAD_7_4"):
		case joaat("CLO_GRM_PH_6_4"):
		case joaat("CLO_GRF_PH_6_4"):
			if (!__LIB_0__::func_137(15411, -1))
			{
				__LIB_0__::func_186(15411, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_5"):
		case joaat("DLC_MP_GR_F_PHEAD_6_5"):
		case joaat("DLC_MP_GR_M_PHEAD_7_5"):
		case joaat("DLC_MP_GR_F_PHEAD_7_5"):
		case joaat("CLO_GRM_PH_6_5"):
		case joaat("CLO_GRF_PH_6_5"):
			if (!__LIB_0__::func_137(15397, -1))
			{
				__LIB_0__::func_186(15397, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_6"):
		case joaat("DLC_MP_GR_F_PHEAD_6_6"):
		case joaat("DLC_MP_GR_M_PHEAD_7_6"):
		case joaat("DLC_MP_GR_F_PHEAD_7_6"):
		case joaat("CLO_GRM_PH_6_6"):
		case joaat("CLO_GRF_PH_6_6"):
			if (!__LIB_0__::func_137(15413, -1))
			{
				__LIB_0__::func_186(15413, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_7"):
		case joaat("DLC_MP_GR_F_PHEAD_6_7"):
		case joaat("DLC_MP_GR_M_PHEAD_7_7"):
		case joaat("DLC_MP_GR_F_PHEAD_7_7"):
		case joaat("CLO_GRM_PH_6_7"):
		case joaat("CLO_GRF_PH_6_7"):
			if (!__LIB_0__::func_137(15391, -1))
			{
				__LIB_0__::func_186(15391, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_8"):
		case joaat("DLC_MP_GR_F_PHEAD_6_8"):
		case joaat("DLC_MP_GR_M_PHEAD_7_8"):
		case joaat("DLC_MP_GR_F_PHEAD_7_8"):
		case joaat("CLO_GRM_PH_6_8"):
		case joaat("CLO_GRF_PH_6_8"):
			if (!__LIB_0__::func_137(15388, -1))
			{
				__LIB_0__::func_186(15388, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_9"):
		case joaat("DLC_MP_GR_F_PHEAD_6_9"):
		case joaat("DLC_MP_GR_M_PHEAD_7_9"):
		case joaat("DLC_MP_GR_F_PHEAD_7_9"):
		case joaat("CLO_GRM_PH_6_9"):
		case joaat("CLO_GRF_PH_6_9"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_10"):
		case joaat("DLC_MP_GR_F_PHEAD_6_10"):
		case joaat("DLC_MP_GR_M_PHEAD_7_10"):
		case joaat("DLC_MP_GR_F_PHEAD_7_10"):
		case joaat("CLO_GRM_PH_6_10"):
		case joaat("CLO_GRF_PH_6_10"):
			if (!__LIB_0__::func_137(15401, -1))
			{
				__LIB_0__::func_186(15401, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Gunrunning_Award_000_M"):
		case joaat("MP_Gunrunning_Award_000_F"):
		case joaat("CLO_GRM_DECL_0"):
		case joaat("CLO_GRF_DECL_0"):
			if (!__LIB_0__::func_137(15394, -1))
			{
				__LIB_0__::func_186(15394, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_001_M"):
		case joaat("MP_Gunrunning_Award_001_F"):
		case joaat("CLO_GRM_DECL_1"):
		case joaat("CLO_GRF_DECL_1"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_002_M"):
		case joaat("MP_Gunrunning_Award_002_F"):
		case joaat("CLO_GRM_DECL_2"):
		case joaat("CLO_GRF_DECL_2"):
			if (!__LIB_0__::func_137(15406, -1))
			{
				__LIB_0__::func_186(15406, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_003_M"):
		case joaat("MP_Gunrunning_Award_003_F"):
		case joaat("CLO_GRM_DECL_3"):
		case joaat("CLO_GRF_DECL_3"):
			if (!__LIB_0__::func_137(15395, -1))
			{
				__LIB_0__::func_186(15395, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_004_M"):
		case joaat("MP_Gunrunning_Award_004_F"):
		case joaat("CLO_GRM_DECL_4"):
		case joaat("CLO_GRF_DECL_4"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_005_M"):
		case joaat("MP_Gunrunning_Award_005_F"):
		case joaat("CLO_GRM_DECL_5"):
		case joaat("CLO_GRF_DECL_5"):
			if (!__LIB_0__::func_137(15410, -1))
			{
				__LIB_0__::func_186(15410, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_006_M"):
		case joaat("MP_Gunrunning_Award_006_F"):
		case joaat("CLO_GRM_DECL_6"):
		case joaat("CLO_GRF_DECL_6"):
			if (!__LIB_0__::func_137(15407, -1))
			{
				__LIB_0__::func_186(15407, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_007_M"):
		case joaat("MP_Gunrunning_Award_007_F"):
		case joaat("CLO_GRM_DECL_7"):
		case joaat("CLO_GRF_DECL_7"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_008_M"):
		case joaat("MP_Gunrunning_Award_008_F"):
		case joaat("CLO_GRM_DECL_8"):
		case joaat("CLO_GRF_DECL_8"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_009_M"):
		case joaat("MP_Gunrunning_Award_009_F"):
		case joaat("CLO_GRM_DECL_9"):
		case joaat("CLO_GRF_DECL_9"):
			if (!__LIB_0__::func_137(15414, -1))
			{
				__LIB_0__::func_186(15414, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_010_M"):
		case joaat("MP_Gunrunning_Award_010_F"):
		case joaat("CLO_GRM_DECL_10"):
		case joaat("CLO_GRF_DECL_10"):
			if (!__LIB_0__::func_137(15415, -1))
			{
				__LIB_0__::func_186(15415, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_011_M"):
		case joaat("MP_Gunrunning_Award_011_F"):
		case joaat("CLO_GRM_DECL_11"):
		case joaat("CLO_GRF_DECL_11"):
			if (!__LIB_0__::func_137(15399, -1))
			{
				__LIB_0__::func_186(15399, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_012_M"):
		case joaat("MP_Gunrunning_Award_012_F"):
		case joaat("CLO_GRM_DECL_12"):
		case joaat("CLO_GRF_DECL_12"):
			if (!__LIB_0__::func_137(15404, -1))
			{
				__LIB_0__::func_186(15404, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_013_M"):
		case joaat("MP_Gunrunning_Award_013_F"):
		case joaat("CLO_GRM_DECL_13"):
		case joaat("CLO_GRF_DECL_13"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_014_M"):
		case joaat("MP_Gunrunning_Award_014_F"):
		case joaat("CLO_GRM_DECL_14"):
		case joaat("CLO_GRF_DECL_14"):
			if (!__LIB_0__::func_137(15392, -1))
			{
				__LIB_0__::func_186(15392, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_015_M"):
		case joaat("MP_Gunrunning_Award_015_F"):
		case joaat("CLO_GRM_DECL_15"):
		case joaat("CLO_GRF_DECL_15"):
			if (!__LIB_0__::func_137(15390, -1))
			{
				__LIB_0__::func_186(15390, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_016_M"):
		case joaat("MP_Gunrunning_Award_016_F"):
		case joaat("CLO_GRM_DECL_16"):
		case joaat("CLO_GRF_DECL_16"):
			if (!__LIB_0__::func_137(15402, -1))
			{
				__LIB_0__::func_186(15402, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_017_M"):
		case joaat("MP_Gunrunning_Award_017_F"):
		case joaat("CLO_GRM_DECL_17"):
		case joaat("CLO_GRF_DECL_17"):
			if (!__LIB_0__::func_137(15416, -1))
			{
				__LIB_0__::func_186(15416, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_018_M"):
		case joaat("MP_Gunrunning_Award_018_F"):
		case joaat("CLO_GRM_DECL_18"):
		case joaat("CLO_GRF_DECL_18"):
			if (!__LIB_1__::func_342(209, -1))
			{
				__LIB_1__::func_348(209, 1, -1, 1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Gunrunning_Award_019_M"):
		case joaat("MP_Gunrunning_Award_025_F"):
		case joaat("CLO_GRM_DECL_30"):
		case joaat("CLO_GRF_DECL_30"):
			if (!__LIB_0__::func_137(15426, -1))
			{
				__LIB_0__::func_186(15426, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_020_M"):
		case joaat("MP_Gunrunning_Award_020_F"):
		case joaat("CLO_GRM_DECL_31"):
		case joaat("CLO_GRF_DECL_31"):
			if (!__LIB_0__::func_137(15422, -1))
			{
				__LIB_0__::func_186(15422, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_020_M_ALT"):
		case joaat("MP_Gunrunning_Award_020_F_ALT"):
		case joaat("CLO_GRM_DECL_32"):
		case joaat("CLO_GRF_DECL_32"):
			if (!__LIB_0__::func_137(15423, -1))
			{
				__LIB_0__::func_186(15423, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_021_M"):
		case joaat("MP_Gunrunning_Award_021_F"):
		case joaat("CLO_GRM_DECL_33"):
		case joaat("CLO_GRF_DECL_33"):
			if (!__LIB_0__::func_137(15421, -1))
			{
				__LIB_0__::func_186(15421, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_022_M"):
		case joaat("MP_Gunrunning_Award_026_F"):
		case joaat("CLO_GRM_DECL_34"):
		case joaat("CLO_GRF_DECL_34"):
			if (!__LIB_0__::func_137(15427, -1))
			{
				__LIB_0__::func_186(15427, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_023_M"):
		case joaat("MP_Gunrunning_Award_023_F"):
		case joaat("CLO_GRM_DECL_35"):
		case joaat("CLO_GRF_DECL_35"):
			if (!__LIB_0__::func_137(15419, -1))
			{
				__LIB_0__::func_186(15419, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_024_M"):
		case joaat("MP_Gunrunning_Award_024_F"):
		case joaat("CLO_GRM_DECL_36"):
		case joaat("CLO_GRF_DECL_36"):
			if (!__LIB_0__::func_137(15420, -1))
			{
				__LIB_0__::func_186(15420, 1, -1);
				return 1;
			}
			break;
	}
	return 0;
}

int func_386()//Position - 0x7195F
{
	if ((((((__LIB_1__::func_675() || __LIB_2__::func_438()) || __LIB_1__::func_749()) || __LIB_2__::func_306()) || __LIB_12__::func_224()) || __LIB_0__::func_447()) || __LIB_1__::func_263())
	{
		return 1;
	}
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && BitTest(Global_4718592.f_36, 1))
	{
		return 1;
	}
	return 0;
}

int func_387(int iParam0, int iParam1)//Position - 0x792C4
{
	int iVar0;
	if (__LIB_0__::func_796(iParam0))
	{
		if (__LIB_1__::func_876(iParam1, iParam0, 0) || __LIB_1__::func_499(iParam1, iParam0))
		{
			iVar0 = 0;
			while (iVar0 < 7)
			{
				if (__LIB_1__::func_519(iParam0, iVar0) == iParam1)
				{
					return iVar0;
				}
				iVar0++;
			}
		}
	}
	return -1;
}

void func_388()//Position - 0xD07C5
{
	__LIB_1__::func_354(1725, Global_2359296[__LIB_0__::func_155() /*5567*/], -1, 1, 0);
	__LIB_1__::func_354(1726, Global_2359296[__LIB_0__::func_155() /*5567*/].f_1[0], -1, 1, 0);
	__LIB_1__::func_354(1727, Global_2359296[__LIB_0__::func_155() /*5567*/].f_1[1], -1, 1, 0);
	__LIB_1__::func_354(1728, Global_2359296[__LIB_0__::func_155() /*5567*/].f_1[2], -1, 1, 0);
	__LIB_1__::func_354(1729, Global_2359296[__LIB_0__::func_155() /*5567*/].f_1[3], -1, 1, 0);
	__LIB_1__::func_354(1730, Global_2359296[__LIB_0__::func_155() /*5567*/].f_1[4], -1, 1, 0);
}

char* func_389(int iParam0)//Position - 0x122772
{
	if (((__LIB_0__::func_165(iParam0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iParam0)) && !__LIB_12__::func_940(iParam0))
	{
		return __LIB_1__::func_917();
	}
	if (iParam0 != PLAYER::PLAYER_ID())
	{
		if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
		{
			return __LIB_1__::func_917();
		}
	}
	if (__LIB_0__::func_536(iParam0, 1))
	{
		if (__LIB_1__::func_802(iParam0))
		{
			return __LIB_1__::func_601(&(Global_1892703[iParam0 /*599*/].f_10.f_105));
		}
		else
		{
			return __LIB_1__::func_601(&(Global_1892703[iParam0 /*599*/].f_10.f_354));
		}
	}
	else
	{
		return __LIB_1__::func_601(&(Global_1892703[iParam0 /*599*/].f_10.f_354));
	}
	return "";
}

void func_390(var uParam0, char* sParam1, var uParam2, bool bParam3, char* sParam4, bool bParam5, int iParam6)//Position - 0x14985C
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(sParam1) > 15)
	{
		return;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
	{
		if (HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(sParam4) > 31)
		{
			return;
		}
	}
	iVar0 = __LIB_12__::func_744();
	if (iVar0 == -1)
	{
		return;
	}
	__LIB_2__::func_802(iVar0);
	__LIB_2__::func_801(iVar0, uParam0);
	__LIB_2__::func_800(iVar0, uParam2, bParam3);
	__LIB_2__::func_799(iVar0, sParam1);
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam4) && iParam6 == -99)
	{
		return;
	}
	__LIB_2__::func_798(iVar0);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
	{
		__LIB_12__::func_743(iVar0, sParam4, bParam5);
	}
	if (!iParam6 == -99)
	{
		__LIB_2__::func_796(iVar0, iParam6);
	}
}

struct<16> func_391()//Position - 0x14A943
{
	int iVar0;
	struct<16> Var1;
	iVar0 = __LIB_0__::func_818(PLAYER::PLAYER_ID());
	if (iVar0 != __LIB_0__::getMinusOneOrNull())
	{
		if (iVar0 != PLAYER::PLAYER_ID())
		{
			if (((__LIB_0__::func_165(iVar0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iVar0)) && !__LIB_12__::func_940(iVar0))
			{
				StringCopy(&Var1, __LIB_12__::func_943(iVar0, 0), 64);
				return Var1;
			}
			if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				StringCopy(&Var1, __LIB_12__::func_943(iVar0, 0), 64);
				return Var1;
			}
		}
		return Global_1892703[iVar0 /*599*/].f_10.f_105;
	}
	StringCopy(&Var1, "", 64);
	return Var1;
}

struct<16> func_392(int iParam0)//Position - 0x14A9F3
{
	struct<16> Var0;
	if (((__LIB_0__::func_165(iParam0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iParam0)) && !__LIB_12__::func_940(iParam0))
	{
		StringCopy(&Var0, __LIB_1__::func_917(), 64);
		return Var0;
	}
	if (iParam0 != PLAYER::PLAYER_ID())
	{
		if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
		{
			StringCopy(&Var0, __LIB_1__::func_917(), 64);
			return Var0;
		}
	}
	if (__LIB_0__::func_536(iParam0, 1))
	{
		if (__LIB_1__::func_802(iParam0))
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_105;
		}
		else
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_354;
		}
	}
	else
	{
		return Global_1892703[iParam0 /*599*/].f_10.f_354;
	}
	StringCopy(&Var0, "", 64);
	return Var0;
}

struct<16> func_393(int iParam0)//Position - 0x14AACB
{
	struct<16> Var0;
	if (Global_1892703[iParam0 /*599*/].f_10.f_121 != Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_121)
	{
		StringCopy(&Var0, __LIB_12__::func_943(iParam0, 0), 64);
		return Var0;
	}
	if (((__LIB_0__::func_165(iParam0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iParam0)) && !__LIB_12__::func_940(iParam0))
	{
		StringCopy(&Var0, __LIB_12__::func_943(iParam0, 0), 64);
		return Var0;
	}
	if (iParam0 != PLAYER::PLAYER_ID())
	{
		if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
		{
			StringCopy(&Var0, __LIB_12__::func_943(iParam0, 0), 64);
			return Var0;
		}
	}
	if (__LIB_1__::func_30(iParam0, 1) && !__LIB_0__::func_536(iParam0, 1))
	{
		if (__LIB_0__::func_796(iParam0))
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_338;
		}
		else
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_105;
		}
	}
	else
	{
		return Global_1892703[iParam0 /*599*/].f_10.f_338;
	}
	StringCopy(&Var0, "", 64);
	return Var0;
}

char* func_394()//Position - 0x14B6FF
{
	int iVar0;
	char* sVar1;
	iVar0 = __LIB_0__::func_818(PLAYER::PLAYER_ID());
	if (iVar0 != __LIB_0__::getMinusOneOrNull())
	{
		if (iVar0 != PLAYER::PLAYER_ID())
		{
			if (((__LIB_0__::func_165(iVar0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iVar0)) && !__LIB_12__::func_940(iVar0))
			{
				return __LIB_12__::func_943(iVar0, 0);
			}
			if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				return __LIB_12__::func_943(iVar0, 0);
			}
		}
		sVar1 = __LIB_1__::func_601(&(Global_1892703[iVar0 /*599*/].f_10.f_105));
		if (MISC::IS_STRING_NULL_OR_EMPTY(sVar1))
		{
			return __LIB_12__::func_943(iVar0, 0);
		}
		else
		{
			return sVar1;
		}
	}
	return "";
}

void func_395(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x4C283
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 5;
	Global_23150.f_6134++;
	fVar0 = 0f;
	if (bParam3)
	{
		fVar0 = __LIB_11__::func_251();
	}
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_11__::func_251();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_3__::func_124(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_11__::func_250();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_396(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x4CFD0
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	if (bParam3)
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 9;
	}
	else
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 7;
	}
	Global_23150.f_6134++;
	fVar0 = __LIB_11__::func_251();
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_11__::func_251();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_3__::func_124(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_11__::func_250();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_397(bool bParam0)//Position - 0x56C52
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 27))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 27);
			__LIB_12__::func_916(37, 20, 0);
			__LIB_12__::func_916(38, 20, 0);
			__LIB_12__::func_916(39, 20, 0);
			__LIB_12__::func_916(40, 20, 0);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 27))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 27);
		__LIB_12__::func_916(37, 0, 0);
		__LIB_12__::func_916(38, 0, 0);
		__LIB_12__::func_916(39, 0, 0);
		__LIB_12__::func_916(40, 0, 0);
	}
}

void func_398()//Position - 0x59C70
{
	int iVar0;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_3 = 0;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_4 = __LIB_13__::func_64();
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_5 = __LIB_1__::func_360(7212, -1, 0);
	iVar0 = __LIB_1__::func_360(7250, -1, 0);
	if (iVar0 != Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_7)
	{
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_7 = iVar0;
	}
	__LIB_13__::func_78(7216, 0);
	__LIB_13__::func_78(7218, 0);
	__LIB_13__::func_78(7219, 0);
	__LIB_13__::func_78(7220, 0);
}

void func_399(char* sParam0, bool bParam1)//Position - 0xCEE26
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5611 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_23150.f_79[Global_23150.f_5611 /*6*/]), sParam0, 24);
	Global_23150.f_5611++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 1;
	Global_23150.f_6134++;
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_11__::func_251();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_3__::func_124(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_11__::func_250();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_400(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x107A76
{
	__LIB_0__::func_144(uParam0, iParam1);
	__LIB_0__::func_143(uParam0, iParam2);
	__LIB_0__::func_142(uParam0, iParam3);
	__LIB_0__::func_141(uParam0, iParam5);
	__LIB_0__::func_368(uParam0, iParam4);
	__LIB_0__::func_140(uParam0, iParam6);
}

void func_401(int iParam0, int iParam1)//Position - 0xCE93
{
	switch (iParam0)
	{
		case 0:
			__LIB_11__::func_860(iParam1);
			break;
		case 2:
			__LIB_11__::func_859(iParam1);
			break;
		case 3:
			__LIB_12__::func_735(iParam1);
			break;
		case 4:
			__LIB_11__::func_856(iParam1);
			break;
		case 6:
			__LIB_11__::func_855(iParam1);
			break;
		case 5:
			__LIB_11__::func_854(iParam1);
			break;
		case 8:
			__LIB_11__::func_853(iParam1);
			break;
		case 9:
			__LIB_11__::func_852(iParam1);
			break;
		case 10:
			__LIB_11__::func_851(iParam1);
			break;
		case 1:
			__LIB_11__::func_850(iParam1);
			break;
		case 7:
			__LIB_11__::func_849(iParam1);
			break;
		case 11:
			__LIB_11__::func_848(iParam1);
			break;
		case 12:
			__LIB_11__::func_847(iParam1);
			break;
		case 13:
			__LIB_11__::func_846(iParam1);
			break;
		case 14:
			__LIB_11__::func_845(iParam1);
			break;
	}
}

void func_402(int iParam0, int iParam1)//Position - 0x16048
{
	switch (iParam0)
	{
		case 0:
			__LIB_11__::func_877(iParam1);
			break;
		case 2:
			__LIB_11__::func_876(iParam1);
			break;
		case 3:
			__LIB_12__::func_736(iParam1);
			break;
		case 4:
			__LIB_11__::func_872(iParam1);
			break;
		case 6:
			__LIB_11__::func_871(iParam1);
			break;
		case 5:
			__LIB_11__::func_870(iParam1);
			break;
		case 8:
			__LIB_11__::func_869(iParam1);
			break;
		case 9:
			__LIB_11__::func_868(iParam1);
			break;
		case 10:
			__LIB_11__::func_867(iParam1);
			break;
		case 1:
			__LIB_11__::func_866(iParam1);
			break;
		case 7:
			__LIB_11__::func_865(iParam1);
			break;
		case 11:
			__LIB_11__::func_864(iParam1);
			break;
		case 12:
			__LIB_11__::func_863(iParam1);
			break;
		case 13:
			__LIB_11__::func_862(iParam1);
			break;
		case 14:
			__LIB_11__::func_861(iParam1);
			break;
	}
}

void func_403(int iParam0, int iParam1)//Position - 0x1D8D8
{
	switch (iParam0)
	{
		case 0:
			__LIB_11__::func_893(iParam1);
			break;
		case 2:
			__LIB_11__::func_892(iParam1);
			break;
		case 3:
			__LIB_12__::func_737(iParam1);
			break;
		case 4:
			__LIB_11__::func_889(iParam1);
			break;
		case 6:
			__LIB_11__::func_888(iParam1);
			break;
		case 5:
			__LIB_11__::func_887(iParam1);
			break;
		case 8:
			__LIB_11__::func_886(iParam1);
			break;
		case 9:
			__LIB_11__::func_885(iParam1);
			break;
		case 10:
			__LIB_11__::func_884(iParam1);
			break;
		case 1:
			__LIB_11__::func_883(iParam1);
			break;
		case 7:
			__LIB_11__::func_882(iParam1);
			break;
		case 11:
			__LIB_11__::func_881(iParam1);
			break;
		case 12:
			__LIB_11__::func_880(iParam1);
			break;
		case 13:
			__LIB_11__::func_879(iParam1);
			break;
		case 14:
			__LIB_11__::func_878(iParam1);
			break;
	}
}

int func_404(int iParam0)//Position - 0x24058
{
	if (!__LIB_0__::func_438())
	{
		return 0;
	}
	if (!Global_78319)
	{
		return 0;
	}
	if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(49))
	{
		return 0;
	}
	if (iParam0 == 1)
	{
	}
	if (!__LIB_1__::func_342(100, -1))
	{
		if (iParam0 == 1)
		{
		}
		return 0;
	}
	if (!__LIB_1__::func_342(102, -1))
	{
		if (iParam0 == 1)
		{
		}
		return 0;
	}
	if (!__LIB_1__::func_342(101, -1))
	{
		if (iParam0 == 1)
		{
		}
		return 0;
	}
	__LIB_0__::func_746(49, 1);
	return 1;
}

int func_405(bool bParam0)//Position - 0x4B61
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(27))
	{
		return 0;
	}
	if (STATS::STAT_GET_INT(joaat("SP0_MONEY_TOTAL_SPENT"), &iVar0, -1))
	{
		iVar1 = (iVar1 + iVar0);
	}
	if (STATS::STAT_GET_INT(joaat("SP1_MONEY_TOTAL_SPENT"), &iVar0, -1))
	{
		iVar1 = (iVar1 + iVar0);
	}
	if (STATS::STAT_GET_INT(joaat("SP2_MONEY_TOTAL_SPENT"), &iVar0, -1))
	{
		iVar1 = (iVar1 + iVar0);
	}
	if (bParam0)
	{
	}
	iVar2 = 0;
	STATS::STAT_GET_INT(joaat("NUM_CASH_SPENT"), &iVar2, -1);
	if (iVar1 > 0 && (iVar2 / 2000000) != (iVar1 / 2000000))
	{
		STATS::STAT_SET_INT(joaat("NUM_CASH_SPENT"), iVar1, true);
		__LIB_0__::func_4(27, iVar1);
	}
	if (iVar1 < 200000000)
	{
		return 0;
	}
	__LIB_0__::func_746(27, 1);
	return 1;
}

int func_406(int iParam0, bool bParam1, int iParam2, int iParam3, int iParam4, bool bParam5)//Position - 0x25736
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (Global_262145.f_10629 /* Tunable: MPSV_DISABLE_DISPLAY_SLOTS */)
	{
		if (bParam5)
		{
			return __LIB_12__::func_55(iParam0, bParam1, iParam2, iParam3, iParam4, 0);
		}
		else
		{
			return __LIB_12__::func_56(iParam0, bParam1, iParam2, iParam3, iParam4, 0);
		}
	}
	if (__LIB_2__::func_782(iParam3, 0, 0))
	{
		iParam3 = __LIB_3__::func_553(iParam3);
	}
	if (!__LIB_1__::func_840(iParam2) && __LIB_3__::func_712(iParam2, 0))
	{
		iVar6 = __LIB_7__::func_365(iParam2);
		if (iVar6 >= 0)
		{
			if (bParam5)
			{
				__LIB_7__::func_140(iVar6, &iVar7, iParam4);
			}
			else
			{
				__LIB_1__::func_775(iVar6, &iVar7, 1);
			}
			if (iVar7 >= 0)
			{
				if (bParam5)
				{
					if (__LIB_1__::func_360(__LIB_1__::func_811(4, iVar7), iParam4, 0) == 0)
					{
						return iVar7;
					}
					else
					{
						iVar5 = __LIB_1__::func_360(__LIB_1__::func_811(1, iVar7), iParam4, 0);
						if (bParam1)
						{
							if (BitTest(iVar5, 0))
							{
								return iVar7;
							}
						}
					}
				}
				else if (Global_1585857[iVar7 /*142*/].f_66 == 0)
				{
					return iVar6;
				}
				else if (bParam1)
				{
					if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 0))
					{
						return iVar6;
					}
				}
			}
			else
			{
				return iVar6;
			}
		}
		return -1;
	}
	if (((__LIB_1__::func_360(5396, iParam4, 0) != 0 && __LIB_0__::func_253(15270, iParam4) == 7) && !Global_262145.f_21126 /* Tunable: DISABLE_STORE_PV */) && __LIB_8__::func_996(iParam2, 156))
	{
		if ((iParam3 == 0 || iParam3 == -1) || iParam3 == 1234)
		{
			iVar6 = __LIB_9__::func_320(156, iParam0, bParam1, iParam2, iParam4, bParam5);
			if (iVar6 != -1)
			{
				return iVar6;
			}
		}
	}
	if (__LIB_1__::func_869(iParam4) && __LIB_8__::func_996(iParam2, 223))
	{
		if ((iParam3 == 0 || iParam3 == -1) || iParam3 == 1236)
		{
			iVar6 = __LIB_9__::func_320(223, iParam0, bParam1, iParam2, iParam4, bParam5);
			if (iVar6 != -1)
			{
				return iVar6;
			}
		}
	}
	if (__LIB_1__::func_868(iParam4) && __LIB_8__::func_996(iParam2, 278))
	{
		if ((iParam3 == 0 || iParam3 == -1) || iParam3 == 1238)
		{
			iVar6 = __LIB_9__::func_320(278, iParam0, bParam1, iParam2, iParam4, bParam5);
			if (iVar6 != -1)
			{
				return iVar6;
			}
		}
	}
	iVar1 = 0;
	while (iVar1 < 29)
	{
		if (__LIB_8__::func_949(iVar1))
		{
		}
		else if (__LIB_2__::func_771(iVar1, iParam4) >= Global_1312193)
		{
			return -1;
		}
		else if (__LIB_2__::func_771(iVar1, iParam4) > 0 && __LIB_2__::func_771(iVar1, iParam4) <= 128)
		{
			iVar2 = 0;
			if ((iParam3 == 0 || iParam3 == -1) || iParam3 == __LIB_2__::func_771(iVar1, iParam4))
			{
				iVar4 = Global_1312193[__LIB_2__::func_771(iVar1, iParam4) /*1951*/].f_33;
				if (__LIB_2__::func_771(iVar1, iParam4) == 116)
				{
					iVar4 = 20;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 117)
				{
					iVar4 = 7;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 118)
				{
					iVar4 = 1;
				}
				else if ((__LIB_2__::func_771(iVar1, iParam4) == 119 || __LIB_2__::func_771(iVar1, iParam4) == 120) || __LIB_2__::func_771(iVar1, iParam4) == 121)
				{
					iVar4 = 10;
				}
				else if ((__LIB_2__::func_771(iVar1, iParam4) == 122 || __LIB_2__::func_771(iVar1, iParam4) == 123) || __LIB_2__::func_771(iVar1, iParam4) == 124)
				{
					iVar4 = 10;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 125)
				{
					iVar4 = 10;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 126)
				{
					iVar4 = 10;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 127)
				{
					iVar4 = 10;
				}
				else if (__LIB_2__::func_771(iVar1, iParam4) == 128)
				{
					iVar4 = 20;
				}
				if (__LIB_1__::func_819(iParam2))
				{
					if (iVar4 == 10)
					{
						iVar3 = 3;
					}
					else if (iVar4 == 6)
					{
						iVar3 = 2;
					}
					else
					{
						iVar3 = 1;
					}
					iVar2 = 10;
				}
				else
				{
					iVar3 = iVar4;
					iVar2 = 0;
				}
				iVar2 = (iVar2 + __LIB_4__::func_982(iVar1));
				iVar7 = -1;
				iVar6 = -1;
				switch (iParam0)
				{
					case 0:
						iVar0 = 0;
						while (iVar0 < iVar3)
						{
							iVar7 = -1;
							iVar6 = (iVar2 + iVar0);
							if (__LIB_6__::func_442(iVar6, __LIB_2__::func_771(iVar1, iParam4), iVar1) && __LIB_8__::func_996(iParam2, iVar6))
							{
								if (bParam5)
								{
									__LIB_7__::func_140(iVar6, &iVar7, iParam4);
								}
								else
								{
									__LIB_1__::func_775(iVar6, &iVar7, 1);
								}
								if (iVar7 >= 0)
								{
									if (bParam5)
									{
										if (__LIB_1__::func_360(__LIB_1__::func_811(4, iVar7), iParam4, 0) == 0)
										{
											return iVar7;
										}
										else
										{
											iVar5 = __LIB_1__::func_360(__LIB_1__::func_811(1, iVar7), iParam4, 0);
											if (bParam1)
											{
												if (BitTest(iVar5, 0))
												{
													return iVar7;
												}
											}
										}
									}
									else if (Global_1585857[iVar7 /*142*/].f_66 == 0)
									{
										return iVar6;
									}
									else if (bParam1)
									{
										if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 0))
										{
											return iVar6;
										}
									}
								}
								else
								{
									return iVar6;
								}
							}
							iVar0++;
						}
						break;
					case 1:
						iVar0 = 0;
						while (iVar0 < iVar3)
						{
							iVar7 = -1;
							iVar6 = (iVar2 + iVar0);
							if (__LIB_6__::func_442(iVar6, __LIB_2__::func_771(iVar1, iParam4), iVar1) && __LIB_8__::func_996(iParam2, iVar6))
							{
								if (bParam5)
								{
									__LIB_7__::func_140(iVar6, &iVar7, iParam4);
								}
								else
								{
									__LIB_1__::func_775(iVar6, &iVar7, 1);
								}
								if (iVar7 >= 0)
								{
									if (bParam5)
									{
										if (__LIB_1__::func_360(__LIB_1__::func_811(4, iVar7), iParam4, 0) == 0)
										{
											return iVar6;
										}
									}
									else if (Global_1585857[iVar7 /*142*/].f_66 == 0)
									{
										return iVar6;
									}
								}
								else
								{
									return iVar6;
								}
							}
							iVar0++;
						}
						if (bParam1)
						{
							iVar0 = 0;
							while (iVar0 < iVar3)
							{
								iVar7 = -1;
								iVar6 = (iVar2 + iVar0);
								if (__LIB_6__::func_442(iVar6, __LIB_2__::func_771(iVar1, iParam4), iVar1) && __LIB_8__::func_996(iParam2, iVar6))
								{
									if (bParam5)
									{
										__LIB_7__::func_140(iVar6, &iVar7, iParam4);
									}
									else
									{
										__LIB_1__::func_775(iVar6, &iVar7, 1);
									}
									if (iVar7 >= 0)
									{
										if (bParam5)
										{
											iVar5 = __LIB_1__::func_360(__LIB_1__::func_811(1, iVar7), iParam4, 0);
											if (BitTest(iVar5, 0))
											{
												return iVar6;
											}
										}
										else if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 0))
										{
											return iVar6;
										}
									}
									else
									{
										return iVar6;
									}
								}
								iVar0++;
							}
						}
						iVar0 = 0;
						while (iVar0 < iVar3)
						{
							iVar7 = -1;
							iVar6 = (iVar2 + iVar0);
							if (__LIB_6__::func_442(iVar6, __LIB_2__::func_771(iVar1, iParam4), iVar1) && __LIB_8__::func_996(iParam2, iVar6))
							{
								if (bParam5)
								{
									__LIB_7__::func_140(iVar6, &iVar7, iParam4);
								}
								else
								{
									__LIB_1__::func_775(iVar6, &iVar7, 1);
								}
								if (iVar7 >= 0)
								{
									if (bParam5)
									{
										iVar5 = __LIB_1__::func_360(__LIB_1__::func_811(1, iVar7), iParam4, 0);
										if (BitTest(iVar5, 1) && !BitTest(iVar5, 2))
										{
											return iVar6;
										}
									}
									else if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 1) && !BitTest(Global_1585857[iVar7 /*142*/].f_103, 2))
									{
										return iVar6;
									}
								}
								else
								{
									return iVar6;
								}
							}
							iVar0++;
						}
						break;
					case 2:
						iVar0 = 0;
						while (iVar0 < iVar3)
						{
							iVar7 = -1;
							iVar6 = (iVar2 + iVar0);
							if (__LIB_6__::func_442(iVar6, __LIB_2__::func_771(iVar1, iParam4), iVar1) && __LIB_8__::func_996(iParam2, iVar6))
							{
								if (bParam5)
								{
									__LIB_7__::func_140(iVar6, &iVar7, iParam4);
								}
								else
								{
									__LIB_1__::func_775(iVar6, &iVar7, 1);
								}
								if (iVar7 >= 0)
								{
									if (bParam5)
									{
										if (__LIB_1__::func_360(__LIB_1__::func_811(4, iVar7), iParam4, 0) == 0)
										{
											return iVar6;
										}
										else
										{
											iVar5 = __LIB_1__::func_360(__LIB_1__::func_811(1, iVar7), iParam4, 0);
											if (bParam1)
											{
												if (BitTest(iVar5, 0))
												{
													return iVar6;
												}
												else if (BitTest(iVar5, 1))
												{
													return iVar6;
												}
											}
											else if (BitTest(iVar5, 1))
											{
												return iVar6;
											}
										}
									}
									else if (Global_1585857[iVar7 /*142*/].f_66 == 0)
									{
										return iVar6;
									}
									else if (bParam1)
									{
										if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 0))
										{
											return iVar6;
										}
										else if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 1))
										{
											return iVar6;
										}
									}
									else if (BitTest(Global_1585857[iVar7 /*142*/].f_103, 1))
									{
										return iVar6;
									}
								}
								else
								{
									return iVar6;
								}
							}
							iVar0++;
						}
						break;
					}
				}
		}
		iVar1++;
	}
	return -1;
}

void func_407(var uParam0, int iParam1)//Position - 0xC2AC6
{
	if (__LIB_1__::func_260(uParam0->f_1))
	{
		uParam0->f_73 = 1;
	}
	if (iParam1 == __LIB_0__::getMinusOneOrNull() || !__LIB_0__::func_156(iParam1, 0, 1))
	{
		return;
	}
	if (__LIB_1__::func_256(uParam0->f_1))
	{
		if (uParam0->f_71 == 1)
		{
			uParam0->f_73 = __LIB_2__::func_795(iParam1, -2, 0, 0, 0);
		}
	}
}

void func_408(bool bParam0, bool bParam1)//Position - 0xFD5
{
	if (bParam0)
	{
		if (Global_2715699.f_2846.f_85 == 0)
		{
			if (!DLC::GET_IS_LOADING_SCREEN_ACTIVE())
			{
				if (bParam1)
				{
					Global_2715699.f_2846.f_153 = 1;
					Global_2715699.f_2846.f_85 = 1;
				}
			}
		}
	}
	else if (Global_2715699.f_2846.f_85 == 1 || Global_2715699.f_2846.f_85 == 2)
	{
		Global_2715699.f_2846.f_85 = 3;
	}
}

int func_409(int iParam0)//Position - 0x61FA
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_262145.f_6210[iParam0])
	{
		if (Global_262145.f_5065[iParam0 /*51*/][iVar0] == 0)
		{
			return iVar0;
		}
		iVar0++;
	}
	return iVar0;
}

void func_410(int iParam0, bool bParam1)//Position - 0x6FE1
{
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&Global_8136, iParam0);
		return;
	}
	MISC::CLEAR_BIT(&Global_8136, iParam0);
}

void func_411(bool bParam0)//Position - 0x8D67
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139), 21);
	}
}

int func_412(int iParam0)//Position - 0x8E4C
{
	var uVar0;
	int iVar1;
	var uVar2;
	uVar0 = Global_1659583[iParam0];
	iVar1 = uVar0;
	if (STATS::STAT_GET_BOOL(iVar1, &uVar2, -1))
	{
		return uVar2;
	}
	return 0;
}

void func_413(int iParam0)//Position - 0x5FCC
{
	__LIB_8__::func_321();
	MISC::SET_BIT(&(Global_2714762.f_2), 11);
	if (iParam0 && Global_262145.f_29726 /* Tunable: 410392007 */)
	{
		if (BitTest(Global_2715699.f_1.f_2809, 0))
		{
			MISC::CLEAR_BIT(&(Global_2715699.f_1.f_2809), 0);
		}
	}
}

int func_414()//Position - 0x8E74
{
	struct<6> Var0;
	Var0 = { __LIB_6__::func_274() };
	if (MISC::ARE_STRINGS_EQUAL(&Var0, ".") || MISC::IS_STRING_NULL_OR_EMPTY(&Var0))
	{
		return 0;
	}
	return 1;
}

bool func_415()//Position - 0x8EA1
{
	return __LIB_0__::func_137(__LIB_8__::func_279(6), -1);
}

int func_416()//Position - 0xC57D
{
	if (__LIB_0__::func_979(PLAYER::PLAYER_ID(), 8))
	{
		return 1;
	}
	if (__LIB_0__::func_979(PLAYER::PLAYER_ID(), 10))
	{
		return 1;
	}
	if (__LIB_0__::func_979(PLAYER::PLAYER_ID(), 12))
	{
		return 1;
	}
	if (__LIB_0__::func_979(PLAYER::PLAYER_ID(), 14))
	{
		return 1;
	}
	if (__LIB_0__::func_979(PLAYER::PLAYER_ID(), 13))
	{
		return 1;
	}
	if (__LIB_12__::func_469())
	{
		return 1;
	}
	if (__LIB_12__::func_468())
	{
		return 1;
	}
	if (!__LIB_0__::func_192() && !__LIB_0__::func_191())
	{
		if (!__LIB_1__::func_202())
		{
			if (!__LIB_12__::func_479())
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_417()//Position - 0xA8DF
{
	if (HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_11__::func_773())
	{
		return 1;
	}
	return 0;
}

void func_418(char* sParam0)//Position - 0xC66
{
	if (Global_22668 != 0)
	{
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
		{
		}
		Global_22668 = 0;
	}
}

void func_419(int iParam0, int iParam1, char* sParam2, int iParam3, int* iParam4, int iParam5)//Position - 0x1623
{
	if (iParam1 == 1)
	{
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", SYSTEM::TO_FLOAT(iParam0), 0f, SYSTEM::TO_FLOAT(iParam1), -1f, -1f, 0, 0, 0, 0, 0);
		MISC::CLEAR_BIT(iParam4, iParam3);
		__LIB_13__::func_410(iParam5, 0);
		return;
	}
	if (Global_20254)
	{
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", SYSTEM::TO_FLOAT(iParam0), 1f, SYSTEM::TO_FLOAT(iParam1), -1f, -1f, sParam2, 0, 0, 0, 0);
		MISC::SET_BIT(iParam4, iParam3);
		__LIB_13__::func_410(iParam5, 1);
		return;
	}
	__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", SYSTEM::TO_FLOAT(iParam0), 1f, SYSTEM::TO_FLOAT(iParam1), -1f, -1f, 0, 0, 0, 0, 0);
	MISC::SET_BIT(iParam4, iParam3);
	__LIB_13__::func_410(iParam5, 1);
}

void func_420(char* sParam0)//Position - 0x16F3
{
	__LIB_13__::func_91(Global_20247, "SET_HEADER", sParam0, 0, 0, 0, 0);
}

void Reset_New_Invites_Indicator()//Position - 0x5AA
{
	if (!Global_20465)
	{
		if (Global_20266.f_1 == 6)
		{
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT_EMPTY", 1f, -1082130432, -1082130432, -1082130432, -1082130432);
			__LIB_3__::initGlobal_20247(1);
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 1f, SYSTEM::TO_FLOAT(Global_20246), -1082130432, -1082130432, -1082130432);
		}
	}
}

char* func_422(int iParam0)//Position - 0x199D
{
	char* sVar0;
	int iVar1;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		sVar0 = __LIB_1__::func_601(&(Global_1892703[iParam0 /*599*/].f_10.f_105));
		return sVar0;
	}
	if (Global_1892703[iParam0 /*599*/].f_10.f_121 != Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_121)
	{
		sVar0 = __LIB_12__::func_943(iParam0, 0);
		return sVar0;
	}
	if (((__LIB_0__::func_165(iParam0, 28) || __LIB_0__::func_165(PLAYER::PLAYER_ID(), 28)) || __LIB_12__::func_932(iParam0)) && !__LIB_12__::func_940(iParam0))
	{
		return __LIB_12__::func_943(iParam0, 0);
	}
	iVar1 = __LIB_0__::func_818(iParam0);
	if (iVar1 != __LIB_0__::getMinusOneOrNull())
	{
		if (iVar1 != PLAYER::PLAYER_ID())
		{
			if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				return __LIB_12__::func_943(iVar1, 0);
			}
		}
	}
	if (iVar1 != __LIB_0__::getMinusOneOrNull())
	{
		sVar0 = __LIB_1__::func_601(&(Global_1892703[iVar1 /*599*/].f_10.f_105));
		if (MISC::IS_STRING_NULL_OR_EMPTY(sVar0))
		{
			return __LIB_12__::func_943(iVar1, 0);
		}
		else
		{
			return sVar0;
		}
	}
	return "";
}

Vector3 func_423(struct<3> Param0, struct<3> Param1, float fParam2)//Position - 0x2E96
{
	return Param0 + Param1 - Param0 * Vector(fParam2, fParam2, fParam2);
}

void func_424()//Position - 0x86A
{
	char cVar0[24];
	if (Global_20249 == 1)
	{
		return;
	}
	if (Global_20266.f_1 < 4)
	{
		return;
	}
	while (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247))
	{
		if (Global_78319)
		{
			return;
		}
		SYSTEM::WAIT(0);
	}
	switch (Global_20266.f_1)
	{
		case 6:
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT_EMPTY", 1f, -1082130432, -1082130432, -1082130432, -1082130432);
			__LIB_3__::initGlobal_20247(Global_8741);
			if (Global_8741 == 1)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 1f, SYSTEM::TO_FLOAT(Global_20270), -1082130432, -1082130432, -1082130432);
				Global_20246 = Global_20270;
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 1f, SYSTEM::TO_FLOAT(Global_20271), -1082130432, -1082130432, -1082130432);
				Global_20246 = Global_20271;
			}
			if (Global_20254)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 2f, -1f, -1f, "CELL_205" /* GXT: SELECT */, 0, 0, 0, 0);
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 4f, -1f, -1f, "CELL_206" /* GXT: BACK */, 0, 0, 0, 0);
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 2f, -1f, -1f, 0, 0, 0, 0, 0);
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 4f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			if (Global_20466 == 0)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
				MISC::CLEAR_BIT(&Global_8136, 17);
			}
			else if (Global_78319)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
				MISC::CLEAR_BIT(&Global_8136, 17);
			}
			else
			{
				if (Global_20465 == 1)
				{
					if (Global_20254)
					{
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 20f, -1f, -1f, "CELL_225" /* GXT: NEXT */, 0, 0, 0, 0);
					}
					else
					{
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 20f, -1f, -1f, 0, 0, 0, 0, 0);
					}
				}
				else if (Global_20254)
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 3f, -1f, -1f, "CELL_225" /* GXT: NEXT */, 0, 0, 0, 0);
				}
				else
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 3f, -1f, -1f, 0, 0, 0, 0, 0);
				}
				MISC::SET_BIT(&Global_8136, 17);
			}
			if (Global_78319)
			{
				__LIB_13__::func_109();
				MISC::CLEAR_BIT(&Global_8138, 9);
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 1f, SYSTEM::TO_FLOAT(Global_20270), -1082130432, -1082130432, -1082130432);
			}
			break;
		case 7:
			break;
		case 10:
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
			if (BitTest(Global_8136, 20))
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_202" /* GXT: END CALL */, 0, 0, 0, 0);
				if (Global_20209)
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
				}
			}
			else
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			break;
		case 9:
			if (Global_20265 == 1)
			{
				__LIB_13__::func_97();
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_THEME", SYSTEM::TO_FLOAT(Global_113386.f_14051[Global_20266 /*20*/].f_6), -1082130432, -1082130432, -1082130432, -1082130432);
				if (Global_21618)
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(4);
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CONDFON" /* GXT: ~a~ */);
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&Global_21620);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_300" /* GXT: CHAR_DEFAULT */);
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_217" /* GXT: INCOMING CALL */);
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_217" /* GXT: INCOMING CALL */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				else if (__LIB_0__::func_168(Global_7451, Global_20266) == 0)
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(2), -1f, -1f, &(Global_117[Global_7451 /*10*/].f_4), "CELL_300" /* GXT: CHAR_DEFAULT */, "CELL_217" /* GXT: INCOMING CALL */, "CELL_195" /* GXT: Unknown */, 0);
				}
				else
				{
					__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(2), -1f, -1f, &(Global_1998[Global_7451 /*29*/].f_3), &(Global_1998[Global_7451 /*29*/].f_7), "CELL_217" /* GXT: INCOMING CALL */, &(Global_1998[Global_7451 /*29*/].f_3), 0);
				}
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
			}
			else if (Global_21605 == 4 || Global_21605 == 3)
			{
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_THEME", SYSTEM::TO_FLOAT(Global_113386.f_14051[Global_20266 /*20*/].f_6), -1082130432, -1082130432, -1082130432, -1082130432);
				__LIB_13__::func_97();
				if (Global_21618)
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(4);
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CONDFON" /* GXT: ~a~ */);
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&Global_21620);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_300" /* GXT: CHAR_DEFAULT */);
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_219" /* GXT: CONNECTED */);
					__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("CELL_219" /* GXT: CONNECTED */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				else
				{
					if (Global_21863)
					{
						StringCopy(&cVar0, "CELL_219" /* GXT: CONNECTED */, 24);
					}
					else
					{
						StringCopy(&cVar0, "CELL_211" /* GXT: DIALING... */, 24);
					}
					if (__LIB_0__::func_168(Global_7451, Global_20266) == 0)
					{
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT_EMPTY", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(3), -1f, -1f, &(Global_117[Global_7451 /*10*/].f_4), "CELL_300" /* GXT: CHAR_DEFAULT */, &cVar0, "CELL_195" /* GXT: Unknown */, 0);
					}
					else
					{
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT_EMPTY", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
						__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(3), -1f, -1f, &(Global_1998[Global_7451 /*29*/].f_3), &(Global_1998[Global_7451 /*29*/].f_7), &cVar0, &(Global_1998[Global_7451 /*29*/].f_3), 0);
					}
				}
				__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "DISPLAY_VIEW", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
			}
			__LIB_13__::func_122();
			break;
		default:
			break;
	}
}

bool func_425(int iParam0)//Position - 0x6BA
{
	return BitTest(Global_1888478.f_3, iParam0);
}

void func_426()//Position - 0x6CB
{
	Global_1888478 = (Global_1888478 - 1);
}

void func_427()//Position - 0xE2E
{
	Global_1888478.f_1 = (Global_1888478.f_1 - 1);
	if (Global_1888478.f_1 < 0)
	{
		Global_1888478.f_1 = 0;
	}
}

void func_428(int iParam0)//Position - 0xEA5
{
	struct<2> Var0;
	Var0.f_0 = 1922361302;
	Var0.f_1 = PLAYER::PLAYER_ID();
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 2, iParam0);
	}
}

int func_429()//Position - 0xF29
{
	return Global_1888478;
}

void func_430()//Position - 0x197C
{
	if (Global_2815059.f_4028 != 0)
	{
		Global_2815059.f_4028 = 5;
	}
}

int func_431(int iParam0)//Position - 0x2B6D
{
	switch (iParam0)
	{
		case 15:
			return 181;
		case 14:
			return 182;
		case 122:
			return 186;
		case 11:
			return 183;
		case 13:
			return 184;
		case 12:
			return 185;
		case 8:
			return 188;
		case 1:
			return 189;
		case 5:
			return 187;
		case 6:
			return 190;
		case 3:
			return 193;
		case 0:
			return 191;
		case 2:
			return 192;
		case 148:
			return 49;
		case 151:
			return 52;
		case 152:
			return 53;
		case 157:
			return 54;
		case 153:
			return 55;
		case 154:
			return 56;
		case 155:
			return 57;
		case 159:
			return 58;
		case 162:
			return 51;
		case 142:
			return 60;
		case 160:
			return 62;
		case 164:
			return 63;
		case 163:
			return 64;
		case 166:
			return 65;
		case 167:
			return 66;
		case 168:
			return 67;
		case 169:
			return 68;
		case 170:
			return 69;
		case 171:
			return 70;
		case 172:
			return 71;
		case 173:
			return 72;
		case 178:
			return 73;
		case 188:
			return 74;
		case 214:
			return 75;
		case 215:
			return 76;
		case 216:
			return 77;
		case 217:
			return 78;
		case 218:
			return 79;
		case 219:
			return 80;
		case 220:
			return 81;
		case 221:
			return 82;
		case 179:
			return 84;
		case 189:
			return 83;
		case 180:
			return 85;
		case 182:
			return 87;
		case 183:
			return 88;
		case 185:
			return 89;
		case 186:
			return 90;
		case 190:
			return 91;
		case 191:
			return 92;
		case 192:
			return 93;
		case 193:
			return 94;
		case 205:
			return 102;
		case 194:
			return 95;
		case 197:
			return 96;
		case 198:
			return 97;
		case 195:
			return 98;
		case 199:
			return 99;
		case 200:
			return 100;
		case 201:
			return 101;
		case 207:
			return 103;
		case 208:
			return 104;
		case 209:
			return 105;
		case 210:
			return 106;
		case 225:
			return 107;
		case 226:
			return 108;
		case 227:
			return 109;
		case 229:
			return 110;
		case 230:
			return 111;
		case 233:
			return 113;
		case 237:
			return 115;
		case 238:
			return 116;
		case 249:
			return 123;
		case 239:
			return 117;
		case 240:
			return 118;
		case 241:
			return 119;
		case 242:
			return 120;
		case 244:
			return 121;
		case 248:
			return 122;
		case 250:
			return 124;
		case 243:
			return 125;
		case 158:
			return 126;
		case 181:
			return 86;
		case 150:
			return 127;
		case 24:
			return 128;
		case 26:
			return 129;
		case 256:
			return 130;
		case 258:
			return 131;
		case 259:
			return 133;
		case 271:
			return 134;
		case 273:
			return 135;
		case 276:
			return 136;
		case 277:
			return 137;
		case 262:
			return 138;
		case 263:
			return 139;
		case 264:
			return 140;
		case 268:
			return 141;
		case 269:
			return 143;
		case 270:
			return 144;
		case 275:
			return 145;
		case 286:
			return 146;
		case 267:
			return 148;
		case 266:
			return 147;
		case 287:
			return 149;
		case 289:
			return 150;
		case 147:
			return 151;
		case 291:
			return 152;
		case 292:
			return 153;
		case 293:
			return 154;
		case 294:
			return 155;
		case 295:
			return 156;
		case 296:
			return 157;
		case 297:
			return 158;
		case 298:
			return 159;
		case 299:
			return 160;
		case 300:
			return 161;
		case 301:
			return 162;
		default:
	}
	return 0;
}

int func_432()//Position - 0x40EF
{
	if (Global_4718592 == 2 || Global_4718592 == 8)
	{
		return 1;
	}
	return 0;
}

int func_433()//Position - 0x7823
{
	return Global_2725856;
}

Vector3 func_434(int iParam0, int iParam1)//Position - 0x8808
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return -210.4709f, -1306.3175f, 30.336f;
				case 1:
					return -1598.3271f, -1040.5378f, 12.0183f;
				case 2:
					return -21.2711f, -1732.453f, 28.304f;
				case 3:
					return 1992.482f, 3058.0784f, 46.0576f;
				case 4:
					return 960.3523f, -1745.8442f, 30.2208f;
				case 5:
					return 775.7347f, -1367.343f, 25.5669f;
				case 6:
					return -321.3307f, -1495.5978f, 29.6536f;
				case 7:
					return -210.4709f, -1306.3175f, 30.336f;
				default:
			}
			return -210.4709f, -1306.3175f, 30.336f;
		default:
	}
	return 0f, 0f, 0f;
}

bool func_435(int iParam0)//Position - 0x8947
{
	return iParam0 == 14;
}

void func_436(var uParam0, int iParam1)//Position - 0xF043
{
	MISC::SET_BIT(uParam0[(iParam1 / 32)], (iParam1 % 32));
}

int func_437(bool bParam0)//Position - 0x14350
{
	if (bParam0 < 31)
	{
		return 0;
	}
	else if (bParam0 < 62)
	{
		return 1;
	}
	return (bParam0 / 31);
}

char* func_438()//Position - 0x473B2
{
	return HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("CREATOR_NO_T" /* GXT: No translation. */);
}

void func_439(var uParam0)//Position - 0x51531
{
	*uParam0 = 0;
	uParam0->f_1 = 0;
	uParam0->f_2 = 0;
	uParam0->f_3 = 0;
}

struct<6> func_440(int iParam0, bool bParam1, bool bParam2)//Position - 0x5658E
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 0:
		case 1:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_LR" /* GXT: Bookmarked Land Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_LR" /* GXT: Land Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_LR" /* GXT: ~a~ Land Race */, 24);
			return Var0;
		case 10:
		case 11:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_OFR" /* GXT: Bookmarked On Foot Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_OFR" /* GXT: On Foot Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_OFR" /* GXT: ~a~ On Foot Race */, 24);
			return Var0;
		case 12:
		case 13:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_BR" /* GXT: Bookmarked Bike Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_BR" /* GXT: Bike Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_BR" /* GXT: ~a~ Bike Race */, 24);
			return Var0;
		case 6:
		case 7:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_SR" /* GXT: Bookmarked Stunt Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_STR" /* GXT: Stunt Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_SR" /* GXT: ~a~ Stunt Race */, 24);
			return Var0;
		case 18:
		case 19:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TAR" /* GXT: Bookmarked Target Assault Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_TAR" /* GXT: Target Assault Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TAR" /* GXT: ~a~ Target Assault Race */, 24);
			return Var0;
		case 2:
		case 3:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_WR" /* GXT: Bookmarked Sea Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_WR" /* GXT: Sea Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_WR" /* GXT: ~a~ Sea Race */, 24);
			return Var0;
		case 4:
		case 5:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_AR" /* GXT: Bookmarked Air Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_AR" /* GXT: Air Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_AR" /* GXT: ~a~ Air Race */, 24);
			return Var0;
		case 20:
		case 21:
		case 22:
		case 23:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_AW" /* GXT: Bookmarked Arena Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTARAWR" /* GXT: Arena Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_AW" /* GXT: ~a~ Arena Race */, 24);
			return Var0;
		case 24:
		case 25:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_OW" /* GXT: Bookmarked Open Wheel Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_OW" /* GXT: Open Wheel Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_OW" /* GXT: ~a~ Open Wheel Race */, 24);
			return Var0;
		case 26:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_PU" /* GXT: Bookmarked Pursuit Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_PU" /* GXT: Pursuit Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_PU" /* GXT: ~a~ Pursuit Race */, 24);
			return Var0;
		case 27:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_ST" /* GXT: Bookmarked Street Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_ST" /* GXT: Street Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_ST" /* GXT: ~a~ Street Race */, 24);
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_LR" /* GXT: Land Race */, 24);
	return Var0;
}

struct<6> func_441(int iParam0, bool bParam1, bool bParam2)//Position - 0x56891
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 0:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_DM" /* GXT: Bookmarked Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_DM" /* GXT: Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_DM" /* GXT: ~a~ Deathmatch */, 24);
			return Var0;
		case 1:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TDM" /* GXT: Bookmarked Team Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_TDM" /* GXT: Team Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TDM" /* GXT: ~a~ Team Deathmatch */, 24);
			return Var0;
		case 2:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_VDM" /* GXT: Bookmarked Vehicle Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_VDM" /* GXT: Vehicle Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_VDM" /* GXT: ~a~ Vehicle Deathmatch */, 24);
			return Var0;
		case 3:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_KOTH" /* GXT: Bookmarked King of the Hill */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_KOTH" /* GXT: King of the Hill */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_KOTH" /* GXT: ~a~ King of the Hill */, 24);
			return Var0;
		case 4:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TKOTH" /* GXT: Bookmarked Team King of the Hill */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTR_TKOTH" /* GXT: Team King of the Hill */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TKOTH" /* GXT: ~a~ Team King of the Hill */, 24);
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_DM" /* GXT: Deathmatch */, 24);
	return Var0;
}

struct<6> func_442(int iParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x569E4
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 1:
			StringCopy(&Var0, "FMMC_RSTAR_MHST" /* GXT: Heist */, 24);
			return Var0;
		case 7:
			StringCopy(&Var0, "FMMC_RSTAR_HP" /* GXT: Setup */, 24);
			return Var0;
		case 5:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_LTS" /* GXT: Bookmarked LTS */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MLTS" /* GXT: Last Team Standing */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_LTS" /* GXT: ~a~ Last Team Standing */, 24);
			return Var0;
		case 6:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_CTF" /* GXT: Bookmarked Capture */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MCTF" /* GXT: Capture */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_CTF" /* GXT: ~a~ Capture */, 24);
			return Var0;
		case 8:
			if (iParam3 == 0)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MSL" /* GXT: Lamar */, 24);
			}
			else
			{
				StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
			}
			return Var0;
		case 129:
			StringCopy(&Var0, "FMMC_RSTAR_MSA" /* GXT: Adversary Mode */, 24);
			return Var0;
		case 2:
		case 3:
		case 0:
		case 4:
		case 9:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_MISS" /* GXT: Bookmarked Mission */, 24);
			}
			else
			{
				StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
			}
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
	return Var0;
}

bool func_443()//Position - 0x56C67
{
	return Global_2656879;
}

int func_444(int iParam0)//Position - 0x56EAF
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1659440)
	{
		if (!Global_2656326[iVar0 /*46*/].f_7)
		{
			if (Global_2656326[iVar0 /*46*/].f_6 == iParam0)
			{
				return iVar0;
			}
		}
		iVar0++;
	}
	return -1;
}

var func_445(var uParam0, int iParam1)//Position - 0x88DC1
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = iParam1;
	iVar1 = (iVar0 / 32);
	iVar2 = (iVar0 % 32);
	return BitTest((*uParam0)[iVar1], iVar2);
}

void func_446(int iParam0, var uParam1)//Position - 0x1D4A74
{
	*uParam1 = { Global_1853348[iParam0 /*834*/].f_267.f_69 };
}

bool func_447(int iParam0)//Position - 0x1D54E9
{
	return Global_2686568[iParam0 /*41*/] == 5;
}

var func_448(int iParam0)//Position - 0x1D55C6
{
	return Global_2621865[iParam0 /*26*/].f_15.f_1;
}

int func_449(int iParam0, char* sParam1, bool bParam2)//Position - 0x1D8251
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1659410)
	{
		if (!Global_2654152[iVar0 /*82*/].f_11)
		{
			if (Global_2654152[iVar0 /*82*/].f_10 == iParam0)
			{
				if (!bParam2)
				{
					return iVar0;
				}
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
				{
					return iVar0;
				}
				if (MISC::ARE_STRINGS_EQUAL(sParam1, &(Global_2654152[iVar0 /*82*/].f_21)))
				{
					return iVar0;
				}
			}
		}
		iVar0++;
	}
	return -1;
}

var func_450(int iParam0)//Position - 0x1D98E7
{
	return Global_1573860[iParam0 /*4*/].f_1;
}

struct<21> func_451(int iParam0)//Position - 0x1DA77B
{
	return Global_2686568[iParam0 /*41*/].f_3;
}

int func_452(int iParam0)//Position - 0x1DA7DA
{
	return Global_2686568[iParam0 /*41*/].f_3.f_17;
}

void initGlobal_2654152(int iParam0)//Position - 0x1DA945
{
	Global_2654152[iParam0 /*82*/] = 0;
	Global_2654152[iParam0 /*82*/].f_2 = 0;
	Global_2654152[iParam0 /*82*/].f_3 = 0;
	Global_2654152[iParam0 /*82*/].f_4 = 0;
	Global_2654152[iParam0 /*82*/].f_5 = 0;
	Global_2654152[iParam0 /*82*/].f_6 = { 0f, 0f, 0f };
	Global_2654152[iParam0 /*82*/].f_9 = __LIB_0__::getMinusOneOrNull();
	Global_2654152[iParam0 /*82*/].f_10 = 145;
	Global_2654152[iParam0 /*82*/].f_11 = 1;
	Global_2654152[iParam0 /*82*/].f_12 = 0;
	Global_2654152[iParam0 /*82*/].f_13 = -1;
	Global_2654152[iParam0 /*82*/].f_14 = -1;
	Global_2654152[iParam0 /*82*/].f_15 = 0;
	Global_2654152[iParam0 /*82*/].f_16 = 0;
	Global_2654152[iParam0 /*82*/].f_16.f_1 = 0;
	Global_2654152[iParam0 /*82*/].f_16.f_2 = 0;
	Global_2654152[iParam0 /*82*/].f_19 = 0;
	Global_2654152[iParam0 /*82*/].f_20 = 0;
	StringCopy(&(Global_2654152[iParam0 /*82*/].f_21), "", 64);
	StringCopy(&(Global_2654152[iParam0 /*82*/].f_37), "", 64);
	Global_2654152[iParam0 /*82*/].f_54 = -1;
	Global_2654152[iParam0 /*82*/].f_64 = 16777215;
	Global_2654152[iParam0 /*82*/].f_65 = 0;
	Global_2654152[iParam0 /*82*/].f_66 = 0;
	Global_2654152[iParam0 /*82*/].f_67 = 0;
	Global_2654152[iParam0 /*82*/].f_68 = 0;
	Global_2654152[iParam0 /*82*/].f_69 = 0;
	Global_2654152[iParam0 /*82*/].f_70 = -1;
	Global_2654152[iParam0 /*82*/].f_71 = 0;
	Global_2654152[iParam0 /*82*/].f_72 = 0;
	Global_2654152[iParam0 /*82*/].f_73 = -1;
	Global_2654152[iParam0 /*82*/].f_74 = 0;
	Global_2654152[iParam0 /*82*/].f_76 = 0;
	Global_2654152[iParam0 /*82*/].f_77 = 0;
	Global_2654152[iParam0 /*82*/].f_78 = 0;
	Global_2654152[iParam0 /*82*/].f_79 = 0;
	Global_2654152[iParam0 /*82*/].f_80 = 0;
	Global_2654152[iParam0 /*82*/].f_81 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		Global_2654152[iParam0 /*82*/].f_53 = NETWORK::GET_NETWORK_TIME();
		Global_2654152[iParam0 /*82*/].f_55 = NETWORK::GET_NETWORK_TIME();
	}
}

void func_454(var uParam0)//Position - 0x1DAE24
{
	*uParam0 = 0;
	uParam0->f_1 = -1;
	uParam0->f_2 = -1;
	StringCopy(&(uParam0->f_3), "", 24);
	uParam0->f_9 = -1;
}

bool func_455(int iParam0)//Position - 0x1DAED5
{
	return Global_2654152[iParam0 /*82*/].f_2;
}

bool func_456(int iParam0)//Position - 0x1DAFD0
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_36.f_18, 15);
}

void  initGlobal_2656326(int iParam0)//Position - 0x1DB588
{
	Global_2656326[iParam0 /*46*/] = 0;
	Global_2656326[iParam0 /*46*/].f_2 = 0;
	Global_2656326[iParam0 /*46*/].f_3 = 0;
	Global_2656326[iParam0 /*46*/].f_4 = 0;
	Global_2656326[iParam0 /*46*/].f_5 = __LIB_0__::getMinusOneOrNull();
	Global_2656326[iParam0 /*46*/].f_6 = 145;
	Global_2656326[iParam0 /*46*/].f_7 = 1;
	Global_2656326[iParam0 /*46*/].f_8 = -1;
	Global_2656326[iParam0 /*46*/].f_9 = -1;
	StringCopy(&(Global_2656326[iParam0 /*46*/].f_10), "", 64);
	Global_2656326[iParam0 /*46*/].f_26 = -1;
	StringCopy(&(Global_2656326[iParam0 /*46*/].f_27), "", 32);
	Global_2656326[iParam0 /*46*/].f_35 = -1;
	Global_2656326[iParam0 /*46*/].f_36 = -1;
	Global_2656326[iParam0 /*46*/].f_37 = 0;
	Global_2656326[iParam0 /*46*/].f_39 = 0;
	Global_2656326[iParam0 /*46*/].f_40 = -1;
	Global_2656326[iParam0 /*46*/].f_41 = 0;
	Global_2656326[iParam0 /*46*/].f_42 = 0;
	Global_2656326[iParam0 /*46*/].f_43 = 0;
	Global_2656326[iParam0 /*46*/].f_45 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		Global_2656326[iParam0 /*46*/].f_38 = NETWORK::GET_NETWORK_TIME();
	}
}

struct<16> func_458(int iParam0)//Position - 0x1DBC9B
{
	struct<16> Var0;
	StringCopy(&Var0, "<C>", 64);
	StringConCat(&Var0, PLAYER::GET_PLAYER_NAME(iParam0), 64);
	StringConCat(&Var0, "</C>", 64);
	return Var0;
}

void func_459()//Position - 0x1DBE23
{
	PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 176 /*INPUT_CELLPHONE_SELECT*/);
	PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 177 /*INPUT_CELLPHONE_CANCEL*/);
}

int func_460(int iParam0)//Position - 0x1DC779
{
	switch (iParam0)
	{
		case 0:
		case 1:
			return 315;
		case 6:
		case 7:
			return 435;
		case 18:
		case 19:
			return 610;
		case 10:
		case 11:
			return 379;
		case 12:
		case 13:
			return 376;
		case 2:
		case 3:
			return 316;
		case 4:
		case 5:
			return 314;
		case 20:
		case 21:
		case 22:
		case 23:
			return 644;
		case 24:
		case 25:
			return 726;
		case 26:
			return 786;
		case 27:
			return 785;
		default:
	}
	return 309;
}

int func_461(int iParam0)//Position - 0x1DC851
{
	switch (iParam0)
	{
		case 0:
			return 310;
		case 1:
			return 378;
		case 2:
			return 380;
		case 3:
			return 674;
		case 4:
			return 675;
		default:
	}
	return 310;
}

int func_462(int iParam0, int iParam1)//Position - 0x1DC89F
{
	switch (iParam0)
	{
		case 1:
			return 59;
		case 7:
			return 59;
		case 5:
			return 409;
		case 6:
			return 408;
		case 2:
		case 3:
		case 0:
		case 4:
		case 9:
		case 129:
			return 304;
		case 8:
			if (iParam1 == 0)
			{
				return 445;
			}
			else
			{
				return 304;
			}
			break;
	}
	return 304;
}

var func_463(int iParam0)//Position - 0x1DD5B9
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_11.f_1, 1);
}

bool func_464(int iParam0)//Position - 0x1DE64B
{
	return Global_2654152[iParam0 /*82*/].f_3;
}

bool func_465()//Position - 0x1DEDF5
{
	return Global_2653202 == 0;
}

int func_466()//Position - 0x1DEE03
{
	if (Global_1574612)
	{
		return 1;
	}
	if (__LIB_0__::func_192())
	{
		return 1;
	}
	if (__LIB_0__::func_191())
	{
		return 1;
	}
	return __LIB_1__::func_342(124, -1);
}

int func_467(int iParam0, int iParam1)//Position - 0x1DF9B1
{
	if (iParam1 == -1)
	{
		iParam1 = 0;
	}
	else if (iParam1 < 0)
	{
		return Global_1642434[iParam0 /*6*/].f_2;
	}
	else if (iParam1 >= Global_1642434[iParam0 /*6*/].f_1)
	{
		return Global_1642434[iParam0 /*6*/].f_2;
	}
	return (Global_1642434[iParam0 /*6*/].f_2 + iParam1);
}

var func_468(int iParam0)//Position - 0x1DFA4E
{
	return BitTest(Global_2686568[iParam0 /*41*/].f_40, 2);
}

int func_469(int* iParam0)//Position - 0x1183
{
	if (!BitTest(*iParam0, 2))
	{
		return 0;
	}
	if (Global_20244)
	{
		return 0;
	}
	if (!CAM::IS_SCREEN_FADED_IN())
	{
		return 0;
	}
	if (!PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, Global_20236))
	{
		return 0;
	}
	__LIB_13__::func_90();
	Global_20244 = 1;
	return 1;
}

int func_470(int iParam0, int iParam1)//Position - 0x1DBE6
{
	int iVar0;
	iVar0 = 0;
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("dilettante");
					break;
				case 1:
					iVar0 = joaat("issi2");
					break;
				case 2:
					iVar0 = joaat("rhapsody");
					break;
				case 3:
					iVar0 = joaat("panto");
					break;
				case 4:
					iVar0 = joaat("brioso");
					break;
				case 5:
					iVar0 = joaat("issi3");
					break;
				case 6:
					iVar0 = joaat("prairie");
					break;
				case 7:
					iVar0 = joaat("kanjo");
					break;
				case 8:
					iVar0 = joaat("asbo");
					break;
				case 9:
					iVar0 = joaat("club");
					break;
				case 10:
					iVar0 = joaat("brioso2");
					break;
				case 11:
					iVar0 = joaat("weevil");
					break;
				case 12:
					iVar0 = joaat("brioso3");
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("felon2");
					break;
				case 1:
					iVar0 = joaat("jackal");
					break;
				case 2:
					iVar0 = joaat("zion");
					break;
				case 3:
					iVar0 = joaat("oracle");
					break;
				case 4:
					iVar0 = joaat("windsor");
					break;
				case 5:
					iVar0 = joaat("windsor2");
					break;
				case 6:
					iVar0 = joaat("previon");
					break;
				case 7:
					iVar0 = joaat("f620");
					break;
				case 8:
					iVar0 = joaat("kanjosj");
					break;
				case 9:
					iVar0 = joaat("postlude");
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("emperor");
					break;
				case 1:
					iVar0 = joaat("emperor2");
					break;
				case 2:
					iVar0 = joaat("emperor3");
					break;
				case 3:
					iVar0 = joaat("fugitive");
					break;
				case 4:
					iVar0 = joaat("regina");
					break;
				case 5:
					iVar0 = joaat("superd");
					break;
				case 6:
					iVar0 = joaat("schafter2");
					break;
				case 7:
					iVar0 = joaat("glendale");
					break;
				case 8:
					iVar0 = joaat("warrener");
					break;
				case 9:
					iVar0 = joaat("asea");
					break;
				case 10:
					iVar0 = joaat("futo");
					break;
				case 11:
					iVar0 = joaat("surge");
					break;
				case 12:
					iVar0 = joaat("primo");
					break;
				case 13:
					iVar0 = joaat("primo2");
					break;
				case 14:
					iVar0 = joaat("schafter3");
					break;
				case 15:
					iVar0 = joaat("schafter4");
					break;
				case 16:
					iVar0 = joaat("schafter5");
					break;
				case 17:
					iVar0 = joaat("schafter6");
					break;
				case 18:
					iVar0 = joaat("cog55");
					break;
				case 19:
					iVar0 = joaat("cog552");
					break;
				case 20:
					iVar0 = joaat("cognoscenti");
					break;
				case 21:
					iVar0 = joaat("cognoscenti2");
					break;
				case 22:
					iVar0 = joaat("limo2");
					break;
				case 23:
					iVar0 = joaat("stafford");
					break;
				case 24:
					iVar0 = joaat("asterope");
					break;
				case 25:
					iVar0 = joaat("glendale2");
					break;
				case 26:
					iVar0 = joaat("warrener2");
					break;
				case 27:
					iVar0 = joaat("tailgater2");
					break;
				case 28:
					iVar0 = joaat("deity");
					break;
				case 29:
					iVar0 = joaat("cinquemila");
					break;
				case 30:
					iVar0 = joaat("rhinehart");
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("dominator");
					break;
				case 1:
					iVar0 = joaat("gauntlet");
					break;
				case 2:
					iVar0 = joaat("phoenix");
					break;
				case 3:
					iVar0 = joaat("blade");
					break;
				case 4:
					iVar0 = joaat("ratloader2");
					break;
				case 5:
					iVar0 = joaat("slamvan");
					break;
				case 6:
					iVar0 = joaat("slamvan2");
					break;
				case 7:
					iVar0 = joaat("buccaneer");
					break;
				case 8:
					iVar0 = joaat("voodoo2");
					break;
				case 9:
					iVar0 = joaat("picador");
					break;
				case 10:
					iVar0 = joaat("virgo");
					break;
				case 11:
					iVar0 = joaat("coquette3");
					break;
				case 12:
					iVar0 = joaat("chino");
					break;
				case 13:
					iVar0 = joaat("faction");
					break;
				case 14:
					iVar0 = joaat("faction2");
					break;
				case 15:
					iVar0 = joaat("moonbeam2");
					break;
				case 16:
					iVar0 = joaat("chino2");
					break;
				case 17:
					iVar0 = joaat("voodoo");
					break;
				case 18:
					iVar0 = joaat("buccaneer2");
					break;
				case 19:
					iVar0 = joaat("dukes2");
					break;
				case 20:
					iVar0 = joaat("moonbeam");
					break;
				case 21:
					iVar0 = joaat("lurcher");
					break;
				case 22:
					iVar0 = joaat("nightshade");
					break;
				case 23:
					iVar0 = joaat("faction3");
					break;
				case 24:
					iVar0 = joaat("slamvan3");
					break;
				case 25:
					iVar0 = joaat("virgo3");
					break;
				case 26:
					iVar0 = joaat("virgo2");
					break;
				case 27:
					iVar0 = joaat("sabregt2");
					break;
				case 28:
					iVar0 = joaat("dominator2");
					break;
				case 29:
					iVar0 = joaat("gauntlet2");
					break;
				case 30:
					iVar0 = joaat("ruiner2");
					break;
				case 31:
					iVar0 = joaat("ruiner3");
					break;
				case 32:
					iVar0 = joaat("dukes");
					break;
				case 33:
					iVar0 = joaat("stalion");
					break;
				case 34:
					iVar0 = joaat("stalion2");
					break;
				case 35:
					iVar0 = joaat("hotknife");
					break;
				case 36:
					iVar0 = joaat("tampa3");
					break;
				case 37:
					iVar0 = joaat("yosemite");
					break;
				case 38:
					iVar0 = joaat("hermes");
					break;
				case 39:
					iVar0 = joaat("hustler");
					break;
				case 40:
					iVar0 = joaat("ellie");
					break;
				case 41:
					iVar0 = joaat("dominator3");
					break;
				case 42:
					iVar0 = joaat("ruiner");
					break;
				case 43:
					iVar0 = joaat("clique");
					break;
				case 44:
					iVar0 = joaat("impaler");
					break;
				case 45:
					iVar0 = joaat("deviant");
					break;
				case 46:
					iVar0 = joaat("tulip");
					break;
				case 47:
					iVar0 = joaat("vamos");
					break;
				case 48:
					iVar0 = joaat("gauntlet3");
					break;
				case 49:
					iVar0 = joaat("gauntlet4");
					break;
				case 50:
					iVar0 = joaat("peyote2");
					break;
				case 51:
					iVar0 = joaat("yosemite2");
					break;
				case 52:
					iVar0 = joaat("dukes3");
					break;
				case 53:
					iVar0 = joaat("gauntlet5");
					break;
				case 54:
					iVar0 = joaat("manana2");
					break;
				case 55:
					iVar0 = joaat("dominator7");
					break;
				case 56:
					iVar0 = joaat("dominator8");
					break;
				case 58:
					iVar0 = joaat("buffalo4");
					break;
				case 59:
					iVar0 = joaat("weevil2");
					break;
				case 60:
					iVar0 = joaat("vigero2");
					break;
				case 61:
					iVar0 = joaat("ruiner4");
					break;
				case 62:
					iVar0 = joaat("greenwood");
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("banshee");
					break;
				case 1:
					iVar0 = joaat("coquette");
					break;
				case 2:
					iVar0 = joaat("ninef2");
					break;
				case 3:
					iVar0 = joaat("alpha");
					break;
				case 4:
					iVar0 = joaat("jester");
					break;
				case 5:
					iVar0 = joaat("massacro");
					break;
				case 6:
					iVar0 = joaat("furoregt");
					break;
				case 7:
					iVar0 = joaat("jester2");
					break;
				case 8:
					iVar0 = joaat("massacro2");
					break;
				case 9:
					iVar0 = joaat("kuruma");
					break;
				case 10:
					iVar0 = joaat("kuruma2");
					break;
				case 11:
					iVar0 = joaat("verlierer2");
					break;
				case 12:
					iVar0 = joaat("sultan");
					break;
				case 13:
					iVar0 = joaat("bestiagts");
					break;
				case 14:
					iVar0 = joaat("seven70");
					break;
				case 15:
					iVar0 = joaat("omnis");
					break;
				case 16:
					iVar0 = joaat("tropos");
					break;
				case 17:
					iVar0 = joaat("lynx");
					break;
				case 18:
					iVar0 = joaat("tampa2");
					break;
				case 19:
					iVar0 = joaat("buffalo3");
					break;
				case 20:
					iVar0 = joaat("raptor");
					break;
				case 21:
					iVar0 = joaat("elegy2");
					break;
				case 22:
					iVar0 = joaat("elegy");
					break;
				case 23:
					iVar0 = joaat("comet3");
					break;
				case 24:
					iVar0 = joaat("specter");
					break;
				case 25:
					iVar0 = joaat("specter2");
					break;
				case 26:
					iVar0 = joaat("ruston");
					break;
				case 27:
					iVar0 = joaat("khamelion");
					break;
				case 28:
					iVar0 = joaat("streiter");
					break;
				case 29:
					iVar0 = joaat("neon");
					break;
				case 30:
					iVar0 = joaat("pariah");
					break;
				case 31:
					iVar0 = joaat("revolter");
					break;
				case 32:
					iVar0 = joaat("sentinel3");
					break;
				case 33:
					iVar0 = joaat("comet5");
					break;
				case 34:
					iVar0 = joaat("raiden");
					break;
				case 35:
					iVar0 = joaat("flashgt");
					break;
				case 36:
					iVar0 = joaat("gb200");
					break;
				case 37:
					iVar0 = joaat("hotring");
					break;
				case 38:
					iVar0 = joaat("comet4");
					break;
				case 39:
					iVar0 = joaat("schlagen");
					break;
				case 40:
					iVar0 = joaat("italigto");
					break;
				case 41:
					iVar0 = joaat("drafter");
					break;
				case 42:
					iVar0 = joaat("issi7");
					break;
				case 43:
					iVar0 = joaat("neo");
					break;
				case 44:
					iVar0 = joaat("locust");
					break;
				case 45:
					iVar0 = joaat("jugular");
					break;
				case 46:
					iVar0 = joaat("paragon");
					break;
				case 47:
					iVar0 = joaat("schwarzer");
					break;
				case 48:
					iVar0 = joaat("imorgon");
					break;
				case 49:
					iVar0 = joaat("sugoi");
					break;
				case 50:
					iVar0 = joaat("vstr");
					break;
				case 51:
					iVar0 = joaat("komoda");
					break;
				case 52:
					iVar0 = joaat("sultan2");
					break;
				case 53:
					iVar0 = joaat("penumbra2");
					break;
				case 54:
					iVar0 = joaat("coquette4");
					break;
				case 55:
					iVar0 = joaat("italirsx");
					break;
				case 56:
					iVar0 = joaat("calico");
					break;
				case 57:
					iVar0 = joaat("jester4");
					break;
				case 58:
					iVar0 = joaat("zr350");
					break;
				case 59:
					iVar0 = joaat("remus");
					break;
				case 60:
					iVar0 = joaat("vectre");
					break;
				case 61:
					iVar0 = joaat("cypher");
					break;
				case 62:
					iVar0 = joaat("comet6");
					break;
				case 63:
					iVar0 = joaat("rt3000");
					break;
				case 64:
					iVar0 = joaat("sultan3");
					break;
				case 65:
					iVar0 = joaat("futo2");
					break;
				case 66:
					iVar0 = joaat("euros");
					break;
				case 67:
					iVar0 = joaat("growler");
					break;
				case 69:
					iVar0 = joaat("comet7");
					break;
				case 70:
					iVar0 = joaat("paragon2");
					break;
				case 71:
					iVar0 = joaat("corsita");
					break;
				case 72:
					iVar0 = joaat("tenf");
					break;
				case 73:
					iVar0 = joaat("tenf2");
					break;
				case 74:
					iVar0 = joaat("sm722");
					break;
				case 75:
					iVar0 = joaat("sentinel4");
					break;
				case 76:
					iVar0 = joaat("omnisegt");
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("manana");
					break;
				case 1:
					iVar0 = joaat("stingergt");
					break;
				case 2:
					iVar0 = joaat("tornado2");
					break;
				case 3:
					iVar0 = joaat("btype");
					break;
				case 4:
					iVar0 = joaat("pigalle");
					break;
				case 5:
					iVar0 = joaat("coquette2");
					break;
				case 6:
					iVar0 = joaat("casco");
					break;
				case 7:
					iVar0 = joaat("peyote");
					break;
				case 8:
					iVar0 = joaat("tornado");
					break;
				case 9:
					iVar0 = joaat("feltzer3");
					break;
				case 10:
					iVar0 = joaat("mamba");
					break;
				case 11:
					iVar0 = joaat("tornado5");
					break;
				case 12:
					iVar0 = joaat("tornado6");
					break;
				case 13:
					iVar0 = joaat("infernus2");
					break;
				case 14:
					iVar0 = joaat("turismo2");
					break;
				case 15:
					iVar0 = joaat("cheetah2");
					break;
				case 16:
					iVar0 = joaat("ardent");
					break;
				case 17:
					iVar0 = joaat("torero");
					break;
				case 18:
					iVar0 = joaat("retinue");
					break;
				case 19:
					iVar0 = joaat("rapidgt3");
					break;
				case 20:
					iVar0 = joaat("savestra");
					break;
				case 21:
					iVar0 = joaat("viseris");
					break;
				case 22:
					iVar0 = joaat("stromberg");
					break;
				case 23:
					iVar0 = joaat("gt500");
					break;
				case 24:
					iVar0 = joaat("z190");
					break;
				case 25:
					iVar0 = joaat("fagaloa");
					break;
				case 26:
					iVar0 = joaat("michelli");
					break;
				case 27:
					iVar0 = joaat("deluxo");
					break;
				case 28:
					iVar0 = joaat("cheburek");
					break;
				case 29:
					iVar0 = joaat("jester3");
					break;
				case 30:
					iVar0 = joaat("swinger");
					break;
				case 31:
					iVar0 = joaat("zion3");
					break;
				case 32:
					iVar0 = joaat("dynasty");
					break;
				case 33:
					iVar0 = joaat("nebula");
					break;
				case 34:
					iVar0 = joaat("retinue2");
					break;
				case 35:
					iVar0 = joaat("btype2");
					break;
				case 36:
					iVar0 = joaat("peyote3");
					break;
				case 37:
					iVar0 = joaat("toreador");
					break;
				case 38:
					iVar0 = joaat("jb7002");
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("cheetah");
					break;
				case 1:
					iVar0 = joaat("entityxf");
					break;
				case 2:
					iVar0 = joaat("voltic");
					break;
				case 3:
					iVar0 = joaat("turismor");
					break;
				case 4:
					iVar0 = joaat("zentorno");
					break;
				case 5:
					iVar0 = joaat("osiris");
					break;
				case 6:
					iVar0 = joaat("t20");
					break;
				case 7:
					iVar0 = joaat("banshee2");
					break;
				case 8:
					iVar0 = joaat("sultanrs");
					break;
				case 9:
					iVar0 = joaat("reaper");
					break;
				case 10:
					iVar0 = joaat("fmj");
					break;
				case 11:
					iVar0 = joaat("prototipo");
					break;
				case 12:
					iVar0 = joaat("pfister811");
					break;
				case 13:
					iVar0 = joaat("le7b");
					break;
				case 14:
					iVar0 = joaat("tyrus");
					break;
				case 15:
					iVar0 = joaat("sheava");
					break;
				case 16:
					iVar0 = joaat("tempesta");
					break;
				case 17:
					iVar0 = joaat("nero");
					break;
				case 18:
					iVar0 = joaat("nero2");
					break;
				case 19:
					iVar0 = joaat("penetrator");
					break;
				case 20:
					iVar0 = joaat("voltic2");
					break;
				case 21:
					iVar0 = joaat("italigtb");
					break;
				case 22:
					iVar0 = joaat("italigtb2");
					break;
				case 23:
					iVar0 = joaat("gp1");
					break;
				case 24:
					iVar0 = joaat("vagner");
					break;
				case 25:
					iVar0 = joaat("xa21");
					break;
				case 26:
					iVar0 = joaat("visione");
					break;
				case 27:
					iVar0 = joaat("vigilante");
					break;
				case 28:
					iVar0 = joaat("cyclone");
					break;
				case 29:
					iVar0 = joaat("sc1");
					break;
				case 30:
					iVar0 = joaat("autarch");
					break;
				case 31:
					iVar0 = joaat("tezeract");
					break;
				case 32:
					iVar0 = joaat("taipan");
					break;
				case 33:
					iVar0 = joaat("entity2");
					break;
				case 34:
					iVar0 = joaat("tyrant");
					break;
				case 35:
					iVar0 = joaat("deveste");
					break;
				case 36:
					iVar0 = joaat("thrax");
					break;
				case 37:
					iVar0 = joaat("zorrusso");
					break;
				case 38:
					iVar0 = joaat("krieger");
					break;
				case 39:
					iVar0 = joaat("emerus");
					break;
				case 40:
					iVar0 = joaat("s80");
					break;
				case 41:
					iVar0 = joaat("furia");
					break;
				case 42:
					iVar0 = joaat("tigon");
					break;
				case 43:
					iVar0 = joaat("ignus");
					break;
				case 46:
					iVar0 = joaat("zeno");
					break;
				case 47:
					iVar0 = joaat("champion");
					break;
				case 48:
					iVar0 = joaat("lm87");
					break;
				case 49:
					iVar0 = joaat("torero2");
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("baller");
					break;
				case 1:
					iVar0 = joaat("baller2");
					break;
				case 2:
					iVar0 = joaat("bjxl");
					break;
				case 3:
					iVar0 = joaat("cavalcade2");
					break;
				case 4:
					iVar0 = joaat("granger");
					break;
				case 5:
					iVar0 = joaat("patriot");
					break;
				case 6:
					iVar0 = joaat("huntley");
					break;
				case 7:
					iVar0 = joaat("dubsta3");
					break;
				case 8:
					iVar0 = joaat("gresley");
					break;
				case 9:
					iVar0 = joaat("landstalker");
					break;
				case 10:
					iVar0 = joaat("seminole");
					break;
				case 11:
					iVar0 = joaat("mesa");
					break;
				case 12:
					iVar0 = joaat("crusader");
					break;
				case 13:
					iVar0 = joaat("radi");
					break;
				case 14:
					iVar0 = joaat("baller3");
					break;
				case 15:
					iVar0 = joaat("baller4");
					break;
				case 16:
					iVar0 = joaat("baller5");
					break;
				case 17:
					iVar0 = joaat("baller6");
					break;
				case 18:
					iVar0 = joaat("xls");
					break;
				case 19:
					iVar0 = joaat("xls2");
					break;
				case 20:
					iVar0 = joaat("contender");
					break;
				case 21:
					iVar0 = joaat("patriot2");
					break;
				case 22:
					iVar0 = joaat("serrano");
					break;
				case 23:
					iVar0 = joaat("fq2");
					break;
				case 24:
					iVar0 = joaat("habanero");
					break;
				case 25:
					iVar0 = joaat("toros");
					break;
				case 26:
					iVar0 = joaat("novak");
					break;
				case 27:
					iVar0 = joaat("rebla");
					break;
				case 28:
					iVar0 = joaat("landstalker2");
					break;
				case 29:
					iVar0 = joaat("seminole2");
					break;
				case 30:
					iVar0 = joaat("squaddie");
					break;
				case 31:
					iVar0 = joaat("granger2");
					break;
				case 32:
					iVar0 = joaat("astron");
					break;
				case 34:
					iVar0 = joaat("baller7");
					break;
				case 35:
					iVar0 = joaat("jubilee");
					break;
				case 36:
					iVar0 = joaat("iwagen");
					break;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("blazer");
					break;
				case 1:
					iVar0 = joaat("bodhi2");
					break;
				case 2:
					iVar0 = joaat("dune");
					break;
				case 3:
					iVar0 = joaat("bfinjection");
					break;
				case 4:
					iVar0 = joaat("mesa3");
					break;
				case 5:
					iVar0 = joaat("rebel");
					break;
				case 6:
					iVar0 = joaat("sadler");
					break;
				case 7:
					iVar0 = joaat("ratloader");
					break;
				case 8:
					iVar0 = joaat("sandking");
					break;
				case 9:
					iVar0 = joaat("bifta");
					break;
				case 10:
					iVar0 = joaat("kalahari");
					break;
				case 11:
					iVar0 = joaat("monster");
					break;
				case 12:
					iVar0 = joaat("technical");
					break;
				case 13:
					iVar0 = joaat("brawler");
					break;
				case 14:
					iVar0 = joaat("marshall");
					break;
				case 15:
					iVar0 = joaat("trophytruck");
					break;
				case 16:
					iVar0 = joaat("trophytruck2");
					break;
				case 17:
					iVar0 = joaat("rallytruck");
					break;
				case 18:
					iVar0 = joaat("blazer4");
					break;
				case 19:
					iVar0 = joaat("dune4");
					break;
				case 20:
					iVar0 = joaat("dune5");
					break;
				case 21:
					iVar0 = joaat("technical2");
					break;
				case 22:
					iVar0 = joaat("blazer5");
					break;
				case 23:
					iVar0 = joaat("dune3");
					break;
				case 24:
					iVar0 = joaat("insurgent3");
					break;
				case 25:
					iVar0 = joaat("technical3");
					break;
				case 26:
					iVar0 = joaat("nightshark");
					break;
				case 27:
					iVar0 = joaat("riata");
					break;
				case 28:
					iVar0 = joaat("kamacho");
					break;
				case 29:
					iVar0 = joaat("caracara");
					break;
				case 30:
					iVar0 = joaat("freecrawler");
					break;
				case 31:
					iVar0 = joaat("menacer");
					break;
				case 32:
					iVar0 = joaat("patriot");
					break;
				case 33:
					iVar0 = joaat("hellion");
					break;
				case 34:
					iVar0 = joaat("caracara2");
					break;
				case 35:
					iVar0 = joaat("rancherxl");
					break;
				case 36:
					iVar0 = joaat("outlaw");
					break;
				case 37:
					iVar0 = joaat("everon");
					break;
				case 38:
					iVar0 = joaat("zhaba");
					break;
				case 39:
					iVar0 = joaat("vagrant");
					break;
				case 40:
					iVar0 = joaat("yosemite3");
					break;
				case 41:
					iVar0 = joaat("rebel2");
					break;
				case 42:
					iVar0 = joaat("dloader");
					break;
				case 43:
					iVar0 = joaat("winky");
					break;
				case 44:
					iVar0 = joaat("verus");
					break;
				case 45:
					iVar0 = joaat("manchez2");
					break;
				case 46:
					iVar0 = joaat("patriot3");
					break;
				case 47:
					iVar0 = joaat("draugur");
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("bati");
					break;
				case 1:
					iVar0 = joaat("daemon");
					break;
				case 2:
					iVar0 = joaat("faggio2");
					break;
				case 3:
					iVar0 = joaat("hexer");
					break;
				case 4:
					iVar0 = joaat("nemesis");
					break;
				case 5:
					iVar0 = joaat("sanchez");
					break;
				case 6:
					iVar0 = joaat("vader");
					break;
				case 7:
					iVar0 = joaat("thrust");
					break;
				case 8:
					iVar0 = joaat("sovereign");
					break;
				case 9:
					iVar0 = joaat("enduro");
					break;
				case 10:
					iVar0 = joaat("innovation");
					break;
				case 11:
					iVar0 = joaat("hakuchou");
					break;
				case 12:
					iVar0 = joaat("lectro");
					break;
				case 13:
					iVar0 = joaat("vindicator");
					break;
				case 14:
					iVar0 = joaat("akuma");
					break;
				case 15:
					iVar0 = joaat("bf400");
					break;
				case 16:
					iVar0 = joaat("gargoyle");
					break;
				case 17:
					iVar0 = joaat("cliffhanger");
					break;
				case 18:
					iVar0 = joaat("hakuchou2");
					break;
				case 19:
					iVar0 = joaat("defiler");
					break;
				case 20:
					iVar0 = joaat("chimera");
					break;
				case 21:
					iVar0 = joaat("zombieb");
					break;
				case 22:
					iVar0 = joaat("avarus");
					break;
				case 23:
					iVar0 = joaat("nightblade");
					break;
				case 24:
					iVar0 = joaat("zombiea");
					break;
				case 25:
					iVar0 = joaat("wolfsbane");
					break;
				case 26:
					iVar0 = joaat("manchez");
					break;
				case 27:
					iVar0 = joaat("ratbike");
					break;
				case 28:
					iVar0 = joaat("bagger");
					break;
				case 29:
					iVar0 = joaat("faggio3");
					break;
				case 30:
					iVar0 = joaat("faggio");
					break;
				case 31:
					iVar0 = joaat("daemon2");
					break;
				case 32:
					iVar0 = joaat("vortex");
					break;
				case 33:
					iVar0 = joaat("shotaro");
					break;
				case 34:
					iVar0 = joaat("esskey");
					break;
				case 35:
					iVar0 = joaat("diablous");
					break;
				case 36:
					iVar0 = joaat("diablous2");
					break;
				case 37:
					iVar0 = joaat("fcr");
					break;
				case 38:
					iVar0 = joaat("fcr2");
					break;
				case 39:
					iVar0 = joaat("oppressor");
					break;
				case 40:
					iVar0 = joaat("sanctus");
					break;
				case 41:
					iVar0 = joaat("rrocket");
					break;
				case 42:
					iVar0 = joaat("stryder");
					break;
				case 43:
					iVar0 = joaat("manchez2");
					break;
				case 45:
					iVar0 = joaat("shinobi");
					break;
				case 46:
					iVar0 = joaat("reever");
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("bmx");
					break;
				case 1:
					iVar0 = joaat("cruiser");
					break;
				case 2:
					iVar0 = joaat("tribike");
					break;
				case 3:
					iVar0 = joaat("scorcher");
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("rhino");
					break;
				case 1:
					iVar0 = joaat("barracks");
					break;
				case 2:
					iVar0 = joaat("barracks2");
					break;
				case 3:
					iVar0 = joaat("barracks3");
					break;
				case 4:
					iVar0 = joaat("armytanker");
					break;
				case 5:
					iVar0 = joaat("cargobob");
					break;
				case 6:
					iVar0 = joaat("titan");
					break;
				case 7:
					iVar0 = joaat("insurgent");
					break;
				case 8:
					iVar0 = joaat("insurgent2");
					break;
				case 9:
					iVar0 = joaat("apc");
					break;
				case 10:
					iVar0 = joaat("halftrack");
					break;
				case 11:
					iVar0 = joaat("chernobog");
					break;
				case 12:
					iVar0 = joaat("khanjali");
					break;
				case 13:
					iVar0 = joaat("thruster");
					break;
				case 14:
					iVar0 = joaat("barrage");
					break;
				case 15:
					iVar0 = joaat("winky");
					break;
				case 16:
					iVar0 = joaat("squaddie");
					break;
				case 17:
					iVar0 = joaat("verus");
					break;
				case 18:
					iVar0 = joaat("vetir");
					break;
				case 19:
					iVar0 = joaat("crusader");
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("police3");
					break;
				case 1:
					iVar0 = joaat("policeb");
					break;
				case 2:
					iVar0 = joaat("riot");
					break;
				case 3:
					iVar0 = joaat("fbi");
					break;
				case 4:
					iVar0 = joaat("fbi2");
					break;
				case 5:
					iVar0 = joaat("pbus");
					break;
				case 6:
					iVar0 = joaat("annihilator");
					break;
				case 7:
					iVar0 = joaat("buzzard");
					break;
				case 8:
					iVar0 = joaat("polmav");
					break;
				case 9:
					iVar0 = joaat("predator");
					break;
				case 10:
					iVar0 = joaat("sheriff2");
					break;
				case 11:
					iVar0 = joaat("riot2");
					break;
				case 12:
					iVar0 = joaat("policet");
					break;
				case 13:
					iVar0 = joaat("sheriff");
					break;
				case 14:
					iVar0 = joaat("police4");
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("ambulance");
					break;
				case 1:
					iVar0 = joaat("bus");
					break;
				case 2:
					iVar0 = joaat("coach");
					break;
				case 3:
					iVar0 = joaat("firetruk");
					break;
				case 4:
					iVar0 = joaat("romero");
					break;
				case 5:
					iVar0 = joaat("stretch");
					break;
				case 6:
					iVar0 = joaat("taxi");
					break;
				case 7:
					iVar0 = joaat("trash");
					break;
				case 8:
					iVar0 = joaat("trash2");
					break;
				case 9:
					iVar0 = joaat("dilettante2");
					break;
				case 10:
					iVar0 = joaat("brickade");
					break;
				case 11:
					iVar0 = joaat("wastelander");
					break;
				case 12:
					iVar0 = joaat("airbus");
					break;
				case 13:
					iVar0 = joaat("rentalbus");
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("bulldozer");
					break;
				case 1:
					iVar0 = joaat("dump");
					break;
				case 2:
					iVar0 = joaat("handler");
					break;
				case 3:
					iVar0 = joaat("mixer");
					break;
				case 4:
					iVar0 = joaat("tiptruck");
					break;
				case 5:
					iVar0 = joaat("rubble");
					break;
				case 6:
					iVar0 = joaat("guardian");
					break;
				case 7:
					iVar0 = joaat("mixer2");
					break;
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("airtug");
					break;
				case 1:
					iVar0 = joaat("caddy");
					break;
				case 2:
					iVar0 = joaat("mower");
					break;
				case 3:
					iVar0 = joaat("tractor2");
					break;
				case 4:
					iVar0 = joaat("scrap");
					break;
				case 5:
					iVar0 = joaat("ripley");
					break;
				case 6:
					iVar0 = joaat("forklift");
					break;
				case 7:
					iVar0 = joaat("caddy3");
					break;
				case 8:
					iVar0 = joaat("slamtruck");
					break;
			}
			break;
		case 16:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("bison");
					break;
				case 1:
					iVar0 = joaat("benson");
					break;
				case 2:
					iVar0 = joaat("boxville2");
					break;
				case 3:
					iVar0 = joaat("boxville3");
					break;
				case 4:
					iVar0 = joaat("boxville4");
					break;
				case 5:
					iVar0 = joaat("gburrito");
					break;
				case 6:
					iVar0 = joaat("minivan");
					break;
				case 7:
					iVar0 = joaat("mule");
					break;
				case 8:
					iVar0 = joaat("mule3");
					break;
				case 9:
					iVar0 = joaat("speedo");
					break;
				case 10:
					iVar0 = joaat("stockade");
					break;
				case 11:
					iVar0 = joaat("taco");
					break;
				case 12:
					iVar0 = joaat("camper");
					break;
				case 13:
					iVar0 = joaat("journey");
					break;
				case 14:
					iVar0 = joaat("surfer");
					break;
				case 15:
					iVar0 = joaat("paradise");
					break;
				case 16:
					iVar0 = joaat("gburrito2");
					break;
				case 17:
					iVar0 = joaat("rumpo");
					break;
				case 18:
					iVar0 = joaat("minivan2");
					break;
				case 19:
					iVar0 = joaat("rumpo3");
					break;
				case 20:
					iVar0 = joaat("youga2");
					break;
				case 21:
					iVar0 = joaat("boxville5");
					break;
				case 22:
					iVar0 = joaat("mule4");
					break;
				case 23:
					iVar0 = joaat("speedo4");
					break;
				case 24:
					iVar0 = joaat("bison3");
					break;
				case 25:
					iVar0 = joaat("boxville");
					break;
				case 26:
					iVar0 = joaat("burrito");
					break;
				case 27:
					iVar0 = joaat("burrito2");
					break;
				case 28:
					iVar0 = joaat("pony");
					break;
				case 29:
					iVar0 = joaat("youga3");
					break;
				case 30:
					iVar0 = joaat("youga4");
					break;
				case 31:
					iVar0 = joaat("mule5");
					break;
			}
			break;
		case 17:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("hauler");
					break;
				case 1:
					iVar0 = joaat("flatbed");
					break;
				case 2:
					iVar0 = joaat("packer");
					break;
				case 3:
					iVar0 = joaat("phantom");
					break;
				case 4:
					iVar0 = joaat("tanker");
					break;
				case 5:
					iVar0 = joaat("tanker2");
					break;
				case 6:
					iVar0 = joaat("trailers");
					break;
				case 7:
					iVar0 = joaat("trflat");
					break;
				case 8:
					iVar0 = joaat("phantom2");
					break;
				case 9:
					iVar0 = joaat("phantom3");
					break;
				case 10:
					iVar0 = joaat("hauler2");
					break;
				case 11:
					iVar0 = joaat("trailersmall2");
					break;
				case 12:
					iVar0 = joaat("trailerlarge");
					break;
				case 13:
					iVar0 = joaat("pounder");
					break;
				case 14:
					iVar0 = joaat("pounder2");
					break;
				case 15:
					iVar0 = joaat("boattrailer");
					break;
			}
			break;
		case 18:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("frogger");
					break;
				case 1:
					iVar0 = joaat("maverick");
					break;
				case 2:
					iVar0 = joaat("skylift");
					break;
				case 3:
					iVar0 = joaat("cargobob2");
					break;
				case 4:
					iVar0 = joaat("swift");
					break;
				case 5:
					iVar0 = joaat("valkyrie");
					break;
				case 6:
					iVar0 = joaat("savage");
					break;
				case 7:
					iVar0 = joaat("swift2");
					break;
				case 8:
					iVar0 = joaat("supervolito");
					break;
				case 9:
					iVar0 = joaat("supervolito2");
					break;
				case 10:
					iVar0 = joaat("valkyrie2");
					break;
				case 11:
					iVar0 = joaat("volatus");
					break;
				case 12:
					iVar0 = joaat("buzzard2");
					break;
				case 13:
					iVar0 = joaat("havok");
					break;
				case 14:
					iVar0 = joaat("hunter");
					break;
				case 15:
					iVar0 = joaat("akula");
					break;
				case 16:
					iVar0 = joaat("avenger");
					break;
				case 17:
					iVar0 = joaat("seasparrow");
					break;
				case 18:
					iVar0 = joaat("cargobob4");
					break;
				case 19:
					iVar0 = joaat("seasparrow2");
					break;
				case 20:
					iVar0 = joaat("annihilator2");
					break;
				case 21:
					iVar0 = joaat("conada");
					break;
			}
			break;
		case 19:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("cuban800");
					break;
				case 1:
					iVar0 = joaat("duster");
					break;
				case 2:
					iVar0 = joaat("mammatus");
					break;
				case 3:
					iVar0 = joaat("shamal");
					break;
				case 4:
					iVar0 = joaat("stunt");
					break;
				case 5:
					iVar0 = joaat("velum");
					break;
				case 6:
					iVar0 = joaat("jet");
					break;
				case 7:
					iVar0 = joaat("vestra");
					break;
				case 8:
					iVar0 = joaat("miljet");
					break;
				case 9:
					iVar0 = joaat("velum2");
					break;
				case 10:
					iVar0 = joaat("luxor2");
					break;
				case 11:
					iVar0 = joaat("nimbus");
					break;
				case 12:
					iVar0 = joaat("cargoplane");
					break;
				case 13:
					iVar0 = joaat("dodo");
					break;
				case 14:
					iVar0 = joaat("microlight");
					break;
				case 15:
					iVar0 = joaat("alphaz1");
					break;
				case 16:
					iVar0 = joaat("tula");
					break;
				case 17:
					iVar0 = joaat("rogue");
					break;
				case 18:
					iVar0 = joaat("starling");
					break;
				case 19:
					iVar0 = joaat("bombushka");
					break;
				case 20:
					iVar0 = joaat("howard");
					break;
				case 21:
					iVar0 = joaat("mogul");
					break;
				case 22:
					iVar0 = joaat("seabreeze");
					break;
				case 23:
					iVar0 = joaat("nokota");
					break;
				case 24:
					iVar0 = joaat("volatol");
					break;
				case 25:
					iVar0 = joaat("strikeforce");
					break;
			}
			break;
		case 20:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("lazer");
					break;
				case 1:
					iVar0 = joaat("besra");
					break;
				case 2:
					iVar0 = joaat("hydra");
					break;
				case 3:
					iVar0 = joaat("molotok");
					break;
				case 4:
					iVar0 = joaat("pyro");
					break;
			}
			break;
		case 21:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("dinghy");
					break;
				case 1:
					iVar0 = joaat("dinghy2");
					break;
				case 2:
					iVar0 = joaat("dinghy3");
					break;
				case 3:
					iVar0 = joaat("marquis");
					break;
				case 4:
					iVar0 = joaat("seashark");
					break;
				case 5:
					iVar0 = joaat("submersible");
					break;
				case 6:
					iVar0 = joaat("submersible2");
					break;
				case 7:
					iVar0 = joaat("suntrap");
					break;
				case 8:
					iVar0 = joaat("tropic");
					break;
				case 9:
					iVar0 = joaat("speeder");
					break;
				case 10:
					iVar0 = joaat("toro");
					break;
				case 11:
					iVar0 = joaat("tug");
					break;
				case 12:
					iVar0 = joaat("seashark3");
					break;
				case 13:
					iVar0 = joaat("kosatka");
					break;
				case 14:
					iVar0 = joaat("avisa");
					break;
				case 15:
					iVar0 = joaat("longfin");
					break;
			}
			break;
		case 22:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("prop_cs_dildo_01");
					break;
				case 1:
					iVar0 = joaat("v_res_d_dildo_b");
					break;
			}
			break;
		case 23:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("blazer5");
					break;
				case 1:
					iVar0 = joaat("ruiner2");
					break;
				case 2:
					iVar0 = joaat("voltic2");
					break;
				case 3:
					iVar0 = joaat("technical2");
					break;
				case 4:
					iVar0 = joaat("dune4");
					break;
				case 5:
					iVar0 = joaat("dune5");
					break;
				case 6:
					iVar0 = joaat("phantom2");
					break;
				case 7:
					iVar0 = joaat("boxville5");
					break;
				case 8:
					iVar0 = joaat("wastelander");
					break;
				case 9:
					iVar0 = joaat("oppressor");
					break;
				case 10:
					iVar0 = joaat("vigilante");
					break;
				case 11:
					iVar0 = joaat("deluxo");
					break;
				case 12:
					iVar0 = joaat("stromberg");
					break;
				case 13:
					iVar0 = joaat("thruster");
					break;
				case 14:
					iVar0 = joaat("pbus2");
					break;
				case 15:
					iVar0 = joaat("oppressor2");
					break;
				case 16:
					iVar0 = joaat("terbyte");
					break;
				case 17:
					iVar0 = joaat("blimp3");
					break;
				case 18:
					iVar0 = joaat("scramjet");
					break;
				case 19:
					iVar0 = joaat("rcbandito");
					break;
				case 20:
					iVar0 = joaat("toreador");
					break;
			}
			break;
		case 24:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("tampa3");
					break;
				case 1:
					iVar0 = joaat("dune3");
					break;
				case 2:
					iVar0 = joaat("halftrack");
					break;
				case 3:
					iVar0 = joaat("insurgent3");
					break;
				case 4:
					iVar0 = joaat("technical3");
					break;
				case 5:
					iVar0 = joaat("apc");
					break;
				case 6:
					iVar0 = joaat("oppressor");
					break;
				case 7:
					iVar0 = joaat("trailersmall2");
					break;
				case 8:
					iVar0 = joaat("thruster");
					break;
				case 9:
					iVar0 = joaat("riot2");
					break;
				case 10:
					iVar0 = joaat("khanjali");
					break;
				case 11:
					iVar0 = joaat("deluxo");
					break;
				case 12:
					iVar0 = joaat("barrage");
					break;
				case 13:
					iVar0 = joaat("microlight");
					break;
				case 14:
					iVar0 = joaat("havok");
					break;
				case 15:
					iVar0 = joaat("seabreeze");
					break;
				case 16:
					iVar0 = joaat("starling");
					break;
				case 17:
					iVar0 = joaat("akula");
					break;
				case 18:
					iVar0 = joaat("cuban800");
					break;
				case 19:
					iVar0 = joaat("pyro");
					break;
				case 20:
					iVar0 = joaat("mogul");
					break;
				case 21:
					iVar0 = joaat("rogue");
					break;
				case 22:
					iVar0 = joaat("molotok");
					break;
				case 23:
					iVar0 = joaat("nokota");
					break;
				case 24:
					iVar0 = joaat("hunter");
					break;
				case 25:
					iVar0 = joaat("tula");
					break;
				case 26:
					iVar0 = joaat("bombushka");
					break;
				case 27:
					iVar0 = joaat("volatol");
					break;
				case 28:
					iVar0 = joaat("avenger");
					break;
				case 29:
					iVar0 = joaat("nightshark");
					break;
				case 30:
					iVar0 = joaat("ardent");
					break;
				case 31:
					iVar0 = joaat("blazer5");
					break;
				case 32:
					iVar0 = joaat("ruiner2");
					break;
				case 33:
					iVar0 = joaat("technical2");
					break;
				case 34:
					iVar0 = joaat("boxville5");
					break;
				case 35:
					iVar0 = joaat("vigilante");
					break;
				case 36:
					iVar0 = joaat("stromberg");
					break;
				case 37:
					iVar0 = joaat("chernobog");
					break;
				case 38:
					iVar0 = joaat("caracara");
					break;
				case 39:
					iVar0 = joaat("menacer");
					break;
				case 40:
					iVar0 = joaat("oppressor2");
					break;
				case 41:
					iVar0 = joaat("strikeforce");
					break;
				case 42:
					iVar0 = joaat("scramjet");
					break;
				case 43:
					iVar0 = joaat("mule4");
					break;
				case 44:
					iVar0 = joaat("pounder2");
					break;
				case 45:
					iVar0 = joaat("speedo4");
					break;
				case 46:
					iVar0 = joaat("seasparrow");
					break;
				case 47:
					iVar0 = joaat("paragon2");
					break;
				case 48:
					iVar0 = joaat("jb7002");
					break;
				case 49:
					iVar0 = joaat("minitank");
					break;
				case 50:
					iVar0 = joaat("annihilator2");
					break;
				case 51:
					iVar0 = joaat("alkonost");
					break;
				case 52:
					iVar0 = joaat("patrolboat");
					break;
				case 53:
					iVar0 = joaat("dinghy5");
					break;
				case 54:
					iVar0 = joaat("toreador");
					break;
			}
			break;
		case 25:
			switch (iParam1)
			{
				case 0:
					return __LIB_12__::func_604(joaat("bruiser"));
				case 1:
					return __LIB_12__::func_604(joaat("brutus"));
				case 2:
					return __LIB_12__::func_604(joaat("cerberus"));
				case 3:
					return __LIB_12__::func_604(joaat("deathbike"));
				case 4:
					return __LIB_12__::func_604(joaat("dominator4"));
				case 5:
					return __LIB_12__::func_604(joaat("impaler2"));
				case 6:
					if (Global_1659935)
					{
						return joaat("imperator");
					}
					return __LIB_12__::func_604(joaat("imperator"));
				case 7:
					return __LIB_12__::func_604(joaat("issi4"));
				case 8:
					return __LIB_12__::func_604(joaat("monster3"));
				case 9:
					return __LIB_12__::func_604(joaat("scarab"));
				case 10:
					return __LIB_12__::func_604(joaat("slamvan4"));
				case 11:
					return __LIB_12__::func_604(joaat("zr380"));
				default:
			}
			break;
		case 26:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("formula");
					break;
				case 1:
					iVar0 = joaat("formula2");
					break;
				case 2:
					iVar0 = joaat("openwheel1");
					break;
				case 3:
					iVar0 = joaat("openwheel2");
					break;
			}
			break;
		case 28:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("veto");
					break;
				case 1:
					iVar0 = joaat("veto2");
					break;
			}
			break;
		case 29:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("calico");
					break;
				case 1:
					iVar0 = joaat("jester4");
					break;
				case 2:
					iVar0 = joaat("zr350");
					break;
				case 3:
					iVar0 = joaat("remus");
					break;
				case 4:
					iVar0 = joaat("vectre");
					break;
				case 5:
					iVar0 = joaat("cypher");
					break;
				case 6:
					iVar0 = joaat("dominator7");
					break;
				case 7:
					iVar0 = joaat("comet6");
					break;
				case 8:
					iVar0 = joaat("warrener2");
					break;
				case 9:
					iVar0 = joaat("rt3000");
					break;
				case 10:
					iVar0 = joaat("tailgater2");
					break;
				case 11:
					iVar0 = joaat("sultan3");
					break;
				case 12:
					iVar0 = joaat("futo2");
					break;
				case 13:
					iVar0 = joaat("dominator8");
					break;
				case 14:
					iVar0 = joaat("previon");
					break;
				case 15:
					iVar0 = joaat("euros");
					break;
				case 16:
					iVar0 = joaat("growler");
					break;
				case 17:
					iVar0 = joaat("kanjosj");
					break;
				case 18:
					iVar0 = joaat("postlude");
					break;
			}
			break;
		case 30:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("brioso");
					break;
				case 1:
					iVar0 = joaat("sentinel");
					break;
				case 2:
					iVar0 = joaat("turismo2");
					break;
				case 3:
					iVar0 = joaat("banshee");
					break;
				case 4:
					iVar0 = joaat("deveste");
					break;
				case 5:
					iVar0 = joaat("hakuchou2");
					break;
				case 6:
					iVar0 = joaat("feltzer3");
					break;
				case 7:
					iVar0 = joaat("vigero2");
					break;
			}
			break;
		case 31:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("brioso");
					break;
				case 1:
					iVar0 = joaat("sentinel");
					break;
			}
			break;
		case 32:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("turismo2");
					break;
				case 1:
					iVar0 = joaat("feltzer3");
					break;
				case 2:
					iVar0 = joaat("vigero2");
					break;
			}
			break;
		case 33:
			switch (iParam1)
			{
				case 0:
					iVar0 = joaat("banshee");
					break;
				case 1:
					iVar0 = joaat("deveste");
					break;
				case 2:
					iVar0 = joaat("hakuchou2");
					break;
			}
			break;
	}
	if (iVar0 == 0)
	{
	}
	return iVar0;
}

struct<4> func_471(int iParam0)//Position - 0x560F8
{
	return __LIB_0__::func_167(iParam0);
}

void initGlobal_2656938_and_Global_2656952()//Position - 0x1D4A92
{
	__LIB_0__::resetParamF1ToF12ToZero(&Global_2656938);
	Global_2656938.f_13 = 0;
	Global_2656952 = 0;
}

struct<16> func_473(var uParam0, bool bParam1)//Position - 0x1D9740
{
	struct<16> Var0;
	int iVar1;
	StringCopy(&Var0, "UNKNOWN", 64);
	if (bParam1)
	{
		StringCopy(&Var0, "", 64);
	}
	if (!bParam1)
	{
		if (__LIB_12__::func_466(uParam0))
		{
			if (BitTest(Global_1573916.f_1[uParam0->f_9 /*2*/], 0))
			{
				return Global_2660383[uParam0->f_9 /*16*/];
			}
			return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_12;
		}
	}
	if (__LIB_2__::func_707(uParam0->f_1))
	{
		if (__LIB_2__::func_706(uParam0))
		{
			return Global_2660249.f_1.f_12;
		}
		return Var0;
	}
	iVar1 = __LIB_3__::func_189(uParam0);
	if (iVar1 == -1)
	{
		return Var0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_22;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_22;
		case 40:
			return Var0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_22;
	}
	else if (uParam0->f_2 < 32)
	{
		return Var0;
	}
	return Var0;
}

int func_474(int iParam0, int iParam1, bool bParam2, int iParam3)//Position - 0x1DA00A
{
	if (Global_2653149 && !bParam2)
	{
		return 0;
	}
	if (__LIB_0__::func_625())
	{
		return 0;
	}
	if (__LIB_0__::func_936(PLAYER::PLAYER_ID()))
	{
		return Global_262145.f_7108 /* Tunable: PLAYLIST_ENTRY_FEE */;
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 5:
					return Global_262145.f_4451 /* Tunable: ENTRANCE_FEE_LTS_EXPENDITURE_TUNABLE */;
				case 6:
					return Global_262145.f_4452 /* Tunable: ENTRANCE_FEE_CTF_EXPENDITURE_TUNABLE */;
				case 4:
					return Global_262145.f_4453 /* Tunable: ENTRANCE_FEE_VERSUS_EXPENDITURE_TUNABLE */;
				case 9:
					return Global_262145.f_4454;
				default:
			}
			return 0;
		case 1:
			return Global_262145.f_4449 /* Tunable: ENTRANCE_FEE_DEATHMATCH_EXPENDITURE_TUNABLE */;
		case 3:
			return Global_262145.f_4448 /* Tunable: ENTRANCE_FEE_SURVIVAL_EXPENDITURE_TUNABLE */;
		case 6:
			return 500;
		case 8:
			if (iParam3 == 1)
			{
				return 0;
			}
			else
			{
				return Global_262145.f_4450 /* Tunable: ENTRANCE_FEE_PARACHUTING_EXPENDITURE_TUNABLE */;
			}
			break;
		case 2:
			if (iParam3 == 1)
			{
				return Global_262145.f_2352 /* Tunable: VEHICLE_RENTAL_PRICE_MODIFIER */;
			}
			else
			{
				switch (Global_4718592.f_107227)
				{
					case 4:
					case 5:
						return (Global_262145.f_4445 /* Tunable: ENTRANCE_FEE_AIR_RACE_EXPENDITURE_TUNABLE */ + Global_262145.f_2352 /* Tunable: VEHICLE_RENTAL_PRICE_MODIFIER */);
					case 2:
					case 3:
						return (Global_262145.f_4446 /* Tunable: ENTRANCE_FEE_SEA_RACE_EXPENDITURE_TUNABLE */ + Global_262145.f_2352 /* Tunable: VEHICLE_RENTAL_PRICE_MODIFIER */);
					case 12:
					case 13:
						return (Global_262145.f_4447 /* Tunable: ENTRANCE_FEE_BIKE_RACE_EXPENDITURE_TUNABLE */ + Global_262145.f_2352 /* Tunable: VEHICLE_RENTAL_PRICE_MODIFIER */);
					default:
				}
				return (Global_262145.f_4444 /* Tunable: ENTRANCE_FEE_CAR_RACE_EXPENDITURE_TUNABLE */ + Global_262145.f_2352 /* Tunable: VEHICLE_RENTAL_PRICE_MODIFIER */);
			}
			break;
	}
	return 0;
}

char* func_475(int iParam0)//Position - 0x1DBB8B
{
	char* sVar0;
	int iVar1;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		sVar0 = __LIB_1__::func_601(&(Global_1892703[iParam0 /*599*/].f_10.f_105));
		return sVar0;
	}
	if (Global_1892703[iParam0 /*599*/].f_10.f_121 != Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_121)
	{
		sVar0 = __LIB_5__::func_764(iParam0, 0);
		return sVar0;
	}
	if (((__LIB_1__::func_906(iParam0, 28) || __LIB_1__::func_906(PLAYER::PLAYER_ID(), 28)) || __LIB_2__::func_110(iParam0)) && !__LIB_2__::func_109(iParam0))
	{
		return __LIB_5__::func_764(iParam0, 0);
	}
	iVar1 = __LIB_2__::func_39(iParam0);
	if (iVar1 != __LIB_0__::getMinusOneOrNull())
	{
		if (iVar1 != PLAYER::PLAYER_ID())
		{
			if (!__LIB_0__::func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				return __LIB_5__::func_764(iVar1, 0);
			}
		}
	}
	if (iVar1 != __LIB_0__::getMinusOneOrNull())
	{
		sVar0 = __LIB_1__::func_601(&(Global_1892703[iVar1 /*599*/].f_10.f_105));
		if (MISC::IS_STRING_NULL_OR_EMPTY(sVar0))
		{
			return __LIB_5__::func_764(iVar1, 0);
		}
		else
		{
			return sVar0;
		}
	}
	return "";
}

int func_476(int* iParam0)//Position - 0x113F
{
	if (!BitTest(*iParam0, 1))
	{
		return 0;
	}
	if (Global_20244)
	{
		return 0;
	}
	if (!CAM::IS_SCREEN_FADED_IN())
	{
		return 0;
	}
	if (!PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, Global_20238))
	{
		return 0;
	}
	__LIB_13__::func_111();
	Global_20244 = 1;
	return 1;
}

void func_477(int* iParam0)//Position - 0x11E9
{
	if (MISC::GET_GAME_TIMER() < iParam0->f_1)
	{
		return;
	}
	if (!CAM::IS_SCREEN_FADED_IN())
	{
		return;
	}
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, Global_20242) || PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 181 /*INPUT_CELLPHONE_SCROLL_BACKWARD*/))
	{
		__LIB_13__::func_162();
		iParam0->f_1 = MISC::GET_GAME_TIMER() + 50;
	}
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, Global_20243) || PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 180 /*INPUT_CELLPHONE_SCROLL_FORWARD*/))
	{
		__LIB_13__::func_161();
		iParam0->f_1 = MISC::GET_GAME_TIMER() + 50;
	}
}

void func_478(int iParam0, char* sParam1, int iParam2, char* sParam3, int iParam4, char* sParam5, int* iParam6)//Position - 0x55D25
{
	__LIB_13__::func_419(2, iParam0, sParam1, 0, iParam6, -1);
	__LIB_13__::func_419(1, iParam2, sParam3, 1, iParam6, 17);
	__LIB_13__::func_419(3, iParam4, sParam5, 2, iParam6, -1);
}

int func_479()//Position - 0x59693
{
	if (__LIB_1__::func_386(PLAYER::PLAYER_ID(), 131) || __LIB_1__::func_386(PLAYER::PLAYER_ID(), 129))
	{
		return 1;
	}
	return 0;
}

int func_480(int* iParam0)//Position - 0x107A
{
	if (!BitTest(*iParam0, 0))
	{
		return 0;
	}
	if (Global_20244)
	{
		return 0;
	}
	if (!CAM::IS_SCREEN_FADED_IN())
	{
		return 0;
	}
	if (!PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, Global_20235))
	{
		return 0;
	}
	__LIB_13__::func_111();
	Global_20244 = 1;
	return 1;
}

void func_481(var uParam0, var uParam1)//Position - 0x11C9C8
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4[32];
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	bool bVar10;
	int iVar11;
	int iVar12;
	struct<8> Var13;
	int iVar14;
	int iVar15;
	iVar5 = __LIB_4__::func_71(*uParam0);
	iVar6 = 0;
	while (iVar6 < 32)
	{
		iVar8 = iVar6;
		if (!__LIB_7__::func_795(iVar8, iVar5))
		{
			if (Global_1946250.f_4554[iVar6] != 0)
			{
				Global_1946250.f_4554[iVar6] = 0;
				iVar0 = 1;
			}
		}
		else
		{
			iVar7 = NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(iVar8);
			bVar3 = true;
			if (Global_1946250.f_4554[iVar6] != iVar7)
			{
				Global_1946250.f_4554[iVar6] = iVar7;
				iVar0 = 1;
			}
			iVar4[iVar6] = 1;
			if (iVar4[iVar6] != __LIB_4__::func_922(iVar1))
			{
				iVar0 = 1;
			}
			if (iVar1 == uParam0->f_4)
			{
				iVar2 = iVar8;
			}
			iVar1++;
		}
		iVar6++;
	}
	if (!bVar3)
	{
		if (__LIB_1__::func_626(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408) != *uParam0)
		{
			uParam1->f_4 = 1;
		}
		else
		{
			__LIB_5__::func_462();
			*uParam1 = 1;
			return;
		}
	}
	if (iVar0 || uParam0->f_5)
	{
		__LIB_1__::func_602(0, 0);
		__LIB_5__::func_259();
		iVar9 = LOCALIZATION::GET_CURRENT_LANGUAGE();
		bVar10 = (((iVar9 != 12 && iVar9 != 9) && iVar9 != 8) && iVar9 != 10);
		iVar6 = 0;
		while (iVar6 < 32)
		{
			iVar12 = iVar6;
			if (!__LIB_7__::func_795(iVar12, iVar5))
			{
			}
			else
			{
				__LIB_10__::func_18(iVar11, "ARC_OWNER_X" /* GXT: ~a~'s Arcade */, 1, iVar4[iVar6], 0, 0, 0);
				StringCopy(&Var13, PLAYER::GET_PLAYER_NAME(iVar12), 64);
				if (bVar10)
				{
					__LIB_10__::func_47(&Var13, 0, 0, 1);
				}
				else
				{
					__LIB_10__::func_50(&Var13, 0, 0, 0);
				}
				iVar11++;
			}
			iVar6++;
		}
		iVar14 = __LIB_0__::func_138(uParam0->f_5, 0, uParam0->f_4);
		__LIB_7__::func_733(iVar14, 1, 1);
	}
	else
	{
		iVar15 = iVar2;
		if (iVar15 > -1 && !iVar4[iVar15])
		{
			__LIB_1__::func_789("CLUB_KICK_L_D" /* GXT: You have been temporarily banned from entering this Nightclub. */, 0, 0);
		}
		if ((uParam0->f_2 && iVar15 > -1) && iVar4[iVar15])
		{
			__LIB_7__::func_794(iVar2);
			uParam1->f_6 = 1;
			uParam1->f_1 = 1;
			uParam1->f_11 = 10;
			uParam1->f_7 = 0;
			__LIB_5__::func_462();
		}
		else if (uParam0->f_3)
		{
			__LIB_5__::func_462();
			if (__LIB_1__::func_626(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408) != *uParam0)
			{
				uParam1->f_4 = 1;
			}
			*uParam1 = 1;
		}
	}
}

void func_482(var uParam0, var uParam1)//Position - 0x15C734
{
	int iVar0;
	int iVar1;
	bool bVar2;
	bool bVar3;
	int iVar4[32];
	int iVar5;
	int iVar6;
	int iVar7;
	bool bVar8;
	int iVar9;
	bool bVar10;
	int iVar11;
	int iVar12;
	struct<8> Var13;
	int iVar14;
	bool bVar15;
	iVar5 = __LIB_4__::func_322(*uParam0);
	iVar6 = 0;
	while (iVar6 < 32)
	{
		bVar8 = iVar6;
		if (!__LIB_7__::func_816(bVar8, iVar5))
		{
			if (Global_1946250.f_4554[iVar6] != 0)
			{
				Global_1946250.f_4554[iVar6] = 0;
				iVar0 = 1;
			}
		}
		else
		{
			iVar7 = NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(bVar8);
			bVar3 = true;
			if (Global_1946250.f_4554[iVar6] != iVar7)
			{
				Global_1946250.f_4554[iVar6] = iVar7;
				iVar0 = 1;
			}
			if (__LIB_5__::func_584(bVar8) && (!__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1) || __LIB_0__::func_797() != bVar8))
			{
				iVar4[iVar6] = 0;
			}
			else
			{
				iVar4[iVar6] = 1;
			}
			if (iVar4[iVar6] != __LIB_4__::func_922(iVar1))
			{
				iVar0 = 1;
			}
			if (iVar1 == uParam0->f_4)
			{
				bVar2 = bVar8;
			}
			iVar1++;
		}
		iVar6++;
	}
	if (!bVar3)
	{
		if (__LIB_1__::func_639(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336) != *uParam0)
		{
			uParam1->f_4 = 1;
		}
		else
		{
			__LIB_5__::func_462();
			*uParam1 = 1;
			return;
		}
	}
	if (iVar0 || uParam0->f_5)
	{
		__LIB_1__::func_602(0, 0);
		__LIB_5__::func_315();
		iVar9 = LOCALIZATION::GET_CURRENT_LANGUAGE();
		bVar10 = (((iVar9 != 12 && iVar9 != 9) && iVar9 != 8) && iVar9 != 10);
		iVar6 = 0;
		while (iVar6 < 32)
		{
			iVar12 = iVar6;
			if (!__LIB_7__::func_816(iVar12, iVar5))
			{
			}
			else
			{
				__LIB_10__::func_18(iVar11, "CLUB_OWNER_X" /* GXT: ~a~'s Nightclub */, 1, iVar4[iVar6], 0, 0, 0);
				StringCopy(&Var13, PLAYER::GET_PLAYER_NAME(iVar12), 64);
				if (bVar10)
				{
					__LIB_10__::func_47(&Var13, 0, 0, 1);
				}
				else
				{
					__LIB_10__::func_50(&Var13, 0, 0, 0);
				}
				iVar11++;
			}
			iVar6++;
		}
		iVar14 = __LIB_0__::func_138(uParam0->f_5, 0, uParam0->f_4);
		__LIB_7__::func_733(iVar14, 1, 1);
	}
	else
	{
		bVar15 = bVar2;
		if (bVar15 > -1 && !iVar4[bVar15])
		{
			__LIB_1__::func_789("CLUB_KICK_L_D" /* GXT: You have been temporarily banned from entering this Nightclub. */, 0, 0);
		}
		if ((uParam0->f_2 && bVar15 > -1) && iVar4[bVar15])
		{
			__LIB_7__::func_852(bVar2);
			uParam1->f_6 = 1;
			uParam1->f_11 = 10;
			uParam1->f_7 = 0;
			__LIB_5__::func_462();
		}
		else if (uParam0->f_3)
		{
			__LIB_5__::func_462();
			if (__LIB_1__::func_639(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336) != *uParam0)
			{
				uParam1->f_4 = 1;
			}
			*uParam1 = 1;
		}
	}
}

void func_483()//Position - 0x6DD
{
	Global_22668 = (Global_22668 - 1);
	if (Global_22668 < 0)
	{
		__LIB_13__::func_418("[MMM][NewJobInv][JobList] Calling Reset_New_Invites_Indicator from Decrement_New_Invites_Indicator");
	}
	__LIB_13__::Reset_New_Invites_Indicator();
}

void func_484(var uParam0, var uParam1)//Position - 0xBA875
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4[32];
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	char* sVar9;
	int iVar10;
	bool bVar11;
	int iVar12;
	int iVar13;
	struct<8> Var14;
	int iVar15;
	int iVar16;
	iVar5 = __LIB_3__::func_810(*uParam0);
	iVar6 = 0;
	while (iVar6 < 32)
	{
		iVar8 = iVar6;
		if (!__LIB_7__::func_786(iVar8, iVar5))
		{
			if (Global_1946250.f_4554[iVar6] != 0)
			{
				Global_1946250.f_4554[iVar6] = 0;
				iVar0 = 1;
			}
		}
		else
		{
			iVar7 = NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(iVar8);
			bVar3 = true;
			if (Global_1946250.f_4554[iVar6] != iVar7)
			{
				Global_1946250.f_4554[iVar6] = iVar7;
				iVar0 = 1;
			}
			iVar4[iVar6] = 1;
			if (iVar4[iVar6] != __LIB_4__::func_922(iVar1))
			{
				iVar0 = 1;
			}
			if (iVar1 == uParam0->f_4)
			{
				iVar2 = iVar8;
			}
			iVar1++;
		}
		iVar6++;
	}
	if (!bVar3)
	{
		if (!__LIB_5__::func_718(*uParam0))
		{
			uParam1->f_4 = 1;
		}
		else
		{
			__LIB_5__::func_462();
			*uParam1 = 1;
			return;
		}
	}
	if (iVar0 || uParam0->f_5)
	{
		__LIB_1__::func_602(0, 0);
		__LIB_5__::func_220();
		sVar9 = __LIB_3__::func_813();
		__LIB_3__::func_566(1, sVar9, sVar9);
		iVar10 = LOCALIZATION::GET_CURRENT_LANGUAGE();
		bVar11 = (((iVar10 != 12 && iVar10 != 9) && iVar10 != 8) && iVar10 != 10);
		iVar6 = 0;
		while (iVar6 < 32)
		{
			iVar13 = iVar6;
			if (!__LIB_7__::func_786(iVar13, iVar5))
			{
			}
			else
			{
				__LIB_10__::func_18(iVar12, "AUTOS_OWNER_X" /* GXT: ~a~'s Auto Shop */, 1, iVar4[iVar6], 0, 0, 0);
				StringCopy(&Var14, PLAYER::GET_PLAYER_NAME(iVar13), 64);
				if (bVar11)
				{
					__LIB_10__::func_47(&Var14, 0, 0, 1);
				}
				else
				{
					__LIB_10__::func_50(&Var14, 0, 0, 0);
				}
				iVar12++;
			}
			iVar6++;
		}
		iVar15 = __LIB_0__::func_138(uParam0->f_5, 0, uParam0->f_4);
		__LIB_7__::func_733(iVar15, 1, 1);
	}
	else
	{
		iVar16 = iVar2;
		if ((uParam0->f_2 && iVar16 > -1) && iVar4[iVar16])
		{
			if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					__LIB_7__::func_785(iVar2);
					Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_10 = __LIB_0__::getMinusOneOrNull();
				}
				else
				{
					Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_10 = iVar2;
				}
			}
			uParam1->f_6 = 1;
			uParam1->f_1 = 0;
			uParam1->f_11 = 10;
			uParam1->f_7 = 0;
			__LIB_5__::func_462();
		}
		else if (uParam0->f_3)
		{
			__LIB_5__::func_462();
			if (!__LIB_5__::func_718(*uParam0))
			{
				uParam1->f_4 = 1;
			}
			*uParam1 = 1;
		}
	}
}

int func_485(int iParam0, int iParam1, int iParam2)//Position - 0x13EB
{
	if (iParam1 == 0)
	{
		return 0;
	}
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	if (__LIB_3__::func_158(iParam0) == iParam1)
	{
		if (__LIB_11__::func_829(iParam0) == iParam2)
		{
			return 1;
		}
	}
	return 0;
}

void func_486(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x1D4C73
{
	struct<4> Var0;
	struct<8> Var1;
	int iVar2;
	int iVar3;
	StringCopy(&Var0, __LIB_1__::func_397(iParam1), 16);
	StringCopy(&Var1, __LIB_1__::func_396(iParam2), 32);
	switch (iParam1)
	{
		case 0:
			iVar2 = joaat("SERVICE_EARN_REFUND_BACKUP_VAGOS");
			break;
		case 1:
			iVar2 = joaat("SERVICE_EARN_REFUND_BACKUP_LOST");
			break;
		case 2:
			iVar2 = joaat("SERVICE_EARN_REFUND_BACKUP_FAMILIES");
			break;
		case 3:
			iVar2 = joaat("SERVICE_EARN_REFUND_HIRE_MUGGER");
			break;
		case 4:
			iVar2 = joaat("SERVICE_EARN_REFUND_HIRE_MERCENARY");
			break;
		case 5:
			iVar2 = joaat("SERVICE_EARN_REFUND_BUY_CARDROPOFF");
			break;
		case 6:
			iVar2 = joaat("SERVICE_EARN_REFUND_HELI_PICKUP");
			break;
		case 7:
			iVar2 = joaat("SERVICE_EARN_REFUND_BOAT_PICKUP");
			break;
		case 8:
			iVar2 = joaat("SERVICE_EARN_REFUND_CLEAR_WANTED");
			break;
		case 9:
			iVar2 = joaat("SERVICE_EARN_REFUND_HEAD_2_HEAD");
			break;
		case 10:
			iVar2 = joaat("SERVICE_EARN_REFUND_CHALLENGE");
			break;
		case 11:
			iVar2 = joaat("SERVICE_EARN_REFUND_SHARE_LAST_JOB");
			break;
		case 12:
			iVar2 = joaat("SERVICE_EARN_REFUND_LOTTERY");
			break;
		case 13:
			iVar2 = joaat("SERVICE_EARN_REFUNDAPPEARANCE");
			break;
		case 14:
			iVar2 = joaat("SERVICE_EARN_REFUNDAMMODROP");
			break;
		case 15:
			iVar2 = joaat("SERVICE_EARN_REFUND_ORBITAL_MANUAL");
			break;
		case 16:
			iVar2 = joaat("SERVICE_EARN_REFUND_ORBITAL_AUTO");
			break;
		case 17:
			iVar2 = joaat("SERVICE_EARN_REFUND_ARENA_SPEC_BOX_ENTRY");
			break;
	}
	if (__LIB_0__::func_112())
	{
		__LIB_3__::func_407(iVar2, iParam0, &iVar3, bParam3, bParam3, 0);
		Global_4534105[iVar3 /*85*/].f_14.f_40 = { Var0 };
		Global_4534105[iVar3 /*85*/].f_14.f_44 = { Var1 };
	}
	else
	{
		MONEY::NETWORK_REFUND_CASH(iParam0, &Var0, &Var1, bParam3);
	}
}

void func_487(int iParam0)//Position - 0xDD1
{
	if (iParam0 != Global_1957718)
	{
		Global_1957718 = iParam0;
	}
}

int func_488(int iParam0, var uParam1)//Position - 0x26E9
{
	if (iParam0 == 3)
	{
		*uParam1 = (*uParam1 - 2);
		return 0;
	}
	*uParam1++;
	return iParam0 + 1;
}

int func_489(int iParam0, int iParam1)//Position - 0x27C3
{
	int iVar0;
	if (iParam0 >= 32 || iParam0 < 0)
	{
		return 0;
	}
	if (iParam1 <= 0 || iParam1 > 3)
	{
		return 0;
	}
	iVar0 = iParam0 + 1;
	iVar0 *= 3;
	iVar0 = (iVar0 - 2);
	return (iVar0 + (iParam1 - 1));
}

int func_490()//Position - 0x280F
{
	if (Global_1946186 < 0 || Global_1946186 >= 32)
	{
		return 0;
	}
	return Global_1946187[Global_1946186];
}

char* func_491(int iParam0)//Position - 0xC30A
{
	switch (iParam0)
	{
		case 1:
			return "MP_WAREHOUSE_1" /* GXT: La Puerta Vehicle Warehouse */;
		case 2:
			return "MP_WAREHOUSE_2" /* GXT: La Mesa Vehicle Warehouse */;
		case 3:
			return "MP_WAREHOUSE_3" /* GXT: Davis Vehicle Warehouse */;
		case 4:
			return "MP_WAREHOUSE_4" /* GXT: Strawberry Vehicle Warehouse */;
		case 5:
			return "MP_WAREHOUSE_5" /* GXT: Murrieta Heights Vehicle Warehouse */;
		case 6:
			return "MP_WAREHOUSE_6" /* GXT: Cypress Flats Vehicle Warehouse */;
		case 7:
			return "MP_WAREHOUSE_7" /* GXT: El Burro Heights Vehicle Warehouse */;
		case 8:
			return "MP_WAREHOUSE_8" /* GXT: Elysian Island Vehicle Warehouse */;
		case 9:
			return "MP_WAREHOUSE_9" /* GXT: LSIA Vehicle Warehouse */;
		case 10:
			return "MP_WAREHOUSE_10" /* GXT: LSIA Vehicle Warehouse */;
		default:
	}
	return "";
}

int func_492(int iParam0)//Position - 0xC7AA
{
	return SYSTEM::CEIL((IntToFloat(iParam0) * Global_262145.f_19462 /* Tunable: -466347733 */));
}

int func_493(int iParam0)//Position - 0xC7C1
{
	switch (iParam0)
	{
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
			return 1;
		default:
	}
	return 0;
}

int func_494(int iParam0)//Position - 0xC83C
{
	return SYSTEM::CEIL((IntToFloat(iParam0) * Global_262145.f_19461 /* Tunable: 1410072259 */));
}

int func_495(int iParam0)//Position - 0xC853
{
	switch (iParam0)
	{
		case 3:
			return Global_262145.f_19457 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_HARD */;
		case 2:
			return Global_262145.f_19458 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_MED */;
		case 1:
			return Global_262145.f_19459 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_EASY */;
		default:
	}
	return 0;
}

int func_496(int iParam0)//Position - 0xC893
{
	switch (iParam0)
	{
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
			return 1;
		default:
	}
	return 0;
}

int func_497(int iParam0)//Position - 0xC8D7
{
	switch (iParam0)
	{
		case joaat("prototipo"):
		case joaat("tyrus"):
		case joaat("t20"):
		case joaat("sheava"):
		case joaat("osiris"):
		case joaat("fmj"):
		case joaat("reaper"):
		case joaat("pfister811"):
		case joaat("mamba"):
		case joaat("btype3"):
		case joaat("feltzer3"):
		case joaat("ztype"):
			return 3;
		case joaat("tropos"):
		case joaat("entityxf"):
		case joaat("sultanrs"):
		case joaat("zentorno"):
		case joaat("omnis"):
		case joaat("coquette3"):
		case joaat("seven70"):
		case joaat("verlierer2"):
		case joaat("coquette2"):
		case joaat("cheetah"):
			return 2;
		case joaat("bestiagts"):
		case joaat("nightshade"):
		case joaat("banshee2"):
		case joaat("sabregt2"):
		case joaat("turismor"):
		case joaat("tampa"):
		case joaat("massacro"):
		case joaat("jester"):
		case joaat("alpha"):
		case joaat("feltzer2"):
			return 1;
		default:
	}
	return 1;
}

void func_498(int iParam0)//Position - 0x16A00
{
	Global_4535595 = iParam0;
}

int func_499(int iParam0)//Position - 0x16B1A
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE4_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_500(char* sParam0, bool bParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x16BAD
{
	if (bParam1)
	{
		if (iParam2 == -1)
		{
			StringCopy(sParam0, "CB_NONE_0_t0_v0", 64);
		}
		else if (bParam3)
		{
			StringCopy(sParam0, "CB_BUY_", 64);
			StringIntConCat(sParam0, iParam2, 64);
			StringConCat(sParam0, "_t1_v", 64);
			StringIntConCat(sParam0, iParam4, 64);
		}
		else
		{
			StringCopy(sParam0, "CB_BUY_", 64);
			StringIntConCat(sParam0, iParam2, 64);
			StringConCat(sParam0, "_t0_v0", 64);
		}
	}
	else
	{
		StringCopy(sParam0, "CB_SELL_0_t0_v0", 64);
	}
}

int func_501(int iParam0)//Position - 0x16C51
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16042 /* Tunable: EXEC_CONTRABAND_ORNAMENTAL_EGG_COST */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16040 /* Tunable: EXEC_CONTRABAND_GOLDEN_MINIGUN_COST */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16044 /* Tunable: EXEC_CONTRABAND_XL_DIAMOND_COST */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16038 /* Tunable: EXEC_CONTRABAND_SASQUATCH_HIDE_COST */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16036 /* Tunable: EXEC_CONTRABAND_FILM_REEL_COST */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16046 /* Tunable: EXEC_CONTRABAND_POCKET_WATCH_COST */;
	}
	return 0;
}

int func_502(int iParam0)//Position - 0x16CC9
{
	if (iParam0 == 2)
	{
		return 1;
	}
	else if (iParam0 == 4)
	{
		return 2;
	}
	else if (iParam0 == 6)
	{
		return 3;
	}
	else if (iParam0 == 7)
	{
		return 4;
	}
	else if (iParam0 == 8)
	{
		return 5;
	}
	else if (iParam0 == 9)
	{
		return 6;
	}
	return 0;
}

int func_503(int iParam0)//Position - 0x16D1F
{
	switch (iParam0)
	{
		case 1:
			return Global_262145.f_15816 /* Tunable: EXEC_CONTRABAND_SMALL_COST */;
		case 2:
			return Global_262145.f_15817 /* Tunable: EXEC_CONTRABAND_MEDIUM_COST */;
		case 3:
			return Global_262145.f_15818 /* Tunable: EXEC_CONTRABAND_LARGE_COST */;
		default:
	}
	return 0;
}

void func_504(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x1705F
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_1 = uParam1;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_2 = uParam2;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_3 = uParam3;
}

int func_505(int iParam0)//Position - 0x17E26
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16051 /* Tunable: EXEC_BASE_CONTRABAND_ORNAMENTAL_EGG_COST */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16050 /* Tunable: EXEC_BASE_CONTRABAND_GOLDEN_MINIGUN_COST */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16052 /* Tunable: EXEC_BASE_CONTRABAND_XL_DIAMOND_COST */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16049 /* Tunable: EXEC_BASE_CONTRABAND_SASQUATCH_HIDE_COST */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16048 /* Tunable: EXEC_BASE_CONTRABAND_FILM_REEL_COST */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16053 /* Tunable: EXEC_BASE_CONTRABAND_POCKET_WATCH_COST */;
	}
	return 0;
}

int func_506(int iParam0)//Position - 0x17EB3
{
	switch (iParam0)
	{
		case 1:
			return Global_262145.f_15819 /* Tunable: EXEC_CONTRABAND_BASE_SMALL_COST */;
		case 2:
			return Global_262145.f_15820 /* Tunable: EXEC_CONTRABAND_BASE_MEDIUM_COST */;
		case 3:
			return Global_262145.f_15821 /* Tunable: EXEC_CONTRABAND_BASE_LARGE_COST */;
		default:
	}
	return 0;
}

int func_507(int iParam0)//Position - 0x181F6
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16043 /* Tunable: EXEC_CONTRABAND_ORNAMENTAL_EGG_VALUE */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16041 /* Tunable: EXEC_CONTRABAND_GOLDEN_MINIGUN_VALUE */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16045 /* Tunable: EXEC_CONTRABAND_XL_DIAMOND_VALUE */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16039 /* Tunable: EXEC_CONTRABAND_SASQUATCH_HIDE_VALUE */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16037 /* Tunable: EXEC_CONTRABAND_FILM_REEL_VALUE */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16047 /* Tunable: EXEC_CONTRABAND_POCKET_WATCH_VALUE */;
	}
	return 0;
}

int func_508(int iParam0, int iParam1)//Position - 0x1826E
{
	int iVar0;
	if (__LIB_3__::func_36(iParam0))
	{
		iVar0 = 0;
		while (iVar0 < 6)
		{
			if (Global_1945958[iVar0] == iParam1 && Global_1945965[iVar0] == iParam0)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_509(int iParam0)//Position - 0x182B4
{
	if (iParam0 >= Global_262145.f_15842 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD21 */)
	{
		return Global_262145.f_15863 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD21 */;
	}
	else if (iParam0 >= Global_262145.f_15841 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD20 */)
	{
		return Global_262145.f_15862 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD20 */;
	}
	else if (iParam0 >= Global_262145.f_15840 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD19 */)
	{
		return Global_262145.f_15861 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD19 */;
	}
	else if (iParam0 >= Global_262145.f_15839 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD18 */)
	{
		return Global_262145.f_15860 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD18 */;
	}
	else if (iParam0 >= Global_262145.f_15838 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD17 */)
	{
		return Global_262145.f_15859 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD17 */;
	}
	else if (iParam0 >= Global_262145.f_15837 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD16 */)
	{
		return Global_262145.f_15858 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD16 */;
	}
	else if (iParam0 >= Global_262145.f_15836 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD15 */)
	{
		return Global_262145.f_15857 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD15 */;
	}
	else if (iParam0 >= Global_262145.f_15835 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD14 */)
	{
		return Global_262145.f_15856 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD14 */;
	}
	else if (iParam0 >= Global_262145.f_15834 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD13 */)
	{
		return Global_262145.f_15855 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD13 */;
	}
	else if (iParam0 >= Global_262145.f_15833 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD12 */)
	{
		return Global_262145.f_15854 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD12 */;
	}
	else if (iParam0 >= Global_262145.f_15832 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD11 */)
	{
		return Global_262145.f_15853 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD11 */;
	}
	else if (iParam0 >= Global_262145.f_15831 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD10 */)
	{
		return Global_262145.f_15852 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD10 */;
	}
	else if (iParam0 >= Global_262145.f_15830 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD9 */)
	{
		return Global_262145.f_15851 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD9 */;
	}
	else if (iParam0 >= Global_262145.f_15829 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD8 */)
	{
		return Global_262145.f_15850 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD8 */;
	}
	else if (iParam0 >= Global_262145.f_15828 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD7 */)
	{
		return Global_262145.f_15849 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD7 */;
	}
	else if (iParam0 >= Global_262145.f_15827 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD6 */)
	{
		return Global_262145.f_15848 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD6 */;
	}
	else if (iParam0 >= Global_262145.f_15826 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD5 */)
	{
		return Global_262145.f_15847 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD5 */;
	}
	else if (iParam0 >= Global_262145.f_15825 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD4 */)
	{
		return Global_262145.f_15846 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD4 */;
	}
	else if (iParam0 >= Global_262145.f_15824 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD3 */)
	{
		return Global_262145.f_15845 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD3 */;
	}
	else if (iParam0 >= Global_262145.f_15823 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD2 */)
	{
		return Global_262145.f_15844 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD2 */;
	}
	return Global_262145.f_15843 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD1 */;
}

int func_510()//Position - 0x1851D
{
	return (Global_262145.f_15608 /* Tunable: EXEC_BUY_COOLDOWN */ / 1000);
}

int func_511(int iParam0)//Position - 0x18530
{
	switch (iParam0)
	{
		case 0:
			return 3661;
		case 1:
			return 3662;
		case 2:
			return 3663;
		case 3:
			return 3664;
		case 4:
			return 3665;
		default:
	}
	return 3661;
}

Vector3 func_512(int iParam0)//Position - 0x18A4C
{
	struct<3> Var0;
	Var0 = { 0f, 0f, 0f };
	if (!__LIB_3__::func_36(iParam0))
	{
		return Var0;
	}
	switch (iParam0)
	{
		case 1:
			Var0 = { 50.9205f, -2560.0098f, 6f };
			break;
		case 2:
			Var0 = { -1074.8517f, -1257.4519f, 5.6938f };
			break;
		case 3:
			Var0 = { 901.936f, -1019.4255f, 34.9666f };
			break;
		case 4:
			Var0 = { 253.9006f, -1955.9329f, 22.9477f };
			break;
		case 5:
			Var0 = { -426.279f, 180.9043f, 80.6855f };
			break;
		case 6:
			Var0 = { -1050.3604f, -2023.9388f, 12.1616f };
			break;
		case 7:
			Var0 = { -1275.3776f, -815.4295f, 17.1148f };
			break;
		case 8:
			Var0 = { -883.2906f, -2730.5417f, 12.8285f };
			break;
		case 9:
			Var0 = { 269.6765f, -3016.2786f, 5.7176f };
			break;
		case 10:
			Var0 = { 1561.4023f, -2138.6965f, 77.5275f };
			break;
		case 11:
			Var0 = { -303.7892f, -2698.3901f, 6.0003f };
			break;
		case 12:
			Var0 = { 507.2061f, -649.5859f, 24.7512f };
			break;
		case 13:
			Var0 = { -525.8206f, -1775.8699f, 21.3501f };
			break;
		case 14:
			Var0 = { -291.6372f, -1352.5558f, 31.3146f };
			break;
		case 15:
			Var0 = { 348.6436f, 324.428f, 104.3185f };
			break;
		case 16:
			Var0 = { 922.0838f, -1561.2987f, 29.7475f };
			break;
		case 17:
			Var0 = { 763.7448f, -885.2086f, 25.0869f };
			break;
		case 18:
			Var0 = { 1043.884f, -2172.6033f, 30.471f };
			break;
		case 19:
			Var0 = { 1001.6589f, -2511.8804f, 28.302f };
			break;
		case 20:
			Var0 = { -263.138f, 194.3424f, 85.184f };
			break;
		case 21:
			Var0 = { 547.8112f, -1942.5139f, 23.9851f };
			break;
		case 22:
			Var0 = { 88.9678f, -2216.8818f, 6.0613f };
			break;
	}
	return Var0;
}

int func_513()//Position - 0x1FF43
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/] != 0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

bool func_514()//Position - 0x1FFD8
{
	return Global_1946111;
}

void func_515(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x24340
{
	if (iParam0 == 0)
	{
		return;
	}
	if (bParam1 && bParam2)
	{
		return;
	}
	if (bParam3)
	{
		if (!bParam1)
		{
			return;
		}
	}
	Global_2666811 = iParam0;
	if (bParam1)
	{
		Global_2666811 += 10000;
	}
	if (bParam2)
	{
		Global_2666811 += 10000;
		Global_2666811 += 20000;
	}
	if (bParam3)
	{
		Global_2666811 = (Global_2666811 + 40000);
	}
}

void func_516()//Position - 0x24406
{
	Global_2714762.f_718 = 0;
}

int func_517(int iParam0)//Position - 0x245BA
{
	switch (iParam0)
	{
		case 0:
			return 8;
			break;
		case 1:
			return 8;
			break;
		case 2:
			return 16;
			break;
	}
	return -1;
}

void func_518(int iParam0)//Position - 0x27541
{
	Global_1952159 = iParam0;
}

int func_519(int iParam0)//Position - 0x288FD
{
	int iVar0;
	iVar0 = NETWORK::NETWORK_GET_CONTENT_MODIFIER_LIST_ID(iParam0);
	if (iVar0 >= 0)
	{
		return iVar0 + 28;
	}
	return 27;
}

int func_520(int iParam0, var uParam1)//Position - 0x292E9
{
	if (*uParam1 != iParam0)
	{
		if (*uParam1 != 0)
		{
			NETWORK::UGC_RELEASE_CACHED_DESCRIPTION(*uParam1);
		}
		uParam1->f_2 = 0;
		*uParam1 = iParam0;
		uParam1->f_1 = 0;
	}
	if (iParam0 == 0)
	{
		return 1;
	}
	if (uParam1->f_2)
	{
		return 1;
	}
	else
	{
		if (iParam0 == -1)
		{
			uParam1->f_2 = 1;
			return 1;
		}
		if ((!NETWORK::UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS(iParam0) && uParam1->f_1 == 0) || uParam1->f_1 == -1)
		{
			uParam1->f_1 = NETWORK::UGC_REQUEST_CACHED_DESCRIPTION(iParam0);
		}
		else if (NETWORK::UGC_HAS_DESCRIPTION_REQUEST_FINISHED(iParam0))
		{
			if (NETWORK::UGC_DID_DESCRIPTION_REQUEST_SUCCEED(iParam0))
			{
				uParam1->f_2 = 1;
				return 1;
			}
			else
			{
				uParam1->f_2 = 0;
				return 1;
			}
		}
	}
	return 0;
}

int func_521(int iParam0)//Position - 0x294D3
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_19465 /* Tunable: 1584540863 */;
		case 1:
			return Global_262145.f_19466 /* Tunable: 66939034 */;
		case 2:
			return Global_262145.f_19467 /* Tunable: 1728276108 */;
		case 3:
			return Global_262145.f_19468 /* Tunable: 473647117 */;
		case 4:
			return Global_262145.f_19469 /* Tunable: -519289138 */;
		case 5:
			return Global_262145.f_19470 /* Tunable: 505472864 */;
		case 6:
			return Global_262145.f_19471 /* Tunable: 385270792 */;
		case 7:
			return Global_262145.f_19472 /* Tunable: -1169424861 */;
		default:
	}
	return -1;
}

int func_522()//Position - 0x296C0
{
	return __LIB_1__::func_360(3978, -1, 0);
}

void func_523(int iParam0, int iParam1)//Position - 0x167E9
{
	int iVar0;
	iVar0 = __LIB_13__::func_142(iParam0);
	iVar0 = (iVar0 + iParam1);
	if (!__LIB_1__::func_284(iParam0))
	{
		__LIB_1__::func_69(iParam0, iVar0);
	}
	else
	{
		__LIB_1__::func_70(iParam0, iVar0);
	}
}

int func_524(int iParam0)//Position - 0x244A8
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 16)
	{
		if (__LIB_13__::func_116(iVar0) && Global_262145.f_5041[iVar0] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_525(int iParam0, int iParam1, float* fParam2, bool bParam3)//Position - 0x286A8
{
	int iVar0;
	var uVar1;
	iVar0 = __LIB_2__::func_192(iParam0);
	uVar1 = *fParam2;
	if (!NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT_HASH(iVar0, iParam1, fParam2))
	{
		if (bParam3)
		{
		}
		return;
		*fParam2 = uVar1;
	}
	else
	{
		NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT_MODIFICATION_DETECTION_REGISTRATION_HASH(iVar0, iParam1, fParam2);
	}
	if (bParam3)
	{
	}
}

char* func_526(int iParam0, int iParam1)//Position - 0x292B9
{
	if (iParam0 == -1)
	{
		return __LIB_13__::func_438();
	}
	return NETWORK::UGC_GET_CACHED_DESCRIPTION(iParam0, iParam1);
}

int func_527(int iParam0, int iParam1, var uParam2)//Position - 0x1D16
{
	float fVar0;
	float fVar1;
	var uVar2[13];
	int iVar3;
	int iVar4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	bool bVar9;
	struct<3> Var10;
	float fVar11;
	float fVar12;
	int iVar13;
	int iVar14;
	int iVar15;
	if (!__LIB_1__::func_520(1))
	{
		return -1;
	}
	fVar0 = Global_262145.f_18151 /* Tunable: FIMPORT_EXPORT_SELL_MIN_LOCATION_DISTANCE_FROM_OFFICE */;
	fVar1 = Global_262145.f_18152 /* Tunable: FIMPORT_EXPORT_SELL_MIN_LOCATION_DISTANCE_FROM_WAREHOUSE */;
	iVar4 = __LIB_0__::func_818(PLAYER::PLAYER_ID());
	if (Global_1853348[iVar4 /*834*/].f_267[5] > -1)
	{
		Var5 = { Global_1312193[Global_1853348[iVar4 /*834*/].f_267[5] /*1951*/].f_38[0 /*27*/].f_23 };
		Var5.f_2 = 0f;
	}
	else
	{
		return -1;
	}
	if (__LIB_12__::func_539(iVar4))
	{
		Var6 = { Global_1946250.f_533[__LIB_1__::func_669(__LIB_2__::func_744(iVar4)) /*3*/] };
		Var6.f_2 = 0f;
	}
	else
	{
		return -1;
	}
	if (iParam1 > 0)
	{
		iVar7 = 0;
		while (iVar7 < iParam1)
		{
			Var10 = { __LIB_4__::func_812((*iParam0)[iVar7]) };
			Var10.f_2 = 0f;
			fVar11 = SYSTEM::VDIST(Var10, Var5);
			fVar12 = SYSTEM::VDIST(Var10, Var6);
			if (fVar11 >= fVar0 && fVar12 >= fVar1)
			{
				__LIB_13__::func_164((*iParam0)[iVar7], &iVar8, &bVar9);
				if (!BitTest((*uParam2)[iVar8], bVar9))
				{
					uVar2[iVar3] = (*iParam0)[iVar7];
					iVar3++;
				}
			}
			iVar7++;
		}
		if (iVar3 > 0)
		{
			iVar13 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar3);
			__LIB_13__::func_164(uVar2[iVar13], &iVar8, &bVar9);
			MISC::SET_BIT(uParam2[iVar8], bVar9);
			return uVar2[iVar13];
		}
		else
		{
			iVar7 = 0;
			while (iVar7 < iParam1)
			{
				__LIB_13__::func_164((*iParam0)[iVar7], &iVar8, &bVar9);
				if (!BitTest((*uParam2)[iVar8], bVar9))
				{
					uVar2[iVar3] = (*iParam0)[iVar7];
					iVar3++;
				}
				iVar7++;
			}
			if (iVar3 > 0)
			{
				iVar14 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar3);
				__LIB_13__::func_164(uVar2[iVar14], &iVar8, &bVar9);
				MISC::SET_BIT(uParam2[iVar8], bVar9);
				return uVar2[iVar14];
			}
			else
			{
				iVar15 = MISC::GET_RANDOM_INT_IN_RANGE(0, iParam1);
				__LIB_13__::func_164(uVar2[iVar15], &iVar8, &bVar9);
				MISC::SET_BIT(uParam2[iVar8], bVar9);
				return uVar2[iVar15];
			}
		}
	}
	else
	{
		return -1;
	}
	return -1;
}

int func_528()//Position - 0x16C1F
{
	if (__LIB_0__::func_864(&(Global_2789228.f_142)) && !__LIB_0__::func_937(&(Global_2789228.f_142), Global_262145.f_15610 /* Tunable: EXEC_BUY_FAIL_COOLDOWN */, 1))
	{
		return 0;
	}
	return 1;
}

void func_529(struct<3> Param0)//Position - 0x20CB7
{
	if (!__LIB_13__::func_133())
	{
		return;
	}
	STREAMING::SET_FOCUS_POS_AND_VEL(Param0, 0f, 0f, 0f);
	NETWORK::NETWORK_SET_IN_FREE_CAM_MODE(true);
}

int func_530(int iParam0, int iParam1, bool bParam2, int iParam3, int iParam4)//Position - 0x2891C
{
	switch (iParam0)
	{
		case 0:
			if (__LIB_12__::func_668(iParam3, iParam4))
			{
				return 25;
			}
			else if (iParam1 == 0)
			{
				return 15;
			}
			else if (iParam1 == 5)
			{
				return 19;
			}
			else if (iParam1 == 6)
			{
				return 18;
			}
			else if (iParam1 == 4)
			{
				return 22;
			}
			else if (iParam1 == 9)
			{
				return 23;
			}
			else if (iParam1 == 3)
			{
				return 21;
			}
			else if (iParam1 == 2)
			{
				return 20;
			}
			break;
		case 129:
			return 25;
			break;
		case 165:
			return 23;
			break;
		case 7:
			return 19;
			break;
		case 4:
			return 18;
			break;
		case 10:
			return 22;
			break;
		case 9:
			return 20;
			break;
		case 1:
			return 7;
		case 8:
			return 17;
		case 2:
			switch (iParam1)
			{
				case 4:
				case 5:
					return 12;
				case 2:
				case 3:
					return 13;
				case 8:
				case 9:
					return 17;
				case 6:
				case 7:
				case 18:
				case 19:
					return 14;
				case 12:
				case 13:
					if (bParam2)
					{
						return 11;
					}
					else
					{
						return 10;
					}
					break;
			}
			return 9;
		case 3:
			return 16;
		case 6:
			return 24;
	}
	return 0;
}

void func_531(var uParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x2416A
{
	if ((iParam1 != 0 && iParam1 != 3) || iParam2 == 1)
	{
		if (CAM::DOES_CAM_EXIST(*uParam0))
		{
			CAM::SET_CAM_ACTIVE(*uParam0, false);
			if (bParam4)
			{
				CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, true, 0);
			}
			CAM::DESTROY_CAM(*uParam0, false);
			*uParam0 = 0;
			__LIB_7__::func_153();
			if (__LIB_13__::func_133())
			{
				STREAMING::CLEAR_FOCUS();
			}
			NETWORK::NETWORK_SET_IN_FREE_CAM_MODE(false);
			if (Global_1574534 == 0 && iParam3 == 1)
			{
				__LIB_2__::func_592(1, 0);
				__LIB_2__::func_592(1, 0);
			}
			if (!__LIB_7__::func_170())
			{
				if (__LIB_0__::func_53() || __LIB_0__::func_52())
				{
					if (!Global_2723612.f_7)
					{
						HUD::BUSYSPINNER_OFF();
					}
				}
				else
				{
					HUD::BUSYSPINNER_OFF();
				}
			}
		}
	}
}

void func_532()//Position - 0x785
{
	__LIB_0__::func_698();
	Global_8941[Global_20266 /*2811*/][0 /*281*/].f_124[2] = 1;
}

int func_533()//Position - 0x1E6D
{
	if (Global_78319)
	{
		Global_20266 = 3;
	}
	else
	{
		Global_20266 = __LIB_0__::func_683();
	}
	if (Global_20266 > 3)
	{
		Global_20266 = 3;
	}
	return Global_113386.f_14051[Global_20266 /*20*/].f_7;
}

void func_534()//Position - 0x20C6
{
	if (Global_43052 != 15)
	{
		__LIB_0__::func_698();
		Global_8941[Global_20266 /*2811*/][0 /*281*/].f_124[2] = 0;
	}
}

struct<4> func_535(int iParam0)//Position - 0x49F
{
	struct<4> Var0;
	StringCopy(&Var0, "INVALID", 16);
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var0, "HAPPT_ANIMAL" /* GXT: Animal Materials */, 16);
			break;
		case 1:
			StringCopy(&Var0, "HAPPT_ART" /* GXT: Art & Antiques */, 16);
			break;
		case 2:
			StringCopy(&Var0, "HAPPT_CHEMS" /* GXT: Chemicals */, 16);
			break;
		case 3:
			StringCopy(&Var0, "HAPPT_GOODS" /* GXT: Counterfeit Goods */, 16);
			break;
		case 4:
			StringCopy(&Var0, "HAPPT_JEWEL" /* GXT: Jewelry & Gemstones */, 16);
			break;
		case 5:
			StringCopy(&Var0, "HAPPT_MEDS" /* GXT: Medical Supplies */, 16);
			break;
		case 6:
			StringCopy(&Var0, "HAPPT_NARC" /* GXT: Narcotics */, 16);
			break;
		case 7:
			StringCopy(&Var0, "HAPPT_TOBAC" /* GXT: Tobacco & Alcohol */, 16);
			break;
		case 8:
			StringCopy(&Var0, "HAPPT_MIXED" /* GXT: Cargo */, 16);
			break;
	}
	return Var0;
}

bool func_536(int iParam0)//Position - 0x8B75
{
	return 0 == __LIB_8__::func_106(iParam0);
}

float func_537(int iParam0, int iParam1)//Position - 0x8E38
{
	float fVar0;
	float fVar1;
	int iVar2;
	fVar0 = 0f;
	fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22848 /* Tunable: 599309088 */);
	switch (iParam0)
	{
		case -1:
		case 8:
			return 0f;
		case 7:
			fVar0 = Global_262145.f_22850 /* Tunable: 264591774 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22847 /* Tunable: 664286755 */);
			break;
		case 3:
			fVar0 = Global_262145.f_22850 /* Tunable: 264591774 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22847 /* Tunable: 664286755 */);
			break;
		case 0:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 1:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 4:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 6:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
		case 2:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
		case 5:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
	}
	iVar2 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iParam1) / fVar1));
	return (SYSTEM::TO_FLOAT(iVar2) * fVar0);
}

int func_538(int iParam0)//Position - 0x8F61
{
	switch (iParam0)
	{
		case 8:
			return Global_262145.f_22838 /* Tunable: -954321460 */;
		case 0:
			return Global_262145.f_22839 /* Tunable: 117429930 */;
		case 1:
			return Global_262145.f_22840 /* Tunable: 921812958 */;
		case 2:
			return Global_262145.f_22841 /* Tunable: 1940564107 */;
		case 3:
			return Global_262145.f_22842 /* Tunable: -2031678534 */;
		case 4:
			return Global_262145.f_22843 /* Tunable: -2091681714 */;
		case 5:
			return Global_262145.f_22844 /* Tunable: 975965466 */;
		case 6:
			return Global_262145.f_22845 /* Tunable: 1382988286 */;
		case 7:
			return Global_262145.f_22846 /* Tunable: 2066048851 */;
		default:
	}
	return 0;
}

void func_539(var uParam0, var uParam1)//Position - 0x97AC
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_234 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_234.f_22 = uParam1;
}

void func_540(int iParam0)//Position - 0x9958
{
	Global_4535597 = iParam0;
}

int func_541(int iParam0)//Position - 0xB09E
{
	switch (iParam0)
	{
		case 1:
			return joaat("sm_prop_smug_crate_l_medical");
		case 2:
			return joaat("sm_prop_smug_crate_m_medical");
		case 3:
			return joaat("sm_prop_smug_crate_l_tobacco");
		case 4:
			return joaat("sm_prop_smug_crate_m_tobacco");
		case 5:
			return joaat("sm_prop_smug_crate_l_antiques");
		case 6:
			return joaat("sm_prop_smug_crate_m_antiques");
		case 7:
			return joaat("sm_prop_smug_crate_l_narc");
		case 8:
			return joaat("sm_prop_smug_crate_m_narc");
		case 9:
			return joaat("sm_prop_smug_crate_l_jewellery");
		case 10:
			return joaat("sm_prop_smug_crate_m_jewellery");
		case 11:
			return joaat("sm_prop_smug_crate_l_bones");
		case 12:
			return joaat("sm_prop_smug_crate_m_bones");
		case 13:
			return joaat("sm_prop_smug_crate_l_fake");
		case 14:
			return joaat("sm_prop_smug_crate_m_fake");
		case 15:
			return joaat("sm_prop_smug_crate_l_hazard");
		case 16:
			return joaat("sm_prop_smug_crate_m_hazard");
		default:
	}
	return 0;
}

int func_542(int iParam0)//Position - 0xB1AA
{
	switch (iParam0)
	{
		case 0:
			return 16011;
		case 1:
			return 16012;
		case 2:
			return 16013;
		case 3:
			return 16014;
		case 4:
			return 16015;
		case 5:
			return 16016;
		case 6:
			return 16017;
		case 7:
			return 16018;
		case 8:
			return 16019;
		case 9:
			return 16020;
		case 10:
			return 16021;
		case 11:
			return 16022;
		case 12:
			return 16023;
		case 13:
			return 16024;
		case 14:
			return 16025;
		case 15:
			return 16026;
		case 16:
			return 16027;
		case 17:
			return 16028;
		case 18:
			return 16029;
		case 19:
			return 16030;
		case 20:
			return 16031;
		case 21:
			return 16032;
		case 22:
			return 16033;
		case 23:
			return 16034;
		case 24:
			return 16035;
		case 25:
			return 16036;
		case 26:
			return 16037;
		case 27:
			return 16038;
		case 28:
			return 16039;
		case 29:
			return 16040;
		case 30:
			return 16041;
		case 31:
			return 16042;
		case 32:
			return 16043;
		case 33:
			return 16044;
		case 34:
			return 16045;
		case 35:
			return 16046;
		case 36:
			return 16047;
		case 37:
			return 16048;
		case 38:
			return 16049;
		case 39:
			return 16050;
		case 40:
			return 16051;
		case 41:
			return 16052;
		case 42:
			return 16053;
		case 43:
			return 16054;
		case 44:
			return 16055;
		case 45:
			return 16056;
		case 46:
			return 16057;
		case 47:
			return 16058;
		case 48:
			return 16059;
		case 49:
			return 16060;
		default:
	}
	return 16011;
}

bool func_543()//Position - 0xBE82
{
	return BitTest(uLocal_109, 1);
}

int func_544(int iParam0)//Position - 0x8A55
{
	if (__LIB_0__::func_864(&(Global_2789376[iParam0 /*2*/])) && __LIB_0__::func_937(&(Global_2789376[iParam0 /*2*/]), Global_2789376.f_17[iParam0], 0))
	{
		__LIB_0__::clearF_1Prop(&(Global_2789376[iParam0 /*2*/]));
		return 0;
	}
	return __LIB_0__::func_864(&(Global_2789376[iParam0 /*2*/]));
}

int func_545(int iParam0)//Position - 0x91A3
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull() && __LIB_1__::func_655(iParam0))
	{
		return Global_1853348[iParam0 /*834*/].f_267.f_278.f_3;
	}
	return 0;
}

void func_546(int iParam0, int iParam1)//Position - 0x9428
{
	int iVar0;
	if (iParam0 <= 0)
	{
		return;
	}
	iVar0 = __LIB_0__::func_369(iParam1, -1, 0);
	__LIB_0__::func_413(iParam1, (iVar0 + iParam0), -1, 1, 0);
}

char* func_547(int iParam0)//Position - 0xB7F0
{
	int iVar0;
	char* sVar1;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		iVar0 = __LIB_0__::func_818(iParam0);
		if (iVar0 != __LIB_0__::getMinusOneOrNull())
		{
			sVar1 = __LIB_1__::func_601(&(Global_1892703[iVar0 /*599*/].f_10.f_105));
			if (MISC::IS_STRING_NULL_OR_EMPTY(sVar1))
			{
				return __LIB_12__::func_943(iVar0, 0);
			}
			else
			{
				return sVar1;
			}
		}
	}
	return __LIB_13__::func_422(iParam0);
}

int func_548(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x5814
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			iVar0 += 5;
			break;
		case 2:
			iVar0 += 2;
			break;
		case 3:
			iVar0++;
			break;
		case 4:
			iVar0 += 3;
			break;
		case 5:
			iVar0 += 2;
			break;
		case 8:
			iVar0 += 3;
			break;
		case 6:
			iVar0++;
			break;
		case 12:
			iVar0 += 2;
			break;
		case 7:
			iVar0 += 6;
			break;
		case 9:
			iVar0 = iVar0;
			break;
		case 11:
			iVar0 = iVar0;
			break;
		case 13:
			iVar0 += 2;
			break;
		case 10:
			iVar0 += 4;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_8__::func_101(iParam0))
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_11__::func_468(iParam0, __LIB_3__::func_490(iParam3) + 1, iParam3, -1, iParam2));
			}
		}
		if (iParam3 != __LIB_0__::getMinusOneOrNull())
		{
			iVar0 = (iVar0 + __LIB_13__::func_171(iParam0, __LIB_3__::func_490(iParam3) + 1));
		}
	}
	if (!bParam6)
	{
		if (__LIB_8__::func_130(0, iParam1) != -1)
		{
			if (iParam3 != __LIB_0__::getMinusOneOrNull())
			{
				iVar0 = (iVar0 + __LIB_1__::func_806(__LIB_3__::func_490(iParam3) + 1, iParam0));
			}
		}
	}
	if (!bParam4)
	{
		if (__LIB_11__::func_372(iParam0))
		{
			iVar0 = (iVar0 + __LIB_8__::func_129(iParam0));
		}
	}
	return iVar0;
}

void func_549(int iParam0)//Position - 0x2913
{
	int iVar0;
	iVar0 = 0;
	switch (Global_113386.f_14141[iParam0 /*104*/].f_49)
	{
		case 1:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL01" /* GXT: ~a~ ~a~. */);
			break;
		case 2:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL02" /* GXT: ~a~ ~a~, ~a~. */);
			break;
		case 3:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL03" /* GXT: ~a~ ~a~, ~a~, ~a~. */);
			break;
		case 4:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL04" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 5:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL05" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 6:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL06" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 7:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL07" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 8:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL08" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 9:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL09" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_113386.f_14141[iParam0 /*104*/]));
	while (iVar0 < Global_113386.f_14141[iParam0 /*104*/].f_49)
	{
		switch (Global_113386.f_14141[iParam0 /*104*/].f_32)
		{
			case 4:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_2815059.f_1725[iVar0 /*4*/]));
				break;
			case 5:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931438[iVar0 /*4*/]));
				break;
			case 6:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931479[iVar0 /*4*/]));
				break;
			case 7:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931500[iVar0 /*4*/]));
				break;
			case 8:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931517[iVar0 /*4*/]));
				break;
			case 9:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931530[iVar0 /*4*/]));
				break;
			case 10:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931543[iVar0 /*4*/]));
				break;
			case 11:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931556[iVar0 /*4*/]));
				break;
		}
		iVar0++;
	}
	GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
}

void func_550()//Position - 0x176D
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	iVar1 = 0;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_13__::func_119() && PED::IS_PED_IN_COVER(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar1 = 1;
		}
	}
	if (!Global_78319)
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && iVar1 == 0)
		{
			iVar2 = PED::GET_PED_PROP_INDEX(PLAYER::PLAYER_PED_ID(), 0);
			if (Global_78319)
			{
				if (((((iVar2 == 15 || iVar2 == 16) || iVar2 == 17) || iVar2 == 18) || iVar2 == 19) || PED::IS_PED_WEARING_HELMET(PLAYER::PLAYER_PED_ID()))
				{
					iVar0 = 1;
				}
			}
			else if (PED::IS_PED_WEARING_HELMET(PLAYER::PLAYER_PED_ID()))
			{
				iVar0 = 1;
			}
			if (!Global_20209)
			{
				if (Global_7451 != 128)
				{
					if (iVar0 == 0)
					{
						if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
						{
							if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
							{
							}
							else
							{
								if (Global_78319)
								{
									PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 244, false);
									PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 243, false);
									PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 242, false);
								}
								MISC::SET_BIT(&Global_8136, 11);
								TASK::TASK_USE_MOBILE_PHONE(PLAYER::PLAYER_PED_ID(), true, 1);
							}
						}
					}
				}
			}
		}
	}
}

int func_551(int iParam0)//Position - 0x4BBE
{
	if (__LIB_0__::func_492(iParam0) == 271)
	{
		return __LIB_0__::func_525(iParam0);
	}
	return -1;
}

int func_552(int iParam0)//Position - 0x4BFA
{
	if (__LIB_0__::func_492(iParam0) == 158)
	{
		return __LIB_0__::func_525(iParam0);
	}
	return -1;
}

int func_553(int iParam0)//Position - 0x4B1F
{
	if (__LIB_0__::func_492(iParam0) == 264)
	{
		return __LIB_0__::func_525(iParam0);
	}
	return -1;
}

void func_554()//Position - 0x288
{
	if (Global_20254)
	{
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 13f, -1f, -1f, "CELL_201" /* GXT: CALL */, 0, 0, 0, 0);
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 14f, -1f, -1f, "CELL_213" /* GXT: NO */, 0, 0, 0, 0);
	}
	else
	{
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 13f, -1f, -1f, 0, 0, 0, 0, 0);
		__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 14f, -1f, -1f, 0, 0, 0, 0, 0);
	}
	__LIB_2__::concatAndDo_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
	MISC::CLEAR_BIT(&Global_8136, 17);
}

void func_555(int* iParam0, int iParam1, bool bParam2)//Position - 0x1BDB1A
{
	int iVar0;
	iVar0 = iParam1;
	if (bParam2)
	{
		MISC::SET_BIT(iParam0, iVar0);
	}
	else
	{
		MISC::CLEAR_BIT(iParam0, iVar0);
	}
}

int func_556(bool bParam0)//Position - 0x2C17
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (__LIB_11__::func_681(iVar1))
			{
				if (bParam0)
				{
					if (!__LIB_11__::func_711(iVar1))
					{
						return 1;
					}
				}
				else
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_557()//Position - 0x18365D
{
	if ((((__LIB_4__::func_899(PLAYER::PLAYER_ID()) && !__LIB_9__::func_633()) && !__LIB_1__::func_584()) && !__LIB_3__::func_366()) && !__LIB_0__::func_833())
	{
		return 1;
	}
	return 0;
}

int func_558(int iParam0)//Position - 0x18D19C
{
	if (__LIB_11__::func_725(PLAYER::PLAYER_ID()) && !__LIB_11__::func_725(iParam0))
	{
		return 0;
	}
	return 1;
}

void func_559(var uParam0)//Position - 0x1983BF
{
	char[] cVar0[8];
	if (Global_2621446.f_69 == 1)
	{
		if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_47.f_1471))
		{
			__LIB_8__::func_898(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4()), &cVar0);
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "ADD_TICKER_TEXT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING("SPEC_CRWT" /* GXT: Currently Watching */);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			__LIB_0__::func_700(PLAYER::GET_PLAYER_NAME(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4())));
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING(&cVar0);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
	}
}

void func_560(int* iParam0, int iParam1)//Position - 0x1B71BE
{
	MISC::SET_BIT(iParam0, 0);
	__LIB_11__::func_723(iParam0, iParam1, iParam1);
	GRAPHICS::ENABLE_MOVIE_SUBTITLES(true);
	__LIB_0__::func_866();
	MISC::SET_BIT(&(iParam0->f_28), 5);
	iParam0->f_8 = 0;
	Global_2789733 = 1;
}

void func_561(int* iParam0, int iParam1)//Position - 0x1B8E17
{
	__LIB_11__::func_723(iParam0, iParam1, iParam1);
	MISC::SET_BIT(&(iParam0->f_28), 4);
	Global_1579066 = 0;
}

void func_562(int* iParam0, int iParam1)//Position - 0x1B8E37
{
	__LIB_11__::func_723(iParam0, iParam1, iParam1);
	MISC::SET_BIT(&(iParam0->f_28), 3);
	Global_1579066 = 1;
}

void func_563(int* iParam0, int iParam1)//Position - 0x3AB5
{
	__LIB_11__::func_723(iParam0, iParam1, iParam1);
	GRAPHICS::ENABLE_MOVIE_SUBTITLES(false);
	MISC::SET_BIT(&(iParam0->f_28), 6);
	MISC::CLEAR_BIT(&(Global_2621446.f_1), 2);
}

void func_564(int* iParam0, var uParam1, int* iParam2, bool bParam3)//Position - 0x18C135
{
	__LIB_10__::func_780(iParam0);
	if (BitTest(*iParam0, 15))
	{
		MISC::CLEAR_BIT(iParam0, 15);
	}
	MISC::CLEAR_BIT(iParam0, 4);
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_4) && !BitTest(*iParam0, 27))
	{
		if ((((__LIB_2__::func_908(uParam1->f_31) == 5 || __LIB_2__::func_908(uParam1->f_31) == 4) || (((((BitTest(*iParam0, 3) && !__LIB_1__::func_597(uParam1->f_31)) && !__LIB_0__::func_845(uParam1->f_31, -1)) && !__LIB_2__::func_782(uParam1->f_31, 0, 0)) && !__LIB_4__::func_899(PLAYER::PLAYER_ID())) && !__LIB_5__::func_409(PLAYER::PLAYER_ID()))) || __LIB_7__::func_688(uParam1->f_31)) || __LIB_10__::func_779(uParam1->f_31))
		{
			if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0->f_4, false))
			{
				OBJECT::DELETE_OBJECT(&(iParam0->f_4));
			}
		}
	}
	else if (bParam3)
	{
		if (iParam2->f_8 != 3)
		{
			iParam0->f_4 = 0;
		}
	}
	if (HUD::IS_NAMED_RENDERTARGET_REGISTERED(__LIB_11__::func_806(iParam0, uParam1)))
	{
		HUD::RELEASE_NAMED_RENDERTARGET(__LIB_11__::func_806(iParam0, uParam1));
		if (Global_1958629)
		{
			Global_1958629 = 0;
		}
	}
	iParam0->f_2 = -1;
	MISC::CLEAR_BIT(iParam0, 5);
	MISC::CLEAR_BIT(iParam0, 27);
}

void func_565(var uParam0)//Position - 0x18C87B
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	bool bVar15;
	iVar0 = 0;
	bVar1 = false;
	bVar2 = -1;
	iVar3 = -1;
	iVar4 = -1;
	iVar5 = -1;
	iVar6 = -1;
	iVar7 = -1;
	iVar8 = -1;
	iVar9 = -1;
	iVar12 = uParam0->f_47.f_1008;
	iVar13 = 0;
	iVar14 = 0;
	bVar15 = false;
	uParam0->f_47.f_1008 = 0;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		uParam0->f_47.f_1002[iVar0] = uParam0->f_47.f_996[iVar0];
		if (iVar0 == 0)
		{
			iVar13 = 0;
			iVar14 = 0;
			bVar1 = false;
			while (bVar1 < uParam0->f_47.f_1002[iVar0])
			{
				if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_47.f_510[iVar0 /*97*/][bVar1 /*3*/]))
				{
					MISC::SET_BIT(&iVar13, bVar1);
				}
				bVar1++;
			}
			iVar9 = -1;
			while (iVar13 != 0)
			{
				bVar2 = -1;
				iVar3 = -1;
				iVar4 = -1;
				iVar5 = -1;
				bVar1 = false;
				while (bVar1 < uParam0->f_47.f_1002[iVar0])
				{
					iVar6 = -1;
					iVar7 = -1;
					iVar8 = -1;
					bVar15 = false;
					if (BitTest(iVar13, bVar1))
					{
						iVar10 = uParam0->f_47.f_510[iVar0 /*97*/][bVar1 /*3*/];
						if (PED::IS_PED_A_PLAYER(iVar10) && NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar10) != -1)
						{
							iVar11 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar10);
							if (__LIB_1__::func_693(iVar11, 0, 1))
							{
								if (PLAYER::GET_PLAYER_TEAM(iVar11) > -1 && PLAYER::GET_PLAYER_TEAM(iVar11) < 15)
								{
									iVar6 = PLAYER::GET_PLAYER_TEAM(iVar11);
									iVar8 = Global_2621446.f_42[iVar6];
								}
								iVar7 = Global_2621446.f_9[iVar11];
								if (PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == iVar6)
								{
									bVar15 = true;
								}
								else if (__LIB_0__::func_825(PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()), iVar6, 0))
								{
									bVar15 = true;
								}
								else if (bVar2 == -1)
								{
									bVar15 = true;
								}
								else if (iVar6 == -1)
								{
									if (iVar7 < iVar4)
									{
										bVar15 = true;
									}
								}
								else if (iVar5 == -1)
								{
									bVar15 = true;
								}
								else if (iVar9 > -1 && iVar5 == iVar9)
								{
									if (iVar6 == iVar9 && iVar7 < iVar4)
									{
										bVar15 = true;
									}
								}
								else if (iVar9 > -1 && iVar6 == iVar9)
								{
									bVar15 = true;
								}
								else if (iVar6 == iVar5)
								{
									if (iVar7 < iVar4)
									{
										bVar15 = true;
									}
								}
								else if (iVar8 < iVar3)
								{
									bVar15 = true;
								}
							}
						}
					}
					if (bVar15)
					{
						bVar2 = bVar1;
						iVar4 = iVar7;
						iVar3 = iVar8;
						iVar5 = iVar6;
					}
					bVar1++;
				}
				if (bVar2 == -1)
				{
					iVar13 = 0;
				}
				else
				{
					__LIB_10__::func_911(uParam0, iVar0, iVar14, bVar2);
					iVar9 = iVar5;
					iVar14++;
					MISC::CLEAR_BIT(&iVar13, bVar2);
				}
			}
			while (iVar14 < 32)
			{
				__LIB_10__::func_330(&(uParam0->f_47.f_24[iVar0 /*97*/][iVar14 /*3*/]));
				iVar14++;
			}
		}
		else
		{
			uParam0->f_47.f_24[iVar0 /*97*/] = { uParam0->f_47.f_510[iVar0 /*97*/] };
		}
		switch (iVar0)
		{
			case 0:
			case 2:
			case 4:
				uParam0->f_47.f_1008 = (uParam0->f_47.f_1008 + uParam0->f_47.f_1002[iVar0]);
				break;
			case 1:
			case 3:
				if (uParam0->f_47.f_1002[iVar0] > 0)
				{
					uParam0->f_47.f_1008++;
				}
				break;
		}
		iVar0++;
	}
	if (iVar12 != uParam0->f_47.f_1008)
	{
		MISC::SET_BIT(&(uParam0->f_1), 8);
	}
	if (BitTest(uParam0->f_1, 8))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 8);
		MISC::SET_BIT(&(uParam0->f_47), 6);
	}
	Global_2727750 = Global_2727749;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		__LIB_10__::func_888(&(uParam0->f_47.f_510[iVar0 /*97*/]));
		iVar0++;
	}
	__LIB_10__::func_209(&(uParam0->f_47));
}

int func_566()//Position - 0x18D62C
{
	int iVar0;
	if (Global_2715699.f_6597 && Global_2725323)
	{
		if (__LIB_6__::func_953(0))
		{
			if (__LIB_0__::func_893() && !CAM::IS_SCREEN_FADED_OUT())
			{
				if ((((Global_2715699.f_6619 == 122 || Global_2715699.f_6619 == 123) || Global_2715699.f_6619 == 124) || Global_2715699.f_6619 == 125) || Global_2715699.f_6619 == 154)
				{
					return 1;
				}
				if (Global_2715699.f_6619 > -1)
				{
					iVar0 = __LIB_0__::func_172(Global_2715699.f_6619);
					if (iVar0 == 24)
					{
						return 1;
					}
				}
				if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2, 26))
				{
					return 1;
				}
				if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2, 27))
				{
					return 1;
				}
				if (__LIB_0__::func_622())
				{
					return 1;
				}
				if (Global_1958741)
				{
					return 1;
				}
				if (BitTest(Global_4718592.f_37, 23))
				{
					if (!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) && !__LIB_0__::func_81())
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_567(int iParam0)//Position - 0x1903D0
{
	if (__LIB_0__::func_261())
	{
		return 1;
	}
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || Global_2789733)
	{
		return Global_1853348[iParam0 /*834*/].f_205.f_52;
	}
	return 1;
}

int func_568(int iParam0)//Position - 0x192051
{
	if (Global_1574963)
	{
		if (!__LIB_1__::func_195(PLAYER::PLAYER_ID()))
		{
			if (!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) && !__LIB_1__::func_201(PLAYER::PLAYER_ID()))
			{
				if (!BitTest(Global_2621446, 20) || Global_2621446.f_82)
				{
					if (PLAYER::GET_PLAYER_TEAM(iParam0) != -1)
					{
						if (!BitTest(Global_2621446.f_69.f_5, 14) && !BitTest(Global_4718592.f_658[PLAYER::GET_PLAYER_TEAM(iParam0) /*22957*/].f_12180, 6))
						{
							if (PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) != PLAYER::GET_PLAYER_TEAM(iParam0) && !__LIB_0__::func_825(PLAYER::GET_PLAYER_TEAM(iParam0), PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()), 0))
							{
								return 0;
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

int func_569()//Position - 0x199267
{
	Global_2621446.f_69.f_7 = 1;
	if (Global_2621446.f_69.f_4 == 2)
	{
		if (!Global_2621446.f_69.f_8)
		{
			return 0;
		}
	}
	if (__LIB_10__::func_214() || __LIB_10__::func_224(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (__LIB_10__::func_301())
	{
		return 0;
	}
	if (__LIB_1__::func_620())
	{
		return 0;
	}
	if ((__LIB_0__::func_261() && NETWORK::NETWORK_IS_ACTIVITY_SESSION()) && __LIB_0__::func_936(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((NETWORK::NETWORK_IS_ACTIVITY_SESSION() || NETWORK::NETWORK_IS_IN_TRANSITION()) || __LIB_4__::func_860())
	{
		if (__LIB_4__::func_934(PLAYER::PLAYER_ID(), 0))
		{
			if (!Global_2727750)
			{
				return 0;
			}
		}
		else if (!Global_2621446.f_69.f_8)
		{
			return 0;
		}
	}
	return 1;
}

int func_570()//Position - 0x19AB27
{
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
	{
		if (NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4()) != __LIB_0__::getMinusOneOrNull() && NETWORK::NETWORK_IS_PLAYER_ACTIVE(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4())))
		{
			return __LIB_1__::func_195(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4()));
		}
		else if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775 != __LIB_0__::getMinusOneOrNull() && NETWORK::NETWORK_IS_PLAYER_ACTIVE(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775))
		{
			return __LIB_1__::func_195(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775);
		}
	}
	else
	{
		return __LIB_1__::func_195(PLAYER::PLAYER_ID());
	}
	return 0;
}

void func_571(var uParam0)//Position - 0x1B26C0
{
	struct<9> Var0;
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("GTAOlogo", false);
		if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("GTAOlogo"))
		{
			if (!CAM::IS_SCREEN_FADED_IN() && !CAM::IS_SCREEN_FADING_IN())
			{
				if (uParam0->f_47.f_2188 != 0.147f)
				{
					uParam0->f_47.f_2188 = 0.147f;
					uParam0->f_47.f_2188.f_1 = 0.204f;
					uParam0->f_47.f_2188.f_2 = 0.145f;
					uParam0->f_47.f_2188.f_3 = 0.255f;
					uParam0->f_47.f_2188.f_4 = 255;
					uParam0->f_47.f_2188.f_5 = 255;
					uParam0->f_47.f_2188.f_6 = 255;
					uParam0->f_47.f_2188.f_7 = 255;
				}
				GRAPHICS::SET_SCRIPT_GFX_ALIGN(76, 66);
				GRAPHICS::SET_SCRIPT_GFX_ALIGN_PARAMS(-0.0755f, -0.0755f, 0f, 0f);
				HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
				Var0.f_0 = uParam0->f_47.f_2188;
				Var0.f_1 = uParam0->f_47.f_2188.f_1;
				Var0.f_2 = uParam0->f_47.f_2188.f_2;
				Var0.f_3 = uParam0->f_47.f_2188.f_3;
				Var0.f_4 = uParam0->f_47.f_2188.f_4;
				Var0.f_5 = uParam0->f_47.f_2188.f_5;
				Var0.f_6 = uParam0->f_47.f_2188.f_6;
				Var0.f_7 = uParam0->f_47.f_2188.f_7;
				Var0.f_8 = uParam0->f_47.f_2188.f_8;
				__LIB_2__::func_502(&Var0);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
				GRAPHICS::DRAW_SPRITE("GTAOlogo", "GTAOTransitionLogo", __LIB_1__::func_110(Var0.f_0), __LIB_1__::func_109(Var0.f_1), Var0.f_2, Var0.f_3, Var0.f_8, Var0.f_4, Var0.f_5, Var0.f_6, Var0.f_7, false, 0);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
				GRAPHICS::RESET_SCRIPT_GFX_ALIGN();
			}
		}
	}
}

int func_572(int* iParam0, var uParam1)//Position - 0x1B70DE
{
	if (((!__LIB_1__::func_597(uParam1->f_31) && !__LIB_0__::func_845(uParam1->f_31, -1)) && !__LIB_2__::func_782(uParam1->f_31, 0, 0)) && !__LIB_6__::func_846(PLAYER::PLAYER_ID()))
	{
		if (!TASK::PED_HAS_USE_SCENARIO_TASK(PLAYER::PLAYER_PED_ID()))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), false);
			MISC::CLEAR_BIT(iParam0, 6);
			return 1;
		}
		else if (!BitTest(*iParam0, 6))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), true);
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			MISC::SET_BIT(iParam0, 6);
		}
	}
	else if (((!__LIB_4__::func_955(PLAYER::PLAYER_ID()) && !iParam0->f_2481) && !iParam0->f_2482) && !iParam0->f_2483)
	{
		if (!__LIB_10__::func_866(PLAYER::PLAYER_ID()))
		{
			Global_32234 = 14;
		}
		return 1;
	}
	return 0;
}

bool func_573()//Position - 0x1B7C0C
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	bool bVar4;
	iVar2 = 0;
	MISC::CLEAR_BIT(&Global_1931419, 5);
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if ((((iVar1 != __LIB_0__::getMinusOneOrNull() && PLAYER::PLAYER_ID() != iVar1) && __LIB_1__::func_693(iVar1, 1, 1)) && BitTest(Global_1892703[iVar1 /*599*/].f_3, 0)) && ((__LIB_1__::func_864(PLAYER::PLAYER_ID()) && Global_1853348[iVar1 /*834*/].f_267.f_33 == Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_33) || __LIB_7__::func_724(iVar1, PLAYER::PLAYER_ID(), 1)))
		{
			if (!bVar4 || !BitTest(Global_1892703[iVar1 /*599*/].f_3, 4))
			{
				iVar2++;
				bVar4 = true;
			}
			if (!__LIB_0__::func_864(&(Global_1931419.f_2)) || __LIB_0__::func_937(&(Global_1931419.f_2), 500, 0))
			{
				if (BitTest(Global_1892703[iVar1 /*599*/].f_3, 1))
				{
					bVar3 = true;
				}
			}
			if (__LIB_11__::func_681(iVar1))
			{
				MISC::SET_BIT(&Global_1931419, 5);
			}
		}
		iVar0++;
	}
	if (bVar3)
	{
		__LIB_11__::func_788(1);
	}
	Global_1931419.f_1 = iVar2;
	return Global_1931419.f_1 > 0;
}

void func_574()//Position - 0x182B1E
{
	__LIB_2__::func_418();
	if (__LIB_10__::func_275())
	{
		__LIB_11__::func_815(1);
	}
	__LIB_2__::func_66(1);
}

int func_575()//Position - 0x19040A
{
	char* sVar0;
	char* sVar1;
	if (__LIB_10__::func_437(201))
	{
		MISC::SET_BIT(&Global_1574939, 0);
	}
	if (BitTest(Global_1574939, 0))
	{
		if (__LIB_10__::func_212(201))
		{
			MISC::CLEAR_BIT(&Global_1574939, 0);
			return 1;
		}
	}
	sVar0 = "HUD_CONNPROB" /* GXT: alert */;
	sVar1 = "NO_INDIV_SPEC" /* GXT: The player chosen to spectate is no longer available. */;
	__LIB_11__::func_928();
	HUD::SET_WARNING_MESSAGE_WITH_HEADER(sVar0, sVar1, 2, 0, false, -1, 0, 0, true, 0);
	return 0;
}

int func_576(var uParam0)//Position - 0x192120
{
	struct<3> Var0;
	Var0 = { __LIB_11__::func_831(uParam0) };
	return Var0.f_0;
}

int func_577()//Position - 0x192577
{
	int iVar0;
	if (__LIB_7__::func_827(PLAYER::PLAYER_ID()))
	{
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_4()))
		{
			iVar0 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4());
			if (iVar0 != __LIB_0__::getMinusOneOrNull())
			{
				if (__LIB_1__::func_693(iVar0, 1, 0))
				{
					if (__LIB_1__::func_15(iVar0))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_578()//Position - 0x196984
{
	if (__LIB_4__::func_972(PLAYER::PLAYER_ID()))
	{
		return BitTest(Global_4718592.f_24, 21);
	}
	return 0;
}

void func_579(var uParam0, bool bParam1)//Position - 0x198430
{
	struct<2> Var0;
	int iVar1;
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_47.f_1471))
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SHOW_TICKER");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam1);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4());
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SET_TICKER_TITLE");
		switch (Global_1853348[PLAYER::PLAYER_ID() /*834*/])
		{
			case 1:
			case 2:
			case 3:
			case 0:
			case 8:
				if (__LIB_0__::func_936(iVar1))
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_10__::func_929(), 16);
							__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__::func_700(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_0__::func_700(&(Global_1048576.f_14));
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						case 3:
							__LIB_10__::func_287(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
					}
				}
				else
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_10__::func_929(), 16);
							__LIB_0__::do_TEXT_COMMAND_SCALEFORM_STRING(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__::func_700(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_10__::func_287(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						}
				}
				break;
			default:
				if (uParam0->f_47.f_2175 >= 2)
				{
					uParam0->f_47.f_2175 = 0;
				}
				switch (uParam0->f_47.f_2175)
				{
					case 0:
						MemCopy(&Var0, {__LIB_10__::func_441(__LIB_0__::func_464())}, 4);
						__LIB_0__::func_700(&Var0);
						uParam0->f_47.f_2178 = 8000;
						uParam0->f_47.f_2175++;
						break;
					case 1:
						__LIB_10__::func_287(uParam0);
						break;
				}
				break;
		}
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

int func_580(int iParam0)//Position - 0x1B2FAD
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		iVar0 = __LIB_11__::func_840(iParam0);
		if (iVar0 != -1)
		{
			return iVar0;
		}
		iVar1 = INTERIOR::GET_INTERIOR_FROM_ENTITY(iParam0);
		if (iVar1 != 0)
		{
			iVar2 = 0;
			while (iVar2 < 43)
			{
				iVar3 = iVar2;
				__LIB_10__::func_346(iVar3);
				if (Global_1951109[iVar2] == iVar1)
				{
					return iVar3;
				}
				iVar2++;
			}
		}
	}
	return -1;
}

Vector3 func_581(var uParam0, int iParam1, int* iParam2)//Position - 0x1B6704
{
	if ((((((((!__LIB_7__::func_685(uParam0->f_31) && !__LIB_1__::func_597(uParam0->f_31)) && !__LIB_0__::func_845(uParam0->f_31, -1)) && !__LIB_2__::func_782(uParam0->f_31, 0, 0)) && !__LIB_6__::func_846(PLAYER::PLAYER_ID())) && !__LIB_4__::func_955(PLAYER::PLAYER_ID())) && !iParam2->f_2481) && !iParam2->f_2482) && !iParam2->f_2483)
	{
		switch (uParam0->f_33)
		{
			case 2:
				switch (iParam1)
				{
					case 0:
						return 261.34045f, -996.077f, -98.06106f;
						break;
					case 1:
						return 261.51617f, -997.12744f, -98.114815f;
						break;
					case 2:
						return 257.75616f, -999.10095f, -98.312935f;
						break;
					case 3:
						return 256.45242f, -998.7517f, -98.30927f;
						break;
				}
				break;
			case 6:
				switch (iParam1)
				{
					case 0:
						return 340.6873f, -993.76044f, -98.42664f;
						break;
					case 1:
						return 341.82712f, -993.7511f, -98.35934f;
						break;
					case 2:
						return 343.4273f, -995.78796f, -98.63068f;
						break;
					case 3:
						return 343.38986f, -997.20215f, -98.16242f;
						break;
				}
				break;
			case 10:
				if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
				{
					return iParam2->f_2437[iParam1 /*6*/];
				}
				break;
		}
	}
	else if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
	{
		return iParam2->f_2437[iParam1 /*6*/];
	}
	return 0f, 0f, 0f;
}

Vector3 func_582(var uParam0, int iParam1, int* iParam2)//Position - 0x1B68DC
{
	if ((((((((!__LIB_7__::func_685(uParam0->f_31) && !__LIB_1__::func_597(uParam0->f_31)) && !__LIB_0__::func_845(uParam0->f_31, -1)) && !__LIB_2__::func_782(uParam0->f_31, 0, 0)) && !__LIB_6__::func_846(PLAYER::PLAYER_ID())) && !__LIB_4__::func_955(PLAYER::PLAYER_ID())) && !iParam2->f_2481) && !iParam2->f_2482) && !iParam2->f_2483)
	{
		switch (uParam0->f_33)
		{
			case 2:
				switch (iParam1)
				{
					case 0:
						return 260.37204f, -996.2245f, -100.00862f;
						break;
					case 1:
						return 259.83313f, -997.4766f, -100.00862f;
						break;
					case 2:
						return 258.2188f, -997.55316f, -100.00862f;
						break;
					case 3:
						return 256.8787f, -997.15f, -100.00862f;
						break;
				}
				break;
			case 6:
				switch (iParam1)
				{
					case 0:
						return 340.67334f, -995.3774f, -100.20444f;
						break;
					case 1:
						return 341.81754f, -995.39294f, -100.20313f;
						break;
					case 2:
						return 341.86368f, -995.7914f, -100.20323f;
						break;
					case 3:
						return 341.86032f, -997.18414f, -100.20364f;
						break;
				}
				break;
			case 10:
				if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
				{
					return iParam2->f_2394[iParam1 /*6*/];
				}
				break;
		}
	}
	else if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
	{
		return iParam2->f_2394[iParam1 /*6*/];
	}
	return 0f, 0f, 0f;
}

Vector3 func_583(var uParam0, int iParam1, int* iParam2)//Position - 0x1B6AB4
{
	if ((((((((!__LIB_7__::func_685(uParam0->f_31) && !__LIB_1__::func_597(uParam0->f_31)) && !__LIB_0__::func_845(uParam0->f_31, -1)) && !__LIB_2__::func_782(uParam0->f_31, 0, 0)) && !__LIB_6__::func_846(PLAYER::PLAYER_ID())) && !__LIB_4__::func_955(PLAYER::PLAYER_ID())) && !iParam2->f_2481) && !iParam2->f_2482) && !iParam2->f_2483)
	{
		switch (uParam0->f_33)
		{
			case 2:
				switch (iParam1)
				{
					case 0:
						return 261f, -995.88f, -99.57f;
						break;
					case 1:
						return 261.23f, -997.19f, -99.57f;
						break;
					case 2:
						return 257.82f, -998.77f, -99.56f;
						break;
					case 3:
						return 256.56f, -998.43f, -99.56f;
						break;
				}
				break;
			case 6:
				switch (iParam1)
				{
					case 0:
						return 340.69f, -994.33f, -99.63f;
						break;
					case 1:
						return 341.82f, -994.33f, -99.63f;
						break;
					case 2:
						return 342.93f, -995.77f, -99.63f;
						break;
					case 3:
						return 342.93f, -997.18f, -99.63f;
						break;
				}
				break;
			case 10:
				if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
				{
					return iParam2->f_2351[iParam1 /*6*/];
				}
				break;
		}
	}
	else if (iParam1 > -1 && iParam1 < __LIB_11__::func_894(iParam2, uParam0))
	{
		return iParam2->f_2351[iParam1 /*6*/];
	}
	return 0f, 0f, 0f;
}

void func_584(int* iParam0, var uParam1)//Position - 0x1B7FC2
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (((__LIB_2__::func_908(uParam1->f_31) == 6 || __LIB_2__::func_908(uParam1->f_31) == 8) || __LIB_1__::func_597(uParam1->f_31)) || __LIB_0__::func_845(uParam1->f_31, -1))
	{
		if (__LIB_2__::func_908(uParam1->f_31) == 8)
		{
			if (__LIB_11__::func_752(0) != -1)
			{
				iVar0 = 0;
				while (iVar0 < __LIB_11__::func_894(iParam0, uParam1))
				{
					__LIB_3__::func_181(__LIB_11__::func_752(0), (562 + iVar0), &(iParam0->f_2351[iVar0 /*6*/]), 0);
					__LIB_3__::func_181(__LIB_11__::func_752(0), (569 + iVar0), &(iParam0->f_2394[iVar0 /*6*/]), 0);
					__LIB_3__::func_181(__LIB_11__::func_752(0), (576 + iVar0), &(iParam0->f_2437[iVar0 /*6*/]), 0);
					iVar0++;
				}
				MISC::SET_BIT(iParam0, 24);
			}
		}
		else
		{
			iVar1 = 0;
			while (iVar1 < __LIB_11__::func_894(iParam0, uParam1))
			{
				__LIB_3__::func_210(uParam1->f_31, (16 + iVar1), &(iParam0->f_2351[iVar1 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 0);
				__LIB_3__::func_210(uParam1->f_31, (22 + iVar1), &(iParam0->f_2394[iVar1 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 0);
				__LIB_3__::func_210(uParam1->f_31, (28 + iVar1), &(iParam0->f_2437[iVar1 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 0);
				iVar1++;
			}
			MISC::SET_BIT(iParam0, 24);
		}
	}
	if (__LIB_2__::func_782(uParam1->f_31, 0, 0))
	{
		iVar2 = 0;
		while (iVar2 < __LIB_11__::func_894(iParam0, uParam1))
		{
			__LIB_3__::func_210(uParam1->f_31, (16 + iVar2), &(iParam0->f_2351[iVar2 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 1);
			__LIB_3__::func_210(uParam1->f_31, (22 + iVar2), &(iParam0->f_2394[iVar2 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 1);
			__LIB_3__::func_210(uParam1->f_31, (28 + iVar2), &(iParam0->f_2437[iVar2 /*6*/]), __LIB_2__::func_681(uParam1->f_31), 1);
			iVar2++;
		}
		MISC::SET_BIT(iParam0, 24);
	}
	if (__LIB_6__::func_846(PLAYER::PLAYER_ID()))
	{
		iParam0->f_2394[0 /*6*/] = { -1239.1924f, -3012.5134f, -43.862206f };
		iParam0->f_2437[0 /*6*/] = { -1239.9851f, -3013.3784f, -42.362206f };
		iParam0->f_2394[1 /*6*/] = { -1240.552f, -3013.516f, -43.862206f };
		iParam0->f_2437[1 /*6*/] = { -1240.5294f, -3014.713f, -42.362206f };
		iParam0->f_2394[2 /*6*/] = { -1240.0989f, -3014.868f, -43.862206f };
		iParam0->f_2437[2 /*6*/] = { -1239.2382f, -3014.8503f, -42.362206f };
		iParam0->f_2394[3 /*6*/] = { -1238.3716f, -3014.8503f, -43.862206f };
		iParam0->f_2437[3 /*6*/] = { -1239.2382f, -3014.8503f, -42.362206f };
		iParam0->f_2394[4 /*6*/] = { -1238.3716f, -3014.8503f, -43.862206f };
		iParam0->f_2437[4 /*6*/] = { -1237.3635f, -3014.868f, -42.362206f };
	}
	if (__LIB_4__::func_955(PLAYER::PLAYER_ID()))
	{
		iParam0->f_2394[0 /*6*/] = { 366.25085f, 4843.8247f, -59.999626f };
		iParam0->f_2437[0 /*6*/] = { 366.6311f, 4845f, -58.542606f };
		iParam0->f_2394[1 /*6*/] = { 365.3141f, 4844.061f, -59.999626f };
		iParam0->f_2437[1 /*6*/] = { 365.70398f, 4845.326f, -58.542606f };
		iParam0->f_2394[2 /*6*/] = { 364.45233f, 4844.3296f, -59.999626f };
		iParam0->f_2437[2 /*6*/] = { 364.7907f, 4845.594f, -58.542606f };
	}
}

void func_585(var uParam0, var uParam1, int* iParam2, var uParam3)//Position - 0x224D
{
	int iVar0;
	iVar0 = __LIB_11__::func_894(iParam2, uParam3);
	if (uParam1->f_6 != -1)
	{
		if (((((BitTest(uParam0->f_3[uParam1->f_6 /*2*/], 0) && uParam0->f_3[uParam1->f_6 /*2*/].f_1 != -1) && PLAYER::INT_TO_PARTICIPANTINDEX(uParam0->f_3[uParam1->f_6 /*2*/].f_1) != __LIB_0__::getMinusOneOrNull()) && NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(uParam0->f_3[uParam1->f_6 /*2*/].f_1))) && NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(uParam0->f_3[uParam1->f_6 /*2*/].f_1)) != __LIB_0__::getMinusOneOrNull()) && !__LIB_1__::func_511(NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(uParam0->f_3[uParam1->f_6 /*2*/].f_1)), 0, 0))
		{
			MISC::CLEAR_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 0);
		}
	}
	if (BitTest(*uParam1, 0) || BitTest(*uParam1, 10))
	{
		if (uParam1->f_6 != -1)
		{
			if (!BitTest(uParam0->f_3[uParam1->f_6 /*2*/], 0))
			{
				uParam0->f_3[uParam1->f_6 /*2*/].f_1 = iParam2->f_14;
				MISC::SET_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 0);
				MISC::SET_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 1);
			}
		}
	}
	else
	{
		if (uParam1->f_6 != -1)
		{
			if (BitTest(uParam0->f_3[uParam1->f_6 /*2*/], 1))
			{
				if (BitTest(uParam0->f_3[uParam1->f_6 /*2*/], 0) && uParam0->f_3[uParam1->f_6 /*2*/].f_1 == iParam2->f_14)
				{
					if (BitTest(*uParam1, 2))
					{
						MISC::CLEAR_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 1);
					}
				}
			}
		}
		if (uParam1->f_6 != -1)
		{
			if (BitTest(uParam0->f_3[uParam1->f_6 /*2*/], 2))
			{
				if (!BitTest(*uParam1, 2))
				{
					uParam0->f_3[uParam1->f_6 /*2*/].f_1 = -1;
					MISC::CLEAR_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 0);
					MISC::CLEAR_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 2);
					MISC::CLEAR_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 1);
				}
			}
			else if (BitTest(*uParam1, 2))
			{
				if (BitTest(*uParam1, 1))
				{
					if (uParam0->f_3[uParam1->f_6 /*2*/].f_1 == iParam2->f_14)
					{
						MISC::SET_BIT(&(uParam0->f_3[uParam1->f_6 /*2*/]), 2);
					}
				}
			}
		}
	}
	iParam2->f_11++;
	if (iParam2->f_11 >= iVar0)
	{
		iParam2->f_11 = 0;
	}
}

void func_586(int iParam0)//Position - 0xD8FC6
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	__LIB_2__::func_91();
	__LIB_12__::func_846(1, 1, 0, 1060320051, 1086324736, 1065353216, 1088421888, 1084227584, 0, 1066192077, 0, 0, 1, 0, 1109393408);
	iVar0 = 0;
	while (iVar0 < 32)
	{
		switch (__LIB_3__::func_616())
		{
			case 0:
				__LIB_3__::func_986(*iParam0, iVar0, &Var1, &uVar2);
				break;
			case 1:
				__LIB_4__::func_147(*iParam0, iVar0, &Var1, &uVar2);
				break;
			case 3:
			case 4:
				__LIB_4__::func_147(*iParam0, iVar0, &Var1, &uVar2);
				break;
		}
		__LIB_5__::func_879(Var1, uVar2, (1f - (0.1f * IntToFloat(iVar0))));
		iVar0++;
	}
}

int func_587(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1B107E
{
	int iVar0;
	int iVar1;
	iVar0 = iParam2;
	while (iVar0 <= (iParam3 - 1))
	{
		iVar1 = iVar0;
		if (__LIB_12__::func_460(iParam0, iParam1, iVar1))
		{
			return iVar1;
		}
		iVar0++;
	}
	return -99;
}

void func_588(int* iParam0)//Position - 0xDA334
{
	if (iParam0->f_258 > 0 && __LIB_5__::func_277(PLAYER::PLAYER_ID()))
	{
		__LIB_7__::func_878(&(Global_1946250.f_3638), 1, 0, 1, 0, 1);
		__LIB_4__::func_183(&(Global_1946250.f_3638));
	}
	__LIB_7__::func_879(iParam0);
	__LIB_4__::func_182(iParam0);
	if (BitTest(Global_1946250.f_6, 26))
	{
		__LIB_2__::func_91();
		__LIB_12__::func_846(0, 1, 0, 1060320051, 1086324736, 1065353216, 1088421888, 1084227584, 0, 1066192077, 0, 0, 1, 0, 1109393408);
		__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_2))
	{
		PED::DELETE_PED(&(iParam0->f_2));
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_50))
	{
		OBJECT::DELETE_OBJECT(&(iParam0->f_50));
	}
	if (BitTest(*iParam0, 16))
	{
		CAM::DO_SCREEN_FADE_IN(500);
	}
	iParam0->f_27 = 0;
	iParam0->f_188 = 0;
	STREAMING::REMOVE_ANIM_DICT("anim@apt_trans@hinge_l");
	MISC::CLEAR_BIT(&(Global_1946250.f_6), 26);
	MISC::CLEAR_BIT(&(Global_1946250.f_6), 27);
	MISC::CLEAR_BIT(iParam0, 16);
	iParam0->f_258 = 0;
}

void func_589(int iParam0, int iParam1, int iParam2)//Position - 0x1AF9E7
{
	int iVar0;
	int iVar1;
	if (iParam0 == joaat("Player_Zero"))
	{
		iVar0 = 5;
	}
	else if (iParam0 == joaat("Player_One"))
	{
		iVar0 = 2;
	}
	else if (iParam0 == joaat("Player_Two"))
	{
		iVar0 = 4;
	}
	if (__LIB_12__::func_460(iParam0, 12, iVar0))
	{
		if (__LIB_0__::func_20(iParam0, iParam1, iParam2))
		{
			iVar1 = __LIB_0__::func_19(iParam0);
			if (iParam1 == 3)
			{
				Global_113386.f_2363.f_539.f_196[iVar1] = iParam2;
			}
			else if (iParam1 == 4)
			{
				Global_113386.f_2363.f_539.f_200[iVar1] = iParam2;
			}
		}
	}
}

void func_590(int iParam0)//Position - 0xA1D
{
	Global_2725430 = iParam0;
}

bool func_591()//Position - 0x170F
{
	return Global_1574966;
}

void func_592(int iParam0, int iParam1, var uParam2)//Position - 0x38FE
{
	int iVar0;
	iVar0 = Global_2868734[iParam0 /*3*/][__LIB_0__::func_153(uParam2)];
	STATS::STAT_SET_INT(iVar0, iParam1, true);
}

int func_593()//Position - 0x3D28
{
	if (Global_2725430 >= 0 && Global_2725430 < 10)
	{
		return 1;
	}
	return 0;
}

void func_594(int iParam0)//Position - 0x3F1B
{
	Global_2787932 = iParam0;
}

void func_595()//Position - 0x3F29
{
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("turret_cam_script")) > 0)
	{
		Global_2787945 = 1;
	}
}

bool func_596()//Position - 0x3F43
{
	return (Global_2787932 == 3 || Global_2787932 == 0);
}

int func_597(int iParam0)//Position - 0x3F5D
{
	if (Global_2787943 == iParam0)
	{
		if (Global_2787932 == 2)
		{
			if (Global_2787943 == Global_2787944)
			{
				return 1;
			}
			else
			{
				return 2;
			}
		}
		else if (Global_2787932 == 0)
		{
			return 2;
		}
	}
	else
	{
		return 2;
	}
	return 0;
}

bool func_598(int iParam0, var uParam1)//Position - 0x5000
{
	return ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam0, uParam1->f_1, uParam1->f_1.f_3, uParam1->f_1.f_6, false, true, 0);
}

float func_599()//Position - 0x53BD
{
	return 0.13f;
}

int func_600()//Position - 0x5605
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2797.9878f, -3943.8984f, 181.00049f, 2797.9492f, -3919.8503f, 187.4114f, 30f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

int func_601()//Position - 0x1737
{
	if (__LIB_0__::func_625() && !__LIB_0__::func_274())
	{
		return 0;
	}
	if (BitTest(Global_4718592.f_32, 16))
	{
		return 1;
	}
	return 0;
}

void func_602()//Position - 0x385F
{
	int iVar0;
	iVar0 = __LIB_0__::func_356(73, -1);
	if (iVar0 >= 50)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 13);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 13);
	}
}

int func_603()//Position - 0x3A0E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (Global_4980736.f_63310 - 1))
	{
		if (!__LIB_0__::func_86(Global_4980736.f_63312[iVar0 /*183*/]))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_604(int iParam0)//Position - 0x3D7C
{
	if (iParam0 == PLAYER::PLAYER_ID() && !__LIB_10__::func_569())
	{
		return Global_2787940.f_1;
	}
	return Global_2680265.f_1399[iParam0 /*3*/].f_1;
}

bool func_605()//Position - 0x4596
{
	return Global_4718592.f_2 == 8;
}

void func_606(bool bParam0)//Position - 0xA8D1
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 22))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 22);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 22))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 22);
	}
}

bool func_607(int iParam0)//Position - 0xA92E
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 21);
}

void func_608(bool bParam0)//Position - 0xA944
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 5))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 5);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 5))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 5);
	}
}

void func_609(bool bParam0)//Position - 0xAA55
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 12))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 12);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 12))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 12);
	}
}

void func_610(bool bParam0)//Position - 0xD86A
{
	if (!Global_2787855)
	{
		if (bParam0)
		{
			if (Global_78319)
			{
				if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
				{
					NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
				}
			}
		}
	}
}

int func_611(int iParam0)//Position - 0x1C014
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_143, 20);
}

int func_612(int iParam0)//Position - 0xB162C
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
		switch (iVar0)
		{
			case joaat("voltic"):
				return VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 3);
				break;
			case joaat("coquette"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			case joaat("banshee"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			case joaat("stinger"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			}
	}
	return 0;
}

void func_613(char* sParam0, int iParam1, bool bParam2)//Position - 0xC39A9
{
	int iVar0;
	__LIB_12__::func_806(iParam1, &iVar0);
	switch (iVar0)
	{
		case 15271:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_1_v", 64);
			break;
		case 15272:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_2_v", 64);
			break;
		case 15273:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_3_v", 64);
			break;
		case 15274:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_4_v", 64);
			break;
		case 15275:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_5_v", 64);
			break;
		case 15276:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_6_v", 64);
			break;
		case 15277:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_7_v", 64);
			break;
		case 15278:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_8_v", 64);
			break;
		case 15279:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_9_v", 64);
			break;
		case 15280:
			StringCopy(sParam0, "PACKED_MP_INT_TRUCK_MOD_SLOT_10_v", 64);
			break;
		default:
			return;
			break;
	}
	if (bParam2)
	{
		StringConCat(sParam0, "0", 64);
	}
}

void func_614(bool bParam0)//Position - 0xD0E10
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 18))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 18);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 18))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 18);
	}
}

bool func_615()//Position - 0xD9D89
{
	return DLC::IS_DLC_PRESENT(joaat("mpbusiness2"));
}

void func_616()//Position - 0xFC550
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_1835008[iVar0 /*103*/].f_100 = -1;
		iVar0++;
	}
}

void func_617()//Position - 0xFC787
{
	if (Global_100493.f_5 && Global_100493.f_6 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
	{
		HUD::CLEAR_HELP(true);
		Global_100493.f_5 = 0;
	}
}

var func_618()//Position - 0x1021E4
{
	return Global_2789625.f_66;
}

int func_619()//Position - 0x1022D2
{
	return 34779;
}

int func_620(int iParam0)//Position - 0x102964
{
	switch (iParam0)
	{
		case 0:
			return 34773;
		case 1:
			return 34774;
		case 2:
			return 34775;
		default:
	}
	return 0;
}

int func_621(int iParam0)//Position - 0x105608
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("tula"):
			case joaat("mogul"):
			case joaat("rogue"):
			case joaat("bombushka"):
			case joaat("seabreeze"):
			case joaat("hunter"):
			case joaat("nokota"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_622(int iParam0)//Position - 0x105DC6
{
	switch (iParam0)
	{
		case 0:
			return 34767;
		case 1:
			return 34768;
		case 2:
			return 34769;
		default:
	}
	return 0;
}

int func_623()//Position - 0x1068D5
{
	return 34766;
}

int func_624(int iParam0)//Position - 0x107703
{
	switch (iParam0)
	{
		case 0:
			return 31702;
			break;
		case 1:
			return 31704;
			break;
	}
	return 0;
}

int func_625(int iParam0, int iParam1)//Position - 0x107815
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31682;
				case 1:
					return 31683;
				case 2:
					return 31684;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31695;
				case 1:
					return 31696;
				case 2:
					return 31697;
				default:
			}
			break;
	}
	return 0;
}

int func_626(int iParam0, int iParam1)//Position - 0x1079B0
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31676;
				case 1:
					return 31677;
				case 2:
					return 31678;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31689;
				case 1:
					return 31690;
				case 2:
					return 31691;
				default:
			}
			break;
	}
	return 0;
}

int func_627(int iParam0)//Position - 0x107B11
{
	switch (iParam0)
	{
		case 0:
			return 31675;
			break;
		case 1:
			return 31688;
			break;
	}
	return 0;
}

int func_628(int iParam0)//Position - 0x108405
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iVar0)
	{
		case joaat("tezeract"):
		case joaat("oppressor2"):
		case joaat("scarab"):
		case joaat("scarab2"):
		case joaat("scarab3"):
		case joaat("deathbike"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("cyclone"):
		case joaat("zeno"):
		case joaat("iwagen"):
			return 1;
			break;
	}
	if (Global_103941 != 0 && iVar0 == Global_103941)
	{
		return 1;
	}
	return 0;
}

void func_629(int iParam0, struct<16> Param1)//Position - 0x108797
{
	if (iParam0 != -1 && iParam0 < 30)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_7.f_105[iParam0 /*16*/] = { Param1 };
	}
}

void func_630(int iParam0, var uParam1, int iParam2)//Position - 0x10D277
{
	Global_100493.f_1460 = iParam0;
	Global_100493.f_1461 = uParam1;
	Global_100493.f_1462 = iParam2;
}

float func_631()//Position - 0x1100C3
{
	return Global_23150.f_6267;
}

void func_632(int iParam0)//Position - 0x13B13A
{
	if (Global_2789731 != iParam0)
	{
		Global_2789731 = iParam0;
	}
}

struct<103> func_633()//Position - 0x13B218
{
	return Global_2789625;
}

void func_634(bool bParam0)//Position - 0x13BA25
{
	if (!bParam0)
	{
		if (BitTest(Global_103317, 1))
		{
			MISC::CLEAR_BIT(&Global_103317, 1);
		}
	}
	else if (!BitTest(Global_103317, 1))
	{
		MISC::SET_BIT(&Global_103317, 1);
	}
}

void func_635(int iParam0, int iParam1)//Position - 0x13BA9E
{
	if (iParam1 < 0 || iParam1 >= 2)
	{
		return;
	}
	if (Global_2789409[iParam1] != iParam0)
	{
		Global_2789409[iParam1] = iParam0;
	}
}

int func_636(int iParam0)//Position - 0x13D2E2
{
	return Global_113386.f_24904[iParam0 /*4*/];
}

void func_637(bool bParam0)//Position - 0x14D4BA
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 21))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 21);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 21))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 21);
	}
}

void func_638(bool bParam0)//Position - 0x14D5D7
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 26))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 26);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 26))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 26);
	}
}

bool func_639(int iParam0)//Position - 0x1536E9
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 26);
}

void func_640()//Position - 0x15D238
{
	int iVar0;
	iVar0 = __LIB_0__::func_253(9359, -1);
	__LIB_1__::func_379(9359, iVar0 + 1, -1);
}

int func_641(int iParam0)//Position - 0x168156
{
	int iVar0;
	var uVar1;
	iVar0 = iParam0;
	if (STATS::STAT_GET_BOOL(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_642(bool bParam0)//Position - 0x1695DA
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 20))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 20);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 20))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 20);
	}
}

void func_643(bool bParam0)//Position - 0x169647
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 18))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 18);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 18))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 18);
	}
}

void func_644(bool bParam0)//Position - 0x182EEF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 2))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 2);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 2))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 2);
	}
}

void func_645(bool bParam0)//Position - 0x182FF0
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 3))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 3);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 3))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 3);
	}
}

void func_646()//Position - 0x183049
{
	if (Global_152218 != -1)
	{
		if (!BitTest(Global_1585857[Global_152218 /*142*/].f_103, 12))
		{
			MISC::SET_BIT(&(Global_1585857[Global_152218 /*142*/].f_103), 12);
		}
	}
}

bool func_647()//Position - 0x187C08
{
	return BitTest(Global_2789732, 0);
}

int func_648(int iParam0)//Position - 0x1880D4
{
	if (iParam0 == joaat("oppressor2"))
	{
		return 1;
	}
	return 0;
}

int func_649(int iParam0)//Position - 0x1900D8
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_143, 18);
}

void func_650(int iParam0, var uParam1)//Position - 0x19FD52
{
	switch (iParam0)
	{
		case 30:
			uParam1->f_66 = joaat("alpha");
			StringCopy(&(uParam1->f_1), "R31GN", 16);
			*uParam1 = 4;
			uParam1->f_5 = 71;
			uParam1->f_6 = 71;
			uParam1->f_7 = 28;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 24);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 29;
			uParam1->f_59[0] = 1;
			break;
		case 84:
			uParam1->f_66 = joaat("banshee2");
			StringCopy(&(uParam1->f_1), "H0WL3R", 16);
			*uParam1 = 4;
			uParam1->f_5 = 138;
			uParam1->f_6 = 138;
			uParam1->f_7 = 89;
			uParam1->f_8 = 138;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 15;
			uParam1->f_75 = 3;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[0] = 6;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 5;
			uParam1->f_9[6] = 4;
			uParam1->f_9[7] = 6;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 19;
			uParam1->f_59[0] = 1;
			break;
		case 9:
			uParam1->f_66 = joaat("bestiagts");
			StringCopy(&(uParam1->f_1), "5M00TH", 16);
			*uParam1 = 2;
			uParam1->f_5 = 65;
			uParam1->f_6 = 57;
			uParam1->f_7 = 53;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 33;
			uParam1->f_59[0] = 1;
			break;
		case 39:
			uParam1->f_66 = joaat("btype3");
			StringCopy(&(uParam1->f_1), "V4L0R", 16);
			uParam1->f_5 = 12;
			uParam1->f_6 = 28;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 3;
			uParam1->f_9[8] = 2;
			uParam1->f_9[9] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 10;
			uParam1->f_9[43] = 1;
			uParam1->f_9[44] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 78:
			uParam1->f_66 = joaat("cheetah");
			StringCopy(&(uParam1->f_1), "B1GC4T", 16);
			*uParam1 = 3;
			uParam1->f_5 = 70;
			uParam1->f_6 = 136;
			uParam1->f_7 = 136;
			uParam1->f_8 = 136;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 3;
			uParam1->f_59[0] = 1;
			break;
		case 75:
			uParam1->f_66 = joaat("coquette2");
			StringCopy(&(uParam1->f_1), "CL45SY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 92;
			uParam1->f_6 = 38;
			uParam1->f_7 = 38;
			uParam1->f_8 = 41;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 2;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 12;
			uParam1->f_59[0] = 1;
			break;
		case 63:
			uParam1->f_66 = joaat("coquette3");
			StringCopy(&(uParam1->f_1), "BLKF1N", 16);
			*uParam1 = 4;
			uParam1->f_5 = 35;
			uParam1->f_6 = 107;
			uParam1->f_7 = 25;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 51:
			uParam1->f_66 = joaat("entityxf");
			StringCopy(&(uParam1->f_1), "W1DEB0Y", 16);
			*uParam1 = 2;
			uParam1->f_5 = 41;
			uParam1->f_8 = 122;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 226;
			uParam1->f_63 = 6;
			uParam1->f_64 = 6;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 26);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 5;
			uParam1->f_59[0] = 1;
			break;
		case 72:
			uParam1->f_66 = joaat("feltzer2");
			StringCopy(&(uParam1->f_1), "R4C3R", 16);
			*uParam1 = 1;
			uParam1->f_5 = 70;
			uParam1->f_7 = 70;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[23] = 35;
			uParam1->f_59[0] = 1;
			break;
		case 42:
			uParam1->f_66 = joaat("feltzer3");
			StringCopy(&(uParam1->f_1), "R4LLY", 16);
			uParam1->f_5 = 54;
			uParam1->f_6 = 7;
			uParam1->f_7 = 60;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[23] = 7;
			break;
		case 21:
			uParam1->f_66 = joaat("fmj");
			StringCopy(&(uParam1->f_1), "H0T4U", 16);
			*uParam1 = 1;
			uParam1->f_5 = 71;
			uParam1->f_6 = 135;
			uParam1->f_7 = 135;
			uParam1->f_8 = 135;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 5;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 16;
			break;
		case 96:
			uParam1->f_66 = joaat("jester");
			StringCopy(&(uParam1->f_1), "NOF00L", 16);
			uParam1->f_5 = 131;
			uParam1->f_6 = 42;
			uParam1->f_8 = 88;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 4;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 2;
			uParam1->f_9[15] = 4;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 33:
			uParam1->f_66 = joaat("mamba");
			StringCopy(&(uParam1->f_1), "V1P", 16);
			*uParam1 = 4;
			uParam1->f_5 = 51;
			uParam1->f_6 = 120;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 1;
			uParam1->f_9[23] = 2;
			break;
		case 90:
			uParam1->f_66 = joaat("massacro");
			StringCopy(&(uParam1->f_1), "B055", 16);
			*uParam1 = 4;
			uParam1->f_5 = 2;
			uParam1->f_6 = 6;
			uParam1->f_7 = 38;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[8] = 1;
			uParam1->f_9[23] = 29;
			uParam1->f_59[0] = 1;
			break;
		case 81:
			uParam1->f_66 = joaat("nightshade");
			StringCopy(&(uParam1->f_1), "E4TM3", 16);
			*uParam1 = 1;
			uParam1->f_5 = 88;
			uParam1->f_6 = 12;
			uParam1->f_7 = 70;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 4;
			uParam1->f_9[15] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 4;
			uParam1->f_59[0] = 1;
			break;
		case 60:
			uParam1->f_66 = joaat("omnis");
			StringCopy(&(uParam1->f_1), "D1RTY", 16);
			uParam1->f_5 = 63;
			uParam1->f_6 = 63;
			uParam1->f_7 = 87;
			uParam1->f_8 = 111;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_65 = 1;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 18:
			uParam1->f_66 = joaat("osiris");
			StringCopy(&(uParam1->f_1), "SL33K", 16);
			*uParam1 = 4;
			uParam1->f_5 = 107;
			uParam1->f_6 = 31;
			uParam1->f_7 = 107;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 6;
			break;
		case 27:
			uParam1->f_66 = joaat("pfister811");
			StringCopy(&(uParam1->f_1), "SL1CK", 16);
			*uParam1 = 1;
			uParam1->f_5 = 12;
			uParam1->f_6 = 38;
			uParam1->f_8 = 138;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 127;
			uParam1->f_74 = 255;
			uParam1->f_75 = 62;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 18;
			break;
		case 3:
			uParam1->f_66 = joaat("prototipo");
			StringCopy(&(uParam1->f_1), "TURB0", 16);
			uParam1->f_5 = 70;
			uParam1->f_6 = 111;
			uParam1->f_7 = 70;
			uParam1->f_8 = 70;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[23] = 16;
			break;
		case 24:
			uParam1->f_66 = joaat("reaper");
			StringCopy(&(uParam1->f_1), "GR1M", 16);
			*uParam1 = 1;
			uParam1->f_5 = 92;
			uParam1->f_6 = 42;
			uParam1->f_7 = 88;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[15] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 33;
			uParam1->f_59[0] = 1;
			break;
		case 93:
			uParam1->f_66 = joaat("sabregt2");
			StringCopy(&(uParam1->f_1), "B0UNC3", 16);
			*uParam1 = 4;
			uParam1->f_5 = 12;
			uParam1->f_6 = 12;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 36;
			uParam1->f_9[24] = 1;
			uParam1->f_59[0] = 1;
			break;
		case 66:
			uParam1->f_66 = joaat("seven70");
			StringCopy(&(uParam1->f_1), "SP33DY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 145;
			uParam1->f_6 = 3;
			uParam1->f_7 = 88;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 22;
			break;
		case 15:
			uParam1->f_66 = joaat("sheava");
			StringCopy(&(uParam1->f_1), "PR3TTY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 137;
			uParam1->f_6 = 71;
			uParam1->f_7 = 71;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 132;
			uParam1->f_63 = 102;
			uParam1->f_64 = 226;
			uParam1->f_74 = 35;
			uParam1->f_75 = 1;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 4;
			uParam1->f_9[1] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 22;
			uParam1->f_59[0] = 1;
			break;
		case 54:
			uParam1->f_66 = joaat("sultanrs");
			StringCopy(&(uParam1->f_1), "5H0W0FF", 16);
			*uParam1 = 2;
			uParam1->f_5 = 83;
			uParam1->f_6 = 83;
			uParam1->f_8 = 41;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 127;
			uParam1->f_74 = 255;
			uParam1->f_75 = 62;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 15;
			uParam1->f_9[1] = 14;
			uParam1->f_9[2] = 8;
			uParam1->f_9[3] = 4;
			uParam1->f_9[4] = 4;
			uParam1->f_9[5] = 3;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 10;
			uParam1->f_9[8] = 6;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 12:
			uParam1->f_66 = joaat("t20");
			StringCopy(&(uParam1->f_1), "D3V1L", 16);
			*uParam1 = 4;
			uParam1->f_5 = 28;
			uParam1->f_6 = 143;
			uParam1->f_7 = 70;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[23] = 24;
			break;
		case 36:
			uParam1->f_66 = joaat("tampa");
			StringCopy(&(uParam1->f_1), "MU5CL3", 16);
			uParam1->f_5 = 89;
			uParam1->f_6 = 64;
			uParam1->f_7 = 88;
			uParam1->f_8 = 64;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_63 = 174;
			uParam1->f_64 = 239;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 3;
			uParam1->f_9[7] = 4;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 14;
			uParam1->f_59[0] = 1;
			break;
		case 48:
			uParam1->f_66 = joaat("tropos");
			StringCopy(&(uParam1->f_1), "1985", 16);
			*uParam1 = 2;
			uParam1->f_5 = 111;
			uParam1->f_6 = 111;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 3;
			break;
		case 87:
			uParam1->f_66 = joaat("turismor");
			StringCopy(&(uParam1->f_1), "TPD4WG", 16);
			uParam1->f_5 = 68;
			uParam1->f_6 = 68;
			uParam1->f_7 = 92;
			uParam1->f_8 = 87;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_75 = 255;
			uParam1->f_76 = 140;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[4] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 19;
			uParam1->f_59[0] = 1;
			break;
		case 6:
			uParam1->f_66 = joaat("tyrus");
			StringCopy(&(uParam1->f_1), "TR3X", 16);
			*uParam1 = 1;
			uParam1->f_5 = 7;
			uParam1->f_6 = 3;
			uParam1->f_7 = 137;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_65 = 1;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 8;
			uParam1->f_59[0] = 1;
			break;
		case 69:
			uParam1->f_66 = joaat("verlierer2");
			StringCopy(&(uParam1->f_1), "CURV35", 16);
			*uParam1 = 1;
			uParam1->f_5 = 107;
			uParam1->f_6 = 120;
			uParam1->f_7 = 35;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 3;
			uParam1->f_9[7] = 4;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 26;
			uParam1->f_59[0] = 1;
			break;
		case 57:
			uParam1->f_66 = joaat("zentorno");
			StringCopy(&(uParam1->f_1), "H3R0", 16);
			*uParam1 = 1;
			uParam1->f_5 = 149;
			uParam1->f_6 = 55;
			uParam1->f_8 = 55;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 114;
			uParam1->f_63 = 204;
			uParam1->f_64 = 114;
			uParam1->f_74 = 94;
			uParam1->f_75 = 255;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 5;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 1;
			break;
		case 45:
			uParam1->f_66 = joaat("ztype");
			StringCopy(&(uParam1->f_1), "CE0", 16);
			*uParam1 = 1;
			uParam1->f_5 = 120;
			uParam1->f_6 = 42;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 26;
			uParam1->f_59[0] = 1;
			break;
	}
	if (uParam1->f_66 == 0)
	{
	}
}

int func_651()//Position - 0x1A42B4
{
	return 10387;
}

int func_652(int iParam0)//Position - 0x1A42BF
{
	switch (iParam0)
	{
		case 0:
			return 9859;
		case 1:
			return 9860;
		default:
	}
	return 13122;
}

void func_653(bool bParam0)//Position - 0x1A4F24
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 9))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 9);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 9))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 9);
	}
}

float func_654(float fParam0, float fParam1)//Position - 0x1B1DF5
{
	float fVar0;
	fVar0 = (fParam1 - fParam0);
	while (fVar0 < -180f)
	{
		fVar0 = (fVar0 + 360f);
	}
	while (fVar0 > 180f)
	{
		fVar0 = (fVar0 - 360f);
	}
	return fVar0;
}

int func_655()//Position - 0x1B5584
{
	if ((((Global_1946244 == 8 || Global_1946244 == 9) || Global_1946244 == 10) || Global_1946244 == 11) || Global_1946244 == 13)
	{
		return 1;
	}
	return 0;
}

void func_656(bool bParam0)//Position - 0x1B563C
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 23))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 23);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 23))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 23);
	}
}

bool func_657(int iParam0)//Position - 0x1B5699
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 23);
}

void func_658(bool bParam0)//Position - 0x1B56AF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 0))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 0);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 0))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 0);
	}
}

bool func_659(int iParam0)//Position - 0x1B5719
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 0);
}

bool func_660()//Position - 0x1B6C6A
{
	return BitTest(Global_2815059.f_1795, 4);
}

int func_661(int iParam0)//Position - 0x1B9180
{
	switch (iParam0)
	{
		case 28:
			return 0;
			break;
		case 56:
			return 1;
			break;
	}
	return 0;
}

void func_662(int iParam0, bool bParam1)//Position - 0x1BEB54
{
	if (iParam0 == 0 || !__LIB_1__::func_771(iParam0))
	{
		return;
	}
	switch (iParam0)
	{
		case joaat("monster3"):
			__LIB_0__::func_186(9482, bParam1, -1);
			break;
		case joaat("monster4"):
			__LIB_0__::func_186(9483, bParam1, -1);
			break;
		case joaat("monster5"):
			__LIB_0__::func_186(9484, bParam1, -1);
			break;
		case joaat("cerberus"):
			__LIB_0__::func_186(9485, bParam1, -1);
			break;
		case joaat("cerberus2"):
			__LIB_0__::func_186(9486, bParam1, -1);
			break;
		case joaat("cerberus3"):
			__LIB_0__::func_186(9487, bParam1, -1);
			break;
		case joaat("bruiser"):
			__LIB_0__::func_186(9488, bParam1, -1);
			break;
		case joaat("bruiser2"):
			__LIB_0__::func_186(9489, bParam1, -1);
			break;
		case joaat("bruiser3"):
			__LIB_0__::func_186(9490, bParam1, -1);
			break;
		case joaat("slamvan4"):
			__LIB_0__::func_186(9491, bParam1, -1);
			break;
		case joaat("slamvan5"):
			__LIB_0__::func_186(9492, bParam1, -1);
			break;
		case joaat("slamvan6"):
			__LIB_0__::func_186(9493, bParam1, -1);
			break;
		case joaat("brutus"):
			__LIB_0__::func_186(9494, bParam1, -1);
			break;
		case joaat("brutus2"):
			__LIB_0__::func_186(9495, bParam1, -1);
			break;
		case joaat("brutus3"):
			__LIB_0__::func_186(9496, bParam1, -1);
			break;
		case joaat("scarab"):
			__LIB_0__::func_186(9497, bParam1, -1);
			break;
		case joaat("scarab2"):
			__LIB_0__::func_186(9498, bParam1, -1);
			break;
		case joaat("scarab3"):
			__LIB_0__::func_186(9499, bParam1, -1);
			break;
		case joaat("dominator4"):
			__LIB_0__::func_186(9500, bParam1, -1);
			break;
		case joaat("dominator5"):
			__LIB_0__::func_186(9501, bParam1, -1);
			break;
		case joaat("dominator6"):
			__LIB_0__::func_186(9502, bParam1, -1);
			break;
		case joaat("impaler2"):
			__LIB_0__::func_186(9503, bParam1, -1);
			break;
		case joaat("impaler3"):
			__LIB_0__::func_186(9504, bParam1, -1);
			break;
		case joaat("impaler4"):
			__LIB_0__::func_186(9505, bParam1, -1);
			break;
		case joaat("imperator"):
			__LIB_0__::func_186(9506, bParam1, -1);
			break;
		case joaat("imperator2"):
			__LIB_0__::func_186(9507, bParam1, -1);
			break;
		case joaat("imperator3"):
			__LIB_0__::func_186(9508, bParam1, -1);
			break;
		case joaat("zr380"):
			__LIB_0__::func_186(9509, bParam1, -1);
			break;
		case joaat("zr3802"):
			__LIB_0__::func_186(9510, bParam1, -1);
			break;
		case joaat("zr3803"):
			__LIB_0__::func_186(9511, bParam1, -1);
			break;
		case joaat("issi4"):
			__LIB_0__::func_186(9512, bParam1, -1);
			break;
		case joaat("issi5"):
			__LIB_0__::func_186(9513, bParam1, -1);
			break;
		case joaat("issi6"):
			__LIB_0__::func_186(9514, bParam1, -1);
			break;
		case joaat("deathbike"):
			__LIB_0__::func_186(9515, bParam1, -1);
			break;
		case joaat("deathbike2"):
			__LIB_0__::func_186(9516, bParam1, -1);
			break;
		case joaat("deathbike3"):
			__LIB_0__::func_186(25135, bParam1, -1);
			break;
	}
}

void func_663(bool bParam0)//Position - 0x1BF885
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 24))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 24);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 24))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 24);
	}
}

int func_664()//Position - 0x1C0300
{
	return 23;
}

int func_665()//Position - 0x1C030A
{
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		return 223;
	}
	return 201;
}

var func_666(int iParam0)//Position - 0x1C13A2
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 3);
}

int func_667()//Position - 0x1C34E9
{
	int iVar0;
	iVar0 = (iVar0 + Global_1659621);
	iVar0 = (iVar0 + Global_1659622);
	iVar0 = (iVar0 + Global_1659620);
	iVar0 = (iVar0 + Global_1659623);
	iVar0 = (iVar0 + Global_1659625);
	iVar0 = (iVar0 + Global_1659624);
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_EXPLOITS")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_VC_ANNOYINGME")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_VC_HATE")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_BAD_CREW_NAME")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_BAD_CREW_MOTTO")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_BAD_CREW_STATUS")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_BAD_CREW_EMBLEM")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_PLAYERMADE_TITLE")));
	iVar0 = (iVar0 + __LIB_0__::func_991(joaat("MPPLY_PLAYERMADE_DESC")));
	return iVar0;
}

void func_668(bool bParam0)//Position - 0x1C567B
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 17))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 17);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 17))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 17);
	}
}

bool func_669()//Position - 0x1C5B37
{
	return BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 23);
}

var func_670(int iParam0)//Position - 0x1C8703
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 13);
}

void func_671(bool bParam0)//Position - 0x1C89E8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1, 27))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1), 27);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1, 27))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1), 27);
	}
}

bool func_672(char* sParam0, char* sParam1)//Position - 0x1C9C0F
{
	HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(sParam0);
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam1);
	return HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
}

void func_673(bool bParam0)//Position - 0x1CA068
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 27))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 27);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 27))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 27);
	}
}

bool func_674(int iParam0)//Position - 0x1CA0C5
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 27);
}

bool func_675(int iParam0)//Position - 0x1CD975
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 5);
}

void func_676(bool bParam0)//Position - 0x1CDAA4
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 1))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 1);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 1))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 1);
	}
}

var func_677(int iParam0)//Position - 0x1CDAFD
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 1);
}

int func_678(int iParam0)//Position - 0x1CDD43
{
	switch (iParam0)
	{
		case joaat("khanjali"):
			return 0;
			break;
		case joaat("chernobog"):
			return 1;
			break;
		case joaat("riot2"):
			return 2;
			break;
		case joaat("thruster"):
			return 3;
			break;
	}
	return -1;
}

var func_679(int iParam0)//Position - 0x1E7038
{
	return Global_55405.f_37[iParam0];
}

int func_680()//Position - 0x1E7049
{
	return Global_55405.f_36;
}

void func_681(bool bParam0)//Position - 0x1E8EDB
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 4))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 4);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 4))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 4);
	}
}

int func_682(int iParam0)//Position - 0x50D1
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 12);
	}
	return 0;
}

int func_683(int iParam0)//Position - 0xA99D
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_198, 2);
	}
	return 0;
}

int func_684(int iParam0, int iParam1)//Position - 0x1650C
{
	int iVar0;
	int iVar1;
	__LIB_12__::func_806(iParam0, &iVar0);
	iVar1 = __LIB_0__::func_253(iVar0, iParam1);
	if (iVar1 == 255)
	{
		iVar1 = -1;
	}
	return iVar1;
}

void func_685(int iParam0)//Position - 0xB1B62
{
	int iVar0;
	iVar0 = __LIB_0__::func_991(iParam0);
	iVar0++;
	if (!__LIB_1__::func_284(iParam0))
	{
		__LIB_1__::func_69(iParam0, iVar0);
	}
	else
	{
		__LIB_1__::func_70(iParam0, iVar0);
	}
}

char* func_686(int iParam0, bool bParam1, int iParam2, int iParam3)//Position - 0xB5D0D
{
	switch (iParam0)
	{
		case 1:
			return __LIB_9__::func_9(iParam3);
		case 2:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_9" /* GXT: Emperor Forwards Cap */, "CLO_TRF_PH_1_9" /* GXT: Emperor Forwards Cap */);
		case 3:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_12" /* GXT: Beige Knit Sneakers */, "CLO_TRF_F_1_12" /* GXT: Beige Knit Sneakers */);
		case 4:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_6" /* GXT: Gray Emperor Classic Hoodie */, "CLO_TRF_U_11_6" /* GXT: Gray Emperor Classic Hoodie */);
		case 5:
			return __LIB_9__::func_9(iParam3);
		case 6:
			return "CCR_UNL_PS" /* GXT: Pursuit Series */;
		case 7:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_3" /* GXT: Cyan Check Sleeveless Puffer */, "CLO_TRF_U_7_3" /* GXT: Cyan Check Sleeveless Puffer */);
		case 8:
			return "SMOD5_WHL_21" /* GXT: Dinka SPL */;
		case 9:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_8" /* GXT: Blue Hayes Retro Racing */, "CLO_TRF_U_15_8" /* GXT: Blue Hayes Retro Racing */);
		case 10:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_20" /* GXT: White Emperor Motors Tee */, "CLO_TRF_U_14_20" /* GXT: White Emperor Motors Tee */);
		case 11:
			return __LIB_9__::func_9(iParam3);
		case 12:
			return "CCR_UNL_QF" /* GXT: Quick Fix */;
		case 13:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_3" /* GXT: Cyan Check Puffer */, "CLO_TRF_U_8_3" /* GXT: Cyan Check Puffer */);
		case 14:
			return "EUROS_LIV11" /* GXT: Speed Trail */;
		case 15:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_16_0" /* GXT: Never Barcode Print Hoodie */, "CLO_TRF_D_16_0" /* GXT: Never Barcode Print Hoodie */);
		case 16:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_10" /* GXT: Hayes Modern Racing */, "CLO_TRF_U_9_10" /* GXT: Hayes Modern Racing */);
		case 17:
			return __LIB_9__::func_9(iParam3);
		case 18:
			return "CCR_UNL_DV" /* GXT: Diversion */;
		case 19:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_11" /* GXT: Gray Leather Bomber */, "CLO_TRF_U_16_11" /* GXT: Gray Leather Bomber */);
		case 20:
			return "FUTO2_LIV11" /* GXT: Chokusen Dorifuto */;
		case 21:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_10" /* GXT: Karin Forwards Cap */, "CLO_TRF_PH_1_10" /* GXT: Karin Forwards Cap */);
		case 22:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_4" /* GXT: Cream Knit Sneakers */, "CLO_TRF_F_1_4" /* GXT: Cream Knit Sneakers */);
		case 23:
			return __LIB_9__::func_9(iParam3);
		case 24:
			return "CCR_UNL_PT" /* GXT: Private Takeover */;
		case 25:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_16" /* GXT: Yellow Pfister Hoodie */, "CLO_TRF_U_11_16" /* GXT: Yellow Pfister Hoodie */);
		case 26:
			return "SMOD5_WHL_22" /* GXT: Retro Turbofan */;
		case 27:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_2" /* GXT: Red Check Sleeveless Puffer */, "CLO_TRF_U_7_2" /* GXT: Red Check Sleeveless Puffer */);
		case 28:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_9" /* GXT: White Hayes Retro Racing */, "CLO_TRF_U_15_9" /* GXT: White Hayes Retro Racing */);
		case 29:
			return __LIB_9__::func_9(iParam3);
		case 30:
			return "CCR_UNL_ST" /* GXT: Setup */;
		case 31:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_19" /* GXT: Navy Emperor Motors Tee */, "CLO_TRF_U_14_19" /* GXT: Navy Emperor Motors Tee */);
		case 32:
			return "RT3000_LIV11" /* GXT: Stance Andreas */;
		case 33:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_2" /* GXT: Red Check Puffer */, "CLO_TRF_U_8_2" /* GXT: Red Check Puffer */);
		case 34:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_11_0" /* GXT: Never Triangle Print Hoodie */, "CLO_TRF_D_11_0" /* GXT: Never Triangle Print Hoodie */);
		case 35:
			return __LIB_9__::func_9(iParam3);
		case 36:
			return "CCR_UNL_WM" /* GXT: Wingman */;
		case 37:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_12" /* GXT: LTD Modern Racing */, "CLO_TRF_U_9_12" /* GXT: LTD Modern Racing */);
		case 38:
			return "JEST4_LIVERY11" /* GXT: 10 Minute Car */;
		case 39:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R3" /* GXT: Green Crowex Pro Racing Suit */, "CLO_TRF_O_R3" /* GXT: Green Crowex Pro Racing Suit */);
		case 40:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_8" /* GXT: Mustard Tan Leather Bomber */, "CLO_TRF_U_16_8" /* GXT: Mustard Tan Leather Bomber */);
		case 41:
			return __LIB_9__::func_9(iParam3);
		case 42:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_12" /* GXT: Omnis Forwards Cap */, "CLO_TRF_PH_1_12" /* GXT: Omnis Forwards Cap */);
		case 43:
			return "SMOD5_WHL_23" /* GXT: Conical Turbofan */;
		case 44:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_3" /* GXT: Black Knit Sneakers */, "CLO_TRF_F_1_3" /* GXT: Black Knit Sneakers */);
		case 45:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_5" /* GXT: Green Emperor Classic Hoodie */, "CLO_TRF_U_11_5" /* GXT: Green Emperor Classic Hoodie */);
		case 46:
			return __LIB_9__::func_9(iParam3);
		case 47:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_15" /* GXT: Green Geo Sleeveless Puffer */, "CLO_TRF_U_7_15" /* GXT: Green Geo Sleeveless Puffer */);
		case 48:
			return "ZR350_LIV11" /* GXT: Atomic Drift Team */;
		case 49:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_1" /* GXT: White Globe Oil Retro Racing */, "CLO_TRF_U_15_1" /* GXT: White Globe Oil Retro Racing */);
		case 50:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_0" /* GXT: Yellow Annis Rally Tee */, "CLO_TRF_U_14_0" /* GXT: Yellow Annis Rally Tee */);
		case 51:
			return __LIB_9__::func_9(iParam3);
		case 52:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_15" /* GXT: Green Geo Puffer */, "CLO_TRF_U_8_15" /* GXT: Green Geo Puffer */);
		case 53:
			return "WARR2_LIV11" /* GXT: Classic Vulcar */;
		case 54:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_13_0" /* GXT: Life ZigZag Print Hoodie */, "CLO_TRF_D_13_0" /* GXT: Life ZigZag Print Hoodie */);
		case 55:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_7" /* GXT: Blue Dinka Modern Racing */, "CLO_TRF_U_9_7" /* GXT: Blue Dinka Modern Racing */);
		case 56:
			return __LIB_9__::func_9(iParam3);
		case 57:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R2" /* GXT: Gray Benefactor Racing Suit */, "CLO_TRF_O_R2" /* GXT: Gray Benefactor Racing Suit */);
		case 58:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_5" /* GXT: Orange Tan Leather Bomber */, "CLO_TRF_U_16_5" /* GXT: Orange Tan Leather Bomber */);
		case 59:
			return "SMOD5_WHL_24" /* GXT: Ice Storm */;
		case 60:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_7" /* GXT: Annis Forwards Cap */, "CLO_TRF_PH_1_7" /* GXT: Annis Forwards Cap */);
		case 61:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_18" /* GXT: Gray & Purple Knit Sneakers */, "CLO_TRF_F_1_18" /* GXT: Gray & Purple Knit Sneakers */);
		case 62:
			return __LIB_9__::func_9(iParam3);
		case 63:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R4" /* GXT: Black Crowex Pro Racing Suit */, "CLO_TRF_O_R4" /* GXT: Black Crowex Pro Racing Suit */);
		case 64:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_15" /* GXT: Gray Pfister Hoodie */, "CLO_TRF_U_11_15" /* GXT: Gray Pfister Hoodie */);
		case 65:
			return "CALICO_LIVERY11" /* GXT: Fukaru Rally */;
		case 66:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_14" /* GXT: Black Geo Sleeveless Puffer */, "CLO_TRF_U_7_14" /* GXT: Black Geo Sleeveless Puffer */);
		case 67:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_3" /* GXT: Green Crowex Retro Racing */, "CLO_TRF_U_15_3" /* GXT: Green Crowex Retro Racing */);
		case 68:
			return __LIB_9__::func_9(iParam3);
		case 69:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R5" /* GXT: Blue Xero Gas Racing Suit */, "CLO_TRF_O_R5" /* GXT: Blue Xero Gas Racing Suit */);
		case 70:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_3" /* GXT: Blue Annis Noise Tee */, "CLO_TRF_U_14_3" /* GXT: Blue Annis Noise Tee */);
		case 71:
			return "REMUS_LIV11" /* GXT: Blue Lightning */;
		case 72:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_14" /* GXT: Black Geo Puffer */, "CLO_TRF_U_8_14" /* GXT: Black Geo Puffer */);
		case 73:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_12_0" /* GXT: Life Static Print Hoodie */, "CLO_TRF_D_12_0" /* GXT: Life Static Print Hoodie */);
		case 74:
			return __LIB_9__::func_9(iParam3);
		case 75:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R1" /* GXT: Dark Benefactor Racing Suit */, "CLO_TRF_O_R1" /* GXT: Dark Benefactor Racing Suit */);
		case 76:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_6" /* GXT: Red Dinka Modern Racing */, "CLO_TRF_U_9_6" /* GXT: Red Dinka Modern Racing */);
		case 77:
			return "SMOD5_WHL_25" /* GXT: Super Turbine */;
		case 78:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_9" /* GXT: Chestnut Tan Leather Bomber */, "CLO_TRF_U_16_9" /* GXT: Chestnut Tan Leather Bomber */);
		case 79:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_13" /* GXT: Vapid Forwards Cap */, "CLO_TRF_PH_1_13" /* GXT: Vapid Forwards Cap */);
		case 80:
			return __LIB_9__::func_9(iParam3);
		case 81:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R6" /* GXT: Red Xero Gas Racing Suit */, "CLO_TRF_O_R6" /* GXT: Red Xero Gas Racing Suit */);
		case 82:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_19" /* GXT: Gray & Magenta Knit Sneakers */, "CLO_TRF_F_1_19" /* GXT: Gray & Magenta Knit Sneakers */);
		case 83:
			return "DOM8_LIV11" /* GXT: Oldschool Oval */;
		case 84:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_19" /* GXT: Black Vapid Ellie Hoodie */, "CLO_TRF_U_11_19" /* GXT: Black Vapid Ellie Hoodie */);
		case 85:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_8" /* GXT: Cream Bigness Sleeveless Puffer */, "CLO_TRF_U_7_8" /* GXT: Cream Bigness Sleeveless Puffer */);
		case 86:
			return __LIB_9__::func_9(iParam3);
		case 87:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R7" /* GXT: Wildstyle Racing Suit */, "CLO_TRF_O_R7" /* GXT: Wildstyle Racing Suit */);
		case 88:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_0" /* GXT: Red Globe Oil Retro Racing */, "CLO_TRF_U_15_0" /* GXT: Red Globe Oil Retro Racing */);
		case 89:
			return "TGAIT2_LIV11" /* GXT: Crevis Race */;
		case 90:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_4" /* GXT: Light Dinka Tee */, "CLO_TRF_U_14_4" /* GXT: Light Dinka Tee */);
		case 91:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_8" /* GXT: Cream Bigness Puffer */, "CLO_TRF_U_8_8" /* GXT: Cream Bigness Puffer */);
		case 92:
			return __LIB_9__::func_9(iParam3);
		case 93:
			return "SMOD5_WHL_26" /* GXT: Modern Mesh */;
		case 94:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_10_0" /* GXT: Never Crosshair Print Hoodie */, "CLO_TRF_D_10_0" /* GXT: Never Crosshair Print Hoodie */);
		case 95:
			return "EUROS_LIV12" /* GXT: Drift Tribe */;
		case 96:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_3" /* GXT: Yellow Vapid Modern Racing */, "CLO_TRF_U_9_3" /* GXT: Yellow Vapid Modern Racing */);
		case 97:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_2" /* GXT: Dark Tan Leather Bomber */, "CLO_TRF_U_16_2" /* GXT: Dark Tan Leather Bomber */);
		case 98:
			return __LIB_9__::func_9(iParam3);
		case 99:
			return "SMOD5_WHL_27" /* GXT: Forged Star */;
		case 100:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_3" /* GXT: Light Dinka Forwards Cap */, "CLO_TRF_PH_1_3" /* GXT: Light Dinka Forwards Cap */);
		case 101:
			return "FUTO2_LIV12" /* GXT: Drift King */;
		case 102:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_15" /* GXT: Gray & Aqua Knit Sneakers */, "CLO_TRF_F_1_15" /* GXT: Gray & Aqua Knit Sneakers */);
		case 103:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_9" /* GXT: Gray Karin Hoodie */, "CLO_TRF_U_11_9" /* GXT: Gray Karin Hoodie */);
		case 104:
			return "SMOD5_WHL_28" /* GXT: Showflake */;
		case 105:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_9" /* GXT: Purple Bigness Sleeveless Puffer */, "CLO_TRF_U_7_9" /* GXT: Purple Bigness Sleeveless Puffer */);
		case 106:
			return "RT3000_LIV12" /* GXT: Atomic Motorsport */;
		case 107:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_2" /* GXT: Black Crowex Retro Racing */, "CLO_TRF_U_15_2" /* GXT: Black Crowex Retro Racing */);
		case 108:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_2" /* GXT: Black Annis Noise Tee */, "CLO_TRF_U_14_2" /* GXT: Black Annis Noise Tee */);
		case 109:
			return "SMOD5_WHL_29" /* GXT: Giga Mesh */;
		case 110:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_9" /* GXT: Purple Bigness Puffer */, "CLO_TRF_U_8_9" /* GXT: Purple Bigness Puffer */);
		case 111:
			return "JEST4_LIVERY12" /* GXT: Yogarishima */;
		case 112:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_15_0" /* GXT: Hiding Print Hoodie */, "CLO_TRF_D_15_0" /* GXT: Hiding Print Hoodie */);
		case 113:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_13" /* GXT: Ubermacht Modern Racing */, "CLO_TRF_U_9_13" /* GXT: Ubermacht Modern Racing */);
		case 114:
			return "SMOD5_WHL_30" /* GXT: Mesh Meister */;
		default:
	}
	switch (iParam0)
	{
		case 115:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_1" /* GXT: Ox Blood Leather Bomber */, "CLO_TRF_U_16_1" /* GXT: Ox Blood Leather Bomber */);
		case 116:
			return "ZR350_LIV12" /* GXT: Kisama Chevrons */;
		case 117:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_4" /* GXT: Dark Dinka Forwards Cap */, "CLO_TRF_PH_1_4" /* GXT: Dark Dinka Forwards Cap */);
		case 118:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_23" /* GXT: White & Pink Knit Sneakers */, "CLO_TRF_F_1_23" /* GXT: White & Pink Knit Sneakers */);
		case 119:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 120:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_20" /* GXT: Navy Vapid Ellie Hoodie */, "CLO_TRF_U_11_20" /* GXT: Navy Vapid Ellie Hoodie */);
		case 121:
			return "WARR2_LIV12" /* GXT: Classic Vulcar Alt */;
		case 122:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_13" /* GXT: Green Aztec Sleeveless Puffer */, "CLO_TRF_U_7_13" /* GXT: Green Aztec Sleeveless Puffer */);
		case 123:
			return "CALICO_LIVERY12" /* GXT: Disruption Rally */;
		case 124:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 125:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_5" /* GXT: Blue Atomic Retro Racing */, "CLO_TRF_U_15_5" /* GXT: Blue Atomic Retro Racing */);
		case 126:
			return "REMUS_LIV12" /* GXT: Annis Tech */;
		case 127:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_5" /* GXT: Dark Dinka Tee */, "CLO_TRF_U_14_5" /* GXT: Dark Dinka Tee */);
		case 128:
			return "DOM8_LIV12" /* GXT: Resto Mod Racer */;
		case 129:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 130:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_13" /* GXT: Green Aztec Puffer */, "CLO_TRF_U_8_13" /* GXT: Green Aztec Puffer */);
		case 131:
			return "TGAIT2_LIV12" /* GXT: Redwood */;
		case 132:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_14_0" /* GXT: Life Binary Print Hoodie */, "CLO_TRF_D_14_0" /* GXT: Life Binary Print Hoodie */);
		case 133:
			return "EUROS_LIV13" /* GXT: King Scorpion */;
		case 134:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 135:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_8" /* GXT: White Güffy Modern Racing */, "CLO_TRF_U_9_8" /* GXT: White Güffy Modern Racing */);
		case 136:
			return "FUTO2_LIV13" /* GXT: Tandem Battle */;
		case 137:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_4" /* GXT: Dark Nut Leather Bomber */, "CLO_TRF_U_16_4" /* GXT: Dark Nut Leather Bomber */);
		case 138:
			return "RT3000_LIV13" /* GXT: Dinka Performance */;
		case 139:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 140:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_5" /* GXT: White Güffy Forwards Cap */, "CLO_TRF_PH_1_5" /* GXT: White Güffy Forwards Cap */);
		case 141:
			return "JEST4_LIVERY13" /* GXT: Fuque */;
		case 142:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_20" /* GXT: Gray & Yellow Knit Sneakers */, "CLO_TRF_F_1_20" /* GXT: Gray & Yellow Knit Sneakers */);
		case 143:
			return "ZR350_LIV13" /* GXT: Winning is Winning */;
		case 144:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 145:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_10" /* GXT: Navy Karin Hoodie */, "CLO_TRF_U_11_10" /* GXT: Navy Karin Hoodie */);
		case 146:
			return "WARR2_LIV13" /* GXT: Redwood Racing */;
		case 147:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_12" /* GXT: Black Aztec Sleeveless Puffer */, "CLO_TRF_U_7_12" /* GXT: Black Aztec Sleeveless Puffer */);
		case 148:
			return "CALICO_LIVERY13" /* GXT: Redwood Rally */;
		case 149:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 150:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_4" /* GXT: Yellow Atomic Retro Racing */, "CLO_TRF_U_15_4" /* GXT: Yellow Atomic Retro Racing */);
		case 151:
			return "REMUS_LIV13" /* GXT: Atomic Motorsport */;
		case 152:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_8" /* GXT: Light Vapid Ellie Tee */, "CLO_TRF_U_14_8" /* GXT: Light Vapid Ellie Tee */);
		case 153:
			return "DOM8_LIV13" /* GXT: Flame On */;
		case 154:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 155:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_12" /* GXT: Black Aztec Puffer */, "CLO_TRF_U_8_12" /* GXT: Black Aztec Puffer */);
		case 156:
			return "TGAIT2_LIV13" /* GXT: Disruption Logistics */;
		case 157:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_9_0" /* GXT: Lucky Penny Print Hoodie */, "CLO_TRF_D_9_0" /* GXT: Lucky Penny Print Hoodie */);
		case 158:
			return "EUROS_LIV14" /* GXT: Sprunk Light */;
		case 159:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 160:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_9" /* GXT: Black Güffy Modern Racing */, "CLO_TRF_U_9_9" /* GXT: Black Güffy Modern Racing */);
		case 161:
			return "FUTO2_LIV14" /* GXT: Itasha Drift */;
		case 162:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_6" /* GXT: Navy Blue Leather Bomber */, "CLO_TRF_U_16_6" /* GXT: Navy Blue Leather Bomber */);
		case 163:
			return "RT3000_LIV14" /* GXT: Shiny Wasabi Kitty */;
		case 164:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 165:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_6" /* GXT: Black Güffy Forwards Cap */, "CLO_TRF_PH_1_6" /* GXT: Black Güffy Forwards Cap */);
		case 166:
			return "JEST4_LIVERY14" /* GXT: Xero Gas Rally */;
		case 167:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_13" /* GXT: Grayscale Knit Sneakers */, "CLO_TRF_F_1_13" /* GXT: Grayscale Knit Sneakers */);
		case 168:
			return "ZR350_LIV14" /* GXT: Annis Racing Tribal */;
		case 169:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 170:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_14" /* GXT: Light Obey Hoodie */, "CLO_TRF_U_11_14" /* GXT: Light Obey Hoodie */);
		case 171:
			return "WARR2_LIV14" /* GXT: Vulcar Turbo */;
		case 172:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_4" /* GXT: Cream Splinter Sleeveless Puffer */, "CLO_TRF_U_7_4" /* GXT: Cream Splinter Sleeveless Puffer */);
		case 173:
			return "CALICO_LIVERY14" /* GXT: Prolaps Rally */;
		case 174:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 175:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_6" /* GXT: Blue Redwood Retro Racing */, "CLO_TRF_U_15_6" /* GXT: Blue Redwood Retro Racing */);
		case 176:
			return "REMUS_LIV14" /* GXT: Shiny Wasabi Kitty */;
		case 177:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_7" /* GXT: Dark Vapid Ellie Tee */, "CLO_TRF_U_14_7" /* GXT: Dark Vapid Ellie Tee */);
		case 178:
			return "DOM8_LIV14" /* GXT: The Patriot */;
		case 179:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 180:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_4" /* GXT: Cream Splinter Puffer */, "CLO_TRF_U_8_4" /* GXT: Cream Splinter Puffer */);
		case 181:
			return "TGAIT2_LIV14" /* GXT: Colored Camo Livery */;
		case 182:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_5" /* GXT: Light Dinka Modern Racing */, "CLO_TRF_U_9_5" /* GXT: Light Dinka Modern Racing */);
		case 183:
			return "EUROS_LIV15" /* GXT: Candybox Gold */;
		case 184:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 185:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_3" /* GXT: Dark Green Leather Bomber */, "CLO_TRF_U_16_3" /* GXT: Dark Green Leather Bomber */);
		case 186:
			return "FUTO2_LIV15" /* GXT: Stance Andreas */;
		case 187:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_8" /* GXT: Hellion Forwards Cap */, "CLO_TRF_PH_1_8" /* GXT: Hellion Forwards Cap */);
		case 188:
			return "RT3000_LIV15" /* GXT: Total Fire */;
		case 189:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 190:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_14" /* GXT: Gray & Cyan Knit Sneakers */, "CLO_TRF_F_1_14" /* GXT: Gray & Cyan Knit Sneakers */);
		case 191:
			return "JEST4_LIVERY15" /* GXT: Split Siberia */;
		case 192:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_17" /* GXT: Black Ubermacht Hoodie */, "CLO_TRF_U_11_17" /* GXT: Black Ubermacht Hoodie */);
		case 193:
			return "ZR350_LIV15" /* GXT: Annis Racing Tribal Alt */;
		case 194:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 195:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_5" /* GXT: Dark Splinter Sleeveless Puffer */, "CLO_TRF_U_7_5" /* GXT: Dark Splinter Sleeveless Puffer */);
		case 196:
			return "WARR2_LIV15" /* GXT: Vulcar Turbo Alt */;
		case 197:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_15" /* GXT: White Logo Ruiner Tee */, "CLO_TRF_U_14_15" /* GXT: White Logo Ruiner Tee */);
		case 198:
			return "CALICO_LIVERY15" /* GXT: Xero Gas Rally */;
		case 199:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 200:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_5" /* GXT: Dark Splinter Puffer */, "CLO_TRF_U_8_5" /* GXT: Dark Splinter Puffer */);
		case 201:
			return "REMUS_LIV15" /* GXT: Fukaru Motorsport */;
		case 202:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_4" /* GXT: Dark Dinka Modern Racing */, "CLO_TRF_U_9_4" /* GXT: Dark Dinka Modern Racing */);
		case 203:
			return "DOM8_LIV15" /* GXT: 70s Street Machine */;
		case 204:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 205:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_10" /* GXT: White Leather Bomber */, "CLO_TRF_U_16_10" /* GXT: White Leather Bomber */);
		case 206:
			return "TGAIT2_LIV15" /* GXT: Army Camo Solid */;
		case 207:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_11" /* GXT: Lampadati Forwards Cap */, "CLO_TRF_PH_1_11" /* GXT: Lampadati Forwards Cap */);
		case 208:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_8" /* GXT: Lilac Knit Sneakers */, "CLO_TRF_F_1_8" /* GXT: Lilac Knit Sneakers */);
		case 209:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 210:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_13" /* GXT: Dark Obey Hoodie */, "CLO_TRF_U_11_13" /* GXT: Dark Obey Hoodie */);
		case 211:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_10" /* GXT: Green Latin Sleeveless Puffer */, "CLO_TRF_U_7_10" /* GXT: Green Latin Sleeveless Puffer */);
		case 212:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_9" /* GXT: Gray Vapid Truck Tee */, "CLO_TRF_U_14_9" /* GXT: Gray Vapid Truck Tee */);
		case 213:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_10" /* GXT: Green Latin Puffer */, "CLO_TRF_U_8_10" /* GXT: Green Latin Puffer */);
		case 214:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		default:
	}
	switch (iParam0)
	{
		case 215:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_1" /* GXT: Blue Bravado Modern Racing */, "CLO_TRF_U_9_1" /* GXT: Blue Bravado Modern Racing */);
		case 216:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_7" /* GXT: Red Leather Bomber */, "CLO_TRF_U_16_7" /* GXT: Red Leather Bomber */);
		case 217:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_1" /* GXT: White Knit Sneakers */, "CLO_TRF_F_1_1" /* GXT: White Knit Sneakers */);
		case 218:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_18" /* GXT: Red Ubermacht Hoodie */, "CLO_TRF_U_11_18" /* GXT: Red Ubermacht Hoodie */);
		case 219:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 220:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_11" /* GXT: Black Latin Sleeveless Puffer */, "CLO_TRF_U_7_11" /* GXT: Black Latin Sleeveless Puffer */);
		case 221:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_12" /* GXT: White Obey Omnis Tee */, "CLO_TRF_U_14_12" /* GXT: White Obey Omnis Tee */);
		case 222:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_11" /* GXT: Black Latin Puffer */, "CLO_TRF_U_8_11" /* GXT: Black Latin Puffer */);
		case 223:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_0" /* GXT: Black Bravado Modern Racing */, "CLO_TRF_U_9_0" /* GXT: Black Bravado Modern Racing */);
		case 224:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 225:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_0" /* GXT: Ice Knit Sneakers */, "CLO_TRF_F_1_0" /* GXT: Ice Knit Sneakers */);
		case 226:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_1" /* GXT: Blue Annis Noise Hoodie */, "CLO_TRF_U_11_1" /* GXT: Blue Annis Noise Hoodie */);
		case 227:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_1" /* GXT: Orange Camo Sleeveless Puffer */, "CLO_TRF_U_7_1" /* GXT: Orange Camo Sleeveless Puffer */);
		case 228:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_10" /* GXT: Light Blue Vapid Truck Tee */, "CLO_TRF_U_14_10" /* GXT: Light Blue Vapid Truck Tee */);
		case 229:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 230:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_1" /* GXT: Orange Camo Puffer */, "CLO_TRF_U_8_1" /* GXT: Orange Camo Puffer */);
		case 231:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_11" /* GXT: Imponte Modern Racing */, "CLO_TRF_U_9_11" /* GXT: Imponte Modern Racing */);
		case 232:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_2" /* GXT: Aqua Sole Knit Sneakers */, "CLO_TRF_F_1_2" /* GXT: Aqua Sole Knit Sneakers */);
		case 233:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_7" /* GXT: Green Emperor Modern Hoodie */, "CLO_TRF_U_11_7" /* GXT: Green Emperor Modern Hoodie */);
		case 234:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 235:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_0" /* GXT: Aqua Camo Sleeveless Puffer */, "CLO_TRF_U_7_0" /* GXT: Aqua Camo Sleeveless Puffer */);
		case 236:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_6" /* GXT: Black Vapid USA Tee */, "CLO_TRF_U_14_6" /* GXT: Black Vapid USA Tee */);
		case 237:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_0" /* GXT: Aqua Camo Puffer */, "CLO_TRF_U_8_0" /* GXT: Aqua Camo Puffer */);
		case 238:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_14" /* GXT: Xero Modern Racing */, "CLO_TRF_U_9_14" /* GXT: Xero Modern Racing */);
		case 239:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 240:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_5" /* GXT: Smoky Knit Sneakers */, "CLO_TRF_F_1_5" /* GXT: Smoky Knit Sneakers */);
		case 241:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_2" /* GXT: Gray Annis Noise Hoodie */, "CLO_TRF_U_11_2" /* GXT: Gray Annis Noise Hoodie */);
		case 242:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_6" /* GXT: Gradient Sleeveless Puffer */, "CLO_TRF_U_7_6" /* GXT: Gradient Sleeveless Puffer */);
		case 243:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_13" /* GXT: Red Obey Omnis Tee */, "CLO_TRF_U_14_13" /* GXT: Red Obey Omnis Tee */);
		case 244:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 245:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_6" /* GXT: Gradient Puffer */, "CLO_TRF_U_8_6" /* GXT: Gradient Puffer */);
		case 246:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_22" /* GXT: White & Gold Knit Sneakers */, "CLO_TRF_F_1_22" /* GXT: White & Gold Knit Sneakers */);
		case 247:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_8" /* GXT: Dark Emperor Modern Hoodie */, "CLO_TRF_U_11_8" /* GXT: Dark Emperor Modern Hoodie */);
		case 248:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_16" /* GXT: Red Logo Ruiner Tee */, "CLO_TRF_U_14_16" /* GXT: Red Logo Ruiner Tee */);
		case 249:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 250:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_21" /* GXT: Orange Knit Sneakers */, "CLO_TRF_F_1_21" /* GXT: Orange Knit Sneakers */);
		case 251:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_3" /* GXT: Light Dinka Hoodie */, "CLO_TRF_U_11_3" /* GXT: Light Dinka Hoodie */);
		case 252:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_17" /* GXT: Blue Bravado Gauntlet Tee */, "CLO_TRF_U_14_17" /* GXT: Blue Bravado Gauntlet Tee */);
		case 253:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_7" /* GXT: Pink Vibrant Knit Sneakers */, "CLO_TRF_F_1_7" /* GXT: Pink Vibrant Knit Sneakers */);
		case 254:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 255:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_11" /* GXT: Gold Lampadati Hoodie */, "CLO_TRF_U_11_11" /* GXT: Gold Lampadati Hoodie */);
		case 256:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_18" /* GXT: Black Bravado Gauntlet Tee */, "CLO_TRF_U_14_18" /* GXT: Black Bravado Gauntlet Tee */);
		case 257:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_6" /* GXT: Lime Highlight Knit Sneakers */, "CLO_TRF_F_1_6" /* GXT: Lime Highlight Knit Sneakers */);
		case 258:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_4" /* GXT: Dark Dinka Hoodie */, "CLO_TRF_U_11_4" /* GXT: Dark Dinka Hoodie */);
		case 259:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_14" /* GXT: Pfister Pocket Tee */, "CLO_TRF_U_14_14" /* GXT: Pfister Pocket Tee */);
		case 260:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_11" /* GXT: Purple Fade Knit Sneakers */, "CLO_TRF_F_1_11" /* GXT: Purple Fade Knit Sneakers */);
		case 261:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_11" /* GXT: Karin 90s Tee */, "CLO_TRF_U_14_11" /* GXT: Karin 90s Tee */);
		case 262:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_17" /* GXT: Teal Knit Sneakers */, "CLO_TRF_F_1_17" /* GXT: Teal Knit Sneakers */);
		case 263:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_16" /* GXT: Black & Lime Knit Sneakers */, "CLO_TRF_F_1_16" /* GXT: Black & Lime Knit Sneakers */);
		case 264:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_10" /* GXT: Cyan Fade Knit Sneakers */, "CLO_TRF_F_1_10" /* GXT: Cyan Fade Knit Sneakers */);
		case 265:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 266:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 267:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 268:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 269:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 270:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 271:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 272:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 273:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 274:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_F_1_9" /* GXT: Red Highlight Knit Sneakers */, "CLO_TRF_F_1_9" /* GXT: Red Highlight Knit Sneakers */);
		default:
	}
	switch (iParam0)
	{
		case 275:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 276:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 277:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 278:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 279:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 280:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 281:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 282:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 283:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 284:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_PH_1_2" /* GXT: Broker Forwards Cap */, "CLO_TRF_PH_1_2" /* GXT: Broker Forwards Cap */);
		case 285:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 286:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 287:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 288:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 289:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 290:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 291:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 292:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 293:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 294:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_15_1" /* GXT: Annis Hellion 4x4 Tee */, "CLO_TRF_U_14_1" /* GXT: Annis Hellion 4x4 Tee */);
		case 295:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 296:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 297:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 298:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 299:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 300:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 301:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 302:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 303:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 304:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_7_7" /* GXT: Pink Gradient Sleeveless Puffer */, "CLO_TRF_U_7_7" /* GXT: Pink Gradient Sleeveless Puffer */);
		case 305:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 306:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 307:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 308:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 309:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 310:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 311:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 312:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 313:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 314:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_9_2" /* GXT: Fade Broker Modern Racing */, "CLO_TRF_U_9_2" /* GXT: Fade Broker Modern Racing */);
		default:
	}
	switch (iParam0)
	{
		case 315:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 316:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 317:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 318:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 319:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 320:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 321:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 322:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 323:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 324:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_11_12" /* GXT: Tricolor Lampadati Hoodie */, "CLO_TRF_U_11_12" /* GXT: Tricolor Lampadati Hoodie */);
		case 325:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 326:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 327:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 328:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 329:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 330:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 331:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 332:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 333:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 334:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_17_7" /* GXT: Red Leather Bomber */, "CLO_TRF_U_16_7" /* GXT: Red Leather Bomber */);
		case 335:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 336:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 337:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 338:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 339:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 340:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 341:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 342:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 343:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 344:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_8_7" /* GXT: Pink Gradient Puffer */, "CLO_TRF_U_8_7" /* GXT: Pink Gradient Puffer */);
		case 345:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 346:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 347:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 348:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 349:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 350:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 351:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 352:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 353:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 354:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_U_16_7" /* GXT: Red Redwood Retro Racing */, "CLO_TRF_U_15_7" /* GXT: Red Redwood Retro Racing */);
		case 355:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 356:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 357:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 358:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 359:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 360:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 361:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 362:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 363:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 364:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_D_8_0" /* GXT: Crash Out Print Hoodie */, "CLO_TRF_D_8_0" /* GXT: Crash Out Print Hoodie */);
		case 365:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 366:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 367:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 368:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 369:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 370:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 371:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 372:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 373:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 374:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 375:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 376:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 377:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 378:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 379:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 380:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 381:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 382:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 383:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 384:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 385:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 386:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 387:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 388:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 389:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 390:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 391:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 392:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 393:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 394:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 395:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 396:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 397:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 398:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 399:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 400:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 401:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 402:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 403:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 404:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 405:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 406:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 407:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 408:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 409:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 410:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 411:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 412:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 413:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 414:
			return __LIB_1__::func_295(iParam2 == 0, "LGM_NAME" /* GXT: Legendary Motorsport */, "SSS_NAME" /* GXT: Southern San Andreas Super Autos */);
		case 415:
			return __LIB_1__::func_295(bParam1, "CLO_TRM_O_R8" /* GXT: Tuned For Speed Racing Suit */, "CLO_TRF_O_R8" /* GXT: Tuned For Speed Racing Suit */);
		default:
	}
	return "";
}

int func_687(int iParam0)//Position - 0xB9600
{
	int iVar0;
	if (!__LIB_9__::func_13(iParam0))
	{
		return 0;
	}
	if (__LIB_9__::func_12(iParam0))
	{
		return 0;
	}
	iVar0 = __LIB_8__::func_279(iParam0);
	if (iVar0 == 513)
	{
		return 0;
	}
	__LIB_0__::func_186(iVar0, 1, -1);
	return 1;
}

int func_688()//Position - 0xBC6E2
{
	return (__LIB_9__::func_16(1001) - 1);
}

void func_689(bool bParam0)//Position - 0xBE5CD
{
	bool bVar0;
	char cVar1[64];
	if (bParam0 == 8)
	{
		__LIB_0__::func_186(129, 0, -1);
		return;
	}
	if (bParam0 == 9)
	{
		__LIB_0__::func_186(135, 0, -1);
		return;
	}
	if (bParam0 == 10)
	{
		__LIB_0__::func_186(136, 0, -1);
		return;
	}
	if (bParam0 == 11)
	{
		__LIB_0__::func_186(137, 0, -1);
		return;
	}
	if (bParam0 == 12)
	{
		__LIB_1__::func_354(8272, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 13)
	{
		__LIB_1__::func_354(8273, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 14)
	{
		__LIB_1__::func_354(8274, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 15)
	{
		__LIB_1__::func_354(8275, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 16)
	{
		__LIB_1__::func_354(8276, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 17)
	{
		__LIB_1__::func_354(8277, 0, -1, 1, 0);
		return;
	}
	bVar0 = false;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (BitTest(Global_113386.f_20564.f_471, bParam0))
		{
			bVar0 = true;
			MISC::CLEAR_BIT(&(Global_113386.f_20564.f_471), bParam0);
		}
	}
	else if (BitTest(Global_113386.f_20564.f_471, bParam0) || BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_10, bParam0))
	{
		bVar0 = true;
		MISC::CLEAR_BIT(&(Global_113386.f_20564.f_471), bParam0);
		MISC::CLEAR_BIT(&(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_10), bParam0);
	}
	if (bVar0)
	{
		StringCopy(&cVar1, "CHAR_LIFEINVADER", 64);
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("COUP_RED" /* GXT: You have redeemed your promotion for ~a~ */);
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(__LIB_0__::func_181(bParam0));
		HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(&cVar1, &cVar1, true, 0, "", 0);
	}
}

void func_690()//Position - 0xC2D55
{
	int iVar0;
	iVar0 = __LIB_1__::func_677(72, -1);
	if (iVar0 >= 50)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 14);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 14);
	}
}

int func_691()//Position - 0xC2EB4
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (PLAYER::PLAYER_ID() == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	if (!__LIB_0__::func_883(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != PLAYER::PLAYER_ID())
	{
		return 0;
	}
	return 1;
}

bool func_692(int iParam0, int iParam1)//Position - 0xD13D5
{
	return __LIB_3__::func_114(CLOCK::GET_CLOCK_HOURS(), iParam0, iParam1);
}

void func_693(var uParam0, var uParam1, var uParam2, char* sParam3, char* sParam4)//Position - 0xFC4D2
{
	uParam1->f_17 = __LIB_0__::getMinusOneOrNull();
	uParam1->f_18 = __LIB_0__::getMinusOneOrNull();
	uParam1->f_19 = __LIB_0__::getMinusOneOrNull();
	uParam1->f_20 = __LIB_0__::getMinusOneOrNull();
	uParam1->f_1 = uParam0;
	uParam1->f_2 = 1;
	StringCopy(&(uParam1->f_21), sParam4, 16);
	StringCopy(&(uParam1->f_8), sParam3, 32);
	uParam1->f_16 = 1;
	uParam1->f_3 = uParam2;
	uParam1->f_71 = 1;
	uParam1->f_74 = 1;
	uParam1->f_75 = 1;
	uParam1->f_76 = 0;
	uParam1->f_77 = 0;
	uParam1->f_73 = 0;
	StringCopy(&(uParam1->f_25), "", 64);
	StringCopy(&(uParam1->f_41), "", 64);
}

void func_694(bool bParam0)//Position - 0x13B0BE
{
	if (PLAYER::PLAYER_ID() == __LIB_0__::getMinusOneOrNull())
	{
		return;
	}
	if (!bParam0)
	{
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 13))
		{
			MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 13);
		}
	}
	else if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 13))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 13);
	}
}

int func_695(int iParam0)//Position - 0x13B1F1
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 13);
}

void func_696(int iParam0)//Position - 0x13BA5B
{
	if (PLAYER::PLAYER_ID() == __LIB_0__::getMinusOneOrNull())
	{
		return;
	}
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_4 != iParam0)
	{
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_4 = iParam0;
	}
}

int func_697(var uParam0)//Position - 0x1523A9
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__::getGlobal_1574918();
	iVar2 = 34781;
	__LIB_1__::func_379(iVar2, uParam0->f_103, iVar0);
	iVar2 = 34782;
	__LIB_1__::func_379(iVar2, uParam0->f_104, iVar0);
	iVar2 = 34783;
	__LIB_1__::func_379(iVar2, *uParam0, iVar0);
	iVar1 = 0;
	while (iVar1 < 49)
	{
		iVar2 = (34784 + iVar1);
		__LIB_1__::func_379(iVar2, uParam0->f_9[iVar1], iVar0);
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 2)
	{
		iVar2 = (34809 + iVar1);
		__LIB_1__::func_379(iVar2, uParam0->f_59[iVar1], iVar0);
		iVar1++;
	}
	iVar2 = 34811;
	__LIB_1__::func_379(iVar2, uParam0->f_62, iVar0);
	iVar2 = 34812;
	__LIB_1__::func_379(iVar2, uParam0->f_63, iVar0);
	iVar2 = 34813;
	__LIB_1__::func_379(iVar2, uParam0->f_64, iVar0);
	iVar2 = 34814;
	__LIB_1__::func_379(iVar2, uParam0->f_65, iVar0);
	iVar2 = 34815;
	__LIB_1__::func_379(iVar2, uParam0->f_67, iVar0);
	iVar2 = 34816;
	__LIB_1__::func_379(iVar2, uParam0->f_68, iVar0);
	iVar2 = 34817;
	__LIB_1__::func_379(iVar2, uParam0->f_69, iVar0);
	iVar2 = 34818;
	__LIB_1__::func_379(iVar2, uParam0->f_71, iVar0);
	iVar2 = 34819;
	__LIB_1__::func_379(iVar2, uParam0->f_72, iVar0);
	iVar2 = 34820;
	__LIB_1__::func_379(iVar2, uParam0->f_73, iVar0);
	iVar2 = 34821;
	__LIB_1__::func_379(iVar2, uParam0->f_5, iVar0);
	iVar2 = 34822;
	__LIB_1__::func_379(iVar2, uParam0->f_6, iVar0);
	iVar2 = 34823;
	__LIB_1__::func_379(iVar2, uParam0->f_7, iVar0);
	iVar2 = 34824;
	__LIB_1__::func_379(iVar2, uParam0->f_8, iVar0);
	iVar2 = 34825;
	__LIB_1__::func_379(iVar2, uParam0->f_74, iVar0);
	iVar2 = 34826;
	__LIB_1__::func_379(iVar2, uParam0->f_75, iVar0);
	iVar2 = 34827;
	__LIB_1__::func_379(iVar2, uParam0->f_76, iVar0);
	iVar2 = 34831;
	__LIB_1__::func_379(iVar2, uParam0->f_97, iVar0);
	iVar2 = 34831;
	__LIB_1__::func_379(iVar2, uParam0->f_99, iVar0);
	iVar2 = 34834;
	__LIB_1__::func_379(iVar2, uParam0->f_98, iVar0);
	iVar2 = 34833;
	__LIB_1__::func_379(iVar2, uParam0->f_102, iVar0);
	__LIB_1__::func_354(10405, uParam0->f_105, iVar0, 1, 0);
	__LIB_1__::func_354(10406, uParam0->f_66, iVar0, 1, 0);
	__LIB_1__::func_354(10407, uParam0->f_77, iVar0, 1, 0);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam0->f_1)))
	{
		__LIB_2__::func_723(10408, &(uParam0->f_1), iVar0);
	}
	return 1;
}

int func_698(int iParam0, var uParam1)//Position - 0x15276E
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__::getGlobal_1574918();
	if (iParam0 == 0)
	{
		iVar2 = 31565;
	}
	else
	{
		iVar2 = 31620;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_103, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31566;
	}
	else
	{
		iVar2 = 31621;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_104, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31567;
	}
	else
	{
		iVar2 = 31622;
	}
	__LIB_1__::func_379(iVar2, *uParam1, iVar0);
	iVar1 = 0;
	while (iVar1 < 49)
	{
		if (iParam0 == 0)
		{
			iVar2 = (31568 + iVar1);
		}
		else
		{
			iVar2 = (31623 + iVar1);
		}
		__LIB_1__::func_379(iVar2, uParam1->f_9[iVar1], iVar0);
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 2)
	{
		if (iParam0 == 0)
		{
			iVar2 = (31593 + iVar1);
		}
		else
		{
			iVar2 = (31648 + iVar1);
		}
		__LIB_1__::func_379(iVar2, uParam1->f_59[iVar1], iVar0);
		iVar1++;
	}
	if (iParam0 == 0)
	{
		iVar2 = 31595;
	}
	else
	{
		iVar2 = 31650;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_62, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31596;
	}
	else
	{
		iVar2 = 31651;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_63, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31597;
	}
	else
	{
		iVar2 = 31652;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_64, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31598;
	}
	else
	{
		iVar2 = 31653;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_65, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31599;
	}
	else
	{
		iVar2 = 31654;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_67, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31600;
	}
	else
	{
		iVar2 = 31655;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_68, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31601;
	}
	else
	{
		iVar2 = 31656;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_69, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31602;
	}
	else
	{
		iVar2 = 31657;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_71, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31603;
	}
	else
	{
		iVar2 = 31658;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_72, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31604;
	}
	else
	{
		iVar2 = 31659;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_73, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31605;
	}
	else
	{
		iVar2 = 31660;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_5, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31606;
	}
	else
	{
		iVar2 = 31661;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_6, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31607;
	}
	else
	{
		iVar2 = 31662;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_7, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31608;
	}
	else
	{
		iVar2 = 31663;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_8, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31609;
	}
	else
	{
		iVar2 = 31664;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_74, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31610;
	}
	else
	{
		iVar2 = 31665;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_75, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31611;
	}
	else
	{
		iVar2 = 31666;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_76, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31615;
	}
	else
	{
		iVar2 = 31670;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_97, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31615;
	}
	else
	{
		iVar2 = 31670;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_99, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31618;
	}
	else
	{
		iVar2 = 31673;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_98, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31617;
	}
	else
	{
		iVar2 = 31672;
	}
	__LIB_1__::func_379(iVar2, uParam1->f_102, iVar0);
	if (iParam0 == 0)
	{
		__LIB_1__::func_354(9849, uParam1->f_105, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__::func_354(9853, uParam1->f_105, iVar0, 1, 0);
	}
	if (iParam0 == 0)
	{
		__LIB_1__::func_354(9850, uParam1->f_66, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__::func_354(9854, uParam1->f_66, iVar0, 1, 0);
	}
	if (iParam0 == 0)
	{
		__LIB_1__::func_354(9851, uParam1->f_77, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__::func_354(9855, uParam1->f_77, iVar0, 1, 0);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_1)))
	{
		if (iParam0 == 0)
		{
			__LIB_2__::func_723(9852, &(uParam1->f_1), iVar0);
		}
		else
		{
			__LIB_2__::func_723(9856, &(uParam1->f_1), iVar0);
		}
	}
	return 1;
}

void func_699()//Position - 0x182812
{
	bool bVar0;
	bVar0 = __LIB_1__::func_676(52, -1);
	if (bVar0)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 17);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 17);
	}
}

int func_700(int iParam0)//Position - 0x187C16
{
	if (__LIB_10__::func_575(iParam0))
	{
		return 1;
	}
	if (__LIB_10__::func_574(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_701(int iParam0)//Position - 0x18E736
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 13);
	}
	return 0;
}

int func_702(int iParam0)//Position - 0x19024F
{
	if (__LIB_1__::func_30(iParam0, 1))
	{
		return Global_1892703[iParam0 /*599*/].f_10.f_429;
	}
	return -1;
}

int func_703()//Position - 0x19D258
{
	if (__LIB_1__::func_520(1))
	{
		if (__LIB_1__::func_501())
		{
			return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_1;
		}
		else
		{
			return Global_1892703[__LIB_0__::func_797() /*599*/].f_10.f_76.f_1;
		}
	}
	return 0;
}

int func_704(int iParam0, bool bParam1)//Position - 0x1A4519
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	if (__LIB_0__::func_883(PLAYER::PLAYER_ID()) && !bParam1)
	{
		return 0;
	}
	fVar3 = VEHICLE::GET_VEHICLE_DIRT_LEVEL(iParam0);
	if (fVar3 > 10f)
	{
		iVar9 = 8;
	}
	else if (fVar3 > 5f)
	{
		iVar9 = 4;
	}
	fVar3 = (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(iParam0) / 1000f);
	if (fVar3 > 0.99f)
	{
		iVar5 = 0;
	}
	else if (fVar3 > 0.8f)
	{
		iVar5 = 20;
	}
	else if (fVar3 > 0.6f)
	{
		iVar5 = 40;
	}
	else if (fVar3 > 0.4f)
	{
		iVar5 = 80;
	}
	else
	{
		iVar5 = 100;
	}
	fVar3 = (VEHICLE::GET_VEHICLE_PETROL_TANK_HEALTH(iParam0) / 1000f);
	if (fVar3 > 0.99f)
	{
		iVar6 = 0;
	}
	else if (fVar3 > 0.8f)
	{
		iVar6 = 20;
	}
	else if (fVar3 > 0.6f)
	{
		iVar6 = 40;
	}
	else if (fVar3 > 0.4f)
	{
		iVar6 = 60;
	}
	else
	{
		iVar6 = 75;
	}
	fVar3 = (SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) / 1000f);
	if (fVar3 > 0.99f)
	{
		iVar8 = 0;
	}
	else if (fVar3 > 0.8f)
	{
		iVar8 = 40;
	}
	else if (fVar3 > 0.6f)
	{
		iVar8 = 80;
	}
	else if (fVar3 > 0.4f)
	{
		iVar8 = 150;
	}
	else
	{
		iVar8 = 200;
	}
	if (VEHICLE::GET_DOES_VEHICLE_HAVE_DAMAGE_DECALS(iParam0))
	{
		iVar8 += 50;
	}
	if (VEHICLE::IS_VEHICLE_BUMPER_BROKEN_OFF(iParam0, true))
	{
		iVar8 += 50;
	}
	else if (VEHICLE::IS_VEHICLE_BUMPER_BOUNCING(iParam0, true))
	{
		iVar8 += 25;
	}
	if (VEHICLE::IS_VEHICLE_BUMPER_BROKEN_OFF(iParam0, false))
	{
		iVar8 += 50;
	}
	else if (VEHICLE::IS_VEHICLE_BUMPER_BOUNCING(iParam0, false))
	{
		iVar8 += 25;
	}
	if (!VEHICLE::ARE_ALL_VEHICLE_WINDOWS_INTACT(iParam0))
	{
		iVar10 += 20;
		if (!VEHICLE::IS_VEHICLE_WINDOW_INTACT(iParam0, 6))
		{
			iVar10 += 40;
		}
		if (!VEHICLE::IS_VEHICLE_WINDOW_INTACT(iParam0, 7))
		{
			iVar10 += 40;
		}
	}
	if (VEHICLE::IS_THIS_MODEL_A_CAR(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		iVar1 = 0;
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 0))
		{
			iVar1++;
		}
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 1))
		{
			iVar1++;
		}
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 2))
		{
			iVar1++;
		}
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 3))
		{
			iVar1++;
		}
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 4))
		{
			iVar1++;
		}
		if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, 5))
		{
			iVar1++;
		}
		iVar8 = (iVar8 + iVar1 * 25);
	}
	if (VEHICLE::GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(iParam0))
	{
		iVar8 += 15;
	}
	if (VEHICLE::GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(iParam0))
	{
		iVar8 += 15;
	}
	iVar1 = 0;
	iVar2 = 0;
	while (iVar2 < 8)
	{
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, iVar2, false))
		{
			iVar1++;
		}
		iVar2++;
	}
	iVar7 = iVar1 * 25;
	if (AUDIO::IS_VEHICLE_AUDIBLY_DAMAGED(iParam0))
	{
		iVar11 = 50;
	}
	iVar0 = (((((((iVar4 + iVar5) + iVar6) + iVar8) + iVar7) + iVar9) + iVar10) + iVar11);
	if (__LIB_0__::func_176(ENTITY::GET_ENTITY_MODEL(iParam0), 0))
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * Global_262145.f_12023 /* Tunable: LOW_SUPERMOD_REPAIR_VALUE_MULTI */));
		if (iVar0 > SYSTEM::FLOOR((4f * Global_262145.f_12023 /* Tunable: LOW_SUPERMOD_REPAIR_VALUE_MULTI */)))
		{
			iVar4 = Global_262145.f_12021 /* Tunable: LOW_SUPERMOD_REPAIR_SERVICE_COST */;
			iVar0 = (iVar0 + iVar4);
		}
		if (iVar0 > Global_262145.f_12022 /* Tunable: LOW_SUPERMOD_REPAIR_COST_MAX */)
		{
			iVar0 = Global_262145.f_12022 /* Tunable: LOW_SUPERMOD_REPAIR_COST_MAX */;
		}
	}
	else if (__LIB_1__::func_589(iParam0))
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * Global_262145.f_12026 /* Tunable: IE_SV_REPAIR_VALUE_MULTI */));
		if (iVar0 > SYSTEM::FLOOR((4f * Global_262145.f_12026 /* Tunable: IE_SV_REPAIR_VALUE_MULTI */)))
		{
			iVar4 = Global_262145.f_12024 /* Tunable: IE_SV_REPAIR_SERVICE_COST */;
			iVar0 = (iVar0 + iVar4);
		}
		if (iVar0 > Global_262145.f_12025 /* Tunable: IE_SV_REPAIR_COST_MAX */)
		{
			iVar0 = Global_262145.f_12025 /* Tunable: IE_SV_REPAIR_COST_MAX */;
		}
	}
	else
	{
		if (iVar0 > 0)
		{
			iVar4 = 50;
			iVar0 = (iVar0 + iVar4);
		}
		if (iVar0 > 1250)
		{
			iVar0 = 1250;
		}
	}
	return iVar0;
}

int func_705(int iParam0)//Position - 0x1A6141
{
	int iVar0;
	switch (iParam0)
	{
		case joaat("faction"):
			if (Global_262145.f_14734 /* Tunable: ENABLE_LOWRIDER2_FACTION */)
			{
				iVar0 = 2;
			}
			else
			{
				iVar0 = 1;
			}
			break;
		case joaat("slamvan"):
		case joaat("glendale"):
			if (!__LIB_0__::func_296(PLAYER::PLAYER_ID()))
			{
				iVar0 = 1;
			}
			else if (PLAYER::PLAYER_ID() != __LIB_0__::getMinusOneOrNull())
			{
				if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_2, 12))
				{
					iVar0 = 4;
				}
				else
				{
					iVar0 = 3;
				}
			}
			break;
		case joaat("imperator"):
		case joaat("imperator2"):
		case joaat("imperator3"):
		case joaat("deathbike"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("monster3"):
		case joaat("monster4"):
		case joaat("monster5"):
		case joaat("bruiser"):
		case joaat("bruiser2"):
		case joaat("bruiser3"):
		case joaat("impaler2"):
		case joaat("impaler3"):
		case joaat("impaler4"):
		case joaat("issi4"):
		case joaat("issi5"):
		case joaat("issi6"):
		case joaat("dominator4"):
		case joaat("dominator5"):
		case joaat("dominator6"):
		case joaat("zr380"):
		case joaat("zr3802"):
		case joaat("zr3803"):
		case joaat("cerberus"):
		case joaat("cerberus2"):
		case joaat("cerberus3"):
		case joaat("scarab"):
		case joaat("scarab2"):
		case joaat("scarab3"):
		case joaat("slamvan4"):
		case joaat("slamvan5"):
		case joaat("slamvan6"):
		case joaat("brutus"):
		case joaat("brutus2"):
		case joaat("brutus3"):
			iVar0 = 2;
			break;
		case joaat("gargoyle"):
		case joaat("ratloader"):
		case joaat("ratloader2"):
		case joaat("issi3"):
		case joaat("dominator"):
		case joaat("dominator2"):
		case joaat("impaler"):
			iVar0 = 3;
			break;
		default:
			iVar0 = 1;
			break;
	}
	return iVar0;
}

int func_706(int iParam0)//Position - 0x1B92D2
{
	if (iParam0 == __LIB_0__::getMinusOneOrNull())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 11);
}

int func_707(int iParam0)//Position - 0x1BE6BA
{
	if (__LIB_1__::func_511(iParam0, 1, 0) && !__LIB_1__::func_511(iParam0, 0, 0))
	{
		return 1;
	}
	return 0;
}

int func_708(int iParam0)//Position - 0x1BFACE
{
	if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_292, 29);
	}
	return 0;
}

void func_709(int iParam0, bool bParam1)//Position - 0x1C66BC
{
	if (bParam1)
	{
		if (iParam0 != __LIB_0__::getMinusOneOrNull())
		{
			if (!BitTest(Global_2689235[iParam0 /*453*/].f_197, 23))
			{
				MISC::SET_BIT(&(Global_2689235[iParam0 /*453*/].f_197), 23);
			}
		}
	}
	else if (iParam0 != __LIB_0__::getMinusOneOrNull())
	{
		if (BitTest(Global_2689235[iParam0 /*453*/].f_197, 23))
		{
			MISC::CLEAR_BIT(&(Global_2689235[iParam0 /*453*/].f_197), 23);
		}
	}
}

int func_710(int iParam0)//Position - 0x8944
{
	if (__LIB_12__::func_960(iParam0))
	{
		return 1;
	}
	return __LIB_13__::func_371(iParam0);
}

int func_711(char* sParam0, char* sParam1, int iParam2, int iParam3, bool bParam4)//Position - 0xB35D3
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	iVar0 = -1;
	HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	if (!iParam3 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam3);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	if (!bParam4)
	{
		iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
	}
	else
	{
		Global_2787505 = { __LIB_0__::func_819(PLAYER::PLAYER_ID()) };
		if (NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&Global_2787435, 35, &Global_2787505))
		{
			bVar1 = false;
			if (MISC::ARE_STRINGS_EQUAL(&(Global_2787435.f_22), "Leader") && Global_2787435.f_30 == 0)
			{
				bVar1 = true;
			}
			if (Global_2787435.f_21 > 0)
			{
				bVar2 = false;
			}
			else
			{
				bVar2 = true;
			}
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(bVar2, NETWORK::NETWORK_CLAN_IS_ROCKSTAR_CLAN(&Global_2787435, 35), &(Global_2787435.f_17), Global_2787435.f_30, bVar1, false, Global_2787435, PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()), Global_1576215, Global_1576216, Global_1576217);
		}
		else
		{
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		}
	}
	__LIB_2__::func_794(8, sParam0, 1, sParam1, 0, 0, 0, 0, 1, 0, 0, 0);
	return iVar0;
}

int func_712(int iParam0)//Position - 0xBC444
{
	int iVar0;
	iVar0 = -1;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 5:
		case 6:
		case 7:
		case 10:
		case 11:
		case 12:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
			iVar0 = __LIB_9__::func_126();
			break;
	}
	return iVar0;
}

int func_713(char* sParam0, char* sParam1, bool bParam2, int iParam3)//Position - 0x105E8F
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(sParam0) > 23)
	{
		return 0;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_2__::func_704(sParam0, sParam1) && Global_1574757.f_56 == Global_1574757.f_58)
	{
		return 0;
	}
	__LIB_2__::func_777();
	Global_1574757 = 3;
	StringCopy(&(Global_1574757.f_1), SCRIPT::GET_THIS_SCRIPT_NAME(), 32);
	Global_1574757.f_9 = MISC::GET_HASH_KEY(&(Global_1574757.f_1));
	StringCopy(&(Global_1574757.f_12), sParam0, 16);
	StringCopy(&(Global_1574757.f_16), sParam1, 64);
	Global_1574757.f_58 = iParam3;
	Global_1574757.f_56 = iParam3;
	__LIB_1__::func_699();
	__LIB_1__::func_698(bParam2);
	__LIB_1__::func_697();
	return 1;
}

int func_714(int iParam0)//Position - 0x13C08B
{
	if (__LIB_0__::func_796(PLAYER::PLAYER_ID()))
	{
		return __LIB_12__::func_536(PLAYER::PLAYER_ID(), iParam0);
	}
	return 0;
}

var func_715()//Position - 0x14C3A7
{
	var uVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (__LIB_1__::func_360(7989, -1, 0) >= 3600000)
	{
		MISC::SET_BIT(&uVar0, 14);
	}
	iVar1 = __LIB_1__::func_360(7987, -1, 0);
	iVar2 = __LIB_1__::func_360(7988, -1, 0);
	if ((iVar1 + iVar2) >= 50)
	{
		MISC::SET_BIT(&uVar0, 15);
	}
	iVar3 = __LIB_1__::func_360(7984, -1, 0);
	if (iVar3 >= 10)
	{
		MISC::SET_BIT(&uVar0, 16);
	}
	iVar4 = __LIB_1__::func_360(7982, -1, 0);
	if (iVar4 >= 10)
	{
		MISC::SET_BIT(&uVar0, 17);
	}
	iVar5 = __LIB_1__::func_360(7983, -1, 0);
	if (iVar5 >= 10)
	{
		MISC::SET_BIT(&uVar0, 18);
	}
	if (((((((((((__LIB_0__::func_137(140, -1) && __LIB_0__::func_137(142, -1)) && __LIB_0__::func_137(139, -1)) && __LIB_0__::func_137(149, -1)) && __LIB_0__::func_137(144, -1)) && __LIB_0__::func_137(145, -1)) && __LIB_0__::func_137(147, -1)) && __LIB_0__::func_137(146, -1)) && __LIB_0__::func_137(138, -1)) && __LIB_0__::func_137(143, -1)) && __LIB_0__::func_137(141, -1)) && __LIB_0__::func_137(148, -1))
	{
		MISC::SET_BIT(&uVar0, 19);
	}
	return uVar0;
}

int func_716(int iParam0)//Position - 0x14FE42
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			if (__LIB_12__::func_894(iVar0) == iVar1)
			{
				return iVar0;
			}
			iVar0++;
		}
	}
	return 145;
}

void func_717(int iParam0, int iParam1, int iParam2)//Position - 0x192F77
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		__LIB_1__::func_607();
		if (iParam2 == -1)
		{
			iParam2 = __LIB_1__::func_360(2042, -1, 0);
		}
		PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(iParam0, 5, __LIB_0__::func_533(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__::func_242(PLAYER::GET_PLAYER_PED(iParam0), iParam2), false);
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(iParam0, __LIB_0__::func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		PED::SET_PED_COMPONENT_VARIATION(PLAYER::GET_PLAYER_PED(iParam0), 5, __LIB_0__::func_533(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__::func_242(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__::func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		if (iParam1 == -1)
		{
			iParam1 = __LIB_1__::func_360(586, -1, 0);
		}
		if (__LIB_1__::func_520(1) && __LIB_0__::func_287(iParam0))
		{
			__LIB_3__::func_340(iParam0, __LIB_1__::func_715(Global_2824753), 0);
		}
		else
		{
			__LIB_3__::func_340(iParam0, iParam1, 0);
		}
		if (BitTest(Global_4718592.f_28, 4))
		{
			__LIB_3__::func_340(iParam0, Global_1836612, 1);
		}
		__LIB_0__::func_440(iParam0, iParam2);
		PED::SET_PED_RESET_FLAG(PLAYER::GET_PLAYER_PED(iParam0), 177, true);
	}
}

var func_718(struct<6> Param0, var uParam1)//Position - 0x1C3A96
{
	var uVar0;
	if (Param0.f_0 > 0)
	{
		__LIB_0__::func_140(&uVar0, Param0.f_0);
	}
	if (Param0.f_1 > 0)
	{
		__LIB_0__::func_141(&uVar0, __LIB_12__::func_578(Param0.f_1));
	}
	if (Param0.f_2 > 0)
	{
		__LIB_3__::func_425(&uVar0, Param0.f_2);
	}
	if (Param0.f_3 > 0)
	{
		__LIB_0__::func_142(&uVar0, Param0.f_3);
	}
	if (Param0.f_4 > 0)
	{
		__LIB_0__::func_143(&uVar0, Param0.f_4);
	}
	if (Param0.f_5 > 0)
	{
		__LIB_0__::func_144(&uVar0, Param0.f_5);
	}
	return uVar0;
}

void func_719()//Position - 0xA164
{
	__LIB_2__::func_777();
}

int func_720(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9)//Position - 0xCC5C8
{
	bool bVar0;
	int iVar1;
	struct<4> Var2;
	bVar0 = false;
	if (!__LIB_0__::func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__::getGlobal_1574918()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam1 == joaat("CATEGORY_WEAPON_AMMO") || iParam1 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	if (iParam2 == 0)
	{
		return 0;
	}
	iVar1 = __LIB_3__::func_534();
	if (iVar1 == -1)
	{
		if (!__LIB_13__::func_16(&iVar1, iParam0, iParam1, iParam3, iParam7, iParam9))
		{
			return 0;
		}
	}
	if (iVar1 != -1)
	{
		if (iParam8 != 0 && __LIB_3__::func_535(iParam1))
		{
			Var2.f_0 = iParam8;
			Var2.f_1 = iParam2;
			Var2.f_2 = iParam5;
			Var2.f_3 = iParam6;
		}
		else
		{
			Var2.f_0 = iParam2;
			Var2.f_1 = iParam8;
			Var2.f_2 = iParam5;
			Var2.f_3 = iParam6;
		}
		Global_4534105[iVar1 /*85*/].f_66.f_1 = Var2.f_2;
		Global_4534105[iVar1 /*85*/].f_66.f_15 = Var2.f_0;
		Global_4534105[iVar1 /*85*/].f_66.f_16 = Var2.f_1;
		if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_ADD_ITEM(&Var2, iParam4))
		{
			return 1;
		}
	}
	return 0;
}

bool func_721()//Position - 0xF7E0E
{
	return __LIB_11__::func_605(PLAYER::PLAYER_ID());
}

void func_722(int iParam0, bool bParam1)//Position - 0x139041
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5613 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	Global_23150.f_4309[Global_23150.f_5613] = iParam0;
	Global_23150.f_5613++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 2;
	Global_23150.f_6134++;
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_11__::func_251();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_3__::func_124(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_11__::func_250();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_723(int iParam0, int iParam1, int iParam2)//Position - 0x13ACE4
{
	if (iParam1 != -1)
	{
		__LIB_7__::func_946(iParam1);
	}
	if (iParam2 != -1)
	{
		__LIB_9__::func_357(iParam2);
	}
	__LIB_13__::func_134(iParam0, -1);
}

void func_724(int iParam0, int iParam1, int iParam2)//Position - 0x1B6131
{
	if (!__LIB_0__::func_945() || iParam1)
	{
		Global_1574582 = 1;
		__LIB_2__::func_445(1);
		if (((!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && !__LIB_1__::func_611()) && !__LIB_1__::func_456(PLAYER::PLAYER_ID())) && !__LIB_3__::func_126(PLAYER::PLAYER_ID()))
		{
			Global_1057408 = 1;
		}
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 1;
		STATS::PLAYSTATS_SWITCH_PASSIVE_MODE(true, iParam0, iParam2, -1);
	}
}

bool func_725(int iParam0)//Position - 0x1B7CE0
{
	return __LIB_1__::func_686(iParam0, 0, 1);
}

void func_726(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x1C3886
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	iVar0 = __LIB_0__::func_214(*uParam0);
	iVar1 = __LIB_0__::func_553(*uParam0);
	iVar2 = __LIB_0__::func_614(*uParam0);
	iVar3 = __LIB_0__::func_199(*uParam0);
	iVar4 = __LIB_0__::func_198(*uParam0);
	iVar5 = __LIB_0__::func_615(*uParam0);
	if (((((iParam6 == 0 && iParam5 == 0) && iParam4 == 0) && iParam3 == 0) && iParam2 == 0) && iParam1 == 0)
	{
		return;
	}
	if (iParam1 < 0)
	{
		return;
	}
	if (iParam2 < 0)
	{
		return;
	}
	if (iParam3 < 0)
	{
		return;
	}
	if (iParam4 < 0)
	{
		return;
	}
	if (iParam5 < 0)
	{
		return;
	}
	if (iParam6 < 0)
	{
		return;
	}
	iVar5 = (iVar5 + iParam1);
	while (iVar5 >= 60)
	{
		iParam2++;
		iVar5 = (iVar5 - 60);
	}
	iVar4 = (iVar4 + iParam2);
	while (iVar4 >= 60)
	{
		iParam3++;
		iVar4 = (iVar4 - 60);
	}
	iVar3 = (iVar3 + iParam3);
	while (iVar3 >= 24)
	{
		iParam4++;
		iVar3 = (iVar3 - 24);
	}
	iVar2 = (iVar2 + iParam4);
	iVar6 = __LIB_0__::func_139(iVar1, iVar0);
	while (iVar2 > iVar6)
	{
		iVar1++;
		iVar2 = (iVar2 - iVar6);
		if (iVar1 > 11)
		{
			iVar0++;
			iVar1 = (iVar1 - 12);
		}
		iVar6 = __LIB_0__::func_139(iVar1, iVar0);
	}
	iVar1 = (iVar1 + iParam5);
	while (iVar1 > 11)
	{
		iParam6++;
		iVar1 = (iVar1 - 12);
	}
	iVar0 = (iVar0 + iParam6);
	__LIB_8__::func_909(uParam0, iVar5, iVar4, iVar3, iVar2, iVar1, iVar0);
}

void func_727(int iParam0, var uParam1)//Position - 0x89E6D
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		__LIB_0__::func_209(iParam0, uParam1);
		MISC::CLEAR_BIT(&(uParam1->f_95), 0);
		if (BitTest(uParam1->f_77, 11))
		{
			MISC::SET_BIT(&(uParam1->f_95), 0);
		}
		if (__LIB_1__::func_524(iParam0))
		{
			MISC::SET_BIT(&(uParam1->f_95), 0);
		}
		if (__LIB_1__::func_523(iParam0))
		{
			MISC::SET_BIT(&(uParam1->f_95), 0);
		}
		if (VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(iParam0) && !VEHICLE::GET_DRIFT_TYRES_SET(iParam0))
		{
			uParam1->f_102 = 2;
		}
		else if (!VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(iParam0))
		{
			uParam1->f_102 = 1;
		}
		else if (VEHICLE::GET_DRIFT_TYRES_SET(iParam0))
		{
			uParam1->f_102 = 3;
		}
		if (uParam1->f_70 == 0)
		{
			uParam1->f_70 = 1;
		}
		uParam1->f_78 = AUDIO::GET_VEHICLE_DEFAULT_HORN(iParam0);
		uParam1->f_79 = AUDIO::GET_VEHICLE_HORN_SOUND_INDEX(iParam0);
		uParam1->f_80 = VEHICLE::GET_VEHICLE_ENVEFF_SCALE(iParam0);
		VEHICLE::GET_VEHICLE_EXTRA_COLOUR_5(iParam0, &(uParam1->f_97));
		VEHICLE::GET_VEHICLE_EXTRA_COLOUR_6(iParam0, &(uParam1->f_99));
		uParam1->f_98 = VEHICLE::GET_VEHICLE_LIVERY2(iParam0);
		iVar0 = __LIB_2__::func_972(iParam0, &(uParam1->f_94), &(uParam1->f_96));
		MISC::CLEAR_BIT(&(uParam1->f_95), 3);
		if (!iVar0 == __LIB_0__::getMinusOneOrNull())
		{
			NETWORK::NETWORK_HANDLE_FROM_PLAYER(iVar0, &(uParam1->f_81), 13);
			MISC::SET_BIT(&(uParam1->f_95), 1);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam1->f_95), 1);
		}
		if (iVar0 == PLAYER::PLAYER_ID())
		{
			MISC::SET_BIT(&(uParam1->f_95), 2);
			if (uParam1->f_94 == 1)
			{
				if (__LIB_0__::func_868(iParam0))
				{
					MISC::SET_BIT(&(uParam1->f_95), 3);
				}
			}
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam1->f_95), 2);
		}
		if (VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("deathbike2")))
		{
			uParam1->f_99 = __LIB_6__::func_66(__LIB_1__::func_562(uParam1->f_74, uParam1->f_75, uParam1->f_76));
		}
	}
}

int func_728()//Position - 0xB5A1C
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar2 = 0;
	while (iVar2 < 17)
	{
		iVar0 = __LIB_9__::func_8(iVar2);
		if (__LIB_9__::func_7(iVar0))
		{
			bVar1 = __LIB_2__::func_459(iVar0);
			if (!bVar1)
			{
				return 0;
			}
		}
		iVar2++;
	}
	return 1;
}

int func_729(int iParam0, bool bParam1, var uParam2)//Position - 0x150B3C
{
	int iVar0;
	bool bVar1;
	*uParam2 = 0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if (!STREAMING::IS_MODEL_A_VEHICLE(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if ((!__LIB_0__::func_521(iVar0, bParam1, uParam2) && !__LIB_0__::func_309(PLAYER::PLAYER_ID())) && !__LIB_1__::func_465(iParam0))
	{
		return 0;
	}
	if (__LIB_0__::func_309(PLAYER::PLAYER_ID()))
	{
		if (__LIB_0__::func_109(iVar0))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	bVar1 = false;
	if (__LIB_0__::func_396(PLAYER::PLAYER_ID()) && (VEHICLE::IS_THIS_MODEL_A_HELI(iVar0) || VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0)))
	{
		bVar1 = true;
	}
	if (((VEHICLE::IS_BIG_VEHICLE(iParam0) && !__LIB_0__::func_435(iParam0)) && !bVar1) && !(__LIB_0__::func_295(ENTITY::GET_ENTITY_MODEL(iParam0)) && __LIB_0__::func_362(PLAYER::PLAYER_ID())))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
				*uParam2 = 16;
				break;
			default:
				*uParam2 = 2;
				break;
		}
		return 0;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if ((__LIB_0__::func_108(iParam0) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("sentinel2")) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("issi2"))
		{
			*uParam2 = 2;
			return 0;
		}
	}
	return 1;
}

void func_730(int iParam0, var uParam1)//Position - 0x1B9D7B
{
	int iVar0;
	int iVar1;
	if (!BitTest(uParam1->f_4, 2))
	{
		return;
	}
	iVar0 = __LIB_11__::func_762();
	iVar1 = __LIB_0__::func_199(iVar0);
	switch (iParam0)
	{
		case 133:
		case 134:
		case 201:
		case 202:
			if (__LIB_0__::func_516(iParam0))
			{
				if (iVar1 < 19)
				{
					if (iVar1 >= 7)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 19)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 7)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 199:
		case 200:
		case 203:
		case 204:
			if (__LIB_0__::func_516(iParam0))
			{
				if (iVar1 < 18)
				{
					if (iVar1 >= 7)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 18)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 7)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 141:
		case 142:
			if (__LIB_0__::func_516(iParam0))
			{
				if ((SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_heist")) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_setup1")) == 0) && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[4])
				{
					if (iVar1 < 21)
					{
						if (iVar1 >= 7)
						{
							Global_113386.f_7261[iParam0] = 0;
							OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
						}
					}
					else
					{
						return;
					}
				}
				else if (!Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[4])
				{
					Global_113386.f_7261[iParam0] = 0;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[4])
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_heist")) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_setup1")) == 0)
			{
				if (iVar1 >= 21)
				{
					if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 18f)
					{
						Global_113386.f_7261[iParam0] = 1;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else if (iVar1 < 7)
				{
					if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 18f)
					{
						Global_113386.f_7261[iParam0] = 1;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
			}
			break;
		case 145:
		case 146:
		case 143:
		case 144:
			if (__LIB_0__::func_516(iParam0))
			{
				if (iVar1 < 20)
				{
					if (iVar1 >= 9)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 20)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 40f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 9)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 40f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 147:
		case 148:
			if (!__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 152:
		case 153:
		case 154:
		case 155:
		case 156:
		case 157:
			if (!__LIB_0__::func_516(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("assassin_valet")) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("assassin_valet")) > 0)
			{
				Global_113386.f_7261[iParam0] = 0;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 158:
		case 159:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[70 /*34*/].f_6) == 0)
			{
				if (!__LIB_0__::func_516(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 160:
		case 161:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("omega2")) == 0)
			{
				if (!__LIB_0__::func_516(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 70:
		case 71:
		case 72:
			if (!__LIB_0__::func_516(iParam0) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[26 /*34*/].f_6) == 0)
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			else
			{
				return;
			}
			break;
		case 101:
		case 102:
		case 103:
		case 104:
			if (!__LIB_0__::func_516(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[43 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 190:
		case 191:
			if (!__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 193:
			if (!__LIB_0__::func_516(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[93 /*34*/].f_6) > 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 198:
			if (!__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 80:
			if (!__LIB_0__::func_516(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[8 /*34*/].f_6) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[10 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 205:
		case 206:
			if (!__LIB_0__::func_516(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[47 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 207:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[70 /*34*/].f_6) == 0)
			{
				if (!__LIB_0__::func_516(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 208:
		case 209:
		case 211:
		case 210:
		case 212:
		case 213:
		case 214:
		case 215:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[48 /*34*/].f_6) == 0)
			{
				if (!__LIB_0__::func_516(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 99:
		case 100:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[39 /*34*/].f_6) == 0)
			{
				if (!__LIB_0__::func_516(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 216:
			if (!__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 217:
		case 218:
			if (!__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 219:
		case 220:
		case 221:
		case 222:
			if (__LIB_0__::func_516(iParam0))
			{
				Global_113386.f_7261[iParam0] = 0;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
	}
}

int func_731(int iParam0, var* uParam1)//Position - 0x13D72
{
	int iVar0;
	bool bVar1;
	if (NETWORK::NETWORK_IS_HANDLE_VALID(uParam1, 13) && NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(uParam1))
	{
		iVar0 = NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(uParam1);
	}
	else
	{
		iVar0 = __LIB_0__::getMinusOneOrNull();
	}
	bVar1 = false;
	if (iVar0 == PLAYER::PLAYER_ID())
	{
		if (__LIB_11__::func_970(15, 0))
		{
			bVar1 = true;
		}
		else if (__LIB_1__::func_375(1))
		{
			bVar1 = true;
		}
	}
	else
	{
		bVar1 = true;
	}
	if (((((((!(ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false)) || !NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0)) || !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true)) || !((NETWORK::NETWORK_IS_HANDLE_VALID(uParam1, 13) && NETWORK::NETWORK_CLAN_SERVICE_IS_VALID()) && NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(uParam1))) || iVar0 == __LIB_0__::getMinusOneOrNull()) || !__LIB_0__::func_156(iVar0, 0, 0)) || !bVar1) || __LIB_1__::func_550(iParam0))
	{
		return 0;
	}
	return 1;
}

void func_732()//Position - 0x1E0E9
{
	if (!Global_2667225.f_712)
	{
		Global_2667225.f_712 = 1;
	}
	__LIB_3__::func_308(0);
	if (Global_2667225.f_2673)
	{
		__LIB_12__::func_759();
		Global_2667225.f_2673 = 0;
	}
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_215 = 11;
}

void func_733(bool bParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14)//Position - 0xD00DE
{
	if (bParam0)
	{
		if (__LIB_1__::func_739())
		{
			__LIB_2__::func_26();
		}
		Global_2667225.f_714.f_518 = SCRIPT::GET_ID_OF_THIS_THREAD();
		Global_2667225.f_714.f_504 = iParam1;
		Global_2667225.f_714.f_505 = iParam2;
		Global_2667225.f_714.f_506 = iParam10;
		__LIB_2__::func_91();
		__LIB_2__::func_995(8, 0, 0, 0, 0);
		Global_2667225.f_714.f_507 = iParam11;
		Global_2667225.f_714.f_512 = iParam3;
		Global_2667225.f_714.f_513 = iParam4;
		Global_2667225.f_714.f_510 = iParam5;
		Global_2667225.f_714.f_511 = iParam6;
		Global_2667225.f_714.f_514 = iParam7;
		Global_2667225.f_714.f_515 = iParam8;
		Global_2667225.f_714.f_516 = iParam9;
		Global_2667225.f_714.f_517 = iParam14;
		Global_2667225.f_714.f_508 = iParam12;
		Global_2667225.f_714.f_509 = iParam13;
		Global_2667225.f_1753 = 1;
	}
	else
	{
		__LIB_11__::func_279();
	}
}

int func_734(var uParam0)//Position - 0xFBE2D
{
	int iVar0;
	if (uParam0->f_1 == 1)
	{
		if (Global_2703735.f_2722)
		{
			return 0;
		}
	}
	__LIB_13__::func_407(uParam0, uParam0->f_17);
	__LIB_1__::func_742(uParam0);
	if (__LIB_0__::func_177())
	{
		__LIB_1__::func_742(uParam0);
	}
	if (__LIB_1__::func_258(uParam0->f_1))
	{
		__LIB_2__::func_168();
		if (Global_2703735.f_2400[0 /*80*/].f_2 == 0)
		{
			Global_2703735.f_2400[0 /*80*/] = { *uParam0 };
			if (__LIB_0__::func_703(uParam0->f_69, 8192))
			{
				Global_1931432 = 1;
			}
			return 1;
		}
		if (((Global_2703735.f_2400[0 /*80*/].f_1 == 13 || Global_2703735.f_2400[0 /*80*/].f_1 == 53) || Global_2703735.f_2400[0 /*80*/].f_1 == 54) || Global_2703735.f_2400[0 /*80*/].f_1 == 58)
		{
			Global_2703735.f_2400[0 /*80*/].f_2 = 5;
		}
		iVar0 = 2;
		while (iVar0 >= 1)
		{
			Global_2703735.f_2400[iVar0 + 1 /*80*/] = { Global_2703735.f_2400[iVar0 /*80*/] };
			iVar0 = (iVar0 + -1);
		}
		Global_2703735.f_2400[1 /*80*/] = { *uParam0 };
		return 1;
	}
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (Global_2703735.f_2400[iVar0 /*80*/].f_2 == 0)
		{
			Global_2703735.f_2400[iVar0 /*80*/] = { *uParam0 };
			if (iVar0 == 0)
			{
				__LIB_2__::func_168();
			}
			return 1;
		}
		else
		{
			if (uParam0->f_1 == 1)
			{
				__LIB_1__::func_330(&(Global_2703735.f_2400[iVar0 /*80*/].f_69), 2);
				Global_2703735.f_2400[iVar0 /*80*/].f_2 = 5;
			}
			if (uParam0->f_1 == 86 && !__LIB_0__::func_703(uParam0->f_69, 128))
			{
				if (__LIB_1__::func_256(Global_2703735.f_2400[iVar0 /*80*/].f_1))
				{
					Global_2703735.f_2400[iVar0 /*80*/].f_2 = 5;
					__LIB_1__::func_330(&(Global_2703735.f_2400[iVar0 /*80*/].f_69), 1);
				}
			}
		}
		iVar0++;
	}
	return 0;
}

struct<14> func_735(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1D17D2
{
	__LIB_0__::func_41();
	if (iParam0 == joaat("Player_Zero"))
	{
		__LIB_13__::func_403(iParam1, iParam2);
	}
	else if (iParam0 == joaat("Player_One"))
	{
		__LIB_13__::func_402(iParam1, iParam2);
	}
	else if (iParam0 == joaat("Player_Two"))
	{
		__LIB_13__::func_401(iParam1, iParam2);
	}
	return Global_78130[0 /*14*/];
}

int func_736()//Position - 0x112F
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1612.2834f, -3021.7915f, -76.18069f, -1612.2198f, -3005.2026f, -74.20517f, 12.75f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

int func_737()//Position - 0x2398
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.51935f, 5163.8555f, -86.59737f, 211.7083f, 5163.8794f, -83.6007f, 6.25f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

Vector3 func_738()//Position - 0x2505
{
	return 0.5f, -0.5f, 2f;
}

Vector3 func_739()//Position - 0x258F
{
	return -0.5f, -0.5f, 0f;
}

int func_740(int iParam0)//Position - 0x93F
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__::func_138(__LIB_1__::func_394(), 4, 5);
		case 2:
			return 5;
		default:
	}
	return 0;
}

int func_741(bool bParam0, int iParam1)//Position - 0x29865
{
	struct<82> Var0;
	if (__LIB_0__::func_374(bParam0))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_0__::func_378(bParam0, &Var0, iParam1);
		return Var0.f_0;
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

int func_742(int iParam0, int iParam1)//Position - 0x2C1F0
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()) && iParam1)
		{
			if (__LIB_0__::func_570(PLAYER::PLAYER_PED_ID(), iParam0))
			{
				PED::SET_GROUP_SEPARATION_RANGE(__LIB_0__::func_495(), 50f);
				return 1;
			}
		}
		else if (PED::IS_PED_GROUP_MEMBER(iParam0, __LIB_0__::func_495()))
		{
			PED::SET_GROUP_SEPARATION_RANGE(__LIB_0__::func_495(), 50f);
			return 1;
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

struct<6> func_743()//Position - 0x37B24
{
	struct<6> Var0;
	int iVar1;
	StringCopy(&Var0, "NULL", 24);
	if (Global_21605 == 4)
	{
		iVar1 = AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE();
		iVar1 = (iVar1 + Global_22615);
		if (iVar1 > -1)
		{
			return Global_20473[iVar1 /*6*/];
		}
		else
		{
			return Var0;
		}
	}
	return Var0;
}

void func_744(int iParam0, bool bParam1, int iParam2)//Position - 0x9CFCB
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	if (iParam2 != -2)
	{
		Global_1574938 = iParam2;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_1574935[iVar0]), iVar1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1574935[iVar0]), iVar1);
	}
}

bool func_745()//Position - 0x9D034
{
	return Global_32236;
}

int func_746()//Position - 0x9D18B
{
	if (__LIB_0__::func_52())
	{
		if (!NETWORK::NETWORK_IS_NP_AVAILABLE())
		{
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 4)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 2)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 1)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 5)
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_747(var uParam0, int iParam1)//Position - 0x9D328
{
	bool bVar0;
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	bVar0 = false;
	if (iParam1 == 3 || iParam1 == __LIB_0__::func_482(Global_113386.f_2363.f_539.f_4323))
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			bVar0 = true;
		}
	}
	if (bVar0)
	{
		uParam0->f_7 = iParam1;
		return 1;
	}
	uParam0->f_39 = 0;
	return 0;
}

bool func_748()//Position - 0x9DA90
{
	return Global_1577868;
}

int func_749(bool bParam0)//Position - 0x9DA9C
{
	if (Global_23011.f_130)
	{
		return 0;
	}
	if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/) || (!bParam0 && PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/)))
	{
		return 1;
	}
	if (MISC::IS_PC_VERSION())
	{
		if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
			{
				return 1;
			}
		}
		if (!bParam0)
		{
			if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_750(int iParam0)//Position - 0xA84FA
{
	struct<2> Var0;
	Var0 = { __LIB_7__::func_697(iParam0) };
	if (Var0.f_1 != -1 && BitTest(Global_38401[Var0.f_1], Var0.f_0))
	{
		return 1;
	}
	return 0;
}

void func_751(int iParam0, bool bParam1)//Position - 0xA852B
{
	struct<2> Var0;
	Var0 = { __LIB_7__::func_697(iParam0) };
	if (Var0.f_1 == -1)
	{
		return;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_38401[Var0.f_1]), Var0.f_0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_38401[Var0.f_1]), Var0.f_0);
	}
}

void func_752(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x1FB17
{
	int iVar0;
	iVar0 = __LIB_0__::func_650(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_753(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, int iParam6)//Position - 0x20060
{
	int iVar0;
	iVar0 = __LIB_0__::func_650(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

int func_754(int* iParam0)//Position - 0x2C164
{
	if (BitTest(iParam0->f_13, 12))
	{
		if (__LIB_0__::func_569(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_0__::func_494(1, 0, 1) || BitTest(iParam0->f_13, 7))
			{
				return 1;
			}
		}
	}
	else if (__LIB_0__::func_494(1, 0, 1) || BitTest(iParam0->f_13, 7))
	{
		return 1;
	}
	return 0;
}

int func_755(int* iParam0, int iParam1)//Position - 0x2E369
{
	if (iParam1 != 1 || HUD::IS_SUBTITLE_PREFERENCE_SWITCHED_ON())
	{
		if (HUD::IS_MESSAGE_BEING_DISPLAYED())
		{
			return 1;
		}
		if (__LIB_0__::func_574(iParam0))
		{
			return 1;
		}
	}
	if (iParam1 != 2 || HUD::IS_SUBTITLE_PREFERENCE_SWITCHED_ON())
	{
		if (__LIB_0__::func_75() && !__LIB_0__::func_568())
		{
			return 1;
		}
	}
	return 0;
}

void func_756(int iParam0)//Position - 0x4EBB1
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID() && PED::GET_PED_MAX_HEALTH(iParam0) == 200)
		{
			PED::SET_PED_MAX_HEALTH(iParam0, SYSTEM::ROUND((IntToFloat(PED::GET_PED_MAX_HEALTH(iParam0)) * Global_262145.f_106 /* Tunable: MAX_HEALTH_MULTIPLIER */)));
		}
		if (Global_113386.f_2363.f_539.f_290[bVar0] <= 0f)
		{
			Global_113386.f_2363.f_539.f_290[bVar0] = 100f;
		}
		else if (Global_113386.f_2363.f_539.f_290[bVar0] <= 10f)
		{
			Global_113386.f_2363.f_539.f_290[bVar0] = 10f;
		}
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((Global_113386.f_2363.f_539.f_290[bVar0] / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

void func_757(int iParam0)//Position - 0x4EE81
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[bVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_758(int iParam0)//Position - 0x4EEC8
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[bVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_759(int iParam0)//Position - 0x4EF06
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[bVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[bVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_760(int iParam0)//Position - 0x4F093
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[bVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

void func_761(int iParam0)//Position - 0x4F0CF
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[bVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

void func_762(int iParam0)//Position - 0x9A889
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[bVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_0__::func_445(&Var3, __LIB_0__::func_416(iVar1, bVar2), __LIB_0__::func_415(bVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_763(int iParam0)//Position - 0x9A984
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[bVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

int func_764(int iParam0)//Position - 0x9D39F
{
	if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive || Global_3)
	{
		if (!Global_78319 || (Global_78319 && iParam0 != __LIB_0__::func_482(__LIB_0__::func_563())))
		{
			if (!__LIB_0__::func_562(__LIB_0__::func_484(iParam0)))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_765(int iParam0)//Position - 0x9D452
{
	if ((Global_113386.f_9085_FLOW_STRUCT_isGameflowActive || Global_3) || __LIB_0__::func_2(0))
	{
		if (!Global_78319 || (Global_78319 && iParam0 != __LIB_0__::func_482(__LIB_0__::func_563())))
		{
			if (((iParam0 == 0 && !__LIB_0__::func_425(115)) || (iParam0 == 1 && !__LIB_0__::func_425(116))) || (iParam0 == 2 && !__LIB_0__::func_425(117)))
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_766(var uParam0, int iParam1, var uParam2)//Position - 0x9D972
{
	switch (iParam1)
	{
		case 0:
			*uParam2 = 0;
			break;
		case 1:
			*uParam2 = 2;
			break;
		case 2:
			*uParam2 = 1;
			break;
		case 3:
			*uParam2 = 3;
			break;
	}
	if (iParam1 != 4)
	{
		if (uParam0->f_24[iParam1] == 0)
		{
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("prologue1")) > 0)
			{
				if (iParam1 == 0)
				{
					if (__LIB_0__::func_425(124))
					{
						*uParam2 = 8;
					}
					else
					{
						*uParam2 = 7;
					}
				}
				else if (iParam1 == 2)
				{
					if (__LIB_0__::func_425(125))
					{
						*uParam2 = 10;
					}
					else
					{
						*uParam2 = 9;
					}
				}
			}
		}
		else if (uParam0->f_24[iParam1] == 1)
		{
			if (iParam1 == 0)
			{
				*uParam2 = 6;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = 4;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = 5;
			}
		}
		else if (uParam0->f_24[iParam1] == 2)
		{
			*uParam2 = 7;
		}
		else if (uParam0->f_24[iParam1] == 3)
		{
			*uParam2 = 8;
		}
		else if (uParam0->f_24[iParam1] == 4)
		{
			*uParam2 = 9;
		}
		else if (uParam0->f_24[iParam1] == 5)
		{
			*uParam2 = 10;
		}
	}
}

void func_767()//Position - 0x1FD3
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_0__::func_518(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_0__::func_650(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__::func_374(iVar0) && (!__LIB_0__::isGlobal_43052EqualsValue(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__::func_374(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_768(int iParam0, int iParam1, bool bParam2)//Position - 0x26D2
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_100493.f_1393[iParam0]), iParam1);
	}
	else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_0__::func_3() == 0)
		{
			iVar0 = __LIB_0__::func_369(__LIB_0__::func_326(iParam0), -1, 0);
			MISC::SET_BIT(&iVar0, iParam1);
			__LIB_0__::func_413(__LIB_0__::func_326(iParam0), iVar0, -1, 1, 0);
		}
	}
	else
	{
		MISC::SET_BIT(&(Global_113386.f_668[iParam0]), iParam1);
	}
}

int func_769(char* sParam0)//Position - 0x3B62C
{
	if (!__LIB_0__::func_669(1, 1, 0))
	{
		if ((!MISC::IS_STRING_NULL_OR_EMPTY(sParam0) && __LIB_0__::func_1(sParam0)) || __LIB_0__::func_1("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */))
		{
			HUD::CLEAR_HELP(true);
		}
		return 0;
	}
	switch (Global_43052)
	{
		case 0:
		case 3:
			if (__LIB_0__::func_333(0) < 3)
			{
				return 1;
			}
			break;
		case 4:
			if (__LIB_0__::func_333(0) < 1)
			{
				return 1;
			}
			break;
		case 5:
		case 15:
			if (__LIB_0__::func_333(0) < 1)
			{
				return 1;
			}
			break;
		default:
			break;
	}
	return 0;
}

int func_770(bool bParam0, bool bParam1, bool bParam2)//Position - 0x3BBBC
{
	if (!__LIB_0__::func_669(bParam0, bParam1, bParam2))
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!PLAYER::IS_PLAYER_TARGETTING_ANYTHING(PLAYER::PLAYER_ID()))
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/, true);
			if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_771(bool bParam0, bool bParam1, bool bParam2)//Position - 0x3BC0E
{
	if (!__LIB_0__::func_669(bParam0, bParam1, bParam2))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/, true);
		if (CAM::IS_FOLLOW_VEHICLE_CAM_ACTIVE())
		{
			if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/))
			{
				CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
				return 1;
			}
		}
	}
	return 0;
}

int func_772(bool bParam0, bool bParam1, bool bParam2)//Position - 0x3BC57
{
	if (!__LIB_0__::func_669(bParam0, bParam1, bParam2))
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!PLAYER::IS_PLAYER_TARGETTING_ANYTHING(PLAYER::PLAYER_ID()))
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/, true);
			if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/) && MISC::GET_GAME_TIMER() > Global_116)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_773(bool bParam0, bool bParam1, bool bParam2)//Position - 0x3BCB6
{
	if (!__LIB_0__::func_669(bParam0, bParam1, bParam2))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/, true);
		if (CAM::IS_FOLLOW_VEHICLE_CAM_ACTIVE())
		{
			if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/) && MISC::GET_GAME_TIMER() > Global_116)
			{
				CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
				return 1;
			}
		}
	}
	return 0;
}

void func_774(bool bParam0, int iParam1)//Position - 0x4DD70
{
	switch (bParam0)
	{
		case 0:
			__LIB_0__::func_635(4, *iParam1);
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			break;
		case 1:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[2 /*6*/])
			{
				__LIB_0__::func_635(4, *iParam1);
			}
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[126])
			{
				__LIB_0__::func_635(12, *iParam1);
			}
			break;
		case 2:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[20 /*6*/])
			{
				__LIB_0__::func_635(4, *iParam1);
			}
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			break;
	}
}

void func_775(bool bParam0)//Position - 0x4DECB
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		__LIB_0__::func_636(bParam0, iVar0);
		iVar0++;
	}
}

void func_776(int iParam0, int iParam1, bool bParam2)//Position - 0x222D
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam2)
	{
		MISC::CLEAR_BIT(&(Global_100493.f_1393[iParam0]), iParam1);
	}
	else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_0__::func_3() == 0)
		{
			iVar0 = __LIB_0__::func_369(__LIB_0__::func_326(iParam0), -1, 0);
			MISC::CLEAR_BIT(&iVar0, iParam1);
			__LIB_0__::func_413(__LIB_0__::func_326(iParam0), iVar0, -1, 1, 0);
		}
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_113386.f_668[iParam0]), iParam1);
	}
}

void func_777(int iParam0, bool bParam1, bool bParam2)//Position - 0x9A9C7
{
	bool bVar0;
	int iVar1;
	int iVar2;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		__LIB_0__::func_672(iParam0, &(Global_113386.f_2363.f_539.f_298[bVar0 /*477*/]), bParam1);
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			HUD::HUD_SET_WEAPON_WHEEL_TOP_SLOT(Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0]);
			if (bParam2)
			{
				if (iVar1 == Global_113386.f_2363.f_539.f_1763 || (Global_113386.f_2363.f_539.f_1763 == -1 && iVar1 == 4))
				{
					if (Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0] != 0 && Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0] != joaat("WEAPON_MOLOTOV"))
					{
						if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0], false))
						{
							WEAPON::SET_CURRENT_PED_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0], true);
						}
					}
				}
			}
			iVar1++;
		}
		if (bVar0 == 0)
		{
			STATS::STAT_GET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (bVar0 == 1)
		{
			STATS::STAT_GET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (bVar0 == 2)
		{
			STATS::STAT_GET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), iVar2);
	}
}

void func_778(int iParam0, int iParam1)//Position - 0x8676
{
	switch (iParam0)
	{
		case 0:
			__LIB_12__::func_865(iParam1);
			break;
		case 2:
			__LIB_12__::func_864(iParam1);
			break;
		case 3:
			__LIB_12__::func_896(iParam1);
			break;
		case 4:
			__LIB_12__::func_863(iParam1);
			break;
		case 6:
			__LIB_12__::func_862(iParam1);
			break;
		case 5:
			__LIB_12__::func_861(iParam1);
			break;
		case 8:
			__LIB_12__::func_860(iParam1);
			break;
		case 9:
			__LIB_12__::func_859(iParam1);
			break;
		case 10:
			__LIB_12__::func_858(iParam1);
			break;
		case 1:
			__LIB_12__::func_857(iParam1);
			break;
		case 7:
			__LIB_12__::func_856(iParam1);
			break;
		case 11:
			__LIB_12__::func_855(iParam1);
			break;
		case 12:
			__LIB_12__::func_854(iParam1);
			break;
		case 13:
			__LIB_12__::func_853(iParam1);
			break;
		case 14:
			__LIB_12__::func_852(iParam1);
			break;
	}
}

void func_779(int iParam0, int iParam1)//Position - 0x12638
{
	switch (iParam0)
	{
		case 0:
			__LIB_12__::func_879(iParam1);
			break;
		case 2:
			__LIB_12__::func_878(iParam1);
			break;
		case 3:
			__LIB_12__::func_897(iParam1);
			break;
		case 4:
			__LIB_12__::func_877(iParam1);
			break;
		case 6:
			__LIB_12__::func_876(iParam1);
			break;
		case 5:
			__LIB_12__::func_875(iParam1);
			break;
		case 8:
			__LIB_12__::func_874(iParam1);
			break;
		case 9:
			__LIB_12__::func_873(iParam1);
			break;
		case 10:
			__LIB_12__::func_872(iParam1);
			break;
		case 1:
			__LIB_12__::func_871(iParam1);
			break;
		case 7:
			__LIB_12__::func_870(iParam1);
			break;
		case 11:
			__LIB_12__::func_869(iParam1);
			break;
		case 12:
			__LIB_12__::func_868(iParam1);
			break;
		case 13:
			__LIB_12__::func_867(iParam1);
			break;
		case 14:
			__LIB_12__::func_866(iParam1);
			break;
	}
}

void func_780(int iParam0, int iParam1)//Position - 0x19EC8
{
	switch (iParam0)
	{
		case 0:
			__LIB_12__::func_893(iParam1);
			break;
		case 2:
			__LIB_12__::func_892(iParam1);
			break;
		case 3:
			__LIB_12__::func_898(iParam1);
			break;
		case 4:
			__LIB_12__::func_891(iParam1);
			break;
		case 6:
			__LIB_12__::func_890(iParam1);
			break;
		case 5:
			__LIB_12__::func_889(iParam1);
			break;
		case 8:
			__LIB_12__::func_888(iParam1);
			break;
		case 9:
			__LIB_12__::func_887(iParam1);
			break;
		case 10:
			__LIB_12__::func_886(iParam1);
			break;
		case 1:
			__LIB_12__::func_885(iParam1);
			break;
		case 7:
			__LIB_12__::func_884(iParam1);
			break;
		case 11:
			__LIB_12__::func_883(iParam1);
			break;
		case 12:
			__LIB_12__::func_882(iParam1);
			break;
		case 13:
			__LIB_12__::func_881(iParam1);
			break;
		case 14:
			__LIB_12__::func_880(iParam1);
			break;
	}
}

int func_781(var uParam0)//Position - 0xA119B
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false) && !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_0__::func_329())
		{
			*uParam0 = __LIB_12__::func_900(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), 6, -1, 0, 1, -1);
			if (__LIB_0__::func_529(*uParam0) && !__LIB_0__::func_545(*uParam0))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_782(int iParam0, int iParam1, bool bParam2)//Position - 0x33164
{
	int iVar0;
	if (iParam0 == 11 || iParam0 == -1)
	{
		return;
	}
	if (iParam1 < 0 || iParam1 >= 32)
	{
		return;
	}
	iVar0 = BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_219[iParam0], iParam1);
	if (iVar0 == bParam2)
	{
		return;
	}
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_219[iParam0]), iParam1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_219[iParam0]), iParam1);
	}
}

void func_783()//Position - 0x3F0DD
{
	AUDIO::START_PRELOADED_CONVERSATION();
	Global_22597 = 0;
}

int func_784(struct<3> Param0, float fParam1, float fParam2)//Position - 0x4E08A
{
	if (CAM::IS_SPHERE_VISIBLE(Param0, fParam1))
	{
		if (!ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param0, fParam2, fParam2, fParam2, false, false, 0))
		{
			return 0;
		}
		else if (CAM::IS_SCREEN_FADED_OUT())
		{
			return 0;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

float func_785(float fParam0, float fParam1, float fParam2)//Position - 0x4E28C
{
	while (fParam0 < fParam1)
	{
		fParam0 = (fParam0 + 360f);
	}
	while (fParam0 > fParam2)
	{
		fParam0 = (fParam0 - 360f);
	}
	return fParam0;
}

int func_786(var uParam0)//Position - 0x51E94
{
	int iVar0;
	if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_0__::func_575(iVar0, uParam0, 0))
		{
			return 1;
		}
	}
	return 0;
}

void func_787(int* iParam0, var uParam1)//Position - 0x53564
{
	iParam0->f_21 = uParam1;
	if (!BitTest(iParam0->f_13, 26))
	{
		MISC::SET_BIT(&(iParam0->f_13), 26);
	}
}

void func_788()//Position - 0x597D5
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 35)
	{
		HUD::THEFEED_REMOVE_ITEM(Global_113386.f_14141[iVar0 /*104*/].f_16);
		iVar0++;
	}
}

void func_789()//Position - 0x598F3
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), false, false, false, false, false, false, false, false);
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 157, true);
		ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97810[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_97810[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_97810[iVar0], false, false, false, false, false, false, false, false);
				ENTITY::SET_ENTITY_INVINCIBLE(Global_97810[iVar0], false);
			}
		}
		iVar0++;
	}
	if ((Global_43052 != 0 && Global_43052 != 3) && Global_43052 != 2)
	{
		PLAYER::SET_MAX_WANTED_LEVEL(5);
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
	}
}

Vector3 func_790()//Position - 0x5C01F
{
	return 2.55f, 5.665f, 2.55f;
}

int func_791()//Position - 0x5C036
{
	return Global_106934.f_2890.f_12.f_66;
}

int func_792(var uParam0, int iParam1)//Position - 0x508FA
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_0__::func_575(iVar0, uParam0, iParam1))
		{
			return 1;
		}
	}
	return 0;
}

void func_793(var uParam0, char* sParam1, char* sParam2, bool bParam3)//Position - 0x51A6C
{
	if (!bParam3)
	{
		if (!MISC::IS_STRING_NULL(sParam1))
		{
			if (!MISC::ARE_STRINGS_EQUAL(sParam1, ""))
			{
				__LIB_0__::func_578(sParam1, sParam2, 7500, 1);
			}
		}
	}
	uParam0->f_10 = MISC::GET_GAME_TIMER();
}

int func_794(int iParam0, bool bParam1, int iParam2)//Position - 0x2F4D
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (Global_97772[iVar0] == iParam0)
			{
				if (bParam1 == 145 || bParam1 == Global_97782[iVar0])
				{
					if (iParam2 == 0 || ENTITY::GET_ENTITY_MODEL(iParam0) == __LIB_13__::func_741(bParam1, iParam2))
					{
						return 1;
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_795(var uParam0, int iParam1, struct<3> Param2, int iParam3)//Position - 0x52C3F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (Global_1581357 == 1)
	{
		return;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		__LIB_0__::func_345(uParam0, 0, 0);
	}
	if (__LIB_0__::func_78(Param2, 0f, 0f, 0f, 0))
	{
		if (ENTITY::IS_ENTITY_A_PED(iParam1))
		{
			iVar0 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1);
			if (!PED::IS_PED_IN_ANY_VEHICLE(iVar0, false))
			{
				if (PED::IS_PED_A_PLAYER(iVar0))
				{
					if (!__LIB_1__::func_394())
					{
						Param2 = { 0f, 0f, 1f };
					}
				}
				else if (PED::IS_PED_MALE(iVar0))
				{
					Param2 = { 0f, 0f, 1f };
				}
			}
		}
	}
	CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
	iVar1 = uParam0->f_9;
	iVar2 = uParam0->f_10;
	if (iParam3 == joaat("VEHICLE_HIGH_ZOOM_HINT_HELPER"))
	{
		if (iVar1 < 1500)
		{
			iVar1 = 1500;
		}
		if (iVar2 < 1500)
		{
			iVar2 = 1500;
		}
	}
	CAM::SET_GAMEPLAY_ENTITY_HINT(iParam1, Param2, true, -1, iVar1, iVar2, iParam3);
	iVar3 = 2048;
	iVar4 = 3;
	TASK::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, -1, iVar3, iVar4);
	GRAPHICS::ANIMPOSTFX_PLAY("FocusIn", 0, false);
	AUDIO::START_AUDIO_SCENE("HINT_CAM_SCENE");
	AUDIO::PLAY_SOUND_FRONTEND(-1, "FocusIn", "HintCamSounds", true);
	uParam0->f_11 = 1;
	uParam0->f_8 = MISC::GET_GAME_TIMER();
	uParam0->f_1 = 1;
	*uParam0 = 0;
}

int func_796(var uParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x52D82
{
	if (uParam0->f_1)
	{
		if (MISC::GET_GAME_TIMER() >= (uParam0->f_8 + uParam0->f_9))
		{
			uParam0->f_1 = 0;
		}
	}
	switch (uParam0->f_5)
	{
		case 0:
			uParam0->f_7 = 0;
			if (uParam0->f_6 == 0)
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					if (__LIB_13__::func_773(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 1;
						uParam0->f_7 = 1;
					}
				}
				else if (__LIB_13__::func_772(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			else if (uParam0->f_6 == 1)
			{
				if (__LIB_13__::func_772(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			else if (uParam0->f_6 == 2)
			{
				if (__LIB_13__::func_773(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			if (__LIB_0__::func_332(uParam0))
			{
				uParam0->f_7 = 1;
				uParam0->f_5 = 4;
			}
			break;
		case 1:
			if ((MISC::GET_GAME_TIMER() - uParam0->f_4) <= 500)
			{
				if (uParam0->f_6 == 0)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
					{
						if (!__LIB_13__::func_773(bParam1, bParam2, bParam3))
						{
							uParam0->f_4 = MISC::GET_GAME_TIMER();
							uParam0->f_5 = 3;
						}
					}
					else if (!__LIB_13__::func_772(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
				else if (uParam0->f_6 == 1)
				{
					if (!__LIB_13__::func_772(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
				else if (uParam0->f_6 == 2)
				{
					if (!__LIB_13__::func_773(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
			}
			else
			{
				uParam0->f_5 = 2;
			}
			break;
		case 2:
			if (uParam0->f_6 == 0)
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					if (!__LIB_13__::func_773(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (!__LIB_13__::func_772(bParam1, bParam2, bParam3))
				{
					uParam0->f_5 = 0;
				}
			}
			else if (uParam0->f_6 == 1)
			{
				if (!__LIB_13__::func_772(bParam1, bParam2, bParam3) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					uParam0->f_5 = 0;
				}
			}
			else if (uParam0->f_6 == 2)
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
				{
					uParam0->f_5 = 0;
				}
				else if (!__LIB_13__::func_773(bParam1, bParam2, bParam3))
				{
					uParam0->f_5 = 0;
				}
			}
			break;
		case 3:
			if ((MISC::GET_GAME_TIMER() - uParam0->f_4) > 500)
			{
				if (uParam0->f_6 == 0)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
					{
						if (__LIB_13__::func_771(bParam1, bParam2, bParam3))
						{
							uParam0->f_5 = 0;
						}
					}
					else if (__LIB_13__::func_770(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (uParam0->f_6 == 1)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || __LIB_13__::func_770(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (uParam0->f_6 == 2)
				{
					if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
					{
						uParam0->f_5 = 0;
					}
					else if (__LIB_13__::func_771(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
			}
			break;
		case 4:
			if (!__LIB_0__::func_332(uParam0))
			{
				uParam0->f_5 = 0;
			}
			break;
	}
	if (!__LIB_0__::func_669(bParam1, bParam2, bParam3))
	{
		uParam0->f_5 = 0;
		uParam0->f_7 = 0;
	}
	if (uParam0->f_7)
	{
		__LIB_0__::func_187();
		return 1;
	}
	else
	{
		return 0;
	}
	return 0;
}

int func_797(var uParam0)//Position - 0x5BEB9
{
	if (uParam0->f_12.f_66 == 0)
	{
		return 0;
	}
	if (!__LIB_0__::func_371(uParam0->f_12.f_66, 0))
	{
		return 0;
	}
	if (uParam0->f_12.f_66 == joaat("stunt") && __LIB_0__::func_490(*uParam0, 1694.62f, 3276.27f, 41.31f, 1056964608, 0))
	{
		return 0;
	}
	return 1;
}

struct<14> func_798(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x16A92
{
	__LIB_0__::func_41();
	if (iParam0 == joaat("Player_Zero"))
	{
		__LIB_13__::func_780(iParam1, iParam2);
	}
	else if (iParam0 == joaat("Player_One"))
	{
		__LIB_13__::func_779(iParam1, iParam2);
	}
	else if (iParam0 == joaat("Player_Two"))
	{
		__LIB_13__::func_778(iParam1, iParam2);
	}
	return Global_78130[0 /*14*/];
}

void func_799(int iParam0)//Position - 0x20CC2
{
	switch (iParam0)
	{
		case 0:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		case 1:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		case 2:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(5, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(5, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		default:
			break;
	}
}

void func_800(var uParam0, struct<3> Param1, int iParam2)//Position - 0x2AC53
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
	iVar0 = uParam0->f_9;
	iVar1 = uParam0->f_10;
	if (iParam2 == joaat("VEHICLE_HIGH_ZOOM_HINT_HELPER"))
	{
		if (iVar0 < 1500)
		{
			iVar0 = 1500;
		}
		if (iVar1 < 1500)
		{
			iVar1 = 1500;
		}
	}
	CAM::SET_GAMEPLAY_COORD_HINT(Param1, -1, iVar0, iVar1, iParam2);
	iVar2 = 2048;
	iVar3 = 3;
	TASK::TASK_LOOK_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, -1, iVar2, iVar3);
	GRAPHICS::ANIMPOSTFX_PLAY("FocusIn", 0, false);
	AUDIO::START_AUDIO_SCENE("HINT_CAM_SCENE");
	AUDIO::PLAY_SOUND_FRONTEND(-1, "FocusIn", "HintCamSounds", true);
	uParam0->f_11 = 1;
	uParam0->f_8 = MISC::GET_GAME_TIMER();
	uParam0->f_1 = 1;
	*uParam0 = 0;
}

bool func_801(char* sParam0)//Position - 0x2C34B
{
	bool bVar0;
	bVar0 = CUTSCENE::HAS_THIS_CUTSCENE_LOADED(sParam0);
	if (!Global_78318)
	{
		if (!bVar0)
		{
			Global_78318 = 1;
		}
	}
	return bVar0;
}

void func_802(int iParam0)//Position - 0x7836D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		Global_113386.f_2363.f_539[iParam0 /*65*/].f_13[iVar0] = 0;
		Global_113386.f_2363.f_539[iParam0 /*65*/][iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		Global_113386.f_2363.f_539[iParam0 /*65*/].f_39[iVar0] = -1;
		Global_113386.f_2363.f_539[iParam0 /*65*/].f_49[iVar0] = -1;
		iVar0++;
	}
	switch (iParam0)
	{
		case 0:
			Global_113386.f_2363.f_539[iParam0 /*65*/].f_59 = 0;
			break;
		case 1:
			Global_113386.f_2363.f_539[1 /*65*/].f_13[3] = 8;
			Global_113386.f_2363.f_539[1 /*65*/].f_13[4] = 8;
			Global_113386.f_2363.f_539[1 /*65*/].f_13[6] = 6;
			Global_113386.f_2363.f_539[1 /*65*/].f_13[8] = 14;
			Global_113386.f_2363.f_539[1 /*65*/].f_13[2] = 0;
			Global_113386.f_2363.f_539[1 /*65*/][2] = 0;
			Global_113386.f_2363.f_539[iParam0 /*65*/].f_59 = 0;
			break;
		case 2:
			Global_113386.f_2363.f_539[2 /*65*/].f_13[3] = 0;
			Global_113386.f_2363.f_539[2 /*65*/].f_13[4] = 23;
			Global_113386.f_2363.f_539[2 /*65*/].f_13[6] = 10;
			Global_113386.f_2363.f_539[iParam0 /*65*/].f_59 = 0;
			break;
	}
	Global_113386.f_2363.f_539[iParam0 /*65*/].f_60 = -99;
	Global_113386.f_2363.f_539[iParam0 /*65*/].f_61 = 2;
	Global_113386.f_2363.f_539[iParam0 /*65*/].f_62 = 0;
	Global_113386.f_2363.f_539[iParam0 /*65*/].f_63 = -99;
	Global_113386.f_2363.f_539[iParam0 /*65*/].f_64 = 1;
	Global_100166[0 /*65*/] = { Global_113386.f_2363.f_539[0 /*65*/] };
	Global_100166[1 /*65*/] = { Global_113386.f_2363.f_539[1 /*65*/] };
	Global_100166[2 /*65*/] = { Global_113386.f_2363.f_539[2 /*65*/] };
}

void func_803(int iParam0, int iParam1)//Position - 0x78597
{
	if (!__LIB_0__::func_374(iParam0))
	{
		return;
	}
	Global_113386.f_2363.f_539.f_2332[iParam0] = iParam1;
}

int func_804(int iParam0)//Position - 0x785BF
{
	if (!__LIB_0__::func_374(iParam0))
	{
		return 0;
	}
	return Global_113386.f_2363.f_539.f_2332[iParam0];
}

int func_805(int iParam0)//Position - 0x78678
{
	switch (iParam0)
	{
		case 0:
			return 0;
			break;
		case 1:
			return 1;
			break;
		case 2:
			return 2;
			break;
	}
	return 0;
}

int func_806(int iParam0)//Position - 0x7B056
{
	if (iParam0 != -1)
	{
		if (Global_32020[iParam0 /*11*/].f_6)
		{
			return 1;
		}
	}
	return 0;
}

int func_807(int iParam0)//Position - 0x7B147
{
	if (iParam0 != -1)
	{
		if (Global_32020[iParam0 /*11*/].f_2)
		{
			return 1;
		}
	}
	return 0;
}

void func_808(int* iParam0)//Position - 0x9106B
{
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		HUD::REMOVE_BLIP(iParam0);
	}
}

void func_809(var uParam0, struct<3> Param1, var uParam2)//Position - 0x915B4
{
	*uParam0 = { Param1 };
	uParam0->f_6 = uParam2;
}

int func_810()//Position - 0x9AABB
{
	if (Global_20266.f_1 == 10 || Global_20266.f_1 == 9)
	{
		return 1;
	}
	return 0;
}

int func_811()//Position - 0x9CADA
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		return 0;
	}
	if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		return 0;
	}
	AUDIO::SET_VEH_RADIO_STATION(iVar0, "OFF");
	return 1;
}

void func_812(int iParam0, var uParam1, var uParam2)//Position - 0x9D358
{
	switch (iParam0)
	{
		case 65:
			*uParam1 = 20;
			*uParam2 = 22;
			break;
		case 27:
			*uParam1 = 20;
			*uParam2 = 20;
			break;
		default:
			*uParam1 = Global_91229[iParam0 /*34*/].f_14;
			*uParam2 = Global_91229[iParam0 /*34*/].f_13;
			break;
	}
}

void func_813(int iParam0, int iParam1)//Position - 0x21325
{
	switch (iParam0)
	{
		case 0:
			__LIB_0__::func_483(4, *iParam1, 0);
			__LIB_0__::func_483(7, *iParam1, 0);
			__LIB_0__::func_483(8, *iParam1, 0);
			__LIB_0__::func_483(11, *iParam1, 0);
			break;
		case 1:
			__LIB_0__::func_483(4, *iParam1, 0);
			__LIB_0__::func_483(7, *iParam1, 0);
			__LIB_0__::func_483(8, *iParam1, 0);
			__LIB_0__::func_483(11, *iParam1, 0);
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[126])
			{
				__LIB_0__::func_483(12, *iParam1, 0);
			}
			break;
		case 2:
			__LIB_0__::func_483(4, *iParam1, 0);
			__LIB_0__::func_483(7, *iParam1, 0);
			__LIB_0__::func_483(8, *iParam1, 0);
			__LIB_0__::func_483(11, *iParam1, 0);
			break;
	}
}

void func_814(int iParam0, var uParam1)//Position - 0x2186B
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	struct<5> Var4;
	int iVar5;
	int iVar6;
	struct<2> Var7;
	struct<4> Var8;
	int iVar9;
	int iVar10;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = 0;
		while (iVar0 <= (44 - 1))
		{
			(uParam1[iVar0 /*5*/])->f_1 = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= (44 - 1))
		{
			iVar3 = __LIB_0__::func_292(iVar0);
			if (iVar3 != 0)
			{
				Var4.f_0 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(iParam0, __LIB_0__::func_292(iVar0));
				Var4.f_1 = 0;
				Var4.f_2 = 0;
				Var4.f_3 = 0;
				Var4.f_4 = 0;
				if (Var4.f_0 != 0 && Var4.f_0 != joaat("WEAPON_UNARMED"))
				{
					Var4.f_1 = WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, Var4.f_0);
					if (Var4.f_0 == joaat("GADGET_PARACHUTE"))
					{
						Var4.f_1 = 1;
					}
					Var4.f_3 = WEAPON::GET_PED_WEAPON_TINT_INDEX(iParam0, Var4.f_0);
					Var4.f_4 = WEAPON::GET_PED_WEAPON_CAMO_INDEX(iParam0, Var4.f_0);
					if (Var4.f_1 == -1)
					{
						if (!WEAPON::GET_MAX_AMMO(iParam0, Var4.f_0, &(Var4.f_1)))
						{
							Var4.f_1 = 0;
						}
					}
					(uParam1[iVar0 /*5*/])->f_1 = Var4.f_1;
					bVar1 = false;
					iVar2 = __LIB_0__::func_430(Var4.f_0, bVar1);
					while (iVar2 != 0)
					{
						if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, Var4.f_0, iVar2))
						{
							MISC::SET_BIT(&(Var4.f_2), bVar1);
						}
						bVar1++;
						iVar2 = __LIB_0__::func_430(Var4.f_0, bVar1);
					}
				}
				*(uParam1[iVar0 /*5*/]) = { Var4 };
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 50)
		{
			uParam1->f_221[iVar0 /*5*/].f_1 = 0;
			iVar0++;
		}
		iVar6 = FILES::GET_NUM_DLC_WEAPONS_SP();
		iVar5 = 0;
		while (iVar5 < iVar6)
		{
			if ((FILES::GET_DLC_WEAPON_DATA_SP(iVar5, &Var7) && !__LIB_0__::func_290(Var7.f_1)) && iVar9 < 51)
			{
				if (!FILES::IS_CONTENT_ITEM_LOCKED(Var7.f_0))
				{
					Var4.f_0 = Var7.f_1;
					Var4.f_1 = 0;
					Var4.f_2 = 0;
					Var4.f_3 = 0;
					Var4.f_4 = 0;
					Var4.f_1 = WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, Var4.f_0);
					if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, Var4.f_0, false))
					{
						Var4.f_3 = WEAPON::GET_PED_WEAPON_TINT_INDEX(iParam0, Var4.f_0);
						Var4.f_4 = WEAPON::GET_PED_WEAPON_CAMO_INDEX(iParam0, Var4.f_0);
					}
					if (Var4.f_1 == -1)
					{
						if (!WEAPON::GET_MAX_AMMO(iParam0, Var4.f_0, &(Var4.f_1)))
						{
							Var4.f_1 = 0;
						}
					}
					uParam1->f_221[iVar9 /*5*/].f_1 = Var4.f_1;
					iVar10 = 0;
					bVar1 = false;
					while (bVar1 < FILES::GET_NUM_DLC_WEAPON_COMPONENTS_SP(iVar5))
					{
						if (FILES::GET_DLC_WEAPON_COMPONENT_DATA_SP(iVar5, bVar1, &Var8))
						{
							if (!__LIB_0__::func_288(Var8.f_3))
							{
								if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, Var4.f_0, Var8.f_3))
								{
									MISC::SET_BIT(&(Var4.f_2), iVar10);
								}
								iVar10++;
							}
						}
						bVar1++;
					}
				}
				if (Var4.f_0 != 0)
				{
					if (!WEAPON::HAS_PED_GOT_WEAPON(iParam0, Var4.f_0, false))
					{
						Var4.f_0 = 0;
						Var4.f_1 = 0;
					}
				}
				uParam1->f_221[iVar9 /*5*/] = { Var4 };
				iVar9++;
			}
			iVar5++;
		}
	}
}

void func_815(int* iParam0, bool bParam1, bool bParam2)//Position - 0x8452B
{
	int iVar0;
	if (BitTest(iParam0->f_13, 30))
	{
		bParam1 = true;
	}
	__LIB_0__::func_561(iParam0);
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
		{
			HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
		}
		__LIB_0__::func_560(iVar0, iParam0);
		__LIB_0__::func_559(iVar0, iParam0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 31)
	{
		if (iVar0 != 8)
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), iVar0);
			MISC::CLEAR_BIT(&(iParam0->f_14), iVar0);
		}
		iVar0++;
	}
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		HUD::REMOVE_BLIP(iParam0);
	}
	iParam0->f_6 = 0;
	iParam0->f_12 = 0;
	iParam0->f_15 = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
		{
			PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(iParam0->f_17[iVar0], true);
			PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(iParam0->f_17[iVar0], true);
			if (bParam2)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 32, true);
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 305, false);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 268, false);
			if (bParam1)
			{
				if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()) && iParam0->f_17[iVar0] != PLAYER::PLAYER_PED_ID())
				{
					PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
				}
			}
			if (!BitTest(iParam0->f_13, 29))
			{
				PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], false, -1, 0);
			}
			iParam0->f_17[iVar0] = 0;
		}
		iVar0++;
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(PLAYER::PLAYER_PED_ID(), true);
		PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(PLAYER::PLAYER_PED_ID(), true);
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (bParam2)
		{
			PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, true);
		}
	}
	iParam0->f_21 = 0;
}

int func_816(var uParam0, int iParam1, float fParam2, bool bParam3)//Position - 0x8697E
{
	int iVar0;
	if (!PED::IS_PED_INJURED(iParam1))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam1))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(iParam1, false);
			if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0))
					{
						if (__LIB_13__::func_786(uParam0))
						{
							return 1;
						}
					}
					else if (bParam3)
					{
						return 1;
					}
				}
				else if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, fParam2, fParam2, 3f, false, true, 0))
				{
					return 1;
				}
			}
		}
		else if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, fParam2, fParam2, 3f, false, true, 0))
		{
			if (!bParam3)
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (__LIB_0__::func_575(iVar0, uParam0, 0))
					{
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
						{
							if (__LIB_0__::func_587(iVar0))
							{
								return 1;
							}
						}
					}
				}
				else
				{
					return 1;
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_817()//Position - 0x1EA03
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_12__::func_894(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_13__::func_716(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__::func_374(iVar0) && (!__LIB_0__::isGlobal_43052EqualsValue(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__::func_374(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_818(int iParam0, int iParam1)//Position - 0x1EB0B
{
	switch (iParam0)
	{
		case 0:
			__LIB_0__::func_635(4, *iParam1);
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			break;
		case 1:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[2 /*6*/])
			{
				__LIB_0__::func_635(4, *iParam1);
			}
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[126])
			{
				__LIB_0__::func_635(12, *iParam1);
			}
			break;
		case 2:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[20 /*6*/])
			{
				__LIB_0__::func_635(4, *iParam1);
			}
			__LIB_0__::func_635(7, *iParam1);
			__LIB_0__::func_635(8, *iParam1);
			__LIB_0__::func_635(11, *iParam1);
			break;
	}
}

int func_819(int iParam0, int iParam1, int iParam2)//Position - 0x23121
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (Global_97772[iVar0] == iParam0)
			{
				if (iParam1 == 145 || iParam1 == Global_97782[iVar0])
				{
					if (iParam2 == 0 || ENTITY::GET_ENTITY_MODEL(iParam0) == __LIB_0__::func_634(iParam1, iParam2))
					{
						return 1;
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_820(var uParam0)//Position - 0x8FCA6
{
	if (__LIB_13__::func_797(uParam0))
	{
		STREAMING::REQUEST_MODEL(uParam0->f_12.f_66);
	}
}

bool func_821()//Position - 0x8FE20
{
	return __LIB_13__::func_797(&(Global_106934.f_2890));
}

void func_822(int iParam0)//Position - 0x2054D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		__LIB_0__::func_636(iParam0, iVar0);
		iVar0++;
	}
}

int func_823(int iParam0, int iParam1, bool bParam2)//Position - 0x78FCA
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 4;
	if (iParam1 == 0)
	{
		iVar0 = 0;
	}
	else if (iParam1 == 2)
	{
		iVar0 = 2;
	}
	else if (iParam1 == 1)
	{
		iVar0 = 1;
	}
	else if (iParam1 == 145)
	{
		iVar0 = 3;
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[iVar0]))
	{
		iVar1 = -1;
		iVar2 = 0;
		while (iVar2 < Global_100366)
		{
			if (iVar1 < 0)
			{
				if (!ENTITY::DOES_ENTITY_EXIST(Global_100366[iVar2]))
				{
					iVar1 = iVar2;
				}
			}
			iVar2++;
		}
		if (iVar1 < 0 || iVar1 > Global_100366)
		{
			iVar1 = 0;
		}
		Global_100366[iVar1] = Global_97919[iVar0];
		if (bParam2)
		{
			if (!PED::IS_PED_INJURED(Global_100366[iVar1]))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iParam0))
				{
					if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
					{
						TASK::CLEAR_PED_TASKS(Global_100366[iVar1]);
						TASK::TASK_SMART_FLEE_COORD(Global_100366[iVar1], ENTITY::GET_ENTITY_COORDS(iParam0, true), 1000f, -1, true, false);
					}
				}
			}
		}
	}
	Global_97919[iVar0] = iParam0;
	Global_113386.f_2363.f_539.f_2296[iParam1] = __LIB_11__::func_762();
	Global_113386.f_2363.f_539.f_2300[iParam1 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Global_113386.f_2363.f_539.f_2310[iParam1] = ENTITY::GET_ENTITY_HEADING(iParam0);
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_97919.f_47), iVar0);
	}
	return 1;
}

void func_824(int iParam0, bool bParam1)//Position - 0x791CF
{
	if (bParam1)
	{
		if (!__LIB_0__::func_431(iParam0, 2, 1))
		{
			__LIB_13__::func_768(iParam0, 2, 1);
		}
	}
	else if (__LIB_0__::func_431(iParam0, 2, 1))
	{
		__LIB_13__::func_776(iParam0, 2, 1);
	}
}

int func_825(var uParam0)//Position - 0x8FBEC
{
	if (__LIB_13__::func_797(uParam0))
	{
		if (STREAMING::HAS_MODEL_LOADED(uParam0->f_12.f_66))
		{
			return 1;
		}
		else
		{
			return 0;
		}
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

void func_826(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0x9CCB6
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (__LIB_11__::func_761(iParam0, iParam1))
	{
		iVar0 = __LIB_0__::func_553(iParam1);
		iVar1 = __LIB_0__::func_214(iParam0);
		iVar2 = (__LIB_0__::func_214(iParam0) - __LIB_0__::func_214(iParam1));
		iVar3 = (__LIB_0__::func_553(iParam0) - __LIB_0__::func_553(iParam1));
		iVar4 = (__LIB_0__::func_614(iParam0) - __LIB_0__::func_614(iParam1));
		iVar5 = (__LIB_0__::func_199(iParam0) - __LIB_0__::func_199(iParam1));
		iVar6 = (__LIB_0__::func_198(iParam0) - __LIB_0__::func_198(iParam1));
		iVar7 = (__LIB_0__::func_615(iParam0) - __LIB_0__::func_615(iParam1));
	}
	else
	{
		iVar0 = __LIB_0__::func_553(iParam0);
		iVar1 = __LIB_0__::func_214(iParam1);
		iVar2 = (__LIB_0__::func_214(iParam1) - __LIB_0__::func_214(iParam0));
		iVar3 = (__LIB_0__::func_553(iParam1) - __LIB_0__::func_553(iParam0));
		iVar4 = (__LIB_0__::func_614(iParam1) - __LIB_0__::func_614(iParam0));
		iVar5 = (__LIB_0__::func_199(iParam1) - __LIB_0__::func_199(iParam0));
		iVar6 = (__LIB_0__::func_198(iParam1) - __LIB_0__::func_198(iParam0));
		iVar7 = (__LIB_0__::func_615(iParam1) - __LIB_0__::func_615(iParam0));
	}
	while (iVar7 < 0)
	{
		iVar7 += 60;
		iVar6 = (iVar6 - 1);
	}
	while (iVar7 > 59)
	{
		iVar7 = (iVar7 - 60);
		iVar6++;
	}
	while (iVar6 < 0)
	{
		iVar6 += 60;
		iVar5 = (iVar5 - 1);
	}
	while (iVar6 > 59)
	{
		iVar6 = (iVar6 - 60);
		iVar5++;
	}
	while (iVar5 < 0)
	{
		iVar5 += 24;
		iVar4 = (iVar4 - 1);
	}
	while (iVar5 > 23)
	{
		iVar5 = (iVar5 - 24);
		iVar4++;
	}
	while (iVar4 < 0)
	{
		while (iVar3 < 0)
		{
			iVar3 += 12;
			iVar2 = (iVar2 - 1);
		}
		iVar4 = (iVar4 + __LIB_0__::func_139(iVar0, iVar1));
		iVar3 = (iVar3 - 1);
		iVar0 = SYSTEM::ROUND(__LIB_1__::func_9(SYSTEM::TO_FLOAT(iVar0 + 1), 0f, 12f));
	}
	while (iVar3 < 0)
	{
		iVar3 += 12;
		iVar2 = (iVar2 - 1);
	}
	while (iVar3 > 12)
	{
		iVar3 = (iVar3 - 12);
		iVar2++;
	}
	*uParam2 = iVar7;
	*uParam3 = iVar6;
	*uParam4 = iVar5;
	*uParam5 = iVar4;
	*uParam6 = iVar3;
	*uParam7 = iVar2;
}

void func_827(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x9CEF9
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	iVar0 = __LIB_0__::func_214(*iParam0);
	iVar1 = __LIB_0__::func_553(*iParam0);
	iVar2 = __LIB_0__::func_614(*iParam0);
	iVar3 = __LIB_0__::func_199(*iParam0);
	iVar4 = __LIB_0__::func_198(*iParam0);
	iVar5 = __LIB_0__::func_615(*iParam0);
	if (((((iParam6 == 0 && iParam5 == 0) && iParam4 == 0) && iParam3 == 0) && iParam2 == 0) && iParam1 == 0)
	{
		return;
	}
	if (iParam1 < 0)
	{
		return;
	}
	if (iParam2 < 0)
	{
		return;
	}
	if (iParam3 < 0)
	{
		return;
	}
	if (iParam4 < 0)
	{
		return;
	}
	if (iParam5 < 0)
	{
		return;
	}
	if (iParam6 < 0)
	{
		return;
	}
	iVar5 = (iVar5 + iParam1);
	while (iVar5 >= 60)
	{
		iParam2++;
		iVar5 = (iVar5 - 60);
	}
	iVar4 = (iVar4 + iParam2);
	while (iVar4 >= 60)
	{
		iParam3++;
		iVar4 = (iVar4 - 60);
	}
	iVar3 = (iVar3 + iParam3);
	while (iVar3 >= 24)
	{
		iParam4++;
		iVar3 = (iVar3 - 24);
	}
	iVar2 = (iVar2 + iParam4);
	iVar6 = __LIB_0__::func_139(iVar1, iVar0);
	while (iVar2 > iVar6)
	{
		iVar1++;
		iVar2 = (iVar2 - iVar6);
		if (iVar1 > 11)
		{
			iVar0++;
			iVar1 = (iVar1 - 12);
		}
		iVar6 = __LIB_0__::func_139(iVar1, iVar0);
	}
	iVar1 = (iVar1 + iParam5);
	while (iVar1 > 11)
	{
		iParam6++;
		iVar1 = (iVar1 - 12);
	}
	iVar0 = (iVar0 + iParam6);
	__LIB_8__::func_909(iParam0, iVar5, iVar4, iVar3, iVar2, iVar1, iVar0);
}

void func_828(int iParam0, bool bParam1)//Position - 0x7BC44
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_0__::func_699(iParam0))
	{
		return;
	}
	if ((bParam1 != 0 && bParam1 != 1) && bParam1 != 2)
	{
		iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			iVar0 = VEHICLE::GET_LAST_PED_IN_VEHICLE_SEAT(iParam0, -1);
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !PED::IS_PED_INJURED(iVar0))
		{
			if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Zero"))
			{
				bParam1 = false;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_One"))
			{
				bParam1 = true;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Two"))
			{
				bParam1 = 2;
			}
		}
		if ((bParam1 != 0 && bParam1 != 1) && bParam1 != 2)
		{
			bParam1 = Global_113386.f_2363.f_539.f_4321;
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		iVar2 = 0;
		while (iVar2 < 2)
		{
			if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66)
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
				{
					if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
					{
						Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66 = 0;
						Global_113386.f_32749.f_5592[iVar1] = iVar2;
					}
				}
			}
			iVar2++;
		}
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
			{
				if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
				{
					Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66 = 0;
				}
			}
		}
		iVar1++;
	}
	Global_113386.f_32749.f_5590 = bParam1;
	Global_78042 = iParam0;
	Global_113386.f_32749.f_5588 = 1;
	__LIB_0__::func_209(iParam0, &(Global_113386.f_32749.f_5510));
}

bool func_829(int iParam0, int iParam1, int iParam2)//Position - 0x2F026
{
	Global_78130[1 /*14*/] = { __LIB_13__::func_798(iParam0, iParam1, iParam2, -1) };
	return BitTest(Global_78130[1 /*14*/].f_6, 2);
}

int func_830()//Position - 0x77C
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (Local_124.f_0 == 45)
	{
		if (Local_124.f_675 == 18)
		{
			return 1;
		}
	}
	return 0;
}

void func_831()//Position - 0x818
{
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 4))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 4);
		MISC::CLEAR_BIT(&uLocal_390, 26);
	}
}

void func_832()//Position - 0x84D
{
	if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 4))
	{
		MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 4);
		MISC::CLEAR_BIT(&uLocal_390, 26);
	}
}

int func_833(int iParam0, int iParam1)//Position - 0x387A
{
	switch (iParam0)
	{
		case 0:
			if (iParam1 == 0)
			{
				return 6;
			}
			if (iParam1 == 1)
			{
				return 7;
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				return 0;
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				return 1;
			}
			break;
		case 3:
			if (iParam1 == 0)
			{
				return 2;
			}
			break;
		case 4:
			if (iParam1 == 0)
			{
				return 3;
			}
			break;
		case 5:
			if (iParam1 == 0)
			{
				return 4;
			}
			break;
		case 6:
			if (iParam1 == 0)
			{
				return 5;
			}
			break;
		case 7:
			if (iParam1 == 0)
			{
				return 8;
			}
			if (iParam1 == 1)
			{
				return 9;
			}
			break;
		case 8:
			if (iParam1 == 0)
			{
				return 10;
			}
			if (iParam1 == 1)
			{
				return 11;
			}
			break;
		case 9:
			if (iParam1 == 0)
			{
				return 12;
			}
			if (iParam1 == 1)
			{
				return 13;
			}
			break;
		case 10:
			if (iParam1 == 0)
			{
				return 14;
			}
			if (iParam1 == 1)
			{
				return 15;
			}
			break;
		case 11:
			if (iParam1 == 0)
			{
				return 16;
			}
			if (iParam1 == 1)
			{
				return 17;
			}
			break;
		case 12:
			if (iParam1 == 0)
			{
				return 18;
			}
			if (iParam1 == 1)
			{
				return 19;
			}
			break;
		case 13:
			if (iParam1 == 0)
			{
				return 20;
			}
			if (iParam1 == 1)
			{
				return 21;
			}
			break;
		case 14:
			if (iParam1 == 0)
			{
				return 22;
			}
			break;
		case 15:
			if (iParam1 == 0)
			{
				return 23;
			}
			break;
		case 16:
			if (iParam1 == 0)
			{
				return 24;
			}
			break;
		case 17:
			if (iParam1 == 0)
			{
				return 25;
			}
			break;
		case 18:
			if (iParam1 == 0)
			{
				return 26;
			}
			if (iParam1 == 1)
			{
				return 27;
			}
			break;
		case 19:
			if (iParam1 == 0)
			{
				return 28;
			}
			if (iParam1 == 1)
			{
				return 29;
			}
			break;
		case 20:
			if (iParam1 == 0)
			{
				return 30;
			}
			if (iParam1 == 1)
			{
				return 31;
			}
			break;
		case 22:
			if (iParam1 == 0)
			{
				return 32;
			}
			break;
		case 23:
			if (iParam1 == 0)
			{
				return 33;
			}
			break;
		case 24:
			if (iParam1 == 0)
			{
				return 34;
			}
			break;
		case 25:
			if (iParam1 == 0)
			{
				return 35;
			}
			break;
		case 26:
			if (iParam1 == 0)
			{
				return 36;
			}
			break;
		case 27:
			if (iParam1 == 0)
			{
				return 37;
			}
			break;
		case 39:
			if (iParam1 == 0)
			{
				return 54;
			}
			break;
		case 40:
			if (iParam1 == 0)
			{
				return 55;
			}
			break;
		case 41:
			if (iParam1 == 0)
			{
				return 56;
			}
			break;
		case 42:
			if (iParam1 == 0)
			{
				return 58;
			}
			if (iParam1 == 1)
			{
				return 57;
			}
			break;
		case 43:
			if (iParam1 == 0)
			{
				return 60;
			}
			if (iParam1 == 1)
			{
				return 59;
			}
			break;
		case 44:
			if (iParam1 == 0)
			{
				return 225;
			}
			break;
		case 28:
			if (iParam1 == 0)
			{
				return 162;
			}
			if (iParam1 == 1)
			{
				return 163;
			}
			break;
		case 29:
			if (iParam1 == 0)
			{
				return 165;
			}
			if (iParam1 == 1)
			{
				return 166;
			}
			break;
		case 30:
			if (iParam1 == 0)
			{
				return 167;
			}
			if (iParam1 == 1)
			{
				return 168;
			}
			break;
		case 31:
			if (iParam1 == 0)
			{
				return 169;
			}
			if (iParam1 == 1)
			{
				return 170;
			}
			break;
		case 32:
			if (iParam1 == 0)
			{
				return 171;
			}
			if (iParam1 == 1)
			{
				return 172;
			}
			break;
		case 33:
			if (iParam1 == 0)
			{
				return 173;
			}
			if (iParam1 == 1)
			{
				return 174;
			}
			break;
		case 34:
			if (iParam1 == 0)
			{
				return 175;
			}
			if (iParam1 == 1)
			{
				return 176;
			}
			break;
		case 35:
			if (iParam1 == 0)
			{
				return 177;
			}
			if (iParam1 == 1)
			{
				return 178;
			}
			break;
		case 36:
			if (iParam1 == 0)
			{
				return 179;
			}
			if (iParam1 == 1)
			{
				return 180;
			}
			break;
		case 37:
			if (iParam1 == 0)
			{
				return 181;
			}
			if (iParam1 == 1)
			{
				return 182;
			}
			break;
		case 38:
			if (iParam1 == 0)
			{
				return 183;
			}
			if (iParam1 == 1)
			{
				return 184;
			}
			break;
	}
	return 226;
}

int func_834(int iParam0, int iParam1)//Position - 0x3D70
{
	switch (iParam0)
	{
		case 0:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 183249434;
				}
				else if (iParam1 == 1)
				{
					return 758345384;
				}
			}
			break;
		case 1:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1804701345;
				}
			}
			break;
		case 2:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1403601067;
				}
			}
			break;
		case 3:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -2031139496;
				}
			}
			break;
		case 4:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1796834809;
				}
			}
			break;
		case 5:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 96153298;
				}
			}
			break;
		case 6:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -281080954;
				}
			}
			break;
		case 7:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1069262641;
				}
				else if (iParam1 == 1)
				{
					return 1968521986;
				}
			}
			break;
		case 8:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -2143706301;
				}
				else if (iParam1 == 1)
				{
					return -1403421822;
				}
			}
			break;
		case 9:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1950137670;
				}
				else if (iParam1 == 1)
				{
					return 1226259807;
				}
			}
			break;
		case 10:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1090833557;
				}
				else if (iParam1 == 1)
				{
					return 897332612;
				}
			}
			break;
		case 11:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1095946640;
				}
				else if (iParam1 == 1)
				{
					return 801975945;
				}
			}
			break;
		case 12:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -167996547;
				}
				else if (iParam1 == 1)
				{
					return -1935818563;
				}
			}
			break;
		case 13:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1891185217;
				}
				else if (iParam1 == 1)
				{
					return 1236591681;
				}
			}
			break;
		case 14:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1980808685;
				}
			}
			break;
		case 15:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1352749757;
				}
			}
			break;
		case 16:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -566554453;
				}
			}
			break;
		case 17:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1284749450;
				}
			}
			break;
		case 18:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 261851994;
				}
				else if (iParam1 == 1)
				{
					return 217646625;
				}
			}
			break;
		case 19:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1801139578;
				}
				else if (iParam1 == 1)
				{
					return -2123275866;
				}
			}
			break;
		case 20:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1312689981;
				}
				else if (iParam1 == 1)
				{
					return -595055661;
				}
			}
			break;
		case 22:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -265260897;
				}
			}
			break;
		case 23:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1284867488;
				}
			}
			break;
		case 24:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 302307081;
				}
			}
			break;
		case 25:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -681886015;
				}
			}
			break;
		case 26:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -2086556500;
				}
			}
			break;
		case 27:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1496386696;
				}
			}
			break;
		case 39:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1871080926;
				}
			}
			else if (iParam1 == 0)
			{
				return -1871080926;
			}
			break;
		case 40:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1168079979;
				}
			}
			else if (iParam1 == 0)
			{
				return 1168079979;
			}
			break;
		case 41:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1206354175;
				}
			}
			else if (iParam1 == 0)
			{
				return 1206354175;
			}
			break;
		case 42:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1200466273;
				}
				else if (iParam1 == 1)
				{
					return -1038180727;
				}
			}
			else if (iParam1 == 0)
			{
				return 1200466273;
			}
			else if (iParam1 == 1)
			{
				return -1038180727;
			}
			break;
		case 43:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -459199009;
				}
				else if (iParam1 == 1)
				{
					return 1391004277;
				}
			}
			else if (iParam1 == 0)
			{
				return -459199009;
			}
			else if (iParam1 == 1)
			{
				return 1391004277;
			}
			break;
		case 44:
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -288764223;
				}
			}
			else if (iParam1 == 0)
			{
				return -288764223;
			}
			break;
		case 28:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1071759151;
				}
				else if (iParam1 == 1)
				{
					return -2119023917;
				}
			}
			break;
		case 29:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1488490473;
				}
				else if (iParam1 == 1)
				{
					return -511187813;
				}
			}
			break;
		case 30:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -248569395;
				}
				else if (iParam1 == 1)
				{
					return 989443413;
				}
			}
			break;
		case 31:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 2022251829;
				}
				else if (iParam1 == 1)
				{
					return 649820567;
				}
			}
			break;
		case 32:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 537455378;
				}
				else if (iParam1 == 1)
				{
					return 1121431731;
				}
			}
			break;
		case 33:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1437380438;
				}
				else if (iParam1 == 1)
				{
					return -946336965;
				}
			}
			break;
		case 34:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 1893144650;
				}
				else if (iParam1 == 1)
				{
					return 435841678;
				}
			}
			break;
		case 35:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return 948508314;
				}
				else if (iParam1 == 1)
				{
					return -1796714665;
				}
			}
			break;
		case 36:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1155247245;
				}
				else if (iParam1 == 1)
				{
					return 782482084;
				}
			}
			break;
		case 37:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -1194470801;
				}
				else if (iParam1 == 1)
				{
					return -2129698061;
				}
			}
			break;
		case 38:
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (iParam1 == 0)
				{
					return -675817295;
				}
				else if (iParam1 == 1)
				{
					return 2121442868;
				}
			}
			break;
	}
	return 0;
}

int func_835()//Position - 0x44F4
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (Local_124.f_0 == 45)
	{
		if (Local_124.f_675 == 13)
		{
			return 1;
		}
	}
	return 0;
}

void func_836(char* sParam0, int iParam1)//Position - 0x4520
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return;
	}
	if (iParam1 == -1)
	{
	}
}

bool func_837(int iParam0)//Position - 0x453D
{
	if (7 == iParam0)
	{
		return (Global_4718592.f_116524 == Global_262145.f_9493[iParam0] || Global_4718592.f_116524 == Global_262145.f_9502[iParam0]);
	}
	return Global_4718592.f_116524 == Global_262145.f_9493[iParam0];
}

void func_838(var uParam0)//Position - 0x46EE
{
	uParam0->f_1 = { 0f, 0f, 0f };
	StringCopy(&(uParam0->f_7), "", 16);
	uParam0->f_31 = { 0f, 0f, 0f };
	uParam0->f_34 = 0f;
	uParam0->f_35 = { 0f, 0f, 0f };
	uParam0->f_38 = 0f;
	uParam0->f_39 = { 0f, 0f, 0f };
	uParam0->f_42 = { 0f, 0f, 0f };
	uParam0->f_45 = { 0f, 0f, 0f };
}

void func_839(var uParam0)//Position - 0x473F
{
	*uParam0 = -1;
	uParam0->f_1 = -1;
	uParam0->f_2 = 0;
	uParam0->f_4 = 0;
}

void func_840(var uParam0)//Position - 0x475A
{
	int iVar0;
	*uParam0 = -1;
	uParam0->f_2 = 0;
	uParam0->f_4 = 0;
	uParam0->f_5 = 0;
	uParam0->f_7 = 0;
	uParam0->f_8 = 0;
	uParam0->f_108 = 0;
	uParam0->f_9 = 0;
	uParam0->f_11 = 0;
	uParam0->f_100 = 0;
	uParam0->f_12.f_3 = 0;
	uParam0->f_12.f_6 = { 0f, 0f, 0f };
	uParam0->f_12.f_15 = 0f;
	uParam0->f_12.f_18 = { 0f, 0f, 0f };
	uParam0->f_12.f_21 = 0f;
	uParam0->f_12.f_22 = { 0f, 0f, 0f };
	uParam0->f_12.f_25 = 0f;
	uParam0->f_12.f_29 = 0;
	uParam0->f_12.f_26 = 0;
	uParam0->f_43.f_2 = { 0f, 0f, 0f };
	uParam0->f_43.f_5 = 0f;
	uParam0->f_43.f_6 = 0;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		uParam0->f_51[iVar0 /*12*/].f_11 = 0;
		uParam0->f_51[iVar0 /*12*/] = 0;
		iVar0++;
	}
}

void func_841(var uParam0)//Position - 0x481D
{
	*uParam0 = 0;
	uParam0->f_1 = 0;
	uParam0->f_2 = 0;
	uParam0->f_3 = 0;
	uParam0->f_4 = 0;
	uParam0->f_5 = 0;
	uParam0->f_6 = 0;
	uParam0->f_8 = 0;
	uParam0->f_9 = 0;
	uParam0->f_10 = 0;
	StringCopy(&(uParam0->f_11), "", 16);
	uParam0->f_30 = 0;
	uParam0->f_15 = 0;
	uParam0->f_16 = 0;
	uParam0->f_17 = 0;
	uParam0->f_18 = 0;
	uParam0->f_19 = 0;
	uParam0->f_20 = 0;
	uParam0->f_21 = 0;
	uParam0->f_22 = 0;
	uParam0->f_23 = 0;
	uParam0->f_31 = 0;
}

int func_842(int iParam0)//Position - 0x83E6
{
	if ((((((((((((iParam0 == __LIB_4__::func_878(joaat("luxe_horn_1")) || iParam0 == __LIB_4__::func_878(joaat("luxe_horn_2"))) || iParam0 == __LIB_4__::func_878(joaat("luxe_horn_3"))) || iParam0 == __LIB_4__::func_878(joaat("LOWRIDER_HORN_1"))) || iParam0 == __LIB_4__::func_878(joaat("LOWRIDER_HORN_2"))) || iParam0 == __LIB_4__::func_878(joaat("ORGAN_HORN_LOOP_01"))) || iParam0 == __LIB_4__::func_878(joaat("ORGAN_HORN_LOOP_02"))) || iParam0 == __LIB_4__::func_878(joaat("XM15_HORN_01"))) || iParam0 == __LIB_4__::func_878(joaat("XM15_HORN_02"))) || iParam0 == __LIB_4__::func_878(joaat("XM15_HORN_03"))) || iParam0 == __LIB_4__::func_878(joaat("dlc_aw_airhorn_01"))) || iParam0 == __LIB_4__::func_878(joaat("dlc_aw_airhorn_02"))) || iParam0 == __LIB_4__::func_878(joaat("dlc_aw_airhorn_03")))
	{
		return 1;
	}
	return 0;
}

int func_843(int iParam0, int iParam1, int iParam2)//Position - 0x8F52
{
	switch (iParam0)
	{
		case joaat("apc"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 0;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			break;
		case joaat("halftrack"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 2;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			break;
		case joaat("dune3"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 7;
				}
				else if (iParam2 == 2)
				{
					return 8;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			break;
		case joaat("tampa3"):
			if (iParam1 == 1)
			{
				if (iParam2 == 1)
				{
					return 5;
				}
			}
			else if (iParam1 == 2)
			{
				if (iParam2 == 1)
				{
					return 4;
				}
			}
			else if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 3;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			if (iParam1 == 5)
			{
				if (iParam2 > 2)
				{
					return 6;
				}
			}
			break;
		case joaat("insurgent3"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 9;
				}
			}
			if (iParam1 == 5)
			{
				if (iParam2 == 3)
				{
					return 10;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			break;
		case joaat("technical3"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 11;
				}
			}
			if (iParam1 == 5)
			{
				if (iParam2 == 3)
				{
					return 14;
				}
			}
			if (iParam1 == 6)
			{
				if (iParam2 == 4)
				{
					return 12;
				}
				else if (iParam2 == 5)
				{
					return 13;
				}
			}
			if (iParam1 == 9)
			{
				if (iParam2 == 11)
				{
					return 42;
				}
			}
			break;
		case joaat("oppressor"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 15;
				}
			}
			break;
		case joaat("trailersmall2"):
			if (iParam1 == 10)
			{
				if (iParam2 == 1)
				{
					return 22;
				}
				else if (iParam2 == 2)
				{
					return 21;
				}
			}
			break;
		case joaat("trailerlarge"):
			if (iParam1 == 10)
			{
				if (iParam2 == 2)
				{
					return 23;
				}
			}
			break;
	}
	if ((((((((((((((((((((((((((((((iParam0 == joaat("apc") || iParam0 == joaat("halftrack")) || iParam0 == joaat("dune3")) || iParam0 == joaat("tampa3")) || iParam0 == joaat("insurgent3")) || iParam0 == joaat("technical3")) || iParam0 == joaat("nightshark")) || iParam0 == joaat("ardent")) || iParam0 == joaat("trailersmall2")) || iParam0 == joaat("oppressor")) || iParam0 == joaat("khanjali")) || iParam0 == joaat("chernobog")) || iParam0 == joaat("thruster")) || iParam0 == joaat("barrage")) || iParam0 == joaat("riot2")) || iParam0 == joaat("akula")) || iParam0 == joaat("avenger")) || iParam0 == joaat("revolter")) || iParam0 == joaat("caracara")) || iParam0 == joaat("speedo4")) || iParam0 == joaat("mule4")) || iParam0 == joaat("pounder2")) || iParam0 == joaat("menacer")) || iParam0 == joaat("oppressor2")) || iParam0 == joaat("patriot2")) || iParam0 == joaat("patriot")) || iParam0 == joaat("verus")) || iParam0 == joaat("squaddie")) || iParam0 == joaat("manchez2")) || iParam0 == joaat("winky")) || iParam0 == joaat("annihilator2"))
	{
		if (iParam1 == 48)
		{
			if (iParam2 == 10)
			{
				return 19;
			}
			if (iParam2 == 11)
			{
				return 20;
			}
			if (iParam2 >= 12 && iParam2 <= 15)
			{
				return 18;
			}
			if (iParam2 >= 16 && iParam2 <= 17)
			{
				return 16;
			}
			if (iParam2 >= 18 && iParam2 <= 20)
			{
				return 17;
			}
		}
	}
	return -1;
}

void func_844()//Position - 0x9B88
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_102577[iVar0] = 0;
		iVar0++;
	}
}

void func_845()//Position - 0x9BAB
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		Local_183[iVar0] = -1;
		Local_183.f_4[iVar0] = -1;
		iVar0++;
	}
}

void func_846(bool bParam0)//Position - 0x9BDA
{
	if (bParam0)
	{
		if (!BitTest(Global_103905, 10))
		{
			MISC::SET_BIT(&Global_103905, 10);
		}
	}
	else if (BitTest(Global_103905, 10))
	{
		MISC::CLEAR_BIT(&Global_103905, 10);
	}
}

void func_847()//Position - 0x9C13
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		Local_177[iVar0] = -1;
		Local_177.f_4[iVar0] = -1;
		iVar0++;
	}
}

void func_848(bool bParam0)//Position - 0x9C42
{
	if (bParam0)
	{
		if (!BitTest(Global_103905, 7))
		{
			MISC::SET_BIT(&Global_103905, 7);
		}
	}
	else if (BitTest(Global_103905, 7))
	{
		MISC::CLEAR_BIT(&Global_103905, 7);
	}
}

bool func_849(int iParam0)//Position - 0xA139
{
	return BitTest(Local_124.f_447[(iParam0 / 32)], (iParam0 % 32));
}

void func_850(bool bParam0)//Position - 0xA567
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 25))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 25);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 25))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 25);
	}
}

void func_851(bool bParam0)//Position - 0xA67A
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 16))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 16);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 16))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 16);
	}
}

void func_852(bool bParam0)//Position - 0xA734
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 13))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 13);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 13))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 13);
	}
}

void func_853(bool bParam0)//Position - 0xA791
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 14))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 14);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 14))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 14);
	}
}

void func_854(int iParam0)//Position - 0xA7EE
{
	if (!__LIB_0__::func_156(PLAYER::PLAYER_ID(), 1, 1))
	{
		return;
	}
	if (iParam0 != Local_104[PLAYER::PLAYER_ID() /*17*/].f_8)
	{
		Local_104[PLAYER::PLAYER_ID() /*17*/].f_8 = iParam0;
		Local_124.f_676 = iParam0;
	}
}

void func_855(bool bParam0)//Position - 0xA867
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 11))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 11);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 11))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 11);
	}
}

void func_856(bool bParam0)//Position - 0xA9F8
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 9))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 9);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 9))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 9);
	}
}

int func_857(int iParam0)//Position - 0xD5C6
{
	switch (iParam0)
	{
		case 39:
			return joaat("v_ilev_carmodlamps");
			break;
		case 40:
			return joaat("v_ilev_carmodlamps");
			break;
		case 41:
			return joaat("v_ilev_carmodlamps");
			break;
		case 42:
			return joaat("v_ilev_carmod3lamp");
			break;
		case 43:
			return joaat("v_ilev_carmod3lamp");
			break;
		case 44:
			return joaat("lr_prop_supermod_lframe");
			break;
	}
	return joaat("v_ilev_carmodlamps");
}

void func_858(int iParam0)//Position - 0xD996
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar0 = 0;
		while (iVar0 < 49)
		{
			if ((((iVar0 == 21 || iVar0 == 17) || iVar0 == 19) || iVar0 == 18) || iVar0 == 20)
			{
				if (VEHICLE::IS_TOGGLE_MOD_ON(iParam0, iVar0))
				{
					iLocal_484[iVar0] = 1;
				}
				else
				{
					iLocal_484[iVar0] = 0;
				}
			}
			else if (iVar0 == 22)
			{
				if (VEHICLE::IS_TOGGLE_MOD_ON(iParam0, iVar0))
				{
					switch (VEHICLE::GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(iParam0))
					{
						case 255:
							iLocal_484[iVar0] = 1;
							break;
						case 0:
							iLocal_484[iVar0] = 2;
							break;
						case 1:
							iLocal_484[iVar0] = 3;
							break;
						case 2:
							iLocal_484[iVar0] = 4;
							break;
						case 3:
							iLocal_484[iVar0] = 5;
							break;
						case 4:
							iLocal_484[iVar0] = 6;
							break;
						case 5:
							iLocal_484[iVar0] = 7;
							break;
						case 6:
							iLocal_484[iVar0] = 8;
							break;
						case 7:
							iLocal_484[iVar0] = 9;
							break;
						case 8:
							iLocal_484[iVar0] = 10;
							break;
						case 9:
							iLocal_484[iVar0] = 11;
							break;
						case 10:
							iLocal_484[iVar0] = 12;
							break;
						case 11:
							iLocal_484[iVar0] = 13;
							break;
						case 12:
							iLocal_484[iVar0] = 14;
							break;
					}
				}
				else
				{
					iLocal_484[iVar0] = 0;
				}
			}
			else
			{
				iLocal_484[iVar0] = VEHICLE::GET_VEHICLE_MOD(iParam0, iVar0);
			}
			iVar0++;
		}
	}
}

void func_859(int iParam0)//Position - 0xDB4A
{
	if (GRAPHICS::DOES_VEHICLE_HAVE_CREW_EMBLEM(iParam0, 0))
	{
		GRAPHICS::REMOVE_VEHICLE_CREW_EMBLEM(iParam0, 0);
	}
	if (GRAPHICS::DOES_VEHICLE_HAVE_CREW_EMBLEM(iParam0, 1))
	{
		GRAPHICS::REMOVE_VEHICLE_CREW_EMBLEM(iParam0, 1);
	}
}

int func_860()//Position - 0x16853
{
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
	{
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("finale_heist_prepc")) > 0 && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("gauntlet"))
		{
			return 1;
		}
	}
	return 0;
}

void func_861()//Position - 0x1737D
{
	if (BitTest(uLocal_390, 3))
	{
		GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPShops");
	}
	MISC::CLEAR_BIT(&uLocal_390, 3);
}

void func_862(var uParam0)//Position - 0x1739D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (*uParam0 - 1))
	{
		if (CAM::DOES_CAM_EXIST((*uParam0)[iVar0 /*12*/]))
		{
			CAM::DESTROY_CAM((*uParam0)[iVar0 /*12*/], false);
		}
		iVar0++;
	}
}

void func_863(bool bParam0)//Position - 0x1AC35
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 0))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 0);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 0))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 0);
	}
}

void func_864(bool bParam0)//Position - 0x1AD07
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 15))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 15);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 15))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 15);
	}
}

void func_865(bool bParam0)//Position - 0x1AD74
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 13))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 13);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 13))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 13);
	}
}

void func_866(bool bParam0)//Position - 0x1ADE1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 17))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 17);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 17))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 17);
	}
}

void func_867(bool bParam0)//Position - 0x1AE4E
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 16))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 16);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 16))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 16);
	}
}

int func_868(int iParam0, int iParam1)//Position - 0x1BC3A
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	bVar4 = false;
	if (iParam1 && NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar2))
	{
		iVar1 = NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS();
		bVar4 = true;
	}
	else
	{
		iVar1 = 32;
	}
	iVar0 = 0;
	while (iVar0 < iVar1)
	{
		if (bVar4)
		{
			if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
			{
				iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			}
		}
		else
		{
			iVar2 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		}
		if (iVar2 != PLAYER::PLAYER_ID())
		{
			if (__LIB_0__::func_156(iVar2, 1, 1))
			{
				iVar3 = PLAYER::GET_PLAYER_PED(iVar2);
				if (PED::IS_PED_IN_VEHICLE(iVar3, iParam0, false))
				{
				}
				else
				{
					if ((((((((PED::IS_PED_IN_VEHICLE(iVar3, iParam0, true) || (ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(iVar3, iParam0) && !VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 0) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 0) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(iVar3, joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(iVar3, 2))
					{
						return 0;
					}
					if ((PED::IS_PED_IN_VEHICLE(iVar3, iParam0, true) && !PED::IS_PED_SITTING_IN_VEHICLE(iVar3, iParam0)) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(iVar3))
					{
						return 0;
					}
				}
			}
		}
		iVar0++;
	}
	return 1;
}

int func_869()//Position - 0x1BDA4
{
	if (Local_124.f_676 == -1)
	{
		return 0;
	}
	return BitTest(Local_103.f_10[Local_124.f_676], 1);
}

int func_870()//Position - 0x1BF53
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (BitTest(Global_2689235[iVar1 /*453*/].f_197, 12))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_871()//Position - 0xA215B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (bLocal_473)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_395.f_2) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_395.f_2, false))
		{
			iVar1 = Local_395.f_2;
		}
		else
		{
			iVar1 = Local_124.f_406;
		}
		iVar0 = GRAPHICS::GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(iVar1, 0);
		if (iVar0 == 3 || iVar0 >= 4)
		{
			bLocal_473 = false;
		}
		else if (iVar0 == 1)
		{
			if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(iLocal_479, 5000))) || (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (MISC::GET_GAME_TIMER() - iLocal_478) > 5000))
			{
				GRAPHICS::ABORT_VEHICLE_CREW_EMBLEM_REQUEST(iVar1);
				iVar0 = 5;
				bLocal_473 = false;
			}
		}
	}
	if (iLocal_476)
	{
		if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::IS_TIME_LESS_THAN(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(iLocal_479, 1500))) || (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (MISC::GET_GAME_TIMER() - iLocal_478) < 1500))
		{
			return 2;
		}
		else
		{
			iLocal_476 = 0;
		}
	}
	return iVar0;
}

int func_872(int iParam0)//Position - 0xA5363
{
	switch (iParam0)
	{
		case joaat("buzzard"):
		case joaat("savage"):
		case joaat("valkyrie"):
		case joaat("hydra"):
		case joaat("cargobob"):
		case joaat("cargobob2"):
		case joaat("volatus"):
		case joaat("supervolito"):
		case joaat("supervolito2"):
		case joaat("swift2"):
		case joaat("frogger"):
		case joaat("maverick"):
		case joaat("annihilator"):
		case joaat("lazer"):
		case joaat("nimbus"):
		case joaat("luxor2"):
		case joaat("velum2"):
		case joaat("dodo"):
		case joaat("miljet"):
		case joaat("besra"):
		case joaat("vestra"):
		case joaat("duster"):
		case joaat("shamal"):
		case joaat("cuban800"):
		case joaat("luxor"):
		case joaat("stunt"):
		case joaat("mammatus"):
		case joaat("titan"):
		case joaat("velum"):
		case joaat("swift"):
			return 1;
		default:
	}
	return 0;
}

void func_873(int iParam0)//Position - 0xA7DC4
{
	Global_60333 = 1;
	Global_60334 = iParam0;
}

int func_874(int iParam0)//Position - 0xA8914
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 - 0);
	iVar1 = 41;
	return (iVar0 + iVar1);
}

int func_875(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0xA8A5E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		if ((*uParam0)[iVar0] == iParam1 && (*uParam2)[iVar0] == iParam3)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

bool func_876(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0xA8D20
{
	return MISC::GET_HASH_KEY(&uParam0) == MISC::GET_HASH_KEY(&uParam4);
}

void func_877(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0xB1D3E
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 != 0)
	{
		STATS::STAT_SET_DATE(iVar0, &uParam1, 7, true);
	}
}

int func_878(var uParam0)//Position - 0xB1E86
{
	if ((((((*uParam0 != 0 || uParam0->f_1 != 0) || uParam0->f_2 != 0) || uParam0->f_3 != 0) || uParam0->f_4 != 0) || uParam0->f_5 != 0) || uParam0->f_6 != 0)
	{
		return 1;
	}
	return 0;
}

int func_879(int iParam0)//Position - 0xB204A
{
	if ((iParam0 % 4) == 0)
	{
		if ((iParam0 % 100) == 0)
		{
			if ((iParam0 % 400) == 0)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

int func_880(int iParam0)//Position - 0xB20E4
{
	switch (iParam0)
	{
		case 1:
			return 13;
		case 2:
			return 14;
		case 3:
			return 15;
		case 4:
			return 16;
		case 5:
			return 17;
		case 6:
			return 18;
		case 7:
			return 19;
		case 8:
			return 20;
		case 9:
			return 21;
		case 10:
			return 22;
		case 11:
			return 23;
		case 12:
			return 24;
		case 13:
			return 25;
		case 14:
			return 26;
		case 15:
			return 27;
		case 16:
			return 28;
		case 17:
			return 29;
		case 18:
			return 30;
		case 19:
			return 31;
		case 20:
			return 32;
		default:
	}
	return 13;
}

int func_881(var uParam0, int iParam1)//Position - 0xB227D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		if ((*uParam0)[iVar0] == iParam1)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_882(int iParam0, int iParam1)//Position - 0xB22A9
{
	switch (iParam0)
	{
		case 0:
			__LIB_1__::func_69(joaat("MPPLY_SOLDZOLAPUMA0"), iParam1);
			break;
		case 1:
			__LIB_1__::func_69(joaat("MPPLY_SOLDZOLAPUMA1"), iParam1);
			break;
		case 2:
			__LIB_1__::func_69(joaat("MPPLY_SOLDZOLAPUMA2"), iParam1);
			break;
		case 3:
			__LIB_1__::func_69(joaat("MPPLY_SOLDZOLAPUMA3"), iParam1);
			break;
		case 4:
			__LIB_1__::func_69(joaat("MPPLY_SOLDZOLAPUMA4"), iParam1);
			break;
	}
	Global_1585126[iParam0] = iParam1;
}

int func_883(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xB24BB
{
	if (!Global_1585125 == 0 && !Global_1585125 == -1)
	{
		if (MISC::GET_HASH_KEY(&uParam0) == Global_1585125)
		{
			return 1;
		}
	}
	return 0;
}

int func_884(char[16] cParam0, struct<4> Param1)//Position - 0xB24EB
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	struct<4> Var5;
	iVar0 = HUD::GET_LENGTH_OF_LITERAL_STRING(&cParam0);
	iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Param1);
	if (iVar0 == iVar1)
	{
		return MISC::ARE_STRINGS_EQUAL(&cParam0, &Param1);
	}
	iVar3 = MISC::ABSI((iVar1 - iVar0));
	if (iVar0 < iVar1)
	{
		cVar4 = { cParam0 };
	}
	else
	{
		cVar4 = { Param1 };
	}
	iVar2 = 0;
	while (iVar2 < (iVar3 / 2))
	{
		StringCopy(&Var5, " ", 16);
		StringConCat(&Var5, &cVar4, 16);
		StringConCat(&Var5, " ", 16);
		cVar4 = { Var5 };
		iVar2++;
	}
	if ((iVar3 % 2) == 1)
	{
		StringConCat(&cVar4, " ", 16);
	}
	if (iVar0 < iVar1)
	{
		return MISC::ARE_STRINGS_EQUAL(&cVar4, &Param1);
	}
	else
	{
		return MISC::ARE_STRINGS_EQUAL(&cVar4, &cParam0);
	}
	return 0;
}

bool func_885()//Position - 0xB259E
{
	return Global_110086;
}

void func_886(char* sParam0)//Position - 0xB26A8
{
	int iVar0;
	struct<4> Var1;
	struct<4> Var2;
	int iVar3;
	int iVar4;
	iVar0 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0);
	if (iVar0 < 8)
	{
		Var1 = { *sParam0 };
		iVar4 = MISC::ABSI((8 - iVar0));
		iVar3 = 0;
		while (iVar3 < (iVar4 / 2))
		{
			StringCopy(&Var2, " ", 16);
			StringConCat(&Var2, &Var1, 16);
			StringConCat(&Var2, " ", 16);
			Var1 = { Var2 };
			iVar3++;
		}
		if ((iVar4 % 2) == 1)
		{
			StringConCat(&Var1, " ", 16);
		}
		*sParam0 = { Var1 };
	}
}

void func_887(int iParam0, int iParam1)//Position - 0xB28E5
{
	switch (iParam0)
	{
		case 0:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD0"), iParam1);
			break;
		case 1:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD1"), iParam1);
			break;
		case 2:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD2"), iParam1);
			break;
		case 3:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD3"), iParam1);
			break;
		case 4:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD4"), iParam1);
			break;
		case 5:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD5"), iParam1);
			break;
		case 6:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD6"), iParam1);
			break;
		case 7:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD7"), iParam1);
			break;
		case 8:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD8"), iParam1);
			break;
		case 9:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERSOLD9"), iParam1);
			break;
	}
	Global_1585164[iParam0] = iParam1;
}

void func_888(int iParam0, int iParam1)//Position - 0xB29C6
{
	switch (iParam0)
	{
		case 0:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA0"), iParam1);
			break;
		case 1:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA1"), iParam1);
			break;
		case 2:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA2"), iParam1);
			break;
		case 3:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA3"), iParam1);
			break;
		case 4:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA4"), iParam1);
			break;
		case 5:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA5"), iParam1);
			break;
		case 6:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA6"), iParam1);
			break;
		case 7:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA7"), iParam1);
			break;
		case 8:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA8"), iParam1);
			break;
		case 9:
			__LIB_1__::func_69(joaat("MPPLY_KNOWNDOZERPUMA9"), iParam1);
			break;
	}
	Global_1585153[iParam0] = iParam1;
}

int func_889(char* sParam0)//Position - 0xB2F43
{
	int iVar0;
	if ((MISC::STRING_TO_INT(sParam0, &iVar0) && iVar0 >= 0) && iVar0 <= 9)
	{
		return 1;
	}
	return 0;
}

void func_890(int iParam0)//Position - 0xB30B3
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
		{
			DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()));
		}
	}
}

int func_891(int iParam0, int iParam1, int iParam2)//Position - 0xBDE73
{
	switch (iParam0)
	{
		case 33:
			return 12;
			break;
		case 60:
			return 7;
			break;
		case 15:
			return 22;
			break;
		case 95:
			return 22;
			break;
		case 57:
			return 45;
			break;
		case 29:
			return 17;
			break;
		case 58:
			return 41;
			break;
		case 92:
			return 50;
			break;
		case 90:
			return 17;
			break;
		case 27:
			return 56;
			break;
		case 8:
			return 45;
			break;
		case 36:
			return 15;
			break;
		case 18:
			return 15;
			break;
		case 30:
			if (iParam2 == 1)
			{
				return 8;
			}
			else if (iParam2 == 2)
			{
				return 45;
			}
			break;
		case 91:
			if (iParam2 == 1)
			{
				return 16;
			}
			else if (iParam2 == 2)
			{
				return 68;
			}
			break;
		case 45:
			return 15;
			break;
	}
	switch (iParam1)
	{
		case 1:
			return 15;
			break;
		case 2:
			return 25;
			break;
		case 0:
			return 30;
			break;
		case 3:
			return 30;
			break;
		case 4:
			return 23;
			break;
		case 5:
			return 33;
			break;
		case 6:
			return 17;
			break;
		case 7:
			return 30;
			break;
		case 8:
			return 22;
			break;
		case 9:
			return 42;
			break;
		case 10:
			return 30;
			break;
		case 11:
			return 11;
			break;
		case 12:
			return 11;
			break;
		case 13:
			return 11;
			break;
		case 15:
			return 11;
			break;
		case 16:
			return 11;
			break;
		case 18:
			return 2;
			break;
		case 25:
			return 30;
			break;
		case 26:
			return 30;
			break;
		case 27:
			return 30;
			break;
		case 28:
			return 60;
			break;
		case 29:
			return 30;
			break;
		case 30:
			return 30;
			break;
		case 31:
			return 30;
			break;
		case 32:
			return 30;
			break;
		case 33:
			return 30;
			break;
		case 34:
			return 30;
			break;
		case 35:
			return 30;
			break;
		case 36:
			return 30;
			break;
		case 37:
			return 30;
			break;
		case 38:
			return 30;
			break;
		case 39:
			return 30;
			break;
		case 40:
			return 30;
			break;
		case 41:
			return 30;
			break;
		case 42:
			return 30;
			break;
		case 43:
			return 30;
			break;
		case 44:
			return 30;
			break;
		case 45:
			return 30;
			break;
		case 46:
			return 30;
			break;
		case 47:
			return 30;
			break;
		case 48:
			return 37;
			break;
		case 22:
			return 17;
			break;
	}
	return 5;
}

bool func_892(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0xBE1DC
{
	*uParam1 = -1;
	*uParam2 = -1;
	*uParam3 = 0;
	*uParam4 = -1;
	switch (iParam0)
	{
		case 0:
			*uParam1 = 33;
			*uParam3 = 1;
			break;
		case 1:
			*uParam1 = 60;
			*uParam3 = 1;
			break;
		case 2:
			*uParam1 = 15;
			*uParam3 = 1;
			break;
		case 3:
			*uParam1 = 57;
			*uParam3 = 1;
			break;
		case 4:
			*uParam1 = 29;
			*uParam3 = 1;
			break;
		case 5:
			*uParam1 = 58;
			*uParam3 = 1;
			break;
		case 6:
			*uParam1 = 92;
			*uParam3 = 1;
			break;
		case 7:
			*uParam1 = 90;
			*uParam3 = 1;
			break;
		case 8:
			*uParam1 = 27;
			*uParam3 = 1;
			break;
		case 9:
			*uParam1 = 8;
			*uParam3 = 1;
			break;
		case 10:
			*uParam1 = 30;
			*uParam3 = 1;
			*uParam4 = 1;
			break;
		case 11:
			*uParam1 = 30;
			*uParam3 = 1;
			*uParam4 = 2;
			break;
		case 12:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				*uParam1 = 45;
				*uParam3 = 1;
			}
			else
			{
				*uParam1 = 91;
				*uParam3 = 1;
				*uParam4 = 1;
			}
			break;
		case 13:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				*uParam1 = 45;
				*uParam3 = 1;
			}
			else
			{
				*uParam1 = 91;
				*uParam3 = 1;
				*uParam4 = 2;
			}
			break;
		case 14:
			*uParam2 = 0;
			break;
		case 15:
			*uParam2 = 3;
			break;
		case 16:
			*uParam2 = 4;
			break;
		case 17:
			*uParam2 = 5;
			break;
		case 18:
			*uParam2 = 6;
			break;
		case 19:
			*uParam2 = 7;
			break;
		case 20:
			*uParam2 = 8;
			break;
		case 21:
			*uParam2 = 9;
			break;
		case 22:
			*uParam2 = 10;
			break;
		case 23:
			*uParam2 = 11;
			break;
		case 24:
			*uParam2 = 12;
			break;
		case 25:
			*uParam2 = 13;
			break;
		case 26:
			*uParam2 = 15;
			break;
		case 27:
			*uParam2 = 16;
			break;
		case 28:
			*uParam2 = 18;
			break;
		case 29:
			*uParam2 = 23;
			break;
		case 30:
			*uParam2 = 24;
			break;
		case 31:
			*uParam2 = 25;
			break;
		case 32:
			*uParam2 = 26;
			break;
		case 33:
			*uParam2 = 28;
			break;
		case 34:
			*uParam2 = 29;
			break;
		case 35:
			*uParam2 = 31;
			break;
		case 36:
			*uParam2 = 32;
			break;
		case 37:
			*uParam2 = 33;
			break;
		case 38:
			*uParam2 = 34;
			break;
		case 39:
			*uParam2 = 35;
			break;
		case 40:
			*uParam2 = 36;
			break;
		case 41:
			*uParam2 = 37;
			break;
		case 42:
			*uParam2 = 38;
			break;
		case 43:
			*uParam2 = 39;
			break;
		case 44:
			*uParam2 = 40;
			break;
		case 45:
			*uParam2 = 41;
			break;
		case 46:
			*uParam2 = 42;
			break;
		case 47:
			*uParam2 = 43;
			break;
		case 48:
			*uParam2 = 44;
			break;
		case 49:
			*uParam2 = 45;
			break;
		case 50:
			*uParam2 = 46;
			break;
		case 51:
			*uParam2 = 47;
			break;
		case 52:
			*uParam2 = 48;
			break;
		case 53:
			*uParam2 = 1;
			break;
		case 54:
			*uParam2 = 2;
			break;
	}
	return (*uParam1 != -1 || *uParam2 != -1);
}

int func_893(int iParam0)//Position - 0xBE773
{
	switch (iParam0)
	{
		case 29:
		case 80:
		case 9:
		case 15:
		case 77:
		case 78:
		case 85:
		case 8:
		case 12:
		case 26:
		case 72:
		case 23:
		case 44:
		case 95:
		case 40:
		case 39:
		case 63:
		case 18:
		case 46:
		case 45:
			return 1;
			break;
	}
	return 0;
}

bool func_894(int iParam0, int iParam1)//Position - 0xC52EB
{
	*iParam1 = -1;
	switch (iParam0)
	{
		case 0:
			*iParam1 = 0;
			break;
		case 1:
			*iParam1 = 1;
			break;
		case 2:
			*iParam1 = 11;
			break;
		case 3:
			*iParam1 = 2;
			break;
		case 4:
			*iParam1 = 3;
			break;
		case 5:
			*iParam1 = 5;
			break;
		case 6:
			*iParam1 = 6;
			break;
		case 7:
			*iParam1 = 7;
			break;
		case 8:
			*iParam1 = 8;
			break;
		case 9:
			*iParam1 = 9;
			break;
		case 10:
			*iParam1 = 10;
			break;
		case 11:
			*iParam1 = 27;
			break;
		case 12:
			*iParam1 = 28;
			break;
		case 13:
			*iParam1 = 150;
			break;
		case 14:
			*iParam1 = 30;
			break;
		case 15:
			*iParam1 = 31;
			break;
		case 16:
			*iParam1 = 32;
			break;
		case 17:
			*iParam1 = 33;
			break;
		case 18:
			*iParam1 = 34;
			break;
		case 19:
			*iParam1 = 143;
			break;
		case 20:
			*iParam1 = 35;
			break;
		case 21:
			*iParam1 = 137;
			break;
		case 22:
			*iParam1 = 136;
			break;
		case 23:
			*iParam1 = 36;
			break;
		case 24:
			*iParam1 = 38;
			break;
		case 25:
			*iParam1 = 138;
			break;
		case 26:
			*iParam1 = 90;
			break;
		case 27:
			*iParam1 = 88;
			break;
		case 28:
			*iParam1 = 89;
			break;
		case 29:
			*iParam1 = 91;
			break;
		case 30:
			*iParam1 = 49;
			break;
		case 31:
			*iParam1 = 50;
			break;
		case 32:
			*iParam1 = 51;
			break;
		case 33:
			*iParam1 = 52;
			break;
		case 34:
			*iParam1 = 53;
			break;
		case 35:
			*iParam1 = 54;
			break;
		case 36:
			*iParam1 = 92;
			break;
		case 37:
			*iParam1 = 141;
			break;
		case 38:
			*iParam1 = 61;
			break;
		case 39:
			*iParam1 = 62;
			break;
		case 40:
			*iParam1 = 63;
			break;
		case 41:
			*iParam1 = 65;
			break;
		case 42:
			*iParam1 = 66;
			break;
		case 43:
			*iParam1 = 67;
			break;
		case 44:
			*iParam1 = 68;
			break;
		case 45:
			*iParam1 = 69;
			break;
		case 46:
			*iParam1 = 73;
			break;
		case 47:
			*iParam1 = 70;
			break;
		case 48:
			*iParam1 = 74;
			break;
		case 49:
			*iParam1 = 96;
			break;
		case 50:
			*iParam1 = 101;
			break;
		case 51:
			*iParam1 = 95;
			break;
		case 52:
			*iParam1 = 94;
			break;
		case 53:
			*iParam1 = 97;
			break;
		case 54:
			*iParam1 = 103;
			break;
		case 55:
			*iParam1 = 104;
			break;
		case 56:
			*iParam1 = 98;
			break;
		case 57:
			*iParam1 = 100;
			break;
		case 58:
			*iParam1 = 102;
			break;
		case 59:
			*iParam1 = 99;
			break;
		case 60:
			*iParam1 = 105;
			break;
		case 61:
			*iParam1 = 106;
			break;
		case 62:
			*iParam1 = 72;
			break;
		case 63:
			*iParam1 = 146;
			break;
		case 64:
			*iParam1 = 145;
			break;
		case 65:
			*iParam1 = 107;
			break;
		case 66:
			*iParam1 = 111;
			break;
		case 67:
			*iParam1 = 112;
			break;
	}
	return *iParam1 != -1;
}

bool func_895(int iParam0, char* sParam1, int iParam2, int iParam3, int iParam4)//Position - 0xC5B81
{
	*iParam2 = -1;
	*iParam3 = -1;
	*iParam4 = -1;
	switch (iParam0)
	{
		case 0:
			StringCopy(sParam1, "BR BLACK_STEEL" /* GXT: Brushed Black Steel */, 16);
			*iParam2 = 3;
			*iParam3 = 118;
			*iParam4 = 3;
			break;
		case 1:
			StringCopy(sParam1, "BLACK_GRAPHITE" /* GXT: Carbon Black */, 16);
			*iParam2 = 0;
			*iParam3 = 147;
			*iParam4 = 4;
			break;
		case 2:
			StringCopy(sParam1, "CHOCOLATE_BROWN" /* GXT: Chocolate Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 96;
			*iParam4 = 0;
			break;
		case 3:
			StringCopy(sParam1, "PURPLE" /* GXT: Schafter Purple */, 16);
			*iParam2 = 0;
			*iParam3 = 71;
			*iParam4 = 145;
			break;
		case 4:
			StringCopy(sParam1, "HOT PINK" /* GXT: Hot Pink */, 16);
			*iParam2 = 0;
			*iParam3 = 135;
			*iParam4 = 135;
			break;
		case 5:
			StringCopy(sParam1, "FORMULA_RED" /* GXT: Formula Red */, 16);
			*iParam2 = 0;
			*iParam3 = 29;
			*iParam4 = 28;
			break;
		case 6:
			StringCopy(sParam1, "BLUE" /* GXT: Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 64;
			*iParam4 = 68;
			break;
		case 7:
			StringCopy(sParam1, "ULTRA_BLUE" /* GXT: Ultra Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 70;
			*iParam4 = 0;
			break;
		case 8:
			StringCopy(sParam1, "RACING_GREEN" /* GXT: Racing Green */, 16);
			*iParam2 = 1;
			*iParam3 = 50;
			*iParam4 = 0;
			break;
		case 9:
			StringCopy(sParam1, "LIME_GREEN" /* GXT: Lime Green */, 16);
			*iParam2 = 2;
			*iParam3 = 55;
			*iParam4 = 0;
			break;
		case 10:
			StringCopy(sParam1, "RACE_YELLOW" /* GXT: Race Yellow */, 16);
			*iParam2 = 1;
			*iParam3 = 89;
			*iParam4 = 0;
			break;
		case 11:
			StringCopy(sParam1, "ORANGE" /* GXT: Orange */, 16);
			*iParam2 = 1;
			*iParam3 = 38;
			*iParam4 = 0;
			break;
		case 12:
			StringCopy(sParam1, "GOLD" /* GXT: Gold */, 16);
			*iParam2 = 0;
			*iParam3 = 37;
			*iParam4 = 106;
			break;
		case 13:
			StringCopy(sParam1, "SILVER" /* GXT: Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 4;
			*iParam4 = 111;
			break;
		case 14:
			StringCopy(sParam1, "CHROME" /* GXT: Chrome */, 16);
			*iParam2 = 4;
			*iParam3 = 120;
			*iParam4 = 0;
			break;
		case 15:
			StringCopy(sParam1, "WHITE" /* GXT: Ice White */, 16);
			*iParam2 = 1;
			*iParam3 = 111;
			*iParam4 = 0;
			break;
		case 16:
			StringCopy(sParam1, "BLACK" /* GXT: Black */, 16);
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 10;
			break;
		case 17:
			StringCopy(sParam1, "GRAPHITE" /* GXT: Graphite */, 16);
			*iParam2 = 0;
			*iParam3 = 1;
			*iParam4 = 5;
			break;
		case 18:
			StringCopy(sParam1, "ANTHR_BLACK" /* GXT: Anthracite Black */, 16);
			*iParam2 = 0;
			*iParam3 = 11;
			*iParam4 = 2;
			break;
		case 19:
			StringCopy(sParam1, "BLACK_STEEL" /* GXT: Black Steel */, 16);
			*iParam2 = 0;
			*iParam3 = 2;
			*iParam4 = 5;
			break;
		case 20:
			StringCopy(sParam1, "DARK_SILVER" /* GXT: Dark Steel */, 16);
			*iParam2 = 0;
			*iParam3 = 3;
			*iParam4 = 6;
			break;
		case 21:
			StringCopy(sParam1, "BLUE_SILVER" /* GXT: Bluish Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 5;
			*iParam4 = 111;
			break;
		case 22:
			StringCopy(sParam1, "ROLLED_STEEL" /* GXT: Rolled Steel */, 16);
			*iParam2 = 0;
			*iParam3 = 6;
			*iParam4 = 4;
			break;
		case 23:
			StringCopy(sParam1, "SHADOW_SILVER" /* GXT: Shadow Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 7;
			*iParam4 = 5;
			break;
		case 24:
			StringCopy(sParam1, "STONE_SILVER" /* GXT: Stone Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 8;
			*iParam4 = 5;
			break;
		case 25:
			StringCopy(sParam1, "MIDNIGHT_SILVER" /* GXT: Midnight Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 9;
			*iParam4 = 7;
			break;
		case 26:
			StringCopy(sParam1, "CAST_IRON_SIL" /* GXT: Cast Iron Silver */, 16);
			*iParam2 = 0;
			*iParam3 = 10;
			*iParam4 = 7;
			break;
		case 27:
			StringCopy(sParam1, "RED" /* GXT: Red */, 16);
			*iParam2 = 0;
			*iParam3 = 27;
			*iParam4 = 36;
			break;
		case 28:
			StringCopy(sParam1, "TORINO_RED" /* GXT: Torino Red */, 16);
			*iParam2 = 0;
			*iParam3 = 28;
			*iParam4 = 28;
			break;
		case 29:
			StringCopy(sParam1, "LAVA_RED" /* GXT: Lava Red */, 16);
			*iParam2 = 0;
			*iParam3 = 150;
			*iParam4 = 42;
			break;
		case 30:
			StringCopy(sParam1, "BLAZE_RED" /* GXT: Blaze Red */, 16);
			*iParam2 = 0;
			*iParam3 = 30;
			*iParam4 = 36;
			break;
		case 31:
			StringCopy(sParam1, "GRACE_RED" /* GXT: Grace Red */, 16);
			*iParam2 = 0;
			*iParam3 = 31;
			*iParam4 = 27;
			break;
		case 32:
			StringCopy(sParam1, "GARNET_RED" /* GXT: Garnet Red */, 16);
			*iParam2 = 0;
			*iParam3 = 32;
			*iParam4 = 25;
			break;
		case 33:
			StringCopy(sParam1, "SUNSET_RED" /* GXT: Sunset Red */, 16);
			*iParam2 = 0;
			*iParam3 = 33;
			*iParam4 = 47;
			break;
		case 34:
			StringCopy(sParam1, "CABERNET_RED" /* GXT: Cabernet Red */, 16);
			*iParam2 = 0;
			*iParam3 = 34;
			*iParam4 = 47;
			break;
		case 35:
			StringCopy(sParam1, "WINE_RED" /* GXT: Wine Red */, 16);
			*iParam2 = 0;
			*iParam3 = 143;
			*iParam4 = 31;
			break;
		case 36:
			StringCopy(sParam1, "CANDY_RED" /* GXT: Candy Red */, 16);
			*iParam2 = 0;
			*iParam3 = 35;
			*iParam4 = 25;
			break;
		case 37:
			StringCopy(sParam1, "PINK" /* GXT: Pfister Pink */, 16);
			*iParam2 = 0;
			*iParam3 = 137;
			*iParam4 = 3;
			break;
		case 38:
			StringCopy(sParam1, "SALMON_PINK" /* GXT: Salmon Pink */, 16);
			*iParam2 = 0;
			*iParam3 = 136;
			*iParam4 = 5;
			break;
		case 39:
			StringCopy(sParam1, "SUNRISE_ORANGE" /* GXT: Sunrise Orange */, 16);
			*iParam2 = 0;
			*iParam3 = 36;
			*iParam4 = 26;
			break;
		case 40:
			StringCopy(sParam1, "ORANGE" /* GXT: Orange */, 16);
			*iParam2 = 0;
			*iParam3 = 38;
			*iParam4 = 37;
			break;
		case 41:
			StringCopy(sParam1, "BRIGHT_ORANGE" /* GXT: Bright Orange */, 16);
			*iParam2 = 0;
			*iParam3 = 138;
			*iParam4 = 89;
			break;
		case 42:
			StringCopy(sParam1, "BRONZE" /* GXT: Bronze */, 16);
			*iParam2 = 0;
			*iParam3 = 90;
			*iParam4 = 102;
			break;
		case 43:
			StringCopy(sParam1, "YELLOW" /* GXT: Yellow */, 16);
			*iParam2 = 0;
			*iParam3 = 88;
			*iParam4 = 88;
			break;
		case 44:
			StringCopy(sParam1, "RACE_YELLOW" /* GXT: Race Yellow */, 16);
			*iParam2 = 0;
			*iParam3 = 89;
			*iParam4 = 88;
			break;
		case 45:
			StringCopy(sParam1, "FLUR_YELLOW" /* GXT: Dew Yellow */, 16);
			*iParam2 = 0;
			*iParam3 = 91;
			*iParam4 = 91;
			break;
		case 46:
			StringCopy(sParam1, "DARK_GREEN" /* GXT: Dark Green */, 16);
			*iParam2 = 0;
			*iParam3 = 49;
			*iParam4 = 52;
			break;
		case 47:
			StringCopy(sParam1, "RACING_GREEN" /* GXT: Racing Green */, 16);
			*iParam2 = 0;
			*iParam3 = 50;
			*iParam4 = 53;
			break;
		case 48:
			StringCopy(sParam1, "SEA_GREEN" /* GXT: Sea Green */, 16);
			*iParam2 = 0;
			*iParam3 = 51;
			*iParam4 = 66;
			break;
		case 49:
			StringCopy(sParam1, "OLIVE_GREEN" /* GXT: Olive Green */, 16);
			*iParam2 = 0;
			*iParam3 = 52;
			*iParam4 = 59;
			break;
		case 50:
			StringCopy(sParam1, "BRIGHT_GREEN" /* GXT: Bright Green */, 16);
			*iParam2 = 0;
			*iParam3 = 53;
			*iParam4 = 59;
			break;
		case 51:
			StringCopy(sParam1, "PETROL_GREEN" /* GXT: Gasoline Green */, 16);
			*iParam2 = 0;
			*iParam3 = 54;
			*iParam4 = 60;
			break;
		case 52:
			StringCopy(sParam1, "LIME_GREEN" /* GXT: Lime Green */, 16);
			*iParam2 = 0;
			*iParam3 = 92;
			*iParam4 = 92;
			break;
		case 53:
			StringCopy(sParam1, "MIDNIGHT_BLUE" /* GXT: Midnight Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 141;
			*iParam4 = 73;
			break;
		case 54:
			StringCopy(sParam1, "GALAXY_BLUE" /* GXT: Galaxy Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 61;
			*iParam4 = 63;
			break;
		case 55:
			StringCopy(sParam1, "DARK_BLUE" /* GXT: Dark Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 62;
			*iParam4 = 68;
			break;
		case 56:
			StringCopy(sParam1, "SAXON_BLUE" /* GXT: Saxon Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 63;
			*iParam4 = 87;
			break;
		case 57:
			StringCopy(sParam1, "MARINER_BLUE" /* GXT: Mariner Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 65;
			*iParam4 = 87;
			break;
		case 58:
			StringCopy(sParam1, "HARBOR_BLUE" /* GXT: Harbor Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 66;
			*iParam4 = 60;
			break;
		case 59:
			StringCopy(sParam1, "DIAMOND_BLUE" /* GXT: Diamond Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 67;
			*iParam4 = 67;
			break;
		case 60:
			StringCopy(sParam1, "SURF_BLUE" /* GXT: Surf Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 68;
			*iParam4 = 68;
			break;
		case 61:
			StringCopy(sParam1, "NAUTICAL_BLUE" /* GXT: Nautical Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 69;
			*iParam4 = 74;
			break;
		case 62:
			StringCopy(sParam1, "RACING_BLUE" /* GXT: Racing Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 73;
			*iParam4 = 73;
			break;
		case 63:
			StringCopy(sParam1, "ULTRA_BLUE" /* GXT: Ultra Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 70;
			*iParam4 = 70;
			break;
		case 64:
			StringCopy(sParam1, "LIGHT_BLUE" /* GXT: Light Blue */, 16);
			*iParam2 = 0;
			*iParam3 = 74;
			*iParam4 = 74;
			break;
		case 65:
			StringCopy(sParam1, "CHOCOLATE_BROWN" /* GXT: Chocolate Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 96;
			*iParam4 = 95;
			break;
		case 66:
			StringCopy(sParam1, "BISON_BROWN" /* GXT: Bison Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 101;
			*iParam4 = 95;
			break;
		case 67:
			StringCopy(sParam1, "CREEK_BROWN" /* GXT: Creek Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 95;
			*iParam4 = 97;
			break;
		case 68:
			StringCopy(sParam1, "UMBER_BROWN" /* GXT: Feltzer Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 94;
			*iParam4 = 104;
			break;
		case 69:
			StringCopy(sParam1, "MAPLE_BROWN" /* GXT: Maple Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 97;
			*iParam4 = 98;
			break;
		case 70:
			StringCopy(sParam1, "BEECHWOOD_BROWN" /* GXT: Beechwood Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 103;
			*iParam4 = 104;
			break;
		case 71:
			StringCopy(sParam1, "SIENNA_BROWN" /* GXT: Sienna Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 104;
			*iParam4 = 104;
			break;
		case 72:
			StringCopy(sParam1, "SADDLE_BROWN" /* GXT: Saddle Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 98;
			*iParam4 = 95;
			break;
		case 73:
			StringCopy(sParam1, "MOSS_BROWN" /* GXT: Moss Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 100;
			*iParam4 = 100;
			break;
		case 74:
			StringCopy(sParam1, "WOODBEECH_BROWN" /* GXT: Woodbeech Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 102;
			*iParam4 = 105;
			break;
		case 75:
			StringCopy(sParam1, "STRAW_BROWN" /* GXT: Straw Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 99;
			*iParam4 = 106;
			break;
		case 76:
			StringCopy(sParam1, "SANDY_BROWN" /* GXT: Sandy Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 105;
			*iParam4 = 105;
			break;
		case 77:
			StringCopy(sParam1, "BLEECHED_BROWN" /* GXT: Bleached Brown */, 16);
			*iParam2 = 0;
			*iParam3 = 106;
			*iParam4 = 106;
			break;
		case 78:
			StringCopy(sParam1, "SPIN_PURPLE" /* GXT: Spinnaker Purple */, 16);
			*iParam2 = 0;
			*iParam3 = 72;
			*iParam4 = 64;
			break;
		case 79:
			StringCopy(sParam1, "MIGHT_PURPLE" /* GXT: Midnight Purple */, 16);
			*iParam2 = 0;
			*iParam3 = 146;
			*iParam4 = 145;
			break;
		case 80:
			StringCopy(sParam1, "BRIGHT_PURPLE" /* GXT: Bright Purple */, 16);
			*iParam2 = 0;
			*iParam3 = 145;
			*iParam4 = 74;
			break;
		case 81:
			StringCopy(sParam1, "CREAM" /* GXT: Cream */, 16);
			*iParam2 = 0;
			*iParam3 = 107;
			*iParam4 = 107;
			break;
		case 82:
			StringCopy(sParam1, "WHITE" /* GXT: Ice White */, 16);
			*iParam2 = 0;
			*iParam3 = 111;
			*iParam4 = 0;
			break;
		case 83:
			StringCopy(sParam1, "FROST_WHITE" /* GXT: Frost White */, 16);
			*iParam2 = 0;
			*iParam3 = 112;
			*iParam4 = 0;
			break;
		case 84:
			StringCopy(sParam1, "BLACK" /* GXT: Black */, 16);
			*iParam2 = 1;
			*iParam3 = 0;
			*iParam4 = 0;
			break;
		case 85:
			StringCopy(sParam1, "BLACK_GRAPHITE" /* GXT: Carbon Black */, 16);
			*iParam2 = 1;
			*iParam3 = 147;
			*iParam4 = 0;
			break;
		case 86:
			StringCopy(sParam1, "GRAPHITE" /* GXT: Graphite */, 16);
			*iParam2 = 1;
			*iParam3 = 1;
			*iParam4 = 0;
			break;
		case 87:
			StringCopy(sParam1, "ANTHR_BLACK" /* GXT: Anthracite Black */, 16);
			*iParam2 = 1;
			*iParam3 = 11;
			*iParam4 = 0;
			break;
		case 88:
			StringCopy(sParam1, "BLACK_STEEL" /* GXT: Black Steel */, 16);
			*iParam2 = 1;
			*iParam3 = 2;
			*iParam4 = 0;
			break;
		case 89:
			StringCopy(sParam1, "DARK_SILVER" /* GXT: Dark Steel */, 16);
			*iParam2 = 1;
			*iParam3 = 3;
			*iParam4 = 2;
			break;
		case 90:
			StringCopy(sParam1, "SILVER" /* GXT: Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 4;
			*iParam4 = 4;
			break;
		case 91:
			StringCopy(sParam1, "BLUE_SILVER" /* GXT: Bluish Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 5;
			*iParam4 = 5;
			break;
		case 92:
			StringCopy(sParam1, "ROLLED_STEEL" /* GXT: Rolled Steel */, 16);
			*iParam2 = 1;
			*iParam3 = 6;
			*iParam4 = 0;
			break;
		case 93:
			StringCopy(sParam1, "SHADOW_SILVER" /* GXT: Shadow Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 7;
			*iParam4 = 0;
			break;
		case 94:
			StringCopy(sParam1, "STONE_SILVER" /* GXT: Stone Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 8;
			*iParam4 = 0;
			break;
		case 95:
			StringCopy(sParam1, "MIDNIGHT_SILVER" /* GXT: Midnight Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 9;
			*iParam4 = 0;
			break;
		case 96:
			StringCopy(sParam1, "CAST_IRON_SIL" /* GXT: Cast Iron Silver */, 16);
			*iParam2 = 1;
			*iParam3 = 10;
			*iParam4 = 0;
			break;
		case 97:
			StringCopy(sParam1, "RED" /* GXT: Red */, 16);
			*iParam2 = 1;
			*iParam3 = 27;
			*iParam4 = 0;
			break;
		case 98:
			StringCopy(sParam1, "TORINO_RED" /* GXT: Torino Red */, 16);
			*iParam2 = 1;
			*iParam3 = 28;
			*iParam4 = 0;
			break;
		case 99:
			StringCopy(sParam1, "FORMULA_RED" /* GXT: Formula Red */, 16);
			*iParam2 = 1;
			*iParam3 = 29;
			*iParam4 = 0;
			break;
		case 100:
			StringCopy(sParam1, "LAVA_RED" /* GXT: Lava Red */, 16);
			*iParam2 = 1;
			*iParam3 = 150;
			*iParam4 = 0;
			break;
		case 101:
			StringCopy(sParam1, "BLAZE_RED" /* GXT: Blaze Red */, 16);
			*iParam2 = 1;
			*iParam3 = 30;
			*iParam4 = 0;
			break;
		case 102:
			StringCopy(sParam1, "GRACE_RED" /* GXT: Grace Red */, 16);
			*iParam2 = 1;
			*iParam3 = 31;
			*iParam4 = 0;
			break;
		case 103:
			StringCopy(sParam1, "GARNET_RED" /* GXT: Garnet Red */, 16);
			*iParam2 = 1;
			*iParam3 = 32;
			*iParam4 = 0;
			break;
		case 104:
			StringCopy(sParam1, "SUNSET_RED" /* GXT: Sunset Red */, 16);
			*iParam2 = 1;
			*iParam3 = 33;
			*iParam4 = 0;
			break;
		case 105:
			StringCopy(sParam1, "CABERNET_RED" /* GXT: Cabernet Red */, 16);
			*iParam2 = 1;
			*iParam3 = 34;
			*iParam4 = 0;
			break;
		case 106:
			StringCopy(sParam1, "WINE_RED" /* GXT: Wine Red */, 16);
			*iParam2 = 1;
			*iParam3 = 143;
			*iParam4 = 0;
			break;
		case 107:
			StringCopy(sParam1, "CANDY_RED" /* GXT: Candy Red */, 16);
			*iParam2 = 1;
			*iParam3 = 35;
			*iParam4 = 0;
			break;
		case 108:
			StringCopy(sParam1, "HOT PINK" /* GXT: Hot Pink */, 16);
			*iParam2 = 1;
			*iParam3 = 135;
			*iParam4 = 0;
			break;
		case 109:
			StringCopy(sParam1, "PINK" /* GXT: Pfister Pink */, 16);
			*iParam2 = 1;
			*iParam3 = 137;
			*iParam4 = 0;
			break;
		case 110:
			StringCopy(sParam1, "SALMON_PINK" /* GXT: Salmon Pink */, 16);
			*iParam2 = 1;
			*iParam3 = 136;
			*iParam4 = 0;
			break;
		case 111:
			StringCopy(sParam1, "SUNRISE_ORANGE" /* GXT: Sunrise Orange */, 16);
			*iParam2 = 1;
			*iParam3 = 36;
			*iParam4 = 0;
			break;
		case 112:
			StringCopy(sParam1, "BRIGHT_ORANGE" /* GXT: Bright Orange */, 16);
			*iParam2 = 1;
			*iParam3 = 138;
			*iParam4 = 0;
			break;
		case 113:
			StringCopy(sParam1, "GOLD" /* GXT: Gold */, 16);
			*iParam2 = 1;
			*iParam3 = 99;
			*iParam4 = 99;
			break;
		case 114:
			StringCopy(sParam1, "BRONZE" /* GXT: Bronze */, 16);
			*iParam2 = 1;
			*iParam3 = 90;
			*iParam4 = 102;
			break;
		case 115:
			StringCopy(sParam1, "YELLOW" /* GXT: Yellow */, 16);
			*iParam2 = 1;
			*iParam3 = 88;
			*iParam4 = 0;
			break;
		case 116:
			StringCopy(sParam1, "FLUR_YELLOW" /* GXT: Dew Yellow */, 16);
			*iParam2 = 1;
			*iParam3 = 91;
			*iParam4 = 0;
			break;
		case 117:
			StringCopy(sParam1, "DARK_GREEN" /* GXT: Dark Green */, 16);
			*iParam2 = 1;
			*iParam3 = 49;
			*iParam4 = 0;
			break;
		case 118:
			StringCopy(sParam1, "SEA_GREEN" /* GXT: Sea Green */, 16);
			*iParam2 = 1;
			*iParam3 = 51;
			*iParam4 = 0;
			break;
		case 119:
			StringCopy(sParam1, "OLIVE_GREEN" /* GXT: Olive Green */, 16);
			*iParam2 = 1;
			*iParam3 = 52;
			*iParam4 = 0;
			break;
		case 120:
			StringCopy(sParam1, "BRIGHT_GREEN" /* GXT: Bright Green */, 16);
			*iParam2 = 1;
			*iParam3 = 53;
			*iParam4 = 0;
			break;
		case 121:
			StringCopy(sParam1, "PETROL_GREEN" /* GXT: Gasoline Green */, 16);
			*iParam2 = 1;
			*iParam3 = 54;
			*iParam4 = 0;
			break;
		case 122:
			StringCopy(sParam1, "LIME_GREEN" /* GXT: Lime Green */, 16);
			*iParam2 = 1;
			*iParam3 = 92;
			*iParam4 = 0;
			break;
		case 123:
			StringCopy(sParam1, "MIDNIGHT_BLUE" /* GXT: Midnight Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 141;
			*iParam4 = 0;
			break;
		case 124:
			StringCopy(sParam1, "GALAXY_BLUE" /* GXT: Galaxy Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 61;
			*iParam4 = 0;
			break;
		case 125:
			StringCopy(sParam1, "DARK_BLUE" /* GXT: Dark Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 62;
			*iParam4 = 0;
			break;
		case 126:
			StringCopy(sParam1, "SAXON_BLUE" /* GXT: Saxon Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 63;
			*iParam4 = 0;
			break;
		case 127:
			StringCopy(sParam1, "BLUE" /* GXT: Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 64;
			*iParam4 = 0;
			break;
		case 128:
			StringCopy(sParam1, "MARINER_BLUE" /* GXT: Mariner Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 65;
			*iParam4 = 0;
			break;
		case 129:
			StringCopy(sParam1, "HARBOR_BLUE" /* GXT: Harbor Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 66;
			*iParam4 = 0;
			break;
		case 130:
			StringCopy(sParam1, "DIAMOND_BLUE" /* GXT: Diamond Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 67;
			*iParam4 = 0;
			break;
		case 131:
			StringCopy(sParam1, "SURF_BLUE" /* GXT: Surf Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 68;
			*iParam4 = 0;
			break;
		case 132:
			StringCopy(sParam1, "NAUTICAL_BLUE" /* GXT: Nautical Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 69;
			*iParam4 = 0;
			break;
		case 133:
			StringCopy(sParam1, "RACING_BLUE" /* GXT: Racing Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 73;
			*iParam4 = 0;
			break;
		case 134:
			StringCopy(sParam1, "LIGHT_BLUE" /* GXT: Light Blue */, 16);
			*iParam2 = 1;
			*iParam3 = 74;
			*iParam4 = 0;
			break;
		case 135:
			StringCopy(sParam1, "BISON_BROWN" /* GXT: Bison Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 101;
			*iParam4 = 0;
			break;
		case 136:
			StringCopy(sParam1, "CREEK_BROWN" /* GXT: Creek Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 95;
			*iParam4 = 0;
			break;
		case 137:
			StringCopy(sParam1, "UMBER_BROWN" /* GXT: Feltzer Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 94;
			*iParam4 = 0;
			break;
		case 138:
			StringCopy(sParam1, "MAPLE_BROWN" /* GXT: Maple Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 97;
			*iParam4 = 0;
			break;
		case 139:
			StringCopy(sParam1, "BEECHWOOD_BROWN" /* GXT: Beechwood Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 103;
			*iParam4 = 0;
			break;
		case 140:
			StringCopy(sParam1, "SIENNA_BROWN" /* GXT: Sienna Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 104;
			*iParam4 = 0;
			break;
		case 141:
			StringCopy(sParam1, "SADDLE_BROWN" /* GXT: Saddle Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 98;
			*iParam4 = 0;
			break;
		case 142:
			StringCopy(sParam1, "MOSS_BROWN" /* GXT: Moss Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 100;
			*iParam4 = 0;
			break;
		case 143:
			StringCopy(sParam1, "WOODBEECH_BROWN" /* GXT: Woodbeech Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 102;
			*iParam4 = 0;
			break;
		case 144:
			StringCopy(sParam1, "STRAW_BROWN" /* GXT: Straw Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 99;
			*iParam4 = 0;
			break;
		case 145:
			StringCopy(sParam1, "SANDY_BROWN" /* GXT: Sandy Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 105;
			*iParam4 = 0;
			break;
		case 146:
			StringCopy(sParam1, "BLEECHED_BROWN" /* GXT: Bleached Brown */, 16);
			*iParam2 = 1;
			*iParam3 = 106;
			*iParam4 = 0;
			break;
		case 147:
			StringCopy(sParam1, "PURPLE" /* GXT: Schafter Purple */, 16);
			*iParam2 = 1;
			*iParam3 = 71;
			*iParam4 = 0;
			break;
		case 148:
			StringCopy(sParam1, "SPIN_PURPLE" /* GXT: Spinnaker Purple */, 16);
			*iParam2 = 1;
			*iParam3 = 72;
			*iParam4 = 0;
			break;
		case 149:
			StringCopy(sParam1, "MIGHT_PURPLE" /* GXT: Midnight Purple */, 16);
			*iParam2 = 1;
			*iParam3 = 142;
			*iParam4 = 0;
			break;
		case 150:
			StringCopy(sParam1, "BRIGHT_PURPLE" /* GXT: Bright Purple */, 16);
			*iParam2 = 1;
			*iParam3 = 145;
			*iParam4 = 0;
			break;
		case 151:
			StringCopy(sParam1, "CREAM" /* GXT: Cream */, 16);
			*iParam2 = 1;
			*iParam3 = 107;
			*iParam4 = 0;
			break;
		case 152:
			StringCopy(sParam1, "FROST_WHITE" /* GXT: Frost White */, 16);
			*iParam2 = 1;
			*iParam3 = 112;
			*iParam4 = 0;
			break;
		case 153:
			StringCopy(sParam1, "BLACK" /* GXT: Black */, 16);
			*iParam2 = 2;
			*iParam3 = 12;
			*iParam4 = 0;
			break;
		case 154:
			StringCopy(sParam1, "GREY" /* GXT: Gray */, 16);
			*iParam2 = 2;
			*iParam3 = 13;
			*iParam4 = 0;
			break;
		case 155:
			StringCopy(sParam1, "LIGHT_GREY" /* GXT: Light Gray */, 16);
			*iParam2 = 2;
			*iParam3 = 14;
			*iParam4 = 0;
			break;
		case 156:
			StringCopy(sParam1, "WHITE" /* GXT: Ice White */, 16);
			*iParam2 = 2;
			*iParam3 = 131;
			*iParam4 = 0;
			break;
		case 157:
			StringCopy(sParam1, "BLUE" /* GXT: Blue */, 16);
			*iParam2 = 2;
			*iParam3 = 83;
			*iParam4 = 0;
			break;
		case 158:
			StringCopy(sParam1, "DARK_BLUE" /* GXT: Dark Blue */, 16);
			*iParam2 = 2;
			*iParam3 = 82;
			*iParam4 = 0;
			break;
		case 159:
			StringCopy(sParam1, "MIDNIGHT_BLUE" /* GXT: Midnight Blue */, 16);
			*iParam2 = 2;
			*iParam3 = 84;
			*iParam4 = 0;
			break;
		case 160:
			StringCopy(sParam1, "MIGHT_PURPLE" /* GXT: Midnight Purple */, 16);
			*iParam2 = 2;
			*iParam3 = 149;
			*iParam4 = 0;
			break;
		case 161:
			StringCopy(sParam1, "Purple" /* GXT: Schafter Purple */, 16);
			*iParam2 = 2;
			*iParam3 = 148;
			*iParam4 = 0;
			break;
		case 162:
			StringCopy(sParam1, "RED" /* GXT: Red */, 16);
			*iParam2 = 2;
			*iParam3 = 39;
			*iParam4 = 0;
			break;
		case 163:
			StringCopy(sParam1, "DARK_RED" /* GXT: Dark Red */, 16);
			*iParam2 = 2;
			*iParam3 = 40;
			*iParam4 = 0;
			break;
		case 164:
			StringCopy(sParam1, "ORANGE" /* GXT: Orange */, 16);
			*iParam2 = 2;
			*iParam3 = 41;
			*iParam4 = 0;
			break;
		case 165:
			StringCopy(sParam1, "YELLOW" /* GXT: Yellow */, 16);
			*iParam2 = 2;
			*iParam3 = 42;
			*iParam4 = 0;
			break;
		case 166:
			StringCopy(sParam1, "GREEN" /* GXT: Green */, 16);
			*iParam2 = 2;
			*iParam3 = 128;
			*iParam4 = 0;
			break;
		case 167:
			StringCopy(sParam1, "MATTE_FOR" /* GXT: Forest Green */, 16);
			*iParam2 = 2;
			*iParam3 = 151;
			*iParam4 = 0;
			break;
		case 168:
			StringCopy(sParam1, "MATTE_FOIL" /* GXT: Foliage Green */, 16);
			*iParam2 = 2;
			*iParam3 = 155;
			*iParam4 = 0;
			break;
		case 169:
			StringCopy(sParam1, "MATTE_OD" /* GXT: Olive Drab */, 16);
			*iParam2 = 2;
			*iParam3 = 152;
			*iParam4 = 0;
			break;
		case 170:
			StringCopy(sParam1, "MATTE_DIRT" /* GXT: Dark Earth */, 16);
			*iParam2 = 2;
			*iParam3 = 153;
			*iParam4 = 0;
			break;
		case 171:
			StringCopy(sParam1, "MATTE_DESERT" /* GXT: Desert Tan */, 16);
			*iParam2 = 2;
			*iParam3 = 154;
			*iParam4 = 0;
			break;
		case 172:
			StringCopy(sParam1, "BR_STEEL" /* GXT: Brushed Steel */, 16);
			*iParam2 = 3;
			*iParam3 = 117;
			*iParam4 = 18;
			break;
		case 173:
			StringCopy(sParam1, "BR_ALUMINIUM" /* GXT: Brushed Aluminum */, 16);
			*iParam2 = 3;
			*iParam3 = 119;
			*iParam4 = 5;
			break;
		case 174:
			StringCopy(sParam1, "GOLD_P" /* GXT: Pure Gold */, 16);
			*iParam2 = 3;
			*iParam3 = 158;
			*iParam4 = 160;
			break;
		case 175:
			StringCopy(sParam1, "GOLD_S" /* GXT: Brushed Gold */, 16);
			*iParam2 = 3;
			*iParam3 = 159;
			*iParam4 = 160;
			break;
	}
	return *iParam2 != -1;
}

int func_896(int iParam0)//Position - 0xCA6BE
{
	char cVar0[64];
	if (iParam0 == -1)
	{
		iParam0 = 0;
	}
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v1", 64);
			break;
		case 2:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v2", 64);
			break;
		case 3:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v3", 64);
			break;
		case 4:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v4", 64);
			break;
		case 5:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v5", 64);
			break;
		case 6:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v6", 64);
			break;
		case 7:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v7", 64);
			break;
		case 8:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v8", 64);
			break;
		case 9:
			StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v9", 64);
			break;
	}
	if (iParam0 >= 10)
	{
		StringCopy(&cVar0, "PACKED_NG_VEHICLE_INSURANCE_v", 64);
		StringIntConCat(&cVar0, iParam0, 64);
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_897(char[16] cParam0, var uParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0xCCA28
{
	Global_100493.f_1384 = { cParam0 };
	Global_100493.f_1388 = uParam1;
	Global_100493.f_1389 = iParam2;
	Global_100493.f_1390 = iParam3;
	Global_100493.f_1391 = iParam4;
	Global_100493.f_1392 = iParam5;
}

void func_898(char* sParam0, var uParam1, int iParam2)//Position - 0xCCA6A
{
	if (iParam2 >= 0 && iParam2 < 128)
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_100493.f_1557[iParam2 /*4*/])))
		{
			*sParam0 = { Global_100493.f_484[iParam2 /*4*/] };
		}
		else
		{
			*sParam0 = { Global_100493.f_1557[iParam2 /*4*/] };
		}
		*uParam1 = Global_100493.f_997[iParam2];
	}
	else
	{
		StringCopy(sParam0, "", 16);
		*uParam1 = 0;
	}
}

void func_899(bool bParam0)//Position - 0xCCAD6
{
	if (bParam0)
	{
		if (!BitTest(uLocal_203, 1))
		{
			MISC::SET_BIT(&uLocal_203, 1);
		}
	}
	else if (BitTest(uLocal_203, 1))
	{
		MISC::CLEAR_BIT(&uLocal_203, 1);
	}
}

void func_900(int iParam0)//Position - 0xCCD55
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 != -1)
	{
		if (Local_124.f_443 == 27)
		{
			switch (MISC::GET_HASH_KEY(&(Global_100493.f_484[iParam0 /*4*/])))
			{
				case joaat("HORN_HWEEN1"):
					__LIB_0__::func_186(4324, 1, -1);
					break;
				case joaat("HORN_HWEEN2"):
					__LIB_0__::func_186(4325, 1, -1);
					break;
			}
		}
		else if (Local_124.f_443 == 65)
		{
			switch (MISC::GET_HASH_KEY(&(Global_100493.f_484[iParam0 /*4*/])))
			{
				case joaat("BOBBLE_BRD1"):
					__LIB_0__::func_186(4300, 1, -1);
					break;
				case joaat("BOBBLE_BRD2"):
					__LIB_0__::func_186(4301, 1, -1);
					break;
				case joaat("BOBBLE_BRD3"):
					__LIB_0__::func_186(4302, 1, -1);
					break;
				case joaat("BOBBLE_SLH1"):
					__LIB_0__::func_186(4303, 1, -1);
					break;
				case joaat("BOBBLE_SLH2"):
					__LIB_0__::func_186(4304, 1, -1);
					break;
				case joaat("BOBBLE_SLH3"):
					__LIB_0__::func_186(4305, 1, -1);
					break;
				case joaat("BOBBLE_ZOM1"):
					__LIB_0__::func_186(4306, 1, -1);
					break;
				case joaat("BOBBLE_ZOM2"):
					__LIB_0__::func_186(4307, 1, -1);
					break;
				case joaat("BOBBLE_ZOM3"):
					__LIB_0__::func_186(4308, 1, -1);
					break;
				case joaat("BOBBLE_GC1"):
					__LIB_0__::func_186(4309, 1, -1);
					break;
				case joaat("BOBBLE_GC2"):
					__LIB_0__::func_186(4310, 1, -1);
					break;
				case joaat("BOBBLE_GC3"):
					__LIB_0__::func_186(4311, 1, -1);
					break;
				case joaat("BOBBLE_FRNK1"):
					__LIB_0__::func_186(4312, 1, -1);
					break;
				case joaat("BOBBLE_FRNK2"):
					__LIB_0__::func_186(4313, 1, -1);
					break;
				case joaat("BOBBLE_FRNK3"):
					__LIB_0__::func_186(4314, 1, -1);
					break;
				case joaat("BOBBLE_MUM1"):
					__LIB_0__::func_186(4315, 1, -1);
					break;
				case joaat("BOBBLE_MUM2"):
					__LIB_0__::func_186(4316, 1, -1);
					break;
				case joaat("BOBBLE_MUM3"):
					__LIB_0__::func_186(4317, 1, -1);
					break;
				case joaat("BOBBLE_WOLF1"):
					__LIB_0__::func_186(4318, 1, -1);
					break;
				case joaat("BOBBLE_WOLF2"):
					__LIB_0__::func_186(4319, 1, -1);
					break;
				case joaat("BOBBLE_WOLF3"):
					__LIB_0__::func_186(4320, 1, -1);
					break;
				case joaat("BOBBLE_VAMP1"):
					__LIB_0__::func_186(4321, 1, -1);
					break;
				case joaat("BOBBLE_VAMP2"):
					__LIB_0__::func_186(4322, 1, -1);
					break;
				case joaat("BOBBLE_VAMP3"):
					__LIB_0__::func_186(4323, 1, -1);
					break;
				}
			}
	}
}

int func_901(var uParam0, int iParam1, int iParam2)//Position - 0xCE3D3
{
	if (*uParam0 != -1)
	{
		if (uParam0->f_4 > iParam2)
		{
			return 0;
		}
	}
	*uParam0 = iParam1;
	uParam0->f_4 = iParam2;
	return 1;
}

void func_902(struct<3> Param0, var uParam1, var uParam2)//Position - 0xCE3FB
{
	__LIB_2__::func_697(Param0, uParam1, uParam2);
}

void func_903(char* sParam0, char* sParam1)//Position - 0xD0D79
{
	int iVar0;
	char* sVar1;
	char* sVar2;
	char* sVar3;
	iVar0 = Local_124.f_12;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return;
	}
	sVar1 = sParam0;
	sVar2 = sParam1;
	sVar3 = "ARENA_MECH";
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !PED::IS_PED_INJURED(iVar0))
		{
			AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(iVar0, "MP_CAR_MOD_SHOP_MECHANIC_GROUP", 0f);
		}
	}
	if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !PED::IS_PED_INJURED(iVar0)) && !MISC::IS_STRING_NULL_OR_EMPTY(sVar3))
	{
		if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
		{
			AUDIO::PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(iVar0, sVar1, sVar3, sVar2, true);
		}
		else
		{
			NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(iVar0));
		}
	}
}

void func_904()//Position - 0xD0E6D
{
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
	}
}

void func_905(var uParam0)//Position - 0xD0E81
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (*uParam0 - 1))
	{
		if (CAM::DOES_CAM_EXIST((*uParam0)[iVar0 /*12*/]))
		{
			CAM::SET_CAM_ACTIVE((*uParam0)[iVar0 /*12*/], false);
		}
		iVar0++;
	}
}

void func_906(bool bParam0)//Position - 0xD1361
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 20))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 20);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 20))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 20);
	}
}

int func_907(int iParam0)//Position - 0xD5443
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("youga3"):
				return 1;
				break;
		}
		if (((((__LIB_0__::func_176(ENTITY::GET_ENTITY_MODEL(iParam0), 0) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("fcr2")) && !__LIB_1__::func_771(ENTITY::GET_ENTITY_MODEL(iParam0))) && !__LIB_0__::func_809(iParam0)) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("rcbandito")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("minitank"))
		{
			return 0;
		}
	}
	return 1;
}

bool func_908()//Position - 0xD9D9A
{
	return DLC::IS_DLC_PRESENT(-1357982869);
}

float func_909(int iParam0)//Position - 0xDA169
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_20217 /* Tunable: -480955863 */;
		case 1:
			return Global_262145.f_20218 /* Tunable: 1102868234 */;
		case 2:
			return Global_262145.f_20219 /* Tunable: 270240713 */;
		case 3:
			return Global_262145.f_20220 /* Tunable: 577941623 */;
		case 4:
			return Global_262145.f_20221 /* Tunable: 2024299745 */;
		case 5:
			return Global_262145.f_20222 /* Tunable: -153036456 */;
		default:
	}
	return Global_262145.f_20222 /* Tunable: -153036456 */;
}

void func_910(int iParam0, int iParam1, var uParam2)//Position - 0xF655F
{
	Global_1585308 = iParam0;
	Global_1585309 = iParam1;
	Global_1585310 = uParam2;
}

int func_911(int iParam0, int iParam1)//Position - 0xF6A65
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam0 == Local_124.f_406)
		{
			return iLocal_484[iParam1];
		}
		else if ((((iParam1 == 21 || iParam1 == 17) || iParam1 == 19) || iParam1 == 18) || iParam1 == 20)
		{
			if (VEHICLE::IS_TOGGLE_MOD_ON(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else if (iParam1 == 22)
		{
			if (VEHICLE::IS_TOGGLE_MOD_ON(iParam0, iParam1))
			{
				switch (VEHICLE::GET_VEHICLE_XENON_LIGHT_COLOR_INDEX(iParam0))
				{
					case 255:
						return 1;
					case 0:
						return 2;
					case 1:
						return 3;
					case 2:
						return 4;
					case 3:
						return 5;
					case 4:
						return 6;
					case 5:
						return 7;
					case 6:
						return 8;
					case 7:
						return 9;
					case 8:
						return 10;
					case 9:
						return 11;
					case 10:
						return 12;
					case 11:
						return 13;
					case 12:
						return 14;
					default:
				}
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return VEHICLE::GET_VEHICLE_MOD(iParam0, iParam1);
		}
	}
	return -1;
}

int func_912(int iParam0)//Position - 0xF74FA
{
	switch (iParam0)
	{
		case joaat("slamvan"):
		case joaat("glendale"):
			return 1;
			break;
	}
	return 0;
}

int func_913(int iParam0)//Position - 0xF7C41
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("futo"):
				if (Global_262145.f_24222 /* Tunable: ENABLE_FUTO_MODS */)
				{
					return 1;
				}
				break;
			case joaat("penumbra"):
				if (Global_262145.f_24228 /* Tunable: ENABLE_PENUMBRA_MODS */)
				{
					return 1;
				}
				break;
			case joaat("coquette2"):
				if (Global_262145.f_24230 /* Tunable: ENABLE_COQUETTE_MODS */)
				{
					return 1;
				}
				break;
			case joaat("mamba"):
				if (Global_262145.f_24229 /* Tunable: ENABLE_MAMBA_MODS */)
				{
					return 1;
				}
				break;
			case joaat("ruiner"):
				if (Global_262145.f_24223 /* Tunable: ENABLE_RUINER_MODS */)
				{
					return 1;
				}
				break;
			case joaat("prairie"):
				if (Global_262145.f_24225 /* Tunable: ENABLE_PRAIRIE_MODS */)
				{
					return 1;
				}
				break;
			case joaat("jester3"):
				if (Global_262145.f_24227 /* Tunable: ENABLE_JESTER_MODS */)
				{
					return 1;
				}
				break;
			case joaat("romero"):
				if (Global_262145.f_24224 /* Tunable: ENABLE_HEARSE_MODS */)
				{
					return 1;
				}
				break;
			case joaat("patriot"):
				if (Global_262145.f_24226 /* Tunable: ENABLE_PATRIOT_MODS */)
				{
					return 1;
				}
				break;
			}
	}
	return 0;
}

int func_914(int iParam0)//Position - 0xF7DC8
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (__LIB_7__::func_127(iVar0))
	{
		if (VEHICLE::GET_VEHICLE_MOD(iParam0, 36) == -1)
		{
			return 1;
		}
	}
	return 0;
}

int func_915()//Position - 0xF7E6D
{
	switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
	{
		case joaat("btype3"):
		case joaat("calico"):
		case joaat("comet6"):
		case joaat("cypher"):
		case joaat("dominator7"):
		case joaat("jester4"):
		case joaat("remus"):
		case joaat("vectre"):
		case joaat("zr350"):
		case joaat("warrener2"):
		case joaat("rt3000"):
		case joaat("futo2"):
		case joaat("tailgater2"):
		case joaat("sultan3"):
		case joaat("dominator8"):
		case joaat("euros"):
		case joaat("growler"):
		case joaat("previon"):
		case joaat("torero2"):
		case joaat("corsita"):
		case joaat("kanjosj"):
		case joaat("postlude"):
		case joaat("draugur"):
		case joaat("greenwood"):
		case joaat("lm87"):
		case joaat("sentinel4"):
		case joaat("picador"):
			return 1;
			break;
	}
	return 0;
}

bool func_916(int iParam0)//Position - 0xF7F2E
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 % 32);
	iVar1 = (iParam0 / 32);
	return BitTest(Global_102577[iVar1], iVar0);
}

int func_917()//Position - 0xFB39A
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Global_1585308))
		{
			case joaat("apc"):
			case joaat("halftrack"):
			case joaat("dune3"):
			case joaat("tampa3"):
			case joaat("trailersmall2"):
			case joaat("insurgent3"):
			case joaat("technical3"):
			case joaat("oppressor"):
			case joaat("comet4"):
			case joaat("deluxo"):
			case joaat("revolter"):
			case joaat("savestra"):
			case joaat("viseris"):
			case joaat("caracara"):
			case joaat("oppressor2"):
			case joaat("cerberus"):
			case joaat("monster3"):
			case joaat("slamvan4"):
			case joaat("issi4"):
			case joaat("deathbike"):
			case joaat("imperator"):
			case joaat("deathbike2"):
			case joaat("deathbike3"):
			case joaat("slamvan5"):
			case joaat("issi5"):
			case joaat("monster4"):
			case joaat("cerberus2"):
			case joaat("dominator5"):
			case joaat("slamvan6"):
			case joaat("issi6"):
			case joaat("monster5"):
			case joaat("cerberus3"):
			case joaat("dominator6"):
			case joaat("imperator2"):
			case joaat("imperator3"):
			case joaat("jb7002"):
			case joaat("minitank"):
				return 1;
			}
		default:
	}
	return 0;
}

int func_918()//Position - 0xFB49D
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_1585308, false))
		{
			if ((((ENTITY::GET_ENTITY_MODEL(Global_1585308) == joaat("nero2") || ENTITY::GET_ENTITY_MODEL(Global_1585308) == joaat("comet3")) || ENTITY::GET_ENTITY_MODEL(Global_1585308) == joaat("elegy")) || ENTITY::GET_ENTITY_MODEL(Global_1585308) == joaat("italigtb2")) || ENTITY::GET_ENTITY_MODEL(Global_1585308) == joaat("specter2"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_919()//Position - 0xFB522
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(Global_1585308);
		switch (iVar0)
		{
			case joaat("apc"):
			case joaat("dune3"):
			case joaat("halftrack"):
			case joaat("tampa3"):
			case joaat("insurgent3"):
			case joaat("technical3"):
			case joaat("oppressor"):
				return 1;
				break;
			default:
				if (__LIB_0__::func_811(iVar0))
				{
					return 1;
				}
				break;
			}
	}
	return 0;
}

int func_920()//Position - 0xFB6A0
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(Global_1585308);
		switch (iVar0)
		{
			case joaat("apc"):
			case joaat("halftrack"):
			case joaat("dune3"):
			case joaat("tampa3"):
			case joaat("trailersmall2"):
			case joaat("insurgent3"):
			case joaat("technical3"):
			case joaat("pounder2"):
			case joaat("speedo4"):
			case joaat("mule4"):
			case joaat("imperator"):
			case joaat("deathbike"):
			case joaat("cerberus"):
			case joaat("bruiser"):
			case joaat("dominator4"):
			case joaat("zr380"):
			case joaat("issi4"):
			case joaat("imperator2"):
			case joaat("deathbike2"):
			case joaat("cerberus2"):
			case joaat("bruiser2"):
			case joaat("dominator5"):
			case joaat("zr3802"):
			case joaat("issi5"):
			case joaat("imperator3"):
			case joaat("deathbike3"):
			case joaat("cerberus3"):
			case joaat("bruiser3"):
			case joaat("dominator6"):
			case joaat("zr3803"):
			case joaat("issi6"):
			case joaat("brutus"):
			case joaat("brutus2"):
			case joaat("brutus3"):
				return 1;
				break;
			default:
				if (__LIB_0__::func_811(iVar0))
				{
					return 1;
				}
				break;
			}
	}
	return 0;
}

int func_921()//Position - 0xFB7A8
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_1585308, false))
		{
			switch (ENTITY::GET_ENTITY_MODEL(Global_1585308))
			{
				case joaat("monster3"):
				case joaat("cerberus"):
				case joaat("bruiser"):
				case joaat("brutus"):
				case joaat("scarab"):
				case joaat("dominator4"):
				case joaat("impaler2"):
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
				case joaat("zr380"):
				case joaat("issi4"):
				case joaat("slamvan4"):
				case joaat("rcbandito"):
				case joaat("impaler3"):
				case joaat("brutus2"):
				case joaat("bruiser2"):
				case joaat("slamvan5"):
				case joaat("issi5"):
				case joaat("monster4"):
				case joaat("scarab2"):
				case joaat("cerberus2"):
				case joaat("dominator5"):
				case joaat("zr3802"):
				case joaat("impaler4"):
				case joaat("brutus3"):
				case joaat("bruiser3"):
				case joaat("slamvan6"):
				case joaat("issi6"):
				case joaat("monster5"):
				case joaat("scarab3"):
				case joaat("cerberus3"):
				case joaat("dominator6"):
				case joaat("zr3803"):
				case joaat("deathbike"):
				case joaat("deathbike2"):
				case joaat("deathbike3"):
					return 1;
					break;
				}
			}
	}
	return 0;
}

int func_922()//Position - 0xFB8BA
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_1585308))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_1585308, false))
		{
			switch (ENTITY::GET_ENTITY_MODEL(Global_1585308))
			{
				case joaat("monster3"):
				case joaat("cerberus"):
				case joaat("bruiser"):
				case joaat("brutus"):
				case joaat("scarab"):
				case joaat("dominator4"):
				case joaat("impaler2"):
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
				case joaat("zr380"):
				case joaat("issi4"):
				case joaat("deathbike"):
				case joaat("deathbike2"):
				case joaat("deathbike3"):
				case joaat("slamvan4"):
				case joaat("impaler3"):
				case joaat("brutus2"):
				case joaat("bruiser2"):
				case joaat("slamvan5"):
				case joaat("issi5"):
				case joaat("monster4"):
				case joaat("scarab2"):
				case joaat("cerberus2"):
				case joaat("dominator5"):
				case joaat("zr3802"):
				case joaat("impaler4"):
				case joaat("brutus3"):
				case joaat("bruiser3"):
				case joaat("slamvan6"):
				case joaat("issi6"):
				case joaat("monster5"):
				case joaat("scarab3"):
				case joaat("cerberus3"):
				case joaat("dominator6"):
				case joaat("zr3803"):
					return 1;
					break;
				}
			}
	}
	return 0;
}

int func_923()//Position - 0xFC71D
{
	if (((AUDIO::IS_AMBIENT_SPEECH_PLAYING(Local_124.f_12) || AUDIO::IS_SCRIPTED_SPEECH_PLAYING(Local_124.f_12)) || AUDIO::IS_ANY_SPEECH_PLAYING(Local_124.f_12)) || AUDIO::IS_PED_IN_CURRENT_CONVERSATION(Local_124.f_12))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_1__::func_510(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	return 1;
}

void func_924()//Position - 0xFCD54
{
	Global_100493.f_7 = 3;
}

bool func_925()//Position - 0xFCD79
{
	return Global_100493.f_7 <= 0;
}

int func_926(bool bParam0)//Position - 0xFCE0C
{
	if (bParam0)
	{
		if ((((((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("feltzer3") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("coquette3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("buccaneer2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("faction2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("moonbeam2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("banshee2"))
		{
			return 1;
		}
	}
	else if (((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("buccaneer2") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("faction2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("moonbeam2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("btype3"))
	{
		return 1;
	}
	return 0;
}

bool func_927()//Position - 0xFFB70
{
	return NETWORK::NETWORK_IS_CABLE_CONNECTED();
}

int func_928()//Position - 0xFFE90
{
	if (Local_124.f_676 == 2)
	{
		return 1;
	}
	return 0;
}

int func_929(int iParam0)//Position - 0x10002E
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
	}
	return 0;
}

void func_930(bool bParam0)//Position - 0x10007C
{
	if (bParam0)
	{
		bLocal_427 = true;
	}
	else
	{
		bLocal_427 = false;
	}
}

void func_931(int iParam0, int iParam1)//Position - 0x102140
{
	MISC::CLEAR_BIT(&(Global_1649593.f_7057[iParam0]), iParam1);
}

void func_932(int iParam0, int iParam1)//Position - 0x102159
{
	MISC::SET_BIT(&(Global_1649593.f_7057[iParam0]), iParam1);
}

char* func_933(int iParam0)//Position - 0x102172
{
	switch (iParam0)
	{
		case 31:
			return "PERSO_MOD_SER" /* GXT: Service */;
		case 38:
			return "CMOD_MOD_COL";
		case 89:
			return "TUN_CLIENT_CHECP" /* GXT: Performance */;
		case 55:
			return "CMOD_MOD_WHEM";
		case 86:
			return "TOP_BODY" /* GXT: Bodywork */;
		case 0:
			return "TUN_CLIENT_CHECT" /* GXT: CHECKLIST */;
		default:
	}
	return "";
}

int func_934()//Position - 0x1021D8
{
	return 34780;
}

void func_935(char* sParam0)//Position - 0x1021F2
{
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam0);
	}
}

char* func_936(int iParam0)//Position - 0x10220A
{
	switch (iParam0)
	{
		case 0:
			return "CMOD_WHE1_5";
		case 1:
			return "CMOD_WHE1_3";
		case 2:
			return "CMOD_WHE1_2";
		case 3:
			return "CMOD_WHE1_6";
		case 4:
			return "CMOD_WHE1_4";
		case 5:
			return "CMOD_WHE1_7";
		case 6:
			return "CMOD_WHE1_0";
		case 7:
			return "CMOD_WHE1_1";
		case 8:
			return "CMOD_WHE1_8";
		case 9:
			return "CMOD_WHE1_9";
		case 10:
			return "CMOD_WHE1_10";
		case 11:
			return "CMOD_WHE1_11";
		case 12:
			return "CMOD_WHE1_12";
		default:
	}
	return "";
}

int func_937(int iParam0)//Position - 0x102303
{
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 147;
		case 2:
			return 1;
		case 3:
			return 11;
		case 4:
			return 2;
		case 5:
			return 3;
		case 6:
			return 4;
		case 7:
			return 5;
		case 8:
			return 6;
		case 9:
			return 7;
		case 10:
			return 8;
		case 11:
			return 9;
		case 12:
			return 10;
		case 13:
			return 27;
		case 14:
			return 28;
		case 15:
			return 29;
		case 16:
			return 150;
		case 17:
			return 30;
		case 18:
			return 31;
		case 19:
			return 32;
		case 20:
			return 33;
		case 21:
			return 34;
		case 22:
			return 143;
		case 23:
			return 35;
		case 24:
			return 135;
		case 25:
			return 137;
		case 26:
			return 136;
		case 27:
			return 36;
		case 28:
			return 38;
		case 29:
			return 138;
		case 30:
			return 37;
		case 31:
			return 90;
		case 32:
			return 88;
		case 33:
			return 89;
		case 34:
			return 91;
		case 35:
			return 49;
		case 36:
			return 50;
		case 37:
			return 51;
		case 38:
			return 52;
		case 39:
			return 53;
		case 40:
			return 54;
		case 41:
			return 92;
		case 42:
			return 141;
		case 43:
			return 61;
		case 44:
			return 62;
		case 45:
			return 63;
		case 46:
			return 64;
		case 47:
			return 65;
		case 48:
			return 66;
		case 49:
			return 67;
		case 50:
			return 68;
		case 51:
			return 69;
		case 52:
			return 73;
		case 53:
			return 70;
		case 54:
			return 74;
		case 55:
			return 96;
		case 56:
			return 101;
		case 57:
			return 95;
		case 58:
			return 94;
		case 59:
			return 97;
		case 60:
			return 103;
		case 61:
			return 104;
		case 62:
			return 98;
		case 63:
			return 100;
		case 64:
			return 102;
		case 65:
			return 99;
		case 66:
			return 105;
		case 67:
			return 106;
		case 68:
			return 71;
		case 69:
			return 72;
		case 70:
			return 146;
		case 71:
			return 145;
		case 72:
			return 107;
		case 73:
			return 111;
		case 74:
			return 112;
		default:
	}
	return 0;
}

void func_938(int iParam0)//Position - 0x102644
{
	if (iParam0 > -1)
	{
		HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
	}
}

char* func_939(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x102658
{
	bool bVar0;
	int iVar1;
	bVar0 = false;
	if (iParam1 != -1 && iParam1 != -99)
	{
		bVar0 = true;
		iVar1++;
	}
	if (iParam2 != -1 && iParam2 != -99)
	{
		bVar0 = true;
		iVar1++;
	}
	if (iParam3 != -1 && iParam3 != -99)
	{
		bVar0 = true;
		iVar1++;
	}
	switch (iParam0)
	{
		case 1:
			if (!bVar0)
			{
				return "TUN_CLIENT_OB14" /* GXT: Requested upgrade: ~a~ (~a~). */;
			}
			else
			{
				return "TUN_CLIENT_OB17" /* GXT: Requested upgrade: ~a~ (~a~~1~). */;
			}
			break;
		case 2:
			if (!bVar0)
			{
				return "TUN_CLIENT_OB13" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~). */;
			}
			else if (iVar1 == 2)
			{
				return "TUN_CLIENT_OB16" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~~1~). */;
			}
			else if ((iParam3 != -1 && iParam3 != -99) || (iParam2 != -1 && iParam3 == -99))
			{
				return "TUN_CLIENT_OB18" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~~1~). */;
			}
			else
			{
				return "TUN_CLIENT_OB19" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~). */;
			}
			break;
		case 3:
			if (!bVar0)
			{
				return "TUN_CLIENT_OB12" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~), ~a~ (~a~). */;
			}
			else if (iVar1 == 3)
			{
				return "TUN_CLIENT_OB15" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~~1~), ~a~ (~a~~1~). */;
			}
			else if (iVar1 == 2)
			{
				if (iParam1 != -1)
				{
					return "TUN_CLIENT_OB23" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~~1~), ~a~ (~a~~1~). */;
				}
				else if (iParam2 != -1)
				{
					return "TUN_CLIENT_OB24" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~), ~a~ (~a~~1~). */;
				}
				else
				{
					return "TUN_CLIENT_OB25" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~~1~), ~a~ (~a~). */;
				}
			}
			else if (iParam1 != -1)
			{
				return "TUN_CLIENT_OB20" /* GXT: Requested upgrades: ~a~ (~a~~1~), ~a~ (~a~), ~a~ (~a~). */;
			}
			else if (iParam2 != -1)
			{
				return "TUN_CLIENT_OB21" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~~1~), ~a~ (~a~). */;
			}
			else
			{
				return "TUN_CLIENT_OB22" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~), ~a~ (~a~~1~). */;
			}
			break;
	}
	return "";
}

int func_940(char* sParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x1027CD
{
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
	{
		if (iParam1 == 14)
		{
			StringCopy(sParam0, __LIB_4__::func_877(iParam2), 16);
			return !MISC::IS_STRING_NULL_OR_EMPTY(sParam0);
		}
		else
		{
			iParam2 = (iParam2 - 1);
			if (!bParam3)
			{
				if (Local_124.f_443 == 8 && iParam1 == 2)
				{
					iParam2 = (iParam2 - 20);
				}
				else if (Local_124.f_443 == 15 && iParam1 == 9)
				{
					iParam2 = (iParam2 - 21);
				}
			}
			if (iParam2 >= 0)
			{
				if ((iParam1 == 23 || iParam1 == 24) && VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
				{
					if (iParam2 < 26)
					{
						StringCopy(sParam0, VEHICLE::GET_MOD_TEXT_LABEL(Local_124.f_406, iParam1, iParam2), 16);
					}
					else if ((iParam2 >= 26 && iParam2 < 49) && Local_124.f_605 == 0)
					{
						StringCopy(sParam0, "BIKEW_", 16);
						StringIntConCat(sParam0, (iParam2 - 12), 16);
					}
					else if (iParam2 >= 49 && Local_124.f_605 == 1)
					{
						StringCopy(sParam0, "RWD_BIKEW_", 16);
						StringIntConCat(sParam0, (iParam2 - 35), 16);
					}
					if (MISC::GET_HASH_KEY(sParam0) != 0)
					{
						return 1;
					}
				}
				else
				{
					StringCopy(sParam0, VEHICLE::GET_MOD_TEXT_LABEL(Local_124.f_406, iParam1, iParam2), 16);
					if (MISC::GET_HASH_KEY(sParam0) != 0)
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_941(int iParam0)//Position - 0x10292D
{
	switch (iParam0)
	{
		case 0:
			return 34776;
		case 1:
			return 34777;
		case 2:
			return 34778;
		default:
	}
	return 0;
}

char* func_942(int iParam0)//Position - 0x1029E7
{
	switch (iParam0)
	{
		case 1:
			return "TUN_CLIENT_OBJ7" /* GXT: Requested upgrades: ~a~ (~a~). */;
		case 2:
			return "TUN_CLIENT_OBJ6" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~). */;
		case 3:
			return "TUN_CLIENT_OBJ5" /* GXT: Requested upgrades: ~a~ (~a~), ~a~ (~a~), ~a~ (~a~). */;
		default:
	}
	return "";
}

int func_943(int iParam0)//Position - 0x1054DB
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("tampa3"):
			case joaat("barrage"):
			case joaat("pounder2"):
			case joaat("mule4"):
			case joaat("speedo4"):
			case joaat("oppressor2"):
			case joaat("imperator"):
			case joaat("bruiser"):
			case joaat("cerberus"):
			case joaat("monster3"):
			case joaat("scarab"):
			case joaat("slamvan4"):
			case joaat("dominator4"):
			case joaat("impaler2"):
			case joaat("zr380"):
			case joaat("brutus"):
			case joaat("issi4"):
			case joaat("deathbike"):
			case joaat("deathbike2"):
			case joaat("deathbike3"):
			case joaat("impaler3"):
			case joaat("brutus2"):
			case joaat("bruiser2"):
			case joaat("slamvan5"):
			case joaat("issi5"):
			case joaat("monster4"):
			case joaat("scarab2"):
			case joaat("cerberus2"):
			case joaat("dominator5"):
			case joaat("zr3802"):
			case joaat("impaler4"):
			case joaat("brutus3"):
			case joaat("bruiser3"):
			case joaat("slamvan6"):
			case joaat("issi6"):
			case joaat("monster5"):
			case joaat("scarab3"):
			case joaat("cerberus3"):
			case joaat("dominator6"):
			case joaat("zr3803"):
			case joaat("imperator2"):
			case joaat("imperator3"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_944(int iParam0)//Position - 0x105663
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("imperator"):
			case joaat("torero"):
			case joaat("nightshark"):
			case joaat("barrage"):
			case joaat("bruiser"):
			case joaat("cerberus"):
			case joaat("monster3"):
			case joaat("scarab"):
			case joaat("slamvan4"):
			case joaat("dominator4"):
			case joaat("impaler2"):
			case joaat("zr380"):
			case joaat("brutus"):
			case joaat("issi4"):
			case joaat("deathbike"):
			case joaat("deathbike2"):
			case joaat("deathbike3"):
			case joaat("impaler3"):
			case joaat("brutus2"):
			case joaat("bruiser2"):
			case joaat("slamvan5"):
			case joaat("issi5"):
			case joaat("monster4"):
			case joaat("scarab2"):
			case joaat("cerberus2"):
			case joaat("dominator5"):
			case joaat("zr3802"):
			case joaat("impaler4"):
			case joaat("brutus3"):
			case joaat("bruiser3"):
			case joaat("slamvan6"):
			case joaat("issi6"):
			case joaat("monster5"):
			case joaat("scarab3"):
			case joaat("cerberus3"):
			case joaat("dominator6"):
			case joaat("zr3803"):
			case joaat("imperator2"):
			case joaat("imperator3"):
				return 1;
			}
		default:
	}
	return 0;
}

int func_945()//Position - 0x10576F
{
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
		{
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("diablous2") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("fcr2"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_946(int iParam0)//Position - 0x1057C0
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("sultanrs"):
			case joaat("elegy"):
			case joaat("nero2"):
			case joaat("gauntlet5"):
			case joaat("youga3"):
			case joaat("warrener2"):
			case joaat("euros"):
			case joaat("tenf2"):
				return 1;
			}
		default:
	}
	return 0;
}

int func_947(int iParam0)//Position - 0x105812
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("sultanrs"):
			case joaat("elegy"):
			case joaat("comet3"):
			case joaat("italigtb2"):
			case joaat("slamvan4"):
			case joaat("slamvan5"):
			case joaat("slamvan6"):
			case joaat("youga3"):
			case joaat("yosemite3"):
			case joaat("vectre"):
			case joaat("comet6"):
			case joaat("cypher"):
			case joaat("previon"):
			case joaat("euros"):
			case joaat("sultan3"):
			case joaat("kanjosj"):
				return 1;
			}
		default:
	}
	return 0;
}

int func_948(int iParam0)//Position - 0x105894
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("sultanrs"):
			case joaat("elegy"):
			case joaat("bruiser"):
			case joaat("bruiser2"):
			case joaat("bruiser3"):
			case joaat("brutus"):
			case joaat("brutus2"):
			case joaat("brutus3"):
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
			case joaat("deathbike"):
			case joaat("deathbike2"):
			case joaat("deathbike3"):
			case joaat("dominator4"):
			case joaat("dominator5"):
			case joaat("dominator6"):
			case joaat("impaler2"):
			case joaat("impaler3"):
			case joaat("impaler4"):
			case joaat("imperator"):
			case joaat("imperator2"):
			case joaat("imperator3"):
			case joaat("issi4"):
			case joaat("issi5"):
			case joaat("issi6"):
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
			case joaat("scarab"):
			case joaat("scarab2"):
			case joaat("scarab3"):
			case joaat("slamvan4"):
			case joaat("slamvan5"):
			case joaat("slamvan6"):
			case joaat("zr380"):
			case joaat("zr3802"):
			case joaat("zr3803"):
			case joaat("kanjo"):
			case joaat("calico"):
			case joaat("comet6"):
			case joaat("sultan3"):
			case joaat("remus"):
			case joaat("rt3000"):
			case joaat("brioso3"):
			case joaat("sentinel4"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_949(int iParam0)//Position - 0x105A61
{
	switch (iParam0)
	{
		case joaat("sultanrs"):
		case joaat("elegy"):
		case joaat("calico"):
		case joaat("warrener2"):
		case joaat("remus"):
		case joaat("jester4"):
		case joaat("vectre"):
		case joaat("rt3000"):
		case joaat("dominator7"):
		case joaat("sultan3"):
		case joaat("tailgater2"):
		case joaat("previon"):
		case joaat("futo2"):
		case joaat("euros"):
			return 1;
			break;
	}
	return 0;
}

char* func_950(int iParam0)//Position - 0x105ACC
{
	switch (iParam0)
	{
		case 0:
			return "CMM_MOD_BOM";
			break;
		case 1:
			return "CMM_MOD_UWE";
			break;
		case 2:
			return "CMM_MOD_ARW";
			break;
	}
	return "CMM_MOD_BOM";
}

int func_951(int iParam0, int iParam1)//Position - 0x105B13
{
	switch (iParam0)
	{
		case joaat("slamvan"):
		case joaat("glendale"):
			if (iParam1 == 0)
			{
				return 0;
			}
			else
			{
				return 2;
			}
			break;
		case joaat("technical"):
		case joaat("insurgent"):
			return 1;
			break;
		case joaat("ratloader"):
		case joaat("ratloader2"):
		case joaat("deveste"):
		case joaat("issi3"):
		case joaat("gargoyle"):
		case joaat("monster3"):
		case joaat("bruiser"):
		case joaat("bruiser2"):
		case joaat("bruiser3"):
		case joaat("impaler2"):
		case joaat("impaler"):
		case joaat("impaler3"):
		case joaat("impaler4"):
		case joaat("vamos"):
		case joaat("issi4"):
		case joaat("deathbike"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("dominator"):
		case joaat("dominator2"):
		case joaat("dominator4"):
		case joaat("dominator5"):
		case joaat("dominator6"):
		case joaat("slamvan4"):
		case joaat("imperator"):
		case joaat("zr380"):
		case joaat("cerberus"):
		case joaat("scarab"):
		case joaat("brutus"):
		case joaat("imperator2"):
		case joaat("imperator3"):
		case joaat("zr3802"):
		case joaat("zr3803"):
		case joaat("cerberus2"):
		case joaat("scarab2"):
		case joaat("brutus2"):
		case joaat("cerberus3"):
		case joaat("scarab3"):
		case joaat("brutus3"):
		case joaat("slamvan5"):
		case joaat("slamvan6"):
		case joaat("monster4"):
		case joaat("monster5"):
		case joaat("issi5"):
		case joaat("issi6"):
			return 2;
			break;
	}
	return 0;
}

int func_952(int iParam0)//Position - 0x105C6B
{
	switch (iParam0)
	{
		case joaat("gauntlet3"):
		case joaat("euros"):
		case joaat("growler"):
			return 1;
			break;
	}
	return 0;
}

int func_953(int iParam0)//Position - 0x105C94
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("blazer4"):
			case joaat("deluxo"):
			case joaat("sc1"):
			case joaat("ellie"):
			case joaat("flashgt"):
			case joaat("dominator3"):
			case joaat("swinger"):
			case joaat("freecrawler"):
			case joaat("imperator"):
			case joaat("scarab"):
			case joaat("issi4"):
			case joaat("dominator4"):
			case joaat("dominator5"):
			case joaat("dominator6"):
			case joaat("zorrusso"):
			case joaat("locust"):
			case joaat("asbo"):
			case joaat("vstr"):
			case joaat("formula"):
			case joaat("formula2"):
			case joaat("dukes3"):
			case joaat("manana2"):
			case joaat("seminole2"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("slamtruck"):
			case joaat("buffalo4"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_954()//Position - 0x105D5B
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_103231))
	{
		return 1;
	}
	return 0;
}

bool func_955()//Position - 0x105D73
{
	return BitTest(uLocal_202, 19);
}

bool func_956()//Position - 0x105D81
{
	return BitTest(uLocal_202, 14);
}

int func_957(int iParam0)//Position - 0x105D8F
{
	switch (iParam0)
	{
		case 0:
			return 34770;
		case 1:
			return 34771;
		case 2:
			return 34772;
		default:
	}
	return 0;
}

char* func_958(int iParam0)//Position - 0x105FEF
{
	switch (iParam0)
	{
		case 1:
			return "BLACK" /* GXT: Black */;
			break;
		case 2:
			return "BLACK_GRAPHITE" /* GXT: Carbon Black */;
			break;
		case 3:
			return "GRAPHITE" /* GXT: Graphite */;
			break;
		case 4:
			return "ANTHR_BLACK" /* GXT: Anthracite Black */;
			break;
		case 5:
			return "BLACK_STEEL" /* GXT: Black Steel */;
			break;
		case 6:
			return "DARK_SILVER" /* GXT: Dark Steel */;
			break;
		case 8:
			return "SILVER" /* GXT: Silver */;
			break;
		case 9:
			return "BLUE_SILVER" /* GXT: Bluish Silver */;
			break;
		case 10:
			return "ROLLED_STEEL" /* GXT: Rolled Steel */;
			break;
		case 11:
			return "SHADOW_SILVER" /* GXT: Shadow Silver */;
			break;
		case 12:
			return "STONE_SILVER" /* GXT: Stone Silver */;
			break;
		case 13:
			return "MIDNIGHT_SILVER" /* GXT: Midnight Silver */;
			break;
		case 14:
			return "CAST_IRON_SIL" /* GXT: Cast Iron Silver */;
			break;
		case 15:
			return "RED" /* GXT: Red */;
			break;
		case 16:
			return "TORINO_RED" /* GXT: Torino Red */;
			break;
		case 17:
			return "FORMULA_RED" /* GXT: Formula Red */;
			break;
		case 18:
			return "LAVA_RED" /* GXT: Lava Red */;
			break;
		case 19:
			return "BLAZE_RED" /* GXT: Blaze Red */;
			break;
		case 20:
			return "GRACE_RED" /* GXT: Grace Red */;
			break;
		case 21:
			return "GARNET_RED" /* GXT: Garnet Red */;
			break;
		case 22:
			return "SUNSET_RED" /* GXT: Sunset Red */;
			break;
		case 24:
			return "CABERNET_RED" /* GXT: Cabernet Red */;
			break;
		case 23:
			return "WINE_RED" /* GXT: Wine Red */;
			break;
		case 25:
			return "CANDY_RED" /* GXT: Candy Red */;
			break;
		case 26:
			return "HOT PINK" /* GXT: Hot Pink */;
			break;
		case 27:
			return "PINK" /* GXT: Pfister Pink */;
			break;
		case 28:
			return "SALMON_PINK" /* GXT: Salmon Pink */;
			break;
		case 29:
			return "SUNRISE_ORANGE" /* GXT: Sunrise Orange */;
			break;
		case 30:
			return "ORANGE" /* GXT: Orange */;
			break;
		case 31:
			return "BRIGHT_ORANGE" /* GXT: Bright Orange */;
			break;
		case 32:
			return "GOLD" /* GXT: Gold */;
			break;
		case 33:
			return "BRONZE" /* GXT: Bronze */;
			break;
		case 34:
			return "YELLOW" /* GXT: Yellow */;
			break;
		case 35:
			return "RACE_YELLOW" /* GXT: Race Yellow */;
			break;
		case 85:
			return "FLUR_YELLOW" /* GXT: Dew Yellow */;
			break;
		case 37:
			return "DARK_GREEN" /* GXT: Dark Green */;
			break;
		case 38:
			return "RACING_GREEN" /* GXT: Racing Green */;
			break;
		case 39:
			return "SEA_GREEN" /* GXT: Sea Green */;
			break;
		case 40:
			return "OLIVE_GREEN" /* GXT: Olive Green */;
			break;
		case 41:
			return "BRIGHT_GREEN" /* GXT: Bright Green */;
			break;
		case 42:
			return "PETROL_GREEN" /* GXT: Gasoline Green */;
			break;
		case 43:
			return "LIME_GREEN" /* GXT: Lime Green */;
			break;
		case 44:
			return "MIDNIGHT_BLUE" /* GXT: Midnight Blue */;
			break;
		case 45:
			return "GALAXY_BLUE" /* GXT: Galaxy Blue */;
			break;
		case 46:
			return "DARK_BLUE" /* GXT: Dark Blue */;
			break;
		case 47:
			return "SAXON_BLUE" /* GXT: Saxon Blue */;
			break;
		case 48:
			return "BLUE" /* GXT: Blue */;
			break;
		case 49:
			return "MARINER_BLUE" /* GXT: Mariner Blue */;
			break;
		case 50:
			return "HARBOR_BLUE" /* GXT: Harbor Blue */;
			break;
		case 51:
			return "DIAMOND_BLUE" /* GXT: Diamond Blue */;
			break;
		case 52:
			return "SURF_BLUE" /* GXT: Surf Blue */;
			break;
		case 53:
			return "NAUTICAL_BLUE" /* GXT: Nautical Blue */;
			break;
		case 54:
			return "RACING_BLUE" /* GXT: Racing Blue */;
			break;
		case 55:
			return "ULTRA_BLUE" /* GXT: Ultra Blue */;
			break;
		case 56:
			return "LIGHT_BLUE" /* GXT: Light Blue */;
			break;
		case 57:
			return "CHOCOLATE_BROWN" /* GXT: Chocolate Brown */;
			break;
		case 58:
			return "BISON_BROWN" /* GXT: Bison Brown */;
			break;
		case 59:
			return "CREEK_BROWN" /* GXT: Creek Brown */;
			break;
		case 60:
			return "UMBER_BROWN" /* GXT: Feltzer Brown */;
			break;
		case 61:
			return "MAPLE_BROWN" /* GXT: Maple Brown */;
			break;
		case 62:
			return "BEECHWOOD_BROWN" /* GXT: Beechwood Brown */;
			break;
		case 63:
			return "SIENNA_BROWN" /* GXT: Sienna Brown */;
			break;
		case 64:
			return "SADDLE_BROWN" /* GXT: Saddle Brown */;
			break;
		case 65:
			return "MOSS_BROWN" /* GXT: Moss Brown */;
			break;
		case 66:
			return "WOODBEECH_BROWN" /* GXT: Woodbeech Brown */;
			break;
		case 67:
			return "STRAW_BROWN" /* GXT: Straw Brown */;
			break;
		case 68:
			return "SANDY_BROWN" /* GXT: Sandy Brown */;
			break;
		case 69:
			return "BLEECHED_BROWN" /* GXT: Bleached Brown */;
			break;
		case 70:
			return "PURPLE" /* GXT: Schafter Purple */;
			break;
		case 71:
			return "SPIN_PURPLE" /* GXT: Spinnaker Purple */;
			break;
		case 72:
			return "MIGHT_PURPLE" /* GXT: Midnight Purple */;
			break;
		case 73:
			return "BRIGHT_PURPLE" /* GXT: Bright Purple */;
			break;
		case 74:
			return "CREAM" /* GXT: Cream */;
			break;
		case 75:
			return "WHITE" /* GXT: Ice White */;
			break;
		case 76:
			return "FROST_WHITE" /* GXT: Frost White */;
			break;
	}
	return "";
}

int func_959(int iParam0)//Position - 0x1064B1
{
	switch (iParam0)
	{
		case 0:
			return 1;
			break;
		case 1:
			return 2;
			break;
		case 2:
			return 3;
			break;
		case 3:
			return 4;
			break;
		case 4:
			return 5;
			break;
		case 5:
			return 6;
			break;
		case 6:
			return 8;
			break;
		case 7:
			return 9;
			break;
		case 8:
			return 10;
			break;
		case 9:
			return 11;
			break;
		case 10:
			return 12;
			break;
		case 11:
			return 13;
			break;
		case 12:
			return 14;
			break;
		case 13:
			return 15;
			break;
		case 14:
			return 16;
			break;
		case 15:
			return 17;
			break;
		case 16:
			return 18;
			break;
		case 17:
			return 19;
			break;
		case 18:
			return 20;
			break;
		case 19:
			return 21;
			break;
		case 20:
			return 22;
			break;
		case 21:
			return 24;
			break;
		case 22:
			return 23;
			break;
		case 23:
			return 25;
			break;
		case 24:
			return 26;
			break;
		case 25:
			return 27;
			break;
		case 26:
			return 28;
			break;
		case 27:
			return 29;
			break;
		case 28:
			return 30;
			break;
		case 29:
			return 31;
			break;
		case 30:
			return 32;
			break;
		case 31:
			return 33;
			break;
		case 32:
			return 34;
			break;
		case 33:
			return 35;
			break;
		case 34:
			return 85;
			break;
		case 35:
			return 37;
			break;
		case 36:
			return 38;
			break;
		case 37:
			return 39;
			break;
		case 38:
			return 40;
			break;
		case 39:
			return 41;
			break;
		case 40:
			return 42;
			break;
		case 41:
			return 43;
			break;
		case 42:
			return 44;
			break;
		case 43:
			return 45;
			break;
		case 44:
			return 46;
			break;
		case 45:
			return 47;
			break;
		case 46:
			return 48;
			break;
		case 47:
			return 49;
			break;
		case 48:
			return 50;
			break;
		case 49:
			return 51;
			break;
		case 50:
			return 52;
			break;
		case 51:
			return 53;
			break;
		case 52:
			return 54;
			break;
		case 53:
			return 55;
			break;
		case 54:
			return 56;
			break;
		case 55:
			return 57;
			break;
		case 56:
			return 58;
			break;
		case 57:
			return 59;
			break;
		case 58:
			return 60;
			break;
		case 59:
			return 61;
			break;
		case 60:
			return 62;
			break;
		case 61:
			return 63;
			break;
		case 62:
			return 64;
			break;
		case 63:
			return 65;
			break;
		case 64:
			return 66;
			break;
		case 65:
			return 67;
			break;
		case 66:
			return 68;
			break;
		case 67:
			return 69;
			break;
		case 68:
			return 70;
			break;
		case 69:
			return 71;
			break;
		case 70:
			return 72;
			break;
		case 71:
			return 73;
			break;
		case 72:
			return 74;
			break;
		case 73:
			return 75;
			break;
		case 74:
			return 76;
			break;
	}
	return 0;
}

int func_960(int iParam0)//Position - 0x1076D5
{
	switch (iParam0)
	{
		case 0:
			return 31703;
			break;
		case 1:
			return 31705;
			break;
	}
	return 0;
}

int func_961(int iParam0, int iParam1)//Position - 0x10779D
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31685;
				case 1:
					return 31686;
				case 2:
					return 31687;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31698;
				case 1:
					return 31699;
				case 2:
					return 31700;
				default:
			}
			break;
	}
	return 0;
}

int func_962(int iParam0, int iParam1)//Position - 0x107938
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31679;
				case 1:
					return 31680;
				case 2:
					return 31681;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31692;
				case 1:
					return 31693;
				case 2:
					return 31694;
				default:
			}
			break;
	}
	return 0;
}

int func_963()//Position - 0x107C50
{
	switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
	{
		case joaat("tornado5"):
		case joaat("infernus2"):
		case joaat("cheetah2"):
		case joaat("xa21"):
		case joaat("dominator3"):
		case joaat("italigto"):
		case joaat("brioso2"):
		case joaat("greenwood"):
		case joaat("sentinel4"):
			return 1;
			break;
		case joaat("z190"):
			if (VEHICLE::GET_VEHICLE_MOD(Local_124.f_406, 7) != 0)
			{
				return 1;
			}
			break;
	}
	if (__LIB_2__::func_628(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		return 1;
	}
	return 0;
}

int func_964(int iParam0)//Position - 0x107CEB
{
	if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		return 0;
	}
	switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
	{
		case joaat("youga3"):
			return 0;
			break;
	}
	switch (iParam0)
	{
		case 82:
			return 1;
			break;
	}
	if (fLocal_172 > 0f)
	{
		if (!BitTest(uLocal_517, 2))
		{
			return 1;
		}
	}
	return 0;
}

int func_965(int iParam0, int iParam1, bool bParam2)//Position - 0x107D4E
{
	switch (iParam0)
	{
		case 68:
			if (ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("yosemite3"))
			{
				return 1;
			}
			break;
		case 83:
			switch (ENTITY::GET_ENTITY_MODEL(iParam1))
			{
				case joaat("elegy"):
					if (bParam2)
					{
						return 1;
					}
					break;
			}
			break;
		case 84:
			if (ENTITY::GET_ENTITY_MODEL(iParam1) == joaat("weevil2"))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_966(int iParam0)//Position - 0x107DBA
{
	switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
	{
		case joaat("cheetah2"):
		case joaat("xa21"):
		case joaat("dominator3"):
		case joaat("z190"):
			if (VEHICLE::GET_VEHICLE_MOD(Local_124.f_406, 7) != 0)
			{
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case 84:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("dominator7"):
				case joaat("futo2"):
				case joaat("rt3000"):
				case joaat("postlude"):
					return 1;
					break;
			}
			break;
		case 79:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("previon"):
					return 1;
					break;
			}
			break;
		case 82:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("dominator8"):
					return 1;
					break;
			}
			break;
		case 9:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("z190"):
				case joaat("dominator3"):
				case joaat("italigto"):
				case joaat("brioso2"):
				case joaat("rt3000"):
				case joaat("tailgater2"):
					return 1;
					break;
			}
			break;
		case 63:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("remus"):
					return 1;
					break;
			}
			break;
		case 76:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("kanjosj"):
				case joaat("postlude"):
					return 1;
					break;
			}
			break;
		case 77:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("greenwood"):
				case joaat("kanjosj"):
					return 1;
					break;
			}
			break;
		case 78:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("kanjosj"):
				case joaat("postlude"):
					return 1;
					break;
			}
			break;
		case 23:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("lm87"):
					return 1;
					break;
			}
			break;
	}
	return 0;
}

int func_967(int iParam0)//Position - 0x1082F6
{
	switch (iParam0)
	{
		case 2:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("lm87"):
					return 1;
					break;
			}
			break;
		case 23:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("lm87"):
					return 1;
					break;
			}
			break;
	}
	return 0;
}

int func_968(int iParam0, int iParam1)//Position - 0x108350
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam1);
	switch (iParam0)
	{
		case 74:
		case 75:
			switch (iVar0)
			{
				case joaat("remus"):
				case joaat("brioso3"):
					return 0;
					break;
			}
			return 1;
			break;
		case 78:
			switch (iVar0)
			{
				case joaat("comet3"):
					return 1;
					break;
			}
			break;
		case 52:
			if (iVar0 == joaat("asbo"))
			{
				return 1;
			}
			break;
		case 23:
			if (iVar0 == joaat("lm87"))
			{
				return 1;
			}
			break;
		case 76:
			if (iVar0 == joaat("brioso3") && Local_124.f_116.f_1 >= 2)
			{
				return 1;
			}
			break;
	}
	return 0;
}

void func_969(char* sParam0)//Position - 0x108566
{
	MemCopy(sParam0, {Global_23150.f_5081}, 4);
}

int func_970(char* sParam0)//Position - 0x1090B2
{
	int iVar0;
	char* sVar1;
	iVar0 = 0;
	while (iVar0 <= (HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0) - 1))
	{
		sVar1 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, iVar0, iVar0 + 1);
		if (MISC::ARE_STRINGS_EQUAL(".", sVar1) || MISC::ARE_STRINGS_EQUAL(",", sVar1))
		{
			return 0;
		}
		iVar0++;
	}
	return 1;
}

void func_971()//Position - 0x10A3CC
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Local_124.f_447)
	{
		Local_124.f_447[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Local_124.f_468)
	{
		Local_124.f_468[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_100493.f_484)
	{
		StringCopy(&(Global_100493.f_484[iVar0 /*4*/]), "", 16);
		StringCopy(&(Global_100493.f_1557[iVar0 /*4*/]), "", 16);
		iVar0++;
	}
}

void func_972(var uParam0, bool bParam1)//Position - 0x10CCF4
{
	int iVar0;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	if (bParam1)
	{
		iVar0 = (uParam0->f_653 - 1);
		MISC::SET_BIT(&(uParam0->f_653[iVar0]), 31);
	}
	else
	{
		iVar0 = (uParam0->f_663 - 1);
		MISC::SET_BIT(&(uParam0->f_663[iVar0]), 31);
	}
}

int func_973(var uParam0, bool bParam1)//Position - 0x10CD3F
{
	int iVar0;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 1;
	}
	if (bParam1)
	{
		iVar0 = (uParam0->f_653 - 1);
		return BitTest(uParam0->f_653[iVar0], 31);
	}
	else
	{
		iVar0 = (uParam0->f_663 - 1);
		return BitTest(uParam0->f_663[iVar0], 31);
	}
	return 0;
}

int func_974(int iParam0, int iParam1)//Position - 0x10CEC6
{
	if (iParam0 == 4)
	{
		if (iParam1 == 3 || iParam1 == 4)
		{
			return 1;
		}
	}
	return 0;
}

void func_975(int iParam0, bool bParam1, bool bParam2)//Position - 0x10D040
{
	int iVar0;
	iVar0 = 0;
	if (!bParam1)
	{
		iVar0 = 10;
	}
	if (iParam0 == 1)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0);
		}
		return;
	}
	if (iParam0 == 0)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0 + 1);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0 + 1);
		}
		return;
	}
	if (iParam0 == 2)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0 + 2);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0 + 2);
		}
		return;
	}
	if (iParam0 == 5)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0 + 3);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0 + 3);
		}
		return;
	}
	if (iParam0 == 3)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0 + 4);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0 + 4);
		}
		return;
	}
	if (iParam0 == 4)
	{
		if (bParam2)
		{
			MISC::SET_BIT(&uLocal_497, iVar0 + 5);
		}
		else
		{
			MISC::CLEAR_BIT(&uLocal_497, iVar0 + 5);
		}
		return;
	}
}

void func_976(int iParam0)//Position - 0x10D29A
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (!DECORATOR::DECOR_EXIST_ON(iParam0, "Sprayed_Vehicle_Decorator"))
		{
			DECORATOR::DECOR_SET_BOOL(iParam0, "Sprayed_Vehicle_Decorator", true);
			if (!DECORATOR::DECOR_EXIST_ON(iParam0, "Sprayed_Vehicle_Timer_Dec"))
			{
				DECORATOR::DECOR_SET_TIME(iParam0, "Sprayed_Vehicle_Timer_Dec", NETWORK::GET_NETWORK_TIME());
			}
		}
	}
}

char* func_977(int iParam0)//Position - 0x10F680
{
	switch (iParam0)
	{
		case joaat("bruiser"):
			return "bruiser_APOC";
			break;
		case joaat("bruiser2"):
			return "bruiser_SCIFI";
			break;
		case joaat("bruiser3"):
			return "bruiser_CONS";
			break;
		case joaat("deathbike"):
			return "deathbike_APOC";
			break;
		case joaat("deathbike2"):
			return "deathbike_SCIFI";
			break;
		case joaat("deathbike3"):
			return "deathbike_CONS";
			break;
		case joaat("issi4"):
			return "issi_APOC";
			break;
		case joaat("issi5"):
			return "issi_SCIFI";
			break;
		case joaat("issi6"):
			return "issi_CONS";
			break;
		case joaat("monster3"):
			return "sasquatch_APOC";
			break;
		case joaat("monster4"):
			return "sasquatch_SCIFI";
			break;
		case joaat("monster5"):
			return "sasquatch_CONS";
			break;
		case joaat("slamvan4"):
			return "slamvan_APOC";
			break;
		case joaat("slamvan5"):
			return "slamvan_SCIFI";
			break;
		case joaat("slamvan6"):
			return "slamvan_CONS";
			break;
		case joaat("dominator4"):
			return "dominator_APOC";
			break;
		case joaat("dominator5"):
			return "dominator_SCIFI";
			break;
		case joaat("dominator6"):
			return "dominator_CONS";
			break;
		case joaat("impaler2"):
			return "Impaler_APOC";
			break;
		case joaat("impaler3"):
			return "Impaler_SCIFI";
			break;
		case joaat("impaler4"):
			return "Impaler_CONS";
			break;
	}
	return "";
}

int func_978(char* sParam0)//Position - 0x113845
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case 0:
			return 0;
			break;
	}
	return 0;
}

int func_979(char* sParam0)//Position - 0x11387D
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case joaat("CLO_HA"):
		case joaat("TAT_HA"):
			return 1;
			break;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	switch (iVar0)
	{
		case joaat("CC_MKUP_42"):
		case joaat("CC_MKUP_43"):
		case joaat("CC_MKUP_44"):
		case joaat("CC_MKUP_45"):
		case joaat("CC_MKUP_46"):
		case joaat("CC_MKUP_47"):
		case joaat("CC_MKUP_48"):
		case joaat("CC_MKUP_49"):
		case joaat("CC_MKUP_50"):
		case joaat("CC_MKUP_51"):
		case joaat("CC_MKUP_52"):
		case joaat("CC_MKUP_53"):
		case joaat("CC_MKUP_54"):
		case joaat("CC_MKUP_55"):
		case joaat("CC_MKUP_56"):
		case joaat("CC_MKUP_57"):
		case joaat("CC_MKUP_58"):
		case joaat("CC_MKUP_59"):
		case joaat("CC_MKUP_60"):
		case joaat("CC_MKUP_61"):
		case joaat("CC_MKUP_62"):
		case joaat("CC_MKUP_63"):
		case joaat("CC_MKUP_64"):
		case joaat("CC_MKUP_65"):
		case joaat("CC_MKUP_66"):
		case joaat("CC_MKUP_67"):
		case joaat("CC_MKUP_68"):
		case joaat("CC_MKUP_69"):
		case joaat("CC_MKUP_70"):
		case joaat("CC_MKUP_71"):
			return 1;
			break;
	}
	return 0;
}

int func_980(char* sParam0)//Position - 0x113985
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case joaat("CLO_S1"):
		case joaat("TAT_S1"):
			return 1;
			break;
		case joaat("CLO_AP"):
		case joaat("TAT_AP"):
			return 1;
			break;
		case joaat("CLO_X3"):
		case joaat("TAT_X3"):
			return 1;
			break;
		case joaat("CLO_X4"):
			return 1;
			break;
		case joaat("CLO_V2"):
			return 1;
			break;
		case joaat("CLO_S2"):
		case joaat("TAT_S2"):
			return 1;
			break;
		case joaat("CLO_EX"):
			return 1;
			break;
		case joaat("CLO_ST"):
		case joaat("TAT_ST"):
			return 1;
			break;
		case joaat("CLO_BI"):
		case joaat("TAT_BI"):
			return 1;
			break;
		case joaat("CLO_IE"):
		case joaat("TAT_IE"):
			return 1;
			break;
		case joaat("CLO_GR"):
		case joaat("TAT_GR"):
			return 1;
			break;
		case joaat("CLO_SM"):
		case joaat("TAT_SM"):
			return 1;
			break;
		case joaat("CLO_AR"):
		case joaat("TAT_AR"):
			return 1;
			break;
		case joaat("CLO_H2"):
		case joaat("TAT_H2"):
			return 1;
			break;
		case joaat("CLO_X1"):
		case joaat("TAT_X1"):
			return 1;
			break;
		case joaat("CLO_AS"):
			return 1;
			break;
		case joaat("CLO_BH"):
		case joaat("TAT_BH"):
			return 1;
			break;
		case joaat("CLO_AW"):
		case joaat("TAT_AW"):
			return 1;
			break;
		case joaat("CLO_X5"):
		case joaat("TAT_X5"):
			return 1;
			break;
		case joaat("CLO_VW"):
		case joaat("TAT_VW"):
			return 1;
			break;
		case joaat("CLO_H3"):
		case joaat("TAT_H3"):
			return 1;
			break;
		case joaat("CLO_SU"):
		case joaat("TAT_SU"):
			return 1;
			break;
		case joaat("CLO_H4"):
		case joaat("TAT_H4"):
			return 1;
			break;
		case joaat("CLO_TR"):
		case joaat("TAT_TR"):
			return 1;
			break;
		case joaat("CLO_FX"):
		case joaat("TAT_FX"):
			return 1;
			break;
		case joaat("CLO_SB"):
		case joaat("TAT_SB"):
			return 1;
			break;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	switch (iVar0)
	{
		case joaat("CC_BLUSH_7"):
		case joaat("CC_BLUSH_8"):
		case joaat("CC_BLUSH_9"):
		case joaat("CC_BLUSH_10"):
		case joaat("CC_BLUSH_11"):
		case joaat("CC_BLUSH_12"):
		case joaat("CC_BLUSH_13"):
		case joaat("CC_BLUSH_14"):
		case joaat("CC_BLUSH_15"):
		case joaat("CC_BLUSH_16"):
		case joaat("CC_BLUSH_17"):
		case joaat("CC_BLUSH_18"):
		case joaat("CC_BLUSH_19"):
		case joaat("CC_BLUSH_20"):
		case joaat("CC_BLUSH_21"):
		case joaat("CC_BLUSH_22"):
		case joaat("CC_BLUSH_23"):
		case joaat("CC_BLUSH_24"):
		case joaat("CC_BLUSH_25"):
		case joaat("CC_BLUSH_26"):
		case joaat("CC_BLUSH_27"):
		case joaat("CC_BLUSH_28"):
		case joaat("CC_BLUSH_29"):
		case joaat("CC_BLUSH_30"):
		case joaat("CC_BLUSH_31"):
		case joaat("CC_BLUSH_32"):
			return 1;
			break;
		case joaat("XMAS_CAMO06"):
		case joaat("XMAS_CAMO07"):
		case joaat("XMAS_CAMO08"):
		case joaat("XMAS_CAMO09"):
		case joaat("XMAS_CAMO10"):
			return 1;
			break;
		case joaat("CC_MKUP_72"):
		case joaat("CC_MKUP_73"):
		case joaat("CC_MKUP_74"):
		case joaat("CC_MKUP_75"):
		case joaat("CC_MKUP_76"):
		case joaat("CC_MKUP_77"):
		case joaat("CC_MKUP_78"):
		case joaat("CC_MKUP_79"):
		case joaat("CC_MKUP_80"):
			return 1;
			break;
		case joaat("CC_MKUP_81"):
		case joaat("CC_MKUP_82"):
		case joaat("CC_MKUP_83"):
		case joaat("CC_MKUP_84"):
		case joaat("CC_MKUP_85"):
		case joaat("CC_MKUP_86"):
		case joaat("CC_MKUP_87"):
		case joaat("CC_MKUP_88"):
		case joaat("CC_MKUP_89"):
		case joaat("CC_MKUP_90"):
		case joaat("CC_MKUP_91"):
		case joaat("CC_MKUP_92"):
		case joaat("CC_MKUP_93"):
		case joaat("CC_MKUP_94"):
			return 1;
			break;
	}
	return 0;
}

int func_981(char* sParam0)//Position - 0x113CF5
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case joaat("CLO_XM"):
		case joaat("CLO_X2"):
		case joaat("TAT_X2"):
			return 1;
			break;
	}
	return 0;
}

int func_982(char* sParam0)//Position - 0x113D39
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case joaat("CLO_IN"):
			return 1;
			break;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "CC_MKUP_33" /* GXT: Stars n Stripes */))
	{
		return 1;
	}
	return 0;
}

int func_983(char* sParam0)//Position - 0x113D83
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 1;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0) < 6)
	{
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar0)
	{
		case joaat("CLO_BB"):
		case joaat("TAT_BB"):
			return 1;
			break;
		case joaat("CLO_BU"):
		case joaat("TAT_BU"):
			return 0;
			break;
		case joaat("CLO_XM"):
		case joaat("CLO_X2"):
		case joaat("TAT_X2"):
			return 0;
			break;
		case joaat("CLO_VA"):
			return 1;
			break;
		case joaat("CLO_HI"):
			return 0;
			break;
		case joaat("CLO_HP"):
		case joaat("TAT_HP"):
		case joaat("BRD_HP"):
			return 0;
			break;
		case joaat("CLO_IN"):
			return 0;
			break;
		case joaat("CLO_PI"):
			return 0;
			break;
		case joaat("CLO_LT"):
			return 0;
			break;
		case joaat("CLO_HS"):
			return 0;
			break;
		case joaat("CLO_VE"):
			return 0;
			break;
		case joaat("CLO_LX"):
		case joaat("TAT_LX"):
			return 0;
			break;
		case joaat("CLO_L2"):
		case joaat("TAT_L2"):
			return 0;
			break;
		case joaat("CLO_HA"):
		case joaat("TAT_HA"):
			return 0;
			break;
		case joaat("CLO_S1"):
		case joaat("TAT_S1"):
			return 0;
			break;
		case joaat("CLO_AP"):
		case joaat("TAT_AP"):
			return 0;
			break;
		case joaat("CLO_X3"):
		case joaat("TAT_X3"):
			return 0;
			break;
		case joaat("CLO_X4"):
			return 0;
			break;
		case joaat("CLO_JA"):
			return 1;
			break;
		case joaat("CLO_V2"):
			return 0;
			break;
		case joaat("CLO_S2"):
		case joaat("TAT_S2"):
			return 0;
			break;
		case joaat("CLO_EX"):
			return 0;
			break;
		case joaat("CLO_ST"):
		case joaat("TAT_ST"):
			return 0;
			break;
		case joaat("CLO_BI"):
		case joaat("TAT_BI"):
			return 0;
			break;
		case joaat("CLO_IE"):
		case joaat("TAT_IE"):
			return 0;
			break;
		case joaat("CLO_GR"):
		case joaat("TAT_GR"):
			return 0;
			break;
		case joaat("CLO_SM"):
		case joaat("TAT_SM"):
			return 0;
			break;
		case joaat("CLO_H2"):
		case joaat("TAT_H2"):
			return 0;
			break;
		case joaat("CLO_X1"):
		case joaat("TAT_X1"):
			return 0;
			break;
		case joaat("CLO_AS"):
			return 0;
			break;
		case joaat("CLO_BH"):
		case joaat("TAT_BH"):
			return 0;
			break;
		case joaat("CLO_AW"):
		case joaat("TAT_AW"):
			return 0;
			break;
		case joaat("CLO_X5"):
		case joaat("TAT_X5"):
			return 0;
			break;
		case joaat("CLO_VW"):
		case joaat("TAT_VW"):
			return 0;
			break;
		case joaat("CLO_H3"):
		case joaat("TAT_H3"):
			return 0;
			break;
		case joaat("CLO_SU"):
		case joaat("TAT_SU"):
			return 0;
			break;
		case joaat("CLO_H4"):
		case joaat("TAT_H4"):
			return 0;
			break;
		case joaat("CLO_TR"):
		case joaat("TAT_TR"):
			return 0;
			break;
		case joaat("CLO_FX"):
		case joaat("TAT_FX"):
			return 0;
			break;
		case joaat("CLO_SB"):
		case joaat("TAT_SB"):
			return 0;
			break;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	switch (iVar0)
	{
		case joaat("CC_MKUP_33"):
			return 0;
			break;
		case joaat("CC_MKUP_42"):
		case joaat("CC_MKUP_43"):
		case joaat("CC_MKUP_44"):
		case joaat("CC_MKUP_45"):
		case joaat("CC_MKUP_46"):
		case joaat("CC_MKUP_47"):
		case joaat("CC_MKUP_48"):
		case joaat("CC_MKUP_49"):
		case joaat("CC_MKUP_50"):
		case joaat("CC_MKUP_51"):
		case joaat("CC_MKUP_52"):
		case joaat("CC_MKUP_53"):
		case joaat("CC_MKUP_54"):
		case joaat("CC_MKUP_55"):
		case joaat("CC_MKUP_56"):
		case joaat("CC_MKUP_57"):
		case joaat("CC_MKUP_58"):
		case joaat("CC_MKUP_59"):
		case joaat("CC_MKUP_60"):
		case joaat("CC_MKUP_61"):
		case joaat("CC_MKUP_62"):
		case joaat("CC_MKUP_63"):
		case joaat("CC_MKUP_64"):
		case joaat("CC_MKUP_65"):
		case joaat("CC_MKUP_66"):
		case joaat("CC_MKUP_67"):
		case joaat("CC_MKUP_68"):
		case joaat("CC_MKUP_69"):
		case joaat("CC_MKUP_70"):
		case joaat("CC_MKUP_71"):
			return 0;
			break;
		case joaat("CC_BLUSH_7"):
		case joaat("CC_BLUSH_8"):
		case joaat("CC_BLUSH_9"):
		case joaat("CC_BLUSH_10"):
		case joaat("CC_BLUSH_11"):
		case joaat("CC_BLUSH_12"):
		case joaat("CC_BLUSH_13"):
		case joaat("CC_BLUSH_14"):
		case joaat("CC_BLUSH_15"):
		case joaat("CC_BLUSH_16"):
		case joaat("CC_BLUSH_17"):
		case joaat("CC_BLUSH_18"):
		case joaat("CC_BLUSH_19"):
		case joaat("CC_BLUSH_20"):
		case joaat("CC_BLUSH_21"):
		case joaat("CC_BLUSH_22"):
		case joaat("CC_BLUSH_23"):
		case joaat("CC_BLUSH_24"):
		case joaat("CC_BLUSH_25"):
		case joaat("CC_BLUSH_26"):
		case joaat("CC_BLUSH_27"):
		case joaat("CC_BLUSH_28"):
		case joaat("CC_BLUSH_29"):
		case joaat("CC_BLUSH_30"):
		case joaat("CC_BLUSH_31"):
		case joaat("CC_BLUSH_32"):
			return 0;
			break;
		case joaat("XMAS_CAMO06"):
		case joaat("XMAS_CAMO07"):
		case joaat("XMAS_CAMO08"):
		case joaat("XMAS_CAMO09"):
		case joaat("XMAS_CAMO10"):
			return 0;
			break;
		case joaat("CC_MKUP_72"):
		case joaat("CC_MKUP_73"):
		case joaat("CC_MKUP_74"):
		case joaat("CC_MKUP_75"):
		case joaat("CC_MKUP_76"):
		case joaat("CC_MKUP_77"):
		case joaat("CC_MKUP_78"):
		case joaat("CC_MKUP_79"):
		case joaat("CC_MKUP_80"):
			return 0;
			break;
		case joaat("CC_MKUP_81"):
		case joaat("CC_MKUP_82"):
		case joaat("CC_MKUP_83"):
		case joaat("CC_MKUP_84"):
		case joaat("CC_MKUP_85"):
		case joaat("CC_MKUP_86"):
		case joaat("CC_MKUP_87"):
		case joaat("CC_MKUP_88"):
		case joaat("CC_MKUP_89"):
		case joaat("CC_MKUP_90"):
		case joaat("CC_MKUP_91"):
		case joaat("CC_MKUP_92"):
		case joaat("CC_MKUP_93"):
		case joaat("CC_MKUP_94"):
			return 0;
			break;
	}
	return 1;
}

char* func_984(char* sParam0, bool bParam1)//Position - 0x1142B1
{
	int iVar0;
	int iVar1;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return "";
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0) < 6)
	{
		return "";
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	iVar1 = MISC::GET_HASH_KEY(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, 0, 6));
	switch (iVar1)
	{
		case joaat("CLO_BB"):
		case joaat("TAT_BB"):
			return "SHOP_CONTENT_1" /* GXT: Beach Bum */;
			break;
		case joaat("CLO_BU"):
		case joaat("TAT_BU"):
			return "SHOP_CONTENT_2" /* GXT: Business Update */;
			break;
		case joaat("CLO_XM"):
		case joaat("CLO_X2"):
		case joaat("TAT_X2"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_3" /* GXT: Festive */;
			}
			else
			{
				return "SHOP_CONTENT_3b" /* GXT: Festive Surprise */;
			}
			break;
		case joaat("CLO_VA"):
			return "SHOP_CONTENT_4" /* GXT: Valentine's */;
			break;
		case joaat("CLO_HI"):
			return "SHOP_CONTENT_5" /* GXT: High Life Update */;
			break;
		case joaat("CLO_HP"):
		case joaat("TAT_HP"):
		case joaat("BRD_HP"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_6" /* GXT: "I'm Not a Hipster" */;
			}
			else
			{
				return "SHOP_CONTENT_6b" /* GXT: "I'm Not a Hipster" Update */;
			}
			break;
		case joaat("CLO_HS"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_7" /* GXT: Heists */;
			}
			else
			{
				return "SHOP_CONTENT_7b" /* GXT: Heists Update */;
			}
			break;
		case joaat("CLO_IN"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_8" /* GXT: Independence Day */;
			}
			else
			{
				return "SHOP_CONTENT_8b" /* GXT: Independence Day Special */;
			}
			break;
		case joaat("CLO_PI"):
			return "SHOP_CONTENT_9" /* GXT: San Andreas Flight School */;
			break;
		case joaat("CLO_LT"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_10" /* GXT: Last Team Standing */;
			}
			else
			{
				return "SHOP_CONTENT_10b" /* GXT: Last Team Standing Update */;
			}
			break;
		case joaat("CLO_LX"):
		case joaat("TAT_LX"):
			if (((((iVar0 == joaat("CLO_LXM_DEC_30") || iVar0 == joaat("CLO_LXM_DEC_33")) || iVar0 == joaat("CLO_LXM_DEC_38")) || iVar0 == joaat("CLO_LXF_DEC_30")) || iVar0 == joaat("CLO_LXF_DEC_33")) || iVar0 == joaat("CLO_LXF_DEC_38"))
			{
				return "SHOP_CONTENT_14" /* GXT: Ill-Gotten Gains Update Part 2 */;
			}
			return "SHOP_CONTENT_12" /* GXT: Ill-Gotten Gains Update Part 1 */;
			break;
		case joaat("CLO_VE"):
			switch (iVar0)
			{
				case joaat("CLO_VEM_DEC_44"):
				case joaat("CLO_VEM_DEC_45"):
				case joaat("CLO_VEM_DEC_46"):
				case joaat("CLO_VEM_DEC_48"):
				case joaat("CLO_VEF_DEC_44"):
				case joaat("CLO_VEF_DEC_45"):
				case joaat("CLO_VEF_DEC_46"):
				case joaat("CLO_VEF_DEC_48"):
					return "";
					break;
			}
			return "SHOP_CONTENT_13" /* GXT: Video Editor */;
			break;
		case joaat("CLO_L2"):
		case joaat("TAT_L2"):
			return "SHOP_CONTENT_14" /* GXT: Ill-Gotten Gains Update Part 2 */;
			break;
		case joaat("CLO_S1"):
		case joaat("TAT_S1"):
			return "SHOP_CONTENT_15" /* GXT: Lowriders */;
			break;
		case joaat("CLO_HA"):
		case joaat("TAT_HA"):
			return "SHOP_CONTENT_16" /* GXT: Halloween */;
			break;
		case joaat("CLO_S2"):
		case joaat("TAT_S2"):
			return "SHOP_CONTENT_17" /* GXT: Lowriders: Custom Classics */;
			break;
		case joaat("CLO_AP"):
		case joaat("TAT_AP"):
			return "SHOP_CONTENT_18" /* GXT: Executives and Other Criminals */;
			break;
		case joaat("CLO_X3"):
		case joaat("TAT_X3"):
			if (iVar0 == joaat("CLO_X3F_DEC_00") || iVar0 == joaat("CLO_X3M_DEC_00"))
			{
				return "";
			}
			return "SHOP_CONTENT_19" /* GXT: Festive Surprise 2015 */;
			break;
		case joaat("CLO_X4"):
			return "SHOP_CONTENT_26" /* GXT: Festive Surprise 2016 */;
			break;
		case joaat("CLO_V2"):
			return "SHOP_CONTENT_21" /* GXT: Be My Valentine */;
			break;
		case joaat("CLO_EX"):
			return "SHOP_CONTENT_22" /* GXT: Further Adventures in Finance and Felony */;
			break;
		case joaat("CLO_ST"):
		case joaat("TAT_ST"):
			return "SHOP_CONTENT_23" /* GXT: Cunning Stunts */;
			break;
		case joaat("CLO_BI"):
		case joaat("TAT_BI"):
			return "SHOP_CONTENT_24" /* GXT: Bikers */;
			break;
		case joaat("CLO_IE"):
		case joaat("TAT_IE"):
			return "SHOP_CONTENT_25" /* GXT: Import/Export */;
			break;
		case joaat("CLO_GR"):
		case joaat("TAT_GR"):
			return "SHOP_CONTENT_27" /* GXT: Gunrunning */;
			break;
		case joaat("CLO_SM"):
		case joaat("TAT_SM"):
			return "SHOP_CONTENT_28" /* GXT: Smuggler's Run */;
			break;
		case joaat("CLO_AR"):
		case joaat("TAT_AR"):
			return "SHOP_CONTENT_29" /* GXT: Smuggler's Run */;
			break;
		case joaat("CLO_H2"):
		case joaat("TAT_H2"):
			return "SHOP_CONTENT_30" /* GXT: The Doomsday Heist */;
			break;
		case joaat("CLO_X1"):
		case joaat("TAT_X1"):
			return "SHOP_CONTENT_31" /* GXT: Festive Surprise 2017 */;
			break;
		case joaat("CLO_AS"):
			return "SHOP_CONTENT_32" /* GXT: S.A. Super Sport Series */;
			break;
		case joaat("CLO_BH"):
		case joaat("TAT_BH"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_33" /* GXT: After Hours */;
			}
			else
			{
				return "SHOP_CONTENT_33" /* GXT: After Hours */;
			}
			break;
		case joaat("CLO_AW"):
		case joaat("TAT_AW"):
			if (iVar0 == joaat("TAT_AW_000"))
			{
				return "";
			}
			if (((iVar0 == joaat("CLO_AWM_O_J_0") || iVar0 == joaat("CLO_AWM_T_0")) || iVar0 == joaat("CLO_AWF_O_J_0")) || iVar0 == joaat("CLO_AWF_T_0"))
			{
				return "";
			}
			return "SHOP_CONTENT_34" /* GXT: Arena War */;
			break;
		case joaat("CLO_X5"):
		case joaat("TAT_X5"):
			return "SHOP_CONTENT_35" /* GXT: Festive Surprise 2018 */;
			break;
		case joaat("CLO_VW"):
		case joaat("TAT_VW"):
			return "SHOP_CONTENT_38" /* GXT: The Diamond Casino & Resort */;
			break;
		case joaat("CLO_H3"):
		case joaat("TAT_H3"):
			return "SHOP_CONTENT_39" /* GXT: The Diamond Casino Heist */;
			break;
		case joaat("CLO_SU"):
		case joaat("TAT_SU"):
			return "SHOP_CONTENT_40" /* GXT: Los Santos Summer Special */;
			break;
		case joaat("CLO_H4"):
		case joaat("TAT_H4"):
			return "SHOP_CONTENT_41" /* GXT: The Cayo Perico Heist */;
			break;
		case joaat("CLO_TR"):
		case joaat("TAT_TR"):
			return "SHOP_CONTENT_42" /* GXT: Los Santos Tuners */;
			break;
		case joaat("CLO_FX"):
		case joaat("TAT_FX"):
			return "SHOP_CONTENT_44" /* GXT: The Contract */;
			break;
		case joaat("CLO_SB"):
		case joaat("TAT_SB"):
			return "SHOP_CONTENT_45" /* GXT: The Criminal Enterprises */;
			break;
	}
	switch (iVar0)
	{
		case joaat("CC_M_HS_16"):
		case joaat("CC_M_HS_17"):
		case joaat("CC_F_HS_17"):
		case joaat("CC_F_HS_16"):
			return "SHOP_CONTENT_1" /* GXT: Beach Bum */;
			break;
		case joaat("CC_M_HS_18"):
		case joaat("CC_M_HS_19"):
		case joaat("CC_F_HS_18"):
		case joaat("CC_F_HS_19"):
			return "SHOP_CONTENT_2" /* GXT: Business Update */;
			break;
		case joaat("CC_F_HS_23"):
			return "SHOP_CONTENT_4" /* GXT: Valentine's */;
			break;
		case joaat("CC_M_HS_20"):
		case joaat("CC_M_HS_21"):
		case joaat("CC_F_HS_20"):
		case joaat("CC_F_HS_21"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_6" /* GXT: "I'm Not a Hipster" */;
			}
			else
			{
				return "SHOP_CONTENT_6b" /* GXT: "I'm Not a Hipster" Update */;
			}
			break;
		case joaat("CC_M_HS_22"):
		case joaat("CC_F_HS_22"):
		case joaat("CC_MKUP_33"):
			if (!bParam1)
			{
				return "SHOP_CONTENT_8" /* GXT: Independence Day */;
			}
			else
			{
				return "SHOP_CONTENT_8b" /* GXT: Independence Day Special */;
			}
			break;
	}
	switch (iVar0)
	{
		case joaat("CC_MKUP_42"):
		case joaat("CC_MKUP_43"):
		case joaat("CC_MKUP_44"):
		case joaat("CC_MKUP_45"):
		case joaat("CC_MKUP_46"):
		case joaat("CC_MKUP_47"):
		case joaat("CC_MKUP_48"):
		case joaat("CC_MKUP_49"):
		case joaat("CC_MKUP_50"):
		case joaat("CC_MKUP_51"):
		case joaat("CC_MKUP_52"):
		case joaat("CC_MKUP_53"):
		case joaat("CC_MKUP_54"):
		case joaat("CC_MKUP_55"):
		case joaat("CC_MKUP_56"):
		case joaat("CC_MKUP_57"):
		case joaat("CC_MKUP_58"):
		case joaat("CC_MKUP_59"):
		case joaat("CC_MKUP_60"):
		case joaat("CC_MKUP_61"):
		case joaat("CC_MKUP_62"):
		case joaat("CC_MKUP_63"):
		case joaat("CC_MKUP_64"):
		case joaat("CC_MKUP_65"):
		case joaat("CC_MKUP_66"):
		case joaat("CC_MKUP_67"):
		case joaat("CC_MKUP_68"):
		case joaat("CC_MKUP_69"):
		case joaat("CC_MKUP_70"):
		case joaat("CC_MKUP_71"):
			return "SHOP_CONTENT_16" /* GXT: Halloween */;
			break;
	}
	switch (iVar0)
	{
		case joaat("CC_BLUSH_7"):
		case joaat("CC_BLUSH_8"):
		case joaat("CC_BLUSH_9"):
		case joaat("CC_BLUSH_10"):
		case joaat("CC_BLUSH_11"):
		case joaat("CC_BLUSH_12"):
		case joaat("CC_BLUSH_13"):
		case joaat("CC_BLUSH_14"):
		case joaat("CC_BLUSH_15"):
		case joaat("CC_BLUSH_16"):
		case joaat("CC_BLUSH_17"):
		case joaat("CC_BLUSH_18"):
		case joaat("CC_BLUSH_19"):
		case joaat("CC_BLUSH_20"):
		case joaat("CC_BLUSH_21"):
		case joaat("CC_BLUSH_22"):
		case joaat("CC_BLUSH_23"):
		case joaat("CC_BLUSH_24"):
		case joaat("CC_BLUSH_25"):
		case joaat("CC_BLUSH_26"):
		case joaat("CC_BLUSH_27"):
		case joaat("CC_BLUSH_28"):
		case joaat("CC_BLUSH_29"):
		case joaat("CC_BLUSH_30"):
		case joaat("CC_BLUSH_31"):
		case joaat("CC_BLUSH_32"):
			return "SHOP_CONTENT_30" /* GXT: The Doomsday Heist */;
			break;
	}
	switch (iVar0)
	{
		case joaat("XMAS_CAMO06"):
		case joaat("XMAS_CAMO07"):
		case joaat("XMAS_CAMO08"):
		case joaat("XMAS_CAMO09"):
		case joaat("XMAS_CAMO10"):
			return "SHOP_CONTENT_31" /* GXT: Festive Surprise 2017 */;
			break;
	}
	switch (iVar0)
	{
		case joaat("CC_MKUP_72"):
		case joaat("CC_MKUP_73"):
		case joaat("CC_MKUP_74"):
		case joaat("CC_MKUP_75"):
		case joaat("CC_MKUP_76"):
		case joaat("CC_MKUP_77"):
		case joaat("CC_MKUP_78"):
		case joaat("CC_MKUP_79"):
		case joaat("CC_MKUP_80"):
			return "SHOP_CONTENT_41" /* GXT: The Cayo Perico Heist */;
			break;
	}
	switch (iVar0)
	{
		case joaat("CC_MKUP_81"):
		case joaat("CC_MKUP_82"):
		case joaat("CC_MKUP_83"):
		case joaat("CC_MKUP_84"):
		case joaat("CC_MKUP_85"):
		case joaat("CC_MKUP_86"):
		case joaat("CC_MKUP_87"):
		case joaat("CC_MKUP_88"):
		case joaat("CC_MKUP_89"):
		case joaat("CC_MKUP_90"):
		case joaat("CC_MKUP_91"):
		case joaat("CC_MKUP_92"):
		case joaat("CC_MKUP_93"):
		case joaat("CC_MKUP_94"):
			return "SHOP_CONTENT_44" /* GXT: The Contract */;
			break;
	}
	return "";
}

int func_985(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x114ED9
{
	int iVar0;
	iVar0 = 0;
	if (iParam0 == joaat("btype2"))
	{
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 51;
	}
	if (iParam0 == joaat("lurcher"))
	{
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
	}
	else
	{
		iVar0 += 49;
	}
	if (iParam0 == joaat("faction2"))
	{
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 73 && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 75 && iParam1 >= 2) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 268;
	}
	if (iParam0 == joaat("buccaneer2"))
	{
		if ((iParam3 == 82 && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 75 && iParam1 >= 2) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 73 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if ((iParam3 == 62 && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if ((iParam3 == 63 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
	}
	else
	{
		iVar0 += 319;
	}
	if (iParam0 == joaat("chino2"))
	{
		if ((iParam3 == 82 && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 75 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 62 && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if ((iParam3 == 63 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 315;
	}
	if (iParam0 == joaat("moonbeam2"))
	{
		if ((iParam3 == 6 && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 75 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 68 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if ((iParam3 == 69 && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 62 && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if ((iParam3 == 63 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 308;
	}
	if (iParam0 == joaat("primo2"))
	{
		if ((iParam3 == 80 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 81 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 82 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if ((iParam3 == 75 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 73 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 62 && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if ((iParam3 == 63 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
	}
	else
	{
		iVar0 += 309;
	}
	if (iParam0 == joaat("voodoo"))
	{
		if ((iParam3 == 79 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 80 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 81 && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if ((iParam3 == 82 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 6 && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if ((iParam3 == 76 && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if ((iParam3 == 77 && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if ((iParam3 == 75 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 91 && (iParam2 == 0 || iParam2 == 2)) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if ((iParam3 == 92 && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if ((iParam3 == 70 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 71 && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 72 && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if ((iParam3 == 85 && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 62 && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if ((iParam3 == 63 && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if ((iParam3 == 74 && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 326;
	}
	if (iParam0 == joaat("faction"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("buccaneer"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("chino"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("moonbeam"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("primo"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("voodoo2"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("sultan"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("banshee"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
	}
	else
	{
		iVar0 += 17;
	}
	if (iParam0 == joaat("banshee2"))
	{
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (iParam3 == 65)
		{
			if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
			else
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
		}
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
	}
	else
	{
		iVar0 += 114;
	}
	if (iParam0 == joaat("sultanrs"))
	{
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (iParam3 == 65)
		{
			if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
			else
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
		}
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 221;
	}
	if (iParam0 == joaat("btype3"))
	{
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 93 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 94 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 16;
	}
	if (iParam0 == joaat("faction"))
	{
		if (iParam3 == 61 && iParam1 == 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("sabregt"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("tornado"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("tornado2"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("tornado3"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("virgo3"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("minivan"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("slamvan"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("faction3"))
	{
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (iParam3 == 65)
		{
			if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
			else
			{
				if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
				{
					return (iVar0 + iParam1);
				}
				iVar0 += 46;
			}
		}
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 73 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
	}
	else
	{
		iVar0 += 272;
	}
	if (iParam0 == joaat("minivan2"))
	{
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
	}
	else
	{
		iVar0 += 281;
	}
	if (iParam0 == joaat("sabregt2"))
	{
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && (iParam2 == 0 || iParam2 == 1)) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 73 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 62 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 234;
	}
	if (iParam0 == joaat("slamvan3"))
	{
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 62 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
	}
	else
	{
		iVar0 += 315;
	}
	if (iParam0 == joaat("tornado5"))
	{
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (((iParam3 == 91 && iParam2 == 3) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
	}
	else
	{
		iVar0 += 382;
	}
	if (iParam0 == joaat("virgo2"))
	{
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (Global_262145.f_12042 /* Tunable: TURN_ON_HALLOWEEN_BOBBLEHEADS */)
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 45)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		else
		{
			if ((iParam3 == 65 && iParam1 >= 1) && iParam1 <= 21)
			{
				return (iVar0 + iParam1);
			}
			iVar0 += 46;
		}
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 73 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 0) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
	}
	else
	{
		iVar0 += 290;
	}
	if (iParam0 == joaat("avarus"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("chimera"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("daemon2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("zombiea"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("zombieb"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("sanctus"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("wolfsbane"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 28)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 29;
	}
	else
	{
		iVar0 += 29;
	}
	if (iParam0 == joaat("blazer4"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("youga2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0 += 20;
	}
	if (iParam0 == joaat("fcr2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
	}
	else
	{
		iVar0 += 59;
	}
	if (iParam0 == joaat("diablous2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("nightblade"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("faggio3"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("faggio"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("defiler"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("esskey"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("hakuchou2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("manchez"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("vortex"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 13;
	}
	if (iParam0 == joaat("apc"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("halftrack"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("dune3"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("tampa3"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("nightshark"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("trailersmall2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("oppressor"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("insurgent3"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("technical3"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("ardent"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("specter2"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 67 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if ((iParam3 == 68 && iParam2 == 0) && iParam1 == 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 116;
	}
	if (iParam0 == joaat("comet3"))
	{
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 91 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if ((iParam3 == 68 && iParam2 == 0) && iParam1 == 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 200;
	}
	if (iParam0 == joaat("elegy"))
	{
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if ((iParam3 == 91 && iParam2 == 1) && iParam1 == 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 91 && iParam2 == 2) && iParam1 >= 0) && iParam1 <= 67)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 68;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if ((iParam3 == 68 && iParam2 == 0) && iParam1 == 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 252;
	}
	if (iParam0 == joaat("italigtb2"))
	{
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 67 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
	}
	else
	{
		iVar0 += 122;
	}
	if (iParam0 == joaat("nero2"))
	{
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 67 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 92 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 48)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 49;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if ((iParam3 == 81 && iParam2 == 0) && iParam1 == 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
	}
	else
	{
		iVar0 += 105;
	}
	if (iParam0 == joaat("starling"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("nokota"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("rogue"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("molotok"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("bombushka"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("tula"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("hunter"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("seabreeze"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("alphaz1"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("havok"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("retinue"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("microlight"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("visione"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 9;
	}
	if (iParam0 == joaat("comet4"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("barrage"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("avenger"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("gb200"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 53;
	}
	if (iParam0 == joaat("fagaloa"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 65;
	}
	if (iParam0 == joaat("michelli"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 58;
	}
	if (iParam0 == joaat("ellie"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 27;
	}
	if (iParam0 == joaat("issi3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 114;
	}
	if (iParam0 == joaat("tezeract"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 43;
	}
	if (iParam0 == joaat("flashgt"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 56;
	}
	if (iParam0 == joaat("caracara"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("cheburek"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 62;
	}
	if (iParam0 == joaat("dominator3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 19)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 20;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 115;
	}
	if (iParam0 == joaat("tyrant"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 12;
	}
	if (iParam0 == joaat("taipan"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
	}
	else
	{
		iVar0 += 47;
	}
	if (iParam0 == joaat("entity2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
	}
	else
	{
		iVar0 += 26;
	}
	if (iParam0 == joaat("hotring"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 31)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 32;
	}
	else
	{
		iVar0 += 32;
	}
	if (iParam0 == joaat("jester3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 77;
	}
	if (iParam0 == joaat("stafford"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
	}
	else
	{
		iVar0 += 8;
	}
	if (iParam0 == joaat("speedo4"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 31;
	}
	if (iParam0 == joaat("mule4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 32;
	}
	if (iParam0 == joaat("pounder2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 35;
	}
	if (iParam0 == joaat("swinger"))
	{
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 55;
	}
	if (iParam0 == joaat("patriot2"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 43;
	}
	if (iParam0 == joaat("oppressor2"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 39;
	}
	if (iParam0 == joaat("menacer"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 21)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 22;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 115;
	}
	if (iParam0 == joaat("freecrawler"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 61;
	}
	if (iParam0 == joaat("scramjet"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("strikeforce"))
	{
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
	}
	else
	{
		iVar0 += 30;
	}
	if (iParam0 == joaat("patriot"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("prairie"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 11;
	}
	if (iParam0 == joaat("clique"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 43;
	}
	if (iParam0 == joaat("deveste"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 48;
	}
	if (iParam0 == joaat("deviant"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 66;
	}
	if (iParam0 == joaat("impaler"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 39;
	}
	if (iParam0 == joaat("schlagen"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 86;
	}
	if (iParam0 == joaat("toros"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 96;
	}
	if (iParam0 == joaat("vamos"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 67;
	}
	if (iParam0 == joaat("tulip"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 45;
	}
	if (iParam0 == joaat("impaler2"))
	{
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 59 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 75;
	}
	if (iParam0 == joaat("italigto"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
	}
	else
	{
		iVar0 += 77;
	}
	if (iParam0 == joaat("dominator4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("scarab"))
	{
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 90;
	}
	if (iParam0 == joaat("cerberus"))
	{
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 76;
	}
	if (iParam0 == joaat("cerberus2"))
	{
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 80;
	}
	if (iParam0 == joaat("bruiser"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 69;
	}
	if (iParam0 == joaat("monster3"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
	}
	else
	{
		iVar0 += 46;
	}
	if (iParam0 == joaat("slamvan4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 59;
	}
	if (iParam0 == joaat("imperator"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 79;
	}
	if (iParam0 == joaat("zr380"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 63;
	}
	if (iParam0 == joaat("issi4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 123;
	}
	if (iParam0 == joaat("deathbike"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 23;
	}
	if (iParam0 == joaat("brutus"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 70;
	}
	if (iParam0 == joaat("zr3802"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 86;
	}
	if (iParam0 == joaat("dominator5"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 69;
	}
	if (iParam0 == joaat("deathbike2"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 40;
	}
	if (iParam0 == joaat("issi6"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 98;
	}
	if (iParam0 == joaat("zr3803"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 63;
	}
	if (iParam0 == joaat("dominator6"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("deathbike3"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 14;
	}
	if (iParam0 == joaat("rcbandito"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
	}
	else
	{
		iVar0 += 39;
	}
	if (iParam0 == joaat("monster5"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 55;
	}
	if (iParam0 == joaat("scarab2"))
	{
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 108;
	}
	if (iParam0 == joaat("impaler3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 50;
	}
	if (iParam0 == joaat("impaler4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
	}
	else
	{
		iVar0 += 69;
	}
	if (iParam0 == joaat("brutus3"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 72;
	}
	if (iParam0 == joaat("monster4"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 62;
	}
	if (iParam0 == joaat("bruiser2"))
	{
		if (((iParam3 == 45 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 73;
	}
	if (iParam0 == joaat("bruiser3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
	}
	else
	{
		iVar0 += 75;
	}
	if (iParam0 == joaat("issi5"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 129;
	}
	if (iParam0 == joaat("cerberus3"))
	{
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 76;
	}
	if (iParam0 == joaat("slamvan5"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
	}
	else
	{
		iVar0 += 66;
	}
	if (iParam0 == joaat("imperator2"))
	{
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 68;
	}
	if (iParam0 == joaat("imperator3"))
	{
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 69;
	}
	if (iParam0 == joaat("brutus2"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 68;
	}
	if (iParam0 == joaat("scarab3"))
	{
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 90;
	}
	if (iParam0 == joaat("slamvan6"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 78 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 59;
	}
	if (iParam0 == joaat("caracara2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 58;
	}
	if (iParam0 == joaat("drafter"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("dynasty"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 81;
	}
	if (iParam0 == joaat("gauntlet3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0 += 87;
	}
	if (iParam0 == joaat("gauntlet4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 86;
	}
	if (iParam0 == joaat("hellion"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 94;
	}
	if (iParam0 == joaat("issi7"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 65;
	}
	if (iParam0 == joaat("krieger"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 37;
	}
	if (iParam0 == joaat("locust"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 70;
	}
	if (iParam0 == joaat("nebula"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 61;
	}
	if (iParam0 == joaat("neo"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 87;
	}
	if (iParam0 == joaat("novak"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 53;
	}
	if (iParam0 == joaat("s80"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 32;
	}
	if (iParam0 == joaat("thrax"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 80;
	}
	if (iParam0 == joaat("zion3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 78;
	}
	if (iParam0 == joaat("zorrusso"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 38;
	}
	if (iParam0 == joaat("emerus"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 23)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 24;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 72;
	}
	if (iParam0 == joaat("peyote"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("peyote2"))
	{
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
	}
	else
	{
		iVar0 += 57;
	}
	if (iParam0 == joaat("rrocket"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 16;
	}
	if (iParam0 == joaat("jugular"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 54;
	}
	if (iParam0 == joaat("paragon"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("paragon2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("rebla"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 94;
	}
	if (iParam0 == joaat("imorgon"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 24)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 25;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 125;
	}
	if (iParam0 == joaat("asbo"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 93;
	}
	if (iParam0 == joaat("sugoi"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 100;
	}
	if (iParam0 == joaat("komoda"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 24)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 25;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 115;
	}
	if (iParam0 == joaat("zhaba"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 30)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 31;
	}
	else
	{
		iVar0 += 87;
	}
	if (iParam0 == joaat("vstr"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 83;
	}
	if (iParam0 == joaat("everon"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 81;
	}
	if (iParam0 == joaat("sultan2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0 += 102;
	}
	if (iParam0 == joaat("kanjo"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
	}
	else
	{
		iVar0 += 275;
	}
	if (iParam0 == joaat("outlaw"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 21;
	}
	if (iParam0 == joaat("formula"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 47;
	}
	if (iParam0 == joaat("stryder"))
	{
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 23;
	}
	if (iParam0 == joaat("jb7002"))
	{
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 5;
	}
	if (iParam0 == joaat("vagrant"))
	{
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 30)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 31;
	}
	else
	{
		iVar0 += 60;
	}
	if (iParam0 == joaat("retinue2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 25 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 64;
	}
	if (iParam0 == joaat("yosemite2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 51 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 71;
	}
	if (iParam0 == joaat("furia"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 84;
	}
	if (iParam0 == joaat("formula2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 39;
	}
	if (iParam0 == joaat("minitank"))
	{
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 15;
	}
	if (iParam0 == joaat("gauntlet5"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 17)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 18;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 22) && iParam1 <= 23)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 59 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 54 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
	}
	else
	{
		iVar0 += 207;
	}
	if (iParam0 == joaat("manana2"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 79 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 65 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 21)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 22;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 62 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
	}
	else
	{
		iVar0 += 204;
	}
	if (iParam0 == joaat("manana"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("yosemite"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("dukes3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 59 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 26)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 27;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
	}
	else
	{
		iVar0 += 114;
	}
	if (iParam0 == joaat("club"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 54 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 22) && iParam1 <= 27)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
	}
	else
	{
		iVar0 += 85;
	}
	if (iParam0 == joaat("youga3"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 43 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 24 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 7 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 91 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 66 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
	}
	else
	{
		iVar0 += 182;
	}
	if (iParam0 == joaat("peyote3"))
	{
		if (((iParam3 == 91 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 65 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 21)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 22;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 73 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 45 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 62 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 207;
	}
	if (iParam0 == joaat("glendale2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 75 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 91 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 65 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 21)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 22;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 72 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 73 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 62 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 63 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
	}
	else
	{
		iVar0 += 207;
	}
	if (iParam0 == joaat("yosemite3"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 43 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 7 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 74 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 84 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
		if (((iParam3 == 65 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 21)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 22;
		if (((iParam3 == 90 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 69 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 70 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 71 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 83 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 51 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 80 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 81 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 82 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 76 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 77 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 68 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
	}
	else
	{
		iVar0 += 264;
	}
	if (iParam0 == joaat("seminole2"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 43 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
	}
	else
	{
		iVar0 += 75;
	}
	if (iParam0 == joaat("penumbra2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 22)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 23;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 19 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 145;
	}
	if (iParam0 == joaat("glendale"))
	{
		if (iParam3 == 61 && iParam1 == 0)
		{
			return (iVar0 + iParam1);
		}
		iVar0++;
	}
	else
	{
		iVar0++;
	}
	if (iParam0 == joaat("landstalker2"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
	}
	else
	{
		iVar0 += 62;
	}
	if (iParam0 == joaat("coquette4"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 54 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 60;
	}
	if (iParam0 == joaat("openwheel1"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 28;
	}
	if (iParam0 == joaat("openwheel2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 57;
	}
	if (iParam0 == joaat("tigon"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 51;
	}
	if (iParam0 == joaat("brioso2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 52 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 61;
	}
	if (iParam0 == joaat("manchez2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 45;
	}
	if (iParam0 == joaat("seasparrow2"))
	{
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
	}
	else
	{
		iVar0 += 3;
	}
	if (iParam0 == joaat("slamtruck"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 95 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 18)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 19;
	}
	else
	{
		iVar0 += 59;
	}
	if (iParam0 == joaat("italirsx"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 112;
	}
	if (iParam0 == joaat("toreador"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 36 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 58;
	}
	if (iParam0 == joaat("winky"))
	{
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 14 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 7 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 29)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 30;
	}
	else
	{
		iVar0 += 86;
	}
	if (iParam0 == joaat("weevil"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
		if (((iParam3 == 39 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 1)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 2;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 22) && iParam1 <= 27)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
	}
	else
	{
		iVar0 += 117;
	}
	if (iParam0 == joaat("squaddie"))
	{
		if (((iParam3 == 6 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 13)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 14;
		if (((iParam3 == 8 && iParam2 == 2) && iParam1 >= 1) && iParam1 <= 8)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 9;
		if (((iParam3 == 44 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 5)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 6;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 19)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 20;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 14)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 15;
		if (((iParam3 == 32 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 7)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 8;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 16)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 17;
		if (((iParam3 == 40 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 9)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 10;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 159;
	}
	if (iParam0 == joaat("veto"))
	{
		if (((iParam3 == 8 && iParam2 == 1) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
	}
	else
	{
		iVar0 += 55;
	}
	if (iParam0 == joaat("alkonost"))
	{
		if (((iParam3 == 18 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 10)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 11;
	}
	else
	{
		iVar0 += 19;
	}
	if (iParam0 == joaat("annihilator2"))
	{
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 24;
	}
	if (iParam0 == joaat("veto2"))
	{
		if (((iParam3 == 46 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 23 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 12)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 13;
		if (((iParam3 == 15 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 4)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 5;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 30)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 31;
	}
	else
	{
		iVar0 += 69;
	}
	if (iParam0 == joaat("verus"))
	{
		if (((iParam3 == 41 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 12 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 3)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 4;
		if (((iParam3 == 9 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 7 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 2)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 3;
		if (((iParam3 == 26 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 6)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 7;
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 20)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 21;
	}
	else
	{
		iVar0 += 42;
	}
	if (iParam0 == joaat("kuruma"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 15)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 16;
	}
	else
	{
		iVar0 += 16;
	}
	if (iParam0 == joaat("hermes"))
	{
		if (((iParam3 == 85 && iParam2 == 0) && iParam1 >= 1) && iParam1 <= 11)
		{
			return (iVar0 + iParam1);
		}
		iVar0 += 12;
	}
	else
	{
		iVar0 += 12;
	}
	if (iVar0 > 20000)
	{
	}
	return 0;
}

int func_986(int iParam0)//Position - 0x12C1A4
{
	switch (iParam0)
	{
		case joaat("adder"):
			return 0;
			break;
		case joaat("akuma"):
			return 1;
			break;
		case joaat("asea"):
			return 2;
			break;
		case joaat("asterope"):
			return 3;
			break;
		case joaat("bagger"):
			return 4;
			break;
		case joaat("baller"):
			return 5;
			break;
		case joaat("banshee"):
		case joaat("banshee2"):
			return 6;
			break;
		case joaat("bati"):
			return 7;
			break;
		case joaat("bati2"):
			return 8;
			break;
		case joaat("bfinjection"):
			return 9;
			break;
		case joaat("bison"):
			return 10;
			break;
		case joaat("bison2"):
			return 11;
			break;
		case joaat("bison3"):
			return 12;
			break;
		case joaat("bjxl"):
			return 13;
			break;
		case joaat("btype"):
			return 14;
			break;
		case joaat("blazer"):
			return 15;
			break;
		case joaat("blazer2"):
			return 15;
			break;
		case joaat("blazer3"):
			return 15;
			break;
		case joaat("blista"):
			return 16;
			break;
		case joaat("bobcatxl"):
			return 17;
			break;
		case joaat("bodhi2"):
			return 18;
			break;
		case joaat("boxville"):
			return 19;
			break;
		case joaat("boxville2"):
			return 20;
			break;
		case joaat("boxville3"):
			return 21;
			break;
		case joaat("buccaneer"):
		case joaat("buccaneer2"):
			return 22;
			break;
		case joaat("buffalo"):
			return 23;
			break;
		case joaat("buffalo2"):
			return 24;
			break;
		case joaat("bullet"):
			return 25;
			break;
		case joaat("burrito"):
			return 26;
			break;
		case joaat("paradise"):
			return 27;
			break;
		case joaat("bifta"):
			return 28;
			break;
		case joaat("kalahari"):
			return 29;
			break;
		case joaat("carbonizzare"):
			return 30;
			break;
		case joaat("carbonrs"):
			return 31;
			break;
		case joaat("cavalcade"):
			return 32;
			break;
		case joaat("cavalcade2"):
			return 33;
			break;
		case joaat("cheetah"):
			return 34;
			break;
		case joaat("cogcabrio"):
			return 35;
			break;
		case joaat("comet2"):
			return 36;
			break;
		case joaat("coquette"):
		case joaat("coquette2"):
			return 37;
			break;
		case joaat("daemon"):
			return 38;
			break;
		case joaat("dilettante"):
			return 39;
			break;
		case joaat("dominator"):
			return 40;
			break;
		case joaat("double"):
			return 41;
			break;
		case joaat("dubsta"):
			return 42;
			break;
		case joaat("dubsta2"):
			return 43;
			break;
		case joaat("elegy2"):
			return 44;
			break;
		case joaat("emperor"):
			return 45;
			break;
		case joaat("emperor2"):
			return 46;
			break;
		case joaat("emperor3"):
			return 47;
			break;
		case joaat("entityxf"):
			return 48;
			break;
		case joaat("exemplar"):
			return 49;
			break;
		case joaat("f620"):
			return 50;
			break;
		case joaat("faggio2"):
			return 51;
			break;
		case joaat("felon"):
			return 52;
			break;
		case joaat("felon2"):
			return 53;
			break;
		case joaat("feltzer2"):
			return 54;
			break;
		case joaat("fq2"):
			return 55;
			break;
		case joaat("fugitive"):
			return 56;
			break;
		case joaat("fusilade"):
			return 57;
			break;
		case joaat("futo"):
			return 58;
			break;
		case joaat("gauntlet"):
			return 59;
			break;
		case joaat("gburrito"):
			return 60;
			break;
		case joaat("granger"):
			return 61;
			break;
		case joaat("gresley"):
			return 62;
			break;
		case joaat("habanero"):
			return 63;
			break;
		case joaat("hexer"):
			return 64;
			break;
		case joaat("hotknife"):
			return 65;
			break;
		case joaat("infernus"):
			return 66;
			break;
		case joaat("ingot"):
			return 67;
			break;
		case joaat("intruder"):
			return 68;
			break;
		case joaat("issi2"):
			return 69;
			break;
		case joaat("jackal"):
			return 70;
			break;
		case joaat("jb700"):
			return 71;
			break;
		case joaat("khamelion"):
			return 72;
			break;
		case joaat("landstalker"):
			return 73;
			break;
		case joaat("lguard"):
			return 74;
			break;
		case joaat("manana"):
			return 75;
			break;
		case joaat("mesa"):
			return 76;
			break;
		case joaat("minivan"):
		case joaat("minivan2"):
			return 77;
			break;
		case joaat("monroe"):
			return 78;
			break;
		case joaat("nemesis"):
			return 79;
			break;
		case joaat("ninef"):
			return 80;
			break;
		case joaat("ninef2"):
			return 81;
			break;
		case joaat("oracle"):
			return 82;
			break;
		case joaat("oracle2"):
			return 83;
			break;
		case joaat("patriot"):
			return 84;
			break;
		case joaat("pcj"):
			return 85;
			break;
		case joaat("penumbra"):
			return 86;
			break;
		case joaat("peyote"):
			return 87;
			break;
		case joaat("phoenix"):
			return 88;
			break;
		case joaat("prairie"):
			return 89;
			break;
		case joaat("pranger"):
			return 90;
			break;
		case joaat("premier"):
			return 91;
			break;
		case joaat("primo"):
		case joaat("primo2"):
			return 92;
			break;
		case joaat("radi"):
			return 93;
			break;
		case joaat("rancherxl"):
			return 94;
			break;
		case joaat("rancherxl2"):
			return 95;
			break;
		case joaat("rapidgt"):
			return 96;
			break;
		case joaat("rapidgt2"):
			return 97;
			break;
		case joaat("ratloader"):
			return 98;
			break;
		case joaat("rebel"):
			return 99;
			break;
		case joaat("rebel2"):
			return 100;
			break;
		case joaat("regina"):
			return 101;
			break;
		case joaat("rocoto"):
			return 102;
			break;
		case joaat("ruffian"):
			return 103;
			break;
		case joaat("ruiner"):
			return 104;
			break;
		case joaat("rumpo"):
			return 105;
			break;
		case joaat("sabregt"):
		case joaat("sabregt2"):
			return 106;
			break;
		case joaat("sadler"):
			return 107;
			break;
		case joaat("sanchez"):
			return 108;
			break;
		case joaat("sandking"):
			return 109;
			break;
		case joaat("sandking2"):
			return 110;
			break;
		case joaat("schafter2"):
			return 111;
			break;
		case joaat("schwarzer"):
			return 112;
			break;
		case joaat("seminole"):
			return 113;
			break;
		case joaat("sentinel"):
			return 114;
			break;
		case joaat("sentinel2"):
			return 115;
			break;
		case joaat("serrano"):
			return 116;
			break;
		case joaat("speedo"):
			return 117;
			break;
		case joaat("speedo2"):
			return 118;
			break;
		case joaat("stanier"):
			return 119;
			break;
		case joaat("stinger"):
			return 120;
			break;
		case joaat("stingergt"):
			return 121;
			break;
		case joaat("stratum"):
			return 122;
			break;
		case joaat("stretch"):
			return 123;
			break;
		case joaat("sultan"):
		case joaat("sultanrs"):
			return 124;
			break;
		case joaat("superd"):
			return 125;
			break;
		case joaat("surano"):
			return 126;
			break;
		case joaat("surge"):
			return 127;
			break;
		case joaat("tailgater"):
			return 128;
			break;
		case joaat("jester"):
			return 129;
			break;
		case joaat("tornado"):
		case joaat("tornado2"):
		case joaat("tornado3"):
		case joaat("tornado4"):
		case joaat("tornado5"):
			return 133;
			break;
		case joaat("vacca"):
			return 134;
			break;
		case joaat("vader"):
			return 135;
			break;
		case joaat("vigero"):
			return 136;
			break;
		case joaat("voltic"):
			return 137;
			break;
		case joaat("voodoo2"):
		case joaat("voodoo"):
			return 138;
			break;
		case joaat("washington"):
			return 139;
			break;
		case joaat("youga"):
			return 140;
			break;
		case joaat("zion"):
			return 141;
			break;
		case joaat("zion2"):
			return 142;
			break;
		case joaat("ztype"):
			return 143;
			break;
		case joaat("massacro"):
			return 144;
			break;
		case joaat("turismor"):
			return 145;
			break;
		case joaat("zentorno"):
			return 146;
			break;
		case joaat("huntley"):
			return 147;
			break;
		case joaat("alpha"):
			return 148;
			break;
		case joaat("cruiser"):
			return 149;
			break;
		case joaat("surfer"):
			return 150;
			break;
		case joaat("faction"):
		case joaat("faction2"):
			return 151;
			break;
		case joaat("chino"):
		case joaat("chino2"):
			return 152;
			break;
		case joaat("moonbeam"):
		case joaat("moonbeam2"):
			return 153;
			break;
		case joaat("btype2"):
			return 154;
			break;
		case joaat("lurcher"):
			return 155;
			break;
		case joaat("btype3"):
			return 156;
			break;
		case joaat("faction3"):
			return 157;
			break;
		case joaat("slamvan"):
		case joaat("slamvan2"):
		case joaat("slamvan3"):
			return 158;
			break;
		case joaat("virgo2"):
			return 159;
			break;
		case joaat("virgo3"):
			return 160;
			break;
		case joaat("bestiagts"):
			return 161;
			break;
		case joaat("brickade"):
			return 162;
			break;
		case joaat("fmj"):
			return 163;
			break;
		case joaat("nimbus"):
			return 164;
			break;
		case joaat("pfister811"):
			return 165;
			break;
		case joaat("prototipo"):
			return 166;
			break;
		case joaat("rumpo3"):
			return 167;
			break;
		case joaat("seven70"):
			return 168;
			break;
		case joaat("tug"):
			return 169;
			break;
		case joaat("volatus"):
			return 170;
			break;
		case joaat("windsor2"):
			return 171;
			break;
		case joaat("xls"):
			return 172;
			break;
		case joaat("xls2"):
			return 173;
			break;
		case joaat("reaper"):
			return 174;
			break;
		case joaat("le7b"):
			return 175;
			break;
	}
	switch (iParam0)
	{
		case joaat("buffalo3"):
			return 176;
			break;
		case joaat("dominator2"):
			return 177;
			break;
		case joaat("gauntlet2"):
			return 178;
			break;
		case joaat("stalion2"):
			return 179;
			break;
		case joaat("omnis"):
			return 180;
			break;
		case joaat("tropos"):
			return 181;
			break;
		case joaat("brioso"):
			return 182;
			break;
		case joaat("trophytruck"):
			return 183;
			break;
		case joaat("trophytruck2"):
			return 184;
			break;
		case joaat("contender"):
			return 185;
			break;
		case joaat("cliffhanger"):
			return 186;
			break;
		case joaat("bf400"):
			return 187;
			break;
		case joaat("tyrus"):
			return 188;
			break;
		case joaat("rallytruck"):
			return 189;
			break;
		case joaat("tampa2"):
			return 190;
			break;
		case joaat("gargoyle"):
			return 191;
			break;
		case joaat("lynx"):
			return 192;
			break;
		case joaat("sheava"):
			return 193;
			break;
		case joaat("avarus"):
			return 194;
			break;
		case joaat("chimera"):
			return 195;
			break;
		case joaat("daemon2"):
			return 196;
			break;
		case joaat("defiler"):
			return 197;
			break;
		case joaat("esskey"):
			return 198;
			break;
		case joaat("nightblade"):
			return 199;
			break;
		case joaat("ratbike"):
			return 200;
			break;
		case joaat("zombiea"):
			return 202;
			break;
		case joaat("zombieb"):
			return 203;
			break;
		case joaat("shotaro"):
			return 204;
			break;
		case joaat("raptor"):
			return 205;
			break;
		case joaat("hakuchou2"):
			return 206;
			break;
		case joaat("blazer4"):
			return 207;
			break;
		case joaat("sanctus"):
			return 208;
			break;
		case joaat("vortex"):
			return 209;
			break;
		case joaat("manchez"):
			return 210;
			break;
		case joaat("tornado6"):
			return 211;
			break;
		case joaat("youga2"):
			return 212;
			break;
		case joaat("wolfsbane"):
			return 213;
			break;
		case joaat("faggio3"):
			return 214;
			break;
		case joaat("faggio"):
			return 215;
			break;
		case joaat("dune5"):
			return 216;
			break;
		case joaat("phantom2"):
			return 217;
			break;
		case joaat("technical2"):
			return 218;
			break;
		case joaat("blazer5"):
			return 219;
			break;
		case joaat("boxville5"):
			return 220;
			break;
		case joaat("wastelander"):
			return 221;
			break;
		case joaat("ruiner2"):
			return 222;
			break;
		case joaat("voltic2"):
			return 223;
			break;
		case joaat("penetrator"):
			return 224;
			break;
		case joaat("tempesta"):
			return 225;
			break;
		case joaat("italigtb2"):
			return 226;
			break;
		case joaat("nero2"):
			return 227;
			break;
		case joaat("diablous2"):
			return 228;
			break;
		case joaat("fcr2"):
			return 229;
			break;
		case joaat("elegy"):
			return 230;
			break;
		case joaat("comet3"):
			return 232;
			break;
		case joaat("specter2"):
			return 232;
			break;
		case joaat("nero"):
			return 233;
			break;
		case joaat("italigtb"):
			return 234;
			break;
		case joaat("fcr"):
			return 235;
			break;
		case joaat("specter"):
			return 236;
			break;
		case joaat("diablous"):
			return 237;
			break;
		case joaat("infernus2"):
			return 238;
			break;
		case joaat("gp1"):
			return 239;
			break;
		case joaat("ruston"):
			return 240;
			break;
		case joaat("turismo2"):
			return 241;
			break;
		case joaat("cheetah2"):
			return 242;
			break;
		case joaat("torero"):
			return 243;
			break;
		case joaat("vagner"):
			return 244;
			break;
		case joaat("xa21"):
			return 245;
			break;
		case joaat("nightshark"):
			return 246;
			break;
		case joaat("ardent"):
			return 247;
			break;
		case joaat("tampa3"):
			return 248;
			break;
		case joaat("apc"):
			return 249;
			break;
		case joaat("dune3"):
			return 250;
			break;
		case joaat("halftrack"):
			return 251;
			break;
		case joaat("oppressor"):
			return 252;
			break;
		case joaat("trailersmall2"):
			return 253;
			break;
		case joaat("insurgent3"):
			return 254;
			break;
		case joaat("technical3"):
			return 255;
			break;
		case joaat("hauler2"):
			return 256;
			break;
		case joaat("phantom3"):
			return 257;
			break;
		case joaat("trailerlarge"):
			return 258;
			break;
		case joaat("lazer"):
			return 259;
			break;
		case joaat("microlight"):
			return 260;
			break;
		case joaat("mogul"):
			return 261;
			break;
		case joaat("rogue"):
			return 262;
			break;
		case joaat("starling"):
			return 263;
			break;
		case joaat("seabreeze"):
			return 264;
			break;
		case joaat("tula"):
			return 265;
			break;
		case joaat("pyro"):
			return 266;
			break;
		case joaat("molotok"):
			return 267;
			break;
		case joaat("nokota"):
			return 268;
			break;
		case joaat("bombushka"):
			return 269;
			break;
		case joaat("hunter"):
			return 270;
			break;
		case joaat("havok"):
			return 271;
			break;
		case joaat("howard"):
			return 272;
			break;
		case joaat("alphaz1"):
			return 273;
			break;
		case joaat("cyclone"):
			return 274;
			break;
		case joaat("visione"):
			return 275;
			break;
		case joaat("vigilante"):
			return 276;
			break;
		case joaat("retinue"):
			return 277;
			break;
		case joaat("rapidgt3"):
			return 278;
			break;
		case joaat("deluxo"):
			return 277;
			break;
		case joaat("stromberg"):
			return 278;
			break;
		case joaat("riot2"):
			return 279;
			break;
		case joaat("chernobog"):
			return 280;
			break;
		case joaat("khanjali"):
			return 281;
			break;
		case joaat("akula"):
			return 282;
			break;
		case joaat("thruster"):
			return 283;
			break;
		case joaat("avenger"):
			return 284;
			break;
		case joaat("barrage"):
			return 285;
			break;
		case joaat("volatol"):
			return 286;
			break;
		case joaat("comet4"):
			return 287;
			break;
		case joaat("neon"):
			return 288;
			break;
		case joaat("streiter"):
			return 289;
			break;
		case joaat("sentinel3"):
			return 290;
			break;
		case joaat("yosemite"):
			return 291;
			break;
		case joaat("hustler"):
			return 292;
			break;
		case joaat("riata"):
			return 293;
			break;
		case joaat("revolter"):
			return 294;
			break;
		case joaat("hermes"):
			return 295;
			break;
		case joaat("comet5"):
			return 296;
			break;
		case joaat("z190"):
			return 297;
			break;
		case joaat("viseris"):
			return 298;
			break;
		case joaat("kamacho"):
			return 299;
			break;
		case joaat("autarch"):
			return 300;
			break;
		case joaat("pariah"):
			return 301;
			break;
		case joaat("raiden"):
			return 302;
			break;
		case joaat("sc1"):
			return 303;
			break;
		case joaat("gt500"):
			return 304;
			break;
		case joaat("savestra"):
			return 305;
			break;
	}
	return -1;
}

int func_987(int iParam0)//Position - 0x12D309
{
	switch (iParam0)
	{
		case joaat("CMOD_TYR_10"):
		case joaat("CMOD_SMOKE_10"):
			return 0;
			break;
		case joaat("CMOD_TYR_11"):
		case joaat("CMOD_SMOKE_11"):
			return 1;
			break;
		case joaat("HORN_CLAS1"):
		case joaat("CMOD_SMOKE_4"):
			return 2;
			break;
		case joaat("HORN_CLAS2"):
		case joaat("CMOD_SMOKE_5"):
			return 3;
			break;
		case joaat("HORN_CLAS3"):
		case joaat("CMOD_SMOKE_6"):
			return 4;
			break;
		case joaat("HORN_CLAS4"):
		case joaat("CMOD_SMOKE_7"):
			return 5;
			break;
		case joaat("HORN_CLAS5"):
			return 6;
			break;
		case joaat("HORN_CLAS6"):
		case joaat("CMOD_SMOKE_3"):
			return 7;
			break;
		case joaat("HORN_CLAS7"):
		case joaat("CMOD_SMOKE_8"):
			return 8;
			break;
		case joaat("HORN_CNOTE_C0"):
			return 9;
			break;
		case joaat("HORN_CNOTE_D0"):
			return 10;
			break;
		case joaat("HORN_CNOTE_E0"):
			return 11;
			break;
		case joaat("HORN_CNOTE_F0"):
			return 12;
			break;
		case joaat("HORN_CNOTE_G0"):
			return 13;
			break;
		case joaat("HORN_CNOTE_A0"):
			return 14;
			break;
		case joaat("HORN_CNOTE_B0"):
			return 15;
			break;
		case joaat("HORN_CNOTE_C1"):
			return 16;
			break;
		case joaat("CMOD_WIN_5"):
			return 17;
			break;
		case joaat("CMOD_TYR_12"):
		case joaat("CMOD_SMOKE_12"):
			return 18;
			break;
		case joaat("CMOD_TYR_13"):
		case joaat("CMOD_SMOKE_13"):
			return 19;
			break;
		case joaat("HORN_HIPS1"):
			return 20;
			break;
		case joaat("HORN_HIPS2"):
			return 22;
			break;
		case joaat("HORN_HIPS3"):
			return 22;
			break;
		case joaat("HORN_HIPS4"):
			return 23;
			break;
		case joaat("HORN_INDI_1"):
			return 24;
			break;
		case joaat("HORN_INDI_2"):
			return 25;
			break;
		case joaat("HORN_INDI_3"):
			return 26;
			break;
		case joaat("HORN_INDI_4"):
			return 27;
			break;
		case joaat("CMOD_TYR_PAT"):
			return 28;
			break;
		case joaat("HORN_LUXE1"):
			return 29;
			break;
		case joaat("HORN_LUXE2"):
			return 30;
			break;
		case joaat("HORN_LUXE3"):
			return 31;
			break;
		case joaat("HORN_LOWRDER1"):
			return 32;
			break;
		case joaat("HORN_LOWRDER2"):
			return 33;
			break;
		case joaat("HORN_HWEEN1"):
			return 34;
			break;
		case joaat("HORN_HWEEN2"):
			return 35;
			break;
		case joaat("HORN_XM15_1"):
			return 36;
			break;
		case joaat("HORN_XM15_2"):
			return 37;
			break;
		case joaat("HORN_XM15_3"):
			return 38;
			break;
	}
	return -1;
}

int func_988(int iParam0)//Position - 0x12D56F
{
	switch (iParam0)
	{
		case joaat("club"):
		case joaat("gauntlet5"):
		case joaat("weevil"):
		case joaat("zr350"):
		case joaat("remus"):
		case joaat("dominator7"):
		case joaat("tailgater2"):
		case joaat("previon"):
		case joaat("rt3000"):
			return 1;
		default:
	}
	return 0;
}

int func_989(var uParam0)//Position - 0x12D9CF
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	if ((__LIB_0__::func_3() == 0 || __LIB_0__::func_63() == 0) || (__LIB_0__::func_3() == 999 && __LIB_0__::func_63() == 999))
	{
		switch (iVar1)
		{
			case 0:
				return 730;
				break;
			case 1:
				return 731;
				break;
			case 2:
				return 732;
				break;
			case 3:
				return 733;
				break;
			case 4:
				return 734;
				break;
			case 5:
				return 735;
				break;
			case 6:
				return 736;
				break;
		}
	}
	return 13122;
}

int func_990(int iParam0, int iParam1)//Position - 0x12DCB1
{
	if (iParam0 == 45)
	{
		if (iParam1 == 16)
		{
			return 1;
		}
	}
	return 0;
}

int func_991(int iParam0, int iParam1)//Position - 0x12DCCC
{
	if (iParam0 == 45)
	{
		if (iParam1 == 14)
		{
			return 1;
		}
	}
	return 0;
}

int func_992(int iParam0, int iParam1)//Position - 0x12DCE7
{
	if (iParam0 == 45)
	{
		if (iParam1 == 11)
		{
			return 1;
		}
	}
	return 0;
}

int func_993(int iParam0, int iParam1)//Position - 0x12DD02
{
	if (iParam0 == 45)
	{
		if (iParam1 == 19)
		{
			return 1;
		}
	}
	return 0;
}

int func_994(int iParam0)//Position - 0x12DD1D
{
	switch (iParam0)
	{
		case joaat("gb200"):
		case joaat("issi3"):
		case joaat("fagaloa"):
		case joaat("ellie"):
		case joaat("michelli"):
		case joaat("flashgt"):
		case joaat("hotring"):
		case joaat("tezeract"):
		case joaat("tyrant"):
		case joaat("dominator3"):
		case joaat("taipan"):
		case joaat("entity2"):
		case joaat("jester3"):
		case joaat("cheburek"):
		case joaat("caracara"):
		case joaat("seasparrow"):
		case joaat("mule4"):
		case joaat("speedo4"):
		case joaat("pounder2"):
		case joaat("swinger"):
		case joaat("patriot2"):
		case joaat("oppressor2"):
		case joaat("menacer"):
		case joaat("freecrawler"):
		case joaat("stafford"):
		case joaat("scramjet"):
		case joaat("terbyte"):
		case joaat("strikeforce"):
		case joaat("clique"):
		case joaat("deveste"):
		case joaat("deviant"):
		case joaat("impaler"):
		case joaat("scarab"):
		case joaat("schlagen"):
		case joaat("toros"):
		case joaat("vamos"):
		case joaat("tulip"):
		case joaat("monster3"):
		case joaat("impaler2"):
		case joaat("bruiser"):
		case joaat("cerberus"):
		case joaat("dominator4"):
		case joaat("imperator"):
		case joaat("issi4"):
		case joaat("italigto"):
		case joaat("deathbike"):
		case joaat("slamvan4"):
		case joaat("brutus"):
		case joaat("imperator2"):
		case joaat("imperator3"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("impaler3"):
		case joaat("brutus2"):
		case joaat("bruiser2"):
		case joaat("slamvan5"):
		case joaat("issi5"):
		case joaat("monster4"):
		case joaat("scarab2"):
		case joaat("cerberus2"):
		case joaat("dominator5"):
		case joaat("zr3802"):
		case joaat("impaler4"):
		case joaat("brutus3"):
		case joaat("bruiser3"):
		case joaat("slamvan6"):
		case joaat("issi6"):
		case joaat("monster5"):
		case joaat("scarab3"):
		case joaat("cerberus3"):
		case joaat("dominator6"):
		case joaat("zr3803"):
		case joaat("zr380"):
		case joaat("rcbandito"):
		case joaat("caracara2"):
		case joaat("drafter"):
		case joaat("dynasty"):
		case joaat("gauntlet3"):
		case joaat("gauntlet4"):
		case joaat("hellion"):
		case joaat("issi7"):
		case joaat("krieger"):
		case joaat("locust"):
		case joaat("nebula"):
		case joaat("neo"):
		case joaat("novak"):
		case joaat("s80"):
		case joaat("thrax"):
		case joaat("zion3"):
		case joaat("zorrusso"):
		case joaat("emerus"):
		case joaat("peyote2"):
		case joaat("rrocket"):
		case joaat("jugular"):
		case joaat("paragon"):
		case joaat("paragon2"):
		case joaat("asbo"):
		case joaat("kanjo"):
		case joaat("formula"):
		case joaat("imorgon"):
		case joaat("komoda"):
		case joaat("manana2"):
		case joaat("gauntlet5"):
		case joaat("yosemite3"):
		case joaat("peyote3"):
		case joaat("club"):
		case joaat("glendale2"):
		case joaat("penumbra2"):
		case joaat("landstalker2"):
		case joaat("seminole2"):
		case joaat("tigon"):
		case joaat("openwheel1"):
		case joaat("openwheel2"):
		case joaat("coquette4"):
		case joaat("dukes3"):
		case joaat("rebla"):
		case joaat("sugoi"):
		case joaat("youga3"):
		case joaat("zhaba"):
		case joaat("vstr"):
		case joaat("everon"):
		case joaat("sultan2"):
		case joaat("jb7002"):
		case joaat("outlaw"):
		case joaat("stryder"):
		case joaat("firetruk"):
		case joaat("burrito2"):
		case joaat("boxville"):
		case joaat("stockade"):
		case joaat("lguard"):
		case joaat("blazer2"):
		case joaat("vagrant"):
		case joaat("formula2"):
		case joaat("furia"):
		case joaat("yosemite2"):
		case joaat("retinue2"):
		case joaat("minitank"):
		case joaat("manchez2"):
		case joaat("brioso2"):
		case joaat("winky"):
		case joaat("verus"):
		case joaat("alkonost"):
		case joaat("avisa"):
		case joaat("longfin"):
		case joaat("patrolboat"):
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
		case joaat("slamtruck"):
		case joaat("vetir"):
		case joaat("kosatka"):
		case joaat("italirsx"):
		case joaat("toreador"):
		case joaat("weevil"):
		case joaat("dinghy5"):
		case joaat("annihilator2"):
		case joaat("squaddie"):
		case joaat("veto"):
		case joaat("veto2"):
		case joaat("calico"):
		case joaat("comet6"):
		case joaat("cypher"):
		case joaat("dominator7"):
		case joaat("jester4"):
		case joaat("remus"):
		case joaat("vectre"):
		case joaat("zr350"):
		case joaat("warrener2"):
		case joaat("rt3000"):
		case joaat("futo2"):
		case joaat("tailgater2"):
		case joaat("sultan3"):
		case joaat("dominator8"):
		case joaat("euros"):
		case joaat("growler"):
		case joaat("previon"):
		case joaat("astron"):
		case joaat("baller7"):
		case joaat("buffalo4"):
		case joaat("comet7"):
		case joaat("deity"):
		case joaat("granger2"):
		case joaat("ignus"):
		case joaat("jubilee"):
		case joaat("patriot3"):
		case joaat("champion"):
		case joaat("youga4"):
		case joaat("zeno"):
		case joaat("cinquemila"):
		case joaat("reever"):
		case joaat("shinobi"):
		case joaat("iwagen"):
			return 1;
			break;
	}
	switch (iParam0)
	{
		case joaat("brioso3"):
		case joaat("corsita"):
		case joaat("draugur"):
		case joaat("greenwood"):
		case joaat("kanjosj"):
		case joaat("lm87"):
		case joaat("postlude"):
		case joaat("rhinehart"):
		case joaat("sm722"):
		case joaat("tenf"):
		case joaat("tenf2"):
		case joaat("torero2"):
		case joaat("vigero2"):
		case joaat("weevil2"):
		case joaat("ruiner4"):
		case joaat("sentinel4"):
		case joaat("omnisegt"):
			return 1;
			break;
	}
	return 0;
}

int func_995(int iParam0)//Position - 0x12E748
{
	switch (iParam0)
	{
		case joaat("calico"):
		case joaat("comet6"):
		case joaat("cypher"):
		case joaat("dominator7"):
		case joaat("jester4"):
		case joaat("remus"):
		case joaat("vectre"):
		case joaat("zr350"):
		case joaat("warrener2"):
		case joaat("rt3000"):
		case joaat("futo2"):
		case joaat("tailgater2"):
		case joaat("sultan3"):
		case joaat("dominator8"):
		case joaat("euros"):
		case joaat("growler"):
		case joaat("previon"):
			return 1;
			break;
	}
	return 0;
}

int func_996(int iParam0)//Position - 0x12E910
{
	switch (iParam0)
	{
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		case 11:
			return 10;
		case 12:
			return 10;
		case 13:
			return 11;
		case 14:
			return 12;
		case 15:
			return 13;
		case 16:
			return 14;
		case 17:
			return 15;
		case 18:
			return 15;
		case 19:
			return 16;
		case 20:
			return 17;
		case 21:
			return 18;
		case 22:
			return 19;
		case 23:
			return 20;
		case 24:
			return 20;
		case 25:
			return 21;
		case 26:
			return 22;
		case 27:
			return 23;
		case 28:
			return 24;
		case 29:
			return 25;
		case 30:
			return 25;
		case 31:
			return 26;
		case 32:
			return 27;
		case 33:
			return 28;
		case 34:
			return 29;
		case 35:
			return 30;
		case 36:
			return 30;
		case 37:
			return 31;
		case 38:
			return 32;
		case 39:
			return 33;
		case 40:
			return 34;
		case 41:
			return 35;
		case 42:
			return 36;
		case 43:
			return 37;
		case 44:
			return 38;
		case 45:
			return 39;
		case 46:
			return 40;
		case 47:
			return 41;
		case 48:
			return 42;
		case 49:
			return 43;
		case 50:
			return 44;
		case 51:
			return 45;
		case 52:
			return 46;
		case 53:
			return 47;
		case 54:
			return 48;
		case 55:
			return 49;
		case 56:
			return 50;
		case 57:
			return 50;
		case 58:
			return 51;
		case 59:
			return 52;
		case 60:
			return 53;
		case 61:
			return 54;
		case 62:
			return 55;
		case 63:
			return 55;
		case 64:
			return 56;
		case 65:
			return 57;
		case 66:
			return 58;
		case 67:
			return 59;
		case 68:
			return 60;
		case 69:
			return 60;
		case 70:
			return 61;
		case 71:
			return 62;
		case 72:
			return 63;
		case 73:
			return 64;
		case 74:
			return 65;
		case 75:
			return 65;
		case 76:
			return 66;
		case 77:
			return 67;
		case 78:
			return 68;
		case 79:
			return 69;
		case 80:
			return 70;
		case 81:
			return 70;
		case 82:
			return 71;
		case 83:
			return 72;
		case 84:
			return 73;
		case 85:
			return 74;
		case 86:
			return 75;
		case 87:
			return 75;
		case 88:
			return 76;
		case 89:
			return 77;
		case 90:
			return 78;
		case 91:
			return 79;
		case 92:
			return 80;
		case 93:
			return 80;
		case 94:
			return 81;
		case 95:
			return 82;
		case 96:
			return 83;
		case 97:
			return 84;
		case 98:
			return 85;
		case 99:
			return 85;
		case 100:
			return 86;
		case 101:
			return 87;
		case 102:
			return 88;
		case 103:
			return 89;
		case 104:
			return 90;
		case 105:
			return 91;
		case 106:
			return 92;
		case 107:
			return 93;
		case 108:
			return 94;
		case 109:
			return 95;
		case 110:
			return 96;
		case 111:
			return 97;
		case 112:
			return 98;
		case 113:
			return 99;
		case 114:
			return 100;
		default:
	}
	switch (iParam0)
	{
		case 115:
			return 101;
		case 116:
			return 102;
		case 117:
			return 103;
		case 118:
			return 104;
		case 119:
			return 105;
		case 120:
			return 106;
		case 121:
			return 107;
		case 122:
			return 108;
		case 123:
			return 109;
		case 124:
			return 110;
		case 125:
			return 111;
		case 126:
			return 112;
		case 127:
			return 113;
		case 128:
			return 114;
		case 129:
			return 115;
		case 130:
			return 116;
		case 131:
			return 117;
		case 132:
			return 118;
		case 133:
			return 119;
		case 134:
			return 120;
		case 135:
			return 121;
		case 136:
			return 122;
		case 137:
			return 123;
		case 138:
			return 124;
		case 139:
			return 125;
		case 140:
			return 126;
		case 141:
			return 127;
		case 142:
			return 128;
		case 143:
			return 129;
		case 144:
			return 130;
		case 145:
			return 131;
		case 146:
			return 132;
		case 147:
			return 133;
		case 148:
			return 134;
		case 149:
			return 135;
		case 150:
			return 136;
		case 151:
			return 137;
		case 152:
			return 138;
		case 153:
			return 139;
		case 154:
			return 140;
		case 155:
			return 141;
		case 156:
			return 142;
		case 157:
			return 143;
		case 158:
			return 144;
		case 159:
			return 145;
		case 160:
			return 146;
		case 161:
			return 147;
		case 162:
			return 148;
		case 163:
			return 149;
		case 164:
			return 150;
		case 165:
			return 151;
		case 166:
			return 152;
		case 167:
			return 153;
		case 168:
			return 154;
		case 169:
			return 155;
		case 170:
			return 156;
		case 171:
			return 157;
		case 172:
			return 158;
		case 173:
			return 159;
		case 174:
			return 160;
		case 175:
			return 161;
		case 176:
			return 162;
		case 177:
			return 163;
		case 178:
			return 164;
		case 179:
			return 165;
		case 180:
			return 166;
		case 181:
			return 167;
		case 182:
			return 168;
		case 183:
			return 169;
		case 184:
			return 170;
		case 185:
			return 171;
		case 186:
			return 172;
		case 187:
			return 173;
		case 188:
			return 174;
		case 189:
			return 175;
		case 190:
			return 176;
		case 191:
			return 177;
		case 192:
			return 178;
		case 193:
			return 179;
		case 194:
			return 180;
		case 195:
			return 181;
		case 196:
			return 182;
		case 197:
			return 183;
		case 198:
			return 184;
		case 199:
			return 185;
		case 200:
			return 186;
		case 201:
			return 187;
		case 202:
			return 188;
		case 203:
			return 189;
		case 204:
			return 190;
		case 205:
			return 191;
		case 206:
			return 192;
		case 207:
			return 193;
		case 208:
			return 194;
		case 209:
			return 195;
		case 210:
			return 196;
		case 211:
			return 197;
		case 212:
			return 198;
		case 213:
			return 199;
		case 214:
			return 200;
		default:
	}
	switch (iParam0)
	{
		case 215:
			return 201;
		case 216:
			return 202;
		case 217:
			return 203;
		case 218:
			return 204;
		case 219:
			return 205;
		case 220:
			return 206;
		case 221:
			return 207;
		case 222:
			return 208;
		case 223:
			return 209;
		case 224:
			return 210;
		case 225:
			return 211;
		case 226:
			return 212;
		case 227:
			return 213;
		case 228:
			return 214;
		case 229:
			return 215;
		case 230:
			return 216;
		case 231:
			return 217;
		case 232:
			return 218;
		case 233:
			return 219;
		case 234:
			return 220;
		case 235:
			return 221;
		case 236:
			return 222;
		case 237:
			return 223;
		case 238:
			return 224;
		case 239:
			return 225;
		case 240:
			return 226;
		case 241:
			return 227;
		case 242:
			return 228;
		case 243:
			return 229;
		case 244:
			return 230;
		case 245:
			return 231;
		case 246:
			return 232;
		case 247:
			return 233;
		case 248:
			return 234;
		case 249:
			return 235;
		case 250:
			return 236;
		case 251:
			return 237;
		case 252:
			return 238;
		case 253:
			return 239;
		case 254:
			return 240;
		case 255:
			return 241;
		case 256:
			return 242;
		case 257:
			return 243;
		case 258:
			return 244;
		case 259:
			return 245;
		case 260:
			return 246;
		case 261:
			return 247;
		case 262:
			return 248;
		case 263:
			return 249;
		case 264:
			return 250;
		case 265:
			return 255;
		case 266:
			return 260;
		case 267:
			return 265;
		case 268:
			return 270;
		case 269:
			return 275;
		case 270:
			return 280;
		case 271:
			return 285;
		case 272:
			return 290;
		case 273:
			return 295;
		case 274:
			return 300;
		default:
	}
	switch (iParam0)
	{
		case 275:
			return 305;
		case 276:
			return 310;
		case 277:
			return 315;
		case 278:
			return 320;
		case 279:
			return 325;
		case 280:
			return 330;
		case 281:
			return 335;
		case 282:
			return 340;
		case 283:
			return 345;
		case 284:
			return 350;
		case 285:
			return 355;
		case 286:
			return 360;
		case 287:
			return 365;
		case 288:
			return 370;
		case 289:
			return 375;
		case 290:
			return 380;
		case 291:
			return 385;
		case 292:
			return 390;
		case 293:
			return 395;
		case 294:
			return 400;
		case 295:
			return 405;
		case 296:
			return 410;
		case 297:
			return 415;
		case 298:
			return 420;
		case 299:
			return 425;
		case 300:
			return 430;
		case 301:
			return 435;
		case 302:
			return 440;
		case 303:
			return 445;
		case 304:
			return 450;
		case 305:
			return 455;
		case 306:
			return 460;
		case 307:
			return 465;
		case 308:
			return 470;
		case 309:
			return 475;
		case 310:
			return 480;
		case 311:
			return 485;
		case 312:
			return 490;
		case 313:
			return 495;
		case 314:
			return 500;
		default:
	}
	switch (iParam0)
	{
		case 315:
			return 505;
		case 316:
			return 510;
		case 317:
			return 515;
		case 318:
			return 520;
		case 319:
			return 525;
		case 320:
			return 530;
		case 321:
			return 535;
		case 322:
			return 540;
		case 323:
			return 545;
		case 324:
			return 550;
		case 325:
			return 555;
		case 326:
			return 560;
		case 327:
			return 565;
		case 328:
			return 570;
		case 329:
			return 575;
		case 330:
			return 580;
		case 331:
			return 585;
		case 332:
			return 590;
		case 333:
			return 595;
		case 334:
			return 600;
		case 335:
			return 605;
		case 336:
			return 610;
		case 337:
			return 615;
		case 338:
			return 620;
		case 339:
			return 625;
		case 340:
			return 630;
		case 341:
			return 635;
		case 342:
			return 640;
		case 343:
			return 645;
		case 344:
			return 650;
		case 345:
			return 655;
		case 346:
			return 660;
		case 347:
			return 665;
		case 348:
			return 670;
		case 349:
			return 675;
		case 350:
			return 680;
		case 351:
			return 685;
		case 352:
			return 690;
		case 353:
			return 695;
		case 354:
			return 700;
		case 355:
			return 705;
		case 356:
			return 710;
		case 357:
			return 715;
		case 358:
			return 720;
		case 359:
			return 725;
		case 360:
			return 730;
		case 361:
			return 735;
		case 362:
			return 740;
		case 363:
			return 745;
		case 364:
			return 750;
		case 365:
			return 755;
		case 366:
			return 760;
		case 367:
			return 765;
		case 368:
			return 770;
		case 369:
			return 775;
		case 370:
			return 780;
		case 371:
			return 785;
		case 372:
			return 790;
		case 373:
			return 795;
		case 374:
			return 800;
		case 375:
			return 805;
		case 376:
			return 810;
		case 377:
			return 815;
		case 378:
			return 820;
		case 379:
			return 825;
		case 380:
			return 830;
		case 381:
			return 835;
		case 382:
			return 840;
		case 383:
			return 845;
		case 384:
			return 850;
		case 385:
			return 855;
		case 386:
			return 860;
		case 387:
			return 865;
		case 388:
			return 870;
		case 389:
			return 875;
		case 390:
			return 880;
		case 391:
			return 885;
		case 392:
			return 890;
		case 393:
			return 895;
		case 394:
			return 900;
		case 395:
			return 905;
		case 396:
			return 910;
		case 397:
			return 915;
		case 398:
			return 920;
		case 399:
			return 925;
		case 400:
			return 930;
		case 401:
			return 935;
		case 402:
			return 940;
		case 403:
			return 945;
		case 404:
			return 950;
		case 405:
			return 955;
		case 406:
			return 960;
		case 407:
			return 965;
		case 408:
			return 970;
		case 409:
			return 975;
		case 410:
			return 980;
		case 411:
			return 985;
		case 412:
			return 990;
		case 413:
			return 995;
		case 414:
			return 1000;
		case 415:
			return 1000;
		default:
	}
	return -1;
}

int func_997(int iParam0, int iParam1)//Position - 0x12FB9F
{
	switch (iParam0)
	{
		case joaat("tailgater2"):
			switch (iParam1)
			{
				case 11:
					return 89;
				case 12:
					return 131;
				case 13:
					return 156;
				case 14:
					return 181;
				case 15:
					return 206;
				default:
			}
			break;
		case joaat("euros"):
			switch (iParam1)
			{
				case 11:
					return 14;
				case 12:
					return 95;
				case 13:
					return 133;
				case 14:
					return 158;
				case 15:
					return 183;
				default:
			}
			break;
		case joaat("rt3000"):
			switch (iParam1)
			{
				case 11:
					return 32;
				case 12:
					return 106;
				case 13:
					return 138;
				case 14:
					return 163;
				case 15:
					return 188;
				default:
			}
			break;
		case joaat("zr350"):
			switch (iParam1)
			{
				case 11:
					return 48;
				case 12:
					return 116;
				case 13:
					return 143;
				case 14:
					return 168;
				case 15:
					return 193;
				default:
			}
			break;
		case joaat("warrener2"):
			switch (iParam1)
			{
				case 11:
					return 53;
				case 12:
					return 121;
				case 13:
					return 146;
				case 14:
					return 171;
				case 15:
					return 196;
				default:
			}
			break;
		case joaat("calico"):
			switch (iParam1)
			{
				case 11:
					return 65;
				case 12:
					return 123;
				case 13:
					return 148;
				case 14:
					return 173;
				case 15:
					return 198;
				default:
			}
			break;
		case joaat("remus"):
			switch (iParam1)
			{
				case 11:
					return 71;
				case 12:
					return 126;
				case 13:
					return 151;
				case 14:
					return 176;
				case 15:
					return 201;
				default:
			}
			break;
		case joaat("jester4"):
			switch (iParam1)
			{
				case 11:
					return 38;
				case 12:
					return 111;
				case 13:
					return 141;
				case 14:
					return 166;
				case 15:
					return 191;
				default:
			}
			break;
		case joaat("futo2"):
			switch (iParam1)
			{
				case 11:
					return 20;
				case 12:
					return 101;
				case 13:
					return 136;
				case 14:
					return 161;
				case 15:
					return 186;
				default:
			}
			break;
		case joaat("dominator8"):
			switch (iParam1)
			{
				case 11:
					return 83;
				case 12:
					return 128;
				case 13:
					return 153;
				case 14:
					return 178;
				case 15:
					return 203;
				default:
			}
			break;
	}
	return 0;
}

int func_998(int iParam0)//Position - 0x12FEEE
{
	switch (iParam0)
	{
		case 21:
			return 2;
			break;
		case 22:
			return 4;
			break;
		case 23:
			return 6;
			break;
		case 24:
			return 8;
			break;
		case 25:
			return 10;
			break;
		case 26:
			return 12;
			break;
		case 27:
			return 14;
			break;
		case 28:
			return 16;
			break;
		case 29:
			return 18;
			break;
		case 30:
			return 20;
			break;
	}
	return -1;
}

int func_999(int iParam0)//Position - 0x13002A
{
	switch (iParam0)
	{
		case 1:
			return 0;
			break;
		case 2:
			return 12;
			break;
		case 3:
			return 26;
			break;
		case 4:
			return 40;
			break;
		case 5:
			return 0;
			break;
		case 6:
			return 18;
			break;
		case 7:
			return 36;
			break;
		case 8:
			return 46;
			break;
		case 9:
			return 0;
			break;
		case 10:
			return 14;
			break;
		case 11:
			return 24;
			break;
		case 12:
			return 32;
			break;
		case 13:
			return 42;
			break;
		case 14:
			return 0;
			break;
		case 15:
			return 22;
			break;
		case 16:
			return 28;
			break;
		case 17:
			return 34;
			break;
		case 18:
			return 50;
			break;
		case 19:
			return 0;
			break;
		case 20:
			return 16;
			break;
		case 21:
			return 44;
			break;
		case 22:
			return 0;
			break;
		case 23:
			return 20;
			break;
		case 24:
			return 38;
			break;
		case 25:
			return 48;
			break;
		case 26:
			return 0;
			break;
		case 27:
			return 30;
			break;
		case 28:
			return 0;
			break;
		case 29:
			return 10;
			break;
		case 30:
			return 25;
			break;
		case 31:
			return 0;
			break;
		case 32:
			return 0;
			break;
		case 33:
			return 0;
			break;
		case 34:
			return 1;
			break;
		case 35:
			return 1;
			break;
		case 36:
			return 1;
			break;
		case 37:
			return 7;
			break;
		case 38:
			return 9;
			break;
		case 39:
			return 11;
			break;
		case 40:
			return 13;
			break;
		case 41:
			return 15;
			break;
		case 42:
			return 17;
			break;
		case 43:
			return 19;
			break;
		case 44:
			return 21;
			break;
		case 45:
			return 23;
			break;
		case 46:
			return 25;
			break;
		case 47:
			return 7;
			break;
		case 48:
			return 9;
			break;
		case 49:
			return 13;
			break;
		case 50:
			return 17;
			break;
		case 51:
			return 21;
			break;
		case 52:
			return 25;
			break;
		case 53:
			return 5;
			break;
		case 54:
			return 10;
			break;
		case 55:
			return 25;
			break;
		case 56:
			return 50;
			break;
		case 57:
			return 5;
			break;
		case 58:
			return 10;
			break;
		case 59:
			return 25;
			break;
		case 60:
			return 5;
			break;
		case 61:
			return 10;
			break;
		case 62:
			return 25;
			break;
		case 63:
			return 50;
			break;
		case 64:
			return 25;
			break;
		case 65:
			return 50;
			break;
		case 66:
			return 100;
			break;
		case 67:
			return 5;
			break;
		case 68:
			return 10;
			break;
		case 69:
			return 25;
			break;
		case 70:
			return 50;
			break;
	}
	return 0;
}

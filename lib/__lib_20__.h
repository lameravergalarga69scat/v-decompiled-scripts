int func_0(char[16] cParam0)//Position - 0xA8CC5
{
	int iVar0;
	int iVar1;
	if (!Global_262145.f_20189 /* Tunable: -1205783322 */)
	{
		return 0;
	}
	iVar0 = 0;
	iVar1 = 0;
	while (iVar1 < 363)
	{
		if (Global_1585857[iVar1 /*142*/].f_66 != 0)
		{
			if (__LIB_10__.func_63(cParam0, Global_1585857[iVar1 /*142*/].f_1))
			{
				iVar0++;
			}
		}
		iVar1++;
	}
	return iVar0;
}

int func_1()//Position - 0xA8D4D
{
	int iVar0;
	var uVar1[4];
	int iVar2;
	if (Global_2815059.f_5134)
	{
		return Global_2815059.f_5135;
	}
	iVar0 = __LIB_0__.func_714(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"));
	if (iVar0 < Global_262145.f_10701 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL2 */)
	{
		return 0;
	}
	uVar1[0] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASONEXPLOITLEVEL"));
	uVar1[1] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON2EXPLOITLEVEL"));
	uVar1[2] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON3EXPLOITLEVEL"));
	uVar1[3] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON4EXPLOITLEVEL"));
	iVar2 = 0;
	while (iVar2 < (Global_262145.f_10697 /* Tunable: REPEATOFFENDERNUMSEASONS2 */ - 1))
	{
		if (uVar1[iVar2] < Global_262145.f_10701 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL2 */)
		{
			return 0;
		}
		iVar2++;
	}
	return 1;
}

int func_2()//Position - 0xA8DF0
{
	int iVar0;
	var uVar1[4];
	int iVar2;
	if (Global_2815059.f_5132)
	{
		return Global_2815059.f_5133;
	}
	iVar0 = __LIB_0__.func_714(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"));
	if (iVar0 < Global_262145.f_10700 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL1 */)
	{
		return 0;
	}
	uVar1[0] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASONEXPLOITLEVEL"));
	uVar1[1] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON2EXPLOITLEVEL"));
	uVar1[2] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON3EXPLOITLEVEL"));
	uVar1[3] = __LIB_0__.func_714(joaat("MPPLY_PREVSEASON4EXPLOITLEVEL"));
	iVar2 = 0;
	while (iVar2 < (Global_262145.f_10696 /* Tunable: REPEATOFFENDERNUMSEASONS1 */ - 1))
	{
		if (uVar1[iVar2] < Global_262145.f_10700 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL1 */)
		{
			return 0;
		}
		iVar2++;
	}
	return 1;
}

void func_3(var uParam0)//Position - 0xB19EF
{
	if (Global_2815059.f_5156)
	{
		*uParam0 = { Global_2815059.f_5157 };
	}
	__LIB_10__.func_64(joaat("MPPLY_REPEAT_OFFENDER_2_TIME"), *uParam0);
}

void func_4(var uParam0)//Position - 0xB1A1B
{
	if (Global_2815059.f_5148)
	{
		*uParam0 = { Global_2815059.f_5149 };
	}
	__LIB_10__.func_64(joaat("MPPLY_REPEAT_OFFENDER_1_TIME"), *uParam0);
}

struct<7> func_5(int iParam0, int iParam1)//Position - 0xB1AEF
{
	int iVar0;
	struct<7> Var1;
	iVar0 = Global_2868546[iParam0 /*3*/][__LIB_1__.func_443(iParam1)];
	if (STATS::STAT_GET_DATE(iVar0, &Var1, 7, -1))
	{
		return Var1;
	}
	return Var1;
}

void func_6(int iParam0)//Position - 0xB1DB9
{
	int iVar0;
	int iVar1;
	if (Global_2815059.f_5136)
	{
		iParam0 = Global_2815059.f_5137;
	}
	iVar0 = __LIB_0__.func_714(joaat("MPPLY_CHAR_EXPLOIT_LEVEL"));
	__LIB_0__.func_779(joaat("MPPLY_CHAR_EXPLOIT_LEVEL"), iParam0);
	iVar1 = __LIB_0__.func_714(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"));
	if (iParam0 > iVar1 && iVar0 < iParam0)
	{
		__LIB_0__.func_779(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"), iParam0);
	}
}

void func_7(int iParam0)//Position - 0xB1E3E
{
	int iVar0;
	if (Global_2815059.f_5138)
	{
		iParam0 = Global_2815059.f_5139;
	}
	iVar0 = __LIB_1__.func_443(-1);
	__LIB_1__.func_597(2443, iParam0, -1, 1, 0);
	if (iVar0 == 0)
	{
		iParam0 += 1000;
	}
	__LIB_0__.func_779(joaat("MPPLY_THRESHOLD_RESET"), iParam0 + 1);
}

int func_8(int iParam0)//Position - 0xB1F00
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = (*iParam0 - 2000);
	iVar1 = 0;
	if (iVar0 > 0)
	{
		iVar2 = 0;
		while (iVar2 < iVar0)
		{
			if (__LIB_10__.func_66(iVar2))
			{
				iVar1 = (iVar1 + 527040);
			}
			else
			{
				iVar1 = (iVar1 + 525600);
			}
			iVar2++;
		}
	}
	if (iParam0->f_1 > 0)
	{
		iVar2 = 0;
		while (iVar2 < (iParam0->f_1 - 1))
		{
			iVar1 = (iVar1 + __LIB_0__.func_139(iVar2, iVar0) * 60 * 24);
			iVar2++;
		}
	}
	if (iParam0->f_2 > 0)
	{
		iVar1 = (iVar1 + (iParam0->f_2 - 1) * 60 * 24);
	}
	iVar1 = (iVar1 + iParam0->f_3 * 60);
	iVar1 = (iVar1 + iParam0->f_4);
	return iVar1;
}

void func_9(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, int iParam8, bool bParam9)//Position - 0xB20A4
{
	int iVar0;
	if (__LIB_0__.func_354())
	{
		iVar0 = Global_2868546[iParam0 /*3*/][__LIB_1__.func_443(iParam8)];
		if (iVar0 != 0)
		{
			STATS::STAT_SET_DATE(iVar0, &uParam1, 7, bParam9);
		}
	}
}

int func_10(int iParam0)//Position - 0xB234A
{
	switch (iParam0)
	{
		case 0:
			return __LIB_0__.func_714(joaat("MPPLY_SOLDZOLAPUMA0"));
		case 1:
			return __LIB_0__.func_714(joaat("MPPLY_SOLDZOLAPUMA1"));
		case 2:
			return __LIB_0__.func_714(joaat("MPPLY_SOLDZOLAPUMA2"));
		case 3:
			return __LIB_0__.func_714(joaat("MPPLY_SOLDZOLAPUMA3"));
		case 4:
			return __LIB_0__.func_714(joaat("MPPLY_SOLDZOLAPUMA4"));
		default:
	}
	return 0;
}

int func_11(char* sParam0, char[4] cParam1, char[4] cParam2, char[4] cParam3)//Position - 0xB2639
{
	int iVar0;
	int iVar1;
	__LIB_10__.func_73(&sParam0);
	iVar1 = MISC::GET_HASH_KEY(&sParam0);
	iVar0 = 0;
	while (iVar0 < 10)
	{
		if (Global_1585153[iVar0] == iVar1)
		{
			return Global_1585164[iVar0];
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_1585175)
	{
		if (Global_1585175[iVar0] == iVar1)
		{
			return Global_1585196[iVar0];
		}
		iVar0++;
	}
	return 0;
}

int func_12(int iParam0)//Position - 0xB2821
{
	switch (iParam0)
	{
		case 0:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD0"));
		case 1:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD1"));
		case 2:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD2"));
		case 3:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD3"));
		case 4:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD4"));
		case 5:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD5"));
		case 6:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD6"));
		case 7:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD7"));
		case 8:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD8"));
		case 9:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERSOLD9"));
		default:
	}
	return 0;
}

int func_13(int iParam0)//Position - 0xB2AF1
{
	switch (iParam0)
	{
		case 0:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA0"));
		case 1:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA1"));
		case 2:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA2"));
		case 3:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA3"));
		case 4:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA4"));
		case 5:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA5"));
		case 6:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA6"));
		case 7:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA7"));
		case 8:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA8"));
		case 9:
			return __LIB_0__.func_714(joaat("MPPLY_KNOWNDOZERPUMA9"));
		default:
	}
	return 0;
}

int func_14(char* sParam0, char[4] cParam1, char[4] cParam2, char[4] cParam3)//Position - 0xB2E76
{
	char* sVar0;
	__LIB_10__.func_73(&sParam0);
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 0, 1);
	if (!__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 1, 2);
	if (!__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 2, 3);
	if (__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 3, 4);
	if (__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 4, 5);
	if (__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 5, 6);
	if (!__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 6, 7);
	if (!__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	sVar0 = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&sParam0, 7, 8);
	if (!__LIB_10__.func_76(sVar0))
	{
		return 0;
	}
	return 1;
}

void func_15()//Position - 0xB3039
{
	int iVar0;
	iVar0 = __LIB_0__.func_716(20);
	Global_2676732[iVar0 /*83*/] = 20;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

int func_16(int iParam0)//Position - 0xBDC49
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	if (((((((Local_124.f_443 > 2 && Local_124.f_443 != 3) && Local_124.f_443 != 13) && Local_124.f_443 != 21) && Local_124.f_443 != 22) && Local_124.f_443 != 31) && Local_124.f_443 != 38) && Local_124.f_443 != 56)
	{
		iVar0 = 0;
		iVar1 = 0;
		while (__LIB_10__.func_79(iVar1, &iVar2, &iVar3, &bVar4, &iVar5))
		{
			if ((bVar4 && Local_124.f_443 == iVar2) || (!bVar4 && Local_124.f_444 == iVar3))
			{
				if (iVar5 == -1 || iVar5 == Local_124.f_116.f_5)
				{
					if (((iVar0 + iParam0) / 32) < Global_100493.f_1468)
					{
						return BitTest(Global_100493.f_1468[((iVar0 + iParam0) / 32)], ((iVar0 + iParam0) % 32));
					}
					else
					{
						return 0;
					}
				}
			}
			iVar0 = (iVar0 + __LIB_10__.func_78(iVar2, iVar3, iVar5));
			iVar1++;
		}
	}
	else if (Local_124.f_443 == 56)
	{
		iVar6 = 0;
		if (iParam0 > 0)
		{
			switch (Local_124.f_603)
			{
				case 0:
					iVar6 = 0;
					break;
				case 1:
					iVar6 = 50;
					break;
				case 2:
					iVar6 = 90;
					break;
				case 3:
					iVar6 = 120;
					break;
				case 4:
					iVar6 = 160;
					break;
				case 5:
					iVar6 = 180;
					break;
				case 6:
					if (Local_124.f_604 == 0)
					{
						iVar6 = 230;
					}
					else if (Local_124.f_604 == 1)
					{
						iVar6 = 310;
					}
					break;
				case 7:
					iVar6 = 390;
					break;
				case 8:
					iVar6 = 430;
					break;
				case 9:
					iVar6 = 465;
					break;
				case 10:
					iVar6 = 485;
					break;
				case 11:
					iVar6 = 510;
					break;
				case 12:
					iVar6 = 540;
					break;
			}
			iVar6++;
		}
		return BitTest(Global_100493.f_1529[((iVar6 + iParam0) / 32)], ((iVar6 + iParam0) % 32));
	}
	return 0;
}

void func_17(bool bParam0)//Position - 0xBE5CD
{
	bool bVar0;
	char cVar1[64];
	if (bParam0 == 8)
	{
		__LIB_0__.func_521(129, 0, -1);
		return;
	}
	if (bParam0 == 9)
	{
		__LIB_0__.func_521(135, 0, -1);
		return;
	}
	if (bParam0 == 10)
	{
		__LIB_0__.func_521(136, 0, -1);
		return;
	}
	if (bParam0 == 11)
	{
		__LIB_0__.func_521(137, 0, -1);
		return;
	}
	if (bParam0 == 12)
	{
		__LIB_1__.func_597(8272, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 13)
	{
		__LIB_1__.func_597(8273, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 14)
	{
		__LIB_1__.func_597(8274, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 15)
	{
		__LIB_1__.func_597(8275, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 16)
	{
		__LIB_1__.func_597(8276, 0, -1, 1, 0);
		return;
	}
	if (bParam0 == 17)
	{
		__LIB_1__.func_597(8277, 0, -1, 1, 0);
		return;
	}
	bVar0 = false;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (BitTest(Global_113386.f_20564.f_471, bParam0))
		{
			bVar0 = true;
			MISC::CLEAR_BIT(&(Global_113386.f_20564.f_471), bParam0);
		}
	}
	else if (BitTest(Global_113386.f_20564.f_471, bParam0) || BitTest(Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_10, bParam0))
	{
		bVar0 = true;
		MISC::CLEAR_BIT(&(Global_113386.f_20564.f_471), bParam0);
		MISC::CLEAR_BIT(&(Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_10), bParam0);
	}
	if (bVar0)
	{
		StringCopy(&cVar1, "CHAR_LIFEINVADER", 64);
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("COUP_RED" /* GXT: You have redeemed your promotion for ~a~ */);
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(__LIB_0__.func_179(bParam0));
		HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(&cVar1, &cVar1, true, 0, "", 0);
	}
}

int func_18(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0xBE802
{
	switch (iParam1)
	{
		case 45:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("bruiser2"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(176))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(177))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 63:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("issi4"):
				case joaat("issi6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(288))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(289))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(290))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(291))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(292))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(293))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(294))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(295))
							{
								return 0;
							}
							break;
						case 9:
							if (!__LIB_10__.func_81(296))
							{
								return 0;
							}
							break;
						case 10:
							if (!__LIB_10__.func_81(297))
							{
								return 0;
							}
							break;
						case 11:
							if (!__LIB_10__.func_81(298))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 39:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("scarab"):
				case joaat("scarab3"):
					switch (iParam2)
					{
						case 5:
							if (!__LIB_10__.func_81(225))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(226))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 18:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("scarab2"):
					switch (iParam2)
					{
						case 7:
							if (!__LIB_10__.func_81(211))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(212))
							{
								return 0;
							}
							break;
						case 9:
							if (!__LIB_10__.func_81(213))
							{
								return 0;
							}
							break;
						case 10:
							if (!__LIB_10__.func_81(227))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("scarab"):
				case joaat("scarab3"):
					switch (iParam2)
					{
						case 5:
							if (!__LIB_10__.func_81(211))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(212))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(213))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(215))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 40:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("zr3802"):
					if (iParam2 == 1)
					{
						if (!__LIB_10__.func_81(283))
						{
							return 0;
						}
					}
					break;
				case joaat("brutus3"):
				case joaat("brutus"):
					if (iParam2 == 3)
					{
						if (!__LIB_10__.func_81(202))
						{
							return 0;
						}
					}
					else if (iParam2 == 4)
					{
						if (!__LIB_10__.func_81(203))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab"):
				case joaat("scarab3"):
					switch (iParam2)
					{
						case 7:
						case 6:
							if (!__LIB_10__.func_81(214))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("scarab2"):
					switch (iParam2)
					{
						case 7:
							if (!__LIB_10__.func_81(214))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 44:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("brutus3"):
				case joaat("brutus"):
					if (iParam2 == 2)
					{
						if (!__LIB_10__.func_81(195))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab"):
				case joaat("scarab3"):
					if (iParam2 == 8 || iParam2 == 9)
					{
						if (!__LIB_10__.func_81(223))
						{
							return 0;
						}
					}
					else if (iParam2 == 10 || iParam2 == 11)
					{
						if (!__LIB_10__.func_81(224))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab2"):
					switch (iParam2)
					{
						case 11:
							if (!__LIB_10__.func_81(228))
							{
								return 0;
							}
							break;
						case 12:
							if (!__LIB_10__.func_81(229))
							{
								return 0;
							}
							break;
						case 13:
							if (!__LIB_10__.func_81(230))
							{
								return 0;
							}
							break;
						case 14:
							if (!__LIB_10__.func_81(231))
							{
								return 0;
							}
							break;
						case 15:
							if (!__LIB_10__.func_81(232))
							{
								return 0;
							}
							break;
						case 16:
							if (!__LIB_10__.func_81(233))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 95:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("brutus3"):
				case joaat("brutus"):
					if (iParam2 == 2)
					{
						if (!__LIB_10__.func_81(200))
						{
							return 0;
						}
					}
					break;
			}
			break;
		case 8:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					if (iParam3 == 1)
					{
						if (iParam2 == 3)
						{
							if (!__LIB_10__.func_81(129))
							{
								return 0;
							}
						}
					}
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					if (iParam3 == 2)
					{
						if (iParam2 == 23)
						{
							if (!__LIB_10__.func_81(142))
							{
								return 0;
							}
						}
					}
					break;
				case joaat("bruiser2"):
					if (iParam3 == 1)
					{
						if (iParam2 == 1)
						{
							if (!__LIB_10__.func_81(175))
							{
								return 0;
							}
						}
					}
					else if (iParam3 == 2)
					{
						if (iParam2 == 21)
						{
							if (!__LIB_10__.func_81(175))
							{
								return 0;
							}
						}
					}
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					if (iParam3 == 2)
					{
						if (iParam2 == 22)
						{
							if (!__LIB_10__.func_81(184))
							{
								return 0;
							}
						}
						else if (iParam2 == 23)
						{
							if (!__LIB_10__.func_81(185))
							{
								return 0;
							}
						}
					}
					break;
				case joaat("brutus"):
				case joaat("brutus3"):
					if (iParam3 == 2)
					{
						if (iParam2 == 23)
						{
							if (!__LIB_10__.func_81(197))
							{
								return 0;
							}
						}
					}
					else if (iParam3 == 1)
					{
						if (iParam2 == 3)
						{
							if (!__LIB_10__.func_81(196))
							{
								return 0;
							}
						}
					}
					break;
			}
			break;
		case 23:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					switch (iParam2)
					{
						case 4:
							if (!__LIB_10__.func_81(287))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("zr3802"):
					switch (iParam2)
					{
						case 3:
							if (!__LIB_10__.func_81(282))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("imperator"):
				case joaat("imperator3"):
					switch (iParam2)
					{
						case 2:
							if (!__LIB_10__.func_81(272))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(273))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					if (iParam2 == 3)
					{
						if (!__LIB_10__.func_81(163))
						{
							return 0;
						}
					}
					break;
				case joaat("brutus"):
				case joaat("brutus3"):
					if (iParam2 == 3)
					{
						if (!__LIB_10__.func_81(201))
						{
							return 0;
						}
					}
					break;
			}
			break;
		case 26:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("zr3803"):
					if (iParam2 == 4)
					{
						if (!__LIB_10__.func_81(279))
						{
							return 0;
						}
					}
					break;
				case joaat("zr380"):
					if (iParam2 == 5)
					{
						if (!__LIB_10__.func_81(279))
						{
							return 0;
						}
					}
					break;
				case joaat("dominator4"):
				case joaat("dominator6"):
					if (iParam2 == 1)
					{
						if (!__LIB_10__.func_81(247))
						{
							return 0;
						}
					}
					break;
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					if (iParam2 == 3)
					{
						if (!__LIB_10__.func_81(130))
						{
							return 0;
						}
					}
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					if (iParam2 == 3)
					{
						if (!__LIB_10__.func_81(143))
						{
							return 0;
						}
					}
					else if (iParam2 == 4)
					{
						if (!__LIB_10__.func_81(144))
						{
							return 0;
						}
					}
					else if (iParam2 == 5)
					{
						if (!__LIB_10__.func_81(145))
						{
							return 0;
						}
					}
					break;
				case joaat("slamvan4"):
				case joaat("slamvan6"):
					switch (iParam2)
					{
						case 4:
							if (!__LIB_10__.func_81(187))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(188))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 12:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("imperator"):
				case joaat("imperator3"):
				case joaat("imperator2"):
					switch (iParam2)
					{
						case 4:
							if (!__LIB_10__.func_81(262))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(270))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(271))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("zr380"):
				case joaat("zr3803"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(277))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(278))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("zr3802"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(277))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(278))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(280))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					switch (iParam2)
					{
						case 3:
							if (!__LIB_10__.func_81(237))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(238))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(239))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(131))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(132))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					switch (iParam2)
					{
						case 2:
							if (!__LIB_10__.func_81(164))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(165))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(166))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("brutus"):
				case joaat("brutus3"):
					switch (iParam2)
					{
						case 4:
							if (!__LIB_10__.func_81(198))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(199))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 46:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("zr3802"):
					switch (iParam2)
					{
						case 7:
							if (!__LIB_10__.func_81(281))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
					switch (iParam2)
					{
						case 2:
							if (!__LIB_10__.func_81(173))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(174))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser2"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(176))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(177))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(178))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(179))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(180))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 72:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("issi4"):
				case joaat("issi6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(299))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(300))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(301))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(302))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(303))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(304))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(305))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(306))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("imperator"):
				case joaat("imperator3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(263))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(264))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(265))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(266))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(267))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(268))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(269))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("impaler2"):
				case joaat("impaler4"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(251))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(252))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(253))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(254))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(255))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(256))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(257))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(258))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("dominator4"):
				case joaat("dominator6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(240))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(241))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(242))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(243))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(244))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(245))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(246))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("scarab"):
				case joaat("scarab3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(216))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(217))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(218))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(219))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(220))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(221))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(222))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("brutus"):
				case joaat("brutus3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(204))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(205))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("slamvan4"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(186))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(189))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(190))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("slamvan6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(186))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(191))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(192))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("monster3"):
				case joaat("monster5"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(133))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(134))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(135))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(136))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(137))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(138))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("cerberus"):
				case joaat("cerberus3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(146))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(147))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(148))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(149))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(150))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(151))
							{
								return 0;
							}
							break;
						case 7:
							if (!__LIB_10__.func_81(152))
							{
								return 0;
							}
							break;
						case 8:
							if (!__LIB_10__.func_81(153))
							{
								return 0;
							}
							break;
						case 9:
							if (!__LIB_10__.func_81(154))
							{
								return 0;
							}
							break;
						case 10:
							if (!__LIB_10__.func_81(155))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("cerberus2"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(156))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(157))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(158))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(159))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
				case joaat("bruiser3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(167))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(168))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(169))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(170))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(171))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(172))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 85:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("monster3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(24))
						{
							return 0;
						}
					}
					break;
				case joaat("monster4"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(25))
						{
							return 0;
						}
					}
					break;
				case joaat("monster5"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(26))
						{
							return 0;
						}
					}
					break;
				case joaat("cerberus"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(28))
						{
							return 0;
						}
					}
					break;
				case joaat("cerberus2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(29))
						{
							return 0;
						}
					}
					break;
				case joaat("cerberus3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(30))
						{
							return 0;
						}
					}
					break;
				case joaat("bruiser"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(32))
						{
							return 0;
						}
					}
					break;
				case joaat("bruiser2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(33))
						{
							return 0;
						}
					}
					break;
				case joaat("bruiser3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(34))
						{
							return 0;
						}
					}
					break;
				case joaat("slamvan4"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(36))
						{
							return 0;
						}
					}
					break;
				case joaat("slamvan5"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(37))
						{
							return 0;
						}
					}
					break;
				case joaat("slamvan6"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(38))
						{
							return 0;
						}
					}
					break;
				case joaat("brutus"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(40))
						{
							return 0;
						}
					}
					break;
				case joaat("brutus2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(41))
						{
							return 0;
						}
					}
					break;
				case joaat("brutus3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(42))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(44))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(45))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(46))
						{
							return 0;
						}
					}
					break;
				case joaat("dominator4"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(48))
						{
							return 0;
						}
					}
					break;
				case joaat("dominator5"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(49))
						{
							return 0;
						}
					}
					break;
				case joaat("dominator6"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(50))
						{
							return 0;
						}
					}
					break;
				case joaat("impaler2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(52))
						{
							return 0;
						}
					}
					break;
				case joaat("impaler3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(53))
						{
							return 0;
						}
					}
					break;
				case joaat("impaler4"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(54))
						{
							return 0;
						}
					}
					break;
				case joaat("imperator"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(56))
						{
							return 0;
						}
					}
					break;
				case joaat("imperator2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(57))
						{
							return 0;
						}
					}
					break;
				case joaat("imperator3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(58))
						{
							return 0;
						}
					}
					break;
				case joaat("zr380"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(60))
						{
							return 0;
						}
					}
					break;
				case joaat("zr3802"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(61))
						{
							return 0;
						}
					}
					break;
				case joaat("zr3803"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(62))
						{
							return 0;
						}
					}
					break;
				case joaat("issi4"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(64))
						{
							return 0;
						}
					}
					break;
				case joaat("issi5"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(65))
						{
							return 0;
						}
					}
					break;
				case joaat("issi6"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(66))
						{
							return 0;
						}
					}
					break;
				case joaat("deathbike"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(69))
						{
							return 0;
						}
					}
					break;
				case joaat("deathbike2"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(70))
						{
							return 0;
						}
					}
					break;
				case joaat("deathbike3"):
					if (iParam2 > 1)
					{
						if (!__LIB_10__.func_81(71))
						{
							return 0;
						}
					}
					break;
			}
			break;
		case 29:
			switch (iParam2)
			{
				case 3:
					if (!__LIB_10__.func_81(109))
					{
						return 0;
					}
					break;
				case 4:
					if (!__LIB_10__.func_81(110))
					{
						return 0;
					}
					break;
				case 5:
					if (!__LIB_10__.func_81(111))
					{
						return 0;
					}
					break;
				case 6:
					if (!__LIB_10__.func_81(112))
					{
						return 0;
					}
					break;
				case 7:
					if (!__LIB_10__.func_81(113))
					{
						return 0;
					}
					break;
				case 8:
					if (!__LIB_10__.func_81(114))
					{
						return 0;
					}
					break;
				case 9:
					if (!__LIB_10__.func_81(115))
					{
						return 0;
					}
					break;
				case 10:
					if (!__LIB_10__.func_81(116))
					{
						return 0;
					}
					break;
				case 11:
					if (!__LIB_10__.func_81(117))
					{
						return 0;
					}
					break;
				case 12:
					if (!__LIB_10__.func_81(118))
					{
						return 0;
					}
					break;
				case 13:
					if (!__LIB_10__.func_81(119))
					{
						return 0;
					}
					break;
				case 14:
					if (!__LIB_10__.func_81(120))
					{
						return 0;
					}
					break;
			}
			break;
		case 80:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(139))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(160))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(181))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("impaler2"):
				case joaat("impaler3"):
				case joaat("impaler4"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(248))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(259))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("zr380"):
				case joaat("zr3802"):
				case joaat("zr3803"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(274))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(284))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("scarab"):
					if (iParam2 > 0)
					{
						if (!__LIB_10__.func_81(206))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab2"):
					if (iParam2 > 0)
					{
						if (!__LIB_10__.func_81(207))
						{
							return 0;
						}
					}
					break;
				case joaat("scarab3"):
					if (iParam2 > 0)
					{
						if (!__LIB_10__.func_81(208))
						{
							return 0;
						}
					}
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(234))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
		case 15:
			if (__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(iParam0)) && !VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
				{
					switch (iParam2)
					{
						case 22:
							if (!__LIB_10__.func_81(72))
							{
								return 0;
							}
							break;
						case 23:
							if (!__LIB_10__.func_81(73))
							{
								return 0;
							}
							break;
						case 24:
							if (!__LIB_10__.func_81(76))
							{
								return 0;
							}
							break;
						case 25:
							if (!__LIB_10__.func_81(74))
							{
								return 0;
							}
							break;
						case 26:
							if (!__LIB_10__.func_81(75))
							{
								return 0;
							}
							break;
					}
				}
				else
				{
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(72))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(73))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(76))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(74))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(75))
							{
								return 0;
							}
							break;
						}
					}
			}
			break;
		case 78:
			if (__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				switch (iParam2)
				{
					case 1:
						if (!__LIB_10__.func_81(124))
						{
							return 0;
						}
						break;
					case 2:
						if (!__LIB_10__.func_81(125))
						{
							return 0;
						}
						break;
					case 3:
						if (!__LIB_10__.func_81(126))
						{
							return 0;
						}
						break;
					}
			}
			break;
		case 77:
			if (__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				switch (iParam2)
				{
					case 1:
						if (!__LIB_10__.func_81(121))
						{
							return 0;
						}
						break;
					case 2:
						if (!__LIB_10__.func_81(122))
						{
							return 0;
						}
						break;
					case 3:
						if (!__LIB_10__.func_81(123))
						{
							return 0;
						}
						break;
					case 4:
						if (!__LIB_10__.func_81(77))
						{
							return 0;
						}
						break;
					}
			}
			break;
		case 9:
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(127))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(128))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(23))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(140))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(141))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(27))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(161))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(162))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(31))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(182))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(183))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(35))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("brutus"):
				case joaat("brutus2"):
				case joaat("brutus3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(193))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(194))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(39))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("scarab"):
				case joaat("scarab2"):
				case joaat("scarab3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(209))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(210))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(43))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(235))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(236))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(47))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("impaler2"):
				case joaat("impaler3"):
				case joaat("impaler4"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(249))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(250))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(51))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(260))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(261))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(55))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("zr380"):
				case joaat("zr3802"):
				case joaat("zr3803"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(275))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(276))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(59))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(285))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(286))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(63))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("deathbike2"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(307))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(308))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(309))
							{
								return 0;
							}
							break;
						case 4:
							if (!__LIB_10__.func_81(310))
							{
								return 0;
							}
							break;
						case 5:
							if (!__LIB_10__.func_81(67))
							{
								return 0;
							}
							break;
						case 6:
							if (!__LIB_10__.func_81(68))
							{
								return 0;
							}
							break;
					}
					break;
				case joaat("deathbike"):
				case joaat("deathbike3"):
					switch (iParam2)
					{
						case 1:
							if (!__LIB_10__.func_81(307))
							{
								return 0;
							}
							break;
						case 2:
							if (!__LIB_10__.func_81(309))
							{
								return 0;
							}
							break;
						case 3:
							if (!__LIB_10__.func_81(67))
							{
								return 0;
							}
							break;
					}
					break;
			}
			break;
	}
	return 1;
}

int func_19(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0xC2F03
{
	char cVar0[64];
	*uParam0 = 0;
	uParam0->f_1 = 0;
	if (iParam1 == -1)
	{
		if (VEHICLE::IS_VEHICLE_MODEL(iParam6, joaat("trailerlarge")))
		{
			switch (iParam2)
			{
				case 38:
					if (iParam5 == 2)
					{
						__LIB_10__.func_82(&cVar0, 0, 1);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							*uParam0 = MISC::GET_HASH_KEY(&cVar0);
						}
						__LIB_10__.func_82(&cVar0, 2, 1);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
						}
						__LIB_10__.func_82(&cVar0, 7, 1);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							uParam0->f_2 = MISC::GET_HASH_KEY(&cVar0);
						}
					}
					else if (iParam5 == 3)
					{
						__LIB_10__.func_82(&cVar0, 1, 1);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							*uParam0 = MISC::GET_HASH_KEY(&cVar0);
						}
						__LIB_10__.func_82(&cVar0, 8, 1);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
						}
					}
					else if (iParam5 == 4)
					{
					}
					else if (iParam5 == 6)
					{
					}
					else if (iParam5 == 7)
					{
					}
					else if (iParam5 == 8)
					{
					}
					break;
				case 33:
					__LIB_10__.func_82(&cVar0, 6, 1);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					break;
			}
			switch (iParam3)
			{
				case 48:
					__LIB_10__.func_82(&cVar0, 5, 1);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					break;
				case 10:
					__LIB_10__.func_82(&cVar0, 4, 1);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					break;
			}
			if (*uParam0 == 0)
			{
				return 0;
			}
			return 1;
		}
		iParam1 = 0;
	}
	switch (iParam2)
	{
		case 38:
			if (iParam5 == 2)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_COLOUR1_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
				StringCopy(&cVar0, "PACKED_MP_VEH_COLOUR_EXTRA1_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
				}
				StringCopy(&cVar0, "PACKED_MP_VEH_PRIMARY_COLOUR_GROUP_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					uParam0->f_2 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 3)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_COLOUR2_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
				StringCopy(&cVar0, "PACKED_MP_VEH_SECONDARY_COLOUR_GROUP_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 4)
			{
			}
			else if (iParam5 == 6)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_LIVERY_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 7)
			{
				StringCopy(&cVar0, "PACKED_LR_VEHICLE_COLOUR_5_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 8)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_LIVERY2_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 58:
			if (iParam4 == 10 || iParam4 == 11)
			{
				if (iParam3 == 23)
				{
					if (VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam6) >= 8 && VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam6) <= 12)
					{
						StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_23_v", 64);
						StringIntConCat(&cVar0, iParam1, 64);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							*uParam0 = MISC::GET_HASH_KEY(&cVar0);
						}
					}
					else
					{
						StringCopy(&cVar0, "PACKED_MP_VEH_MOD_VAR_0_v", 64);
						StringIntConCat(&cVar0, iParam1, 64);
						if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
						{
							*uParam0 = MISC::GET_HASH_KEY(&cVar0);
						}
					}
				}
				else if (iParam3 == 24)
				{
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_VAR_1_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
				else if (VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam6) >= 8 && VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam6) <= 12)
				{
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_23_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
				else
				{
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_VAR_0_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
			}
			else if (iParam4 >= 12 && iParam4 <= 19)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_23_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if ((iParam4 == 2 || iParam4 == 1) || iParam4 == 0)
			{
				StringCopy(&cVar0, "PACKED_NG_VEHICLE_BPT_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else
			{
				StringCopy(&cVar0, "PACKED_NG_VEHICLE_SMOKE_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 57:
			StringCopy(&cVar0, "PACKED_MP_VEH_COLOUR_EXTRA2_0_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 56:
			if (iParam5 == 4)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_24_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_23_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			StringCopy(&cVar0, "PACKED_MP_VEH_WHEEL_TYPE_0_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 33:
			StringCopy(&cVar0, "PACKED_MP_VEH_PLATE_ID_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 60:
			StringCopy(&cVar0, "PACKED_MP_VEH_WINDOW_TINT_0_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 30:
			if (iParam5 == 1)
			{
				StringCopy(&cVar0, "PACKED_NG_VEHICLE_NEON_KIT_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 2)
			{
				StringCopy(&cVar0, "PACKED_NG_VEHICLE_NEON_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 8:
			if (iParam4 >= 20)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_2_v", 64);
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_1_v", 64);
			}
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 15:
			if (iParam4 >= 20)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_9_v", 64);
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_8_v", 64);
			}
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 90:
			if (iParam5 == 1)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_S_", 64);
				StringIntConCat(&cVar0, (iParam3 - 25), 64);
				StringConCat(&cVar0, "_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 2)
			{
				StringCopy(&cVar0, "PACKED_LR_VEHICLE_COLOUR_6_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 91:
			if (iParam5 == 1)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_S_", 64);
				StringIntConCat(&cVar0, (iParam3 - 25), 64);
				StringConCat(&cVar0, "_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 2)
			{
				StringCopy(&cVar0, "PACKED_LR_VEHICLE_COLOUR_5_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			else if (iParam5 == 3)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_COLOUR2_0_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 92:
			StringCopy(&cVar0, "PACKED_LR_VEHICLE_COLOUR_6_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 40:
			if (VEHICLE::GET_VEHICLE_LIVERY2_COUNT(iParam6) > 1)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_LIVERY2_0_v", 64);
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_10_v", 64);
			}
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 62:
		case 63:
		case 64:
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
			StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
			if (iParam3 >= 25)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_S_", 64);
				StringIntConCat(&cVar0, (iParam3 - 25), 64);
			}
			else
			{
				StringIntConCat(&cVar0, iParam3, 64);
			}
			StringConCat(&cVar0, "_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
		case 18:
			if (__LIB_1__.func_177(ENTITY::GET_ENTITY_MODEL(iParam6)))
			{
				if ((iParam4 == 0 || iParam4 == 1) || iParam4 == 2)
				{
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
					StringIntConCat(&cVar0, iParam3, 64);
					StringConCat(&cVar0, "_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					StringCopy(&cVar0, "PACKED_NG_VEHICLE_SMOKE_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
				else
				{
					StringCopy(&cVar0, "PACKED_NG_VEHICLE_SMOKE_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
					StringIntConCat(&cVar0, iParam3, 64);
					StringConCat(&cVar0, "_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
				StringIntConCat(&cVar0, iParam3, 64);
				StringConCat(&cVar0, "_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		case 23:
			if (VEHICLE::IS_VEHICLE_MODEL(iParam6, joaat("oppressor2")))
			{
				if ((iParam4 == 0 || iParam4 == 1) || iParam4 == 2)
				{
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
					StringIntConCat(&cVar0, iParam3, 64);
					StringConCat(&cVar0, "_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					StringCopy(&cVar0, "PACKED_NG_VEHICLE_SMOKE_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
				else
				{
					StringCopy(&cVar0, "PACKED_NG_VEHICLE_SMOKE_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						*uParam0 = MISC::GET_HASH_KEY(&cVar0);
					}
					StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
					StringIntConCat(&cVar0, iParam3, 64);
					StringConCat(&cVar0, "_v", 64);
					StringIntConCat(&cVar0, iParam1, 64);
					if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
					{
						uParam0->f_1 = MISC::GET_HASH_KEY(&cVar0);
					}
				}
			}
			else
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
				StringIntConCat(&cVar0, iParam3, 64);
				StringConCat(&cVar0, "_v", 64);
				StringIntConCat(&cVar0, iParam1, 64);
				if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
				{
					*uParam0 = MISC::GET_HASH_KEY(&cVar0);
				}
			}
			break;
		default:
			StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_", 64);
			if (iParam3 >= 25)
			{
				StringCopy(&cVar0, "PACKED_MP_VEH_MOD_IDX_S_", 64);
				StringIntConCat(&cVar0, (iParam3 - 25), 64);
			}
			else
			{
				StringIntConCat(&cVar0, iParam3, 64);
			}
			StringConCat(&cVar0, "_v", 64);
			StringIntConCat(&cVar0, iParam1, 64);
			if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_IS_VALID(&cVar0))
			{
				*uParam0 = MISC::GET_HASH_KEY(&cVar0);
			}
			break;
	}
	return 1;
}

void func_20(int iParam0, int* iParam1, char* sParam2, int* iParam3, int* iParam4, char* sParam5, int* iParam6, int iParam7, char* sParam8, int* iParam9, int* iParam10, bool bParam11)//Position - 0xC9A76
{
	var uVar0;
	var uVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	var uVar9;
	VEHICLE::GET_VEHICLE_COLOURS(iParam0, iParam3, iParam6);
	VEHICLE::GET_VEHICLE_EXTRA_COLOURS(iParam0, iParam9, iParam10);
	StringCopy(sParam2, "", 16);
	StringCopy(sParam5, "", 16);
	StringCopy(sParam8, "", 16);
	if (bParam11)
	{
		VEHICLE::GET_VEHICLE_MOD_COLOR_1(iParam0, iParam1, &uVar0, &iVar2);
		VEHICLE::GET_VEHICLE_MOD_COLOR_2(iParam0, iParam4, &uVar1);
	}
	if (bParam11)
	{
		iVar3 = 0;
		while (iVar3 != 7)
		{
			if (!__LIB_10__.func_85(iVar3))
			{
				iVar5 = VEHICLE::GET_NUM_MOD_COLORS(iVar3, true);
				iVar4 = 0;
				while (iVar4 < iVar5)
				{
					VEHICLE::SET_VEHICLE_MOD_COLOR_1(iParam0, iVar3, iVar4, iVar2);
					VEHICLE::GET_VEHICLE_COLOURS(iParam0, &iVar6, &uVar9);
					if (iVar6 == *iParam3)
					{
						*iParam1 = iVar3;
						StringCopy(sParam2, VEHICLE::GET_VEHICLE_MOD_COLOR_1_NAME(iParam0, false), 16);
						iVar4 = iVar5 + 1;
					}
					iVar4++;
				}
			}
			if (MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
			{
				iVar3++;
			}
			else
			{
				iVar3 = 7;
			}
		}
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
	{
		*iParam1 = 7;
		IntToString(sParam2, *iParam3, 16);
	}
	if (bParam11)
	{
		iVar4 = 0;
		iVar5 = VEHICLE::GET_NUM_MOD_COLORS(0, true);
		iVar4 = 0;
		while (iVar4 < iVar5)
		{
			VEHICLE::SET_VEHICLE_MOD_COLOR_1(iParam0, 0, iVar4, iVar4);
			VEHICLE::GET_VEHICLE_EXTRA_COLOURS(iParam0, &iVar8, &uVar9);
			if (iVar8 == *iParam9)
			{
				StringCopy(sParam8, VEHICLE::GET_VEHICLE_MOD_COLOR_1_NAME(iParam0, false), 16);
				iVar4 = iVar5 + 1;
			}
			iVar4++;
		}
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam8))
	{
		IntToString(sParam8, *iParam9, 16);
		*iParam7 = 7;
	}
	else
	{
		*iParam7 = *iParam1;
	}
	if (bParam11)
	{
		iVar3 = 0;
		while (iVar3 != 7)
		{
			if (!__LIB_10__.func_85(iVar3))
			{
				iVar4 = 0;
				iVar5 = VEHICLE::GET_NUM_MOD_COLORS(iVar3, true);
				iVar4 = 0;
				while (iVar4 < iVar5)
				{
					VEHICLE::SET_VEHICLE_MOD_COLOR_2(iParam0, iVar3, iVar4);
					VEHICLE::GET_VEHICLE_COLOURS(iParam0, &uVar9, &iVar7);
					if (iVar7 == *iParam6)
					{
						*iParam4 = iVar3;
						StringCopy(sParam5, VEHICLE::GET_VEHICLE_MOD_COLOR_2_NAME(iParam0), 16);
						iVar4 = iVar5 + 1;
					}
					iVar4++;
				}
			}
			if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
			{
				iVar3++;
			}
			else
			{
				iVar3 = 7;
			}
		}
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
	{
		*iParam4 = 7;
		IntToString(sParam5, *iParam6, 16);
	}
	VEHICLE::SET_VEHICLE_COLOURS(iParam0, *iParam3, *iParam6);
	VEHICLE::SET_VEHICLE_EXTRA_COLOURS(iParam0, *iParam9, *iParam10);
}

int func_21()//Position - 0xCA061
{
	if (!__LIB_19__.func_954())
	{
		return 0;
	}
	if (Local_124.f_443 == 38)
	{
		if (Local_124.f_606 == -1)
		{
			return 1;
		}
		if (Local_124.f_116.f_5 == 2 || Local_124.f_116.f_5 == 3)
		{
			if (Local_124.f_606 == 1)
			{
				return 1;
			}
		}
	}
	if (Local_124.f_443 == 31)
	{
		return 1;
	}
	return 0;
}

int func_22(int iParam0)//Position - 0xCC988
{
	if (iParam0 == 0)
	{
		return 1;
	}
	if (__LIB_10__.func_478(1))
	{
		if (Global_78319)
		{
			if (MONEY::NETWORK_CAN_SPEND_MONEY(iParam0, false, true, false, -1, 0))
			{
				return 1;
			}
		}
		else if (__LIB_9__.func_231(func_2768()) >= iParam0)
		{
			return 1;
		}
	}
	return 0;
}

void func_23(int iParam0)//Position - 0xCCB07
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	__LIB_10__.func_91(iParam0);
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_112())
	{
		return;
	}
	if (Global_100493.f_1550)
	{
		return;
	}
	if (((((((Local_124.f_443 > 2 && Local_124.f_443 != 3) && Local_124.f_443 != 13) && Local_124.f_443 != 21) && Local_124.f_443 != 22) && Local_124.f_443 != 31) && Local_124.f_443 != 38) && Local_124.f_443 != 56)
	{
		iVar0 = 0;
		iVar1 = 0;
		while (__LIB_10__.func_79(iVar1, &iVar2, &iVar3, &bVar4, &iVar5))
		{
			if ((bVar4 && Local_124.f_443 == iVar2) || (!bVar4 && Local_124.f_444 == iVar3))
			{
				if (iVar5 == -1 || iVar5 == Local_124.f_116.f_5)
				{
					if (((iVar0 + iParam0) / 32) < Global_100493.f_1468)
					{
						if (bLocal_494)
						{
						}
						MISC::SET_BIT(&(Global_100493.f_1468[((iVar0 + iParam0) / 32)]), ((iVar0 + iParam0) % 32));
					}
				}
			}
			iVar0 = (iVar0 + __LIB_10__.func_78(iVar2, iVar3, iVar5));
			iVar1++;
		}
	}
	else if (Local_124.f_443 == 56)
	{
		iVar6 = 0;
		if (iParam0 > 0)
		{
			switch (Local_124.f_603)
			{
				case 0:
					iVar6 = 0;
					break;
				case 1:
					iVar6 = 50;
					break;
				case 2:
					iVar6 = 90;
					break;
				case 3:
					iVar6 = 120;
					break;
				case 4:
					iVar6 = 160;
					break;
				case 5:
					iVar6 = 180;
					break;
				case 6:
					if (Local_124.f_604 == 0)
					{
						iVar6 = 230;
					}
					else if (Local_124.f_604 == 1)
					{
						iVar6 = 310;
					}
					break;
				case 7:
					iVar6 = 390;
					break;
				case 8:
					iVar6 = 430;
					break;
				case 9:
					iVar6 = 465;
					break;
				case 10:
					iVar6 = 485;
					break;
				case 11:
					iVar6 = 510;
					break;
				case 12:
					iVar6 = 540;
					break;
			}
			iVar6++;
		}
		MISC::SET_BIT(&(Global_100493.f_1529[((iVar6 + iParam0) / 32)]), ((iVar6 + iParam0) % 32));
	}
}

void func_24(struct<3> Param0)//Position - 0xCCFCF
{
	struct<3> Var0;
	float fVar1;
	var uVar2[10];
	int iVar3;
	int iVar4;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	iVar3 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar2);
	iVar4 = 0;
	while (iVar4 < iVar3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(uVar2[iVar4]) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), uVar2[iVar4], false))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(uVar2[iVar4], false) && ENTITY::IS_ENTITY_A_MISSION_ENTITY(uVar2[iVar4]))
			{
				if (MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(uVar2[iVar4], true), Param0, true) < 8f)
				{
					if (__LIB_0__.func_332(Local_124.f_0, &Var0, &fVar1))
					{
						if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(uVar2[iVar4])) || !Global_78319)
						{
							ENTITY::SET_ENTITY_COORDS(uVar2[iVar4], Var0, true, false, false, true);
							ENTITY::SET_ENTITY_HEADING(uVar2[iVar4], fVar1);
							if ((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("esskey") && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("caracara")) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("caracara2"))
							{
								VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(uVar2[iVar4], 5f);
							}
						}
					}
				}
			}
			else
			{
				ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(uVar2[iVar4]));
			}
		}
		iVar4++;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || !Global_78319)
	{
		MISC::CLEAR_AREA(Param0, 5f, true, false, false, false);
		__LIB_10__.func_18("Clear area in MOVE_MODSHOP_VEHICLES called (non-multi?)", -1);
	}
	else if (!CAM::IS_SPHERE_VISIBLE(Param0, 5f))
	{
		MISC::CLEAR_AREA_OF_PEDS(Param0, 5f, 0);
		MISC::CLEAR_AREA_OF_PROJECTILES(Param0, 5f, 0);
		__LIB_10__.func_18("Clear areas in MOVE_MODSHOP_VEHICLES called (multi?)", -1);
	}
	else
	{
		__LIB_10__.func_18("Clear areas in MOVE_MODSHOP_VEHICLES called but ignored for being visible (multi?)", -1);
	}
}

int func_25()//Position - 0xD02F5
{
	if ((((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 229 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 191) || __LIB_1__.func_289()) || __LIB_1__.func_224()) || __LIB_1__.func_288()) || Global_2788199.f_227 == 1) || (Global_2667225.f_1753 && func_1500(PLAYER::PLAYER_ID())))
	{
		return 0;
	}
	return 1;
}

int func_26()//Position - 0xD0C17
{
	if (__LIB_0__.func_121(Local_124.f_406))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
			case joaat("caracara2"):
				if (Local_124.f_0 != 45)
				{
					return 1;
				}
				break;
			case joaat("youga3"):
				if (Local_124.f_0 == 44)
				{
					return 1;
				}
				break;
			}
	}
	if (__LIB_10__.func_530())
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("rrocket"):
				return 1;
				break;
			}
	}
	if (__LIB_10__.func_553())
	{
		if (BitTest(uLocal_202, 18))
		{
			return 1;
		}
	}
	if (__LIB_10__.func_554())
	{
		if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("zhaba")))
		{
			return 1;
		}
	}
	if (__LIB_4__.func_532())
	{
		return 1;
	}
	if (__LIB_10__.func_477() && func_2891(PLAYER::PLAYER_ID()) == PLAYER::PLAYER_ID())
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("slamtruck"):
			case joaat("patriot"):
			case joaat("patriot2"):
			case joaat("bobcatxl"):
			case joaat("caracara"):
			case joaat("caracara2"):
				return 1;
				break;
			default:
				if (__LIB_1__.func_926(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
				{
					return 1;
				}
				break;
			}
	}
	if (__LIB_10__.func_395())
	{
		return 1;
	}
	return 0;
}

int func_27(int iParam0)//Position - 0xD3B20
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (__LIB_4__.func_532())
	{
		switch (iVar0)
		{
			case joaat("brioso2"):
				return 1;
				break;
			}
	}
	if (__LIB_0__.func_596(iVar0) && !__LIB_10__.func_395())
	{
		return 1;
	}
	return 0;
}

int func_28(int iParam0)//Position - 0xD4801
{
	if (__LIB_1__.func_392(iParam0))
	{
		return (__LIB_1__.func_367(iParam0) + func_1548(11));
	}
	else
	{
		switch (iParam0)
		{
			case joaat("trailersmall2"):
				return 157;
				break;
			case joaat("hauler2"):
			case joaat("phantom3"):
				return 158;
				break;
			case joaat("avenger"):
				return 190;
				break;
			case joaat("khanjali"):
				return 188;
				break;
			case joaat("chernobog"):
				return 187;
				break;
			case joaat("riot2"):
				return 186;
				break;
			case joaat("thruster"):
				return 189;
				break;
		}
		if (iParam0 == joaat("terbyte"))
		{
			return 222;
		}
		else if (iParam0 == joaat("speedo4"))
		{
			return 224;
		}
		else if (iParam0 == joaat("mule4"))
		{
			return 225;
		}
		else if (iParam0 == joaat("pounder2"))
		{
			return 226;
		}
		if (iParam0 == joaat("rcbandito"))
		{
			return 257;
		}
		if (iParam0 == joaat("minitank"))
		{
			return 279;
		}
	}
	return -1;
}

int func_29()//Position - 0xD53C3
{
	if (__LIB_10__.func_523())
	{
		if (iLocal_219 == 1)
		{
			return 1;
		}
	}
	return 0;
}

int func_30(int iParam0)//Position - 0xD7056
{
	if (!Global_78319)
	{
		return 0;
	}
	if (iParam0 == joaat("cognoscenti") || iParam0 == joaat("cognoscenti2"))
	{
		return 0;
	}
	if (__LIB_0__.func_883(iParam0) != -1)
	{
		if (__LIB_10__.func_81(__LIB_0__.func_882(iParam0)))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

int func_31(int iParam0)//Position - 0xE0CCC
{
	switch (iParam0)
	{
		case joaat("technical3"):
		case joaat("insurgent3"):
			if (__LIB_6__.func_777(iParam0, 0))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_32(int iParam0, int iParam1, int iParam2, char* sParam3, bool bParam4, var uParam5)//Position - 0xE2779
{
	float fVar0;
	int iVar1;
	int iVar2;
	fVar0 = 1f;
	if (bParam4)
	{
		fVar0 = Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */;
	}
	if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 0;
	}
	iVar1 = ENTITY::GET_ENTITY_MODEL(Global_1585308);
	switch (iParam0)
	{
		case 4:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_565(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_565(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_565(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_565(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(35000) * __LIB_4__.func_565(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(50000) * __LIB_4__.func_565(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(650) * __LIB_4__.func_565(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6375) * __LIB_4__.func_565(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10625) * __LIB_4__.func_565(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17000) * __LIB_4__.func_565(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(29750) * __LIB_4__.func_565(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(42500) * __LIB_4__.func_565(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_565(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5250) * __LIB_4__.func_565(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8750) * __LIB_4__.func_565(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_565(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(24500) * __LIB_4__.func_565(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(35000) * __LIB_4__.func_565(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_565(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_565(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_565(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_565(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21000) * __LIB_4__.func_565(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(30000) * __LIB_4__.func_565(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_565(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_565(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_565(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9600) * __LIB_4__.func_565(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16800) * __LIB_4__.func_565(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(24000) * __LIB_4__.func_565(iParam1)));
						break;
					}
			}
			break;
		case 5:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_564(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_564(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(27000) * __LIB_4__.func_564(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(35000) * __LIB_4__.func_564(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(60000) * __LIB_4__.func_564(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(650) * __LIB_4__.func_564(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13000) * __LIB_4__.func_564(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17550) * __LIB_4__.func_564(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(22750) * __LIB_4__.func_564(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(60000) * __LIB_4__.func_564(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_564(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_564(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13500) * __LIB_4__.func_564(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_564(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(60000) * __LIB_4__.func_564(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_564(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_564(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5400) * __LIB_4__.func_564(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_564(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(60000) * __LIB_4__.func_564(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_564(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_564(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5400) * __LIB_4__.func_564(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_564(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(60000) * __LIB_4__.func_564(iParam1)));
						break;
					}
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 0:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_563(iParam1)));
					break;
				case 1:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_563(iParam1)));
					break;
				case 2:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_563(iParam1)));
					break;
				case 3:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_563(iParam1)));
					break;
				case 4:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16000) * __LIB_4__.func_563(iParam1)));
					break;
				case 5:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_563(iParam1)));
					break;
				case 6:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16750) * __LIB_4__.func_563(iParam1)));
					break;
				case 7:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17000) * __LIB_4__.func_563(iParam1)));
					break;
				case 8:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17250) * __LIB_4__.func_563(iParam1)));
					break;
				case 9:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_563(iParam1)));
					break;
				case 10:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17750) * __LIB_4__.func_563(iParam1)));
					break;
				case 11:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_563(iParam1)));
					break;
				case 12:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18250) * __LIB_4__.func_563(iParam1)));
					break;
				case 13:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18500) * __LIB_4__.func_563(iParam1)));
					break;
				case 14:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18750) * __LIB_4__.func_563(iParam1)));
					break;
				case 15:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19000) * __LIB_4__.func_563(iParam1)));
					break;
				case 16:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19250) * __LIB_4__.func_563(iParam1)));
					break;
			}
			break;
		case 31:
			if (__LIB_19__.func_954())
			{
				return 0;
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_562()));
						break;
					case 1:
						return 10000;
						break;
					}
			}
			break;
		case 39:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26684 /* Tunable: AW_SALE_PRICE_MODS_NO_ROLL_CAGE */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26685 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26685 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26686 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26686 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26687 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26687 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_3 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26688 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_4 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26688 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_4 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26689 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_5 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26689 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_5 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26690 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_6 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26690 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_6 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26691 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_7 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26691 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_7 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 8:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26692 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_8 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26692 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_8 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 9:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26693 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_9 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26693 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_9 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 10:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26694 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_10 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26694 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_10 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((100f * fVar0));
						break;
					case 1:
						return SYSTEM::FLOOR((7000f * fVar0));
						break;
					case 2:
						return SYSTEM::FLOOR((7950f * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR((8500f * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR((10000f * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR((11000f * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR((11950f * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR((13500f * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR((14000f * fVar0));
						break;
					}
			}
			break;
		case 26:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1600) * __LIB_4__.func_561(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24158 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_HOOD_1 */;
						}
						else if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3000) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5000) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8000) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8000) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(9600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9600) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11000) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11000) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11600) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12000) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_561(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_561(iParam1)));
						}
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12400) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12400) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12500) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12900) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13250) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13600) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13900) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14150) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14400) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14650) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14850) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15050) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15250) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15450) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15650) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 23:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15850) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 24:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16050) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 25:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16250) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 26:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16450) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 27:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16650) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 28:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16850) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
					case 29:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17050) * __LIB_4__.func_561(iParam1)) * fVar0));
						break;
				}
			}
			else if (Global_1585307 == 1 || Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_561(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_561(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_561(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2900) * __LIB_4__.func_561(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4450) * __LIB_4__.func_561(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_561(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_561(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_561(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_561(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_561(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7200) * __LIB_4__.func_561(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7750) * __LIB_4__.func_561(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_561(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8600) * __LIB_4__.func_561(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9000) * __LIB_4__.func_561(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9400) * __LIB_4__.func_561(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9800) * __LIB_4__.func_561(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10200) * __LIB_4__.func_561(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10550) * __LIB_4__.func_561(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10900) * __LIB_4__.func_561(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11250) * __LIB_4__.func_561(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11600) * __LIB_4__.func_561(iParam1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11900) * __LIB_4__.func_561(iParam1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12200) * __LIB_4__.func_561(iParam1)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12500) * __LIB_4__.func_561(iParam1)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12800) * __LIB_4__.func_561(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_561(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(650) * __LIB_4__.func_561(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_561(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1750) * __LIB_4__.func_561(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_561(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_561(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2900) * __LIB_4__.func_561(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4450) * __LIB_4__.func_561(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_561(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_561(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_561(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6450) * __LIB_4__.func_561(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6800) * __LIB_4__.func_561(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_561(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_561(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7850) * __LIB_4__.func_561(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_561(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8450) * __LIB_4__.func_561(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8750) * __LIB_4__.func_561(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9050) * __LIB_4__.func_561(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9300) * __LIB_4__.func_561(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9550) * __LIB_4__.func_561(iParam1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9800) * __LIB_4__.func_561(iParam1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10050) * __LIB_4__.func_561(iParam1)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10250) * __LIB_4__.func_561(iParam1)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10450) * __LIB_4__.func_561(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_561(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(400) * __LIB_4__.func_561(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_561(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(898) * __LIB_4__.func_561(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1250) * __LIB_4__.func_561(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1750) * __LIB_4__.func_561(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_561(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_561(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2900) * __LIB_4__.func_561(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4450) * __LIB_4__.func_561(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_561(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_561(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_561(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5700) * __LIB_4__.func_561(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_561(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6300) * __LIB_4__.func_561(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_561(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9600) * __LIB_4__.func_561(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9850) * __LIB_4__.func_561(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10100) * __LIB_4__.func_561(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10350) * __LIB_4__.func_561(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10600) * __LIB_4__.func_561(iParam1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10850) * __LIB_4__.func_561(iParam1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11100) * __LIB_4__.func_561(iParam1)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11350) * __LIB_4__.func_561(iParam1)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11600) * __LIB_4__.func_561(iParam1)));
						break;
					}
			}
			break;
		case 8:
			if (((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 35) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24156 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_FRONT_BUMPER_1 */;
						}
						else if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7400) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7400) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11700) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14500) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14700) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14900) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14900) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15100) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15100) * __LIB_4__.func_563(iParam1)));
						}
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15300) * __LIB_4__.func_563(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_563(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15700) * __LIB_4__.func_563(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15900) * __LIB_4__.func_563(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16100) * __LIB_4__.func_563(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16300) * __LIB_4__.func_563(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_563(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16700) * __LIB_4__.func_563(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16900) * __LIB_4__.func_563(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17100) * __LIB_4__.func_563(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17300) * __LIB_4__.func_563(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_560(0)));
						break;
					case 21:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24157 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_REAR_BUMPER_1 */;
						}
						else if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_563(1)));
						}
						break;
					case 22:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7400) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(2)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7400) * __LIB_4__.func_563(2)));
						}
						break;
					case 23:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_563(3)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11700) * __LIB_4__.func_563(3)));
						}
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_560(4)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14700) * __LIB_4__.func_560(5)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14900) * __LIB_4__.func_560(6)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15100) * __LIB_4__.func_560(7)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15300) * __LIB_4__.func_560(8)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_560(9)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15700) * __LIB_4__.func_560(10)));
						break;
					case 31:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15900) * __LIB_4__.func_560(11)));
						break;
					case 32:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16100) * __LIB_4__.func_560(12)));
						break;
					case 33:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16300) * __LIB_4__.func_560(13)));
						break;
					case 34:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_560(14)));
						break;
					case 35:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16700) * __LIB_4__.func_560(15)));
						break;
					case 36:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16900) * __LIB_4__.func_560(16)));
						break;
					case 37:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17100) * __LIB_4__.func_560(17)));
						break;
					case 38:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17300) * __LIB_4__.func_560(18)));
						break;
					case 39:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_560(19)));
						break;
					case 40:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17700) * __LIB_4__.func_560(20)));
						break;
				}
			}
			else if (Global_1585307 == 36 || Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(115000) * __LIB_4__.func_563(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(205000) * __LIB_4__.func_563(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(285000) * __LIB_4__.func_563(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_563(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_560(0)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24842 /* Tunable: 224308831 */) * __LIB_4__.func_560(1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_560(2)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_560(3)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(350000) * __LIB_4__.func_560(4)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_560(5)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_560(6)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_560(7)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_560(8)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_560(9)));
						break;
				}
			}
			else if (Global_1585307 == 33)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22612 /* Tunable: -488069750 */;
						break;
					case 2:
						return Global_262145.f_22613 /* Tunable: -476186113 */;
						break;
					case 29:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 30:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 31:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 32:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 33:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 34:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 35:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 36:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 37:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 38:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 39:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 40:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22624 /* Tunable: -35648369 */;
						break;
					case 2:
						return Global_262145.f_22625 /* Tunable: 1890870117 */;
						break;
					case 29:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 30:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 31:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 32:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 33:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 34:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 35:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 36:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 37:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 38:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 39:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 40:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
				}
			}
			else if (Global_1585307 == 1 || Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_563(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_563(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_563(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4700) * __LIB_4__.func_563(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4900) * __LIB_4__.func_563(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5100) * __LIB_4__.func_563(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_563(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_563(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5700) * __LIB_4__.func_563(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_563(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6100) * __LIB_4__.func_563(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6300) * __LIB_4__.func_563(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_563(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6700) * __LIB_4__.func_563(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6900) * __LIB_4__.func_563(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7100) * __LIB_4__.func_563(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7300) * __LIB_4__.func_563(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_563(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_560(0)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_560(1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_560(2)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_560(3)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4700) * __LIB_4__.func_560(4)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4900) * __LIB_4__.func_560(5)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5100) * __LIB_4__.func_560(6)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_560(7)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_560(8)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5700) * __LIB_4__.func_560(9)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_560(10)));
						break;
					case 31:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6100) * __LIB_4__.func_560(11)));
						break;
					case 32:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6300) * __LIB_4__.func_560(12)));
						break;
					case 33:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_560(13)));
						break;
					case 34:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6700) * __LIB_4__.func_560(14)));
						break;
					case 35:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6900) * __LIB_4__.func_560(15)));
						break;
					case 36:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7100) * __LIB_4__.func_560(16)));
						break;
					case 37:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7300) * __LIB_4__.func_560(17)));
						break;
					case 38:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_560(18)));
						break;
					case 39:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_560(19)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_563(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_563(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_563(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2600) * __LIB_4__.func_563(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2800) * __LIB_4__.func_563(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_563(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_563(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_563(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_563(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3800) * __LIB_4__.func_563(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_563(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4200) * __LIB_4__.func_563(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4400) * __LIB_4__.func_563(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_563(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4800) * __LIB_4__.func_563(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_563(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5200) * __LIB_4__.func_563(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5400) * __LIB_4__.func_563(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_560(0)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_560(1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_560(2)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_560(3)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2600) * __LIB_4__.func_560(4)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2800) * __LIB_4__.func_560(5)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_560(6)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_560(7)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_560(8)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_560(9)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3800) * __LIB_4__.func_560(10)));
						break;
					case 31:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_560(11)));
						break;
					case 32:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4200) * __LIB_4__.func_560(12)));
						break;
					case 33:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4400) * __LIB_4__.func_560(13)));
						break;
					case 34:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_560(14)));
						break;
					case 35:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4800) * __LIB_4__.func_560(15)));
						break;
					case 36:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_560(16)));
						break;
					case 37:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5200) * __LIB_4__.func_560(17)));
						break;
					case 38:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5400) * __LIB_4__.func_560(18)));
						break;
					case 39:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_560(19)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(298) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(390) * __LIB_4__.func_563(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_563(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_563(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_563(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1200) * __LIB_4__.func_563(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1400) * __LIB_4__.func_563(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1600) * __LIB_4__.func_563(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1800) * __LIB_4__.func_563(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_563(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_563(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_563(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2600) * __LIB_4__.func_563(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2800) * __LIB_4__.func_563(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_563(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_563(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_563(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_563(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3800) * __LIB_4__.func_563(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_560(0)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_560(1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_560(2)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_560(3)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2600) * __LIB_4__.func_560(4)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2800) * __LIB_4__.func_560(5)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_560(6)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_560(7)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_560(8)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_560(9)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3800) * __LIB_4__.func_560(10)));
						break;
					case 31:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_560(11)));
						break;
					case 32:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4200) * __LIB_4__.func_560(12)));
						break;
					case 33:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4400) * __LIB_4__.func_560(13)));
						break;
					case 34:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_560(14)));
						break;
					case 35:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4800) * __LIB_4__.func_560(15)));
						break;
					case 36:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_560(16)));
						break;
					case 37:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5200) * __LIB_4__.func_560(17)));
						break;
					case 38:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5400) * __LIB_4__.func_560(18)));
						break;
					case 39:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_560(19)));
						break;
				}
			}
			else if (Global_1585307 == 30)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(85000) * __LIB_4__.func_563(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_560(0)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(92500) * __LIB_4__.func_560(1)));
						break;
					}
			}
			break;
		case 9:
			if (iVar1 == joaat("dune3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21426 /* Tunable: 1642130070 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21427 /* Tunable: -1609500137 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("halftrack"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21430 /* Tunable: 907331558 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21431 /* Tunable: 1370788067 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21432 /* Tunable: -282467643 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("tampa3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21438 /* Tunable: -1137973392 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21439 /* Tunable: -454785751 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21440 /* Tunable: -1076160159 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("insurgent3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21445 /* Tunable: 1195033900 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21446 /* Tunable: 544233059 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21447 /* Tunable: 1048087048 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("technical3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21450 /* Tunable: 685525542 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21451 /* Tunable: 772203689 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21452 /* Tunable: -1964913287 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("menacer"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24865 /* Tunable: -1980323938 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(285000) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (__LIB_0__.func_596(iVar1))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26699 /* Tunable: AW_SALE_PRICE_MODS_STOCK_ARMOR */) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_31795 /* Tunable: -750413626 */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 33)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22611 /* Tunable: -2089035711 */;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22622 /* Tunable: 1373896141 */;
						break;
					case 2:
						return Global_262145.f_24010 /* Tunable: -867063928 */;
						break;
				}
			}
			else if (Global_1585307 == 36 || Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24835 /* Tunable: 572240409 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24836 /* Tunable: 395214874 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24837 /* Tunable: 1763537831 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24838 /* Tunable: -1250000379 */) * __LIB_4__.func_559(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(225000) * __LIB_4__.func_559(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26699 /* Tunable: AW_SALE_PRICE_MODS_STOCK_ARMOR */) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26700 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26700 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_1 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26701 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26701 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_2 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26702 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26702 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_3 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26703 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_4 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26703 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_4 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26704 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_5 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26704 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_5 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26705 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_6 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_559(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26705 /* Tunable: AW_SALE_PRICE_MODS_ARMOR_6 */) * __LIB_4__.func_559(iParam1)));
						}
						break;
				}
			}
			else if (Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26724 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_STOCK_LID */) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26725 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_OFFROAD */) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26726 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_OFFROAD_SPOILER */) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26727 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_OFFROAD_NETS */) * __LIB_4__.func_559(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26728 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_OFFROAD_COMBINED */) * __LIB_4__.func_559(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26729 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_TROPHY_TRUCK */) * __LIB_4__.func_559(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26730 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_TROPHY_TRUCK_SPOILER */) * __LIB_4__.func_559(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26731 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_TROPHY_TRUCK_NETS */) * __LIB_4__.func_559(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26732 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_TROPHY_TRUCK_COMBINED */) * __LIB_4__.func_559(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26733 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_GANG_BURRITO */) * __LIB_4__.func_559(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26734 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_GANG_BURRITO_SPOILER */) * __LIB_4__.func_559(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26735 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_GANG_BURRITO_BULLBAR */) * __LIB_4__.func_559(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26736 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_GANG_BURRITO_COMBINED */) * __LIB_4__.func_559(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26737 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_BIG_BRAT */) * __LIB_4__.func_559(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26738 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_BIG_BRAT_CAGE */) * __LIB_4__.func_559(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26739 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_BIG_BRAT_BULLBAR */) * __LIB_4__.func_559(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26740 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_BIG_BRAT_COMBINED */) * __LIB_4__.func_559(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26741 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_MIDNIGHT_PUMPING */) * __LIB_4__.func_559(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26742 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_MIDNIGHT_PUMPING_CAGE */) * __LIB_4__.func_559(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26743 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_MIDNIGHT_PUMPING_FLAMES */) * __LIB_4__.func_559(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26744 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_MIDNIGHT_PUMPING_COMBINED */) * __LIB_4__.func_559(iParam1)));
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_559(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1100) * __LIB_4__.func_559(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1350) * __LIB_4__.func_559(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_559(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_559(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_559(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4900) * __LIB_4__.func_559(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5800) * __LIB_4__.func_559(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_559(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8000) * __LIB_4__.func_559(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9150) * __LIB_4__.func_559(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10100) * __LIB_4__.func_559(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11050) * __LIB_4__.func_559(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11950) * __LIB_4__.func_559(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12900) * __LIB_4__.func_559(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13750) * __LIB_4__.func_559(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14600) * __LIB_4__.func_559(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15450) * __LIB_4__.func_559(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16250) * __LIB_4__.func_559(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17050) * __LIB_4__.func_559(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17800) * __LIB_4__.func_559(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18550) * __LIB_4__.func_559(iParam1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19250) * __LIB_4__.func_559(iParam1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19950) * __LIB_4__.func_559(iParam1)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(20600) * __LIB_4__.func_559(iParam1)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21250) * __LIB_4__.func_559(iParam1)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21850) * __LIB_4__.func_559(iParam1)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(22450) * __LIB_4__.func_559(iParam1)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(23000) * __LIB_4__.func_559(iParam1)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(23550) * __LIB_4__.func_559(iParam1)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(24050) * __LIB_4__.func_559(iParam1)));
						break;
					}
			}
			break;
		case 10:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_558(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9000) * __LIB_4__.func_558(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12500) * __LIB_4__.func_558(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_558(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(33500) * __LIB_4__.func_558(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_558(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_558(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6250) * __LIB_4__.func_558(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9000) * __LIB_4__.func_558(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16750) * __LIB_4__.func_558(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_558(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5850) * __LIB_4__.func_558(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8125) * __LIB_4__.func_558(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11700) * __LIB_4__.func_558(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21775) * __LIB_4__.func_558(iParam1)));
						break;
				}
			}
			else if ((((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 4) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_558(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1800) * __LIB_4__.func_558(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_558(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3600) * __LIB_4__.func_558(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6700) * __LIB_4__.func_558(iParam1)));
						break;
					}
			}
			break;
		case 12:
			if (Global_1585307 == 33)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_557(iParam1)));
						break;
					case 1:
						return Global_262145.f_22619 /* Tunable: -1436692147 */;
						break;
					case 2:
						return Global_262145.f_22620 /* Tunable: -887352848 */;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_557(iParam1)));
						break;
					case 1:
						return Global_262145.f_22623 /* Tunable: 351434341 */;
						break;
					case 2:
						return Global_262145.f_22620 /* Tunable: -887352848 */;
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(260) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 1:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1800) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(9550) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(9750) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(10500) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13750) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14625) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16475) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17250) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18125) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19100) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19975) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20900) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21675) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(22550) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(23350) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24175) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(25025) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(25900) * __LIB_4__.func_557(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 13:
			if (__LIB_1__.func_337(PLAYER::PLAYER_ID()) == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_556(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_556(iParam1)));
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_556(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_556(iParam1)));
						break;
					}
			}
			break;
		case 50:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(29500) * __LIB_4__.func_555(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(32500) * __LIB_4__.func_555(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(40000) * __LIB_4__.func_555(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(50000) * __LIB_4__.func_555(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14750) * __LIB_4__.func_555(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16250) * __LIB_4__.func_555(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_555(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(25000) * __LIB_4__.func_555(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(650) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19175) * __LIB_4__.func_555(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21125) * __LIB_4__.func_555(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(26000) * __LIB_4__.func_555(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(30000) * __LIB_4__.func_555(iParam1)));
						break;
				}
			}
			else if ((((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 4) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_555(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_555(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8000) * __LIB_4__.func_555(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_555(iParam1)));
						break;
					}
			}
			break;
		case 23:
			if (Global_1585307 == 31)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return Global_262145.f_24863 /* Tunable: 1484828918 */;
						break;
					case 2:
						return Global_262145.f_24862 /* Tunable: -1503409126 */;
						break;
					case 29:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 30:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 31:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 32:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 33:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 34:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 35:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 36:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 37:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 38:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 39:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 40:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 1:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1340) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1650) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3650) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4100) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4550) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5350) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5700) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6400) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6750) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7100) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7450) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7800) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8500) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8850) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 25:
			if (Global_1585307 == 31)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_555(iParam1)));
						break;
					case 1:
						return Global_262145.f_24863 /* Tunable: 1484828918 */;
						break;
					case 2:
						return Global_262145.f_24862 /* Tunable: -1503409126 */;
						break;
					case 29:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 30:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 31:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 32:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 33:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 34:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 35:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 36:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 37:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 38:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 39:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
					case 40:
						return Global_262145.f_24864 /* Tunable: 1522530733 */;
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 1:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1340) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1650) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3650) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4100) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4550) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5350) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5700) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6400) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6750) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7100) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7450) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7800) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8500) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8850) * __LIB_4__.func_554(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 27:
			iVar2 = iParam1;
			switch (iVar2)
			{
				case 0:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_553(0)));
					break;
				case 1:
					return Global_262145.f_8280 /* Tunable: VEHICLEKIT_INDEPENDENCEDAY_HORN_1 */;
					break;
				case 2:
					return Global_262145.f_8281 /* Tunable: VEHICLEKIT_INDEPENDENCEDAY_HORN_2 */;
					break;
				case 3:
					return Global_262145.f_8282 /* Tunable: VEHICLEKIT_INDEPENDENCEDAY_HORN_3 */;
					break;
				case 4:
					return Global_262145.f_8283 /* Tunable: VEHICLEKIT_INDEPENDENCEDAY_HORN_4 */;
					break;
				case 5:
					return Global_262145.f_8121 /* Tunable: DLC_HIPSTER_CAR_MOD_JAZZ_HORN_1 */;
					break;
				case 6:
					return Global_262145.f_8122 /* Tunable: DLC_HIPSTER_CAR_MOD_JAZZ_HORN_2 */;
					break;
				case 7:
					return Global_262145.f_8123 /* Tunable: DLC_HIPSTER_CAR_MOD_JAZZ_HORN_3 */;
					break;
				case 8:
					return Global_262145.f_8124 /* Tunable: DLC_HIPSTER_CAR_MOD_JAZZ_HORN_4 */;
					break;
				case 9:
					return Global_262145.f_7681 /* Tunable: HORN_CNOTE_C0 */;
					break;
				case 10:
					return Global_262145.f_7682 /* Tunable: HORN_CNOTE_D0 */;
					break;
				case 11:
					return Global_262145.f_7683 /* Tunable: HORN_CNOTE_E0 */;
					break;
				case 12:
					return Global_262145.f_7684 /* Tunable: HORN_CNOTE_F0 */;
					break;
				case 13:
					return Global_262145.f_7685 /* Tunable: HORN_CNOTE_G0 */;
					break;
				case 14:
					return Global_262145.f_7686 /* Tunable: HORN_CNOTE_A0 */;
					break;
				case 15:
					return Global_262145.f_7687 /* Tunable: HORN_CNOTE_B0 */;
					break;
				case 16:
					return Global_262145.f_7688 /* Tunable: HORN_CNOTE_C1 */;
					break;
				case 17:
					return Global_262145.f_7617 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_1 */;
					break;
				case 18:
					return Global_262145.f_7618 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_2 */;
					break;
				case 19:
					return Global_262145.f_7619 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_3 */;
					break;
				case 20:
					return Global_262145.f_7620 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_4 */;
					break;
				case 21:
					return Global_262145.f_7621 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_5 */;
					break;
				case 22:
					return Global_262145.f_7622 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_6 */;
					break;
				case 23:
					return Global_262145.f_7623 /* Tunable: DLC_CAR_MODS_CLASSICAL_HORN_7 */;
					break;
				case 24:
					return Global_262145.f_10654 /* Tunable: DLC_CAR_MODS_LUXE_HORN_1 */;
					break;
				case 25:
					return Global_262145.f_10655 /* Tunable: DLC_CAR_MODS_LUXE_HORN_2 */;
					break;
				case 26:
					return Global_262145.f_10656 /* Tunable: DLC_CAR_MODS_LUXE_HORN_3 */;
					break;
				case 30:
					return Global_262145.f_12346 /* Tunable: CAR_MODS_SAN_ANDREAS_LOOP */;
					break;
				case 31:
					return Global_262145.f_12347 /* Tunable: CAR_MODS_LIBERTY_CITY_LOOP */;
					break;
				case 34:
					return Global_262145.f_12558 /* Tunable: HALLOWEEN_2015_HALLOWEEN_LOOP_1 */;
					break;
				case 35:
					return Global_262145.f_12559 /* Tunable: HALLOWEEN_2015_HALLOWEEN_LOOP_2 */;
					break;
				case 38:
					return Global_262145.f_12585;
					break;
				case 39:
					return Global_262145.f_12586;
					break;
				case 40:
					return Global_262145.f_12587;
					break;
				case 44:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_553(44)));
					break;
				case 45:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_553(45)));
					break;
				case 46:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_553(46)));
					break;
				case 47:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_553(47)));
					break;
				case 48:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12500) * __LIB_4__.func_553(48)));
					break;
				case 49:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15000) * __LIB_4__.func_553(49)));
					break;
				case 50:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_553(50)));
					break;
				case 51:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(25000) * __LIB_4__.func_553(51)));
					break;
				case 52:
					return Global_262145.f_9228 /* Tunable: CAR_MODS_HORN_SAD_TROMBONE */;
					break;
				case 53:
					return Global_262145.f_26656 /* Tunable: AW_SALE_PRICE_MODS_AIR_HORN_1 */;
					break;
				case 54:
					return Global_262145.f_26657 /* Tunable: AW_SALE_PRICE_MODS_AIR_HORN_2 */;
					break;
				case 55:
					return Global_262145.f_26658 /* Tunable: AW_SALE_PRICE_MODS_AIR_HORN_3 */;
					break;
			}
			break;
		case 29:
		case 28:
			if (((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39) || (iParam1 > 1 && iParam0 == 29))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_552(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7500) * __LIB_4__.func_552(iParam1)));
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26643 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_WHITE */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26643 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_WHITE */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26644 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_BLUE */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26644 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_BLUE */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26645 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_ELECTIC_BLUE */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26645 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_ELECTIC_BLUE */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26646 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_MINT_GREEN */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26646 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_MINT_GREEN */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26647 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_LIME_GREEN */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26647 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_LIME_GREEN */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26648 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_YELLOW */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26648 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_YELLOW */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 8:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26649 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_GOLDEN_SHOWER */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26649 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_GOLDEN_SHOWER */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 9:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26650 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_ORANGE */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26650 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_ORANGE */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 10:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26651 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_RED */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26651 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_RED */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 11:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26652 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_PONY_PINK */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26652 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_PONY_PINK */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 12:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26653 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_HOT_PINK */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26653 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_HOT_PINK */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 13:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26654 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_PURPLE */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26654 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_PURPLE */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					case 14:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26655 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_BLACKLIGHT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_552(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26655 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_BLACKLIGHT */) * __LIB_4__.func_552(iParam1)));
						}
						break;
					default:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26655 /* Tunable: AW_SALE_PRICE_MODS_VEHICLE_HEADLIGHTS_BLACKLIGHT */) * __LIB_4__.func_552(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1 || Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(400) * __LIB_4__.func_552(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_552(iParam1)));
						break;
					default:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_552(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_552(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_552(iParam1)));
						break;
					default:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_552(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(100) * __LIB_4__.func_552(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_552(iParam1)));
						break;
					default:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_552(iParam1)));
						break;
					}
			}
			break;
		case 30:
			if (iParam2 == 0)
			{
				switch (iParam1)
				{
					case 0:
						return 100;
						break;
					case 1:
						return Global_262145.f_9207 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_FRONT */;
						break;
					case 2:
						return Global_262145.f_9208 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_BACK */;
						break;
					case 3:
						return Global_262145.f_9209 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_SIDES */;
						break;
					case 4:
						return Global_262145.f_9210 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_FRONT_AND_BACK */;
						break;
					case 5:
						return Global_262145.f_9211 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_FRONT_AND_SIDES */;
						break;
					case 6:
						return Global_262145.f_9212 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_BACK_AND_SIDES */;
						break;
					case 7:
						return Global_262145.f_9213 /* Tunable: CAR_MODS_NEON_LIGHTS_SET_UP_FRONT_BACK_AND_SIDES */;
						break;
				}
			}
			else if (iParam2 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return Global_262145.f_9214 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_WHITE */;
						break;
					case 1:
						return Global_262145.f_9215 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_BLUE */;
						break;
					case 2:
						return Global_262145.f_9216 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_ECLECTIC_BLUE */;
						break;
					case 3:
						return Global_262145.f_9217 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_MINT_GREEN */;
						break;
					case 4:
						return Global_262145.f_9218 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_LIME_GREEN */;
						break;
					case 5:
						return Global_262145.f_9219 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_YELLOW */;
						break;
					case 6:
						return Global_262145.f_9220 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_GOLDEN_SHOWER */;
						break;
					case 7:
						return Global_262145.f_9221 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_ORANGE */;
						break;
					case 8:
						return Global_262145.f_9222 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_RED */;
						break;
					case 9:
						return Global_262145.f_9223 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_PONY_PINK */;
						break;
					case 10:
						return Global_262145.f_9224 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_HOT_PINK */;
						break;
					case 11:
						return Global_262145.f_9225 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_PURPLE */;
						break;
					case 12:
						return Global_262145.f_9226 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_BLACKLIGHT */;
						break;
					case 13:
						return Global_262145.f_9227 /* Tunable: CAR_MODS_NEON_LIGHTS_COLOR_CREW */;
						break;
					}
			}
			break;
	}
	switch (iParam0)
	{
		case 33:
			switch (iParam1)
			{
				case 0:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_551(iParam1)));
					break;
				case 1:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_551(iParam1)));
					break;
				case 2:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_551(iParam1)));
					break;
				case 3:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_551(iParam1)));
					break;
				case 4:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_551(iParam1)));
					break;
				case 10:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_551(iParam1)));
					break;
				default:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_551(99)));
					break;
			}
			break;
		case 40:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("avenger")))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(0) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21456 /* Tunable: -1303982095 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21457 /* Tunable: -131423902 */) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cerberus")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cerberus2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cerberus3")))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26682 /* Tunable: -1209483768 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26683 /* Tunable: 530512648 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
							break;
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26683 /* Tunable: 530512648 */) * __LIB_4__.func_550(iParam1)));
							break;
						}
						break;
				}
			}
			else if (((((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("issi4")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("issi5"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("issi6"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("imperator"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("imperator2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("imperator3")))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26680 /* Tunable: AW_SALE_PRICE_MODS_NO_GRENADE_LAUNCHER */) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26681 /* Tunable: AW_SALE_PRICE_MODS_GRENADE_LAUNCHER_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
							break;
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26681 /* Tunable: AW_SALE_PRICE_MODS_GRENADE_LAUNCHER_1 */) * __LIB_4__.func_550(iParam1)));
							break;
						}
						break;
				}
			}
			else if (Global_1585307 == 31)
			{
				if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("oppressor2")))
				{
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_550(iParam1)));
							break;
						case 1:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24860 /* Tunable: -1535970684 */) * __LIB_4__.func_550(iParam1)));
							break;
						case 2:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24861 /* Tunable: 2022636016 */) * __LIB_4__.func_550(iParam1)));
							break;
					}
				}
				else
				{
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(750) * __LIB_4__.func_550(iParam1)));
							break;
						case 1:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21434 /* Tunable: GR_UPGRADE_OPPRESSOR_ROCKETS */) * __LIB_4__.func_550(iParam1)));
							break;
						}
				}
			}
			else if (Global_1585307 == 30)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(55000) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21424 /* Tunable: GR_UPGRADE_DUNE3_40MM_GRENADE_LAUNCHER */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21425 /* Tunable: GR_UPGRADE_DUNE3_762MM_MINIGUN */) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 29)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(78500) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21443 /* Tunable: GR_UPGRADE_TRAILERSMALL2_MISSILE_BARRAGE */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21442 /* Tunable: GR_UPGRADE_TRAILERSMALL2_DUAL_20MM_FLAK_CANNONS */) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 32)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(0) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21454 /* Tunable: GR_UPGRADE_TRAILERLARGE_FRONT_TURRET */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21455 /* Tunable: -2114768808 */) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else if (iVar1 == joaat("tornado5"))
			{
				return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)) * Global_262145.f_15060 /* Tunable: CAR_MODS_ROOF_LIVERY_DESIGN_MULTIPLIER */));
			}
			else if (iVar1 == joaat("dukes") || iVar1 == joaat("dukes3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return Global_262145.f_9340 /* Tunable: DUKES_ROOF_MOD_AMERICAN */;
						break;
					case 3:
						return Global_262145.f_9341 /* Tunable: DUKES_ROOF_MOD_ARGENTINIAN */;
						break;
					case 4:
						return Global_262145.f_9342 /* Tunable: DUKES_ROOF_MOD_AUSTRIAN */;
						break;
					case 5:
						return Global_262145.f_9343 /* Tunable: DUKES_ROOF_MOD_AUSTRALIAN */;
						break;
					case 6:
						return Global_262145.f_9344 /* Tunable: DUKES_ROOF_MOD_BELGIAN */;
						break;
					case 7:
						return Global_262145.f_9345 /* Tunable: DUKES_ROOF_MOD_BRAZILIAN */;
						break;
					case 8:
						return Global_262145.f_9346 /* Tunable: DUKES_ROOF_MOD_BRITISH */;
						break;
					case 9:
						return Global_262145.f_9347 /* Tunable: DUKES_ROOF_MOD_CANADIAN */;
						break;
					case 10:
						return Global_262145.f_9348 /* Tunable: DUKES_ROOF_MOD_COLOMBIAN */;
						break;
					case 11:
						return Global_262145.f_9349 /* Tunable: DUKES_ROOF_MOD_ENGLISH */;
						break;
					case 12:
						return Global_262145.f_9350 /* Tunable: DUKES_ROOF_MOD_FRENCH */;
						break;
					case 13:
						return Global_262145.f_9351 /* Tunable: DUKES_ROOF_MOD_GERMAN */;
						break;
					case 14:
						return Global_262145.f_9352 /* Tunable: DUKES_ROOF_MOD_ITALIAN */;
						break;
					case 15:
						return Global_262145.f_9353 /* Tunable: DUKES_ROOF_MOD_IRISH */;
						break;
					case 16:
						return Global_262145.f_9354 /* Tunable: DUKES_ROOF_MOD_JAMAICAN */;
						break;
					case 17:
						return Global_262145.f_9355 /* Tunable: DUKES_ROOF_MOD_JAPANESE */;
						break;
					case 18:
						return Global_262145.f_9356 /* Tunable: DUKES_ROOF_MOD_MEXICAN */;
						break;
					case 19:
						return Global_262145.f_9357 /* Tunable: DUKES_ROOF_MOD_NORWEGIAN */;
						break;
					case 20:
						return Global_262145.f_9358 /* Tunable: DUKES_ROOF_MOD_RUSSIAN */;
						break;
					case 21:
						return Global_262145.f_9359 /* Tunable: DUKES_ROOF_MOD_SCOTTISH */;
						break;
					case 22:
						return Global_262145.f_9360 /* Tunable: DUKES_ROOF_MOD_SPANISH */;
						break;
					case 23:
						return Global_262145.f_9361 /* Tunable: DUKES_ROOF_MOD_SWEDISH */;
						break;
					case 24:
						return Global_262145.f_9362 /* Tunable: DUKES_ROOF_MOD_SWISS */;
						break;
					case 25:
						return Global_262145.f_9363 /* Tunable: DUKES_ROOF_MOD_TURKISH */;
						break;
					case 26:
						return Global_262145.f_9364 /* Tunable: DUKES_ROOF_MOD_WELSH */;
						break;
					default:
						return 2500;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return Global_262145.f_22621 /* Tunable: 1239036430 */;
						break;
				}
			}
			else if (Global_1585307 == 33)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return Global_262145.f_22608 /* Tunable: -1696568434 */;
						break;
					case 2:
						return Global_262145.f_22609 /* Tunable: 749536131 */;
						break;
					case 3:
						return Global_262145.f_22610 /* Tunable: 134351661 */;
						break;
				}
			}
			else if (Global_1585307 == 35)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return Global_262145.f_23948 /* Tunable: -1696074593 */;
						break;
					case 2:
						return Global_262145.f_23949 /* Tunable: -1970187278 */;
						break;
					case 3:
						return Global_262145.f_23950 /* Tunable: -1726025463 */;
						break;
				}
			}
			else if (((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("revolter")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("savestra"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("comet4"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("viseris")))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return Global_262145.f_23954 /* Tunable: 260519437 */;
						break;
				}
			}
			else if (Global_1585307 == 36)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24839 /* Tunable: 323425157 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24840 /* Tunable: 996988714 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24841 /* Tunable: -231316923 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_550(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24845 /* Tunable: 1919138577 */) * __LIB_4__.func_550(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_550(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_550(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(350000) * __LIB_4__.func_550(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(365000) * __LIB_4__.func_550(iParam1)));
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_550(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24159 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_ROOF_1 */;
						}
						else if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
							break;
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_550(iParam1)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1150) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1150) * __LIB_4__.func_550(iParam1)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1600) * __LIB_4__.func_550(iParam1)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1950) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_550(iParam1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1950) * __LIB_4__.func_550(iParam1)));
						}
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(2850) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3950) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5050) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5550) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6350) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6650) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6950) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7250) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7550) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7850) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					default:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8150) * __LIB_4__.func_550(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 44:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 34) || Global_1585307 == 35) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_548(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24161 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_SKIRT_1 */;
						}
						else
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_548(iParam1)) * fVar0));
						}
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(10500) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17400) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18300) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19000) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20425) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21025) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21475) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21925) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(22375) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(22825) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(23275) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(23725) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24175) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 23:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24625) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
					case 24:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24625) * __LIB_4__.func_548(iParam1)) * fVar0));
						break;
				}
			}
			else if (Global_1585307 == 1 || Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_548(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_548(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_548(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_548(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7800) * __LIB_4__.func_548(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8000) * __LIB_4__.func_548(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8300) * __LIB_4__.func_548(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8500) * __LIB_4__.func_548(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8550) * __LIB_4__.func_548(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8700) * __LIB_4__.func_548(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8800) * __LIB_4__.func_548(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9500) * __LIB_4__.func_548(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11075) * __LIB_4__.func_548(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13525) * __LIB_4__.func_548(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16850) * __LIB_4__.func_548(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(21050) * __LIB_4__.func_548(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_548(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(830) * __LIB_4__.func_548(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_548(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_548(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_548(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_548(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15000) * __LIB_4__.func_548(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15750) * __LIB_4__.func_548(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16200) * __LIB_4__.func_548(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_548(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_548(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18100) * __LIB_4__.func_548(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18325) * __LIB_4__.func_548(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18675) * __LIB_4__.func_548(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19150) * __LIB_4__.func_548(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(19750) * __LIB_4__.func_548(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(400) * __LIB_4__.func_548(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(480) * __LIB_4__.func_548(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(580) * __LIB_4__.func_548(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_548(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_548(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1200) * __LIB_4__.func_548(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1250) * __LIB_4__.func_548(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1330) * __LIB_4__.func_548(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1350) * __LIB_4__.func_548(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1750) * __LIB_4__.func_548(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_548(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2550) * __LIB_4__.func_548(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2625) * __LIB_4__.func_548(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2725) * __LIB_4__.func_548(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2850) * __LIB_4__.func_548(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_548(iParam1)));
						break;
					}
			}
			break;
		case 46:
			if (((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24160 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_SPOILER_1 */;
						}
						else
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7050) * __LIB_4__.func_549(iParam1)) * fVar0));
						}
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(22750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(25250) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(26500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(27750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(29000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 23:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(30250) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 24:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(31500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 25:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(32750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 26:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(34000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 27:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(35250) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 28:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(36500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 29:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(37750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
				}
			}
			else if (Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24846 /* Tunable: 1608011866 */) * __LIB_4__.func_549(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24847 /* Tunable: 1771489579 */) * __LIB_4__.func_549(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(285000) * __LIB_4__.func_549(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(310000) * __LIB_4__.func_549(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(330000) * __LIB_4__.func_549(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1 || Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_549(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1900) * __LIB_4__.func_549(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2600) * __LIB_4__.func_549(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_549(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_549(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4750) * __LIB_4__.func_549(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_549(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5250) * __LIB_4__.func_549(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_549(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_549(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_549(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6250) * __LIB_4__.func_549(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_549(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6750) * __LIB_4__.func_549(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_549(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7250) * __LIB_4__.func_549(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8750) * __LIB_4__.func_549(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10250) * __LIB_4__.func_549(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11750) * __LIB_4__.func_549(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13250) * __LIB_4__.func_549(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(13750) * __LIB_4__.func_549(iParam1)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14250) * __LIB_4__.func_549(iParam1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14750) * __LIB_4__.func_549(iParam1)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15250) * __LIB_4__.func_549(iParam1)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15750) * __LIB_4__.func_549(iParam1)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16250) * __LIB_4__.func_549(iParam1)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16750) * __LIB_4__.func_549(iParam1)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17250) * __LIB_4__.func_549(iParam1)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17750) * __LIB_4__.func_549(iParam1)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18250) * __LIB_4__.func_549(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(550) * __LIB_4__.func_549(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_549(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1050) * __LIB_4__.func_549(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_549(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_549(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2300) * __LIB_4__.func_549(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_549(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3000) * __LIB_4__.func_549(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_549(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4000) * __LIB_4__.func_549(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_549(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_549(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5500) * __LIB_4__.func_549(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_549(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6500) * __LIB_4__.func_549(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7000) * __LIB_4__.func_549(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7750) * __LIB_4__.func_549(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8500) * __LIB_4__.func_549(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(9250) * __LIB_4__.func_549(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_549(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(400) * __LIB_4__.func_549(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(600) * __LIB_4__.func_549(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(800) * __LIB_4__.func_549(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_549(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1200) * __LIB_4__.func_549(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_549(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1600) * __LIB_4__.func_549(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_549(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1800) * __LIB_4__.func_549(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1900) * __LIB_4__.func_549(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_549(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2100) * __LIB_4__.func_549(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_549(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2300) * __LIB_4__.func_549(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2400) * __LIB_4__.func_549(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_549(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2850) * __LIB_4__.func_549(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3200) * __LIB_4__.func_549(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3550) * __LIB_4__.func_549(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_549(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 35)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(700) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return Global_262145.f_23951 /* Tunable: 963810230 */;
						break;
					case 2:
						return Global_262145.f_23952 /* Tunable: 254557994 */;
						break;
					case 3:
						return Global_262145.f_23953 /* Tunable: 469457096 */;
						break;
				}
			}
			else if (Global_1585307 == 36)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24844 /* Tunable: -342504567 */) * __LIB_4__.func_549(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12000) * __LIB_4__.func_549(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_549(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(26000) * __LIB_4__.func_549(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(39500) * __LIB_4__.func_549(iParam1)));
						break;
					}
			}
			break;
		case 47:
			switch (iParam1)
			{
				case 0:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_547(iParam1)));
					break;
				case 1:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_547(iParam1)));
					break;
				case 2:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_547(iParam1)));
					break;
				case 3:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3400) * __LIB_4__.func_547(iParam1)));
					break;
				case 4:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4400) * __LIB_4__.func_547(iParam1)));
					break;
				case 5:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_547(iParam1)));
					break;
			}
			break;
		case 53:
			if ((((((((((((((((Global_1585307 == 3 || Global_1585307 == 27) || Global_1585307 == 26) || Global_1585307 == 7) || Global_1585307 == 5) || Global_1585307 == 10) || Global_1585307 == 29) || Global_1585307 == 30) || Global_1585307 == 31) || Global_1585307 == 32) || Global_1585307 == 33) || Global_1585307 == 35) || Global_1585307 == 34) || Global_1585307 == 36) || Global_1585307 == 37) || Global_1585307 == 38) || Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_546(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(50000) * __LIB_4__.func_546(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 1)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3250) * __LIB_4__.func_546(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(42500) * __LIB_4__.func_546(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 2)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2500) * __LIB_4__.func_546(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(35000) * __LIB_4__.func_546(iParam1)));
						break;
				}
			}
			else if (((Global_1585307 == 0 || Global_1585307 == 28) || Global_1585307 == 6) || Global_1585307 == 11)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_546(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(30000) * __LIB_4__.func_546(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 4)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1000) * __LIB_4__.func_546(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(24000) * __LIB_4__.func_546(iParam1)));
						break;
					}
			}
			break;
		case 58:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_31308 /* Tunable: 615116178 */;
					break;
				case 2:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(25000) * __LIB_4__.func_545(iParam1)));
					break;
				case 1:
					return Global_262145.f_31309 /* Tunable: 1749447388 */;
					break;
				case 10:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200) * __LIB_4__.func_545(iParam1)));
					break;
				case 11:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_545(iParam1)));
					break;
				case 12:
					return Global_262145.f_12687 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_WHITE_LINES */;
					break;
				case 13:
					return Global_262145.f_12688 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_CLASSIC_WHITE_WALL */;
					break;
				case 14:
					return Global_262145.f_12689 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_RETRO_WHITE_WALL */;
					break;
				case 15:
					return Global_262145.f_12690 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_RED_LINES */;
					break;
				case 16:
					return Global_262145.f_12691 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_BLUE_LINES */;
					break;
				case 17:
					return Global_262145.f_12692 /* Tunable: CAR_MODS_LOWRIDER_1_BENNYS_TIRE_DESIGN_ATOMIC */;
					break;
				case 18:
					return 12345;
				case 19:
					return 12345;
				case 29:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_545(iParam1)));
					break;
				case 30:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_545(iParam1)));
					break;
				case 31:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_545(iParam1)));
					break;
				case 32:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(12500) * __LIB_4__.func_545(iParam1)));
					break;
				case 33:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_545(iParam1)));
					break;
				case 34:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15000) * __LIB_4__.func_545(iParam1)));
					break;
				case 35:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_545(iParam1)));
					break;
				case 36:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_545(iParam1)));
					break;
				case 37:
					return Global_262145.f_8125 /* Tunable: DLC_HIPSTER_CAR_MOD_PINK_TIRE_SMOKE */;
					break;
				case 38:
					return Global_262145.f_8126 /* Tunable: DLC_HIPSTER_CAR_MOD_BROWN_TIRE_SMOKE */;
					break;
				case 39:
					return Global_262145.f_8279 /* Tunable: VEHICLEKIT_INDEPENDENCEDAY_PATRIOT_TIRE_SMOKE */;
					break;
				case 40:
					if (__LIB_19__.func_954())
					{
						return 0;
					}
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(25000) * __LIB_4__.func_545(iParam1)));
					break;
			}
			break;
		case 45:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_549(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24160 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_SPOILER_1 */;
						}
						else
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7050) * __LIB_4__.func_549(iParam1)) * fVar0));
						}
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(10000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(13000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(19500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(20500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(21500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(22750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(24000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(25250) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(26500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(27750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(29000) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 23:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(30250) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 24:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(31500) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					case 25:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(32750) * __LIB_4__.func_549(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 56:
			switch (iParam1)
			{
				case 0:
					return 1600;
					break;
				case 1:
					return 1600;
					break;
			}
			break;
		case 57:
			switch (iParam1)
			{
				case 0:
					return 1500;
					break;
				case 1:
					return 800;
					break;
			}
			break;
		case 60:
			switch (iParam1)
			{
				case 0:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(500) * __LIB_4__.func_544(iParam1)));
					break;
				case 1:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_544(iParam1)));
					break;
				case 2:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_544(iParam1)));
					break;
				case 3:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_544(iParam1)));
					break;
				case 4:
					return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6000) * __LIB_4__.func_544(iParam1)));
					break;
				case 5:
					return Global_262145.f_8120 /* Tunable: DLC_HIPSTER_CAR_MOD_PURE_BLACK */;
					break;
			}
			break;
		case 15:
			if (iVar1 == joaat("apc"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21423 /* Tunable: GR_UPGRADE_APC_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (iVar1 == joaat("dune3"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21428 /* Tunable: GR_UPGRADE_DUNE3_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (iVar1 == joaat("halftrack"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21433 /* Tunable: GR_UPGRADE_HALFTRACK_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (iVar1 == joaat("tampa3"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21441 /* Tunable: GR_UPGRADE_TAMPA3_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (iVar1 == joaat("insurgent3"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21448 /* Tunable: GR_UPGRADE_INSURGENT3_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (iVar1 == joaat("technical3"))
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21453 /* Tunable: GR_UPGRADE_TECHNICAL3_MINES */) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (Global_1585307 == 30)
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(99000) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (Global_1585307 == 29)
			{
				switch (iParam1)
				{
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(99000) * __LIB_4__.func_543(1)));
						break;
				}
			}
			else if (Global_1585307 == 33)
			{
				iParam1 = (iParam1 - 21);
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22616 /* Tunable: 764454487 */;
						break;
					case 2:
						return Global_262145.f_22615 /* Tunable: -2014001243 */;
						break;
					case 3:
						return Global_262145.f_22614 /* Tunable: -912835065 */;
						break;
					case 4:
						return Global_262145.f_22617 /* Tunable: 742471171 */;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				iParam1 = (iParam1 - 21);
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22628 /* Tunable: -1150010085 */;
						break;
					case 2:
						return Global_262145.f_22627 /* Tunable: 1975667705 */;
						break;
					case 3:
						return Global_262145.f_22626 /* Tunable: 2031286533 */;
						break;
					case 4:
						return Global_262145.f_22629 /* Tunable: -979574552 */;
						break;
				}
			}
			else if (Global_1585307 == 38)
			{
				if (iParam1 > 20)
				{
					iParam1 = (iParam1 - 21);
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26659 /* Tunable: AW_SALE_PRICE_MODS_NO_MINE */) * __LIB_4__.func_543(0)));
							break;
						case 1:
							if (bParam4)
							{
								return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26660 /* Tunable: AW_SALE_PRICE_MODS_MINE_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_543(1)));
							}
							else
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26660 /* Tunable: AW_SALE_PRICE_MODS_MINE_1 */) * __LIB_4__.func_543(1)));
							}
							break;
						case 2:
							if (bParam4)
							{
								return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26661 /* Tunable: AW_SALE_PRICE_MODS_MINE_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_543(2)));
							}
							else
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26661 /* Tunable: AW_SALE_PRICE_MODS_MINE_2 */) * __LIB_4__.func_543(2)));
							}
							break;
						case 3:
							if (bParam4)
							{
								return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26662 /* Tunable: AW_SALE_PRICE_MODS_MINE_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_543(3)));
							}
							else
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26662 /* Tunable: AW_SALE_PRICE_MODS_MINE_3 */) * __LIB_4__.func_543(3)));
							}
							break;
						case 4:
							if (bParam4)
							{
								return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26663 /* Tunable: AW_SALE_PRICE_MODS_MINE_4 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_543(4)));
							}
							else
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26663 /* Tunable: AW_SALE_PRICE_MODS_MINE_4 */) * __LIB_4__.func_543(4)));
							}
							break;
						case 5:
							if (bParam4)
							{
								return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26664 /* Tunable: AW_SALE_PRICE_MODS_MINE_5 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_543(5)));
							}
							else
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26664 /* Tunable: AW_SALE_PRICE_MODS_MINE_5 */) * __LIB_4__.func_543(5)));
							}
							break;
					}
				}
				else
				{
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
							break;
						case 1:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
							break;
						case 2:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
							break;
						case 3:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
							break;
						case 4:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
							break;
						case 5:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
							break;
						case 6:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
							break;
						case 7:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
							break;
						case 8:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
							break;
						case 9:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
							break;
						case 10:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
							break;
						case 11:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
							break;
						case 12:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
							break;
						case 13:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
							break;
						case 14:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
							break;
						case 15:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
							break;
						case 16:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
							break;
						case 17:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
							break;
						case 18:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
							break;
						case 19:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
							break;
						case 20:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
							break;
						}
				}
			}
			else if (Global_1585307 == 39)
			{
				iParam1 = (iParam1 - 21);
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26717 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_NO_MINE */) * __LIB_4__.func_543(0)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26718 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_KINETIC_MINES */) * __LIB_4__.func_543(1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26719 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_EMP_MINES */) * __LIB_4__.func_543(2)));
						break;
				}
			}
			else if ((__LIB_4__.func_533(Global_1585308) && iVar1 != joaat("fcr2")) && iVar1 != joaat("diablous2"))
			{
				iParam1 = (iParam1 - 21);
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_543(0)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_543(1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_543(2)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_543(3)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_543(4)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_543(5)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_543(5)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_543(6)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_543(7)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_543(8)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_543(9)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_543(10)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_543(11)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_543(12)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_543(13)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_543(14)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_543(15)));
						break;
				}
			}
			else if (Global_1585307 == 35)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 31)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_543(0)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(99000) * __LIB_4__.func_543(1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(120000) * __LIB_4__.func_543(2)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(145000) * __LIB_4__.func_543(3)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(169000) * __LIB_4__.func_543(4)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200000) * __LIB_4__.func_543(5)));
						break;
				}
			}
			else if (Global_1585307 == 36 || Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_543(0)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24843 /* Tunable: -668380586 */) * __LIB_4__.func_543(1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(120000) * __LIB_4__.func_543(2)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(145000) * __LIB_4__.func_543(3)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(169000) * __LIB_4__.func_543(4)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200000) * __LIB_4__.func_543(5)));
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
						break;
					case 21:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_543(0)));
						break;
					case 22:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_543(1)));
						break;
					case 23:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_543(2)));
						break;
					case 24:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_543(3)));
						break;
					case 25:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_543(4)));
						break;
					case 26:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_543(5)));
						break;
					case 27:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_543(5)));
						break;
					case 28:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_543(6)));
						break;
					case 29:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_543(7)));
						break;
					case 30:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_543(8)));
						break;
					case 31:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_543(9)));
						break;
					case 32:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_543(10)));
						break;
					case 33:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_543(11)));
						break;
					case 34:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_543(12)));
						break;
					case 35:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_543(13)));
						break;
					case 36:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_543(14)));
						break;
					case 37:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_543(15)));
						break;
					}
			}
			break;
		case 95:
			if (Global_1585307 == 36 || Global_1585307 == 37)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4500) * __LIB_4__.func_543(0)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_24843 /* Tunable: -668380586 */) * __LIB_4__.func_543(1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(120000) * __LIB_4__.func_543(2)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(145000) * __LIB_4__.func_543(3)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(169000) * __LIB_4__.func_543(4)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(200000) * __LIB_4__.func_543(5)));
						break;
				}
			}
			else if (Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26715 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_NO_BOMB */) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26716 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_REMOTE_BOMB */) * __LIB_4__.func_542(iParam1)));
						break;
				}
			}
			else
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 1:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 18:
			if (iVar1 == joaat("tampa3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_560(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21436 /* Tunable: GR_UPGRADE_TAMPA3_FRONT_MISSILE_LAUNCHERS */) * __LIB_4__.func_560(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 30)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(85000) * __LIB_4__.func_563(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 33)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22612 /* Tunable: -488069750 */;
						break;
					case 2:
						return Global_262145.f_22613 /* Tunable: -476186113 */;
						break;
					case 29:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 30:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 31:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 32:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 33:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 34:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 35:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 36:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 37:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 38:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 39:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
					case 40:
						return Global_262145.f_22618 /* Tunable: 193964753 */;
						break;
				}
			}
			else if (Global_1585307 == 34)
			{
				switch (iParam1)
				{
					case 1:
						return Global_262145.f_22624 /* Tunable: -35648369 */;
						break;
					case 2:
						return Global_262145.f_22625 /* Tunable: 1890870117 */;
						break;
					case 29:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 30:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 31:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 32:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 33:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 34:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 35:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 36:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 37:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 38:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 39:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
					case 40:
						return Global_262145.f_22630 /* Tunable: -2127562694 */;
						break;
				}
			}
			else if ((Global_1585307 == 3 || Global_1585307 == 38) || Global_1585307 == 3)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_563(iParam1)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24156 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_FRONT_BUMPER_1 */;
						}
						else
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_563(iParam1)) * fVar0));
						}
						break;
					case 2:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7400) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 3:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11700) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 4:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 5:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14700) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 6:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14900) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 7:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15100) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 8:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15300) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 9:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 10:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15700) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 11:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(15900) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 12:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16100) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 13:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16300) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 14:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 15:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16700) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 16:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(16900) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 17:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17100) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 18:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17300) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 19:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 20:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17700) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 21:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(17900) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 22:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18100) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					case 23:
						return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(18300) * __LIB_4__.func_563(iParam1)) * fVar0));
						break;
					}
			}
			break;
		case 36:
			if (iVar1 == joaat("tampa3"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_560(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_21437 /* Tunable: GR_UPGRADE_TAMPA3_REAR_FIRING_MORTAR */) * __LIB_4__.func_560(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 30)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3500) * __LIB_4__.func_560(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(92500) * __LIB_4__.func_560(iParam1)));
						break;
				}
			}
			else if (Global_1585307 == 3 || Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2200) * __LIB_4__.func_560(0)));
						break;
					case 1:
						if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("cheburek")))
						{
							return Global_262145.f_24157 /* Tunable: ASSAULT_VEHICLES_MODS_CHEBUREK_CARDBOARD_REAR_BUMPER_1 */;
						}
						else if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(4600) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(1)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4600) * __LIB_4__.func_560(1)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(7400) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(2)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7400) * __LIB_4__.func_560(2)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(11700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(3)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(11700) * __LIB_4__.func_560(3)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14500) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(4)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14500) * __LIB_4__.func_560(4)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14700) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(5)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14700) * __LIB_4__.func_560(5)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(14900) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_560(6)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(14900) * __LIB_4__.func_560(6)));
						}
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15100) * __LIB_4__.func_560(7)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15300) * __LIB_4__.func_560(8)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15500) * __LIB_4__.func_560(9)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15700) * __LIB_4__.func_560(10)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(15900) * __LIB_4__.func_560(11)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16100) * __LIB_4__.func_560(12)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16300) * __LIB_4__.func_560(13)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16500) * __LIB_4__.func_560(14)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16700) * __LIB_4__.func_560(15)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(16900) * __LIB_4__.func_560(16)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17100) * __LIB_4__.func_560(17)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17300) * __LIB_4__.func_560(18)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(17500) * __LIB_4__.func_560(19)));
						break;
					}
			}
			break;
	}
	switch (iParam0)
	{
		case 62:
		case 63:
		case 66:
		case 90:
		case 67:
		case 68:
		case 69:
		case 70:
		case 72:
		case 74:
		case 76:
		case 83:
		case 84:
			return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * fVar0) * __LIB_4__.func_525(iParam1, 1)));
			break;
		case 71:
			return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * fVar0) * __LIB_4__.func_525(iParam1, 1)));
		case 73:
			return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * fVar0) * __LIB_4__.func_525(iParam1, 1)));
			break;
		case 91:
			if (__LIB_1__.func_932(iVar1) || __LIB_4__.func_540(iVar1))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_543(0)));
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_543(1)));
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_543(2)));
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_543(3)));
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_543(4)));
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_543(5)));
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_543(5)));
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_543(6)));
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_543(7)));
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_543(8)));
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_543(9)));
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_543(10)));
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_543(11)));
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_543(12)));
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_543(13)));
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_543(14)));
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_543(15)));
					}
				default:
			}
			return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * fVar0) * __LIB_4__.func_525(iParam1, 1)));
			break;
		case 64:
			if (iVar1 == joaat("kanjo") || __LIB_1__.func_932(iVar1))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_543(0)));
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_543(1)));
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_543(2)));
					default:
				}
			}
			else
			{
				return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * fVar0) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 79:
			if (Global_1585307 == 38 && iVar1 != joaat("greenwood"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26665 /* Tunable: AW_SALE_PRICE_MODS_NO_RAM */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26666 /* Tunable: AW_SALE_PRICE_MODS_RAM_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26666 /* Tunable: AW_SALE_PRICE_MODS_RAM_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26667 /* Tunable: AW_SALE_PRICE_MODS_RAM_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26667 /* Tunable: AW_SALE_PRICE_MODS_RAM_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26668 /* Tunable: AW_SALE_PRICE_MODS_RAM_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26668 /* Tunable: AW_SALE_PRICE_MODS_RAM_3 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26669 /* Tunable: AW_SALE_PRICE_MODS_RAM_4 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26669 /* Tunable: AW_SALE_PRICE_MODS_RAM_4 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26670 /* Tunable: AW_SALE_PRICE_MODS_RAM_5 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26670 /* Tunable: AW_SALE_PRICE_MODS_RAM_5 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26671 /* Tunable: AW_SALE_PRICE_MODS_RAM_6 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26671 /* Tunable: AW_SALE_PRICE_MODS_RAM_6 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26672 /* Tunable: AW_SALE_PRICE_MODS_RAM_7 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26672 /* Tunable: AW_SALE_PRICE_MODS_RAM_7 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 81:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26673 /* Tunable: AW_SALE_PRICE_MODS_NO_BLADES */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26674 /* Tunable: AW_SALE_PRICE_MODS_BLADES_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							if (__LIB_0__.func_596(iVar1))
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_31997 /* Tunable: FIXER_MODS_REMOTE_CONTROL_UNIT */) * __LIB_4__.func_525(iParam1, 0)));
							}
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26674 /* Tunable: AW_SALE_PRICE_MODS_BLADES_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26675 /* Tunable: AW_SALE_PRICE_MODS_BLADES_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							if (__LIB_0__.func_596(iVar1))
							{
								return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_31996 /* Tunable: FIXER_MODS_MISSILE_LOCKON_JAMMER */) * __LIB_4__.func_525(iParam1, 0)));
							}
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26675 /* Tunable: AW_SALE_PRICE_MODS_BLADES_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26676 /* Tunable: AW_SALE_PRICE_MODS_BLADES_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26676 /* Tunable: AW_SALE_PRICE_MODS_BLADES_3 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 82:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26677 /* Tunable: AW_SALE_PRICE_MODS_NO_GUNS */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26678 /* Tunable: AW_SALE_PRICE_MODS_GUNS_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26678 /* Tunable: AW_SALE_PRICE_MODS_GUNS_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26679 /* Tunable: AW_SALE_PRICE_MODS_GUNS_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26679 /* Tunable: AW_SALE_PRICE_MODS_GUNS_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 80:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26695 /* Tunable: AW_SALE_PRICE_MODS_NO_SPIKES */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26696 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26696 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26697 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26697 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26698 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26698 /* Tunable: AW_SALE_PRICE_MODS_SPIKES_3 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 77:
			if (Global_1585307 == 38 && iVar1 != joaat("greenwood"))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26710 /* Tunable: AW_SALE_PRICE_MODS_NO_BOOST */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26711 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_20_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26711 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_20_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26712 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_60_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26712 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_60_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26713 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_100_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26713 /* Tunable: AW_SALE_PRICE_MODS_BOOST_UPGRADE_100_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26714 /* Tunable: AW_SALE_PRICE_MODS_SHUNT_BOOST */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26714 /* Tunable: AW_SALE_PRICE_MODS_SHUNT_BOOST */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 78:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26706 /* Tunable: AW_SALE_PRICE_MODS_NO_JUMP */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26707 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_20_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26707 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_20_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26708 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_60_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26708 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_60_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26709 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_100_PERCENT */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26709 /* Tunable: AW_SALE_PRICE_MODS_JUMP_UPGRADE_100_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else if (Global_1585307 == 39)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26720 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_NO_JUMP */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26721 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_JUMP_UPGRADE_20_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26722 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_JUMP_UPGRADE_60_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26723 /* Tunable: AW_SALE_PRICE_MODS_RC_BANDITO_JUMP_UPGRADE_100_PERCENT */) * __LIB_4__.func_525(iParam1, 0)));
						break;
				}
			}
			else
			{
				return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, 0)) * __LIB_4__.func_525(iParam1, 1)));
			}
			break;
		case 65:
			if (Global_1585307 == 38)
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26684 /* Tunable: AW_SALE_PRICE_MODS_NO_ROLL_CAGE */) * __LIB_4__.func_525(iParam1, 0)));
						break;
					case 1:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26685 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_1 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26685 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_1 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 2:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26686 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_2 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26686 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_2 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 3:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26687 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_3 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26687 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_3 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 4:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26688 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_4 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26688 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_4 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 5:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26689 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_5 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26689 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_5 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 6:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26690 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_6 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26690 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_6 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 7:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26691 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_7 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26691 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_7 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 8:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26692 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_8 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26692 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_8 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 9:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26693 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_9 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26693 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_9 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
					case 10:
						if (bParam4)
						{
							return SYSTEM::FLOOR(((SYSTEM::TO_FLOAT(Global_262145.f_26694 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_10 */) * Global_262145.f_26642 /* Tunable: AW_VEHICLE_MODS_BUY_IT_NOW_PRICE_MULTIPLIER */) * __LIB_4__.func_525(iParam1, 0)));
						}
						else
						{
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_26694 /* Tunable: AW_SALE_PRICE_MODS_ROLL_CAGE_10 */) * __LIB_4__.func_525(iParam1, 0)));
						}
						break;
				}
			}
			else if (iVar1 == joaat("gauntlet5") || __LIB_1__.func_932(iVar1))
			{
				switch (iParam1)
				{
					case 0:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(300) * __LIB_4__.func_542(iParam1)));
						break;
					case 1:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(900) * __LIB_4__.func_542(iParam1)));
						break;
					case 2:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1500) * __LIB_4__.func_542(iParam1)));
						break;
					case 3:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(1700) * __LIB_4__.func_542(iParam1)));
						break;
					case 4:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2000) * __LIB_4__.func_542(iParam1)));
						break;
					case 5:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(2750) * __LIB_4__.func_542(iParam1)));
						break;
					case 6:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3300) * __LIB_4__.func_542(iParam1)));
						break;
					case 7:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(3900) * __LIB_4__.func_542(iParam1)));
						break;
					case 8:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(4350) * __LIB_4__.func_542(iParam1)));
						break;
					case 9:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5000) * __LIB_4__.func_542(iParam1)));
						break;
					case 10:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5150) * __LIB_4__.func_542(iParam1)));
						break;
					case 11:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5300) * __LIB_4__.func_542(iParam1)));
						break;
					case 12:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5450) * __LIB_4__.func_542(iParam1)));
						break;
					case 13:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5600) * __LIB_4__.func_542(iParam1)));
						break;
					case 14:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5750) * __LIB_4__.func_542(iParam1)));
						break;
					case 15:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(5900) * __LIB_4__.func_542(iParam1)));
						break;
					case 16:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6050) * __LIB_4__.func_542(iParam1)));
						break;
					case 17:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(6600) * __LIB_4__.func_542(iParam1)));
						break;
					case 18:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7150) * __LIB_4__.func_542(iParam1)));
						break;
					case 19:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(7700) * __LIB_4__.func_542(iParam1)));
						break;
					case 20:
						return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(8250) * __LIB_4__.func_542(iParam1)));
						break;
				}
			}
			else
			{
				if (iParam1 == 0)
				{
					return 0;
				}
				if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam3))
				{
					switch (MISC::GET_HASH_KEY(sParam3))
					{
						case joaat("BOBBLE_BRD1"):
							return Global_262145.f_12560 /* Tunable: HALLOWEEN_2015_BRUNETTE_CORPSE_BRIDE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BRD2"):
							return Global_262145.f_12561 /* Tunable: HALLOWEEN_2015_WHITE_CORPSE_BRIDE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BRD3"):
							return Global_262145.f_12562 /* Tunable: HALLOWEEN_2015_PINK_CORPSE_BRIDE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_SLH1"):
							return Global_262145.f_12563 /* Tunable: HALLOWEEN_2015_WHITE_MASK_SLASHER_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_SLH2"):
							return Global_262145.f_12564 /* Tunable: HALLOWEEN_2015_RED_MASK_SLASHER_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_SLH3"):
							return Global_262145.f_12565 /* Tunable: HALLOWEEN_2015_YELLOW_MASK_SLASHER_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_ZOM1"):
							return Global_262145.f_12566 /* Tunable: HALLOWEEN_2015_BLUE_ZOMBIE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_ZOM2"):
							return Global_262145.f_12567 /* Tunable: HALLOWEEN_2015_GREEN_ZOMBIE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_ZOM3"):
							return Global_262145.f_12568 /* Tunable: HALLOWEEN_2015_PALE_ZOMBIE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_GC1"):
							return Global_262145.f_12569 /* Tunable: HALLOWEEN_2015_POSSESSED_URCHIN_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_GC2"):
							return Global_262145.f_12570 /* Tunable: HALLOWEEN_2015_DEMONIC_URCHIN_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_GC3"):
							return Global_262145.f_12571 /* Tunable: HALLOWEEN_2015_GRUESOME_URCHIN_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FRNK1"):
							return Global_262145.f_12572 /* Tunable: HALLOWEEN_2015_TUXEDO_FRANK_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FRNK2"):
							return Global_262145.f_12573 /* Tunable: HALLOWEEN_2015_PURPLE_SUIT_FRANK_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FRNK3"):
							return Global_262145.f_12574 /* Tunable: HALLOWEEN_2015_STRIPED_SUIT_FRANK_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MUM1"):
							return Global_262145.f_12575 /* Tunable: HALLOWEEN_2015_BLACK_MUMMY_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MUM2"):
							return Global_262145.f_12576 /* Tunable: HALLOWEEN_2015_WHITE_MUMMY_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MUM3"):
							return Global_262145.f_12577 /* Tunable: HALLOWEEN_2015_BROWN_MUMMY_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_WOLF1"):
							return Global_262145.f_12578 /* Tunable: HALLOWEEN_2015_PALE_WEREWOLF_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_WOLF2"):
							return Global_262145.f_12579 /* Tunable: HALLOWEEN_2015_DARK_WEREWOLF_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_WOLF3"):
							return Global_262145.f_12580 /* Tunable: HALLOWEEN_2015_GREY_WEREWOLF_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_VAMP1"):
							return Global_262145.f_12581 /* Tunable: HALLOWEEN_2015_FLESHY_VAMPIRE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_VAMP2"):
							return Global_262145.f_12582 /* Tunable: HALLOWEEN_2015_BLOODY_VAMPIRE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_VAMP3"):
							return Global_262145.f_12583 /* Tunable: HALLOWEEN_2015_BANDW_VAMPIRE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MAR1"):
							return Global_262145.f_12348 /* Tunable: CAR_MODS_BLACK_MARIACHI_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MAR2"):
							return Global_262145.f_12349 /* Tunable: CAR_MODS_GREEN_MARIACHI_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_MAR3"):
							return Global_262145.f_12350 /* Tunable: CAR_MODS_BLUE_MARIACHI_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BAT1"):
							return Global_262145.f_12351 /* Tunable: CAR_MODS_BOARS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BAT2"):
							return Global_262145.f_12352 /* Tunable: CAR_MODS_CORKERS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BAT3"):
							return Global_262145.f_12353 /* Tunable: CAR_MODS_FEUD_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BSK1"):
							return Global_262145.f_12354 /* Tunable: CAR_MODS_PANIC_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BSK2"):
							return Global_262145.f_12355 /* Tunable: CAR_MODS_SALAMANDERS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BSK3"):
							return Global_262145.f_12356 /* Tunable: CAR_MODS_LIBERTY_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_BSK4"):
							return Global_262145.f_12357 /* Tunable: CAR_MODS_LS_SHRIMPS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_OG1"):
							return Global_262145.f_12361 /* Tunable: CAR_MODS_MAGNETICS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_OG2"):
							return Global_262145.f_12362 /* Tunable: CAR_MODS_LSC_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_OG3"):
							return Global_262145.f_12363 /* Tunable: CAR_MODS_OG_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FOOT1"):
							return Global_262145.f_12358 /* Tunable: CAR_MODS_LC_WRATH_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FOOT2"):
							return Global_262145.f_12359 /* Tunable: CAR_MODS_POUNDERS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_FOOT3"):
							return Global_262145.f_12360 /* Tunable: CAR_MODS_BOOKWORMS_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_IMP1"):
							return Global_262145.f_12364 /* Tunable: CAR_MODS_IMPOTENT_RAGE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_IMP2"):
							return Global_262145.f_12365 /* Tunable: CAR_MODS_VINTAGE_IMPOTENT_RAGE_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_POGO1"):
							return Global_262145.f_12366 /* Tunable: CAR_MODS_WHITE_POGO_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_POGO2"):
							return Global_262145.f_12367 /* Tunable: CAR_MODS_RED_POGO_BOBBLEHEAD */;
							break;
						case joaat("BOBBLE_REAP"):
							return Global_262145.f_12368 /* Tunable: CAR_MODS_GRIM_REAPER_BOBBLEHEAD */;
							break;
						default:
							switch (iParam1)
							{
								case 1:
									return Global_262145.f_12348 /* Tunable: CAR_MODS_BLACK_MARIACHI_BOBBLEHEAD */;
									break;
								case 2:
									return Global_262145.f_12349 /* Tunable: CAR_MODS_GREEN_MARIACHI_BOBBLEHEAD */;
									break;
								case 3:
									return Global_262145.f_12350 /* Tunable: CAR_MODS_BLUE_MARIACHI_BOBBLEHEAD */;
									break;
								case 4:
									return Global_262145.f_12351 /* Tunable: CAR_MODS_BOARS_BOBBLEHEAD */;
									break;
								case 5:
									return Global_262145.f_12352 /* Tunable: CAR_MODS_CORKERS_BOBBLEHEAD */;
									break;
								case 6:
									return Global_262145.f_12353 /* Tunable: CAR_MODS_FEUD_BOBBLEHEAD */;
									break;
								case 7:
									return Global_262145.f_12354 /* Tunable: CAR_MODS_PANIC_BOBBLEHEAD */;
									break;
							}
							break;
						}
				}
				return 12345;
			}
			break;
		case 75:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_12381 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_HYDRAULICS */;
					break;
				case 1:
					return Global_262145.f_12700 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_1ST_MOD */;
					break;
				case 2:
					return Global_262145.f_12701 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_2ND_MOD */;
					break;
				case 3:
					return Global_262145.f_12702 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_3RD_MOD */;
					break;
				case 4:
					return Global_262145.f_12703 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_4TH_MOD */;
					break;
				case 5:
					return Global_262145.f_12704 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_5TH_MOD */;
					break;
				case 6:
					return Global_262145.f_15061 /* Tunable: CAR_MODS_SUPERMOD_SLOT_HYDRAULICS_6TH_MOD */;
					break;
				default:
					return Global_262145.f_12704 /* Tunable: SUPERMOD_SLOT_HYDRAULICS_5TH_MOD */;
					break;
			}
			break;
		case 85:
			switch (iVar1)
			{
				case joaat("trailerlarge"):
					switch (iParam1)
					{
						case 0:
							return 0;
							break;
						case 1:
							return Global_262145.f_21771 /* Tunable: GR_MOC_LIVERIES_STARS_AND_STRIPES_PRICE */;
							break;
						case 2:
							return Global_262145.f_21772 /* Tunable: GR_MOC_LIVERIES_EAGLE_CLAW_PRICE */;
							break;
						case 3:
							return Global_262145.f_21773 /* Tunable: GR_MOC_LIVERIES_EAGLE_CLAW_FLAG_PRICE */;
							break;
						case 4:
							return Global_262145.f_21774 /* Tunable: GR_MOC_LIVERIES_FIGHTING_FREEDOM_PRICE */;
							break;
					}
					break;
				case joaat("lurcher"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_12698 /* Tunable: CAR_MODS_HALLOWEEN_2015_LURCHER_LIVERY_HANGMANS_GRAVE */;
							break;
						case 2:
							return Global_262145.f_12697 /* Tunable: CAR_MODS_HALLOWEEN_2015_LURCHER_LIVERY_THE_RIPPER */;
							break;
					}
					break;
				case joaat("btype2"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_12696 /* Tunable: CAR_MODS_HALLOWEEN_2015_FRANKEN_STANGE_LIVERY_MIDNIGHT_POTION */;
							break;
						case 2:
							return Global_262145.f_12694 /* Tunable: CAR_MODS_HALLOWEEN_2015_FRANKEN_STANGE_LIVERY_HELLS_FURNACE */;
							break;
						case 3:
							return Global_262145.f_12693 /* Tunable: CAR_MODS_HALLOWEEN_2015_FRANKEN_STANGE_LIVERY_BLAZING_DEATH */;
							break;
						case 4:
							return Global_262145.f_12695 /* Tunable: CAR_MODS_HALLOWEEN_2015_FRANKEN_STANGE_LIVERY_SPIDER_TRAP */;
							break;
					}
					break;
				case joaat("faction2"):
					if (iParam1 == 10)
					{
						return Global_262145.f_12705 /* Tunable: LOWRIDER_FACTION2_LIVERY_SPECIAL10 */;
					}
					break;
				case joaat("omnis"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17423 /* Tunable: STUNT_LIVERY_1_OBEY_OMNIS */;
							break;
						case 2:
							return Global_262145.f_17436 /* Tunable: STUNT_LIVERY_2_OBEY_OMNIS */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("bf400"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17429 /* Tunable: STUNT_LIVERY_1_NAGASAKI_BF400 */;
							break;
						case 2:
							return Global_262145.f_17442 /* Tunable: STUNT_LIVERY_2_NAGASAKI_BF400 */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("tropos"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17424 /* Tunable: STUNT_LIVERY_1_LAMPADATI_TROPOS_RALLYE */;
							break;
						case 2:
							return Global_262145.f_17437 /* Tunable: STUNT_LIVERY_2_LAMPADATI_TROPOS_RALLYE */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("brioso"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17425 /* Tunable: STUNT_LIVERY_1_GROTTI_BRIOSO_RA */;
							break;
						case 2:
							return Global_262145.f_17438 /* Tunable: STUNT_LIVERY_2_GROTTI_BRIOSO_RA */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("trophytruck"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17426 /* Tunable: STUNT_LIVERY_1_VAPID_TROPHY_TRUCK */;
							break;
						case 2:
							return Global_262145.f_17439 /* Tunable: STUNT_LIVERY_2_VAPID_TROPHY_TRUCK */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("trophytruck2"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17427 /* Tunable: STUNT_LIVERY_1_VAPID_DESERT_RAID */;
							break;
						case 2:
							return Global_262145.f_17440 /* Tunable: STUNT_LIVERY_2_VAPID_DESERT_RAID */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("cliffhanger"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17428 /* Tunable: STUNT_LIVERY_1_WESTERN_CLIFFHANGER */;
							break;
						case 2:
							return Global_262145.f_17441 /* Tunable: STUNT_LIVERY_2_WESTERN_CLIFFHANGER */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("tampa2"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17421 /* Tunable: STUNT_LIVERY_1_DECALSSE_DRIFT_TAMPA */;
							break;
						case 2:
							return Global_262145.f_17434 /* Tunable: STUNT_LIVERY_2_DECALSSE_DRIFT_TAMPA */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("gargoyle"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17431 /* Tunable: STUNT_LIVERY_1_WESTERN_GARGOYLE */;
							break;
						case 2:
							return Global_262145.f_17444 /* Tunable: STUNT_LIVERY_2_WESTERN_GARGOYLE */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("le7b"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17422 /* Tunable: STUNT_LIVERY_1_ANNIS_RE7B */;
						case 2:
							return Global_262145.f_17435 /* Tunable: STUNT_LIVERY_2_ANNIS_RE7B */;
						default:
							return 999;
							break;
					}
					break;
				case joaat("tyrus"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17420 /* Tunable: STUNT_LIVERY_1_PROGEN_TYRUS */;
							break;
						case 2:
							return Global_262145.f_17433 /* Tunable: STUNT_LIVERY_2_PROGEN_TYRUS */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("lynx"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17430 /* Tunable: STUNT_LIVERY_1_OCELOT_LYNX */;
							break;
						case 2:
							return Global_262145.f_17443 /* Tunable: STUNT_LIVERY_2_OCELOT_LYNX */;
							break;
						default:
							return 999;
							break;
					}
					break;
				case joaat("sheava"):
					switch (iParam1)
					{
						case 0:
							return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(Global_262145.f_12391 /* Tunable: CAR_MODS_SUPERMOD_SLOT_STOCK_LIVERY */) * __LIB_4__.func_525(iParam1, 1)));
							break;
						case 1:
							return Global_262145.f_17419 /* Tunable: STUNT_LIVERY_1_EMPEROR_SHEAVA */;
							break;
						case 2:
							return Global_262145.f_17432 /* Tunable: STUNT_LIVERY_2_EMPEROR_SHEAVA */;
							break;
						default:
							return 999;
							break;
					}
					break;
			}
			return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(__LIB_4__.func_541(iParam0, bParam4)) * __LIB_4__.func_525(iParam1, 1)));
			break;
		case 61:
		case 103:
			if (STREAMING::IS_MODEL_VALID(iVar1))
			{
				if (__LIB_6__.func_777(iVar1, 0))
				{
					return __LIB_1__.func_579(func_2777(iVar1, iParam1));
				}
			}
			break;
	}
	return 700;
}

int func_33(int iParam0)//Position - 0xF751D
{
	int iVar0;
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iVar0)
	{
		case joaat("btype2"):
		case joaat("lurcher"):
		case joaat("omnis"):
		case joaat("bf400"):
		case joaat("buffalo3"):
		case joaat("dominator2"):
		case joaat("gauntlet2"):
		case joaat("stalion2"):
		case joaat("tropos"):
		case joaat("brioso"):
		case joaat("trophytruck"):
		case joaat("trophytruck2"):
		case joaat("cliffhanger"):
		case joaat("tampa2"):
		case joaat("gargoyle"):
		case joaat("le7b"):
		case joaat("tyrus"):
		case joaat("sheava"):
		case joaat("lynx"):
		case joaat("youga2"):
		case joaat("phantom3"):
		case joaat("hauler2"):
		case joaat("trailersmall2"):
		case joaat("retinue"):
		case joaat("visione"):
		case joaat("rapidgt3"):
		case joaat("cyclone"):
		case joaat("comet4"):
		case joaat("sentinel3"):
		case joaat("barrage"):
		case joaat("thruster"):
		case joaat("chernobog"):
		case joaat("yosemite"):
		case joaat("hermes"):
		case joaat("hustler"):
		case joaat("riata"):
		case joaat("khanjali"):
		case joaat("trailerlarge"):
		case joaat("gt500"):
		case joaat("streiter"):
		case joaat("pariah"):
		case joaat("savestra"):
		case joaat("riot2"):
		case joaat("revolter"):
		case joaat("z190"):
		case joaat("kamacho"):
		case joaat("volatol"):
		case joaat("gb200"):
		case joaat("issi3"):
		case joaat("fagaloa"):
		case joaat("ellie"):
		case joaat("michelli"):
		case joaat("hotring"):
		case joaat("flashgt"):
		case joaat("tezeract"):
		case joaat("cheburek"):
		case joaat("pounder2"):
		case joaat("mule4"):
		case joaat("speedo4"):
		case joaat("swinger"):
		case joaat("menacer"):
		case joaat("stafford"):
		case joaat("freecrawler"):
		case joaat("terbyte"):
		case joaat("scramjet"):
		case joaat("strikeforce"):
		case joaat("patriot2"):
		case joaat("oppressor2"):
		case joaat("schlagen"):
		case joaat("toros"):
		case joaat("deviant"):
		case joaat("deveste"):
		case joaat("clique"):
		case joaat("impaler"):
		case joaat("vamos"):
		case joaat("tulip"):
		case joaat("italigto"):
		case joaat("scarab"):
		case joaat("issi4"):
		case joaat("slamvan4"):
		case joaat("imperator"):
		case joaat("imperator2"):
		case joaat("brutus"):
		case joaat("cerberus"):
		case joaat("monster3"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("deathbike"):
		case joaat("impaler3"):
		case joaat("brutus2"):
		case joaat("bruiser2"):
		case joaat("slamvan5"):
		case joaat("issi5"):
		case joaat("monster4"):
		case joaat("scarab2"):
		case joaat("cerberus2"):
		case joaat("dominator4"):
		case joaat("dominator5"):
		case joaat("zr3802"):
		case joaat("impaler4"):
		case joaat("brutus3"):
		case joaat("bruiser3"):
		case joaat("slamvan6"):
		case joaat("issi6"):
		case joaat("monster5"):
		case joaat("scarab3"):
		case joaat("cerberus3"):
		case joaat("dominator6"):
		case joaat("zr3803"):
		case joaat("rcbandito"):
		case joaat("impaler2"):
		case joaat("zr380"):
		case joaat("bruiser"):
		case joaat("imperator3"):
		case joaat("caracara2"):
		case joaat("drafter"):
		case joaat("dynasty"):
		case joaat("gauntlet3"):
		case joaat("hellion"):
		case joaat("issi7"):
		case joaat("locust"):
		case joaat("nebula"):
		case joaat("novak"):
		case joaat("thrax"):
		case joaat("zion3"):
		case joaat("zorrusso"):
		case joaat("emerus"):
		case joaat("krieger"):
		case joaat("peyote2"):
		case joaat("rrocket"):
		case joaat("neo"):
		case joaat("gauntlet4"):
		case joaat("s80"):
		case joaat("jugular"):
		case joaat("paragon"):
		case joaat("paragon2"):
			return 1;
			break;
		case joaat("nightshark"):
		case joaat("ardent"):
		case joaat("caracara"):
			if (__LIB_10__.func_469() || __LIB_10__.func_17())
			{
				return 1;
			}
			break;
		case joaat("avenger"):
			if (__LIB_10__.func_473())
			{
				return 1;
			}
			break;
		default:
			if (((__LIB_4__.func_533(iParam0) || iVar0 == joaat("blazer4")) || __LIB_6__.func_132(iParam0)) || iVar0 == joaat("nightshark"))
			{
				return 1;
			}
			break;
	}
	switch (iVar0)
	{
		case joaat("asbo"):
		case joaat("kanjo"):
		case joaat("formula"):
		case joaat("imorgon"):
		case joaat("komoda"):
		case joaat("manana2"):
		case joaat("yosemite3"):
		case joaat("peyote3"):
		case joaat("glendale2"):
		case joaat("penumbra2"):
		case joaat("landstalker2"):
		case joaat("seminole2"):
		case joaat("tigon"):
		case joaat("openwheel1"):
		case joaat("coquette4"):
		case joaat("openwheel2"):
		case joaat("gauntlet5"):
		case joaat("club"):
		case joaat("dukes3"):
		case joaat("rebla"):
		case joaat("sugoi"):
		case joaat("youga3"):
		case joaat("zhaba"):
		case joaat("vstr"):
		case joaat("everon"):
		case joaat("sultan2"):
		case joaat("jb7002"):
		case joaat("outlaw"):
		case joaat("stryder"):
		case joaat("firetruk"):
		case joaat("burrito2"):
		case joaat("boxville"):
		case joaat("stockade"):
		case joaat("lguard"):
		case joaat("blazer2"):
		case joaat("yosemite2"):
		case joaat("vagrant"):
		case joaat("formula2"):
		case joaat("furia"):
		case joaat("retinue2"):
		case joaat("minitank"):
		case joaat("manchez2"):
		case joaat("brioso2"):
		case joaat("winky"):
		case joaat("verus"):
		case joaat("alkonost"):
		case joaat("avisa"):
		case joaat("longfin"):
		case joaat("patrolboat"):
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
		case joaat("slamtruck"):
		case joaat("vetir"):
		case joaat("kosatka"):
		case joaat("italirsx"):
		case joaat("toreador"):
		case joaat("weevil"):
		case joaat("dinghy5"):
		case joaat("annihilator2"):
		case joaat("squaddie"):
		case joaat("veto"):
		case joaat("veto2"):
		case joaat("calico"):
		case joaat("comet6"):
		case joaat("cypher"):
		case joaat("dominator7"):
		case joaat("jester4"):
		case joaat("remus"):
		case joaat("vectre"):
		case joaat("zr350"):
		case joaat("warrener2"):
		case joaat("rt3000"):
		case joaat("futo2"):
		case joaat("tailgater2"):
		case joaat("sultan3"):
		case joaat("dominator8"):
		case joaat("euros"):
		case joaat("growler"):
		case joaat("previon"):
		case joaat("banshee"):
		case joaat("kuruma"):
		case joaat("astron"):
		case joaat("baller7"):
		case joaat("buffalo4"):
		case joaat("comet7"):
		case joaat("deity"):
		case joaat("granger2"):
		case joaat("ignus"):
		case joaat("jubilee"):
		case joaat("patriot3"):
		case joaat("youga4"):
		case joaat("zeno"):
		case joaat("mule5"):
		case joaat("cinquemila"):
		case joaat("champion"):
		case joaat("reever"):
		case joaat("shinobi"):
		case joaat("iwagen"):
			return 1;
			break;
		default:
			break;
	}
	switch (iVar0)
	{
		case joaat("brioso3"):
		case joaat("corsita"):
		case joaat("draugur"):
		case joaat("greenwood"):
		case joaat("kanjosj"):
		case joaat("lm87"):
		case joaat("postlude"):
		case joaat("rhinehart"):
		case joaat("sm722"):
		case joaat("tenf"):
		case joaat("tenf2"):
		case joaat("torero2"):
		case joaat("vigero2"):
		case joaat("weevil2"):
		case joaat("zentorno"):
		case joaat("feltzer3"):
		case joaat("turismor"):
		case joaat("sentinel"):
		case joaat("ruiner4"):
		case joaat("sentinel4"):
		case joaat("omnisegt"):
		case joaat("picador"):
		case joaat("schwarzer"):
			return 1;
			break;
	}
	if (((Local_124.f_0 == 44 || __LIB_10__.func_554()) || (__LIB_10__.func_553() && __LIB_19__.func_949(PLAYER::PLAYER_ID()))) || (__LIB_10__.func_553() && __LIB_10__.func_476(Local_124.f_406, 0)))
	{
		if (__LIB_0__.func_174(iVar0, 0))
		{
			return 1;
		}
	}
	if (__LIB_10__.func_104(iParam0))
	{
		return 1;
	}
	return 0;
}

void func_34(int iParam0, char* sParam1, char* sParam2, bool bParam3)//Position - 0xFC5DF
{
	char* sVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !PED::IS_PED_INJURED(iParam0))
		{
			AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(iParam0, "MP_CAR_MOD_SHOP_MECHANIC_GROUP", 0f);
		}
	}
	if (Local_124.f_0 == 45)
	{
		if (__LIB_10__.func_530())
		{
			sVar0 = "BIKE_MECHANIC";
		}
		else if (__LIB_10__.func_554())
		{
			sVar0 = "OFFICE_MECHANIC";
		}
		else if (__LIB_10__.func_523())
		{
			sVar0 = "SECUROMECH";
		}
		else if ((__LIB_10__.func_531() || __LIB_10__.func_469()) || __LIB_10__.func_17())
		{
			sVar0 = "WEPSEXP";
		}
		else if (__LIB_10__.func_467())
		{
			sVar0 = "AIRMECH";
		}
		else if (__LIB_10__.func_553())
		{
			sVar0 = "ARENA_MECH";
		}
		if ((ENTITY::DOES_ENTITY_EXIST(iParam0) && !PED::IS_PED_INJURED(iParam0)) && !MISC::IS_STRING_NULL_OR_EMPTY(sVar0))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
			{
				AUDIO::PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Local_124.f_12, sParam1, sVar0, sParam2, bParam3);
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
			}
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !PED::IS_PED_INJURED(iParam0))
	{
		AUDIO::PLAY_PED_AMBIENT_SPEECH_NATIVE(iParam0, sParam1, sParam2, 0);
	}
}

void func_35(char* sParam0)//Position - 0xFCD17
{
	if (!__LIB_0__.func_1(sParam0))
	{
		if (__LIB_10__.func_116())
		{
			HUD::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(false);
			__LIB_0__.func_187(sParam0);
			__LIB_10__.func_115();
			Global_100493.f_5 = 1;
			Global_100493.f_6 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
		}
	}
}

int func_36()//Position - 0xFF508
{
	if (__LIB_10__.func_554())
	{
		if (((VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("caracara")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("oppressor2"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("patriot2"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("zhaba")))
		{
			return 1;
		}
	}
	if (__LIB_10__.func_530())
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("rrocket"):
				return 1;
				break;
			}
	}
	if (Local_124.f_0 != 45)
	{
		if (((VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("monster3")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("monster4"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("monster5"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("caracara2")))
		{
			return 1;
		}
	}
	if (__LIB_0__.func_121(Local_124.f_406))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
				break;
			case joaat("zhaba"):
				return 1;
				break;
			}
	}
	if ((__LIB_10__.func_553() && __LIB_6__.func_25() != 0) || (__LIB_10__.func_553() && Local_124.f_406 == Global_1965535))
	{
		return 1;
	}
	if (__LIB_4__.func_532())
	{
		return 1;
	}
	if (__LIB_10__.func_477())
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("slamtruck"):
			case joaat("patriot"):
			case joaat("patriot2"):
				return 1;
				break;
			}
	}
	if (__LIB_10__.func_12())
	{
		if (Local_124.f_676 == 2)
		{
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("slamtruck"):
				case joaat("patriot2"):
					return 1;
					break;
				}
			}
	}
	if (__LIB_10__.func_395())
	{
		return 1;
	}
	return 0;
}

void func_37()//Position - 0xFF99C
{
	if (iLocal_556 == 0)
	{
		__LIB_1__.func_345(217, "LOB_FCP_1" /* GXT: First Person */, -1, 0);
	}
	else
	{
		__LIB_1__.func_345(217, "LOB_FCP_2" /* GXT: Third Person */, -1, 0);
	}
}

void func_38(var uParam0)//Position - 0xFFA78
{
	bool bVar0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && !Global_100493.f_1555)
	{
		bVar0 = false;
		switch (__LIB_0__.func_299(uParam0->f_6))
		{
			case 4:
			case 5:
				if (Global_262145.f_19164 /* Tunable: 1955320764 */ || __LIB_2__.func_218(uParam0->f_6, uParam0->f_7))
				{
					bVar0 = true;
				}
				break;
			case 0:
				bVar0 = Global_262145.f_19165 /* Tunable: 920583692 */;
				break;
			case 2:
				bVar0 = Global_262145.f_19166 /* Tunable: 186842315 */;
				break;
			case 3:
				bVar0 = Global_262145.f_19167 /* Tunable: -964517702 */;
				break;
			case 1:
				bVar0 = Global_262145.f_19168 /* Tunable: -1623336633 */;
				break;
		}
		if (!bVar0)
		{
			if (__LIB_0__.func_52())
			{
				__LIB_1__.func_344(204, "ITEM_PSSTORE" /* GXT: PlayStation®Store */, -1);
			}
			else if (__LIB_0__.func_53())
			{
				__LIB_1__.func_344(204, "ITEM_MARKET", -1);
			}
			else if (MISC::IS_PC_VERSION())
			{
				__LIB_1__.func_345(204, "ITEM_STORE" /* GXT: Store */, -1, 0);
			}
		}
		uParam0->f_2 = NETWORK::NETWORK_IS_SIGNED_ONLINE();
		uParam0->f_4 = __LIB_10__.func_118();
	}
}

int func_39()//Position - 0xFFC2B
{
	if ((!__LIB_10__.func_523() && !__LIB_4__.func_532()) && !__LIB_4__.func_531())
	{
		return 0;
	}
	return BitTest(iLocal_201, 20);
}

int func_40(int iParam0)//Position - 0xFFEA7
{
	int iVar0;
	if (__LIB_4__.func_532() || __LIB_4__.func_531())
	{
		return 0;
	}
	if (((__LIB_4__.func_528(iParam0) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("windsor")) && !__LIB_0__.func_174(ENTITY::GET_ENTITY_MODEL(iParam0), 0)) && !__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("swift"))
		{
			if (VEHICLE::GET_VEHICLE_LIVERY(Local_124.f_406) > 0)
			{
				return 1;
			}
		}
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("peyote"):
				if (!VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2))
				{
					return 1;
				}
				break;
			case joaat("double"):
				if (__LIB_10__.func_102(iParam0, 5) >= 2)
				{
					return 1;
				}
				break;
			case joaat("ninef2"):
				if (__LIB_10__.func_102(iParam0, 5) >= 0)
				{
					return 1;
				}
				break;
			case joaat("massacro"):
			case joaat("stinger"):
			case joaat("stingergt"):
			case joaat("blista3"):
			case joaat("stalion2"):
			case joaat("shamal"):
			case joaat("burrito2"):
				return 1;
				break;
		}
		if (__LIB_10__.func_467())
		{
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("luxor2"):
				case joaat("swift2"):
				case joaat("besra"):
					return 1;
					break;
				}
		}
		if (BitTest(Global_4718592.f_39, 7))
		{
			return 1;
		}
		if (VEHICLE::GET_NUM_MOD_KITS(iParam0) == 0)
		{
			return 1;
		}
		iVar0 = VEHICLE::GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(iParam0);
		if (VEHICLE::IS_VEHICLE_SPRAYABLE(iParam0) || __LIB_10__.func_467())
		{
			if (BitTest(iVar0, 1) || __LIB_10__.func_120(iParam0))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_41()//Position - 0x100041
{
	if (__LIB_10__.func_523())
	{
		if (Local_124.f_443 == 2)
		{
			return 0;
		}
		else if (Local_124.f_443 == 96)
		{
			if (PLAYER::PLAYER_ID() != __LIB_0__.func_582())
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_42(int iParam0, char* sParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36, int iParam37, int iParam38, int iParam39, int iParam40, int iParam41, int iParam42, int iParam43, int iParam44, int iParam45, int iParam46, int iParam47, int iParam48, int iParam49, int iParam50, int iParam51, int iParam52, int iParam53, int iParam54, int iParam55, bool bParam56)//Position - 0x101D82
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(2, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(2, iVar0);
		Global_1649593.f_2120[iVar0] = iParam0;
		StringCopy(&(Global_1649593.f_2120.f_99[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_2120.f_260[iVar0] = iParam2;
		Global_1649593.f_2120.f_11[iVar0] = bParam3;
		Global_1649593.f_2120.f_22[iVar0] = iParam4;
		Global_1649593.f_2120.f_33[iVar0] = iParam5;
		Global_1649593.f_2120.f_44[iVar0] = iParam6;
		Global_1649593.f_2120.f_55[iVar0] = iParam7;
		Global_1649593.f_2120.f_66[iVar0] = iParam8;
		Global_1649593.f_2120.f_77[iVar0] = iParam9;
		Global_1649593.f_2120.f_88[iVar0] = iParam10;
		Global_1649593.f_2120.f_282[iVar0] = iParam11;
		Global_1649593.f_2120.f_293[iVar0] = iParam12;
		Global_1649593.f_2120.f_271[iVar0] = iParam13;
		Global_1649593.f_2120.f_315[iVar0] = iParam14;
		Global_1649593.f_2120.f_326[iVar0 /*3*/] = iParam15;
		Global_1649593.f_2120.f_326[iVar0 /*3*/].f_1 = iParam16;
		Global_1649593.f_2120.f_357[iVar0] = iParam17;
		Global_1649593.f_2120.f_368[iVar0] = iParam18;
		Global_1649593.f_2120.f_379[iVar0] = iParam19;
		Global_1649593.f_2120.f_390[iVar0] = iParam20;
		Global_1649593.f_2120.f_401[iVar0] = iParam21;
		Global_1649593.f_2120.f_412[iVar0] = iParam22;
		Global_1649593.f_2120.f_423[iVar0] = iParam23;
		Global_1649593.f_2120.f_434[iVar0] = iParam24;
		Global_1649593.f_2120.f_445[iVar0] = iParam25;
		Global_1649593.f_2120.f_456[iVar0] = iParam26;
		Global_1649593.f_2120.f_467[iVar0] = iParam27;
		Global_1649593.f_2120.f_478[iVar0] = iParam28;
		Global_1649593.f_2120.f_489[iVar0] = iParam29;
		Global_1649593.f_2120.f_500[iVar0] = iParam30;
		Global_1649593.f_2120.f_511[iVar0] = iParam31;
		Global_1649593.f_2120.f_522[iVar0] = iParam32;
		Global_1649593.f_2120.f_533[iVar0] = iParam33;
		Global_1649593.f_2120.f_544[iVar0] = iParam37;
		Global_2825033[iVar0] = iParam38;
		Global_2825044[iVar0] = iParam39;
		Global_2825055[iVar0] = iParam40;
		Global_2825066[iVar0] = iParam41;
		Global_2825077[iVar0] = iParam42;
		Global_2825088[iVar0] = iParam43;
		Global_2825099[iVar0] = iParam44;
		Global_2825110[iVar0] = iParam45;
		Global_1649593.f_2120.f_631[iVar0] = iParam48;
		Global_1649593.f_2120.f_642[iVar0] = iParam49;
		Global_1649593.f_2120.f_653[iVar0] = iParam50;
		Global_1649593.f_2120.f_664[iVar0] = iParam51;
		Global_1649593.f_2120.f_675[iVar0] = iParam52;
		Global_1649593.f_2120.f_686[iVar0] = iParam53;
		Global_1649593.f_2120.f_697[iVar0] = iParam54;
		Global_1649593.f_2120.f_708[iVar0] = iParam55;
		if (bParam56)
		{
			Global_1649593.f_1172 = 0;
		}
		else
		{
			Global_1649593.f_1172 = 1;
		}
		Global_1649593.f_2120.f_576[iVar0] = iParam34;
		if (iParam34 > -1)
		{
			__LIB_10__.func_123(2, iVar0);
		}
		else
		{
			__LIB_10__.func_122(2, iVar0);
		}
		Global_1649593.f_2120.f_587[iVar0] = iParam35;
		Global_1649593.f_2120.f_598[iVar0] = iParam36;
		Global_1649593.f_2120.f_609[iVar0] = iParam46;
		Global_1649593.f_2120.f_620[iVar0] = iParam47;
	}
}

int func_43()//Position - 0x1022DE
{
	if (Global_2789625.f_5 != __LIB_10__.func_128((__LIB_0__.func_228(__LIB_9__.func_919(), -1) - 1)))
	{
		return 0;
	}
	return 1;
}

int func_44(int iParam0, int iParam1)//Position - 0x107F96
{
	switch (iParam0)
	{
		case 76:
		case 77:
			if (((((((ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("diablous2") && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("fcr2")) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("nero2")) && !__LIB_10__.func_476(iParam1, 0)) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("rcbandito")) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("gauntlet5")) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("youga3")) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("greenwood"))
			{
				return 1;
			}
			if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
			{
				return 1;
			}
			if (ENTITY::GET_ENTITY_MODEL(iParam1) == joaat("greenwood"))
			{
				if ((((Local_124.f_116.f_1 == 0 || Local_124.f_116.f_1 == 1) || Local_124.f_116.f_1 == 2) || Local_124.f_116.f_1 == 3) || Local_124.f_116.f_1 == 4)
				{
					return 1;
				}
			}
			break;
		case 78:
			if ((((ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("nero2") && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("comet3")) && !__LIB_10__.func_476(iParam1, 0)) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("rcbandito")) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("growler"))
			{
				return 1;
			}
			if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)) && ENTITY::GET_ENTITY_MODEL(iParam1) != joaat("growler"))
			{
				return 1;
			}
			break;
		case 26:
			if (ENTITY::GET_ENTITY_MODEL(iParam1) == joaat("tornado5"))
			{
				if (Local_124.f_116.f_1 == 4 || Local_124.f_116.f_1 == 5)
				{
					return 1;
				}
			}
			break;
		case 15:
			if ((ENTITY::GET_ENTITY_MODEL(iParam1) == joaat("infernus2") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("cheetah2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("z190"))
			{
				return 1;
			}
			break;
		case 95:
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("z190"))
			{
				return 1;
			}
			break;
		case 46:
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("xa21"))
			{
				return 1;
			}
			break;
		case 9:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("z190"):
				case joaat("dominator3"):
				case joaat("italigto"):
				case joaat("brioso2"):
				case joaat("rt3000"):
				case joaat("tailgater2"):
					return 1;
					break;
			}
			break;
		case 84:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("dominator7"):
				case joaat("futo2"):
				case joaat("rt3000"):
				case joaat("postlude"):
					return 1;
					break;
			}
			break;
		case 83:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("sentinel4"):
					return 1;
					break;
			}
			break;
		case 79:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("previon"):
					return 1;
					break;
			}
			break;
		case 82:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("dominator8"):
					return 1;
					break;
			}
			break;
		case 63:
			switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
			{
				case joaat("remus"):
					return 1;
					break;
			}
			break;
	}
	return 0;
}

int func_45(int iParam0, bool bParam1)//Position - 0x10849B
{
	if (iLocal_157 != 0 || iLocal_160 != 0)
	{
		return 1;
	}
	if (((((HUD::GET_PAUSE_MENU_STATE() != 0 || PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) || HUD::IS_WARNING_MESSAGE_ACTIVE()) || Global_100493.f_1458) || STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) || NETWORK::NETWORK_TEXT_CHAT_IS_TYPING())
	{
		return 0;
	}
	if (iParam0 && iLocal_485)
	{
		return 0;
	}
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		if (bParam1)
		{
			if (__LIB_2__.func_157())
			{
				return 1;
			}
		}
		if (iLocal_509 == 1)
		{
			return 1;
		}
	}
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
	{
		return 1;
	}
	return 0;
}

int func_46(int iParam0, int iParam1)//Position - 0x10CE0B
{
	int iVar0;
	bool bVar1;
	iVar0 = 0;
	bVar1 = __LIB_10__.func_165(iParam0, iParam1);
	if (iParam0 > 0 || bVar1)
	{
		iVar0 += 75;
	}
	if (iParam0 > 1 || bVar1)
	{
		iVar0 += 75;
	}
	if (iParam0 > 2 || bVar1)
	{
		iVar0 += 75;
	}
	if (iParam0 > 3 || bVar1)
	{
		iVar0 += 20;
	}
	if (iParam0 > 4 || bVar1)
	{
		iVar0 += 3;
	}
	if (iParam0 > 5 || bVar1)
	{
		iVar0++;
	}
	if (bVar1)
	{
		if (iParam0 == 4)
		{
			if (iParam1 > 3)
			{
				iVar0++;
			}
			if (iParam1 > 4)
			{
				iVar0++;
			}
		}
	}
	return (iVar0 + iParam1);
}

void func_47()//Position - 0x10D2EA
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar3 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar3, false))
	{
		iVar0 = 0;
		while (iVar0 < VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(iVar3))
		{
			if (!VEHICLE::IS_VEHICLE_SEAT_FREE(iVar3, iVar0, false))
			{
				iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, iVar0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					if (!PED::IS_PED_INJURED(iVar1))
					{
						if (PED::IS_PED_A_PLAYER(iVar1))
						{
							if (!TASK::IS_PED_CUFFED(iVar1))
							{
								iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
								__LIB_6__.func_371(125033661, __LIB_0__.func_679(iVar2));
							}
						}
					}
				}
			}
			iVar0++;
		}
	}
}

void func_48(float fParam0, float fParam1, float fParam2, float fParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8)//Position - 0x10F13A
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	fVar0 = ((125f - 8f) * 0.00078125f);
	fVar1 = (125f * 0.00078125f);
	iVar5 = 0;
	while (iVar5 < iParam4)
	{
		fVar2 = fParam0;
		fVar3 = (fParam1 + ((fParam3 + (0.00138888f * 2f)) * SYSTEM::TO_FLOAT(iVar5)));
		iVar4 = 0;
		while (iVar4 < 5)
		{
			if (fParam2 > ((fVar0 / 100f) * 20f))
			{
				__LIB_2__.func_154(fVar2, fVar3, ((fVar0 / 100f) * 20f), fParam3, iParam5, iParam6, iParam7, iParam8);
			}
			else if (fParam2 > 0f)
			{
				__LIB_2__.func_154(fVar2, fVar3, fParam2, fParam3, iParam5, iParam6, iParam7, iParam8);
			}
			fParam2 = (fParam2 - ((fVar0 / 100f) * 20f));
			fVar2 = (fVar2 + ((fVar1 / 100f) * 20f));
			iVar4++;
		}
		iVar5++;
	}
}

int func_49(int iParam0)//Position - 0x12E7C5
{
	if (__LIB_0__.func_121(Local_124.f_406))
	{
		if (__LIB_10__.func_185(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
		{
			if ((((__LIB_10__.func_467() || __LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("rcbandito")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("minitank")) || (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("peyote2") && Local_124.f_443 == 40))
			{
				return -1;
			}
		}
	}
	if (iParam0 < 0 || iParam0 >= 123)
	{
		return -1;
	}
	return Global_102587[iParam0];
}

int func_50(int iParam0, int iParam1)//Position - 0x12E8EE
{
	int iVar0;
	iVar0 = __LIB_10__.func_188(iParam0, iParam1);
	if (iVar0 != 0)
	{
		return __LIB_10__.func_187(iVar0);
	}
	return -1;
}

int func_51(int iParam0, int iParam1)//Position - 0x131F67
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_10__.func_197(iParam1);
	iVar1 = 0;
	while (iVar1 < iVar0)
	{
		if (__LIB_10__.func_196(iParam1, iVar1) == iParam0)
		{
			return 1;
		}
		iVar1++;
	}
	return 0;
}

int func_52(int iParam0, int iParam1)//Position - 0x133B21
{
	int iVar0;
	iVar0 = __LIB_10__.func_198(iParam0, iParam1);
	if (iVar0 != 0)
	{
		return __LIB_10__.func_187(iVar0);
	}
	return -1;
}

int func_53(char* sParam0, int iParam1, bool bParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x1358DC
{
	int iVar0;
	iVar0 = 0;
	switch (iParam1)
	{
		case 1:
			iVar0 = __LIB_10__.func_211(sParam0);
			if (__LIB_19__.func_954())
			{
				if ((bParam4 || bParam5) || bParam6)
				{
				}
				else
				{
					iVar0 = 0;
				}
			}
			break;
		case 4:
			iVar0 = __LIB_10__.func_210(sParam0);
			break;
		case 0:
			iVar0 = __LIB_10__.func_209(sParam0);
			break;
		case 3:
			iVar0 = __LIB_10__.func_208(sParam0);
			break;
		case 5:
			iVar0 = 25000;
			break;
		case 2:
			iVar0 = __LIB_10__.func_207(sParam0);
			break;
	}
	if (iParam3 && !bParam2)
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) / 2f));
	}
	if (bParam4)
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * Global_262145.f_15131 /* Tunable: TRIMCOLORSUPERMOD */));
	}
	if (bParam5)
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * Global_262145.f_15132 /* Tunable: LIGHTCOLORSUPERMOD */));
	}
	if (bParam6)
	{
		iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * Global_262145.f_15133 /* Tunable: ACCENTCOLORSUPERMOD */));
	}
	return iVar0;
}

int func_54(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x136BD0
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam3) && !ENTITY::IS_ENTITY_DEAD(iParam3, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam3))
		{
			case joaat("pounder2"):
			case joaat("mule4"):
			case joaat("speedo4"):
			case joaat("terbyte"):
				return -1;
				break;
			}
	}
	switch (iParam0)
	{
		case 4:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 29;
					break;
				case 2:
					return 30;
					break;
				case 3:
					return 31;
					break;
				case 4:
					return 32;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 16) >= iParam2)
					{
						return 33;
					}
					break;
			}
			break;
		case 5:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 13;
					break;
				case 2:
					return 14;
					break;
				case 3:
					return 15;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 12) >= iParam2)
					{
						return 16;
					}
					break;
			}
			break;
		case 26:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 66;
					break;
				case 2:
					return 67;
					break;
				case 3:
					return 68;
					break;
				case 4:
					return 69;
					break;
				case 5:
					return 70;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 7) >= iParam2)
					{
						return 71;
					}
					break;
			}
			break;
		case 8:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 17;
					break;
				case 2:
					return 18;
					break;
				case 3:
					return 19;
					break;
				case 4:
					return 20;
					break;
				case 20:
					return -1;
					break;
				case 21:
					return 62;
					break;
				case 22:
					return 63;
					break;
				case 23:
					return 64;
					break;
			}
			if (iParam2 > 4 && iParam2 < 20)
			{
				if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 1) >= iParam2)
				{
					if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
					{
						return 101;
					}
					else
					{
						return 20;
					}
				}
			}
			else if (iParam2 > 23)
			{
				if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 2) >= (iParam2 - 20))
				{
					return 65;
				}
			}
			break;
		case 9:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 21;
					break;
				case 2:
					return 22;
					break;
				case 3:
					return 23;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 5) >= iParam2)
					{
						return 24;
					}
					break;
			}
			break;
		case 10:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 47;
					break;
				case 2:
					return 48;
					break;
				case 3:
					return 49;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 11) >= iParam2)
					{
						return 50;
					}
					break;
			}
			break;
		case 12:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 77;
					break;
				case 2:
					return 78;
					break;
				case 3:
					return 79;
					break;
				case 4:
					return 80;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 4) >= iParam2)
					{
						if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
						{
							return 100;
						}
						else
						{
							return 80;
						}
					}
					break;
			}
			break;
		case 13:
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_1__.func_337(PLAYER::PLAYER_ID()) == 2)
			{
				return -1;
			}
			else
			{
				switch (iParam2)
				{
					case 0:
						return 90;
						break;
					case 1:
						return 89;
						break;
					}
			}
			break;
		case 50:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 38;
					break;
				case 2:
					return 39;
					break;
				case 3:
					return 40;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 13) >= iParam2)
					{
						return 41;
					}
					break;
			}
			break;
		case 23:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 1;
					break;
				case 2:
					return 2;
					break;
				case 3:
					return 3;
					break;
				case 4:
					return 4;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 6) >= iParam2)
					{
						if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
						{
							return 103;
						}
						else
						{
							return 4;
						}
					}
					break;
			}
			break;
		case 27:
			iVar0 = iParam2;
			switch (iVar0)
			{
				case 0:
					return -1;
					break;
				case 44:
					return 5;
					break;
				case 45:
					return 6;
					break;
				case 46:
					return 7;
					break;
				case 47:
					return 8;
					break;
				case 48:
					return 9;
					break;
				case 49:
					return 10;
					break;
				case 50:
					return 11;
					break;
				case 51:
					return 12;
					break;
				case 52:
					return 12;
					break;
			}
			break;
		case 29:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 51;
					break;
			}
			break;
		case 33:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 34;
					break;
				case 2:
					return 35;
					break;
				case 3:
					return 36;
					break;
				case 4:
					return 37;
					break;
				case 5:
					return -1;
					break;
			}
			break;
		case 40:
			if (ENTITY::GET_ENTITY_MODEL(iParam3) == joaat("dukes"))
			{
				switch (iParam2)
				{
					case 0:
						return -1;
						break;
					case 1:
						return 85;
						break;
					default:
						return -1;
						break;
				}
			}
			else
			{
				switch (iParam2)
				{
					case 0:
						return -1;
						break;
					case 1:
						return 85;
						break;
					case 2:
						return 86;
						break;
					case 3:
						return 87;
						break;
					case 4:
						return 88;
						break;
					default:
						if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 10) >= iParam2)
						{
							if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
							{
								return 104;
							}
							else
							{
								return 88;
							}
						}
						break;
					}
			}
			break;
		case 44:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 25;
					break;
				case 2:
					return 26;
					break;
				case 3:
					return 27;
					break;
				case 4:
					return 28;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 3) > 4)
					{
						if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
						{
							return 28;
						}
					}
					break;
			}
			break;
		case 46:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 72;
					break;
				case 2:
					return 73;
					break;
				case 3:
					return 74;
					break;
				case 4:
					return 75;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 0) >= iParam2)
					{
						return 76;
					}
					break;
			}
			break;
		case 47:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 81;
					break;
				case 2:
					return 82;
					break;
				case 3:
					return 83;
					break;
				case 4:
					return 84;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 3) >= iParam2)
					{
						if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
						{
							return 105;
						}
						else
						{
							return 84;
						}
					}
					break;
			}
			break;
		case 53:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 61;
					break;
			}
			break;
		case 58:
			switch (iParam2)
			{
				case 10:
					return -1;
					break;
				case 11:
					if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
					{
						return 99;
					}
					else
					{
						return -1;
					}
					break;
				case 12:
				case 13:
				case 14:
				case 15:
				case 16:
				case 17:
				case 18:
				case 19:
					return -1;
					break;
				case 2:
					return 46;
					break;
				case 1:
					return -1;
					break;
				case 29:
					return -1;
					break;
				case 30:
					return 60;
					break;
				case 31:
					return 59;
					break;
				case 32:
					return 58;
					break;
				case 33:
					return -1;
					break;
				case 34:
					return 56;
					break;
				case 35:
					return -1;
					break;
				case 36:
					return 57;
					break;
				case 37:
					return -1;
					break;
				case 38:
					return -1;
					break;
				case 39:
					return -1;
					break;
			}
			break;
		case 60:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 43;
					break;
				case 2:
					return 44;
					break;
				case 3:
					return 45;
					break;
			}
			break;
		case 95:
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 91;
					break;
				case 2:
					return 92;
					break;
				case 3:
					return 93;
					break;
				default:
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 8) >= iParam2)
					{
						if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
						{
							return 94;
						}
					}
					break;
			}
			break;
		case 15:
			if (__LIB_10__.func_213(iParam3))
			{
				iParam2 = (iParam2 - 20);
			}
			switch (iParam2)
			{
				case 0:
					return -1;
					break;
				case 1:
					return 91;
					break;
				case 2:
					return 92;
					break;
				case 3:
					return 93;
					break;
				case 20:
					return -1;
					break;
				case 21:
					return -1;
					break;
				case 22:
					return 95;
					break;
				case 23:
					return 96;
					break;
				case 24:
					return 97;
					break;
			}
			if (!__LIB_10__.func_213(iParam3))
			{
				if (iParam2 > 3 && iParam2 < 21)
				{
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 8) >= iParam2)
					{
						return 94;
					}
				}
				else if (iParam2 > 23)
				{
					if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 9) >= (iParam2 - 20))
					{
						return 98;
					}
				}
			}
			else if (iParam2 > 23)
			{
				if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam3, 9) >= (iParam2 - 20))
				{
					return 98;
				}
			}
			break;
		case 0:
		case 1:
		case 2:
		case 3:
		case 21:
		case 22:
		case 31:
		case 38:
		case 42:
		case 54:
		case 55:
		case 56:
		case 57:
		case 61:
		case 103:
		case 62:
		case 63:
		case 64:
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
			return -1;
			break;
	}
	return __LIB_10__.func_212(iParam2, iParam1, iParam3);
}

bool func_55(int iParam0, int iParam1, int iParam2)//Position - 0x137FAB
{
	*iParam2 = -1;
	switch (iParam0)
	{
		case 1:
		case 0:
		case 2:
			if (!__LIB_10__.func_217(iParam1, iParam2))
			{
				return 0;
			}
			break;
		case 3:
			if (!__LIB_10__.func_216(iParam1, iParam2))
			{
				return 0;
			}
			break;
		case 4:
			if (!__LIB_10__.func_215(iParam1, iParam2))
			{
				return 0;
			}
			break;
		case 5:
			if (!__LIB_10__.func_214(iParam1, iParam2))
			{
				return 0;
			}
			break;
	}
	return *iParam2 != -1;
}

bool func_56()//Position - 0x139A88
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	switch (Local_124.f_116.f_5)
	{
		case 1:
		case 2:
			__LIB_10__.func_121(0);
			VEHICLE::GET_VEHICLE_COLOURS(Local_124.f_406, &iVar0, &iVar1);
			VEHICLE::GET_VEHICLE_EXTRA_COLOURS(Local_124.f_406, &iVar2, &uVar3);
			if (Local_124.f_606 != -1)
			{
				if (((Local_124.f_116.f_5 == 1 && Local_124.f_443 == 97) && ((Local_470.f_5 != iVar0 || Local_470.f_7 != iVar2) || BitTest(Local_470.f_77, 13))) || (((Local_124.f_116.f_5 == 1 && Local_124.f_443 == 98) && Local_470.f_6 != iVar1) || BitTest(Local_470.f_77, 12)))
				{
					__LIB_10__.func_121(1);
				}
			}
			else
			{
				if (Local_124.f_116.f_5 == 1 && Local_124.f_443 == 97)
				{
					__LIB_10__.func_121(1);
					if (BitTest(Local_470.f_77, 13))
					{
						__LIB_16__.func_463(&iVar4, &iVar5, &iVar6);
						if ((Local_470.f_71 == iVar4 && Local_470.f_72 == iVar5) && Local_470.f_73 == iVar6)
						{
							__LIB_10__.func_121(0);
						}
					}
				}
				if (Local_124.f_116.f_5 == 1 && Local_124.f_443 == 98)
				{
					__LIB_10__.func_121(1);
					if (BitTest(Local_470.f_77, 12))
					{
						__LIB_16__.func_463(&iVar4, &iVar5, &iVar6);
						if ((Local_470.f_71 == iVar4 && Local_470.f_72 == iVar5) && Local_470.f_73 == iVar6)
						{
							__LIB_10__.func_121(0);
						}
					}
				}
			}
			break;
	}
	iLocal_426 = 1;
	return bLocal_427;
}

int func_57()//Position - 0x13A138
{
	if (__LIB_10__.func_523())
	{
		if (iLocal_219 == 2)
		{
			return 1;
		}
	}
	return 0;
}

void func_58(int iParam0, int iParam1)//Position - 0x13B227
{
	switch (iParam0)
	{
		case 0:
			__LIB_1__.func_597(9874, iParam1, -1, 1, 0);
			break;
		case 1:
			__LIB_1__.func_597(9875, iParam1, -1, 1, 0);
			break;
	}
}

void func_59(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x13B294
{
	bool bVar0;
	int iVar1;
	bVar0 = false;
	iVar1 = 3;
	switch (__LIB_10__.func_228(iParam0))
	{
		case 1:
			if (iParam2 == Global_262145.f_31121 /* Tunable: -1005682561 */)
			{
				bVar0 = true;
			}
			break;
		case 2:
			if (iParam2 == Global_262145.f_31122 /* Tunable: 350142857 */)
			{
				bVar0 = true;
			}
			break;
		case 3:
			if (iParam2 == Global_262145.f_31123 /* Tunable: -1478347612 */)
			{
				bVar0 = true;
			}
			break;
	}
	if (bVar0)
	{
		if (iParam3 == 0)
		{
			iVar1 = 0;
		}
		else if (iParam3 > 0)
		{
			iVar1 = 1;
		}
		else if (iParam3 < 0)
		{
			iVar1 = 2;
		}
	}
	else if (iParam3 == 0)
	{
		iVar1 = 3;
	}
	else if (iParam3 > 0)
	{
		iVar1 = 4;
	}
	else if (iParam3 < 0)
	{
		iVar1 = 5;
	}
	__LIB_10__.func_227(iParam1, iVar1);
}

int func_60()//Position - 0x13B9FB
{
	if (PLAYER::PLAYER_ID() == __LIB_0__.func_160())
	{
		return -1;
	}
	return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_4;
}

int func_61(int iParam0)//Position - 0x13BFF2
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_5__.func_246(iParam0))
	{
		if (!__LIB_5__.func_255(1))
		{
			return 1;
		}
	}
	if (__LIB_5__.func_245(iParam0))
	{
		if (!__LIB_5__.func_255(2))
		{
			return 1;
		}
	}
	return 0;
}

void func_62(char[16] cParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, bool bParam6, int iParam7, int iParam8)//Position - 0x13C610
{
	char* sVar0;
	struct<4> Var1;
	if (iParam2 >= 0 && iParam2 < 128)
	{
		Global_100493.f_1126[iParam2] = 0;
		Global_100493.f_484[iParam2 /*4*/] = { cParam0 };
		Global_100493.f_997[iParam2] = iParam1;
		if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_4__.func_571()) && __LIB_10__.func_241())
		{
			if (iParam3 == 22)
			{
				__LIB_3__.func_671(&sVar0, Var1, iParam5, 4, iParam3, iParam4, iParam7, -1, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
			else if (iParam3 == 24 || iParam3 == 25)
			{
				if (bParam6)
				{
					StringConCat(&Var1, &cParam0, 16);
				}
				else
				{
					StringConCat(&Var1, __LIB_10__.func_240(iParam3), 16);
					StringConCat(&Var1, "_", 16);
					StringIntConCat(&Var1, iParam2, 16);
				}
				__LIB_3__.func_671(&sVar0, Var1, 0, 4, iParam3, iParam4, iParam7, iParam8, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
			else if (iParam3 == 26)
			{
				StringConCat(&Var1, "LIVERY_", 16);
				StringIntConCat(&Var1, iParam2, 16);
				__LIB_3__.func_671(&sVar0, Var1, 0, 4, iParam3, iParam4, iParam7, -1, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
			else if (iParam3 == 39)
			{
				StringConCat(&Var1, "LIVERY2_", 16);
				StringIntConCat(&Var1, iParam2, 16);
				__LIB_3__.func_671(&sVar0, Var1, 0, 4, iParam3, iParam4, iParam7, -1, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
			else if (iParam3 == 40)
			{
				__LIB_3__.func_671(&sVar0, Var1, iParam5, 4, iParam3, iParam4, iParam7, -1, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
			else if ((iParam3 != 67 && iParam3 != 0) && (iParam3 != 23 || iParam2 < 10))
			{
				if (bParam6)
				{
					Var1 = { cParam0 };
				}
				else
				{
					StringCopy(&Var1, __LIB_10__.func_240(iParam3), 16);
					StringConCat(&Var1, "_", 16);
					StringIntConCat(&Var1, iParam2, 16);
				}
				__LIB_3__.func_671(&sVar0, Var1, 0, 4, iParam3, iParam4, iParam7, -1, 0, 0);
				Global_100493.f_1126[iParam2] = MISC::GET_HASH_KEY(&sVar0);
				Global_100493.f_997[iParam2] = iParam1;
			}
		}
	}
	else
	{
		StringCopy(&(Global_100493.f_484[iParam2 /*4*/]), "", 16);
		Global_100493.f_997[iParam2] = 0;
		Global_100493.f_1126[iParam2] = 0;
	}
}

char* func_63(int iParam0)//Position - 0x13D3A5
{
	int iVar0;
	char* sVar1;
	int iVar2;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	if (iVar0 == joaat("btype3") && Global_102711[iParam0] != -1)
	{
		sVar1 = VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar1))
		{
			if (HUD::DOES_TEXT_LABEL_EXIST(sVar1))
			{
				iVar2 = MISC::GET_HASH_KEY(sVar1);
				switch (iVar2)
				{
					case joaat("TOP_BADGES"):
						return "CMOD_BAD_T";
						break;
					case joaat("TOP_ROOF"):
						return "CMOD_SPOT_T";
						break;
					case joaat("TOP_STEPS"):
						return "CMOD_STEP_T";
						break;
					case joaat("TOP_DEF"):
						return "CMOD_DEF_T";
						break;
					case joaat("TOP_ORN"):
						return "CMOD_ORN_T";
						break;
					case joaat("TOP_DETAIL"):
						return "CMOD_FDET_T";
						break;
					case joaat("TOP_SPARES"):
						return "CMOD_WHSS_T";
						break;
					case joaat("TOP_SPARER"):
						return "CMOD_WHRS_T";
						break;
					}
				}
			}
	}
	switch (iParam0)
	{
		case 24:
			if (joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)) || joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_LADDER_T";
			}
			else
			{
				return "CMOD_HAN_T";
			}
			break;
		case 51:
			return "CMOD_TB_T";
			break;
		case 6:
			return "CMOD_BW_T";
			break;
		case 7:
			return "CMOD_BB_T";
			break;
		case 39:
			return "CMOD_RC_T";
			break;
		case 11:
			return "CMOD_EB_T";
			break;
		case 14:
			if (iVar0 == joaat("diablous2"))
			{
				return "CMOD_HEC_T";
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEC_T";
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_FOG_T";
			}
			else if ((((joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEC_T";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_FG_T";
			}
			else
			{
				return "CMOD_FAR_T";
			}
			break;
		case 17:
			return "CMOD_FOR_T";
			break;
		case 16:
			return "CMOD_FRA_T";
			break;
		case 42:
			if (__LIB_10__.func_467())
			{
				if (__LIB_10__.func_59(iVar0))
				{
					return "CMOD_REM_T" /* GXT: REMOVE */;
					break;
				}
			}
			return "CMOD_SEL_T";
			break;
		case 54:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_T";
			}
			else
			{
				return "CMOD_VIN_T";
			}
			break;
		case 41:
			return "CMOD_SB_T";
			break;
		case 25:
			return "CMOD_HED_T";
			break;
		case 32:
			return "CMOD_MIR_T";
			break;
		case 18:
			if (__LIB_10__.func_109())
			{
				return "CMOD_BUMF_T";
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MISIL_T";
			}
			else if (joaat("TOP_HDLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_HEPR_T";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_SWEAP_T";
			}
			else if (joaat("TOP_BUM_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_BUMPA_T";
			}
			else if (joaat("TOP_WARMOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_WARMOR_T";
			}
			else
			{
				return "CMOD_FMUD_T";
			}
			break;
		case 36:
			if ((__LIB_4__.func_535(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMM_MOD_ST29";
				break;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_RACK_T" /* GXT: RACKS */;
				break;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_BKRE_T" /* GXT: BACKRESTS */;
				break;
			}
			else if (__LIB_10__.func_109())
			{
				return "CMOD_BUMR_T";
				break;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MORTA_T";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_REPR_T";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SIDEP_T";
			}
			else if (((((((joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10))) || iVar0 == joaat("vigero2"))
			{
				return "CMOD_LOU_T";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_RPAN_T";
			}
			else if (joaat("TOP_UPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_UPLAT_T";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RACK_T" /* GXT: RACKS */;
			}
			else if (iVar0 == joaat("seminole2"))
			{
				return "CMM_MOD_ST18";
			}
			else if (iVar0 == joaat("corsita"))
			{
				return "CMOD_MUD_TIT" /* GXT: MUDGUARDS */;
			}
			else
			{
				return "CMOD_RMUD_T";
				break;
			}
			break;
		case 34:
			return "CMOD_PLH_T";
			break;
		case 35:
			return "CMOD_PB_T";
			break;
		case 19:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "CMOD_FSET_T";
			}
			else
			{
				return "CMOD_CFSET_T";
			}
			break;
		case 37:
			return "CMOD_RSET_T";
			break;
		case 43:
			return "CMOD_SS_T";
			break;
		case 45:
			if (((((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || iVar0 == joaat("weevil2")) || iVar0 == joaat("ruiner4")) || iVar0 == joaat("picador"))
			{
				return "CMOD_SUNS_T";
			}
			return "CMOD_SW_T";
			break;
		case 20:
			return "CMOD_FUL_T";
			break;
		case 59:
			return "CMOD_WB_T";
			break;
		case 48:
			return "CMOD_TG_T";
			break;
		case 52:
			if (1621664729 == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMOD_RUNKC_T";
			}
			else
			{
				return "CMOD_TR_T";
			}
			break;
		case 93:
			return "CMOD_DEF_T";
			break;
		case 94:
			return "CMOD_ORN_T";
			break;
		case 61:
			return __LIB_10__.func_141(__LIB_10__.func_142(iVar0, 0));
			break;
		case 103:
			return __LIB_10__.func_141(__LIB_10__.func_142(iVar0, 1));
			break;
		case 62:
			if (joaat("TOP_LSPOIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMM_LSPO_T" /* GXT: LIP SPOILER */;
			}
			else
			{
				return "CMM_MOD_ST0";
			}
			break;
		case 63:
			if (joaat("TOP_RWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_RWIBBL_T";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_WINP_T";
			}
			else if ((joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SPLIT_T";
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_CANA_T";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_VENT_T" /* GXT: VENTS */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMM_MOD_ST15";
			}
			else if (joaat("TOP_BUMR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_BUMA_T";
			}
			else if (!__LIB_10__.func_109())
			{
				return "CMM_MOD_ST1";
			}
			else if (iVar0 != joaat("elegy"))
			{
				return "CMM_MOD_ST30";
			}
			else
			{
				return "CMM_MOD_ST34";
			}
			break;
		case 64:
			if (iVar0 == joaat("sultanrs"))
			{
				return "CMM_MOD_ST2b" /* GXT: SUNSTRIP */;
			}
			else
			{
				return "CMM_MOD_ST2";
			}
			break;
		case 65:
			if (joaat("TOP_INTERTYPE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)))
			{
				return "CMOD_INTTYPE_T" /* GXT: INTERIOR TYPE */;
			}
			return "CMM_MOD_ST3";
			break;
		case 66:
			if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 29)))
			{
				return "CMOD_REPR_T";
			}
			else if (iVar0 == joaat("issi5"))
			{
				return "CMOD_ROF_T";
			}
			else
			{
				return "CMM_MOD_ST4";
			}
			break;
		case 67:
			return "CMM_MOD_ST5";
			break;
		case 68:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 31)))
			{
				return "CMOD_SUNS_T";
			}
			else
			{
				return "CMM_MOD_ST6";
			}
			break;
		case 69:
			return "CMM_MOD_ST7";
			break;
		case 70:
			return "CMM_MOD_ST8";
			break;
		case 71:
			if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_SHIFTER_T" /* GXT: SHIFTERS */;
			}
			return "CMM_MOD_ST9";
			break;
		case 72:
			if (joaat("TOP_DECORATIONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_DECOR_T";
			}
			else if (joaat("TOP_TWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_TWIBBL_T";
			}
			else
			{
				return "CMM_MOD_ST10";
			}
			break;
		case 73:
			return "CMM_MOD_ST11";
			break;
		case 74:
			return "CMM_MOD_ST12";
			break;
		case 75:
			return "CMM_MOD_ST13";
			break;
		case 76:
			if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SPLIT_T";
			}
			else if (iVar0 == joaat("kanjosj"))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMM_MOD_ST35";
			}
			else
			{
				return "CMM_MOD_ST14";
			}
			break;
		case 77:
			if (joaat("TOP_RAILCOV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMM_RCOV_T" /* GXT: RAIL COVERS */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMOD_ENCOV_T";
			}
			else if (__LIB_10__.func_140(iVar0))
			{
				return "CMM_MOD_ST15b" /* GXT: CAM COVER */;
			}
			else if (__LIB_10__.func_113())
			{
				return "CMM_MOD_TBOS" /* GXT: BOOST */;
			}
			else
			{
				return "CMM_MOD_ST15";
			}
			break;
		case 78:
			if (__LIB_10__.func_742(iVar0))
			{
				return "CMM_MOD_ST16B" /* GXT: STRUT BRACE */;
			}
			else if (__LIB_10__.func_112())
			{
				return "CMM_MOD_TJUMP" /* GXT: VERTICAL JUMP */;
			}
			else if (iVar0 == joaat("previon"))
			{
				return "CMM_MOD_ST15";
			}
			else
			{
				return "CMM_MOD_ST16";
			}
			break;
		case 79:
			if (joaat("TOP_SCOOPS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SCOOP_T";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_FG_T";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SUNS_T";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || iVar0 == joaat("tenf"))
			{
				return "CMM_ROFI_T" /* GXT: ROOF FINS */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_MUD_TIT" /* GXT: MUDGUARDS */;
			}
			else if (__LIB_10__.func_139(Local_124.f_406))
			{
				return "CMM_MOD_ST17b" /* GXT: HEADLIGHT TRIM */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMOD_RDIF_T";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMM_MOD_ST15";
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMM_NOFI_T" /* GXT: NOSE FINS */;
			}
			else
			{
				return "CMM_MOD_ST17";
			}
			break;
		case 80:
			if (__LIB_10__.func_109())
			{
				return "CMM_MOD_ST33";
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_ST18C" /* GXT: SIDE HOOD GRILLE */;
			}
			else if (joaat("TOP_SPIKE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_SPIKE_T";
			}
			else if (joaat("TOP_SKID") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)) || iVar0 == joaat("draugur"))
			{
				return "CMOD_SKIDPL_T" /* GXT: SKID PLATE */;
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMM_MOD_ST33";
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_HOODC_T";
			}
			else if (__LIB_10__.func_138(Local_124.f_406))
			{
				return "CMM_MOD_ST18b" /* GXT: FOGLIGHTS */;
			}
			else
			{
				return "CMM_MOD_ST18";
			}
			break;
		case 81:
			if (joaat("TOP_BLADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_BLADE_T";
			}
			else if (iVar0 == joaat("cypher") || joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_ROFI_T" /* GXT: ROOF FINS */;
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_ROSC_T";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_MOD_ST32";
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				if (iVar0 == joaat("yosemite3"))
				{
					return "CMOD_SLIGHT_TY";
				}
				else
				{
					return "CMOD_SLIGHT_T";
				}
			}
			else if (__LIB_10__.func_109())
			{
				return "CMM_MOD_ST32";
			}
			else if (__LIB_10__.func_137(Local_124.f_406))
			{
				return "CMM_MOD_ST19b" /* GXT: ROOF SCOOPS */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_ST19c" /* GXT: FRONT DETAIL */;
			}
			else if (iVar0 == joaat("virgo2"))
			{
				return "CMM_MOD_ST19d" /* GXT: WIPERS */;
			}
			else if (joaat("TOP_IMANI_TECH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_REMOTE_T" /* GXT: REMOTE CONTROL */;
			}
			else
			{
				return "CMM_MOD_ST19";
			}
			break;
		case 82:
			if (__LIB_10__.func_109())
			{
				return "CMM_MOD_ST31";
			}
			else if (__LIB_10__.func_136())
			{
				return "CMOD_FUL_T";
			}
			else if (iVar0 == joaat("slamvan3"))
			{
				return "CMOD_RC_T";
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_PWEAP_T";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_RACK_T" /* GXT: RACKS */;
			}
			else if (iVar0 == joaat("yosemite3"))
			{
				return "CMM_MOD_ST33";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SUNS_T";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SPLIT_T";
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_MOD_ST31";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOPAN_T" /* GXT: NOSE PANELS */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOFI_T" /* GXT: NOSE FINS */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_MUD_TIT" /* GXT: MUDGUARDS */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMM_MOD_ST17";
			}
			else
			{
				return "CMM_MOD_ST20";
			}
			break;
		case 83:
			if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_ST21b" /* GXT: SPARE WHEEL */;
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_T";
			}
			else if (joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)) || joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMM_TLIG_T" /* GXT: TAIL LIGHTS */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMM_MOD_ST15";
			}
			else
			{
				return "CMM_MOD_ST21";
			}
			break;
		case 84:
			if (iVar0 == joaat("slamvan3"))
			{
				return "CMM_MOD_ST28";
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMOD_SNORKEL_T";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_VENT_T" /* GXT: VENTS */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMM_MOD_ST15";
			}
			else if (iVar0 == joaat("dominator7"))
			{
				return "CMM_MOD_ST16B" /* GXT: STRUT BRACE */;
			}
			else
			{
				return "CMM_MOD_ST22";
			}
			break;
		case 85:
			return "CMM_MOD_ST23";
			break;
		case 100:
			return "CMOD_BUMA_T";
			break;
		case 99:
			if (__LIB_9__.func_917(Local_124.f_406) || __LIB_10__.func_134(Local_124.f_406))
			{
				return "CMOD_WEAPO_T";
			}
			else
			{
				return "CMOD_BUM_T";
			}
			break;
		case 86:
			if (((__LIB_4__.func_533(Local_124.f_406) || __LIB_10__.func_135(Local_124.f_406)) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "CMOD_BW_T";
				break;
			}
			else
			{
				return "CMM_MOD_GT0";
				break;
			}
			break;
		case 87:
			return "CMM_MOD_GT1";
			break;
		case 88:
			return "CMM_MOD_GT2";
			break;
		case 89:
			if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "PERSO_MOD_TPE" /* GXT: PERFORMANCE UPGRADE */;
			}
			return "CMM_MOD_GT3";
			break;
		case 90:
			return "CMM_MOD_ST24";
			break;
		case 91:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)))
			{
				return "CMOD_SUNS_T";
			}
			else
			{
				return "CMM_MOD_ST25";
			}
			break;
		case 92:
			return "CMM_MOD_ST26";
			break;
		case 95:
			if ((iVar0 == joaat("faggio3") || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_WINDSH_T" /* GXT: WINDSHIELDS */;
				break;
			}
			else if (joaat("CMOD_SLOU_N") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLOU_T";
			}
			else if ((((iVar0 == joaat("blazer4") || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2))) || iVar0 == joaat("ruiner4"))
			{
				return "CMOD_MUD_TIT" /* GXT: MUDGUARDS */;
				break;
			}
			else if (joaat("TOP_BTRIM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || iVar0 == joaat("greenwood"))
			{
				return "CMOD_WT_TIT" /* GXT: BODY TRIM */;
			}
			else if (iVar0 == joaat("fcr2"))
			{
				return "CMOD_SWINGARM_T" /* GXT: SWINGARM */;
				break;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) && iVar0 != joaat("xa21"))
			{
				return "CMOD_RDIF_T";
				break;
			}
			else if (iVar0 == joaat("xa21"))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLIGHT_T";
				break;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RMLIGHT_T";
				break;
			}
			else if (iVar0 == joaat("bruiser") || iVar0 == joaat("bruiser3"))
			{
				return "CMOD_BULLH_T";
			}
			else if (iVar0 == joaat("cheetah2") || __LIB_4__.func_534(Local_124.f_406))
			{
				return "CMOD_WNG_T";
				break;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_WEAPO_T";
				break;
			}
			else if (joaat("TOP_ENGD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_ED_T";
				break;
			}
			else if (iVar0 == joaat("comet4"))
			{
				return "CMOD_ROF_T";
				break;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || iVar0 == joaat("kanjo"))
			{
				return "CMOD_SUNS_T";
			}
			else if (joaat("TOP_SSHADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SUNSS_T";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMM_MOD_ST14";
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_EXP_T";
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_VISO_T";
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_T";
			}
			else if ((joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35))) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_HOODC_T";
			}
			else if (__LIB_10__.func_143(iVar0))
			{
				return "CMOD_WNG_RT" /* GXT: REAR FENDER */;
			}
			else if (joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_WINSP_T" /* GXT: WINDOW SPOILERS */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_RMLIGHT_T";
			}
			else
			{
				return "CMOD_SHIFTER_T" /* GXT: SHIFTERS */;
				break;
			}
			break;
		case 15:
			if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_SISSY_T" /* GXT: SISSY BAR */;
				break;
			}
			else if (((joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) && iVar0 != joaat("impaler2")) && iVar0 != joaat("impaler3")) && iVar0 != joaat("impaler4"))
			{
				return "CMM_MOD_ST14";
				break;
			}
			else if (joaat("TOP_ROOFRAIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_R_RAI_T";
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) && iVar0 != joaat("dominator8"))
			{
				return "CMOD_HEC_T";
			}
			else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_PROMI_T";
			}
			else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_BOMB_T";
			}
			else if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DPLA_T";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DOOR_T";
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ARCHCO_T" /* GXT: ARCH COVERS */;
			}
			else if (iVar0 == joaat("gb200"))
			{
				return "CMOD_MUD_TIT" /* GXT: MUDGUARDS */;
			}
			else if (joaat("TOP_BUMPEX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_BUMX_T";
			}
			else if (__LIB_10__.func_143(iVar0))
			{
				return "CMOD_WNG_FT" /* GXT: FRONT FENDER */;
			}
			else if (iVar0 == joaat("zhaba"))
			{
				return "CMOD_SIDEP_T";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SEWEAP_T";
			}
			else if (iVar0 == joaat("club"))
			{
				return "CMOD_BW_T";
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMM_MOD_ST8";
			}
			else
			{
				return "CMOD_WNG_T";
			}
			break;
		case 101:
			if (joaat("TOP_SEAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				return "CMOD_SEAT_D";
				break;
			}
			return "CMOD_BON_T";
			break;
		case 102:
			return "CMOD_ROF_T";
			break;
		case 9:
			if (joaat("TOP_COVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("picador"))
			{
				return "CMOD_R_COV_T";
			}
			else if (joaat("TOP_RUFSPOILER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_R_SPO_T";
			}
			else if (joaat("TOP_ARM_PLAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_ARMPL_T";
			}
			else if (joaat("CMOD_VORT_M") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_VORT_T";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_MOD_ST32";
			}
			else if (joaat("TOP_TAILFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_TAFI_T" /* GXT: TAIL FINS */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_NOFI_T" /* GXT: NOSE FINS */;
			}
			else if (joaat("TOP_ROOFPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("ruiner4"))
			{
				return "CMM_ROPAN_T" /* GXT: ROOF PANELS */;
			}
			else if (joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_DEFEC_T";
			}
			else if (iVar0 == joaat("oppressor"))
			{
				return "CMM_MOD_ST14";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_WINP_T";
			}
			else if (joaat("TOP_GRIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_GRIP_T" /* GXT: HEEL GRIPS */;
				break;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("rogue"))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_RTURR_T";
				}
				else
				{
					return "CMOD_SEWEAP_T";
				}
			}
			else if (iVar0 == joaat("flashgt"))
			{
				return "CMOD_ROF_T";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "CMM_WINSP_T" /* GXT: WINDOW SPOILERS */;
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_BRB_T";
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_LID_T";
			}
			else if (iVar0 == joaat("thrax"))
			{
				return "CMM_MOD_ST19";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_T";
			}
			else if ((joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("turismor")) || iVar0 == joaat("schwarzer"))
			{
				return "CMM_ROFI_T" /* GXT: ROOF FINS */;
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMOD_SEAT_T";
			}
			else if (iVar0 == joaat("torero2"))
			{
				return "CMOD_BON_T";
			}
			else
			{
				return "CMOD_CHS_T";
			}
			break;
		case 46:
			if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMM_MOD_ST14";
				break;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RTURR_T";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("mule4"))
			{
				return "CMOD_SEWEAP_T";
			}
			else if (iVar0 == joaat("mule4"))
			{
				return "CMOD_PWEAP_T";
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VISO_T";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMM_MOD_ST35";
			}
			else if (iVar0 == joaat("pounder2"))
			{
				return "CMOD_ROF_0" /* GXT: Stock Roof */;
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_BUMF_T";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_WINP_T";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RACK_T" /* GXT: RACKS */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_SUNS_T";
			}
			else if (joaat("TOP_REAR_DOOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RDOOR_T" /* GXT: TRUNK DOOR */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_HOLI_T";
			}
			else if (joaat("TOP_STORAGEBOX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_STORBO_T" /* GXT: TOP BOX */;
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_BON_T";
			}
			else if (joaat("TOP_BACKREST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_BKRE_T" /* GXT: BACKRESTS */;
			}
			else
			{
				return "CMOD_SPO_T";
			}
			break;
		case 40:
			if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SUNS_T";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_ROFI_T" /* GXT: ROOF FINS */;
			}
			else if (joaat("TOP_PANN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_PANN_T" /* GXT: PANNIERS */;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("dune3"))
			{
				if (iVar0 != joaat("tampa3"))
				{
					return "CMOD_WEAPO_T";
				}
				else
				{
					return "CMOD_MINIG_T";
				}
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_T";
				}
				else if (iVar0 == joaat("molotok"))
				{
					return "CMOD_WEAPO_T";
				}
				else if (iVar0 == joaat("hunter"))
				{
					return "SVM_MOD_TU_T" /* GXT: TURRETS */;
				}
				else if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_T";
				}
				else if (iVar0 == joaat("mule4"))
				{
					return "CMOD_SEWEAP_T";
				}
				else
				{
					return "CMOD_PWEAP_T";
				}
			}
			else if (iVar0 == joaat("riot2"))
			{
				return "CMOD_WATER_T";
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SNORKEL_T";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RMLIGHT_T";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SEWEAP_T";
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWHE_T";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_MOD_ST32";
			}
			else if (iVar0 == joaat("feltzer3"))
			{
				return "CMOD_R_SPO_T";
			}
			else
			{
				return "CMOD_ROF_T";
			}
			break;
		case 23:
			if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOODC_T";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || iVar0 == joaat("picador"))
			{
				return "CMOD_SPLIT_T";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RPAN_T";
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_CANA_T";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_NOPAN_T" /* GXT: NOSE PANELS */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOLI_T";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RACK_T" /* GXT: RACKS */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_ENCOV_T";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_SWEAP_T";
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWSH_T";
			}
			else if (joaat("TOP_BPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_BPLAT_T";
			}
			else if (joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_WINDSH_T" /* GXT: WINDSHIELDS */;
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_FG_T";
			}
			else if (joaat("TOP_VENTBRAC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_VENTBRA_T" /* GXT: VENT BRACES */;
			}
			else if (joaat("TOP_RSPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_RSPLI_T" /* GXT: REAR SPLITTERS */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_MOD_ST31";
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_MOD_ST33";
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMOD_PEDAL_T";
			}
			else if (iVar0 == joaat("weevil"))
			{
				return "CMM_MOD_ST33";
			}
			else
			{
				return "CMOD_GRL_T";
			}
			break;
	}
	return "";
}

bool func_64()//Position - 0x140992
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	switch (Local_124.f_116.f_5)
	{
		case 2:
		case 3:
			__LIB_10__.func_121(0);
			VEHICLE::GET_VEHICLE_COLOURS(Local_124.f_406, &iVar0, &iVar1);
			VEHICLE::GET_VEHICLE_EXTRA_COLOURS(Local_124.f_406, &iVar2, &uVar3);
			if (Local_124.f_606 != -1)
			{
				if ((Local_124.f_116.f_5 == 2 && ((Local_470.f_5 != iVar0 || Local_470.f_7 != iVar2) || BitTest(Local_470.f_77, 13))) || ((Local_124.f_116.f_5 == 3 && Local_470.f_6 != iVar1) || BitTest(Local_470.f_77, 12)))
				{
					if (!__LIB_10__.func_375())
					{
						__LIB_10__.func_121(1);
					}
				}
			}
			else
			{
				if (Local_124.f_116.f_5 == 2)
				{
					__LIB_10__.func_121(1);
					if (BitTest(Local_470.f_77, 13))
					{
						__LIB_16__.func_463(&iVar4, &iVar5, &iVar6);
						if ((Local_470.f_71 == iVar4 && Local_470.f_72 == iVar5) && Local_470.f_73 == iVar6)
						{
							__LIB_10__.func_121(0);
						}
					}
				}
				if (Local_124.f_116.f_5 == 3)
				{
					__LIB_10__.func_121(1);
					if (BitTest(Local_470.f_77, 12))
					{
						__LIB_16__.func_463(&iVar4, &iVar5, &iVar6);
						if ((Local_470.f_71 == iVar4 && Local_470.f_72 == iVar5) && Local_470.f_73 == iVar6)
						{
							__LIB_10__.func_121(0);
						}
					}
				}
			}
			break;
		case 4:
		case 5:
		case 6:
			__LIB_10__.func_121(1);
			if (Local_124.f_116.f_1 != -1)
			{
				if (Local_124.f_468[Local_124.f_116.f_1] == 0)
				{
					__LIB_10__.func_121(0);
				}
			}
			break;
	}
	iLocal_426 = 1;
	return bLocal_427;
}

int func_65(int iParam0, int iParam1, int iParam2)//Position - 0x14608A
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	if (iParam2 == 85)
	{
		iVar0 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES7"));
		iVar1 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES8"));
		iVar2 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES9"));
		iVar3 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES10"));
		iVar4 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES11"));
		iVar5 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES12"));
		iVar6 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES13"));
		iVar7 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES14"));
		iVar8 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES15"));
		iVar9 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES16"));
		iVar10 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES17"));
		iVar11 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES18"));
		switch (iParam1)
		{
			case joaat("SCCAMO_LIV1"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 0) && !BitTest(iVar0, 0))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 10) && !BitTest(iVar0, 10))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 20) && !BitTest(iVar0, 20))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 0) && !BitTest(iVar1, 0))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 10) && !BitTest(iVar1, 10))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 20) && !BitTest(iVar1, 20))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 0) && !BitTest(iVar2, 0))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 10) && !BitTest(iVar2, 10))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 20) && !BitTest(iVar2, 20))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 0) && !BitTest(iVar3, 0))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 10) && !BitTest(iVar3, 10))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 20) && !BitTest(iVar3, 20))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 0) && !BitTest(iVar4, 0))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 10) && !BitTest(iVar4, 10))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 20) && !BitTest(iVar4, 20))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 0) && !BitTest(iVar5, 0))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 10) && !BitTest(iVar5, 10))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 20) && !BitTest(iVar5, 20))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 0) && !BitTest(iVar6, 0))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 10) && !BitTest(iVar6, 10))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 20) && !BitTest(iVar6, 20))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 0) && !BitTest(iVar7, 0))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 10) && !BitTest(iVar7, 10))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 20) && !BitTest(iVar7, 20))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 0) && !BitTest(iVar8, 0))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 10) && !BitTest(iVar8, 10))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 20) && !BitTest(iVar8, 20))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 20) && !BitTest(iVar9, 20))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV2"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 1) && !BitTest(iVar0, 1))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 11) && !BitTest(iVar0, 11))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 21) && !BitTest(iVar0, 21))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 1) && !BitTest(iVar1, 1))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 11) && !BitTest(iVar1, 11))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 21) && !BitTest(iVar1, 21))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 1) && !BitTest(iVar2, 1))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 11) && !BitTest(iVar2, 11))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 21) && !BitTest(iVar2, 21))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 1) && !BitTest(iVar3, 1))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 11) && !BitTest(iVar3, 11))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 21) && !BitTest(iVar3, 21))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 1) && !BitTest(iVar4, 1))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 11) && !BitTest(iVar4, 11))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 21) && !BitTest(iVar4, 21))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 1) && !BitTest(iVar5, 1))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 11) && !BitTest(iVar5, 11))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 21) && !BitTest(iVar5, 21))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 1) && !BitTest(iVar6, 1))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 11) && !BitTest(iVar6, 11))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 21) && !BitTest(iVar6, 21))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 1) && !BitTest(iVar7, 1))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 11) && !BitTest(iVar7, 11))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 21) && !BitTest(iVar7, 21))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 1) && !BitTest(iVar8, 1))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 11) && !BitTest(iVar8, 11))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 21) && !BitTest(iVar8, 21))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 21) && !BitTest(iVar9, 21))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV3"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 2) && !BitTest(iVar0, 2))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 12) && !BitTest(iVar0, 12))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 22) && !BitTest(iVar0, 22))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 2) && !BitTest(iVar1, 2))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 12) && !BitTest(iVar1, 12))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 22) && !BitTest(iVar1, 22))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 2) && !BitTest(iVar2, 2))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 12) && !BitTest(iVar2, 12))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 22) && !BitTest(iVar2, 22))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 2) && !BitTest(iVar3, 2))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 12) && !BitTest(iVar3, 12))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 22) && !BitTest(iVar3, 22))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 2) && !BitTest(iVar4, 2))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 12) && !BitTest(iVar4, 12))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 22) && !BitTest(iVar4, 22))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 2) && !BitTest(iVar5, 2))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 12) && !BitTest(iVar5, 12))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 22) && !BitTest(iVar5, 22))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 2) && !BitTest(iVar6, 2))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 12) && !BitTest(iVar6, 12))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 22) && !BitTest(iVar6, 22))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 2) && !BitTest(iVar7, 2))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 12) && !BitTest(iVar7, 12))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 21) && !BitTest(iVar7, 21))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 2) && !BitTest(iVar8, 2))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 12) && !BitTest(iVar8, 12))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 22) && !BitTest(iVar8, 22))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 22) && !BitTest(iVar9, 22))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV4"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 3) && !BitTest(iVar0, 3))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 13) && !BitTest(iVar0, 13))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 23) && !BitTest(iVar0, 23))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 3) && !BitTest(iVar1, 3))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 13) && !BitTest(iVar1, 13))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 23) && !BitTest(iVar1, 23))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 3) && !BitTest(iVar2, 3))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 13) && !BitTest(iVar2, 13))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 23) && !BitTest(iVar2, 23))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 3) && !BitTest(iVar3, 3))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 13) && !BitTest(iVar3, 13))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 23) && !BitTest(iVar3, 23))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 3) && !BitTest(iVar4, 3))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 13) && !BitTest(iVar4, 13))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 23) && !BitTest(iVar4, 23))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 3) && !BitTest(iVar5, 3))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 13) && !BitTest(iVar5, 13))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 23) && !BitTest(iVar5, 23))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 3) && !BitTest(iVar6, 3))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 13) && !BitTest(iVar6, 13))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 23) && !BitTest(iVar6, 23))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 3) && !BitTest(iVar7, 3))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 13) && !BitTest(iVar7, 13))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 23) && !BitTest(iVar7, 23))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 3) && !BitTest(iVar8, 3))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 13) && !BitTest(iVar8, 13))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 23) && !BitTest(iVar8, 23))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 23) && !BitTest(iVar9, 23))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV5"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 4) && !BitTest(iVar0, 4))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 14) && !BitTest(iVar0, 14))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 24) && !BitTest(iVar0, 24))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 4) && !BitTest(iVar1, 4))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 14) && !BitTest(iVar1, 14))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 24) && !BitTest(iVar1, 24))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 4) && !BitTest(iVar2, 4))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 14) && !BitTest(iVar2, 14))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 24) && !BitTest(iVar2, 24))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 4) && !BitTest(iVar3, 4))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 14) && !BitTest(iVar3, 14))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 24) && !BitTest(iVar3, 24))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 4) && !BitTest(iVar4, 4))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 14) && !BitTest(iVar4, 14))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 24) && !BitTest(iVar4, 24))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 4) && !BitTest(iVar5, 4))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 14) && !BitTest(iVar5, 14))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 24) && !BitTest(iVar5, 24))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 4) && !BitTest(iVar6, 4))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 14) && !BitTest(iVar6, 14))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 24) && !BitTest(iVar6, 24))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 4) && !BitTest(iVar7, 4))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 14) && !BitTest(iVar7, 14))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 24) && !BitTest(iVar7, 24))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 4) && !BitTest(iVar8, 4))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 14) && !BitTest(iVar8, 14))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 24) && !BitTest(iVar8, 24))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 24) && !BitTest(iVar9, 24))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV6"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 5) && !BitTest(iVar0, 5))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 15) && !BitTest(iVar0, 15))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 25) && !BitTest(iVar0, 25))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 5) && !BitTest(iVar1, 5))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 15) && !BitTest(iVar1, 15))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 25) && !BitTest(iVar1, 25))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 5) && !BitTest(iVar2, 5))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 15) && !BitTest(iVar2, 15))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 25) && !BitTest(iVar2, 25))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 5) && !BitTest(iVar3, 5))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 15) && !BitTest(iVar3, 15))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 25) && !BitTest(iVar3, 25))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 5) && !BitTest(iVar4, 5))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 15) && !BitTest(iVar4, 15))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 25) && !BitTest(iVar4, 25))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 5) && !BitTest(iVar5, 5))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 15) && !BitTest(iVar5, 15))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 25) && !BitTest(iVar5, 25))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 5) && !BitTest(iVar6, 5))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 15) && !BitTest(iVar6, 15))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 25) && !BitTest(iVar6, 25))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 5) && !BitTest(iVar7, 5))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 15) && !BitTest(iVar7, 15))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 25) && !BitTest(iVar7, 25))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 5) && !BitTest(iVar8, 5))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 15) && !BitTest(iVar8, 15))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 25) && !BitTest(iVar8, 25))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 25) && !BitTest(iVar9, 25))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV7"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 6) && !BitTest(iVar0, 6))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 16) && !BitTest(iVar0, 16))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 26) && !BitTest(iVar0, 26))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 6) && !BitTest(iVar1, 6))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 16) && !BitTest(iVar1, 16))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 26) && !BitTest(iVar1, 26))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 6) && !BitTest(iVar2, 6))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 16) && !BitTest(iVar2, 16))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 26) && !BitTest(iVar2, 26))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 6) && !BitTest(iVar3, 6))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 16) && !BitTest(iVar3, 16))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 26) && !BitTest(iVar3, 26))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 6) && !BitTest(iVar4, 6))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 16) && !BitTest(iVar4, 16))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 26) && !BitTest(iVar4, 26))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 6) && !BitTest(iVar5, 6))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 16) && !BitTest(iVar5, 16))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 26) && !BitTest(iVar5, 26))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 6) && !BitTest(iVar6, 6))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 16) && !BitTest(iVar6, 16))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 26) && !BitTest(iVar6, 26))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 6) && !BitTest(iVar7, 6))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 16) && !BitTest(iVar7, 16))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 26) && !BitTest(iVar7, 26))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 6) && !BitTest(iVar8, 6))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 16) && !BitTest(iVar8, 16))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 26) && !BitTest(iVar8, 26))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 26) && !BitTest(iVar9, 26))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV8"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 7) && !BitTest(iVar0, 7))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 17) && !BitTest(iVar0, 17))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 27) && !BitTest(iVar0, 27))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 7) && !BitTest(iVar1, 7))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 17) && !BitTest(iVar1, 17))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 27) && !BitTest(iVar1, 27))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 7) && !BitTest(iVar2, 7))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 17) && !BitTest(iVar2, 17))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 27) && !BitTest(iVar2, 27))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 7) && !BitTest(iVar3, 7))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 17) && !BitTest(iVar3, 17))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 27) && !BitTest(iVar3, 27))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 7) && !BitTest(iVar4, 7))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 17) && !BitTest(iVar4, 17))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 27) && !BitTest(iVar4, 27))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 7) && !BitTest(iVar5, 7))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 17) && !BitTest(iVar5, 17))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 27) && !BitTest(iVar5, 27))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 7) && !BitTest(iVar6, 7))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 17) && !BitTest(iVar6, 17))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 27) && !BitTest(iVar6, 27))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 7) && !BitTest(iVar7, 7))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 17) && !BitTest(iVar7, 17))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 27) && !BitTest(iVar7, 27))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 7) && !BitTest(iVar8, 7))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 17) && !BitTest(iVar8, 17))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 27) && !BitTest(iVar8, 27))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 27) && !BitTest(iVar9, 27))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV9"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 8) && !BitTest(iVar0, 8))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 18) && !BitTest(iVar0, 18))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 28) && !BitTest(iVar0, 28))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 8) && !BitTest(iVar1, 8))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 18) && !BitTest(iVar1, 18))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 28) && !BitTest(iVar1, 28))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 8) && !BitTest(iVar2, 8))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 18) && !BitTest(iVar2, 18))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 28) && !BitTest(iVar2, 28))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 8) && !BitTest(iVar3, 8))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 18) && !BitTest(iVar3, 18))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 28) && !BitTest(iVar3, 28))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 8) && !BitTest(iVar4, 8))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 18) && !BitTest(iVar4, 18))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 28) && !BitTest(iVar4, 28))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 8) && !BitTest(iVar5, 8))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 18) && !BitTest(iVar5, 18))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 28) && !BitTest(iVar5, 28))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 8) && !BitTest(iVar6, 8))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 18) && !BitTest(iVar6, 18))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 28) && !BitTest(iVar6, 28))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 8) && !BitTest(iVar7, 8))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 18) && !BitTest(iVar7, 18))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 28) && !BitTest(iVar7, 28))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 8) && !BitTest(iVar8, 8))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 18) && !BitTest(iVar8, 18))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 28) && !BitTest(iVar8, 28))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 28) && !BitTest(iVar9, 28))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SCCAMO_LIV10"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 9) && !BitTest(iVar0, 9))
						{
							return 1;
						}
						break;
					case joaat("mule4"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 19) && !BitTest(iVar0, 19))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23093 /* Tunable: VEHXMAS_CAMO13 */, 29) && !BitTest(iVar0, 29))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 9) && !BitTest(iVar1, 9))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 19) && !BitTest(iVar1, 19))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23094 /* Tunable: VEHXMAS_CAMO14 */, 29) && !BitTest(iVar1, 29))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 9) && !BitTest(iVar2, 9))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 19) && !BitTest(iVar2, 19))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23095 /* Tunable: VEHXMAS_CAMO15 */, 29) && !BitTest(iVar2, 29))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 9) && !BitTest(iVar3, 9))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 19) && !BitTest(iVar3, 19))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23096 /* Tunable: VEHXMAS_CAMO16 */, 29) && !BitTest(iVar3, 29))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 9) && !BitTest(iVar4, 9))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 19) && !BitTest(iVar4, 19))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23097 /* Tunable: VEHXMAS_CAMO17 */, 29) && !BitTest(iVar4, 29))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 9) && !BitTest(iVar5, 9))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 19) && !BitTest(iVar5, 19))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23098 /* Tunable: VEHXMAS_CAMO18 */, 29) && !BitTest(iVar5, 29))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 9) && !BitTest(iVar6, 9))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 19) && !BitTest(iVar6, 19))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23099 /* Tunable: VEHXMAS_CAMO19 */, 29) && !BitTest(iVar6, 29))
						{
							return 1;
						}
						break;
					case joaat("speedo4"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 9) && !BitTest(iVar7, 9))
						{
							return 1;
						}
						break;
					case joaat("patriot"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 19) && !BitTest(iVar7, 19))
						{
							return 1;
						}
						break;
					case joaat("patriot2"):
						if (!BitTest(Global_262145.f_23100 /* Tunable: VEHXMAS_CAMO20 */, 29) && !BitTest(iVar7, 29))
						{
							return 1;
						}
						break;
					case joaat("pounder2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 9) && !BitTest(iVar8, 9))
						{
							return 1;
						}
						break;
					case joaat("menacer"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 19) && !BitTest(iVar8, 19))
						{
							return 1;
						}
						break;
					case joaat("oppressor2"):
						if (!BitTest(Global_262145.f_23101 /* Tunable: VEHXMAS_CAMO21 */, 29) && !BitTest(iVar8, 29))
						{
							return 1;
						}
						break;
					case joaat("revolter"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 29) && !BitTest(iVar9, 29))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("STAF_LIV8"):
				switch (iParam0)
				{
					case joaat("swinger"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 0) && !BitTest(iVar9, 0))
						{
							return 1;
						}
						break;
					case joaat("stafford"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 10) && !BitTest(iVar9, 10))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("STAF_LIV9"):
				switch (iParam0)
				{
					case joaat("swinger"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 1) && !BitTest(iVar9, 1))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("THX_LIV_10"):
				switch (iParam0)
				{
					case joaat("thrax"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 2) && !BitTest(iVar9, 2))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("PARAG_LIV2"):
				switch (iParam0)
				{
					case joaat("paragon2"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 3) && !BitTest(iVar9, 3))
						{
							return 1;
						}
						break;
					case joaat("paragon"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 4) && !BitTest(iVar9, 4))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("S80_LIV_10"):
				switch (iParam0)
				{
					case joaat("s80"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 5) && !BitTest(iVar9, 5))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CLIQ_LIV11"):
				switch (iParam0)
				{
					case joaat("clique"):
						if (!__LIB_0__.func_137(132, -1) && !BitTest(iVar9, 6))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("LANDST2_LIV_10"):
				switch (iParam0)
				{
					case joaat("landstalker2"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 7) && !BitTest(iVar9, 7))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("SEM2_LIVERY9"):
				switch (iParam0)
				{
					case joaat("seminole2"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 8) && !BitTest(iVar9, 8))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("RSX_LIVERY11"):
				switch (iParam0)
				{
					case joaat("italirsx"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 9) && !BitTest(iVar9, 9))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("TORD_LIV11"):
				switch (iParam0)
				{
					case joaat("toreador"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 11) && !BitTest(iVar9, 11))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("BANSH_LIV11"):
				switch (iParam0)
				{
					case joaat("banshee"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 13) && !BitTest(iVar9, 13))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("BANSH_LIV12"):
				switch (iParam0)
				{
					case joaat("banshee"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 14) && !BitTest(iVar9, 14))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("BANSH_LIV13"):
				switch (iParam0)
				{
					case joaat("banshee"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 15) && !BitTest(iVar9, 15))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("BANSH_LIV14"):
				switch (iParam0)
				{
					case joaat("banshee"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 16) && !BitTest(iVar9, 16))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("BANSH_LIV15"):
				switch (iParam0)
				{
					case joaat("banshee"):
						if (!BitTest(Global_262145.f_23102 /* Tunable: VEHXMAS_CAMO22 */, 17) && !BitTest(iVar9, 17))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KURUMA_LIV11"):
				switch (iParam0)
				{
					case joaat("kuruma"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 0) && !BitTest(iVar10, 0))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KURUMA_LIV12"):
				switch (iParam0)
				{
					case joaat("kuruma"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 1) && !BitTest(iVar10, 1))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KURUMA_LIV13"):
				switch (iParam0)
				{
					case joaat("kuruma"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 2) && !BitTest(iVar10, 2))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KURUMA_LIV14"):
				switch (iParam0)
				{
					case joaat("kuruma"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 3) && !BitTest(iVar10, 3))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KURUMA_LIV15"):
				switch (iParam0)
				{
					case joaat("kuruma"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 4) && !BitTest(iVar10, 4))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("HOTRING_LIV31"):
				switch (iParam0)
				{
					case joaat("hotring"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 5) && !BitTest(iVar10, 5))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("KANJO_LIV13"):
				switch (iParam0)
				{
					case joaat("kanjo"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 6) && !BitTest(iVar10, 6))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("HERMES_LIV11"):
				switch (iParam0)
				{
					case joaat("hermes"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 7) && !BitTest(iVar10, 7))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("TORD_LIV12"):
				switch (iParam0)
				{
					case joaat("toreador"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 8) && !BitTest(iVar10, 8))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("COMET6_LIV11"):
				switch (iParam0)
				{
					case joaat("comet6"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 14) && !BitTest(iVar10, 14))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("COMET6_LIV12"):
				switch (iParam0)
				{
					case joaat("comet6"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 15) && !BitTest(iVar10, 15))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("COMET6_LIV13"):
				switch (iParam0)
				{
					case joaat("comet6"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 16) && !BitTest(iVar10, 16))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("COMET6_LIV14"):
				switch (iParam0)
				{
					case joaat("comet6"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 17) && !BitTest(iVar10, 17))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("COMET6_LIV15"):
				switch (iParam0)
				{
					case joaat("comet6"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 18) && !BitTest(iVar10, 18))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CYPH_LIVERY11"):
				switch (iParam0)
				{
					case joaat("cypher"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 19) && !BitTest(iVar10, 19))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CYPH_LIVERY12"):
				switch (iParam0)
				{
					case joaat("cypher"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 20) && !BitTest(iVar10, 20))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CYPH_LIVERY13"):
				switch (iParam0)
				{
					case joaat("cypher"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 21) && !BitTest(iVar10, 21))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CYPH_LIVERY14"):
				switch (iParam0)
				{
					case joaat("cypher"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 22) && !BitTest(iVar10, 22))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("CYPH_LIVERY15"):
				switch (iParam0)
				{
					case joaat("cypher"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 23) && !BitTest(iVar10, 23))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("DOM7_LIVERY11"):
				switch (iParam0)
				{
					case joaat("dominator7"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 24) && !BitTest(iVar10, 24))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("DOM7_LIVERY12"):
				switch (iParam0)
				{
					case joaat("dominator7"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 25) && !BitTest(iVar10, 25))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("DOM7_LIVERY13"):
				switch (iParam0)
				{
					case joaat("dominator7"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 26) && !BitTest(iVar10, 26))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("DOM7_LIVERY14"):
				switch (iParam0)
				{
					case joaat("dominator7"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 27) && !BitTest(iVar10, 27))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("DOM7_LIVERY15"):
				switch (iParam0)
				{
					case joaat("dominator7"):
						if (!BitTest(Global_262145.f_23103 /* Tunable: VEHXMAS_CAMO23 */, 28) && !BitTest(iVar10, 28))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("VTC_LIV11"):
				switch (iParam0)
				{
					case joaat("vectre"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 3) && !BitTest(iVar11, 3))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("VTC_LIV12"):
				switch (iParam0)
				{
					case joaat("vectre"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 4) && !BitTest(iVar11, 4))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("VTC_LIV13"):
				switch (iParam0)
				{
					case joaat("vectre"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 5) && !BitTest(iVar11, 5))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("VTC_LIV14"):
				switch (iParam0)
				{
					case joaat("vectre"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 6) && !BitTest(iVar11, 6))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("VTC_LIV15"):
				switch (iParam0)
				{
					case joaat("vectre"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 7) && !BitTest(iVar11, 7))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("GROWLER_LIV11"):
				switch (iParam0)
				{
					case joaat("growler"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 18) && !BitTest(iVar11, 18))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("GROWLER_LIV12"):
				switch (iParam0)
				{
					case joaat("growler"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 19) && !BitTest(iVar11, 19))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("GROWLER_LIV13"):
				switch (iParam0)
				{
					case joaat("growler"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 20) && !BitTest(iVar11, 20))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("GROWLER_LIV14"):
				switch (iParam0)
				{
					case joaat("growler"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 21) && !BitTest(iVar11, 21))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("GROWLER_LIV15"):
				switch (iParam0)
				{
					case joaat("growler"):
						if (!BitTest(Global_262145.f_23104 /* Tunable: VEHXMAS_CAMO24 */, 22) && !BitTest(iVar11, 22))
						{
							return 1;
						}
						break;
				}
				break;
			}
	}
	return __LIB_10__.func_253(iParam0, iParam1, iParam2);
}

int func_66()//Position - 0x149927
{
	if ((Local_124.f_0 == 44 || __LIB_10__.func_554()) || (__LIB_10__.func_553() && __LIB_19__.func_949(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	return 0;
}

int func_67(int iParam0)//Position - 0x14ABF1
{
	int iVar0;
	if (((__LIB_4__.func_528(iParam0) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("windsor")) && !__LIB_0__.func_174(ENTITY::GET_ENTITY_MODEL(iParam0), 0)) && !__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("swift"))
		{
			if (VEHICLE::GET_VEHICLE_LIVERY(Local_124.f_406) > 0)
			{
				return 1;
			}
		}
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("double"):
				if (__LIB_10__.func_102(iParam0, 5) >= 2)
				{
					return 1;
				}
				break;
			case joaat("pcj"):
				if (__LIB_10__.func_102(iParam0, 10) >= 0 && __LIB_10__.func_102(iParam0, 1) >= 0)
				{
					return 1;
				}
				break;
			case joaat("blista3"):
				return 1;
				break;
			case joaat("stalion2"):
			case joaat("shamal"):
				return 1;
			case joaat("burrito2"):
				return 1;
				break;
		}
		if (__LIB_10__.func_467())
		{
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("luxor2"):
				case joaat("swift2"):
				case joaat("stunt"):
					return 1;
					break;
				}
		}
		if (BitTest(Global_4718592.f_39, 7))
		{
			return 1;
		}
		if (VEHICLE::GET_NUM_MOD_KITS(iParam0) == 0)
		{
			return 1;
		}
		iVar0 = VEHICLE::GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(iParam0);
		if (VEHICLE::IS_VEHICLE_SPRAYABLE(iParam0) || __LIB_10__.func_467())
		{
			if (BitTest(iVar0, 0) || __LIB_10__.func_120(iParam0))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_68()//Position - 0x14D634
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (((__LIB_10__.func_554() || __LIB_10__.func_469()) || __LIB_10__.func_17()) || __LIB_10__.func_553())
	{
		if (__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (__LIB_1__.func_174(PLAYER::PLAYER_ID()))
			{
				if (BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_6, 0))
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
						{
							if (VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(Local_124.f_406, false, true) != 0)
							{
								iVar0 = 0;
								while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
								{
									if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
									{
										iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
										if (PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(iVar2), Local_124.f_406, false))
										{
											if (BitTest(Local_104[iVar2 /*17*/].f_6, 6))
											{
												iVar1++;
											}
										}
									}
									iVar0++;
								}
								if (iVar1 == VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(Local_124.f_406, false, true))
								{
									return 1;
								}
								else
								{
									return 0;
								}
							}
							else
							{
								return 1;
							}
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_69(int iParam0)//Position - 0x1513D1
{
	if ((((((((((!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) || __LIB_6__.func_769(iParam0, 0, 0)) || __LIB_6__.func_769(iParam0, 1, 0)) || __LIB_6__.func_769(iParam0, 2, 0)) || __LIB_0__.func_119(iParam0) != 145) || __LIB_0__.func_118(iParam0)) || __LIB_0__.func_117(iParam0)) || __LIB_0__.func_108(iParam0)) || func_2233(iParam0)) || !func_2232(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 0, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 1, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 2, 0))
		{
		}
		if (__LIB_0__.func_119(iParam0) != 145)
		{
		}
		return 0;
	}
	return 1;
}

int func_70(int iParam0, int iParam1)//Position - 0x151EA9
{
	struct<82> Var0;
	if (!__LIB_0__.func_317(iParam0))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_10__.func_267(iParam0, &Var0, iParam1);
		return Var0.f_0;
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

int func_71(var uParam0)//Position - 0x1523A9
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__.func_5();
	iVar2 = 34781;
	__LIB_1__.func_39(iVar2, uParam0->f_103, iVar0);
	iVar2 = 34782;
	__LIB_1__.func_39(iVar2, uParam0->f_104, iVar0);
	iVar2 = 34783;
	__LIB_1__.func_39(iVar2, *uParam0, iVar0);
	iVar1 = 0;
	while (iVar1 < 49)
	{
		iVar2 = (34784 + iVar1);
		__LIB_1__.func_39(iVar2, uParam0->f_9[iVar1], iVar0);
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 2)
	{
		iVar2 = (34809 + iVar1);
		__LIB_1__.func_39(iVar2, uParam0->f_59[iVar1], iVar0);
		iVar1++;
	}
	iVar2 = 34811;
	__LIB_1__.func_39(iVar2, uParam0->f_62, iVar0);
	iVar2 = 34812;
	__LIB_1__.func_39(iVar2, uParam0->f_63, iVar0);
	iVar2 = 34813;
	__LIB_1__.func_39(iVar2, uParam0->f_64, iVar0);
	iVar2 = 34814;
	__LIB_1__.func_39(iVar2, uParam0->f_65, iVar0);
	iVar2 = 34815;
	__LIB_1__.func_39(iVar2, uParam0->f_67, iVar0);
	iVar2 = 34816;
	__LIB_1__.func_39(iVar2, uParam0->f_68, iVar0);
	iVar2 = 34817;
	__LIB_1__.func_39(iVar2, uParam0->f_69, iVar0);
	iVar2 = 34818;
	__LIB_1__.func_39(iVar2, uParam0->f_71, iVar0);
	iVar2 = 34819;
	__LIB_1__.func_39(iVar2, uParam0->f_72, iVar0);
	iVar2 = 34820;
	__LIB_1__.func_39(iVar2, uParam0->f_73, iVar0);
	iVar2 = 34821;
	__LIB_1__.func_39(iVar2, uParam0->f_5, iVar0);
	iVar2 = 34822;
	__LIB_1__.func_39(iVar2, uParam0->f_6, iVar0);
	iVar2 = 34823;
	__LIB_1__.func_39(iVar2, uParam0->f_7, iVar0);
	iVar2 = 34824;
	__LIB_1__.func_39(iVar2, uParam0->f_8, iVar0);
	iVar2 = 34825;
	__LIB_1__.func_39(iVar2, uParam0->f_74, iVar0);
	iVar2 = 34826;
	__LIB_1__.func_39(iVar2, uParam0->f_75, iVar0);
	iVar2 = 34827;
	__LIB_1__.func_39(iVar2, uParam0->f_76, iVar0);
	iVar2 = 34831;
	__LIB_1__.func_39(iVar2, uParam0->f_97, iVar0);
	iVar2 = 34831;
	__LIB_1__.func_39(iVar2, uParam0->f_99, iVar0);
	iVar2 = 34834;
	__LIB_1__.func_39(iVar2, uParam0->f_98, iVar0);
	iVar2 = 34833;
	__LIB_1__.func_39(iVar2, uParam0->f_102, iVar0);
	__LIB_1__.func_597(10405, uParam0->f_105, iVar0, 1, 0);
	__LIB_1__.func_597(10406, uParam0->f_66, iVar0, 1, 0);
	__LIB_1__.func_597(10407, uParam0->f_77, iVar0, 1, 0);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam0->f_1)))
	{
		__LIB_2__.func_205(10408, &(uParam0->f_1), iVar0);
	}
	return 1;
}

int func_72(int iParam0, var uParam1)//Position - 0x15276E
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__.func_5();
	if (iParam0 == 0)
	{
		iVar2 = 31565;
	}
	else
	{
		iVar2 = 31620;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_103, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31566;
	}
	else
	{
		iVar2 = 31621;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_104, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31567;
	}
	else
	{
		iVar2 = 31622;
	}
	__LIB_1__.func_39(iVar2, *uParam1, iVar0);
	iVar1 = 0;
	while (iVar1 < 49)
	{
		if (iParam0 == 0)
		{
			iVar2 = (31568 + iVar1);
		}
		else
		{
			iVar2 = (31623 + iVar1);
		}
		__LIB_1__.func_39(iVar2, uParam1->f_9[iVar1], iVar0);
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 2)
	{
		if (iParam0 == 0)
		{
			iVar2 = (31593 + iVar1);
		}
		else
		{
			iVar2 = (31648 + iVar1);
		}
		__LIB_1__.func_39(iVar2, uParam1->f_59[iVar1], iVar0);
		iVar1++;
	}
	if (iParam0 == 0)
	{
		iVar2 = 31595;
	}
	else
	{
		iVar2 = 31650;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_62, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31596;
	}
	else
	{
		iVar2 = 31651;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_63, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31597;
	}
	else
	{
		iVar2 = 31652;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_64, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31598;
	}
	else
	{
		iVar2 = 31653;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_65, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31599;
	}
	else
	{
		iVar2 = 31654;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_67, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31600;
	}
	else
	{
		iVar2 = 31655;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_68, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31601;
	}
	else
	{
		iVar2 = 31656;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_69, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31602;
	}
	else
	{
		iVar2 = 31657;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_71, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31603;
	}
	else
	{
		iVar2 = 31658;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_72, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31604;
	}
	else
	{
		iVar2 = 31659;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_73, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31605;
	}
	else
	{
		iVar2 = 31660;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_5, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31606;
	}
	else
	{
		iVar2 = 31661;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_6, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31607;
	}
	else
	{
		iVar2 = 31662;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_7, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31608;
	}
	else
	{
		iVar2 = 31663;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_8, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31609;
	}
	else
	{
		iVar2 = 31664;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_74, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31610;
	}
	else
	{
		iVar2 = 31665;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_75, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31611;
	}
	else
	{
		iVar2 = 31666;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_76, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31615;
	}
	else
	{
		iVar2 = 31670;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_97, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31615;
	}
	else
	{
		iVar2 = 31670;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_99, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31618;
	}
	else
	{
		iVar2 = 31673;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_98, iVar0);
	if (iParam0 == 0)
	{
		iVar2 = 31617;
	}
	else
	{
		iVar2 = 31672;
	}
	__LIB_1__.func_39(iVar2, uParam1->f_102, iVar0);
	if (iParam0 == 0)
	{
		__LIB_1__.func_597(9849, uParam1->f_105, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__.func_597(9853, uParam1->f_105, iVar0, 1, 0);
	}
	if (iParam0 == 0)
	{
		__LIB_1__.func_597(9850, uParam1->f_66, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__.func_597(9854, uParam1->f_66, iVar0, 1, 0);
	}
	if (iParam0 == 0)
	{
		__LIB_1__.func_597(9851, uParam1->f_77, iVar0, 1, 0);
	}
	else
	{
		__LIB_1__.func_597(9855, uParam1->f_77, iVar0, 1, 0);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_1)))
	{
		if (iParam0 == 0)
		{
			__LIB_2__.func_205(9852, &(uParam1->f_1), iVar0);
		}
		else
		{
			__LIB_2__.func_205(9856, &(uParam1->f_1), iVar0);
		}
	}
	return 1;
}

void func_73(int iParam0)//Position - 0x15343D
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 >= 0)
	{
		if (iLocal_121 != 7 && iLocal_121 != 2)
		{
			Global_1585857[iParam0 /*142*/].f_138 = -1;
			switch (iLocal_121)
			{
				case 0:
					Global_1585857[iParam0 /*142*/].f_138 = 0;
					break;
				case 1:
					Global_1585857[iParam0 /*142*/].f_138 = 1;
					break;
				case 3:
					Global_1585857[iParam0 /*142*/].f_138 = 2;
					break;
				case 4:
					Global_1585857[iParam0 /*142*/].f_138 = 3;
					break;
				case 5:
					Global_1585857[iParam0 /*142*/].f_138 = 4;
					break;
				}
		}
		if (iLocal_122 != 7 && iLocal_122 != 2)
		{
			Global_1585857[iParam0 /*142*/].f_139 = -1;
			switch (iLocal_122)
			{
				case 0:
					Global_1585857[iParam0 /*142*/].f_139 = 0;
					break;
				case 1:
					Global_1585857[iParam0 /*142*/].f_139 = 1;
					break;
				case 3:
					Global_1585857[iParam0 /*142*/].f_139 = 2;
					break;
				case 4:
					Global_1585857[iParam0 /*142*/].f_139 = 3;
					break;
				case 5:
					Global_1585857[iParam0 /*142*/].f_139 = 4;
					break;
				}
		}
	}
	else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("trailerlarge"))) && __LIB_10__.func_531())
	{
		if (iLocal_121 != 7 && iLocal_121 != 2)
		{
			__LIB_9__.func_928(7, 255, -1);
			switch (iLocal_121)
			{
				case 0:
					__LIB_9__.func_928(7, 0, -1);
					break;
				case 1:
					__LIB_9__.func_928(7, 1, -1);
					break;
				case 3:
					__LIB_9__.func_928(7, 2, -1);
					break;
				case 4:
					__LIB_9__.func_928(7, 3, -1);
					break;
				case 5:
					__LIB_9__.func_928(7, 4, -1);
					break;
				}
		}
		if (iLocal_122 != 7 && iLocal_122 != 2)
		{
			__LIB_9__.func_928(8, 255, -1);
			switch (iLocal_122)
			{
				case 0:
					__LIB_9__.func_928(8, 0, -1);
					break;
				case 1:
					__LIB_9__.func_928(8, 1, -1);
					break;
				case 3:
					__LIB_9__.func_928(8, 2, -1);
					break;
				case 4:
					__LIB_9__.func_928(8, 3, -1);
					break;
				case 5:
					__LIB_9__.func_928(8, 4, -1);
					break;
				}
			}
	}
}

int func_74(char* sParam0, bool bParam1)//Position - 0x157B10
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (__LIB_10__.func_114())
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
			{
				if (__LIB_10__.func_530())
				{
					AUDIO::PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Local_124.f_12, sParam0, "BIKE_MECHANIC", "SPEECH_PARAMS_FORCE", bParam1);
				}
				else if (__LIB_10__.func_554())
				{
					AUDIO::PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Local_124.f_12, sParam0, "OFFICE_MECHANIC", "SPEECH_PARAMS_FORCE", bParam1);
				}
				else
				{
					AUDIO::PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Local_124.f_12, sParam0, "SECUROMECH", "SPEECH_PARAMS_FORCE", bParam1);
				}
				return 1;
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
			}
		}
	}
	return 0;
}

int func_75(int iParam0, int iParam1)//Position - 0x15B5BA
{
	int iVar0;
	iVar0 = 2;
	if ((((__LIB_0__.func_174(iParam1, 0) && !__LIB_10__.func_476(Local_124.f_406, 0)) || __LIB_10__.func_106()) && !__LIB_10__.func_109()) && !__LIB_10__.func_476(Local_124.f_406, 0))
	{
		switch (iParam0)
		{
			case 5:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("calico"):
					case joaat("zr350"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("dominator7"):
					case joaat("dominator8"):
					case joaat("jester4"):
					case joaat("sultan3"):
					case joaat("previon"):
					case joaat("growler"):
					case joaat("cypher"):
					case joaat("euros"):
					case joaat("comet6"):
					case joaat("postlude"):
					case joaat("sentinel4"):
					case joaat("weevil2"):
						iVar0 = 87;
						break;
					case joaat("rt3000"):
					case joaat("tailgater2"):
						iVar0 = 89;
						break;
					case joaat("corsita"):
					case joaat("draugur"):
					case joaat("torero2"):
					case joaat("kanjosj"):
					case joaat("greenwood"):
					case joaat("brioso3"):
					case joaat("picador"):
						break;
					case joaat("tenf"):
						iVar0 = 102;
						break;
					default:
						iVar0 = 86;
						break;
				}
				break;
			case 42:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("calico"):
					case joaat("zr350"):
					case joaat("warrener2"):
					case joaat("vectre"):
					case joaat("comet6"):
					case joaat("futo2"):
					case joaat("dominator7"):
					case joaat("tailgater2"):
					case joaat("sultan3"):
					case joaat("remus"):
					case joaat("rt3000"):
					case joaat("tenf2"):
					case joaat("postlude"):
					case joaat("greenwood"):
					case joaat("brioso3"):
					case joaat("sentinel4"):
						break;
					case joaat("previon"):
						iVar0 = 89;
						break;
					case joaat("jester4"):
					case joaat("tenf"):
						iVar0 = 102;
						break;
					default:
						iVar0 = 86;
						break;
				}
				break;
			case 44:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("youga3"):
					case joaat("calico"):
					case joaat("zr350"):
					case joaat("jester4"):
					case joaat("warrener2"):
					case joaat("dominator7"):
					case joaat("sultan3"):
					case joaat("previon"):
					case joaat("futo2"):
					case joaat("greenwood"):
					case joaat("sentinel4"):
						break;
					case joaat("comet6"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("cypher"):
					case joaat("tailgater2"):
					case joaat("kanjosj"):
					case joaat("tenf2"):
						iVar0 = 102;
						break;
					default:
						iVar0 = 86;
						break;
				}
				break;
			case 43:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("youga3"):
						break;
					case joaat("zr350"):
					case joaat("comet6"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("cypher"):
					case joaat("previon"):
					case joaat("dominator8"):
					case joaat("euros"):
					case joaat("growler"):
					case joaat("dominator7"):
					case joaat("tailgater2"):
					case joaat("calico"):
					case joaat("sultan3"):
					case joaat("kanjosj"):
					case joaat("tenf2"):
					case joaat("sentinel4"):
						iVar0 = 101;
						break;
					default:
						iVar0 = 86;
						break;
				}
				break;
			case 7:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("zr350"):
					case joaat("jester4"):
					case joaat("comet6"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("cypher"):
					case joaat("previon"):
					case joaat("dominator8"):
					case joaat("euros"):
					case joaat("growler"):
					case joaat("dominator7"):
					case joaat("tailgater2"):
					case joaat("calico"):
					case joaat("sultan3"):
					case joaat("kanjosj"):
					case joaat("weevil2"):
					case joaat("tenf2"):
					case joaat("sentinel4"):
						iVar0 = 101;
						break;
					case joaat("greenwood"):
						iVar0 = 89;
						break;
				}
				break;
			case 45:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("gauntlet5"):
					case joaat("zr350"):
					case joaat("dominator7"):
					case joaat("previon"):
					case joaat("calico"):
						break;
					case joaat("tailgater2"):
					case joaat("dominator8"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("sentinel4"):
						iVar0 = 89;
						break;
					case joaat("jester4"):
						iVar0 = 101;
						break;
					default:
						iVar0 = 86;
						break;
				}
				break;
			case 27:
			case 35:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("gauntlet5"):
					case joaat("warrener2"):
					case joaat("comet6"):
					case joaat("vectre"):
					case joaat("remus"):
					case joaat("jester4"):
					case joaat("rt3000"):
					case joaat("cypher"):
					case joaat("dominator8"):
					case joaat("futo2"):
					case joaat("euros"):
					case joaat("dominator7"):
					case joaat("zr350"):
					case joaat("previon"):
					case joaat("tailgater2"):
					case joaat("growler"):
					case joaat("sultan3"):
					case joaat("tenf2"):
					case joaat("kanjosj"):
					case joaat("postlude"):
					case joaat("sentinel4"):
					case joaat("brioso3"):
					case joaat("weevil2"):
						break;
					default:
						iVar0 = 87;
						break;
				}
				break;
			case 29:
			case 30:
				iVar0 = 87;
				break;
			case 31:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("yosemite3"))
				{
					iVar0 = 87;
				}
				break;
			case 32:
			case 33:
			case 34:
			case 36:
				iVar0 = 87;
				break;
			case 28:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("gauntlet5"))
				{
				}
				else
				{
					iVar0 = 87;
				}
				break;
			case 46:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("sultanrs"):
					case joaat("slamvan3"):
					case joaat("futo2"):
						iVar0 = 86;
						break;
					case joaat("youga3"):
					case joaat("comet6"):
					case joaat("warrener2"):
					case joaat("dominator7"):
					case joaat("rt3000"):
					case joaat("previon"):
					case joaat("zr350"):
					case joaat("growler"):
					case joaat("weevil2"):
					case joaat("postlude"):
						break;
					case joaat("sentinel4"):
						iVar0 = 89;
						break;
					default:
						iVar0 = 87;
						break;
				}
				break;
			case 47:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("sultanrs"):
					case joaat("slamvan3"):
						iVar0 = 86;
						break;
					case joaat("youga3"):
					case joaat("yosemite3"):
					case joaat("zr350"):
					case joaat("calico"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("tailgater2"):
					case joaat("previon"):
					case joaat("euros"):
					case joaat("growler"):
					case joaat("torero2"):
					case joaat("kanjosj"):
					case joaat("sentinel4"):
					case joaat("brioso3"):
						break;
					case joaat("dominator7"):
					case joaat("futo2"):
					case joaat("rt3000"):
					case joaat("postlude"):
						iVar0 = 89;
						break;
					default:
						iVar0 = 87;
						break;
				}
				break;
			case 6:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("futo2"):
						iVar0 = 86;
						break;
					case joaat("dominator7"):
					case joaat("zr350"):
						iVar0 = 89;
						break;
					case joaat("weevil2"):
						iVar0 = 101;
						break;
				}
				break;
			case 25:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("gauntlet5"):
						break;
					case joaat("comet6"):
					case joaat("futo2"):
					case joaat("calico"):
					case joaat("tailgater2"):
						iVar0 = 88;
						break;
					default:
						if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
						{
						}
						else
						{
							iVar0 = 88;
						}
						break;
				}
				break;
			case 26:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("gauntlet5"):
					case joaat("tenf2"):
					case joaat("postlude"):
						break;
					case joaat("calico"):
						iVar0 = 88;
						break;
					case joaat("remus"):
						iVar0 = 89;
						break;
					case joaat("futo2"):
						iVar0 = 99;
						break;
					default:
						if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
						{
						}
						else
						{
							iVar0 = 88;
						}
						break;
				}
				break;
			case 39:
			case 40:
			case 41:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("gauntlet5"))
				{
					iVar0 = 89;
				}
				break;
			case 11:
				if ((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("comet6") && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("torero2")) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("tenf2")) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("corsita")) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("draugur"))
				{
					iVar0 = 89;
				}
				break;
			case 10:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("comet6"):
					case joaat("jester4"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("cypher"):
					case joaat("tailgater2"):
					case joaat("tenf"):
					case joaat("kanjosj"):
					case joaat("tenf2"):
					case joaat("schwarzer"):
						iVar0 = 102;
						break;
				}
				break;
			}
	}
	if (__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		switch (iParam0)
		{
			case 10:
				if ((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab3"))
				{
					iVar0 = 89;
				}
				else if (((((((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("bruiser") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("dominator4")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("brutus")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler4")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("brutus2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("brutus3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("bruiser2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("bruiser3"))
				{
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("zr3802"))
				{
					iVar0 = 86;
				}
				else
				{
					iVar0 = 99;
				}
				break;
			case 42:
			case 45:
			case 9:
				iVar0 = 99;
				break;
			case 28:
			case 44:
			case 5:
			case 43:
			case 26:
				iVar0 = 86;
				break;
			case 27:
			case 30:
			case 31:
			case 32:
			case 33:
			case 34:
				iVar0 = 87;
				break;
			case 29:
				if (((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("dominator4") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("dominator5")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("dominator6")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("issi5"))
				{
				}
				else
				{
					iVar0 = 87;
				}
				break;
			case 35:
				switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
				{
					case joaat("scarab"):
					case joaat("scarab2"):
					case joaat("scarab3"):
					case joaat("imperator"):
					case joaat("imperator2"):
					case joaat("imperator3"):
					case joaat("dominator4"):
					case joaat("dominator5"):
					case joaat("dominator6"):
					case joaat("slamvan4"):
					case joaat("slamvan5"):
					case joaat("slamvan6"):
					case joaat("brutus"):
					case joaat("brutus2"):
					case joaat("brutus3"):
					case joaat("issi4"):
					case joaat("issi5"):
					case joaat("issi6"):
					case joaat("cerberus"):
					case joaat("cerberus2"):
					case joaat("cerberus3"):
					case joaat("monster3"):
					case joaat("monster4"):
					case joaat("monster5"):
					case joaat("impaler4"):
					case joaat("impaler2"):
					case joaat("bruiser"):
					case joaat("bruiser2"):
					case joaat("bruiser3"):
						iVar0 = 86;
						break;
					default:
						iVar0 = 87;
						break;
				}
				break;
			case 8:
				if ((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler2") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler4"))
				{
					iVar0 = 89;
				}
				break;
			case 11:
				if (((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler2") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("impaler4")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab3"))
				{
					iVar0 = 89;
				}
				break;
			case 6:
			case 1:
			case 2:
				if ((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("scarab3"))
				{
					iVar0 = 86;
				}
				break;
			}
	}
	if (__LIB_10__.func_109())
	{
		switch (iParam0)
		{
			case 1:
			case 2:
				if (__LIB_4__.func_536(Local_124.f_406))
				{
					iVar0 = 99;
				}
				break;
			case 45:
			case 26:
				if (__LIB_4__.func_536(Local_124.f_406))
				{
					iVar0 = 100;
				}
				break;
			case 39:
			case 40:
			case 41:
			case 11:
				iVar0 = 89;
				break;
			case 27:
			case 29:
			case 30:
			case 31:
			case 32:
			case 33:
			case 5:
				iVar0 = 87;
				break;
			case 42:
			case 9:
			case 46:
			case 47:
				iVar0 = 86;
				break;
			case 8:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("comet3"))
				{
					iVar0 = 86;
				}
				break;
			case 7:
			case 43:
				iVar0 = 101;
				break;
			case 44:
			case 10:
				iVar0 = 102;
				break;
			case 25:
				iVar0 = 88;
				break;
			}
	}
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("gauntlet5"))
	{
		switch (iParam0)
		{
			case 7:
			case 35:
			case 6:
				iVar0 = 101;
				break;
			}
	}
	if (iParam1 == joaat("btype3"))
	{
		switch (iParam0)
		{
			case 42:
			case 9:
			case 44:
			case 5:
			case 10:
			case 8:
			case 43:
			case 46:
			case 0:
				iVar0 = 86;
				break;
			}
	}
	if (!__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)) && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("sultan2"))
	{
		if (iParam0 == 28)
		{
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("gauntlet5") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("weevil2"))
			{
			}
			else
			{
				iVar0 = 87;
			}
		}
	}
	if (__LIB_4__.func_533(Local_124.f_406))
	{
		switch (iParam0)
		{
			case 11:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("manchez") && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("hakuchou2"))
				{
					iVar0 = 89;
				}
				break;
			case 3:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("faggio3") && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("blazer4"))
				{
					iVar0 = 86;
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("blazer4"))
				{
					iVar0 = 89;
				}
				break;
			case 5:
				if ((((ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("defiler") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("faggio3")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("manchez")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("hakuchou2")) || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("blazer4"))
				{
					iVar0 = 86;
				}
				else
				{
					iVar0 = 89;
				}
				break;
			case 10:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("blazer4"))
				{
					iVar0 = 89;
				}
				else
				{
					iVar0 = 86;
				}
				break;
			case 1:
			case 0:
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("blazer4"))
				{
				}
				else
				{
					iVar0 = 86;
				}
				break;
			case 32:
				if (__LIB_10__.func_136())
				{
					iVar0 = 86;
				}
				break;
			case 2:
			case 7:
			case 6:
			case 8:
			case 9:
				iVar0 = 86;
				break;
			}
	}
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		switch (iParam0)
		{
			case 7:
			case 6:
			case 8:
			case 9:
			case 2:
			case 1:
			case 0:
			case 10:
			case 5:
			case 3:
			case 48:
			case 14:
				iVar0 = 86;
				return iVar0;
				break;
			case 4:
				if (__LIB_4__.func_532() || __LIB_4__.func_531())
				{
					iVar0 = 86;
					return iVar0;
				}
				break;
			case 11:
			case 15:
			case 12:
			case 13:
			case 18:
				if (__LIB_4__.func_532() || __LIB_4__.func_531())
				{
					iVar0 = 89;
					return iVar0;
				}
				break;
			}
	}
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("penetrator"))
	{
		switch (iParam0)
		{
			case 10:
			case 6:
			case 11:
				iVar0 = 89;
			}
		default:
	}
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("infernus2"))
	{
		switch (iParam0)
		{
			case 8:
			case 11:
			case 10:
				iVar0 = 89;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("gp1"))
	{
		switch (iParam0)
		{
			case 10:
			case 11:
				iVar0 = 89;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("turismo2"))
	{
		switch (iParam0)
		{
			case 8:
			case 11:
				iVar0 = 89;
				break;
			}
	}
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("xa21"))
	{
		switch (iParam0)
		{
			case 11:
			case 8:
			case 0:
				iVar0 = 89;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("cheetah2"))
	{
		switch (iParam0)
		{
			case 8:
			case 11:
				iVar0 = 89;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("ardent"))
	{
		switch (iParam0)
		{
			case 10:
			case 11:
				iVar0 = 89;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("tampa3"))
	{
		switch (iParam0)
		{
			case 1:
			case 2:
			case 10:
				iVar0 = 99;
				break;
		}
	}
	else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("oppressor"))
	{
		switch (iParam0)
		{
			case 5:
			case 11:
				iVar0 = 89;
				break;
		}
	}
	else if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("torero")))
	{
		switch (iParam0)
		{
			case 10:
			case 11:
				iVar0 = 89;
				break;
			case 9:
			case 6:
				iVar0 = 86;
				break;
		}
	}
	else if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("nightshark")))
	{
		switch (iParam0)
		{
			case 8:
			case 1:
			case 2:
			case 5:
				iVar0 = 86;
				break;
			}
	}
	if (__LIB_9__.func_917(Local_124.f_406))
	{
		switch (iParam0)
		{
			case 9:
			case 10:
			case 5:
				iVar0 = 99;
				break;
			}
	}
	switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
	{
		case joaat("barrage"):
			switch (iParam0)
			{
				case 9:
				case 8:
				case 5:
				case 6:
				case 3:
				case 1:
				case 2:
					iVar0 = 86;
					break;
				case 10:
				case 0:
					iVar0 = 99;
					break;
			}
			break;
		case joaat("z190"):
			switch (iParam0)
			{
				case 8:
				case 9:
				case 5:
				case 11:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("viseris"):
			switch (iParam0)
			{
				case 6:
				case 11:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("dominator3"):
		case joaat("oppressor2"):
			switch (iParam0)
			{
				case 5:
				case 11:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("speedo4"):
			switch (iParam0)
			{
				case 10:
				case 0:
				case 9:
					iVar0 = 99;
					break;
			}
			break;
		case joaat("mule4"):
			switch (iParam0)
			{
				case 10:
				case 1:
				case 9:
					iVar0 = 99;
					break;
			}
			break;
		case joaat("swinger"):
			switch (iParam0)
			{
				case 5:
				case 11:
				case 3:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("pounder2"):
			switch (iParam0)
			{
				case 10:
				case 2:
				case 9:
					iVar0 = 99;
					break;
			}
			break;
		case joaat("italigto"):
		case joaat("furia"):
		case joaat("brioso2"):
			switch (iParam0)
			{
				case 11:
				case 5:
					if (__LIB_4__.func_532() || __LIB_4__.func_531())
					{
						if (iParam0 == 5)
						{
							iVar0 = 86;
						}
					}
					else
					{
						iVar0 = 89;
					}
					break;
			}
			break;
		case joaat("neo"):
		case joaat("rrocket"):
			switch (iParam0)
			{
				case 11:
				case 5:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("yosemite3"):
			switch (iParam0)
			{
				case 5:
					iVar0 = 87;
					break;
			}
			break;
		case joaat("seminole2"):
			switch (iParam0)
			{
				case 0:
				case 7:
					iVar0 = 101;
					break;
			}
			break;
		case joaat("veto"):
		case joaat("veto2"):
			switch (iParam0)
			{
				case 0:
				case 11:
					iVar0 = 89;
					break;
			}
			break;
		case joaat("futo2"):
			switch (iParam0)
			{
				case 1:
				case 2:
				case 26:
					iVar0 = 99;
					break;
			}
			break;
		case joaat("ruiner4"):
			switch (iParam0)
			{
				case 6:
				case 10:
					iVar0 = 102;
					break;
			}
			break;
		case joaat("tenf"):
		case joaat("turismor"):
			switch (iParam0)
			{
				case 5:
				case 10:
					iVar0 = 102;
					break;
			}
			break;
		case joaat("schwarzer"):
			switch (iParam0)
			{
				case 9:
				case 10:
					iVar0 = 102;
					break;
			}
			break;
	}
	return iVar0;
}

void func_76(int iParam0)//Position - 0x15D216
{
	if (!__LIB_19__.func_910(iParam0))
	{
		__LIB_0__.func_521(__LIB_9__.func_525(iParam0), 1, -1);
		__LIB_10__.func_277();
	}
}

void func_77(bool bParam0)//Position - 0x15DB0B
{
	if (__LIB_10__.func_523())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(iLocal_201, 5))
			{
				MISC::SET_BIT(&iLocal_201, 5);
			}
		}
		else if (BitTest(iLocal_201, 5))
		{
			MISC::CLEAR_BIT(&iLocal_201, 5);
		}
	}
	else if (__LIB_4__.func_532())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 0))
			{
				MISC::SET_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 0);
			}
		}
		else if (BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 0))
		{
			MISC::CLEAR_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 0);
		}
	}
	else if (__LIB_4__.func_531())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789625.f_105, 0))
			{
				MISC::SET_BIT(&(Global_2789625.f_105), 0);
			}
		}
		else if (BitTest(Global_2789625.f_105, 0))
		{
			MISC::CLEAR_BIT(&(Global_2789625.f_105), 0);
		}
	}
}

int func_78(int iParam0)//Position - 0x15E7FE
{
	int iVar0;
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 0;
	}
	iVar0 = 0;
	switch (iParam0)
	{
		case 0:
			iVar0 = 500;
			break;
		case 1:
			iVar0 = 590;
			break;
		case 2:
			iVar0 = 540;
			break;
		case 3:
			iVar0 = 520;
			break;
		case 4:
			iVar0 = 570;
			break;
		case 5:
			iVar0 = 590;
			break;
		case 6:
			iVar0 = 610;
			break;
		case 7:
			iVar0 = 1270;
			break;
		case 8:
			iVar0 = 1410;
			break;
		case 9:
			iVar0 = 1380;
			break;
		case 10:
			iVar0 = 2440;
			break;
		case 11:
			iVar0 = 1460;
			break;
		case 12:
			iVar0 = 1220;
			break;
		case 13:
			iVar0 = 2500;
			break;
		case 14:
			iVar0 = 2100;
			break;
		case 15:
			iVar0 = 1530;
			break;
		case 16:
			iVar0 = 1950;
			break;
		case 17:
			iVar0 = 2280;
			break;
		case 18:
			iVar0 = 550;
			break;
		case 19:
			iVar0 = 580;
			break;
		case 20:
			iVar0 = 1100;
			break;
		case 21:
			iVar0 = 600;
			break;
		case 22:
			iVar0 = 990;
			break;
		case 23:
			iVar0 = 550;
			break;
		case 24:
			iVar0 = 530;
			break;
		case 25:
			iVar0 = 1730;
			break;
		case 26:
			iVar0 = 1900;
			break;
		case 27:
			iVar0 = 2050;
			break;
		case 28:
			iVar0 = 2350;
			break;
		case 29:
			iVar0 = 1600;
			break;
		case 30:
			iVar0 = 870;
			break;
		case 31:
			iVar0 = 1160;
			break;
		case 32:
			iVar0 = 590;
			break;
		case 33:
			iVar0 = 1320;
			break;
		case 34:
			iVar0 = 1680;
			break;
		case 35:
			iVar0 = 1500;
			break;
		case 36:
			iVar0 = 1830;
			break;
		case 37:
			iVar0 = 2000;
			break;
		case 38:
			iVar0 = 1740;
			break;
		case 39:
			iVar0 = 2220;
			break;
		case 40:
			iVar0 = 1200;
			break;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar0) * __LIB_10__.func_281()));
	}
	return iVar0;
}

int func_79()//Position - 0x160D46
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
	{
		if (VEHICLE::IS_TOGGLE_MOD_ON(Local_124.f_406, 20))
		{
			if (__LIB_0__.func_289(Local_124.f_406))
			{
				return 11;
			}
			VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(Local_124.f_406, &iVar0, &iVar1, &iVar2);
			return __LIB_7__.func_788(iVar0, iVar1, iVar2);
		}
	}
	return 1;
}

int func_80(int iParam0, int iParam1)//Position - 0x1610DD
{
	int iVar0;
	iVar0 = __LIB_10__.func_287(Local_124.f_406, iParam0);
	return (iParam1 / iVar0);
}

void func_81(bool bParam0)//Position - 0x163000
{
	if (__LIB_10__.func_523())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(iLocal_201, 9))
			{
				MISC::SET_BIT(&iLocal_201, 9);
			}
		}
		else if (BitTest(iLocal_201, 9))
		{
			MISC::CLEAR_BIT(&iLocal_201, 9);
		}
	}
	else if (__LIB_4__.func_532())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 3))
			{
				MISC::SET_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 3);
			}
		}
		else if (BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 3))
		{
			MISC::CLEAR_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 3);
		}
	}
	else if (__LIB_4__.func_531())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789625.f_105, 3))
			{
				MISC::SET_BIT(&(Global_2789625.f_105), 3);
			}
		}
		else if (BitTest(Global_2789625.f_105, 3))
		{
			MISC::CLEAR_BIT(&(Global_2789625.f_105), 3);
		}
	}
}

int func_82()//Position - 0x16317E
{
	if (__LIB_4__.func_532() || __LIB_4__.func_531())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if ((((Local_124.f_603 == 8 || Local_124.f_603 == 9) || Local_124.f_603 == 10) || Local_124.f_603 == 11) || Local_124.f_603 == 12)
		{
			return 0;
		}
	}
	return 1;
}

void func_83(bool bParam0)//Position - 0x164AAD
{
	if (__LIB_10__.func_523())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(iLocal_201, 6))
			{
				MISC::SET_BIT(&iLocal_201, 6);
			}
		}
		else if (BitTest(iLocal_201, 6))
		{
			MISC::CLEAR_BIT(&iLocal_201, 6);
		}
	}
	else if (__LIB_4__.func_532())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 1))
			{
				MISC::SET_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 1);
			}
		}
		else if (BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 1))
		{
			MISC::CLEAR_BIT(&(Global_2789412[__LIB_10__.func_119() /*106*/].f_105), 1);
		}
	}
	else if (__LIB_4__.func_531())
	{
		if (bParam0)
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
			if (!BitTest(Global_2789625.f_105, 1))
			{
				MISC::SET_BIT(&(Global_2789625.f_105), 1);
			}
		}
		else if (BitTest(Global_2789625.f_105, 1))
		{
			MISC::CLEAR_BIT(&(Global_2789625.f_105), 1);
		}
	}
}

void func_84()//Position - 0x16C1DF
{
	if (__LIB_10__.func_523())
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
		if (!BitTest(iLocal_201, 8))
		{
			MISC::SET_BIT(&iLocal_201, 8);
		}
	}
}

int func_85()//Position - 0x16F234
{
	if (!__LIB_10__.func_553() && !__LIB_10__.func_12())
	{
		return 1;
	}
	return 14;
}

bool func_86(int iParam0, char* sParam1)//Position - 0x177D1B
{
	int iVar0;
	struct<3> Var1;
	iVar0 = ENTITY::GET_ENTITY_BONE_INDEX_BY_NAME(iParam0, sParam1);
	if (iVar0 == -1)
	{
		return 0;
	}
	Var1 = { ENTITY::GET_WORLD_POSITION_OF_ENTITY_BONE(iParam0, iVar0) };
	return !__LIB_10__.func_332(ENTITY::GET_ENTITY_FORWARD_VECTOR(iParam0), ENTITY::GET_ENTITY_COORDS(iParam0, true), Var1);
}

void func_87(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0x17C469
{
	struct<7> Var0;
	int iVar1;
	int iVar2;
	Var0.f_0 = 1394668142;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = uParam0;
	Var0.f_3 = uParam1;
	Var0.f_4 = uParam2;
	Var0.f_5 = uParam3;
	Var0.f_6 = uParam4;
	iVar2 = __LIB_0__.func_603(PLAYER::PLAYER_ID());
	MISC::SET_BIT(&iVar1, iVar2);
	SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 7, iVar1);
}

void func_88()//Position - 0x182812
{
	bool bVar0;
	bVar0 = __LIB_1__.func_595(52, -1);
	if (bVar0)
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 17);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_3), 17);
	}
}

int func_89(int iParam0)//Position - 0x18285D
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 15);
}

void func_90()//Position - 0x182C9D
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		Global_103230 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	}
	__LIB_9__.func_905(0);
	if (Local_124.f_116.f_1 == 0)
	{
		Local_124.f_116.f_5 = 0;
		__LIB_10__.func_468(6);
		VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, true);
		__LIB_10__.func_37(1);
		__LIB_2__.func_519(0);
		__LIB_3__.func_438(0);
	}
	else if ((Local_124.f_116.f_1 == 1 && !__LIB_1__.func_251(PLAYER::PLAYER_ID())) || ((Local_124.f_116.f_1 == 2 && __LIB_1__.func_251(PLAYER::PLAYER_ID())) && !Global_262145.f_21130 /* Tunable: 2020787663 */))
	{
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 309, false);
		TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
		__LIB_10__.func_34(0);
		__LIB_10__.func_468(8);
		__LIB_9__.func_952(1);
		__LIB_3__.func_435(1);
	}
	else if ((Local_124.f_116.f_1 == 1 && __LIB_1__.func_251(PLAYER::PLAYER_ID())) && !Global_262145.f_21130 /* Tunable: 2020787663 */)
	{
		MISC::SET_BIT(&uLocal_202, 13);
		Local_124.f_116.f_5 = 0;
		__LIB_10__.func_468(6);
		VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, true);
		__LIB_10__.func_37(1);
		__LIB_3__.func_438(0);
		__LIB_2__.func_519(0);
	}
	MISC::CLEAR_BIT(&(Global_100493.f_1466), 2);
}

void func_91()//Position - 0x182F48
{
	VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, true);
	__LIB_10__.func_37(1);
	__LIB_9__.func_940(1);
	__LIB_10__.func_468(6);
	__LIB_10__.func_34(0);
	if (__LIB_9__.func_935(PLAYER::PLAYER_ID()))
	{
		if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(NETWORK::VEH_TO_NET(Local_124.f_406)))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
			{
				if (NETWORK::NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(Local_124.f_406))
				{
					NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::VEH_TO_NET(Local_124.f_406), true);
				}
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_406);
			}
		}
	}
	VEHICLE::SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED(Local_124.f_406, false);
	NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(Local_124.f_406, true, true);
	NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(Local_124.f_12, true, true);
	NETWORK::SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(true, true);
	NETWORK::NETWORK_SET_IN_MP_CUTSCENE(true, false);
}

void func_92()//Position - 0x1844E6
{
	__LIB_0__.func_151("FM_IHELP_TRK" /* GXT: You can fit vehicles with a Tracker which allows you to locate your vehicle. Tracked vehicles are shown by the ~BLIP_GANG_VEHICLE~ icon. */, -1);
}

int func_93(int iParam0, int iParam1)//Position - 0x184629
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	if (iVar0 == joaat("btype3"))
	{
		switch (iParam0)
		{
			case 79:
			case 94:
			case 93:
			case 81:
			case 9:
			case 40:
			case 80:
			case 83:
			case 46:
				return 1;
				break;
			}
	}
	if (((__LIB_0__.func_174(iVar0, 0) && !__LIB_10__.func_476(Local_124.f_406, 0)) && ((Local_124.f_0 == 44 || __LIB_10__.func_554()) || (__LIB_10__.func_553() && __LIB_19__.func_949(PLAYER::PLAYER_ID())))) || __LIB_10__.func_106())
	{
		switch (iParam0)
		{
			case 10:
				if (__LIB_10__.func_523() && iVar0 == joaat("btype3"))
				{
					return 0;
				}
				else if ((((((((iVar0 == joaat("impaler2") || iVar0 == joaat("gauntlet5")) || iVar0 == joaat("youga3")) || iVar0 == joaat("comet6")) || iVar0 == joaat("torero2")) || iVar0 == joaat("tenf2")) || iVar0 == joaat("corsita")) || iVar0 == joaat("draugur")) || iVar0 == joaat("weevil2"))
				{
					return 0;
				}
				else
				{
					return 1;
				}
				break;
			case 33:
				if (__LIB_10__.func_523() && iVar0 == joaat("btype3"))
				{
					return 0;
				}
				else if (((((((((iVar0 == joaat("impaler2") || iVar0 == joaat("youga3")) || iVar0 == joaat("gauntlet5")) || iVar0 == joaat("yosemite3")) || ((((__LIB_1__.func_932(iVar0) && iVar0 != joaat("comet6")) && iVar0 != joaat("futo2")) && iVar0 != joaat("calico")) && iVar0 != joaat("tailgater2"))) || iVar0 == joaat("torero2")) || iVar0 == joaat("weevil2")) || iVar0 == joaat("greenwood")) || iVar0 == joaat("kanjosj")) || iVar0 == joaat("tenf2"))
				{
					return 0;
				}
				else
				{
					return 1;
				}
				break;
			case 62:
				switch (iVar0)
				{
					case joaat("gauntlet5"):
						return 0;
						break;
					default:
						if ((((__LIB_1__.func_932(iVar0) && iVar0 != joaat("comet6")) && iVar0 != joaat("futo2")) && iVar0 != joaat("calico")) && iVar0 != joaat("tailgater2"))
						{
							return 0;
						}
						else
						{
							return 1;
						}
						break;
				}
				break;
			case 63:
				switch (iVar0)
				{
					case joaat("gauntlet5"):
					case joaat("corsita"):
					case joaat("tenf2"):
					case joaat("lm87"):
					case joaat("postlude"):
						return 0;
						break;
					default:
						if (((__LIB_1__.func_932(iVar0) && iVar0 != joaat("futo2")) && iVar0 != joaat("calico")) && iVar0 != joaat("remus"))
						{
							return 0;
						}
						else
						{
							return 1;
						}
						break;
				}
				break;
			case 9:
				if (((((iVar0 == joaat("weevil2") || iVar0 == joaat("draugur")) || iVar0 == joaat("greenwood")) || iVar0 == joaat("torero2")) || iVar0 == joaat("greenwood")) || iVar0 == joaat("picador"))
				{
					return 0;
				}
				return 1;
				break;
			case 66:
			case 67:
				return 1;
				break;
			case 68:
				if (iVar0 != joaat("yosemite3"))
				{
					return 1;
				}
				break;
			case 69:
			case 70:
			case 71:
			case 73:
			case 90:
			case 92:
				return 1;
				break;
			case 91:
				switch (iVar0)
				{
					case joaat("warrener2"):
					case joaat("comet6"):
					case joaat("vectre"):
					case joaat("remus"):
					case joaat("jester4"):
					case joaat("rt3000"):
					case joaat("growler"):
						return 0;
						break;
				}
				return 1;
				break;
			case 79:
				switch (iVar0)
				{
					case joaat("calico"):
					case joaat("warrener2"):
					case joaat("vectre"):
					case joaat("dominator7"):
					case joaat("tailgater2"):
					case joaat("comet6"):
					case joaat("remus"):
					case joaat("sultan3"):
					case joaat("rt3000"):
						return 0;
						break;
				}
				return 1;
				break;
			case 81:
				switch (iVar0)
				{
					case joaat("youga3"):
					case joaat("calico"):
					case joaat("zr350"):
					case joaat("warrener2"):
					case joaat("dominator7"):
					case joaat("sultan3"):
					case joaat("previon"):
					case joaat("futo2"):
					case joaat("greenwood"):
						return 0;
						break;
				}
				return 1;
				break;
			case 80:
				switch (iVar0)
				{
					case joaat("youga3"):
					case joaat("draugur"):
						return 0;
						break;
				}
				return 1;
				break;
			case 83:
				switch (iVar0)
				{
					case joaat("youga3"):
					case joaat("comet6"):
					case joaat("warrener2"):
					case joaat("dominator7"):
					case joaat("zr350"):
					case joaat("growler"):
						return 0;
						break;
				}
				return 1;
				break;
			case 84:
				switch (iVar0)
				{
					case joaat("youga3"):
					case joaat("yosemite3"):
					case joaat("zr350"):
					case joaat("calico"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("tailgater2"):
					case joaat("previon"):
					case joaat("growler"):
					case joaat("torero2"):
						return 0;
						break;
				}
				return 1;
				break;
			case 32:
				switch (iVar0)
				{
					case joaat("zr350"):
					case joaat("calico"):
					case joaat("warrener2"):
					case joaat("dominator7"):
					case joaat("rt3000"):
					case joaat("tailgater2"):
					case joaat("previon"):
					case joaat("euros"):
					case joaat("growler"):
					case joaat("torero2"):
					case joaat("weevil2"):
					case joaat("tenf2"):
					case joaat("postlude"):
					case joaat("kanjosj"):
						return 0;
						break;
				}
				break;
			case 65:
				if (iVar0 == joaat("gauntlet5"))
				{
					return 0;
				}
				else
				{
					return 1;
				}
				break;
			case 82:
				switch (iVar0)
				{
					case joaat("gauntlet5"):
					case joaat("zr350"):
					case joaat("dominator7"):
					case joaat("previon"):
					case joaat("calico"):
						return 0;
						break;
				}
				return 1;
				break;
			case 76:
				if (iVar0 == joaat("gauntlet5") || iVar0 == joaat("youga3"))
				{
					return 0;
				}
				else
				{
					return 1;
				}
				break;
			case 64:
			case 72:
				switch (iVar0)
				{
					case joaat("gauntlet5"):
					case joaat("warrener2"):
					case joaat("comet6"):
					case joaat("vectre"):
					case joaat("remus"):
					case joaat("jester4"):
					case joaat("rt3000"):
					case joaat("dominator8"):
					case joaat("futo2"):
					case joaat("euros"):
					case joaat("dominator7"):
					case joaat("zr350"):
					case joaat("previon"):
					case joaat("tailgater2"):
					case joaat("growler"):
						return 0;
						break;
				}
				return 1;
				break;
			case 77:
			case 78:
				if (__LIB_10__.func_553() && __LIB_10__.func_476(Local_124.f_406, 0))
				{
				}
				else
				{
					return 1;
				}
				break;
			case 36:
				if (__LIB_10__.func_109())
				{
					return 1;
				}
				switch (iVar0)
				{
					case joaat("zr350"):
					case joaat("dominator7"):
					case joaat("corsita"):
					case joaat("greenwood"):
					case joaat("tenf2"):
						return 0;
						break;
				}
				break;
			case 40:
				if (__LIB_10__.func_109())
				{
					return 1;
				}
				switch (iVar0)
				{
					case joaat("remus"):
					case joaat("comet6"):
					case joaat("vectre"):
					case joaat("jester4"):
					case joaat("cypher"):
					case joaat("tailgater2"):
					case joaat("tenf"):
					case joaat("kanjosj"):
					case joaat("tenf2"):
						return 1;
						break;
				}
				break;
			case 18:
			case 26:
				if (__LIB_10__.func_109())
				{
					return 1;
				}
				switch (iVar0)
				{
					case joaat("zr350"):
					case joaat("jester4"):
					case joaat("comet6"):
					case joaat("warrener2"):
					case joaat("remus"):
					case joaat("vectre"):
					case joaat("cypher"):
					case joaat("previon"):
					case joaat("dominator8"):
					case joaat("euros"):
					case joaat("growler"):
					case joaat("dominator7"):
					case joaat("tailgater2"):
					case joaat("calico"):
					case joaat("sultan3"):
					case joaat("kanjosj"):
					case joaat("weevil2"):
					case joaat("tenf2"):
					case joaat("greenwood"):
					case joaat("sentinel4"):
						return 1;
						break;
				}
				break;
			case 8:
			case 100:
				if (__LIB_4__.func_536(Local_124.f_406))
				{
					return 1;
				}
				break;
			case 15:
				if ((iVar0 != joaat("comet3") && iVar0 != joaat("italigtb2")) && __LIB_10__.func_109())
				{
					return 1;
				}
				if (iVar0 == joaat("youga3"))
				{
					return 1;
				}
				break;
			case 95:
				switch (iVar0)
				{
					case joaat("jester4"):
						return 1;
						break;
				}
				break;
			case 7:
				if (iVar0 == joaat("youga3"))
				{
					return 1;
				}
				break;
			case 11:
				if (iVar0 == joaat("manana2"))
				{
					return 1;
				}
				break;
			case 14:
				if ((iVar0 == joaat("futo2") || iVar0 == joaat("euros")) || iVar0 == joaat("weevil2"))
				{
					return 1;
				}
				break;
			case 23:
				if ((iVar0 == joaat("dominator7") || iVar0 == joaat("zr350")) || iVar0 == joaat("weevil2"))
				{
					return 1;
				}
				else if (iVar0 == joaat("kanjosj") || iVar0 == joaat("tenf2"))
				{
					return 0;
				}
				break;
		}
		switch (iParam1)
		{
			case 5:
				if ((iVar0 != joaat("kanjosj") && iVar0 != joaat("brioso3")) && iVar0 != joaat("picador"))
				{
					return 1;
				}
				break;
			}
	}
	if (iParam0 == 65)
	{
		if (iVar0 == joaat("gauntlet5"))
		{
			return 0;
		}
		return 1;
	}
	if (iVar0 == joaat("gauntlet5"))
	{
		switch (iParam0)
		{
			case 26:
			case 95:
			case 23:
			case 54:
			case 9:
				return 1;
				break;
			}
	}
	if (__LIB_1__.func_323(iVar0))
	{
		switch (iParam0)
		{
			case 40:
				if (((((((((iVar0 == joaat("bruiser") || iVar0 == joaat("dominator4")) || iVar0 == joaat("impaler2")) || iVar0 == joaat("brutus")) || iVar0 == joaat("impaler4")) || iVar0 == joaat("impaler3")) || iVar0 == joaat("brutus2")) || iVar0 == joaat("brutus3")) || iVar0 == joaat("bruiser2")) || iVar0 == joaat("bruiser3"))
				{
				}
				else
				{
					return 1;
				}
				break;
			case 82:
			case 15:
			case 79:
			case 80:
			case 81:
			case 9:
			case 39:
				return 1;
				break;
			case 62:
			case 63:
			case 64:
			case 65:
			case 67:
			case 68:
			case 69:
			case 70:
			case 71:
			case 72:
			case 83:
			case 84:
			case 90:
			case 91:
				return 1;
				break;
			case 92:
				if (iVar0 != joaat("deathbike2"))
				{
					return 1;
				}
				break;
			case 66:
				if (((iVar0 == joaat("dominator4") || iVar0 == joaat("dominator5")) || iVar0 == joaat("dominator6")) || iVar0 == joaat("issi5"))
				{
				}
				else
				{
					return 1;
				}
				break;
			case 95:
				if ((iVar0 == joaat("impaler2") || iVar0 == joaat("impaler3")) || iVar0 == joaat("impaler4"))
				{
					return 1;
				}
				break;
			case 10:
				if (((((iVar0 == joaat("impaler2") || iVar0 == joaat("impaler3")) || iVar0 == joaat("impaler4")) || iVar0 == joaat("scarab")) || iVar0 == joaat("scarab2")) || iVar0 == joaat("scarab3"))
				{
					return 1;
				}
				break;
			case 18:
			case 36:
			case 23:
				if ((iVar0 == joaat("scarab") || iVar0 == joaat("scarab2")) || iVar0 == joaat("scarab3"))
				{
					return 1;
				}
				break;
			}
	}
	if (__LIB_4__.func_533(Local_124.f_406))
	{
		switch (iParam0)
		{
			case 46:
			case 44:
			case 8:
				if (iVar0 == joaat("blazer4"))
				{
				}
				else
				{
					return 1;
				}
				break;
			case 9:
			case 26:
			case 40:
			case 23:
			case 15:
			case 95:
			case 20:
			case 18:
			case 36:
			case 14:
			case 25:
			case 24:
			case 32:
				return 1;
				break;
			case 16:
				if ((((((iVar0 == joaat("nightblade") || iVar0 == joaat("avarus")) || iVar0 == joaat("manchez")) || iVar0 == joaat("vortex")) || iVar0 == joaat("blazer4")) || iVar0 == joaat("fcr2")) || iVar0 == joaat("diablous2"))
				{
					return 1;
				}
				break;
			case 10:
				if (iVar0 != joaat("manchez") && iVar0 != joaat("hakuchou2"))
				{
					return 1;
				}
				break;
			}
	}
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		switch (iParam0)
		{
			case 9:
			case 26:
			case 40:
			case 23:
			case 15:
			case 46:
			case 44:
			case 25:
			case 12:
			case 8:
			case 28:
			case 29:
			case 30:
			case 60:
			case 85:
			case 39:
			case 32:
			case 6:
			case 48:
			case 27:
			case 95:
			case 52:
			case 36:
			case 18:
			case 43:
			case 20:
				return 1;
				break;
			case 10:
			case 47:
			case 5:
			case 50:
			case 53:
			case 14:
			case 19:
			case 54:
				if (__LIB_4__.func_532() || __LIB_4__.func_531())
				{
					return 1;
				}
				break;
			}
	}
	if (iVar0 == joaat("penetrator"))
	{
		switch (iParam0)
		{
			case 40:
			case 10:
			case 23:
				return 1;
			}
		default:
	}
	if (iVar0 == joaat("infernus2"))
	{
		switch (iParam0)
		{
			case 15:
			case 10:
			case 40:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("gp1"))
	{
		switch (iParam0)
		{
			case 40:
			case 10:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("turismo2"))
	{
		switch (iParam0)
		{
			case 15:
			case 10:
				return 1;
				break;
			}
	}
	if (iVar0 == joaat("xa21"))
	{
		switch (iParam0)
		{
			case 46:
			case 95:
			case 10:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("cheetah2"))
	{
		switch (iParam0)
		{
			case 15:
			case 10:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("ardent"))
	{
		switch (iParam0)
		{
			case 40:
			case 10:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("tampa3"))
	{
		switch (iParam0)
		{
			case 40:
			case 18:
			case 36:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("oppressor"))
	{
		switch (iParam0)
		{
			case 9:
			case 10:
				return 1;
				break;
		}
	}
	else if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("torero")))
	{
		switch (iParam0)
		{
			case 40:
			case 10:
			case 23:
			case 15:
				return 1;
				break;
		}
	}
	else if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("nightshark")))
	{
		switch (iParam0)
		{
			case 18:
			case 36:
			case 15:
			case 9:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("weevil2"))
	{
		switch (iParam0)
		{
			case 26:
			case 23:
			case 39:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("tenf") || iVar0 == joaat("turismor"))
	{
		switch (iParam0)
		{
			case 9:
			case 40:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("sentinel4"))
	{
		switch (iParam0)
		{
			case 26:
			case 39:
				return 1;
				break;
		}
	}
	else if (iVar0 == joaat("schwarzer"))
	{
		switch (iParam0)
		{
			case 40:
			case 9:
				return 1;
				break;
			}
	}
	if (__LIB_9__.func_917(Local_124.f_406))
	{
		switch (iParam0)
		{
			case 15:
			case 40:
			case 9:
				return 1;
				break;
			}
	}
	switch (iVar0)
	{
		case joaat("barrage"):
			switch (iParam0)
			{
				case 15:
				case 18:
				case 36:
				case 23:
				case 44:
				case 51:
				case 40:
				case 46:
				case 39:
					return 1;
					break;
			}
			break;
		case joaat("z190"):
			switch (iParam0)
			{
				case 9:
				case 15:
				case 95:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("viseris"):
			switch (iParam0)
			{
				case 23:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("dominator3"):
		case joaat("oppressor2"):
			switch (iParam0)
			{
				case 9:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("mule4"):
			switch (iParam0)
			{
				case 46:
				case 40:
				case 15:
					return 1;
					break;
			}
			break;
		case joaat("speedo4"):
			switch (iParam0)
			{
				case 15:
				case 40:
					return 1;
					break;
			}
			break;
		case joaat("swinger"):
			switch (iParam0)
			{
				case 44:
				case 9:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("pounder2"):
			switch (iParam0)
			{
				case 8:
				case 40:
				case 15:
					return 1;
					break;
			}
			break;
		case joaat("italigto"):
		case joaat("furia"):
		case joaat("brioso2"):
			switch (iParam0)
			{
				case 9:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("neo"):
		case joaat("rrocket"):
			switch (iParam0)
			{
				case 9:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("yosemite3"):
			switch (iParam0)
			{
				case 39:
					return 1;
					break;
				case 46:
					return 0;
					break;
			}
			break;
		case joaat("seminole2"):
			switch (iParam0)
			{
				case 9:
				case 26:
					return 1;
					break;
			}
			break;
		case joaat("gauntlet5"):
			switch (iParam0)
			{
				case 39:
					return 1;
					break;
			}
			break;
		case joaat("veto"):
		case joaat("veto2"):
			switch (iParam0)
			{
				case 46:
				case 10:
					return 1;
					break;
			}
			break;
		case joaat("futo2"):
			switch (iParam0)
			{
				case 63:
				case 8:
					return 1;
					break;
			}
			switch (iParam1)
			{
				case 26:
				case 2:
				case 1:
					return 1;
					break;
			}
			break;
		case joaat("ruiner4"):
			switch (iParam0)
			{
				case 9:
				case 40:
					return 1;
					break;
			}
			break;
	}
	return 0;
}

bool func_94()//Position - 0x187C9D
{
	if (BitTest(Global_103905, 0))
	{
		if (!__LIB_2__.func_47(&uLocal_561, 5000, 0))
		{
			return 1;
		}
	}
	else
	{
		__LIB_0__.func_495(&uLocal_561, 0, 0);
	}
	return ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 201.21964f, 5174.217f, -89.99727f, 198.8149f, 5175.969f, -87.49727f, 1.75f, false, true, 0);
}

int func_95(int iParam0)//Position - 0x187D07
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar0 = 0;
		while (iVar0 < VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(iParam0))
		{
			if (!VEHICLE::IS_VEHICLE_SEAT_FREE(iParam0, iVar0, false))
			{
				iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, iVar0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					if (!PED::IS_PED_INJURED(iVar1))
					{
						if (PED::IS_PED_A_PLAYER(iVar1))
						{
							iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
							if (__LIB_0__.func_740(iVar2))
							{
								return 1;
							}
						}
					}
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_96(char* sParam0)//Position - 0x189368
{
	int iVar0;
	var uVar1[8];
	int iVar2;
	int iVar3;
	iVar3 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0);
	iVar0 = 0;
	while (iVar0 < Global_110071)
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_110071[iVar0 /*4*/])))
		{
			StringCopy(&(Global_110071[iVar0 /*4*/]), sParam0, 16);
			Global_110080[iVar0] = NETWORK::NETWORK_IS_GAME_IN_PROGRESS();
			Global_110083 = 1;
			Global_110084 = 1;
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				iVar2 = 0;
				while (iVar2 < 8)
				{
					if (iVar2 < iVar3)
					{
						uVar1[iVar2] = __LIB_10__.func_366(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam0, iVar2, iVar2 + 1));
					}
					else
					{
						uVar1[iVar2] = __LIB_10__.func_366("");
					}
					iVar2++;
				}
				__LIB_1__.func_39(1362, uVar1[0], -1);
				__LIB_1__.func_39(1363, uVar1[1], -1);
				__LIB_1__.func_39(1364, uVar1[2], -1);
				__LIB_1__.func_39(1365, uVar1[3], -1);
				__LIB_1__.func_39(1366, uVar1[4], -1);
				__LIB_1__.func_39(1367, uVar1[5], -1);
				__LIB_1__.func_39(1368, uVar1[6], -1);
				__LIB_1__.func_39(1369, uVar1[7], -1);
				__LIB_0__.func_521(3763, 1, -1);
			}
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_110071)
	{
		iVar0++;
	}
	return 0;
}

int func_97(int iParam0, var uParam1)//Position - 0x18997E
{
	int iVar0;
	char* sVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false) && *uParam1 == ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (*uParam1 == joaat("patriot"))
			{
				uParam1->f_13 = -1;
			}
			if (*uParam1 == joaat("prairie"))
			{
				if (uParam1->f_13 > 1)
				{
					uParam1->f_13 = 1;
				}
			}
		}
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(iParam0, &(uParam1->f_28));
		if (uParam1->f_32 >= 0 && uParam1->f_32 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(iParam0, uParam1->f_32);
		}
		VEHICLE::GET_VEHICLE_COLOURS(iParam0, &iVar4, &iVar5);
		VEHICLE::GET_VEHICLE_EXTRA_COLOURS(iParam0, &iVar6, &iVar7);
		if (__LIB_10__.func_84(uParam1->f_1, &sVar1, &iVar0, &iVar2, &iVar3) && *uParam1 != joaat("sovereign"))
		{
			iVar4 = iVar2;
			iVar6 = iVar3;
			VEHICLE::CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(iParam0);
			iVar8 = 7;
			if (iVar0 == 0)
			{
				iVar8 = 0;
			}
			else if (iVar0 == 1)
			{
				iVar8 = 1;
			}
			else if (iVar0 == 2)
			{
				iVar8 = 3;
			}
			else if (iVar0 == 3)
			{
				iVar8 = 4;
			}
			else if (iVar0 == 4)
			{
				iVar8 = 5;
			}
			VEHICLE::SET_VEHICLE_MOD_COLOR_1(iParam0, iVar8, 0, 0);
		}
		if (__LIB_10__.func_84(uParam1->f_2, &sVar1, &iVar0, &iVar2, &iVar3) && *uParam1 != joaat("sovereign"))
		{
			iVar5 = iVar2;
			VEHICLE::CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(iParam0);
			iVar9 = 7;
			if (iVar0 == 0)
			{
				iVar9 = 0;
			}
			else if (iVar0 == 1)
			{
				iVar9 = 1;
			}
			else if (iVar0 == 2)
			{
				iVar9 = 3;
			}
			else if (iVar0 == 3)
			{
				iVar9 = 4;
			}
			else if (iVar0 == 4)
			{
				iVar9 = 5;
			}
			VEHICLE::SET_VEHICLE_MOD_COLOR_2(iParam0, iVar9, 0);
		}
		VEHICLE::SET_VEHICLE_COLOURS(iParam0, iVar4, iVar5);
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(iParam0, iVar6, iVar7);
		VEHICLE::SET_VEHICLE_DIRT_LEVEL(iParam0, 0f);
		VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(iParam0, uParam1->f_6, uParam1->f_7, uParam1->f_8);
		VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, !uParam1->f_18);
		if (uParam1->f_5 == -1 && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("granger"))
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, 0);
		}
		else
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, uParam1->f_5);
		}
		if (uParam1->f_13 != -1 && uParam1->f_13 != VEHICLE::GET_VEHICLE_MOD(iParam0, 4) + 1)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 4);
			if (uParam1->f_13 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 4, (uParam1->f_13 - 1), false);
			}
		}
		if (uParam1->f_9 != -1 && uParam1->f_9 != VEHICLE::GET_VEHICLE_MOD(iParam0, 11) + 1)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 11);
			if (uParam1->f_9 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 11, (uParam1->f_9 - 1), false);
			}
		}
		if (uParam1->f_10 != -1 && uParam1->f_10 != VEHICLE::GET_VEHICLE_MOD(iParam0, 12) + 1)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 12);
			if (uParam1->f_10 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 12, (uParam1->f_10 - 1), false);
			}
		}
		if ((uParam1->f_16 != -1 && uParam1->f_16 != VEHICLE::GET_VEHICLE_MOD(iParam0, 14) + 1) && uParam1->f_16 < 9)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 14);
			if (uParam1->f_16 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 14, (uParam1->f_16 - 1), false);
			}
		}
		if (uParam1->f_14 != -1 && uParam1->f_14 != VEHICLE::GET_VEHICLE_MOD(iParam0, 15) + 1)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 15);
			if (uParam1->f_14 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 15, (uParam1->f_14 - 1), false);
			}
		}
		if (uParam1->f_15 != -1 && uParam1->f_15 != VEHICLE::GET_VEHICLE_MOD(iParam0, 16) + 1)
		{
			VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
			if (uParam1->f_15 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 16, (uParam1->f_15 - 1), false);
			}
		}
		if ((uParam1->f_11 != -1 && uParam1->f_11 != VEHICLE::GET_VEHICLE_MOD(iParam0, 23) + 1) && __LIB_10__.func_368(uParam1->f_12))
		{
			iVar10 = VEHICLE::GET_VEHICLE_MOD_VARIATION(iParam0, 23);
			if (uParam1->f_11 > 0)
			{
				VEHICLE::SET_VEHICLE_MOD(iParam0, 23, (uParam1->f_11 - 1), iVar10 > 0);
			}
			else
			{
				__LIB_0__.func_288(iParam0, -1);
				__LIB_0__.func_288(iParam0, VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam0));
				VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 23);
			}
		}
		if (uParam1->f_19 != -1)
		{
			VEHICLE::TOGGLE_VEHICLE_MOD(iParam0, 18, uParam1->f_19 > 0);
		}
		if (uParam1->f_17 != -1)
		{
			VEHICLE::TOGGLE_VEHICLE_MOD(iParam0, 22, uParam1->f_17 > 0);
		}
		if (uParam1->f_20 != -1)
		{
			VEHICLE::TOGGLE_VEHICLE_MOD(iParam0, 20, uParam1->f_20 > 0);
		}
		return 1;
	}
	return 0;
}

int func_98(int iParam0, int iParam1)//Position - 0x18D926
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam0, __LIB_10__.func_384(iParam1)) < 1)
	{
		return 0;
	}
	if (__LIB_10__.func_385(__LIB_10__.func_384(iParam1)))
	{
		return 0;
	}
	switch (iParam1)
	{
		case 0:
			return 10;
		case 1:
			return 10;
		case 2:
			return 10;
		case 3:
			return 10;
		case 4:
			return 10;
		case 5:
			return 10;
		case 6:
			return 10;
		case 7:
			return 10;
		case 8:
			return 10;
		case 9:
			return 10;
		case 10:
			return 10;
		case 11:
			return 10;
		default:
	}
	return 0;
}

int func_99(int iParam0, int iParam1, int iParam2)//Position - 0x18DF3B
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam0, __LIB_10__.func_389(iParam1)) < 1)
	{
		return 0;
	}
	if (__LIB_10__.func_390(__LIB_10__.func_389(iParam1), iParam2))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iParam1)
	{
		case 0:
			return 10;
		case 1:
			return 10;
		case 2:
			return 10;
		case 3:
			return 10;
		case 4:
			return 10;
		case 5:
			if (iVar0 == joaat("brioso2"))
			{
				return 0;
			}
			else
			{
				return 10;
			}
			break;
		case 6:
			return 10;
		case 7:
			return 10;
		case 8:
			return 10;
		case 9:
			return 10;
		case 10:
			return 10;
	}
	return 0;
}

void func_100()//Position - 0x18E643
{
	var uVar0[5];
	int iVar1;
	int iVar2;
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
	{
		iVar1 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar0);
		iVar2 = 0;
		while (iVar2 < iVar1)
		{
			if (ENTITY::DOES_ENTITY_EXIST(uVar0[iVar2]))
			{
				if ((__LIB_0__.func_657(uVar0[iVar2], 1) && __LIB_7__.func_140(uVar0[iVar2]) == PLAYER::PLAYER_ID()) || (__LIB_2__.func_384(uVar0[iVar2], 1) && func_2647(uVar0[iVar2]) == PLAYER::PLAYER_ID()))
				{
					NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(uVar0[iVar2], true, false);
				}
			}
			iVar2++;
		}
	}
}

int func_101(int iParam0)//Position - 0x18E6DA
{
	int iVar0;
	if (!__LIB_2__.func_384(iParam0, 1))
	{
		return __LIB_0__.func_160();
	}
	iVar0 = DECORATOR::DECOR_GET_INT(iParam0, "Company_SUV" /* GXT: Company SUV */);
	return __LIB_1__.func_408(iVar0, 0, 1, 0);
}

int func_102(var uParam0, int iParam1, var uParam2, var uParam3)//Position - 0x18FB50
{
	switch (*uParam0)
	{
		case 0:
			HUD::CLEAR_HELP(true);
			__LIB_0__.func_151("FM_IHELP_TRK2" /* GXT: Fit a Tracker to your vehicle and a marker will be added to the Map whenever you exit your vehicle. */, 10000);
			*uParam0++;
			uParam0->f_2 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
			uParam0->f_3 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
			__LIB_10__.func_399(iParam1, uParam2, &(uParam0->f_2), uParam3);
			break;
		case 1:
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				__LIB_0__.func_151("FM_IHELP_INS" /* GXT: You can purchase Insurance for vehicles. If the insured vehicle is totaled you can make a claim for a new vehicle. */, 10000);
				*uParam0++;
			}
			break;
		case 2:
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam3, false))
				{
					__LIB_10__.func_398(iParam1, &(uParam0->f_3), &(uParam0->f_2), uParam3);
				}
				__LIB_0__.func_151("FM_IHELP_CAP" /* GXT: You can download the iFruit app to your personal smartphone device or tablet to modify your vehicle when offline and create customized license plates. Visit ~HUD_COLOUR_SOCIAL_CLUB~www.rockstargames.com/V/downloads/~s~ for details. */, 10000);
				*uParam0++;
			}
			break;
		case 3:
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				__LIB_0__.func_151("FM_CMOD_END" /* GXT: Purchase a Tracker and Insurance. They can be found under 'Loss/Theft Prevention'. They will be free for the first visit. */, 7000);
				*uParam0++;
			}
			break;
		case 4:
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				*uParam0++;
				__LIB_10__.func_397(1);
			}
			break;
		case 5:
			return 1;
			break;
	}
	HUD::SHOW_HUD_COMPONENT_THIS_FRAME(10);
	return 0;
}

void func_103()//Position - 0x1900B6
{
	__LIB_0__.func_296();
	CAM::SET_WIDESCREEN_BORDERS(true, -1);
}

int func_104()//Position - 0x19D258
{
	if (__LIB_6__.func_401(1))
	{
		if (__LIB_1__.func_145())
		{
			return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_1;
		}
		else
		{
			return Global_1892703[__LIB_0__.func_582() /*599*/].f_10.f_76.f_1;
		}
	}
	return 0;
}

void func_105(int iParam0, var uParam1)//Position - 0x19EA94
{
	switch (iParam0)
	{
		case 29:
			uParam1->f_66 = joaat("alpha");
			StringCopy(&(uParam1->f_1), "L0NG80Y", 16);
			uParam1->f_5 = 35;
			uParam1->f_6 = 5;
			uParam1->f_7 = 28;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 26);
			uParam1->f_9[0] = 3;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 1;
			break;
		case 83:
			uParam1->f_66 = joaat("banshee2");
			StringCopy(&(uParam1->f_1), "D0M1N0", 16);
			uParam1->f_6 = 111;
			uParam1->f_8 = 158;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 5;
			uParam1->f_9[6] = 4;
			uParam1->f_9[7] = 2;
			uParam1->f_9[8] = 2;
			break;
		case 8:
			uParam1->f_66 = joaat("bestiagts");
			StringCopy(&(uParam1->f_1), "5T34LTH", 16);
			uParam1->f_5 = 149;
			uParam1->f_6 = 57;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 1;
			uParam1->f_9[7] = 3;
			uParam1->f_9[23] = 37;
			break;
		case 38:
			uParam1->f_66 = joaat("btype3");
			StringCopy(&(uParam1->f_1), "0LDT1M3R", 16);
			*uParam1 = 3;
			uParam1->f_5 = 100;
			uParam1->f_6 = 52;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 2;
			uParam1->f_9[5] = 3;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[43] = 1;
			uParam1->f_9[44] = 2;
			uParam1->f_9[46] = 1;
			break;
		case 77:
			uParam1->f_66 = joaat("cheetah");
			StringCopy(&(uParam1->f_1), "M1DN1GHT", 16);
			uParam1->f_5 = 72;
			uParam1->f_7 = 106;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 3;
			break;
		case 74:
			uParam1->f_66 = joaat("coquette2");
			StringCopy(&(uParam1->f_1), "T0FF33", 16);
			*uParam1 = 3;
			uParam1->f_5 = 37;
			uParam1->f_7 = 106;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[4] = 4;
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 3;
			break;
		case 62:
			uParam1->f_66 = joaat("coquette3");
			StringCopy(&(uParam1->f_1), "W1P30UT", 16);
			uParam1->f_5 = 68;
			uParam1->f_6 = 112;
			uParam1->f_7 = 68;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[23] = 28;
			break;
		case 50:
			uParam1->f_66 = joaat("entityxf");
			StringCopy(&(uParam1->f_1), "0V3RFL0D", 16);
			uParam1->f_5 = 70;
			uParam1->f_7 = 111;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[23] = 26;
			break;
		case 71:
			uParam1->f_66 = joaat("feltzer2");
			StringCopy(&(uParam1->f_1), "K3YL1M3", 16);
			uParam1->f_5 = 92;
			uParam1->f_7 = 89;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 94;
			uParam1->f_75 = 255;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[23] = 43;
			uParam1->f_59[0] = 1;
			break;
		case 41:
			uParam1->f_66 = joaat("feltzer3");
			StringCopy(&(uParam1->f_1), "T0UR3R", 16);
			uParam1->f_5 = 34;
			uParam1->f_6 = 7;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[23] = 33;
			break;
		case 20:
			uParam1->f_66 = joaat("fmj");
			StringCopy(&(uParam1->f_1), "J0K3R", 16);
			*uParam1 = 1;
			uParam1->f_5 = 35;
			uParam1->f_6 = 111;
			uParam1->f_7 = 25;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 226;
			uParam1->f_63 = 6;
			uParam1->f_64 = 6;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[1] = 3;
			uParam1->f_9[10] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 36;
			break;
		case 95:
			uParam1->f_66 = joaat("jester");
			StringCopy(&(uParam1->f_1), "T0PCL0WN", 16);
			*uParam1 = 1;
			uParam1->f_5 = 52;
			uParam1->f_7 = 5;
			uParam1->f_8 = 151;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 2;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 2;
			uParam1->f_9[23] = 6;
			break;
		case 32:
			uParam1->f_66 = joaat("mamba");
			StringCopy(&(uParam1->f_1), "BLKM4MB4", 16);
			*uParam1 = 1;
			uParam1->f_6 = 111;
			uParam1->f_7 = 10;
			uParam1->f_8 = 122;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			MISC::SET_BIT(&(uParam1->f_77), 2);
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 6;
			break;
		case 89:
			uParam1->f_66 = joaat("massacro");
			StringCopy(&(uParam1->f_1), "B4N4N4", 16);
			uParam1->f_5 = 89;
			uParam1->f_6 = 6;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 252;
			uParam1->f_63 = 238;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 4;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 4;
			uParam1->f_9[5] = 2;
			uParam1->f_9[7] = 3;
			uParam1->f_9[8] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 38;
			break;
		case 80:
			uParam1->f_66 = joaat("nightshade");
			StringCopy(&(uParam1->f_1), "TH37OS", 16);
			uParam1->f_5 = 63;
			uParam1->f_6 = 112;
			uParam1->f_7 = 87;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 3;
			uParam1->f_9[7] = 1;
			uParam1->f_9[23] = 24;
			break;
		case 59:
			uParam1->f_66 = joaat("omnis");
			StringCopy(&(uParam1->f_1), "W1D3B0D", 16);
			*uParam1 = 2;
			uParam1->f_5 = 111;
			uParam1->f_6 = 64;
			uParam1->f_8 = 81;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[23] = 7;
			break;
		case 17:
			uParam1->f_66 = joaat("osiris");
			StringCopy(&(uParam1->f_1), "PH4R40H", 16);
			uParam1->f_5 = 40;
			uParam1->f_6 = 1;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 6;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[23] = 28;
			break;
		case 26:
			uParam1->f_66 = joaat("pfister811");
			StringCopy(&(uParam1->f_1), "R3G4L", 16);
			uParam1->f_5 = 145;
			uParam1->f_6 = 88;
			uParam1->f_7 = 64;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[23] = 26;
			break;
		case 2:
			uParam1->f_66 = joaat("prototipo");
			StringCopy(&(uParam1->f_1), "M4K3B4NK", 16);
			uParam1->f_5 = 111;
			uParam1->f_6 = 147;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[23] = 35;
			break;
		case 23:
			uParam1->f_66 = joaat("reaper");
			StringCopy(&(uParam1->f_1), "D34TH4U", 16);
			uParam1->f_5 = 118;
			uParam1->f_6 = 28;
			uParam1->f_7 = 3;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 16;
			break;
		case 92:
			uParam1->f_66 = joaat("sabregt2");
			StringCopy(&(uParam1->f_1), "0R1G1N4L", 16);
			*uParam1 = 1;
			uParam1->f_5 = 88;
			uParam1->f_6 = 33;
			uParam1->f_7 = 105;
			uParam1->f_8 = 33;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 252;
			uParam1->f_63 = 238;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 24);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 2;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 5;
			uParam1->f_59[0] = 1;
			break;
		case 65:
			uParam1->f_66 = joaat("seven70");
			StringCopy(&(uParam1->f_1), "4LL0Y5", 16);
			*uParam1 = 4;
			uParam1->f_5 = 51;
			uParam1->f_6 = 3;
			uParam1->f_7 = 111;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[23] = 29;
			break;
		case 14:
			uParam1->f_66 = joaat("sheava");
			StringCopy(&(uParam1->f_1), "M0N4RCH", 16);
			*uParam1 = 3;
			uParam1->f_5 = 64;
			uParam1->f_6 = 147;
			uParam1->f_7 = 68;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 226;
			uParam1->f_63 = 6;
			uParam1->f_64 = 6;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 3;
			uParam1->f_9[1] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 43;
			break;
		case 53:
			uParam1->f_66 = joaat("sultanrs");
			StringCopy(&(uParam1->f_1), "F1D3L1TY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 147;
			uParam1->f_6 = 147;
			uParam1->f_7 = 4;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 4;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 9;
			uParam1->f_9[1] = 11;
			uParam1->f_9[2] = 6;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 3;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 3;
			uParam1->f_9[8] = 5;
			uParam1->f_9[10] = 4;
			uParam1->f_9[23] = 7;
			break;
		case 11:
			uParam1->f_66 = joaat("t20");
			StringCopy(&(uParam1->f_1), "T0PSP33D", 16);
			*uParam1 = 2;
			uParam1->f_5 = 88;
			uParam1->f_6 = 33;
			uParam1->f_7 = 33;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[1] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 3;
			uParam1->f_9[7] = 1;
			uParam1->f_9[23] = 30;
			break;
		case 35:
			uParam1->f_66 = joaat("tampa");
			StringCopy(&(uParam1->f_1), "CRU151N", 16);
			*uParam1 = 1;
			uParam1->f_5 = 28;
			uParam1->f_6 = 106;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 16;
			break;
		case 47:
			uParam1->f_66 = joaat("tropos");
			StringCopy(&(uParam1->f_1), "31GHT135", 16);
			uParam1->f_5 = 51;
			uParam1->f_6 = 107;
			uParam1->f_7 = 104;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[6] = 1;
			uParam1->f_9[23] = 16;
			break;
		case 86:
			uParam1->f_66 = joaat("turismor");
			StringCopy(&(uParam1->f_1), "M1LKYW4Y", 16);
			*uParam1 = 3;
			uParam1->f_5 = 146;
			uParam1->f_6 = 142;
			uParam1->f_7 = 73;
			uParam1->f_8 = 156;
			uParam1->f_69 = 7;
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 22;
			break;
		case 5:
			uParam1->f_66 = joaat("tyrus");
			StringCopy(&(uParam1->f_1), "B35TL4P", 16);
			*uParam1 = 1;
			uParam1->f_5 = 12;
			uParam1->f_6 = 3;
			uParam1->f_8 = 38;
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[23] = 13;
			break;
		case 68:
			uParam1->f_66 = joaat("verlierer2");
			StringCopy(&(uParam1->f_1), "0UTFR0NT", 16);
			*uParam1 = 4;
			uParam1->f_5 = 36;
			uParam1->f_7 = 32;
			uParam1->f_8 = 156;
			uParam1->f_69 = 7;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 4;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 5;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 2;
			uParam1->f_9[23] = 34;
			break;
		case 56:
			uParam1->f_66 = joaat("zentorno");
			StringCopy(&(uParam1->f_1), "0LDN3W5", 16);
			uParam1->f_5 = 34;
			uParam1->f_6 = 28;
			uParam1->f_8 = 45;
			uParam1->f_69 = 7;
			uParam1->f_9[0] = 3;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[23] = 20;
			break;
		case 44:
			uParam1->f_66 = joaat("ztype");
			StringCopy(&(uParam1->f_1), "K1NGP1N", 16);
			*uParam1 = 4;
			uParam1->f_5 = 67;
			uParam1->f_6 = 5;
			uParam1->f_7 = 67;
			uParam1->f_8 = 156;
			uParam1->f_69 = 1;
			uParam1->f_9[23] = 28;
			break;
	}
	if (uParam1->f_66 == 0)
	{
		__LIB_9__.func_945(iParam0, uParam1);
	}
}

void func_106()//Position - 0x1A2DBE
{
	int iVar0;
	if (!__LIB_10__.func_477())
	{
		return;
	}
	if (!BitTest(Global_1946250.f_8, 7))
	{
		iVar0 = __LIB_0__.func_228(31561, -1);
		if (iVar0 < 4)
		{
			__LIB_0__.func_151("TUN_AU_DIS_H" /* GXT: As the owner, your Auto Shop allows you to install all vehicle modifications at a discounted price. In addition, Crew mods and Classic respray colors are FREE. */, -1);
			iVar0++;
			__LIB_1__.func_39(31561, iVar0, -1);
			MISC::SET_BIT(&uLocal_202, 23);
			MISC::SET_BIT(&(Global_1946250.f_8), 7);
		}
	}
}

int func_107(int iParam0)//Position - 0x1A3DC4
{
	var uVar0;
	int iVar1;
	uVar0 = __LIB_10__.func_410(iParam0);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

void func_108()//Position - 0x1A421A
{
	if (__LIB_0__.func_494() || __LIB_1__.func_175())
	{
		__LIB_0__.func_748();
		__LIB_10__.func_412();
	}
}

void func_109(int iParam0, var uParam1)//Position - 0x1A52A2
{
	int iVar0;
	__LIB_9__.func_928(0, uParam1->f_5, -1);
	__LIB_9__.func_928(1, uParam1->f_6, -1);
	__LIB_9__.func_928(2, uParam1->f_7, -1);
	__LIB_9__.func_928(3, uParam1->f_8, -1);
	if (__LIB_9__.func_531())
	{
		__LIB_9__.func_928(4, uParam1->f_9[10], -1);
	}
	iVar0 = 0;
	if (BitTest(uParam1->f_77, 13))
	{
		MISC::SET_BIT(&iVar0, 1);
	}
	if (BitTest(uParam1->f_77, 12))
	{
		MISC::SET_BIT(&iVar0, 2);
	}
	__LIB_9__.func_928(9, iVar0, -1);
	__LIB_9__.func_928(5, uParam1->f_9[48], -1);
	__LIB_9__.func_928(6, *uParam1, -1);
}

int func_110()//Position - 0x1B55CF
{
	if (__LIB_10__.func_17())
	{
		return 1;
	}
	if (__LIB_10__.func_477())
	{
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != PLAYER::PLAYER_ID())
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_111(int iParam0, int iParam1, int iParam2)//Position - 0x1B6131
{
	if (!__LIB_0__.func_674() || iParam1)
	{
		Global_1574582 = 1;
		__LIB_7__.func_51(1);
		if (((!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && !__LIB_1__.func_203()) && !func_248(PLAYER::PLAYER_ID())) && !__LIB_9__.func_281(PLAYER::PLAYER_ID()))
		{
			Global_1057408 = 1;
		}
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 1;
		STATS::PLAYSTATS_SWITCH_PASSIVE_MODE(true, iParam0, iParam2, -1);
	}
}

int func_112(int iParam0, int iParam1)//Position - 0x1B661B
{
	char cVar0[64];
	var uVar1;
	var uVar2;
	struct<13> Var3;
	int iVar4;
	StringCopy(&cVar0, __LIB_4__.func_577(iParam0, iParam1), 64);
	if (MISC::GET_HASH_KEY(&cVar0) == joaat("CREW_LOGO"))
	{
		if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_154(PLAYER::PLAYER_ID(), 0, 1)) && __LIB_6__.func_911()) && NETWORK::NETWORK_CLAN_SERVICE_IS_VALID())
		{
			Var3 = { __LIB_0__.func_604(PLAYER::PLAYER_ID()) };
			if (NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(&Var3) && NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&iVar4, 35, &Var3))
			{
				NETWORK::NETWORK_CLAN_GET_EMBLEM_TXD_NAME(&Var3, &uVar1);
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&uVar1))
				{
					return NETWORK::NETWORK_CLAN_REQUEST_EMBLEM(iVar4);
				}
				else if (!__LIB_0__.func_649(&uVar2))
				{
					__LIB_0__.func_580(&uVar2, 0, 0);
				}
				else if (__LIB_2__.func_47(&uVar2, 2000, 0))
				{
					__LIB_0__.func_579(&uVar2);
					return 1;
				}
			}
		}
		return 1;
	}
	else if (MISC::GET_HASH_KEY(&cVar0) != 0)
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT(&cVar0, false);
		return GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(&cVar0);
	}
	return 1;
}

void func_113()//Position - 0x1B6CE2
{
	int iVar0;
	if (__LIB_10__.func_531())
	{
		if (__LIB_10__.func_145())
		{
			if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_103231))
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_103231);
			}
		}
		if (__LIB_1__.func_251(PLAYER::PLAYER_ID()))
		{
			if (ENTITY::DOES_ENTITY_EXIST(__LIB_10__.func_310()))
			{
				if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(__LIB_10__.func_310()))
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(__LIB_10__.func_310());
				}
			}
			if (ENTITY::DOES_ENTITY_EXIST(__LIB_10__.func_309()))
			{
				if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(__LIB_10__.func_309()))
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(__LIB_10__.func_309());
				}
			}
		}
	}
	else if (__LIB_10__.func_553())
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_1965535))
		{
			if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_1965535))
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_1965535);
			}
		}
	}
	else if (__LIB_4__.func_532())
	{
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			iVar0 = 0;
			while (iVar0 < 2)
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[iVar0]))
				{
					if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[iVar0]))
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[iVar0]);
					}
				}
				iVar0++;
			}
		}
	}
	else if (__LIB_4__.func_531())
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_484))
		{
			if (!NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_484))
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_484);
			}
		}
	}
}

int func_114(int iParam0, int iParam1)//Position - 0x1B7946
{
	if (__LIB_7__.func_133(PLAYER::PLAYER_ID()) == 3)
	{
		if (__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				if (__LIB_0__.func_291(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) != -1)
				{
					return 0;
				}
			}
		}
	}
	if (__LIB_0__.func_299(iParam0) == 4)
	{
		if (__LIB_7__.func_113(PLAYER::PLAYER_ID()) == 11)
		{
			return 0;
		}
	}
	switch (iParam1)
	{
		case 154:
		case 157:
		case 151:
		case 152:
		case 163:
		case 160:
		case 162:
		case 155:
		case 201:
			return 0;
			break;
		case 167:
		case 168:
		case 169:
		case 190:
		case 191:
		case 170:
		case 173:
		case 166:
		case 172:
		case 179:
		case 189:
		case 192:
		case 193:
		case 194:
		case 199:
		case 182:
		case 183:
		case 180:
		case 185:
		case 186:
		case 195:
		case 197:
		case 198:
		case 205:
		case 207:
		case 208:
		case 209:
		case 214:
		case 215:
		case 216:
		case 217:
		case 218:
		case 219:
		case 220:
		case 221:
		case 178:
		case 188:
		case 225:
		case 226:
		case 227:
		case 229:
		case 230:
		case 233:
		case 237:
		case 238:
		case 239:
		case 240:
		case 241:
		case 242:
		case 244:
		case 248:
		case 249:
		case 250:
		case 243:
		case 158:
		case 256:
		case 258:
			if (__LIB_0__.func_299(iParam0) != 3)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		default:
			if (__LIB_0__.func_684(iParam1) == 0)
			{
				if (__LIB_0__.func_299(iParam0) != 3)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			return 1;
			break;
	}
	return 1;
}

int func_115(int iParam0)//Position - 0x1B8783
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = -1;
	while (iVar0 <= 8)
	{
		iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, iVar0, false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar1) && !ENTITY::IS_ENTITY_DEAD(iVar1, false))
		{
			iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
			if (iVar2 != __LIB_0__.func_160())
			{
				if (__LIB_1__.func_205(iVar2) == 4 || __LIB_1__.func_298(iVar2, 14))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_116(int iParam0)//Position - 0x1BE6BA
{
	if (__LIB_1__.func_155(iParam0, 1, 0) && !__LIB_1__.func_155(iParam0, 0, 0))
	{
		return 1;
	}
	return 0;
}

int func_117(int iParam0)//Position - 0x1BEAC7
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	fVar4 = 1000000f;
	iVar2 = 3;
	if (iParam0 == 2)
	{
		iVar2 = 5;
	}
	iVar0 = 0;
	while (iVar0 <= iVar2)
	{
		fVar3 = __LIB_0__.func_529(PLAYER::PLAYER_PED_ID(), __LIB_10__.func_495(iVar0, iParam0), 1);
		if (fVar3 < fVar4)
		{
			fVar4 = fVar3;
			iVar1 = iVar0;
		}
		iVar0++;
	}
	return iVar1;
}

int func_118()//Position - 0x1BF53F
{
	if (((((((((((__LIB_0__.func_77(0) || __LIB_0__.func_104(1)) || __LIB_10__.func_498()) || __LIB_2__.func_368()) || HUD::IS_PAUSE_MENU_ACTIVE()) || NETWORK::IS_COMMERCE_STORE_OPEN()) || __LIB_2__.func_174()) || __LIB_0__.func_661()) || PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) || PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 190 /*INPUT_FRONTEND_RIGHT*/)) || PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 190 /*INPUT_FRONTEND_RIGHT*/)) || PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 190 /*INPUT_FRONTEND_RIGHT*/))
	{
		if (!__LIB_0__.func_649(&uLocal_564))
		{
			__LIB_0__.func_580(&uLocal_564, 0, 0);
		}
		else
		{
			__LIB_0__.func_495(&uLocal_564, 0, 0);
		}
		return 0;
	}
	else if (__LIB_0__.func_649(&uLocal_564))
	{
		if (__LIB_2__.func_47(&uLocal_564, 3000, 0))
		{
			__LIB_0__.func_579(&uLocal_564);
		}
		else
		{
			return 0;
		}
	}
	if (__LIB_1__.func_174(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 1 || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 0)
	{
		return 0;
	}
	if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		return 0;
	}
	if (SCRIPT::DOES_SCRIPT_EXIST("appMPJobListNEW") && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appmpjoblistnew")) > 0)
	{
		return 0;
	}
	if (SCRIPT::DOES_SCRIPT_EXIST("appJIPMP") && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appjipmp")) > 0)
	{
		return 0;
	}
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		return 0;
	}
	if (HUD::IS_STORE_PENDING_NETWORK_SHUTDOWN_TO_OPEN())
	{
		return 0;
	}
	if (__LIB_0__.func_527() && !__LIB_2__.func_417(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373))
	{
		return 0;
	}
	if (__LIB_2__.func_499())
	{
		return 0;
	}
	if (__LIB_1__.func_351(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_IN())
	{
		return 0;
	}
	return 1;
}

int func_119()//Position - 0x1BF8E2
{
	if (BitTest(uLocal_390, 29))
	{
		return 1;
	}
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
	{
		if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("insurgent"))
		{
			return 1;
		}
	}
	if (Local_124.f_0 == 45 && !__LIB_10__.func_523())
	{
		return 1;
	}
	return 0;
}

void func_120(char* sParam0, int iParam1)//Position - 0x1BF942
{
	if (!__LIB_4__.func_66(sParam0, iParam1))
	{
		if (__LIB_10__.func_116())
		{
			HUD::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(false);
			__LIB_5__.func_952(sParam0, iParam1);
			__LIB_10__.func_115();
			Global_100493.f_5 = 1;
			Global_100493.f_6 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
		}
	}
}

void func_121(char* sParam0, char* sParam1)//Position - 0x1BFA74
{
	if (!__LIB_2__.func_161(sParam0, sParam1))
	{
		if (__LIB_10__.func_116())
		{
			HUD::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(false);
			__LIB_9__.func_565(sParam0, sParam1);
			__LIB_10__.func_115();
			Global_100493.f_5 = 1;
			Global_100493.f_6 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
		}
	}
}

int func_122()//Position - 0x1BFBDC
{
	if (PLAYER::PLAYER_ID() != __LIB_0__.func_160() && Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != PLAYER::PLAYER_ID())
	{
		return 0;
	}
	if (__LIB_0__.func_706())
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			if (BitTest(iLocal_201, 4))
			{
				MISC::CLEAR_BIT(&iLocal_201, 4);
			}
		}
	}
	else if ((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if (!__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
	{
		return 0;
	}
	if (((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_2__.func_417(PLAYER::PLAYER_ID())) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || BitTest(iLocal_201, 4)) || !__LIB_10__.func_499()) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
	{
		return 0;
	}
	return 1;
}

int func_123()//Position - 0x1C028E
{
	int iVar0;
	bool bVar1;
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
	{
		bVar1 = false;
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_9__.func_958();
			bVar1 = true;
		}
		else
		{
			iVar0 = __LIB_9__.func_957();
		}
		if (bVar1)
		{
			if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, iVar0) || PAD::IS_DISABLED_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, iVar0))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, iVar0) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_124()//Position - 0x1C0672
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if (((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_9__.func_943(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if ((((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_3__.func_49(PLAYER::PLAYER_ID())) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || !__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1)) || BitTest(iLocal_201, 4)) || INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Int_03_Room1")) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
	{
		return 0;
	}
	if (Global_262145.f_24710 /* Tunable: -981592117 */)
	{
		return 0;
	}
	return 1;
}

int func_125()//Position - 0x1C081E
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if (((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_0__.func_266(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if ((((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_2__.func_743(PLAYER::PLAYER_ID())) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || BitTest(iLocal_201, 4)) || INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Int_02_Room1")) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2)) || !__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
	{
		return 0;
	}
	return 1;
}

int func_126()//Position - 0x1C09BC
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if (((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !func_1957(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if (((((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_3__.func_301(PLAYER::PLAYER_ID())) || INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("GtaMloRoom001")) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || !__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1)) || Global_1957730) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2)) || Global_262145.f_23131 /* Tunable: -1667979067 */)
	{
		return 0;
	}
	return 1;
}

int func_127()//Position - 0x1C0B62
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else
	{
		if (__LIB_0__.func_121(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("avenger")))
			{
				if (__LIB_19__.func_960(PLAYER::PLAYER_ID()) || func_3072())
				{
					return 0;
				}
			}
		}
		if (((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_0__.func_109(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
		{
			return 0;
		}
	}
	if ((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_3__.func_251(PLAYER::PLAYER_ID())) || BitTest(iLocal_201, 4)) || INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Int02_base_hanger")) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
	{
		return 0;
	}
	return 1;
}

int func_128()//Position - 0x1C0D77
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if (((((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || __LIB_3__.func_315()) || __LIB_9__.func_949()) || !__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1)) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if ((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || Global_262145.f_21128 /* Tunable: -34518592 */) || !__LIB_5__.func_98(PLAYER::PLAYER_ID())) || __LIB_3__.func_392(PLAYER::PLAYER_ID())) || INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("GtaMloRoom001")) || Global_262145.f_22723 /* Tunable: 1198408840 */)
	{
		return 0;
	}
	return 1;
}

int func_129()//Position - 0x1C1159
{
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (BitTest(iLocal_201, 4))
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else
	{
		if (((((((((((((((!VEHICLE::GET_IS_VEHICLE_ENGINE_RUNNING(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) || __LIB_9__.func_959(PLAYER::PLAYER_ID())) || __LIB_0__.func_661()) || !__LIB_10__.func_502(PLAYER::PLAYER_ID())) || __LIB_10__.func_501()) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || ENTITY::GET_ENTITY_SPEED(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) > 0.1f) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0))
		{
			return 0;
		}
		if (Global_262145.f_19173 /* Tunable: -475525840 */)
		{
			if (__LIB_10__.func_500())
			{
				return 0;
			}
		}
	}
	if (((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || BitTest(iLocal_201, 4)) || __LIB_19__.func_950(PLAYER::PLAYER_ID())) || !__LIB_1__.func_189(PLAYER::PLAYER_ID())) || Global_262145.f_19171 /* Tunable: -508487345 */) || __LIB_0__.func_661())
	{
		return 0;
	}
	return 1;
}

int func_130()//Position - 0x1C17E4
{
	if (__LIB_10__.func_506() == 10)
	{
		return 1;
	}
	return 0;
}

void func_131()//Position - 0x1C56F0
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_0__.func_582() != __LIB_0__.func_160())
	{
		if ((PLAYER::PLAYER_ID() == __LIB_0__.func_582() && __LIB_3__.func_583(PLAYER::PLAYER_ID())) && !__LIB_9__.func_644(PLAYER::PLAYER_ID()))
		{
			iVar0 = 0;
			while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
			{
				if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
				{
					iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
					if (__LIB_0__.func_154(iVar2, 1, 1))
					{
						if (__LIB_3__.func_583(iVar2) && __LIB_9__.func_649(iVar2))
						{
							iVar1++;
						}
					}
				}
				iVar0++;
			}
			if (!BitTest(iLocal_201, 24))
			{
				if (iVar1 == iLocal_220 && iLocal_220 != 0)
				{
					MISC::SET_BIT(&iLocal_201, 24);
				}
			}
			else if (iVar1 != iLocal_220 && iLocal_220 != 0)
			{
				__LIB_3__.func_582(0);
				if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					HUD::CLEAR_HELP(true);
				}
				__LIB_0__.func_151("IE_MOD_ASSL" /* GXT: Vehicle modification canceled. One of your Associates left the mission. */, -1);
				__LIB_10__.func_468(8);
			}
		}
	}
}

void func_132()//Position - 0x1C57DA
{
	if (Local_103.f_31[iLocal_114] != __LIB_0__.func_160())
	{
		if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
		{
			if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(Local_103.f_31[iLocal_114]))
			{
				if (__LIB_3__.func_583(Local_103.f_31[iLocal_114]))
				{
					if (!__LIB_3__.func_583(PLAYER::PLAYER_ID()))
					{
						if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() || __LIB_0__.func_1("PERSON_IE_MODI" /* GXT: Your Organization is currently modifying vehicles for sale. */))
						{
							__LIB_0__.func_151("PERSON_IE_MODI" /* GXT: Your Organization is currently modifying vehicles for sale. */, -1);
						}
					}
					else if (__LIB_0__.func_1("PERSON_IE_MODI" /* GXT: Your Organization is currently modifying vehicles for sale. */))
					{
						HUD::CLEAR_HELP(true);
					}
				}
				else if (__LIB_0__.func_1("PERSON_IE_MODI" /* GXT: Your Organization is currently modifying vehicles for sale. */))
				{
					HUD::CLEAR_HELP(true);
				}
			}
		}
	}
}

void func_133()//Position - 0x1C67A5
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<3> Var3;
	float fVar4;
	float fVar5;
	struct<3> Var6;
	int iVar7;
	if (Local_103.f_31[iLocal_114] == __LIB_0__.func_160())
	{
		return;
	}
	if (((((__LIB_4__.func_238(Local_103.f_31[iLocal_114]) || __LIB_3__.func_583(Local_103.f_31[iLocal_114])) || (__LIB_10__.func_469() && __LIB_1__.func_174(Local_103.f_31[iLocal_114]))) || (__LIB_10__.func_553() && func_3157(Local_103.f_31[iLocal_114]))) || (func_3157(Local_103.f_31[iLocal_114]) && ((__LIB_10__.func_12() || __LIB_10__.func_477()) || __LIB_10__.func_395()))) && !BitTest(Local_103.f_8, 2))
	{
		fVar5 = 1.75f;
		iVar7 = 0;
		Var6 = { Local_103.f_45 };
		if (Local_124.f_675 == 4)
		{
			iVar2 = joaat("BikerDLC_Int01_GrgRm");
		}
		else if (Local_124.f_675 == 5)
		{
			iVar2 = joaat("int02_MainRm");
		}
		if (__LIB_10__.func_554())
		{
			iVar2 = joaat("mainRoom001");
		}
		else if (__LIB_10__.func_523())
		{
			iVar2 = joaat("IntWareMed_Room");
			Var6 = { 958.2224f, -2993.941f, -40.3389f };
		}
		else if (__LIB_10__.func_553())
		{
			if (__LIB_6__.func_25() == 0)
			{
				iVar2 = joaat("Arena_Mod_Rm");
				if (!__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
				{
					Var6 = { 204.852f, 5179.4956f, -89.9988f };
					fVar5 = 2f;
				}
				else
				{
					iVar2 = joaat("Arena_Mod_Rm2");
				}
			}
			else
			{
				fVar5 = 2f;
				iVar2 = joaat("Mod2_Room");
				if (!__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
				{
					Var6 = { 181.473f, 5187.618f, 10.1111f };
				}
			}
		}
		else if (__LIB_10__.func_12())
		{
			iVar2 = joaat("Meet_rm");
			fVar5 = 4.5f;
			Var6 = { __LIB_10__.func_403(Local_104[Local_103.f_31[iLocal_114] /*17*/].f_8) };
		}
		else if (__LIB_10__.func_477())
		{
			iVar2 = joaat("ModRoom1");
			fVar5 = 3.5f;
			if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
			{
				Var6 = { Local_104[Local_103.f_31[iLocal_114] /*17*/].f_14 };
			}
			else
			{
				Var6 = { -1351.707f, 155.8296f, -100.1944f };
			}
		}
		else if (__LIB_10__.func_395())
		{
			fVar5 = 3.5f;
			if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
			{
				Var6 = { Local_104[Local_103.f_31[iLocal_114] /*17*/].f_14 };
			}
			else
			{
				Var6 = { -1065.066f, -74.694f, -91.2f };
			}
		}
		bVar1 = false;
		while (bVar1 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(bVar1);
			if (__LIB_0__.func_154(iVar0, 0, 1))
			{
				if ((((NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar0) && !__LIB_1__.func_174(iVar0)) && Local_103.f_31[iLocal_114] != iVar0) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(iVar0), false)) && !func_3237(PLAYER::PLAYER_ID(), 0))
				{
					if (!BitTest(Local_103.f_9, bVar1))
					{
						if (__LIB_0__.func_154(iVar0, 1, 1) && ((((((INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::GET_PLAYER_PED(iVar0)) == iVar2 || __LIB_10__.func_554()) || __LIB_10__.func_469()) || __LIB_10__.func_523()) || __LIB_10__.func_553()) || __LIB_10__.func_477()) || __LIB_10__.func_395()))
						{
							Var3 = { ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(iVar0), true) };
							fVar4 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var3, Var6, true);
							if (__LIB_10__.func_553())
							{
								if (__LIB_6__.func_25() == 0)
								{
									if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
									{
										if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::GET_PLAYER_PED(iVar0), 166.2425f, 5180.15f, -89.81953f, 149.30006f, 5179.9385f, -85.42345f, 8.75f, false, true, 0))
										{
											iVar7 = 1;
										}
									}
								}
								else if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
								{
									if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::GET_PLAYER_PED(iVar0), 170.00243f, 5186.892f, 10.074923f, 153.34851f, 5187.2583f, 14.474804f, 8.75f, false, true, 0))
									{
										iVar7 = 1;
									}
								}
							}
							if (fVar4 < fVar5 || iVar7)
							{
								if (!BitTest(Local_103.f_9, bVar1))
								{
									MISC::SET_BIT(&(Local_103.f_9), bVar1);
									if (!BitTest(Local_103.f_8, 1))
									{
										MISC::SET_BIT(&(Local_103.f_8), 1);
									}
								}
							}
							else if (BitTest(Local_103.f_9, bVar1))
							{
								MISC::CLEAR_BIT(&(Local_103.f_9), bVar1);
							}
						}
					}
				}
			}
			bVar1++;
		}
		if (!BitTest(Local_103.f_8, 2))
		{
			MISC::SET_BIT(&(Local_103.f_8), 2);
		}
	}
}

void func_134()//Position - 0x1C6C1C
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (!__LIB_0__.func_618() && __LIB_0__.func_267(PLAYER::PLAYER_ID()))
		{
			if (__LIB_10__.func_553() && __LIB_6__.func_25() == 0)
			{
				if (BitTest(Local_103.f_8, 11))
				{
					if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_0))
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_103.f_0);
						if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_103.f_0))
						{
							ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_ENT(Local_103.f_0), false);
						}
					}
					if (__LIB_19__.func_949(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
					{
						if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_1))
						{
							NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_103.f_1);
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_103.f_1))
							{
								ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_ENT(Local_103.f_1), false);
							}
						}
					}
					if (__LIB_11__.func_343(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
					{
						if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_2))
						{
							NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_103.f_2);
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_103.f_2))
							{
								ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_ENT(Local_103.f_2), false);
							}
						}
					}
					MISC::CLEAR_BIT(&(Local_103.f_8), 11);
				}
			}
		}
	}
}

int func_135()//Position - 0x1C6E02
{
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_10__.func_553())
	{
		return 1;
	}
	if (__LIB_10__.func_477())
	{
		return 1;
	}
	if (__LIB_10__.func_395())
	{
		return 1;
	}
	if (__LIB_10__.func_530())
	{
		return 1;
	}
	return 0;
}

void func_136()//Position - 0x1C71BA
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_10__.func_12())
	{
		return;
	}
	iVar0 = PLAYER::INT_TO_PLAYERINDEX(iLocal_113);
	if (iVar0 == __LIB_0__.func_160())
	{
		return;
	}
	if (iVar0 == PLAYER::PLAYER_ID())
	{
		return;
	}
	if (!__LIB_2__.func_102(iVar0))
	{
		return;
	}
	iVar2 = PLAYER::GET_PLAYER_PED(iVar0);
	if (((__LIB_9__.func_204(iVar0) || __LIB_9__.func_963(iVar0)) || __LIB_1__.func_174(iVar0)) && !__LIB_4__.func_238(iVar0))
	{
		if (!BitTest(uLocal_161, iLocal_113))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(iVar2, false) && __LIB_0__.func_306(iVar2, 0) == -1)
			{
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(iVar2, false);
				AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(iVar1, "GTAO_Tuner_Meet_Car_Meet_Cars_Being_Modded_Group", 0f);
				MISC::SET_BIT(&uLocal_161, iLocal_113);
			}
		}
	}
	else if (BitTest(uLocal_161, iLocal_113))
	{
		if (__LIB_0__.func_293(iVar0, -1))
		{
			iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(iVar0), false);
			AUDIO::REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(iVar1, 0f);
		}
		MISC::CLEAR_BIT(&uLocal_161, iLocal_113);
	}
}

void func_137()//Position - 0x1C732F
{
	if (__LIB_10__.func_553())
	{
		if (!__LIB_4__.func_715() || __LIB_0__.func_706())
		{
			if (__LIB_9__.func_903(PLAYER::PLAYER_ID()))
			{
				if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Global_103227, true))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_103227))
					{
						VEHICLE::DELETE_VEHICLE(&Global_103227);
						__LIB_9__.func_933(0);
						__LIB_9__.func_902(0);
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_103227);
					}
				}
			}
		}
	}
}

void func_138()//Position - 0x1C7596
{
	if (Local_124.f_116.f_31 == 8)
	{
		return;
	}
	if (__LIB_10__.func_469())
	{
		if (__LIB_0__.func_278(PLAYER::PLAYER_ID()))
		{
			if (Global_1853185 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_1853185)
				{
					if (((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && Local_124.f_116.f_31 == 2)
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
						{
							VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
							MISC::SET_BIT(&uLocal_202, 9);
						}
					}
				}
			}
		}
	}
	else if (__LIB_10__.func_473())
	{
		if (__LIB_0__.func_280(PLAYER::PLAYER_ID()))
		{
			if (Global_1853191 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_1853191)
				{
					if ((((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && __LIB_0__.func_109(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) && Local_124.f_116.f_31 == 2)
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
						{
							VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
							MISC::SET_BIT(&uLocal_202, 9);
						}
					}
				}
			}
		}
	}
	else if (__LIB_10__.func_17())
	{
		if (__LIB_0__.func_279(PLAYER::PLAYER_ID()))
		{
			if (Global_1853190 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_1853190)
				{
					if (((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && Local_124.f_116.f_31 == 2)
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
						{
							VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
							MISC::SET_BIT(&uLocal_202, 9);
						}
					}
				}
			}
		}
	}
	else if (__LIB_10__.func_472())
	{
		if (__LIB_1__.func_105(PLAYER::PLAYER_ID()))
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
				{
					if ((((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && __LIB_0__.func_266(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) && Local_124.f_116.f_31 == 2)
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
						{
							VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
							MISC::SET_BIT(&uLocal_202, 9);
						}
					}
				}
			}
		}
	}
	else if (__LIB_10__.func_471())
	{
		if (__LIB_1__.func_335(PLAYER::PLAYER_ID(), 0))
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
				{
					if ((((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && __LIB_0__.func_266(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) && Local_124.f_116.f_31 == 2)
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
						{
							VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
							MISC::SET_BIT(&uLocal_202, 9);
						}
					}
				}
			}
		}
	}
	else if (__LIB_10__.func_553() || __LIB_10__.func_395())
	{
		if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
		{
			if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
			{
				if (((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9)) && Local_124.f_116.f_31 == 2)
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
					{
						VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
						MISC::SET_BIT(&uLocal_202, 9);
					}
				}
			}
		}
	}
}

void func_139()//Position - 0x1C793D
{
	if (Global_1853185 != __LIB_0__.func_160())
	{
		if (BitTest(Local_104[Global_1853185 /*17*/].f_6, 9))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
				Global_1853205 = 1;
			}
		}
	}
}

void func_140(var uParam0)//Position - 0x1C824C
{
	if (__LIB_10__.func_554())
	{
		switch (Local_124.f_675)
		{
			case 6:
				*uParam0 = { -1586.08f, -576.237f, 105.222f };
				uParam0->f_3 = { 0f, 0f, -89.04f };
				break;
			case 7:
				*uParam0 = { -1387.41f, -466.879f, 78.222f };
				uParam0->f_3 = { 0f, 0f, 153.86f };
				break;
			case 8:
				*uParam0 = { -154.665f, -597.01f, 167.022f };
				uParam0->f_3 = { 0f, 0f, -85f };
				break;
			case 9:
				*uParam0 = { -80.6841f, -825.974f, 285.022f };
				uParam0->f_3 = { 0f, 0f, -55f };
				break;
		}
	}
	else if (__LIB_10__.func_531())
	{
		*uParam0 = { 834.081f, -3243.938f, -98.697f };
		uParam0->f_3 = { 0f, 0f, -36.72f };
	}
	else if (__LIB_10__.func_553())
	{
		if (Local_103.f_49 == 1)
		{
			*uParam0 = { 208.5481f, 5201.18f, -89.5998f };
			uParam0->f_3 = { 0f, 0f, 2.1466f };
		}
	}
	else if (__LIB_10__.func_395())
	{
		*uParam0 = { -1062.8873f, -80.4686f, -90.2f };
		uParam0->f_3 = { 0f, 0f, 193.2372f };
	}
}

int func_141(int iParam0, int iParam1)//Position - 0x1CA281
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_10__.func_554() || (((func_3229() && !__LIB_10__.func_531()) && !__LIB_10__.func_472()) && !__LIB_10__.func_471()))
		{
			if (iParam0 != -1)
			{
				if (__LIB_0__.func_154(PLAYER::INT_TO_PLAYERINDEX(iParam0), 1, 1))
				{
					if (BitTest(Local_104[iParam0 /*17*/].f_6, 3))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam0)), false))
						{
							iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam0)), false);
							if (ENTITY::DOES_ENTITY_EXIST(iVar0))
							{
								if (VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(iVar0, false, true) != 0)
								{
									iVar1 = 0;
									while (iVar1 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
									{
										if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1)))
										{
											iVar3 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1));
											if (BitTest(Local_104[iVar3 /*17*/].f_9[iParam1], 1))
											{
												iVar2++;
											}
										}
										iVar1++;
									}
									if (iVar2 == VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(iVar0, false, true))
									{
										return 1;
									}
									else
									{
										return 0;
									}
								}
								else
								{
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
	return 0;
}

void func_142(int iParam0)//Position - 0x1CA381
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_10__.func_554() || func_3229())
		{
			if (__LIB_0__.func_154(Local_103.f_31[iParam0], 1, 1))
			{
				if (__LIB_4__.func_238(Local_103.f_31[iParam0]))
				{
					if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false) || (__LIB_10__.func_473() && __LIB_10__.func_522(PLAYER::PLAYER_ID()))) || (__LIB_10__.func_467() && __LIB_10__.func_522(PLAYER::PLAYER_ID())))
					{
						iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false);
						if (ENTITY::DOES_ENTITY_EXIST(iVar0))
						{
							if (VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(iVar0, false, true) != 0)
							{
								iVar1 = 0;
								while (iVar1 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
								{
									if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1)))
									{
										iVar3 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1));
										if (__LIB_10__.func_513(iVar3, Local_103.f_31[iParam0]))
										{
											if (BitTest(Local_104[iVar3 /*17*/].f_9[iLocal_114], 2))
											{
												iVar2++;
											}
										}
									}
									iVar1++;
								}
								if (iVar2 == VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(iVar0, false, true))
								{
									if (!BitTest(Local_103.f_10[iParam0], 1))
									{
										MISC::SET_BIT(&(Local_103.f_10[iParam0]), 1);
									}
								}
								else if (BitTest(Local_103.f_10[iParam0], 1))
								{
									MISC::CLEAR_BIT(&(Local_103.f_10[iParam0]), 1);
								}
							}
							else if (!BitTest(Local_103.f_10[iParam0], 1))
							{
								MISC::SET_BIT(&(Local_103.f_10[iParam0]), 1);
							}
						}
					}
				}
			}
		}
	}
}

int func_143(bool bParam0)//Position - 0x1CAD0C
{
	if (__LIB_10__.func_530())
	{
		return 1;
	}
	if (__LIB_10__.func_12())
	{
		return 1;
	}
	if (__LIB_10__.func_477())
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 == PLAYER::INT_TO_PLAYERINDEX(bParam0))
		{
			return 1;
		}
	}
	return 0;
}

void func_144()//Position - 0x1CBF19
{
	int iVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (((__LIB_4__.func_992(iVar0, Local_124.f_444) && Local_124.f_444 != 28) && Local_124.f_443 != 2) && Local_124.f_443 != 0)
			{
				if ((iVar0 != iLocal_165 || iLocal_166 != Local_124.f_444) || iLocal_167 != Local_124.f_116.f_1)
				{
					__LIB_10__.func_526();
				}
				iLocal_165 = iVar0;
				iLocal_166 = Local_124.f_444;
				iLocal_167 = Local_124.f_116.f_1;
				if (!iLocal_164)
				{
					iLocal_164 = 1;
					iVar1 = 0;
					while (iVar1 < iLocal_168)
					{
						iLocal_168[iVar1] = -1;
						iVar1++;
					}
					iVar3 = VEHICLE::GET_NUM_VEHICLE_MODS(iLocal_165, Local_124.f_444);
					iVar7 = (iLocal_168 / 2);
					iVar5 = 0;
					iVar6 = 0;
					iVar1 = Local_124.f_116.f_1;
					while (iVar1 <= (iVar3 - 1))
					{
						if ((iVar4 < iLocal_168 && iVar1 >= 0) && iVar1 < iVar3)
						{
							bVar2 = true;
							if (Local_124.f_444 == 23 && !__LIB_10__.func_767(iVar1, Local_124.f_603, Local_124.f_605, 0))
							{
								bVar2 = false;
								iVar5++;
							}
							if (bVar2)
							{
								if (iVar1 <= ((Local_124.f_116.f_1 + iVar7) + iVar5))
								{
									if (!__LIB_10__.func_527(iVar1))
									{
										VEHICLE::PRELOAD_VEHICLE_MOD(iLocal_165, Local_124.f_444, iVar1);
										iLocal_168[iVar4] = iVar1;
										iVar4++;
									}
									iVar6++;
								}
							}
						}
						iVar1++;
					}
					iVar5 = 0;
					iVar1 = 0;
					while (iVar1 <= Local_124.f_116.f_1)
					{
						if (((iVar4 < iLocal_168 && iVar1 >= 0) && iVar1 < iVar3) && iVar6 < iVar7)
						{
							bVar2 = true;
							if (Local_124.f_444 == 23 && !__LIB_10__.func_767(iVar1, Local_124.f_603, Local_124.f_605, 0))
							{
								bVar2 = false;
								iVar5++;
							}
							if (bVar2)
							{
								if (iVar1 <= (((0 + iVar7) + iVar5) - iVar6))
								{
									if (!__LIB_10__.func_527(iVar1))
									{
										VEHICLE::PRELOAD_VEHICLE_MOD(iLocal_165, Local_124.f_444, iVar1);
										iLocal_168[iVar4] = iVar1;
										iVar4++;
									}
									iVar6++;
								}
							}
						}
						iVar1++;
					}
					iVar5 = 0;
					iVar6 = 0;
					iVar1 = (Local_124.f_116.f_1 - 1);
					while (iVar1 >= 0)
					{
						if ((iVar4 < iLocal_168 && iVar1 >= 0) && iVar1 < iVar3)
						{
							bVar2 = true;
							if (Local_124.f_444 == 23 && !__LIB_10__.func_767(iVar1, Local_124.f_603, Local_124.f_605, 0))
							{
								bVar2 = false;
								iVar5++;
							}
							if (bVar2)
							{
								if (iVar1 >= ((Local_124.f_116.f_1 - iVar7) - iVar5))
								{
									if (!__LIB_10__.func_527(iVar1))
									{
										VEHICLE::PRELOAD_VEHICLE_MOD(iLocal_165, Local_124.f_444, iVar1);
										iLocal_168[iVar4] = iVar1;
										iVar4++;
									}
									iVar6++;
								}
							}
						}
						iVar1 = (iVar1 + -1);
					}
					iVar5 = 0;
					iVar1 = (iVar3 - 1);
					while (iVar1 >= Local_124.f_116.f_1)
					{
						if (((iVar4 < iLocal_168 && iVar1 >= 0) && iVar1 < iVar3) && iVar6 < iVar7)
						{
							bVar2 = true;
							if (Local_124.f_444 == 23 && !__LIB_10__.func_767(iVar1, Local_124.f_603, Local_124.f_605, 0))
							{
								bVar2 = false;
								iVar5++;
							}
							if (bVar2)
							{
								if (iVar1 >= (((iVar3 - iVar7) - iVar5) + iVar6))
								{
									if (!__LIB_10__.func_527(iVar1))
									{
										VEHICLE::PRELOAD_VEHICLE_MOD(iLocal_165, Local_124.f_444, iVar1);
										iLocal_168[iVar4] = iVar1;
										iVar4++;
									}
									iVar6++;
								}
							}
						}
						iVar1 = (iVar1 + -1);
					}
				}
			}
			else
			{
				__LIB_10__.func_526();
			}
		}
	}
}

void func_145()//Position - 0x1CC31B
{
	int iVar0;
	int iVar1;
	Local_116.f_2 = 0;
	if (!Local_116.f_3)
	{
		if (Local_116.f_0 != __LIB_0__.func_160())
		{
			if (__LIB_0__.func_154(Local_116.f_0, 1, 1))
			{
				if ((BitTest(Local_104[Local_116.f_0 /*17*/].f_6, 0) || __LIB_10__.func_528(&iVar0, &iVar1)) || Local_116.f_5 != 0)
				{
					if (Local_116.f_5 != 0)
					{
						Local_116.f_2 = 1;
						if ((MISC::GET_GAME_TIMER() - Local_116.f_5) > 1250)
						{
							Local_116.f_3 = 1;
							CAM::DO_SCREEN_FADE_IN(500);
							Local_116.f_2 = 0;
						}
					}
					else
					{
						Local_116.f_2 = 1;
						if (!Local_116.f_4)
						{
							CAM::DO_SCREEN_FADE_OUT(300);
							Local_116.f_4 = 1;
						}
						else if ((CAM::IS_SCREEN_FADED_OUT() && !CAM::IS_SCREEN_FADING_OUT()) || HUD::IS_WARNING_MESSAGE_ACTIVE())
						{
							iVar0 = PLAYER::GET_PLAYER_PED(Local_116.f_0);
							if (PED::IS_PED_IN_ANY_VEHICLE(iVar0, false))
							{
								iVar1 = PED::GET_VEHICLE_PED_IS_IN(iVar0, false);
								if (iVar1 != Local_116.f_6)
								{
									PED::SET_PED_INTO_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar1, Local_116.f_1);
									PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(PLAYER::PLAYER_PED_ID(), false, false);
									ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
									Local_116.f_6 = iVar1;
									Local_116.f_5 = MISC::GET_GAME_TIMER();
								}
							}
						}
					}
				}
			}
		}
	}
}

int func_146(bool bParam0)//Position - 0x1CC874
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12) && __LIB_0__.func_121(Local_124.f_12))
	{
		iVar0 = 3;
		Var1 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
		Var2 = { ENTITY::GET_ENTITY_COORDS(Local_124.f_12, true) };
		if (bParam0)
		{
			iVar0 = 8;
		}
		if ((Var1.f_2 >= (Var2.f_2 - 2f) && Var1.f_2 <= (Var2.f_2 + 2f)) && __LIB_8__.func_538(PLAYER::PLAYER_PED_ID(), Local_124.f_12) < IntToFloat(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_147()//Position - 0x1CCEAE
{
	if (__LIB_10__.func_469())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_10__.func_17())
	{
		return 1;
	}
	if (__LIB_10__.func_473())
	{
		return 1;
	}
	if (__LIB_10__.func_472())
	{
		return 1;
	}
	if (__LIB_10__.func_471())
	{
		return 1;
	}
	if (__LIB_10__.func_553())
	{
		return 1;
	}
	if (__LIB_10__.func_12())
	{
		return 1;
	}
	if (__LIB_10__.func_477())
	{
		return 1;
	}
	if (__LIB_10__.func_395())
	{
		return 1;
	}
	return 0;
}

void func_148()//Position - 0x1CD872
{
	if (__LIB_10__.func_554())
	{
		if ((ENTITY::DOES_ENTITY_EXIST(Local_124.f_12) && !ENTITY::IS_ENTITY_DEAD(Local_124.f_12, false)) && !BitTest(uLocal_202, 12))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
			{
				AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(Local_124.f_12, "MP_CAR_MOD_SHOP_MECHANIC_GROUP", 0f);
				MISC::SET_BIT(&uLocal_202, 12);
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
			}
		}
	}
}

void func_149()//Position - 0x1CD9FD
{
	if (Global_1853184 != __LIB_0__.func_160())
	{
		if (PLAYER::PLAYER_ID() == Global_1853184)
		{
			if (__LIB_9__.func_970(PLAYER::PLAYER_ID()) || Global_1574632.f_18 != 0)
			{
				if (__LIB_9__.func_935(PLAYER::PLAYER_ID()))
				{
					if (ENTITY::DOES_ENTITY_EXIST(Global_103226) && !ENTITY::IS_ENTITY_DEAD(Global_103226, false))
					{
						if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_103226))
						{
							if (!ENTITY::IS_ENTITY_DEAD(Global_103226, false) && __LIB_7__.func_141(Global_103226, 0, 0, 0, 0, 0, 1, 0, 1))
							{
								VEHICLE::DELETE_VEHICLE(&Global_103226);
								__LIB_9__.func_969(0);
								__LIB_9__.func_934(0);
							}
						}
						else
						{
							NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Global_103226);
						}
					}
				}
			}
		}
	}
}

void func_150()//Position - 0x1CDE75
{
	int iVar0;
	int iVar1;
	int iVar2;
	char cVar3[24];
	int iVar4;
	struct<3> Var5;
	float fVar6;
	struct<3> Var7;
	float fVar8;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
		{
			if (__LIB_10__.func_467())
			{
				if (Global_1853189 != __LIB_0__.func_160())
				{
					if (ENTITY::DOES_ENTITY_EXIST(iLocal_543))
					{
						if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
							{
								if (!__LIB_5__.func_98(Global_1853189))
								{
									if (!BitTest(Local_103.f_8, 10))
									{
										Local_103.f_49 = MISC::GET_RANDOM_INT_IN_RANGE(0, 3);
										NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
										MISC::SET_BIT(&(Local_103.f_8), 10);
									}
									switch (Local_103.f_49)
									{
										case 1:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_KNEEL", -1295.1283f, -3004.0293f, -49.485f, 199.8997f, 0, false, true);
											}
											break;
										case 2:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_TIME_OF_DEATH", -1295.7495f, -3006.0315f, -49.4896f, 269.1592f, 0, false, true);
											}
											break;
										default:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_WELDING", -1297.368f, -3001.834f, -48.4932f, -117f, 0, false, true);
											}
											break;
									}
								}
								else
								{
									if (!BitTest(Local_103.f_8, 10))
									{
										iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
										Local_103.f_49 = MISC::GET_RANDOM_INT_IN_RANGE(6, 13);
										if (iVar0 == 0)
										{
											Local_103.f_49 = MISC::GET_RANDOM_INT_IN_RANGE(0, 6);
										}
										NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
										MISC::SET_BIT(&(Local_103.f_8), 10);
									}
									switch (Local_103.f_49)
									{
										case 0:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_SIT_UPS", -1296.168f, -3024.65f, -44.089f, 179.5038f, 0, false, true);
											}
											break;
										case 1:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_STAND_MOBILE_UPRIGHT", -1291.3048f, -2999.7986f, -45.0864f, 305.2729f, 0, false, true);
											}
											break;
										case 2:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_SMOKING_POT", -1291.1243f, -3018.4492f, -44.086f, 269.4503f, 0, false, true);
											}
											break;
										case 3:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_LEANING", -1290.8408f, -3019.9197f, -49.49f, 273.2592f, 0, false, true);
											}
											break;
										case 4:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_DRINKING", -1298.528f, -3013.0728f, -49.49f, 14.3498f, 0, false, true);
											}
											break;
										case 5:
											switch (iLocal_548)
											{
												case 0:
													iLocal_549 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(-1296.838f, -3025.728f, -44.089f, 0f, 0f, 0f, 2, false, true, 1f, 0f, 1f);
													NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Local_124.f_12, iLocal_549, "amb@world_human_push_ups@male@idle_a", "idle_d", 8f, -8f, 0, 0, 1000f, 0);
													NETWORK::NETWORK_START_SYNCHRONISED_SCENE(iLocal_549);
													iLocal_548++;
													break;
												case 1:
													iVar1 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(iLocal_549);
													if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar1))
													{
														if (PED::GET_SYNCHRONIZED_SCENE_PHASE(iVar1) >= 0.99f)
														{
															iLocal_549 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(-1296.838f, -3025.728f, -44.089f, 0f, 0f, 0f, 2, false, true, 1f, 0f, 1f);
															NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Local_124.f_12, iLocal_549, "amb@world_human_push_ups@male@idle_a", "idle_d", 8f, -8f, 13, 0, 1000f, 0);
															NETWORK::NETWORK_START_SYNCHRONISED_SCENE(iLocal_549);
															iLocal_548++;
														}
													}
													break;
												case 2:
													iVar2 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(iLocal_549);
													if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar2))
													{
														if (PED::GET_SYNCHRONIZED_SCENE_PHASE(iVar2) >= 0.99f)
														{
															StringCopy(&cVar3, "idle_", 24);
															iVar4 = MISC::GET_RANDOM_INT_IN_RANGE(0, 5);
															if (iVar4 == 0)
															{
																StringConCat(&cVar3, "a", 24);
															}
															else if (iVar4 == 1)
															{
																StringConCat(&cVar3, "b", 24);
															}
															else if (iVar4 == 2)
															{
																StringConCat(&cVar3, "c", 24);
															}
															else if (iVar4 == 3)
															{
																StringConCat(&cVar3, "d", 24);
															}
															else if (iVar4 == 4)
															{
																StringConCat(&cVar3, "e", 24);
															}
															iLocal_549 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(-1296.838f, -3025.728f, -44.089f, 0f, 0f, 0f, 2, false, true, 1f, 0f, 1f);
															NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Local_124.f_12, iLocal_549, "amb@world_human_push_ups@male@idle_a", &cVar3, 8f, -8f, 13, 0, 1000f, 0);
															NETWORK::NETWORK_START_SYNCHRONISED_SCENE(iLocal_549);
															iLocal_548 = 1;
														}
													}
													break;
											}
											break;
										case 6:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_KNEEL", -1298.4249f, -3017.105f, -49.49f, 102.6714f, 0, false, true);
											}
											break;
										case 7:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_KNEEL", -1294.6014f, -3013.3481f, -49.49f, 340.1654f, 0, false, true);
											}
											break;
										case 8:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_CLIPBOARD", -1298.0631f, -3034.1077f, -49.49f, 188.3022f, 0, false, true);
											}
											break;
										case 9:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_CLIPBOARD", -1295.867f, -3008.759f, -45.0864f, 23.0856f, 0, false, true);
											}
											break;
										case 10:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_KNEEL", -1295.1283f, -3004.0293f, -49.485f, 199.8997f, 0, false, true);
											}
											break;
										case 11:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "CODE_HUMAN_MEDIC_TIME_OF_DEATH", -1295.7495f, -3006.0315f, -49.4896f, 269.1592f, 0, false, true);
											}
											break;
										case 12:
											if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
											{
												TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_WELDING", -1297.368f, -3001.834f, -48.4932f, -117f, 0, false, true);
											}
											break;
										}
								}
							}
							else
							{
								NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_12);
							}
						}
					}
				}
			}
			else if (__LIB_10__.func_553() && __LIB_6__.func_25() == 0)
			{
				if (__LIB_0__.func_121(Local_124.f_12))
				{
					if (!BitTest(Local_103.f_8, 10))
					{
						Local_103.f_49 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
						NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
						MISC::SET_BIT(&(Local_103.f_8), 10);
					}
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
					{
						if (__LIB_6__.func_25() == 0)
						{
							Var5 = { Local_124.f_12.f_6 };
							fVar6 = Local_124.f_12.f_15;
						}
						switch (Local_103.f_49)
						{
							case 0:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_SMOKING", Var5, fVar6, 0, false, true);
								}
								break;
							case 1:
							case 2:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_STAND_IMPATIENT", Var5, fVar6, 0, false, true);
								}
								break;
							case 3:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_STAND_MOBILE_UPRIGHT", Var5, fVar6, 0, false, true);
								}
								break;
						}
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_12);
					}
				}
				if (__LIB_0__.func_121(Local_124.f_12.f_1))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12.f_1))
					{
						switch (Local_103.f_49)
						{
							case 0:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_1, "WORLD_HUMAN_STAND_MOBILE_UPRIGHT", 199.616f, 5189.947f, -88.6022f, 202.2488f, 0, false, true);
								}
								break;
							case 1:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_1, "CODE_HUMAN_MEDIC_TIME_OF_DEATH", 200.8411f, 5195.596f, -88.6045f, 356.3046f, 0, false, true);
								}
								break;
							case 2:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_1, "CODE_HUMAN_MEDIC_KNEEL", 200.0081f, 5191.609f, -88.5998f, 93.7701f, 0, false, true);
								}
								break;
							case 3:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_1, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_1, "WORLD_HUMAN_CLIPBOARD", 200.8411f, 5195.596f, -88.6045f, 356.3046f, 0, false, true);
								}
								break;
						}
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_12);
					}
				}
				if (__LIB_0__.func_121(Local_124.f_12.f_2))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12.f_2))
					{
						switch (Local_103.f_49)
						{
							case 0:
							case 2:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_2, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_2, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_2, "WORLD_HUMAN_CLIPBOARD", 205.0978f, 5198.526f, -88.6044f, 173.5312f, 0, false, true);
								}
								break;
							case 3:
								if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_2, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12.f_2, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
								{
									TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12.f_2, "WORLD_HUMAN_GUARD_STAND", 209.3047f, 5192.978f, -88.6034f, 181.4693f, 0, false, true);
								}
								break;
						}
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_12);
					}
				}
			}
			else if (__LIB_10__.func_12())
			{
				if (__LIB_0__.func_121(Local_124.f_12))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
					{
						Var7 = { Local_124.f_12.f_6 };
						fVar8 = Local_124.f_12.f_15;
						if (TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(Local_124.f_12, joaat("SCRIPT_TASK_START_SCENARIO_AT_POSITION")) != 0)
						{
							TASK::TASK_START_SCENARIO_AT_POSITION(Local_124.f_12, "WORLD_HUMAN_CLIPBOARD", Var7, fVar8, 0, false, true);
						}
					}
				}
			}
		}
	}
}

void func_151()//Position - 0x1CEAC4
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	bool bVar3;
	int iVar4;
	int iVar5;
	if (__LIB_10__.func_467())
	{
		if (!ENTITY::DOES_ENTITY_EXIST(iLocal_543))
		{
			if (__LIB_0__.func_584(joaat("sm_prop_smug_havok")))
			{
				iLocal_543 = OBJECT::CREATE_OBJECT(joaat("sm_prop_smug_havok"), -1294.7135f, -3005.118f, -49.4896f, false, false, false);
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("sm_prop_smug_havok"));
				ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iLocal_543, -1294.7135f, -3005.118f, -49.4896f, false, false, true);
				ENTITY::SET_ENTITY_HEADING(iLocal_543, 218.6938f);
			}
		}
		if ((!BitTest(iLocal_201, 26) && Global_1853189 != __LIB_0__.func_160()) && !__LIB_5__.func_98(Global_1853189))
		{
			iVar4 = 0;
			while (iVar4 < 8)
			{
				if (!ENTITY::DOES_ENTITY_EXIST(iLocal_544[iVar4]))
				{
					__LIB_10__.func_533(iVar4, &iVar0, &Var1, &Var2, &bVar3);
					if (__LIB_0__.func_584(iVar0))
					{
						iLocal_544[iVar4] = OBJECT::CREATE_OBJECT(iVar0, Var1, false, false, false);
						STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
						ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iLocal_544[iVar4], Var1, false, false, true);
						ENTITY::SET_ENTITY_ROTATION(iLocal_544[iVar4], Var2, 2, true);
						ENTITY::FREEZE_ENTITY_POSITION(iLocal_544[iVar4], bVar3);
					}
				}
				iVar4++;
			}
			MISC::SET_BIT(&iLocal_201, 26);
		}
		else if ((BitTest(iLocal_201, 26) && Global_1853189 != __LIB_0__.func_160()) && __LIB_5__.func_98(Global_1853189))
		{
			iVar5 = 0;
			while (iVar5 < 8)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iLocal_544[iVar5]))
				{
					OBJECT::DELETE_OBJECT(&(iLocal_544[iVar5]));
				}
				iVar5++;
			}
			MISC::CLEAR_BIT(&iLocal_201, 26);
		}
	}
}

int func_152(var uParam0)//Position - 0x1CF0C4
{
	*uParam0 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9;
	if (*uParam0 == __LIB_0__.func_160() || Global_2689235[*uParam0 /*453*/].f_318.f_6 == -1)
	{
		return 0;
	}
	if (__LIB_0__.func_170(Global_2689235[*uParam0 /*453*/].f_318.f_6) == 4 && Global_2689235[*uParam0 /*453*/].f_318.f_9 == *uParam0)
	{
		return 1;
	}
	return 0;
}

var func_153(int iParam0)//Position - 0x1CF74F
{
	return (((((__LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_ASSAULTRIFLE")) || __LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_CARBINERIFLE"))) || __LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_PISTOL"))) || __LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_COMBATMG"))) || __LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_HEAVYSNIPER"))) || __LIB_10__.func_534(PLAYER::GET_PLAYER_PED(iParam0), joaat("WEAPON_SMG")));
}

int func_154(int iParam0)//Position - 0x1CF923
{
	if (__LIB_0__.func_279(iParam0) && __LIB_1__.func_236(iParam0) == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_155(int iParam0)//Position - 0x1D01D1
{
	if (__LIB_0__.func_278(iParam0) && __LIB_1__.func_236(iParam0) == iParam0)
	{
		return 1;
	}
	return 0;
}

void func_156()//Position - 0x1D055D
{
	if ((Global_2725426 != 0 && __LIB_1__.func_241() == 0) && __LIB_9__.func_199() == 0)
	{
		Global_2725426 = 0;
	}
}

void func_157()//Position - 0x1D05AD
{
	if (__LIB_10__.func_509(iLocal_120) && !__LIB_6__.func_267())
	{
		if (Local_124.f_7 && Local_124.f_0 != 45)
		{
			if (!BitTest(uLocal_390, 14))
			{
				__LIB_10__.func_540();
				MISC::SET_BIT(&uLocal_390, 14);
			}
		}
		else if (BitTest(uLocal_390, 14))
		{
			__LIB_10__.func_539();
			MISC::CLEAR_BIT(&uLocal_390, 14);
		}
	}
}

void func_158(int iParam0, int iParam1)//Position - 0x1E4B3D
{
	if (iParam0 != -1 && iParam1 != 0)
	{
		Global_100493.f_377[__LIB_10__.func_544(iParam0) /*5*/][iParam1] = 1;
	}
}

int func_159(int iParam0)//Position - 0x1E5B52
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
		{
			iParam0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		}
	}
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if ((((Local_124.f_0 != 39 && Local_124.f_0 != 40) && Local_124.f_0 != 41) && Local_124.f_0 != 42) && Local_124.f_0 != 43)
	{
		return 0;
	}
	if ((BitTest(Global_4718592.f_33, 22) && __LIB_7__.func_113(PLAYER::PLAYER_ID()) != 11) || __LIB_10__.func_351())
	{
		iVar0 = __LIB_10__.func_546(iParam0);
		if (iVar0 > -1)
		{
			if (BitTest(Global_4980736.f_78578[iVar0 /*450*/].f_114, 14))
			{
				return 1;
			}
		}
	}
	if (__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
	{
		if (__LIB_7__.func_113(PLAYER::PLAYER_ID()) == 11 && __LIB_18__.func_446(iParam0, 0) > 0)
		{
			return 1;
		}
		if (!__LIB_2__.func_342(iParam0, 0) && !__LIB_2__.func_342(iParam0, 1))
		{
			switch (__LIB_1__.func_337(PLAYER::PLAYER_ID()))
			{
				case 2:
					return 1;
					break;
				}
			}
	}
	if (__LIB_7__.func_133(PLAYER::PLAYER_ID()) == 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			if (__LIB_0__.func_291(iParam0) != -1)
			{
				return 1;
			}
		}
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("AllowModSprayRepair", 2))
		{
			if (DECORATOR::DECOR_EXIST_ON(iParam0, "AllowModSprayRepair") && DECORATOR::DECOR_GET_BOOL(iParam0, "AllowModSprayRepair"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_160()//Position - 0x1E6FFA
{
	int iVar0;
	iVar0 = 0;
	if (__LIB_10__.func_550())
	{
		iVar0 = 0;
		while (iVar0 < __LIB_9__.func_973())
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(__LIB_9__.func_972(iVar0), PLAYER::PLAYER_PED_ID(), false))
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

void func_161()//Position - 0x1E993B
{
	if (!__LIB_7__.func_194(0) == Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_769)
	{
		__LIB_1__.func_46(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_769));
	}
	else
	{
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_769 = 0;
	}
}

void func_162()//Position - 0x1E9BAB
{
	if (Local_124.f_116.f_19)
	{
		if (__LIB_6__.func_267())
		{
			__LIB_5__.func_729();
			Global_2714762.f_785.f_33[0] = Local_124.f_116.f_5;
			Global_2714762.f_785.f_33[1] = Local_124.f_446;
			Global_2714762.f_785.f_33[2] = Local_124.f_444;
			Global_2714762.f_785.f_33[3] = Local_124.f_604;
			Global_2714762.f_785.f_33[4] = Local_124.f_603;
			Global_2714762.f_785.f_39 = Local_124.f_443;
			Global_2714762.f_785.f_41 = 0;
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
			{
				Global_2714762.f_785.f_41 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
			}
		}
	}
}

void func_163(var uParam0)//Position - 0x1E9D74
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_0))
		{
			*uParam0 = NETWORK::NET_TO_PED(Local_103.f_0);
			if (__LIB_10__.func_553())
			{
				if (__LIB_19__.func_949(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
				{
					if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_1))
					{
						uParam0->f_1 = NETWORK::NET_TO_PED(Local_103.f_1);
					}
					else
					{
						uParam0->f_1 = 0;
					}
				}
				if (__LIB_11__.func_343(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
				{
					if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_2))
					{
						uParam0->f_2 = NETWORK::NET_TO_PED(Local_103.f_2);
					}
					else
					{
						uParam0->f_2 = 0;
					}
				}
			}
			uParam0->f_26 = 1;
		}
		else
		{
			*uParam0 = 0;
		}
		uParam0->f_27 = Local_103.f_4;
	}
}

void func_164()//Position - 0x1E9E1C
{
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
	{
		__LIB_10__.func_559(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
	}
}

void func_165(struct<3> Param0, float fParam1)//Position - 0x190C
{
	__LIB_10__.func_8(&(Global_106934.f_2890), Param0, fParam1);
}

void func_166(int iParam0, int iParam1)//Position - 0x1F64A
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (iParam0 == 145 || Global_97782[iVar0] == iParam0)
			{
				if (iParam1 == 0 || ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == __LIB_6__.func_853(iParam0, iParam1))
				{
					if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_97772[iVar0], false))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_97772[iVar0], false, true);
						VEHICLE::DELETE_VEHICLE(&(Global_97772[iVar0]));
						Global_97782[iVar0] = 145;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_167(char* sParam0, char* sParam1, float fParam2, float fParam3, bool bParam4, int iParam5)//Position - 0x38A1
{
	HUD::SET_TEXT_CENTRE(bParam4);
	HUD::SET_TEXT_FONT(iParam5);
	__LIB_10__.func_580();
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam0);
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam1);
	HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam2, fParam3, 0);
}

void func_168(char* sParam0, float fParam1, float fParam2, bool bParam3, bool bParam4, int iParam5)//Position - 0x38CE
{
	HUD::SET_TEXT_CENTRE(bParam3);
	HUD::SET_TEXT_FONT(iParam5);
	__LIB_10__.func_580();
	if (bParam4)
	{
		HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam0);
	}
	else
	{
		HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam0);
	}
	HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam1, fParam2, 0);
}

void func_169(int iParam0, int iParam1, float fParam2, float fParam3, char* sParam4, int iParam5)//Position - 0x43FC
{
	int iVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	iVar0 = 1;
	HUD::SET_TEXT_CENTRE(false);
	HUD::SET_TEXT_FONT(0);
	__LIB_10__.func_580();
	fVar1 = 0f;
	fVar2 = (8f * 0.00078125f);
	fVar3 = (16f * 0.0013888889f);
	iVar4 = 93;
	iVar5 = 182;
	iVar6 = 229;
	if (iParam5 == 4)
	{
		iVar4 = 194;
		iVar5 = 80;
		iVar6 = 80;
	}
	switch (iParam5)
	{
		case 4:
		case 5:
			HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(18f));
			HUD::SET_TEXT_FONT(4);
			if (iParam0 < 0)
			{
				HUD::BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT("ESMINDOLLA" /* GXT: -$~a~ */);
				HUD::ADD_TEXT_COMPONENT_FORMATTED_INTEGER((-1 * iParam0), true);
				fVar1 = HUD::END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(false);
			}
			else
			{
				HUD::BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT("ESDOLLA" /* GXT: $~a~ */);
				HUD::ADD_TEXT_COMPONENT_FORMATTED_INTEGER(iParam0, true);
				fVar1 = HUD::END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(false);
			}
			fVar1 = (fVar1 - (fVar1 % 0.00078125f));
			GRAPHICS::DRAW_SPRITE("CommonMenu", "BettingBox_Left", (fParam2 - fVar1), ((fParam3 + (fVar3 * 0.6f)) + (0.0013888889f * 2f)), fVar2, fVar3, 0f, iVar4, iVar5, iVar6, 255, false, 0);
			GRAPHICS::DRAW_SPRITE("CommonMenu", "BettingBox_Centre", ((fParam2 - (fVar1 * 0.5f)) - (0.00078125f * 2f)), ((fParam3 + (fVar3 * 0.6f)) + (0.0013888889f * 2f)), (fVar1 - (fVar2 * 0.5f)), fVar3, 0f, iVar4, iVar5, iVar6, 255, false, 0);
			GRAPHICS::DRAW_SPRITE("CommonMenu", "BettingBox_Right", (fParam2 - (0.00078125f * 4f)), ((fParam3 + (fVar3 * 0.6f)) + (0.0013888889f * 2f)), fVar2, fVar3, 0f, iVar4, iVar5, iVar6, 255, false, 0);
			HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(14f));
			break;
	}
	HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iVar0);
	switch (iParam5)
	{
		case 11:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("PERCENTAGE" /* GXT: ~1~% */);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			break;
		case 1:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("FO_NUM" /* GXT: ~1~ */);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			break;
		case 2:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("FO_TWO_NUM" /* GXT: ~1~/~1~ */);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
			break;
		case 4:
		case 5:
			HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(18f));
		case 3:
			if (iParam0 < 0)
			{
				HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("ESMINDOLLA" /* GXT: -$~a~ */);
				HUD::ADD_TEXT_COMPONENT_FORMATTED_INTEGER((-1 * iParam0), true);
			}
			else
			{
				HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("ESDOLLA" /* GXT: $~a~ */);
				HUD::ADD_TEXT_COMPONENT_FORMATTED_INTEGER(iParam0, true);
			}
			break;
		case 6:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam4);
			break;
		case 7:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
			HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam4);
			break;
		case 8:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
			HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam0, 14);
			break;
		case 9:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
			HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam0, 6);
			break;
		case 10:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
			HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam0, 2055);
			break;
		case 18:
			HUD::SET_TEXT_FONT(5);
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
			HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam0, 2055);
			break;
		case 12:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("AHD_DIST");
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			break;
		case 13:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam4);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
			break;
		case 15:
		case 14:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam4);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam0);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
			break;
		case 16:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam4);
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
			break;
		case 20:
			HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam4);
			break;
	}
	if (iParam5 != 17)
	{
		if (iParam5 == 4 || iParam5 == 5)
		{
			HUD::END_TEXT_COMMAND_DISPLAY_TEXT((fParam2 - (0.00078125f * 4f)), fParam3, 0);
			HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(14f));
		}
		else
		{
			HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam2, fParam3, 0);
		}
	}
}

void func_170(int iParam0, char* sParam1)//Position - 0xB7E7
{
	if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
	{
		if (HUD::DOES_BLIP_EXIST(iParam0))
		{
			HUD::REMOVE_BLIP(&iParam0);
			HUD::CLEAR_PRINTS();
			__LIB_0__.func_210(sParam1, 7500, 1);
		}
	}
}

int func_171(int iParam0, var uParam1)//Position - 0xBE3A
{
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6))
		{
			if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), iParam0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), iParam0))
			{
				if (PED::IS_PED_FACING_PED(iParam0, PLAYER::PLAYER_PED_ID(), 90f))
				{
					if (__LIB_10__.func_589(iParam0, 1) < uParam1->f_2)
					{
						if (uParam1->f_1 == 0)
						{
							uParam1->f_1 = MISC::GET_GAME_TIMER();
						}
						else if ((MISC::GET_GAME_TIMER() - uParam1->f_1) > uParam1->f_3)
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

struct<39> func_172(int iParam0)//Position - 0x18C5B
{
	struct<39> Var0;
	if (iParam0 == 0)
	{
		Var0.f_0 = 1;
		Var0.f_1 = { 0f, 0f, 0f };
		Var0.f_4 = { 0f, 0f, 0f };
		Var0.f_7 = { __LIB_10__.func_587(0) };
		Var0.f_22 = "Assassin_Valet";
		Var0.f_23 = 7000f;
		Var0.f_24 = 2000f;
		Var0.f_32 = -1;
		Var0.f_25 = { -1700.0151f, -1066.335f, 12.144f };
		Var0.f_28 = { -1691.5642f, -1066.5138f, 12.076f };
		Var0.f_31 = 35.4714f;
		Var0.f_10 = { -1700.467f, -1066.672f, 13.8795f };
		Var0.f_13 = { -4.8332f, 0f, -177.1283f };
		Var0.f_16 = { -1700.467f, -1066.672f, 13.8795f };
		Var0.f_19 = { -4.8332f, 0f, -177.1283f };
		Var0.f_33 = { -1700.0983f, -1067.9395f, 12.1547f };
		Var0.f_36 = 162.4559f;
		Var0.f_37 = 1;
	}
	else if (iParam0 == 1)
	{
		Var0.f_0 = 0;
		Var0.f_1 = { -699.3992f, -917.5043f, 18.2143f };
		Var0.f_4 = { 0f, 0f, 0f };
		Var0.f_7 = { __LIB_10__.func_587(1) };
		Var0.f_22 = "Assassin_Multi";
		Var0.f_23 = 5000f;
		Var0.f_24 = 2000f;
		Var0.f_32 = -1;
		Var0.f_25 = { -700.1855f, -917.9558f, 18.2143f };
		Var0.f_28 = { -699.9455f, -921.7786f, 18.0144f };
		Var0.f_31 = 78.0874f;
		Var0.f_10 = { -697.8064f, -921.4629f, 20.5104f };
		Var0.f_13 = { -13.5249f, 0f, 30.6033f };
		Var0.f_16 = { -702.4851f, -921.2747f, 21.1235f };
		Var0.f_19 = { -22.5196f, 0f, -43.0435f };
		Var0.f_33 = { 0f, 0f, 0f };
		Var0.f_36 = 0f;
		Var0.f_37 = 0;
	}
	else if (iParam0 == 2)
	{
		Var0.f_0 = 0;
		Var0.f_1 = { 215.1206f, -853.3143f, 29.3684f };
		Var0.f_4 = { 0f, 0f, 87.1787f };
		Var0.f_7 = { __LIB_10__.func_587(2) };
		Var0.f_22 = "Assassin_Hooker";
		Var0.f_23 = 3000f;
		Var0.f_24 = 2000f;
		Var0.f_32 = -1;
		Var0.f_25 = { 213.7994f, -853.9389f, 29.3929f };
		Var0.f_28 = { 205.2641f, -847.2667f, 29.4903f };
		Var0.f_31 = 140.1039f;
		Var0.f_10 = { 216.7391f, -856.0031f, 32.7127f };
		Var0.f_13 = { -25.1365f, 0f, 41.3912f };
		Var0.f_16 = { 210.4668f, -851.3092f, 32.1099f };
		Var0.f_19 = { -16.3326f, 0f, -127.0114f };
		Var0.f_33 = { 213.8733f, -853.8161f, 29.3922f };
		Var0.f_36 = 344.0112f;
		Var0.f_37 = 0;
	}
	else if (iParam0 == 3)
	{
		Var0.f_0 = 0;
		Var0.f_1 = { -22.5499f, -107.3546f, 56.0161f };
		Var0.f_4 = { 0f, 0f, 269.7924f };
		Var0.f_7 = { __LIB_10__.func_587(3) };
		Var0.f_22 = "Assassin_Bus";
		Var0.f_23 = 5000f;
		Var0.f_24 = 2000f;
		Var0.f_32 = -1;
		Var0.f_25 = { -22.3125f, -108.9183f, 56.0068f };
		Var0.f_28 = { -17.2677f, -118.5915f, 55.8734f };
		Var0.f_31 = 1.4374f;
		Var0.f_10 = { -26.1094f, -108.0298f, 59.052f };
		Var0.f_13 = { -21.2059f, 0f, -109.0176f };
		Var0.f_16 = { -20.1189f, -111.9639f, 59.4377f };
		Var0.f_19 = { -27.0037f, 0f, 29.464f };
		Var0.f_33 = { 0f, 0f, 0f };
		Var0.f_36 = 0f;
		Var0.f_37 = 0;
	}
	else if (iParam0 == 4)
	{
		Var0.f_0 = 0;
		Var0.f_1 = { 806.1469f, -1070.2103f, 27.3361f };
		Var0.f_4 = { 0f, 0f, 90f };
		Var0.f_7 = { __LIB_10__.func_587(4) };
		Var0.f_22 = "Assassin_Construction";
		Var0.f_23 = 8000f;
		Var0.f_24 = 2000f;
		Var0.f_32 = 1;
		Var0.f_25 = { 804.9559f, -1070.4604f, 27.3361f };
		Var0.f_28 = { 799.8408f, -1079.1416f, 27.321f };
		Var0.f_31 = 69.6524f;
		Var0.f_10 = { 801.8048f, -1068.0675f, 30.3496f };
		Var0.f_13 = { -20.8953f, 0f, -132.9451f };
		Var0.f_16 = { 805.8168f, -1074.4961f, 28.9803f };
		Var0.f_19 = { -1.5585f, 0f, 6.9143f };
		Var0.f_33 = { 804.8776f, -1070.5231f, 27.3416f };
		Var0.f_36 = 287.8741f;
		Var0.f_37 = 0;
	}
	return Var0;
}

void func_173(int iParam0, char* sParam1, int iParam2)//Position - 0x207CE
{
	if (BitTest(iParam0, 30))
	{
		switch (__LIB_10__.func_591(iParam0))
		{
			case 0:
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam2);
				break;
			case 1:
				STREAMING::REMOVE_ANIM_DICT(sParam1);
				break;
			case 2:
				STREAMING::REMOVE_CLIP_SET(sParam1);
				break;
			case 3:
				GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(sParam1);
				break;
			case 4:
				VEHICLE::REMOVE_VEHICLE_RECORDING(iParam2, sParam1);
				break;
			case 5:
				TASK::REMOVE_WAYPOINT_RECORDING(sParam1);
				break;
			case 6:
				AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
				break;
			case 7:
				SCRIPT::SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(iParam2);
				break;
			case 8:
				HUD::CLEAR_ADDITIONAL_TEXT(iParam2, BitTest(iParam0, 26));
				break;
			case 9:
				STREAMING::REMOVE_PTFX_ASSET();
				break;
			default:
				break;
		}
	}
}

void func_174()//Position - 0x2682
{
	__LIB_0__.func_533();
}

int func_175(var uParam0, bool bParam1, int iParam2)//Position - 0x68F5
{
	uParam0->f_12 = iParam2;
	__LIB_0__.func_967(uParam0);
	__LIB_10__.func_588(uParam0);
	if (MISC::ARE_STRINGS_EQUAL(&(uParam0->f_550), "SPR_RESULT") || (MISC::ARE_STRINGS_EQUAL(&(uParam0->f_550), "") && uParam0->f_56 > 0))
	{
		uParam0->f_570 = 1;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPHud", false);
	}
	if (uParam0->f_1 == 0)
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("CommonMenu", false);
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPLeaderboard", false);
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPHud", false);
		uParam0->f_1 = GRAPHICS::REQUEST_SCALEFORM_MOVIE("MP_BIG_MESSAGE_FREEMODE");
		uParam0->f_2 = 0;
		uParam0->f_3 = 0;
	}
	uParam0->f_4 = GRAPHICS::REQUEST_SCALEFORM_MOVIE_INSTANCE("INSTRUCTIONAL_BUTTONS");
	if (bParam1)
	{
		while (((!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_1) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("CommonMenu")) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPLeaderboard")) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPHud"))
		{
			SYSTEM::WAIT(0);
		}
		if (uParam0->f_566 || uParam0->f_571)
		{
			while (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_4))
			{
				SYSTEM::WAIT(0);
			}
		}
	}
	else
	{
		if (((!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_1) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("CommonMenu")) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPLeaderboard")) || !GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPHud"))
		{
			return 0;
		}
		if (uParam0->f_566)
		{
			if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_4))
			{
				return 0;
			}
		}
	}
	if (uParam0->f_566)
	{
		if (uParam0->f_571)
		{
			__LIB_10__.func_583(uParam0);
		}
		else if (uParam0->f_56 != 0)
		{
			__LIB_10__.func_574(uParam0, 1);
		}
		else
		{
			__LIB_10__.func_574(uParam0, 0);
		}
	}
	Global_78580 = 1;
	return 1;
}

void func_176(char* sParam0, int iParam1, bool bParam2, int iParam3, float fParam4, float fParam5, float fParam6, char* sParam7)//Position - 0xA623
{
	__LIB_2__.func_29(iParam1);
	if (bParam2)
	{
		*iParam1 = AUDIO::GET_SOUND_ID();
	}
	else
	{
		*iParam1 = -1;
	}
	if (iParam3 != 0)
	{
		AUDIO::PLAY_SOUND_FROM_ENTITY(*iParam1, sParam0, iParam3, sParam7, false, 0);
	}
	else if ((fParam4 != 0f || fParam5 != 0f) || fParam6 != 0f)
	{
		AUDIO::PLAY_SOUND_FROM_COORD(*iParam1, sParam0, fParam4, fParam5, fParam6, sParam7, false, 0, false);
	}
	else
	{
		AUDIO::PLAY_SOUND_FRONTEND(*iParam1, sParam0, sParam7, true);
	}
}

int func_177(char* sParam0, char* sParam1, int iParam2)//Position - 0x16B22
{
	if (BitTest(sParam0, 30))
	{
		if (BitTest(sParam0, 29))
		{
			switch (__LIB_10__.func_591(sParam0))
			{
				case 0:
					return STREAMING::HAS_MODEL_LOADED(iParam2);
					break;
				case 1:
					return STREAMING::HAS_ANIM_DICT_LOADED(sParam1);
					break;
				case 2:
					return STREAMING::HAS_CLIP_SET_LOADED(sParam1);
					break;
				case 3:
					return GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(sParam1);
					break;
				case 4:
					return VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(iParam2, sParam1);
					break;
				case 5:
					return TASK::GET_IS_WAYPOINT_RECORDING_LOADED(sParam1);
					break;
				case 6:
					return AUDIO::REQUEST_SCRIPT_AUDIO_BANK(sParam1, BitTest(sParam0, 27), -1);
					break;
				case 7:
					return SCRIPT::HAS_SCRIPT_WITH_NAME_HASH_LOADED(iParam2);
					break;
				case 8:
					return HUD::HAS_ADDITIONAL_TEXT_LOADED(iParam2);
					break;
				case 9:
					return STREAMING::HAS_PTFX_ASSET_LOADED();
					break;
				default:
					break;
			}
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

void func_178(var uParam0, char* sParam1)//Position - 0x1E704
{
	__LIB_10__.func_592(uParam0, 1, -1, sParam1, 0);
}

int func_179(var uParam0, char* sParam1)//Position - 0x1EB9E
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		if (!MISC::IS_STRING_NULL((*uParam0)[iVar0]))
		{
			if (MISC::ARE_STRINGS_EQUAL((*uParam0)[iVar0], sParam1))
			{
				return 0;
			}
		}
		iVar0++;
	}
	iVar1 = __LIB_10__.func_593(uParam0);
	if (iVar1 < 0 || iVar1 >= *uParam0)
	{
		return 0;
	}
	(*uParam0)[iVar1] = sParam1;
	return 1;
}

int func_180(int iParam0, int iParam1, var uParam2, bool bParam3)//Position - 0x5595
{
	struct<3> Var0;
	int iVar1;
	iVar1 = 0;
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
	}
	if (MISC::IS_BULLET_IN_AREA(Var0, 4f, true))
	{
		return 1;
	}
	if (MISC::HAS_BULLET_IMPACTED_IN_AREA(Var0, SYSTEM::TO_FLOAT(uParam2->f_6), true, true))
	{
		return 1;
	}
	if (WEAPON::IS_PED_ARMED(iParam0, 2))
	{
		if (PED::IS_PED_SHOOTING(iParam0))
		{
			if (ENTITY::IS_ENTITY_AT_COORD(iParam1, ENTITY::GET_ENTITY_COORDS(iParam0, true), IntToFloat(uParam2->f_6 * 3), IntToFloat(uParam2->f_6 * 3), IntToFloat(uParam2->f_6 * 3), false, true, 0))
			{
				if (PED::IS_PED_FACING_PED(ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1), iParam0, 120f) && ENTITY::HAS_ENTITY_CLEAR_LOS_TO_ENTITY(iParam1, iParam0, 17))
				{
					return 1;
				}
			}
		}
		else
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1), false))
			{
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1), false);
			}
			if (PED::IS_PED_PLANTING_BOMB(iParam0) || __LIB_10__.func_590(iVar1))
			{
				if (ENTITY::IS_ENTITY_AT_COORD(iParam1, ENTITY::GET_ENTITY_COORDS(iParam0, true), IntToFloat(uParam2->f_6 * 3), IntToFloat(uParam2->f_6 * 3), IntToFloat(uParam2->f_6 * 3), false, true, 0))
				{
					if (PED::IS_PED_FACING_PED(ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1), iParam0, 120f) && ENTITY::HAS_ENTITY_CLEAR_LOS_TO_ENTITY(iParam1, iParam0, 17))
					{
						return 1;
					}
				}
			}
		}
	}
	if (bParam3)
	{
		if (MISC::IS_PROJECTILE_IN_AREA((Var0.f_0 - IntToFloat(uParam2->f_6)), (Var0.f_1 - IntToFloat(uParam2->f_6)), (Var0.f_2 - IntToFloat(uParam2->f_6)), (Var0.f_0 + IntToFloat(uParam2->f_6)), (Var0.f_1 + IntToFloat(uParam2->f_6)), (Var0.f_2 + IntToFloat(uParam2->f_6)), false))
		{
			return 1;
		}
	}
	return 0;
}

int func_181(int* iParam0, float fParam1)//Position - 0x18E24
{
	if (__LIB_0__.func_736(iParam0))
	{
		if (__LIB_19__.func_812(iParam0) > fParam1)
		{
			return 1;
		}
	}
	return 0;
}

void func_182(int iParam0)//Position - 0x4D83
{
	if (iParam0 == 10)
	{
		return;
	}
	switch (iParam0)
	{
		case 0:
		case 1:
			if (__LIB_0__.func_369(1))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[1 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[0 /*10*/].f_8, __LIB_0__.func_369(0), false);
			}
			else if (__LIB_0__.func_369(0))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[0 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[1 /*10*/].f_8, __LIB_0__.func_369(1), false);
			}
			break;
		case 2:
		case 3:
		case 4:
			if (__LIB_0__.func_369(3))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[3 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[4 /*10*/].f_8, __LIB_0__.func_369(4), false);
				MISC::SET_SAVE_HOUSE(Global_95479[2 /*10*/].f_8, __LIB_0__.func_369(2), false);
			}
			else if (__LIB_0__.func_369(4))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[4 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[3 /*10*/].f_8, __LIB_0__.func_369(3), false);
				MISC::SET_SAVE_HOUSE(Global_95479[2 /*10*/].f_8, __LIB_0__.func_369(2), false);
			}
			else if (__LIB_0__.func_369(2))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[2 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[3 /*10*/].f_8, __LIB_0__.func_369(3), false);
				MISC::SET_SAVE_HOUSE(Global_95479[4 /*10*/].f_8, __LIB_0__.func_369(4), false);
			}
			break;
		case 5:
		case 6:
			if (__LIB_0__.func_369(6))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[6 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[5 /*10*/].f_8, __LIB_0__.func_369(5), false);
			}
			else if (__LIB_0__.func_369(5))
			{
				MISC::SET_SAVE_HOUSE(Global_95479[5 /*10*/].f_8, true, true);
				MISC::SET_SAVE_HOUSE(Global_95479[6 /*10*/].f_8, __LIB_0__.func_369(6), false);
			}
			break;
	}
}

int func_183(int iParam0)//Position - 0x11CD
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__.func_138(__LIB_6__.func_925(), 4, 5);
		case 2:
			return 5;
		case 3:
			return 3;
		default:
	}
	return 0;
}

Vector3 func_184(var uParam0)//Position - 0x1A15
{
	struct<3> Var0;
	Var0 = { uParam0->f_16[uParam0->f_9 /*14*/].f_3 };
	if (__LIB_6__.func_925() && uParam0->f_1.f_1 == 0)
	{
		Var0.f_2 = (Var0.f_2 - 4f);
	}
	return Var0;
}

void func_185(var uParam0, char* sParam1)//Position - 0x1A83
{
	if (uParam0->f_1.f_1 == 1)
	{
		if (__LIB_6__.func_925())
		{
			switch (uParam0->f_1.f_3)
			{
				case 0:
					StringCopy(sParam1, "IDLE_A", 16);
					break;
				case 1:
					StringCopy(sParam1, "IDLE_B", 16);
					break;
				case 2:
					StringCopy(sParam1, "IDLE_C", 16);
					break;
				case 3:
					StringCopy(sParam1, "ENTER", 16);
					break;
				case 5:
					StringCopy(sParam1, "BASE", 16);
					break;
				case 4:
					StringCopy(sParam1, "EXIT", 16);
					break;
				case 7:
					StringCopy(sParam1, "D_TO_B", 16);
					break;
				case 8:
					StringCopy(sParam1, "B_TO_C", 16);
					break;
				case 9:
					StringCopy(sParam1, "C_TO_D", 16);
					break;
				case 10:
					StringCopy(sParam1, "D_TO_B", 16);
					break;
				case 12:
					StringCopy(sParam1, "B_TO_A", 16);
					break;
				case 13:
					StringCopy(sParam1, "C_TO_A", 16);
					break;
				case 14:
					StringCopy(sParam1, "D_TO_B", 16);
					break;
				case 15:
					StringCopy(sParam1, "E_TO_A", 16);
					break;
				default:
					StringCopy(sParam1, "invalid_clip", 16);
					break;
			}
		}
		else
		{
			switch (uParam0->f_1.f_3)
			{
				case 0:
					StringCopy(sParam1, "IDLE_A", 16);
					break;
				case 1:
					StringCopy(sParam1, "IDLE_B", 16);
					break;
				case 2:
					StringCopy(sParam1, "IDLE_C", 16);
					break;
				case 3:
					StringCopy(sParam1, "ENTER", 16);
					break;
				case 5:
					StringCopy(sParam1, "BASE", 16);
					break;
				case 4:
					StringCopy(sParam1, "EXIT", 16);
					break;
				case 7:
					StringCopy(sParam1, "A_TO_B", 16);
					break;
				case 8:
					StringCopy(sParam1, "B_TO_C", 16);
					break;
				case 9:
					StringCopy(sParam1, "A_TO_D", 16);
					break;
				case 10:
					StringCopy(sParam1, "D_TO_E", 16);
					break;
				case 12:
					StringCopy(sParam1, "B_TO_E", 16);
					break;
				case 13:
					StringCopy(sParam1, "C_TO_A", 16);
					break;
				case 14:
					StringCopy(sParam1, "D_TO_A", 16);
					break;
				case 15:
					StringCopy(sParam1, "E_TO_A", 16);
					break;
				default:
					StringCopy(sParam1, "invalid_clip", 16);
					break;
				}
		}
	}
	else
	{
		switch (uParam0->f_1.f_3)
		{
			case 0:
				StringCopy(sParam1, "IDLE_A", 16);
				break;
			case 1:
				StringCopy(sParam1, "IDLE_B", 16);
				break;
			case 2:
				StringCopy(sParam1, "IDLE_C", 16);
				break;
			case 3:
				StringCopy(sParam1, "ENTER", 16);
				break;
			case 5:
				StringCopy(sParam1, "BASE", 16);
				break;
			case 4:
				StringCopy(sParam1, "EXIT", 16);
				break;
			case 7:
				StringCopy(sParam1, "A_TO_B", 16);
				break;
			case 8:
				StringCopy(sParam1, "B_TO_C", 16);
				break;
			case 9:
				StringCopy(sParam1, "C_TO_D", 16);
				break;
			case 10:
				StringCopy(sParam1, "D_TO_E", 16);
				break;
			case 12:
				StringCopy(sParam1, "B_TO_E", 16);
				break;
			case 13:
				StringCopy(sParam1, "C_TO_A", 16);
				break;
			case 14:
				StringCopy(sParam1, "D_TO_A", 16);
				break;
			case 15:
				StringCopy(sParam1, "E_TO_A", 16);
				break;
			default:
				StringCopy(sParam1, "invalid_clip", 16);
				break;
			}
	}
	if (uParam0->f_1.f_1 == 3)
	{
		if (uParam0->f_1.f_3 == 5)
		{
			StringCopy(sParam1, "BASE_A", 16);
		}
		else if (uParam0->f_1.f_3 == 0)
		{
			StringCopy(sParam1, "IDLE_B", 16);
		}
	}
}

void func_186(var uParam0, char* sParam1)//Position - 0x1DB5
{
	switch (uParam0->f_1.f_1)
	{
		case 0:
			StringCopy(sParam1, "ANIM@AMB@CLUBHOUSE@SEATING", 64);
			break;
		case 1:
			StringCopy(sParam1, "ANIM@AMB@OFFICE@SEATING", 64);
			break;
		case 2:
			StringCopy(sParam1, "ANIM@AMB@FACILITY@BRIEFING_ROOM@SEATING", 64);
			break;
		case 3:
			StringCopy(sParam1, "ANIM@AMB@YACHT@JACUZZI@SEATED", 64);
			break;
	}
	if (__LIB_6__.func_925())
	{
		StringConCat(sParam1, "@FEMALE", 64);
	}
	else
	{
		StringConCat(sParam1, "@MALE", 64);
	}
	switch (uParam0->f_1.f_1)
	{
		case 1:
			if (__LIB_6__.func_925())
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
				}
			}
			else
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_A@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_E@BASE@", 64);
						break;
					}
			}
			break;
		case 0:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@BASE@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@BASE@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@BASE@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@BASE@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@BASE@", 64);
					break;
			}
			break;
		case 2:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@", 64);
					break;
			}
			break;
		case 3:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VARIATION_01@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VARIATION_02@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VARIATION_03@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VARIATION_04@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VARIATION_05@", 64);
					break;
			}
			break;
	}
}

void func_187(var uParam0)//Position - 0x2685
{
	__LIB_9__.func_889(&(uParam0->f_7), 4, __LIB_0__.func_661());
	__LIB_9__.func_889(&(uParam0->f_7), 1, ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false));
	__LIB_9__.func_889(&(uParam0->f_7), 3, PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true));
	__LIB_9__.func_889(&(uParam0->f_7), 0, __LIB_0__.func_77(0));
	__LIB_9__.func_889(&(uParam0->f_7), 2, TASK::IS_PED_RUNNING(PLAYER::PLAYER_PED_ID()));
}

void func_188(int iParam0)//Position - 0x17CF5
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 13;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 9, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_189(int iParam0)//Position - 0x17E4C
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 12;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "OUTFIT_P2_0" /* GXT: White T-Shirt, Sweatpants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "OUTFIT_P2_5" /* GXT: Dock Worker */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "OUTFIT_P2_6" /* GXT: Highway Patrol */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "OUTFIT_P2_7" /* GXT: Golf */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "OUTFIT_P2_8" /* GXT: Tennis */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "OUTFIT_P2_9", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "OUTFIT_P2_10" /* GXT: Scuba Land */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "OUTFIT_P2_12" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 9:
			StringCopy(&Var2, "OUTFIT_P2_13" /* GXT: Triathlon */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "OUTFIT_P2_14" /* GXT: Underwear */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 11:
			StringCopy(&Var2, "OUTFIT_P2_15" /* GXT: Security */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 12:
			StringCopy(&Var2, "OUTFIT_P2_16" /* GXT: Toilet */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "OUTFIT_P2_17" /* GXT: Prologue */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 14:
			StringCopy(&Var2, "OUTFIT_P2_18" /* GXT: Tuxedo */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 10000;
			break;
		case 15:
			StringCopy(&Var2, "OUTFIT_P2_19" /* GXT: Pink Ladies Sweats */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 16:
			StringCopy(&Var2, "OUTFIT_P2_20" /* GXT: Blue Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 17:
			StringCopy(&Var2, "OUTFIT_P2_21" /* GXT: Navy Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 18:
			StringCopy(&Var2, "OUTFIT_P2_22" /* GXT: Gray Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 19:
			StringCopy(&Var2, "OUTFIT_P2_23" /* GXT: Green Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 20:
			StringCopy(&Var2, "OUTFIT_P2_24" /* GXT: Hunting */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 21:
			StringCopy(&Var2, "OUTFIT_P2_25" /* GXT: White T-Shirt, Cargo Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 22:
			StringCopy(&Var2, "OUTFIT_P2_26" /* GXT: Denim Jacket, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 23:
			StringCopy(&Var2, "OUTFIT_P2_27" /* GXT: Ludendorff */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 24:
			StringCopy(&Var2, "OUTFIT_P2_28" /* GXT: Beige Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 119;
			break;
		case 25:
			StringCopy(&Var2, "OUTFIT_P2_29" /* GXT: Blue Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 99;
			break;
		case 26:
			StringCopy(&Var2, "OUTFIT_P2_30" /* GXT: Brown Plaid Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 129;
			break;
		case 27:
			StringCopy(&Var2, "OUTFIT_P2_44" /* GXT: Burgundy Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 125;
			break;
		case 28:
			StringCopy(&Var2, "OUTFIT_P2_45" /* GXT: Murky Plaid Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 120;
			break;
		case 29:
			StringCopy(&Var2, "OUTFIT_P2_46" /* GXT: Mint Plaid Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 139;
			break;
		case 30:
			StringCopy(&Var2, "OUTFIT_P2_47" /* GXT: Green Plaid Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 149;
			break;
		case 31:
			StringCopy(&Var2, "OUTFIT_P2_48" /* GXT: Blue-Gray Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 145;
			break;
		case 32:
			StringCopy(&Var2, "OUTFIT_P2_49" /* GXT: Caramel Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 140;
			break;
		case 33:
			StringCopy(&Var2, "OUTFIT_P2_50" /* GXT: Mocha Cheap Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 135;
			break;
		case 34:
			StringCopy(&Var2, "OUTFIT_P2_31" /* GXT: Gray Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4900;
			break;
		case 35:
			StringCopy(&Var2, "OUTFIT_P2_32" /* GXT: Sand Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 36:
			StringCopy(&Var2, "OUTFIT_P2_33" /* GXT: Charcoal Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4500;
			break;
		case 37:
			StringCopy(&Var2, "OUTFIT_P2_34" /* GXT: Off-White Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4900;
			break;
		case 38:
			StringCopy(&Var2, "OUTFIT_P2_35" /* GXT: Cream Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4500;
			break;
		case 39:
			StringCopy(&Var2, "OUTFIT_P2_36" /* GXT: Black Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 40:
			StringCopy(&Var2, "OUTFIT_P2_37" /* GXT: Ash Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5500;
			break;
		case 41:
			StringCopy(&Var2, "OUTFIT_P2_38" /* GXT: Red T-Shirt, Cargo Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 42:
			StringCopy(&Var2, "OUTFIT_P2_39" /* GXT: Amethyst Polo Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 43:
			StringCopy(&Var2, "OUTFIT_P2_40" /* GXT: White T-Shirt, Camo Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 44:
			StringCopy(&Var2, "OUTFIT_P2_41" /* GXT: Moto-X */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 45:
			StringCopy(&Var2, "OUTFIT_P2_42" /* GXT: White Tank Top, Sweatpants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 46:
			StringCopy(&Var2, "OUTFIT_P2_43" /* GXT: White T-Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 47:
			StringCopy(&Var2, "OUTFIT_P2_12" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 48, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_190(int iParam0)//Position - 0x1835B
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 11;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 1, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_191(int iParam0)//Position - 0x183D0
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 7;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 1, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_192(int iParam0)//Position - 0x18444
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 1;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "BERD_P2_0_0" /* GXT: Clean Shave */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "BERD_P2_1_0" /* GXT: Beard 1 */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "BERD_P2_2_0" /* GXT: Stubble */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "BERD_P2_3_0" /* GXT: Big Mustache */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "BERD_P2_4_0" /* GXT: Handlebar */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "BERD_P2_5_0" /* GXT: The Gerry */, 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 6, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_193(int iParam0)//Position - 0x1852B
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 10;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 1;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 2;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 3;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 4;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 5;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 1;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 2;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 3;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 4;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 5;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 6;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 7;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 8;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 9;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 1;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 2;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 3;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 4;
			break;
		case 27:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 5;
			break;
		case 28:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 6;
			break;
		case 29:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 1;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 2;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 3;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 33, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_194(int iParam0)//Position - 0x1888E
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 9;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 1;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 2;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 3;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "SPEC2_P0_08_0" /* GXT: Red Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar1 = 125;
			break;
		case 10:
			StringCopy(&Var2, "SPEC2_P0_08_1" /* GXT: Green Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 150;
			break;
		case 11:
			StringCopy(&Var2, "SPEC2_P0_08_2" /* GXT: Patriot Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 175;
			break;
		case 12:
			StringCopy(&Var2, "SPEC2_P0_08_3" /* GXT: Domino Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 85;
			break;
		case 13:
			StringCopy(&Var2, "SPEC2_P0_08_4" /* GXT: Gray Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 150;
			break;
		case 14:
			StringCopy(&Var2, "SPEC2_P0_08_5" /* GXT: Phoenix Wrestler Mask */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 175;
			break;
		case 15:
			StringCopy(&Var2, "PROPS_P1_H8_0" /* GXT: Green Monster Mask */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 270;
			break;
		case 16:
			StringCopy(&Var2, "PROPS_P1_H8_1" /* GXT: Red Monster Mask */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 270;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 17, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_195(int iParam0)//Position - 0x18A9F
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 8;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "SPEC_P2_0_0" /* GXT: Black Digital Watch */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "SPEC_P2_0_1" /* GXT: White Digital Watch */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 16;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 18, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_196(int iParam0)//Position - 0x18CCF
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 5;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 7, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_197(int iParam0)//Position - 0x18DDF
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 6;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "FEET_P2_0_0" /* GXT: Black Chukka Boots */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "FEET_P2_0_1" /* GXT: Snakeskin Chukka Boots */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 22;
			break;
		case 2:
			StringCopy(&Var2, "FEET_P2_0_2" /* GXT: Gray Chukka Boots */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 45;
			break;
		case 3:
			StringCopy(&Var2, "FEET_P2_0_3" /* GXT: Brown Chukka Boots */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 65;
			break;
		case 4:
			StringCopy(&Var2, "FEET_P2_0_4" /* GXT: Crocodile Skin Boots */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar1 = 58;
			break;
		case 5:
			StringCopy(&Var2, "FEET_P2_0_5" /* GXT: Cowboy Boots */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar1 = 72;
			break;
		case 6:
			StringCopy(&Var2, "FEET_P2_0_6" /* GXT: Yellow Reptile Skin Boots */, 16);
			iVar3 = 0;
			iVar4 = 6;
			iVar1 = 68;
			break;
		case 7:
			StringCopy(&Var2, "FEET_P2_0_7" /* GXT: Reptile Skin Boots */, 16);
			iVar3 = 0;
			iVar4 = 7;
			iVar1 = 60;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "FEET_P2_5_0" /* GXT: Work Boots */, 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "FEET_P2_8_0" /* GXT: Dressy Shoes */, 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "FEET_P2_9_0" /* GXT: Black Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 17:
			StringCopy(&Var2, "FEET_P2_9_1" /* GXT: Gray Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar1 = 680;
			break;
		case 18:
			StringCopy(&Var2, "FEET_P2_9_2" /* GXT: Cream Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 2;
			iVar1 = 650;
			break;
		case 19:
			StringCopy(&Var2, "FEET_P2_9_3" /* GXT: Brown Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 3;
			iVar1 = 670;
			break;
		case 20:
			StringCopy(&Var2, "FEET_P2_9_4" /* GXT: White Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 4;
			iVar1 = 700;
			break;
		case 21:
			StringCopy(&Var2, "FEET_P2_9_5" /* GXT: Russet Leather Loafers */, 16);
			iVar3 = 9;
			iVar4 = 5;
			iVar1 = 680;
			break;
		case 22:
			StringCopy(&Var2, "FEET_P2_9_6" /* GXT: White Snakeskin Loafers */, 16);
			iVar3 = 9;
			iVar4 = 6;
			iVar1 = 720;
			break;
		case 23:
			StringCopy(&Var2, "FEET_P2_9_7" /* GXT: Rattlesnake Loafers */, 16);
			iVar3 = 9;
			iVar4 = 7;
			iVar1 = 740;
			break;
		case 24:
			StringCopy(&Var2, "FEET_P2_9_8" /* GXT: Brown Snakeskin Loafers */, 16);
			iVar3 = 9;
			iVar4 = 8;
			iVar1 = 760;
			break;
		case 25:
			StringCopy(&Var2, "FEET_P2_9_9" /* GXT: Zebra Two-Tone Loafers */, 16);
			iVar3 = 9;
			iVar4 = 9;
			iVar1 = 780;
			break;
		case 26:
			StringCopy(&Var2, "FEET_P2_9_10" /* GXT: Pale Reptile Loafers */, 16);
			iVar3 = 9;
			iVar4 = 10;
			iVar1 = 750;
			break;
		case 27:
			StringCopy(&Var2, "FEET_P2_9_11" /* GXT: Tan Alligator Loafers */, 16);
			iVar3 = 9;
			iVar4 = 11;
			iVar1 = 700;
			break;
		case 28:
			StringCopy(&Var2, "FEET_P2_10_0" /* GXT: Chestnut Boots */, 16);
			iVar3 = 10;
			iVar4 = 0;
			break;
		case 29:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			break;
		case 36:
			StringCopy(&Var2, "FEET_P2_18_0" /* GXT: All Black Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar1 = 790;
			break;
		case 37:
			StringCopy(&Var2, "FEET_P2_18_1" /* GXT: Chocolate Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 750;
			break;
		case 38:
			StringCopy(&Var2, "FEET_P2_18_2" /* GXT: Chestnut Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 860;
			break;
		case 39:
			StringCopy(&Var2, "FEET_P2_18_3" /* GXT: Tan Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 750;
			break;
		case 40:
			StringCopy(&Var2, "FEET_P2_18_4" /* GXT: White Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 790;
			break;
		case 41:
			StringCopy(&Var2, "FEET_P2_18_5" /* GXT: Ash Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 42:
			StringCopy(&Var2, "FEET_P2_18_6" /* GXT: Gray Two-Tone Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar1 = 820;
			break;
		case 43:
			StringCopy(&Var2, "FEET_P2_18_7" /* GXT: Beige Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar1 = 800;
			break;
		case 44:
			StringCopy(&Var2, "FEET_P2_18_8" /* GXT: Topaz Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 8;
			iVar1 = 850;
			break;
		case 45:
			StringCopy(&Var2, "FEET_P2_18_9" /* GXT: Black Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 9;
			iVar1 = 870;
			break;
		case 46:
			StringCopy(&Var2, "FEET_P2_18_10" /* GXT: Lime Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 10;
			iVar1 = 720;
			break;
		case 47:
			StringCopy(&Var2, "FEET_P2_18_11" /* GXT: Hawthorn Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 11;
			iVar1 = 740;
			break;
		case 48:
			StringCopy(&Var2, "FEET_P2_18_12" /* GXT: Coffee Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 12;
			iVar1 = 800;
			break;
		case 49:
			StringCopy(&Var2, "FEET_P2_18_13" /* GXT: Gray Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 13;
			iVar1 = 750;
			break;
		case 50:
			StringCopy(&Var2, "FEET_P2_18_14" /* GXT: Cream Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 14;
			iVar1 = 770;
			break;
		case 51:
			StringCopy(&Var2, "FEET_P2_18_15" /* GXT: Navy Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 15;
			iVar1 = 860;
			break;
		case 52:
			StringCopy(&Var2, "FEET_P2_19_0" /* GXT: Black Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 850;
			break;
		case 53:
			StringCopy(&Var2, "FEET_P2_19_1" /* GXT: Red Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 800;
			break;
		case 54:
			StringCopy(&Var2, "FEET_P2_19_2" /* GXT: Brown Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 780;
			break;
		case 55:
			StringCopy(&Var2, "FEET_P2_19_3" /* GXT: Green Stripe Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 890;
			break;
		case 56:
			StringCopy(&Var2, "FEET_P2_19_4" /* GXT: Green Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 820;
			break;
		case 57:
			StringCopy(&Var2, "FEET_P2_19_5" /* GXT: Copper Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 58:
			StringCopy(&Var2, "FEET_P2_19_6" /* GXT: Copper Two-Tone Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 870;
			break;
		case 59:
			StringCopy(&Var2, "FEET_P2_19_7" /* GXT: Navy Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 930;
			break;
		case 60:
			StringCopy(&Var2, "FEET_P2_19_8" /* GXT: Blue Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 880;
			break;
		case 61:
			StringCopy(&Var2, "FEET_P2_19_9" /* GXT: Beige Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 900;
			break;
		case 62:
			StringCopy(&Var2, "FEET_P2_19_10" /* GXT: White Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 920;
			break;
		case 63:
			StringCopy(&Var2, "FEET_P2_19_11" /* GXT: Tan Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 970;
			break;
		case 64:
			StringCopy(&Var2, "FEET_P2_19_12" /* GXT: Black Snakeskin Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 990;
			break;
		case 65:
			StringCopy(&Var2, "FEET_P2_19_13" /* GXT: Two-Tone Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 960;
			break;
		case 66:
			StringCopy(&Var2, "FEET_P2_19_14" /* GXT: Brown Snakeskin Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 980;
			break;
		case 67:
			StringCopy(&Var2, "FEET_P2_19_15" /* GXT: Gray Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 950;
			break;
		case 68:
			StringCopy(&Var2, "FEET_P2_20_0" /* GXT: Brown Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 110;
			break;
		case 69:
			StringCopy(&Var2, "FEET_P2_20_1" /* GXT: Navy Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 115;
			break;
		case 70:
			StringCopy(&Var2, "FEET_P2_20_2" /* GXT: Coffee Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 120;
			break;
		case 71:
			StringCopy(&Var2, "FEET_P2_20_3" /* GXT: Burgundy Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 110;
			break;
		case 72:
			StringCopy(&Var2, "FEET_P2_20_4" /* GXT: Blue Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 4;
			iVar1 = 125;
			break;
		case 73:
			StringCopy(&Var2, "FEET_P2_20_5" /* GXT: Woodland Camo Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 128;
			break;
		case 74:
			StringCopy(&Var2, "FEET_P2_20_6" /* GXT: Black Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 135;
			break;
		case 75:
			StringCopy(&Var2, "FEET_P2_20_7" /* GXT: Tan Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 130;
			break;
		case 76:
			StringCopy(&Var2, "FEET_P2_20_8" /* GXT: Purple Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 145;
			break;
		case 77:
			StringCopy(&Var2, "FEET_P2_20_9" /* GXT: Brown Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 9;
			iVar1 = 110;
			break;
		case 78:
			StringCopy(&Var2, "FEET_P2_20_10" /* GXT: Chocolate Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 10;
			iVar1 = 120;
			break;
		case 79:
			StringCopy(&Var2, "FEET_P2_20_11" /* GXT: Green Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 11;
			iVar1 = 150;
			break;
		case 80:
			StringCopy(&Var2, "FEET_P2_20_12" /* GXT: Ash Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 12;
			iVar1 = 125;
			break;
		case 81:
			StringCopy(&Var2, "FEET_P2_20_13" /* GXT: Olive Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 13;
			iVar1 = 120;
			break;
		case 82:
			StringCopy(&Var2, "FEET_P2_20_14" /* GXT: Two-Tone Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 14;
			iVar1 = 130;
			break;
		case 83:
			StringCopy(&Var2, "FEET_P2_20_15" /* GXT: Yellow Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 15;
			iVar1 = 110;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 84, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_198(int iParam0)//Position - 0x1977E
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 4;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "LEGS_P2_0_0" /* GXT: Blue Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "LEGS_P2_0_1" /* GXT: Dirty Blue Jeans */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 95;
			break;
		case 2:
			StringCopy(&Var2, "LEGS_P2_0_2" /* GXT: Navy Jeans */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 129;
			break;
		case 3:
			StringCopy(&Var2, "LEGS_P2_0_3" /* GXT: Faded Jeans */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 115;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "LEGS_P2_11_0" /* GXT: Black Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 19:
			StringCopy(&Var2, "LEGS_P2_11_1" /* GXT: Russet Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar1 = 750;
			break;
		case 20:
			StringCopy(&Var2, "LEGS_P2_11_2" /* GXT: White Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar1 = 650;
			break;
		case 21:
			StringCopy(&Var2, "LEGS_P2_11_3" /* GXT: Maroon Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 850;
			break;
		case 22:
			StringCopy(&Var2, "LEGS_P2_11_4" /* GXT: Lobster Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 850;
			break;
		case 23:
			StringCopy(&Var2, "LEGS_P2_11_5" /* GXT: Stone Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 750;
			break;
		case 24:
			StringCopy(&Var2, "LEGS_P2_11_6" /* GXT: Pink Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar1 = 690;
			break;
		case 25:
			StringCopy(&Var2, "LEGS_P2_11_7" /* GXT: Mint Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar1 = 820;
			break;
		case 26:
			StringCopy(&Var2, "LEGS_P2_11_8" /* GXT: Brown Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 8;
			iVar1 = 650;
			break;
		case 27:
			StringCopy(&Var2, "LEGS_P2_11_9" /* GXT: Pale Blue Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 9;
			iVar1 = 690;
			break;
		case 28:
			StringCopy(&Var2, "LEGS_P2_11_10" /* GXT: Beige Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 10;
			iVar1 = 690;
			break;
		case 29:
			StringCopy(&Var2, "LEGS_P2_11_11" /* GXT: Aqua Plaid Golf Pants */, 16);
			iVar3 = 11;
			iVar4 = 11;
			iVar1 = 820;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 32:
			StringCopy(&Var2, "LEGS_P2_14_0" /* GXT: Black Cargo Pants */, 16);
			iVar3 = 14;
			iVar4 = 0;
			break;
		case 33:
			StringCopy(&Var2, "LEGS_P2_15_0" /* GXT: White Shorts */, 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 34:
			StringCopy(&Var2, "LEGS_P2_16_0" /* GXT: Pink Sweatpants */, 16);
			iVar3 = 16;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 35:
			StringCopy(&Var2, "LEGS_P2_17_0" /* GXT: Brown Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar1 = 58;
			break;
		case 36:
			StringCopy(&Var2, "LEGS_P2_17_1" /* GXT: Charcoal Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 1;
			iVar1 = 68;
			break;
		case 37:
			StringCopy(&Var2, "LEGS_P2_17_2" /* GXT: Gray Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 2;
			iVar1 = 65;
			break;
		case 38:
			StringCopy(&Var2, "LEGS_P2_17_3" /* GXT: Tan Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 3;
			iVar1 = 60;
			break;
		case 39:
			StringCopy(&Var2, "LEGS_P2_17_4" /* GXT: Blue Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 4;
			iVar1 = 65;
			break;
		case 40:
			StringCopy(&Var2, "LEGS_P2_17_5" /* GXT: Ash Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 5;
			iVar1 = 63;
			break;
		case 41:
			StringCopy(&Var2, "LEGS_P2_17_6" /* GXT: White Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 6;
			iVar1 = 60;
			break;
		case 42:
			StringCopy(&Var2, "LEGS_P2_17_7" /* GXT: Beige Work Pants */, 16);
			iVar3 = 17;
			iVar4 = 7;
			iVar1 = 58;
			break;
		case 43:
			StringCopy(&Var2, "LEGS_P2_18_0" /* GXT: Tan Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 0;
			break;
		case 44:
			StringCopy(&Var2, "LEGS_P2_18_1" /* GXT: Cream Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 1;
			break;
		case 45:
			StringCopy(&Var2, "LEGS_P2_18_2" /* GXT: Silver Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 99;
			break;
		case 46:
			StringCopy(&Var2, "LEGS_P2_18_3" /* GXT: Gray Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 105;
			break;
		case 47:
			StringCopy(&Var2, "LEGS_P2_18_4" /* GXT: Charcoal Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 110;
			break;
		case 48:
			StringCopy(&Var2, "LEGS_P2_18_5" /* GXT: Green Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 110;
			break;
		case 49:
			StringCopy(&Var2, "LEGS_P2_18_6" /* GXT: White Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar1 = 99;
			break;
		case 50:
			StringCopy(&Var2, "LEGS_P2_18_7" /* GXT: Urban Camo Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar1 = 110;
			break;
		case 51:
			StringCopy(&Var2, "LEGS_P2_18_8" /* GXT: Desert Camo Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 8;
			iVar1 = 110;
			break;
		case 52:
			StringCopy(&Var2, "LEGS_P2_18_9" /* GXT: Field Camo Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 9;
			iVar1 = 105;
			break;
		case 53:
			StringCopy(&Var2, "LEGS_P2_18_10" /* GXT: Forest Camo Cargo Pants */, 16);
			iVar3 = 18;
			iVar4 = 10;
			iVar1 = 105;
			break;
		case 54:
			StringCopy(&Var2, "LEGS_P2_19_0" /* GXT: Black Shorts */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 15;
			break;
		case 55:
			StringCopy(&Var2, "LEGS_P2_19_1" /* GXT: Pale Blue Shorts */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 15;
			break;
		case 56:
			StringCopy(&Var2, "LEGS_P2_19_2" /* GXT: Orange Shorts */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 15;
			break;
		case 57:
			StringCopy(&Var2, "LEGS_P2_19_3" /* GXT: Blue Shorts */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 15;
			break;
		case 58:
			StringCopy(&Var2, "LEGS_P2_19_4" /* GXT: Slate Shorts */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 15;
			break;
		case 59:
			StringCopy(&Var2, "LEGS_P2_19_5" /* GXT: Green Shorts */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 15;
			break;
		case 60:
			StringCopy(&Var2, "LEGS_P2_19_6" /* GXT: Crimson Shorts */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 15;
			break;
		case 61:
			StringCopy(&Var2, "LEGS_P2_19_7" /* GXT: Pale Blue Stripe Shorts */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 15;
			break;
		case 62:
			StringCopy(&Var2, "LEGS_P2_20_0" /* GXT: Gray Pants */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 600;
			break;
		case 63:
			StringCopy(&Var2, "LEGS_P2_20_1" /* GXT: Khaki Pants */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 600;
			break;
		case 64:
			StringCopy(&Var2, "LEGS_P2_20_2" /* GXT: Charcoal Pants */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 600;
			break;
		case 65:
			StringCopy(&Var2, "LEGS_P2_20_3" /* GXT: Cream Pants */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 600;
			break;
		case 66:
			StringCopy(&Var2, "LEGS_P2_20_4" /* GXT: Stone Pants */, 16);
			iVar3 = 20;
			iVar4 = 4;
			iVar1 = 600;
			break;
		case 67:
			StringCopy(&Var2, "LEGS_P2_20_5" /* GXT: Black Pants */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 600;
			break;
		case 68:
			StringCopy(&Var2, "LEGS_P2_20_6" /* GXT: Ash Pants */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 600;
			break;
		case 69:
			StringCopy(&Var2, "LEGS_P2_20_7" /* GXT: Beige Pants */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 600;
			break;
		case 70:
			StringCopy(&Var2, "LEGS_P2_20_8" /* GXT: Brown Pants */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 600;
			break;
		case 71:
			StringCopy(&Var2, "LEGS_P2_21_0" /* GXT: Beige Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 80;
			break;
		case 72:
			StringCopy(&Var2, "LEGS_P2_21_1" /* GXT: Blue Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 80;
			break;
		case 73:
			StringCopy(&Var2, "LEGS_P2_21_2" /* GXT: Brown Plaid Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 80;
			break;
		case 74:
			StringCopy(&Var2, "LEGS_P2_21_3" /* GXT: Burgundy Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 80;
			break;
		case 75:
			StringCopy(&Var2, "LEGS_P2_21_4" /* GXT: Murky Plaid Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 80;
			break;
		case 76:
			StringCopy(&Var2, "LEGS_P2_21_5" /* GXT: Mint Plaid Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 80;
			break;
		case 77:
			StringCopy(&Var2, "LEGS_P2_21_6" /* GXT: Green Plaid Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 80;
			break;
		case 78:
			StringCopy(&Var2, "LEGS_P2_21_7" /* GXT: Blue-Gray Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 80;
			break;
		case 79:
			StringCopy(&Var2, "LEGS_P2_21_8" /* GXT: Caramel Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 8;
			iVar1 = 80;
			break;
		case 80:
			StringCopy(&Var2, "LEGS_P2_21_9" /* GXT: Mocha Cheap Pants */, 16);
			iVar3 = 21;
			iVar4 = 9;
			iVar1 = 80;
			break;
		case 81:
			StringCopy(&Var2, "LEGS_P2_22_0" /* GXT: White Briefs */, 16);
			iVar3 = 22;
			iVar4 = 0;
			break;
		case 82:
			StringCopy(&Var2, "LEGS_P2_22_1" /* GXT: Green Briefs */, 16);
			iVar3 = 22;
			iVar4 = 1;
			iVar1 = 12;
			break;
		case 83:
			StringCopy(&Var2, "LEGS_P2_22_2" /* GXT: Gray Briefs */, 16);
			iVar3 = 22;
			iVar4 = 2;
			iVar1 = 12;
			break;
		case 84:
			StringCopy(&Var2, "LEGS_P2_22_3" /* GXT: Leopardskin Briefs */, 16);
			iVar3 = 22;
			iVar4 = 3;
			iVar1 = 22;
			break;
		case 85:
			StringCopy(&Var2, "LEGS_P2_22_4" /* GXT: Impotent Rage Briefs */, 16);
			iVar3 = 22;
			iVar4 = 4;
			iVar1 = 18;
			break;
		case 86:
			StringCopy(&Var2, "LEGS_P2_22_5" /* GXT: Pink Leopardskin Briefs */, 16);
			iVar3 = 22;
			iVar4 = 5;
			iVar1 = 20;
			break;
		case 87:
			StringCopy(&Var2, "LEGS_P2_22_6" /* GXT: Space Monkey Briefs 1 */, 16);
			iVar3 = 22;
			iVar4 = 6;
			iVar1 = 30;
			break;
		case 88:
			StringCopy(&Var2, "LEGS_P2_22_7" /* GXT: Space Monkey Briefs 2 */, 16);
			iVar3 = 22;
			iVar4 = 7;
			iVar1 = 30;
			break;
		case 89:
			StringCopy(&Var2, "LEGS_P2_22_8" /* GXT: Space Monkey Briefs 3 */, 16);
			iVar3 = 22;
			iVar4 = 8;
			iVar1 = 30;
			break;
		case 90:
			StringCopy(&Var2, "LEGS_P2_22_9" /* GXT: Space Monkey Briefs 4 */, 16);
			iVar3 = 22;
			iVar4 = 9;
			iVar1 = 30;
			break;
		case 91:
			StringCopy(&Var2, "LEGS_P2_23_0" /* GXT: Sweatpants */, 16);
			iVar3 = 23;
			iVar4 = 0;
			break;
		case 92:
			StringCopy(&Var2, "LEGS_P2_24_0" /* GXT: Brown Tuxedo Pants */, 16);
			iVar3 = 24;
			iVar4 = 0;
			break;
		case 93:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 25;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 94:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 0;
			break;
		case 95:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 1;
			break;
		case 96:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 2;
			break;
		case 97:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 3;
			break;
		case 98:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 4;
			break;
		case 99:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 5;
			break;
		case 100:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 6;
			break;
		case 101:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 7;
			break;
		case 102:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 8;
			break;
		case 103:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 9;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 104, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_199(int iParam0)//Position - 0x1A326
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 136:
			StringCopy(&Var2, "TORSO_P2_21_0" /* GXT: Peyton Blue Blouson */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 32;
			break;
		case 137:
			StringCopy(&Var2, "TORSO_P2_21_1" /* GXT: Overlooked Red Blouson */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 39;
			break;
		case 138:
			StringCopy(&Var2, "TORSO_P2_21_2" /* GXT: Natural Blouson */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 40;
			break;
		case 139:
			StringCopy(&Var2, "TORSO_P2_21_3" /* GXT: Sky Blue Blouson */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 42;
			break;
		case 140:
			StringCopy(&Var2, "TORSO_P2_21_4" /* GXT: Deep Green Blouson */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 45;
			break;
		case 141:
			StringCopy(&Var2, "TORSO_P2_21_5" /* GXT: Champagne Driver Blouson */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 48;
			break;
		case 142:
			StringCopy(&Var2, "TORSO_P2_21_6" /* GXT: Snakeskin Blouson */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 52;
			break;
		case 143:
			StringCopy(&Var2, "TORSO_P2_21_7" /* GXT: Desert Brown Blouson */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 55;
			break;
		case 144:
			StringCopy(&Var2, "TORSO_P2_22_0" /* GXT: Black Striped Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar1 = 390;
			break;
		case 145:
			StringCopy(&Var2, "TORSO_P2_22_1" /* GXT: Black Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 1;
			iVar1 = 390;
			break;
		case 146:
			StringCopy(&Var2, "TORSO_P2_22_2" /* GXT: Chestnut Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 2;
			iVar1 = 560;
			break;
		case 147:
			StringCopy(&Var2, "TORSO_P2_22_3" /* GXT: Red Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 3;
			iVar1 = 390;
			break;
		case 148:
			StringCopy(&Var2, "TORSO_P2_22_4" /* GXT: White Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 4;
			iVar1 = 390;
			break;
		case 149:
			StringCopy(&Var2, "TORSO_P2_22_5" /* GXT: Blue Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 5;
			iVar1 = 390;
			break;
		case 150:
			StringCopy(&Var2, "TORSO_P2_22_6" /* GXT: Lonewolf Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 6;
			iVar1 = 560;
			break;
		case 151:
			StringCopy(&Var2, "TORSO_P2_22_7" /* GXT: Brown Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 7;
			iVar1 = 390;
			break;
		case 152:
			StringCopy(&Var2, "TORSO_P2_22_8" /* GXT: Gray Striped Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 8;
			iVar1 = 390;
			break;
		case 153:
			StringCopy(&Var2, "TORSO_P2_22_9" /* GXT: Gray Banded Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 9;
			iVar1 = 390;
			break;
		case 154:
			StringCopy(&Var2, "TORSO_P2_22_10" /* GXT: Russet Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 10;
			iVar1 = 390;
			break;
		case 155:
			StringCopy(&Var2, "TORSO_P2_22_11" /* GXT: Brown Suede Jacket */, 16);
			iVar3 = 22;
			iVar4 = 11;
			iVar1 = 3950;
			break;
		case 156:
			StringCopy(&Var2, "TORSO_P2_23_0" /* GXT: Brown Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar1 = 150;
			break;
		case 157:
			StringCopy(&Var2, "TORSO_P2_23_1" /* GXT: Woodland Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 1;
			break;
		case 158:
			StringCopy(&Var2, "TORSO_P2_23_2" /* GXT: Taupe Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar1 = 150;
			break;
		case 159:
			StringCopy(&Var2, "TORSO_P2_23_3" /* GXT: Brown Woven Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar1 = 150;
			break;
		case 160:
			StringCopy(&Var2, "TORSO_P2_23_4" /* GXT: Field Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar1 = 160;
			break;
		case 161:
			StringCopy(&Var2, "TORSO_P2_23_5" /* GXT: Forest Shooting Vest */, 16);
			iVar3 = 23;
			iVar4 = 5;
			break;
		case 162:
			StringCopy(&Var2, "TORSO_P2_24_0" /* GXT: Yellow Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 0;
			iVar1 = 19;
			break;
		case 163:
			StringCopy(&Var2, "TORSO_P2_24_1" /* GXT: Blue Birds Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 1;
			iVar1 = 20;
			break;
		case 164:
			StringCopy(&Var2, "TORSO_P2_24_2" /* GXT: Orange Pattern Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 2;
			iVar1 = 19;
			break;
		case 165:
			StringCopy(&Var2, "TORSO_P2_24_3" /* GXT: Blue Stars Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 3;
			iVar1 = 22;
			break;
		case 166:
			StringCopy(&Var2, "TORSO_P2_24_4" /* GXT: Aqua Pattern Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 4;
			iVar1 = 20;
			break;
		case 167:
			StringCopy(&Var2, "TORSO_P2_24_5" /* GXT: Degenatron Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 5;
			iVar1 = 28;
			break;
		case 168:
			StringCopy(&Var2, "TORSO_P2_24_6" /* GXT: Taco Libre Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 6;
			iVar1 = 28;
			break;
		case 169:
			StringCopy(&Var2, "TORSO_P2_24_7" /* GXT: Pussycat Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 7;
			iVar1 = 25;
			break;
		case 170:
			StringCopy(&Var2, "TORSO_P2_24_8" /* GXT: Lemon Pattern Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 8;
			iVar1 = 22;
			break;
		case 171:
			StringCopy(&Var2, "TORSO_P2_24_9" /* GXT: Charcoal Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 9;
			iVar1 = 19;
			break;
		case 172:
			StringCopy(&Var2, "TORSO_P2_24_10" /* GXT: Off-White Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 10;
			iVar1 = 22;
			break;
		case 173:
			StringCopy(&Var2, "TORSO_P2_24_11" /* GXT: Banded Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 11;
			iVar1 = 19;
			break;
		case 174:
			StringCopy(&Var2, "TORSO_P2_24_12" /* GXT: Orange Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 12;
			iVar1 = 20;
			break;
		case 175:
			StringCopy(&Var2, "TORSO_P2_24_13" /* GXT: Camo Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 13;
			iVar1 = 25;
			break;
		case 176:
			StringCopy(&Var2, "TORSO_P2_24_14" /* GXT: Indigo Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 14;
			iVar1 = 20;
			break;
		case 177:
			StringCopy(&Var2, "TORSO_P2_24_15" /* GXT: Liberty Cocks Tank Top */, 16);
			iVar3 = 24;
			iVar4 = 15;
			iVar1 = 28;
			break;
		case 178:
			StringCopy(&Var2, "TORSO_P2_25_0" /* GXT: Blue Two-Tone Shirt */, 16);
			iVar3 = 25;
			iVar4 = 0;
			iVar1 = 35;
			break;
		case 179:
			StringCopy(&Var2, "TORSO_P2_25_1" /* GXT: Circles Shirt */, 16);
			iVar3 = 25;
			iVar4 = 1;
			iVar1 = 40;
			break;
		case 180:
			StringCopy(&Var2, "TORSO_P2_25_2" /* GXT: Gray Two-Tone Shirt */, 16);
			iVar3 = 25;
			iVar4 = 2;
			iVar1 = 45;
			break;
		case 181:
			StringCopy(&Var2, "TORSO_P2_25_3" /* GXT: Mustard Shirt */, 16);
			iVar3 = 25;
			iVar4 = 3;
			iVar1 = 45;
			break;
		case 182:
			StringCopy(&Var2, "TORSO_P2_25_4" /* GXT: Blue Checkered Shirt */, 16);
			iVar3 = 25;
			iVar4 = 4;
			iVar1 = 49;
			break;
		case 183:
			StringCopy(&Var2, "TORSO_P2_25_5" /* GXT: Floral Shirt */, 16);
			iVar3 = 25;
			iVar4 = 5;
			iVar1 = 820;
			break;
		case 184:
			StringCopy(&Var2, "TORSO_P2_25_6" /* GXT: Beige Shirt */, 16);
			iVar3 = 25;
			iVar4 = 6;
			iVar1 = 790;
			break;
		case 185:
			StringCopy(&Var2, "TORSO_P2_25_7" /* GXT: Lavender Shirt */, 16);
			iVar3 = 25;
			iVar4 = 7;
			iVar1 = 820;
			break;
		case 186:
			StringCopy(&Var2, "TORSO_P2_25_8" /* GXT: Black Shirt */, 16);
			iVar3 = 25;
			iVar4 = 8;
			iVar1 = 929;
			break;
		case 187:
			StringCopy(&Var2, "TORSO_P2_25_9" /* GXT: Monogrammed Shirt */, 16);
			iVar3 = 25;
			iVar4 = 9;
			iVar1 = 40;
			break;
		case 188:
			StringCopy(&Var2, "TORSO_P2_25_10" /* GXT: Paisley Shirt */, 16);
			iVar3 = 25;
			iVar4 = 10;
			iVar1 = 850;
			break;
		case 189:
			StringCopy(&Var2, "TORSO_P2_25_11" /* GXT: Camel Shirt */, 16);
			iVar3 = 25;
			iVar4 = 11;
			iVar1 = 790;
			break;
		case 190:
			StringCopy(&Var2, "TORSO_P2_26_0" /* GXT: Beige Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 0;
			break;
		case 191:
			StringCopy(&Var2, "TORSO_P2_26_1" /* GXT: Blue Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 1;
			break;
		case 192:
			StringCopy(&Var2, "TORSO_P2_26_2" /* GXT: Brown Plaid Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 2;
			break;
		case 193:
			StringCopy(&Var2, "TORSO_P2_26_3" /* GXT: Burgundy Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 3;
			break;
		case 194:
			StringCopy(&Var2, "TORSO_P2_26_4" /* GXT: Murky Plaid Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 4;
			break;
		case 195:
			StringCopy(&Var2, "TORSO_P2_26_5" /* GXT: Mint Plaid Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 5;
			break;
		case 196:
			StringCopy(&Var2, "TORSO_P2_26_6" /* GXT: Green Plaid Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 6;
			break;
		case 197:
			StringCopy(&Var2, "TORSO_P2_26_7" /* GXT: Blue-Gray Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 7;
			break;
		case 198:
			StringCopy(&Var2, "TORSO_P2_26_8" /* GXT: Caramel Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 8;
			break;
		case 199:
			StringCopy(&Var2, "TORSO_P2_26_9" /* GXT: Mocha Tight Jacket */, 16);
			iVar3 = 26;
			iVar4 = 9;
			break;
		case 200:
			StringCopy(&Var2, "TORSO_P2_27_0" /* GXT: Gray Jacket */, 16);
			iVar3 = 27;
			iVar4 = 0;
			iVar1 = 2200;
			break;
		case 201:
			StringCopy(&Var2, "TORSO_P2_27_1" /* GXT: Oatmeal Jacket */, 16);
			iVar3 = 27;
			iVar4 = 1;
			iVar1 = 2500;
			break;
		case 202:
			StringCopy(&Var2, "TORSO_P2_27_2" /* GXT: Charcoal Jacket */, 16);
			iVar3 = 27;
			iVar4 = 2;
			iVar1 = 2500;
			break;
		case 203:
			StringCopy(&Var2, "TORSO_P2_27_3" /* GXT: Off-White Jacket */, 16);
			iVar3 = 27;
			iVar4 = 3;
			iVar1 = 2200;
			break;
		case 204:
			StringCopy(&Var2, "TORSO_P2_27_4" /* GXT: Cream Jacket */, 16);
			iVar3 = 27;
			iVar4 = 4;
			iVar1 = 2500;
			break;
		case 205:
			StringCopy(&Var2, "TORSO_P2_27_5" /* GXT: Black Jacket */, 16);
			iVar3 = 27;
			iVar4 = 5;
			iVar1 = 2500;
			break;
		case 206:
			StringCopy(&Var2, "TORSO_P2_27_6" /* GXT: Ash Jacket */, 16);
			iVar3 = 27;
			iVar4 = 6;
			iVar1 = 2200;
			break;
		case 207:
			StringCopy(&Var2, "TORSO_P2_28_0" /* GXT: Dark Gray Sweater */, 16);
			iVar3 = 28;
			iVar4 = 0;
			iVar1 = 1100;
			break;
		case 208:
			StringCopy(&Var2, "TORSO_P2_28_1" /* GXT: Pale Gray Sweater */, 16);
			iVar3 = 28;
			iVar4 = 1;
			iVar1 = 1200;
			break;
		case 209:
			StringCopy(&Var2, "TORSO_P2_28_2" /* GXT: Taupe Sweater */, 16);
			iVar3 = 28;
			iVar4 = 2;
			iVar1 = 1220;
			break;
		case 210:
			StringCopy(&Var2, "TORSO_P2_28_3" /* GXT: Pale Blue Sweater */, 16);
			iVar3 = 28;
			iVar4 = 3;
			iVar1 = 1250;
			break;
		case 211:
			StringCopy(&Var2, "TORSO_P2_28_4" /* GXT: Tangerine Sweater */, 16);
			iVar3 = 28;
			iVar4 = 4;
			iVar1 = 1300;
			break;
		case 212:
			StringCopy(&Var2, "TORSO_P2_28_5" /* GXT: Quarry Brown Sweater */, 16);
			iVar3 = 28;
			iVar4 = 5;
			iVar1 = 1360;
			break;
		case 213:
			StringCopy(&Var2, "TORSO_P2_28_6" /* GXT: Dark Chevrons Sweater */, 16);
			iVar3 = 28;
			iVar4 = 6;
			iVar1 = 35;
			break;
		case 214:
			StringCopy(&Var2, "TORSO_P2_28_7" /* GXT: Zingy Chevrons Sweater */, 16);
			iVar3 = 28;
			iVar4 = 7;
			iVar1 = 38;
			break;
		case 215:
			StringCopy(&Var2, "TORSO_P2_28_8" /* GXT: Rainbow Field Sweater */, 16);
			iVar3 = 28;
			iVar4 = 8;
			iVar1 = 40;
			break;
		case 216:
			StringCopy(&Var2, "TORSO_P2_28_9" /* GXT: Dark Field Sweater */, 16);
			iVar3 = 28;
			iVar4 = 9;
			iVar1 = 42;
			break;
		case 217:
			StringCopy(&Var2, "TORSO_P2_28_10" /* GXT: Animal Strip Sweater */, 16);
			iVar3 = 28;
			iVar4 = 10;
			iVar1 = 50;
			break;
		case 218:
			StringCopy(&Var2, "TORSO_P2_28_11" /* GXT: Bill Brown Sweater */, 16);
			iVar3 = 28;
			iVar4 = 11;
			iVar1 = 45;
			break;
		case 219:
			StringCopy(&Var2, "TORSO_P2_28_12" /* GXT: Mint Argyle Sweater */, 16);
			iVar3 = 28;
			iVar4 = 12;
			iVar1 = 45;
			break;
		case 220:
			StringCopy(&Var2, "TORSO_P2_28_13" /* GXT: Gray Argyle Sweater */, 16);
			iVar3 = 28;
			iVar4 = 13;
			iVar1 = 44;
			break;
		case 221:
			StringCopy(&Var2, "TORSO_P2_28_14" /* GXT: Grape Eighties Sweater */, 16);
			iVar3 = 28;
			iVar4 = 14;
			iVar1 = 46;
			break;
		case 222:
			StringCopy(&Var2, "TORSO_P2_28_15" /* GXT: Geometric Eighties Sweater */, 16);
			iVar3 = 28;
			iVar4 = 15;
			iVar1 = 52;
			break;
		case 223:
			StringCopy(&Var2, "TORSO_P2_29_0" /* GXT: Black Jacket */, 16);
			iVar3 = 29;
			iVar4 = 0;
			iVar1 = 3200;
			break;
		case 224:
			StringCopy(&Var2, "TORSO_P2_29_1" /* GXT: All Black Jacket */, 16);
			iVar3 = 29;
			iVar4 = 1;
			iVar1 = 3200;
			break;
		case 225:
			StringCopy(&Var2, "TORSO_P2_29_2" /* GXT: White Jacket */, 16);
			iVar3 = 29;
			iVar4 = 2;
			iVar1 = 2550;
			break;
		case 226:
			StringCopy(&Var2, "TORSO_P2_29_3" /* GXT: Cream Jacket */, 16);
			iVar3 = 29;
			iVar4 = 3;
			iVar1 = 2750;
			break;
		case 227:
			StringCopy(&Var2, "TORSO_P2_29_4" /* GXT: Oatmeal Jacket */, 16);
			iVar3 = 29;
			iVar4 = 4;
			iVar1 = 2590;
			break;
		case 228:
			StringCopy(&Var2, "TORSO_P2_29_5" /* GXT: Blue-Gray Jacket */, 16);
			iVar3 = 29;
			iVar4 = 5;
			iVar1 = 2750;
			break;
		case 229:
			StringCopy(&Var2, "TORSO_P2_29_6" /* GXT: Beige Jacket */, 16);
			iVar3 = 29;
			iVar4 = 6;
			iVar1 = 2550;
			break;
		case 230:
			StringCopy(&Var2, "TORSO_P2_29_7" /* GXT: Off-White Jacket */, 16);
			iVar3 = 29;
			iVar4 = 7;
			iVar1 = 2590;
			break;
		case 231:
			StringCopy(&Var2, "TORSO_P2_29_8" /* GXT: Gray Suit Jacket */, 16);
			iVar3 = 29;
			iVar4 = 8;
			iVar1 = 2720;
			break;
		case 232:
			StringCopy(&Var2, "TORSO_P2_29_9" /* GXT: Ash Suit Jacket */, 16);
			iVar3 = 29;
			iVar4 = 9;
			iVar1 = 2750;
			break;
		case 233:
			StringCopy(&Var2, "TORSO_P2_30_0" /* GXT: Gray Blazer */, 16);
			iVar3 = 30;
			iVar4 = 0;
			iVar1 = 3250;
			break;
		case 234:
			StringCopy(&Var2, "TORSO_P2_30_1" /* GXT: Beige Blazer */, 16);
			iVar3 = 30;
			iVar4 = 1;
			iVar1 = 2950;
			break;
		case 235:
			StringCopy(&Var2, "TORSO_P2_30_2" /* GXT: Black Blazer */, 16);
			iVar3 = 30;
			iVar4 = 2;
			iVar1 = 3100;
			break;
		case 236:
			StringCopy(&Var2, "TORSO_P2_30_3" /* GXT: Brown Blazer */, 16);
			iVar3 = 30;
			iVar4 = 3;
			iVar1 = 3150;
			break;
		case 237:
			StringCopy(&Var2, "TORSO_P2_30_4" /* GXT: Navy Blazer */, 16);
			iVar3 = 30;
			iVar4 = 4;
			iVar1 = 3240;
			break;
		case 238:
			StringCopy(&Var2, "TORSO_P2_30_5" /* GXT: Navy Pinstripe Blazer */, 16);
			iVar3 = 30;
			iVar4 = 5;
			iVar1 = 3350;
			break;
		case 239:
			StringCopy(&Var2, "TORSO_P2_30_6" /* GXT: Blue-Gray Pinstripe Blazer */, 16);
			iVar3 = 30;
			iVar4 = 6;
			iVar1 = 3400;
			break;
		case 240:
			StringCopy(&Var2, "TORSO_P2_30_7" /* GXT: Brown Pinstripe Blazer */, 16);
			iVar3 = 30;
			iVar4 = 7;
			iVar1 = 3280;
			break;
		case 241:
			StringCopy(&Var2, "TORSO_P2_31_0" /* GXT: Tuxedo Jacket */, 16);
			iVar3 = 31;
			iVar4 = 0;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_200(int iParam0)//Position - 0x1AF2A
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "TORSO_P2_0_0" /* GXT: White T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "TORSO_P2_0_1" /* GXT: Yellow T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 25;
			break;
		case 2:
			StringCopy(&Var2, "TORSO_P2_0_2" /* GXT: Dusche Gold T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "TORSO_P2_0_3" /* GXT: Charcoal T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 15;
			break;
		case 4:
			StringCopy(&Var2, "TORSO_P2_0_4" /* GXT: Cerveza Barracho T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar1 = 25;
			break;
		case 5:
			StringCopy(&Var2, "TORSO_P2_0_5" /* GXT: Liberty City Wrath T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar1 = 25;
			break;
		case 6:
			StringCopy(&Var2, "TORSO_P2_0_6" /* GXT: Pump & Run T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 6;
			iVar1 = 22;
			break;
		case 7:
			StringCopy(&Var2, "TORSO_P2_0_7" /* GXT: Atomic T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 7;
			iVar1 = 22;
			break;
		case 8:
			StringCopy(&Var2, "TORSO_P2_0_8" /* GXT: LS Nuclear Power T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 8;
			iVar1 = 20;
			break;
		case 9:
			StringCopy(&Var2, "TORSO_P2_0_9" /* GXT: Zancudo T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 9;
			iVar1 = 20;
			break;
		case 10:
			StringCopy(&Var2, "TORSO_P2_0_10" /* GXT: West Coast Classics T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 10;
			iVar1 = 24;
			break;
		case 11:
			StringCopy(&Var2, "TORSO_P2_0_11" /* GXT: BC Talk Radio T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 11;
			iVar1 = 26;
			break;
		case 12:
			StringCopy(&Var2, "TORSO_P2_0_12" /* GXT: Animal Ark T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 12;
			iVar1 = 28;
			break;
		case 13:
			StringCopy(&Var2, "TORSO_P2_0_13" /* GXT: Rimmers T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 13;
			iVar1 = 29;
			break;
		case 14:
			StringCopy(&Var2, "TORSO_P2_0_14" /* GXT: Paperclips T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 14;
			iVar1 = 22;
			break;
		case 15:
			StringCopy(&Var2, "TORSO_P2_0_15" /* GXT: Pop's Pills T-Shirt */, 16);
			iVar3 = 0;
			iVar4 = 15;
			iVar1 = 20;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "TORSO_P2_3_0" /* GXT: Los Santos Tank Top */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar1 = 35;
			break;
		case 19:
			StringCopy(&Var2, "TORSO_P2_3_1" /* GXT: Del Perro Pier Tank Top */, 16);
			iVar3 = 3;
			iVar4 = 1;
			iVar1 = 22;
			break;
		case 20:
			StringCopy(&Var2, "TORSO_P2_3_2" /* GXT: San Andreas Tank Top */, 16);
			iVar3 = 3;
			iVar4 = 2;
			iVar1 = 25;
			break;
		case 21:
			StringCopy(&Var2, "TORSO_P2_3_3" /* GXT: Love Fist Tank Top */, 16);
			iVar3 = 3;
			iVar4 = 3;
			iVar1 = 38;
			break;
		case 22:
			StringCopy(&Var2, "TORSO_P2_3_4" /* GXT: Space Monkey Tank Top 1 */, 16);
			iVar3 = 3;
			iVar4 = 4;
			iVar1 = 40;
			break;
		case 23:
			StringCopy(&Var2, "TORSO_P2_3_5" /* GXT: Space Monkey Tank Top 2 */, 16);
			iVar3 = 3;
			iVar4 = 5;
			iVar1 = 40;
			break;
		case 24:
			StringCopy(&Var2, "TORSO_P2_3_6" /* GXT: Space Monkey Tank Top 3 */, 16);
			iVar3 = 3;
			iVar4 = 6;
			iVar1 = 40;
			break;
		case 25:
			StringCopy(&Var2, "TORSO_P2_3_7" /* GXT: Space Monkey Tank Top 4 */, 16);
			iVar3 = 3;
			iVar4 = 7;
			iVar1 = 40;
			break;
		case 26:
			StringCopy(&Var2, "TORSO_P2_3_8" /* GXT: Space Monkey Tank Top 5 */, 16);
			iVar3 = 3;
			iVar4 = 8;
			iVar1 = 40;
			break;
		case 27:
			StringCopy(&Var2, "TORSO_P2_4_0" /* GXT: Rearwall Black Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 28:
			StringCopy(&Var2, "TORSO_P2_4_1" /* GXT: Crevis Green Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 1;
			iVar1 = 500;
			break;
		case 29:
			StringCopy(&Var2, "TORSO_P2_4_2" /* GXT: Rearwall Fluoro Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 2;
			iVar1 = 560;
			break;
		case 30:
			StringCopy(&Var2, "TORSO_P2_4_3" /* GXT: Rearwall Coffee Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 3;
			iVar1 = 600;
			break;
		case 31:
			StringCopy(&Var2, "TORSO_P2_4_4tu" /* GXT: Crevis Yellow Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 4;
			iVar1 = 650;
			break;
		case 32:
			StringCopy(&Var2, "TORSO_P2_4_5tu" /* GXT: Eris Yellow Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 5;
			iVar1 = 500;
			break;
		case 33:
			StringCopy(&Var2, "TORSO_P2_4_6tu" /* GXT: Crevis Red Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 6;
			iVar1 = 560;
			break;
		case 34:
			StringCopy(&Var2, "TORSO_P2_4_7" /* GXT: Rearwall Red Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 7;
			iVar1 = 500;
			break;
		case 35:
			StringCopy(&Var2, "TORSO_P2_4_8" /* GXT: Crevis Blue Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 8;
			iVar1 = 650;
			break;
		case 36:
			StringCopy(&Var2, "TORSO_P2_4_9" /* GXT: Eris Gray Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 9;
			iVar1 = 540;
			break;
		case 37:
			StringCopy(&Var2, "TORSO_P2_4_10" /* GXT: Eris Red Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 10;
			iVar1 = 690;
			break;
		case 38:
			StringCopy(&Var2, "TORSO_P2_4_11" /* GXT: Eris Olive Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 11;
			iVar1 = 560;
			break;
		case 39:
			StringCopy(&Var2, "TORSO_P2_4_12" /* GXT: Eris Aqua Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 12;
			iVar1 = 590;
			break;
		case 40:
			StringCopy(&Var2, "TORSO_P2_4_13" /* GXT: Eris Blue Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 13;
			iVar1 = 690;
			break;
		case 41:
			StringCopy(&Var2, "TORSO_P2_4_14" /* GXT: Crevis Gray Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 14;
			iVar1 = 540;
			break;
		case 42:
			StringCopy(&Var2, "TORSO_P2_4_15" /* GXT: Eris Tan Down Jacket */, 16);
			iVar3 = 4;
			iVar4 = 15;
			iVar1 = 500;
			break;
		case 43:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 44:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 45:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 47:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 48:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 5;
			bVar0 = true;
			break;
		case 49:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 50:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 51:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 52:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 53:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 54:
			StringCopy(&Var2, "TORSO_P2_11_0" /* GXT: Red Floral Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 55:
			StringCopy(&Var2, "TORSO_P2_11_1" /* GXT: Amethyst Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 1;
			break;
		case 56:
			StringCopy(&Var2, "TORSO_P2_11_2" /* GXT: Turquoise Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar1 = 25;
			break;
		case 57:
			StringCopy(&Var2, "TORSO_P2_11_3" /* GXT: Pink Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 27;
			break;
		case 58:
			StringCopy(&Var2, "TORSO_P2_11_4" /* GXT: Mustard Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 22;
			break;
		case 59:
			StringCopy(&Var2, "TORSO_P2_11_5" /* GXT: Orange Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 350;
			break;
		case 60:
			StringCopy(&Var2, "TORSO_P2_11_6" /* GXT: Topaz Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar1 = 27;
			break;
		case 61:
			StringCopy(&Var2, "TORSO_P2_11_7" /* GXT: Mint Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar1 = 370;
			break;
		case 62:
			StringCopy(&Var2, "TORSO_P2_11_8" /* GXT: Navy Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 8;
			iVar1 = 25;
			break;
		case 63:
			StringCopy(&Var2, "TORSO_P2_11_9" /* GXT: Green Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 9;
			iVar1 = 22;
			break;
		case 64:
			StringCopy(&Var2, "TORSO_P2_11_10" /* GXT: Turquoise Two-Tone Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 10;
			iVar1 = 25;
			break;
		case 65:
			StringCopy(&Var2, "TORSO_P2_11_11" /* GXT: Brown Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 11;
			break;
		case 66:
			StringCopy(&Var2, "TORSO_P2_11_12" /* GXT: Pink Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 12;
			iVar1 = 22;
			break;
		case 67:
			StringCopy(&Var2, "TORSO_P2_11_13" /* GXT: Green Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 13;
			iVar1 = 27;
			break;
		case 68:
			StringCopy(&Var2, "TORSO_P2_11_14" /* GXT: Aqua Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 14;
			iVar1 = 25;
			break;
		case 69:
			StringCopy(&Var2, "TORSO_P2_11_15" /* GXT: Brown Striped Polo Shirt */, 16);
			iVar3 = 11;
			iVar4 = 15;
			iVar1 = 27;
			break;
		case 70:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 1;
			break;
		case 71:
			StringCopy(&Var2, "TORSO_P2_13_0" /* GXT: Mint Floral Dress */, 16);
			iVar3 = 13;
			iVar4 = 0;
			break;
		case 72:
			StringCopy(&Var2, "TORSO_P2_13_1" /* GXT: Pink Dress */, 16);
			iVar3 = 13;
			iVar4 = 1;
			iVar1 = 39;
			break;
		case 73:
			StringCopy(&Var2, "TORSO_P2_13_2" /* GXT: White Floral Dress */, 16);
			iVar3 = 13;
			iVar4 = 2;
			iVar1 = 42;
			break;
		case 74:
			StringCopy(&Var2, "TORSO_P2_13_3" /* GXT: Purple Zebra Dress */, 16);
			iVar3 = 13;
			iVar4 = 3;
			iVar1 = 49;
			break;
		case 75:
			StringCopy(&Var2, "TORSO_P2_13_4" /* GXT: Cream Dress */, 16);
			iVar3 = 13;
			iVar4 = 4;
			iVar1 = 35;
			break;
		case 76:
			StringCopy(&Var2, "TORSO_P2_13_5" /* GXT: Space Monkey Dress 1 */, 16);
			iVar3 = 13;
			iVar4 = 5;
			iVar1 = 50;
			break;
		case 77:
			StringCopy(&Var2, "TORSO_P2_13_6" /* GXT: Space Monkey Dress 2 */, 16);
			iVar3 = 13;
			iVar4 = 6;
			iVar1 = 50;
			break;
		case 78:
			StringCopy(&Var2, "TORSO_P2_13_7" /* GXT: Space Monkey Dress 3 */, 16);
			iVar3 = 13;
			iVar4 = 7;
			iVar1 = 50;
			break;
		case 79:
			StringCopy(&Var2, "TORSO_P2_14_0" /* GXT: Black Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 0;
			break;
		case 80:
			StringCopy(&Var2, "TORSO_P2_14_1" /* GXT: Silver Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 88;
			break;
		case 81:
			StringCopy(&Var2, "TORSO_P2_14_2" /* GXT: Ammu-Nation Camo Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 2;
			iVar1 = 60;
			break;
		case 82:
			StringCopy(&Var2, "TORSO_P2_14_3" /* GXT: LSGC Urban Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 3;
			iVar1 = 80;
			break;
		case 83:
			StringCopy(&Var2, "TORSO_P2_14_4" /* GXT: LSGC Gray Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 4;
			iVar1 = 70;
			break;
		case 84:
			StringCopy(&Var2, "TORSO_P2_14_5" /* GXT: Ammu-Nation A Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 5;
			iVar1 = 80;
			break;
		case 85:
			StringCopy(&Var2, "TORSO_P2_14_6" /* GXT: Blauser Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 6;
			iVar1 = 70;
			break;
		case 86:
			StringCopy(&Var2, "TORSO_P2_14_7" /* GXT: LSGC Forest Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 7;
			iVar1 = 90;
			break;
		case 87:
			StringCopy(&Var2, "TORSO_P2_14_8" /* GXT: Penetrators Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 8;
			iVar1 = 95;
			break;
		case 88:
			StringCopy(&Var2, "TORSO_P2_14_9" /* GXT: Crevis Fluorescent Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 9;
			iVar1 = 105;
			break;
		case 89:
			StringCopy(&Var2, "TORSO_P2_14_10" /* GXT: Blue Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 10;
			iVar1 = 95;
			break;
		case 90:
			StringCopy(&Var2, "TORSO_P2_14_11" /* GXT: Green Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 11;
			iVar1 = 110;
			break;
		case 91:
			StringCopy(&Var2, "TORSO_P2_14_12" /* GXT: LS Jardineros Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 12;
			iVar1 = 98;
			break;
		case 92:
			StringCopy(&Var2, "TORSO_P2_14_13" /* GXT: Ash 18 Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 13;
			iVar1 = 88;
			break;
		case 93:
			StringCopy(&Var2, "TORSO_P2_14_14" /* GXT: Red Mist XI Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 14;
			iVar1 = 98;
			break;
		case 94:
			StringCopy(&Var2, "TORSO_P2_14_15" /* GXT: Eris Charcoal Hoodie */, 16);
			iVar3 = 14;
			iVar4 = 15;
			iVar1 = 110;
			break;
		case 95:
			StringCopy(&Var2, "TORSO_P2_15_0" /* GXT: Tennis Shirt */, 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 96:
			StringCopy(&Var2, "TORSO_P2_16_0" /* GXT: Bare Chest */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 97:
			StringCopy(&Var2, "TORSO_P2_17_0" /* GXT: Pink Jacket */, 16);
			iVar3 = 17;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 98:
			StringCopy(&Var2, "TORSO_P2_18_0" /* GXT: Blue Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 0;
			break;
		case 99:
			StringCopy(&Var2, "TORSO_P2_18_1" /* GXT: Black Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 520;
			break;
		case 100:
			StringCopy(&Var2, "TORSO_P2_18_2" /* GXT: Gray Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 490;
			break;
		case 101:
			StringCopy(&Var2, "TORSO_P2_18_3" /* GXT: Brown Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 450;
			break;
		case 102:
			StringCopy(&Var2, "TORSO_P2_18_4" /* GXT: Faded Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 420;
			break;
		case 103:
			StringCopy(&Var2, "TORSO_P2_18_5" /* GXT: Ash Denim Jacket */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 420;
			break;
		case 104:
			StringCopy(&Var2, "TORSO_P2_19_0" /* GXT: Denim Shirt */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 85;
			break;
		case 105:
			StringCopy(&Var2, "TORSO_P2_19_1" /* GXT: Faded Denim Shirt */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 85;
			break;
		case 106:
			StringCopy(&Var2, "TORSO_P2_19_2" /* GXT: Black Shirt */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 75;
			break;
		case 107:
			StringCopy(&Var2, "TORSO_P2_19_3" /* GXT: Gray Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 68;
			break;
		case 108:
			StringCopy(&Var2, "TORSO_P2_19_4" /* GXT: Brown Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 68;
			break;
		case 109:
			StringCopy(&Var2, "TORSO_P2_19_5" /* GXT: Red Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 78;
			break;
		case 110:
			StringCopy(&Var2, "TORSO_P2_19_6" /* GXT: Brown Shirt */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 85;
			break;
		case 111:
			StringCopy(&Var2, "TORSO_P2_19_7" /* GXT: Khaki Shirt */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 68;
			break;
		case 112:
			StringCopy(&Var2, "TORSO_P2_19_8" /* GXT: Red Plaid Shirt */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 75;
			break;
		case 113:
			StringCopy(&Var2, "TORSO_P2_19_9" /* GXT: Brown Plaid Shirt */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 75;
			break;
		case 114:
			StringCopy(&Var2, "TORSO_P2_19_10" /* GXT: Green Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 78;
			break;
		case 115:
			StringCopy(&Var2, "TORSO_P2_19_11" /* GXT: Maroon Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 75;
			break;
		case 116:
			StringCopy(&Var2, "TORSO_P2_19_12" /* GXT: Gray Shirt */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 75;
			break;
		case 117:
			StringCopy(&Var2, "TORSO_P2_19_13" /* GXT: Blue Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 75;
			break;
		case 118:
			StringCopy(&Var2, "TORSO_P2_19_14" /* GXT: Blue Two-Tone Shirt */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 78;
			break;
		case 119:
			StringCopy(&Var2, "TORSO_P2_19_15" /* GXT: Navy Shirt */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 78;
			break;
		case 120:
			StringCopy(&Var2, "TORSO_P2_20_0" /* GXT: Burgundy Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 40;
			break;
		case 121:
			StringCopy(&Var2, "TORSO_P2_20_1" /* GXT: Purple Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 32;
			break;
		case 122:
			StringCopy(&Var2, "TORSO_P2_20_2" /* GXT: Crimson Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 32;
			break;
		case 123:
			StringCopy(&Var2, "TORSO_P2_20_3" /* GXT: Tan Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 32;
			break;
		case 124:
			StringCopy(&Var2, "TORSO_P2_20_4" /* GXT: Flames Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 4;
			break;
		case 125:
			StringCopy(&Var2, "TORSO_P2_20_5" /* GXT: Skull Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 38;
			break;
		case 126:
			StringCopy(&Var2, "TORSO_P2_20_6" /* GXT: Pale Blue Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 35;
			break;
		case 127:
			StringCopy(&Var2, "TORSO_P2_20_7" /* GXT: Scarab Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 38;
			break;
		case 128:
			StringCopy(&Var2, "TORSO_P2_20_8" /* GXT: Cream Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 29;
			break;
		case 129:
			StringCopy(&Var2, "TORSO_P2_20_9" /* GXT: Cube Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 9;
			iVar1 = 32;
			break;
		case 130:
			StringCopy(&Var2, "TORSO_P2_20_10" /* GXT: Beige Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 10;
			iVar1 = 29;
			break;
		case 131:
			StringCopy(&Var2, "TORSO_P2_20_11" /* GXT: Blue Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 11;
			iVar1 = 35;
			break;
		case 132:
			StringCopy(&Var2, "TORSO_P2_20_12" /* GXT: Yellow Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 12;
			iVar1 = 32;
			break;
		case 133:
			StringCopy(&Var2, "TORSO_P2_20_13" /* GXT: Pink Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 13;
			iVar1 = 35;
			break;
		case 134:
			StringCopy(&Var2, "TORSO_P2_20_14" /* GXT: White Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 14;
			iVar1 = 32;
			break;
		case 135:
			StringCopy(&Var2, "TORSO_P2_20_15" /* GXT: Black Bowling Shirt */, 16);
			iVar3 = 20;
			iVar4 = 15;
			iVar1 = 40;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_201(int iParam0)//Position - 0x1BE38
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 2;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "HAIR_P2_0_0" /* GXT: Trailer Cut */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "HAIR_P2_0_1" /* GXT: Frozen */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "HAIR_P2_1_0" /* GXT: Clean Razor */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "HAIR_P2_2_0" /* GXT: Randal */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "HAIR_P2_3_0" /* GXT: Side Shed */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "HAIR_P2_4_0" /* GXT: Grown Out */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "HAIR_P2_5_0" /* GXT: Mullet */, 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "HAIR_P2_6_0" /* GXT: Shaved 2 */, 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "HAIR_P2_7_0" /* GXT: Swept Back */, 16);
			iVar3 = 7;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 9, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_202(int iParam0)//Position - 0x1BF65
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 0;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 6;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 7, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_203(int iParam0)//Position - 0x1C154
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 14;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 6;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 7;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 8;
			break;
		case 158:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 2;
			break;
		case 159:
			StringCopy(&Var2, "PROPS_P1_EA1_0" /* GXT: De Koch Diamond Studs */, 16);
			iVar3 = 1;
			iVar4 = 0;
			iVar1 = 4590;
			iVar5 = 2;
			break;
		case 160:
			StringCopy(&Var2, "PROPS_P1_EA1_1" /* GXT: De Koch Obsidian Studs */, 16);
			iVar3 = 1;
			iVar4 = 1;
			iVar1 = 4100;
			iVar5 = 2;
			break;
		case 161:
			StringCopy(&Var2, "PROPS_P1_EA1_2" /* GXT: De Koch Sapphire Studs */, 16);
			iVar3 = 1;
			iVar4 = 2;
			iVar1 = 3850;
			iVar5 = 2;
			break;
		case 162:
			StringCopy(&Var2, "PROPS_P1_EA1_3" /* GXT: De Koch Opal Studs */, 16);
			iVar3 = 1;
			iVar4 = 3;
			iVar1 = 1850;
			iVar5 = 2;
			break;
		case 163:
			StringCopy(&Var2, "PROPS_P1_EA1_4" /* GXT: De Koch Platinum Studs */, 16);
			iVar3 = 1;
			iVar4 = 4;
			iVar1 = 5250;
			iVar5 = 2;
			break;
		case 164:
			StringCopy(&Var2, "PROPS_P1_EA1_5" /* GXT: De Koch Garnet Studs */, 16);
			iVar3 = 1;
			iVar4 = 5;
			iVar1 = 2700;
			iVar5 = 2;
			break;
		case 165:
			StringCopy(&Var2, "PROPS_P1_EA1_6" /* GXT: De Koch Jasper Studs */, 16);
			iVar3 = 1;
			iVar4 = 6;
			iVar1 = 3100;
			iVar5 = 2;
			break;
		case 166:
			StringCopy(&Var2, "PROPS_P1_EA1_7" /* GXT: De Koch Aquamarine Studs */, 16);
			iVar3 = 1;
			iVar4 = 7;
			iVar1 = 5050;
			iVar5 = 2;
			break;
		case 167:
			StringCopy(&Var2, "PROPS_P1_EA2_0" /* GXT: Vankhov Diamond Studs */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar1 = 2500;
			iVar5 = 2;
			break;
		case 168:
			StringCopy(&Var2, "PROPS_P1_EA2_1" /* GXT: Vankhov Emerald Studs */, 16);
			iVar3 = 2;
			iVar4 = 1;
			iVar1 = 1950;
			iVar5 = 2;
			break;
		case 169:
			StringCopy(&Var2, "PROPS_P1_EA2_2" /* GXT: Vankhov Quartz Studs */, 16);
			iVar3 = 2;
			iVar4 = 2;
			iVar1 = 3900;
			iVar5 = 2;
			break;
		case 170:
			StringCopy(&Var2, "PROPS_P1_EA2_3" /* GXT: Vankhov Obsidian Studs */, 16);
			iVar3 = 2;
			iVar4 = 3;
			iVar1 = 3550;
			iVar5 = 2;
			break;
		case 171:
			StringCopy(&Var2, "PROPS_P1_EA2_4" /* GXT: Vankhov Platinum Studs */, 16);
			iVar3 = 2;
			iVar4 = 4;
			iVar1 = 4500;
			iVar5 = 2;
			break;
		case 172:
			StringCopy(&Var2, "PROPS_P1_EA2_5" /* GXT: Vankhov Agate Studs */, 16);
			iVar3 = 2;
			iVar4 = 5;
			iVar1 = 2700;
			iVar5 = 2;
			break;
		case 173:
			StringCopy(&Var2, "PROPS_P1_EA2_6" /* GXT: Vankhov Jade Studs */, 16);
			iVar3 = 2;
			iVar4 = 6;
			iVar1 = 3100;
			iVar5 = 2;
			break;
		case 174:
			StringCopy(&Var2, "PROPS_P1_EA2_7" /* GXT: Vankhov Onyx Studs */, 16);
			iVar3 = 2;
			iVar4 = 7;
			iVar1 = 2950;
			iVar5 = 2;
			break;
		case 82:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 10;
			break;
		case 83:
			StringCopy(&Var2, "PROPS_P1_E1_0" /* GXT: Orange Tint Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 0;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 84:
			StringCopy(&Var2, "PROPS_P1_E1_1" /* GXT: Slate Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 1;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 85:
			StringCopy(&Var2, "PROPS_P1_E1_2" /* GXT: Gray Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 2;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 86:
			StringCopy(&Var2, "PROPS_P1_E1_3" /* GXT: Brown Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 3;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 87:
			StringCopy(&Var2, "PROPS_P1_E1_4" /* GXT: Burgundy Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 4;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 88:
			StringCopy(&Var2, "PROPS_P1_E1_5" /* GXT: Chocolate Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 5;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 89:
			StringCopy(&Var2, "PROPS_P1_E1_6" /* GXT: Black Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 6;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 90:
			StringCopy(&Var2, "PROPS_P1_E1_7" /* GXT: Purple Tint Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 7;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 91:
			StringCopy(&Var2, "PROPS_P1_E1_8" /* GXT: Blue-Gray Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 8;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 92:
			StringCopy(&Var2, "PROPS_P1_E1_9" /* GXT: White Contour Shades */, 16);
			iVar3 = 1;
			iVar4 = 9;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 93:
			StringCopy(&Var2, "PROPS_P1_E2" /* GXT: Swimming Goggles */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 94:
			StringCopy(&Var2, "PROPS_P1_E3" /* GXT: Racer Shades */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar1 = 110;
			iVar5 = 10;
			break;
		case 95:
			StringCopy(&Var2, "PROPS_P1_E4_0" /* GXT: Stank Slate Shades */, 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar1 = 120;
			iVar5 = 10;
			break;
		case 96:
			StringCopy(&Var2, "PROPS_P1_E4_1" /* GXT: Broker Ash Shades */, 16);
			iVar3 = 4;
			iVar4 = 1;
			iVar1 = 128;
			iVar5 = 10;
			break;
		case 97:
			StringCopy(&Var2, "PROPS_P1_E4_2" /* GXT: Broker Chocolate Shades */, 16);
			iVar3 = 4;
			iVar4 = 2;
			iVar1 = 130;
			iVar5 = 10;
			break;
		case 98:
			StringCopy(&Var2, "PROPS_P1_E4_3" /* GXT: Stank Black Shades */, 16);
			iVar3 = 4;
			iVar4 = 3;
			iVar1 = 140;
			iVar5 = 10;
			break;
		case 99:
			StringCopy(&Var2, "PROPS_P1_E4_4" /* GXT: Broker Black Shades */, 16);
			iVar3 = 4;
			iVar4 = 4;
			iVar1 = 145;
			iVar5 = 10;
			break;
		case 100:
			StringCopy(&Var2, "PROPS_P1_E4_5" /* GXT: Stank Green Tint Shades */, 16);
			iVar3 = 4;
			iVar4 = 5;
			iVar1 = 135;
			iVar5 = 10;
			break;
		case 101:
			StringCopy(&Var2, "PROPS_P1_E4_6" /* GXT: Stank Blue Tint Shades */, 16);
			iVar3 = 4;
			iVar4 = 6;
			iVar1 = 138;
			iVar5 = 10;
			break;
		case 102:
			StringCopy(&Var2, "PROPS_P1_E5_0" /* GXT: Black Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 0;
			iVar1 = 110;
			iVar5 = 10;
			break;
		case 103:
			StringCopy(&Var2, "PROPS_P1_E5_1" /* GXT: White Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 1;
			iVar1 = 112;
			iVar5 = 10;
			break;
		case 104:
			StringCopy(&Var2, "PROPS_P1_E5_2" /* GXT: Brown Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 2;
			iVar1 = 115;
			iVar5 = 10;
			break;
		case 105:
			StringCopy(&Var2, "PROPS_P1_E5_3" /* GXT: Gray Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 3;
			iVar1 = 118;
			iVar5 = 10;
			break;
		case 106:
			StringCopy(&Var2, "PROPS_P1_E5_4" /* GXT: Two-Tone Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 4;
			iVar1 = 120;
			iVar5 = 10;
			break;
		case 107:
			StringCopy(&Var2, "PROPS_P1_E5_5" /* GXT: Bone Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 5;
			iVar1 = 125;
			iVar5 = 10;
			break;
		case 108:
			StringCopy(&Var2, "PROPS_P1_E5_6" /* GXT: Red Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 6;
			iVar1 = 128;
			iVar5 = 10;
			break;
		case 109:
			StringCopy(&Var2, "PROPS_P1_E5_7" /* GXT: Silver Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 7;
			iVar1 = 138;
			iVar5 = 10;
			break;
		case 110:
			StringCopy(&Var2, "PROPS_P1_E5_8" /* GXT: Charcoal Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 8;
			iVar1 = 140;
			iVar5 = 10;
			break;
		case 111:
			StringCopy(&Var2, "PROPS_P1_E5_9" /* GXT: Gold Aviator Shades */, 16);
			iVar3 = 5;
			iVar4 = 9;
			iVar1 = 155;
			iVar5 = 10;
			break;
		case 112:
			StringCopy(&Var2, "PROPS_P1_E6_0" /* GXT: Tinted Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 113:
			StringCopy(&Var2, "PROPS_P1_E6_1" /* GXT: Silver Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 114:
			StringCopy(&Var2, "PROPS_P1_E6_2" /* GXT: Sepia Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 115:
			StringCopy(&Var2, "PROPS_P1_E6_3" /* GXT: Blue Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 116:
			StringCopy(&Var2, "PROPS_P1_E6_4" /* GXT: Yellow Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 60;
			iVar5 = 10;
			break;
		case 117:
			StringCopy(&Var2, "PROPS_P1_E6_5" /* GXT: Gray Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 62;
			iVar5 = 10;
			break;
		case 118:
			StringCopy(&Var2, "PROPS_P1_E6_6" /* GXT: Black Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 6;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 119:
			StringCopy(&Var2, "PROPS_P1_E6_7" /* GXT: Slate Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 7;
			iVar1 = 68;
			iVar5 = 10;
			break;
		case 120:
			StringCopy(&Var2, "PROPS_P1_E6_8" /* GXT: Smoke Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 8;
			iVar1 = 68;
			iVar5 = 10;
			break;
		case 121:
			StringCopy(&Var2, "PROPS_P1_E6_9" /* GXT: Gold Aviator Glasses */, 16);
			iVar3 = 6;
			iVar4 = 9;
			iVar1 = 72;
			iVar5 = 10;
			break;
		case 122:
			StringCopy(&Var2, "PROPS_P1_E7_0" /* GXT: Suburban Black Shades */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 145;
			iVar5 = 10;
			break;
		case 123:
			StringCopy(&Var2, "PROPS_P1_E7_1" /* GXT: Suburban Teal Shades */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 149;
			iVar5 = 10;
			break;
		case 124:
			StringCopy(&Var2, "PROPS_P1_E7_2" /* GXT: Suburban Tortoiseshell Shades */, 16);
			iVar3 = 7;
			iVar4 = 2;
			iVar1 = 139;
			iVar5 = 10;
			break;
		case 125:
			StringCopy(&Var2, "PROPS_P1_E7_3" /* GXT: Suburban Orange Shades */, 16);
			iVar3 = 7;
			iVar4 = 3;
			iVar1 = 149;
			iVar5 = 10;
			break;
		case 126:
			StringCopy(&Var2, "PROPS_P1_E7_4" /* GXT: Fuque White Shades */, 16);
			iVar3 = 7;
			iVar4 = 4;
			iVar1 = 135;
			iVar5 = 10;
			break;
		case 127:
			StringCopy(&Var2, "PROPS_P1_E7_5" /* GXT: Fuque Camo Shades */, 16);
			iVar3 = 7;
			iVar4 = 5;
			iVar1 = 138;
			iVar5 = 10;
			break;
		case 128:
			StringCopy(&Var2, "PROPS_P1_E7_6" /* GXT: Fuque Yellow Shades */, 16);
			iVar3 = 7;
			iVar4 = 6;
			iVar1 = 140;
			iVar5 = 10;
			break;
		case 129:
			StringCopy(&Var2, "PROPS_P1_E7_7" /* GXT: Fuque Burgundy Shades */, 16);
			iVar3 = 7;
			iVar4 = 7;
			iVar1 = 145;
			iVar5 = 10;
			break;
		case 130:
			StringCopy(&Var2, "PROPS_P1_E7_8" /* GXT: Fuque Funky Shades */, 16);
			iVar3 = 7;
			iVar4 = 8;
			iVar1 = 159;
			iVar5 = 10;
			break;
		case 131:
			StringCopy(&Var2, "PROPS_P1_E7_9" /* GXT: Fuque Squared Shades */, 16);
			iVar3 = 7;
			iVar4 = 9;
			iVar1 = 155;
			iVar5 = 10;
			break;
		case 132:
			StringCopy(&Var2, "PROPS_P1_E8_0" /* GXT: Gold T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 198;
			iVar5 = 10;
			break;
		case 133:
			StringCopy(&Var2, "PROPS_P1_E8_1" /* GXT: Silver T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 210;
			iVar5 = 10;
			break;
		case 134:
			StringCopy(&Var2, "PROPS_P1_E8_2" /* GXT: Two-Tone T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 185;
			iVar5 = 10;
			break;
		case 135:
			StringCopy(&Var2, "PROPS_P1_E8_3" /* GXT: Green T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 220;
			iVar5 = 10;
			break;
		case 136:
			StringCopy(&Var2, "PROPS_P1_E8_4" /* GXT: Brown T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 190;
			iVar5 = 10;
			break;
		case 137:
			StringCopy(&Var2, "PROPS_P1_E8_5" /* GXT: Peach T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 200;
			iVar5 = 10;
			break;
		case 138:
			StringCopy(&Var2, "PROPS_P1_E8_6" /* GXT: Gray T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 208;
			iVar5 = 10;
			break;
		case 139:
			StringCopy(&Var2, "PROPS_P1_E8_7" /* GXT: Orange T-Bone Shades */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 210;
			iVar5 = 10;
			break;
		case 140:
			StringCopy(&Var2, "PROPS_P1_E9_0" /* GXT: Yellow Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 0;
			iVar1 = 165;
			iVar5 = 10;
			break;
		case 141:
			StringCopy(&Var2, "PROPS_P1_E9_1" /* GXT: Gray Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar1 = 185;
			iVar5 = 10;
			break;
		case 142:
			StringCopy(&Var2, "PROPS_P1_E9_2" /* GXT: Hornet Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 2;
			iVar1 = 190;
			iVar5 = 10;
			break;
		case 143:
			StringCopy(&Var2, "PROPS_P1_E9_3" /* GXT: Copper Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 3;
			iVar1 = 178;
			iVar5 = 10;
			break;
		case 144:
			StringCopy(&Var2, "PROPS_P1_E9_4" /* GXT: Blue Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 4;
			iVar1 = 180;
			iVar5 = 10;
			break;
		case 145:
			StringCopy(&Var2, "PROPS_P1_E9_5" /* GXT: Sepia Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 5;
			iVar1 = 168;
			iVar5 = 10;
			break;
		case 146:
			StringCopy(&Var2, "PROPS_P1_E9_6" /* GXT: White Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 6;
			iVar1 = 170;
			iVar5 = 10;
			break;
		case 147:
			StringCopy(&Var2, "PROPS_P1_E9_7" /* GXT: Orange Tint Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 7;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 148:
			StringCopy(&Var2, "PROPS_P1_E9_8" /* GXT: Blue Tint Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 8;
			iVar1 = 170;
			iVar5 = 10;
			break;
		case 149:
			StringCopy(&Var2, "PROPS_P1_E9_9" /* GXT: Smoke Mono Shades */, 16);
			iVar3 = 9;
			iVar4 = 9;
			iVar1 = 178;
			iVar5 = 10;
			break;
		case 150:
			StringCopy(&Var2, "PROPS_P1_E10_0" /* GXT: Gold Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 0;
			iVar1 = 140;
			iVar5 = 10;
			break;
		case 151:
			StringCopy(&Var2, "PROPS_P1_E10_1" /* GXT: Gray Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 1;
			iVar1 = 145;
			iVar5 = 10;
			break;
		case 152:
			StringCopy(&Var2, "PROPS_P1_E10_2" /* GXT: Silver Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 2;
			iVar1 = 150;
			iVar5 = 10;
			break;
		case 153:
			StringCopy(&Var2, "PROPS_P1_E10_3" /* GXT: Two-Tone Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 3;
			iVar1 = 165;
			iVar5 = 10;
			break;
		case 154:
			StringCopy(&Var2, "PROPS_P1_E10_4" /* GXT: Copper Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 4;
			iVar1 = 168;
			iVar5 = 10;
			break;
		case 155:
			StringCopy(&Var2, "PROPS_P1_E10_5" /* GXT: Black Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 5;
			iVar1 = 178;
			iVar5 = 10;
			break;
		case 156:
			StringCopy(&Var2, "PROPS_P1_E10_6" /* GXT: White Triptych Shades */, 16);
			iVar3 = 10;
			iVar4 = 6;
			iVar1 = 160;
			iVar5 = 10;
			break;
		case 157:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar1 = 100;
			iVar5 = 10;
			break;
		case 10:
			StringCopy(&Var2, "PROPS_P1_H0_0" /* GXT: Hockey Mask */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 320;
			iVar5 = 0;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 13:
			StringCopy(&Var2, "PROPS_P1_H3_0" /* GXT: Gray Flat Cap */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 6;
			iVar5 = 0;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 7;
			iVar5 = 0;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 8;
			iVar5 = 0;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 26:
			StringCopy(&Var2, "PROPS_P1_H8_0" /* GXT: Green Monster Mask */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 27:
			StringCopy(&Var2, "PROPS_P1_H8_1" /* GXT: Red Monster Mask */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 28:
			StringCopy(&Var2, "PROPS_P1_H9_0" /* GXT: Pig Mask */, 16);
			iVar3 = 9;
			iVar4 = 0;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 29:
			StringCopy(&Var2, "PROPS_P1_H9_1" /* GXT: Dark Pig Mask */, 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 30:
			StringCopy(&Var2, "PROPS_P1_H10_0" /* GXT: Silver Skull Mask */, 16);
			iVar3 = 10;
			iVar4 = 0;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 31:
			StringCopy(&Var2, "PROPS_P1_H10_1" /* GXT: Bone Skull Mask */, 16);
			iVar3 = 10;
			iVar4 = 1;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 32:
			StringCopy(&Var2, "PROPS_P1_H11_0" /* GXT: Space Monkey Mask */, 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar1 = 450;
			iVar5 = 0;
			break;
		case 33:
			StringCopy(&Var2, "PROPS_P1_H12_0" /* GXT: White Hockey Mask */, 16);
			iVar3 = 12;
			iVar4 = 0;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 34:
			StringCopy(&Var2, "PROPS_P1_H12_1" /* GXT: Red Hockey Mask */, 16);
			iVar3 = 12;
			iVar4 = 1;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 35:
			StringCopy(&Var2, "PROPS_P1_H13_0" /* GXT: Ape Mask */, 16);
			iVar3 = 13;
			iVar4 = 0;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 36:
			StringCopy(&Var2, "PROPS_P1_H13_1" /* GXT: Dark Ape Mask */, 16);
			iVar3 = 13;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 37:
			StringCopy(&Var2, "PROPS_P1_H14_0" /* GXT: Carnival Orange Mask */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 38:
			StringCopy(&Var2, "PROPS_P1_H14_1" /* GXT: Carnival White Mask */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 39:
			StringCopy(&Var2, "PROPS_P1_H14_2" /* GXT: Carnival Blue Mask */, 16);
			iVar3 = 14;
			iVar4 = 2;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 40:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 41:
			StringCopy(&Var2, "PROPS_P1_H19_0" /* GXT: Toe Shoes Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 42:
			StringCopy(&Var2, "PROPS_P1_H19_1" /* GXT: Yeti Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 43:
			StringCopy(&Var2, "PROPS_P1_H19_2" /* GXT: OG Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 44:
			StringCopy(&Var2, "PROPS_P1_H19_3" /* GXT: Magnetics Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 45:
			StringCopy(&Var2, "PROPS_P1_H19_4" /* GXT: LS Red Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 46:
			StringCopy(&Var2, "PROPS_P1_H19_5" /* GXT: Los Santos Charcoal Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 47:
			StringCopy(&Var2, "PROPS_P1_H19_6" /* GXT: Stank Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 6;
			iVar5 = 0;
			break;
		case 48:
			StringCopy(&Var2, "PROPS_P1_H19_7" /* GXT: Los Santos Gray Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 7;
			iVar5 = 0;
			break;
		case 49:
			StringCopy(&Var2, "PROPS_P1_H19_8" /* GXT: Perseus Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 8;
			iVar5 = 0;
			break;
		case 50:
			StringCopy(&Var2, "PROPS_P1_H19_9" /* GXT: Feud Slate Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 9;
			iVar5 = 0;
			break;
		case 51:
			StringCopy(&Var2, "PROPS_P1_H19_10" /* GXT: Feud Black Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 10;
			iVar5 = 0;
			break;
		case 52:
			StringCopy(&Var2, "PROPS_P1_H19_11" /* GXT: LS Black Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 11;
			iVar5 = 0;
			break;
		case 53:
			StringCopy(&Var2, "PROPS_P1_H19_12" /* GXT: LS Corkers Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 12;
			iVar5 = 0;
			break;
		case 54:
			StringCopy(&Var2, "PROPS_P1_H19_13" /* GXT: LS White Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 13;
			iVar5 = 0;
			break;
		case 55:
			StringCopy(&Var2, "PROPS_P1_H19_14" /* GXT: Feud Green Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 14;
			iVar5 = 0;
			break;
		case 56:
			StringCopy(&Var2, "PROPS_P1_H19_15" /* GXT: LS Olive Fitted Cap */, 16);
			iVar3 = 16;
			iVar4 = 15;
			iVar5 = 0;
			break;
		case 57:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 58:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 59:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 60:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 61:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 62:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 63:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 64:
			StringCopy(&Var2, "PROPS_P1_H19_0" /* GXT: Toe Shoes Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 30;
			iVar5 = 0;
			break;
		case 65:
			StringCopy(&Var2, "PROPS_P1_H19_1" /* GXT: Yeti Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 30;
			iVar5 = 0;
			break;
		case 66:
			StringCopy(&Var2, "PROPS_P1_H19_2" /* GXT: OG Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 32;
			iVar5 = 0;
			break;
		case 67:
			StringCopy(&Var2, "PROPS_P1_H19_3" /* GXT: Magnetics Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 35;
			iVar5 = 0;
			break;
		case 68:
			StringCopy(&Var2, "PROPS_P1_H19_4" /* GXT: LS Red Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 38;
			iVar5 = 0;
			break;
		case 69:
			StringCopy(&Var2, "PROPS_P1_H19_5" /* GXT: Los Santos Charcoal Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 42;
			iVar5 = 0;
			break;
		case 70:
			StringCopy(&Var2, "PROPS_P1_H19_6" /* GXT: Stank Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 42;
			iVar5 = 0;
			break;
		case 71:
			StringCopy(&Var2, "PROPS_P1_H19_7" /* GXT: Los Santos Gray Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 40;
			iVar5 = 0;
			break;
		case 72:
			StringCopy(&Var2, "PROPS_P1_H19_8" /* GXT: Perseus Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 45;
			iVar5 = 0;
			break;
		case 73:
			StringCopy(&Var2, "PROPS_P1_H19_9" /* GXT: Feud Slate Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 48;
			iVar5 = 0;
			break;
		case 74:
			StringCopy(&Var2, "PROPS_P1_H19_10" /* GXT: Feud Black Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 75:
			StringCopy(&Var2, "PROPS_P1_H19_11" /* GXT: LS Black Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 76:
			StringCopy(&Var2, "PROPS_P1_H19_12" /* GXT: LS Corkers Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 28;
			iVar5 = 0;
			break;
		case 77:
			StringCopy(&Var2, "PROPS_P1_H19_13" /* GXT: LS White Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 28;
			iVar5 = 0;
			break;
		case 78:
			StringCopy(&Var2, "PROPS_P1_H19_14" /* GXT: Feud Green Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 30;
			iVar5 = 0;
			break;
		case 79:
			StringCopy(&Var2, "PROPS_P1_H19_15" /* GXT: LS Olive Fitted Cap */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 35;
			iVar5 = 0;
			break;
		case 80:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 81:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar5 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 175, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_204(int iParam0)//Position - 0x1D645
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 13;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 9, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_205(int iParam0)//Position - 0x1D796
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 12;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "OUTFIT_P1_0" /* GXT: Blue Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "OUTFIT_P1_2" /* GXT: White Tuxedo */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "OUTFIT_P1_4" /* GXT: Golf */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "OUTFIT_P1_7" /* GXT: Scuba Land */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "OUTFIT_P1_10" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "OUTFIT_P1_11" /* GXT: Triathlon */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "OUTFIT_P1_12" /* GXT: Fireman */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "OUTFIT_P1_13" /* GXT: Exterminator */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 9:
			StringCopy(&Var2, "OUTFIT_P1_15" /* GXT: Black Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "OUTFIT_P1_16" /* GXT: Skydiving */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 11:
			StringCopy(&Var2, "OUTFIT_P1_17" /* GXT: Tuxedo */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 10000;
			break;
		case 12:
			StringCopy(&Var2, "OUTFIT_P1_18" /* GXT: Blue Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "OUTFIT_P1_19" /* GXT: Navy Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 14:
			StringCopy(&Var2, "OUTFIT_P1_20" /* GXT: Gray Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 15:
			StringCopy(&Var2, "OUTFIT_P1_21" /* GXT: Green Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 16:
			StringCopy(&Var2, "OUTFIT_P1_22" /* GXT: Ash Hoodie, Sweatpants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 17:
			StringCopy(&Var2, "OUTFIT_P1_23" /* GXT: Yellow Check Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 18:
			StringCopy(&Var2, "OUTFIT_P1_24" /* GXT: Gray Plaid Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 19:
			StringCopy(&Var2, "OUTFIT_P1_25" /* GXT: Black Hoodie, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 20:
			StringCopy(&Var2, "OUTFIT_P1_26" /* GXT: Track Jacket, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 21:
			StringCopy(&Var2, "OUTFIT_P1_27" /* GXT: Off-White Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 22:
			StringCopy(&Var2, "OUTFIT_P1_28" /* GXT: Gray Plaid 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4000;
			break;
		case 23:
			StringCopy(&Var2, "OUTFIT_P1_29" /* GXT: Ash Plaid 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4500;
			break;
		case 24:
			StringCopy(&Var2, "OUTFIT_P1_30" /* GXT: Charcoal Plaid 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4500;
			break;
		case 25:
			StringCopy(&Var2, "OUTFIT_P1_31" /* GXT: Tan Plaid 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4650;
			break;
		case 26:
			StringCopy(&Var2, "OUTFIT_P1_32" /* GXT: Slate 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4900;
			break;
		case 27:
			StringCopy(&Var2, "OUTFIT_P1_33" /* GXT: Ash 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5000;
			break;
		case 28:
			StringCopy(&Var2, "OUTFIT_P1_34" /* GXT: Stone 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4750;
			break;
		case 29:
			StringCopy(&Var2, "OUTFIT_P1_35" /* GXT: Oatmeal 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4750;
			break;
		case 30:
			StringCopy(&Var2, "OUTFIT_P1_36" /* GXT: Navy Plaid Piped 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5200;
			break;
		case 31:
			StringCopy(&Var2, "OUTFIT_P1_37" /* GXT: Off-White 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5200;
			break;
		case 32:
			StringCopy(&Var2, "OUTFIT_P1_38" /* GXT: Red Piped 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5500;
			break;
		case 33:
			StringCopy(&Var2, "OUTFIT_P1_39" /* GXT: Gray Piped 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 34:
			StringCopy(&Var2, "OUTFIT_P1_40" /* GXT: Navy 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 35:
			StringCopy(&Var2, "OUTFIT_P1_41" /* GXT: Russet Piped 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 36:
			StringCopy(&Var2, "OUTFIT_P1_42" /* GXT: Green 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 37:
			StringCopy(&Var2, "OUTFIT_P1_43" /* GXT: Beige 3 Piece Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 38:
			StringCopy(&Var2, "OUTFIT_P1_47" /* GXT: Underwear */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 3000;
			break;
		case 39:
			StringCopy(&Var2, "OUTFIT_P1_48" /* GXT: LS Black Hoodie, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 3000;
			break;
		case 40:
			StringCopy(&Var2, "OUTFIT_P1_49" /* GXT: Gray Hoodie, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 3000;
			break;
		case 41:
			StringCopy(&Var2, "OUTFIT_P1_10" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 42:
			StringCopy(&Var2, "OUTFIT_P1_50" /* GXT: Moto X */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 43:
			StringCopy(&Var2, "OUTFIT_P1_51" /* GXT: U.R. Jersey, Fatigues */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 44:
			StringCopy(&Var2, "OUTFIT_P1_52" /* GXT: U.R. OG Tee, Bike Leathers */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 45:
			StringCopy(&Var2, "OUTFIT_P1_53" /* GXT: Uptown Riders Longsleeve, Camos */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 46:
			StringCopy(&Var2, "OUTFIT_P1_54" /* GXT: U.R. Jacket, Baggies */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 47, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_206(int iParam0)//Position - 0x1DCA1
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 11;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 1;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 2;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 3;
			break;
		case 5:
			StringCopy(&Var2, "JBIB_P1_1_0", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "JBIB_P1_1_1", 16);
			iVar3 = 2;
			iVar4 = 1;
			break;
		case 7:
			StringCopy(&Var2, "JBIB_P1_1_2", 16);
			iVar3 = 2;
			iVar4 = 2;
			break;
		case 8:
			StringCopy(&Var2, "JBIB_P1_1_3", 16);
			iVar3 = 2;
			iVar4 = 3;
			break;
		case 9:
			StringCopy(&Var2, "JBIB_P1_3_0" /* GXT: Silver Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "JBIB_P1_3_1" /* GXT: Ash Vest */, 16);
			iVar3 = 3;
			iVar4 = 1;
			break;
		case 11:
			StringCopy(&Var2, "JBIB_P1_3_2" /* GXT: Navy Vest */, 16);
			iVar3 = 3;
			iVar4 = 2;
			break;
		case 12:
			StringCopy(&Var2, "JBIB_P1_3_3" /* GXT: Colorful Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 3;
			break;
		case 13:
			StringCopy(&Var2, "JBIB_P1_3_4" /* GXT: Beige Vest */, 16);
			iVar3 = 3;
			iVar4 = 4;
			break;
		case 14:
			StringCopy(&Var2, "JBIB_P1_3_5" /* GXT: Black Vest */, 16);
			iVar3 = 3;
			iVar4 = 5;
			break;
		case 15:
			StringCopy(&Var2, "JBIB_P1_3_6" /* GXT: Gray Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 6;
			break;
		case 16:
			StringCopy(&Var2, "JBIB_P1_3_7" /* GXT: Jade Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 7;
			break;
		case 17:
			StringCopy(&Var2, "JBIB_P1_3_8" /* GXT: Beige Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 8;
			break;
		case 18:
			StringCopy(&Var2, "JBIB_P1_3_9" /* GXT: Brown Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 9;
			break;
		case 19:
			StringCopy(&Var2, "JBIB_P1_3_10" /* GXT: Brown Vest */, 16);
			iVar3 = 3;
			iVar4 = 10;
			break;
		case 20:
			StringCopy(&Var2, "JBIB_P1_3_11" /* GXT: White Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 11;
			break;
		case 21:
			StringCopy(&Var2, "JBIB_P1_3_12" /* GXT: Pearl Plaid Vest */, 16);
			iVar3 = 3;
			iVar4 = 12;
			break;
		case 22:
			StringCopy(&Var2, "JBIB_P1_3_13" /* GXT: Warm Gray Vest */, 16);
			iVar3 = 3;
			iVar4 = 13;
			break;
		case 23:
			StringCopy(&Var2, "JBIB_P1_3_14" /* GXT: Topaz Vest */, 16);
			iVar3 = 3;
			iVar4 = 14;
			break;
		case 24:
			StringCopy(&Var2, "JBIB_P1_3_15" /* GXT: Plum Vest */, 16);
			iVar3 = 3;
			iVar4 = 15;
			break;
		case 25:
			StringCopy(&Var2, "JBIB_P1_3_0" /* GXT: Silver Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 26:
			StringCopy(&Var2, "JBIB_P1_3_1" /* GXT: Ash Vest */, 16);
			iVar3 = 4;
			iVar4 = 1;
			break;
		case 27:
			StringCopy(&Var2, "JBIB_P1_3_2" /* GXT: Navy Vest */, 16);
			iVar3 = 4;
			iVar4 = 2;
			break;
		case 28:
			StringCopy(&Var2, "JBIB_P1_3_3" /* GXT: Colorful Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 3;
			break;
		case 29:
			StringCopy(&Var2, "JBIB_P1_3_4" /* GXT: Beige Vest */, 16);
			iVar3 = 4;
			iVar4 = 4;
			break;
		case 30:
			StringCopy(&Var2, "JBIB_P1_3_5" /* GXT: Black Vest */, 16);
			iVar3 = 4;
			iVar4 = 5;
			break;
		case 31:
			StringCopy(&Var2, "JBIB_P1_3_6" /* GXT: Gray Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 6;
			break;
		case 32:
			StringCopy(&Var2, "JBIB_P1_3_7" /* GXT: Jade Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 7;
			break;
		case 33:
			StringCopy(&Var2, "JBIB_P1_3_8" /* GXT: Beige Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 8;
			break;
		case 34:
			StringCopy(&Var2, "JBIB_P1_3_9" /* GXT: Brown Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 9;
			break;
		case 35:
			StringCopy(&Var2, "JBIB_P1_3_10" /* GXT: Brown Vest */, 16);
			iVar3 = 4;
			iVar4 = 10;
			break;
		case 36:
			StringCopy(&Var2, "JBIB_P1_3_11" /* GXT: White Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 11;
			break;
		case 37:
			StringCopy(&Var2, "JBIB_P1_3_12" /* GXT: Pearl Plaid Vest */, 16);
			iVar3 = 4;
			iVar4 = 12;
			break;
		case 38:
			StringCopy(&Var2, "JBIB_P1_3_13" /* GXT: Warm Gray Vest */, 16);
			iVar3 = 4;
			iVar4 = 13;
			break;
		case 39:
			StringCopy(&Var2, "JBIB_P1_3_14" /* GXT: Topaz Vest */, 16);
			iVar3 = 4;
			iVar4 = 14;
			break;
		case 40:
			StringCopy(&Var2, "JBIB_P1_3_15" /* GXT: Plum Vest */, 16);
			iVar3 = 4;
			iVar4 = 15;
			break;
		case 41:
			StringCopy(&Var2, "JBIB_P1_5_0" /* GXT: White Shirt */, 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 42:
			StringCopy(&Var2, "JBIB_P1_6_0" /* GXT: White Shirt */, 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 43:
			StringCopy(&Var2, "JBIB_P1_6_1" /* GXT: Two-Tone Shirt */, 16);
			iVar3 = 6;
			iVar4 = 1;
			break;
		case 44:
			StringCopy(&Var2, "JBIB_P1_7_0" /* GXT: Charcoal Hoodie */, 16);
			iVar3 = 7;
			iVar4 = 0;
			break;
		case 45:
			StringCopy(&Var2, "JBIB_P1_8_0" /* GXT: White T-Shirt */, 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 46:
			StringCopy(&Var2, "JBIB_P1_9_0" /* GXT: Blue Shirt */, 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 47:
			StringCopy(&Var2, "JBIB_P1_10_0" /* GXT: White T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 0;
			break;
		case 48:
			StringCopy(&Var2, "JBIB_P1_10_1" /* GXT: Crevis T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 1;
			iVar1 = 48;
			break;
		case 49:
			StringCopy(&Var2, "JBIB_P1_10_2" /* GXT: Yeti T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 2;
			iVar1 = 35;
			break;
		case 50:
			StringCopy(&Var2, "JBIB_P1_10_3" /* GXT: Sweatbox T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 3;
			iVar1 = 32;
			break;
		case 51:
			StringCopy(&Var2, "JBIB_P1_10_4" /* GXT: Trey Baker T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 4;
			iVar1 = 35;
			break;
		case 52:
			StringCopy(&Var2, "JBIB_P1_10_5" /* GXT: Black T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 5;
			iVar1 = 48;
			break;
		case 53:
			StringCopy(&Var2, "JBIB_P1_10_6" /* GXT: Fruntalot T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 6;
			iVar1 = 52;
			break;
		case 54:
			StringCopy(&Var2, "JBIB_P1_10_7" /* GXT: Kingz of Los Santos T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 7;
			iVar1 = 38;
			break;
		case 55:
			StringCopy(&Var2, "JBIB_P1_10_8" /* GXT: Ten Off The Chain T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 8;
			iVar1 = 42;
			break;
		case 56:
			StringCopy(&Var2, "JBIB_P1_10_9" /* GXT: Gray T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 9;
			iVar1 = 38;
			break;
		case 57:
			StringCopy(&Var2, "JBIB_P1_10_10" /* GXT: Green T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 10;
			iVar1 = 35;
			break;
		case 58:
			StringCopy(&Var2, "JBIB_P1_10_11" /* GXT: Camo T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 11;
			iVar1 = 48;
			break;
		case 59:
			StringCopy(&Var2, "JBIB_P1_10_12" /* GXT: Yeti Rainbow T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 12;
			iVar1 = 42;
			break;
		case 60:
			StringCopy(&Var2, "JBIB_P1_10_13" /* GXT: Feud Banded T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 13;
			iVar1 = 45;
			break;
		case 61:
			StringCopy(&Var2, "JBIB_P1_10_14" /* GXT: Yogarishima T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 14;
			iVar1 = 45;
			break;
		case 62:
			StringCopy(&Var2, "JBIB_P1_10_15" /* GXT: Feud Gray T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 15;
			iVar1 = 49;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 63, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_207(int iParam0)//Position - 0x1E30F
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 7;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 1, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_208(int iParam0)//Position - 0x1E383
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 1;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "BERD_P1_0_0" /* GXT: Clean Shave */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "BERD_P1_1_0" /* GXT: Full Van Dyke */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "BERD_P1_2_0" /* GXT: Methodical */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "BERD_P1_3_0" /* GXT: Full Spartan */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "BERD_P1_4_0" /* GXT: Stubble */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 5, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_209(int iParam0)//Position - 0x1E453
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 10;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 1;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 2;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 3;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 4;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 5;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 1;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 2;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 3;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 4;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 5;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 6;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 1;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 2;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 3;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 4;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 5;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 6;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 7;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 8;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 9;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 10;
			break;
		case 27:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 11;
			break;
		case 28:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 12;
			break;
		case 29:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 13;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 14;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 15;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 1;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 2;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 3;
			break;
		case 36:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 4;
			break;
		case 37:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 5;
			break;
		case 38:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 6;
			break;
		case 39:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			break;
		case 40:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 1;
			break;
		case 41:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 2;
			break;
		case 42:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 3;
			break;
		case 43:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 4;
			break;
		case 44:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 5;
			break;
		case 45:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 6;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 7;
			break;
		case 47:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 48:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 1;
			break;
		case 49:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 2;
			break;
		case 50:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 3;
			break;
		case 51:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 52:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 53, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_210(int iParam0)//Position - 0x1E983
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 9;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "SPEC2_P0_08_0" /* GXT: Red Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 0;
			iVar1 = 125;
			break;
		case 6:
			StringCopy(&Var2, "SPEC2_P0_08_1" /* GXT: Green Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 1;
			iVar1 = 150;
			break;
		case 7:
			StringCopy(&Var2, "SPEC2_P0_08_2" /* GXT: Patriot Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 2;
			iVar1 = 175;
			break;
		case 8:
			StringCopy(&Var2, "SPEC2_P0_08_3" /* GXT: Domino Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 3;
			iVar1 = 85;
			break;
		case 9:
			StringCopy(&Var2, "SPEC2_P0_08_4" /* GXT: Gray Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 4;
			iVar1 = 150;
			break;
		case 10:
			StringCopy(&Var2, "SPEC2_P0_08_5" /* GXT: Phoenix Wrestler Mask */, 16);
			iVar3 = 5;
			iVar4 = 5;
			iVar1 = 175;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 12, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_211(int iParam0)//Position - 0x1EB1A
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 8;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "SPEC_P1_9_0" /* GXT: Bandana */, 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "SPEC_P1_11_0" /* GXT: Silver Tie */, 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar1 = 195;
			break;
		case 12:
			StringCopy(&Var2, "SPEC_P1_11_1" /* GXT: Gold Tie */, 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar1 = 195;
			break;
		case 13:
			StringCopy(&Var2, "SPEC_P1_11_2" /* GXT: Cream Tie */, 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar1 = 195;
			break;
		case 14:
			StringCopy(&Var2, "SPEC_P1_11_3" /* GXT: Blue Diamond Tie */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 250;
			break;
		case 15:
			StringCopy(&Var2, "SPEC_P1_11_4" /* GXT: Blue Spotted Tie */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 250;
			break;
		case 16:
			StringCopy(&Var2, "SPEC_P1_11_5" /* GXT: White Spotted Tie */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 250;
			break;
		case 17:
			StringCopy(&Var2, "SPEC_P1_11_6" /* GXT: Dark Gray Tie */, 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar1 = 195;
			break;
		case 18:
			StringCopy(&Var2, "SPEC_P1_11_7" /* GXT: Gray Striped Tie */, 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar1 = 250;
			break;
		case 19:
			StringCopy(&Var2, "SPEC_P1_11_8" /* GXT: Silver Striped Tie */, 16);
			iVar3 = 11;
			iVar4 = 8;
			iVar1 = 250;
			break;
		case 20:
			StringCopy(&Var2, "SPEC_P1_11_9" /* GXT: Red Striped Tie */, 16);
			iVar3 = 11;
			iVar4 = 9;
			iVar1 = 250;
			break;
		case 21:
			StringCopy(&Var2, "SPEC_P1_11_10" /* GXT: Bronze Striped Tie */, 16);
			iVar3 = 11;
			iVar4 = 10;
			iVar1 = 250;
			break;
		case 22:
			StringCopy(&Var2, "SPEC_P1_11_11" /* GXT: White Diamond Tie */, 16);
			iVar3 = 11;
			iVar4 = 11;
			iVar1 = 195;
			break;
		case 23:
			StringCopy(&Var2, "SPEC_P1_11_12" /* GXT: Black Diamond Tie */, 16);
			iVar3 = 11;
			iVar4 = 12;
			iVar1 = 250;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			break;
		case 27:
			StringCopy(&Var2, "SPEC_P1_15_0" /* GXT: Purple Tie */, 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 28:
			StringCopy(&Var2, "SPEC_P1_15_1" /* GXT: Cream Tie */, 16);
			iVar3 = 15;
			iVar4 = 1;
			break;
		case 29:
			StringCopy(&Var2, "SPEC_P1_15_2" /* GXT: Beige Tie */, 16);
			iVar3 = 15;
			iVar4 = 2;
			break;
		case 30:
			StringCopy(&Var2, "SPEC_P1_15_3" /* GXT: Ash Tie */, 16);
			iVar3 = 15;
			iVar4 = 3;
			break;
		case 31:
			StringCopy(&Var2, "SPEC_P1_15_4" /* GXT: White Diamond Tie */, 16);
			iVar3 = 15;
			iVar4 = 4;
			break;
		case 32:
			StringCopy(&Var2, "SPEC_P1_15_5" /* GXT: Gray Diamond Tie */, 16);
			iVar3 = 15;
			iVar4 = 5;
			break;
		case 33:
			StringCopy(&Var2, "SPEC_P1_15_6" /* GXT: Beige Striped Tie */, 16);
			iVar3 = 15;
			iVar4 = 6;
			break;
		case 34:
			StringCopy(&Var2, "SPEC_P1_15_7" /* GXT: Red Striped Tie */, 16);
			iVar3 = 15;
			iVar4 = 7;
			break;
		case 35:
			StringCopy(&Var2, "SPEC_P1_15_8" /* GXT: Russet Wool Tie */, 16);
			iVar3 = 15;
			iVar4 = 8;
			break;
		case 36:
			StringCopy(&Var2, "SPEC_P1_15_9" /* GXT: Gray Striped Tie */, 16);
			iVar3 = 15;
			iVar4 = 9;
			break;
		case 37:
			StringCopy(&Var2, "SPEC_P1_15_10" /* GXT: Gray Wool Tie */, 16);
			iVar3 = 15;
			iVar4 = 10;
			break;
		case 38:
			StringCopy(&Var2, "SPEC_P1_15_11" /* GXT: Off-White Tie */, 16);
			iVar3 = 15;
			iVar4 = 11;
			break;
		case 39:
			StringCopy(&Var2, "SPEC_P1_15_12" /* GXT: Blue Diamond Tie */, 16);
			iVar3 = 15;
			iVar4 = 12;
			break;
		case 40:
			StringCopy(&Var2, "SPEC_P1_15_13" /* GXT: Brown Wool Tie */, 16);
			iVar3 = 15;
			iVar4 = 13;
			break;
		case 41:
			StringCopy(&Var2, "SPEC_P1_15_14" /* GXT: Gray Textured Tie */, 16);
			iVar3 = 15;
			iVar4 = 14;
			break;
		case 42:
			StringCopy(&Var2, "SPEC_P1_15_15" /* GXT: Amethyst Tie */, 16);
			iVar3 = 15;
			iVar4 = 15;
			break;
		case 43:
			StringCopy(&Var2, "SPEC_P1_15_0" /* GXT: Purple Tie */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 44:
			StringCopy(&Var2, "SPEC_P1_15_1" /* GXT: Cream Tie */, 16);
			iVar3 = 16;
			iVar4 = 1;
			break;
		case 45:
			StringCopy(&Var2, "SPEC_P1_15_2" /* GXT: Beige Tie */, 16);
			iVar3 = 16;
			iVar4 = 2;
			break;
		case 46:
			StringCopy(&Var2, "SPEC_P1_15_3" /* GXT: Ash Tie */, 16);
			iVar3 = 16;
			iVar4 = 3;
			break;
		case 47:
			StringCopy(&Var2, "SPEC_P1_15_4" /* GXT: White Diamond Tie */, 16);
			iVar3 = 16;
			iVar4 = 4;
			break;
		case 48:
			StringCopy(&Var2, "SPEC_P1_15_5" /* GXT: Gray Diamond Tie */, 16);
			iVar3 = 16;
			iVar4 = 5;
			break;
		case 49:
			StringCopy(&Var2, "SPEC_P1_15_6" /* GXT: Beige Striped Tie */, 16);
			iVar3 = 16;
			iVar4 = 6;
			break;
		case 50:
			StringCopy(&Var2, "SPEC_P1_15_7" /* GXT: Red Striped Tie */, 16);
			iVar3 = 16;
			iVar4 = 7;
			break;
		case 51:
			StringCopy(&Var2, "SPEC_P1_15_8" /* GXT: Russet Wool Tie */, 16);
			iVar3 = 16;
			iVar4 = 8;
			break;
		case 52:
			StringCopy(&Var2, "SPEC_P1_15_9" /* GXT: Gray Striped Tie */, 16);
			iVar3 = 16;
			iVar4 = 9;
			break;
		case 53:
			StringCopy(&Var2, "SPEC_P1_15_10" /* GXT: Gray Wool Tie */, 16);
			iVar3 = 16;
			iVar4 = 10;
			break;
		case 54:
			StringCopy(&Var2, "SPEC_P1_15_11" /* GXT: Off-White Tie */, 16);
			iVar3 = 16;
			iVar4 = 11;
			break;
		case 55:
			StringCopy(&Var2, "SPEC_P1_15_12" /* GXT: Blue Diamond Tie */, 16);
			iVar3 = 16;
			iVar4 = 12;
			break;
		case 56:
			StringCopy(&Var2, "SPEC_P1_15_13" /* GXT: Brown Wool Tie */, 16);
			iVar3 = 16;
			iVar4 = 13;
			break;
		case 57:
			StringCopy(&Var2, "SPEC_P1_15_14" /* GXT: Gray Textured Tie */, 16);
			iVar3 = 16;
			iVar4 = 14;
			break;
		case 58:
			StringCopy(&Var2, "SPEC_P1_15_15" /* GXT: Amethyst Tie */, 16);
			iVar3 = 16;
			iVar4 = 15;
			break;
		case 59:
			StringCopy(&Var2, "SPEC_P1_15_0" /* GXT: Purple Tie */, 16);
			iVar3 = 17;
			iVar4 = 0;
			break;
		case 60:
			StringCopy(&Var2, "SPEC_P1_15_1" /* GXT: Cream Tie */, 16);
			iVar3 = 17;
			iVar4 = 1;
			break;
		case 61:
			StringCopy(&Var2, "SPEC_P1_15_2" /* GXT: Beige Tie */, 16);
			iVar3 = 17;
			iVar4 = 2;
			break;
		case 62:
			StringCopy(&Var2, "SPEC_P1_15_3" /* GXT: Ash Tie */, 16);
			iVar3 = 17;
			iVar4 = 3;
			break;
		case 63:
			StringCopy(&Var2, "SPEC_P1_15_4" /* GXT: White Diamond Tie */, 16);
			iVar3 = 17;
			iVar4 = 4;
			break;
		case 64:
			StringCopy(&Var2, "SPEC_P1_15_5" /* GXT: Gray Diamond Tie */, 16);
			iVar3 = 17;
			iVar4 = 5;
			break;
		case 65:
			StringCopy(&Var2, "SPEC_P1_15_6" /* GXT: Beige Striped Tie */, 16);
			iVar3 = 17;
			iVar4 = 6;
			break;
		case 66:
			StringCopy(&Var2, "SPEC_P1_15_7" /* GXT: Red Striped Tie */, 16);
			iVar3 = 17;
			iVar4 = 7;
			break;
		case 67:
			StringCopy(&Var2, "SPEC_P1_15_8" /* GXT: Russet Wool Tie */, 16);
			iVar3 = 17;
			iVar4 = 8;
			break;
		case 68:
			StringCopy(&Var2, "SPEC_P1_15_9" /* GXT: Gray Striped Tie */, 16);
			iVar3 = 17;
			iVar4 = 9;
			break;
		case 69:
			StringCopy(&Var2, "SPEC_P1_15_10" /* GXT: Gray Wool Tie */, 16);
			iVar3 = 17;
			iVar4 = 10;
			break;
		case 70:
			StringCopy(&Var2, "SPEC_P1_15_11" /* GXT: Off-White Tie */, 16);
			iVar3 = 17;
			iVar4 = 11;
			break;
		case 71:
			StringCopy(&Var2, "SPEC_P1_15_12" /* GXT: Blue Diamond Tie */, 16);
			iVar3 = 17;
			iVar4 = 12;
			break;
		case 72:
			StringCopy(&Var2, "SPEC_P1_15_13" /* GXT: Brown Wool Tie */, 16);
			iVar3 = 17;
			iVar4 = 13;
			break;
		case 73:
			StringCopy(&Var2, "SPEC_P1_15_14" /* GXT: Gray Textured Tie */, 16);
			iVar3 = 17;
			iVar4 = 14;
			break;
		case 74:
			StringCopy(&Var2, "SPEC_P1_15_15" /* GXT: Amethyst Tie */, 16);
			iVar3 = 17;
			iVar4 = 15;
			break;
		case 75:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 18;
			iVar4 = 0;
			break;
		case 76:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 19;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 77, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_212(int iParam0)//Position - 0x1F318
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 5;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 7, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_213(int iParam0)//Position - 0x1F428
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 6;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "FEET_P1_00_0" /* GXT: White Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "FEET_P1_00_1" /* GXT: All White Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 80;
			break;
		case 2:
			StringCopy(&Var2, "FEET_P1_00_2" /* GXT: Charcoal Two-Tone Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 80;
			break;
		case 3:
			StringCopy(&Var2, "FEET_P1_00_3" /* GXT: Yellow Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 89;
			break;
		case 4:
			StringCopy(&Var2, "FEET_P1_00_4" /* GXT: Gray Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar1 = 45;
			break;
		case 5:
			StringCopy(&Var2, "FEET_P1_00_5" /* GXT: Black Two-Tone Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar1 = 35;
			break;
		case 6:
			StringCopy(&Var2, "FEET_P1_00_6" /* GXT: Gray Two-Tone Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 6;
			iVar1 = 89;
			break;
		case 7:
			StringCopy(&Var2, "FEET_P1_00_7" /* GXT: Lemon Accent Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 7;
			iVar1 = 95;
			break;
		case 8:
			StringCopy(&Var2, "FEET_P1_00_8" /* GXT: Two-Tone Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 8;
			iVar1 = 115;
			break;
		case 9:
			StringCopy(&Var2, "FEET_P1_00_9" /* GXT: Cyan Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 9;
			iVar1 = 40;
			break;
		case 10:
			StringCopy(&Var2, "FEET_P1_00_10" /* GXT: Cyan Accent Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 10;
			iVar1 = 145;
			break;
		case 11:
			StringCopy(&Var2, "FEET_P1_00_11" /* GXT: Fluorescent Athletic Shoes */, 16);
			iVar3 = 0;
			iVar4 = 11;
			iVar1 = 145;
			break;
		case 12:
			StringCopy(&Var2, "FEET_P1_01_0" /* GXT: Work Boots */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 18:
			StringCopy(&Var2, "FEET_P1_06_0" /* GXT: Desert Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 19:
			StringCopy(&Var2, "FEET_P1_06_1" /* GXT: Coffee Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 180;
			break;
		case 20:
			StringCopy(&Var2, "FEET_P1_06_2" /* GXT: Chocolate Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 80;
			break;
		case 21:
			StringCopy(&Var2, "FEET_P1_06_3" /* GXT: Gray Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 200;
			break;
		case 22:
			StringCopy(&Var2, "FEET_P1_06_4" /* GXT: Slate Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 220;
			break;
		case 23:
			StringCopy(&Var2, "FEET_P1_06_5" /* GXT: Copper Round-Toe Boots */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 235;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 25:
			StringCopy(&Var2, "FEET_P1_08_0" /* GXT: Gray Snake Shoes */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 870;
			break;
		case 26:
			StringCopy(&Var2, "FEET_P1_08_1" /* GXT: Black Shoes */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 870;
			break;
		case 27:
			StringCopy(&Var2, "FEET_P1_08_2" /* GXT: White Snake Shoes */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 870;
			break;
		case 28:
			StringCopy(&Var2, "FEET_P1_08_3" /* GXT: Gray Crocodile Shoes */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 1275;
			break;
		case 29:
			StringCopy(&Var2, "FEET_P1_08_4" /* GXT: Alligator Shoes */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 1275;
			break;
		case 30:
			StringCopy(&Var2, "FEET_P1_08_5" /* GXT: Brown Crocodile Shoes */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 1275;
			break;
		case 31:
			StringCopy(&Var2, "FEET_P1_08_6" /* GXT: Rattlesnake Shoes */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 1275;
			break;
		case 32:
			StringCopy(&Var2, "FEET_P1_08_7" /* GXT: Gray Python Shoes */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 1275;
			break;
		case 33:
			StringCopy(&Var2, "FEET_P1_08_8" /* GXT: Two-Tone Crocodile Shoes */, 16);
			iVar3 = 8;
			iVar4 = 8;
			iVar1 = 1275;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 35:
			StringCopy(&Var2, "FEET_P1_10_0" /* GXT: Black Brogues */, 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 36:
			StringCopy(&Var2, "FEET_P1_11_0" /* GXT: Two-Tone Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 37:
			StringCopy(&Var2, "FEET_P1_11_1" /* GXT: Orange Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar1 = 50;
			break;
		case 38:
			StringCopy(&Var2, "FEET_P1_11_2" /* GXT: Black Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar1 = 50;
			break;
		case 39:
			StringCopy(&Var2, "FEET_P1_11_3" /* GXT: Desert Green Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 50;
			break;
		case 40:
			StringCopy(&Var2, "FEET_P1_11_4" /* GXT: Mint Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 50;
			break;
		case 41:
			StringCopy(&Var2, "FEET_P1_11_5" /* GXT: Freeway Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 50;
			break;
		case 42:
			StringCopy(&Var2, "FEET_P1_11_6" /* GXT: Animal Fashion Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar1 = 50;
			break;
		case 43:
			StringCopy(&Var2, "FEET_P1_11_7" /* GXT: Feud Classic Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar1 = 50;
			break;
		case 44:
			StringCopy(&Var2, "FEET_P1_11_8" /* GXT: Cacao Blend Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 8;
			iVar1 = 50;
			break;
		case 45:
			StringCopy(&Var2, "FEET_P1_11_9" /* GXT: Magnetics Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 9;
			iVar1 = 50;
			break;
		case 46:
			StringCopy(&Var2, "FEET_P1_11_10" /* GXT: Blue Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 10;
			iVar1 = 50;
			break;
		case 47:
			StringCopy(&Var2, "FEET_P1_11_11" /* GXT: White Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 11;
			iVar1 = 50;
			break;
		case 48:
			StringCopy(&Var2, "FEET_P1_11_12" /* GXT: Winter Camo Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 12;
			iVar1 = 50;
			break;
		case 49:
			StringCopy(&Var2, "FEET_P1_11_13" /* GXT: Forest Camo Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 13;
			iVar1 = 50;
			break;
		case 50:
			StringCopy(&Var2, "FEET_P1_11_14" /* GXT: Soft Seas Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 14;
			iVar1 = 50;
			break;
		case 51:
			StringCopy(&Var2, "FEET_P1_11_15" /* GXT: Latte Sneakers */, 16);
			iVar3 = 11;
			iVar4 = 15;
			iVar1 = 50;
			break;
		case 52:
			StringCopy(&Var2, "FEET_P1_12_0" /* GXT: White Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 0;
			break;
		case 53:
			StringCopy(&Var2, "FEET_P1_12_1" /* GXT: Green Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 1;
			iVar1 = 25;
			break;
		case 54:
			StringCopy(&Var2, "FEET_P1_12_2" /* GXT: Two-Tone Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 2;
			iVar1 = 20;
			break;
		case 55:
			StringCopy(&Var2, "FEET_P1_12_3" /* GXT: Black Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 3;
			iVar1 = 24;
			break;
		case 56:
			StringCopy(&Var2, "FEET_P1_12_4" /* GXT: Blue Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 4;
			iVar1 = 25;
			break;
		case 57:
			StringCopy(&Var2, "FEET_P1_12_5" /* GXT: Orange Accent Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 5;
			iVar1 = 27;
			break;
		case 58:
			StringCopy(&Var2, "FEET_P1_12_6" /* GXT: Red Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 6;
			iVar1 = 29;
			break;
		case 59:
			StringCopy(&Var2, "FEET_P1_12_7" /* GXT: Orange Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 7;
			iVar1 = 27;
			break;
		case 60:
			StringCopy(&Var2, "FEET_P1_12_8" /* GXT: Mocha Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 8;
			iVar1 = 25;
			break;
		case 61:
			StringCopy(&Var2, "FEET_P1_12_9" /* GXT: Black Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 9;
			iVar1 = 30;
			break;
		case 62:
			StringCopy(&Var2, "FEET_P1_12_10" /* GXT: Fresh Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 10;
			iVar1 = 28;
			break;
		case 63:
			StringCopy(&Var2, "FEET_P1_12_11" /* GXT: Green Skate Sneakers */, 16);
			iVar3 = 12;
			iVar4 = 11;
			iVar1 = 30;
			break;
		case 64:
			StringCopy(&Var2, "FEET_P1_13_0" /* GXT: Black Oxfords */, 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 65:
			StringCopy(&Var2, "FEET_P1_14_0" /* GXT: Gray Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 155;
			break;
		case 66:
			StringCopy(&Var2, "FEET_P1_14_1" /* GXT: White Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 155;
			break;
		case 67:
			StringCopy(&Var2, "FEET_P1_14_2" /* GXT: Chestnut Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 2;
			iVar1 = 165;
			break;
		case 68:
			StringCopy(&Var2, "FEET_P1_14_3" /* GXT: Jade Accent Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 3;
			iVar1 = 170;
			break;
		case 69:
			StringCopy(&Var2, "FEET_P1_14_4" /* GXT: Two-Tone Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 4;
			iVar1 = 160;
			break;
		case 70:
			StringCopy(&Var2, "FEET_P1_14_5" /* GXT: Red Piped Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 5;
			iVar1 = 165;
			break;
		case 71:
			StringCopy(&Var2, "FEET_P1_14_6" /* GXT: Red Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 6;
			iVar1 = 170;
			break;
		case 72:
			StringCopy(&Var2, "FEET_P1_14_7" /* GXT: Beige Skate Shoes */, 16);
			iVar3 = 14;
			iVar4 = 7;
			iVar1 = 160;
			break;
		case 73:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 74:
			StringCopy(&Var2, "FEET_P1_16_0" /* GXT: Black Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 0;
			iVar1 = 720;
			break;
		case 75:
			StringCopy(&Var2, "FEET_P1_16_1" /* GXT: Gray Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 680;
			break;
		case 76:
			StringCopy(&Var2, "FEET_P1_16_2" /* GXT: Cream Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 2;
			iVar1 = 650;
			break;
		case 77:
			StringCopy(&Var2, "FEET_P1_16_3" /* GXT: Brown Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 3;
			iVar1 = 670;
			break;
		case 78:
			StringCopy(&Var2, "FEET_P1_16_4" /* GXT: White Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 4;
			iVar1 = 700;
			break;
		case 79:
			StringCopy(&Var2, "FEET_P1_16_5" /* GXT: Russet Leather Loafers */, 16);
			iVar3 = 16;
			iVar4 = 5;
			iVar1 = 680;
			break;
		case 80:
			StringCopy(&Var2, "FEET_P1_16_6" /* GXT: White Snakeskin Loafers */, 16);
			iVar3 = 16;
			iVar4 = 6;
			iVar1 = 720;
			break;
		case 81:
			StringCopy(&Var2, "FEET_P1_16_7" /* GXT: Rattlesnake Loafers */, 16);
			iVar3 = 16;
			iVar4 = 7;
			iVar1 = 740;
			break;
		case 82:
			StringCopy(&Var2, "FEET_P1_16_8" /* GXT: Brown Snakeskin Loafers */, 16);
			iVar3 = 16;
			iVar4 = 8;
			iVar1 = 760;
			break;
		case 83:
			StringCopy(&Var2, "FEET_P1_16_9" /* GXT: Zebra Two-Tone Loafers */, 16);
			iVar3 = 16;
			iVar4 = 9;
			iVar1 = 780;
			break;
		case 84:
			StringCopy(&Var2, "FEET_P1_16_10" /* GXT: Pale Reptile Loafers */, 16);
			iVar3 = 16;
			iVar4 = 10;
			iVar1 = 750;
			break;
		case 85:
			StringCopy(&Var2, "FEET_P1_16_11" /* GXT: Tan Alligator Loafers */, 16);
			iVar3 = 16;
			iVar4 = 11;
			iVar1 = 700;
			break;
		case 86:
			StringCopy(&Var2, "FEET_P1_17_0" /* GXT: All Black Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar1 = 790;
			break;
		case 87:
			StringCopy(&Var2, "FEET_P1_17_1" /* GXT: Chocolate Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 1;
			iVar1 = 750;
			break;
		case 88:
			StringCopy(&Var2, "FEET_P1_17_2" /* GXT: Chestnut Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 2;
			iVar1 = 860;
			break;
		case 89:
			StringCopy(&Var2, "FEET_P1_17_3" /* GXT: Tan Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 3;
			iVar1 = 750;
			break;
		case 90:
			StringCopy(&Var2, "FEET_P1_17_4" /* GXT: White Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 4;
			iVar1 = 790;
			break;
		case 91:
			StringCopy(&Var2, "FEET_P1_17_5" /* GXT: Ash Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 92:
			StringCopy(&Var2, "FEET_P1_17_6" /* GXT: Gray Two-Tone Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 6;
			iVar1 = 820;
			break;
		case 93:
			StringCopy(&Var2, "FEET_P1_17_7" /* GXT: Beige Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 7;
			iVar1 = 800;
			break;
		case 94:
			StringCopy(&Var2, "FEET_P1_17_8" /* GXT: Topaz Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 8;
			iVar1 = 850;
			break;
		case 95:
			StringCopy(&Var2, "FEET_P1_17_9" /* GXT: Black Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 9;
			iVar1 = 870;
			break;
		case 96:
			StringCopy(&Var2, "FEET_P1_17_10" /* GXT: Lime Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 10;
			iVar1 = 720;
			break;
		case 97:
			StringCopy(&Var2, "FEET_P1_17_11" /* GXT: Hawthorn Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 11;
			iVar1 = 740;
			break;
		case 98:
			StringCopy(&Var2, "FEET_P1_17_12" /* GXT: Coffee Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 12;
			iVar1 = 800;
			break;
		case 99:
			StringCopy(&Var2, "FEET_P1_17_13" /* GXT: Gray Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 13;
			iVar1 = 750;
			break;
		case 100:
			StringCopy(&Var2, "FEET_P1_17_14" /* GXT: Cream Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 14;
			iVar1 = 770;
			break;
		case 101:
			StringCopy(&Var2, "FEET_P1_17_15" /* GXT: Navy Oxfords */, 16);
			iVar3 = 17;
			iVar4 = 15;
			iVar1 = 860;
			break;
		case 102:
			StringCopy(&Var2, "FEET_P1_18_0" /* GXT: Black Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar1 = 850;
			break;
		case 103:
			StringCopy(&Var2, "FEET_P1_18_1" /* GXT: Red Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 800;
			break;
		case 104:
			StringCopy(&Var2, "FEET_P1_18_2" /* GXT: Brown Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 780;
			break;
		case 105:
			StringCopy(&Var2, "FEET_P1_18_3" /* GXT: Green Stripe Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 890;
			break;
		case 106:
			StringCopy(&Var2, "FEET_P1_18_4" /* GXT: Green Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 820;
			break;
		case 107:
			StringCopy(&Var2, "FEET_P1_18_5" /* GXT: Copper Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 108:
			StringCopy(&Var2, "FEET_P1_18_6" /* GXT: Copper Two-Tone Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar1 = 870;
			break;
		case 109:
			StringCopy(&Var2, "FEET_P1_18_7" /* GXT: Navy Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar1 = 930;
			break;
		case 110:
			StringCopy(&Var2, "FEET_P1_18_8" /* GXT: Blue Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 8;
			iVar1 = 880;
			break;
		case 111:
			StringCopy(&Var2, "FEET_P1_18_9" /* GXT: Beige Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 9;
			iVar1 = 900;
			break;
		case 112:
			StringCopy(&Var2, "FEET_P1_18_10" /* GXT: White Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 10;
			iVar1 = 920;
			break;
		case 113:
			StringCopy(&Var2, "FEET_P1_18_11" /* GXT: Tan Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 11;
			iVar1 = 970;
			break;
		case 114:
			StringCopy(&Var2, "FEET_P1_18_12" /* GXT: Black Snakeskin Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 12;
			iVar1 = 990;
			break;
		case 115:
			StringCopy(&Var2, "FEET_P1_18_13" /* GXT: Two-Tone Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 13;
			iVar1 = 960;
			break;
		case 116:
			StringCopy(&Var2, "FEET_P1_18_14" /* GXT: Brown Snakeskin Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 14;
			iVar1 = 980;
			break;
		case 117:
			StringCopy(&Var2, "FEET_P1_18_15" /* GXT: Gray Slip-Ons */, 16);
			iVar3 = 18;
			iVar4 = 15;
			iVar1 = 950;
			break;
		case 118:
			StringCopy(&Var2, "FEET_P1_19_0" /* GXT: Brown Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 110;
			break;
		case 119:
			StringCopy(&Var2, "FEET_P1_19_1" /* GXT: Navy Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 115;
			break;
		case 120:
			StringCopy(&Var2, "FEET_P1_19_2" /* GXT: Coffee Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 120;
			break;
		case 121:
			StringCopy(&Var2, "FEET_P1_19_3" /* GXT: Burgundy Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 110;
			break;
		case 122:
			StringCopy(&Var2, "FEET_P1_19_4" /* GXT: Blue Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 125;
			break;
		case 123:
			StringCopy(&Var2, "FEET_P1_19_5" /* GXT: Woodland Camo Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 128;
			break;
		case 124:
			StringCopy(&Var2, "FEET_P1_19_6" /* GXT: Black Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 135;
			break;
		case 125:
			StringCopy(&Var2, "FEET_P1_19_7" /* GXT: Tan Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 130;
			break;
		case 126:
			StringCopy(&Var2, "FEET_P1_19_8" /* GXT: Purple Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 145;
			break;
		case 127:
			StringCopy(&Var2, "FEET_P1_19_9" /* GXT: Brown Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 110;
			break;
		case 128:
			StringCopy(&Var2, "FEET_P1_19_10" /* GXT: Chocolate Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 120;
			break;
		case 129:
			StringCopy(&Var2, "FEET_P1_19_11" /* GXT: Green Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 150;
			break;
		case 130:
			StringCopy(&Var2, "FEET_P1_19_12" /* GXT: Ash Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 125;
			break;
		case 131:
			StringCopy(&Var2, "FEET_P1_19_13" /* GXT: Olive Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 120;
			break;
		case 132:
			StringCopy(&Var2, "FEET_P1_19_14" /* GXT: Two-Tone Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 130;
			break;
		case 133:
			StringCopy(&Var2, "FEET_P1_19_15" /* GXT: Yellow Wingtips */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 110;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 134, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_214(int iParam0)//Position - 0x20354
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 4;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "LEGS_P1_0_0" /* GXT: Cream Cargo Shorts */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "LEGS_P1_0_1" /* GXT: Sand Cargo Shorts */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 32;
			break;
		case 2:
			StringCopy(&Var2, "LEGS_P1_0_2" /* GXT: Navy Cargo Shorts */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 38;
			break;
		case 3:
			StringCopy(&Var2, "LEGS_P1_0_3" /* GXT: Olive Cargo Shorts */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 44;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 5;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "LEGS_P1_2_0" /* GXT: Black Tuxedo Pants */, 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "LEGS_P1_6_0" /* GXT: Gray Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 15:
			StringCopy(&Var2, "LEGS_P1_6_1" /* GXT: Cream Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 690;
			break;
		case 16:
			StringCopy(&Var2, "LEGS_P1_6_2" /* GXT: Tan Plaid Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 720;
			break;
		case 17:
			StringCopy(&Var2, "LEGS_P1_6_3" /* GXT: Tartan Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 850;
			break;
		case 18:
			StringCopy(&Var2, "LEGS_P1_6_4" /* GXT: Charcoal Plaid Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 850;
			break;
		case 19:
			StringCopy(&Var2, "LEGS_P1_6_5" /* GXT: Dark Plaid Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 740;
			break;
		case 20:
			StringCopy(&Var2, "LEGS_P1_6_6" /* GXT: Brown Plaid Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 6;
			iVar1 = 750;
			break;
		case 21:
			StringCopy(&Var2, "LEGS_P1_6_7" /* GXT: Slate Golf Pants */, 16);
			iVar3 = 6;
			iVar4 = 7;
			iVar1 = 790;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 24:
			StringCopy(&Var2, "LEGS_P1_8_0" /* GXT: Slate Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 25:
			StringCopy(&Var2, "LEGS_P1_8_1" /* GXT: Blue Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 145;
			break;
		case 26:
			StringCopy(&Var2, "LEGS_P1_8_2" /* GXT: Gray Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 140;
			break;
		case 27:
			StringCopy(&Var2, "LEGS_P1_8_3" /* GXT: Pale Blue Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 148;
			break;
		case 28:
			StringCopy(&Var2, "LEGS_P1_8_4" /* GXT: Black Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 150;
			break;
		case 29:
			StringCopy(&Var2, "LEGS_P1_8_5" /* GXT: Blue-Green Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 154;
			break;
		case 30:
			StringCopy(&Var2, "LEGS_P1_8_6" /* GXT: Faded Baggy Jeans */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 158;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 33:
			StringCopy(&Var2, "LEGS_P1_11_0" /* GXT: Beige Chinos */, 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar1 = 820;
			break;
		case 34:
			StringCopy(&Var2, "LEGS_P1_11_1" /* GXT: Olive Chinos */, 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar1 = 820;
			break;
		case 35:
			StringCopy(&Var2, "LEGS_P1_11_2" /* GXT: Black Chinos */, 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar1 = 850;
			break;
		case 36:
			StringCopy(&Var2, "LEGS_P1_11_3" /* GXT: Off-White Chinos */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 850;
			break;
		case 37:
			StringCopy(&Var2, "LEGS_P1_11_4" /* GXT: Gray Chinos */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 920;
			break;
		case 38:
			StringCopy(&Var2, "LEGS_P1_11_5" /* GXT: Navy Chinos */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 950;
			break;
		case 39:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			break;
		case 40:
			StringCopy(&Var2, "LEGS_P1_13_0" /* GXT: Silver Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 0;
			break;
		case 41:
			StringCopy(&Var2, "LEGS_P1_13_1" /* GXT: Gray Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 1;
			iVar1 = 45;
			break;
		case 42:
			StringCopy(&Var2, "LEGS_P1_13_2" /* GXT: Topaz Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 2;
			iVar1 = 48;
			break;
		case 43:
			StringCopy(&Var2, "LEGS_P1_13_3" /* GXT: Ash Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 3;
			iVar1 = 45;
			break;
		case 44:
			StringCopy(&Var2, "LEGS_P1_13_4" /* GXT: Slate Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 4;
			iVar1 = 48;
			break;
		case 45:
			StringCopy(&Var2, "LEGS_P1_13_5" /* GXT: Olive Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 5;
			iVar1 = 52;
			break;
		case 46:
			StringCopy(&Var2, "LEGS_P1_13_6" /* GXT: Jade Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 6;
			iVar1 = 55;
			break;
		case 47:
			StringCopy(&Var2, "LEGS_P1_13_7" /* GXT: Dark Green Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 7;
			iVar1 = 58;
			break;
		case 48:
			StringCopy(&Var2, "LEGS_P1_13_8" /* GXT: Teal Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 8;
			iVar1 = 60;
			break;
		case 49:
			StringCopy(&Var2, "LEGS_P1_13_9" /* GXT: Brown Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 9;
			iVar1 = 58;
			break;
		case 50:
			StringCopy(&Var2, "LEGS_P1_13_10" /* GXT: Kingz Green Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 10;
			iVar1 = 62;
			break;
		case 51:
			StringCopy(&Var2, "LEGS_P1_13_11" /* GXT: Gray Stripe Sweatpants */, 16);
			iVar3 = 13;
			iVar4 = 11;
			iVar1 = 65;
			break;
		case 52:
			StringCopy(&Var2, "LEGS_P1_14_0" /* GXT: White Shorts */, 16);
			iVar3 = 14;
			iVar4 = 0;
			break;
		case 53:
			StringCopy(&Var2, "LEGS_P1_15_0" /* GXT: Gray Plaid Pants */, 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 54:
			StringCopy(&Var2, "LEGS_P1_15_1" /* GXT: Silver Plaid Pants */, 16);
			iVar3 = 15;
			iVar4 = 1;
			break;
		case 55:
			StringCopy(&Var2, "LEGS_P1_15_2" /* GXT: Charcoal Plaid Pants */, 16);
			iVar3 = 15;
			iVar4 = 2;
			break;
		case 56:
			StringCopy(&Var2, "LEGS_P1_15_3" /* GXT: Tan Plaid Pants */, 16);
			iVar3 = 15;
			iVar4 = 3;
			break;
		case 57:
			StringCopy(&Var2, "LEGS_P1_15_4" /* GXT: Charcoal Pants */, 16);
			iVar3 = 15;
			iVar4 = 4;
			break;
		case 58:
			StringCopy(&Var2, "LEGS_P1_15_5" /* GXT: Ash Pants */, 16);
			iVar3 = 15;
			iVar4 = 5;
			break;
		case 59:
			StringCopy(&Var2, "LEGS_P1_15_6" /* GXT: Beige Pants */, 16);
			iVar3 = 15;
			iVar4 = 6;
			break;
		case 60:
			StringCopy(&Var2, "LEGS_P1_15_7" /* GXT: Cream Pants */, 16);
			iVar3 = 15;
			iVar4 = 7;
			break;
		case 61:
			StringCopy(&Var2, "LEGS_P1_15_8" /* GXT: Navy Plaid Pants */, 16);
			iVar3 = 15;
			iVar4 = 8;
			break;
		case 62:
			StringCopy(&Var2, "LEGS_P1_15_9" /* GXT: Off-White Pants */, 16);
			iVar3 = 15;
			iVar4 = 9;
			break;
		case 63:
			StringCopy(&Var2, "LEGS_P1_15_10" /* GXT: White Pants */, 16);
			iVar3 = 15;
			iVar4 = 10;
			break;
		case 64:
			StringCopy(&Var2, "LEGS_P1_15_11" /* GXT: Subtle Blue Pants */, 16);
			iVar3 = 15;
			iVar4 = 11;
			break;
		case 65:
			StringCopy(&Var2, "LEGS_P1_15_12" /* GXT: Navy Pants */, 16);
			iVar3 = 15;
			iVar4 = 12;
			break;
		case 66:
			StringCopy(&Var2, "LEGS_P1_15_13" /* GXT: Rust Pants */, 16);
			iVar3 = 15;
			iVar4 = 13;
			break;
		case 67:
			StringCopy(&Var2, "LEGS_P1_15_14" /* GXT: Green Pants */, 16);
			iVar3 = 15;
			iVar4 = 14;
			break;
		case 68:
			StringCopy(&Var2, "LEGS_P1_15_15" /* GXT: Tan Pants */, 16);
			iVar3 = 15;
			iVar4 = 15;
			break;
		case 69:
			StringCopy(&Var2, "LEGS_P1_16_0" /* GXT: Combat Pants */, 16);
			iVar3 = 16;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 70:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 16;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 71:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 72:
			StringCopy(&Var2, "LEGS_P1_18_0" /* GXT: White Boxers */, 16);
			iVar3 = 18;
			iVar4 = 0;
			break;
		case 73:
			StringCopy(&Var2, "LEGS_P1_18_1" /* GXT: Gray Boxers */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 160;
			break;
		case 74:
			StringCopy(&Var2, "LEGS_P1_18_2" /* GXT: Black Boxers */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 180;
			break;
		case 75:
			StringCopy(&Var2, "LEGS_P1_18_3" /* GXT: Kings Ash Boxers */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 180;
			break;
		case 76:
			StringCopy(&Var2, "LEGS_P1_18_4" /* GXT: Feud Green Boxers */, 16);
			iVar3 = 18;
			iVar4 = 4;
			break;
		case 77:
			StringCopy(&Var2, "LEGS_P1_18_5" /* GXT: Feud White Boxers */, 16);
			iVar3 = 18;
			iVar4 = 5;
			break;
		case 78:
			StringCopy(&Var2, "LEGS_P1_19_0" /* GXT: Black Tuxedo Pants */, 16);
			iVar3 = 19;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 79:
			StringCopy(&Var2, "LEGS_P1_20_0" /* GXT: Indigo Jeans */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 118;
			break;
		case 80:
			StringCopy(&Var2, "LEGS_P1_20_1" /* GXT: Black Jeans */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 120;
			break;
		case 81:
			StringCopy(&Var2, "LEGS_P1_20_2" /* GXT: Gray Faded Jeans */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 128;
			break;
		case 82:
			StringCopy(&Var2, "LEGS_P1_20_3" /* GXT: Navy Jeans */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 128;
			break;
		case 83:
			StringCopy(&Var2, "LEGS_P1_20_4" /* GXT: Brown Jeans */, 16);
			iVar3 = 20;
			iVar4 = 4;
			iVar1 = 130;
			break;
		case 84:
			StringCopy(&Var2, "LEGS_P1_20_5" /* GXT: Blue Jeans */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 145;
			break;
		case 85:
			StringCopy(&Var2, "LEGS_P1_20_6" /* GXT: Olive Jeans */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 138;
			break;
		case 86:
			StringCopy(&Var2, "LEGS_P1_20_7" /* GXT: Black Faded Jeans */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 132;
			break;
		case 87:
			StringCopy(&Var2, "LEGS_P1_20_8" /* GXT: Coffee Jeans */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 148;
			break;
		case 88:
			StringCopy(&Var2, "LEGS_P1_21_0" /* GXT: Indigo Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 118;
			break;
		case 89:
			StringCopy(&Var2, "LEGS_P1_21_1" /* GXT: Black Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 118;
			break;
		case 90:
			StringCopy(&Var2, "LEGS_P1_21_2" /* GXT: Aqua Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 118;
			break;
		case 91:
			StringCopy(&Var2, "LEGS_P1_21_3" /* GXT: Brown Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 129;
			break;
		case 92:
			StringCopy(&Var2, "LEGS_P1_21_4" /* GXT: Blue Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 135;
			break;
		case 93:
			StringCopy(&Var2, "LEGS_P1_21_5" /* GXT: Red Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 135;
			break;
		case 94:
			StringCopy(&Var2, "LEGS_P1_21_6" /* GXT: Gray Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 118;
			break;
		case 95:
			StringCopy(&Var2, "LEGS_P1_21_7" /* GXT: Green Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 118;
			break;
		case 96:
			StringCopy(&Var2, "LEGS_P1_21_8" /* GXT: Coffee Skinny Jeans */, 16);
			iVar3 = 21;
			iVar4 = 8;
			iVar1 = 118;
			break;
		case 97:
			StringCopy(&Var2, "LEGS_P1_22_0" /* GXT: LS Panic Charcoal Shorts */, 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar1 = 55;
			break;
		case 98:
			StringCopy(&Var2, "LEGS_P1_22_1" /* GXT: LS Panic Yellow Shorts */, 16);
			iVar3 = 22;
			iVar4 = 1;
			iVar1 = 55;
			break;
		case 99:
			StringCopy(&Var2, "LEGS_P1_22_2" /* GXT: Prolaps White Shorts */, 16);
			iVar3 = 22;
			iVar4 = 2;
			iVar1 = 59;
			break;
		case 100:
			StringCopy(&Var2, "LEGS_P1_22_3" /* GXT: Prolaps Blue Shorts */, 16);
			iVar3 = 22;
			iVar4 = 3;
			iVar1 = 59;
			break;
		case 101:
			StringCopy(&Var2, "LEGS_P1_22_4" /* GXT: LC Salamanders Red Shorts */, 16);
			iVar3 = 22;
			iVar4 = 4;
			iVar1 = 65;
			break;
		case 102:
			StringCopy(&Var2, "LEGS_P1_22_5" /* GXT: LC Salamanders Green Shorts */, 16);
			iVar3 = 22;
			iVar4 = 5;
			iVar1 = 65;
			break;
		case 103:
			StringCopy(&Var2, "LEGS_P1_22_6" /* GXT: LS Shrimps Gray Shorts */, 16);
			iVar3 = 22;
			iVar4 = 6;
			iVar1 = 69;
			break;
		case 104:
			StringCopy(&Var2, "LEGS_P1_22_7" /* GXT: LS Shrimps White Shorts */, 16);
			iVar3 = 22;
			iVar4 = 7;
			iVar1 = 69;
			break;
		case 105:
			StringCopy(&Var2, "LEGS_P1_22_8" /* GXT: LOB Gray Shorts */, 16);
			iVar3 = 22;
			iVar4 = 8;
			iVar1 = 75;
			break;
		case 106:
			StringCopy(&Var2, "LEGS_P1_22_9" /* GXT: LOB Blue Shorts */, 16);
			iVar3 = 22;
			iVar4 = 9;
			iVar1 = 75;
			break;
		case 107:
			StringCopy(&Var2, "LEGS_P1_22_10" /* GXT: LOB Green Shorts */, 16);
			iVar3 = 22;
			iVar4 = 10;
			iVar1 = 65;
			break;
		case 108:
			StringCopy(&Var2, "LEGS_P1_22_11" /* GXT: LOB Tan Shorts */, 16);
			iVar3 = 22;
			iVar4 = 11;
			iVar1 = 65;
			break;
		case 109:
			StringCopy(&Var2, "LEGS_P1_22_12" /* GXT: LOB Orange Shorts */, 16);
			iVar3 = 22;
			iVar4 = 12;
			iVar1 = 65;
			break;
		case 110:
			StringCopy(&Var2, "LEGS_P1_22_13" /* GXT: LOB Pale Blue Shorts */, 16);
			iVar3 = 22;
			iVar4 = 13;
			iVar1 = 65;
			break;
		case 111:
			StringCopy(&Var2, "LEGS_P1_23_0" /* GXT: Broker White Shorts */, 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar1 = 38;
			break;
		case 112:
			StringCopy(&Var2, "LEGS_P1_23_1" /* GXT: Broker Black Shorts */, 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar1 = 38;
			break;
		case 113:
			StringCopy(&Var2, "LEGS_P1_23_2" /* GXT: Broker Gray Shorts */, 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar1 = 28;
			break;
		case 114:
			StringCopy(&Var2, "LEGS_P1_23_3" /* GXT: Broker Navy Shorts */, 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar1 = 34;
			break;
		case 115:
			StringCopy(&Var2, "LEGS_P1_23_4" /* GXT: Broker Green Shorts */, 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar1 = 36;
			break;
		case 116:
			StringCopy(&Var2, "LEGS_P1_23_5" /* GXT: Broker Brown Shorts */, 16);
			iVar3 = 23;
			iVar4 = 5;
			iVar1 = 32;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 117, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_215(int iParam0)//Position - 0x21057
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 227:
			StringCopy(&Var2, "TORSO_P1_18_0" /* GXT: Gray Plaid Jacket */, 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 228:
			StringCopy(&Var2, "TORSO_P1_18_1" /* GXT: Ash Plaid Jacket */, 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar6 = 3;
			break;
		case 229:
			StringCopy(&Var2, "TORSO_P1_18_2" /* GXT: Charcoal Plaid Jacket */, 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar6 = 3;
			break;
		case 230:
			StringCopy(&Var2, "TORSO_P1_18_3" /* GXT: Tan Plaid Jacket */, 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar6 = 3;
			break;
		case 231:
			StringCopy(&Var2, "TORSO_P1_18_4" /* GXT: Slate Jacket */, 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar6 = 3;
			break;
		case 232:
			StringCopy(&Var2, "TORSO_P1_18_5" /* GXT: Silver Jacket */, 16);
			iVar3 = 23;
			iVar4 = 5;
			iVar6 = 3;
			break;
		case 233:
			StringCopy(&Var2, "TORSO_P1_18_6" /* GXT: Stone Jacket */, 16);
			iVar3 = 23;
			iVar4 = 6;
			iVar6 = 3;
			break;
		case 234:
			StringCopy(&Var2, "TORSO_P1_18_7" /* GXT: Cream Jacket */, 16);
			iVar3 = 23;
			iVar4 = 7;
			iVar6 = 3;
			break;
		case 235:
			StringCopy(&Var2, "TORSO_P1_18_8" /* GXT: Navy Plaid Piped Jacket */, 16);
			iVar3 = 23;
			iVar4 = 8;
			iVar6 = 3;
			break;
		case 236:
			StringCopy(&Var2, "TORSO_P1_18_9" /* GXT: Off-White Jacket */, 16);
			iVar3 = 23;
			iVar4 = 9;
			iVar6 = 3;
			break;
		case 237:
			StringCopy(&Var2, "TORSO_P1_18_10" /* GXT: Red Piped Jacket */, 16);
			iVar3 = 23;
			iVar4 = 10;
			iVar6 = 3;
			break;
		case 238:
			StringCopy(&Var2, "TORSO_P1_18_11" /* GXT: Gray Piped Jacket */, 16);
			iVar3 = 23;
			iVar4 = 11;
			iVar6 = 3;
			break;
		case 239:
			StringCopy(&Var2, "TORSO_P1_18_12" /* GXT: Navy Jacket */, 16);
			iVar3 = 23;
			iVar4 = 12;
			iVar6 = 3;
			break;
		case 240:
			StringCopy(&Var2, "TORSO_P1_18_13" /* GXT: Russet Piped Jacket */, 16);
			iVar3 = 23;
			iVar4 = 13;
			iVar6 = 3;
			break;
		case 241:
			StringCopy(&Var2, "TORSO_P1_18_14" /* GXT: Green Jacket */, 16);
			iVar3 = 23;
			iVar4 = 14;
			iVar6 = 3;
			break;
		case 242:
			StringCopy(&Var2, "TORSO_P1_18_15" /* GXT: Beige Jacket */, 16);
			iVar3 = 23;
			iVar4 = 15;
			iVar6 = 3;
			break;
		case 243:
			StringCopy(&Var2, "TORSO_P1_24_0" /* GXT: Navy Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 0;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 244:
			StringCopy(&Var2, "TORSO_P1_24_1" /* GXT: Gray Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 1;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 245:
			StringCopy(&Var2, "TORSO_P1_24_2" /* GXT: Silver Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 2;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 246:
			StringCopy(&Var2, "TORSO_P1_24_3" /* GXT: Charcoal Vest */, 16);
			iVar3 = 24;
			iVar4 = 3;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 247:
			StringCopy(&Var2, "TORSO_P1_24_4" /* GXT: Plum Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 4;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 248:
			StringCopy(&Var2, "TORSO_P1_24_5" /* GXT: All Ash Vest */, 16);
			iVar3 = 24;
			iVar4 = 5;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 249:
			StringCopy(&Var2, "TORSO_P1_24_6" /* GXT: Silverback Vest */, 16);
			iVar3 = 24;
			iVar4 = 6;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 250:
			StringCopy(&Var2, "TORSO_P1_24_7" /* GXT: Gray Subtle Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 7;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 251:
			StringCopy(&Var2, "TORSO_P1_24_8" /* GXT: Green Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 8;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 252:
			StringCopy(&Var2, "TORSO_P1_24_9" /* GXT: Ash Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 9;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 253:
			StringCopy(&Var2, "TORSO_P1_24_10" /* GXT: Stone Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 10;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 254:
			StringCopy(&Var2, "TORSO_P1_24_11" /* GXT: Charcoal Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 11;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 255:
			StringCopy(&Var2, "TORSO_P1_24_12" /* GXT: White Vest */, 16);
			iVar3 = 24;
			iVar4 = 12;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 256:
			StringCopy(&Var2, "TORSO_P1_24_13" /* GXT: Gray Vest */, 16);
			iVar3 = 24;
			iVar4 = 13;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 257:
			StringCopy(&Var2, "TORSO_P1_24_14" /* GXT: Silver Light Plaid Vest */, 16);
			iVar3 = 24;
			iVar4 = 14;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 258:
			StringCopy(&Var2, "TORSO_P1_24_15" /* GXT: All Silver Vest */, 16);
			iVar3 = 24;
			iVar4 = 15;
			iVar1 = 2200;
			iVar6 = 3;
			break;
		case 259:
			StringCopy(&Var2, "TORSO_P1_25_0" /* GXT: Gray Tuxedo Jacket */, 16);
			iVar3 = 25;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 3;
			break;
		case 260:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 0;
			iVar6 = 1;
			break;
		case 261:
			StringCopy(&Var2, "TORSO_P1_27_0" /* GXT: Brown Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 0;
			iVar1 = 150;
			break;
		case 262:
			StringCopy(&Var2, "TORSO_P1_27_1" /* GXT: Woodland Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 1;
			iVar1 = 160;
			break;
		case 263:
			StringCopy(&Var2, "TORSO_P1_27_2" /* GXT: Taupe Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 2;
			iVar1 = 150;
			break;
		case 264:
			StringCopy(&Var2, "TORSO_P1_27_3" /* GXT: Brown Woven Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 3;
			iVar1 = 150;
			break;
		case 265:
			StringCopy(&Var2, "TORSO_P1_27_4" /* GXT: Field Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 4;
			iVar1 = 160;
			break;
		case 266:
			StringCopy(&Var2, "TORSO_P1_27_5" /* GXT: Forest Shooting Vest */, 16);
			iVar3 = 27;
			iVar4 = 5;
			iVar1 = 160;
			break;
		case 267:
			StringCopy(&Var2, "TORSO_P1_28_0" /* GXT: Silver Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 0;
			iVar1 = 88;
			break;
		case 268:
			StringCopy(&Var2, "TORSO_P1_28_1" /* GXT: Ammu-Nation Camo Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 1;
			iVar1 = 60;
			break;
		case 269:
			StringCopy(&Var2, "TORSO_P1_28_2" /* GXT: LSGC Gray Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 2;
			iVar1 = 70;
			break;
		case 270:
			StringCopy(&Var2, "TORSO_P1_28_3" /* GXT: LSGC Urban Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 3;
			iVar1 = 80;
			break;
		case 271:
			StringCopy(&Var2, "TORSO_P1_28_4" /* GXT: LSGC Forest Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 4;
			iVar1 = 90;
			break;
		case 272:
			StringCopy(&Var2, "TORSO_P1_28_5" /* GXT: Ammu-Nation A Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 5;
			iVar1 = 80;
			break;
		case 273:
			StringCopy(&Var2, "TORSO_P1_28_6" /* GXT: Blauser Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 6;
			iVar1 = 70;
			break;
		case 274:
			StringCopy(&Var2, "TORSO_P1_28_7" /* GXT: Penetrators Orange Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 7;
			iVar1 = 95;
			break;
		case 275:
			StringCopy(&Var2, "TORSO_P1_28_8" /* GXT: Crevis Fluorescent Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 8;
			iVar1 = 105;
			break;
		case 276:
			StringCopy(&Var2, "TORSO_P1_28_9" /* GXT: Blue Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 9;
			iVar1 = 95;
			break;
		case 277:
			StringCopy(&Var2, "TORSO_P1_28_10" /* GXT: Green Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 10;
			iVar1 = 110;
			break;
		case 278:
			StringCopy(&Var2, "TORSO_P1_28_11" /* GXT: LS Jardineros Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 11;
			iVar1 = 98;
			break;
		case 279:
			StringCopy(&Var2, "TORSO_P1_28_12" /* GXT: Ash 18 Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 12;
			iVar1 = 88;
			break;
		case 280:
			StringCopy(&Var2, "TORSO_P1_28_13" /* GXT: Red Mist XI Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 13;
			iVar1 = 98;
			break;
		case 281:
			StringCopy(&Var2, "TORSO_P1_28_14" /* GXT: Eris Charcoal Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 14;
			iVar1 = 110;
			break;
		case 282:
			StringCopy(&Var2, "TORSO_P1_28_15" /* GXT: OG Hoodie */, 16);
			iVar3 = 28;
			iVar4 = 15;
			iVar1 = 98;
			break;
		case 283:
			StringCopy(&Var2, "TORSO_P1_29_0" /* GXT: White V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 0;
			iVar1 = 250;
			break;
		case 284:
			StringCopy(&Var2, "TORSO_P1_29_1" /* GXT: Ash V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 1;
			iVar1 = 270;
			break;
		case 285:
			StringCopy(&Var2, "TORSO_P1_29_2" /* GXT: Black V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 2;
			iVar1 = 280;
			break;
		case 286:
			StringCopy(&Var2, "TORSO_P1_29_3" /* GXT: Brown V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 3;
			iVar1 = 275;
			break;
		case 287:
			StringCopy(&Var2, "TORSO_P1_29_4" /* GXT: Olive V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 4;
			iVar1 = 290;
			break;
		case 288:
			StringCopy(&Var2, "TORSO_P1_29_5" /* GXT: Corkers V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 5;
			iVar1 = 35;
			break;
		case 289:
			StringCopy(&Var2, "TORSO_P1_29_6" /* GXT: Feud V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 6;
			iVar1 = 35;
			break;
		case 290:
			StringCopy(&Var2, "TORSO_P1_29_7" /* GXT: Magnetics V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 7;
			iVar1 = 35;
			break;
		case 291:
			StringCopy(&Var2, "TORSO_P1_29_8" /* GXT: Mint V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 8;
			iVar1 = 295;
			break;
		case 292:
			StringCopy(&Var2, "TORSO_P1_29_9" /* GXT: Harsh Souls V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 9;
			iVar1 = 35;
			break;
		case 293:
			StringCopy(&Var2, "TORSO_P1_29_10" /* GXT: Trey Baker V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 10;
			iVar1 = 35;
			break;
		case 294:
			StringCopy(&Var2, "TORSO_P1_29_11" /* GXT: Fuque V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 11;
			iVar1 = 35;
			break;
		case 295:
			StringCopy(&Var2, "TORSO_P1_29_12" /* GXT: Fellowship V Neck T-Shirt */, 16);
			iVar3 = 29;
			iVar4 = 12;
			break;
		case 296:
			StringCopy(&Var2, "TORSO_P1_30_0" /* GXT: Green Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 0;
			iVar1 = 1750;
			break;
		case 297:
			StringCopy(&Var2, "TORSO_P1_30_1" /* GXT: Gray Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 1;
			iVar1 = 1920;
			break;
		case 298:
			StringCopy(&Var2, "TORSO_P1_30_2" /* GXT: Slate Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 2;
			iVar1 = 1890;
			break;
		case 299:
			StringCopy(&Var2, "TORSO_P1_30_3" /* GXT: Blue Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 3;
			iVar1 = 1850;
			break;
		case 300:
			StringCopy(&Var2, "TORSO_P1_30_4" /* GXT: Red Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 4;
			iVar1 = 1750;
			break;
		case 301:
			StringCopy(&Var2, "TORSO_P1_30_5" /* GXT: Charcoal Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 5;
			iVar1 = 1990;
			break;
		case 302:
			StringCopy(&Var2, "TORSO_P1_30_6" /* GXT: White Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 6;
			iVar1 = 1820;
			break;
		case 303:
			StringCopy(&Var2, "TORSO_P1_30_7" /* GXT: Silver Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 7;
			iVar1 = 1990;
			break;
		case 304:
			StringCopy(&Var2, "TORSO_P1_30_8" /* GXT: Pale Blue Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 8;
			iVar1 = 1920;
			break;
		case 305:
			StringCopy(&Var2, "TORSO_P1_30_9" /* GXT: Aqua Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 9;
			iVar1 = 1850;
			break;
		case 306:
			StringCopy(&Var2, "TORSO_P1_30_10" /* GXT: Gray Two-Tone Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 10;
			iVar1 = 1990;
			break;
		case 307:
			StringCopy(&Var2, "TORSO_P1_30_11" /* GXT: Pink Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 11;
			iVar1 = 1790;
			break;
		case 308:
			StringCopy(&Var2, "TORSO_P1_30_12" /* GXT: Yellow Cardigan */, 16);
			iVar3 = 30;
			iVar4 = 12;
			iVar1 = 1790;
			break;
		case 309:
			StringCopy(&Var2, "TORSO_P1_31_0" /* GXT: LS Panic Gray Jersey */, 16);
			iVar3 = 31;
			iVar4 = 0;
			iVar1 = 69;
			break;
		case 310:
			StringCopy(&Var2, "TORSO_P1_31_1" /* GXT: LS Panic Yellow Jersey */, 16);
			iVar3 = 31;
			iVar4 = 1;
			iVar1 = 75;
			break;
		case 311:
			StringCopy(&Var2, "TORSO_P1_31_2" /* GXT: Penetrators White Jersey */, 16);
			iVar3 = 31;
			iVar4 = 2;
			iVar1 = 75;
			break;
		case 312:
			StringCopy(&Var2, "TORSO_P1_31_3" /* GXT: Penetrators Blue Jersey */, 16);
			iVar3 = 31;
			iVar4 = 3;
			iVar1 = 79;
			break;
		case 313:
			StringCopy(&Var2, "TORSO_P1_31_4" /* GXT: LC Salamanders Red Jersey */, 16);
			iVar3 = 31;
			iVar4 = 4;
			iVar1 = 79;
			break;
		case 314:
			StringCopy(&Var2, "TORSO_P1_31_5" /* GXT: LC Salamanders Green Jersey */, 16);
			iVar3 = 31;
			iVar4 = 5;
			iVar1 = 89;
			break;
		case 315:
			StringCopy(&Var2, "TORSO_P1_31_6" /* GXT: LS Shrimps Gray Jersey */, 16);
			iVar3 = 31;
			iVar4 = 6;
			iVar1 = 85;
			break;
		case 316:
			StringCopy(&Var2, "TORSO_P1_31_7" /* GXT: LS Shrimps White Jersey */, 16);
			iVar3 = 31;
			iVar4 = 7;
			iVar1 = 85;
			break;
		case 317:
			StringCopy(&Var2, "TORSO_P1_31_8" /* GXT: Uptown Riders Jersey */, 16);
			iVar3 = 31;
			iVar4 = 8;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_216(int iParam0)//Position - 0x21AFC
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 107:
			StringCopy(&Var2, "TORSO_P1_12_0" /* GXT: Snake A Jacket */, 16);
			iVar3 = 12;
			iVar4 = 0;
			iVar1 = 195;
			break;
		case 108:
			StringCopy(&Var2, "TORSO_P1_12_1" /* GXT: Eagle 69 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 1;
			iVar1 = 420;
			break;
		case 109:
			StringCopy(&Var2, "TORSO_P1_12_2" /* GXT: LS Corkers 33 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 2;
			iVar1 = 390;
			break;
		case 110:
			StringCopy(&Var2, "TORSO_P1_12_3" /* GXT: LSP 41 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 3;
			iVar1 = 450;
			break;
		case 111:
			StringCopy(&Var2, "TORSO_P1_12_4" /* GXT: LS Corkers E Jacket */, 16);
			iVar3 = 12;
			iVar4 = 4;
			iVar1 = 400;
			break;
		case 112:
			StringCopy(&Var2, "TORSO_P1_12_5" /* GXT: LS Squeezers Jacket */, 16);
			iVar3 = 12;
			iVar4 = 5;
			iVar1 = 390;
			break;
		case 113:
			StringCopy(&Var2, "TORSO_P1_12_6" /* GXT: The Feud 69 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 6;
			iVar1 = 570;
			break;
		case 114:
			StringCopy(&Var2, "TORSO_P1_12_7" /* GXT: LS Pounders Jacket */, 16);
			iVar3 = 12;
			iVar4 = 7;
			iVar1 = 390;
			break;
		case 115:
			StringCopy(&Var2, "TORSO_P1_12_8" /* GXT: SA Jacket */, 16);
			iVar3 = 12;
			iVar4 = 8;
			iVar1 = 470;
			break;
		case 116:
			StringCopy(&Var2, "TORSO_P1_12_9" /* GXT: Redwood A Jacket */, 16);
			iVar3 = 12;
			iVar4 = 9;
			iVar1 = 390;
			break;
		case 117:
			StringCopy(&Var2, "TORSO_P1_12_10" /* GXT: Uptown Riders Jacket */, 16);
			iVar3 = 12;
			iVar4 = 10;
			iVar1 = 520;
			break;
		case 118:
			StringCopy(&Var2, "TORSO_P1_12_11" /* GXT: The Feud Black Jacket */, 16);
			iVar3 = 12;
			iVar4 = 11;
			iVar1 = 490;
			break;
		case 119:
			StringCopy(&Var2, "TORSO_P1_12_12" /* GXT: Yeti Jacket */, 16);
			iVar3 = 12;
			iVar4 = 12;
			iVar1 = 490;
			break;
		case 120:
			StringCopy(&Var2, "TORSO_P1_12_13" /* GXT: LSP 71 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 13;
			iVar1 = 590;
			break;
		case 121:
			StringCopy(&Var2, "TORSO_P1_12_14" /* GXT: Dust Devils Jacket */, 16);
			iVar3 = 12;
			iVar4 = 14;
			iVar1 = 560;
			break;
		case 122:
			StringCopy(&Var2, "TORSO_P1_12_15" /* GXT: SA 56 Jacket */, 16);
			iVar3 = 12;
			iVar4 = 15;
			iVar1 = 520;
			break;
		case 123:
			StringCopy(&Var2, "TORSO_P1_13_0" /* GXT: Gray Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 0;
			break;
		case 124:
			StringCopy(&Var2, "TORSO_P1_13_1" /* GXT: Kingz of Los Santos Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 1;
			break;
		case 125:
			StringCopy(&Var2, "TORSO_P1_13_2" /* GXT: LS Black Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 2;
			break;
		case 126:
			StringCopy(&Var2, "TORSO_P1_13_3" /* GXT: Dark Blue Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 3;
			iVar1 = 90;
			break;
		case 127:
			StringCopy(&Var2, "TORSO_P1_13_4" /* GXT: LS Mustard Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 4;
			iVar1 = 85;
			break;
		case 128:
			StringCopy(&Var2, "TORSO_P1_13_5" /* GXT: Crevis Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 5;
			iVar1 = 45;
			break;
		case 129:
			StringCopy(&Var2, "TORSO_P1_13_6" /* GXT: Dust Devils Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 6;
			iVar1 = 90;
			break;
		case 130:
			StringCopy(&Var2, "TORSO_P1_13_7" /* GXT: Feud Olive Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 7;
			iVar1 = 47;
			break;
		case 131:
			StringCopy(&Var2, "TORSO_P1_13_8" /* GXT: Eris Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 8;
			iVar1 = 45;
			break;
		case 132:
			StringCopy(&Var2, "TORSO_P1_13_9" /* GXT: Hinterland Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 9;
			iVar1 = 48;
			break;
		case 133:
			StringCopy(&Var2, "TORSO_P1_13_10" /* GXT: Feud Mint Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 10;
			iVar1 = 45;
			break;
		case 134:
			StringCopy(&Var2, "TORSO_P1_13_11" /* GXT: Penetrators Gray Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 11;
			iVar1 = 85;
			break;
		case 135:
			StringCopy(&Var2, "TORSO_P1_13_12" /* GXT: Ash Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 12;
			iVar1 = 45;
			break;
		case 136:
			StringCopy(&Var2, "TORSO_P1_13_13" /* GXT: Rearwall Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 13;
			iVar1 = 47;
			break;
		case 137:
			StringCopy(&Var2, "TORSO_P1_13_14" /* GXT: Trey Baker Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 14;
			iVar1 = 45;
			break;
		case 138:
			StringCopy(&Var2, "TORSO_P1_13_15" /* GXT: Feud Camo Hoodie */, 16);
			iVar3 = 13;
			iVar4 = 15;
			iVar1 = 48;
			break;
		case 139:
			StringCopy(&Var2, "TORSO_P1_14_0" /* GXT: Gray Jacket */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 290;
			break;
		case 140:
			StringCopy(&Var2, "TORSO_P1_14_1" /* GXT: Charcoal Jacket */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 290;
			break;
		case 141:
			StringCopy(&Var2, "TORSO_P1_14_2" /* GXT: Silver Jacket */, 16);
			iVar3 = 14;
			iVar4 = 2;
			iVar1 = 290;
			break;
		case 142:
			StringCopy(&Var2, "TORSO_P1_14_3" /* GXT: Olive Jacket */, 16);
			iVar3 = 14;
			iVar4 = 3;
			iVar1 = 290;
			break;
		case 143:
			StringCopy(&Var2, "TORSO_P1_14_4" /* GXT: Brown Jacket */, 16);
			iVar3 = 14;
			iVar4 = 4;
			iVar1 = 290;
			break;
		case 144:
			StringCopy(&Var2, "TORSO_P1_14_5" /* GXT: Desert Sand Jacket */, 16);
			iVar3 = 14;
			iVar4 = 5;
			iVar1 = 290;
			break;
		case 145:
			StringCopy(&Var2, "TORSO_P1_14_6" /* GXT: Field Camo Jacket */, 16);
			iVar3 = 14;
			iVar4 = 6;
			iVar1 = 65;
			break;
		case 146:
			StringCopy(&Var2, "TORSO_P1_14_7" /* GXT: Desert Camo Jacket */, 16);
			iVar3 = 14;
			iVar4 = 7;
			iVar1 = 65;
			break;
		case 147:
			StringCopy(&Var2, "TORSO_P1_15_0" /* GXT: White T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 0;
			iVar1 = 200;
			break;
		case 148:
			StringCopy(&Var2, "TORSO_P1_15_1" /* GXT: Gray T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 1;
			iVar1 = 220;
			break;
		case 149:
			StringCopy(&Var2, "TORSO_P1_15_2" /* GXT: Slate T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 2;
			iVar1 = 220;
			break;
		case 150:
			StringCopy(&Var2, "TORSO_P1_15_3" /* GXT: Jade T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 3;
			iVar1 = 240;
			break;
		case 151:
			StringCopy(&Var2, "TORSO_P1_15_4" /* GXT: 100% T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 4;
			break;
		case 152:
			StringCopy(&Var2, "TORSO_P1_15_5" /* GXT: Navy T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 5;
			iVar1 = 250;
			break;
		case 153:
			StringCopy(&Var2, "TORSO_P1_15_6" /* GXT: Black T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 6;
			iVar1 = 260;
			break;
		case 154:
			StringCopy(&Var2, "TORSO_P1_15_7" /* GXT: LC Wrath T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 7;
			iVar1 = 40;
			break;
		case 155:
			StringCopy(&Var2, "TORSO_P1_15_8" /* GXT: LOB T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 8;
			iVar1 = 50;
			break;
		case 156:
			StringCopy(&Var2, "TORSO_P1_15_9" /* GXT: UCLS Bookworms T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 9;
			iVar1 = 45;
			break;
		case 157:
			StringCopy(&Var2, "TORSO_P1_15_10" /* GXT: Los Santos Red T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 10;
			iVar1 = 40;
			break;
		case 158:
			StringCopy(&Var2, "TORSO_P1_15_11" /* GXT: Queensbury Boxing T-Shirt */, 16);
			iVar3 = 15;
			iVar4 = 11;
			iVar1 = 55;
			break;
		case 159:
			StringCopy(&Var2, "TORSO_P1_16_0" /* GXT: Black Shirt */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 160:
			StringCopy(&Var2, "TORSO_P1_17_0" /* GXT: Blue Jacket */, 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar1 = 40;
			break;
		case 161:
			StringCopy(&Var2, "TORSO_P1_17_1" /* GXT: OG Slate Jacket */, 16);
			iVar3 = 17;
			iVar4 = 1;
			iVar1 = 50;
			break;
		case 162:
			StringCopy(&Var2, "TORSO_P1_17_2" /* GXT: OG White Jacket */, 16);
			iVar3 = 17;
			iVar4 = 2;
			break;
		case 163:
			StringCopy(&Var2, "TORSO_P1_17_3" /* GXT: Corkers Green Jacket */, 16);
			iVar3 = 17;
			iVar4 = 3;
			iVar1 = 50;
			break;
		case 164:
			StringCopy(&Var2, "TORSO_P1_17_4" /* GXT: Deep Gray Jacket */, 16);
			iVar3 = 17;
			iVar4 = 4;
			iVar1 = 50;
			break;
		case 165:
			StringCopy(&Var2, "TORSO_P1_17_5" /* GXT: Kingz Banded Jacket */, 16);
			iVar3 = 17;
			iVar4 = 5;
			iVar1 = 50;
			break;
		case 166:
			StringCopy(&Var2, "TORSO_P1_17_6" /* GXT: Stank Forest Camo Jacket */, 16);
			iVar3 = 17;
			iVar4 = 6;
			iVar1 = 50;
			break;
		case 167:
			StringCopy(&Var2, "TORSO_P1_17_7" /* GXT: Trey Baker Camo Jacket */, 16);
			iVar3 = 17;
			iVar4 = 7;
			iVar1 = 50;
			break;
		case 168:
			StringCopy(&Var2, "TORSO_P1_17_8" /* GXT: Coffee Jacket */, 16);
			iVar3 = 17;
			iVar4 = 8;
			iVar1 = 50;
			break;
		case 169:
			StringCopy(&Var2, "TORSO_P1_17_9" /* GXT: Plain Coffee Jacket */, 16);
			iVar3 = 17;
			iVar4 = 9;
			iVar1 = 50;
			break;
		case 170:
			StringCopy(&Var2, "TORSO_P1_17_10" /* GXT: Fruntalot Green Jacket */, 16);
			iVar3 = 17;
			iVar4 = 10;
			iVar1 = 50;
			break;
		case 171:
			StringCopy(&Var2, "TORSO_P1_17_11" /* GXT: Mocha Jacket */, 16);
			iVar3 = 17;
			iVar4 = 11;
			iVar1 = 50;
			break;
		case 172:
			StringCopy(&Var2, "TORSO_P1_17_12" /* GXT: Brown Jacket */, 16);
			iVar3 = 17;
			iVar4 = 12;
			iVar1 = 50;
			break;
		case 173:
			StringCopy(&Var2, "TORSO_P1_17_13" /* GXT: LS Snake Weave Jacket */, 16);
			iVar3 = 17;
			iVar4 = 13;
			iVar1 = 50;
			break;
		case 174:
			StringCopy(&Var2, "TORSO_P1_17_14" /* GXT: Feud Animal Print Jacket */, 16);
			iVar3 = 17;
			iVar4 = 14;
			iVar1 = 50;
			break;
		case 175:
			StringCopy(&Var2, "TORSO_P1_17_15" /* GXT: Fruntalot Techno Jacket */, 16);
			iVar3 = 17;
			iVar4 = 15;
			iVar1 = 50;
			break;
		case 176:
			StringCopy(&Var2, "TORSO_P1_18_0" /* GXT: Gray Plaid Jacket */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 177:
			StringCopy(&Var2, "TORSO_P1_18_1" /* GXT: Ash Plaid Jacket */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar6 = 3;
			break;
		case 178:
			StringCopy(&Var2, "TORSO_P1_18_2" /* GXT: Charcoal Plaid Jacket */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar6 = 3;
			break;
		case 179:
			StringCopy(&Var2, "TORSO_P1_18_3" /* GXT: Tan Plaid Jacket */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar6 = 3;
			break;
		case 180:
			StringCopy(&Var2, "TORSO_P1_18_4" /* GXT: Slate Jacket */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar6 = 3;
			break;
		case 181:
			StringCopy(&Var2, "TORSO_P1_18_5" /* GXT: Silver Jacket */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar6 = 3;
			break;
		case 182:
			StringCopy(&Var2, "TORSO_P1_18_6" /* GXT: Stone Jacket */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar6 = 3;
			break;
		case 183:
			StringCopy(&Var2, "TORSO_P1_18_7" /* GXT: Cream Jacket */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar6 = 3;
			break;
		case 184:
			StringCopy(&Var2, "TORSO_P1_18_8" /* GXT: Navy Plaid Piped Jacket */, 16);
			iVar3 = 18;
			iVar4 = 8;
			iVar6 = 3;
			break;
		case 185:
			StringCopy(&Var2, "TORSO_P1_18_9" /* GXT: Off-White Jacket */, 16);
			iVar3 = 18;
			iVar4 = 9;
			iVar6 = 3;
			break;
		case 186:
			StringCopy(&Var2, "TORSO_P1_18_10" /* GXT: Red Piped Jacket */, 16);
			iVar3 = 18;
			iVar4 = 10;
			iVar6 = 3;
			break;
		case 187:
			StringCopy(&Var2, "TORSO_P1_18_11" /* GXT: Gray Piped Jacket */, 16);
			iVar3 = 18;
			iVar4 = 11;
			iVar6 = 3;
			break;
		case 188:
			StringCopy(&Var2, "TORSO_P1_18_12" /* GXT: Navy Jacket */, 16);
			iVar3 = 18;
			iVar4 = 12;
			iVar6 = 3;
			break;
		case 189:
			StringCopy(&Var2, "TORSO_P1_18_13" /* GXT: Russet Piped Jacket */, 16);
			iVar3 = 18;
			iVar4 = 13;
			iVar6 = 3;
			break;
		case 190:
			StringCopy(&Var2, "TORSO_P1_18_14" /* GXT: Green Jacket */, 16);
			iVar3 = 18;
			iVar4 = 14;
			iVar6 = 3;
			break;
		case 191:
			StringCopy(&Var2, "TORSO_P1_18_15" /* GXT: Beige Jacket */, 16);
			iVar3 = 18;
			iVar4 = 15;
			iVar6 = 3;
			break;
		case 192:
			StringCopy(&Var2, "TORSO_P1_19_0" /* GXT: Blue Striped Shirt */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 193:
			StringCopy(&Var2, "TORSO_P1_19_1" /* GXT: Beige Striped Shirt */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 440;
			iVar6 = 3;
			break;
		case 194:
			StringCopy(&Var2, "TORSO_P1_19_2" /* GXT: Gray Shirt */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 440;
			iVar6 = 3;
			break;
		case 195:
			StringCopy(&Var2, "TORSO_P1_19_3" /* GXT: Slate Shirt */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 520;
			iVar6 = 3;
			break;
		case 196:
			StringCopy(&Var2, "TORSO_P1_19_4" /* GXT: Green Shirt */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 440;
			iVar6 = 3;
			break;
		case 197:
			StringCopy(&Var2, "TORSO_P1_19_5" /* GXT: Picnic Plaid Shirt */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 440;
			iVar6 = 3;
			break;
		case 198:
			StringCopy(&Var2, "TORSO_P1_19_6" /* GXT: White Shirt */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 199:
			StringCopy(&Var2, "TORSO_P1_19_7" /* GXT: Light Green Plaid Shirt */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 200:
			StringCopy(&Var2, "TORSO_P1_19_8" /* GXT: Pink Striped Shirt */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 201:
			StringCopy(&Var2, "TORSO_P1_19_9" /* GXT: Country Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 202:
			StringCopy(&Var2, "TORSO_P1_19_10" /* GXT: Off-White Striped Shirt */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 203:
			StringCopy(&Var2, "TORSO_P1_19_11" /* GXT: Russet Striped Shirt */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 480;
			iVar6 = 3;
			break;
		case 204:
			StringCopy(&Var2, "TORSO_P1_19_12" /* GXT: Sea Green Plaid Shirt */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 520;
			iVar6 = 3;
			break;
		case 205:
			StringCopy(&Var2, "TORSO_P1_19_13" /* GXT: Navy Shirt */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 520;
			iVar6 = 3;
			break;
		case 206:
			StringCopy(&Var2, "TORSO_P1_19_14" /* GXT: Brown Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 520;
			iVar6 = 3;
			break;
		case 207:
			StringCopy(&Var2, "TORSO_P1_19_15" /* GXT: Sand Check Shirt */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 440;
			iVar6 = 3;
			break;
		case 208:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 20;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 209:
			StringCopy(&Var2, "TORSO_P1_21_0" /* GXT: Black Jacket */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 220;
			break;
		case 210:
			StringCopy(&Var2, "TORSO_P1_21_1" /* GXT: Sand Jacket */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 200;
			break;
		case 211:
			StringCopy(&Var2, "TORSO_P1_21_2" /* GXT: Teal Jacket */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 240;
			break;
		case 212:
			StringCopy(&Var2, "TORSO_P1_21_3" /* GXT: Gray Jacket */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 240;
			break;
		case 213:
			StringCopy(&Var2, "TORSO_P1_21_4" /* GXT: Gray Three-Way Jacket */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 260;
			break;
		case 214:
			StringCopy(&Var2, "TORSO_P1_21_5" /* GXT: Red Accent Jacket */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 275;
			break;
		case 215:
			StringCopy(&Var2, "TORSO_P1_21_6" /* GXT: Aqua Accent Jacket */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 275;
			break;
		case 216:
			StringCopy(&Var2, "TORSO_P1_21_7" /* GXT: Brown Two-Tone Jacket */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 280;
			break;
		case 217:
			StringCopy(&Var2, "TORSO_P1_21_8" /* GXT: White Jacket */, 16);
			iVar3 = 21;
			iVar4 = 8;
			iVar1 = 280;
			break;
		case 218:
			StringCopy(&Var2, "TORSO_P1_21_9" /* GXT: Tan Two-Tone Jacket */, 16);
			iVar3 = 21;
			iVar4 = 9;
			iVar1 = 280;
			break;
		case 219:
			StringCopy(&Var2, "TORSO_P1_21_10" /* GXT: Red Jacket */, 16);
			iVar3 = 21;
			iVar4 = 10;
			iVar1 = 280;
			break;
		case 220:
			StringCopy(&Var2, "TORSO_P1_21_11" /* GXT: Olive Two-Tone Jacket */, 16);
			iVar3 = 21;
			iVar4 = 11;
			iVar1 = 280;
			break;
		case 221:
			StringCopy(&Var2, "TORSO_P1_21_12" /* GXT: Three-Way Jacket */, 16);
			iVar3 = 21;
			iVar4 = 12;
			iVar1 = 280;
			break;
		case 222:
			StringCopy(&Var2, "TORSO_P1_21_13" /* GXT: Ash Two-Tone Jacket */, 16);
			iVar3 = 21;
			iVar4 = 13;
			iVar1 = 280;
			break;
		case 223:
			StringCopy(&Var2, "TORSO_P1_22_0" /* GXT: Navy Peacoat */, 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar1 = 3100;
			iVar6 = 3;
			break;
		case 224:
			StringCopy(&Var2, "TORSO_P1_22_1" /* GXT: Gray Peacoat */, 16);
			iVar3 = 22;
			iVar4 = 1;
			iVar1 = 2800;
			iVar6 = 3;
			break;
		case 225:
			StringCopy(&Var2, "TORSO_P1_22_2" /* GXT: Brown Peacoat */, 16);
			iVar3 = 22;
			iVar4 = 2;
			iVar1 = 2500;
			iVar6 = 3;
			break;
		case 226:
			StringCopy(&Var2, "TORSO_P1_22_3" /* GXT: Black Peacoat */, 16);
			iVar3 = 22;
			iVar4 = 3;
			iVar1 = 3000;
			iVar6 = 3;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_217(int iParam0)//Position - 0x228EB
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "TORSO_P1_0_0" /* GXT: White Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "TORSO_P1_0_1" /* GXT: Black Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "TORSO_P1_0_2" /* GXT: Gray Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 180;
			break;
		case 3:
			StringCopy(&Var2, "TORSO_P1_0_3" /* GXT: Feud Green Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 22;
			break;
		case 4:
			StringCopy(&Var2, "TORSO_P1_0_4" /* GXT: Fruntalot Jade Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar1 = 20;
			break;
		case 5:
			StringCopy(&Var2, "TORSO_P1_0_5" /* GXT: Fruntalot Brown Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar1 = 18;
			break;
		case 6:
			StringCopy(&Var2, "TORSO_P1_0_6" /* GXT: Broker Blue Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 6;
			iVar1 = 19;
			break;
		case 7:
			StringCopy(&Var2, "TORSO_P1_0_7" /* GXT: Kingz Green Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 7;
			iVar1 = 22;
			break;
		case 8:
			StringCopy(&Var2, "TORSO_P1_0_8" /* GXT: Broker Gray Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 8;
			iVar1 = 20;
			break;
		case 9:
			StringCopy(&Var2, "TORSO_P1_0_9" /* GXT: Harsh Souls Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 9;
			iVar1 = 19;
			break;
		case 10:
			StringCopy(&Var2, "TORSO_P1_0_10" /* GXT: Sweatbox Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 10;
			iVar1 = 19;
			break;
		case 11:
			StringCopy(&Var2, "TORSO_P1_0_11" /* GXT: White Ringer Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 11;
			iVar1 = 18;
			break;
		case 12:
			StringCopy(&Var2, "TORSO_P1_0_12" /* GXT: Rearwall Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 12;
			iVar1 = 20;
			break;
		case 13:
			StringCopy(&Var2, "TORSO_P1_0_13" /* GXT: Feud 3 Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 13;
			iVar1 = 22;
			break;
		case 14:
			StringCopy(&Var2, "TORSO_P1_0_14" /* GXT: Kingz Charcoal Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 14;
			iVar1 = 19;
			break;
		case 15:
			StringCopy(&Var2, "TORSO_P1_0_15" /* GXT: Feud White Tank Top */, 16);
			iVar3 = 0;
			iVar4 = 15;
			iVar1 = 22;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 1;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 2;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 3;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 4;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 5;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 22:
			StringCopy(&Var2, "TORSO_P1_2_0" /* GXT: White Tuxedo Jacket */, 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 3;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 1;
			break;
		case 24:
			StringCopy(&Var2, "TORSO_P1_4_0" /* GXT: White OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar1 = 20;
			iVar6 = 2;
			break;
		case 25:
			StringCopy(&Var2, "TORSO_P1_4_1" /* GXT: Black OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 1;
			iVar1 = 22;
			iVar6 = 2;
			break;
		case 26:
			StringCopy(&Var2, "TORSO_P1_4_2" /* GXT: Ash OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 2;
			iVar1 = 20;
			iVar6 = 2;
			break;
		case 27:
			StringCopy(&Var2, "TORSO_P1_4_3" /* GXT: LC Swingers OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 3;
			iVar1 = 25;
			iVar6 = 2;
			break;
		case 28:
			StringCopy(&Var2, "TORSO_P1_4_4" /* GXT: Corkers Red OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 4;
			iVar1 = 23;
			iVar6 = 2;
			break;
		case 29:
			StringCopy(&Var2, "TORSO_P1_4_5" /* GXT: Corkers Green OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 5;
			iVar1 = 25;
			iVar6 = 2;
			break;
		case 30:
			StringCopy(&Var2, "TORSO_P1_4_6" /* GXT: Uptown Riders OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 6;
			iVar1 = 28;
			iVar6 = 2;
			break;
		case 31:
			StringCopy(&Var2, "TORSO_P1_4_7" /* GXT: Feud White OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 7;
			iVar1 = 26;
			iVar6 = 2;
			break;
		case 32:
			StringCopy(&Var2, "TORSO_P1_4_8" /* GXT: Salamanders OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 8;
			iVar1 = 24;
			iVar6 = 2;
			break;
		case 33:
			StringCopy(&Var2, "TORSO_P1_4_9" /* GXT: LC Rampage OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 9;
			iVar1 = 27;
			iVar6 = 2;
			break;
		case 34:
			StringCopy(&Var2, "TORSO_P1_4_10" /* GXT: Dust Devils OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 10;
			iVar1 = 29;
			iVar6 = 2;
			break;
		case 35:
			StringCopy(&Var2, "TORSO_P1_4_11" /* GXT: LS Gray OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 11;
			iVar1 = 28;
			iVar6 = 2;
			break;
		case 36:
			StringCopy(&Var2, "TORSO_P1_4_12" /* GXT: Los Santos Black OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 12;
			iVar1 = 25;
			iVar6 = 2;
			break;
		case 37:
			StringCopy(&Var2, "TORSO_P1_4_13" /* GXT: Los Santos White OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 13;
			iVar1 = 22;
			iVar6 = 2;
			break;
		case 38:
			StringCopy(&Var2, "TORSO_P1_4_14" /* GXT: Pounders OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 14;
			iVar1 = 27;
			iVar6 = 2;
			break;
		case 39:
			StringCopy(&Var2, "TORSO_P1_4_15" /* GXT: Feud Black OG T-Shirt */, 16);
			iVar3 = 4;
			iVar4 = 15;
			iVar1 = 29;
			iVar6 = 2;
			break;
		case 40:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			iVar6 = 4;
			break;
		case 41:
			StringCopy(&Var2, "TORSO_P1_6_0" /* GXT: Pine Striped Sweater */, 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 42:
			StringCopy(&Var2, "TORSO_P1_6_1" /* GXT: Yellow Sweater */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 1270;
			iVar6 = 3;
			break;
		case 43:
			StringCopy(&Var2, "TORSO_P1_6_2" /* GXT: Blue Sweater */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 1270;
			iVar6 = 3;
			break;
		case 44:
			StringCopy(&Var2, "TORSO_P1_6_3" /* GXT: Sand Striped Sweater */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 1270;
			iVar6 = 3;
			break;
		case 45:
			StringCopy(&Var2, "TORSO_P1_6_4" /* GXT: Silver Sweater */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 1090;
			iVar6 = 3;
			break;
		case 46:
			StringCopy(&Var2, "TORSO_P1_6_5" /* GXT: Gray Sweater */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 1090;
			iVar6 = 3;
			break;
		case 47:
			StringCopy(&Var2, "TORSO_P1_6_6" /* GXT: Navy Argyle Sweater */, 16);
			iVar3 = 6;
			iVar4 = 6;
			iVar1 = 1120;
			iVar6 = 3;
			break;
		case 48:
			StringCopy(&Var2, "TORSO_P1_6_7" /* GXT: Sand Sweater */, 16);
			iVar3 = 6;
			iVar4 = 7;
			iVar1 = 1120;
			iVar6 = 3;
			break;
		case 49:
			StringCopy(&Var2, "TORSO_P1_6_8" /* GXT: Salmon Pink Sweater */, 16);
			iVar3 = 6;
			iVar4 = 8;
			iVar1 = 1290;
			iVar6 = 3;
			break;
		case 50:
			StringCopy(&Var2, "TORSO_P1_6_9" /* GXT: Turquoise Sweater */, 16);
			iVar3 = 6;
			iVar4 = 9;
			iVar1 = 1290;
			iVar6 = 3;
			break;
		case 51:
			StringCopy(&Var2, "TORSO_P1_6_10" /* GXT: Green Sweater */, 16);
			iVar3 = 6;
			iVar4 = 10;
			iVar1 = 1320;
			iVar6 = 3;
			break;
		case 52:
			StringCopy(&Var2, "TORSO_P1_6_11" /* GXT: Amethyst Sweater */, 16);
			iVar3 = 6;
			iVar4 = 11;
			iVar1 = 1320;
			iVar6 = 3;
			break;
		case 53:
			StringCopy(&Var2, "TORSO_P1_6_12" /* GXT: Yellow Argyle Sweater */, 16);
			iVar3 = 6;
			iVar4 = 12;
			iVar1 = 1590;
			iVar6 = 3;
			break;
		case 54:
			StringCopy(&Var2, "TORSO_P1_6_13" /* GXT: Gray Two-Tone Sweater */, 16);
			iVar3 = 6;
			iVar4 = 13;
			iVar1 = 1590;
			iVar6 = 3;
			break;
		case 55:
			StringCopy(&Var2, "TORSO_P1_6_14" /* GXT: Sand Argyle Sweater */, 16);
			iVar3 = 6;
			iVar4 = 14;
			iVar1 = 1590;
			iVar6 = 3;
			break;
		case 56:
			StringCopy(&Var2, "TORSO_P1_6_15" /* GXT: Charcoal Sweater */, 16);
			iVar3 = 6;
			iVar4 = 15;
			iVar1 = 1320;
			iVar6 = 3;
			break;
		case 57:
			StringCopy(&Var2, "TORSO_P1_7_0" /* GXT: Ash Shirt */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 98;
			break;
		case 58:
			StringCopy(&Var2, "TORSO_P1_7_1" /* GXT: Gray Shirt */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 98;
			break;
		case 59:
			StringCopy(&Var2, "TORSO_P1_7_2" /* GXT: Black Shirt */, 16);
			iVar3 = 7;
			iVar4 = 2;
			iVar1 = 110;
			break;
		case 60:
			StringCopy(&Var2, "TORSO_P1_7_3" /* GXT: Silver Shirt */, 16);
			iVar3 = 7;
			iVar4 = 3;
			iVar1 = 110;
			break;
		case 61:
			StringCopy(&Var2, "TORSO_P1_7_4" /* GXT: White Shirt */, 16);
			iVar3 = 7;
			iVar4 = 4;
			iVar1 = 118;
			break;
		case 62:
			StringCopy(&Var2, "TORSO_P1_7_5" /* GXT: Olive Shirt */, 16);
			iVar3 = 7;
			iVar4 = 5;
			iVar1 = 120;
			break;
		case 63:
			StringCopy(&Var2, "TORSO_P1_7_6" /* GXT: Navy Shirt */, 16);
			iVar3 = 7;
			iVar4 = 6;
			iVar1 = 120;
			break;
		case 64:
			StringCopy(&Var2, "TORSO_P1_7_7" /* GXT: Red Shirt */, 16);
			iVar3 = 7;
			iVar4 = 7;
			iVar1 = 129;
			break;
		case 65:
			StringCopy(&Var2, "TORSO_P1_7_8" /* GXT: Tan Check Shirt */, 16);
			iVar3 = 7;
			iVar4 = 8;
			iVar1 = 125;
			break;
		case 66:
			StringCopy(&Var2, "TORSO_P1_7_9" /* GXT: Beige Gingham Shirt */, 16);
			iVar3 = 7;
			iVar4 = 9;
			iVar1 = 125;
			break;
		case 67:
			StringCopy(&Var2, "TORSO_P1_7_10" /* GXT: Gray Gingham Shirt */, 16);
			iVar3 = 7;
			iVar4 = 10;
			iVar1 = 129;
			break;
		case 68:
			StringCopy(&Var2, "TORSO_P1_7_11" /* GXT: Gray Check Shirt */, 16);
			iVar3 = 7;
			iVar4 = 11;
			iVar1 = 129;
			break;
		case 69:
			StringCopy(&Var2, "TORSO_P1_7_12" /* GXT: Blue Shirt */, 16);
			iVar3 = 7;
			iVar4 = 12;
			iVar1 = 135;
			break;
		case 70:
			StringCopy(&Var2, "TORSO_P1_7_13" /* GXT: Off-White Shirt */, 16);
			iVar3 = 7;
			iVar4 = 13;
			iVar1 = 139;
			break;
		case 71:
			StringCopy(&Var2, "TORSO_P1_7_14" /* GXT: Pastel Check Shirt */, 16);
			iVar3 = 7;
			iVar4 = 14;
			iVar1 = 145;
			break;
		case 72:
			StringCopy(&Var2, "TORSO_P1_7_15" /* GXT: Fruity Check Shirt */, 16);
			iVar3 = 7;
			iVar4 = 15;
			iVar1 = 145;
			break;
		case 73:
			StringCopy(&Var2, "TORSO_P1_8_0" /* GXT: Blue Shirt */, 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 74:
			StringCopy(&Var2, "TORSO_P1_8_1" /* GXT: Yellow Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 1;
			break;
		case 75:
			StringCopy(&Var2, "TORSO_P1_8_2" /* GXT: Off-White Striped Shirt */, 16);
			iVar3 = 8;
			iVar4 = 2;
			break;
		case 76:
			StringCopy(&Var2, "TORSO_P1_8_3" /* GXT: Off-White Shirt */, 16);
			iVar3 = 8;
			iVar4 = 3;
			break;
		case 77:
			StringCopy(&Var2, "TORSO_P1_8_4" /* GXT: Red Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 30;
			break;
		case 78:
			StringCopy(&Var2, "TORSO_P1_8_5" /* GXT: Charcoal Shirt */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 38;
			break;
		case 79:
			StringCopy(&Var2, "TORSO_P1_8_6" /* GXT: Blue Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 32;
			break;
		case 80:
			StringCopy(&Var2, "TORSO_P1_8_7" /* GXT: Gingham Shirt */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 30;
			break;
		case 81:
			StringCopy(&Var2, "TORSO_P1_8_8" /* GXT: Aqua Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 8;
			iVar1 = 33;
			break;
		case 82:
			StringCopy(&Var2, "TORSO_P1_8_9" /* GXT: Orange Shirt */, 16);
			iVar3 = 8;
			iVar4 = 9;
			iVar1 = 35;
			break;
		case 83:
			StringCopy(&Var2, "TORSO_P1_8_10" /* GXT: Mint Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 10;
			iVar1 = 35;
			break;
		case 84:
			StringCopy(&Var2, "TORSO_P1_8_11" /* GXT: Dark Gray Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 11;
			iVar1 = 38;
			break;
		case 85:
			StringCopy(&Var2, "TORSO_P1_8_12" /* GXT: Purple Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 12;
			iVar1 = 33;
			break;
		case 86:
			StringCopy(&Var2, "TORSO_P1_8_13" /* GXT: Olive Shirt */, 16);
			iVar3 = 8;
			iVar4 = 13;
			iVar1 = 35;
			break;
		case 87:
			StringCopy(&Var2, "TORSO_P1_8_14" /* GXT: Cream Shirt */, 16);
			iVar3 = 8;
			iVar4 = 14;
			iVar1 = 38;
			break;
		case 88:
			StringCopy(&Var2, "TORSO_P1_8_15" /* GXT: Fruity Check Shirt */, 16);
			iVar3 = 8;
			iVar4 = 15;
			iVar1 = 32;
			break;
		case 89:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 90:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 91:
			StringCopy(&Var2, "TORSO_P1_11_0" /* GXT: White Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 92:
			StringCopy(&Var2, "TORSO_P1_11_1" /* GXT: Gray Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar1 = 59;
			break;
		case 93:
			StringCopy(&Var2, "TORSO_P1_11_2" /* GXT: Black Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 2;
			break;
		case 94:
			StringCopy(&Var2, "TORSO_P1_11_3" /* GXT: Ten Off Yellow Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar1 = 25;
			break;
		case 95:
			StringCopy(&Var2, "TORSO_P1_11_4" /* GXT: Kingz Of Los Santos Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar1 = 29;
			break;
		case 96:
			StringCopy(&Var2, "TORSO_P1_11_5" /* GXT: Yeti Rainbow Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar1 = 27;
			break;
		case 97:
			StringCopy(&Var2, "TORSO_P1_11_6" /* GXT: Ten Off Red Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar1 = 25;
			break;
		case 98:
			StringCopy(&Var2, "TORSO_P1_11_7" /* GXT: Trey Baker Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar1 = 27;
			break;
		case 99:
			StringCopy(&Var2, "TORSO_P1_11_8" /* GXT: Stank Striped Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 8;
			iVar1 = 28;
			break;
		case 100:
			StringCopy(&Var2, "TORSO_P1_11_9" /* GXT: Feud Olive Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 9;
			iVar1 = 30;
			break;
		case 101:
			StringCopy(&Var2, "TORSO_P1_11_10" /* GXT: Yeti Gray Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 10;
			iVar1 = 29;
			break;
		case 102:
			StringCopy(&Var2, "TORSO_P1_11_11" /* GXT: Yogarishima Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 11;
			iVar1 = 27;
			break;
		case 103:
			StringCopy(&Var2, "TORSO_P1_11_12" /* GXT: Yeti Camo Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 12;
			iVar1 = 29;
			break;
		case 104:
			StringCopy(&Var2, "TORSO_P1_11_13" /* GXT: Crevis White Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 13;
			iVar1 = 32;
			break;
		case 105:
			StringCopy(&Var2, "TORSO_P1_11_14" /* GXT: Yeti Blue Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 14;
			iVar1 = 30;
			break;
		case 106:
			StringCopy(&Var2, "TORSO_P1_11_15" /* GXT: Uptown Ryders Longsleeve */, 16);
			iVar3 = 11;
			iVar4 = 15;
			iVar1 = 28;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_218(int iParam0)//Position - 0x23534
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 2;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "HAIR_P1_0_0" /* GXT: Fade */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "HAIR_P1_0_1" /* GXT: Triple Rails */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "HAIR_P1_0_2" /* GXT: Side Shaded */, 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "HAIR_P1_0_3" /* GXT: Wavy Siderows */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar6 = 3;
			break;
		case 4:
			StringCopy(&Var2, "HAIR_P1_0_4" /* GXT: Snakes */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar6 = 3;
			break;
		case 5:
			StringCopy(&Var2, "HAIR_P1_0_5" /* GXT: Tramlines */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar6 = 3;
			break;
		case 6:
			StringCopy(&Var2, "HAIR_P1_0_6" /* GXT: The King Fresh */, 16);
			iVar3 = 0;
			iVar4 = 6;
			iVar6 = 3;
			break;
		case 7:
			StringCopy(&Var2, "HAIR_P1_0_7" /* GXT: Star Kutz */, 16);
			iVar3 = 0;
			iVar4 = 7;
			iVar6 = 3;
			break;
		case 8:
			StringCopy(&Var2, "HAIR_P1_0_8" /* GXT: Tigerized */, 16);
			iVar3 = 0;
			iVar4 = 8;
			iVar6 = 3;
			break;
		case 9:
			StringCopy(&Var2, "HAIR_P1_0_9" /* GXT: Abstraction */, 16);
			iVar3 = 0;
			iVar4 = 9;
			iVar6 = 3;
			break;
		case 10:
			StringCopy(&Var2, "HAIR_P1_0_10" /* GXT: Shutters */, 16);
			iVar3 = 0;
			iVar4 = 10;
			iVar6 = 3;
			break;
		case 11:
			StringCopy(&Var2, "HAIR_P1_0_11" /* GXT: Berms */, 16);
			iVar3 = 0;
			iVar4 = 11;
			iVar6 = 3;
			break;
		case 12:
			StringCopy(&Var2, "HAIR_P1_0_12" /* GXT: Mellowplex */, 16);
			iVar3 = 0;
			iVar4 = 12;
			iVar6 = 3;
			break;
		case 13:
			StringCopy(&Var2, "HAIR_P1_0_13" /* GXT: The Feud */, 16);
			iVar3 = 0;
			iVar4 = 13;
			break;
		case 14:
			StringCopy(&Var2, "HAIR_P1_0_14" /* GXT: Business on Top */, 16);
			iVar3 = 0;
			iVar4 = 14;
			iVar6 = 3;
			break;
		case 15:
			StringCopy(&Var2, "HAIR_P1_0_15" /* GXT: Wild Palm */, 16);
			iVar3 = 0;
			iVar4 = 15;
			iVar6 = 3;
			break;
		case 16:
			StringCopy(&Var2, "HAIR_P1_1_0" /* GXT: Lo Fro */, 16);
			iVar3 = 1;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 17:
			StringCopy(&Var2, "HAIR_P1_2_0" /* GXT: Blowout */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 18:
			StringCopy(&Var2, "HAIR_P1_3_0" /* GXT: Cornrows */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar6 = 3;
			break;
		case 19:
			StringCopy(&Var2, "HAIR_P1_4_0" /* GXT: Shape-up */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 21, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_219(int iParam0)//Position - 0x237AD
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 0;
	Global_78130[0 /*14*/].f_5 = 1;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 6;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 7;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 8;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 9;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 10, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_220(int iParam0)//Position - 0x239E3
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 14;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 6;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 7;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 8;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 11:
			StringCopy(&Var2, "PROPS_P0_H1" /* GXT: Blue Baseball Cap */, 16);
			iVar3 = 1;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 12:
			StringCopy(&Var2, "PROPS_P0_H2" /* GXT: White Hockey Mask */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar1 = 320;
			iVar5 = 11;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 27:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar5 = 0;
			break;
		case 28:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar5 = 0;
			break;
		case 29:
			StringCopy(&Var2, "PROPS_P0_H12" /* GXT: Black Knitted Hat */, 16);
			iVar3 = 12;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 31:
			StringCopy(&Var2, "PROPS_P1_H8_0" /* GXT: Green Monster Mask */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 32:
			StringCopy(&Var2, "PROPS_P1_H8_1" /* GXT: Red Monster Mask */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 33:
			StringCopy(&Var2, "PROPS_P1_H9_0" /* GXT: Pig Mask */, 16);
			iVar3 = 15;
			iVar4 = 0;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 34:
			StringCopy(&Var2, "PROPS_P1_H9_1" /* GXT: Dark Pig Mask */, 16);
			iVar3 = 15;
			iVar4 = 1;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 35:
			StringCopy(&Var2, "PROPS_P1_H10_0" /* GXT: Silver Skull Mask */, 16);
			iVar3 = 16;
			iVar4 = 0;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 36:
			StringCopy(&Var2, "PROPS_P1_H10_1" /* GXT: Bone Skull Mask */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 37:
			StringCopy(&Var2, "PROPS_P1_H11_0" /* GXT: Space Monkey Mask */, 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar1 = 450;
			iVar5 = 0;
			break;
		case 38:
			StringCopy(&Var2, "PROPS_P1_H12_0" /* GXT: White Hockey Mask */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 39:
			StringCopy(&Var2, "PROPS_P1_H12_1" /* GXT: Red Hockey Mask */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 40:
			StringCopy(&Var2, "PROPS_P1_H13_0" /* GXT: Ape Mask */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 41:
			StringCopy(&Var2, "PROPS_P1_H13_1" /* GXT: Dark Ape Mask */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 42:
			StringCopy(&Var2, "PROPS_P1_H14_0" /* GXT: Carnival Orange Mask */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 43:
			StringCopy(&Var2, "PROPS_P1_H14_1" /* GXT: Carnival White Mask */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 44:
			StringCopy(&Var2, "PROPS_P1_H14_2" /* GXT: Carnival Blue Mask */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 45:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 47:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 48:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 49:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 50:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 51:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 52:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 53:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 24;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 54:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 25;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 55:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 56:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 27;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 57:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 28;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 58:
			StringCopy(&Var2, "PROPS_P0_E0" /* GXT: Black-Rimmed Glasses */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 45;
			iVar5 = 10;
			break;
		case 59:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 10;
			break;
		case 60:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 10;
			break;
		case 61:
			StringCopy(&Var2, "PROPS_P0_E3" /* GXT: Copper Sports Shades */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 62:
			StringCopy(&Var2, "PROPS_P0_E4" /* GXT: Enema Brown Glasses */, 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 63:
			StringCopy(&Var2, "PROPS_P0_E4_1" /* GXT: Enema Gray Glasses */, 16);
			iVar3 = 4;
			iVar4 = 1;
			iVar1 = 56;
			iVar5 = 10;
			break;
		case 64:
			StringCopy(&Var2, "PROPS_P0_E4_2" /* GXT: Enema Black Glasses */, 16);
			iVar3 = 4;
			iVar4 = 2;
			iVar1 = 60;
			iVar5 = 10;
			break;
		case 65:
			StringCopy(&Var2, "PROPS_P0_E4_3" /* GXT: Enema Tortoiseshell Glasses */, 16);
			iVar3 = 4;
			iVar4 = 3;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 66:
			StringCopy(&Var2, "PROPS_P0_E4_4" /* GXT: Enema Coffee Glasses */, 16);
			iVar3 = 4;
			iVar4 = 4;
			iVar1 = 62;
			iVar5 = 10;
			break;
		case 67:
			StringCopy(&Var2, "PROPS_P0_E4_5" /* GXT: Enema Walnut Glasses */, 16);
			iVar3 = 4;
			iVar4 = 5;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 68:
			StringCopy(&Var2, "PROPS_P0_E4_6" /* GXT: Enema Silver Accent Glasses */, 16);
			iVar3 = 4;
			iVar4 = 6;
			iVar1 = 68;
			iVar5 = 10;
			break;
		case 69:
			StringCopy(&Var2, "PROPS_P0_E4_7" /* GXT: Enema Smoke Glasses */, 16);
			iVar3 = 4;
			iVar4 = 7;
			iVar1 = 68;
			iVar5 = 10;
			break;
		case 70:
			StringCopy(&Var2, "PROPS_P0_E5" /* GXT: Farshtunken Gold Aviators */, 16);
			iVar3 = 5;
			iVar4 = 0;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 71:
			StringCopy(&Var2, "PROPS_P0_E5_1" /* GXT: Farshtunken Purple Aviators */, 16);
			iVar3 = 5;
			iVar4 = 1;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 72:
			StringCopy(&Var2, "PROPS_P0_E5_2" /* GXT: Farshtunken Silver Aviators */, 16);
			iVar3 = 5;
			iVar4 = 2;
			iVar1 = 72;
			iVar5 = 10;
			break;
		case 73:
			StringCopy(&Var2, "PROPS_P0_E5_3" /* GXT: Farshtunken Gray Aviators */, 16);
			iVar3 = 5;
			iVar4 = 3;
			iVar1 = 70;
			iVar5 = 10;
			break;
		case 74:
			StringCopy(&Var2, "PROPS_P0_E5_4" /* GXT: Farshtunken Blue Aviators */, 16);
			iVar3 = 5;
			iVar4 = 4;
			iVar1 = 74;
			iVar5 = 10;
			break;
		case 75:
			StringCopy(&Var2, "PROPS_P0_E5_5" /* GXT: Farshtunken Tinted Aviators */, 16);
			iVar3 = 5;
			iVar4 = 5;
			iVar1 = 78;
			iVar5 = 10;
			break;
		case 76:
			StringCopy(&Var2, "PROPS_P0_E5_6" /* GXT: Farshtunken Steel Aviators */, 16);
			iVar3 = 5;
			iVar4 = 6;
			iVar1 = 82;
			iVar5 = 10;
			break;
		case 77:
			StringCopy(&Var2, "PROPS_P0_E5_7" /* GXT: Farshtunken Sepia Aviators */, 16);
			iVar3 = 5;
			iVar4 = 7;
			iVar1 = 85;
			iVar5 = 10;
			break;
		case 78:
			StringCopy(&Var2, "PROPS_P0_E5_8" /* GXT: Farshtunken Black Aviators */, 16);
			iVar3 = 5;
			iVar4 = 8;
			iVar1 = 85;
			iVar5 = 10;
			break;
		case 79:
			StringCopy(&Var2, "PROPS_P0_E5_9" /* GXT: Farshtunken Smoke Aviators */, 16);
			iVar3 = 5;
			iVar4 = 9;
			iVar5 = 10;
			break;
		case 80:
			StringCopy(&Var2, "PROPS_P0_E6" /* GXT: Tung Charcoal Shades */, 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 81:
			StringCopy(&Var2, "PROPS_P0_E6_1" /* GXT: Tung Ash Shades */, 16);
			iVar3 = 6;
			iVar4 = 1;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 82:
			StringCopy(&Var2, "PROPS_P0_E6_2" /* GXT: Tung Gray Shades */, 16);
			iVar3 = 6;
			iVar4 = 2;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 83:
			StringCopy(&Var2, "PROPS_P0_E6_3" /* GXT: Tung Red Shades */, 16);
			iVar3 = 6;
			iVar4 = 3;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 84:
			StringCopy(&Var2, "PROPS_P0_E6_4" /* GXT: Tung Blue Shades */, 16);
			iVar3 = 6;
			iVar4 = 4;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 85:
			StringCopy(&Var2, "PROPS_P0_E6_5" /* GXT: Tung Yellow Shades */, 16);
			iVar3 = 6;
			iVar4 = 5;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 86:
			StringCopy(&Var2, "PROPS_P0_E6_6" /* GXT: Tung Black Shades */, 16);
			iVar3 = 6;
			iVar4 = 6;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 87:
			StringCopy(&Var2, "PROPS_P0_E6_7" /* GXT: Tung Rosy Shades */, 16);
			iVar3 = 6;
			iVar4 = 7;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 88:
			StringCopy(&Var2, "PROPS_P0_E6_8" /* GXT: Tung Hornet Shades */, 16);
			iVar3 = 6;
			iVar4 = 8;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 89:
			StringCopy(&Var2, "PROPS_P0_E6_9" /* GXT: Tung Two-Tone Shades */, 16);
			iVar3 = 6;
			iVar4 = 9;
			iVar1 = 69;
			iVar5 = 10;
			break;
		case 90:
			StringCopy(&Var2, "PROPS_P0_E7" /* GXT: Swimming Goggles */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 91:
			StringCopy(&Var2, "PROPS_P0_E8" /* GXT: Rimmers Azure Aviators */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 170;
			iVar5 = 10;
			break;
		case 92:
			StringCopy(&Var2, "PROPS_P0_E8_1" /* GXT: Rimmers Smoke Aviators */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 93:
			StringCopy(&Var2, "PROPS_P0_E8_2" /* GXT: Rimmers Yellow Aviators */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 180;
			iVar5 = 10;
			break;
		case 94:
			StringCopy(&Var2, "PROPS_P0_E8_3" /* GXT: Rimmers Topaz Aviators */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 185;
			iVar5 = 10;
			break;
		case 95:
			StringCopy(&Var2, "PROPS_P0_E8_4" /* GXT: Rimmers Tinted Aviators */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 189;
			iVar5 = 10;
			break;
		case 96:
			StringCopy(&Var2, "PROPS_P0_E8_5" /* GXT: Rimmers Steel Aviators */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 195;
			iVar5 = 10;
			break;
		case 97:
			StringCopy(&Var2, "PROPS_P0_E8_6" /* GXT: Rimmers Indigo Aviators */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 235;
			iVar5 = 10;
			break;
		case 98:
			StringCopy(&Var2, "PROPS_P0_E8_7" /* GXT: Rimmers Chocolate Aviators */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 245;
			iVar5 = 10;
			break;
		case 99:
			StringCopy(&Var2, "PROPS_P0_E8_8" /* GXT: Rimmers Sepia Aviators */, 16);
			iVar3 = 8;
			iVar4 = 8;
			iVar1 = 250;
			iVar5 = 10;
			break;
		case 100:
			StringCopy(&Var2, "PROPS_P0_E8_9" /* GXT: Rimmers Slate Aviators */, 16);
			iVar3 = 8;
			iVar4 = 9;
			iVar1 = 275;
			iVar5 = 10;
			break;
		case 101:
			StringCopy(&Var2, "PROPS_P0_E8_10" /* GXT: Rimmers Gold Aviators */, 16);
			iVar3 = 8;
			iVar4 = 10;
			iVar1 = 280;
			iVar5 = 10;
			break;
		case 102:
			StringCopy(&Var2, "PROPS_P0_E8_11" /* GXT: Rimmers Blue Aviators */, 16);
			iVar3 = 8;
			iVar4 = 11;
			iVar1 = 295;
			iVar5 = 10;
			break;
		case 103:
			StringCopy(&Var2, "PROPS_P0_E9" /* GXT: Hawaiian Snow Black Shades */, 16);
			iVar3 = 9;
			iVar4 = 0;
			iVar1 = 179;
			iVar5 = 10;
			break;
		case 104:
			StringCopy(&Var2, "PROPS_P0_E9_1" /* GXT: Hawaiian Snow Charcoal Shades */, 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar1 = 159;
			iVar5 = 10;
			break;
		case 105:
			StringCopy(&Var2, "PROPS_P0_E9_2" /* GXT: Hawaiian Snow Ash Shades */, 16);
			iVar3 = 9;
			iVar4 = 2;
			iVar1 = 165;
			iVar5 = 10;
			break;
		case 106:
			StringCopy(&Var2, "PROPS_P0_E9_3" /* GXT: Hawaiian Snow Gray Shades */, 16);
			iVar3 = 9;
			iVar4 = 3;
			iVar1 = 155;
			iVar5 = 10;
			break;
		case 107:
			StringCopy(&Var2, "PROPS_P0_E9_4" /* GXT: Hawaiian Snow Tan Shades */, 16);
			iVar3 = 9;
			iVar4 = 4;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 108:
			StringCopy(&Var2, "PROPS_P0_E9_5" /* GXT: Hawaiian Snow Tortoiseshell Shades */, 16);
			iVar3 = 9;
			iVar4 = 5;
			iVar1 = 185;
			iVar5 = 10;
			break;
		case 109:
			StringCopy(&Var2, "PROPS_P0_E9_6" /* GXT: Hawaiian Snow Walnut Shades */, 16);
			iVar3 = 9;
			iVar4 = 6;
			iVar1 = 189;
			iVar5 = 10;
			break;
		case 110:
			StringCopy(&Var2, "PROPS_P0_E9_7" /* GXT: Hawaiian Snow Marbled Shades */, 16);
			iVar3 = 9;
			iVar4 = 7;
			iVar1 = 225;
			iVar5 = 10;
			break;
		case 111:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			iVar1 = 100;
			iVar5 = 10;
			break;
		case 112:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 2;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 113, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_221(int iParam0)//Position - 0x2476F
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 13;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 10, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_222(int iParam0)//Position - 0x248E9
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 12;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "OUTFIT_P0_0" /* GXT: Gray Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "OUTFIT_P0_1" /* GXT: Firefighter */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "OUTFIT_P0_4" /* GXT: Janitor */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "OUTFIT_P0_7" /* GXT: Highway Patrol */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "OUTFIT_P0_8" /* GXT: Golf */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "OUTFIT_P0_9" /* GXT: Bed */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "OUTFIT_P0_11" /* GXT: Epsilon Robes */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 9:
			StringCopy(&Var2, "OUTFIT_P0_12" /* GXT: Tennis */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 11:
			StringCopy(&Var2, "OUTFIT_P0_14" /* GXT: Scuba Land */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 12:
			StringCopy(&Var2, "OUTFIT_P0_17" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 13:
			StringCopy(&Var2, "OUTFIT_P0_18" /* GXT: Triathlon */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 14:
			StringCopy(&Var2, "OUTFIT_P0_19" /* GXT: Security */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 15:
			StringCopy(&Var2, "OUTFIT_P0_20" /* GXT: Exterminator */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 16:
			StringCopy(&Var2, "OUTFIT_P0_22" /* GXT: Tuxedo */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 10000;
			break;
		case 17:
			StringCopy(&Var2, "OUTFIT_P0_23" /* GXT: Ludendorff */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 18:
			StringCopy(&Var2, "OUTFIT_P0_24" /* GXT: Rappel Gear */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 19:
			StringCopy(&Var2, "OUTFIT_P0_26" /* GXT: Blue Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 20:
			StringCopy(&Var2, "OUTFIT_P0_28" /* GXT: Navy Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 21:
			StringCopy(&Var2, "OUTFIT_P0_29" /* GXT: Gray Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 22:
			StringCopy(&Var2, "OUTFIT_P0_30" /* GXT: Green Boiler Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 105;
			break;
		case 23:
			StringCopy(&Var2, "OUTFIT_P0_31" /* GXT: Prologue */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 24:
			StringCopy(&Var2, "OUTFIT_P0_32" /* GXT: Spec Ops */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 25:
			StringCopy(&Var2, "OUTFIT_P0_33" /* GXT: Denim Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 26:
			StringCopy(&Var2, "OUTFIT_P0_34" /* GXT: Slate Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 27:
			StringCopy(&Var2, "OUTFIT_P0_35" /* GXT: Leather Jacket, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 28:
			StringCopy(&Var2, "OUTFIT_P0_11" /* GXT: Epsilon Robes */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 29:
			StringCopy(&Var2, "OUTFIT_P0_36" /* GXT: Charcoal Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4900;
			break;
		case 30:
			StringCopy(&Var2, "OUTFIT_P0_37" /* GXT: Pale Blue Shirt, Gray Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 840;
			break;
		case 31:
			StringCopy(&Var2, "OUTFIT_P0_38" /* GXT: Jewel Heist Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 32:
			StringCopy(&Var2, "OUTFIT_P0_39" /* GXT: Polo Shirt, Beach Shorts */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 33:
			StringCopy(&Var2, "OUTFIT_P0_40" /* GXT: Polo Shirt, Suit Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 34:
			StringCopy(&Var2, "OUTFIT_P0_41" /* GXT: Shirt, Shorts */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 35:
			StringCopy(&Var2, "OUTFIT_P0_42" /* GXT: Polo Shirt, Jeans */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 36:
			StringCopy(&Var2, "OUTFIT_P0_43" /* GXT: Topaz Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 37:
			StringCopy(&Var2, "OUTFIT_P0_44" /* GXT: Pale Blue Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 3900;
			break;
		case 38:
			StringCopy(&Var2, "OUTFIT_P0_45" /* GXT: Off-White Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4000;
			break;
		case 39:
			StringCopy(&Var2, "OUTFIT_P0_46" /* GXT: Olive Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 40:
			StringCopy(&Var2, "OUTFIT_P0_47" /* GXT: Cream Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4600;
			break;
		case 41:
			StringCopy(&Var2, "OUTFIT_P0_48" /* GXT: Navy Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5500;
			break;
		case 42:
			StringCopy(&Var2, "OUTFIT_P0_49" /* GXT: Beige Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4400;
			break;
		case 43:
			StringCopy(&Var2, "OUTFIT_P0_50" /* GXT: Smoke Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4400;
			break;
		case 44:
			StringCopy(&Var2, "OUTFIT_P0_51" /* GXT: Blue-Gray Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4900;
			break;
		case 45:
			StringCopy(&Var2, "OUTFIT_P0_52" /* GXT: Ash Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5500;
			break;
		case 46:
			StringCopy(&Var2, "OUTFIT_P0_53" /* GXT: Sand Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 4500;
			break;
		case 47:
			StringCopy(&Var2, "OUTFIT_P0_54" /* GXT: Black Suit */, 16);
			iVar3 = 0;
			iVar4 = 0;
			iVar1 = 5900;
			break;
		case 48:
			StringCopy(&Var2, "OUTFIT_P0_55" /* GXT: Moto X */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 49:
			StringCopy(&Var2, "OUTFIT_P0_17" /* GXT: Stealth */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 50:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 51:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 52:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 53, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_223(int iParam0)//Position - 0x24E60
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 11;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "JBIB_P0_02_0" /* GXT: Ash T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "JBIB_P0_02_1" /* GXT: White T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 1;
			break;
		case 4:
			StringCopy(&Var2, "JBIB_P0_02_2" /* GXT: Gray T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 2;
			break;
		case 5:
			StringCopy(&Var2, "JBIB_P0_02_3" /* GXT: Charcoal T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 3;
			break;
		case 6:
			StringCopy(&Var2, "JBIB_P0_02_4" /* GXT: Green T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 4;
			break;
		case 7:
			StringCopy(&Var2, "JBIB_P0_02_5" /* GXT: Blue T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 5;
			break;
		case 8:
			StringCopy(&Var2, "JBIB_P0_03_0" /* GXT: Charcoal Henley */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar1 = 390;
			break;
		case 9:
			StringCopy(&Var2, "JBIB_P0_03_1" /* GXT: Gray Henley */, 16);
			iVar3 = 3;
			iVar4 = 1;
			iVar1 = 390;
			break;
		case 10:
			StringCopy(&Var2, "JBIB_P0_03_2" /* GXT: Black Henley */, 16);
			iVar3 = 3;
			iVar4 = 2;
			iVar1 = 420;
			break;
		case 11:
			StringCopy(&Var2, "JBIB_P0_03_3" /* GXT: Beige Henley */, 16);
			iVar3 = 3;
			iVar4 = 3;
			iVar1 = 420;
			break;
		case 12:
			StringCopy(&Var2, "JBIB_P0_03_4" /* GXT: Brown Henley */, 16);
			iVar3 = 3;
			iVar4 = 4;
			iVar1 = 490;
			break;
		case 13:
			StringCopy(&Var2, "JBIB_P0_03_5" /* GXT: Navy Henley */, 16);
			iVar3 = 3;
			iVar4 = 5;
			iVar1 = 490;
			break;
		case 14:
			StringCopy(&Var2, "JBIB_P0_03_6" /* GXT: Navy Striped Henley */, 16);
			iVar3 = 3;
			iVar4 = 6;
			iVar1 = 540;
			break;
		case 15:
			StringCopy(&Var2, "JBIB_P0_03_7" /* GXT: Gray Striped Henley */, 16);
			iVar3 = 3;
			iVar4 = 7;
			iVar1 = 540;
			break;
		case 16:
			StringCopy(&Var2, "JBIB_P0_03_8" /* GXT: Gray Wool Henley */, 16);
			iVar3 = 3;
			iVar4 = 8;
			iVar1 = 550;
			break;
		case 17:
			StringCopy(&Var2, "JBIB_P0_03_9" /* GXT: Charcoal Striped Henley */, 16);
			iVar3 = 3;
			iVar4 = 9;
			iVar1 = 540;
			break;
		case 18:
			StringCopy(&Var2, "JBIB_P0_04_0" /* GXT: Charcoal V Neck */, 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar1 = 850;
			break;
		case 19:
			StringCopy(&Var2, "JBIB_P0_04_1" /* GXT: Beige V Neck */, 16);
			iVar3 = 4;
			iVar4 = 1;
			iVar1 = 850;
			break;
		case 20:
			StringCopy(&Var2, "JBIB_P0_04_2" /* GXT: Black V Neck */, 16);
			iVar3 = 4;
			iVar4 = 2;
			iVar1 = 890;
			break;
		case 21:
			StringCopy(&Var2, "JBIB_P0_04_3" /* GXT: Olive V Neck */, 16);
			iVar3 = 4;
			iVar4 = 3;
			iVar1 = 890;
			break;
		case 22:
			StringCopy(&Var2, "JBIB_P0_04_4" /* GXT: Gray V Neck */, 16);
			iVar3 = 4;
			iVar4 = 4;
			iVar1 = 920;
			break;
		case 23:
			StringCopy(&Var2, "JBIB_P0_04_5" /* GXT: Brown V Neck */, 16);
			iVar3 = 4;
			iVar4 = 5;
			iVar1 = 920;
			break;
		case 24:
			StringCopy(&Var2, "JBIB_P0_04_6" /* GXT: Black Striped V Neck */, 16);
			iVar3 = 4;
			iVar4 = 6;
			iVar1 = 950;
			break;
		case 25:
			StringCopy(&Var2, "JBIB_P0_04_7" /* GXT: Gray Diamond V Neck */, 16);
			iVar3 = 4;
			iVar4 = 7;
			iVar1 = 980;
			break;
		case 26:
			StringCopy(&Var2, "JBIB_P0_04_8" /* GXT: Brown Striped V Neck */, 16);
			iVar3 = 4;
			iVar4 = 8;
			iVar1 = 1050;
			break;
		case 27:
			StringCopy(&Var2, "JBIB_P0_04_9" /* GXT: Silver Diamond V Neck */, 16);
			iVar3 = 4;
			iVar4 = 9;
			iVar1 = 1100;
			break;
		case 28:
			StringCopy(&Var2, "JBIB_P0_05_0" /* GXT: Black Vest, White Shirt */, 16);
			iVar3 = 5;
			iVar4 = 0;
			iVar1 = 1890;
			break;
		case 29:
			StringCopy(&Var2, "JBIB_P0_05_1" /* GXT: Black Vest, Black Shirt */, 16);
			iVar3 = 5;
			iVar4 = 1;
			iVar1 = 1820;
			break;
		case 30:
			StringCopy(&Var2, "JBIB_P0_05_2" /* GXT: Black Vest, Gray Shirt */, 16);
			iVar3 = 5;
			iVar4 = 2;
			iVar1 = 1820;
			break;
		case 31:
			StringCopy(&Var2, "JBIB_P0_05_3" /* GXT: Black Vest, Blue Shirt */, 16);
			iVar3 = 5;
			iVar4 = 3;
			iVar1 = 1850;
			break;
		case 32:
			StringCopy(&Var2, "JBIB_P0_05_4" /* GXT: Black Vest, Pink Shirt */, 16);
			iVar3 = 5;
			iVar4 = 4;
			iVar1 = 1850;
			break;
		case 33:
			StringCopy(&Var2, "JBIB_P0_05_5" /* GXT: Ash Vest, White Shirt */, 16);
			iVar3 = 5;
			iVar4 = 5;
			iVar1 = 1900;
			break;
		case 34:
			StringCopy(&Var2, "JBIB_P0_05_6" /* GXT: Ash Vest, Black Shirt */, 16);
			iVar3 = 5;
			iVar4 = 6;
			iVar1 = 1920;
			break;
		case 35:
			StringCopy(&Var2, "JBIB_P0_05_7" /* GXT: Ash Vest, Gray Shirt */, 16);
			iVar3 = 5;
			iVar4 = 7;
			iVar1 = 1980;
			break;
		case 36:
			StringCopy(&Var2, "JBIB_P0_05_8" /* GXT: Ash Vest, Blue Shirt */, 16);
			iVar3 = 5;
			iVar4 = 8;
			iVar1 = 2100;
			break;
		case 37:
			StringCopy(&Var2, "JBIB_P0_05_9" /* GXT: Ash Vest, Pink Shirt */, 16);
			iVar3 = 5;
			iVar4 = 9;
			iVar1 = 2120;
			break;
		case 38:
			StringCopy(&Var2, "JBIB_P0_05_10" /* GXT: Blue Vest, White Shirt */, 16);
			iVar3 = 5;
			iVar4 = 10;
			iVar1 = 2000;
			break;
		case 39:
			StringCopy(&Var2, "JBIB_P0_05_11" /* GXT: Blue Vest, Black Shirt */, 16);
			iVar3 = 5;
			iVar4 = 11;
			iVar1 = 2200;
			break;
		case 40:
			StringCopy(&Var2, "JBIB_P0_05_12" /* GXT: Blue Vest, Gray Shirt */, 16);
			iVar3 = 5;
			iVar4 = 12;
			iVar1 = 2280;
			break;
		case 41:
			StringCopy(&Var2, "JBIB_P0_05_13" /* GXT: Blue Vest, Blue Shirt */, 16);
			iVar3 = 5;
			iVar4 = 13;
			iVar1 = 2300;
			break;
		case 42:
			StringCopy(&Var2, "JBIB_P0_05_14" /* GXT: Blue Vest, Pink Shirt */, 16);
			iVar3 = 5;
			iVar4 = 14;
			iVar1 = 2350;
			break;
		case 43:
			StringCopy(&Var2, "JBIB_P0_05_15" /* GXT: Stone Vest, White Shirt */, 16);
			iVar3 = 5;
			iVar4 = 15;
			iVar1 = 2280;
			break;
		case 44:
			StringCopy(&Var2, "JBIB_P0_06_0" /* GXT: Bare Chest */, 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 45, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_224(int iParam0)//Position - 0x2538A
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 7;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 1, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_225(int iParam0)//Position - 0x253FE
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 1;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "BERD_P0_0_0" /* GXT: Clean Shave */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "BERD_P0_1_0" /* GXT: Stubbled */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "BERD_P0_2_0" /* GXT: Long Stubbled */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "BERD_P0_3_0" /* GXT: Full Goatee */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "BERD_P0_4_0" /* GXT: Full Beard */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 5, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_226(int iParam0)//Position - 0x254CE
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 10;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 1;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 2;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 3;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 4;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 5;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 6;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 7;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 1;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 2;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 3;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 4;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 5;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 1;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 2;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 3;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 4;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 5;
			break;
		case 27:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 6;
			break;
		case 28:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			break;
		case 29:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 1;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 2;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 3;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 4;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 5;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 6;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 7;
			break;
		case 36:
			StringCopy(&Var2, "DECL_P0_10_8" /* GXT: Del Perro Pier T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 8;
			break;
		case 37:
			StringCopy(&Var2, "DECL_P0_10_9" /* GXT: Los Santos T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 9;
			break;
		case 38:
			StringCopy(&Var2, "DECL_P0_10_10" /* GXT: Sharkies Bites T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 10;
			break;
		case 39:
			StringCopy(&Var2, "DECL_P0_10_11" /* GXT: Muscle Peach T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 11;
			break;
		case 40:
			StringCopy(&Var2, "DECL_P0_10_12" /* GXT: Coral Reefers T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 12;
			break;
		case 41:
			StringCopy(&Var2, "DECL_P0_10_13" /* GXT: SmokeBomb T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 13;
			break;
		case 42:
			StringCopy(&Var2, "DECL_P0_10_14" /* GXT: The Big Puffa T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 14;
			break;
		case 43:
			StringCopy(&Var2, "DECL_P0_10_15" /* GXT: Lob-Star T-Shirt */, 16);
			iVar3 = 10;
			iVar4 = 15;
			break;
		case 44:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			break;
		case 45:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 1;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 2;
			break;
		case 47:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 3;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 48, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_227(int iParam0)//Position - 0x259A6
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 9;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 1;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "SPEC2_P0_08_0" /* GXT: Red Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 125;
			break;
		case 10:
			StringCopy(&Var2, "SPEC2_P0_08_1" /* GXT: Green Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 150;
			break;
		case 11:
			StringCopy(&Var2, "SPEC2_P0_08_2" /* GXT: Patriot Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 175;
			break;
		case 12:
			StringCopy(&Var2, "SPEC2_P0_08_3" /* GXT: Domino Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 85;
			break;
		case 13:
			StringCopy(&Var2, "SPEC2_P0_08_4" /* GXT: Gray Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 150;
			break;
		case 14:
			StringCopy(&Var2, "SPEC2_P0_08_5" /* GXT: Phoenix Wrestler Mask */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 175;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 20, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_228(int iParam0)//Position - 0x25C0F
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 8;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "SPEC_P0_10" /* GXT: Watch and Bracelet */, 16);
			iVar3 = 10;
			iVar4 = 0;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "SPEC_P0_16" /* GXT: Leather Watch */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 18;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 19;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 20;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 21;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 22;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 24, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_229(int iParam0)//Position - 0x25EE5
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 5;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 14, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_230(int iParam0)//Position - 0x260AE
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 6;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "FEET_P0_0_0" /* GXT: Black Leather Shoes */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "FEET_P0_0_1" /* GXT: Brown Leather Shoes */, 16);
			iVar3 = 0;
			iVar4 = 1;
			iVar1 = 665;
			break;
		case 2:
			StringCopy(&Var2, "FEET_P0_0_2" /* GXT: Charcoal Leather Shoes */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 620;
			break;
		case 3:
			StringCopy(&Var2, "FEET_P0_0_3" /* GXT: Gray Leather Shoes */, 16);
			iVar3 = 0;
			iVar4 = 3;
			iVar1 = 540;
			break;
		case 4:
			StringCopy(&Var2, "FEET_P0_0_4" /* GXT: Sand Leather Shoes */, 16);
			iVar3 = 0;
			iVar4 = 4;
			iVar1 = 580;
			break;
		case 5:
			StringCopy(&Var2, "FEET_P0_0_5" /* GXT: Blue Suede Shoes */, 16);
			iVar3 = 0;
			iVar4 = 5;
			iVar1 = 650;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 12:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 7;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "FEET_P0_13_0" /* GXT: Dress Loafers */, 16);
			iVar3 = 13;
			iVar4 = 0;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 20:
			StringCopy(&Var2, "FEET_P0_15_0" /* GXT: Ash Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 21:
			StringCopy(&Var2, "FEET_P0_15_1" /* GXT: Black Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 1;
			iVar1 = 64;
			break;
		case 22:
			StringCopy(&Var2, "FEET_P0_15_2" /* GXT: White Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 2;
			iVar1 = 56;
			break;
		case 23:
			StringCopy(&Var2, "FEET_P0_15_3" /* GXT: Red Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 3;
			iVar1 = 69;
			break;
		case 24:
			StringCopy(&Var2, "FEET_P0_15_4" /* GXT: Plaid Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 4;
			iVar1 = 59;
			break;
		case 25:
			StringCopy(&Var2, "FEET_P0_15_5" /* GXT: Striped Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 5;
			iVar1 = 62;
			break;
		case 26:
			StringCopy(&Var2, "FEET_P0_15_6" /* GXT: Coffee Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 6;
			iVar1 = 74;
			break;
		case 27:
			StringCopy(&Var2, "FEET_P0_15_7" /* GXT: Camo Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 7;
			iVar1 = 68;
			break;
		case 28:
			StringCopy(&Var2, "FEET_P0_15_8" /* GXT: Tropical Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 8;
			iVar1 = 72;
			break;
		case 29:
			StringCopy(&Var2, "FEET_P0_15_9" /* GXT: Green Skate Shoes */, 16);
			iVar3 = 15;
			iVar4 = 9;
			iVar1 = 70;
			break;
		case 30:
			StringCopy(&Var2, "FEET_P0_16_0" /* GXT: Chocolate Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 0;
			iVar1 = 48;
			break;
		case 31:
			StringCopy(&Var2, "FEET_P0_16_1" /* GXT: Teal Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 48;
			break;
		case 32:
			StringCopy(&Var2, "FEET_P0_16_2" /* GXT: Black Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 2;
			iVar1 = 55;
			break;
		case 33:
			StringCopy(&Var2, "FEET_P0_16_3" /* GXT: Chestnut Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 3;
			iVar1 = 75;
			break;
		case 34:
			StringCopy(&Var2, "FEET_P0_16_4" /* GXT: Tan Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 4;
			iVar1 = 65;
			break;
		case 35:
			StringCopy(&Var2, "FEET_P0_16_5" /* GXT: Gray Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 5;
			iVar1 = 68;
			break;
		case 36:
			StringCopy(&Var2, "FEET_P0_16_6" /* GXT: Red Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 6;
			iVar1 = 58;
			break;
		case 37:
			StringCopy(&Var2, "FEET_P0_16_7" /* GXT: Slate Boat Shoes */, 16);
			iVar3 = 16;
			iVar4 = 7;
			iVar1 = 68;
			break;
		case 38:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 39:
			StringCopy(&Var2, "FEET_P0_18_0" /* GXT: All Black Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar1 = 790;
			break;
		case 40:
			StringCopy(&Var2, "FEET_P0_18_1" /* GXT: Chocolate Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 750;
			break;
		case 41:
			StringCopy(&Var2, "FEET_P0_18_2" /* GXT: Chestnut Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 860;
			break;
		case 42:
			StringCopy(&Var2, "FEET_P0_18_3" /* GXT: Tan Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 750;
			break;
		case 43:
			StringCopy(&Var2, "FEET_P0_18_4" /* GXT: White Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 790;
			break;
		case 44:
			StringCopy(&Var2, "FEET_P0_18_5" /* GXT: Ash Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 45:
			StringCopy(&Var2, "FEET_P0_18_6" /* GXT: Gray Two-Tone Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar1 = 820;
			break;
		case 46:
			StringCopy(&Var2, "FEET_P0_18_7" /* GXT: Beige Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar1 = 800;
			break;
		case 47:
			StringCopy(&Var2, "FEET_P0_18_8" /* GXT: Topaz Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 8;
			iVar1 = 850;
			break;
		case 48:
			StringCopy(&Var2, "FEET_P0_18_9" /* GXT: Black Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 9;
			iVar1 = 870;
			break;
		case 49:
			StringCopy(&Var2, "FEET_P0_18_10" /* GXT: Lime Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 10;
			iVar1 = 720;
			break;
		case 50:
			StringCopy(&Var2, "FEET_P0_18_11" /* GXT: Hawthorn Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 11;
			iVar1 = 740;
			break;
		case 51:
			StringCopy(&Var2, "FEET_P0_18_12" /* GXT: Coffee Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 12;
			iVar1 = 800;
			break;
		case 52:
			StringCopy(&Var2, "FEET_P0_18_13" /* GXT: Gray Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 13;
			iVar1 = 750;
			break;
		case 53:
			StringCopy(&Var2, "FEET_P0_18_14" /* GXT: Cream Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 14;
			iVar1 = 770;
			break;
		case 54:
			StringCopy(&Var2, "FEET_P0_18_15" /* GXT: Navy Oxfords */, 16);
			iVar3 = 18;
			iVar4 = 15;
			iVar1 = 860;
			break;
		case 55:
			StringCopy(&Var2, "FEET_P0_19_0" /* GXT: Black Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 850;
			break;
		case 56:
			StringCopy(&Var2, "FEET_P0_19_1" /* GXT: Red Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 800;
			break;
		case 57:
			StringCopy(&Var2, "FEET_P0_19_2" /* GXT: Brown Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 780;
			break;
		case 58:
			StringCopy(&Var2, "FEET_P0_19_3" /* GXT: Green Stripe Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 890;
			break;
		case 59:
			StringCopy(&Var2, "FEET_P0_19_4" /* GXT: Green Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 820;
			break;
		case 60:
			StringCopy(&Var2, "FEET_P0_19_5" /* GXT: Copper Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 61:
			StringCopy(&Var2, "FEET_P0_19_6" /* GXT: Copper Two-Tone Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 6;
			iVar1 = 870;
			break;
		case 62:
			StringCopy(&Var2, "FEET_P0_19_7" /* GXT: Navy Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 7;
			iVar1 = 930;
			break;
		case 63:
			StringCopy(&Var2, "FEET_P0_19_8" /* GXT: Blue Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 8;
			iVar1 = 880;
			break;
		case 64:
			StringCopy(&Var2, "FEET_P0_19_9" /* GXT: Beige Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 9;
			iVar1 = 900;
			break;
		case 65:
			StringCopy(&Var2, "FEET_P0_19_10" /* GXT: White Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 10;
			iVar1 = 920;
			break;
		case 66:
			StringCopy(&Var2, "FEET_P0_19_11" /* GXT: Tan Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 11;
			iVar1 = 970;
			break;
		case 67:
			StringCopy(&Var2, "FEET_P0_19_12" /* GXT: Black Snakeskin Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 12;
			iVar1 = 990;
			break;
		case 68:
			StringCopy(&Var2, "FEET_P0_19_13" /* GXT: Two-Tone Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 13;
			iVar1 = 960;
			break;
		case 69:
			StringCopy(&Var2, "FEET_P0_19_14" /* GXT: Brown Snakeskin Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 14;
			iVar1 = 980;
			break;
		case 70:
			StringCopy(&Var2, "FEET_P0_19_15" /* GXT: Gray Slip-Ons */, 16);
			iVar3 = 19;
			iVar4 = 15;
			iVar1 = 950;
			break;
		case 71:
			StringCopy(&Var2, "FEET_P0_20_0" /* GXT: Brown Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 110;
			break;
		case 72:
			StringCopy(&Var2, "FEET_P0_20_1" /* GXT: Navy Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 115;
			break;
		case 73:
			StringCopy(&Var2, "FEET_P0_20_2" /* GXT: Coffee Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 120;
			break;
		case 74:
			StringCopy(&Var2, "FEET_P0_20_3" /* GXT: Burgundy Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 110;
			break;
		case 75:
			StringCopy(&Var2, "FEET_P0_20_4" /* GXT: Blue Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 4;
			iVar1 = 125;
			break;
		case 76:
			StringCopy(&Var2, "FEET_P0_20_5" /* GXT: Woodland Camo Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 128;
			break;
		case 77:
			StringCopy(&Var2, "FEET_P0_20_6" /* GXT: Black Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 135;
			break;
		case 78:
			StringCopy(&Var2, "FEET_P0_20_7" /* GXT: Tan Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 130;
			break;
		case 79:
			StringCopy(&Var2, "FEET_P0_20_8" /* GXT: Purple Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 145;
			break;
		case 80:
			StringCopy(&Var2, "FEET_P0_20_9" /* GXT: Brown Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 9;
			iVar1 = 110;
			break;
		case 81:
			StringCopy(&Var2, "FEET_P0_20_10" /* GXT: Chocolate Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 10;
			iVar1 = 120;
			break;
		case 82:
			StringCopy(&Var2, "FEET_P0_20_11" /* GXT: Green Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 11;
			iVar1 = 150;
			break;
		case 83:
			StringCopy(&Var2, "FEET_P0_20_12" /* GXT: Ash Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 12;
			iVar1 = 125;
			break;
		case 84:
			StringCopy(&Var2, "FEET_P0_20_13" /* GXT: Olive Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 13;
			iVar1 = 120;
			break;
		case 85:
			StringCopy(&Var2, "FEET_P0_20_14" /* GXT: Two-Tone Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 14;
			iVar1 = 130;
			break;
		case 86:
			StringCopy(&Var2, "FEET_P0_20_15" /* GXT: Yellow Wingtips */, 16);
			iVar3 = 20;
			iVar4 = 15;
			iVar1 = 110;
			break;
		case 87:
			StringCopy(&Var2, "FEET_P0_21_0" /* GXT: Black Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 720;
			break;
		case 88:
			StringCopy(&Var2, "FEET_P0_21_1" /* GXT: Gray Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 680;
			break;
		case 89:
			StringCopy(&Var2, "FEET_P0_21_2" /* GXT: Cream Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 650;
			break;
		case 90:
			StringCopy(&Var2, "FEET_P0_21_3" /* GXT: Brown Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 670;
			break;
		case 91:
			StringCopy(&Var2, "FEET_P0_21_4" /* GXT: White Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 700;
			break;
		case 92:
			StringCopy(&Var2, "FEET_P0_21_5" /* GXT: Russet Leather Loafers */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 680;
			break;
		case 93:
			StringCopy(&Var2, "FEET_P0_21_6" /* GXT: White Snakeskin Loafers */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 720;
			break;
		case 94:
			StringCopy(&Var2, "FEET_P0_21_7" /* GXT: Rattlesnake Loafers */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 740;
			break;
		case 95:
			StringCopy(&Var2, "FEET_P0_21_8" /* GXT: Brown Snakeskin Loafers */, 16);
			iVar3 = 21;
			iVar4 = 8;
			iVar1 = 760;
			break;
		case 96:
			StringCopy(&Var2, "FEET_P0_21_9" /* GXT: Zebra Two-Tone Loafers */, 16);
			iVar3 = 21;
			iVar4 = 9;
			iVar1 = 780;
			break;
		case 97:
			StringCopy(&Var2, "FEET_P0_21_10" /* GXT: Pale Reptile Loafers */, 16);
			iVar3 = 21;
			iVar4 = 10;
			iVar1 = 750;
			break;
		case 98:
			StringCopy(&Var2, "FEET_P0_21_11" /* GXT: Tan Alligator Loafers */, 16);
			iVar3 = 21;
			iVar4 = 11;
			iVar1 = 700;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 99, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_231(int iParam0)//Position - 0x26C02
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 4;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "LEGS_P0_0_0" /* GXT: Gray Pants */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "LEGS_P0_0_0" /* GXT: Gray Pants */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "LEGS_P0_0_2" /* GXT: Charcoal Pants */, 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "LEGS_P0_0_3" /* GXT: Slate Pants */, 16);
			iVar3 = 0;
			iVar4 = 3;
			break;
		case 4:
			StringCopy(&Var2, "LEGS_P0_0_4" /* GXT: Topaz Pants */, 16);
			iVar3 = 0;
			iVar4 = 4;
			break;
		case 5:
			StringCopy(&Var2, "LEGS_P0_0_5" /* GXT: Pale Blue Pants */, 16);
			iVar3 = 0;
			iVar4 = 5;
			break;
		case 6:
			StringCopy(&Var2, "LEGS_P0_0_6" /* GXT: Cream Pants */, 16);
			iVar3 = 0;
			iVar4 = 6;
			break;
		case 7:
			StringCopy(&Var2, "LEGS_P0_0_7" /* GXT: Olive Pants */, 16);
			iVar3 = 0;
			iVar4 = 7;
			break;
		case 8:
			StringCopy(&Var2, "LEGS_P0_0_8" /* GXT: Off-White Pants */, 16);
			iVar3 = 0;
			iVar4 = 8;
			break;
		case 9:
			StringCopy(&Var2, "LEGS_P0_0_9" /* GXT: Navy Pants */, 16);
			iVar3 = 0;
			iVar4 = 9;
			break;
		case 10:
			StringCopy(&Var2, "LEGS_P0_0_10" /* GXT: Beige Pants */, 16);
			iVar3 = 0;
			iVar4 = 10;
			break;
		case 11:
			StringCopy(&Var2, "LEGS_P0_0_11" /* GXT: Smoke Pants */, 16);
			iVar3 = 0;
			iVar4 = 11;
			break;
		case 12:
			StringCopy(&Var2, "LEGS_P0_0_12" /* GXT: Blue-Gray Pants */, 16);
			iVar3 = 0;
			iVar4 = 12;
			break;
		case 13:
			StringCopy(&Var2, "LEGS_P0_0_13" /* GXT: Ash Pants */, 16);
			iVar3 = 0;
			iVar4 = 13;
			break;
		case 14:
			StringCopy(&Var2, "LEGS_P0_0_14" /* GXT: Sand Pants */, 16);
			iVar3 = 0;
			iVar4 = 14;
			break;
		case 15:
			StringCopy(&Var2, "LEGS_P0_0_15" /* GXT: Black Pants */, 16);
			iVar3 = 0;
			iVar4 = 15;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 23:
			StringCopy(&Var2, "LEGS_P0_7_0" /* GXT: Off-White Chinos */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 115;
			break;
		case 24:
			StringCopy(&Var2, "LEGS_P0_7_1" /* GXT: Camel Chinos */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 115;
			break;
		case 25:
			StringCopy(&Var2, "LEGS_P0_7_2" /* GXT: Ash Chinos */, 16);
			iVar3 = 7;
			iVar4 = 2;
			iVar1 = 128;
			break;
		case 26:
			StringCopy(&Var2, "LEGS_P0_7_3" /* GXT: Olive Chinos */, 16);
			iVar3 = 7;
			iVar4 = 3;
			iVar1 = 118;
			break;
		case 27:
			StringCopy(&Var2, "LEGS_P0_7_4" /* GXT: Brown Chinos */, 16);
			iVar3 = 7;
			iVar4 = 4;
			iVar1 = 125;
			break;
		case 28:
			StringCopy(&Var2, "LEGS_P0_7_5" /* GXT: Black Chinos */, 16);
			iVar3 = 7;
			iVar4 = 5;
			iVar1 = 128;
			break;
		case 29:
			StringCopy(&Var2, "LEGS_P0_7_6" /* GXT: Charcoal Chinos */, 16);
			iVar3 = 7;
			iVar4 = 6;
			iVar1 = 128;
			break;
		case 30:
			StringCopy(&Var2, "LEGS_P0_7_7" /* GXT: White Chinos */, 16);
			iVar3 = 7;
			iVar4 = 7;
			iVar1 = 125;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 36:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 37:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 38:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 39:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 5;
			bVar0 = true;
			break;
		case 40:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 41:
			StringCopy(&Var2, "LEGS_P0_13_0" /* GXT: Cream Cargo Shorts */, 16);
			iVar3 = 13;
			iVar4 = 0;
			iVar1 = 68;
			break;
		case 42:
			StringCopy(&Var2, "LEGS_P0_13_1" /* GXT: Khaki Cargo Shorts */, 16);
			iVar3 = 13;
			iVar4 = 1;
			iVar1 = 68;
			break;
		case 43:
			StringCopy(&Var2, "LEGS_P0_13_2" /* GXT: Camo Cargo Shorts */, 16);
			iVar3 = 13;
			iVar4 = 2;
			iVar1 = 68;
			break;
		case 44:
			StringCopy(&Var2, "LEGS_P0_13_3" /* GXT: Gray Cargo Shorts */, 16);
			iVar3 = 13;
			iVar4 = 3;
			iVar1 = 68;
			break;
		case 45:
			StringCopy(&Var2, "LEGS_P0_13_4" /* GXT: White Cargo Shorts */, 16);
			iVar3 = 13;
			iVar4 = 4;
			iVar1 = 68;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 14;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 47:
			StringCopy(&Var2, "LEGS_P0_15_0" /* GXT: Gray Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 0;
			break;
		case 48:
			StringCopy(&Var2, "LEGS_P0_15_1" /* GXT: Cream Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 1;
			iVar1 = 550;
			break;
		case 49:
			StringCopy(&Var2, "LEGS_P0_15_2" /* GXT: Brown Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 2;
			iVar1 = 650;
			break;
		case 50:
			StringCopy(&Var2, "LEGS_P0_15_3" /* GXT: Tartan Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 3;
			iVar1 = 875;
			break;
		case 51:
			StringCopy(&Var2, "LEGS_P0_15_4" /* GXT: Charcoal Plaid Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 4;
			iVar1 = 820;
			break;
		case 52:
			StringCopy(&Var2, "LEGS_P0_15_5" /* GXT: Green Plaid Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 5;
			iVar1 = 720;
			break;
		case 53:
			StringCopy(&Var2, "LEGS_P0_15_6" /* GXT: Brown Plaid Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 6;
			iVar1 = 750;
			break;
		case 54:
			StringCopy(&Var2, "LEGS_P0_15_7" /* GXT: Slate Golf Pants */, 16);
			iVar3 = 15;
			iVar4 = 7;
			iVar1 = 850;
			break;
		case 55:
			StringCopy(&Var2, "LEGS_P0_16_0" /* GXT: Beige Shorts */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 56:
			StringCopy(&Var2, "LEGS_P0_16_1" /* GXT: Yellow Shorts */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 48;
			break;
		case 57:
			StringCopy(&Var2, "LEGS_P0_16_2" /* GXT: Blue Shorts */, 16);
			iVar3 = 16;
			iVar4 = 2;
			iVar1 = 48;
			break;
		case 58:
			StringCopy(&Var2, "LEGS_P0_16_3" /* GXT: Brown Leafy Shorts */, 16);
			iVar3 = 16;
			iVar4 = 3;
			iVar1 = 38;
			break;
		case 59:
			StringCopy(&Var2, "LEGS_P0_16_4" /* GXT: Tropical Shorts */, 16);
			iVar3 = 16;
			iVar4 = 4;
			iVar1 = 38;
			break;
		case 60:
			StringCopy(&Var2, "LEGS_P0_16_5" /* GXT: Aqua Vintage Shorts */, 16);
			iVar3 = 16;
			iVar4 = 5;
			iVar1 = 42;
			break;
		case 61:
			StringCopy(&Var2, "LEGS_P0_16_6" /* GXT: Bright Two-Tone Shorts */, 16);
			iVar3 = 16;
			iVar4 = 6;
			iVar1 = 58;
			break;
		case 62:
			StringCopy(&Var2, "LEGS_P0_16_7" /* GXT: Red Floral Shorts */, 16);
			iVar3 = 16;
			iVar4 = 7;
			iVar1 = 46;
			break;
		case 63:
			StringCopy(&Var2, "LEGS_P0_16_8" /* GXT: Navy Floral Shorts */, 16);
			iVar3 = 16;
			iVar4 = 8;
			iVar1 = 46;
			break;
		case 64:
			StringCopy(&Var2, "LEGS_P0_16_9" /* GXT: Blue Floral Shorts */, 16);
			iVar3 = 16;
			iVar4 = 9;
			iVar1 = 46;
			break;
		case 65:
			StringCopy(&Var2, "LEGS_P0_16_10" /* GXT: Orange Shorts */, 16);
			iVar3 = 16;
			iVar4 = 10;
			iVar1 = 68;
			break;
		case 66:
			StringCopy(&Var2, "LEGS_P0_16_11" /* GXT: White Striped Shorts */, 16);
			iVar3 = 16;
			iVar4 = 11;
			iVar1 = 58;
			break;
		case 67:
			StringCopy(&Var2, "LEGS_P0_16_12" /* GXT: Charcoal Shorts */, 16);
			iVar3 = 16;
			iVar4 = 12;
			iVar1 = 50;
			break;
		case 68:
			StringCopy(&Var2, "LEGS_P0_16_13" /* GXT: Gray Shorts */, 16);
			iVar3 = 16;
			iVar4 = 13;
			iVar1 = 68;
			break;
		case 69:
			StringCopy(&Var2, "LEGS_P0_16_14" /* GXT: Candy Surf Shorts */, 16);
			iVar3 = 16;
			iVar4 = 14;
			iVar1 = 68;
			break;
		case 70:
			StringCopy(&Var2, "LEGS_P0_16_15" /* GXT: Undersea Shorts */, 16);
			iVar3 = 16;
			iVar4 = 15;
			iVar1 = 42;
			break;
		case 71:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 17;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 72:
			StringCopy(&Var2, "LEGS_P0_18_0" /* GXT: White Striped Boxers */, 16);
			iVar3 = 18;
			iVar4 = 0;
			break;
		case 73:
			StringCopy(&Var2, "LEGS_P0_18_1" /* GXT: Blue Boxers */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 250;
			break;
		case 74:
			StringCopy(&Var2, "LEGS_P0_18_2" /* GXT: Ash Boxers */, 16);
			iVar3 = 18;
			iVar4 = 2;
			iVar1 = 250;
			break;
		case 75:
			StringCopy(&Var2, "LEGS_P0_18_3" /* GXT: Blue Striped Boxers */, 16);
			iVar3 = 18;
			iVar4 = 3;
			iVar1 = 290;
			break;
		case 76:
			StringCopy(&Var2, "LEGS_P0_18_4" /* GXT: White Boxers */, 16);
			iVar3 = 18;
			iVar4 = 4;
			iVar1 = 270;
			break;
		case 77:
			StringCopy(&Var2, "LEGS_P0_18_5" /* GXT: Charcoal Boxers */, 16);
			iVar3 = 18;
			iVar4 = 5;
			iVar1 = 270;
			break;
		case 78:
			StringCopy(&Var2, "LEGS_P0_18_6" /* GXT: Red Heart Boxers */, 16);
			iVar3 = 18;
			iVar4 = 6;
			iVar1 = 15;
			break;
		case 79:
			StringCopy(&Var2, "LEGS_P0_18_7" /* GXT: Blue Heart Boxers */, 16);
			iVar3 = 18;
			iVar4 = 7;
			iVar1 = 12;
			break;
		case 80:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 19;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 81:
			StringCopy(&Var2, "LEGS_P0_20_0" /* GXT: Blue Casual Jeans */, 16);
			iVar3 = 20;
			iVar4 = 0;
			break;
		case 82:
			StringCopy(&Var2, "LEGS_P0_20_1" /* GXT: Black Casual Jeans */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 118;
			break;
		case 83:
			StringCopy(&Var2, "LEGS_P0_20_2" /* GXT: Faded Casual Jeans */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 110;
			break;
		case 84:
			StringCopy(&Var2, "LEGS_P0_21_0" /* GXT: Tan Pants */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 88;
			break;
		case 85:
			StringCopy(&Var2, "LEGS_P0_21_1" /* GXT: Charcoal Pants */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 95;
			break;
		case 86:
			StringCopy(&Var2, "LEGS_P0_21_2" /* GXT: Brown Pants */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 95;
			break;
		case 87:
			StringCopy(&Var2, "LEGS_P0_21_3" /* GXT: Ash Pants */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 98;
			break;
		case 88:
			StringCopy(&Var2, "LEGS_P0_22_0" /* GXT: Smart Jeans */, 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar1 = 140;
			break;
		case 89:
			StringCopy(&Var2, "LEGS_P0_23_0" /* GXT: White Tennis Shorts */, 16);
			iVar3 = 23;
			iVar4 = 0;
			break;
		case 90:
			StringCopy(&Var2, "LEGS_P0_23_1" /* GXT: Lobon Tennis Shorts */, 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar1 = 150;
			break;
		case 91:
			StringCopy(&Var2, "LEGS_P0_23_2" /* GXT: Plaid Tennis Shorts */, 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar1 = 130;
			break;
		case 92:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 24;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 93:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 25;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 94:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 26;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 95:
			StringCopy(&Var2, "LEGS_P0_27_0" /* GXT: Beige Shorts, Bare Feet */, 16);
			iVar3 = 27;
			iVar4 = 0;
			break;
		case 96:
			StringCopy(&Var2, "LEGS_P0_28_0" /* GXT: Pale Blue Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 0;
			iVar1 = 45;
			break;
		case 97:
			StringCopy(&Var2, "LEGS_P0_28_1" /* GXT: Beige Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 1;
			iVar1 = 48;
			break;
		case 98:
			StringCopy(&Var2, "LEGS_P0_28_2" /* GXT: Cream Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 2;
			iVar1 = 48;
			break;
		case 99:
			StringCopy(&Var2, "LEGS_P0_28_3" /* GXT: Olive Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 3;
			iVar1 = 52;
			break;
		case 100:
			StringCopy(&Var2, "LEGS_P0_28_4" /* GXT: Blue Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 4;
			iVar1 = 52;
			break;
		case 101:
			StringCopy(&Var2, "LEGS_P0_28_5" /* GXT: Off-White Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 5;
			iVar1 = 55;
			break;
		case 102:
			StringCopy(&Var2, "LEGS_P0_28_6" /* GXT: Gray Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 6;
			iVar1 = 55;
			break;
		case 103:
			StringCopy(&Var2, "LEGS_P0_28_7" /* GXT: Charcoal Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 7;
			iVar1 = 55;
			break;
		case 104:
			StringCopy(&Var2, "LEGS_P0_28_8" /* GXT: Pink Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 8;
			iVar1 = 58;
			break;
		case 105:
			StringCopy(&Var2, "LEGS_P0_28_9" /* GXT: Beige Plaid Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 9;
			iVar1 = 58;
			break;
		case 106:
			StringCopy(&Var2, "LEGS_P0_28_10" /* GXT: Pastel Plaid Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 10;
			iVar1 = 60;
			break;
		case 107:
			StringCopy(&Var2, "LEGS_P0_28_11" /* GXT: Orange Plaid Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 11;
			iVar1 = 60;
			break;
		case 108:
			StringCopy(&Var2, "LEGS_P0_28_12" /* GXT: Gray Plaid Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 12;
			iVar1 = 62;
			break;
		case 109:
			StringCopy(&Var2, "LEGS_P0_28_13" /* GXT: Blue Striped Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 13;
			iVar1 = 62;
			break;
		case 110:
			StringCopy(&Var2, "LEGS_P0_28_14" /* GXT: Murky Plaid Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 14;
			iVar1 = 65;
			break;
		case 111:
			StringCopy(&Var2, "LEGS_P0_28_15" /* GXT: Pastel Check Bermudas */, 16);
			iVar3 = 28;
			iVar4 = 15;
			iVar1 = 65;
			break;
		case 112:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 29;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 113, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_232(int iParam0)//Position - 0x27881
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 60:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 61:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 62:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 63:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 64:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 65:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 2;
			bVar0 = true;
			break;
		case 66:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 3;
			bVar0 = true;
			break;
		case 67:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 4;
			bVar0 = true;
			break;
		case 68:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 5;
			bVar0 = true;
			break;
		case 69:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 70:
			StringCopy(&Var2, "TORSO_P0_14_0" /* GXT: Rearwall Black Gilet */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 120;
			break;
		case 71:
			StringCopy(&Var2, "TORSO_P0_14_1" /* GXT: Fruntalot Red Gilet */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 120;
			break;
		case 72:
			StringCopy(&Var2, "TORSO_P0_14_2" /* GXT: Yeti Blue Gilet */, 16);
			iVar3 = 14;
			iVar4 = 2;
			iVar1 = 120;
			break;
		case 73:
			StringCopy(&Var2, "TORSO_P0_14_3" /* GXT: Rearwall Brown Gilet */, 16);
			iVar3 = 14;
			iVar4 = 3;
			iVar1 = 120;
			break;
		case 74:
			StringCopy(&Var2, "TORSO_P0_14_4" /* GXT: Rearwall Orange Gilet */, 16);
			iVar3 = 14;
			iVar4 = 4;
			iVar1 = 120;
			break;
		case 75:
			StringCopy(&Var2, "TORSO_P0_14_5" /* GXT: Rearwall Green Gilet */, 16);
			iVar3 = 14;
			iVar4 = 5;
			iVar1 = 120;
			break;
		case 76:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 15;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 77:
			StringCopy(&Var2, "TORSO_P0_16_0" /* GXT: Purple Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 0;
			break;
		case 78:
			StringCopy(&Var2, "TORSO_P0_16_1" /* GXT: Orange Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 20;
			break;
		case 79:
			StringCopy(&Var2, "TORSO_P0_16_2" /* GXT: Burgundy Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 2;
			iVar1 = 24;
			break;
		case 80:
			StringCopy(&Var2, "TORSO_P0_16_3" /* GXT: Yellow Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 3;
			iVar1 = 22;
			break;
		case 81:
			StringCopy(&Var2, "TORSO_P0_16_4" /* GXT: Blue Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 4;
			iVar1 = 25;
			break;
		case 82:
			StringCopy(&Var2, "TORSO_P0_16_5" /* GXT: Mint Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 5;
			iVar1 = 25;
			break;
		case 83:
			StringCopy(&Var2, "TORSO_P0_16_6" /* GXT: Brown Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 6;
			iVar1 = 22;
			break;
		case 84:
			StringCopy(&Var2, "TORSO_P0_16_7" /* GXT: Crimson Golf Shirt */, 16);
			iVar3 = 16;
			iVar4 = 7;
			iVar1 = 27;
			break;
		case 85:
			StringCopy(&Var2, "TORSO_P0_17_0" /* GXT: Blue-Gray Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 0;
			break;
		case 86:
			StringCopy(&Var2, "TORSO_P0_17_1" /* GXT: Olive Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 1;
			break;
		case 87:
			StringCopy(&Var2, "TORSO_P0_17_2" /* GXT: Red Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 2;
			break;
		case 88:
			StringCopy(&Var2, "TORSO_P0_17_3" /* GXT: Black Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 3;
			iVar1 = 48;
			break;
		case 89:
			StringCopy(&Var2, "TORSO_P0_17_4" /* GXT: White Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 4;
			iVar1 = 40;
			break;
		case 90:
			StringCopy(&Var2, "TORSO_P0_17_5" /* GXT: Blue Polo Shirt */, 16);
			iVar3 = 17;
			iVar4 = 5;
			iVar1 = 45;
			break;
		case 91:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 18;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 92:
			StringCopy(&Var2, "TORSO_P0_19_0" /* GXT: Off-White Tank Top */, 16);
			iVar3 = 19;
			iVar4 = 0;
			break;
		case 93:
			StringCopy(&Var2, "TORSO_P0_19_1" /* GXT: White Tank Top */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 190;
			break;
		case 94:
			StringCopy(&Var2, "TORSO_P0_19_2" /* GXT: Ash Tank Top */, 16);
			iVar3 = 19;
			iVar4 = 2;
			iVar1 = 190;
			break;
		case 95:
			StringCopy(&Var2, "TORSO_P0_19_3" /* GXT: Gray Tank Top */, 16);
			iVar3 = 19;
			iVar4 = 3;
			iVar1 = 190;
			break;
		case 96:
			StringCopy(&Var2, "TORSO_P0_19_4" /* GXT: Black Tank Top */, 16);
			iVar3 = 19;
			iVar4 = 4;
			iVar1 = 210;
			break;
		case 97:
			StringCopy(&Var2, "TORSO_P0_20_0" /* GXT: Blue Denim Shirt */, 16);
			iVar3 = 20;
			iVar4 = 0;
			break;
		case 98:
			StringCopy(&Var2, "TORSO_P0_20_1" /* GXT: Deep Black Shirt */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 115;
			break;
		case 99:
			StringCopy(&Var2, "TORSO_P0_20_2" /* GXT: Russet Shirt */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 55;
			break;
		case 100:
			StringCopy(&Var2, "TORSO_P0_20_3" /* GXT: Green Cord Shirt */, 16);
			iVar3 = 20;
			iVar4 = 3;
			iVar1 = 110;
			break;
		case 101:
			StringCopy(&Var2, "TORSO_P0_20_4" /* GXT: Gray Shirt */, 16);
			iVar3 = 20;
			iVar4 = 4;
			iVar1 = 99;
			break;
		case 102:
			StringCopy(&Var2, "TORSO_P0_20_5" /* GXT: Fresh Check Shirt */, 16);
			iVar3 = 20;
			iVar4 = 5;
			iVar1 = 49;
			break;
		case 103:
			StringCopy(&Var2, "TORSO_P0_20_6" /* GXT: Southern Plaid Shirt */, 16);
			iVar3 = 20;
			iVar4 = 6;
			iVar1 = 120;
			break;
		case 104:
			StringCopy(&Var2, "TORSO_P0_20_7" /* GXT: Sunrise Yellow Shirt */, 16);
			iVar3 = 20;
			iVar4 = 7;
			iVar1 = 45;
			break;
		case 105:
			StringCopy(&Var2, "TORSO_P0_20_8" /* GXT: White Shirt */, 16);
			iVar3 = 20;
			iVar4 = 8;
			iVar1 = 115;
			break;
		case 106:
			StringCopy(&Var2, "TORSO_P0_20_9" /* GXT: Stone Shirt */, 16);
			iVar3 = 20;
			iVar4 = 9;
			iVar1 = 105;
			break;
		case 107:
			StringCopy(&Var2, "TORSO_P0_20_10" /* GXT: Earth Plaid Shirt */, 16);
			iVar3 = 20;
			iVar4 = 10;
			iVar1 = 90;
			break;
		case 108:
			StringCopy(&Var2, "TORSO_P0_20_11" /* GXT: Green Check Shirt */, 16);
			iVar3 = 20;
			iVar4 = 11;
			iVar1 = 95;
			break;
		case 109:
			StringCopy(&Var2, "TORSO_P0_20_12" /* GXT: Country Plaid Shirt */, 16);
			iVar3 = 20;
			iVar4 = 12;
			iVar1 = 39;
			break;
		case 110:
			StringCopy(&Var2, "TORSO_P0_20_13" /* GXT: Orange Tight Check Shirt */, 16);
			iVar3 = 20;
			iVar4 = 13;
			iVar1 = 95;
			break;
		case 111:
			StringCopy(&Var2, "TORSO_P0_20_14" /* GXT: Bright Blue Plaid Shirt */, 16);
			iVar3 = 20;
			iVar4 = 14;
			iVar1 = 35;
			break;
		case 112:
			StringCopy(&Var2, "TORSO_P0_20_15" /* GXT: Blue Check Shirt */, 16);
			iVar3 = 20;
			iVar4 = 15;
			iVar1 = 95;
			break;
		case 113:
			StringCopy(&Var2, "TORSO_P0_21_0" /* GXT: Gray Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar1 = 88;
			break;
		case 114:
			StringCopy(&Var2, "TORSO_P0_21_1" /* GXT: Ammu-Nation Camo Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 1;
			iVar1 = 60;
			break;
		case 115:
			StringCopy(&Var2, "TORSO_P0_21_2" /* GXT: LSGC Gray Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 2;
			iVar1 = 70;
			break;
		case 116:
			StringCopy(&Var2, "TORSO_P0_21_3" /* GXT: LSGC Urban Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 3;
			iVar1 = 80;
			break;
		case 117:
			StringCopy(&Var2, "TORSO_P0_21_4" /* GXT: LSGC Forest Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 4;
			iVar1 = 90;
			break;
		case 118:
			StringCopy(&Var2, "TORSO_P0_21_5" /* GXT: Ammu-Nation A Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 5;
			iVar1 = 80;
			break;
		case 119:
			StringCopy(&Var2, "TORSO_P0_21_6" /* GXT: Blauser Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 6;
			iVar1 = 70;
			break;
		case 120:
			StringCopy(&Var2, "TORSO_P0_21_7" /* GXT: Penetrators Orange Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 7;
			iVar1 = 95;
			break;
		case 121:
			StringCopy(&Var2, "TORSO_P0_21_8" /* GXT: Crevis Fluorescent Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 8;
			iVar1 = 105;
			break;
		case 122:
			StringCopy(&Var2, "TORSO_P0_21_9" /* GXT: Blue Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 9;
			iVar1 = 95;
			break;
		case 123:
			StringCopy(&Var2, "TORSO_P0_21_10" /* GXT: Green Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 10;
			iVar1 = 110;
			break;
		case 124:
			StringCopy(&Var2, "TORSO_P0_21_11" /* GXT: LS Jardineros Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 11;
			iVar1 = 98;
			break;
		case 125:
			StringCopy(&Var2, "TORSO_P0_21_12" /* GXT: Ash 18 Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 12;
			iVar1 = 88;
			break;
		case 126:
			StringCopy(&Var2, "TORSO_P0_21_13" /* GXT: Red Mist XI Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 13;
			iVar1 = 98;
			break;
		case 127:
			StringCopy(&Var2, "TORSO_P0_21_14" /* GXT: Eris Charcoal Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 14;
			iVar1 = 110;
			break;
		case 128:
			StringCopy(&Var2, "TORSO_P0_21_15" /* GXT: OG Hoodie */, 16);
			iVar3 = 21;
			iVar4 = 15;
			iVar1 = 98;
			break;
		case 129:
			StringCopy(&Var2, "TORSO_P0_22_0" /* GXT: Distressed Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 0;
			break;
		case 130:
			StringCopy(&Var2, "TORSO_P0_22_1" /* GXT: Black Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 1;
			iVar1 = 4950;
			break;
		case 131:
			StringCopy(&Var2, "TORSO_P0_22_2" /* GXT: Chestnut Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 2;
			iVar1 = 4195;
			break;
		case 132:
			StringCopy(&Var2, "TORSO_P0_22_3" /* GXT: Oxblood Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 3;
			iVar1 = 3195;
			break;
		case 133:
			StringCopy(&Var2, "TORSO_P0_22_4" /* GXT: Vintage Black Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 4;
			iVar1 = 2950;
			break;
		case 134:
			StringCopy(&Var2, "TORSO_P0_22_5" /* GXT: Brown Leather Jacket */, 16);
			iVar3 = 22;
			iVar4 = 5;
			iVar1 = 3950;
			break;
		case 135:
			StringCopy(&Var2, "TORSO_P0_23_0" /* GXT: Silver Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar1 = 3200;
			break;
		case 136:
			StringCopy(&Var2, "TORSO_P0_23_1" /* GXT: Gray-Green Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar1 = 3200;
			break;
		case 137:
			StringCopy(&Var2, "TORSO_P0_23_2" /* GXT: Slate Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar1 = 3200;
			break;
		case 138:
			StringCopy(&Var2, "TORSO_P0_23_3" /* GXT: Gray Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar1 = 3200;
			break;
		case 139:
			StringCopy(&Var2, "TORSO_P0_23_4" /* GXT: Blue Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar1 = 3200;
			break;
		case 140:
			StringCopy(&Var2, "TORSO_P0_23_5" /* GXT: Pale Blue Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 5;
			iVar1 = 3200;
			break;
		case 141:
			StringCopy(&Var2, "TORSO_P0_23_6" /* GXT: White Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 6;
			iVar1 = 3200;
			break;
		case 142:
			StringCopy(&Var2, "TORSO_P0_23_7" /* GXT: Warm Gray Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 7;
			iVar1 = 3200;
			break;
		case 143:
			StringCopy(&Var2, "TORSO_P0_23_8" /* GXT: Cream Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 8;
			iVar1 = 3200;
			break;
		case 144:
			StringCopy(&Var2, "TORSO_P0_23_9" /* GXT: Midnight Blue Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 9;
			iVar1 = 3200;
			break;
		case 145:
			StringCopy(&Var2, "TORSO_P0_23_10" /* GXT: Off-White Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 10;
			iVar1 = 3200;
			break;
		case 146:
			StringCopy(&Var2, "TORSO_P0_23_11" /* GXT: Charcoal Wool Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 11;
			iVar1 = 3200;
			break;
		case 147:
			StringCopy(&Var2, "TORSO_P0_23_12" /* GXT: Charcoal Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 12;
			iVar1 = 3200;
			break;
		case 148:
			StringCopy(&Var2, "TORSO_P0_23_13" /* GXT: Ash Plaid Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 13;
			iVar1 = 3200;
			break;
		case 149:
			StringCopy(&Var2, "TORSO_P0_23_14" /* GXT: Beige Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 14;
			iVar1 = 3200;
			break;
		case 150:
			StringCopy(&Var2, "TORSO_P0_23_15" /* GXT: Brown Sports Coat */, 16);
			iVar3 = 23;
			iVar4 = 15;
			iVar1 = 3200;
			break;
		case 151:
			StringCopy(&Var2, "TORSO_P0_24_0" /* GXT: Charcoal Sweater */, 16);
			iVar3 = 24;
			iVar4 = 0;
			iVar1 = 1350;
			break;
		case 152:
			StringCopy(&Var2, "TORSO_P0_24_1" /* GXT: Gray Sweater */, 16);
			iVar3 = 24;
			iVar4 = 1;
			iVar1 = 1400;
			break;
		case 153:
			StringCopy(&Var2, "TORSO_P0_24_2" /* GXT: Beige Sweater */, 16);
			iVar3 = 24;
			iVar4 = 2;
			iVar1 = 1200;
			break;
		case 154:
			StringCopy(&Var2, "TORSO_P0_24_3" /* GXT: Red Sweater */, 16);
			iVar3 = 24;
			iVar4 = 3;
			iVar1 = 1250;
			break;
		case 155:
			StringCopy(&Var2, "TORSO_P0_24_4" /* GXT: Pale Blue Sweater */, 16);
			iVar3 = 24;
			iVar4 = 4;
			iVar1 = 1350;
			break;
		case 156:
			StringCopy(&Var2, "TORSO_P0_24_5" /* GXT: Pale Amethyst Sweater */, 16);
			iVar3 = 24;
			iVar4 = 5;
			iVar1 = 1300;
			break;
		case 157:
			StringCopy(&Var2, "TORSO_P0_24_6" /* GXT: Blue Sweater */, 16);
			iVar3 = 24;
			iVar4 = 6;
			iVar1 = 1380;
			break;
		case 158:
			StringCopy(&Var2, "TORSO_P0_24_7" /* GXT: Pale Jade Sweater */, 16);
			iVar3 = 24;
			iVar4 = 7;
			iVar1 = 1340;
			break;
		case 159:
			StringCopy(&Var2, "TORSO_P0_24_8" /* GXT: Orange Sweater */, 16);
			iVar3 = 24;
			iVar4 = 8;
			iVar1 = 1380;
			break;
		case 160:
			StringCopy(&Var2, "TORSO_P0_24_9" /* GXT: Lemon Sweater */, 16);
			iVar3 = 24;
			iVar4 = 9;
			iVar1 = 1250;
			break;
		case 161:
			StringCopy(&Var2, "TORSO_P0_25_0" /* GXT: Pale Blue Shirt */, 16);
			iVar3 = 25;
			iVar4 = 0;
			iVar1 = 840;
			break;
		case 162:
			StringCopy(&Var2, "TORSO_P0_25_1" /* GXT: Pink Shirt */, 16);
			iVar3 = 25;
			iVar4 = 1;
			iVar1 = 840;
			break;
		case 163:
			StringCopy(&Var2, "TORSO_P0_25_2" /* GXT: White Shirt */, 16);
			iVar3 = 25;
			iVar4 = 2;
			iVar1 = 840;
			break;
		case 164:
			StringCopy(&Var2, "TORSO_P0_25_3" /* GXT: Gray Shirt */, 16);
			iVar3 = 25;
			iVar4 = 3;
			iVar1 = 840;
			break;
		case 165:
			StringCopy(&Var2, "TORSO_P0_25_4" /* GXT: Charcoal Shirt */, 16);
			iVar3 = 25;
			iVar4 = 4;
			iVar1 = 840;
			break;
		case 166:
			StringCopy(&Var2, "TORSO_P0_25_5" /* GXT: Blue Shirt */, 16);
			iVar3 = 25;
			iVar4 = 5;
			iVar1 = 840;
			break;
		case 167:
			StringCopy(&Var2, "TORSO_P0_25_6" /* GXT: Topaz Shirt */, 16);
			iVar3 = 25;
			iVar4 = 6;
			iVar1 = 840;
			break;
		case 168:
			StringCopy(&Var2, "TORSO_P0_25_7" /* GXT: Black Shirt */, 16);
			iVar3 = 25;
			iVar4 = 7;
			iVar1 = 840;
			break;
		case 169:
			StringCopy(&Var2, "TORSO_P0_26_0" /* GXT: Bare Chested */, 16);
			iVar3 = 26;
			iVar4 = 0;
			break;
		case 170:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 27;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 171:
			StringCopy(&Var2, "TORSO_P0_28_0" /* GXT: Eris White Sweater Vest */, 16);
			iVar3 = 28;
			iVar4 = 0;
			break;
		case 172:
			StringCopy(&Var2, "TORSO_P0_28_1" /* GXT: Lobon Sweater Vest */, 16);
			iVar3 = 28;
			iVar4 = 1;
			iVar1 = 130;
			break;
		case 173:
			StringCopy(&Var2, "TORSO_P0_28_2" /* GXT: Eris Blue Sweater Vest */, 16);
			iVar3 = 28;
			iVar4 = 2;
			iVar1 = 110;
			break;
		case 174:
			StringCopy(&Var2, "TORSO_P0_29_0", 16);
			iVar3 = 29;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 175:
			StringCopy(&Var2, "TORSO_P0_30_0" /* GXT: Gray Jacket */, 16);
			iVar3 = 30;
			iVar4 = 0;
			iVar1 = 290;
			break;
		case 176:
			StringCopy(&Var2, "TORSO_P0_30_1" /* GXT: Black Jacket */, 16);
			iVar3 = 30;
			iVar4 = 1;
			iVar1 = 320;
			break;
		case 177:
			StringCopy(&Var2, "TORSO_P0_31_0" /* GXT: Red Check Winter Shirt */, 16);
			iVar3 = 31;
			iVar4 = 0;
			iVar1 = 59;
			break;
		case 178:
			StringCopy(&Var2, "TORSO_P0_31_1" /* GXT: Blue Check Winter Shirt */, 16);
			iVar3 = 31;
			iVar4 = 1;
			iVar1 = 55;
			break;
		case 179:
			StringCopy(&Var2, "TORSO_P0_31_2" /* GXT: Black Winter Shirt */, 16);
			iVar3 = 31;
			iVar4 = 2;
			iVar1 = 59;
			break;
		case 180:
			StringCopy(&Var2, "TORSO_P0_31_3" /* GXT: Brown Check Winter Shirt */, 16);
			iVar3 = 31;
			iVar4 = 3;
			iVar1 = 49;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_233(int iParam0)//Position - 0x28622
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 3;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "TORSO_P0_0_0" /* GXT: Gray Jacket */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "TORSO_P0_0_0" /* GXT: Gray Jacket */, 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "TORSO_P0_0_2" /* GXT: Charcoal Jacket */, 16);
			iVar3 = 0;
			iVar4 = 2;
			iVar1 = 3500;
			break;
		case 3:
			StringCopy(&Var2, "TORSO_P0_0_3" /* GXT: Slate Jacket */, 16);
			iVar3 = 0;
			iVar4 = 3;
			break;
		case 4:
			StringCopy(&Var2, "TORSO_P0_0_4" /* GXT: Topaz Jacket */, 16);
			iVar3 = 0;
			iVar4 = 4;
			break;
		case 5:
			StringCopy(&Var2, "TORSO_P0_0_5" /* GXT: Pale Blue Jacket */, 16);
			iVar3 = 0;
			iVar4 = 5;
			break;
		case 6:
			StringCopy(&Var2, "TORSO_P0_0_6" /* GXT: Cream Jacket */, 16);
			iVar3 = 0;
			iVar4 = 6;
			break;
		case 7:
			StringCopy(&Var2, "TORSO_P0_0_7" /* GXT: Olive Jacket */, 16);
			iVar3 = 0;
			iVar4 = 7;
			break;
		case 8:
			StringCopy(&Var2, "TORSO_P0_0_8" /* GXT: Off-White Jacket */, 16);
			iVar3 = 0;
			iVar4 = 8;
			break;
		case 9:
			StringCopy(&Var2, "TORSO_P0_0_9" /* GXT: Navy Jacket */, 16);
			iVar3 = 0;
			iVar4 = 9;
			break;
		case 10:
			StringCopy(&Var2, "TORSO_P0_0_10" /* GXT: Beige Jacket */, 16);
			iVar3 = 0;
			iVar4 = 10;
			break;
		case 11:
			StringCopy(&Var2, "TORSO_P0_0_11" /* GXT: Smoke Jacket */, 16);
			iVar3 = 0;
			iVar4 = 11;
			break;
		case 12:
			StringCopy(&Var2, "TORSO_P0_0_12" /* GXT: Blue-Gray Jacket */, 16);
			iVar3 = 0;
			iVar4 = 12;
			break;
		case 13:
			StringCopy(&Var2, "TORSO_P0_0_13" /* GXT: Ash Jacket */, 16);
			iVar3 = 0;
			iVar4 = 13;
			break;
		case 14:
			StringCopy(&Var2, "TORSO_P0_0_14" /* GXT: Sand Jacket */, 16);
			iVar3 = 0;
			iVar4 = 14;
			break;
		case 15:
			StringCopy(&Var2, "TORSO_P0_0_15" /* GXT: Black Jacket */, 16);
			iVar3 = 0;
			iVar4 = 15;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 17:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar1 = 20;
			break;
		case 18:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 1;
			iVar1 = 18;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 2;
			iVar1 = 22;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 2;
			iVar4 = 3;
			iVar1 = 25;
			break;
		case 21:
			StringCopy(&Var2, "TORSO_P0_2_4" /* GXT: Suburban Yellow T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 4;
			iVar1 = 19;
			break;
		case 22:
			StringCopy(&Var2, "TORSO_P0_2_5" /* GXT: Rearwall Slate T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 5;
			iVar1 = 20;
			break;
		case 23:
			StringCopy(&Var2, "TORSO_P0_2_6" /* GXT: Rearwall Blue T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 6;
			iVar1 = 22;
			break;
		case 24:
			StringCopy(&Var2, "TORSO_P0_2_7" /* GXT: Rearwall Gray T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 7;
			iVar1 = 18;
			break;
		case 25:
			StringCopy(&Var2, "TORSO_P0_2_8" /* GXT: Suburban Navy T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 8;
			iVar1 = 39;
			break;
		case 26:
			StringCopy(&Var2, "TORSO_P0_2_9" /* GXT: Suburban Russet T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 9;
			iVar1 = 32;
			break;
		case 27:
			StringCopy(&Var2, "TORSO_P0_2_10" /* GXT: Suburban Orange T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 10;
			iVar1 = 35;
			break;
		case 28:
			StringCopy(&Var2, "TORSO_P0_2_11" /* GXT: Suburban Gray T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 11;
			iVar1 = 35;
			break;
		case 29:
			StringCopy(&Var2, "TORSO_P0_2_12" /* GXT: White T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 12;
			iVar1 = 210;
			break;
		case 30:
			StringCopy(&Var2, "TORSO_P0_2_13" /* GXT: Forest Green T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 13;
			iVar1 = 250;
			break;
		case 31:
			StringCopy(&Var2, "TORSO_P0_2_14" /* GXT: Pale Blue T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 14;
			iVar1 = 290;
			break;
		case 32:
			StringCopy(&Var2, "TORSO_P0_2_15" /* GXT: Ash T-Shirt */, 16);
			iVar3 = 2;
			iVar4 = 15;
			iVar1 = 310;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 1;
			bVar0 = true;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 36:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 37:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 38:
			StringCopy(&Var2, "TORSO_P0_7_0" /* GXT: Brown Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 150;
			break;
		case 39:
			StringCopy(&Var2, "TORSO_P0_7_1" /* GXT: Woodland Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 160;
			break;
		case 40:
			StringCopy(&Var2, "TORSO_P0_7_2" /* GXT: Taupe Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 2;
			iVar1 = 150;
			break;
		case 41:
			StringCopy(&Var2, "TORSO_P0_7_3" /* GXT: Brown Woven Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 3;
			iVar1 = 150;
			break;
		case 42:
			StringCopy(&Var2, "TORSO_P0_7_4" /* GXT: Field Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 4;
			iVar1 = 160;
			break;
		case 43:
			StringCopy(&Var2, "TORSO_P0_7_5" /* GXT: Forest Shooting Vest */, 16);
			iVar3 = 7;
			iVar4 = 5;
			iVar1 = 160;
			break;
		case 44:
			StringCopy(&Var2, "TORSO_P0_8_0" /* GXT: Blue-Gray Shirt */, 16);
			iVar3 = 8;
			iVar4 = 0;
			break;
		case 45:
			StringCopy(&Var2, "TORSO_P0_8_1" /* GXT: White Shirt */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 52;
			break;
		case 46:
			StringCopy(&Var2, "TORSO_P0_8_2" /* GXT: Camel Shirt */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 52;
			break;
		case 47:
			StringCopy(&Var2, "TORSO_P0_8_3" /* GXT: Black Shirt */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 55;
			break;
		case 48:
			StringCopy(&Var2, "TORSO_P0_8_4" /* GXT: Citrus Hawaiian Shirt */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 55;
			break;
		case 49:
			StringCopy(&Var2, "TORSO_P0_8_5" /* GXT: Orange Grove Shirt */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 58;
			break;
		case 50:
			StringCopy(&Var2, "TORSO_P0_8_6" /* GXT: Parrot Print Shirt */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 58;
			break;
		case 51:
			StringCopy(&Var2, "TORSO_P0_8_7" /* GXT: Blue Geometric Shirt */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 62;
			break;
		case 52:
			StringCopy(&Var2, "TORSO_P0_8_8" /* GXT: Gray Patterned Shirt */, 16);
			iVar3 = 8;
			iVar4 = 8;
			iVar1 = 65;
			break;
		case 53:
			StringCopy(&Var2, "TORSO_P0_8_9" /* GXT: Peach Patterned Shirt */, 16);
			iVar3 = 8;
			iVar4 = 9;
			iVar1 = 65;
			break;
		case 54:
			StringCopy(&Var2, "TORSO_P0_8_10" /* GXT: Tropical Shirt */, 16);
			iVar3 = 8;
			iVar4 = 10;
			iVar1 = 68;
			break;
		case 55:
			StringCopy(&Var2, "TORSO_P0_8_11" /* GXT: Navy Floral Shirt */, 16);
			iVar3 = 8;
			iVar4 = 11;
			iVar1 = 68;
			break;
		case 56:
			StringCopy(&Var2, "TORSO_P0_8_12" /* GXT: Lime Plaid Shirt */, 16);
			iVar3 = 8;
			iVar4 = 12;
			iVar1 = 55;
			break;
		case 57:
			StringCopy(&Var2, "TORSO_P0_8_13" /* GXT: Brown Patterned Shirt */, 16);
			iVar3 = 8;
			iVar4 = 13;
			iVar1 = 62;
			break;
		case 58:
			StringCopy(&Var2, "TORSO_P0_8_14" /* GXT: Vintage Hawaiian Shirt */, 16);
			iVar3 = 8;
			iVar4 = 14;
			iVar1 = 58;
			break;
		case 59:
			StringCopy(&Var2, "TORSO_P0_8_15" /* GXT: Blue Plaid Shirt */, 16);
			iVar3 = 8;
			iVar4 = 15;
			iVar1 = 58;
			break;
		default:
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_234(int iParam0)//Position - 0x28CAE
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 2;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "HAIR_P0_0_0" /* GXT: Lexington */, 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "HAIR_P0_1_0" /* GXT: The Wood */, 16);
			iVar3 = 1;
			iVar4 = 0;
			break;
		case 2:
			StringCopy(&Var2, "HAIR_P0_2_0" /* GXT: Clippered Cut */, 16);
			iVar3 = 2;
			iVar4 = 0;
			break;
		case 3:
			StringCopy(&Var2, "HAIR_P0_3_0" /* GXT: Grown Out */, 16);
			iVar3 = 3;
			iVar4 = 0;
			break;
		case 4:
			StringCopy(&Var2, "HAIR_P0_4_0" /* GXT: Slicker */, 16);
			iVar3 = 4;
			iVar4 = 0;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 6, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_235(int iParam0)//Position - 0x28D95
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 0;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 6;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 7, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

int func_236(int iParam0, float fParam1)//Position - 0x2F2AF
{
	var uVar0;
	struct<3> Var1;
	if ((((MISC::GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(iParam0, joaat("WEAPON_GRENADE"), fParam1, &Var1, &uVar0, false) || MISC::GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(iParam0, joaat("WEAPON_SMOKEGRENADE"), fParam1, &Var1, &uVar0, false)) || MISC::GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(iParam0, joaat("WEAPON_BZGAS"), fParam1, &Var1, &uVar0, false)) || MISC::GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(iParam0, joaat("WEAPON_STICKYBOMB"), fParam1, &Var1, &uVar0, false)) || MISC::GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(iParam0, joaat("WEAPON_MOLOTOV"), fParam1, &Var1, &uVar0, false))
	{
		if (__LIB_10__.func_619(iParam0, Var1, 90f, 0))
		{
			return 1;
		}
	}
	return 0;
}

void func_237(int iParam0)//Position - 0x3945D
{
	if (iParam0 == 1)
	{
		if (BitTest(Global_100441.f_20, 4))
		{
			__LIB_0__.func_131();
			MISC::CLEAR_BIT(&(Global_100441.f_20), 4);
		}
	}
	else
	{
		__LIB_0__.func_130();
		MISC::SET_BIT(&(Global_100441.f_20), 4);
	}
}

void func_238()//Position - 0x394C5
{
	Global_100441 = 13;
	Global_100441.f_1 = -1;
	Global_100441.f_2 = 0;
	Global_100441.f_30 = 0f;
	MISC::CLEAR_BIT(&(Global_100441.f_20), 25);
	Global_100475 = 0;
	__LIB_0__.func_12(0);
	__LIB_0__.func_11();
	__LIB_0__.func_10();
	Global_100441.f_18 = -1;
	Global_100441.f_19 = -1;
}

void func_239()//Position - 0x7B6
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Local_56.f_0)
	{
		__LIB_9__.func_801(&(Local_56[iVar0 /*4*/]));
		iVar0++;
	}
}

void func_240(int* iParam0, bool bParam1)//Position - 0x1145
{
	if (bParam1)
	{
		__LIB_0__.func_123(iParam0);
	}
	else
	{
		__LIB_0__.func_122(iParam0, 0);
	}
}

void func_241(int* iParam0, bool bParam1)//Position - 0x11D3
{
	if (bParam1)
	{
		__LIB_0__.func_0(iParam0);
	}
	else
	{
		__LIB_0__.func_124(iParam0, 1, 0, 1);
	}
}

void func_242(int iParam0, bool bParam1)//Position - 0x2A4D
{
	if (__LIB_1__.func_197(iParam0))
	{
		PED::SET_PED_COMBAT_ATTRIBUTES(iParam0, 5, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(iParam0, 17, true);
		PED::SET_PED_FLEE_ATTRIBUTES(iParam0, 512, false);
		if (!__LIB_4__.func_465(iParam0, joaat("SCRIPT_TASK_SMART_FLEE_PED")))
		{
			TASK::CLEAR_PED_TASKS(iParam0);
			TASK::CLEAR_PED_SECONDARY_TASK(iParam0);
			TASK::TASK_LOOK_AT_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), 3000, 0, 2);
			TASK::TASK_SMART_FLEE_PED(iParam0, PLAYER::PLAYER_PED_ID(), 10000f, -1, false, false);
		}
		if (bParam1)
		{
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
		}
		PED::SET_PED_KEEP_TASK(iParam0, true);
	}
}

void func_243(int iParam0, bool bParam1)//Position - 0x2E58
{
	char* sVar0;
	int iVar1;
	int iVar2;
	if (__LIB_1__.func_197(iParam0))
	{
		iVar1 = 2;
		if (bParam1)
		{
			iVar1 = 3;
		}
		iVar2 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar1);
		if (iVar2 == 0)
		{
			sVar0 = "SCREAM_PANIC";
		}
		else if (iVar2 == 1)
		{
			sVar0 = "SCREAM_TERROR";
		}
		else
		{
			sVar0 = "SUPER_HIGH_FALL";
		}
		if (PED::IS_PED_MALE(iParam0))
		{
			__LIB_5__.func_759(iParam0, sVar0, "WAVELOAD_PAIN_MALE", 24);
		}
		else
		{
			__LIB_5__.func_759(iParam0, sVar0, "WAVELOAD_PAIN_FEMALE", 24);
		}
	}
}

void func_244(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, bool bParam5, int iParam6)//Position - 0x29748
{
	if (HUD::DOES_BLIP_EXIST(*uParam0))
	{
		if (bParam5)
		{
			HUD::SET_BLIP_COLOUR(*uParam0, 1);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam0, "BLIP_ENEMY" /* GXT: Enemy */);
			if (iParam6 && !__LIB_0__.func_75())
			{
				if (!HUD::IS_MESSAGE_BEING_DISPLAYED() || __LIB_0__.func_405(sParam2, 0, 0))
				{
					__LIB_0__.func_210(sParam1, 7500, 0);
				}
			}
		}
		else
		{
			HUD::SET_BLIP_COLOUR(*uParam0, 3);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam0, "BLIP_FRIEND" /* GXT: Friend */);
			if (iParam6 && !__LIB_0__.func_75())
			{
				if (!HUD::IS_MESSAGE_BEING_DISPLAYED() || __LIB_0__.func_405(sParam1, 0, 0))
				{
					__LIB_0__.func_210(sParam2, 7500, 0);
				}
			}
		}
		*iParam3 = MISC::GET_GAME_TIMER();
		*iParam4 = MISC::GET_GAME_TIMER();
	}
}

int func_245(char* sParam0, bool bParam1)//Position - 0x2980D
{
	struct<6> Var0;
	if (__LIB_0__.func_75())
	{
		Var0 = { __LIB_0__.func_390() };
		if (MISC::ARE_STRINGS_EQUAL(&Var0, sParam0))
		{
			return 1;
		}
		if (bParam1)
		{
			if (MISC::ARE_STRINGS_EQUAL(&Var0, "NULL"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_246()//Position - 0x2C1BC
{
	int iVar0;
	int iVar1;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	}
	else if (PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_ENTERING(PLAYER::PLAYER_PED_ID());
	}
	if (!__LIB_1__.func_183(iVar0))
	{
		return 0;
	}
	else
	{
		if (VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(iVar0) == 0)
		{
			return 0;
		}
		iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
		if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar1))
		{
			return 0;
		}
		if (VEHICLE::IS_THIS_MODEL_A_BICYCLE(iVar1))
		{
			return 0;
		}
		if (VEHICLE::IS_THIS_MODEL_A_QUADBIKE(iVar1))
		{
			return 0;
		}
	}
	return 1;
}

int func_247(var uParam0, struct<3> Param1, int iParam2, var uParam3, int iParam4, int iParam5)//Position - 0x2C6DA
{
	var uVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	int iVar4;
	iVar3 = 0;
	if (!__LIB_0__.func_121(iParam2))
	{
		*uParam0 = 0;
		return 0;
	}
	if (*uParam0 == 0)
	{
		Var1 = { __LIB_10__.func_616(iParam2, iParam5) };
		*uParam0 = SHAPETEST::START_SHAPE_TEST_LOS_PROBE(Param1, Var1 + Var1 - Param1 * Vector(0.1f, 0.1f, 0.1f), 511, iParam4, 7);
		return 0;
	}
	iVar4 = SHAPETEST::GET_SHAPE_TEST_RESULT(*uParam0, &uVar0, &Var1, &uVar2, &iVar3);
	if (iVar4 == 0)
	{
		*uParam0 = 0;
		return 0;
	}
	else if (iVar4 == 1)
	{
		return 0;
	}
	*uParam0 = 0;
	if (ENTITY::IS_ENTITY_A_PED(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iVar3) == iParam2)
		{
			if (bLocal_57)
			{
				GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
			}
			*uParam3 = MISC::GET_GAME_TIMER();
			return 1;
		}
		return 0;
	}
	if (ENTITY::IS_ENTITY_A_VEHICLE(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam2, false))
		{
			if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar3) == PED::GET_VEHICLE_PED_IS_IN(iParam2, false))
			{
				if (bLocal_57)
				{
					GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
				}
				*uParam3 = MISC::GET_GAME_TIMER();
				return 1;
			}
		}
		return 0;
	}
	return 0;
}

int func_248(int iParam0, struct<3> Param1, int iParam2, int iParam3, float fParam4)//Position - 0x2D7DC
{
	struct<3> Var0;
	var uVar1;
	char[] cVar2[8];
	char* sVar3;
	if (__LIB_1__.func_197(*iParam0))
	{
		if (!__LIB_0__.func_75())
		{
			Var0 = { ENTITY::GET_ENTITY_COORDS(*iParam0, true) };
			if (SYSTEM::VDIST2(Param1, Var0) < (fParam4 * fParam4))
			{
				if (MISC::GET_GAME_TIMER() - *iParam2) > (iParam3 + MISC::GET_RANDOM_INT_IN_RANGE(0, 2000))
				{
					uVar1 = 16;
					__LIB_0__.func_203(&uVar1, 4, *iParam0, "MAUDE", 0, 1);
					cVar2 = "BBCAUD";
					sVar3 = "BBC_loiter";
					__LIB_10__.func_617(&uVar1, cVar2, sVar3, 4, 0, 0);
					*iParam2 = MISC::GET_GAME_TIMER();
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_249(int iParam0, struct<3> Param1, float fParam2, bool bParam3, bool bParam4)//Position - 0x2F72D
{
	__LIB_10__.func_701(iParam0, Param1, fParam2, bParam3, 1);
	if (bParam4)
	{
		if (__LIB_0__.func_121(iParam0))
		{
			PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(iParam0, false, false);
		}
	}
}

int func_250(var uParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x1362
{
	if (!ENTITY::DOES_ENTITY_EXIST(*uParam0))
	{
		if (__LIB_10__.func_634(iParam1))
		{
			*uParam0 = PED::CREATE_PED(26, iParam1, Param2, fParam3, true, true);
			if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
			{
				if (bParam5)
				{
					ENTITY::FREEZE_ENTITY_POSITION(*uParam0, true);
				}
				if (bParam6)
				{
					if (!PED::IS_PED_INJURED(*uParam0))
					{
						PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(*uParam0, true);
					}
				}
				if (bParam4)
				{
					__LIB_10__.func_633(iParam1, 1);
				}
				return 1;
			}
		}
	}
	else
	{
		if (bParam4)
		{
			__LIB_10__.func_633(iParam1, 0);
		}
		return 1;
	}
	return 0;
}

void func_251()//Position - 0x1886
{
	if (__LIB_0__.func_121(Local_68.f_9))
	{
		if (CUTSCENE::CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY())
		{
			CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sLocal_154, Local_68.f_9, 0);
		}
	}
	if (__LIB_0__.func_121(Local_75.f_0))
	{
		if (CUTSCENE::CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY())
		{
			CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sLocal_153, Local_75.f_0, 0);
		}
	}
}

void func_252(int iParam0)//Position - 0x1CE3
{
	if (__LIB_1__.func_197(*iParam0))
	{
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 2, false);
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 64, false);
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 128, false);
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 8, false);
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 1, false);
		PED::SET_PED_FLEE_ATTRIBUTES(*iParam0, 32, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*iParam0, 5, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*iParam0, 17, true);
		PED::SET_PED_CONFIG_FLAG(*iParam0, 118, true);
	}
}

int func_253(int iParam0, int iParam1, int iParam2)//Position - 0x2B2D
{
	int iVar0;
	if (__LIB_1__.func_197(*iParam0))
	{
		if (ENTITY::IS_ENTITY_PLAYING_ANIM(*iParam0, __LIB_10__.func_625(), __LIB_10__.func_631(), 3))
		{
			if (!PED::IS_PED_RAGDOLL(*iParam0) || TASK::IS_PED_GETTING_UP(*iParam0))
			{
				STREAMING::REQUEST_ANIM_DICT(__LIB_10__.func_637());
				if (STREAMING::HAS_ANIM_DICT_LOADED(__LIB_10__.func_637()))
				{
					*iParam2 = PED::CREATE_SYNCHRONIZED_SCENE(2727.4f, 4145.56f, 43.68f, 0f, 0f, -92.17f, 2);
					PED::SET_SYNCHRONIZED_SCENE_LOOPED(*iParam2, false);
					PED::SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(*iParam2, false);
					if (__LIB_4__.func_465(*iParam0, joaat("SCRIPT_TASK_SYNCHRONIZED_SCENE")))
					{
						ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(*iParam0, -1000f, true);
					}
					TASK::TASK_SYNCHRONIZED_SCENE(*iParam0, *iParam2, __LIB_10__.func_637(), __LIB_10__.func_635(), 1000f, -4f, 4626, 0, 1000f, 0);
					PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(*iParam0, false, false);
					if (__LIB_0__.func_121(*iParam1))
					{
						if (ENTITY::IS_ENTITY_PLAYING_ANIM(*iParam1, __LIB_10__.func_625(), __LIB_10__.func_630(), 3))
						{
							ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(*iParam1, -16f, false);
						}
						iVar0 = 0;
						iVar0 += 16;
						iVar0 += 64;
						iVar0 += 512;
						iVar0 += 4096;
						ENTITY::PLAY_SYNCHRONIZED_ENTITY_ANIM(*iParam1, *iParam2, __LIB_10__.func_636(), __LIB_10__.func_637(), 16f, -4f, iVar0, 1000f);
					}
					return 1;
				}
			}
			else
			{
				return 1;
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

int func_254(var uParam0)//Position - 0x2959F
{
	struct<3> Var0;
	if (__LIB_1__.func_197(*uParam0))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(*uParam0, false) };
		if (!__LIB_10__.func_643(uParam0))
		{
			if (MISC::IS_PROJECTILE_IN_AREA(Var0 - Vector(7f, 7f, 7f), Var0 + Vector(7f, 7f, 7f), false))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_255(int iParam0, struct<3> Param1, bool bParam2, bool bParam3, bool bParam4, int iParam5)//Position - 0x29A2B
{
	int iVar0;
	if (__LIB_1__.func_197(iParam0))
	{
		if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
		{
			if (WEAPON::HAS_PED_BEEN_DAMAGED_BY_WEAPON(iParam0, 0, 2))
			{
				if (!WEAPON::HAS_PED_BEEN_DAMAGED_BY_WEAPON(iParam0, joaat("WEAPON_STUNGUN"), 0))
				{
					WEAPON::CLEAR_PED_LAST_WEAPON_DAMAGE(iParam0);
					if (PED::GET_PED_LAST_DAMAGE_BONE(iParam0, &iVar0))
					{
						PED::CLEAR_PED_LAST_DAMAGE_BONE(iParam0);
						switch (iVar0)
						{
							case 11816:
							case 23553:
							case 24816:
							case 24817:
							case 24818:
							case 39317:
							case 58271:
							case 63931:
							case 51826:
							case 36864:
								PED::CLEAR_PED_LAST_DAMAGE_BONE(iParam0);
								WEAPON::CLEAR_PED_LAST_WEAPON_DAMAGE(iParam0);
								ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(iParam0);
								return 1;
								break;
							}
						}
					}
			}
			PED::CLEAR_PED_LAST_DAMAGE_BONE(iParam0);
			WEAPON::CLEAR_PED_LAST_WEAPON_DAMAGE(iParam0);
			ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(iParam0);
			if (ENTITY::GET_ENTITY_HEALTH(iParam0) < iParam5)
			{
				return 1;
			}
			if (PED::IS_PED_RAGDOLL(iParam0))
			{
				return 1;
			}
			if (__LIB_10__.func_646(iParam0, Param1))
			{
				return 1;
			}
		}
		ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(iParam0);
		if (bParam3)
		{
			if (__LIB_10__.func_645(iParam0, Param1, 1112014848, 1084227584))
			{
				return 1;
			}
		}
		if (bParam4)
		{
			if (PED::IS_PED_BEING_STUNNED(iParam0, 0))
			{
				return 1;
			}
		}
		if (bParam2)
		{
			if (__LIB_0__.func_530(iParam0, Param1, 5f, 1))
			{
				if (PED::IS_PED_RAGDOLL(iParam0))
				{
					return 1;
				}
				if (__LIB_0__.func_530(iParam0, Param1, 1f, 1))
				{
					return 1;
				}
			}
			if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(iParam0, PLAYER::PLAYER_PED_ID()))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_256()//Position - 0x2C5B6
{
	if (!iLocal_82)
	{
		return 1;
	}
	if (__LIB_20__.func_245(sLocal_148, 0))
	{
		return 1;
	}
	if (iLocal_58 != 3 && iLocal_58 != 6)
	{
		return 1;
	}
	if (TASK::IS_PED_GETTING_UP(Local_68.f_9) || PED::IS_PED_RAGDOLL(Local_68.f_9))
	{
		iLocal_142 = MISC::GET_GAME_TIMER();
		return 1;
	}
	if (!__LIB_10__.func_638(iLocal_142, 2000))
	{
		return 1;
	}
	return 0;
}

int func_257(int iParam0)//Position - 0x2D687
{
	int iVar0;
	if (__LIB_1__.func_183(*iParam0))
	{
		if (PED::IS_PED_JACKING(PLAYER::PLAYER_PED_ID()))
		{
			return 1;
		}
		iVar0 = PED::GET_JACK_TARGET(PLAYER::PLAYER_PED_ID());
		if (__LIB_0__.func_121(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_258(int iParam0, int iParam1, int iParam2)//Position - 0x2ED51
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = __LIB_10__.func_663(iParam0);
	if (iVar0 == -1)
	{
		return 0;
	}
	iVar1 = Global_44257[iParam1 /*12*/].f_3;
	if (iVar1 >= 3)
	{
		return 0;
	}
	iVar2 = -1;
	iVar3 = 0;
	iVar4 = iParam2;
	iVar3 = 0;
	while (iVar3 < Global_53557[iVar0 /*203*/].f_9)
	{
		if (Global_53557[iVar0 /*203*/].f_10[iVar3 /*48*/] == iParam1)
		{
			if (iVar4 == 0)
			{
				iVar2 = iVar3;
			}
			else
			{
				iVar4 = (iVar4 - 1);
			}
		}
		iVar3++;
	}
	if (iVar2 == -1)
	{
		return 0;
	}
	iVar3 = 0;
	iVar3 = 0;
	while (iVar3 < 16)
	{
		if ((Global_53195[iVar1 /*120*/].f_86[iVar3] && Global_53195[iVar1 /*120*/].f_18[iVar3] == Global_53557[iVar0 /*203*/].f_1) && Global_53195[iVar1 /*120*/].f_1[iVar3] == iVar2)
		{
			return Global_53195[iVar1 /*120*/].f_69[iVar3];
		}
		iVar3++;
	}
	return 0;
}

int func_259(var uParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4)//Position - 0x368A1
{
	if (!ENTITY::DOES_ENTITY_EXIST(*uParam0))
	{
		if (__LIB_10__.func_634(iParam1))
		{
			*uParam0 = VEHICLE::CREATE_VEHICLE(iParam1, Param2, fParam3, true, true, false);
			if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
			{
				if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*uParam0))
				{
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*uParam0, true, false);
				}
				if (__LIB_1__.func_183(*uParam0))
				{
					ENTITY::SET_ENTITY_COORDS(*uParam0, Param2, true, false, false, true);
					ENTITY::SET_ENTITY_HEADING(*uParam0, fParam3);
				}
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam0, 5f);
				if (bParam4)
				{
					__LIB_10__.func_633(iParam1, 1);
				}
				return 1;
			}
		}
	}
	else
	{
		if (bParam4)
		{
			__LIB_10__.func_633(iParam1, 0);
		}
		return 1;
	}
	return 0;
}

int func_260(int iParam0)//Position - 0xE174
{
	if (iParam0 == 145)
	{
		return 7;
	}
	if (iParam0 < __LIB_0__.func_505())
	{
		return __LIB_9__.func_605(iParam0);
	}
	if (iParam0 == 144)
	{
		return 7;
	}
	if (iParam0 == __LIB_0__.func_505())
	{
		return 6;
	}
	if (iParam0 == 188)
	{
		return 6;
	}
	return 6;
}

void func_261(int iParam0)//Position - 0x2442F
{
	__LIB_0__.func_59(iParam0, 1);
	Global_113386.f_18574[iParam0 /*6*/].f_3 = __LIB_0__.func_58();
	Global_113386.f_18574.f_380++;
}

void func_262(var uParam0, int iParam1)//Position - 0x314EC
{
	__LIB_10__.func_692(&(uParam0->f_28), iParam1);
}

void func_263(struct<3> Param0, struct<3> Param1, var uParam2, var uParam3, int iParam4)//Position - 0x35CFF
{
	struct<3> Var0;
	Var0 = { Param1 - Param0 };
	__LIB_4__.func_765(Var0, uParam2, uParam3, iParam4);
}

void func_264(var uParam0)//Position - 0x3A3B3
{
	__LIB_0__.func_136(&(uParam0->f_28));
	__LIB_0__.func_136(&(uParam0->f_35));
	__LIB_0__.func_136(&(uParam0->f_41));
}

int func_265(var uParam0, int iParam1)//Position - 0xE63
{
	if (iParam1 != 1 || HUD::IS_SUBTITLE_PREFERENCE_SWITCHED_ON())
	{
		if (HUD::IS_MESSAGE_BEING_DISPLAYED())
		{
			return 1;
		}
		if (__LIB_0__.func_442(uParam0))
		{
			return 1;
		}
	}
	if (iParam1 != 2 || HUD::IS_SUBTITLE_PREFERENCE_SWITCHED_ON())
	{
		if (__LIB_0__.func_75() && !__LIB_0__.func_436())
		{
			return 1;
		}
	}
	return 0;
}

bool func_266(int iParam0, bool bParam1, int iParam2, bool bParam3)//Position - 0x2506A
{
	bool bVar0;
	int iVar1;
	int iVar2;
	struct<5> Var3;
	int iVar4;
	bool bVar5;
	int iVar6;
	Global_1922024 = 1;
	bVar0 = false;
	Var3.f_4 = 3;
	Var3.f_8 = 3;
	Var3.f_64 = 3;
	Var3.f_75 = 3;
	Var3.f_91 = 3;
	__LIB_0__.func_64(&Var3, iParam0);
	if (__LIB_10__.func_694())
	{
		iVar1 = Global_113386.f_7261.f_227[iParam0];
	}
	else
	{
		iVar1 = Global_42586.f_227[iParam0];
	}
	iVar2 = Global_39990[iParam0];
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !bParam3)
	{
		Global_1922024 = 1;
	}
	else
	{
		bVar5 = true;
		if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != MISC::GET_HASH_KEY("standard_global_reg"))
		{
			if (iParam2 == 0)
			{
				if (Global_39592[iParam0] && MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), Var3, true) < 200f)
				{
					bVar5 = false;
					Global_1922024 = 1;
				}
				if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()) || TASK::IS_PED_BEING_ARRESTED(PLAYER::PLAYER_PED_ID()))
				{
					if (!CAM::IS_SCREEN_FADED_OUT())
					{
						bVar5 = false;
						Global_1922024 = 1;
					}
				}
			}
		}
		if (STREAMING::IS_NEW_LOAD_SCENE_ACTIVE() && (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() || STREAMING::GET_PLAYER_SWITCH_STATE() != 5))
		{
			bVar5 = false;
			Global_1922024 = 1;
		}
		if (bVar5)
		{
			switch (Var3.f_3)
			{
				case 0:
					if (iVar1 == 2)
					{
					}
					else
					{
						if (Var3.f_4[iVar1] != 0)
						{
							ENTITY::REMOVE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar1], false);
						}
						if (Var3.f_4[iVar2] != 0)
						{
							ENTITY::CREATE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar2], true);
						}
						Global_41186[iParam0] = 1;
					}
					bVar0 = true;
					break;
				case 1:
					if (iVar1 == 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[0 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_34));
								Global_1922024 = 1;
							}
						}
					}
					else if (iVar1 == 1)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
					}
					else if (iVar1 == 2)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
					}
					Global_40987[iParam0] = 1;
					Global_41186[iParam0] = 1;
					bVar0 = true;
					break;
				case 2:
					iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var3, &(Var3.f_42));
					if (iVar6 != 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_50)) != MISC::GET_HASH_KEY(""))
						{
							if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_50)))
							{
								INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_50));
							}
						}
						if (iVar1 == 0)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
						}
						else if (iVar1 == 1)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
						}
						else if (iVar1 == 2)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
						}
						if (bParam1)
						{
							INTERIOR::REFRESH_INTERIOR(iVar6);
						}
					}
					Global_41186[iParam0] = 1;
					Global_40987[iParam0] = 1;
					bVar0 = true;
					break;
				case 3:
					if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var3, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), true) < 250f)
					{
						iVar4 = OBJECT::GET_RAYFIRE_MAP_OBJECT(Var3, 25f, &(Var3.f_8[0 /*8*/]));
						if (OBJECT::DOES_RAYFIRE_MAP_OBJECT_EXIST(iVar4))
						{
							if (iVar1 == 0)
							{
								OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 3);
								Global_41186[iParam0] = 1;
								bVar0 = true;
							}
							else if (iVar1 == 1)
							{
								if ((OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 6 && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 7) && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 8)
								{
									OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 10);
									Global_41186[iParam0] = 1;
									bVar0 = true;
								}
							}
							else if (iVar1 == 2)
							{
								bVar0 = true;
							}
						}
					}
					break;
				case 4:
					if (iVar1 == 0)
					{
						ENTITY::REMOVE_MODEL_SWAP(Var3, 50f, Var3.f_4[1], Var3.f_4[0], false);
						MISC::CLEAR_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					else if (iVar1 == 1)
					{
						ENTITY::CREATE_MODEL_SWAP(Var3, 50f, Var3.f_4[0], Var3.f_4[1], true);
						MISC::SET_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					bVar0 = true;
					break;
			}
			if (bVar0)
			{
				Global_39791[iParam0] = 0;
				Global_39990[iParam0] = iVar1;
				if (!__LIB_10__.func_694())
				{
					if (!Global_40587[iParam0])
					{
						Global_40587[iParam0] = 1;
						Global_40786++;
					}
				}
			}
		}
	}
	return bVar0;
}

void func_267(int iParam0)//Position - 0x3261C
{
	float fVar0;
	fVar0 = __LIB_4__.func_305(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 1);
	ENTITY::SET_ENTITY_HEADING(iParam0, fVar0);
}

void func_268()//Position - 0x3B3C3
{
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
	{
		if (PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
		{
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 189.13988f, -955.8049f, 29.09192f, 187.5274f, -955.01056f, 31.091919f, 2.5f, false, true, 0))
			{
				PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), false, 256);
				if (__LIB_0__.func_121(Local_94.f_28[0]))
				{
					TASK::TASK_TURN_PED_TO_FACE_ENTITY(PLAYER::PLAYER_PED_ID(), Local_94.f_28[0], 0);
				}
			}
		}
	}
}

Vector3 func_269(struct<3> Param0, float fParam1, float fParam2)//Position - 0x3B707
{
	struct<3> Var0;
	float fVar1;
	Var0 = { MISC::GET_RANDOM_FLOAT_IN_RANGE(-1f, 1f), MISC::GET_RANDOM_FLOAT_IN_RANGE(-1f, 1f), 0f };
	fVar1 = (fParam2 / 2f);
	Var0 = { __LIB_0__.func_681(Var0, MISC::GET_RANDOM_FLOAT_IN_RANGE(0f, fParam1)) };
	Var0.f_2 = MISC::GET_RANDOM_FLOAT_IN_RANGE(-fVar1, fVar1);
	return Param0 + Var0;
}

void func_270(int iParam0, int iParam1, bool bParam2)//Position - 0x3F64C
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam2)
	{
		MISC::CLEAR_BIT(&(Global_100493.f_1393[iParam0]), iParam1);
	}
	else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_0__.func_3() == 0)
		{
			iVar0 = __LIB_0__.func_534(__LIB_0__.func_297(iParam0), -1, 0);
			MISC::CLEAR_BIT(&iVar0, iParam1);
			__LIB_0__.func_427(__LIB_0__.func_297(iParam0), iVar0, -1, 1, 0);
		}
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_113386.f_668[iParam0]), iParam1);
	}
}

void func_271(int iParam0, int iParam1, bool bParam2)//Position - 0x3F6BE
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_100493.f_1393[iParam0]), iParam1);
	}
	else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_0__.func_3() == 0)
		{
			iVar0 = __LIB_0__.func_534(__LIB_0__.func_297(iParam0), -1, 0);
			MISC::SET_BIT(&iVar0, iParam1);
			__LIB_0__.func_427(__LIB_0__.func_297(iParam0), iVar0, -1, 1, 0);
		}
	}
	else
	{
		MISC::SET_BIT(&(Global_113386.f_668[iParam0]), iParam1);
	}
}

int func_272(var uParam0, struct<3> Param1, int iParam2, var uParam3, int iParam4, int iParam5)//Position - 0x2AE17
{
	var uVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	int iVar4;
	iVar3 = 0;
	if (!__LIB_0__.func_121(iParam2))
	{
		*uParam0 = 0;
		return 0;
	}
	if (*uParam0 == 0)
	{
		Var1 = { __LIB_10__.func_616(iParam2, iParam5) };
		*uParam0 = SHAPETEST::START_SHAPE_TEST_LOS_PROBE(Param1, Var1 + Var1 - Param1 * Vector(0.1f, 0.1f, 0.1f), 511, iParam4, 7);
		return 0;
	}
	iVar4 = SHAPETEST::GET_SHAPE_TEST_RESULT(*uParam0, &uVar0, &Var1, &uVar2, &iVar3);
	if (iVar4 == 0)
	{
		*uParam0 = 0;
		return 0;
	}
	else if (iVar4 == 1)
	{
		return 0;
	}
	*uParam0 = 0;
	if (ENTITY::IS_ENTITY_A_PED(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iVar3) == iParam2)
		{
			if (bLocal_36)
			{
				GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
			}
			*uParam3 = MISC::GET_GAME_TIMER();
			return 1;
		}
		return 0;
	}
	if (ENTITY::IS_ENTITY_A_VEHICLE(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam2, false))
		{
			if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar3) == PED::GET_VEHICLE_PED_IS_IN(iParam2, false))
			{
				if (bLocal_36)
				{
					GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
				}
				*uParam3 = MISC::GET_GAME_TIMER();
				return 1;
			}
		}
		return 0;
	}
	return 0;
}

int func_273(var uParam0)//Position - 0x387DE
{
	if (__LIB_10__.func_715(uParam0))
	{
		STREAMING::REQUEST_ANIM_DICT(*uParam0);
		if (STREAMING::HAS_ANIM_DICT_LOADED(*uParam0))
		{
			return 1;
		}
	}
	return 0;
}

bool func_274(int iParam0, bool bParam1, int iParam2, bool bParam3)//Position - 0x22216
{
	bool bVar0;
	int iVar1;
	int iVar2;
	struct<5> Var3;
	int iVar4;
	bool bVar5;
	int iVar6;
	Global_1922024 = 1;
	bVar0 = false;
	Var3.f_4 = 3;
	Var3.f_8 = 3;
	Var3.f_64 = 3;
	Var3.f_75 = 3;
	Var3.f_91 = 3;
	__LIB_0__.func_64(&Var3, iParam0);
	if (__LIB_10__.func_726())
	{
		iVar1 = Global_113386.f_7261.f_227[iParam0];
	}
	else
	{
		iVar1 = Global_42586.f_227[iParam0];
	}
	iVar2 = Global_39990[iParam0];
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !bParam3)
	{
		Global_1922024 = 1;
	}
	else
	{
		bVar5 = true;
		if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != MISC::GET_HASH_KEY("standard_global_reg"))
		{
			if (iParam2 == 0)
			{
				if (Global_39592[iParam0] && MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), Var3, true) < 200f)
				{
					bVar5 = false;
					Global_1922024 = 1;
				}
				if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()) || TASK::IS_PED_BEING_ARRESTED(PLAYER::PLAYER_PED_ID()))
				{
					if (!CAM::IS_SCREEN_FADED_OUT())
					{
						bVar5 = false;
						Global_1922024 = 1;
					}
				}
			}
		}
		if (STREAMING::IS_NEW_LOAD_SCENE_ACTIVE() && (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() || STREAMING::GET_PLAYER_SWITCH_STATE() != 5))
		{
			bVar5 = false;
			Global_1922024 = 1;
		}
		if (bVar5)
		{
			switch (Var3.f_3)
			{
				case 0:
					if (iVar1 == 2)
					{
					}
					else
					{
						if (Var3.f_4[iVar1] != 0)
						{
							ENTITY::REMOVE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar1], false);
						}
						if (Var3.f_4[iVar2] != 0)
						{
							ENTITY::CREATE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar2], true);
						}
						Global_41186[iParam0] = 1;
					}
					bVar0 = true;
					break;
				case 1:
					if (iVar1 == 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[0 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_34));
								Global_1922024 = 1;
							}
						}
					}
					else if (iVar1 == 1)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
					}
					else if (iVar1 == 2)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
					}
					Global_40987[iParam0] = 1;
					Global_41186[iParam0] = 1;
					bVar0 = true;
					break;
				case 2:
					iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var3, &(Var3.f_42));
					if (iVar6 != 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_50)) != MISC::GET_HASH_KEY(""))
						{
							if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_50)))
							{
								INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_50));
							}
						}
						if (iVar1 == 0)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
						}
						else if (iVar1 == 1)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
						}
						else if (iVar1 == 2)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
						}
						if (bParam1)
						{
							INTERIOR::REFRESH_INTERIOR(iVar6);
						}
					}
					Global_41186[iParam0] = 1;
					Global_40987[iParam0] = 1;
					bVar0 = true;
					break;
				case 3:
					if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var3, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), true) < 250f)
					{
						iVar4 = OBJECT::GET_RAYFIRE_MAP_OBJECT(Var3, 25f, &(Var3.f_8[0 /*8*/]));
						if (OBJECT::DOES_RAYFIRE_MAP_OBJECT_EXIST(iVar4))
						{
							if (iVar1 == 0)
							{
								OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 3);
								Global_41186[iParam0] = 1;
								bVar0 = true;
							}
							else if (iVar1 == 1)
							{
								if ((OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 6 && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 7) && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 8)
								{
									OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 10);
									Global_41186[iParam0] = 1;
									bVar0 = true;
								}
							}
							else if (iVar1 == 2)
							{
								bVar0 = true;
							}
						}
					}
					break;
				case 4:
					if (iVar1 == 0)
					{
						ENTITY::REMOVE_MODEL_SWAP(Var3, 50f, Var3.f_4[1], Var3.f_4[0], false);
						MISC::CLEAR_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					else if (iVar1 == 1)
					{
						ENTITY::CREATE_MODEL_SWAP(Var3, 50f, Var3.f_4[0], Var3.f_4[1], true);
						MISC::SET_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					bVar0 = true;
					break;
			}
			if (bVar0)
			{
				Global_39791[iParam0] = 0;
				Global_39990[iParam0] = iVar1;
				if (!__LIB_10__.func_726())
				{
					if (!Global_40587[iParam0])
					{
						Global_40587[iParam0] = 1;
						Global_40786++;
					}
				}
			}
		}
	}
	return bVar0;
}

void func_275(int iParam0)//Position - 0x34D37
{
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(Global_77137.f_139[iParam0]));
			Global_77137.f_139[iParam0] = 0;
		}
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			__LIB_6__.func_770(iParam0, 0);
		}
	}
}

void func_276(var uParam0, bool bParam1)//Position - 0x38062
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= (*uParam0 - 1))
	{
		if (bParam1)
		{
			__LIB_11__.func_32(uParam0[iVar0]);
		}
		else
		{
			__LIB_0__.func_106(uParam0[iVar0]);
		}
		iVar0++;
	}
}

int func_277()//Position - 0x3841A
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_6__.func_774(&(Global_100441.f_3), 0);
	iVar1 = 0;
	if (iVar0 == 53)
	{
		iVar1 = 1;
	}
	return iVar1;
}

void func_278(int iParam0)//Position - 0x35536
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_20__.func_275(iParam0);
	__LIB_6__.func_770(iParam0, 0);
}

int func_279(int iParam0, int iParam1, int iParam2)//Position - 0x8916
{
	if (__LIB_10__.func_735(iParam0, iParam1, iParam2) && !func_58(__LIB_10__.func_25(iParam0, iParam1, iParam2)))
	{
		return 1;
	}
	return 0;
}

int func_280(int iParam0)//Position - 0xB271D
{
	struct<4> Var0;
	StringCopy(&Var0, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), 16);
	return __LIB_20__.func_11(Var0);
}

char* func_281(int iParam0)//Position - 0x102A23
{
	int iVar0;
	char* sVar1;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	if (iVar0 == joaat("btype3") && Global_102711[iParam0] != -1)
	{
		sVar1 = VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar1))
		{
			if (HUD::DOES_TEXT_LABEL_EXIST(sVar1))
			{
				return sVar1;
			}
		}
	}
	switch (iParam0)
	{
		case 3:
			if (!__LIB_10__.func_147() && !__LIB_10__.func_146())
			{
				return "CMOD_MOD_0_D" /* GXT: Full body repair and engine service. */;
			}
			else if (__LIB_10__.func_146())
			{
				if (__LIB_10__.func_145())
				{
					return "SVM_VS_AAT_D" /* GXT: Customize your Anti-Aircraft Trailer. */;
				}
				else
				{
					return "SVM_VS_TRUCK_D" /* GXT: Customize your Mobile Operations Center. */;
				}
			}
			else
			{
				return "SVM_VS_CAB_D" /* GXT: Customize the cab of your Mobile Operations Center. */;
			}
			break;
		case 4:
			return "CMOD_MOD_ARM";
			break;
		case 5:
			if (__LIB_10__.func_467() || (__LIB_10__.func_473() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger"))))
			{
				return "CMOD_MOD_HAN" /* GXT: Handling */;
			}
			else
			{
				return "CMOD_MOD_BRA";
			}
			break;
		case 8:
			if (__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("blazer4"))
			{
				return "TOP_MUDFR" /* GXT: Mudguards */;
			}
			else if (__LIB_10__.func_144(Local_124.f_406))
			{
				if (__LIB_1__.func_926(iVar0))
				{
					return "CMOD_MOD_FWIN";
				}
				else
				{
					return "CMOD_MOD_BUMF";
				}
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_SEWEAP_N";
			}
			else if (joaat("TOP_SHIELD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "TOP_SHIELD" /* GXT: Front Shield */;
			}
			else if (((iVar0 == joaat("slamvan4") || iVar0 == joaat("cerberus")) || iVar0 == joaat("cerberus2")) || iVar0 == joaat("cerberus3"))
			{
				return "CMOD_MOD_BUMR";
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_MOD_SPO";
			}
			else if (iVar0 == joaat("bruiser2"))
			{
				return "CMOD_LEC_M";
			}
			else
			{
				return "CMOD_MOD_BUM";
			}
			break;
		case 9:
			if (__LIB_4__.func_533(Local_124.f_406) || iVar0 == joaat("oppressor"))
			{
				return "CMM_MOD_S14";
			}
			else if (iVar0 == joaat("sultanrs") || __LIB_10__.func_109())
			{
				return "TOP_CAGE" /* GXT: Roll Cage */;
			}
			else if (joaat("TOP_COVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("picador"))
			{
				return "TOP_COVER" /* GXT: Rear Cover */;
			}
			else if (joaat("TOP_RUFSPOILER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_RUFSPOILER" /* GXT: Roof Spoiler */;
			}
			else if (iVar0 == joaat("gp1"))
			{
				return "CMOD_HEC_M";
				break;
			}
			else if (joaat("TOP_ARM_PLAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_ARMPL_N";
			}
			else if (joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_DEFLEC" /* GXT: Deflectors */;
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_WINP" /* GXT: Window Plates */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("rogue"))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_RTURR_N";
				}
				else
				{
					return "CMOD_SEWEAP_N";
				}
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_ENGINE" /* GXT: Engine Block */;
			}
			else if (iVar0 == joaat("flashgt"))
			{
				return "CMOD_MOD_ROF";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_RWING" /* GXT: Window Spoilers */;
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_BRACE" /* GXT: Brace Bar */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_MOD_S15";
			}
			else if (joaat("TOP_GRIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_GRIP" /* GXT: Heel Grips */;
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_LID_N";
			}
			else if (joaat("CMOD_VORT_M") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_VORT_M";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_MOD_AROF";
			}
			else if (joaat("TOP_TAILFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_TAILFIN" /* GXT: Tail Fin */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_NOSEFIN" /* GXT: Nose Fins */;
			}
			else if (joaat("TOP_ROOFPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("ruiner4"))
			{
				return "TOP_ROOFPNL" /* GXT: Roof Panels */;
			}
			else if ((joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("turismor")) || iVar0 == joaat("schwarzer"))
			{
				return "TOP_ROOFFIN" /* GXT: Roof Fins */;
			}
			else if (iVar0 == joaat("thrax"))
			{
				return "CMM_MOD_S19";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMM_MOD_S7";
			}
			else if (iVar0 == joaat("torero2"))
			{
				return "CMOD_MOD_HOD";
			}
			else
			{
				return "CMOD_MOD_CHA";
			}
			break;
		case 38:
			return "CMOD_MOD_COL";
			break;
		case 10:
			if (Local_124.f_443 == 89)
			{
				return "CMOD_MOD_ENG2";
			}
			else if (__LIB_10__.func_523())
			{
				return "PERSO_MOD_PER" /* GXT: Performance Upgrades */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "CMOD_MOD_ENG2";
			}
			else
			{
				return "CMOD_MOD_ENG";
			}
			break;
		case 13:
			return "CMOD_MOD_EXP";
			break;
		case 21:
			return "CMOD_MOD_GLD";
			break;
		case 22:
			return "CMOD_MOD_GLD2";
			break;
		case 19:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "TOP_SEATF" /* GXT: Front Seat */;
			}
			else
			{
				return "TOP_CSEATF" /* GXT: Front Seats */;
			}
			break;
		case 23:
			if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("avarus")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_HND" /* GXT: Handlebars / Headlight Covers */;
			}
			else if (iVar0 == joaat("avarus"))
			{
				return "TOP_OIL" /* GXT: Oil Tanks */;
			}
			else if (iVar0 == joaat("blazer4") || iVar0 == joaat("penetrator"))
			{
				return "CMOD_MOD_AIR" /* GXT: Air Filters */;
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_CATCH" /* GXT: Hood Catches */;
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || iVar0 == joaat("picador"))
			{
				return "TOP_SPLIT" /* GXT: Splitters */;
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_RPNL" /* GXT: Rear Panel */;
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_RACK" /* GXT: Racks */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_COUNTERM" /* GXT: Countermeasures */;
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWSH_N";
			}
			else if (joaat("TOP_BPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_BPLATING" /* GXT: Body Plating */;
			}
			else if (joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_WINDSH_0" /* GXT: Windshields */;
				break;
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_CANARDS" /* GXT: Canards */;
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_NOSE" /* GXT: Nose Panel */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_HOODLIP" /* GXT: Nose Accessories */;
			}
			else if (joaat("TOP_VENTBRAC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_VENTBRAC" /* GXT: Vent Braces */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_INTERCOOL" /* GXT: Intercoolers */;
			}
			else if (joaat("TOP_RSPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_RSPLIT" /* GXT: Rear Splitters */;
			}
			else if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMOD_PEDAL_N";
			}
			else if (iVar0 == joaat("weevil"))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "TOP_FOGL" /* GXT: Fog Lights */;
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else
			{
				return "CMOD_MOD_GRL";
			}
			break;
		case 26:
			if (joaat("TOP_SEAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
				{
					return "CMM_MOD_S7";
				}
				else
				{
					return "TOP_SEAT" /* GXT: Seats */;
				}
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				return "TOP_ROOFSC" /* GXT: Roof Scoops */;
			}
			else if (iVar0 == joaat("greenwood"))
			{
				return "CMM_MOD_S15";
			}
			if (__LIB_4__.func_533(Local_124.f_406))
			{
				return "CMM_MOD_S7";
			}
			else
			{
				return "CMOD_MOD_HOD";
			}
			break;
		case 27:
			return "CMOD_MOD_HRN";
			break;
		case 31:
			if (__LIB_10__.func_523())
			{
				return "PERSO_MOD_RTR" /* GXT: Tracker */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "PERSO_MOD_SER" /* GXT: Service */;
			}
			else
			{
				return "CMOD_MOD_LTP";
			}
			break;
		case 28:
			return "CMOD_MOD_LGT";
			break;
		case 29:
			return "CMOD_MOD_LGT_H";
			break;
		case 30:
			return "CMOD_MOD_LGT_N";
			break;
		case 12:
			if (joaat("TOP_THRUST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_THRUST_M";
			}
			else if (joaat("TOP_PROPELLER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_PROPELL_M";
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_MOD_HOD";
			}
			else
			{
				return "CMOD_MOD_MUF";
			}
			break;
		case 33:
			if (Local_124.f_443 == 88)
			{
				return "CMOD_MOD_PLA2";
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "HPWARN_CONF" /* GXT: Confirm */;
			}
			else
			{
				return "CMOD_MOD_PLA";
			}
			break;
		case 40:
			if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_TNK" /* GXT: Fuel Tanks */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "TOP_ANTENNAR" /* GXT: Rear Antennas */;
			}
			else if (iVar0 == joaat("feltzer3"))
			{
				return "TOP_RUFSPOILER" /* GXT: Roof Spoiler */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMM_MOD_S17";
			}
			else if (iVar0 == joaat("penetrator"))
			{
				return "CMM_MOD_S43";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("lm87"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_ROOFFIN" /* GXT: Roof Fins */;
			}
			else if (joaat("TOP_PANN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_PANNNEW" /* GXT: Panniers */;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("dune3"))
			{
				if (iVar0 != joaat("tampa3"))
				{
					return "TOP_WEAPONS" /* GXT: Weapons */;
				}
				else
				{
					return "CMOD_MINIG_N";
				}
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_N";
				}
				else if (iVar0 == joaat("molotok"))
				{
					return "TOP_WEAPONS" /* GXT: Weapons */;
				}
				else if (iVar0 == joaat("hunter"))
				{
					return "SVM_MOD_TU_N" /* GXT: Turrets */;
				}
				else if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_N";
				}
				else if (iVar0 == joaat("mule4"))
				{
					return "CMOD_SEWEAP_N";
				}
				else
				{
					return "TOP_PWEAPON" /* GXT: Primary Weapons */;
				}
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_SNORKEL" /* GXT: Snorkels */;
			}
			else if (iVar0 == joaat("riot2"))
			{
				return "CMOD_WATER_N";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_ROOF_LIGHT" /* GXT: Roof Mounted Lights */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SEWEAP_N";
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWHE_N";
			}
			else if (joaat("TOP_REAR_DOOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_REAR_DOOR" /* GXT: Trunk Door */;
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_MOD_AROF";
			}
			else
			{
				return "CMOD_MOD_ROF";
			}
			break;
		case 42:
			if (__LIB_10__.func_59(iVar0))
			{
				return "CMOD_REMOVE_AI" /* GXT: Remove */;
			}
			else
			{
				return "CMOD_MOD_SEL";
			}
			break;
		case 54:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else
			{
				return "CMOD_MOD_VIN";
			}
			break;
		case 44:
			if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_AIR" /* GXT: Air Filters */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "TOP_ARCHCOVER" /* GXT: Arch Covers */;
			}
			else if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0))
			{
				return "CMOD_MOD_DROP";
			}
			else if (joaat("TOP_TURRET_B") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("barrage")))
			{
				return "TOP_TURRET_B" /* GXT: Turret Bracket */;
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMM_MOD_S17";
			}
			else if (iVar0 == joaat("michelli"))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMM_MOD_S43";
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "TOP_SIDE_PAN" /* GXT: Side Panel */;
			}
			else if (joaat("TOP_SSTEP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "TOP_SSTEP" /* GXT: Side Step */;
			}
			else if (iVar0 == joaat("zhaba"))
			{
				return "CMOD_MOD_FEN";
			}
			else if (iVar0 == joaat("club"))
			{
				return "CMOD_MOD_FEN";
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMM_MOD_S6";
			}
			else
			{
				return "CMOD_MOD_SKI";
			}
			break;
		case 46:
			if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_BLT" /* GXT: Belt Drive Covers */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "TOP_ANTENNA" /* GXT: Front Antennas */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BT_SPARE2" /* GXT: Spare Wheel Cover */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMM_MOD_S14";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RTURR_N";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("mule4"))
			{
				return "CMOD_SEWEAP_N";
			}
			else if (iVar0 == joaat("mule4"))
			{
				return "TOP_PWEAPON" /* GXT: Primary Weapons */;
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VISO_M";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMM_MOD_S43";
			}
			else if (iVar0 == joaat("pounder2") || iVar0 == joaat("granger2"))
			{
				return "CMOD_MOD_ROF";
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_MOD_BUMF";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_WINP" /* GXT: Window Plates */;
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_RACK" /* GXT: Racks */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_REAR_DOOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_REAR_DOOR" /* GXT: Trunk Door */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_HOODLIP" /* GXT: Nose Accessories */;
			}
			else if (joaat("TOP_STORAGEBOX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_STORAGEBOX" /* GXT: Top Box */;
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_MOD_HOD";
			}
			else if (joaat("TOP_BACKREST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "TOP_BACKREST" /* GXT: Backrests */;
			}
			else
			{
				return "CMOD_MOD_SPO";
			}
			break;
		case 47:
			return "CMOD_MOD_SUS";
			break;
		case 58:
			return "CMOD_MOD_TYR";
			break;
		case 57:
			return "CMOD_MOD_WCL";
			break;
		case 48:
			return "CMOD_MOD_TGT";
			break;
		case 50:
			return "CMOD_MOD_TRN";
			break;
		case 53:
			return "CMOD_MOD_TUR";
			break;
		case 55:
			return "CMOD_MOD_WHEM";
			break;
		case 56:
			return "CMOD_MOD_WHE";
			break;
		case 60:
			return "CMOD_MOD_WIN";
			break;
		case 15:
			if (__LIB_4__.func_533(Local_124.f_406))
			{
				return "CMOD_SIISY_0" /* GXT: Sissy Bar */;
				break;
			}
			else if (((joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) && iVar0 != joaat("impaler2")) && iVar0 != joaat("impaler3")) && iVar0 != joaat("impaler4"))
			{
				return "CMM_MOD_S14";
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_RDIFF" /* GXT: Rear Diffuser */;
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) && iVar0 != joaat("dominator8"))
			{
				return "TOP_HL_CV" /* GXT: Headlight Covers */;
			}
			else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_MINE" /* GXT: Proximity Mine */;
			}
			else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_PBOMBS" /* GXT: Bombs */;
			}
			else if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_DPLT" /* GXT: Door Plates */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_DOORS" /* GXT: Doors */;
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_BRACE" /* GXT: Brace Bar */;
			}
			else if (iVar0 == joaat("gb200"))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMM_MOD_S17";
			}
			else if (iVar0 == joaat("michelli"))
			{
				return "CMOD_MIC_FEN";
			}
			else if (joaat("TOP_BUMPEX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_BUMPEX" /* GXT: Bumper Extension */;
			}
			else if (__LIB_10__.func_143(iVar0))
			{
				return "CMOD_WNG_FN" /* GXT: Front Fenders */;
			}
			else if (iVar0 == joaat("zhaba"))
			{
				return "TOP_SIDE_PAN" /* GXT: Side Panel */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SEWEAP_N";
			}
			else if (joaat("TOP_ROOFRAIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_ROOFRAIL" /* GXT: Roof Rails */;
			}
			else if (iVar0 == joaat("club"))
			{
				return "TOP_BODY" /* GXT: Bodywork */;
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMM_MOD_S8";
			}
			else
			{
				return "CMOD_MOD_FEN";
				break;
			}
			break;
		case 2:
			return "CMM_MOD INVALID";
			break;
		case 61:
			return __LIB_10__.func_141(__LIB_10__.func_142(iVar0, 0));
			break;
		case 103:
			return __LIB_10__.func_141(__LIB_10__.func_142(iVar0, 1));
			break;
		case 62:
			if (joaat("TOP_LSPOIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "TOP_LSPOIL" /* GXT: Lip Spoiler */;
			}
			else
			{
				return "CMM_MOD_S0";
			}
			break;
		case 63:
			if (joaat("TOP_RWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "TOP_RWIBBLE" /* GXT: Rear Wibbles */;
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "TOP_WINP" /* GXT: Window Plates */;
			}
			else if ((joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)) || iVar0 == joaat("corsita")) || iVar0 == joaat("lm87"))
			{
				return "TOP_SPLIT" /* GXT: Splitters */;
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "TOP_CANARDS" /* GXT: Canards */;
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "TOP_VENT" /* GXT: Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMM_MOD_S15";
			}
			else if (joaat("TOP_BUMR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_MOD_ABUM";
			}
			else if (!__LIB_10__.func_109())
			{
				return "CMM_MOD_S1";
			}
			else if (iVar0 != joaat("elegy"))
			{
				return "CMM_MOD_S40";
			}
			else
			{
				return "CMM_MOD_S42";
			}
			break;
		case 64:
			if (iVar0 == joaat("sultanrs") || iVar0 == joaat("sultan2"))
			{
				return "CMM_MOD_S2b" /* GXT: Sunstrip */;
			}
			else
			{
				return "CMM_MOD_S2";
			}
			break;
		case 65:
			if (joaat("TOP_INTERTYPE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)))
			{
				return "TOP_INTERTYPE" /* GXT: Interior Type */;
			}
			return "CMM_MOD_S3";
			break;
		case 66:
			if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 29)))
			{
				return "TOP_RLP" /* GXT: Rear Light Protectors */;
			}
			else if (iVar0 == joaat("issi5"))
			{
				return "CMOD_MOD_ROF";
			}
			else
			{
				return "CMM_MOD_S4";
			}
			break;
		case 67:
			return "CMM_MOD_S5";
			break;
		case 68:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 31)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else
			{
				return "CMM_MOD_S6";
			}
			break;
		case 69:
			return "CMM_MOD_S7";
			break;
		case 70:
			return "CMM_MOD_S8";
			break;
		case 71:
			if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_SHIFTER_0" /* GXT: Shifters */;
			}
			return "CMM_MOD_S9";
			break;
		case 72:
			if (joaat("TOP_DECORATIONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "TOP_DECORATIONS" /* GXT: Decorations */;
			}
			else if (joaat("TOP_TWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "TOP_TWIBBLE" /* GXT: Top Wibbles */;
			}
			else
			{
				return "CMM_MOD_S10";
			}
			break;
		case 73:
			return "CMM_MOD_S11";
			break;
		case 74:
			return "CMM_MOD_S12";
			break;
		case 75:
			return "CMM_MOD_S13";
			break;
		case 76:
			if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_SPLIT" /* GXT: Splitters */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMM_MOD_S43";
			}
			else if (iVar0 == joaat("kanjosj"))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else
			{
				return "CMM_MOD_S14";
			}
			break;
		case 77:
			if (joaat("TOP_RAILCOV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "TOP_RAILCOV" /* GXT: Rail Covers */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (__LIB_10__.func_140(iVar0))
			{
				return "CMM_MOD_S15b" /* GXT: Cam Cover */;
			}
			else if (__LIB_10__.func_113())
			{
				return "CMM_MOD_NJBOS" /* GXT: Boost */;
			}
			else
			{
				return "CMM_MOD_S15";
			}
			break;
		case 78:
			if (__LIB_10__.func_742(iVar0))
			{
				return "CMM_MOD_S16b" /* GXT: Strut Brace */;
			}
			else if (__LIB_10__.func_112())
			{
				return "CMM_MOD_NJUMP" /* GXT: Vertical Jump */;
			}
			else if (iVar0 == joaat("previon"))
			{
				return "CMM_MOD_S15";
			}
			else
			{
				return "CMM_MOD_S16";
			}
			break;
		case 79:
			if (joaat("TOP_SCOOPS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "TOP_SCOOPS" /* GXT: Ram Weapons */;
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_FOGL" /* GXT: Fog Lights */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || iVar0 == joaat("tenf"))
			{
				return "TOP_ROOFFIN" /* GXT: Roof Fins */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (__LIB_10__.func_139(Local_124.f_406))
			{
				return "CMM_MOD_S17b" /* GXT: Headlight Trim */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "TOP_RDIFF" /* GXT: Rear Diffuser */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMM_MOD_S15";
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_NOSEFIN" /* GXT: Nose Fins */;
			}
			else
			{
				return "CMM_MOD_S17";
			}
			break;
		case 80:
			if (__LIB_10__.func_109())
			{
				return "CMOD_MOD_AHOD";
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_S18c" /* GXT: Side Hood Grille */;
			}
			else if (joaat("TOP_SPIKE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "TOP_SPIKE" /* GXT: Spikes */;
			}
			else if (joaat("TOP_SKID") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)) || iVar0 == joaat("draugur"))
			{
				return "TOP_SKID" /* GXT: Skid Plate */;
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "TOP_CATCH" /* GXT: Hood Catches */;
			}
			else if (__LIB_10__.func_138(Local_124.f_406))
			{
				return "CMM_MOD_S18b" /* GXT: Foglights */;
			}
			else
			{
				return "CMM_MOD_S18";
			}
			break;
		case 81:
			if (__LIB_10__.func_109())
			{
				return "CMOD_MOD_AROF";
			}
			else if ((iVar0 == joaat("cypher") || iVar0 == joaat("kanjosj")) || iVar0 == joaat("tenf2"))
			{
				return "TOP_ROOFFIN" /* GXT: Roof Fins */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_S19c" /* GXT: Front Detail */;
			}
			else if (iVar0 == joaat("virgo2"))
			{
				return "CMM_MOD_S19d" /* GXT: Wipers */;
			}
			else if (joaat("TOP_BLADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "TOP_BLADES" /* GXT: Blades */;
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_MOD_AROF";
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "TOP_ROOFSC" /* GXT: Roof Scoops */;
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				if (iVar0 == joaat("yosemite3"))
				{
					return "TOP_SEC_LIGHTY" /* GXT: Secondary Light Surround */;
				}
				else
				{
					return "TOP_SEC_LIGHT" /* GXT: Secondary Light Surround */;
				}
			}
			else if (__LIB_10__.func_137(Local_124.f_406))
			{
				return "CMM_MOD_S19b" /* GXT: Roof Scoops */;
			}
			else if (joaat("TOP_IMANI_TECH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "TOP_IMANI_TECH" /* GXT: Imani Tech */;
			}
			else
			{
				return "CMM_MOD_S19";
			}
			break;
		case 82:
			if (__LIB_10__.func_109())
			{
				return "CMM_MOD_S41";
			}
			else if (__LIB_10__.func_136())
			{
				return "CMOD_MOD_TNK" /* GXT: Fuel Tanks */;
			}
			else if (iVar0 == joaat("slamvan3"))
			{
				return "CMM_MOD_S27";
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_PWEAPON" /* GXT: Primary Weapons */;
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_RACK" /* GXT: Racks */;
			}
			else if (iVar0 == joaat("yosemite3"))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_SPLIT" /* GXT: Splitters */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_INTERCOOL" /* GXT: Intercoolers */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_NOSEFIN" /* GXT: Nose Fins */;
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_NOSE" /* GXT: Nose Panel */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMM_MOD_S17";
			}
			else
			{
				return "CMM_MOD_S20";
			}
			break;
		case 83:
			if (iVar0 == joaat("btype3"))
			{
				return "CMM_MOD_S21b" /* GXT: Spare Wheel */;
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "TOP_WIND_DF" /* GXT: Wind Deflectors */;
			}
			else if (joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)) || iVar0 == joaat("weevil2"))
			{
				return "TOP_TALIGHT" /* GXT: Tail Lights */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMM_MOD_S15";
			}
			else
			{
				return "CMM_MOD_S21";
			}
			break;
		case 84:
			if (iVar0 == joaat("slamvan3"))
			{
				return "SLVAN3_RDOOR" /* GXT: Right Door */;
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "TOP_SNORKEL" /* GXT: Snorkels */;
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)) || iVar0 == joaat("torero2"))
			{
				return "TOP_VENT" /* GXT: Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMM_MOD_S15";
			}
			else if (iVar0 == joaat("dominator7"))
			{
				return "CMM_MOD_S16b" /* GXT: Strut Brace */;
			}
			else
			{
				return "CMM_MOD_S22";
			}
			break;
		case 85:
			return "CMM_MOD_S23";
			break;
		case 86:
			if ((((__LIB_4__.func_533(Local_124.f_406) || __LIB_10__.func_523()) || __LIB_4__.func_532()) || __LIB_4__.func_531()) || __LIB_10__.func_135(Local_124.f_406))
			{
				return "TOP_BODY" /* GXT: Bodywork */;
			}
			else
			{
				return "CMM_MOD_G0";
			}
			break;
		case 87:
			return "CMM_MOD_G1";
			break;
		case 88:
			return "CMM_MOD_G2";
			break;
		case 89:
			if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "PERSO_MOD_PER" /* GXT: Performance Upgrades */;
			}
			return "CMM_MOD_G3";
			break;
		case 90:
			return "CMM_MOD_S24";
			break;
		case 91:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			return "CMM_MOD_S25";
			break;
		case 92:
			return "CMM_MOD_S26";
			break;
		case 95:
			if ((iVar0 == joaat("faggio3") || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_WINDSH_0" /* GXT: Windshields */;
			}
			else if (joaat("CMOD_SLOU_N") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLOU_N";
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "TOP_MUD" /* GXT: Mudguards */;
			}
			else if (iVar0 == joaat("cinquemila"))
			{
				return "CINQUEM_MUDFR" /* GXT: Mudguards */;
			}
			else if (((joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || iVar0 == joaat("ruiner4"))
			{
				return "MICHE_MUDFR" /* GXT: Mudguards */;
			}
			else if (joaat("TOP_BTRIM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || iVar0 == joaat("greenwood"))
			{
				return "TOP_BTRIM" /* GXT: Body Trim */;
			}
			else if (iVar0 == joaat("fcr2"))
			{
				return "CMOD_SWINGARM_0" /* GXT: Swingarm */;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) && iVar0 != joaat("xa21"))
			{
				return "TOP_RDIFF" /* GXT: Rear Diffuser */;
			}
			else if (iVar0 == joaat("xa21"))
			{
				return "TOP_BOOT2" /* GXT: Engine Cover */;
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_SEC_LIGHT" /* GXT: Secondary Light Surround */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_ROOF_LIGHT" /* GXT: Roof Mounted Lights */;
			}
			else if (iVar0 == joaat("bruiser") || iVar0 == joaat("bruiser3"))
			{
				return "CMOD_BULLH_N";
			}
			else if (iVar0 == joaat("cheetah2") || __LIB_4__.func_534(Local_124.f_406))
			{
				return "CMOD_MOD_FEN";
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_WEAPONS" /* GXT: Weapons */;
			}
			else if (joaat("TOP_ENGD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_ENGD" /* GXT: Engine Detail */;
			}
			else if (iVar0 == joaat("comet4"))
			{
				return "CMOD_MOD_ROF";
			}
			else if ((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45))) || iVar0 == joaat("kanjo"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_SSHADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_SSHADES" /* GXT: Sunshades */;
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMM_MOD_S14";
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_MOD_EXP";
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_VISO_M";
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "TOP_WIND_DF" /* GXT: Wind Deflectors */;
			}
			else if ((joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35))) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "TOP_CATCH" /* GXT: Hood Catches */;
			}
			else if (__LIB_10__.func_143(iVar0))
			{
				return "CMOD_WNG_RN" /* GXT: Rear Fenders */;
			}
			else if (joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "TOP_RWING" /* GXT: Window Spoilers */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "TOP_ROOF_LIGHT" /* GXT: Roof Mounted Lights */;
			}
			else
			{
				return "CMOD_SHIFTER_0" /* GXT: Shifters */;
				break;
			}
			break;
		case 97:
			return "CMOD_COL0_0";
			break;
		case 98:
			return "CMOD_COL0_1";
			break;
		case 100:
			return "CMOD_MOD_ABUM";
			break;
		case 99:
			if (__LIB_9__.func_917(Local_124.f_406) || __LIB_10__.func_134(Local_124.f_406))
			{
				return "CMOD_WEAPO_N";
			}
			else
			{
				return "CMOD_MOD_BUM";
			}
			break;
		case 102:
			return "CMOD_MOD_ROF";
			break;
		case 101:
			return "CMOD_MOD_HOD";
			break;
		case 18:
			if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MISIL_N";
			}
			else if (joaat("TOP_HDLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "TOP_HDLP" /* GXT: Headlight Protectors */;
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "TOP_COUNTERM" /* GXT: Countermeasures */;
			}
			else if (joaat("TOP_BUM_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "TOP_BUM_PAN" /* GXT: Bumper Panel */;
			}
			else
			{
				return VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
			}
			break;
		case 36:
			if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MORTA_N";
			}
			else if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "TOP_RLP" /* GXT: Rear Light Protectors */;
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "TOP_SIDE_PAN" /* GXT: Side Panel */;
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "TOP_RPNL" /* GXT: Rear Panel */;
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "TOP_RACK" /* GXT: Racks */;
			}
			else if (iVar0 == joaat("seminole2"))
			{
				return "CMM_MOD_S18";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (iVar0 == joaat("corsita"))
			{
				return "TOP_MUDFR" /* GXT: Mudguards */;
			}
			else
			{
				return VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
			}
			break;
		case 45:
			if (__LIB_10__.func_467())
			{
				return "CMOD_SMOKE_N" /* GXT: Smoke */;
			}
			else if ((((((((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || iVar0 == joaat("rhinehart")) || iVar0 == joaat("zentorno")) || iVar0 == joaat("sentinel")) || iVar0 == joaat("corsita")) || iVar0 == joaat("weevil2")) || iVar0 == joaat("ruiner4")) || iVar0 == joaat("picador"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else
			{
				return "TOP_SPARE" /* GXT: Spare Wheel */;
			}
			break;
		case 93:
			if (__LIB_7__.func_981(Local_124.f_406))
			{
				return "CMOD_DEFEC_N";
			}
			else
			{
				VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
			}
			break;
		case 51:
			if (iVar0 == joaat("yosemite3"))
			{
				return "TOP_BEDPL" /* GXT: Truck Bed */;
			}
			else
			{
				return "TOP_BED" /* GXT: Bedliners */;
			}
			break;
		default:
			return VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, Global_102711[iParam0]);
			break;
	}
	return "";
}

void func_282(int iParam0)//Position - 0x1075A5
{
	if (iParam0 == 0)
	{
		__LIB_20__.func_42(0, __LIB_10__.func_124(iParam0), 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 6, -1, 13, -1082130432, -1082130432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0);
	}
	else
	{
		__LIB_20__.func_42(1, __LIB_10__.func_124(iParam0), -1, func_1858(iParam0), 0, 0, 0, 0, 0, 0, 0, 18, 0, -1, 4, -1082130432, -1082130432, 0, func_1844(iParam0), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0);
	}
}

int func_283(var uParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x137F58
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 1;
	}
	iVar0 = __LIB_20__.func_46(iParam1, iParam2);
	iVar1 = (iVar0 / 32);
	iVar2 = (iVar0 % 32);
	if (bParam3)
	{
		return BitTest(uParam0->f_653[iVar1], iVar2);
	}
	else
	{
		return BitTest(uParam0->f_663[iVar1], iVar2);
	}
	return 1;
}

void func_284()//Position - 0x13A2AE
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 123)
	{
		__LIB_10__.func_223(iVar0, __LIB_20__.func_54(Local_124.f_443, Local_124.f_444, iVar0, Local_124.f_406));
		iVar0++;
	}
}

int func_285(int iParam0)//Position - 0x13B541
{
	int iVar0;
	int iVar1;
	float fVar2;
	int iVar3;
	float fVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	iVar0 = __LIB_10__.func_754(iParam0);
	iVar1 = 0;
	while (iVar1 < 4)
	{
		fVar2 = (fVar2 + __LIB_10__.func_231(iVar1));
		iVar1++;
	}
	fVar4 = MISC::GET_RANDOM_FLOAT_IN_RANGE(1f, fVar2);
	iVar1 = 0;
	while (iVar1 < 4)
	{
		iVar3 = iVar1;
		if (fVar4 <= __LIB_10__.func_231(iVar3))
		{
			Jump @102; //curOff = 76
		}
		else
		{
			fVar4 = (fVar4 - __LIB_10__.func_231(iVar3));
		}
		iVar1++;
	}
	__LIB_10__.func_230(iVar3, &iVar5, &iVar6);
	iVar7 = MISC::GET_RANDOM_INT_IN_RANGE(iVar6, iVar5 + 1);
	return ((iVar0 / 100) * iVar7);
}

char* func_286(int iParam0, bool bParam1)//Position - 0x1410EC
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	switch (iParam0)
	{
		case 24:
			if (joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)) || joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_LADDER_S";
			}
			else
			{
				return "CMOD_DEF_HB" /* GXT: Stock Handlebars */;
			}
			break;
		case 51:
			return "CMOD_DEF_TB" /* GXT: Stock Truck Bed */;
			break;
		case 6:
			if (iVar0 == joaat("asbo") || iVar0 == joaat("remus"))
			{
				return "CMOD_DEF_TRIM";
			}
			else if (iVar0 == joaat("openwheel2"))
			{
				return "CMOD_DEF_BW" /* GXT: Stock Bodywork */;
			}
			else
			{
				return "CMOD_COL6_2";
			}
			break;
		case 7:
			return "CMOD_DEF_BB" /* GXT: No Bullbars */;
			break;
		case 39:
			return "CMOD_DEF_RC" /* GXT: No Roll Cage */;
			break;
		case 11:
			return "CMOD_DEF_EB" /* GXT: Stock Engine Bay */;
			break;
		case 14:
			if (iVar0 == joaat("diablous2"))
			{
				return "CMOD_HEC_FA" /* GXT: Stock Headlight Cover */;
			}
			else if (iVar0 == joaat("youga3"))
			{
				return "CMOD_HEC_NS";
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEC_NS";
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_FOG_NS";
			}
			else if ((((joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEC_S";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_FG_NS";
			}
			else
			{
				return "CMOD_DEF_FA" /* GXT: Stock Fairing */;
			}
			break;
		case 80:
			break;
		case 79:
			if (iVar0 == joaat("cypher"))
			{
				return "CMOD_RDIF_S";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_AIR_STOCK";
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_NOFI_0" /* GXT: Stock Nose Fin */;
			}
			break;
		case 17:
			return "CMOD_DEF_FF" /* GXT: Stock Forks */;
			break;
		case 16:
			return "CMOD_DEF_FR" /* GXT: Stock Frame */;
			break;
		case 41:
			return "CMOD_DEF_SB" /* GXT: Stock Saddle Bags */;
			break;
		case 25:
			return "CMOD_DEF_HL" /* GXT: Stock Headlights */;
			break;
		case 32:
			return "CMOD_DEF_MR" /* GXT: Stock Mirrors */;
			break;
		case 18:
			if (__LIB_10__.func_109())
			{
				return "CMOD_BUM_0" /* GXT: Stock Front Bumper */;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MISIL_S";
			}
			else if (joaat("TOP_HDLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_HEPR_S";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_SWEAP_S";
			}
			else if (joaat("TOP_BUM_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_BUMPA_S";
			}
			else if (joaat("TOP_WARMOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_COL6_2";
			}
			else
			{
				return "CMOD_DEF_OFM" /* GXT: Stock Mudguard */;
			}
			break;
		case 36:
			if ((__LIB_4__.func_535(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_DEF_OIL" /* GXT: Stock Oil Tank */;
				break;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_RACK_0" /* GXT: Stock Rack */;
				break;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_BKRE_0" /* GXT: Stock backrest */;
				break;
			}
			else if (__LIB_10__.func_109())
			{
				return "CMOD_BUM_3" /* GXT: Stock Rear Bumper */;
				break;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MORTA_S";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "CMOD_COL6_2";
			}
			else if (iVar0 == joaat("vigero2"))
			{
				return "CMOD_LOU_S1";
			}
			else if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_REPR_S";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SIDEP_S";
			}
			else if ((((((joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				if ((((((((iVar0 == joaat("dukes3") || iVar0 == joaat("youga3")) || iVar0 == joaat("zr350")) || iVar0 == joaat("jester4")) || iVar0 == joaat("dominator7")) || iVar0 == joaat("dominator8")) || iVar0 == joaat("ignus")) || iVar0 == joaat("buffalo4")) || iVar0 == joaat("greenwood"))
				{
					return "CMOD_LOU_S1";
				}
				else
				{
					return "CMOD_LOU_S";
				}
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_RPAN_S";
			}
			else if (joaat("TOP_UPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_UPLAT_S";
			}
			else if (iVar0 == joaat("glendale2"))
			{
				return "CMOD_COL6_2";
			}
			else if (iVar0 == joaat("seminole2"))
			{
				return "CMOD_COL6_2";
			}
			else
			{
				return "CMOD_DEF_RM" /* GXT: Stock Mudguards */;
				break;
			}
			break;
		case 62:
			if (iVar0 == joaat("comet6"))
			{
				return "CMOD_DEF_PH" /* GXT: Stock Plate Holder */;
			}
			break;
		case 34:
			if (joaat("TOP_LSPOIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMOD_LSPO_0" /* GXT: None */;
			}
			else
			{
				return "CMOD_DEF_PH" /* GXT: Stock Plate Holder */;
			}
			break;
		case 35:
			if (__LIB_10__.func_250(iVar0))
			{
				return "CMOD_DEF_NOPB" /* GXT: No Pushbar */;
			}
			else
			{
				return "CMOD_DEF_PB" /* GXT: Stock Pushbar */;
			}
			break;
		case 19:
			if (VEHICLE::IS_THIS_MODEL_A_CAR(iVar0))
			{
				return "CMOD_SEAT_3" /* GXT: Stock Seats */;
			}
			else
			{
				return "CMOD_DEF_FS" /* GXT: Stock Seat */;
			}
			break;
		case 37:
			if (VEHICLE::IS_THIS_MODEL_A_CAR(iVar0))
			{
				return "CMOD_SEAT_3" /* GXT: Stock Seats */;
			}
			else
			{
				return "CMOD_DEF_RS" /* GXT: Stock Seat */;
			}
			break;
		case 43:
			if (__LIB_10__.func_249(iVar0))
			{
				return "CMOD_NDEF_SS" /* GXT: No Side Steps */;
			}
			else
			{
				return "CMOD_DEF_SS" /* GXT: Stock Side Step */;
			}
			break;
		case 45:
			if (((((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || iVar0 == joaat("weevil2")) || iVar0 == joaat("ruiner4")) || iVar0 == joaat("picador"))
			{
			}
			else
			{
				return "CMOD_DEF_SW" /* GXT: No Spare Wheel */;
			}
			break;
		case 20:
			return "CMOD_DEF_FT" /* GXT: Stock Fuel Tank */;
			break;
		case 59:
			return "CMOD_DEF_WB" /* GXT: No Wheelie Bar */;
			break;
		case 48:
			return "CMOD_DEF_TG" /* GXT: Stock Tailgate */;
			break;
		case 52:
			if (1621664729 == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMOD_RUNKC_S";
			}
			else
			{
				return "CMOD_DEF_TR" /* GXT: Stock Trunk */;
			}
			break;
		case 15:
			if (__LIB_10__.func_248(Local_124.f_406) || (__LIB_10__.func_247(Local_124.f_406) && !bParam1))
			{
				if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
				{
					return "CMOD_DPLA_S";
				}
				else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
				{
					return "CMOD_DOOR_S";
				}
				else
				{
					return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
				}
			}
			else if (__LIB_10__.func_247(Local_124.f_406) && bParam1)
			{
				return "CMOD_DEF_OR" /* GXT: No Ornaments */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ENCOV_S";
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DOOR_S";
			}
			else if ((iVar0 == joaat("fagaloa") || iVar0 == joaat("vagrant")) || iVar0 == joaat("brioso3"))
			{
				return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
			}
			else if (__LIB_10__.func_246(Local_124.f_406))
			{
				if (bParam1)
				{
					return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
				}
				else
				{
					return "BT_DEF0" /* GXT: Stock Light Deflectors */;
				}
			}
			else if (__LIB_10__.func_245(Local_124.f_406))
			{
				if (bParam1)
				{
					return "CMOD_DEF_FNDR_R" /* GXT: Stock Rear Fenders */;
				}
				else
				{
					return "CMOD_DEF_FNDR_F" /* GXT: Stock Front Fenders */;
				}
			}
			else if (bParam1)
			{
				if (__LIB_4__.func_535(Local_124.f_406))
				{
					return "CMOD_CUS_FEN_2" /* GXT: Stock Sissy Bar */;
				}
				else if (iVar0 == joaat("italigtb2"))
				{
					return "CMOD_WNG_R3" /* GXT: Stock Rear Fender */;
				}
				else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_RDIF_S";
				}
				else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_HEC_S";
				}
				else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_PROMI_S";
				}
				else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_BOMB_S";
				}
				else if ((((((iVar0 == joaat("zion3") || iVar0 == joaat("issi7")) || iVar0 == joaat("gauntlet5")) || iVar0 == joaat("dukes3")) || iVar0 == joaat("peyote3")) || iVar0 == joaat("brioso2")) || iVar0 == joaat("dominator7"))
				{
					return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
				}
				else if (iVar0 == joaat("zhaba"))
				{
					return "CMOD_SIDRP_S";
				}
				else if (joaat("TOP_ROOFRAIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_R_RAI_S";
				}
				else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
				{
					return "CMOD_SEWEAP_S";
				}
				else if (iVar0 == joaat("club"))
				{
					return "CMM_MOD_DOOR_PA" /* GXT: Stock Door Panels */;
				}
				else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
				{
					return "CMOD_DEF_WHE";
				}
				else if (iVar0 == joaat("tailgater2"))
				{
					return "CMOD_DEF_FNDR_F" /* GXT: Stock Front Fenders */;
				}
				else if (iVar0 == joaat("growler"))
				{
					return "CMOD_DEF_FNDR_F" /* GXT: Stock Front Fenders */;
				}
				else
				{
					return "CMOD_WNG_3" /* GXT: Stock Right Fender */;
				}
			}
			else if ((((((((iVar0 == joaat("fcr2") || iVar0 == joaat("issi3")) || iVar0 == joaat("michelli")) || iVar0 == joaat("nebula")) || iVar0 == joaat("jugular")) || iVar0 == joaat("rebla")) || iVar0 == joaat("kanjo")) || iVar0 == joaat("yosemite3")) || iVar0 == joaat("kanjosj"))
			{
				return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
			}
			else if ((((((((((__LIB_10__.func_109() || iVar0 == joaat("sentinel3")) || iVar0 == joaat("hellion")) || iVar0 == joaat("manana2")) || iVar0 == joaat("youga3")) || iVar0 == joaat("comet6")) || iVar0 == joaat("warrener2")) || iVar0 == joaat("vectre")) || iVar0 == joaat("dominator8")) || iVar0 == joaat("futo2")) || iVar0 == joaat("postlude"))
			{
				return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
			}
			else if (__LIB_4__.func_535(Local_124.f_406) && iVar0 != joaat("faggio3"))
			{
				return "CMOD_CUS_FEN_0" /* GXT: Stock Shifter */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ST_WIND_0" /* GXT: Stock Windshield */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_DEF_FM" /* GXT: Stock Mudguards */;
			}
			else if (((joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) && iVar0 != joaat("impaler2")) && iVar0 != joaat("impaler3")) && iVar0 != joaat("impaler4"))
			{
				return "CMOD_DEF_BLO" /* GXT: Stock Engine Block */;
			}
			else if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DPLA_S";
			}
			else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_PROMI_S";
			}
			else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_BOMB_S";
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DOOR_S";
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DEF_BRB" /* GXT: Stock Brace Bar */;
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ARCHCO_D" /* GXT: Stock Arch Covers */;
			}
			else if (iVar0 == joaat("gb200"))
			{
				return "CMOD_MUD_NS";
			}
			else if (joaat("TOP_BUMPEX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_BUMX_N";
			}
			else if (iVar0 == joaat("gauntlet3"))
			{
				return "CMOD_COL6_2";
			}
			else if (iVar0 == joaat("zhaba"))
			{
				return "CMOD_SIDLP_S";
			}
			else if (iVar0 == joaat("club"))
			{
				return "CMM_MOD_FRO_PA" /* GXT: Stock Front Panels */;
			}
			else if (iVar0 == joaat("dominator7") || iVar0 == joaat("euros"))
			{
				return "CMOD_DEF_FNDR_F" /* GXT: Stock Front Fenders */;
			}
			else if (iVar0 == joaat("tailgater2"))
			{
				return "CMOD_ARCHCO_D" /* GXT: Stock Arch Covers */;
			}
			else
			{
				return "CMOD_WNG_0" /* GXT: Stock Left Fender */;
			}
			break;
		case 91:
			if (joaat("TOP_SUNST") != MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)))
			{
				return "CMOD_DEF_TRIM";
			}
			break;
		case 90:
			return "CMOD_DEF_DIAL";
			break;
		case 70:
			return "CMOD_DEF_WHE";
			break;
		case 78:
			if (((((__LIB_10__.func_742(iVar0) && iVar0 != joaat("jester4")) && iVar0 != joaat("rt3000")) && iVar0 != joaat("futo2")) && iVar0 != joaat("dominator8")) && iVar0 != joaat("kanjosj"))
			{
				return "CMOD_COL5_41";
			}
			else if (iVar0 == joaat("previon"))
			{
				return "CMOD_AIR_STOCK";
			}
			else if (iVar0 == joaat("kanjosj"))
			{
				return "CMOD_COL6_2";
			}
			break;
		case 77:
			if (((((iVar0 == joaat("tornado5") || iVar0 == joaat("manana2")) || iVar0 == joaat("yosemite3")) || __LIB_10__.func_136()) || iVar0 == joaat("greenwood")) || iVar0 == joaat("kanjosj"))
			{
				return "CMOD_AIR_STOCK";
			}
			else if (iVar0 == joaat("vectre"))
			{
				return "CMOD_ENCOV_S";
			}
			else if (joaat("TOP_RAILCOV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMOD_RCOV_0" /* GXT: Stock Rail Covers */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMOD_ENCOV_S";
			}
			else if (__LIB_10__.func_140(iVar0))
			{
				return "CMOD_CAMC_STK";
			}
			break;
		case 76:
			if (__LIB_10__.func_758(Local_124.f_406))
			{
				return "CMOD_DEF_BLO" /* GXT: Stock Engine Block */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMOD_AIR_STOCK";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMM_MOD_S45";
			}
			break;
		case 74:
			if (__LIB_1__.func_932(iVar0))
			{
				return "CMOD_DEF_TR" /* GXT: Stock Trunk */;
			}
			return "CMOD_COL6_2";
			break;
		case 84:
			if (iVar0 == joaat("dominator7"))
			{
				return "CMOD_COL5_41";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMOD_AIR_STOCK";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_VENT_S" /* GXT: Stock Vents */;
			}
			break;
		case 69:
			if (VEHICLE::IS_THIS_MODEL_A_CAR(iVar0))
			{
				return "CMOD_SEAT_3" /* GXT: Stock Seats */;
			}
			else
			{
				return "CMOD_SEAT_0" /* GXT: Stock Seat */;
			}
			break;
		case 82:
			if (__LIB_10__.func_757(Local_124.f_406))
			{
				return "CMOD_FUE_0" /* GXT: Stock Fuel Tank */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMM_MOD_S45";
			}
			else if (iVar0 == joaat("tailgater2") || iVar0 == joaat("sentinel4"))
			{
				return "CMOD_COL6_2";
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_MOD_SIN";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_NOPAN_0" /* GXT: Stock Nose Panel */;
			}
			break;
		case 95:
			if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) && iVar0 != joaat("xa21"))
			{
				return "CMOD_RDIF_S";
			}
			else if (iVar0 == joaat("xa21"))
			{
				return "CMOD_ENCOV_S";
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLIGHT_S";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RMLIGHT_S";
			}
			else if (iVar0 == joaat("cheetah2"))
			{
				return "CMOD_DEF_WG" /* GXT: Stock Fenders */;
			}
			else if (iVar0 == joaat("comet4"))
			{
				return "CMOD_ROF_0" /* GXT: Stock Roof */;
			}
			else if (joaat("TOP_ENGD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DEF_ED" /* GXT: Stock Engine Detail */;
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DEF_BLO" /* GXT: Stock Engine Block */;
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_VISO_NS";
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_S";
			}
			else if (joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_WINSP_0" /* GXT: None */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_RMLIGHT_S";
			}
			else if (iVar0 == joaat("ruiner4"))
			{
				return "CMOD_DEF_FM" /* GXT: Stock Mudguards */;
			}
			break;
		case 65:
			if (joaat("TOP_INTERTYPE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)))
			{
				return "CMOD_INTTYPE_S" /* GXT: Stock Interior */;
			}
			break;
		case 66:
			if (iVar0 == joaat("issi5"))
			{
				return "CMOD_ROF_0" /* GXT: Stock Roof */;
			}
			else if (MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_1), "CMM_MOD_ST4"))
			{
				return "CMM_MOD_S4S";
			}
			else
			{
				return "CMOD_COL6_2";
			}
			break;
		case 68:
			if (iVar0 == joaat("gauntlet5"))
			{
				return "CMOD_DOOR_S";
			}
			else if ((__LIB_1__.func_932(iVar0) || iVar0 == joaat("tenf2")) || iVar0 == joaat("postlude"))
			{
				return "CMOD_DOOR_SS" /* GXT: Stock Doors */;
			}
			break;
		case 83:
			if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_S";
			}
			else if (joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)) || joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_TLIG_0" /* GXT: Stock Tail Lights */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_AIR_STOCK";
			}
			return "CMOD_DOOR_SS" /* GXT: Stock Doors */;
			break;
		case 40:
			if (joaat("TOP_PANN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_PANN_1" /* GXT: No Panniers */;
			}
			break;
		case 81:
			if (((joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)) && iVar0 != joaat("comet6")) && iVar0 != joaat("remus")) && iVar0 != joaat("tailgater2"))
			{
				return "CMOD_STOCK_ANT" /* GXT: Stock Antenna */;
			}
			break;
		case 63:
			if (iVar0 == joaat("rt3000") || iVar0 == joaat("previon"))
			{
				return "CMOD_COL6_2";
			}
			else if ((joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SPLIT_S";
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_CANA_S";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_VENT_S" /* GXT: Stock Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_AIR_STOCK";
			}
			break;
		case 71:
			if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_CUS_FEN_0" /* GXT: Stock Shifter */;
			}
			break;
	}
	return "CMOD_COL6_2";
}

int func_287(int iParam0, int iParam1)//Position - 0x143253
{
	switch (iParam0)
	{
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
			if (iParam1 >= 2)
			{
				return 0;
			}
			break;
		case 22:
			if (iParam1 >= 15)
			{
				return 0;
			}
			break;
		case 11:
		case 1:
		case 2:
		case 8:
		case 9:
		case 0:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
		case 36:
		case 37:
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
			if (iParam1 > VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, iParam0))
			{
				return 0;
			}
			break;
		case 10:
			if (__LIB_10__.func_307(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
			{
				if (iParam1 > __LIB_10__.func_252(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
				{
					return 0;
				}
			}
			else if (__LIB_4__.func_526(Local_124.f_406))
			{
				if (iParam1 > VEHICLE::GET_VEHICLE_LIVERY2_COUNT(Local_124.f_406))
				{
					return 0;
				}
			}
			else if (iParam1 > VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, iParam0))
			{
				return 0;
			}
			break;
	}
	if (!__LIB_10__.func_760(iParam1, iParam0))
	{
		return 0;
	}
	return 1;
}

void func_288(int iParam0, var uParam1)//Position - 0x168601
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iParam0) / 1440f));
	iVar1 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT((iParam0 % 1440)) / 60f));
	iVar2 = ((iParam0 % 1440) % 60);
	while (iVar0 >= __LIB_10__.func_771((2000 + iVar3)))
	{
		if (__LIB_10__.func_66((2000 + iVar3)))
		{
			iVar0 = (iVar0 - 366);
		}
		else
		{
			iVar0 = (iVar0 - 365);
		}
		iVar3++;
	}
	while (iVar0 >= __LIB_0__.func_139(iVar4, (2000 + iVar3)))
	{
		iVar0 = (iVar0 - __LIB_0__.func_139(iVar4, (2000 + iVar3)));
		iVar4++;
	}
	*uParam1 = (2000 + iVar3);
	uParam1->f_1 = (1 + iVar4);
	uParam1->f_2 = (1 + iVar0);
	uParam1->f_3 = iVar1;
	uParam1->f_4 = iVar2;
}

void func_289()//Position - 0x175AE9
{
	if (MISC::GET_RANDOM_INT_IN_RANGE(0, 3) == 1)
	{
		__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_UPGRDSHOPGEN", "SPEECH_PARAMS_FORCE", 1);
		return;
	}
	switch (Local_124.f_443)
	{
		case 18:
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("tampa3"))
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_WEPWVMOD", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			else
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_APPWVMOD", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 36:
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("tampa3"))
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_WEPWVMOD", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			else
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_APPWVMOD", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 14:
			__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_APPWVMOD", "SPEECH_PARAMS_FORCE", 1);
			iLocal_532 = -1;
			break;
		case 85:
			__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_APPWVMOD", "SPEECH_PARAMS_FORCE", 1);
			iLocal_532 = -1;
			break;
	}
}

void func_290()//Position - 0x175E1E
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	switch (Local_124.f_443)
	{
		case 75:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_HYDRAULICS", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 62:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_PLATEHOLDER", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 63:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_VANITYPLATE", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 70:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_STEERING", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 71:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_GEARKNOB", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 72:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_PLAQUE", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 73:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_ICEMOD", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 65:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_BOBBLE", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 74:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_TRUNK", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		case 76:
		case 77:
		case 78:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				if (Local_124.f_443 == 76 && iVar0 == joaat("gauntlet5"))
				{
					__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_GENERIC", "SPEECH_PARAMS_FORCE", 1);
				}
				else
				{
					__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_VISUAL", "SPEECH_PARAMS_FORCE", 1);
				}
				iLocal_532 = -1;
			}
			break;
		case 85:
			if (__LIB_0__.func_174(iVar0, 0))
			{
				__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_LIVERY", "SPEECH_PARAMS_FORCE", 1);
				iLocal_532 = -1;
			}
			break;
		default:
			__LIB_20__.func_34(Local_124.f_12, "OFFICEMECH_GENERIC", "SPEECH_PARAMS_FORCE", 1);
			iLocal_532 = -1;
			break;
	}
}

void func_291()//Position - 0x17C4BA
{
	if (iLocal_426)
	{
		__LIB_4__.func_222(-1);
		if (bLocal_427)
		{
			if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				__LIB_1__.func_345(201, "ITEM_SELECT" /* GXT: Select */, -1, 0);
			}
			else if (!__LIB_10__.func_375())
			{
				__LIB_1__.func_345(201, "ITEM_BUY" /* GXT: Buy */, -1, 0);
			}
			else
			{
				__LIB_1__.func_345(201, "ITEM_SELECT" /* GXT: Select */, -1, 0);
			}
			__LIB_10__.func_121(0);
		}
		else if (BitTest(Local_470.f_95, 0))
		{
			__LIB_1__.func_345(201, "ITEM_REM" /* GXT: Remove */, -1, 0);
		}
		else
		{
			__LIB_1__.func_345(201, "ITEM_SELECT" /* GXT: Select */, -1, 0);
		}
		__LIB_1__.func_345(202, "ITEM_BACK" /* GXT: Back */, -1, 0);
		__LIB_20__.func_38(&uLocal_105);
		__LIB_4__.func_221(21, "ITEM_MOV_CAM" /* GXT: Move Camera */, -1);
		if (!(iLocal_556 == 1 || iLocal_556 == 3) && !bLocal_462)
		{
			__LIB_1__.func_345(iLocal_460, "ITEM_ZOOM" /* GXT: Zoom */, -1, 0);
		}
		if (((((!__LIB_10__.func_523() && !__LIB_10__.func_531()) && !__LIB_4__.func_532()) && !__LIB_4__.func_531()) && !ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("rcbandito")) && !ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("minitank"))
		{
			__LIB_20__.func_37();
		}
		iLocal_426 = 0;
	}
}

void func_292()//Position - 0x182BDC
{
	if (Local_124.f_116.f_1 == 0)
	{
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 309, false);
		__LIB_10__.func_34(0);
		__LIB_10__.func_468(8);
		if (__LIB_10__.func_114())
		{
			__LIB_20__.func_34(Local_124.f_12, "AIRMECH_MENUBYE", "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL", 1);
		}
	}
	else if (Local_124.f_116.f_1 == 1)
	{
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 309, false);
		TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
		__LIB_10__.func_34(0);
		__LIB_10__.func_468(8);
		if (__LIB_10__.func_114())
		{
			__LIB_20__.func_34(Local_124.f_12, "AIRMECH_MENUBYE", "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL", 1);
		}
	}
	else if (Local_124.f_116.f_1 == 2)
	{
		Local_124.f_116.f_5 = 0;
		__LIB_10__.func_468(6);
		__LIB_10__.func_37(1);
		VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, true);
		VEHICLE::SET_VEHICLE_DOORS_LOCKED(Local_124.f_406, 2);
	}
}

int func_293()//Position - 0x1BFDCA
{
	bool bVar0;
	bool bVar1;
	if (PLAYER::PLAYER_ID() != __LIB_0__.func_160() && Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != PLAYER::PLAYER_ID())
	{
		return 0;
	}
	if (__LIB_0__.func_706())
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if ((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if ((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_2__.func_417(PLAYER::PLAYER_ID())) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || BitTest(iLocal_201, 4)) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
	{
		return 0;
	}
	bVar0 = __LIB_6__.func_369(PLAYER::PLAYER_PED_ID());
	bVar1 = __LIB_6__.func_368(PLAYER::PLAYER_PED_ID());
	if (!bVar0 && !bVar1)
	{
		if (!__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
		{
			return 0;
		}
	}
	if (bVar0)
	{
		if (BitTest(Global_1946250.f_9, 31))
		{
			return 0;
		}
		if (__LIB_20__.func_60() == 0 || __LIB_10__.func_239() == 0)
		{
			return 0;
		}
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160() && !ENTITY::DOES_ENTITY_EXIST(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[0]))
		{
			return 0;
		}
	}
	if (bVar1)
	{
		if (BitTest(Global_1946250.f_9, 31))
		{
			return 0;
		}
		if (__LIB_20__.func_60() == 1 || __LIB_10__.func_239() == 1)
		{
			return 0;
		}
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160() && !ENTITY::DOES_ENTITY_EXIST(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[1]))
		{
			return 0;
		}
	}
	return 1;
}

int func_294()//Position - 0x1C1A55
{
	int iVar0;
	if (__LIB_10__.func_477())
	{
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 && Local_103.f_15[0] == PLAYER::PLAYER_ID())
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					if (__LIB_6__.func_369(PLAYER::PLAYER_PED_ID()))
					{
						__LIB_10__.func_36(1);
						return 1;
					}
					else if (__LIB_6__.func_368(PLAYER::PLAYER_PED_ID()))
					{
						__LIB_10__.func_36(2);
						return 1;
					}
					else
					{
						return 0;
					}
				}
				else
				{
					__LIB_10__.func_36(0);
					return 1;
				}
			}
		}
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_19__.func_978() - 1))
	{
		if (Local_103.f_15[iVar0] == PLAYER::PLAYER_ID())
		{
			__LIB_10__.func_36(Local_103.f_20[iVar0]);
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_295(bool bParam0)//Position - 0x1C1B1A
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 <= (__LIB_19__.func_978() - 1))
	{
		if (BitTest(Local_103.f_10[iVar0], 0))
		{
			iVar1++;
		}
		iVar0++;
	}
	if (bParam0)
	{
		return iVar1 == __LIB_19__.func_978();
	}
	else
	{
		return BitTest(Local_103.f_10[iLocal_114], 0);
	}
	return 0;
}

int func_296()//Position - 0x1C32C8
{
	if (__LIB_10__.func_554() || __LIB_10__.func_395())
	{
		if (!ENTITY::DOES_ENTITY_EXIST(iLocal_163) && ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
		{
			STREAMING::REQUEST_MODEL(__LIB_10__.func_786());
			if (STREAMING::HAS_MODEL_LOADED(__LIB_10__.func_786()))
			{
				iLocal_163 = OBJECT::CREATE_OBJECT(__LIB_10__.func_786(), Local_124.f_12.f_6, false, false, false);
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_10__.func_786());
				if (ENTITY::DOES_ENTITY_EXIST(iLocal_163))
				{
					ENTITY::ATTACH_ENTITY_TO_ENTITY(iLocal_163, Local_124.f_12, PED::GET_PED_BONE_INDEX(Local_124.f_12, 28422), 0.05f, 0f, 0f, 0f, 0f, 0f, false, false, false, false, 2, true, 0);
					return 1;
				}
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	else if ((__LIB_10__.func_553() && __LIB_11__.func_343(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)) && NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (Local_103.f_49 == 1)
		{
			if (!ENTITY::DOES_ENTITY_EXIST(Local_103.f_48) && ENTITY::DOES_ENTITY_EXIST(Local_124.f_12.f_2))
			{
				STREAMING::REQUEST_MODEL(joaat("w_ar_assaultrifle"));
				if (STREAMING::HAS_MODEL_LOADED(joaat("w_ar_assaultrifle")))
				{
					Local_103.f_48 = OBJECT::CREATE_OBJECT(joaat("w_ar_assaultrifle"), Local_124.f_12.f_12, Local_124.f_12.f_12.f_1, (Local_124.f_12.f_12.f_2 + 1f), true, false, false);
					NETWORK::NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(Local_103.f_48, true);
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("w_ar_assaultrifle"));
					return 1;
				}
				else
				{
					return 0;
				}
			}
			else
			{
				return 1;
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(Local_103.f_48))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_103.f_48))
			{
				OBJECT::DELETE_OBJECT(&(Local_103.f_48));
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_103.f_48);
			}
		}
	}
	return 0;
}

void func_297()//Position - 0x1C4E6B
{
	int iVar0;
	switch (iLocal_519)
	{
		case 0:
			break;
		case 1:
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			}
			else
			{
				iVar0 = 0;
			}
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				iLocal_520 = MISC::GET_GAME_TIMER();
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("faction3"))
				{
					VEHICLE::SET_HYDRAULIC_VEHICLE_STATE(iVar0, 5);
				}
				else
				{
					VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 0, 1f);
					VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 1, 1f);
				}
				iLocal_519 = 2;
				iLocal_521 = 0;
			}
			else
			{
				iLocal_519 = 0;
			}
			break;
		case 2:
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			}
			else
			{
				iVar0 = 0;
			}
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("faction3"))
				{
					if ((MISC::GET_GAME_TIMER() - iLocal_520) > 1500)
					{
						iLocal_519 = 0;
						__LIB_20__.func_34(Local_124.f_12, "LR_UPGRADE_SUPERMOD", "SPEECH_PARAMS_FORCE", 1);
					}
					else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 1400)
					{
						if (!BitTest(iLocal_521, 2))
						{
							VEHICLE::SET_HYDRAULIC_VEHICLE_STATE(iVar0, 5);
							VEHICLE::SET_HYDRAULIC_VEHICLE_STATE(iVar0, 3);
							MISC::SET_BIT(&iLocal_521, 2);
						}
					}
					else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 200)
					{
						if (!BitTest(iLocal_521, 0))
						{
							VEHICLE::SET_HYDRAULIC_VEHICLE_STATE(iVar0, 4);
							MISC::SET_BIT(&iLocal_521, 0);
						}
					}
				}
				else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 1500)
				{
					iLocal_519 = 0;
					__LIB_20__.func_34(Local_124.f_12, "LR_UPGRADE_SUPERMOD", "SPEECH_PARAMS_FORCE", 1);
				}
				else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 1100)
				{
					if (!BitTest(iLocal_521, 2))
					{
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 0, 0f);
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 1, 0f);
						MISC::SET_BIT(&iLocal_521, 2);
					}
				}
				else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 800)
				{
					if (!BitTest(iLocal_521, 1))
					{
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 0, 1f);
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 1, 1f);
						MISC::SET_BIT(&iLocal_521, 1);
					}
				}
				else if ((MISC::GET_GAME_TIMER() - iLocal_520) > 400)
				{
					if (!BitTest(iLocal_521, 0))
					{
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 0, 0f);
						VEHICLE::SET_HYDRAULIC_SUSPENSION_RAISE_FACTOR(iVar0, 1, 0f);
						MISC::SET_BIT(&iLocal_521, 0);
					}
				}
			}
			else
			{
				iLocal_519 = 0;
			}
			break;
	}
}

int func_298()//Position - 0x1C83E7
{
	int iVar0;
	struct<4> Var1;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_10__.func_553())
		{
			iVar0 = Local_124.f_12.f_2;
		}
		else
		{
			iVar0 = Local_124.f_12;
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (!BitTest(Local_103.f_8, 7))
			{
				if (__LIB_10__.func_554() || __LIB_10__.func_395())
				{
					Local_103.f_42 = "amb@world_human_tourist_map@female@idle_a";
					Local_103.f_43 = "idle_b";
				}
				else if (__LIB_10__.func_553())
				{
					if (Local_103.f_49 == 1)
					{
						Local_103.f_42 = "anim@amb@range@weapon_test@";
						Local_103.f_43 = "weapon_inspect_01_amy_skater_01";
						Local_103.f_44 = "weapon_inspect_01_w_ar_assaultrifle";
					}
				}
				else
				{
					Local_103.f_42 = "MOVE_P_M_ONE_IDLES@GENERIC";
					Local_103.f_43 = "fidget_arm_swing";
				}
				STREAMING::REQUEST_ANIM_DICT(Local_103.f_42);
				if (STREAMING::HAS_ANIM_DICT_LOADED(Local_103.f_42))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
					{
						__LIB_20__.func_140(&Var1);
						Local_103.f_40 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(Var1, Var1.f_3, 2, true, false, 1f, 0f, 1f);
						NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(iVar0, Local_103.f_40, Local_103.f_42, Local_103.f_43, 4f, -4f, 32781, 0, 1000f, 0);
						if (__LIB_10__.func_553())
						{
							NETWORK::NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Local_103.f_48, Local_103.f_40, Local_103.f_42, Local_103.f_44, 4f, -4f, 32781);
						}
						NETWORK::NETWORK_START_SYNCHRONISED_SCENE(Local_103.f_40);
						MISC::SET_BIT(&(Local_103.f_8), 7);
						return 1;
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(iVar0));
					}
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_299()//Position - 0x1C85A0
{
	int iVar0;
	struct<4> Var1;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_10__.func_553())
		{
			iVar0 = Local_124.f_12.f_2;
		}
		else
		{
			iVar0 = Local_124.f_12;
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (!BitTest(Local_103.f_8, 6))
			{
				if (__LIB_10__.func_554() || __LIB_10__.func_395())
				{
					Local_103.f_42 = "amb@world_human_tourist_map@female@idle_a";
					Local_103.f_43 = "idle_a";
				}
				else if (__LIB_10__.func_553())
				{
					if (Local_103.f_49 == 1)
					{
						Local_103.f_42 = "anim@amb@range@weapon_test@";
						Local_103.f_43 = "base_amy_skater_01";
						Local_103.f_44 = "base_w_ar_assaultriflemk2";
					}
				}
				else
				{
					Local_103.f_42 = "MOVE_P_M_ONE_IDLES@GENERIC";
					Local_103.f_43 = "fidget_rub_hands";
				}
				STREAMING::REQUEST_ANIM_DICT(Local_103.f_42);
				if (STREAMING::HAS_ANIM_DICT_LOADED(Local_103.f_42))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
					{
						__LIB_20__.func_140(&Var1);
						Local_103.f_40 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(Var1, Var1.f_3, 2, true, false, 1f, 0f, 1f);
						NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(iVar0, Local_103.f_40, Local_103.f_42, Local_103.f_43, 4f, -4f, 32781, 0, 1000f, 0);
						if (__LIB_10__.func_553())
						{
							NETWORK::NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Local_103.f_48, Local_103.f_40, Local_103.f_42, Local_103.f_44, 4f, -4f, 32781);
						}
						NETWORK::NETWORK_START_SYNCHRONISED_SCENE(Local_103.f_40);
						MISC::SET_BIT(&(Local_103.f_8), 6);
						return 1;
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(iVar0));
					}
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_300(int iParam0)//Position - 0x1CA67D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (__LIB_19__.func_978() - 1))
	{
		if (Local_103.f_15[iVar0] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_301()//Position - 0x1CC907
{
	if (__LIB_10__.func_553())
	{
		if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
			{
				if (__LIB_20__.func_89(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
				{
					if (__LIB_19__.func_949(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
					{
						if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_1))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_103.f_1))
							{
								ENTITY::SET_ENTITY_VISIBLE(NETWORK::NET_TO_PED(Local_103.f_1), true, false);
								ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_PED(Local_103.f_1), false);
								ENTITY::SET_ENTITY_COMPLETELY_DISABLE_COLLISION(NETWORK::NET_TO_PED(Local_103.f_1), true, false);
								PED::SET_PED_PROP_INDEX(Local_124.f_12.f_1, 1, 0, 0, false);
								PED::SET_PED_PROP_INDEX(Local_124.f_12.f_1, 0, 0, 0, false);
							}
							else
							{
								NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_103.f_1);
							}
						}
					}
					if (__LIB_11__.func_343(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
					{
						if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_103.f_2))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_103.f_2))
							{
								ENTITY::SET_ENTITY_VISIBLE(NETWORK::NET_TO_PED(Local_103.f_2), true, false);
								ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_PED(Local_103.f_2), false);
								ENTITY::SET_ENTITY_COMPLETELY_DISABLE_COLLISION(NETWORK::NET_TO_PED(Local_103.f_2), true, false);
								PED::SET_PED_PROP_INDEX(Local_124.f_12.f_2, 0, 0, 0, false);
								PED::SET_PED_PROP_INDEX(Local_124.f_12.f_2, 1, 0, 0, false);
							}
							else
							{
								NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_103.f_2);
							}
						}
					}
				}
			}
		}
	}
}

void func_302()//Position - 0x1CDD9A
{
	if ((__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1) && __LIB_10__.func_467()) && !Global_262145.f_22723 /* Tunable: 1198408840 */)
	{
		if (Global_1853189 != __LIB_0__.func_160())
		{
			if (PLAYER::PLAYER_ID() == Global_1853189)
			{
				if (__LIB_0__.func_341(PLAYER::PLAYER_ID()) && ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
				{
					if (__LIB_5__.func_98(PLAYER::PLAYER_ID()) && !ENTITY::IS_ENTITY_DEAD(Local_124.f_12, false))
					{
						if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 0))
						{
							if (__LIB_20__.func_146(1))
							{
								if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !HUD::IS_HELP_MESSAGE_ON_SCREEN())
								{
									if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 1))
									{
										__LIB_0__.func_151("HANGAR_CARMOD_UH" /* GXT: Enter Personal Aircraft on the Hangar floor and press ~INPUT_CONTEXT~ to modify them. */, -1);
										MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 0);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

void func_303()//Position - 0x1E4CCF
{
	int iVar0;
	iVar0 = Local_124.f_12;
	switch (Local_392.f_0)
	{
		case 0:
			STREAMING::REQUEST_ANIM_DICT(sLocal_411);
			if (STREAMING::HAS_ANIM_DICT_LOADED(sLocal_411))
			{
				MISC::SET_BIT(&uLocal_390, 31);
				Local_392.f_1 = 0;
				Local_392.f_0++;
			}
			break;
		case 1:
			if (Local_124.f_0 != 45)
			{
				if (((ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work_in", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work_base", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work2_in", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work2_base", 3))
				{
					TASK::TASK_PERFORM_SEQUENCE(iVar0, iLocal_418);
				}
				else
				{
					TASK::CLEAR_PED_TASKS(iVar0);
					TASK::TASK_PERFORM_SEQUENCE(iVar0, iLocal_417);
				}
			}
			Local_392.f_0++;
			break;
		case 2:
			iLocal_415 = TASK::GET_SCRIPT_TASK_STATUS(iVar0, joaat("SCRIPT_TASK_PERFORM_SEQUENCE"));
			if (iLocal_415 != 1)
			{
				if (iLocal_415 == 7)
				{
					Local_392.f_0 = 99;
				}
				else
				{
					Local_392.f_0 = 98;
				}
			}
			else if (!BitTest(Local_392.f_1, 0))
			{
				if (PED::IS_PED_FACING_PED(iVar0, PLAYER::PLAYER_PED_ID(), 45f))
				{
					__LIB_10__.func_92(&(Local_124.f_207), 8, 2);
					MISC::SET_BIT(&(Local_392.f_1), 0);
				}
			}
			break;
		case 98:
			__LIB_10__.func_787(Local_124.f_0, __LIB_10__.func_789(Local_124.f_0), 4);
			break;
		case 99:
			__LIB_10__.func_787(Local_124.f_0, __LIB_10__.func_789(Local_124.f_0), 3);
			break;
	}
}

void func_304()//Position - 0x1E4E35
{
	int iVar0;
	iVar0 = Local_124.f_12;
	switch (Local_392.f_0)
	{
		case 0:
			STREAMING::REQUEST_ANIM_DICT(sLocal_411);
			if (STREAMING::HAS_ANIM_DICT_LOADED(sLocal_411))
			{
				MISC::SET_BIT(&uLocal_390, 31);
				Local_392.f_1 = 0;
				Local_392.f_0++;
			}
			break;
		case 1:
			if (Local_124.f_0 != 45)
			{
				if (((ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work_in", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work_base", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work2_in", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sLocal_411, "work2_base", 3))
				{
					TASK::TASK_PERFORM_SEQUENCE(iVar0, iLocal_418);
				}
				else
				{
					TASK::CLEAR_PED_TASKS(iVar0);
					TASK::TASK_PERFORM_SEQUENCE(iVar0, iLocal_417);
				}
			}
			Local_392.f_0++;
			break;
		case 2:
			iLocal_415 = TASK::GET_SCRIPT_TASK_STATUS(iVar0, joaat("SCRIPT_TASK_PERFORM_SEQUENCE"));
			if (iLocal_415 != 1)
			{
				if (iLocal_415 == 7)
				{
					Local_392.f_0 = 99;
				}
				else
				{
					Local_392.f_0 = 98;
				}
			}
			else if (!BitTest(Local_392.f_1, 0))
			{
				if (PED::IS_PED_FACING_PED(iVar0, PLAYER::PLAYER_PED_ID(), 45f))
				{
					__LIB_10__.func_92(&(Local_124.f_207), 1, 2);
					MISC::SET_BIT(&(Local_392.f_1), 0);
				}
			}
			break;
		case 98:
			__LIB_10__.func_787(Local_124.f_0, __LIB_10__.func_789(Local_124.f_0), 4);
			break;
		case 99:
			__LIB_10__.func_787(Local_124.f_0, __LIB_10__.func_789(Local_124.f_0), 3);
			break;
	}
}

void func_305(int iParam0)//Position - 0x1E53B3
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		__LIB_10__.func_790(iParam0, iVar0);
		iVar0++;
	}
}

void func_306()//Position - 0x1E9CA6
{
	if (BitTest(Global_103905, 0))
	{
		if (!__LIB_20__.func_94())
		{
			if (!__LIB_0__.func_649(&uLocal_577))
			{
				__LIB_0__.func_580(&uLocal_577, 0, 0);
			}
			else if (__LIB_2__.func_47(&uLocal_577, 5000, 0))
			{
				MISC::CLEAR_BIT(&Global_103905, 0);
			}
		}
		else
		{
			__LIB_0__.func_579(&uLocal_577);
		}
	}
	else if (__LIB_4__.func_532())
	{
		if (!__LIB_6__.func_369(PLAYER::PLAYER_PED_ID()) && !__LIB_6__.func_368(PLAYER::PLAYER_PED_ID()))
		{
			if (!__LIB_0__.func_649(&uLocal_577))
			{
				__LIB_0__.func_580(&uLocal_577, 0, 0);
			}
			else if (__LIB_2__.func_47(&uLocal_577, 5000, 0))
			{
				__LIB_10__.func_468(8);
				iLocal_201 = 0;
				__LIB_10__.func_30(0);
			}
		}
		else
		{
			__LIB_0__.func_579(&uLocal_577);
		}
	}
	else
	{
		__LIB_0__.func_579(&uLocal_577);
	}
}

void func_307(var uParam0, int iParam1, char* sParam2)//Position - 0x14A
{
	if (__LIB_0__.func_492(&(uParam0->f_57), 7))
	{
		Stack.Push(uParam0[iParam1 /*14*/]);
		Stack.Push(iParam1);
		Stack.Push(sParam2);
		Call_Loc(uParam0->f_57.f_14);
	}
	else
	{
		StringCopy(sParam2, "MPJAC_EXIT" /* GXT: Press ~INPUT_CONTEXT~ to stand up. */, 16);
	}
}

int func_308(int iParam0)//Position - 0x79A
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__.func_138(func_16(), 4, 5);
		case 2:
			return 5;
		default:
	}
	return 0;
}

Vector3 func_309(var uParam0)//Position - 0xEEA
{
	struct<3> Var0;
	Var0 = { (uParam0[uParam0->f_57.f_2 /*14*/])->f_8.f_3 };
	if (__LIB_6__.func_925() && uParam0->f_57.f_8 == 0)
	{
		Var0.f_2 = (Var0.f_2 - 4f);
	}
	return Var0;
}

void func_310(var uParam0, char* sParam1)//Position - 0x103A
{
	switch (uParam0->f_57.f_8)
	{
		case 0:
			StringCopy(sParam1, "ANIM@AMB@CLUBHOUSE@SEATING", 64);
			break;
		case 1:
			StringCopy(sParam1, "ANIM@AMB@OFFICE@SEATING", 64);
			break;
		case 2:
			StringCopy(sParam1, "ANIM@AMB@FACILITY@BRIEFING_ROOM@SEATING", 64);
			break;
	}
	if (__LIB_6__.func_925())
	{
		StringConCat(sParam1, "@FEMALE", 64);
	}
	else
	{
		StringConCat(sParam1, "@MALE", 64);
	}
	switch (uParam0->f_57.f_8)
	{
		case 1:
		case 0:
			switch (uParam0->f_57.f_8.f_1)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@BASE@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@BASE@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@BASE@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@BASE@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@BASE@", 64);
					break;
			}
			break;
		case 2:
			switch (uParam0->f_57.f_8.f_1)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@", 64);
					break;
			}
			break;
	}
}

int func_311(var uParam0)//Position - 0x139C
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if ((iVar1 != PLAYER::PLAYER_ID() && __LIB_0__.func_154(iVar1, 1, 1)) && __LIB_9__.func_898(PLAYER::GET_PLAYER_PED(iVar1), uParam0[uParam0->f_57.f_2 /*14*/]))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_312(var uParam0)//Position - 0x1504
{
	if (uParam0->f_57.f_4 == 6)
	{
	}
	else if (uParam0->f_57.f_4 > 4)
	{
		CAM::SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(PLAYER::PLAYER_PED_ID());
		PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), __LIB_10__.func_806(uParam0));
		uParam0->f_57.f_7 = MISC::GET_FRAME_COUNT();
	}
	else if (uParam0->f_57.f_4 > 1)
	{
		PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), __LIB_10__.func_806(uParam0));
		uParam0->f_57.f_7 = MISC::GET_FRAME_COUNT();
	}
	else if ((MISC::GET_FRAME_COUNT() - uParam0->f_57.f_7) < 5)
	{
		PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), __LIB_10__.func_806(uParam0));
	}
}

void func_313(var uParam0)//Position - 0x15DA
{
	__LIB_9__.func_889(&(uParam0->f_57), 4, __LIB_0__.func_661());
	__LIB_9__.func_889(&(uParam0->f_57), 1, ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false));
	__LIB_9__.func_889(&(uParam0->f_57), 3, PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true));
	__LIB_9__.func_889(&(uParam0->f_57), 0, __LIB_0__.func_77(0));
	__LIB_9__.func_889(&(uParam0->f_57), 2, TASK::IS_PED_RUNNING(PLAYER::PLAYER_PED_ID()));
}

void func_314(int iParam0, var uParam1, int iParam2)//Position - 0x187C
{
	struct<3> Var0;
	float fVar1;
	int iVar2;
	__LIB_10__.func_810(iParam0, &Var0, &fVar1);
	iVar2 = 0;
	while (iVar2 < 2)
	{
		(*uParam1)[(*iParam2)[iVar2] /*14*/] = 2;
		(uParam1[(*iParam2)[iVar2] /*14*/])->f_8 = { __LIB_0__.func_298(func_76(iVar2), fVar1) + Var0 };
		(uParam1[(*iParam2)[iVar2] /*14*/])->f_8.f_3 = { 0f, 0f, (fVar1 + 174f) };
		(uParam1[(*iParam2)[iVar2] /*14*/])->f_1 = { __LIB_0__.func_298(__LIB_10__.func_809(iVar2), fVar1) + Var0 };
		(uParam1[(*iParam2)[iVar2] /*14*/])->f_1.f_3 = { __LIB_0__.func_298(__LIB_10__.func_808(iVar2), fVar1) + Var0 };
		(uParam1[(*iParam2)[iVar2] /*14*/])->f_1.f_6 = 1.42f;
		iVar2++;
	}
}

Vector3 func_315()//Position - 0x1A57
{
	return __LIB_10__.func_798() + Vector(0f, -8.946f, 47.215f);
}

void func_316(int* iParam0, int iParam1)//Position - 0xF913
{
	__LIB_9__.func_89(iParam0, iParam1, iParam1);
	GRAPHICS::ENABLE_MOVIE_SUBTITLES(false);
	MISC::SET_BIT(&(iParam0->f_28), 6);
	MISC::CLEAR_BIT(&(Global_2621446.f_1), 2);
}

int func_317(bool bParam0)//Position - 0x1B6108
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (__LIB_9__.func_884(iVar1))
			{
				if (bParam0)
				{
					if (!__LIB_9__.func_883(iVar1))
					{
						return 1;
					}
				}
				else
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_318(var uParam0)//Position - 0x1B65
{
	var uVar0[10];
	int iVar1;
	PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &uVar0, -1);
	iVar1 = 0;
	while (iVar1 < 10)
	{
		if (((ENTITY::DOES_ENTITY_EXIST(uVar0[iVar1]) && !PED::IS_PED_INJURED(uVar0[iVar1])) && ENTITY::IS_ENTITY_VISIBLE(uVar0[iVar1])) && __LIB_10__.func_613(uVar0[iVar1], &(uParam0->f_16[uParam0->f_9 /*14*/])))
		{
			return 1;
		}
		iVar1++;
	}
	return 0;
}

void func_319(var uParam0)//Position - 0x1DF2
{
	if (uParam0->f_13 == 6)
	{
	}
	else if (uParam0->f_13 > 4)
	{
		CAM::SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(PLAYER::PLAYER_PED_ID());
		PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), __LIB_9__.func_899());
		uParam0->f_12 = MISC::GET_FRAME_COUNT();
	}
	else if ((MISC::GET_FRAME_COUNT() - uParam0->f_12) < 5)
	{
		PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), __LIB_9__.func_899());
	}
}

void func_320(int iParam0, bool bParam1)//Position - 0x8417
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<4> Var3;
	bool bVar4;
	if (iParam0 == 10)
	{
		return;
	}
	bVar4 = BitTest(Global_113386.f_7229[iParam0], 0);
	if (iParam0 == 5 && BitTest(Global_113386.f_7229[6], 0))
	{
		bVar4 = true;
	}
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = 0;
		StringCopy(&Var3, "", 32);
		iVar2 = 10;
		while (__LIB_10__.func_603(iVar0, iVar1, &Var3, &iVar2))
		{
			if (iVar2 == iParam0)
			{
				if (bVar4)
				{
					if (bParam1)
					{
						OBJECT::CLEAR_GARAGE(MISC::GET_HASH_KEY(&Var3), false);
					}
				}
				OBJECT::ENABLE_SAVING_IN_GARAGE(MISC::GET_HASH_KEY(&Var3), bVar4);
			}
			iVar1++;
		}
		iVar0++;
	}
}

void func_321(int iParam0)//Position - 0x56339
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 14;
	Global_78130[0 /*14*/].f_5 = 2;
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 0;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 1;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 2;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 3;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 4;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 5;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 6;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 7;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = -1;
			iVar4 = 0;
			iVar1 = 0;
			iVar5 = 8;
			break;
		case 154:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 2;
			break;
		case 88:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 10;
			break;
		case 89:
			StringCopy(&Var2, "PROPS_P2_E1" /* GXT: Specs Pest Shades */, 16);
			iVar3 = 1;
			iVar4 = 0;
			iVar1 = 45;
			iVar5 = 10;
			break;
		case 90:
			StringCopy(&Var2, "PROPS_P2_E2" /* GXT: Dix Charcoal Glasses */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 91:
			StringCopy(&Var2, "PROPS_P2_E2_1" /* GXT: Dix Brown Glasses */, 16);
			iVar3 = 2;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 10;
			break;
		case 92:
			StringCopy(&Var2, "PROPS_P2_E2_2" /* GXT: Dix Black Glasses */, 16);
			iVar3 = 2;
			iVar4 = 2;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 93:
			StringCopy(&Var2, "PROPS_P2_E2_3" /* GXT: Dix Checked Glasses */, 16);
			iVar3 = 2;
			iVar4 = 3;
			iVar1 = 52;
			iVar5 = 10;
			break;
		case 94:
			StringCopy(&Var2, "PROPS_P2_E2_4" /* GXT: Dix White Glasses */, 16);
			iVar3 = 2;
			iVar4 = 4;
			iVar1 = 54;
			iVar5 = 10;
			break;
		case 95:
			StringCopy(&Var2, "PROPS_P2_E2_5" /* GXT: Dix Red Glasses */, 16);
			iVar3 = 2;
			iVar4 = 5;
			iVar1 = 54;
			iVar5 = 10;
			break;
		case 96:
			StringCopy(&Var2, "PROPS_P2_E2_6" /* GXT: Dix Maroon Glasses */, 16);
			iVar3 = 2;
			iVar4 = 6;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 97:
			StringCopy(&Var2, "PROPS_P2_E2_7" /* GXT: Dix Yellow Glasses */, 16);
			iVar3 = 2;
			iVar4 = 7;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 98:
			StringCopy(&Var2, "PROPS_P2_E2_8" /* GXT: Dix Spring Glasses */, 16);
			iVar3 = 2;
			iVar4 = 8;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 99:
			StringCopy(&Var2, "PROPS_P2_E2_9" /* GXT: Dix Fall Glasses */, 16);
			iVar3 = 2;
			iVar4 = 9;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 100:
			StringCopy(&Var2, "PROPS_P2_E3" /* GXT: Tung Charcoal Shades */, 16);
			iVar3 = 3;
			iVar4 = 0;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 101:
			StringCopy(&Var2, "PROPS_P2_E3_1" /* GXT: Tung White Shades */, 16);
			iVar3 = 3;
			iVar4 = 1;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 102:
			StringCopy(&Var2, "PROPS_P2_E3_2" /* GXT: Tung Ash Shades */, 16);
			iVar3 = 3;
			iVar4 = 2;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 103:
			StringCopy(&Var2, "PROPS_P2_E3_3" /* GXT: Tung Red Shades */, 16);
			iVar3 = 3;
			iVar4 = 3;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 104:
			StringCopy(&Var2, "PROPS_P2_E3_4" /* GXT: Tung Blue Shades */, 16);
			iVar3 = 3;
			iVar4 = 4;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 105:
			StringCopy(&Var2, "PROPS_P2_E3_5" /* GXT: Tung Black Shades */, 16);
			iVar3 = 3;
			iVar4 = 5;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 106:
			StringCopy(&Var2, "PROPS_P2_E3_6" /* GXT: Tung Orange Tint Shades */, 16);
			iVar3 = 3;
			iVar4 = 6;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 107:
			StringCopy(&Var2, "PROPS_P2_E3_7" /* GXT: Tung Purple Tint Shades */, 16);
			iVar3 = 3;
			iVar4 = 7;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 108:
			StringCopy(&Var2, "PROPS_P2_E3_8" /* GXT: Tung Hornet Shades */, 16);
			iVar3 = 3;
			iVar4 = 8;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 109:
			StringCopy(&Var2, "PROPS_P2_E3_9" /* GXT: Tung Two-Tone Shades */, 16);
			iVar3 = 3;
			iVar4 = 9;
			iVar1 = 75;
			iVar5 = 10;
			break;
		case 110:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 111:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 112:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			iVar5 = 10;
			break;
		case 113:
			StringCopy(&Var2, "PROPS_P2_E7_0" /* GXT: OG Black Shades */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar1 = 60;
			iVar5 = 10;
			break;
		case 114:
			StringCopy(&Var2, "PROPS_P2_E7_1" /* GXT: OG Ash Shades */, 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 10;
			break;
		case 115:
			StringCopy(&Var2, "PROPS_P2_E7_2" /* GXT: OG Red Shades */, 16);
			iVar3 = 7;
			iVar4 = 2;
			iVar1 = 50;
			iVar5 = 10;
			break;
		case 116:
			StringCopy(&Var2, "PROPS_P2_E7_3" /* GXT: OG Yellow Shades */, 16);
			iVar3 = 7;
			iVar4 = 3;
			iVar1 = 59;
			iVar5 = 10;
			break;
		case 117:
			StringCopy(&Var2, "PROPS_P2_E7_4" /* GXT: OG Brown Shades */, 16);
			iVar3 = 7;
			iVar4 = 4;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 118:
			StringCopy(&Var2, "PROPS_P2_E7_5" /* GXT: OG Gray Shades */, 16);
			iVar3 = 7;
			iVar4 = 5;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 119:
			StringCopy(&Var2, "PROPS_P2_E7_6" /* GXT: OG Blue Shades */, 16);
			iVar3 = 7;
			iVar4 = 6;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 120:
			StringCopy(&Var2, "PROPS_P2_E7_7" /* GXT: OG Smoke Shades */, 16);
			iVar3 = 7;
			iVar4 = 7;
			iVar1 = 59;
			iVar5 = 10;
			break;
		case 121:
			StringCopy(&Var2, "PROPS_P2_E7_8" /* GXT: OG Orange Shades */, 16);
			iVar3 = 7;
			iVar4 = 8;
			iVar1 = 79;
			iVar5 = 10;
			break;
		case 122:
			StringCopy(&Var2, "PROPS_P2_E7_9" /* GXT: OG Slate Shades */, 16);
			iVar3 = 7;
			iVar4 = 9;
			iVar1 = 79;
			iVar5 = 10;
			break;
		case 123:
			StringCopy(&Var2, "PROPS_P2_E8_0" /* GXT: Steel Aviators */, 16);
			iVar3 = 8;
			iVar4 = 0;
			iVar1 = 150;
			iVar5 = 10;
			break;
		case 124:
			StringCopy(&Var2, "PROPS_P2_E8_1" /* GXT: Slate Aviators */, 16);
			iVar3 = 8;
			iVar4 = 1;
			iVar1 = 150;
			iVar5 = 10;
			break;
		case 125:
			StringCopy(&Var2, "PROPS_P2_E8_2" /* GXT: Gold Aviators */, 16);
			iVar3 = 8;
			iVar4 = 2;
			iVar1 = 170;
			iVar5 = 10;
			break;
		case 126:
			StringCopy(&Var2, "PROPS_P2_E8_3" /* GXT: Silver Two-Tone Aviators */, 16);
			iVar3 = 8;
			iVar4 = 3;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 127:
			StringCopy(&Var2, "PROPS_P2_E8_4" /* GXT: Aluminum Aviators */, 16);
			iVar3 = 8;
			iVar4 = 4;
			iVar1 = 180;
			iVar5 = 10;
			break;
		case 128:
			StringCopy(&Var2, "PROPS_P2_E8_5" /* GXT: Bronze Two-Tone Aviators */, 16);
			iVar3 = 8;
			iVar4 = 5;
			iVar1 = 185;
			iVar5 = 10;
			break;
		case 129:
			StringCopy(&Var2, "PROPS_P2_E8_6" /* GXT: Brown Two-Tone Aviators */, 16);
			iVar3 = 8;
			iVar4 = 6;
			iVar1 = 189;
			iVar5 = 10;
			break;
		case 130:
			StringCopy(&Var2, "PROPS_P2_E8_7" /* GXT: Black Aviators */, 16);
			iVar3 = 8;
			iVar4 = 7;
			iVar1 = 195;
			iVar5 = 10;
			break;
		case 131:
			StringCopy(&Var2, "PROPS_P2_E8_8" /* GXT: Silver Aviators */, 16);
			iVar3 = 8;
			iVar4 = 8;
			iVar1 = 210;
			iVar5 = 10;
			break;
		case 132:
			StringCopy(&Var2, "PROPS_P2_E8_9" /* GXT: Smoke Aviators */, 16);
			iVar3 = 8;
			iVar4 = 9;
			iVar1 = 215;
			iVar5 = 10;
			break;
		case 133:
			StringCopy(&Var2, "PROPS_P2_E9_0" /* GXT: Krepp Gold Shades */, 16);
			iVar3 = 9;
			iVar4 = 0;
			iVar1 = 165;
			iVar5 = 10;
			break;
		case 134:
			StringCopy(&Var2, "PROPS_P2_E9_1" /* GXT: Krepp Gray Shades */, 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar1 = 165;
			iVar5 = 10;
			break;
		case 135:
			StringCopy(&Var2, "PROPS_P2_E9_2" /* GXT: Krepp Slate Shades */, 16);
			iVar3 = 9;
			iVar4 = 2;
			iVar1 = 169;
			iVar5 = 10;
			break;
		case 136:
			StringCopy(&Var2, "PROPS_P2_E9_3" /* GXT: Krepp Black Shades */, 16);
			iVar3 = 9;
			iVar4 = 3;
			iVar1 = 169;
			iVar5 = 10;
			break;
		case 137:
			StringCopy(&Var2, "PROPS_P2_E9_4" /* GXT: Krepp White Shades */, 16);
			iVar3 = 9;
			iVar4 = 4;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 138:
			StringCopy(&Var2, "PROPS_P2_E9_5" /* GXT: Krepp Silver Shades */, 16);
			iVar3 = 9;
			iVar4 = 5;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 139:
			StringCopy(&Var2, "PROPS_P2_E9_6" /* GXT: Krepp Ash Shades */, 16);
			iVar3 = 9;
			iVar4 = 6;
			iVar1 = 175;
			iVar5 = 10;
			break;
		case 140:
			StringCopy(&Var2, "PROPS_P2_E9_7" /* GXT: Krepp Brown Shades */, 16);
			iVar3 = 9;
			iVar4 = 7;
			iVar1 = 189;
			iVar5 = 10;
			break;
		case 141:
			StringCopy(&Var2, "PROPS_P2_E9_8" /* GXT: Krepp Beige Shades */, 16);
			iVar3 = 9;
			iVar4 = 8;
			iVar1 = 195;
			iVar5 = 10;
			break;
		case 142:
			StringCopy(&Var2, "PROPS_P2_E9_9" /* GXT: Krepp Coffee Shades */, 16);
			iVar3 = 9;
			iVar4 = 9;
			iVar1 = 195;
			iVar5 = 10;
			break;
		case 143:
			StringCopy(&Var2, "PROPS_P2_E10_0" /* GXT: Broker Black Shades */, 16);
			iVar3 = 10;
			iVar4 = 0;
			iVar1 = 49;
			iVar5 = 10;
			break;
		case 144:
			StringCopy(&Var2, "PROPS_P2_E10_1" /* GXT: Broker Purple Shades */, 16);
			iVar3 = 10;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 10;
			break;
		case 145:
			StringCopy(&Var2, "PROPS_P2_E10_2" /* GXT: Broker Brown Shades */, 16);
			iVar3 = 10;
			iVar4 = 2;
			iVar1 = 52;
			iVar5 = 10;
			break;
		case 146:
			StringCopy(&Var2, "PROPS_P2_E10_3" /* GXT: Broker Orange Shades */, 16);
			iVar3 = 10;
			iVar4 = 3;
			iVar1 = 55;
			iVar5 = 10;
			break;
		case 147:
			StringCopy(&Var2, "PROPS_P2_E10_4" /* GXT: Broker Gray Shades */, 16);
			iVar3 = 10;
			iVar4 = 4;
			iVar1 = 60;
			iVar5 = 10;
			break;
		case 148:
			StringCopy(&Var2, "PROPS_P2_E10_5" /* GXT: Broker Striped Shades */, 16);
			iVar3 = 10;
			iVar4 = 5;
			iVar1 = 58;
			iVar5 = 10;
			break;
		case 149:
			StringCopy(&Var2, "PROPS_P2_E10_6" /* GXT: Broker Beige Shades */, 16);
			iVar3 = 10;
			iVar4 = 6;
			iVar1 = 60;
			iVar5 = 10;
			break;
		case 150:
			StringCopy(&Var2, "PROPS_P2_E10_7" /* GXT: Broker Ash Shades */, 16);
			iVar3 = 10;
			iVar4 = 7;
			iVar1 = 63;
			iVar5 = 10;
			break;
		case 151:
			StringCopy(&Var2, "PROPS_P2_E10_8" /* GXT: Broker Charcoal Shades */, 16);
			iVar3 = 10;
			iVar4 = 8;
			iVar1 = 65;
			iVar5 = 10;
			break;
		case 152:
			StringCopy(&Var2, "PROPS_P2_E10_9" /* GXT: Broker Gradient Shades */, 16);
			iVar3 = 10;
			iVar4 = 9;
			iVar1 = 68;
			iVar5 = 10;
			break;
		case 153:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar1 = 100;
			iVar5 = 10;
			break;
		case 10:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 11:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 1;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 12:
			StringCopy(&Var2, "PROPS_P2_H2_0" /* GXT: Hockey Mask */, 16);
			iVar3 = 2;
			iVar4 = 0;
			iVar1 = 320;
			iVar5 = 0;
			break;
		case 13:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 3;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 14:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 4;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 15:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 5;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 16:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 6;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 17:
			StringCopy(&Var2, "PROPS_P2_H7_0" /* GXT: Black Hat */, 16);
			iVar3 = 7;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 18:
			StringCopy(&Var2, "PROPS_P2_H7_1", 16);
			iVar3 = 7;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 19:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 8;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 20:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 21:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 22:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 23:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 24:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 25:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 26:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 6;
			iVar5 = 0;
			break;
		case 27:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 7;
			iVar5 = 0;
			break;
		case 28:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 8;
			iVar5 = 0;
			break;
		case 29:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 9;
			iVar5 = 0;
			break;
		case 30:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 10;
			iVar5 = 0;
			break;
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 11;
			iVar5 = 0;
			break;
		case 32:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 12;
			iVar5 = 0;
			break;
		case 33:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 13;
			iVar5 = 0;
			break;
		case 34:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 14;
			iVar5 = 0;
			break;
		case 35:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 9;
			iVar4 = 15;
			iVar5 = 0;
			break;
		case 36:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 10;
			iVar4 = 0;
			bVar0 = true;
			iVar5 = 0;
			break;
		case 37:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 38:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 39:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 40:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 41:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 42:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 43:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 6;
			iVar5 = 0;
			break;
		case 44:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 11;
			iVar4 = 7;
			iVar5 = 0;
			break;
		case 45:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 12;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 46:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 13;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 47:
			StringCopy(&Var2, "PROPS_P1_H8_0" /* GXT: Green Monster Mask */, 16);
			iVar3 = 14;
			iVar4 = 0;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 48:
			StringCopy(&Var2, "PROPS_P1_H8_1" /* GXT: Red Monster Mask */, 16);
			iVar3 = 14;
			iVar4 = 1;
			iVar1 = 270;
			iVar5 = 0;
			break;
		case 49:
			StringCopy(&Var2, "PROPS_P1_H9_0" /* GXT: Pig Mask */, 16);
			iVar3 = 15;
			iVar4 = 0;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 50:
			StringCopy(&Var2, "PROPS_P1_H9_1" /* GXT: Dark Pig Mask */, 16);
			iVar3 = 15;
			iVar4 = 1;
			iVar1 = 200;
			iVar5 = 0;
			break;
		case 51:
			StringCopy(&Var2, "PROPS_P1_H10_0" /* GXT: Silver Skull Mask */, 16);
			iVar3 = 16;
			iVar4 = 0;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 52:
			StringCopy(&Var2, "PROPS_P1_H10_1" /* GXT: Bone Skull Mask */, 16);
			iVar3 = 16;
			iVar4 = 1;
			iVar1 = 350;
			iVar5 = 0;
			break;
		case 53:
			StringCopy(&Var2, "PROPS_P1_H11_0" /* GXT: Space Monkey Mask */, 16);
			iVar3 = 17;
			iVar4 = 0;
			iVar1 = 450;
			iVar5 = 0;
			break;
		case 54:
			StringCopy(&Var2, "PROPS_P1_H12_0" /* GXT: White Hockey Mask */, 16);
			iVar3 = 18;
			iVar4 = 0;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 55:
			StringCopy(&Var2, "PROPS_P1_H12_1" /* GXT: Red Hockey Mask */, 16);
			iVar3 = 18;
			iVar4 = 1;
			iVar1 = 500;
			iVar5 = 0;
			break;
		case 56:
			StringCopy(&Var2, "PROPS_P1_H13_0" /* GXT: Ape Mask */, 16);
			iVar3 = 19;
			iVar4 = 0;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 57:
			StringCopy(&Var2, "PROPS_P1_H13_1" /* GXT: Dark Ape Mask */, 16);
			iVar3 = 19;
			iVar4 = 1;
			iVar1 = 50;
			iVar5 = 0;
			break;
		case 58:
			StringCopy(&Var2, "PROPS_P1_H14_0" /* GXT: Carnival Orange Mask */, 16);
			iVar3 = 20;
			iVar4 = 0;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 59:
			StringCopy(&Var2, "PROPS_P1_H14_1" /* GXT: Carnival White Mask */, 16);
			iVar3 = 20;
			iVar4 = 1;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 60:
			StringCopy(&Var2, "PROPS_P1_H14_2" /* GXT: Carnival Blue Mask */, 16);
			iVar3 = 20;
			iVar4 = 2;
			iVar1 = 99;
			iVar5 = 0;
			break;
		case 61:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 21;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 62:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 22;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 63:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 64:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 1;
			iVar5 = 0;
			break;
		case 65:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 2;
			iVar5 = 0;
			break;
		case 66:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 3;
			iVar5 = 0;
			break;
		case 67:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 4;
			iVar5 = 0;
			break;
		case 68:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 23;
			iVar4 = 5;
			iVar5 = 0;
			break;
		case 69:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 24;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 70:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 25;
			iVar4 = 0;
			iVar5 = 0;
			break;
		case 71:
			StringCopy(&Var2, "PROPS_P1_H26_0" /* GXT: Hawk and Little Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 0;
			iVar1 = 20;
			iVar5 = 0;
			break;
		case 72:
			StringCopy(&Var2, "PROPS_P1_H26_1" /* GXT: Taco Bomb Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 1;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 73:
			StringCopy(&Var2, "PROPS_P1_H26_2" /* GXT: Nut House Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 2;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 74:
			StringCopy(&Var2, "PROPS_P1_H26_3" /* GXT: Rusty Brown's Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 3;
			iVar1 = 22;
			iVar5 = 0;
			break;
		case 75:
			StringCopy(&Var2, "PROPS_P1_H26_4" /* GXT: Bishop's Chicken Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 4;
			iVar1 = 20;
			iVar5 = 0;
			break;
		case 76:
			StringCopy(&Var2, "PROPS_P1_H26_5" /* GXT: 24/7 Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 5;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 77:
			StringCopy(&Var2, "PROPS_P1_H26_6" /* GXT: iFruit 80s Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 6;
			iVar1 = 28;
			iVar5 = 0;
			break;
		case 78:
			StringCopy(&Var2, "PROPS_P1_H26_7" /* GXT: Blarneys Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 7;
			iVar1 = 24;
			iVar5 = 0;
			break;
		case 79:
			StringCopy(&Var2, "PROPS_P1_H26_8" /* GXT: Pisswasser Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 8;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 80:
			StringCopy(&Var2, "PROPS_P1_H26_9" /* GXT: RON Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 9;
			iVar1 = 22;
			iVar5 = 0;
			break;
		case 81:
			StringCopy(&Var2, "PROPS_P1_H26_10" /* GXT: Logger Light Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 10;
			iVar1 = 18;
			iVar5 = 0;
			break;
		case 82:
			StringCopy(&Var2, "PROPS_P1_H26_11" /* GXT: Meteorite Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 11;
			iVar1 = 20;
			iVar5 = 0;
			break;
		case 83:
			StringCopy(&Var2, "PROPS_P1_H26_12" /* GXT: Dusche Gold Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 12;
			iVar1 = 24;
			iVar5 = 0;
			break;
		case 84:
			StringCopy(&Var2, "PROPS_P1_H26_13" /* GXT: Barracho Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 13;
			iVar1 = 22;
			iVar5 = 0;
			break;
		case 85:
			StringCopy(&Var2, "PROPS_P1_H26_14" /* GXT: Vespucci Beach Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 14;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 86:
			StringCopy(&Var2, "PROPS_P1_H26_15" /* GXT: Orang-O-Tang Baseball Cap */, 16);
			iVar3 = 26;
			iVar4 = 15;
			iVar1 = 25;
			iVar5 = 0;
			break;
		case 87:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 27;
			iVar4 = 0;
			iVar5 = 0;
			break;
		default:
			__LIB_18__.func_335(iVar7, iParam0, 155, -1);
			return;
			break;
	}
	__LIB_18__.func_248(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

void func_322(int iParam0)//Position - 0x6AF5D
{
	if (BitTest(Global_78130[1 /*14*/].f_6, 1) && !BitTest(Global_78130[1 /*14*/].f_6, 6))
	{
		__LIB_0__.func_31(iParam0, Global_78130[1 /*14*/].f_5, Global_78130[1 /*14*/].f_2, 2, Global_78130[1 /*14*/].f_1, 1, 0);
	}
	if (BitTest(Global_78130[1 /*14*/].f_6, 1) && BitTest(Global_78130[1 /*14*/].f_6, 6))
	{
		if (iParam0 == 12)
		{
			__LIB_7__.func_238(Global_2883588, 2, 1, 1, -1);
		}
		else if (iParam0 == 13)
		{
		}
		else if (iParam0 == 14)
		{
			__LIB_7__.func_238(Global_2883588, 2, 1, 1, -1);
		}
		else
		{
			__LIB_7__.func_238(Global_2883588, 2, 1, 1, -1);
		}
	}
}

int func_323(int iParam0, int iParam1, bool bParam2)//Position - 0x6FF87
{
	int iVar0;
	char* sVar1;
	int iVar2;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = 0;
	while (__LIB_10__.func_603(iParam1, iVar0, &sVar1, &iVar2))
	{
		if (!bParam2 || BitTest(Global_113386.f_7229[iVar2], 0))
		{
			if (VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(&sVar1, iParam0))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_324(bool bParam0)//Position - 0x72E2B
{
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	if ((((((((((!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()) || !PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_BEING_JACKED(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || TASK::IS_PED_GETTING_UP(PLAYER::PLAYER_PED_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true))
	{
		return 0;
	}
	if ((((((__LIB_0__.func_497() || Global_23011.f_4) || __LIB_0__.func_198()) || MISC::IS_MEMORY_CARD_IN_USE()) || MISC::IS_AUTO_SAVE_IN_PROGRESS()) || __LIB_0__.func_200()) || __LIB_0__.func_511())
	{
		return 0;
	}
	if (!bParam0)
	{
		if (MISC::GET_MISSION_FLAG())
		{
			return 0;
		}
	}
	return 1;
}

void func_325(var uParam0, var uParam1, bool bParam2, bool bParam3, int iParam4, int iParam5)//Position - 0xBE0
{
	struct<3> Var0;
	float fVar1;
	fVar1 = uParam0->f_15[1];
	if (*uParam0 == 0)
	{
		return;
	}
	__LIB_10__.func_835(uParam1, 0);
	Var0 = { uParam0->f_1[0 /*3*/] };
	if (bParam2)
	{
		Var0.f_2 = (Var0.f_2 + uParam0->f_18);
	}
	*uParam1 = CAM::CREATE_CAM_WITH_PARAMS("DEFAULT_SCRIPTED_CAMERA", Var0, uParam0->f_8[0 /*3*/], uParam0->f_15[0], true, 2);
	if (!CAM::DOES_CAM_EXIST(*uParam1))
	{
		return;
	}
	uParam0->f_19 = MISC::GET_GAME_TIMER();
	CAM::SET_CAM_ACTIVE(*uParam1, true);
	CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
	if ((!bParam3 && uParam0->f_20 > 0) && !__LIB_0__.func_86(uParam0->f_1[1 /*3*/]))
	{
		Var0 = { uParam0->f_1[1 /*3*/] };
		if (bParam2)
		{
			Var0.f_2 = (Var0.f_2 + uParam0->f_18);
		}
		if (fVar1 == 0f)
		{
			fVar1 = uParam0->f_15[0];
		}
		CAM::SET_CAM_PARAMS(*uParam1, Var0, uParam0->f_8[1 /*3*/], fVar1, uParam0->f_20, iParam4, iParam5, 2);
	}
	else if (__LIB_0__.func_524(uParam0->f_21))
	{
		CAM::POINT_CAM_AT_ENTITY(*uParam1, uParam0->f_21, 0f, 0f, 0f, true);
	}
}

int func_326(var uParam0, bool bParam1, int iParam2)//Position - 0xF0F
{
	if (!uParam0->f_1 == 1)
	{
		return 0;
	}
	uParam0->f_13 = 50f;
	if (!CAM::DOES_CAM_EXIST(uParam0->f_10))
	{
		uParam0->f_10 = CAM::CREATE_CAM_WITH_PARAMS("DEFAULT_SCRIPTED_CAMERA", uParam0->f_2, uParam0->f_5, 50f, true, 2);
	}
	if (__LIB_0__.func_524(uParam0->f_8))
	{
		CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_10, uParam0->f_8, 0f, 0f, 0f, true);
	}
	if (*uParam0 == 1)
	{
		if (__LIB_0__.func_524(PLAYER::PLAYER_PED_ID()) && !__LIB_0__.func_524(uParam0->f_8))
		{
			CAM::ATTACH_CAM_TO_PED_BONE(uParam0->f_10, PLAYER::PLAYER_PED_ID(), 31086, 0f, 0.2f, 0f, true);
		}
		uParam0->f_11 = 0f;
		uParam0->f_12 = 0f;
	}
	else if (__LIB_0__.func_524(uParam0->f_9))
	{
		CAM::POINT_CAM_AT_ENTITY(uParam0->f_10, uParam0->f_9, 0f, 0f, 0f, true);
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_10))
	{
		CAM::SET_CAM_ACTIVE(uParam0->f_10, true);
		CAM::RENDER_SCRIPT_CAMS(true, bParam1, iParam2, true, false, 0);
	}
	return 1;
}

bool func_327(var uParam0)//Position - 0x252DA
{
	bool bVar0;
	int iVar1;
	if (MISC::GET_GAME_TIMER() > uParam0->f_116 || uParam0->f_116 == 0)
	{
		if (uParam0->f_115 < *uParam0)
		{
			__LIB_10__.func_703(uParam0, uParam0->f_115);
			uParam0->f_115++;
		}
		uParam0->f_116 = MISC::GET_GAME_TIMER() + 32;
	}
	bVar0 = false;
	while (bVar0 < *uParam0)
	{
		if (__LIB_10__.func_702(uParam0, bVar0))
		{
			iVar1++;
		}
		bVar0++;
	}
	return iVar1 == *uParam0;
}

void func_328(var uParam0)//Position - 0x261CA
{
	bool bVar0;
	bVar0 = false;
	while (bVar0 < *uParam0)
	{
		__LIB_10__.func_721(uParam0, bVar0);
		bVar0++;
	}
}

int func_329(int iParam0)//Position - 0x1B725
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_1, 21);
	}
	return 0;
}

int func_330(int iParam0)//Position - 0x1B74E
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_1, 20);
	}
	return 0;
}

int func_331(int iParam0)//Position - 0x1B777
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_1, 19);
	}
	return 0;
}

void func_332(int iParam0, int iParam1)//Position - 0x52F
{
	float fVar0;
	fVar0 = __LIB_4__.func_305(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(iParam1, true), 1);
	ENTITY::SET_ENTITY_HEADING(iParam0, fVar0);
}

char* func_333(int iParam0)//Position - 0x1CC8
{
	switch (iParam0)
	{
		case 0:
			return "SB_SAL" /* GXT: Barber Shop */;
			break;
		case 1:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 2:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 3:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 4:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 5:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 6:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 7:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 8:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 9:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 10:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 11:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 12:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 13:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 14:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 15:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 16:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 17:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 18:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 19:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 20:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 21:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 22:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 23:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 24:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 25:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 26:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 27:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 28:
			return "SB_AMU2" /* GXT: Ammu-Nation with Range */;
			break;
		case 29:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 30:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 31:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 32:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 33:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 34:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 35:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 36:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 37:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 38:
			return "SB_AMU2" /* GXT: Ammu-Nation with Range */;
			break;
		case 39:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 40:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 41:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 42:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 43:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 44:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 45:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 46:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 47:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 48:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 49:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 52:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 50:
			return "SB_BAR" /* GXT: Barber Shop */;
			break;
		case 51:
			return "S_CL_BL" /* GXT: Casino Store */;
			break;
		case 53:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 54:
			return "SB_TAT" /* GXT: Tattoo Parlor */;
			break;
		case 55:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
		case 56:
			return "SB_AMU" /* GXT: Ammu-Nation */;
			break;
		case 57:
			return __LIB_9__.func_422(iParam0, 0, 0);
			break;
	}
	return "SHOP_BLIP_INV";
}

float func_334(int iParam0)//Position - 0x6E20A
{
	struct<2> Var0;
	struct<2> Var1;
	float fVar2;
	float fVar3;
	var uVar4;
	MISC::GET_MODEL_DIMENSIONS(iParam0, &Var0, &Var1);
	fVar2 = (Var1.f_0 - Var0.f_0);
	fVar3 = (Var1.f_1 - Var0.f_1);
	uVar4 = __LIB_2__.func_320(fVar2, fVar3);
	return uVar4;
}

void func_335(bool bParam0, int iParam1)//Position - 0xB0C4F
{
	int iVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	if (bParam0)
	{
		iVar0 = 0;
		while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
		{
			iVar3 = iVar0;
			if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(iVar3))
			{
				bVar4 = NETWORK::NETWORK_GET_PLAYER_INDEX(iVar3);
				if (__LIB_1__.func_264(bVar4, 0, 1))
				{
					if (bVar4 != PLAYER::PLAYER_ID())
					{
						iVar1++;
						if (__LIB_6__.func_373(PLAYER::PLAYER_ID(), bVar4))
						{
							bVar2 = true;
						}
					}
				}
			}
			iVar0++;
		}
	}
	else
	{
		iVar0 = 0;
		while (iVar0 < 32)
		{
			bVar4 = iVar0;
			if (__LIB_1__.func_264(bVar4, 1, 1))
			{
				if (bVar4 != PLAYER::PLAYER_ID())
				{
					if (__LIB_4__.func_64(PLAYER::PLAYER_ID(), bVar4) <= 20f)
					{
						iVar1++;
						if (__LIB_6__.func_373(PLAYER::PLAYER_ID(), bVar4))
						{
							bVar2 = true;
						}
					}
				}
			}
			iVar0++;
		}
	}
	if (bVar2)
	{
		iVar5 = SYSTEM::ROUND((__LIB_0__.func_785(*iParam1, 100) * (10f * Global_262145.f_4227 /* Tunable: XP_TUNABLE_ALL_RP_WHILE_PLAYING_IN_A_CREW */)));
	}
	if (iVar1 > 4)
	{
		iVar1 = 4;
	}
	if (iVar1 >= 1)
	{
		iVar6 = SYSTEM::ROUND((__LIB_0__.func_785(*iParam1, 100) * (20f * Global_262145.f_4220 /* Tunable: XP_TUNABLE_PERFORMING_JOBS_WITH_OTHER_PLAYERS */)));
	}
	*iParam1 = (*iParam1 + iVar5);
	*iParam1 = (*iParam1 + iVar6);
}

void func_336(int iParam0)//Position - 0xB44C0
{
	if (BitTest(Global_2824374, iParam0) && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (!__LIB_2__.func_47(&(Global_2824375[iParam0 /*2*/]), 3500, 1) || NETWORK::NETWORK_IS_PLAYER_FADING(iParam0))
		{
			if (!__LIB_0__.func_648())
			{
				if (CAM::IS_SCREEN_FADED_OUT())
				{
					__LIB_0__.func_495(&(Global_2824375[iParam0 /*2*/]), 1, 0);
				}
				else if (!__LIB_6__.func_978(iParam0, 0))
				{
					NETWORK::SET_PLAYER_VISIBLE_LOCALLY(iParam0, true);
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::GET_PLAYER_PED(iParam0), false))
					{
						ENTITY::SET_ENTITY_ALPHA(PLAYER::GET_PLAYER_PED(iParam0), 255, false);
					}
				}
			}
			else
			{
				__LIB_0__.func_495(&(Global_2824375[iParam0 /*2*/]), 1, 0);
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_DEAD(PLAYER::GET_PLAYER_PED(iParam0), false))
			{
				ENTITY::RESET_ENTITY_ALPHA(PLAYER::GET_PLAYER_PED(iParam0));
			}
			__LIB_0__.func_579(&(Global_2824375[iParam0 /*2*/]));
			MISC::CLEAR_BIT(&Global_2824374, iParam0);
		}
	}
}

Vector3 func_337(int iParam0)//Position - 0xCE904
{
	struct<3> Var0;
	Var0 = { 0f, 0f, 0f };
	if (!__LIB_2__.func_141(iParam0))
	{
		return Var0;
	}
	switch (iParam0)
	{
		case 1:
			Var0 = { 58.3f, -2560.8f, 5.0046f };
			break;
		case 2:
			Var0 = { -1082.9575f, -1254.855f, 4.4214f };
			break;
		case 3:
			Var0 = { 900.0288f, -1029.7622f, 33.9714f };
			break;
		case 4:
			Var0 = { 247.7398f, -1950.6573f, 22.0817f };
			break;
		case 5:
			Var0 = { -404.5349f, 189.8157f, 80.518f };
			break;
		case 6:
			Var0 = { -1048.1227f, -2017.1361f, 12.1616f };
			break;
		case 7:
			Var0 = { -1267.8877f, -818.313f, 16.0992f };
			break;
		case 8:
			Var0 = { -879.1935f, -2731.8564f, 12.8285f };
			break;
		case 9:
			Var0 = { 274.4458f, -3004f, 4.6994f };
			break;
		case 10:
			Var0 = { 1566.5137f, -2137.776f, 76.6229f };
			break;
		case 11:
			Var0 = { -314.3864f, -2721.7917f, 5.0003f };
			break;
		case 12:
			Var0 = { 497.1263f, -635.2617f, 23.8849f };
			break;
		case 13:
			Var0 = { -546.1532f, -1775.2578f, 20.6843f };
			break;
		case 14:
			Var0 = { -307.6485f, -1364.9143f, 30.2957f };
			break;
		case 15:
			Var0 = { 366.4851f, 333.3937f, 102.4653f };
			break;
		case 16:
			Var0 = { 921.407f, -1556.4235f, 29.7756f };
			break;
		case 17:
			Var0 = { 746.1452f, -882.8884f, 24.0639f };
			break;
		case 18:
			Var0 = { 1042.4622f, -2177.798f, 30.4457f };
			break;
		case 19:
			Var0 = { 1013.8424f, -2514.9395f, 27.3049f };
			break;
		case 20:
			Var0 = { -272.0028f, 193.3204f, 84.5697f };
			break;
		case 21:
			Var0 = { 549.6728f, -1929.7938f, 23.8145f };
			break;
		case 22:
			Var0 = { 126.5327f, -2200.1716f, 5.0333f };
			break;
	}
	return Var0;
}

int func_338()//Position - 0xF84F8
{
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), -1, false) != PLAYER::PLAYER_PED_ID())
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_339(bool bParam0)//Position - 0x10185A
{
	int iVar0;
	if (bParam0 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_264(bParam0, 1, 1))
		{
			iVar0 = PLAYER::GET_PLAYER_PED(bParam0);
			if (ENTITY::DOES_ENTITY_EXIST(iVar0))
			{
				if (ENTITY::IS_ENTITY_AT_COORD(iVar0, 2056.2039f, 2954.8074f, -70.69892f, 110f, 90f, 15f, false, true, 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_340()//Position - 0x124339
{
	if (__LIB_8__.func_138())
	{
		if (!Global_2667225.f_45.f_67 == 0)
		{
			if (__LIB_4__.func_317(Global_2667225.f_45.f_67))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_341()//Position - 0x12D756
{
	int iVar0;
	if (Global_2667225.f_2878)
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return 0;
		}
		else
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
			{
				return 0;
			}
			else if (!VEHICLE::IS_THIS_MODEL_A_PLANE(ENTITY::GET_ENTITY_MODEL(iVar0)) && !VEHICLE::IS_THIS_MODEL_A_HELI(ENTITY::GET_ENTITY_MODEL(iVar0)))
			{
				return 0;
			}
		}
	}
	if (__LIB_8__.func_138() && (VEHICLE::IS_THIS_MODEL_A_PLANE(Global_2667225.f_45.f_67) || VEHICLE::IS_THIS_MODEL_A_HELI(Global_2667225.f_45.f_67)))
	{
		return 1;
	}
	return 0;
}

int func_342(int iParam0)//Position - 0x132FD8
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (iParam0 != -1)
	{
		iVar0 = -1;
		iVar1 = iParam0 + 157;
		__LIB_1__.func_327(iVar1, &iVar0, 1);
		if (iVar0 >= 0)
		{
			iVar2 = __LIB_1__.func_556(__LIB_1__.func_368(4, iVar0), -1, 0);
			if (iVar2 != 0)
			{
				return 1;
			}
		}
	}
	return 0;
}

bool func_343()//Position - 0x13374D
{
	return __LIB_1__.func_556(6167, -1, 0) == 3;
}

bool func_344()//Position - 0x133760
{
	return __LIB_1__.func_556(6167, -1, 0) == 2;
}

int func_345(bool bParam0)//Position - 0x1396FF
{
	bool bVar0;
	bool bVar1;
	bVar0 = __LIB_2__.func_4(PLAYER::PLAYER_ID());
	bVar1 = __LIB_2__.func_4(bParam0);
	if ((bVar0 && !bVar1) || (!bVar0 && bVar1))
	{
		return 0;
	}
	return 1;
}

void func_346(int iParam0, var uParam1)//Position - 0x199AAF
{
	bool bVar0;
	int iVar1;
	int iVar2;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1))
	{
		if (__LIB_2__.func_192(PLAYER::PLAYER_ID()))
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 0);
		}
		else
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 1);
		}
		bVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
		if (bVar0 != __LIB_0__.func_160() && bVar0 != PLAYER::PLAYER_ID())
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8), bVar0);
		}
		iVar2 = 0;
		while (iVar2 < __LIB_19__.func_834())
		{
			iVar1 = __LIB_2__.func_377(bVar0, iVar2);
			if (iVar1 != __LIB_0__.func_160() && iVar1 != PLAYER::PLAYER_ID())
			{
				MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8), iVar1);
			}
			iVar2++;
		}
	}
	else if (__LIB_7__.func_619(PLAYER::PLAYER_ID(), __LIB_2__.func_321(iParam0)))
	{
		MISC::SET_BIT(&(Global_1946250.f_506), 2);
	}
}

int func_347()//Position - 0x19ECB9
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < 7)
	{
		iVar0 = (iVar0 + __LIB_9__.func_504(iVar1));
		iVar1++;
	}
	return iVar0;
}

int func_348(var uParam0)//Position - 0x1A9E21
{
	int iVar0;
	iVar0 = uParam0;
	if (iVar0 >= 0 && iVar0 < 11)
	{
		if (__LIB_6__.func_925())
		{
			return Global_262145.f_31783[iVar0];
		}
		else
		{
			return Global_262145.f_31771[iVar0];
		}
	}
	return -1;
}

int func_349(int iParam0, int iParam1)//Position - 0x1AD71B
{
	return (__LIB_9__.func_874(iParam0) * iParam1);
}

int func_350(int iParam0)//Position - 0x1B6DB5
{
	if (NETWORK::IS_NETWORK_ID_OWNED_BY_PARTICIPANT(iParam0))
	{
		return 1;
	}
	if (__LIB_7__.func_289(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_351()//Position - 0x1B8CD8
{
	if (!__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		return 0;
	}
	if ((CAM::IS_SCREEN_FADED_OUT() || CAM::IS_SCREEN_FADING_OUT()) || CAM::IS_SCREEN_FADING_IN())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_PLAYER_IN_MP_CUTSCENE(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (__LIB_10__.func_887())
	{
		return 0;
	}
	if (__LIB_3__.func_998(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("am_mp_smpl_interior_int")) > 0 && Global_1946244 != 7)
	{
		return 0;
	}
	return 1;
}

int func_352(int iParam0)//Position - 0x1C0687
{
	int iVar0;
	int iVar1;
	if (PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	if (__LIB_2__.func_373())
	{
		if (PLAYER::GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(PLAYER::PLAYER_ID(), &iVar0))
		{
			if (ENTITY::IS_ENTITY_A_PED(iVar0))
			{
				iVar1 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iVar0);
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(iVar1, false))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_353(int iParam0)//Position - 0x1C2E9E
{
	if (__LIB_4__.func_682(iParam0, 1))
	{
		return Global_1892703[__LIB_0__.func_582() /*599*/].f_10.f_428;
	}
	return -1;
}

void func_354(int iParam0, char* sParam1, bool bParam2, int iParam3)//Position - 0x1C3B38
{
	if (!__LIB_3__.func_982())
	{
		return;
	}
	STATS::PLAYSTATS_NPC_PHONE(iParam0, -1180597171, MISC::GET_HASH_KEY(sParam1), 0, bParam2, iParam3);
	if (bParam2)
	{
		Global_1973156 = -1;
	}
}

int func_355(int iParam0, int iParam1)//Position - 0x1CFD7A
{
	return __LIB_1__.func_556(__LIB_9__.func_301(iParam1), iParam0, 0);
}

int func_356(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x1D3385
{
	int iVar0;
	switch (iParam0)
	{
		case 13:
			iVar0 += 4;
			break;
		case 1:
			iVar0 += 10;
			break;
		case 15:
			iVar0 += 21;
			break;
		case 14:
			iVar0 += 2;
			break;
		case 11:
			switch (iParam1)
			{
				case 35:
					iVar0 += 4;
					break;
				case 36:
					iVar0 += 5;
					break;
				case 37:
					iVar0 += 5;
					break;
			}
			break;
		case 5:
			iVar0 += 3;
			break;
		case 6:
			iVar0 += 2;
			break;
		case 0:
			switch (iParam1)
			{
				case 0:
					iVar0 += 5;
					break;
				case 1:
					iVar0 += 5;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 31:
					iVar0 += 2;
					break;
				case 32:
					iVar0++;
					break;
				case 33:
					iVar0 += 2;
					break;
				case 34:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 += 3;
			break;
		case 9:
			switch (iParam1)
			{
				case 28:
					switch (iParam4)
					{
						case 0:
							iVar0 += 3;
							break;
						case 1:
							iVar0 += 4;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
				case 29:
					switch (iParam4)
					{
						case 0:
							iVar0 += 4;
							break;
						case 1:
							iVar0 += 3;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
				case 30:
					switch (iParam4)
					{
						case 0:
							iVar0 += 3;
							break;
						case 1:
							iVar0 += 3;
							break;
						case 2:
							iVar0 += 3;
							break;
					}
					break;
			}
			break;
		case 3:
			iVar0 += 6;
			break;
		case 4:
			switch (iParam1)
			{
				case 12:
					iVar0 += 7;
					break;
				case 13:
					iVar0 += 10;
					break;
				case 14:
					iVar0 += 8;
					break;
			}
			break;
		case 2:
			iVar0 += 3;
			break;
		case 8:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0++;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_0__.func_114(iParam0))
		{
			iVar0 = (iVar0 + __LIB_19__.func_833(iParam0, iParam2));
		}
		iVar0 = (iVar0 + __LIB_4__.func_898(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_4__.func_897(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_4__.func_896(__LIB_13__.func_268(iParam2) + 1, iParam0));
		}
	}
	if (!bParam3)
	{
		if (__LIB_8__.func_147(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_4__.func_895(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_357(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0x1D4B4D
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					iVar0 += 3;
					break;
				case 1:
					iVar0 += 3;
					break;
				case 2:
					iVar0 += 3;
					break;
			}
			break;
		case 2:
			if (iParam2 >= 4)
			{
				iVar0 = (iVar0 + iParam2 + 2);
			}
			else
			{
				iVar0 += 5;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 9:
					iVar0 += 3;
					break;
				case 10:
					iVar0 += 3;
					break;
				case 11:
					iVar0 += 2;
					break;
				case 12:
					iVar0 += 2;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 14:
					iVar0 += 2;
					break;
				case 15:
					iVar0 += 4;
					break;
				case 13:
					iVar0 += 2;
					break;
			}
			break;
		case 5:
			iVar0 += 4;
			break;
		case 6:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 5;
					break;
				case 21:
					iVar0 += 5;
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 22:
					iVar0 += 4;
					break;
				case 23:
					iVar0 += 3;
					break;
				case 24:
					iVar0 += 3;
					break;
			}
			if (__LIB_11__.func_62(iParam0, __LIB_19__.func_834() + 1, -1, iParam2) == 1)
			{
				iVar0++;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 25:
					iVar0 += 5;
					break;
				case 26:
					iVar0 += 5;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 27:
					iVar0 += 2;
					break;
				case 28:
					iVar0 += 2;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 29:
					iVar0 += 4;
					break;
				case 30:
					iVar0 += 4;
					break;
				case 31:
					iVar0 += 4;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 32:
					iVar0 += 2;
					break;
				case 33:
					iVar0 += 2;
					break;
				case 34:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 = iVar0;
			break;
		case 13:
			switch (iParam1)
			{
				case 35:
					iVar0 += 3;
					break;
				case 36:
					iVar0 += 3;
					break;
				case 37:
					iVar0 += 2;
					break;
			}
			break;
		case 14:
			iVar0 += 8;
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = (iVar0 + iParam2);
			break;
		case 20:
			iVar0 += 5;
			break;
	}
	if (!bParam4)
	{
		if (__LIB_4__.func_884(iParam0))
		{
			iVar0 = (iVar0 + __LIB_11__.func_62(iParam0, __LIB_19__.func_834() + 1, -1, iParam2));
		}
		iVar0 = (iVar0 + __LIB_4__.func_907(iParam0, __LIB_19__.func_834() + 1));
	}
	if (!bParam3)
	{
		if (__LIB_8__.func_151(iParam0))
		{
			iVar0 = (iVar0 + __LIB_4__.func_906(iParam0));
		}
	}
	return iVar0;
}

void func_358(int iParam0)//Position - 0x224B86
{
	if (!__LIB_0__.func_78(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_151[iParam0 /*3*/], __LIB_0__.func_481(), 0))
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_151[iParam0 /*3*/] = { __LIB_0__.func_481() };
	}
	if (!__LIB_0__.func_78(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_126[iParam0 /*3*/], __LIB_0__.func_481(), 0))
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_126[iParam0 /*3*/] = { __LIB_0__.func_481() };
	}
}

bool func_359(int iParam0, bool bParam1)//Position - 0x2257FB
{
	if (bParam1)
	{
		return __LIB_0__.func_137(15384, -1);
	}
	return __LIB_0__.func_137(__LIB_9__.func_533(iParam0), -1);
}

void func_360()//Position - 0x225907
{
	MISC::CLEAR_BIT(&(Global_2815059.f_1801), 28);
	MISC::CLEAR_BIT(&(Global_2815059.f_1801), 29);
	__LIB_3__.func_647(24);
}

void func_361(bool bParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x225B6B
{
	var uVar0;
	if (__LIB_18__.func_449(bParam0))
	{
		return;
	}
	if (__LIB_2__.func_298(&(Global_2678393.f_822[bParam0]), &(Global_2678393.f_1185[bParam0]), &(Global_2678393.f_367), bParam1, bParam0, bParam3, &uVar0))
	{
		__LIB_2__.func_314(bParam0, bParam2);
	}
}

void func_362(int iParam0, int iParam1, int iParam2)//Position - 0x226BF2
{
	STATS::PLAYSTATS_FM_MISSION_END(&Global_1944754, iParam1, iParam2);
	__LIB_10__.func_899();
}

void func_363(int iParam0)//Position - 0x226E4B
{
	STATS::PLAYSTATS_ROBBERY_PREP(&Global_1944685);
	__LIB_10__.func_904();
}

void func_364(int iParam0)//Position - 0x226E73
{
	STATS::PLAYSTATS_DJ_MISSION_ENDED(&Global_1944664);
	__LIB_10__.func_905();
}

void func_365(int iParam0)//Position - 0x226E9B
{
	if (iParam0 == 0)
	{
	}
	STATS::PLAYSTATS_HEIST4_PREP(&Global_1944552);
	__LIB_10__.func_906();
}

void func_366(int iParam0)//Position - 0x226EDE
{
	if (iParam0 == 0)
	{
	}
	STATS::PLAYSTATS_HEIST3_PREP(&Global_1944465);
	__LIB_10__.func_907();
}

void func_367(int iParam0)//Position - 0x226F4F
{
	STATS::PLAYSTATS_WAREHOUSE_MISSION_ENDED(&Global_1944249);
	__LIB_10__.func_908();
}

void func_368(int iParam0)//Position - 0x22708C
{
	STATS::PLAYSTATS_NIGHTCLUB_MISSION_ENDED(&Global_1944303);
	__LIB_10__.func_910();
}

void func_369(int iParam0)//Position - 0x22726C
{
	STATS::PLAYSTATS_FM_HEIST_PREP_ENDED(&Global_1944167);
	__LIB_10__.func_912();
}

void func_370(int iParam0)//Position - 0x22738E
{
	STATS::PLAYSTATS_SMUGGLER_MISSION_ENDED(&Global_1944113);
	__LIB_10__.func_913();
}

void func_371(int iParam0)//Position - 0x227686
{
	if (iParam0 == 0)
	{
	}
	STATS::PLAYSTATS_GUNRUNNING_MISSION_ENDED(&Global_1944066);
	__LIB_10__.func_914();
}

void func_372(int iParam0)//Position - 0x227756
{
	if (iParam0 == 0)
	{
	}
	STATS::PLAYSTATS_IMPEXP_MISSION_ENDED(&Global_1944003);
	__LIB_10__.func_915();
}

void func_373(int iParam0)//Position - 0x2278DA
{
	if (iParam0 == 0)
	{
	}
	STATS::PLAYSTATS_MISSION_ENDED(&Global_1943947);
	__LIB_10__.func_916();
}

int func_374(bool bParam0)//Position - 0x227C99
{
	if (bParam0)
	{
		return 0;
	}
	if (__LIB_3__.func_804(PLAYER::PLAYER_ID()) || __LIB_2__.func_858(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

void func_375(var uParam0)//Position - 0x227CC8
{
	STATS::PLAYSTATS_BUSINESS_BATTLE_ENDED(&Global_1944213);
	__LIB_10__.func_917();
}

int func_376(int iParam0, struct<3> Param1)//Position - 0x16F16
{
	int iVar0;
	struct<3> Var1;
	float fVar2;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		__LIB_9__.func_213(iVar0, &iParam0, &Var1, &fVar2);
		if (SYSTEM::VDIST(Param1, Var1) < fVar2)
		{
			return iVar0;
		}
		iVar0++;
	}
	return 8;
}

void func_377(var uParam0, int iParam1)//Position - 0x18242
{
	if (BitTest((uParam0[iParam1 /*52*/])->f_11, 0))
	{
		(uParam0[iParam1 /*52*/])->f_11 = 0;
		(uParam0[iParam1 /*52*/])->f_13 = -1;
		(uParam0[iParam1 /*52*/])->f_6[0] = 0;
		(uParam0[iParam1 /*52*/])->f_6[1] = 0;
		(uParam0[iParam1 /*52*/])->f_6[2] = 0;
		(uParam0[iParam1 /*52*/])->f_6[3] = 0;
		__LIB_0__.func_579(&((uParam0[iParam1 /*52*/])->f_50));
	}
}

int func_378(int iParam0, bool bParam1, bool bParam2)//Position - 0x18387
{
	int iVar0;
	if (iParam0 != __LIB_0__.func_160())
	{
		if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iParam0))
		{
			iVar0 = NETWORK::NETWORK_GET_PARTICIPANT_INDEX(iParam0);
			if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(iVar0))
			{
				if (!PED::IS_PED_INJURED(PLAYER::GET_PLAYER_PED(iParam0)))
				{
					if (bParam2)
					{
						if (BitTest(Global_1892703[iParam0 /*599*/].f_10.f_445.f_1, 2))
						{
							return 1;
						}
					}
					if (bParam1)
					{
						if (BitTest(Global_1892703[iParam0 /*599*/].f_10.f_445.f_1, 1))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_379(var uParam0, int iParam1)//Position - 0x18485
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(__LIB_10__.func_983(uParam0, iVar0)))
		{
			if ((uParam0[iVar0 /*52*/])->f_12 == iParam1)
			{
				iVar1++;
			}
		}
		iVar0++;
	}
	return iVar1;
}

int func_380(var uParam0)//Position - 0x911DB
{
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 157 /*INPUT_SELECT_WEAPON_UNARMED*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 159 /*INPUT_SELECT_WEAPON_HANDGUN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 160 /*INPUT_SELECT_WEAPON_SHOTGUN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 161 /*INPUT_SELECT_WEAPON_SMG*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 162 /*INPUT_SELECT_WEAPON_AUTO_RIFLE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 163 /*INPUT_SELECT_WEAPON_SNIPER*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 164 /*INPUT_SELECT_WEAPON_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 165 /*INPUT_SELECT_WEAPON_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 158 /*INPUT_SELECT_WEAPON_MELEE*/, true);
	__LIB_2__.func_419();
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 101 /*INPUT_VEH_ROOF*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 143 /*INPUT_MELEE_BLOCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 257 /*INPUT_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 44 /*INPUT_COVER*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 282 /*INPUT_VEH_GUN_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 283 /*INPUT_VEH_GUN_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 284 /*INPUT_VEH_GUN_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 285 /*INPUT_VEH_GUN_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 102 /*INPUT_VEH_JUMP*/, true);
	if (!Global_1957741)
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 22 /*INPUT_JUMP*/, true);
	}
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 36 /*INPUT_DUCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 345 /*INPUT_VEH_MELEE_HOLD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 346 /*INPUT_VEH_MELEE_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 347 /*INPUT_VEH_MELEE_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 91 /*INPUT_VEH_PASSENGER_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 92 /*INPUT_VEH_PASSENGER_ATTACK*/, true);
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_9__.func_355(PLAYER::PLAYER_ID()))
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 74 /*INPUT_VEH_HEADLIGHT*/, true);
		}
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 143 /*INPUT_MELEE_BLOCK*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 257 /*INPUT_ATTACK2*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 282 /*INPUT_VEH_GUN_LEFT*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 283 /*INPUT_VEH_GUN_RIGHT*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 284 /*INPUT_VEH_GUN_UP*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 285 /*INPUT_VEH_GUN_DOWN*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 102 /*INPUT_VEH_JUMP*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 354 /*INPUT_VEH_BIKE_WINGS*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 345 /*INPUT_VEH_MELEE_HOLD*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 346 /*INPUT_VEH_MELEE_LEFT*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 347 /*INPUT_VEH_MELEE_RIGHT*/, true);
	}
	return 0;
}

char* func_381(var uParam0, var uParam1, var uParam2)//Position - 0xF2396
{
	int iVar0;
	if (BitTest(Global_1946250.f_4523.f_1, 7))
	{
		return "CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */;
	}
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK23A" /* GXT: You cannot enter The Music Locker while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_7__.func_439())
	{
		return "CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "CAS_APT_BLCK_A" /* GXT: You can't enter The Diamond Casino & Resort while resupplying another business. */;
				case 190:
					return "CAS_APT_BLCK_B" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from another business. */;
				case 167:
					return "CAS_APT_BLCK_C" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Warehouse. */;
				case 168:
					return "CAS_APT_BLCK_D" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Warehouse. */;
				case 178:
					return "CAS_APT_BLCK_E" /* GXT: You can't enter The Diamond Casino & Resort while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAS_APT_BLCK_F" /* GXT: You can't enter The Diamond Casino & Resort while selling vehicles from a Warehouse. */;
				case 225:
					return "CAS_APT_BLCK_G" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Bunker. */;
				case 226:
					return "CAS_APT_BLCK_H" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Bunker. */;
				case 229:
					return "CAS_APT_BLCK_I" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Hangar. */;
				case 230:
					return "CAS_APT_BLCK_J" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Hangar. */;
				case 237:
					return "CAS_APT_BLCK_O" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Nightclub. */;
				case 243:
					if (__LIB_1__.func_570(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAS_APT_BLCK_K" /* GXT: You can't enter The Diamond Casino & Resort with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_L" /* GXT: You can't access The Diamond Casino & Resort as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return "CAS_APT_BLCK_M" /* GXT: You can't access The Diamond Casino & Resort whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
		}
	}
	return "";
}

int func_382(int iParam0)//Position - 0xFBA16
{
	if (__LIB_2__.func_297(PLAYER::PLAYER_ID()) || ((__LIB_2__.func_859(__LIB_3__.func_803(PLAYER::PLAYER_ID())) && __LIB_1__.func_425(PLAYER::PLAYER_ID(), 0)) && __LIB_2__.func_308(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if (!__LIB_4__.func_143(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) && !__LIB_4__.func_143(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0)))
	{
		return 1;
	}
	if ((__LIB_4__.func_973(0) && __LIB_4__.func_143(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0))) && !__LIB_4__.func_143(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0)))
	{
		return 1;
	}
	return 0;
}

int func_383(bool bParam0)//Position - 0x113BA6
{
	if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(bParam0) && bParam0 != PLAYER::PLAYER_ID())
	{
		if (__LIB_3__.func_870(bParam0) && !__LIB_3__.func_998(bParam0))
		{
			return 1;
		}
	}
	return 0;
}

char* func_384(var uParam0, var uParam1, int iParam2)//Position - 0x11B04A
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK22A" /* GXT: You cannot enter the Casino while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "CAS_APT_BLCK_A" /* GXT: You can't enter The Diamond Casino & Resort while resupplying another business. */;
				case 190:
					return "CAS_APT_BLCK_B" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from another business. */;
				case 167:
					return "CAS_APT_BLCK_C" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Warehouse. */;
				case 168:
					return "CAS_APT_BLCK_D" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Warehouse. */;
				case 178:
					return "CAS_APT_BLCK_E" /* GXT: You can't enter The Diamond Casino & Resort while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAS_APT_BLCK_F" /* GXT: You can't enter The Diamond Casino & Resort while selling vehicles from a Warehouse. */;
				case 225:
					return "CAS_APT_BLCK_G" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Bunker. */;
				case 226:
					return "CAS_APT_BLCK_H" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Bunker. */;
				case 229:
					return "CAS_APT_BLCK_I" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Hangar. */;
				case 230:
					return "CAS_APT_BLCK_J" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Hangar. */;
				case 237:
					return "CAS_APT_BLCK_O" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Nightclub. */;
				case 243:
					if (__LIB_1__.func_570(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAS_APT_BLCK_K" /* GXT: You can't enter The Diamond Casino & Resort with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_L" /* GXT: You can't access The Diamond Casino & Resort as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return "CAS_APT_BLCK_M" /* GXT: You can't access The Diamond Casino & Resort whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
		}
	}
	iVar1 = 1;
	if (((iParam2 == 0 || iParam2 == 1) || iParam2 == 3) || iParam2 == 4)
	{
		iVar1 = 0;
	}
	if (!__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar3 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar2, -1, false);
			bVar4 = false;
			if (__LIB_0__.func_121(iVar2))
			{
				bVar4 = ENTITY::GET_ENTITY_MODEL(iVar2) == joaat("rcbandito");
				if (bVar4)
				{
					iVar1 = 1;
				}
			}
			if (iVar1 && ENTITY::DOES_ENTITY_EXIST(iVar3))
			{
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_701(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar2))
						{
							return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
						}
						else if (__LIB_2__.func_472(iVar2))
						{
							return "CAS_APT_BLCK_R" /* GXT: You can't enter The Diamond Casino & Resort with the Mobile Operations Center. */;
						}
						else if (bVar4)
						{
							return "CAS_APT_BLCK_T" /* GXT: You can't enter The Diamond Casino & Resort with the RC Bandito. */;
						}
						else
						{
							return "CAS_APT_BLCK_Q" /* GXT: You can't enter The Diamond Casino & Resort with this vehicle. */;
						}
					}
				}
			}
		}
	}
	return "";
}

int func_385(int iParam0)//Position - 0x11DE20
{
	if (__LIB_2__.func_297(PLAYER::PLAYER_ID()) || ((__LIB_2__.func_859(__LIB_3__.func_803(PLAYER::PLAYER_ID())) && __LIB_1__.func_425(PLAYER::PLAYER_ID(), 0)) && __LIB_2__.func_308(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if (!__LIB_4__.func_150(PLAYER::PLAYER_ID(), __LIB_3__.func_17(iParam0)) && !__LIB_4__.func_150(__LIB_0__.func_582(), __LIB_3__.func_17(iParam0)))
	{
		return 1;
	}
	if ((__LIB_4__.func_973(0) && __LIB_4__.func_150(PLAYER::PLAYER_ID(), __LIB_3__.func_17(iParam0))) && !__LIB_4__.func_150(__LIB_0__.func_582(), __LIB_3__.func_17(iParam0)))
	{
		return 1;
	}
	return 0;
}

int func_386(var uParam0, bool bParam1)//Position - 0x12259B
{
	struct<13> Var0;
	struct<13> Var1;
	int iVar2;
	if (bParam1 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && !__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
	{
		return 0;
	}
	if (__LIB_4__.func_973(1) && !__LIB_3__.func_898(PLAYER::PLAYER_ID(), bParam1))
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && ENTITY::IS_ENTITY_IN_AIR(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
	{
		return 0;
	}
	Var0 = { __LIB_1__.func_267(bParam1) };
	Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
	iVar2 = __LIB_2__.func_180(&Var1);
	if (iVar2 == -1 || iVar2 != __LIB_2__.func_180(&Var0))
	{
		if (!NETWORK::NETWORK_IS_FRIEND(&Var0))
		{
			if (!__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_387(int iParam0)//Position - 0x13EA2B
{
	if (__LIB_2__.func_297(PLAYER::PLAYER_ID()) || ((__LIB_2__.func_859(__LIB_3__.func_803(PLAYER::PLAYER_ID())) && __LIB_1__.func_425(PLAYER::PLAYER_ID(), 0)) && __LIB_2__.func_308(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if (!__LIB_4__.func_155(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)) && !__LIB_4__.func_155(__LIB_0__.func_582(), __LIB_3__.func_103(iParam0)))
	{
		return 1;
	}
	if ((__LIB_4__.func_973(0) && __LIB_4__.func_155(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0))) && !__LIB_4__.func_155(__LIB_0__.func_582(), __LIB_3__.func_103(iParam0)))
	{
		return 1;
	}
	return 0;
}

int func_388(var uParam0, bool bParam1)//Position - 0x14397D
{
	struct<13> Var0;
	struct<13> Var1;
	int iVar2;
	if (bParam1 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && !__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
	{
		return 0;
	}
	if ((__LIB_4__.func_973(1) && !__LIB_3__.func_898(PLAYER::PLAYER_ID(), bParam1)) && __LIB_4__.func_85(bParam1) != 0)
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && ENTITY::IS_ENTITY_IN_AIR(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
	{
		return 0;
	}
	Var0 = { __LIB_1__.func_267(bParam1) };
	Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
	iVar2 = __LIB_2__.func_180(&Var1);
	if (iVar2 == -1 || iVar2 != __LIB_2__.func_180(&Var0))
	{
		if (!NETWORK::NETWORK_IS_FRIEND(&Var0))
		{
			if (!__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_389(var uParam0)//Position - 0x155223
{
	if (__LIB_2__.func_297(PLAYER::PLAYER_ID()) || ((__LIB_2__.func_859(__LIB_3__.func_803(PLAYER::PLAYER_ID())) && __LIB_1__.func_425(PLAYER::PLAYER_ID(), 0)) && __LIB_2__.func_308(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	return 0;
}

int func_390(var uParam0, bool bParam1)//Position - 0x1688CB
{
	struct<13> Var0;
	struct<13> Var1;
	int iVar2;
	if (bParam1 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && !__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	Var0 = { __LIB_1__.func_267(bParam1) };
	Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
	iVar2 = __LIB_2__.func_180(&Var1);
	if (iVar2 == -1 || iVar2 != __LIB_2__.func_180(&Var0))
	{
		if (!NETWORK::NETWORK_IS_FRIEND(&Var0))
		{
			if (!__LIB_3__.func_999(PLAYER::PLAYER_ID(), bParam1))
			{
				return 0;
			}
		}
	}
	if (__LIB_4__.func_958(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__.func_71(PLAYER::PLAYER_ID(), bParam1, 0, 1) || __LIB_3__.func_340())
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

void func_391()//Position - 0x1BB4ED
{
	if (__LIB_9__.func_147(PLAYER::PLAYER_ID()))
	{
		__LIB_0__.func_579(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_10));
	}
}

void func_392(int iParam0, int iParam1)//Position - 0x1BC078
{
	if (!__LIB_4__.func_926(iParam0))
	{
		return;
	}
	else if (iParam1 < 1)
	{
		return;
	}
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_8[iParam0] = (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_8[iParam0] - iParam1);
	__LIB_1__.func_597(__LIB_10__.func_925(iParam0), Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_8[iParam0], -1, 1, 0);
}

int func_393(int iParam0)//Position - 0x1BC169
{
	return __LIB_10__.func_926(PLAYER::PLAYER_ID(), iParam0);
}

bool func_394(int iParam0)//Position - 0x1BDB31
{
	float fVar0;
	float fVar1;
	fVar0 = SYSTEM::TO_FLOAT(__LIB_20__.func_347());
	fVar1 = (fVar0 * Global_262145.f_24534 /* Tunable: 1775809810 */);
	return iParam0 > SYSTEM::ROUND(fVar1);
}

bool func_395()//Position - 0x1BDB58
{
	return __LIB_11__.func_19(PLAYER::PLAYER_ID()) <= Global_262145.f_24532 /* Tunable: 1404110250 */;
}

void func_396(int iParam0, int iParam1, int iParam2)//Position - 0x1CD170
{
	struct<8> Var0;
	if (__LIB_1__.func_264(iParam0, 0, 1))
	{
		Var0.f_0 = 1146470621;
		Var0.f_1 = PLAYER::PLAYER_ID();
		Var0.f_2 = iParam1;
		Var0.f_4 = iParam2;
		Var0.f_5 = __LIB_1__.func_560(iParam0);
		__LIB_1__.func_277(&(Var0.f_6), &(Var0.f_7));
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 8, __LIB_1__.func_276(iParam0));
	}
}

void func_397(int iParam0)//Position - 0x1CE2C1
{
	__LIB_8__.func_520(iParam0, 7234);
}

void func_398(int iParam0, int iParam1)//Position - 0x1CE53C
{
	if (iParam0 > 0)
	{
		__LIB_8__.func_520(iParam0, 6119);
	}
	if (iParam1 > 0)
	{
		__LIB_8__.func_520(iParam1, 6120);
	}
}

int func_399(int iParam0)//Position - 0x1CEBCA
{
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_JBIB_19_0"):
		case joaat("DLC_MP_GR_F_JBIB_25_0"):
		case joaat("CLO_GRM_U_19_0"):
		case joaat("CLO_GRF_U_25_0"):
			if (!__LIB_0__.func_137(15417, -1))
			{
				__LIB_0__.func_521(15417, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_JBIB_19_1"):
		case joaat("DLC_MP_GR_F_JBIB_25_1"):
		case joaat("CLO_GRM_U_19_1"):
		case joaat("CLO_GRF_U_25_1"):
			if (!__LIB_0__.func_137(15418, -1))
			{
				__LIB_0__.func_521(15418, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_JBIB_20_0"):
		case joaat("DLC_MP_GR_F_JBIB_26_0"):
		case joaat("CLO_GRM_U_20_0"):
		case joaat("CLO_GRF_U_26_0"):
			if (!__LIB_0__.func_137(15425, -1))
			{
				__LIB_0__.func_521(15425, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_DECL_5_0"):
		case joaat("DLC_MP_GR_F_DECL_5_0"):
		case joaat("CLO_GRM_DECL_19"):
		case joaat("CLO_GRF_DECL_19"):
			if (!__LIB_0__.func_137(15405, -1))
			{
				__LIB_0__.func_521(15405, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_1"):
		case joaat("DLC_MP_GR_F_DECL_5_1"):
		case joaat("CLO_GRM_DECL_20"):
		case joaat("CLO_GRF_DECL_20"):
			if (!__LIB_0__.func_137(15393, -1))
			{
				__LIB_0__.func_521(15393, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_2"):
		case joaat("DLC_MP_GR_F_DECL_5_2"):
		case joaat("CLO_GRM_DECL_21"):
		case joaat("CLO_GRF_DECL_21"):
			if (!__LIB_0__.func_137(15409, -1))
			{
				__LIB_0__.func_521(15409, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_3"):
		case joaat("DLC_MP_GR_F_DECL_5_3"):
		case joaat("CLO_GRM_DECL_22"):
		case joaat("CLO_GRF_DECL_22"):
			if (!__LIB_0__.func_137(15396, -1))
			{
				__LIB_0__.func_521(15396, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_4"):
		case joaat("DLC_MP_GR_F_DECL_5_4"):
		case joaat("CLO_GRM_DECL_23"):
		case joaat("CLO_GRF_DECL_23"):
			if (!__LIB_0__.func_137(15412, -1))
			{
				__LIB_0__.func_521(15412, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_5"):
		case joaat("DLC_MP_GR_F_DECL_5_5"):
		case joaat("CLO_GRM_DECL_24"):
		case joaat("CLO_GRF_DECL_24"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_6"):
		case joaat("DLC_MP_GR_F_DECL_5_6"):
		case joaat("CLO_GRM_DECL_25"):
		case joaat("CLO_GRF_DECL_25"):
			if (!__LIB_0__.func_137(15403, -1))
			{
				__LIB_0__.func_521(15403, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_7"):
		case joaat("DLC_MP_GR_F_DECL_5_7"):
		case joaat("CLO_GRM_DECL_26"):
		case joaat("CLO_GRF_DECL_26"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_8"):
		case joaat("DLC_MP_GR_F_DECL_5_8"):
		case joaat("CLO_GRM_DECL_27"):
		case joaat("CLO_GRF_DECL_27"):
			if (!__LIB_0__.func_137(15389, -1))
			{
				__LIB_0__.func_521(15389, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_9"):
		case joaat("DLC_MP_GR_F_DECL_5_9"):
		case joaat("CLO_GRM_DECL_28"):
		case joaat("CLO_GRF_DECL_28"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_DECL_5_10"):
		case joaat("DLC_MP_GR_F_DECL_5_10"):
		case joaat("CLO_GRM_DECL_29"):
		case joaat("CLO_GRF_DECL_29"):
			if (!__LIB_0__.func_137(15398, -1))
			{
				__LIB_0__.func_521(15398, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_PHEAD_6_0"):
		case joaat("DLC_MP_GR_F_PHEAD_6_0"):
		case joaat("DLC_MP_GR_M_PHEAD_7_0"):
		case joaat("DLC_MP_GR_F_PHEAD_7_0"):
		case joaat("CLO_GRM_PH_6_0"):
		case joaat("CLO_GRF_PH_6_0"):
			if (!__LIB_0__.func_137(15400, -1))
			{
				__LIB_0__.func_521(15400, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_1"):
		case joaat("DLC_MP_GR_F_PHEAD_6_1"):
		case joaat("DLC_MP_GR_M_PHEAD_7_1"):
		case joaat("DLC_MP_GR_F_PHEAD_7_1"):
		case joaat("CLO_GRM_PH_6_1"):
		case joaat("CLO_GRF_PH_6_1"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_2"):
		case joaat("DLC_MP_GR_F_PHEAD_6_2"):
		case joaat("DLC_MP_GR_M_PHEAD_7_2"):
		case joaat("DLC_MP_GR_F_PHEAD_7_2"):
		case joaat("CLO_GRM_PH_6_2"):
		case joaat("CLO_GRF_PH_6_2"):
			if (!__LIB_0__.func_137(15408, -1))
			{
				__LIB_0__.func_521(15408, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_3"):
		case joaat("DLC_MP_GR_F_PHEAD_6_3"):
		case joaat("DLC_MP_GR_M_PHEAD_7_3"):
		case joaat("DLC_MP_GR_F_PHEAD_7_3"):
		case joaat("CLO_GRM_PH_6_3"):
		case joaat("CLO_GRF_PH_6_3"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_4"):
		case joaat("DLC_MP_GR_F_PHEAD_6_4"):
		case joaat("DLC_MP_GR_M_PHEAD_7_4"):
		case joaat("DLC_MP_GR_F_PHEAD_7_4"):
		case joaat("CLO_GRM_PH_6_4"):
		case joaat("CLO_GRF_PH_6_4"):
			if (!__LIB_0__.func_137(15411, -1))
			{
				__LIB_0__.func_521(15411, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_5"):
		case joaat("DLC_MP_GR_F_PHEAD_6_5"):
		case joaat("DLC_MP_GR_M_PHEAD_7_5"):
		case joaat("DLC_MP_GR_F_PHEAD_7_5"):
		case joaat("CLO_GRM_PH_6_5"):
		case joaat("CLO_GRF_PH_6_5"):
			if (!__LIB_0__.func_137(15397, -1))
			{
				__LIB_0__.func_521(15397, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_6"):
		case joaat("DLC_MP_GR_F_PHEAD_6_6"):
		case joaat("DLC_MP_GR_M_PHEAD_7_6"):
		case joaat("DLC_MP_GR_F_PHEAD_7_6"):
		case joaat("CLO_GRM_PH_6_6"):
		case joaat("CLO_GRF_PH_6_6"):
			if (!__LIB_0__.func_137(15413, -1))
			{
				__LIB_0__.func_521(15413, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_7"):
		case joaat("DLC_MP_GR_F_PHEAD_6_7"):
		case joaat("DLC_MP_GR_M_PHEAD_7_7"):
		case joaat("DLC_MP_GR_F_PHEAD_7_7"):
		case joaat("CLO_GRM_PH_6_7"):
		case joaat("CLO_GRF_PH_6_7"):
			if (!__LIB_0__.func_137(15391, -1))
			{
				__LIB_0__.func_521(15391, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_8"):
		case joaat("DLC_MP_GR_F_PHEAD_6_8"):
		case joaat("DLC_MP_GR_M_PHEAD_7_8"):
		case joaat("DLC_MP_GR_F_PHEAD_7_8"):
		case joaat("CLO_GRM_PH_6_8"):
		case joaat("CLO_GRF_PH_6_8"):
			if (!__LIB_0__.func_137(15388, -1))
			{
				__LIB_0__.func_521(15388, 1, -1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_9"):
		case joaat("DLC_MP_GR_F_PHEAD_6_9"):
		case joaat("DLC_MP_GR_M_PHEAD_7_9"):
		case joaat("DLC_MP_GR_F_PHEAD_7_9"):
		case joaat("CLO_GRM_PH_6_9"):
		case joaat("CLO_GRF_PH_6_9"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("DLC_MP_GR_M_PHEAD_6_10"):
		case joaat("DLC_MP_GR_F_PHEAD_6_10"):
		case joaat("DLC_MP_GR_M_PHEAD_7_10"):
		case joaat("DLC_MP_GR_F_PHEAD_7_10"):
		case joaat("CLO_GRM_PH_6_10"):
		case joaat("CLO_GRF_PH_6_10"):
			if (!__LIB_0__.func_137(15401, -1))
			{
				__LIB_0__.func_521(15401, 1, -1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Gunrunning_Award_000_M"):
		case joaat("MP_Gunrunning_Award_000_F"):
		case joaat("CLO_GRM_DECL_0"):
		case joaat("CLO_GRF_DECL_0"):
			if (!__LIB_0__.func_137(15394, -1))
			{
				__LIB_0__.func_521(15394, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_001_M"):
		case joaat("MP_Gunrunning_Award_001_F"):
		case joaat("CLO_GRM_DECL_1"):
		case joaat("CLO_GRF_DECL_1"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_002_M"):
		case joaat("MP_Gunrunning_Award_002_F"):
		case joaat("CLO_GRM_DECL_2"):
		case joaat("CLO_GRF_DECL_2"):
			if (!__LIB_0__.func_137(15406, -1))
			{
				__LIB_0__.func_521(15406, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_003_M"):
		case joaat("MP_Gunrunning_Award_003_F"):
		case joaat("CLO_GRM_DECL_3"):
		case joaat("CLO_GRF_DECL_3"):
			if (!__LIB_0__.func_137(15395, -1))
			{
				__LIB_0__.func_521(15395, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_004_M"):
		case joaat("MP_Gunrunning_Award_004_F"):
		case joaat("CLO_GRM_DECL_4"):
		case joaat("CLO_GRF_DECL_4"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_005_M"):
		case joaat("MP_Gunrunning_Award_005_F"):
		case joaat("CLO_GRM_DECL_5"):
		case joaat("CLO_GRF_DECL_5"):
			if (!__LIB_0__.func_137(15410, -1))
			{
				__LIB_0__.func_521(15410, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_006_M"):
		case joaat("MP_Gunrunning_Award_006_F"):
		case joaat("CLO_GRM_DECL_6"):
		case joaat("CLO_GRF_DECL_6"):
			if (!__LIB_0__.func_137(15407, -1))
			{
				__LIB_0__.func_521(15407, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_007_M"):
		case joaat("MP_Gunrunning_Award_007_F"):
		case joaat("CLO_GRM_DECL_7"):
		case joaat("CLO_GRF_DECL_7"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_008_M"):
		case joaat("MP_Gunrunning_Award_008_F"):
		case joaat("CLO_GRM_DECL_8"):
		case joaat("CLO_GRF_DECL_8"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_009_M"):
		case joaat("MP_Gunrunning_Award_009_F"):
		case joaat("CLO_GRM_DECL_9"):
		case joaat("CLO_GRF_DECL_9"):
			if (!__LIB_0__.func_137(15414, -1))
			{
				__LIB_0__.func_521(15414, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_010_M"):
		case joaat("MP_Gunrunning_Award_010_F"):
		case joaat("CLO_GRM_DECL_10"):
		case joaat("CLO_GRF_DECL_10"):
			if (!__LIB_0__.func_137(15415, -1))
			{
				__LIB_0__.func_521(15415, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_011_M"):
		case joaat("MP_Gunrunning_Award_011_F"):
		case joaat("CLO_GRM_DECL_11"):
		case joaat("CLO_GRF_DECL_11"):
			if (!__LIB_0__.func_137(15399, -1))
			{
				__LIB_0__.func_521(15399, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_012_M"):
		case joaat("MP_Gunrunning_Award_012_F"):
		case joaat("CLO_GRM_DECL_12"):
		case joaat("CLO_GRF_DECL_12"):
			if (!__LIB_0__.func_137(15404, -1))
			{
				__LIB_0__.func_521(15404, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_013_M"):
		case joaat("MP_Gunrunning_Award_013_F"):
		case joaat("CLO_GRM_DECL_13"):
		case joaat("CLO_GRF_DECL_13"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_014_M"):
		case joaat("MP_Gunrunning_Award_014_F"):
		case joaat("CLO_GRM_DECL_14"):
		case joaat("CLO_GRF_DECL_14"):
			if (!__LIB_0__.func_137(15392, -1))
			{
				__LIB_0__.func_521(15392, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_015_M"):
		case joaat("MP_Gunrunning_Award_015_F"):
		case joaat("CLO_GRM_DECL_15"):
		case joaat("CLO_GRF_DECL_15"):
			if (!__LIB_0__.func_137(15390, -1))
			{
				__LIB_0__.func_521(15390, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_016_M"):
		case joaat("MP_Gunrunning_Award_016_F"):
		case joaat("CLO_GRM_DECL_16"):
		case joaat("CLO_GRF_DECL_16"):
			if (!__LIB_0__.func_137(15402, -1))
			{
				__LIB_0__.func_521(15402, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_017_M"):
		case joaat("MP_Gunrunning_Award_017_F"):
		case joaat("CLO_GRM_DECL_17"):
		case joaat("CLO_GRF_DECL_17"):
			if (!__LIB_0__.func_137(15416, -1))
			{
				__LIB_0__.func_521(15416, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_018_M"):
		case joaat("MP_Gunrunning_Award_018_F"):
		case joaat("CLO_GRM_DECL_18"):
		case joaat("CLO_GRF_DECL_18"):
			if (!__LIB_1__.func_563(209, -1))
			{
				__LIB_6__.func_905(209, 1, -1, 1);
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Gunrunning_Award_019_M"):
		case joaat("MP_Gunrunning_Award_025_F"):
		case joaat("CLO_GRM_DECL_30"):
		case joaat("CLO_GRF_DECL_30"):
			if (!__LIB_0__.func_137(15426, -1))
			{
				__LIB_0__.func_521(15426, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_020_M"):
		case joaat("MP_Gunrunning_Award_020_F"):
		case joaat("CLO_GRM_DECL_31"):
		case joaat("CLO_GRF_DECL_31"):
			if (!__LIB_0__.func_137(15422, -1))
			{
				__LIB_0__.func_521(15422, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_020_M_ALT"):
		case joaat("MP_Gunrunning_Award_020_F_ALT"):
		case joaat("CLO_GRM_DECL_32"):
		case joaat("CLO_GRF_DECL_32"):
			if (!__LIB_0__.func_137(15423, -1))
			{
				__LIB_0__.func_521(15423, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_021_M"):
		case joaat("MP_Gunrunning_Award_021_F"):
		case joaat("CLO_GRM_DECL_33"):
		case joaat("CLO_GRF_DECL_33"):
			if (!__LIB_0__.func_137(15421, -1))
			{
				__LIB_0__.func_521(15421, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_022_M"):
		case joaat("MP_Gunrunning_Award_026_F"):
		case joaat("CLO_GRM_DECL_34"):
		case joaat("CLO_GRF_DECL_34"):
			if (!__LIB_0__.func_137(15427, -1))
			{
				__LIB_0__.func_521(15427, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_023_M"):
		case joaat("MP_Gunrunning_Award_023_F"):
		case joaat("CLO_GRM_DECL_35"):
		case joaat("CLO_GRF_DECL_35"):
			if (!__LIB_0__.func_137(15419, -1))
			{
				__LIB_0__.func_521(15419, 1, -1);
				return 1;
			}
			break;
		case joaat("MP_Gunrunning_Award_024_M"):
		case joaat("MP_Gunrunning_Award_024_F"):
		case joaat("CLO_GRM_DECL_36"):
		case joaat("CLO_GRF_DECL_36"):
			if (!__LIB_0__.func_137(15420, -1))
			{
				__LIB_0__.func_521(15420, 1, -1);
				return 1;
			}
			break;
	}
	return 0;
}

int func_400(int iParam0)//Position - 0x1CF6CA
{
	int iVar0;
	iVar0 = __LIB_4__.func_816(iParam0);
	return __LIB_1__.func_556(__LIB_9__.func_523(iVar0), -1, 0);
}

void func_401(int iParam0, int iParam1)//Position - 0x1CF782
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	iVar0 = __LIB_4__.func_816(iParam0);
	iVar1 = __LIB_9__.func_523(iVar0);
	iVar2 = (__LIB_1__.func_556(iVar1, -1, 0) + iParam1);
	__LIB_1__.func_597(iVar1, iVar2, -1, 1, 0);
	if (iVar0 == 5)
	{
		return;
	}
	if (__LIB_0__.func_228(9357, -1) < 3)
	{
		iVar3 = 0;
		iVar0 = 0;
		while (iVar0 <= 5)
		{
			if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[iVar0 /*13*/] != 0)
			{
				iVar1 = __LIB_9__.func_523(iVar0);
				iVar3 = (iVar3 + __LIB_1__.func_556(iVar1, -1, 0));
			}
			iVar0++;
		}
		iVar4 = 1;
		while (iVar4 <= 3)
		{
			if (iVar3 >= __LIB_10__.func_937(iVar4))
			{
				iVar5 = iVar4;
			}
			iVar4++;
		}
		__LIB_1__.func_39(9357, iVar5, -1);
	}
}

int func_402(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x1CF874
{
	int iVar0;
	int iVar1;
	iVar1 = __LIB_1__.func_347(iParam1);
	if (__LIB_1__.func_346(iParam1))
	{
		switch (iVar1)
		{
			case 1:
				iVar0 = Global_262145.f_17475 /* Tunable: BIKER_WEED_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17480 /* Tunable: BIKER_WEED_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17485 /* Tunable: BIKER_WEED_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 3:
				iVar0 = Global_262145.f_17474 /* Tunable: BIKER_METH_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17479 /* Tunable: BIKER_METH_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17484 /* Tunable: BIKER_METH_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 4:
				iVar0 = Global_262145.f_17473 /* Tunable: BIKER_CRACK_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17478 /* Tunable: BIKER_CRACK_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17483 /* Tunable: BIKER_CRACK_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 0:
				iVar0 = Global_262145.f_17471 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17476 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17481 /* Tunable: BIKER_FAKEIDS_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 2:
				iVar0 = Global_262145.f_17472 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_17477 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_17482 /* Tunable: BIKER_COUNTERCASH_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			case 5:
				iVar0 = Global_262145.f_21581 /* Tunable: GR_MANU_PRODUCT_VALUE */;
				if (__LIB_18__.func_978(iParam0, iParam1, 0))
				{
					iVar0 = (iVar0 + Global_262145.f_21583 /* Tunable: GR_MANU_PRODUCT_VALUE_EQUIPMENT_UPGRADE */);
				}
				if (__LIB_18__.func_978(iParam0, iParam1, 1))
				{
					iVar0 = (iVar0 + Global_262145.f_21582 /* Tunable: GR_MANU_PRODUCT_VALUE_STAFF_UPGRADE */);
				}
				iVar0 = (iVar0 * iParam2);
				break;
			}
	}
	if (bParam3)
	{
		iVar0 = __LIB_9__.func_287(iVar1, iVar0);
	}
	return iVar0;
}

void func_403(int iParam0)//Position - 0x1D02DE
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = Global_2870000[__LIB_0__.func_5()];
	iVar0 = (iVar0 + iParam0);
	__LIB_1__.func_603(3671, iVar0, -1, 1);
	if (__LIB_0__.func_228(7666, -1) < 24)
	{
		iVar1 = 1;
		while (iVar1 <= 24)
		{
			if (iVar0 >= __LIB_10__.func_938(iVar1))
			{
				iVar2 = iVar1;
			}
			iVar1++;
		}
		__LIB_1__.func_39(7666, iVar2, -1);
	}
}

int func_404(int iParam0)//Position - 0x1D0791
{
	int iVar0;
	if (__LIB_2__.func_141(iParam0))
	{
		iVar0 = __LIB_9__.func_289(__LIB_5__.func_133(iParam0));
		return __LIB_1__.func_556(iVar0, -1, 0);
	}
	return 0;
}

void func_405(int iParam0, var uParam1, var uParam2)//Position - 0x1D18D7
{
	int iVar0;
	if (iParam0 == 157)
	{
		*uParam1 = 1f;
		*uParam2 = 1f;
		return;
	}
	if (__LIB_10__.func_942(iParam0))
	{
		if (!__LIB_2__.func_232())
		{
			*uParam1 = 1f;
			*uParam2 = Global_262145.f_12872 /* Tunable: GB_CHALLENGE_GOON_RP_REWARD_PERCENTAGE */;
		}
		else
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
		return;
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1))
	{
		if (__LIB_10__.func_929(iParam0))
		{
			*uParam1 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
			*uParam2 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
		}
		else if (iParam0 == 242)
		{
			*uParam1 = Global_262145.f_24650 /* Tunable: 1063368282 */;
			*uParam2 = Global_262145.f_24650 /* Tunable: 1063368282 */;
		}
		else if (iParam0 == 244)
		{
			*uParam1 = Global_262145.f_24651 /* Tunable: 1249038613 */;
			*uParam2 = Global_262145.f_24651 /* Tunable: 1249038613 */;
		}
		else if (iParam0 == 248)
		{
			*uParam1 = Global_262145.f_24653 /* Tunable: -488524036 */;
			*uParam2 = Global_262145.f_24653 /* Tunable: -488524036 */;
		}
		else if (iParam0 == 241)
		{
			*uParam1 = Global_262145.f_24654 /* Tunable: 787287514 */;
			*uParam2 = Global_262145.f_24654 /* Tunable: 787287514 */;
		}
		else if (iParam0 == 239)
		{
			*uParam1 = Global_262145.f_24655 /* Tunable: 1624617753 */;
			*uParam2 = Global_262145.f_24655 /* Tunable: 1624617753 */;
		}
		else if (iParam0 == 240)
		{
			*uParam1 = Global_262145.f_24656 /* Tunable: 987927512 */;
			*uParam2 = Global_262145.f_24656 /* Tunable: 987927512 */;
		}
		else
		{
			*uParam1 = Global_262145.f_12869 /* Tunable: GB_RIVAL_ORG_CASH_REWARD_PERCENTAGE */;
			*uParam2 = Global_262145.f_12868 /* Tunable: GB_RIVAL_ORG_RP_REWARD_PERCENTAGE */;
		}
	}
	else if (__LIB_10__.func_929(iParam0))
	{
		*uParam1 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
		*uParam2 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
	}
	else if (iParam0 == 242)
	{
		*uParam1 = Global_262145.f_24657 /* Tunable: -1262379258 */;
		*uParam2 = Global_262145.f_24657 /* Tunable: -1262379258 */;
	}
	else if (iParam0 == 244)
	{
		*uParam1 = Global_262145.f_24658 /* Tunable: 1108489437 */;
		*uParam2 = Global_262145.f_24658 /* Tunable: 1108489437 */;
	}
	else if (iParam0 == 248)
	{
		*uParam1 = Global_262145.f_24660 /* Tunable: -989876675 */;
		*uParam2 = Global_262145.f_24660 /* Tunable: -989876675 */;
	}
	else if (iParam0 == 241)
	{
		*uParam1 = Global_262145.f_24661 /* Tunable: -1361915386 */;
		*uParam2 = Global_262145.f_24661 /* Tunable: -1361915386 */;
	}
	else if (iParam0 == 239)
	{
		*uParam1 = Global_262145.f_24662 /* Tunable: -1419284063 */;
		*uParam2 = Global_262145.f_24662 /* Tunable: -1419284063 */;
	}
	else if (iParam0 == 240)
	{
		*uParam1 = Global_262145.f_24663 /* Tunable: 2112977251 */;
		*uParam2 = Global_262145.f_24663 /* Tunable: 2112977251 */;
	}
	else
	{
		*uParam1 = Global_262145.f_12871 /* Tunable: GB_SOLO_CASH_REWARD_PERCENTAGE */;
		*uParam2 = Global_262145.f_12870 /* Tunable: GB_SOLO_RP_REWARD_PERCENTAGE */;
	}
	iVar0 = __LIB_1__.func_301();
	if (iVar0 != __LIB_0__.func_160())
	{
		if (__LIB_7__.func_246(PLAYER::PLAYER_ID(), iVar0, 1))
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
	}
}

int func_406()//Position - 0x1D3252
{
	if (__LIB_6__.func_108())
	{
		__LIB_0__.func_168(154, Global_20266, 1);
	}
	return 154;
}

int func_407()//Position - 0x1D32F3
{
	if (__LIB_10__.func_924(45) || __LIB_10__.func_924(46))
	{
		return 1;
	}
	return 0;
}

int func_408()//Position - 0x1D3926
{
	if (__LIB_2__.func_232())
	{
		if (!BitTest(__LIB_1__.func_556(7229, -1, 0), 2))
		{
			return 1;
		}
	}
	return 0;
}

void func_409(var uParam0, int iParam1, struct<3> Param2, int iParam3)//Position - 0x1EFBB5
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (Global_1581357 == 1)
	{
		return;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		__LIB_9__.func_981(uParam0, 0, 0);
	}
	if (__LIB_0__.func_78(Param2, 0f, 0f, 0f, 0))
	{
		if (ENTITY::IS_ENTITY_A_PED(iParam1))
		{
			iVar0 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1);
			if (!PED::IS_PED_IN_ANY_VEHICLE(iVar0, false))
			{
				if (PED::IS_PED_A_PLAYER(iVar0))
				{
					if (!__LIB_6__.func_925())
					{
						Param2 = { 0f, 0f, 1f };
					}
				}
				else if (PED::IS_PED_MALE(iVar0))
				{
					Param2 = { 0f, 0f, 1f };
				}
			}
		}
	}
	CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
	iVar1 = uParam0->f_9;
	iVar2 = uParam0->f_10;
	if (iParam3 == joaat("VEHICLE_HIGH_ZOOM_HINT_HELPER"))
	{
		if (iVar1 < 1500)
		{
			iVar1 = 1500;
		}
		if (iVar2 < 1500)
		{
			iVar2 = 1500;
		}
	}
	CAM::SET_GAMEPLAY_ENTITY_HINT(iParam1, Param2, true, -1, iVar1, iVar2, iParam3);
	iVar3 = 2048;
	iVar4 = 3;
	TASK::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, -1, iVar3, iVar4);
	GRAPHICS::ANIMPOSTFX_PLAY("FocusIn", 0, false);
	AUDIO::START_AUDIO_SCENE("HINT_CAM_SCENE");
	AUDIO::PLAY_SOUND_FRONTEND(-1, "FocusIn", "HintCamSounds", true);
	uParam0->f_11 = 1;
	uParam0->f_8 = MISC::GET_GAME_TIMER();
	uParam0->f_1 = 1;
	*uParam0 = 0;
}

int func_410(int iParam0)//Position - 0x1F5071
{
	int iVar0;
	int iVar1;
	if (ENTITY::IS_ENTITY_ATTACHED(iParam0))
	{
		iVar0 = ENTITY::GET_ENTITY_ATTACHED_TO(iParam0);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			iVar1 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar0);
			if (__LIB_9__.func_237(iVar1))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_411()//Position - 0x201F05
{
	if ((__LIB_0__.func_93() || __LIB_1__.func_461()) || __LIB_1__.func_460(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_412()//Position - 0x202B23
{
	int iVar0;
	if (BitTest(Global_2815059.f_4630, 2))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1))
		{
			iVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
			if (iVar0 != __LIB_0__.func_160())
			{
				if (Global_2689235[iVar0 /*453*/].f_208)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_413(int* iParam0)//Position - 0x20A3FF
{
	int iVar0;
	iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
	if (BitTest(*iParam0, 1))
	{
		if (!BitTest(*iParam0, 5))
		{
			if (BitTest(*iParam0, 2))
			{
				if (!BitTest(*iParam0, 4))
				{
					AUDIO::SET_USER_RADIO_CONTROL_ENABLED(true);
					AUDIO::SET_AUDIO_FLAG("AllowScoreAndRadio", false);
				}
			}
			if (!BitTest(*iParam0, 6))
			{
				if (AUDIO::TRIGGER_MUSIC_EVENT(__LIB_10__.func_944(iVar0)))
				{
					MISC::SET_BIT(iParam0, 6);
				}
			}
			if (BitTest(*iParam0, 6))
			{
				if (!BitTest(*iParam0, 7))
				{
					if (AUDIO::TRIGGER_MUSIC_EVENT(__LIB_11__.func_56(iVar0)))
					{
						MISC::SET_BIT(iParam0, 7);
					}
				}
				if (BitTest(*iParam0, 7))
				{
					MISC::SET_BIT(iParam0, 5);
				}
			}
		}
	}
}

int func_414(int iParam0, bool bParam1)//Position - 0x20B59D
{
	if (((!ENTITY::IS_ENTITY_DEAD(iParam0, false) && (!ENTITY::IS_ENTITY_IN_AIR(iParam0) && VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(iParam0))) && SYSTEM::VMAG(ENTITY::GET_ENTITY_VELOCITY(iParam0)) < 0.5f) && __LIB_7__.func_225(iParam0, bParam1, bParam1, 0, 0, 0, 1, 0, 1))
	{
		return 1;
	}
	return 0;
}

void func_415()//Position - 0x21E564
{
	if (!__LIB_11__.func_66(PLAYER::PLAYER_ID()))
	{
		__LIB_1__.func_484(25);
	}
}

void func_416(int iParam0)//Position - 0x21EF5F
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_1__.func_556(3794, -1, 0);
	iVar1 = __LIB_9__.func_372(iParam0);
	if (iVar1 != -1)
	{
		MISC::SET_BIT(&iVar0, iVar1);
		__LIB_1__.func_597(3794, iVar0, -1, 1, 0);
	}
}

bool func_417()//Position - 0x22279F
{
	return (__LIB_0__.func_697() && __LIB_4__.func_116(__LIB_1__.func_301()));
}

void func_418(int iParam0, bool bParam1)//Position - 0x2327E9
{
	if (bParam1)
	{
		if (!BitTest(Global_1943920.f_3, 9))
		{
			AUDIO::START_AUDIO_SCENE(__LIB_10__.func_963(iParam0));
			MISC::SET_BIT(&(Global_1943920.f_3), 9);
		}
	}
	else if (BitTest(Global_1943920.f_3, 9))
	{
		AUDIO::STOP_AUDIO_SCENE(__LIB_10__.func_963(iParam0));
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 9);
	}
}

void func_419(int iParam0, bool bParam1)//Position - 0x232D52
{
	int iVar0;
	if (iParam0 == -1)
	{
		iParam0 = __LIB_9__.func_308();
	}
	if (iParam0 > 0)
	{
		if (__LIB_0__.func_582() != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_483(PLAYER::PLAYER_ID()) == PLAYER::PLAYER_ID())
			{
				Global_2789228.f_93[__LIB_9__.func_307(iParam0)] = 1;
			}
		}
		iVar0 = __LIB_9__.func_307(159);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(157);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(148);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(164);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(142);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(152);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(166);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(170);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(173);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(179);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(200);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(201);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13078 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_WORK */, bParam1))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(182);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(183);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(185);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(186);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(180);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(195);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(197);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(198);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(207);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(208);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(209);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(214);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(215);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(216);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(217);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(218);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(219);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(220);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
		iVar0 = __LIB_9__.func_307(221);
		if (__LIB_10__.func_965(iVar0, Global_262145.f_13079 /* Tunable: GB_COOLDOWN_UNTIL_NEXT_BOSS_CHALLENGE */, 0))
		{
			__LIB_0__.func_579(&(Global_2789228[iVar0 /*2*/]));
			__LIB_0__.func_580(&(Global_2789228[iVar0 /*2*/]), 1, 0);
		}
	}
}

void func_420(bool bParam0)//Position - 0x233ED0
{
	if (bParam0)
	{
		if (!__LIB_2__.func_509(PLAYER::PLAYER_ID(), 5))
		{
			__LIB_9__.func_333(5);
		}
	}
	else if (__LIB_2__.func_509(PLAYER::PLAYER_ID(), 5))
	{
		__LIB_9__.func_309(5);
	}
}

int func_421(int iParam0, bool bParam1)//Position - 0x23437E
{
	var uVar0;
	int iVar1;
	iVar1 = __LIB_1__.func_347(iParam0);
	switch (iVar1)
	{
		case 1:
			uVar0 = Global_262145.f_17465 /* Tunable: -373027461 */;
			if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
			{
				uVar0 = Global_262145.f_17470 /* Tunable: 1195564032 */;
			}
			break;
		case 3:
			uVar0 = Global_262145.f_17464 /* Tunable: -730135062 */;
			if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
			{
				uVar0 = Global_262145.f_17469 /* Tunable: -660914094 */;
			}
			break;
		case 4:
			uVar0 = Global_262145.f_17463 /* Tunable: -161187879 */;
			if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
			{
				uVar0 = Global_262145.f_17468 /* Tunable: 1500658261 */;
			}
			break;
		case 0:
			uVar0 = Global_262145.f_17461 /* Tunable: -1839004359 */;
			if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
			{
				uVar0 = Global_262145.f_17466 /* Tunable: -192060672 */;
			}
			break;
		case 2:
			uVar0 = Global_262145.f_17462 /* Tunable: 631857857 */;
			if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
			{
				uVar0 = Global_262145.f_17467 /* Tunable: -891680742 */;
			}
			break;
		case 5:
			if (bParam1)
			{
				uVar0 = Global_262145.f_21595 /* Tunable: 1485279815 */;
				if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
				{
					uVar0 = Global_262145.f_21596 /* Tunable: 2041812011 */;
				}
			}
			else
			{
				uVar0 = Global_262145.f_21579 /* Tunable: -1652502760 */;
				if (__LIB_18__.func_978(PLAYER::PLAYER_ID(), iParam0, 0))
				{
					uVar0 = Global_262145.f_21580 /* Tunable: 1647327744 */;
				}
			}
			break;
	}
	return uVar0;
}

void func_422()//Position - 0x234C32
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_11__.func_44(NETWORK::PARTICIPANT_ID_TO_INT(), 0))
		{
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_445.f_1 = 0;
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_445.f_2 = { 0f, 0f, 0f };
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_445.f_5 = { 0f, 0f, 0f };
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_445 = 0;
		}
	}
}

int func_423(int iParam0)//Position - 0x236AE8
{
	if (__LIB_3__.func_803(iParam0) == 262)
	{
		return __LIB_2__.func_234(iParam0);
	}
	return -1;
}

int func_424(int iParam0)//Position - 0x236B6A
{
	if (__LIB_3__.func_803(iParam0) == 263)
	{
		return __LIB_2__.func_234(iParam0);
	}
	return -1;
}

int func_425(int iParam0, int iParam1)//Position - 0x237753
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bVar0 = __LIB_18__.func_978(iParam0, iParam1, 2);
	bVar1 = __LIB_18__.func_978(iParam0, iParam1, 1);
	bVar2 = __LIB_18__.func_978(iParam0, iParam1, 0);
	if ((bVar0 && bVar1) && bVar2)
	{
		return 7;
	}
	else if ((bVar1 && bVar0) && !bVar2)
	{
		return 6;
	}
	else if ((bVar2 && bVar0) && !bVar1)
	{
		return 5;
	}
	else if ((bVar2 && bVar1) && !bVar0)
	{
		return 4;
	}
	else if (bVar0)
	{
		return 3;
	}
	else if (bVar1)
	{
		return 2;
	}
	else if (bVar2)
	{
		return 1;
	}
	return 0;
}

int func_426(int iParam0)//Position - 0x237CF7
{
	if (__LIB_3__.func_803(iParam0) == 300)
	{
		return __LIB_2__.func_234(iParam0);
	}
	return -1;
}

int func_427(int iParam0)//Position - 0x237D15
{
	if (__LIB_3__.func_803(iParam0) == 299)
	{
		return __LIB_2__.func_234(iParam0);
	}
	return -1;
}

int func_428(int iParam0, bool bParam1)//Position - 0x2380A8
{
	return __LIB_7__.func_246(PLAYER::PLAYER_ID(), iParam0, bParam1);
}

void func_429()//Position - 0x23834C
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 68)
	{
		if (__LIB_10__.func_972(iVar0))
		{
			__LIB_10__.func_971(iVar0);
		}
		iVar0++;
	}
}

int func_430()//Position - 0x238411
{
	if (((__LIB_10__.func_974(0) || __LIB_10__.func_974(1)) || __LIB_10__.func_974(2)) || __LIB_10__.func_974(3))
	{
		return 1;
	}
	return 0;
}

int func_431()//Position - 0x2384B9
{
	if (((__LIB_10__.func_975(4) || __LIB_10__.func_975(5)) || __LIB_10__.func_975(6)) || __LIB_10__.func_975(7))
	{
		return 1;
	}
	return 0;
}

void func_432()//Position - 0x1C8C6B
{
	if (__LIB_10__.func_12() || __LIB_10__.func_477())
	{
		return;
	}
	if (!__LIB_10__.func_523())
	{
		if (((__LIB_20__.func_295(0) && __LIB_1__.func_174(PLAYER::PLAYER_ID())) || __LIB_20__.func_294()) && !__LIB_10__.func_517(PLAYER::PLAYER_ID()))
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
				{
					NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
				}
				else
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
				}
			}
		}
	}
	else if (PLAYER::PLAYER_ID() == __LIB_0__.func_582())
	{
		if (__LIB_3__.func_583(PLAYER::PLAYER_ID()))
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
				{
					NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
				}
				else
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
				}
			}
		}
	}
}

void func_433()//Position - 0x1C8D7D
{
	bool bVar0;
	if (PLAYER::PLAYER_ID() == __LIB_0__.func_160())
	{
		return;
	}
	if ((((__LIB_10__.func_530() || __LIB_10__.func_554()) || __LIB_10__.func_553()) || __LIB_10__.func_12()) || __LIB_10__.func_395())
	{
		if (__LIB_10__.func_554())
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				bVar0 = false;
			}
			else
			{
				bVar0 = true;
			}
		}
		else
		{
			bVar0 = true;
		}
		if (__LIB_20__.func_295(0) && !__LIB_1__.func_174(PLAYER::PLAYER_ID()))
		{
			if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
			{
				if ((((((__LIB_9__.func_204(Local_103.f_31[iLocal_114]) && __LIB_10__.func_530()) && bVar0) || ((__LIB_10__.func_554() && __LIB_9__.func_204(Local_103.f_31[iLocal_114])) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114])) || ((__LIB_10__.func_553() && __LIB_9__.func_204(Local_103.f_31[iLocal_114])) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114])) || ((__LIB_10__.func_12() && __LIB_9__.func_204(Local_103.f_31[iLocal_114])) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114])) || ((__LIB_10__.func_395() && __LIB_9__.func_204(Local_103.f_31[iLocal_114])) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114]))
				{
					if (__LIB_10__.func_517(PLAYER::PLAYER_ID()))
					{
						__LIB_10__.func_33(0);
					}
					if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 3))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
						{
							NETWORK::NETWORK_FADE_OUT_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), true, false);
							NETWORK::NETWORK_FADE_OUT_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), true, false);
						}
						MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 3);
						MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 4);
						MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 5);
						MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 6);
					}
					else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
					{
						if (!NETWORK::NETWORK_IS_ENTITY_FADING(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114])) && !NETWORK::NETWORK_IS_ENTITY_FADING(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false)))
						{
							NETWORK::NETWORK_CONCEAL_PLAYER(Local_103.f_31[iLocal_114], true, false);
							NETWORK::SET_ENTITY_LOCALLY_INVISIBLE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false));
						}
					}
				}
				if ((__LIB_9__.func_963(Local_103.f_31[iLocal_114]) && !__LIB_9__.func_204(Local_103.f_31[iLocal_114])) && !__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
				{
					if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 4) && bVar0)
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
						{
							NETWORK::NETWORK_FADE_IN_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false, 1);
							NETWORK::NETWORK_FADE_IN_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), false, 1);
						}
						MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 4);
						MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 3);
					}
					else if (!bVar0)
					{
						if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 4))
						{
							MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 4);
						}
					}
				}
			}
		}
		if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
		{
			if ((__LIB_10__.func_517(Local_103.f_31[iLocal_114]) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114]) && bVar0)
			{
				if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 5))
				{
					if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
						{
							NETWORK::NETWORK_FADE_IN_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), false, 1);
							NETWORK::NETWORK_FADE_IN_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false, 1);
						}
					}
					MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 5);
					MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 4);
					MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 3);
				}
			}
			else if (!bVar0)
			{
				if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 5))
				{
					MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 5);
				}
			}
			if (__LIB_10__.func_530() || __LIB_10__.func_12())
			{
				if ((Local_103.f_31[iLocal_114] != __LIB_0__.func_160() && __LIB_4__.func_238(Local_103.f_31[iLocal_114])) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114])
				{
					if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 6))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
						{
							NETWORK::NETWORK_FADE_OUT_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), true, false);
							NETWORK::NETWORK_FADE_OUT_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), true, false);
							MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 6);
						}
					}
				}
			}
		}
		if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
		{
			if (((((__LIB_10__.func_554() || __LIB_10__.func_553()) || __LIB_10__.func_395()) && PLAYER::PLAYER_ID() != Local_103.f_31[iLocal_114]) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
			{
				if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]) && __LIB_20__.func_295(0))
				{
					if (!BitTest(iLocal_201, 23))
					{
						NETWORK::NETWORK_FADE_OUT_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false, false);
						NETWORK::NETWORK_FADE_OUT_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), false, false);
						MISC::SET_BIT(&iLocal_201, 23);
					}
				}
				else if (!__LIB_20__.func_295(0) && !__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
				{
					if (BitTest(iLocal_201, 23))
					{
						NETWORK::NETWORK_FADE_IN_ENTITY(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false, 1);
						NETWORK::NETWORK_FADE_IN_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false), false, 1);
						MISC::CLEAR_BIT(&iLocal_201, 23);
					}
				}
			}
		}
	}
}

void func_434()//Position - 0x1CA19C
{
	if (__LIB_20__.func_295(0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12))
		{
			if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1))
			{
				if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
					{
						TASK::TASK_ACHIEVE_HEADING(Local_124.f_12, Local_124.f_12.f_15, 0);
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
					}
				}
				else if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
				{
					if (__LIB_1__.func_174(Local_103.f_31[iLocal_114]))
					{
						if (Local_124.f_675 == 4)
						{
							TASK::TASK_TURN_PED_TO_FACE_COORD(Local_124.f_12, 1100.18f, -3163.3f, -38.48f, 0);
						}
						else if (Local_124.f_675 == 5)
						{
							TASK::TASK_TURN_PED_TO_FACE_COORD(Local_124.f_12, 1000.06f, -3147.64f, -39.8878f, 0);
						}
					}
				}
				else
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
				}
			}
		}
	}
}

void func_435(var uParam0, struct<3> Param1, struct<3> Param2, int iParam3, int iParam4)//Position - 0x23E71
{
	__LIB_10__.func_839(uParam0);
	uParam0->f_1[0 /*3*/] = { Param1 };
	uParam0->f_8[0 /*3*/] = { Param2 };
	*uParam0 = 1;
	uParam0->f_21 = iParam3;
	uParam0->f_18 = iParam4;
	uParam0->f_20 = 0;
}

struct<2> func_436(struct<2> Param0)//Position - 0x62555
{
	return __LIB_3__.func_990((Param0.f_0 * (1f / 1920f)), (Param0.f_1 * (1f / 1080f)));
}

char* func_437(int iParam0)//Position - 0x64A1F
{
	switch (iParam0)
	{
		case 0:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DEG_GAME_LDB" /* GXT: Press ~INPUT_FRONTEND_CANCEL~ to go back. */;
			}
			else
			{
				return "DEG_GAME_LDB_PC" /* GXT: Press ~INPUT_FRONTEND_CANCEL~ to go back. */;
			}
			break;
		case 1:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DEG_GAME_LDB_ENT" /* GXT: Press ~INPUT_SCRIPT_LB~/~INPUT_SCRIPT_RB~ to change letters.~n~Press ~INPUT_FRONTEND_ACCEPT~ to move to the next letter.~n~Press ~INPUT_FRONTEND_CANCEL~ to go back to the last letter. */;
			}
			else
			{
				return "DEG_GAME_LDB_ENT_PC" /* GXT: Press ~INPUT_FRONTEND_UP~/~INPUT_FRONTEND_DOWN~ to change letters.~n~Press ~INPUT_CURSOR_ACCEPT~ to move to the next letter.~n~Press ~INPUT_CURSOR_CANCEL~ to go back to the last letter. */;
			}
			break;
		case 2:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DG_GAME_MENU" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~/~INPUTGROUP_SCRIPT_DPAD_UD~ to navigate the menu. ~n~Press ~INPUT_FRONTEND_ACCEPT~ to select.~n~Hold ~INPUT_FRONTEND_CANCEL~ to quit the game at any time. */;
			}
			else
			{
				return "DG_GAME_MENU_PC" /* GXT: Press ~INPUT_MOVE_UP_ONLY~~INPUT_MOVE_DOWN_ONLY~ to navigate the menu. ~n~Press ~INPUT_FRONTEND_ACCEPT~ to select.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 3:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DG_DEFENDER_CONTROLS" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~/~INPUTGROUP_SCRIPT_DPAD_ALL~ to move your ship. */;
			}
			else
			{
				return "DG_DEFENDER_CONTROLS_PC" /* GXT: Use ~INPUT_MOVE_UP_ONLY~~INPUT_MOVE_RIGHT_ONLY~~INPUT_MOVE_DOWN_ONLY~~INPUT_MOVE_LEFT_ONLY~ to move your ship. */;
			}
			break;
		case 4:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DG_MONKEY_CONTROLS" /* GXT: Press ~INPUT_SCRIPT_RDOWN~ when closest to the next branch to successfully move to the next branch. */;
			}
			else
			{
				return "DG_MONKEY_CONTROLS_PC" /* GXT: Press ~INPUT_SCRIPT_RDOWN~ or ~INPUT_JUMP~ when closest to the next branch to successfully move to the next branch. */;
			}
			break;
		case 5:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DG_PENETRATOR_CONTROLS" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~/~INPUTGROUP_SCRIPT_DPAD_LR~ to move around the rim. ~n~Press ~INPUT_SCRIPT_RDOWN~/~INPUT_SCRIPT_RT~ to shoot incoming green squares to avoid being penetrated. */;
			}
			else
			{
				return "DG_PENETRATOR_CONTROLS_PC" /* GXT: Use ~INPUT_MOVE_LEFT_ONLY~~INPUT_MOVE_RIGHT_ONLY~ to move around the rim. ~n~Press ~INPUT_SCRIPT_RDOWN~ or ~INPUT_JUMP~ to shoot incoming green squares to avoid being penetrated. */;
			}
			break;
		case 6:
			return "DG_DEFENDER_HELP" /* GXT: Collect ~HUD_COLOUR_GREEN~green~s~ squares while avoiding ~HUD_COLOUR_BLUELIGHT~blue~s~ squares. */;
			break;
		case 7:
			return "DG_DEFENDER_HELP_2" /* GXT: Collect all ~HUD_COLOUR_GREEN~green~s~ squares to progress to the next stage. */;
			break;
		case 8:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "DG_MONKEY_HELP" /* GXT: Press ~INPUT_SCRIPT_RDOWN~ to move to the next stage. */;
			}
			else
			{
				return "DG_MONKEY_HELP_PC" /* GXT: Press ~INPUT_SCRIPT_RDOWN~ or ~INPUT_JUMP~ to move to the next stage. */;
			}
			break;
		case 9:
			if (__LIB_0__.func_52())
			{
				return "GGSM_H_TITLE_PS4" /* GXT: Press ~INPUT_FRONTEND_PAUSE~ OPTIONS to start.~n~Hold ~INPUT_FRONTEND_CANCEL~ to quit the game at any time. */;
			}
			else if (MISC::IS_PC_VERSION())
			{
				if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
				{
					return "GGSM_H_TITLE_PC_KB" /* GXT: Press ~INPUT_FRONTEND_ACCEPT~ to start.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
				}
				else
				{
					return "GGSM_H_TITLE_PC" /* GXT: Press ~INPUT_FRONTEND_ACCEPT~ to start.~n~Hold ~INPUT_FRONTEND_CANCEL~ to quit the game at any time. */;
				}
			}
			else
			{
				return "GGSM_H_TITLE" /* GXT: Press ~INPUT_FRONTEND_PAUSE~ to start.~n~Hold ~INPUT_FRONTEND_CANCEL~ to quit the game at any time. */;
			}
			break;
		case 10:
			if (__LIB_0__.func_52())
			{
				return "GGSM_H_CONTINUE_PS4" /* GXT: Press ~INPUT_FRONTEND_ACCEPT~ or ~INPUT_FRONTEND_PAUSE~ OPTIONS to continue. */;
			}
			else if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "GGSM_H_CONTINUE" /* GXT: Press ~INPUT_FRONTEND_PAUSE~ or ~INPUT_FRONTEND_ACCEPT~ to continue. */;
			}
			else
			{
				return "GGSM_H_CONTINUE_PC" /* GXT: Press ~INPUT_FRONTEND_ACCEPT~ to continue. */;
			}
			break;
		case 11:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "GGSM_H_MOVE" /* GXT: Use ~INPUTGROUP_FRONTEND_LSTICK_ALL~ to move your ship. */;
			}
			else
			{
				return "GGSM_H_MOVE_PC" /* GXT: Use ~INPUT_MOVE_UP_ONLY~~INPUT_MOVE_RIGHT_ONLY~~INPUT_MOVE_DOWN_ONLY~~INPUT_MOVE_LEFT_ONLY~ to move your ship. */;
			}
			break;
		case 12:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "GGSM_H_SHOOT" /* GXT: Use ~INPUT_SCRIPT_RDOWN~ or ~INPUT_SCRIPT_RT~ to fire your main weapon. */;
			}
			else
			{
				return "GGSM_H_SHOOT_PC" /* GXT: Use ~INPUT_SCRIPT_RDOWN~ to fire your main weapon. */;
			}
			break;
		case 13:
			return "GGSM_H_POW" /* GXT: Collect powerups to upgrade your ship and weapons. */;
			break;
		case 14:
			return "GGSM_H_SPWPN" /* GXT: Use ~INPUT_SCRIPT_RUP~ to deploy your special weapon. */;
			break;
		case 15:
			return "GGSM_H_DEFWPN" /* GXT: Use ~INPUT_SCRIPT_RLEFT~ to deploy your defensive weapon. */;
			break;
		case 16:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "BADII_AIM" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~/~INPUTGROUP_SCRIPT_RSTICK_ALL~ to move the reticle. When over a target press ~INPUT_SCRIPT_RT~/~INPUT_FRONTEND_ACCEPT~ to shoot. */;
			}
			else
			{
				return "BADII_AIMPC" /* GXT: Use ~INPUTGROUP_CURSOR~ to move the reticle. When over a target press ~INPUT_CURSOR_ACCEPT~ to shoot. */;
			}
			break;
		case 17:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "BADII_RELOAD" /* GXT: Press ~INPUT_SCRIPT_RB~/~INPUT_FRONTEND_CANCEL~ at any time to reload your weapon. */;
			}
			else
			{
				return "BADII_RELPC" /* GXT: Press ~INPUT_CURSOR_CANCEL~ at any time to reload your weapon. */;
			}
			break;
		case 18:
			return "BADII_HSHOT" /* GXT: Shoot enemies in the head for an instant kill. */;
			break;
		case 19:
			return "BADII_CHEST" /* GXT: Chests can contain powerups and new weapons, shoot them to reveal their contents, collect powerups by shooting them. */;
			break;
		case 20:
			return "BADII_CHAIN" /* GXT: Chain together shots on target for additional bonus points. */;
			break;
		case 43:
			return "BADII_DEA" /* GXT: Challenge Complete:~n~Dead Eye: Get over ~1~% accuracy for an entire playthrough of Badlands Revenge II. */;
			break;
		case 44:
			return "BADII_PAD" /* GXT: Challenge Complete:~n~Pistols At Dawn: Complete Badlands Revenge II using only pistols. */;
			break;
		case 45:
			return "BADII_SSH" /* GXT: Challenge Complete:~n~Sharpshooter: Kill ~1~ flying critters across all levels of Badlands Revenge II. */;
			break;
		case 21:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "BADII_FRONT" /* GXT: Hold ~INPUT_FRONTEND_CANCEL~ to exit. */;
			}
			else
			{
				return "BADII_FRONTPC" /* GXT: Hold ~INPUT_FRONTEND_DELETE~ to exit. */;
			}
			break;
		case 22:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_MENU" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~ or ~INPUTGROUP_SCRIPT_DPAD_LR~ to make your Music and City choice. Select with ~INPUT_SCRIPT_RT~ or ~INPUT_FRONTEND_ACCEPT~. */;
			}
			else
			{
				return "RNC_HELP_MENU_PC" /* GXT: Use ~INPUT_CELLPHONE_LEFT~/~INPUT_CELLPHONE_RIGHT~ or ~INPUT_MOVE_LEFT_ONLY~/~INPUT_MOVE_RIGHT_ONLY~ to make your Music and City choice. Select with ~INPUT_CELLPHONE_UP~ or ~INPUT_VEH_ACCELERATE~. */;
			}
			break;
		case 23:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_DRIVE" /* GXT: Steer with ~INPUTGROUP_SCRIPT_LSTICK_ALL~ or ~INPUTGROUP_SCRIPT_DPAD_LR~.~n~Accelerate with ~INPUT_SCRIPT_RT~ or ~INPUT_FRONTEND_ACCEPT~.~n~Brake with ~INPUT_SCRIPT_LT~ or ~INPUT_FRONTEND_RLEFT~.~n~Shift gears with ~INPUT_SCRIPT_RB~ or ~INPUT_FRONTEND_CANCEL~.~n~Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_DRIVE_PC" /* GXT: Steer with ~INPUT_CELLPHONE_LEFT~/~INPUT_CELLPHONE_RIGHT~ or ~INPUT_MOVE_LEFT_ONLY~/~INPUT_MOVE_RIGHT_ONLY~.~n~Accelerate with ~INPUT_CELLPHONE_UP~ or ~INPUT_VEH_ACCELERATE~.~n~Brake with ~INPUT_DUCK~ or ~INPUT_VEH_BRAKE~.~n~Shift gears with ~INPUT_SPRINT~.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 24:
			return "RNC_HELP_HINT_SPEED" /* GXT: HINT: Maintain high speeds to gain score multipliers! */;
		case 25:
			return "RNC_HELP_HINT_SKIMMING" /* GXT: HINT: Drive close to pedestrians and behind other vehicles for additional points!~n~Try to avoid crashing into them though! */;
		case 26:
			return "RNC_HELP_HINT_SLIPSTREAM" /* GXT: HINT: Driving behind other vehicles will increase your top speed! */;
		case 27:
			return "RNC_HELP_HINT_CROSSERS" /* GXT: HINT: If you clear the checkpoint in a short space of time a special character will appear! */;
		case 28:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_EXIT" /* GXT: Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_EXIT_PC" /* GXT: Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 30:
			return "RNC_HELP_CHALLENGE_READY" /* GXT: There is another player sitting in the adjacent cab.~n~Press ~INPUT_FRONTEND_PAUSE~ to challenge them to a 2P race! */;
		case 29:
			return "RNC_HELP_CHALLENGE" /* GXT: The player in the adjacent cab has challenged you!~n~Press ~INPUT_FRONTEND_PAUSE~ to enter a 2 player race! */;
		case 31:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_REMATCH" /* GXT: Challenge your rival to a rematch with ~INPUT_SCRIPT_RT~ or ~INPUT_FRONTEND_ACCEPT~.~n~Return to Singleplayer mode with ~INPUT_SCRIPT_LT~ or ~INPUT_FRONTEND_RLEFT~.~n~Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_REMATCH_PC" /* GXT: Challenge your rival to a rematch with ~INPUT_VEH_ACCELERATE~ or ~INPUT_FRONTEND_ACCEPT~.~n~Return to Singleplayer mode with ~INPUT_DUCK~ or ~INPUT_VEH_BRAKE~.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 32:
			return "RNC_HELP_CHALLENGE_MADE" /* GXT: You have made a challenge to the adjacent player!~n~If they accept you will be taken to the 2 player menu! */;
		case 33:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_LEADERBOARD" /* GXT: Press ~INPUT_SCRIPT_RT~ or ~INPUT_FRONTEND_ACCEPT~ to go back and try again!~n~Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_LEADERBOARD_PC" /* GXT: Press ~INPUT_CELLPHONE_UP~ or ~INPUT_VEH_ACCELERATE~ to go back and try again!~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 34:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_LEADERBOARD_OUT" /* GXT: You did not meet the minimum score to place on the Leaderboard.~n~Press ~INPUT_SCRIPT_RT~ or ~INPUT_FRONTEND_ACCEPT~ to go back and try again!~n~Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_LEADERBOARD_OUT_PC" /* GXT: You did not meet the minimum score to place on the Leaderboard.~n~Press ~INPUT_CELLPHONE_UP~ or ~INPUT_VEH_ACCELERATE~ to go back and try again!~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 42:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "RNC_HELP_LEADERBOARD_VIEW" /* GXT: View the Leaderboard by pressing ~INPUT_FRONTEND_CANCEL~.~n~Hold ~INPUT_SCRIPT_RUP~ to quit the game at any time. */;
			}
			else
			{
				return "RNC_HELP_LEADERBOARD_VIEW_PC" /* GXT: View the Leaderboard by pressing ~INPUT_SPRINT~.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 35:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_MOVE" /* GXT: Move Thog using ~INPUTGROUP_SCRIPT_LSTICK_ALL~ or ~INPUTGROUP_SCRIPT_DPAD_ALL~.~n~Hold ~INPUT_FRONTEND_CANCEL~ to quit the game at any time. */;
			}
			else
			{
				return "TWR_HELP_MOVE_PC" /* GXT: Move Thog using ~INPUT_MOVE_UP_ONLY~~INPUT_MOVE_RIGHT_ONLY~~INPUT_MOVE_DOWN_ONLY~~INPUT_MOVE_LEFT_ONLY~.~n~Hold ~INPUT_FRONTEND_DELETE~ to quit the game at any time. */;
			}
			break;
		case 36:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_ATTACK" /* GXT: Press ~INPUT_SCRIPT_RRIGHT~ to attack. */;
			}
			else
			{
				return "TWR_HELP_ATTACK_PC" /* GXT: Press ~INPUT_FRONTEND_LEFT~ to attack. */;
			}
			break;
		case 37:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_JUMP" /* GXT: Press ~INPUT_SCRIPT_RDOWN~ to jump. */;
			}
			else
			{
				return "TWR_HELP_JUMP_PC" /* GXT: Press ~INPUT_JUMP~ to jump. */;
			}
			break;
		case 38:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_DASH" /* GXT: Press ~INPUT_SCRIPT_RLEFT~ to dash using magic. */;
			}
			else
			{
				return "TWR_HELP_DASH_PC" /* GXT: Press ~INPUT_FRONTEND_DOWN~ to dash using magic. */;
			}
			break;
		case 39:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_JUMP_ATTACK" /* GXT: Press ~INPUT_SCRIPT_RRIGHT~ while in the air to perform a jumping attack. */;
			}
			else
			{
				return "TWR_HELP_JUMP_ATTACK_PC" /* GXT: Press ~INPUT_FRONTEND_LEFT~ while in the air to perform a jumping attack. */;
			}
			break;
		case 40:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_MAGIC" /* GXT: Hold ~INPUT_SCRIPT_RUP~ to use a magic attack. */;
			}
			else
			{
				return "TWR_HELP_MAGIC_PC" /* GXT: Hold ~INPUT_FRONTEND_RIGHT~ to use a magic attack. */;
			}
			break;
		case 41:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "TWR_HELP_EVOLUTION" /* GXT: Your XP bar is now full; you can make use of the magic or press ~INPUT_SCRIPT_RB~ to evolve Thog. */;
			}
			else
			{
				return "TWR_HELP_EVOLUTION_PC" /* GXT: Your XP bar is now full; you can make use of the magic or press ~INPUT_FRONTEND_UP~ to evolve Thog. */;
			}
			break;
		case 46:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_AIM" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~ to move the reticle.~n~Press ~INPUT_SCRIPT_RT~/~INPUT_FRONTEND_ACCEPT~ to select an option.~n~Hold ~INPUT_FRONTEND_CANCEL~ to exit at any time. */;
			}
			else
			{
				return "CMHDZ_AIMPC" /* GXT: Use ~INPUTGROUP_CURSOR~ to move the reticle.~n~Press ~INPUT_CURSOR_ACCEPT~ to select an option.~n~Hold ~INPUT_FRONTEND_DELETE~ to exit. */;
			}
			break;
		case 48:
			return "CMHDZ_HSHOT" /* GXT: Enemies take more damage when shot in the head. */;
			break;
		case 47:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_SHOOT" /* GXT: Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~ to move the reticle.~n~When over a target, press ~INPUT_SCRIPT_RT~/~INPUT_FRONTEND_ACCEPT~ to shoot. */;
			}
			else
			{
				return "CMHDZ_SHOOTPC" /* GXT: Use ~INPUTGROUP_CURSOR~ to move the reticle.~n~When over a target, press ~INPUT_CURSOR_ACCEPT~ to shoot. */;
			}
			break;
		case 49:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_RELOAD" /* GXT: Press ~INPUT_FRONTEND_CANCEL~/~INPUT_SCRIPT_RB~ at any time to reload your weapon. */;
			}
			else
			{
				return "CMHDZ_RELOADPC" /* GXT: Press ~INPUT_CURSOR_CANCEL~ at any time to reload your weapon. */;
			}
			break;
		case 56:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_THROW" /* GXT: Press ~INPUT_SCRIPT_LB~ to use your throwing weapon.~n~The brick weapon temporarily freezes enemies in place when thrown.~n~There's a short cooldown before you can throw it again. */;
			}
			else
			{
				return "CMHDZ_THROWPC" /* GXT: Press ~INPUT_SPRINT~/~INPUT_DUCK~/~INPUT_PHONE~ to use your throwing weapon.~n~The brick weapon temporarily freezes enemies in place when thrown.~n~There's a short cooldown before you can throw it again. */;
			}
			break;
		case 50:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_MICROAIM" /* GXT: Use ~INPUTGROUP_SCRIPT_RSTICK_ALL~ to move the reticle relative to how far you move it.~n~Return ~INPUTGROUP_SCRIPT_RSTICK_ALL~ to neutral to reset the reticle position.~n~Use ~INPUTGROUP_SCRIPT_LSTICK_ALL~ and ~INPUTGROUP_SCRIPT_RSTICK_ALL~ together for maximum control. */;
			}
			break;
		case 63:
			if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				return "CMHDZ_WEAPON_NAIL" /* GXT: Nailgun Ammo has rapid fire when ~INPUT_SCRIPT_RT~/~INPUT_FRONTEND_ACCEPT~ is held.~n~Shoot the Ammo Pickup to equip the weapon. */;
			}
			else
			{
				return "CMHDZ_WEAPON_NAILPC" /* GXT: Nailgun Ammo has rapid fire when ~INPUT_CURSOR_ACCEPT~ is held.~n~Shoot the Ammo to equip the weapon. */;
			}
			break;
		case 64:
			return "CMHDZ_WEAPON_RIFLE" /* GXT: Rifle Ammo has higher accuracy and damage.~n~Shoot the Ammo Pickup to equip the weapon. */;
			break;
		case 65:
			return "CMHDZ_WEAPON_SHOTGUN" /* GXT: Shotgun Ammo has wider spread.~n~Shoot the Ammo Pickup to equip the weapon. */;
			break;
		case 68:
			return "CMHDZ_DYNAMITE" /* GXT: Shoot dynamite thrown by enemies to make it explode before it hits you.~n~All enemies on screen will die if done right. */;
			break;
		case 55:
			return "CMHDZ_POWER_CASH" /* GXT: Cash awards a ~1~ point bonus.~n~Shoot it to pick it up. */;
			break;
		case 52:
			return "CMHDZ_POWER_HEALTH" /* GXT: Heart pills restore health.~n~Shoot them to pick them up. */;
			break;
		case 54:
			return "CMHDZ_POWER_PILLS" /* GXT: Shield pills give temporary invulnerability.~n~Shoot them to pick them up. */;
			break;
		case 53:
			return "CMHDZ_POWER_BUFF" /* GXT: Buff pills give a temporary damage boost.~n~Shoot them to pick them up. */;
			break;
		case 57:
			return "CMHDZ_POWER_VIDEO" /* GXT: Video Tapes award a ~1~ point bonus.~n~Shoot them to pick them up. */;
			break;
		case 58:
			return "CMHDZ_THROW_MOLOTOV" /* GXT: Molotov kills all enemies on-screen when thrown.~n~Shoot the Molotov Pickup to equip the throwing weapon.~n~This will replace the Brick until the Ammo count is depleted. */;
			break;
		case 66:
			return "CMHDZ_THROW_NAILBOMB" /* GXT: Nailbomb freezes multiple enemies in range when thrown.~n~Shoot the Nailbomb Pickup to equip the throwing weapon.~n~This will replace the Brick until the Ammo count is depleted. */;
			break;
		case 59:
			return "CMHDZ_dynamite" /* GXT: Shoot dynamite thrown by enemies to make it explode before it hits you.~n~All enemies on screen will die if done right. */;
			break;
		case 51:
			return "CMHDZ_BEARSY" /* GXT: Bearsy is vulnerable when he flashes green.~n~Shoot him while he's in this state to stagger him.~n~If you are too slow or run out of time, Bearsy will attack. */;
			break;
		case 60:
			return "CMHDZ_BEARSY" /* GXT: Bearsy is vulnerable when he flashes green.~n~Shoot him while he's in this state to stagger him.~n~If you are too slow or run out of time, Bearsy will attack. */;
			break;
		case 61:
			return "CMHDZ_MON" /* GXT: Monkey See Monkey Die:~n~Kill both the Monkey and the Bunny girl. */;
			break;
		case 62:
			return "CMHDZ_DEA" /* GXT: Challenge Complete:~n~Trained to Kill: Get over ~1~% accuracy for a complete playthrough of Camhedz. */;
			break;
		case 67:
			return "CMHDZ_FOD" /* GXT: Challenge Complete:~n~Faces of Death: Get over ~1~ headshots across all levels of Camhedz. */;
			break;
	}
	return "";
}

bool func_438(int iParam0, int iParam1)//Position - 0x1EA48C
{
	return __LIB_2__.func_78(iParam0) == iParam1;
}

void func_439(int iParam0)//Position - 0x21A0
{
	if (Global_117[iParam0 /*10*/].f_8 != 166)
	{
		__LIB_0__.func_169(iParam0, 0, 0);
		__LIB_0__.func_169(iParam0, 1, 0);
		__LIB_0__.func_169(iParam0, 2, 0);
		__LIB_0__.func_168(iParam0, 0, 0);
		__LIB_0__.func_168(iParam0, 1, 0);
		__LIB_0__.func_168(iParam0, 2, 0);
	}
}

void func_440(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x66CA8
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

bool func_441(int* iParam0)//Position - 0x6DAE3
{
	if (__LIB_9__.func_983())
	{
		*iParam0 = 11;
		return 1;
	}
	return NETWORK::NETWORK_CAN_ACCESS_MULTIPLAYER(iParam0);
}

int func_442(int* iParam0, bool bParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x975F6
{
	int iVar0;
	if (!__LIB_0__.func_317(bParam1))
	{
		iVar0 = __LIB_0__.func_397(bParam1);
		STREAMING::REQUEST_MODEL(iVar0);
		if (STREAMING::HAS_MODEL_LOADED(iVar0))
		{
			if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				PED::DELETE_PED(iParam0);
			}
			if (ENTITY::DOES_ENTITY_EXIST(iParam2) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam2, false))
			{
				*iParam0 = PED::CREATE_PED_INSIDE_VEHICLE(iParam2, 26, iVar0, iParam3, false, false);
				PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam0);
				__LIB_0__.func_366(*iParam0, bParam1);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
				}
			}
			return 1;
		}
	}
	return 0;
}

float func_443(float fParam0, float fParam1, float fParam2)//Position - 0xA5B33
{
	float fVar0;
	fVar0 = (0.5f * (1f - SYSTEM::COS(__LIB_0__.func_407((fParam2 * 3.1415927f)))));
	return ((fParam0 * (1f - fVar0)) + (fParam1 * fVar0));
}

int func_444(int iParam0, int iParam1, bool bParam2)//Position - 0xAA6BB
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		if (bParam2)
		{
			Var5 = { ENTITY::GET_ENTITY_VELOCITY(iParam1) };
			Var4 = { Var5 / FtoV(SYSTEM::VMAG(Var5)) };
		}
		else
		{
			Var2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iParam1, 0f, 5f, 0f) };
			Var4 = { Var2 - Var1 };
		}
	}
	Var3 = { Var1 - Var0 };
	Var3.f_2 = 0f;
	Var4.f_2 = 0f;
	if (__LIB_0__.func_156(Var3, Var4) < 0f)
	{
		return 1;
	}
	return 0;
}

void func_445(bool bParam0, int iParam1)//Position - 0xAD9DF
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (bParam0 == 145 || Global_97782[iVar0] == bParam0)
			{
				if (iParam1 == 0 || ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == __LIB_6__.func_830(bParam0, iParam1))
				{
					if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_97772[iVar0], false))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_97772[iVar0], false, true);
						VEHICLE::DELETE_VEHICLE(&(Global_97772[iVar0]));
						Global_97782[iVar0] = 145;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_446(int iParam0)//Position - 0xAF67C
{
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_11__.func_902(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(Global_77137.f_139[iParam0]));
			Global_77137.f_139[iParam0] = 0;
		}
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			__LIB_6__.func_770(iParam0, 0);
		}
	}
}

void func_447(var uParam0, int iParam1)//Position - 0x19792
{
	float fVar0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	struct<3> Var7;
	float fVar8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	struct<3> Var12;
	float fVar13;
	float fVar14;
	struct<3> Var15;
	struct<3> Var16;
	struct<3> Var17;
	float fVar18;
	struct<3> Var19;
	int iVar20;
	if (__LIB_11__.func_111(uParam0, iParam1))
	{
		__LIB_11__.func_118(uParam0, iParam1);
	}
	if (uParam0->f_10[iParam1 /*57*/].f_21 == 0f)
	{
		fVar0 = CAM::GET_GAMEPLAY_CAM_FOV();
	}
	else
	{
		fVar0 = uParam0->f_10[iParam1 /*57*/].f_21;
	}
	if (__LIB_11__.func_117(uParam0, iParam1))
	{
		__LIB_11__.func_116(uParam0, iParam1);
		if (iParam1 == (uParam0->f_1217 - 1))
		{
			uParam0->f_10[iParam1 /*57*/].f_54 = 0;
		}
	}
	if (iParam1 == (uParam0->f_1217 - 1))
	{
		uParam0->f_10[iParam1 /*57*/].f_54 = 0;
	}
	if (uParam0->f_10[iParam1 /*57*/].f_2 == 4)
	{
		if (uParam0->f_10[iParam1 /*57*/].f_3 > -1)
		{
			Var1 = { __LIB_11__.func_115(uParam0, uParam0->f_10[iParam1 /*57*/].f_3) };
		}
		else
		{
			Var1 = { uParam0->f_10[iParam1 /*57*/].f_13 };
		}
		if ((iParam1 == 0 || (iParam1 > 0 && uParam0->f_10[(iParam1 - 1) /*57*/].f_4)) || (iParam1 > 0 && uParam0->f_10[(iParam1 - 1) /*57*/].f_2 == 2))
		{
			Var2 = { CAM::GET_GAMEPLAY_CAM_COORD() };
		}
		else
		{
			Var2 = { uParam0->f_10[(iParam1 - 1) /*57*/].f_6 };
			if (__LIB_11__.func_114(uParam0, (iParam1 - 1)))
			{
				ENTITY::GET_ENTITY_MATRIX(__LIB_11__.func_176(uParam0, (iParam1 - 1), -1), &Var3, &Var4, &Var5, &Var6);
				if (uParam0->f_10[iParam1 /*57*/].f_20)
				{
					Var2 = { Var6 + Var3 * FtoV(uParam0->f_10[(iParam1 - 1) /*57*/].f_6.f_1) + Var4 * FtoV(uParam0->f_10[(iParam1 - 1) /*57*/].f_6) + Var5 * FtoV(uParam0->f_10[(iParam1 - 1) /*57*/].f_6.f_2) };
				}
				else
				{
					Var2 = { Var6 + uParam0->f_10[(iParam1 - 1) /*57*/].f_6 };
				}
			}
		}
		Var7 = { Var1 - Var2 };
		fVar8 = (SYSTEM::VMAG(Var7) - uParam0->f_10[iParam1 /*57*/].f_12);
		Var7 = { __LIB_0__.func_79(Var7) };
		Var7 = { Var7 * Vector(fVar8, fVar8, fVar8) };
		uParam0->f_10[iParam1 /*57*/].f_6 = { Var2 + Var7 };
		if (uParam0->f_10[iParam1 /*57*/].f_3 > -1)
		{
			uParam0->f_10[iParam1 /*57*/].f_13 = { Var1 };
		}
	}
	else if (uParam0->f_10[iParam1 /*57*/].f_2 == 5 || uParam0->f_10[iParam1 /*57*/].f_2 == 6)
	{
		Var9 = { 0f, 0f, 0f };
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_11__.func_176(uParam0, uParam0->f_1218, -1)))
		{
			if (uParam0->f_10[iParam1 /*57*/].f_3 > -1)
			{
				Var9 = { __LIB_11__.func_115(uParam0, uParam0->f_10[iParam1 /*57*/].f_3) };
			}
			else
			{
				Var9 = { ENTITY::GET_ENTITY_COORDS(__LIB_11__.func_176(uParam0, uParam0->f_1218, -1), true) };
			}
		}
		Var10 = { CAM::GET_GAMEPLAY_CAM_ROT(2) };
		Var11 = { CAM::GET_GAMEPLAY_CAM_COORD() };
		Var12 = { Var9 - Var11 };
		fVar13 = 0f;
		if (iParam1 < uParam0->f_1218 || uParam0->f_1218 == 0)
		{
			fVar13 = uParam0->f_10[iParam1 /*57*/].f_12;
		}
		fVar14 = (SYSTEM::VMAG(Var12) - fVar13);
		Var12 = { __LIB_9__.func_240(Var10) };
		Var11 = { Var11 + Var12 * Vector(fVar13, fVar13, fVar13) };
		if (iParam1 < uParam0->f_1218)
		{
			uParam0->f_10[iParam1 /*57*/].f_6 = { Var11 };
		}
		else
		{
			uParam0->f_10[iParam1 /*57*/].f_6 = { Var11 + Var12 * FtoV((fVar14 - uParam0->f_10[iParam1 /*57*/].f_12)) };
		}
		uParam0->f_10[iParam1 /*57*/].f_9 = { Var10 };
	}
	else if (uParam0->f_10[iParam1 /*57*/].f_2 == 7)
	{
		Var15 = { uParam0->f_10[iParam1 /*57*/].f_13 };
		Var16 = { ENTITY::GET_ENTITY_COORDS(__LIB_11__.func_176(uParam0, iParam1, -1), true) };
		Var17 = { Var15 - Var16 };
		fVar18 = 0f;
		fVar18 = uParam0->f_10[iParam1 /*57*/].f_12;
		Var17 = { __LIB_0__.func_79(Var17) };
		Var19 = { Var16 + Var17 * Vector(fVar18, fVar18, fVar18) };
		Var19.f_2 = (Var19.f_2 + uParam0->f_10[iParam1 /*57*/].f_16);
		uParam0->f_10[iParam1 /*57*/].f_6 = { Var19 };
	}
	if (uParam0->f_10[iParam1 /*57*/].f_2 == 8)
	{
		__LIB_11__.func_113(uParam0, iParam1);
		fVar0 = uParam0->f_10[iParam1 /*57*/].f_21;
	}
	uParam0->f_10[iParam1 /*57*/].f_1 = CAM::CREATE_CAMERA_WITH_PARAMS(joaat("DEFAULT_SCRIPTED_CAMERA"), uParam0->f_10[iParam1 /*57*/].f_6, uParam0->f_10[iParam1 /*57*/].f_9, fVar0, true, 2);
	iVar20 = uParam0->f_10[iParam1 /*57*/].f_1;
	if (CAM::DOES_CAM_EXIST(uParam0->f_10[iParam1 /*57*/].f_1))
	{
		CAM::SET_CAM_MOTION_BLUR_STRENGTH(iVar20, uParam0->f_10[iParam1 /*57*/].f_22);
		if (uParam0->f_10[iParam1 /*57*/].f_2 == 4)
		{
			CAM::POINT_CAM_AT_COORD(iVar20, uParam0->f_10[iParam1 /*57*/].f_13);
		}
		if (uParam0->f_10[iParam1 /*57*/].f_2 == 3 && uParam0->f_10[iParam1 /*57*/].f_3 > -1)
		{
			CAM::POINT_CAM_AT_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, uParam0->f_10[iParam1 /*57*/].f_3), uParam0->f_10[iParam1 /*57*/].f_9, uParam0->f_10[iParam1 /*57*/].f_19);
		}
		if (uParam0->f_10[iParam1 /*57*/].f_2 == 6)
		{
			if (uParam0->f_10[iParam1 /*57*/].f_3 > -1)
			{
				CAM::ATTACH_CAM_TO_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, uParam0->f_10[iParam1 /*57*/].f_3), uParam0->f_10[iParam1 /*57*/].f_6 - __LIB_11__.func_115(uParam0, uParam0->f_10[iParam1 /*57*/].f_3) + uParam0->f_10[iParam1 /*57*/].f_24, false);
			}
			else
			{
				CAM::ATTACH_CAM_TO_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, -1), uParam0->f_10[iParam1 /*57*/].f_9, false);
			}
		}
		if (uParam0->f_10[iParam1 /*57*/].f_2 == 7)
		{
			if (uParam0->f_10[iParam1 /*57*/].f_17)
			{
				CAM::ATTACH_CAM_TO_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, -1), uParam0->f_10[iParam1 /*57*/].f_6 - ENTITY::GET_ENTITY_COORDS(__LIB_11__.func_176(uParam0, iParam1, -1), true), false);
			}
		}
		if (__LIB_11__.func_114(uParam0, iParam1))
		{
			if (ENTITY::DOES_ENTITY_EXIST(__LIB_11__.func_176(uParam0, iParam1, -1)))
			{
				CAM::ATTACH_CAM_TO_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, -1), uParam0->f_10[iParam1 /*57*/].f_6, uParam0->f_10[iParam1 /*57*/].f_20);
				if (uParam0->f_10[iParam1 /*57*/].f_18)
				{
					if (uParam0->f_10[iParam1 /*57*/].f_3 > -1)
					{
						CAM::POINT_CAM_AT_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, uParam0->f_10[iParam1 /*57*/].f_3), uParam0->f_10[iParam1 /*57*/].f_9, uParam0->f_10[iParam1 /*57*/].f_19);
					}
					else
					{
						CAM::POINT_CAM_AT_ENTITY(iVar20, __LIB_11__.func_176(uParam0, iParam1, -1), uParam0->f_10[iParam1 /*57*/].f_9, uParam0->f_10[iParam1 /*57*/].f_19);
					}
				}
			}
		}
		if (uParam0->f_10[iParam1 /*57*/].f_2 == 7)
		{
			CAM::POINT_CAM_AT_COORD(iVar20, uParam0->f_10[iParam1 /*57*/].f_13);
		}
		if (uParam0->f_10[iParam1 /*57*/].f_46)
		{
			__LIB_11__.func_112(uParam0, iParam1);
		}
	}
	uParam0->f_10[iParam1 /*57*/].f_55 = 0;
	uParam0->f_10[iParam1 /*57*/].f_56 = 0;
}

int func_448(var uParam0)//Position - 0x1A4BA
{
	*uParam0 = *uParam0;
	if (__LIB_11__.func_120(uParam0))
	{
		STREAMING::REQUEST_ANIM_DICT("shake_cam_all@");
		if (STREAMING::HAS_ANIM_DICT_LOADED("shake_cam_all@"))
		{
			return 1;
		}
		return 0;
	}
	return 1;
}

int func_449(int iParam0)//Position - 0x569A8
{
	int iVar0;
	if (iParam0 == 1)
	{
	}
	if (iParam0 == 0)
	{
		if (__LIB_9__.func_984() == 0)
		{
			return 0;
		}
	}
	if (__LIB_20__.func_441(&iVar0) && MISC::GET_PROFILE_SETTING(903) == 1)
	{
		return 1;
	}
	if (!__LIB_20__.func_441(&iVar0))
	{
		if (iVar0 == 6)
		{
			return 1;
		}
		else if (iVar0 == 7)
		{
			return 1;
		}
		else if (iVar0 == 8)
		{
			return 1;
		}
		else if (iVar0 == 10)
		{
			return 1;
		}
		else if (iVar0 == 12)
		{
			return 1;
		}
		else if (iVar0 == 13)
		{
			return 1;
		}
		else if (iVar0 == 11)
		{
			return 1;
		}
	}
	return 0;
}

void func_450(int* iParam0, char* sParam1, char* sParam2, bool bParam3)//Position - 0x6AAEC
{
	if (!bParam3)
	{
		if (!MISC::IS_STRING_NULL(sParam1))
		{
			if (!MISC::ARE_STRINGS_EQUAL(sParam1, ""))
			{
				__LIB_0__.func_446(sParam1, sParam2, 7500, 1);
			}
		}
	}
	iParam0->f_10 = MISC::GET_GAME_TIMER();
}

int func_451(int* iParam0, int iParam1, float fParam2, bool bParam3)//Position - 0x6AEFC
{
	int iVar0;
	if (!PED::IS_PED_INJURED(iParam1))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam1))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(iParam1, false);
			if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0))
					{
						if (__LIB_11__.func_317(iParam0))
						{
							return 1;
						}
					}
					else if (bParam3)
					{
						return 1;
					}
				}
				else if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, fParam2, fParam2, 3f, false, true, 0))
				{
					return 1;
				}
			}
		}
		else if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam1, fParam2, fParam2, 3f, false, true, 0))
		{
			if (!bParam3)
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (__LIB_11__.func_161(iVar0, iParam0, 0))
					{
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
						{
							if (__LIB_0__.func_455(iVar0))
							{
								return 1;
							}
						}
					}
				}
				else
				{
					return 1;
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_452(struct<3> Param0, struct<3> Param1, struct<3> Param2)//Position - 0x82F8
{
	float fVar0;
	fVar0 = __LIB_0__.func_156(Param2 - Param1, Param0);
	if (fVar0 < 0f)
	{
		return -1;
	}
	else if (fVar0 > 0f)
	{
		return 1;
	}
	return 0;
}

void func_453(struct<3> Param0, struct<3> Param1, float fParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x2C389
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5[8];
	int iVar6;
	if (fParam2 == 0f)
	{
		return;
	}
	Var0 = { __LIB_0__.func_79(Param1 - Param0) };
	Var1 = { __LIB_0__.func_620(Var0, 0f, 0f, 1f) };
	fVar2 = (fParam2 / 2f);
	Var3 = { Param0 };
	Var4 = { Param1 };
	Var4.f_2 = Param0.f_2;
	Var5[0 /*3*/] = { Var3 - Var1 * Vector(fVar2, fVar2, fVar2) };
	Var5[1 /*3*/] = { Var3 + Var1 * Vector(fVar2, fVar2, fVar2) };
	Var5[2 /*3*/] = { Var4 + Var1 * Vector(fVar2, fVar2, fVar2) };
	Var5[3 /*3*/] = { Var4 - Var1 * Vector(fVar2, fVar2, fVar2) };
	GRAPHICS::DRAW_DEBUG_LINE(Var5[0 /*3*/], Var5[1 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[1 /*3*/], Var5[2 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[2 /*3*/], Var5[3 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[3 /*3*/], Var5[0 /*3*/], iParam3, iParam4, iParam5, iParam6);
	iVar6 = 0;
	while (iVar6 <= 3)
	{
		Var5[(4 + iVar6) /*3*/] = { Var5[iVar6 /*3*/] };
		Var5[(4 + iVar6) /*3*/].f_2 = Param1.f_2;
		iVar6++;
	}
	GRAPHICS::DRAW_DEBUG_LINE(Var5[4 /*3*/], Var5[5 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[5 /*3*/], Var5[6 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[6 /*3*/], Var5[7 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[7 /*3*/], Var5[4 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[0 /*3*/], Var5[4 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[1 /*3*/], Var5[5 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[2 /*3*/], Var5[6 /*3*/], iParam3, iParam4, iParam5, iParam6);
	GRAPHICS::DRAW_DEBUG_LINE(Var5[3 /*3*/], Var5[7 /*3*/], iParam3, iParam4, iParam5, iParam6);
}

void func_454(int iParam0)//Position - 0x1520
{
	int iVar0;
	iVar0 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iParam0);
	if (iVar0 == __LIB_0__.func_160())
	{
		return;
	}
	Global_2689235[iVar0 /*453*/].f_242 = 0;
}

void func_455(var uParam0, var uParam1, bool bParam2, bool bParam3, int iParam4, int iParam5)//Position - 0x16FF
{
	struct<3> Var0;
	float fVar1;
	fVar1 = uParam0->f_15[1];
	if (*uParam0 == 0)
	{
		return;
	}
	__LIB_11__.func_189(uParam1, 0);
	Var0 = { uParam0->f_1[0 /*3*/] };
	if (bParam2)
	{
		Var0.f_2 = (Var0.f_2 + uParam0->f_18);
	}
	*uParam1 = CAM::CREATE_CAM_WITH_PARAMS("DEFAULT_SCRIPTED_CAMERA", Var0, uParam0->f_8[0 /*3*/], uParam0->f_15[0], true, 2);
	if (!CAM::DOES_CAM_EXIST(*uParam1))
	{
		return;
	}
	uParam0->f_19 = MISC::GET_GAME_TIMER();
	CAM::SET_CAM_ACTIVE(*uParam1, true);
	CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
	if ((!bParam3 && uParam0->f_20 > 0) && !__LIB_0__.func_86(uParam0->f_1[1 /*3*/]))
	{
		Var0 = { uParam0->f_1[1 /*3*/] };
		if (bParam2)
		{
			Var0.f_2 = (Var0.f_2 + uParam0->f_18);
		}
		if (fVar1 == 0f)
		{
			fVar1 = uParam0->f_15[0];
		}
		CAM::SET_CAM_PARAMS(*uParam1, Var0, uParam0->f_8[1 /*3*/], fVar1, uParam0->f_20, iParam4, iParam5, 2);
	}
	else if (__LIB_0__.func_524(uParam0->f_21))
	{
		CAM::POINT_CAM_AT_ENTITY(*uParam1, uParam0->f_21, 0f, 0f, 0f, true);
	}
}

void func_456(struct<3> Param0, struct<3> Param1, float fParam2, bool bParam3)//Position - 0x1843
{
	float fVar0;
	struct<3> Var1;
	struct<3> Var2;
	float fVar3;
	fVar0 = MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Param1, true);
	Var1 = { Param0 };
	Var2 = { __LIB_0__.func_79(Param1 - Param0) };
	while (fVar3 < fVar0)
	{
		FIRE::STOP_FIRE_IN_RANGE(Var1, fParam2);
		if (bParam3)
		{
			MISC::CLEAR_AREA_OF_PROJECTILES(Var1, fParam2, 0);
		}
		Var1 = { Var1 + Var2 * FtoV((fParam2 / 2f)) };
		fVar3 = (fVar3 + (fParam2 / 2f));
	}
}

int func_457(int iParam0, var uParam1)//Position - 0x63A8
{
	int iVar0;
	int iVar1;
	if (!__LIB_0__.func_524(iParam0))
	{
		return 0;
	}
	iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
	if (!__LIB_0__.func_524(iParam0))
	{
		return 0;
	}
	if (!TASK::GET_IS_WAYPOINT_RECORDING_LOADED(uParam1->f_335))
	{
		return 0;
	}
	VEHICLE::SET_VEHICLE_DOORS_SHUT(iParam0, true);
	if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0))
	{
		VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(iParam0, true);
	}
	TASK::OPEN_SEQUENCE_TASK(&iVar1);
	TASK::TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(0, iParam0, uParam1->f_335, 262144, 0, 546, -1, uParam1->f_336, false, 1.25f);
	TASK::TASK_STAND_STILL(0, 3000);
	TASK::CLOSE_SEQUENCE_TASK(iVar1);
	TASK::TASK_PERFORM_SEQUENCE(iVar0, iVar1);
	TASK::CLEAR_SEQUENCE_TASK(&iVar1);
	TASK::VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(iParam0, uParam1->f_336);
	iLocal_57 = -1;
	uParam1->f_350 = 2;
	return 1;
}

void func_458(var uParam0)//Position - 0x6670
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_14)
	{
		__LIB_11__.func_184(&(uParam0->f_14[iVar0]));
		iVar0++;
	}
}

bool func_459(struct<3> Param0, float fParam1, int iParam2)//Position - 0x7121
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && __LIB_0__.func_530(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), Param0, fParam1, 1))
	{
		return 1;
	}
	if (!CAM::IS_SPHERE_VISIBLE(Param0, fParam1) && iParam2 == 1)
	{
		return 0;
	}
	return MISC::IS_POSITION_OCCUPIED(Param0, fParam1, false, true, false, false, false, 0, true);
}

bool func_460(int iParam0)//Position - 0x71EC
{
	if (!__LIB_0__.func_524(iParam0))
	{
		return 0;
	}
	return DECORATOR::DECOR_EXIST_ON(iParam0, "Carwash_Vehicle_Decorator");
}

void func_461(var uParam0)//Position - 0x780F
{
	__LIB_11__.func_184(&(uParam0->f_21));
	if (__LIB_0__.func_524(uParam0->f_19))
	{
		if (!GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(uParam0->f_21))
		{
			uParam0->f_21 = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY("ent_amb_car_wash", uParam0->f_19, 0f, 0f, 0f, Local_47, 1f, false, false, false);
		}
	}
}

void func_462(var uParam0)//Position - 0x835D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_3)
	{
		__LIB_11__.func_184(&(uParam0->f_6[iVar0]));
		if (__LIB_0__.func_524(uParam0->f_3[iVar0]))
		{
			if (!GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(uParam0->f_6[iVar0]))
			{
				uParam0->f_6[iVar0] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY("ent_amb_car_wash", uParam0->f_3[iVar0], Local_45, Local_46, 1f, false, false, false);
			}
		}
		iVar0++;
	}
}

int func_463(var uParam0)//Position - 0x2C088
{
	struct<3> Var0;
	int iVar1;
	int iVar2;
	iVar2 = PLAYER::PLAYER_PED_ID();
	if (uParam0->f_15 == 360f)
	{
		return 1;
	}
	if (__LIB_0__.func_86(uParam0->f_12))
	{
		return 1;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_0__.func_524(iVar1))
		{
			Var0 = { ENTITY::GET_ENTITY_ROTATION(iVar1, 2) };
			if (Var0.f_1 > 45f || Var0.f_1 < -45f)
			{
				return 0;
			}
			iVar2 = iVar1;
		}
	}
	Var0 = { ENTITY::GET_ENTITY_FORWARD_VECTOR(iVar2) };
	if (__LIB_0__.func_715(uParam0->f_12, Var0) > SYSTEM::COS(uParam0->f_15))
	{
		return 1;
	}
	return 0;
}

int func_464(var uParam0)//Position - 0x2C1EA
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(uParam0->f_14))
	{
		return 0;
	}
	if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		return 0;
	}
	if (MISC::ARE_STRINGS_EQUAL(*uParam0, uParam0->f_14) || MISC::ARE_STRINGS_EQUAL(uParam0->f_2, uParam0->f_14))
	{
		return __LIB_4__.func_66(uParam0->f_14, uParam0->f_15);
	}
	return __LIB_0__.func_1(uParam0->f_14);
}

bool func_465(var uParam0)//Position - 0x2C270
{
	struct<8> Var0;
	Var0 = 2;
	if (uParam0->f_6 == 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return 1;
		}
	}
	else if (uParam0->f_6 == 1)
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return 1;
		}
		if (__LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0) != -1)
		{
			return 1;
		}
	}
	if (uParam0->f_11 == 0)
	{
		return !__LIB_0__.func_530(PLAYER::PLAYER_PED_ID(), uParam0->f_1, (uParam0->f_10 + 2f), 1);
	}
	Var0 = { __LIB_11__.func_188(uParam0->f_16, 2f) };
	return !ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Var0[0 /*3*/], Var0[1 /*3*/], Var0.f_7, false, true, 0);
}

bool func_466(var uParam0)//Position - 0x2CA22
{
	__LIB_0__.func_524(PLAYER::PLAYER_PED_ID());
	if (*uParam0 == 0)
	{
		return 0;
	}
	if (__LIB_0__.func_104(0))
	{
		return 0;
	}
	if (__LIB_0__.func_190())
	{
		return 0;
	}
	if (uParam0->f_6 == 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return 0;
		}
	}
	else if (uParam0->f_6 == 1)
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return 0;
		}
		if (__LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0) != -1)
		{
			return 0;
		}
	}
	if (uParam0->f_11 == 1)
	{
		return ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), uParam0->f_16[0 /*3*/], uParam0->f_16[1 /*3*/], uParam0->f_16.f_7, false, true, 0);
	}
	return __LIB_0__.func_530(PLAYER::PLAYER_PED_ID(), uParam0->f_1, uParam0->f_10, 1);
}

void func_467(var uParam0, int iParam1)//Position - 0x2D223
{
	*uParam0 = "CWASH_RIDEHLP" /* GXT: Press ~INPUT_CONTEXT~ to use the Car Wash. The cost is $~1~. */;
	uParam0->f_1 = "";
	uParam0->f_3 = "CWASH_NOWAY" /* GXT: This vehicle cannot be used with the Car Wash. */;
	uParam0->f_4 = "CWASH_WANTED" /* GXT: You can't use the Car Wash while Wanted. */;
	uParam0->f_5 = "CWASH_CARBROKE" /* GXT: This vehicle is too damaged to be used with the Car Wash. */;
	uParam0->f_6 = "CWASH_BLOCKED" /* GXT: The Car Wash is blocked. Please come back later. */;
	uParam0->f_7 = "CWASH_WRONGWAY" /* GXT: Your vehicle needs to be pointing towards the Car Wash. */;
	uParam0->f_8 = "CWASH_UPSIDEDO" /* GXT: Your vehicle needs to be upright to use the Car Wash. */;
	uParam0->f_16 = iParam1;
	if (!Global_78319)
	{
		uParam0->f_2 = "CWASH_NOMONEY" /* GXT: You do not have enough money. It costs $~1~ to use the Car Wash. */;
		return;
	}
	if (MISC::IS_PS3_VERSION() || __LIB_0__.func_52())
	{
		uParam0->f_2 = "CWASH_POOR_PSN" /* GXT: It costs $~1~ to use the Car Wash.~n~You can buy additional GTA dollars from PlayStation®Store in the Pause Menu. */;
	}
	else if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
	{
		uParam0->f_2 = "CWASH_POOR_XBX" /* GXT: It costs $~1~ to use the Car Wash.~n~You can buy additional GTA dollars from the Xbox Store in the Pause Menu. */;
	}
	else
	{
		uParam0->f_2 = "CWASH_POOR_STD" /* GXT: It costs $~1~ to use the Car Wash.~n~You can buy additional GTA dollars from the Store in the Pause Menu. */;
	}
}

void func_468(var uParam0)//Position - 0x2D6E2
{
	if (__LIB_11__.func_203(*uParam0))
	{
		__LIB_11__.func_184(&(uParam0->f_21));
		__LIB_6__.func_352(&(uParam0->f_17));
		__LIB_6__.func_352(&(uParam0->f_16));
		__LIB_6__.func_352(&(uParam0->f_18));
		*uParam0 = 0;
	}
}

void func_469(var uParam0)//Position - 0x2D757
{
	if (__LIB_11__.func_203(uParam0->f_2))
	{
		__LIB_11__.func_184(&(uParam0->f_6[0]));
		__LIB_11__.func_184(&(uParam0->f_6[1]));
		__LIB_6__.func_352(&(uParam0->f_28));
		__LIB_6__.func_352(&(uParam0->f_27));
		__LIB_6__.func_352(&(uParam0->f_29));
		uParam0->f_2 = 0;
	}
}

int func_470(var uParam0, int iParam1, int iParam2)//Position - 0x17DC60
{
	float fVar0;
	bool bVar1;
	int iVar2;
	*uParam0 = (*uParam0 + MISC::GET_FRAME_TIME());
	fVar0 = SYSTEM::SIN(((*uParam0 * 1000f) + IntToFloat(iParam2)));
	bVar1 = *uParam0 >= IntToFloat(iParam1);
	if (bVar1)
	{
		fVar0 = (MISC::ABSF(fVar0) * -1f);
	}
	fVar0 = ((fVar0 - -1f) * 0.5f);
	iVar2 = __LIB_4__.func_832(fVar0);
	if (bVar1 && iVar2 == 0)
	{
		uParam0->f_1 = 1;
	}
	return iVar2;
}

float func_471(var uParam0)//Position - 0x17DD59
{
	int iVar0;
	char* sVar1;
	char* sVar2;
	iVar0 = uParam0->f_1;
	if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		return 0f;
	}
	sVar1 = __LIB_11__.func_230(4);
	sVar2 = uParam0->f_21;
	if (!ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sVar1, sVar2, 3))
	{
		return 0f;
	}
	return ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(iVar0, sVar1, sVar2);
}

float func_472(var uParam0)//Position - 0x17E531
{
	int iVar0;
	char* sVar1;
	char* sVar2;
	iVar0 = *uParam0;
	if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		return 0f;
	}
	sVar1 = __LIB_11__.func_230(4);
	sVar2 = uParam0->f_22;
	if (!ENTITY::IS_ENTITY_PLAYING_ANIM(iVar0, sVar1, sVar2, 3))
	{
		return 0f;
	}
	return ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(iVar0, sVar1, sVar2);
}

int func_473(var uParam0, char* sParam1, bool bParam2, bool bParam3, float fParam4)//Position - 0x17E5B2
{
	int iVar0;
	char* sVar1;
	if (!STREAMING::HAS_ANIM_DICT_LOADED(__LIB_11__.func_230(4)))
	{
		return 0;
	}
	iVar0 = uParam0->f_1;
	if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		return 0;
	}
	if (!ENTITY::DOES_ENTITY_HAVE_DRAWABLE(iVar0))
	{
		return 0;
	}
	sVar1 = __LIB_11__.func_230(4);
	ENTITY::PLAY_ENTITY_ANIM(iVar0, sParam1, sVar1, 1000f, bParam2, bParam3, false, fParam4, 131072);
	ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(iVar0);
	uParam0->f_21 = sParam1;
	return 1;
}

void func_474(var uParam0)//Position - 0x17E667
{
	if (uParam0->f_6 == -1)
	{
		return;
	}
	AUDIO::STOP_SOUND(uParam0->f_6);
	__LIB_11__.func_236(uParam0);
}

void func_475()//Position - 0x180CA6
{
	if (!MONEY::NETWORK_CAN_SPEND_MONEY(__LIB_5__.func_837(0), false, true, false, -1, 0))
	{
		__LIB_0__.func_151("MAITRD_M_D0E" /* GXT: You do not have enough money to purchase the Casino Membership. */, -1);
	}
	else if (__LIB_2__.func_934(PLAYER::PLAYER_ID()))
	{
	}
	else if (BitTest(Global_1946250.f_5, 31))
	{
	}
	else if (Global_4535599 != 0)
	{
	}
	else
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 30);
	}
}

void func_476(int iParam0, int iParam1)//Position - 0x183939
{
	int iVar0;
	var uVar1[9];
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	var uVar7;
	iVar2 = (iParam0 + 1 * 12 - 12);
	iVar3 = 1;
	if ((iVar2 % 32) + 12 > 32)
	{
		iVar3 = 2;
	}
	iVar4 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iVar2) / 32f));
	if (iVar4 < 0)
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 < iVar3)
	{
		if ((iVar4 + iVar0) >= 9)
		{
			return;
		}
		iVar5 = __LIB_10__.func_856((iVar4 + iVar0));
		uVar1[(iVar4 + iVar0)] = __LIB_0__.func_714(iVar5);
		iVar0++;
	}
	iVar6 = __LIB_10__.func_855(&uVar1, iParam0, 12);
	iVar6 = (iVar6 + iParam1);
	__LIB_10__.func_854(&uVar1, iParam0, 12, iVar6);
	iVar0 = 0;
	while (iVar0 < iVar3)
	{
		uVar7 = __LIB_10__.func_856((iVar4 + iVar0));
		__LIB_0__.func_779(uVar7, uVar1[(iVar4 + iVar0)]);
		iVar0++;
	}
}

void func_477(int iParam0)//Position - 0x18BC87
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_5__.func_874();
	iVar1 = NETWORK::GET_CLOUD_TIME_AS_INT();
	iVar2 = __LIB_5__.func_873();
	if (iVar0 == 0)
	{
		__LIB_5__.func_872();
	}
	else if ((iVar0 - iVar1) >= Global_262145.f_27176 /* Tunable: VC_CASINO_CHIP_MAX_WIN_LOSS_COOLDOWN */)
	{
		__LIB_19__.func_214();
		iVar2 = 0;
	}
	if ((iVar2 - iParam0) >= Global_262145.f_27177 /* Tunable: VC_CASINO_CHIP_MAX_LOSS_DAILY */)
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_WON_GD"), Global_262145.f_27177 /* Tunable: VC_CASINO_CHIP_MAX_LOSS_DAILY */);
		__LIB_19__.func_214();
		Global_2725354 = 1;
	}
	else
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_WON_GD"), (iVar2 - iParam0));
	}
}

void func_478()//Position - 0x18E2E7
{
	__LIB_0__.func_779(joaat("MPPLY_CAS_GMBLNG_L24_PX"), NETWORK::GET_CLOUD_TIME_AS_INT());
	__LIB_10__.func_849();
	__LIB_10__.func_848();
	Global_1966132 = 1;
	Global_1966127 = 0;
}

void func_479()//Position - 0x18E390
{
	__LIB_0__.func_779(joaat("MPPLY_CASINO_GMBLNG_GD"), NETWORK::GET_CLOUD_TIME_AS_INT());
	__LIB_10__.func_852();
	__LIB_10__.func_851((NETWORK::GET_CLOUD_TIME_AS_INT() + 86400));
	Global_1966131 = 1;
}

int func_480(var uParam0)//Position - 0x180C
{
	int iVar0;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, __LIB_20__.func_183(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 1)
	{
		if (__LIB_6__.func_925())
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
		else if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	if (uParam0->f_1.f_1 == 3)
	{
		if (uParam0->f_9 >= 118 && uParam0->f_9 <= 122)
		{
			iVar0 = 2;
		}
	}
	if (uParam0->f_1.f_1 == 2)
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
		if (iVar0 >= 1)
		{
			iVar0++;
		}
	}
	return iVar0;
}

int func_481(int iParam0)//Position - 0xBD5
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__.func_138(__LIB_6__.func_925(), 4, 5);
		case 2:
			return 3;
		case 3:
			return 3;
		default:
	}
	return 0;
}

int func_482(var uParam0)//Position - 0x1DA3
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (iVar1 != PLAYER::PLAYER_ID() && __LIB_0__.func_154(iVar1, 1, 1))
			{
				if (__LIB_10__.func_613(PLAYER::GET_PLAYER_PED(iVar1), &(uParam0->f_16[uParam0->f_9 /*14*/])) || func_51(iVar1) == uParam0->f_9)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_483(var uParam0)//Position - 0x1F3D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 20)
	{
		if (__LIB_10__.func_613(PLAYER::PLAYER_PED_ID(), &(uParam0->f_16[uParam0->f_9 /*14*/])) && __LIB_11__.func_251(PLAYER::PLAYER_PED_ID(), uParam0->f_16[uParam0->f_9 /*14*/].f_3, uParam0->f_16[uParam0->f_9 /*14*/].f_13))
		{
			return 1;
		}
		else
		{
			uParam0->f_9 = (uParam0->f_9 + 1 % 149);
		}
		iVar0++;
	}
	return 0;
}

void func_484(int iParam0, int iParam1)//Position - 0x128F93
{
	int iVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	iVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (iVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = iVar0;
		}
		Global_1853190 = iVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 5);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_11__.func_260() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853190 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 31);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853190;
	}
	__LIB_7__.func_369();
}

int func_485(var uParam0, var uParam1)//Position - 0x12947C
{
	if (PLAYER::PLAYER_ID() == __LIB_11__.func_261())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (BitTest(Global_1946250.f_506, 31))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_486(int iParam0, int iParam1)//Position - 0x15760E
{
	bool bVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	bVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (bVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = bVar0;
		}
		Global_1853185 = bVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_11__.func_261() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853185 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 0);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
	}
	__LIB_7__.func_369();
}

int func_487(int iParam0, var uParam1)//Position - 0x157C45
{
	if (PLAYER::PLAYER_ID() == __LIB_11__.func_261())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (BitTest(Global_1946250.f_506, 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_488(var uParam0)//Position - 0x1BFA6C
{
	__LIB_1__.func_845(&(uParam0->f_7), 9);
}

void func_489(var uParam0)//Position - 0x1BFA7E
{
	__LIB_1__.func_846(&(uParam0->f_7), 12);
}

int func_490()//Position - 0x7B0
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_1__.func_556(8352, -1, 0);
	iVar1 = __LIB_0__.func_714(joaat("MPPLY_LUCKY_WHEEL_USAGE"));
	iVar2 = NETWORK::GET_CLOUD_TIME_AS_INT();
	iVar3 = __LIB_1__.func_556(10411, -1, 0);
	if (iVar2 > iVar0 && iVar2 > iVar1)
	{
		__LIB_1__.func_597(10411, 0, -1, 1, 0);
		return 0;
	}
	else if (Global_262145.f_27185 /* Tunable: -312420223 */)
	{
		if (iVar3 < Global_262145.f_27184 /* Tunable: 9960150 */)
		{
			return 0;
		}
	}
	return 1;
}

int func_491(int iParam0)//Position - 0xBFF
{
	if (__LIB_1__.func_483(iParam0) != __LIB_0__.func_160())
	{
		return __LIB_1__.func_483(iParam0) == __LIB_0__.func_603(iParam0);
	}
	return 0;
}

int func_492(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, bool bParam6, int iParam7, var uParam8, int iParam9, bool bParam10)//Position - 0x3B18
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 15)
	{
		if (Global_4534105[iVar0 /*85*/].f_66.f_2 == 0)
		{
			if (!__LIB_0__.func_112())
			{
				iParam0 = iVar0 + 900;
			}
			Global_4534105[iVar0 /*85*/].f_66.f_2 = 1;
			Global_4534105[iVar0 /*85*/].f_66.f_1 = iParam5;
			Global_4534105[iVar0 /*85*/].f_66.f_3 = iParam1;
			Global_4534105[iVar0 /*85*/].f_66.f_4 = iParam2;
			Global_4534105[iVar0 /*85*/].f_66.f_7 = iParam3;
			Global_4534105[iVar0 /*85*/].f_66.f_5 = 0;
			Global_4534105[iVar0 /*85*/].f_66 = iParam0;
			Global_4534105[iVar0 /*85*/].f_66.f_6 = iParam4;
			Global_4534105[iVar0 /*85*/].f_66.f_11 = uParam8;
			Global_4534105[iVar0 /*85*/].f_66.f_10 = iParam7;
			Global_4534105[iVar0 /*85*/].f_66.f_13 = iParam9;
			Global_4534105[iVar0 /*85*/].f_66.f_12 = 0;
			Global_4534105[iVar0 /*85*/].f_66.f_14 = MISC::GET_FRAME_COUNT();
			Global_4534105[iVar0 /*85*/].f_66.f_18 = 0;
			Global_4535592 = 0;
			if (bParam6)
			{
				Global_4534105[iVar0 /*85*/].f_66.f_5 = 1;
			}
			if (iParam1 == joaat("NET_SHOP_TTYPE_SERVICE") && bParam10)
			{
				__LIB_6__.func_874(Global_4534105[iVar0 /*85*/], iVar0);
			}
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

float func_493()//Position - 0x26163
{
	int iVar0;
	int iVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	iVar0 = 0;
	while (iVar0 < Global_23150.f_6134)
	{
		if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar0] == 4)
		{
			iVar1++;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < iVar1)
	{
		if (Global_23150.f_4824[((Global_23150.f_5615 - iVar1) + iVar0)] != 0)
		{
			if (__LIB_7__.func_172(Global_23150.f_4824[((Global_23150.f_5615 - iVar1) + iVar0)], 1, 0, &fVar3, &fVar4, 0))
			{
				if (fVar4 > fVar2)
				{
					fVar2 = fVar4;
				}
			}
		}
		iVar0++;
	}
	if (fVar2 > HUD::GET_RENDERED_CHARACTER_HEIGHT(0.35f, 0))
	{
		return fVar2;
	}
	return HUD::GET_RENDERED_CHARACTER_HEIGHT(0.35f, 0);
}

float func_494()//Position - 0x26216
{
	float fVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	iVar7 = 0;
	while (iVar7 < Global_23150.f_6134)
	{
		if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 1)
		{
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 8)
		{
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 2)
		{
			iVar3++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 3)
		{
			iVar4++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 4)
		{
			iVar5++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 5)
		{
			iVar6++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 6)
		{
			iVar6++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 7)
		{
			iVar6++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 9)
		{
			iVar6++;
		}
		iVar7++;
	}
	__LIB_7__.func_157(0, 1, 0, 0, 0, iVar6 > 0, 0);
	if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
	{
		HUD::BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(&(Global_23150.f_79[Global_23150.f_6133 /*6*/]));
	}
	iVar7 = 0;
	while (iVar7 < Global_23150.f_6134)
	{
		if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 1)
		{
			iVar8++;
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_23150.f_79[(Global_23150.f_6133 + iVar8) /*6*/]));
			}
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 8)
		{
			iVar8++;
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_23150.f_79[(Global_23150.f_6133 + iVar8) /*6*/]));
			}
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 2)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_INTEGER(Global_23150.f_4309[((Global_23150.f_5613 - iVar3) + iVar9)]);
			}
			iVar9++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 3)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_FLOAT(Global_23150.f_4566[((Global_23150.f_5614 - iVar4) + iVar10)], Global_23150.f_4695[((Global_23150.f_5614 - iVar4) + iVar10)]);
			}
			iVar10++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 5)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&(Global_2725950[((Global_23150.f_5612 - iVar6) + iVar11) /*16*/]));
			}
			iVar11++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 6)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_2725950[((Global_23150.f_5612 - iVar6) + iVar11) /*16*/]));
			}
			iVar11++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 7)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&(Global_2725950[((Global_23150.f_5612 - iVar6) + iVar11) /*16*/]));
			}
			iVar11++;
		}
		else if (Global_23150.f_2387[Global_23150.f_6133 /*5*/][iVar7] == 9)
		{
			if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&(Global_2725950[((Global_23150.f_5612 - iVar6) + iVar11) /*16*/]));
			}
			iVar11++;
		}
		iVar7++;
	}
	if (MISC::GET_HASH_KEY(&(Global_23150.f_79[Global_23150.f_6133 /*6*/])) != 0)
	{
		fVar0 = HUD::END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(true);
	}
	iVar7 = 0;
	while (iVar7 < iVar5)
	{
		if (Global_23150.f_4824[((Global_23150.f_5615 - iVar5) + iVar7)] != 0)
		{
			__LIB_7__.func_172(Global_23150.f_4824[((Global_23150.f_5615 - iVar5) + iVar7)], 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + fVar1);
		}
		iVar7++;
	}
	return fVar0;
}

int func_495()//Position - 0x2B10E
{
	int iVar0;
	int iVar1;
	if (__LIB_0__.func_714(joaat("MPPLY_LW_PODIUM_VEH_MODEL")) != Global_262145.f_26763 /* Tunable: CASINO_PRIZE_VEHICLE_MODEL_HASH */)
	{
		return 0;
	}
	iVar0 = __LIB_1__.func_556(8353, -1, 0);
	iVar1 = NETWORK::GET_CLOUD_TIME_AS_INT();
	if (iVar1 > iVar0)
	{
		return 0;
	}
	return 1;
}

int func_496(int iParam0, int iParam1)//Position - 0x2B44A
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return -1;
	}
	iVar0 = 0;
	while (iVar0 <= 5)
	{
		if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/] != 0)
		{
			if (__LIB_1__.func_347(Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/]) == iParam1)
			{
				return iVar0;
			}
		}
		iVar0++;
	}
	return -1;
}

int func_497(int iParam0, int iParam1)//Position - 0x30EE5
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(func_633(iParam0), iParam1, 0);
	return iVar0;
}

int func_498()//Position - 0x3C024
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = (__LIB_5__.func_828() - __LIB_5__.func_827());
	iVar1 = (Global_262145.f_27174 /* Tunable: VC_CASINO_CHIP_MAX_HELD */ - __LIB_11__.func_285());
	iVar2 = __LIB_11__.func_246();
	if (iVar0 > iVar1)
	{
		iVar0 = iVar1;
	}
	if (iVar0 > iVar2)
	{
		iVar0 = iVar2;
	}
	return iVar0;
}

int func_499(int iParam0)//Position - 0x36C37
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_7__.func_926(iParam0))
	{
		return 5;
	}
	if (__LIB_2__.func_232() && __LIB_2__.func_432(PLAYER::PLAYER_ID(), __LIB_2__.func_433(iParam0)))
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && __LIB_2__.func_432(__LIB_0__.func_582(), __LIB_2__.func_433(iParam0)))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	if (!__LIB_2__.func_432(PLAYER::PLAYER_ID(), __LIB_2__.func_433(iParam0)))
	{
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if (__LIB_2__.func_432(iVar0, __LIB_2__.func_433(iParam0)))
				{
					Var3 = { __LIB_1__.func_267(iVar0) };
					if (__LIB_0__.func_585(Var3))
					{
						if (NETWORK::NETWORK_IS_FRIEND(&Var3))
						{
							return 3;
						}
						else
						{
							iVar1 = 55;
						}
					}
					else
					{
						iVar1 = 55;
					}
				}
			}
			iVar2++;
		}
		if (iVar1 == 55)
		{
			return 55;
		}
	}
	return 4;
}

int func_500(int iParam0)//Position - 0x3F5CD
{
	struct<2> Var0;
	int iVar1;
	if (__LIB_4__.func_0(iParam0))
	{
		Var0 = { __LIB_11__.func_275(iParam0, -1, 0) };
		if (__LIB_2__.func_467(Var0))
		{
			iVar1 = __LIB_3__.func_810(Var0);
			if (__LIB_2__.func_468(iVar1))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_501(var uParam0)//Position - 0x1BD00A
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (iVar1 != PLAYER::PLAYER_ID() && __LIB_1__.func_264(iVar1, 1, 1))
			{
				if (__LIB_10__.func_613(PLAYER::GET_PLAYER_PED(iVar1), &(uParam0->f_16[uParam0->f_9 /*14*/])) || __LIB_2__.func_461(iVar1) == uParam0->f_9)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_502(var uParam0)//Position - 0x1BDB
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (iVar1 != PLAYER::PLAYER_ID() && __LIB_0__.func_154(iVar1, 1, 1))
			{
				if (__LIB_10__.func_613(PLAYER::GET_PLAYER_PED(iVar1), &(uParam0->f_16[uParam0->f_9 /*14*/])) || func_52(iVar1) == uParam0->f_9)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_503(int iParam0)//Position - 0x1079C
{
	if (__LIB_1__.func_113(iParam0, 1))
	{
		return Global_1892703[__LIB_0__.func_582() /*599*/].f_10.f_428;
	}
	return -1;
}

void func_504(char* sParam0)//Position - 0x5B72D
{
	Global_2703735.f_2724 = 1;
	__LIB_10__.func_563(&(Global_2703735.f_2724.f_1), "", sParam0, 0);
}

void func_505(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x183113
{
	if (iParam0 < 20)
	{
		__LIB_9__.func_68(iParam0, iParam1, iParam2, uParam3);
	}
	else if (iParam0 < 39)
	{
		__LIB_9__.func_67(iParam0, iParam1, iParam2, uParam3);
	}
	else if (iParam0 >= 58 && iParam0 <= 67)
	{
		__LIB_9__.func_66(iParam0, iParam1, iParam2, uParam3);
	}
	else if (iParam0 >= 68 && iParam0 <= 71)
	{
		__LIB_9__.func_65(iParam0, iParam1, iParam2, uParam3);
	}
	else if (iParam0 >= 72 && iParam0 <= 83)
	{
		__LIB_9__.func_64(iParam0, iParam1, iParam2, uParam3);
	}
	else
	{
		switch (iParam0)
		{
			case 39:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 216.7598f, 2605.8167f, 45.0528f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 1:
								*uParam3 = { 217.6837f, 2605.434f, 45.0003f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 2:
								*uParam3 = { 216.3771f, 2604.8928f, 44.9757f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 3:
								*uParam3 = { 215.8359f, 2606.1992f, 45.0973f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 4:
								*uParam3 = { 217.1425f, 2606.7405f, 45.1487f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 5:
								*uParam3 = { 217.301f, 2604.51f, 44.9172f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 6:
								*uParam3 = { 215.4533f, 2605.2754f, 45.0336f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 7:
								*uParam3 = { 216.2186f, 2607.1233f, 45.1933f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 8:
								*uParam3 = { 218.0664f, 2606.358f, 45.0781f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 9:
								*uParam3 = { 218.6076f, 2605.0513f, 44.9437f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 10:
								*uParam3 = { 215.9944f, 2603.969f, 44.9101f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 11:
								*uParam3 = { 214.912f, 2606.582f, 45.1774f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 12:
								*uParam3 = { 217.5252f, 2607.6643f, 45.2258f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 13:
								*uParam3 = { 217.8422f, 2603.2036f, 44.8361f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 14:
								*uParam3 = { 214.1467f, 2604.7344f, 44.9492f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
							case 15:
								*uParam3 = { 215.6774f, 2608.4297f, 45.3382f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 8.6265f;
								break;
						}
						break;
				}
				break;
			case 40:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 191.1308f, 2787.2615f, 44.6241f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 1:
								*uParam3 = { 192.0546f, 2786.879f, 44.6378f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 2:
								*uParam3 = { 190.7481f, 2786.3376f, 44.6157f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 3:
								*uParam3 = { 190.2069f, 2787.644f, 44.6105f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 4:
								*uParam3 = { 191.5135f, 2788.1853f, 44.6325f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 5:
								*uParam3 = { 191.672f, 2785.9548f, 44.644f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 6:
								*uParam3 = { 189.8242f, 2786.7202f, 44.6021f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 7:
								*uParam3 = { 190.5896f, 2788.568f, 44.6146f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 8:
								*uParam3 = { 192.4373f, 2787.8027f, 44.6462f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 9:
								*uParam3 = { 192.9785f, 2786.496f, 44.6535f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 10:
								*uParam3 = { 190.3654f, 2785.4138f, 44.6345f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 11:
								*uParam3 = { 189.283f, 2788.0269f, 44.5907f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 12:
								*uParam3 = { 191.8961f, 2789.1091f, 44.6385f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 13:
								*uParam3 = { 192.2132f, 2784.6484f, 44.6552f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 14:
								*uParam3 = { 188.5177f, 2786.1792f, 44.58f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
							case 15:
								*uParam3 = { 190.0484f, 2789.8745f, 44.6f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 284.4413f;
								break;
						}
						break;
				}
				break;
			case 41:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 639.1493f, 2776.8167f, 40.9687f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 1:
								*uParam3 = { 640.0732f, 2776.434f, 40.9563f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 2:
								*uParam3 = { 638.7666f, 2775.8928f, 40.9663f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 3:
								*uParam3 = { 638.2254f, 2777.1992f, 40.9812f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 4:
								*uParam3 = { 639.532f, 2777.7405f, 40.9715f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 5:
								*uParam3 = { 639.6905f, 2775.51f, 40.9756f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 6:
								*uParam3 = { 637.8427f, 2776.2754f, 40.9757f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 7:
								*uParam3 = { 638.6081f, 2778.1233f, 40.984f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 8:
								*uParam3 = { 640.4559f, 2777.358f, 40.959f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 9:
								*uParam3 = { 640.9971f, 2776.0513f, 40.9632f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 10:
								*uParam3 = { 638.3839f, 2774.969f, 40.9813f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 11:
								*uParam3 = { 637.3015f, 2777.582f, 40.9917f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 12:
								*uParam3 = { 639.9147f, 2778.6643f, 40.9743f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 13:
								*uParam3 = { 640.2317f, 2774.2036f, 41.0066f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 14:
								*uParam3 = { 636.5362f, 2775.7344f, 40.9911f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
							case 15:
								*uParam3 = { 638.0669f, 2779.4297f, 40.9993f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 282.6801f;
								break;
						}
						break;
				}
				break;
			case 42:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -1131.1663f, 2697.8215f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 1:
								*uParam3 = { -1130.2424f, 2697.439f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 2:
								*uParam3 = { -1131.549f, 2696.8977f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 3:
								*uParam3 = { -1132.0901f, 2698.204f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 4:
								*uParam3 = { -1130.7836f, 2698.7454f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 5:
								*uParam3 = { -1130.6251f, 2696.515f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 6:
								*uParam3 = { -1132.4728f, 2697.2803f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 7:
								*uParam3 = { -1131.7074f, 2699.1282f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 8:
								*uParam3 = { -1129.8597f, 2698.3628f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 9:
								*uParam3 = { -1129.3185f, 2697.0562f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 10:
								*uParam3 = { -1131.9316f, 2695.9739f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 11:
								*uParam3 = { -1133.014f, 2698.587f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 12:
								*uParam3 = { -1130.4009f, 2699.6692f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 13:
								*uParam3 = { -1130.0839f, 2695.2085f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 14:
								*uParam3 = { -1133.7794f, 2696.7393f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
							case 15:
								*uParam3 = { -1132.2487f, 2700.4346f, 17.8004f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 153.4155f;
								break;
						}
						break;
				}
				break;
			case 43:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -9.6669f, -1644.5198f, 28.1741f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 1:
								*uParam3 = { -8.743f, -1644.9025f, 28.1695f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 2:
								*uParam3 = { -10.0496f, -1645.4436f, 28.2537f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 3:
								*uParam3 = { -10.5908f, -1644.1371f, 28.2368f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 4:
								*uParam3 = { -9.2842f, -1643.596f, 28.1696f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 5:
								*uParam3 = { -9.1257f, -1645.8263f, 28.2408f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 6:
								*uParam3 = { -10.9734f, -1645.0609f, 28.2665f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 7:
								*uParam3 = { -10.2081f, -1643.2133f, 28.1711f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 8:
								*uParam3 = { -8.3603f, -1643.9786f, 28.1681f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 9:
								*uParam3 = { -7.8191f, -1645.2852f, 28.1661f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 10:
								*uParam3 = { -10.4323f, -1646.3676f, 28.2888f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 11:
								*uParam3 = { -11.5147f, -1643.7544f, 28.2441f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 12:
								*uParam3 = { -8.9015f, -1642.672f, 28.17f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 13:
								*uParam3 = { -8.5845f, -1647.1329f, 28.2695f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 14:
								*uParam3 = { -12.28f, -1645.6022f, 28.3145f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
							case 15:
								*uParam3 = { -10.7493f, -1641.9066f, 28.173f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 323.7466f;
								break;
						}
						break;
				}
				break;
			case 44:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1027.1832f, -2399.1018f, 28.8523f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 1:
								*uParam3 = { 1028.107f, -2399.4844f, 28.749f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 2:
								*uParam3 = { 1026.8005f, -2400.0256f, 28.8342f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 3:
								*uParam3 = { 1026.2594f, -2398.7192f, 28.9194f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 4:
								*uParam3 = { 1027.5659f, -2398.178f, 28.8593f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 5:
								*uParam3 = { 1027.7244f, -2400.4084f, 28.7371f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 6:
								*uParam3 = { 1025.8767f, -2399.643f, 28.8904f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 7:
								*uParam3 = { 1026.6421f, -2397.7952f, 28.9385f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 8:
								*uParam3 = { 1028.4897f, -2398.5605f, 28.7849f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 9:
								*uParam3 = { 1029.031f, -2399.8672f, 28.7341f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 10:
								*uParam3 = { 1026.4178f, -2400.9495f, 28.8161f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 11:
								*uParam3 = { 1025.3354f, -2398.3364f, 28.9395f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 12:
								*uParam3 = { 1027.9486f, -2397.2542f, 28.8629f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 13:
								*uParam3 = { 1028.2656f, -2401.7148f, 28.662f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 14:
								*uParam3 = { 1024.5701f, -2400.184f, 29.1261f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
							case 15:
								*uParam3 = { 1026.1008f, -2396.4888f, 29.0109f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 261.0251f;
								break;
						}
						break;
				}
				break;
			case 45:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 869.1522f, -2234.5386f, 29.5438f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 1:
								*uParam3 = { 870.076f, -2234.9211f, 29.5688f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 2:
								*uParam3 = { 868.7695f, -2235.4624f, 29.5515f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 3:
								*uParam3 = { 868.2283f, -2234.156f, 29.5171f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 4:
								*uParam3 = { 869.5349f, -2233.6147f, 29.5588f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 5:
								*uParam3 = { 869.6934f, -2235.8452f, 29.5895f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 6:
								*uParam3 = { 867.8456f, -2235.0798f, 29.527f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 7:
								*uParam3 = { 868.611f, -2233.232f, 29.5195f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 8:
								*uParam3 = { 870.4587f, -2233.9973f, 29.5832f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 9:
								*uParam3 = { 870.9999f, -2235.304f, 29.6108f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 10:
								*uParam3 = { 868.3868f, -2236.3862f, 29.5344f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 11:
								*uParam3 = { 867.3044f, -2233.7732f, 29.5116f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 12:
								*uParam3 = { 869.9175f, -2232.691f, 29.5342f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 13:
								*uParam3 = { 870.2346f, -2237.1516f, 29.5365f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 14:
								*uParam3 = { 866.5391f, -2235.6208f, 29.5254f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
							case 15:
								*uParam3 = { 871.6698f, -2233.526f, 29.5275f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 171.7866f;
								break;
						}
						break;
				}
				break;
			case 46:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -667.061f, -2379.0017f, 12.8801f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 1:
								*uParam3 = { -666.1371f, -2379.3843f, 12.9003f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 2:
								*uParam3 = { -667.4437f, -2379.9255f, 12.8829f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 3:
								*uParam3 = { -667.9849f, -2378.6191f, 12.8597f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 4:
								*uParam3 = { -666.6783f, -2378.078f, 12.8771f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 5:
								*uParam3 = { -666.5198f, -2380.3083f, 12.9029f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 6:
								*uParam3 = { -668.3676f, -2379.543f, 12.8627f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 7:
								*uParam3 = { -667.6022f, -2377.695f, 12.8567f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 8:
								*uParam3 = { -665.7545f, -2378.4604f, 12.8975f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 9:
								*uParam3 = { -665.2133f, -2379.767f, 12.9203f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 10:
								*uParam3 = { -667.8264f, -2380.8494f, 12.8855f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 11:
								*uParam3 = { -668.9088f, -2378.2363f, 12.8393f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 12:
								*uParam3 = { -666.2957f, -2377.154f, 12.8741f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 13:
								*uParam3 = { -665.9786f, -2381.6147f, 12.9256f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 14:
								*uParam3 = { -669.6741f, -2380.084f, 12.8454f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
							case 15:
								*uParam3 = { -668.1434f, -2376.3887f, 12.8333f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 56.8247f;
								break;
						}
						break;
				}
				break;
			case 47:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -1086.628f, -2232.294f, 12.2324f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 1:
								*uParam3 = { -1085.7042f, -2232.6765f, 12.2341f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 2:
								*uParam3 = { -1087.0107f, -2233.2178f, 12.2285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 3:
								*uParam3 = { -1087.5519f, -2231.9114f, 12.2308f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 4:
								*uParam3 = { -1086.2454f, -2231.37f, 12.2363f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 5:
								*uParam3 = { -1086.0869f, -2233.6006f, 12.2302f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 6:
								*uParam3 = { -1087.9346f, -2232.8352f, 12.2269f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 7:
								*uParam3 = { -1087.1692f, -2230.9873f, 12.2347f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 8:
								*uParam3 = { -1085.3215f, -2231.7527f, 12.238f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 9:
								*uParam3 = { -1084.7803f, -2233.0593f, 12.2357f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 10:
								*uParam3 = { -1087.3934f, -2234.1416f, 12.2246f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 11:
								*uParam3 = { -1088.4758f, -2231.5286f, 12.2292f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 12:
								*uParam3 = { -1085.8627f, -2230.4463f, 12.2402f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 13:
								*uParam3 = { -1085.5457f, -2234.907f, 12.2279f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 14:
								*uParam3 = { -1089.2412f, -2233.3762f, 12.2214f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
							case 15:
								*uParam3 = { -1087.7104f, -2229.681f, 12.237f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 318.4454f;
								break;
						}
						break;
				}
				break;
			case 48:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -339.3975f, -1465.8998f, 29.5913f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 1:
								*uParam3 = { -338.4736f, -1466.2825f, 29.5766f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 2:
								*uParam3 = { -339.7802f, -1466.8236f, 29.62f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 3:
								*uParam3 = { -340.3214f, -1465.5171f, 29.6067f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 4:
								*uParam3 = { -339.0148f, -1464.976f, 29.586f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 5:
								*uParam3 = { -338.8563f, -1467.2063f, 29.5823f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 6:
								*uParam3 = { -340.7041f, -1466.4409f, 29.6117f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 7:
								*uParam3 = { -339.9387f, -1464.5933f, 29.6013f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 8:
								*uParam3 = { -338.091f, -1465.3586f, 29.5708f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 9:
								*uParam3 = { -337.5498f, -1466.6652f, 29.5618f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 10:
								*uParam3 = { -340.1629f, -1467.7476f, 29.6201f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 11:
								*uParam3 = { -341.2453f, -1465.1344f, 29.6117f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 12:
								*uParam3 = { -338.6322f, -1464.052f, 29.5806f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 13:
								*uParam3 = { -338.3152f, -1468.513f, 29.5702f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 14:
								*uParam3 = { -342.0106f, -1466.9822f, 29.6117f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
							case 15:
								*uParam3 = { -340.4799f, -1463.2866f, 29.6114f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 297.3498f;
								break;
						}
						break;
				}
				break;
			case 49:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -1242.6395f, -256.9398f, 38.0007f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 1:
								*uParam3 = { -1241.7157f, -257.3225f, 37.9685f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 2:
								*uParam3 = { -1243.0222f, -257.8637f, 37.9724f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 3:
								*uParam3 = { -1243.5634f, -256.5571f, 38.0343f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 4:
								*uParam3 = { -1242.2568f, -256.0159f, 38.0294f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 5:
								*uParam3 = { -1242.0984f, -258.2464f, 37.9564f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 6:
								*uParam3 = { -1243.946f, -257.481f, 38.0062f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 7:
								*uParam3 = { -1243.1807f, -255.6333f, 38.0621f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 8:
								*uParam3 = { -1241.333f, -256.3986f, 37.9967f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 9:
								*uParam3 = { -1240.7917f, -257.7052f, 37.9589f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 10:
								*uParam3 = { -1243.4049f, -258.7876f, 37.9556f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 11:
								*uParam3 = { -1244.4873f, -256.1744f, 38.067f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 12:
								*uParam3 = { -1241.8741f, -255.0921f, 38.0567f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 13:
								*uParam3 = { -1241.5571f, -259.5529f, 37.9919f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 14:
								*uParam3 = { -1245.2527f, -258.0222f, 38.0114f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
							case 15:
								*uParam3 = { -1243.7219f, -254.3267f, 38.1407f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 34.3857f;
								break;
						}
						break;
				}
				break;
			case 50:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 901.0053f, -144.2888f, 75.6677f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 1:
								*uParam3 = { 901.9292f, -144.6715f, 75.6165f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 2:
								*uParam3 = { 900.6226f, -145.2127f, 75.6426f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 3:
								*uParam3 = { 900.0814f, -143.9061f, 75.7157f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 4:
								*uParam3 = { 901.388f, -143.3649f, 75.671f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 5:
								*uParam3 = { 901.5465f, -145.5954f, 75.5952f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 6:
								*uParam3 = { 899.6987f, -144.83f, 75.6872f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 7:
								*uParam3 = { 900.4641f, -142.9823f, 75.7186f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 8:
								*uParam3 = { 902.3119f, -143.7476f, 75.6198f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 9:
								*uParam3 = { 902.8531f, -145.0542f, 75.5653f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 10:
								*uParam3 = { 900.2399f, -146.1366f, 75.617f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 11:
								*uParam3 = { 899.1575f, -143.5234f, 75.7617f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 12:
								*uParam3 = { 901.7707f, -142.441f, 75.6621f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 13:
								*uParam3 = { 902.0877f, -146.9019f, 75.523f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 14:
								*uParam3 = { 898.3922f, -145.3712f, 75.6762f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
							case 15:
								*uParam3 = { 899.9229f, -141.6757f, 75.7557f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 330.5087f;
								break;
						}
						break;
				}
				break;
			case 51:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -1407.859f, 532.5023f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 1:
								*uParam3 = { -1406.9352f, 532.1196f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 2:
								*uParam3 = { -1408.2417f, 531.5784f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 3:
								*uParam3 = { -1408.7828f, 532.8849f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 4:
								*uParam3 = { -1407.4763f, 533.4261f, 121.9244f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 5:
								*uParam3 = { -1407.3179f, 535.4957f, 121.8786f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 6:
								*uParam3 = { -1409.1655f, 531.9611f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 7:
								*uParam3 = { -1408.4001f, 533.8088f, 121.915f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 8:
								*uParam3 = { -1406.5525f, 533.0435f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 9:
								*uParam3 = { -1406.311f, 534.4369f, 122.0234f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 10:
								*uParam3 = { -1408.6244f, 530.6545f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 11:
								*uParam3 = { -1409.7068f, 534.0676f, 121.9084f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 12:
								*uParam3 = { -1407.0936f, 534.35f, 121.9231f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 13:
								*uParam3 = { -1406.377f, 529.8892f, 122.8361f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 14:
								*uParam3 = { -1410.472f, 534.9199f, 121.7884f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
							case 15:
								*uParam3 = { -1408.9414f, 535.1154f, 121.9126f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 359.5705f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -1407.9105f, 539.3478f, 121.9215f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 1:
								*uParam3 = { -1406.9867f, 538.9651f, 121.9254f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 2:
								*uParam3 = { -1408.2932f, 538.4239f, 121.9192f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 3:
								*uParam3 = { -1408.8344f, 539.7305f, 121.9176f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 4:
								*uParam3 = { -1407.5278f, 540.2717f, 121.9232f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 5:
								*uParam3 = { -1407.3694f, 538.0412f, 121.9237f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 6:
								*uParam3 = { -1409.217f, 538.8066f, 121.9147f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 7:
								*uParam3 = { -1408.4517f, 540.6544f, 121.9193f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 8:
								*uParam3 = { -1406.604f, 539.889f, 121.9271f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 9:
								*uParam3 = { -1406.0627f, 538.5824f, 121.9285f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 10:
								*uParam3 = { -1408.6759f, 537.5f, 121.9162f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 11:
								*uParam3 = { -1409.7583f, 540.1132f, 121.9067f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 12:
								*uParam3 = { -1407.1451f, 541.1956f, 121.9254f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 13:
								*uParam3 = { -1406.8281f, 536.7347f, 121.9252f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 14:
								*uParam3 = { -1410.5237f, 538.2654f, 121.7916f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
							case 15:
								*uParam3 = { -1408.9929f, 541.9609f, 121.9184f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 99.6549f;
								break;
						}
						break;
				}
				break;
			case 52:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1338.2241f, -1581.6608f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 1:
								*uParam3 = { 1339.148f, -1582.0435f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 2:
								*uParam3 = { 1337.8414f, -1582.5846f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 3:
								*uParam3 = { 1337.3003f, -1581.2781f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 4:
								*uParam3 = { 1338.6068f, -1580.7369f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 5:
								*uParam3 = { 1338.7653f, -1582.9673f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 6:
								*uParam3 = { 1336.9176f, -1582.2019f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 7:
								*uParam3 = { 1337.683f, -1580.3542f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 8:
								*uParam3 = { 1339.5306f, -1581.1196f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 9:
								*uParam3 = { 1340.0719f, -1582.4261f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 10:
								*uParam3 = { 1337.4587f, -1583.5085f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 11:
								*uParam3 = { 1336.3763f, -1580.8954f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 12:
								*uParam3 = { 1338.9895f, -1579.813f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 13:
								*uParam3 = { 1339.3065f, -1584.2739f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 14:
								*uParam3 = { 1335.611f, -1582.7432f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
							case 15:
								*uParam3 = { 1337.1417f, -1579.0476f, 53.4443f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 222.6208f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1351.3131f, -1574.8779f, 53.0459f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 1:
								*uParam3 = { 1352.2369f, -1575.2606f, 53.0439f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 2:
								*uParam3 = { 1350.9304f, -1575.8018f, 53.0443f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 3:
								*uParam3 = { 1350.3893f, -1574.4952f, 53.0479f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 4:
								*uParam3 = { 1351.6958f, -1573.9541f, 53.0492f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 5:
								*uParam3 = { 1351.8542f, -1576.1844f, 53.0405f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 6:
								*uParam3 = { 1350.0066f, -1575.4191f, 53.0487f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 7:
								*uParam3 = { 1350.772f, -1573.5714f, 53.0507f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 8:
								*uParam3 = { 1352.6196f, -1574.3368f, 53.0472f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 9:
								*uParam3 = { 1353.1609f, -1575.6433f, 53.0063f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 10:
								*uParam3 = { 1350.5477f, -1576.7257f, 53.0484f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 11:
								*uParam3 = { 1349.4653f, -1574.1125f, 53.0512f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 12:
								*uParam3 = { 1352.0785f, -1573.0302f, 53.0502f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 13:
								*uParam3 = { 1352.3955f, -1577.4911f, 52.9224f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 14:
								*uParam3 = { 1348.7f, -1575.9603f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
							case 15:
								*uParam3 = { 1350.2307f, -1572.2648f, 53.0517f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 213.9295f;
								break;
						}
						break;
				}
				break;
			case 53:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -104.3488f, 6533.4126f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 1:
								*uParam3 = { -103.4249f, 6533.03f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 2:
								*uParam3 = { -104.7315f, 6532.489f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 3:
								*uParam3 = { -105.2727f, 6533.7954f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 4:
								*uParam3 = { -103.9661f, 6534.3364f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 5:
								*uParam3 = { -103.8076f, 6532.106f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 6:
								*uParam3 = { -105.6553f, 6532.8716f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 7:
								*uParam3 = { -104.89f, 6534.719f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 8:
								*uParam3 = { -103.0422f, 6533.9536f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 9:
								*uParam3 = { -102.501f, 6532.6475f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 10:
								*uParam3 = { -105.1142f, 6531.565f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 11:
								*uParam3 = { -106.1965f, 6534.1777f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 12:
								*uParam3 = { -103.5834f, 6535.2603f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 13:
								*uParam3 = { -103.2664f, 6530.7993f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 14:
								*uParam3 = { -106.9619f, 6532.33f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 15:
								*uParam3 = { -105.4312f, 6536.026f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -104.3488f, 6533.4126f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 1:
								*uParam3 = { -103.4249f, 6533.03f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 2:
								*uParam3 = { -104.7315f, 6532.489f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 3:
								*uParam3 = { -105.2727f, 6533.7954f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 4:
								*uParam3 = { -103.9661f, 6534.3364f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 5:
								*uParam3 = { -103.8076f, 6532.106f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 6:
								*uParam3 = { -105.6553f, 6532.8716f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 7:
								*uParam3 = { -104.89f, 6534.719f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 8:
								*uParam3 = { -103.0422f, 6533.9536f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 9:
								*uParam3 = { -102.501f, 6532.6475f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 10:
								*uParam3 = { -105.1142f, 6531.565f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 11:
								*uParam3 = { -106.1965f, 6534.1777f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 12:
								*uParam3 = { -103.5834f, 6535.2603f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 13:
								*uParam3 = { -103.2664f, 6530.7993f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 14:
								*uParam3 = { -106.9619f, 6532.33f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
							case 15:
								*uParam3 = { -105.4312f, 6536.026f, 28.8092f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 46.2842f;
								break;
						}
						break;
				}
				break;
			case 54:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -305.7161f, 6331.1323f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 1:
								*uParam3 = { -304.7922f, 6330.7495f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 2:
								*uParam3 = { -306.0988f, 6330.2085f, 31.5192f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 3:
								*uParam3 = { -302.84f, 6329.315f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 44.7526f;
								break;
							case 4:
								*uParam3 = { -305.3334f, 6332.056f, 31.5196f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 5:
								*uParam3 = { -303.3749f, 6328.626f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.7526f;
								break;
							case 6:
								*uParam3 = { -307.0226f, 6330.5913f, 31.475f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 7:
								*uParam3 = { -306.9573f, 6332.439f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 8:
								*uParam3 = { -304.4095f, 6331.6733f, 31.5194f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 9:
								*uParam3 = { -302.0683f, 6328.367f, 32.0919f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 41.7526f;
								break;
							case 10:
								*uParam3 = { -306.4814f, 6329.2847f, 31.4893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 11:
								*uParam3 = { -306.4638f, 6331.697f, 31.2703f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 12:
								*uParam3 = { -304.9507f, 6332.98f, 31.4884f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 13:
								*uParam3 = { -302.7337f, 6327.419f, 31.9893f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 36.7526f;
								break;
							case 14:
								*uParam3 = { -307.8292f, 6330.05f, 31.4539f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
							case 15:
								*uParam3 = { -306.7985f, 6333.7456f, 31.4375f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 33.7526f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -293.956f, 6339.3193f, 31.2712f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 1:
								*uParam3 = { -293.0321f, 6338.9365f, 31.3435f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 2:
								*uParam3 = { -294.3387f, 6338.3955f, 31.302f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 3:
								*uParam3 = { -294.8799f, 6339.702f, 31.1988f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 4:
								*uParam3 = { -293.5733f, 6340.243f, 31.2403f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 5:
								*uParam3 = { -293.4148f, 6338.0127f, 31.3744f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 6:
								*uParam3 = { -295.2625f, 6338.7783f, 31.2297f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 7:
								*uParam3 = { -294.4972f, 6340.626f, 31.1553f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 8:
								*uParam3 = { -292.6494f, 6339.8604f, 31.3125f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 9:
								*uParam3 = { -292.1082f, 6338.554f, 31.415f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 10:
								*uParam3 = { -294.7214f, 6337.4717f, 31.3329f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 11:
								*uParam3 = { -295.8037f, 6340.0845f, 31.0881f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 12:
								*uParam3 = { -293.1906f, 6341.167f, 31.2034f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 13:
								*uParam3 = { -292.8736f, 6336.706f, 31.4775f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 14:
								*uParam3 = { -296.5691f, 6338.237f, 31.1883f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
							case 15:
								*uParam3 = { -295.0384f, 6341.9326f, 30.941f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 40.3852f;
								break;
						}
						break;
				}
				break;
			case 55:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -10.158f, 6562.2725f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 1:
								*uParam3 = { -9.2341f, 6561.8896f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 2:
								*uParam3 = { -10.5407f, 6561.3486f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 3:
								*uParam3 = { -11.0819f, 6562.6553f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 4:
								*uParam3 = { -9.7753f, 6563.1963f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 5:
								*uParam3 = { -9.6168f, 6560.966f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 6:
								*uParam3 = { -11.4645f, 6561.7314f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 7:
								*uParam3 = { -10.6992f, 6563.579f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 8:
								*uParam3 = { -8.8514f, 6562.8135f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 9:
								*uParam3 = { -8.3102f, 6561.5073f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 10:
								*uParam3 = { -10.9233f, 6560.425f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 11:
								*uParam3 = { -12.0057f, 6563.0376f, 30.9663f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 12:
								*uParam3 = { -9.3926f, 6564.12f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 13:
								*uParam3 = { -9.0756f, 6559.659f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 14:
								*uParam3 = { -12.7711f, 6561.19f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 15:
								*uParam3 = { -11.2404f, 6564.8857f, 30.9532f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { -10.158f, 6562.2725f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 1:
								*uParam3 = { -9.2341f, 6561.8896f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 2:
								*uParam3 = { -10.5407f, 6561.3486f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 3:
								*uParam3 = { -11.0819f, 6562.6553f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 4:
								*uParam3 = { -9.7753f, 6563.1963f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 5:
								*uParam3 = { -9.6168f, 6560.966f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 6:
								*uParam3 = { -11.4645f, 6561.7314f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 7:
								*uParam3 = { -10.6992f, 6563.579f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 8:
								*uParam3 = { -8.8514f, 6562.8135f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 9:
								*uParam3 = { -8.3102f, 6561.5073f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 10:
								*uParam3 = { -10.9233f, 6560.425f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 11:
								*uParam3 = { -12.0057f, 6563.0376f, 30.9663f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 12:
								*uParam3 = { -9.3926f, 6564.12f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 13:
								*uParam3 = { -9.0756f, 6559.659f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 14:
								*uParam3 = { -12.7711f, 6561.19f, 30.971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
							case 15:
								*uParam3 = { -11.2404f, 6564.8857f, 30.9532f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 218.8879f;
								break;
						}
						break;
				}
				break;
			case 56:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1901.7764f, 3782.6987f, 31.806f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 1:
								*uParam3 = { 1902.7002f, 3782.3162f, 31.8148f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 2:
								*uParam3 = { 1901.3937f, 3781.775f, 31.8128f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 3:
								*uParam3 = { 1900.8525f, 3783.0813f, 31.7971f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 4:
								*uParam3 = { 1902.159f, 3783.6226f, 31.7992f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 5:
								*uParam3 = { 1902.3175f, 3781.392f, 31.8216f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 6:
								*uParam3 = { 1900.4698f, 3782.1575f, 31.8039f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 7:
								*uParam3 = { 1901.2352f, 3784.0054f, 31.7904f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 8:
								*uParam3 = { 1903.0829f, 3783.24f, 31.808f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 9:
								*uParam3 = { 1903.6241f, 3781.9333f, 31.8213f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 10:
								*uParam3 = { 1901.011f, 3780.851f, 31.8195f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 11:
								*uParam3 = { 1899.9286f, 3783.464f, 31.7883f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 12:
								*uParam3 = { 1902.5417f, 3784.5464f, 31.7924f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 13:
								*uParam3 = { 1902.8588f, 3780.0857f, 31.8119f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 14:
								*uParam3 = { 1899.1632f, 3781.6165f, 31.8819f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
							case 15:
								*uParam3 = { 1900.694f, 3785.3118f, 31.7747f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 293.7744f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1885.4838f, 3770.793f, 31.8267f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 1:
								*uParam3 = { 1886.4076f, 3770.4104f, 31.8115f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 2:
								*uParam3 = { 1885.1011f, 3769.8691f, 31.8404f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 3:
								*uParam3 = { 1884.5599f, 3771.1755f, 31.8445f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 4:
								*uParam3 = { 1885.8665f, 3771.7168f, 31.8225f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 5:
								*uParam3 = { 1886.0249f, 3769.4863f, 31.8188f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 6:
								*uParam3 = { 1884.1772f, 3770.2517f, 31.8619f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 7:
								*uParam3 = { 1884.9426f, 3772.0996f, 31.8177f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 8:
								*uParam3 = { 1886.7903f, 3771.3342f, 31.8162f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 9:
								*uParam3 = { 1887.3315f, 3770.0276f, 31.8052f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 10:
								*uParam3 = { 1884.7184f, 3768.9453f, 31.8542f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 11:
								*uParam3 = { 1883.636f, 3771.5583f, 31.8395f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 12:
								*uParam3 = { 1886.2491f, 3772.6406f, 31.8172f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 13:
								*uParam3 = { 1886.5662f, 3768.18f, 31.8085f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 14:
								*uParam3 = { 1882.8706f, 3769.7107f, 31.8968f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
							case 15:
								*uParam3 = { 1884.4014f, 3773.406f, 31.799f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 202.6656f;
								break;
						}
						break;
				}
				break;
			case 57:
				switch (iParam1)
				{
					case 0:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1666.8705f, 4769.2275f, 40.9418f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 1:
								*uParam3 = { 1667.7943f, 4768.8447f, 40.9126f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 2:
								*uParam3 = { 1666.4878f, 4768.3037f, 40.9598f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 3:
								*uParam3 = { 1665.9467f, 4769.6104f, 40.9706f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 4:
								*uParam3 = { 1667.2532f, 4770.1514f, 40.923f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 5:
								*uParam3 = { 1667.4116f, 4767.921f, 40.9316f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 6:
								*uParam3 = { 1665.564f, 4768.6865f, 40.9873f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 7:
								*uParam3 = { 1666.3293f, 4770.534f, 40.952f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 8:
								*uParam3 = { 1668.177f, 4769.7686f, 40.8933f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 9:
								*uParam3 = { 1668.7183f, 4768.4624f, 40.8827f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 10:
								*uParam3 = { 1666.1051f, 4767.38f, 40.9766f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 11:
								*uParam3 = { 1665.0227f, 4769.9927f, 40.9981f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 12:
								*uParam3 = { 1667.6359f, 4771.075f, 40.9038f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 13:
								*uParam3 = { 1667.9529f, 4766.6143f, 40.9215f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 14:
								*uParam3 = { 1664.2573f, 4768.145f, 41.0075f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 15:
								*uParam3 = { 1665.7881f, 4771.841f, 40.9621f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
						}
						break;
					case 1:
						switch (iParam2)
						{
							case 0:
								*uParam3 = { 1666.8705f, 4769.2275f, 40.9418f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 1:
								*uParam3 = { 1667.7943f, 4768.8447f, 40.9126f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 2:
								*uParam3 = { 1666.4878f, 4768.3037f, 40.9598f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 3:
								*uParam3 = { 1665.9467f, 4769.6104f, 40.9706f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 4:
								*uParam3 = { 1667.2532f, 4770.1514f, 40.923f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 5:
								*uParam3 = { 1667.4116f, 4767.921f, 40.9316f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 6:
								*uParam3 = { 1665.564f, 4768.6865f, 40.9873f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 7:
								*uParam3 = { 1666.3293f, 4770.534f, 40.952f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 8:
								*uParam3 = { 1668.177f, 4769.7686f, 40.8933f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 9:
								*uParam3 = { 1668.7183f, 4768.4624f, 40.8827f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 10:
								*uParam3 = { 1666.1051f, 4767.38f, 40.9766f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 11:
								*uParam3 = { 1665.0227f, 4769.9927f, 40.9981f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 12:
								*uParam3 = { 1667.6359f, 4771.075f, 40.9038f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 13:
								*uParam3 = { 1667.9529f, 4766.6143f, 40.9215f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 14:
								*uParam3 = { 1664.2573f, 4768.145f, 41.0075f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
							case 15:
								*uParam3 = { 1665.7881f, 4771.841f, 40.9621f };
								uParam3->f_3 = { 0f, 0f, 0f };
								uParam3->f_3.f_2 = 277.528f;
								break;
						}
						break;
				}
				break;
			}
	}
}

Vector3 func_506(int iParam0)//Position - 0x5BBD
{
	if (!__LIB_10__.func_830(iParam0))
	{
		return 0f, 0f, 0f;
	}
	switch (iParam0)
	{
		case 0:
			return -711.8212f, -915.9057f, 18.2377f;
		case 1:
			return -52.7185f, -1756.1747f, 28.4432f;
		case 2:
			return 1159.4408f, -325.6666f, 68.2272f;
		case 3:
			return 1699.4293f, 4928.6416f, 41.0858f;
		case 4:
			return -1822.9261f, 788.9531f, 137.212f;
		case 5:
			return 1166.4265f, 2703.5283f, 37.1574f;
		case 6:
			return -2973.4138f, 390.6885f, 14.0433f;
		case 7:
			return -1225.8604f, -903.5782f, 11.3263f;
		case 8:
			return 1140.659f, -981.0806f, 45.4158f;
		case 9:
			return -1490.2753f, -382.8514f, 39.1634f;
		case 10:
			return -3240.7188f, 1004.5081f, 11.8468f;
		case 11:
			return -3039.2488f, 589.3831f, 6.9251f;
		case 12:
			return 544.4275f, 2672.061f, 41.1726f;
		case 13:
			return 2558.7542f, 385.599f, 107.6391f;
		case 14:
			return 2681.5112f, 3282.7627f, 54.2573f;
		case 15:
			return 1731.1532f, 6411.6333f, 34.0373f;
		case 16:
			return 1964.9305f, 3741.207f, 31.3599f;
		case 17:
			return 29.0707f, -1348.7728f, 28.5101f;
		case 18:
			return 376.8503f, 323.9777f, 102.5825f;
		default:
	}
	return 0f, 0f, 0f;
}

void func_507()//Position - 0x53EF
{
	Global_20471 = 0;
	__LIB_11__.func_130();
}

void func_508()//Position - 0x7440
{
	Global_2821909.f_1 = 0;
	Global_2821909 = 0;
	Global_2821909.f_2 = 0;
	Global_2821909.f_33 = -1;
	Global_2821909.f_34 = -1;
	StringCopy(&(Global_2821909.f_4), "", 64);
	StringCopy(&(Global_2821909.f_39[0 /*16*/]), "", 64);
	Global_2821909.f_38 = 0;
	Global_2821909.f_56 = 0;
	Global_2821909.f_57 = 0;
	Global_2821909.f_58 = -2;
	Global_2821909.f_3 = 0;
	__LIB_0__.func_675(&(Global_2821909.f_20));
}

int func_509(int iParam0)//Position - 0x624ED
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			if (__LIB_19__.func_811(iVar0) == iVar1)
			{
				return iVar0;
			}
			iVar0++;
		}
	}
	return 145;
}

int func_510(int iParam0, int iParam1, int iParam2)//Position - 0x641F3
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (Global_97772[iVar0] == iParam0)
			{
				if (iParam1 == 145 || iParam1 == Global_97782[iVar0])
				{
					if (iParam2 == 0 || ENTITY::GET_ENTITY_MODEL(iParam0) == __LIB_11__.func_311(iParam1, iParam2))
					{
						return 1;
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_511(var uParam0, int iParam1)//Position - 0x75750
{
	int iVar0;
	int iVar1;
	*uParam0 = { 0f, 0f, 0f };
	uParam0->f_3 = 0f;
	uParam0->f_4 = 0;
	StringCopy(&(uParam0->f_5), "", 16);
	uParam0->f_9 = 0;
	uParam0->f_10 = 0;
	uParam0->f_11 = 0;
	uParam0->f_12 = 145;
	uParam0->f_13 = -1;
	uParam0->f_14 = 0;
	uParam0->f_15 = { 0f, 0f, 0f };
	uParam0->f_18 = { 0f, 0f, 0f };
	switch (iParam1)
	{
		case 0:
			*uParam0 = { -831.8538f, 172.1154f, 69.9058f };
			uParam0->f_3 = 157.5705f;
			uParam0->f_4 = __LIB_11__.func_311(0, 1);
			uParam0->f_12 = 0;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 1:
			*uParam0 = { 1970.9434f, 3801.6838f, 31.1396f };
			uParam0->f_3 = 301.3964f;
			uParam0->f_4 = __LIB_11__.func_311(0, 1);
			uParam0->f_12 = 0;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 2:
			*uParam0 = { -22.6297f, -1439.1368f, 29.6549f };
			uParam0->f_3 = 180.0808f;
			uParam0->f_4 = __LIB_11__.func_311(1, 1);
			uParam0->f_12 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 3:
			*uParam0 = { -22.5229f, -1434.6986f, 29.6552f };
			uParam0->f_3 = 141.6114f;
			uParam0->f_4 = __LIB_11__.func_311(1, 2);
			uParam0->f_12 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 19);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 4:
			*uParam0 = { 10.9281f, 545.669f, 174.7951f };
			uParam0->f_3 = 61.392f;
			uParam0->f_4 = __LIB_11__.func_311(1, 1);
			uParam0->f_12 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 5:
			*uParam0 = { 6.1093f, 544.9742f, 174.2835f };
			uParam0->f_3 = 92.1548f;
			uParam0->f_4 = __LIB_11__.func_311(1, 2);
			uParam0->f_12 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 19);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 6:
			*uParam0 = { 1981.4163f, 3808.1313f, 31.1384f };
			uParam0->f_3 = 117.2557f;
			uParam0->f_4 = __LIB_11__.func_311(2, 1);
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 7:
			*uParam0 = { -1158.4875f, -1529.3673f, 3.8995f };
			uParam0->f_3 = 35.7505f;
			uParam0->f_4 = __LIB_11__.func_311(2, 1);
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 8:
			*uParam0 = { 148.2868f, -1270.5695f, 28.2252f };
			uParam0->f_3 = 208.4685f;
			uParam0->f_4 = __LIB_11__.func_311(2, 1);
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 20);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			iVar0 = 1;
			break;
		case 9:
			*uParam0 = { 1459.5085f, -1380.45f, 78.3259f };
			uParam0->f_3 = 99.6211f;
			uParam0->f_4 = joaat("scorcher");
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 10:
			*uParam0 = { -1518.947f, -1387.8655f, -0.5134f };
			uParam0->f_3 = 98.3867f;
			uParam0->f_4 = joaat("seashark");
			iVar0 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 6);
			break;
		case 11:
			*uParam0 = { 353.0926f, 3577.5925f, 32.351f };
			uParam0->f_3 = 16.6205f;
			uParam0->f_4 = joaat("duster");
			iVar0 = 1;
			MISC::SET_BIT(&(uParam0->f_9), 6);
			break;
		case 12:
			uParam0->f_14 = 0;
			*uParam0 = { -1652.0043f, -3142.3484f, 12.9921f };
			uParam0->f_3 = 329.1082f;
			uParam0->f_12 = 0;
			uParam0->f_13 = 359;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 13:
			uParam0->f_14 = 1;
			*uParam0 = { -1271.6487f, -3380.6853f, 12.9451f };
			uParam0->f_3 = 329.5137f;
			uParam0->f_12 = 1;
			uParam0->f_13 = 359;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 14:
			uParam0->f_14 = 2;
			*uParam0 = { 1735.5863f, 3294.5305f, 40.1651f };
			uParam0->f_3 = 194.9525f;
			uParam0->f_12 = 2;
			uParam0->f_13 = 359;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 15:
			uParam0->f_14 = 3;
			*uParam0 = { -846.27f, -1363.19f, 0.22f };
			uParam0->f_3 = 108.78f;
			uParam0->f_12 = 0;
			uParam0->f_13 = 356;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 22);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 16:
			uParam0->f_14 = 4;
			*uParam0 = { -849.47f, -1354.99f, 0.24f };
			uParam0->f_3 = 109.84f;
			uParam0->f_12 = 1;
			uParam0->f_13 = 356;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 22);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 17:
			uParam0->f_14 = 5;
			*uParam0 = { -852.47f, -1346.2f, 0.21f };
			uParam0->f_3 = 108.76f;
			uParam0->f_12 = 2;
			uParam0->f_13 = 356;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 22);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 18:
			uParam0->f_14 = 6;
			*uParam0 = { -745.857f, -1433.9036f, 4.0005f };
			uParam0->f_12 = 0;
			uParam0->f_13 = 360;
			uParam0->f_15 = { -756.2952f, -1441.6093f, 2.9184f };
			uParam0->f_18 = { -738.0606f, -1423.0676f, 8.2835f };
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 19:
			uParam0->f_14 = 7;
			*uParam0 = { -761.8486f, -1453.8293f, 4.0005f };
			uParam0->f_12 = 1;
			uParam0->f_13 = 360;
			uParam0->f_15 = { -772.8158f, -1459.9572f, 3.2894f };
			uParam0->f_18 = { -754.3353f, -1440.836f, 8.3334f };
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 20:
			uParam0->f_14 = 8;
			*uParam0 = { 1769.3f, 3244f, 41.1f };
			uParam0->f_12 = 2;
			uParam0->f_13 = 360;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			iVar0 = 1;
			break;
		case 21:
			uParam0->f_14 = 9;
			*uParam0 = { 192.7897f, -1020.5385f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = 0;
			uParam0->f_13 = 357;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 22:
			uParam0->f_14 = 10;
			*uParam0 = { 192.7897f, -1020.5385f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = 1;
			uParam0->f_13 = 357;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 23:
			uParam0->f_14 = 11;
			*uParam0 = { 192.7897f, -1020.5385f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = 2;
			uParam0->f_13 = 357;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 14);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 28);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 26:
		case 27:
		case 28:
			iVar1 = (iParam1 - 26);
			uParam0->f_14 = (12 + iVar1);
			*uParam0 = { 196.2794f, -1020.4791f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = (0 + iVar1);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 27);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 29:
		case 30:
		case 31:
			iVar1 = (iParam1 - 29);
			uParam0->f_14 = (15 + iVar1);
			*uParam0 = { 199.8872f, -1020.048f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = (0 + iVar1);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 27);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 32:
		case 33:
		case 34:
			iVar1 = (iParam1 - 32);
			uParam0->f_14 = (18 + iVar1);
			*uParam0 = { 203.6006f, -1019.7762f, -99.98f };
			uParam0->f_3 = 180f;
			uParam0->f_4 = 0;
			uParam0->f_12 = (0 + iVar1);
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			MISC::SET_BIT(&(uParam0->f_9), 7);
			MISC::SET_BIT(&(uParam0->f_9), 27);
			MISC::SET_BIT(&(uParam0->f_9), 24);
			MISC::SET_BIT(&(uParam0->f_9), 29);
			iVar0 = 1;
			break;
		case 24:
			uParam0->f_14 = 21;
			*uParam0 = { 0f, 0f, 0f };
			uParam0->f_3 = 0f;
			uParam0->f_4 = 0;
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 11);
			MISC::SET_BIT(&(uParam0->f_9), 13);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			iVar0 = 1;
			break;
		case 25:
			uParam0->f_14 = 22;
			*uParam0 = { 723.2515f, -632.0496f, 27.1484f };
			uParam0->f_3 = 12.9316f;
			uParam0->f_4 = joaat("tailgater");
			MISC::SET_BIT(&(uParam0->f_9), 10);
			MISC::SET_BIT(&(uParam0->f_9), 11);
			MISC::SET_BIT(&(uParam0->f_9), 13);
			MISC::SET_BIT(&(uParam0->f_9), 12);
			iVar0 = 1;
			break;
		case 35:
			*uParam0 = { -51.23f, 3111.9f, 24.95f };
			uParam0->f_3 = 46.78f;
			uParam0->f_4 = joaat("proptrailer");
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 36:
			*uParam0 = { -55.7984f, -1096.5856f, 25.4223f };
			uParam0->f_3 = 308.0596f;
			uParam0->f_4 = joaat("bjxl");
			uParam0->f_10 = 126;
			uParam0->f_11 = 126;
			MISC::SET_BIT(&(uParam0->f_9), 9);
			MISC::SET_BIT(&(uParam0->f_9), 13);
			iVar0 = 1;
			break;
		case 37:
			*uParam0 = { -2892.93f, 3192.37f, 11.66f };
			uParam0->f_3 = -132.35f;
			uParam0->f_4 = joaat("velum");
			uParam0->f_10 = 157;
			uParam0->f_11 = 157;
			MISC::SET_BIT(&(uParam0->f_9), 9);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 13);
			iVar0 = 1;
			break;
		case 38:
			*uParam0 = { 1744.3083f, 3270.673f, 40.2076f };
			uParam0->f_3 = 125f;
			uParam0->f_4 = joaat("cargobob3");
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 39:
			*uParam0 = { 1751.4397f, 3322.643f, 42.1855f };
			uParam0->f_3 = 268.134f;
			uParam0->f_4 = joaat("submersible");
			MISC::SET_BIT(&(uParam0->f_9), 23);
			iVar0 = 1;
			break;
		case 41:
			*uParam0 = { 1377.1045f, -2076.2f, 52f };
			uParam0->f_3 = 37.5f;
			uParam0->f_4 = joaat("towtruck");
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 40:
			*uParam0 = { 1380.42f, -2072.7695f, 51.7607f };
			uParam0->f_3 = 37.5f;
			uParam0->f_4 = joaat("trash");
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 42:
			*uParam0 = { 1359.3892f, 3618.4407f, 33.8907f };
			uParam0->f_3 = 108.2337f;
			uParam0->f_4 = joaat("barracks");
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 43:
			*uParam0 = { 693.1154f, -1018.1551f, 21.6387f };
			uParam0->f_3 = 177.6454f;
			uParam0->f_4 = joaat("firetruk");
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 8);
			iVar0 = 1;
			break;
		case 44:
			*uParam0 = { -73.6963f, 495.124f, 143.5226f };
			uParam0->f_3 = 155.5994f;
			uParam0->f_4 = joaat("vacca");
			iVar0 = 1;
			break;
		case 45:
			*uParam0 = { -67.6314f, 891.8266f, 234.5348f };
			uParam0->f_3 = 294.993f;
			uParam0->f_4 = joaat("surano");
			iVar0 = 1;
			break;
		case 46:
			*uParam0 = { 533.9048f, -169.2469f, 53.7005f };
			uParam0->f_3 = 1.2998f;
			uParam0->f_4 = joaat("tornado2");
			iVar0 = 1;
			break;
		case 47:
			*uParam0 = { -726.8914f, -408.6952f, 34.0416f };
			uParam0->f_3 = 267.7392f;
			uParam0->f_4 = joaat("superd");
			iVar0 = 1;
			break;
		case 48:
			*uParam0 = { -1321.5186f, 261.3993f, 61.5709f };
			uParam0->f_3 = 350.7697f;
			uParam0->f_4 = joaat("double");
			iVar0 = 1;
			break;
		case 49:
			*uParam0 = { -1267.9991f, 451.6463f, 93.7071f };
			uParam0->f_3 = 48.9311f;
			uParam0->f_4 = joaat("double");
			iVar0 = 1;
			break;
		case 50:
			*uParam0 = { -1062.0762f, -226.7637f, 37.157f };
			uParam0->f_3 = 234.2767f;
			uParam0->f_4 = joaat("double");
			iVar0 = 1;
			break;
		case 51:
			*uParam0 = { 68.16914f, -1558.9581f, 29.469042f };
			uParam0->f_3 = 49.905754f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 52:
			*uParam0 = { 589.4399f, 2736.7078f, 42.033165f };
			uParam0->f_3 = -175.7105f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 53:
			*uParam0 = { -488.77396f, -344.57205f, 34.363564f };
			uParam0->f_3 = 82.4042f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 54:
			*uParam0 = { 288.88083f, -585.47284f, 43.15428f };
			uParam0->f_3 = -20.807068f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 55:
			*uParam0 = { 304.82938f, -1383.6742f, 31.677443f };
			uParam0->f_3 = -41.116028f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 56:
			*uParam0 = { 1126.1943f, -1481.486f, 34.701603f };
			uParam0->f_3 = -91.43369f;
			uParam0->f_4 = joaat("rumpo2");
			uParam0->f_12 = 2;
			MISC::SET_BIT(&(uParam0->f_9), 26);
			iVar0 = 1;
			break;
		case 57:
			*uParam0 = { -1598.36f, 5252.84f, 0f };
			uParam0->f_3 = 28.14f;
			uParam0->f_4 = joaat("submersible");
			uParam0->f_13 = 308;
			MISC::SET_BIT(&(uParam0->f_9), 2);
			MISC::SET_BIT(&(uParam0->f_9), 30);
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 58:
			*uParam0 = { -1602.62f, 5260.37f, 0.86f };
			uParam0->f_3 = 25.32f;
			uParam0->f_4 = joaat("dinghy");
			uParam0->f_13 = 404;
			MISC::SET_BIT(&(uParam0->f_9), 2);
			MISC::SET_BIT(&(uParam0->f_9), 22);
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 59:
			*uParam0 = { 2116.571f, 4763.2793f, 40.1596f };
			uParam0->f_3 = 198.723f;
			uParam0->f_4 = joaat("bfinjection");
			iVar0 = 1;
			break;
		case 60:
			*uParam0 = { 1133.21f, 120.2f, 80.9f };
			uParam0->f_3 = 134.4f;
			if (__LIB_0__.func_116())
			{
				uParam0->f_4 = joaat("blimp2");
			}
			else
			{
				uParam0->f_4 = joaat("blimp");
			}
			uParam0->f_13 = 401;
			MISC::SET_BIT(&(uParam0->f_9), 13);
			MISC::SET_BIT(&(uParam0->f_9), 2);
			MISC::SET_BIT(&(uParam0->f_9), 1);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			iVar0 = 1;
			break;
		case 61:
			*uParam0 = { -806.31f, -2679.65f, 13.9f };
			uParam0->f_3 = 150.54f;
			if (__LIB_0__.func_116())
			{
				uParam0->f_4 = joaat("blimp2");
			}
			else
			{
				uParam0->f_4 = joaat("blimp");
			}
			uParam0->f_13 = 401;
			MISC::SET_BIT(&(uParam0->f_9), 13);
			MISC::SET_BIT(&(uParam0->f_9), 2);
			MISC::SET_BIT(&(uParam0->f_9), 1);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			iVar0 = 1;
			break;
		case 62:
			*uParam0 = { 1985.85f, 3828.96f, 31.98f };
			uParam0->f_3 = -16.58f;
			uParam0->f_4 = joaat("blazer3");
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 63:
			*uParam0 = { 3870.75f, 4464.67f, 0f };
			uParam0->f_3 = 0f;
			uParam0->f_4 = joaat("submersible2");
			uParam0->f_13 = 308;
			MISC::SET_BIT(&(uParam0->f_9), 0);
			MISC::SET_BIT(&(uParam0->f_9), 21);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 6);
			MISC::SET_BIT(&(uParam0->f_9), 30);
			iVar0 = 1;
			break;
		case 64:
			*uParam0 = { 1257.7295f, -2564.474f, 41.717f };
			uParam0->f_3 = 284.5561f;
			uParam0->f_4 = joaat("dukes2");
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 65:
			*uParam0 = { 643.2823f, 3014.152f, 42.2733f };
			uParam0->f_3 = 128.0554f;
			uParam0->f_4 = joaat("dukes2");
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 66:
			*uParam0 = { 38.9368f, 850.8677f, 196.3f };
			uParam0->f_3 = 311.6813f;
			uParam0->f_4 = joaat("dodo");
			MISC::SET_BIT(&(uParam0->f_9), 30);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
		case 67:
			*uParam0 = { 1333.8752f, 4262.2256f, 30.78f };
			uParam0->f_3 = 262.5293f;
			uParam0->f_4 = joaat("dodo");
			MISC::SET_BIT(&(uParam0->f_9), 30);
			MISC::SET_BIT(&(uParam0->f_9), 23);
			MISC::SET_BIT(&(uParam0->f_9), 6);
			iVar0 = 1;
			break;
	}
	if (BitTest(uParam0->f_9, 10))
	{
		uParam0->f_4 = Global_113386.f_32749.f_69[uParam0->f_14 /*78*/].f_66;
		if (iParam1 == 14)
		{
			if (((((uParam0->f_4 == joaat("miljet") || uParam0->f_4 == joaat("besra")) || uParam0->f_4 == joaat("luxor")) || uParam0->f_4 == joaat("shamal")) || uParam0->f_4 == joaat("titan")) || uParam0->f_4 == joaat("luxor2"))
			{
				*uParam0 = { 1678.8f, 3229.6f, 41.8f };
				uParam0->f_3 = 106.0906f;
			}
		}
		if (!__LIB_0__.func_78(Global_113386.f_32749.f_1864[uParam0->f_14 /*3*/], 0f, 0f, 0f, 0))
		{
			*uParam0 = { Global_113386.f_32749.f_1864[uParam0->f_14 /*3*/] };
		}
		if (Global_113386.f_32749.f_1934[uParam0->f_14] != -1f)
		{
			uParam0->f_3 = Global_113386.f_32749.f_1934[uParam0->f_14];
		}
	}
	if (BitTest(uParam0->f_9, 19))
	{
		if (!__LIB_0__.func_78(Global_113386.f_2363.f_539.f_3588[1 /*10*/][uParam0->f_12 /*3*/], 0f, 0f, 0f, 0))
		{
			*uParam0 = { Global_113386.f_2363.f_539.f_3588[1 /*10*/][uParam0->f_12 /*3*/] };
			uParam0->f_3 = Global_113386.f_2363.f_539.f_3609[1 /*4*/][uParam0->f_12];
		}
	}
	else if (BitTest(uParam0->f_9, 20))
	{
		if (!__LIB_0__.func_78(Global_113386.f_2363.f_539.f_3588[0 /*10*/][uParam0->f_12 /*3*/], 0f, 0f, 0f, 0))
		{
			*uParam0 = { Global_113386.f_2363.f_539.f_3588[0 /*10*/][uParam0->f_12 /*3*/] };
			uParam0->f_3 = Global_113386.f_2363.f_539.f_3609[0 /*4*/][uParam0->f_12];
		}
	}
	return iVar0;
}

void func_512(int* iParam0, bool bParam1, bool bParam2)//Position - 0x7FBD9
{
	int iVar0;
	if (BitTest(iParam0->f_13, 30))
	{
		bParam1 = true;
	}
	__LIB_0__.func_419(iParam0);
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
		{
			HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
		}
		__LIB_0__.func_418(iVar0, iParam0);
		__LIB_11__.func_160(iVar0, iParam0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 31)
	{
		if (iVar0 != 8)
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), iVar0);
			MISC::CLEAR_BIT(&(iParam0->f_14), iVar0);
		}
		iVar0++;
	}
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		HUD::REMOVE_BLIP(iParam0);
	}
	iParam0->f_6 = 0;
	iParam0->f_12 = 0;
	iParam0->f_15 = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
		{
			PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(iParam0->f_17[iVar0], true);
			PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(iParam0->f_17[iVar0], true);
			if (bParam2)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 32, true);
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 305, false);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 268, false);
			if (bParam1)
			{
				if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()) && iParam0->f_17[iVar0] != PLAYER::PLAYER_PED_ID())
				{
					PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
				}
			}
			if (!BitTest(iParam0->f_13, 29))
			{
				PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], false, -1, 0);
			}
			iParam0->f_17[iVar0] = 0;
		}
		iVar0++;
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(PLAYER::PLAYER_PED_ID(), true);
		PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(PLAYER::PLAYER_PED_ID(), true);
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (bParam2)
		{
			PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, true);
		}
	}
	iParam0->f_21 = 0;
}

int func_513(int* iParam0, int iParam1)//Position - 0x921B8
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_11__.func_161(iVar0, iParam0, iParam1))
		{
			return 1;
		}
	}
	return 0;
}

void func_514(int iParam0, int iParam1)//Position - 0x28906
{
	int iVar0;
	iVar0 = 0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (WEAPON::GET_CURRENT_PED_WEAPON(iParam0, &iVar0, false))
		{
			if (iVar0 != 0 && iVar0 != joaat("WEAPON_UNARMED"))
			{
				if (!__LIB_11__.func_322(iParam1, iVar0))
				{
					iVar0 = 0;
				}
			}
		}
	}
	if (Global_100478 > 0)
	{
		Global_106934.f_21[iParam1] = iVar0;
	}
	else
	{
		Global_103950.f_21[iParam1] = iVar0;
	}
}

int func_515(bool bParam0)//Position - 0xE93E3
{
	if (bParam0)
	{
		return __LIB_1__.func_556(8530, -1, 0);
	}
	return __LIB_3__.func_689(PLAYER::PLAYER_ID());
}

bool func_516(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7)//Position - 0x120EE2
{
	*iParam7 = -1;
	*iParam6 = -99;
	if (iParam2 != -99)
	{
		*iParam7 = __LIB_0__.func_254(iParam0, iParam3, iParam4);
		if (*iParam7 != -1)
		{
			*iParam6 = __LIB_6__.func_758(iParam0, *iParam7, 3, iParam1);
		}
	}
	if (*iParam7 == -1)
	{
		*iParam6 = __LIB_6__.func_758(iParam0, iParam5, 3, iParam1);
	}
	return *iParam6 != -99;
}

void func_517(bool bParam0)//Position - 0x14052C
{
	Global_1660999 = bParam0;
	__LIB_6__.func_905(139, bParam0, -1, 1);
}

int func_518(int iParam0)//Position - 0x3886
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 1;
	iVar2 = 0;
	while (iVar2 < 2)
	{
		iVar1 = __LIB_10__.func_16(iParam0, iVar2);
		if (iVar1 != 0)
		{
			if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar1))
			{
				if (!NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(iVar1))
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_DOOR(iVar1);
					iVar0 = 0;
				}
			}
		}
		iVar2++;
	}
	return iVar0;
}

void func_519(var uParam0)//Position - 0x2E08C
{
	__LIB_10__.func_23(&(uParam0->f_116));
	__LIB_10__.func_22(uParam0);
	__LIB_10__.func_21(&(uParam0->f_236));
	__LIB_10__.func_20(&(uParam0->f_184));
}

void func_520(int iParam0, int iParam1)//Position - 0x533A5
{
	if (iParam0 > 255)
	{
		__LIB_0__.func_353(410, 255, iParam1);
		__LIB_0__.func_353(18095, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__.func_353(410, iParam0, iParam1);
		__LIB_0__.func_353(18095, 0, iParam1);
	}
}

void func_521(int iParam0, int iParam1)//Position - 0x533E5
{
	if (iParam0 > 255)
	{
		__LIB_0__.func_353(407, 255, iParam1);
		__LIB_0__.func_353(18094, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__.func_353(407, iParam0, iParam1);
		__LIB_0__.func_353(18094, 0, iParam1);
	}
}

void func_522(int iParam0, int iParam1)//Position - 0x53425
{
	if (iParam0 > 255)
	{
		__LIB_0__.func_353(402, 255, iParam1);
		__LIB_0__.func_353(18093, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__.func_353(402, iParam0, iParam1);
		__LIB_0__.func_353(18093, 0, iParam1);
	}
}

void func_523(int iParam0, int iParam1)//Position - 0x53465
{
	if (iParam0 > 255)
	{
		__LIB_0__.func_353(400, 255, iParam1);
		__LIB_0__.func_353(18092, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__.func_353(400, iParam0, iParam1);
		__LIB_0__.func_353(18092, 0, iParam1);
	}
}

void func_524()//Position - 0x5AA66
{
	bool bVar0;
	int iVar1;
	bVar0 = false;
	while (bVar0 <= 7)
	{
		if (BitTest(Global_262145.f_27014 /* Tunable: -651275905 */, bVar0))
		{
			iVar1 = (27100 + bVar0);
			if (!__LIB_0__.func_137(iVar1, -1))
			{
				__LIB_0__.func_521(iVar1, 1, -1);
			}
		}
		bVar0++;
	}
}

int func_525(int iParam0, int iParam1)//Position - 0x600D2
{
	switch (iParam1)
	{
		case 0:
			return __LIB_7__.func_91(iParam0, 5, 0);
			break;
		case 1:
			return __LIB_7__.func_91(iParam0, 7, 0);
			break;
		case 2:
			return __LIB_7__.func_91(iParam0, 6, 0);
			break;
	}
	return 0;
}

bool func_526(int iParam0, int iParam1, var uParam2)//Position - 0x6574C
{
	if (__LIB_0__.func_3() != 0)
	{
		return 0;
	}
	if (iParam0 != 1)
	{
		return 0;
	}
	*uParam2 = 0;
	if (__LIB_6__.func_925())
	{
		switch (iParam1)
		{
			case 4:
				*uParam2 = 20;
				break;
			case 6:
				*uParam2 = 28;
				break;
			case 19:
				*uParam2 = 36;
				break;
			case 25:
				*uParam2 = 44;
				break;
		}
	}
	else
	{
		switch (iParam1)
		{
			case 4:
				*uParam2 = 20;
				break;
			case 6:
				*uParam2 = 28;
				break;
			case 19:
				*uParam2 = 36;
				break;
			case 25:
				*uParam2 = 44;
				break;
			}
	}
	return *uParam2 != 0;
}

int func_527(int iParam0, int iParam1)//Position - 0x659D7
{
	if (__LIB_0__.func_3() != 0)
	{
		return 0;
	}
	if (iParam0 != 1)
	{
		return 0;
	}
	if (__LIB_6__.func_925())
	{
		switch (iParam1)
		{
			case 4:
				return 1;
			case 6:
				return 1;
			case 19:
				return 1;
			case 25:
				return 1;
			default:
		}
	}
	else
	{
		switch (iParam1)
		{
			case 4:
				return 1;
			case 6:
				return 1;
			case 19:
				return 1;
			case 25:
				return 1;
			}
		default:
	}
	return 0;
}

bool func_528(int iParam0)//Position - 0x6AD67
{
	var uVar0;
	int iVar1;
	uVar0 = __LIB_12__.func_550(iParam0);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

int func_529(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x750E9
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	int iVar19;
	int iVar20;
	int iVar21;
	int iVar22;
	int iVar23;
	int iVar24;
	int iVar25;
	int iVar26;
	int iVar27;
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		iVar0 = __LIB_0__.func_420(iParam0, iParam1, 10, 3);
		if (iParam2 == 8)
		{
			iVar1 = -1;
			if (iParam3 >= 241)
			{
				iVar1 = __LIB_0__.func_420(iParam0, iParam3, 8, 3);
			}
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("ACCS_DECL"), 0))
			{
				return 1;
			}
			else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_CLOTH"), 0) && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("OVER_JACKET"), 0))
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_DRAW_2"), 0))
				{
					if (iVar0 == joaat("DLC_MP_X17_M_DECL_1_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_DRAW_3"), 0))
				{
					if (iVar0 == joaat("DLC_MP_X17_M_DECL_2_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_DRAW_4"), 0))
				{
					if (iVar0 == joaat("DLC_MP_X17_M_DECL_3_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_DRAW_5"), 0))
				{
					if (iVar0 == joaat("DLC_MP_X17_M_DECL_4_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("X17_DRAW_6"), 0))
				{
					if (iVar0 == joaat("DLC_MP_X17_M_DECL_5_0"))
					{
						return 1;
					}
				}
			}
		}
		else if (iParam2 == 11)
		{
			iVar2 = -1;
			iVar3 = -1;
			if (iParam3 >= 237)
			{
				iVar2 = __LIB_0__.func_420(iParam0, iParam3, 11, 3);
				iVar3 = __LIB_0__.func_252(iVar2);
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("ACCS_DECL"), 0))
			{
				return 1;
			}
			else if (iParam1 == 0)
			{
				return 1;
			}
			else if (iParam1 == 1 || iParam1 == 2)
			{
				if ((iParam3 >= 48 && iParam3 <= 63) || iVar3 == 3)
				{
					return 1;
				}
			}
			else if (iParam1 == 3 || iParam1 == 4)
			{
				if ((iParam3 >= 96 && iParam3 <= 107) || iVar3 == 6)
				{
					return 1;
				}
			}
			else if (iParam1 == 5 || iParam1 == 6)
			{
				if ((iParam3 >= 108 && iParam3 <= 123) || iVar3 == 7)
				{
					return 1;
				}
			}
			else if (iParam3 >= 124 && iParam3 <= 139)
			{
				if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_0_0"))
				{
					return 1;
				}
			}
			else if (iParam3 >= 140 && iParam3 <= 155)
			{
				if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_3_0"))
				{
					return 1;
				}
			}
			else if (iParam1 >= 7)
			{
				if (iVar2 != -1)
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("COMBAT_TOP"), 0))
					{
						if (iVar0 == joaat("DLC_MP_LTS_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_JACKET"), 0))
					{
						if (iVar0 == joaat("DLC_MP_LOW_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_SUM2_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_SUM2_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_SUM2_2"), 0))
					{
						if (iVar0 == joaat("DLC_MP_SUM2_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_0"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_2"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_3"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_4"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_FIXER_5"), 0))
					{
						if (iVar0 == joaat("DLC_MP_FIXER_M_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_0"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_2"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_3"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_4"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_5"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_6"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_7"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_37"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_37_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("CREW_LOGO_TUNER_38"), 0))
					{
						if (iVar0 == joaat("DLC_MP_TUNER_M_DECL_38_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("AIR_DRAW_2"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("AIR_DRAW_3"), 0))
					{
						if (iVar0 == joaat("DLC_MP_AR_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("SMUG_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("SMUG_DRAW_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_SMUG_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("SMUG_DRAW_2"), 0))
					{
						if (iVar0 == joaat("DLC_MP_SMUG_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_13"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_14"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_15"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_16"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_17"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GUN_DRAW_18"), 0))
					{
						if (iVar0 == joaat("DLC_MP_GR_M_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("STUNT_DRAW_4"), 0))
					{
						if (iVar0 == joaat("DLC_MP_STUNT_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("STUNT_DRAW_9"), 0))
					{
						if (iVar0 == joaat("DLC_MP_STUNT_M_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("IE_DRAW_16"), 0))
					{
						if (iVar0 == joaat("DLC_MP_IE_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("IE_DRAW_18"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("IE_DRAW_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_IE_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("IE_DRAW_19"), 0))
					{
						if (iVar0 == joaat("DLC_MP_IE_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("X17_DRAW_3"), 0))
					{
						if (iVar0 == joaat("DLC_MP_X17_M_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("X17_DRAW_6"), 0))
					{
						if (iVar0 == joaat("DLC_MP_X17_M_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("X17_DRAW_7"), 0))
					{
						if (iVar0 == joaat("DLC_MP_X17_M_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("GORKA_SUIT"), 0))
					{
						if (iVar0 == joaat("DLC_MP_X17_M_DECL_10_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_0"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_2"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_3"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_4"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_5"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_6"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_7"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_8_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_8"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_9_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_9"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_10_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_11"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_11_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_12"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_12_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_13"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_13_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_14"), 0))
					{
						switch (iVar0)
						{
							case joaat("DLC_MP_BIKER_M_DECL_0_0"):
							case joaat("DLC_MP_BIKER_M_DECL_0_1"):
							case joaat("DLC_MP_BIKER_M_DECL_0_2"):
							case joaat("DLC_MP_BIKER_M_DECL_0_3"):
							case joaat("DLC_MP_BIKER_M_DECL_0_4"):
							case joaat("DLC_MP_BIKER_M_DECL_0_5"):
							case joaat("DLC_MP_BIKER_M_DECL_0_6"):
							case joaat("DLC_MP_BIKER_M_DECL_0_7"):
							case joaat("DLC_MP_BIKER_M_DECL_0_8"):
							case joaat("DLC_MP_GR_M_DECL_5_0"):
							case joaat("DLC_MP_GR_M_DECL_5_1"):
							case joaat("DLC_MP_GR_M_DECL_5_2"):
							case joaat("DLC_MP_GR_M_DECL_5_3"):
							case joaat("DLC_MP_GR_M_DECL_5_4"):
							case joaat("DLC_MP_GR_M_DECL_5_5"):
							case joaat("DLC_MP_GR_M_DECL_5_6"):
							case joaat("DLC_MP_GR_M_DECL_5_7"):
							case joaat("DLC_MP_GR_M_DECL_5_8"):
							case joaat("DLC_MP_GR_M_DECL_5_9"):
							case joaat("DLC_MP_GR_M_DECL_5_10"):
								return 1;
								break;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_20"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_9_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_25"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_18_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_27"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_19_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("BIKER_DRAW_28"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_20_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HEIST_DRAW_9"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_14_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HEIST_DRAW_15"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HEIST_DRAW_16"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_15_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("LOW2_DRAW_1"), 0))
					{
						if (iVar0 == joaat("DLC_MP_BIKER_M_DECL_16_0"))
						{
							return 1;
						}
					}
					if (iVar0 != -1)
					{
						iVar4 = FILES::GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(iVar0);
						iVar5 = 0;
						while (iVar5 < iVar4)
						{
							FILES::GET_FORCED_COMPONENT(iVar0, iVar5, &iVar6, &iVar7, &iVar8);
							if (iVar8 == 11)
							{
								if (iVar6 != 0 && iVar6 != joaat("0"))
								{
									if (iVar6 == iVar2)
									{
										return 1;
									}
								}
								else if (iVar7 == iParam3)
								{
									return 1;
								}
							}
							iVar5++;
						}
					}
					if (iVar2 != -1)
					{
						iVar9 = FILES::GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(iVar2);
						iVar10 = 0;
						while (iVar10 < iVar9)
						{
							FILES::GET_FORCED_COMPONENT(iVar2, iVar10, &iVar11, &iVar12, &iVar13);
							if (iVar13 == 10)
							{
								if (iVar11 != 0 && iVar11 != joaat("0"))
								{
									if (iVar11 == iVar0)
									{
										return 1;
									}
								}
								else if (iVar12 == iParam1)
								{
									return 1;
								}
							}
							iVar10++;
						}
					}
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		iVar14 = __LIB_0__.func_420(iParam0, iParam1, 10, 4);
		if (iParam2 == 8)
		{
			iVar15 = -1;
			if (iParam3 >= 241)
			{
				iVar15 = __LIB_0__.func_420(iParam0, iParam3, 8, 4);
			}
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar14, joaat("ACCS_DECL"), 0))
			{
				return 1;
			}
			else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_CLOTH"), 0) && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("OVER_JACKET"), 0))
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_DRAW_2"), 0))
				{
					if (iVar14 == joaat("DLC_MP_X17_F_DECL_1_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_DRAW_3"), 0))
				{
					if (iVar14 == joaat("DLC_MP_X17_F_DECL_2_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_DRAW_4"), 0))
				{
					if (iVar14 == joaat("DLC_MP_X17_F_DECL_3_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_DRAW_5"), 0))
				{
					if (iVar14 == joaat("DLC_MP_X17_F_DECL_4_0"))
					{
						return 1;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar15, joaat("X17_DRAW_6"), 0))
				{
					if (iVar14 == joaat("DLC_MP_X17_F_DECL_5_0"))
					{
						return 1;
					}
				}
			}
		}
		else if (iParam2 == 11)
		{
			iVar16 = -1;
			iVar17 = -1;
			if (iParam3 >= 256)
			{
				iVar16 = __LIB_0__.func_420(iParam0, iParam3, 11, 4);
				iVar17 = __LIB_0__.func_252(iVar16);
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar14, joaat("ACCS_DECL"), 0))
			{
				return 1;
			}
			else if (iParam1 == 0)
			{
				return 1;
			}
			else if (iParam1 == 1)
			{
				if ((iParam3 >= 16 && iParam3 <= 31) || iVar17 == 1)
				{
					return 1;
				}
			}
			else if (iParam1 == 2 || iParam1 == 3)
			{
				if ((iParam3 >= 128 && iParam3 <= 143) || iVar17 == 8)
				{
					return 1;
				}
			}
			else if (iParam1 == 4 || iParam1 == 5)
			{
				if ((iParam3 >= 160 && iParam3 <= 175) || iVar17 == 10)
				{
					return 1;
				}
			}
			else if (iParam3 >= 224 && iParam3 <= 239)
			{
				if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_3_0"))
				{
					return 1;
				}
			}
			else if (iParam1 >= 6)
			{
				if (iVar16 != -1)
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("COMBAT_TOP"), 0))
					{
						if (iVar14 == joaat("DLC_MP_LTS_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_JACKET"), 0))
					{
						if (iVar14 == joaat("DLC_MP_LOW_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_SUM2_0"), 0))
					{
						if (iVar14 == joaat("DLC_MP_SUM2_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_SUM2_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_SUM2_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_0"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_2"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_4"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_5"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_6"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_FIXER_7"), 0))
					{
						if (iVar14 == joaat("DLC_MP_FIXER_F_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_0"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_2"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_4"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_5"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_6"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_7"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_36"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_36_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("CREW_LOGO_TUNER_37"), 0))
					{
						if (iVar14 == joaat("DLC_MP_TUNER_F_DECL_37_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("AIR_DRAW_2"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("AIR_DRAW_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_AR_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("SMUG_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("SMUG_DRAW_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_SMUG_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("SMUG_DRAW_2"), 0))
					{
						if (iVar14 == joaat("DLC_MP_SMUG_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_19"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_20"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_21"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_22"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_23"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GUN_DRAW_24"), 0))
					{
						if (iVar14 == joaat("DLC_MP_GR_F_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("STUNT_DRAW_4"), 0))
					{
						if (iVar14 == joaat("DLC_MP_STUNT_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("STUNT_DRAW_9"), 0))
					{
						if (iVar14 == joaat("DLC_MP_STUNT_F_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_16"), 0))
					{
						if (iVar14 == joaat("DLC_MP_IE_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_18"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_IE_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_19"), 0))
					{
						if (iVar14 == joaat("DLC_MP_IE_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("X17_DRAW_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_X17_F_DECL_0_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("X17_DRAW_6"), 0))
					{
						if (iVar14 == joaat("DLC_MP_X17_F_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("X17_DRAW_7"), 0))
					{
						if (iVar14 == joaat("DLC_MP_X17_F_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GORKA_SUIT"), 0))
					{
						if (iVar14 == joaat("DLC_MP_X17_F_DECL_10_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("X17_DRAW_13"), 0))
					{
						if (iVar14 == joaat("DLC_MP_X17_F_DECL_11_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_0"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_1_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_2_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_2"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_3_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_4_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_4"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_5_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_5"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_6_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_6"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_7_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_7"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_8_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_8"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_25"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_9_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_9"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_10_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_11"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_11_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_12"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_12_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_13"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_13_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_14"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_25_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_15"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_26_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_18"), 0))
					{
						switch (iVar14)
						{
							case joaat("DLC_MP_BIKER_F_DECL_0_0"):
							case joaat("DLC_MP_BIKER_F_DECL_0_1"):
							case joaat("DLC_MP_BIKER_F_DECL_0_2"):
							case joaat("DLC_MP_BIKER_F_DECL_0_3"):
							case joaat("DLC_MP_BIKER_F_DECL_0_4"):
							case joaat("DLC_MP_BIKER_F_DECL_0_5"):
							case joaat("DLC_MP_BIKER_F_DECL_0_6"):
							case joaat("DLC_MP_BIKER_F_DECL_0_7"):
							case joaat("DLC_MP_BIKER_F_DECL_0_8"):
							case joaat("DLC_MP_GR_F_DECL_5_0"):
							case joaat("DLC_MP_GR_F_DECL_5_1"):
							case joaat("DLC_MP_GR_F_DECL_5_2"):
							case joaat("DLC_MP_GR_F_DECL_5_3"):
							case joaat("DLC_MP_GR_F_DECL_5_4"):
							case joaat("DLC_MP_GR_F_DECL_5_5"):
							case joaat("DLC_MP_GR_F_DECL_5_6"):
							case joaat("DLC_MP_GR_F_DECL_5_7"):
							case joaat("DLC_MP_GR_F_DECL_5_8"):
							case joaat("DLC_MP_GR_F_DECL_5_9"):
							case joaat("DLC_MP_GR_F_DECL_5_10"):
								return 1;
								break;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_30"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_27_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_32"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_28_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("BIKER_DRAW_33"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_29_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("HEIST_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW_DRAW_0"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_15_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("HEIST_DRAW_8"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_16_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("HEIST_DRAW_9"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_17_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("HEIST_DRAW_16"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("HEIST_DRAW_17"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_18_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW_DRAW_3"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_20_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW_DRAW_5"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_21_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW2_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW2_DRAW_1"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_22_0"))
						{
							return 1;
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("LOW2_DRAW_9"), 0))
					{
						if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_23_0"))
						{
							return 1;
						}
					}
					if (iVar14 != -1)
					{
						iVar18 = FILES::GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(iVar14);
						iVar19 = 0;
						while (iVar19 < iVar18)
						{
							FILES::GET_FORCED_COMPONENT(iVar14, iVar19, &iVar20, &iVar21, &iVar22);
							if (iVar22 == 11)
							{
								if (iVar20 != 0 && iVar20 != joaat("0"))
								{
									if (iVar20 == iVar16)
									{
										return 1;
									}
								}
								else if (iVar21 == iParam3)
								{
									return 1;
								}
							}
							iVar19++;
						}
					}
					if (iVar16 != -1)
					{
						iVar23 = FILES::GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(iVar16);
						iVar24 = 0;
						while (iVar24 < iVar23)
						{
							FILES::GET_FORCED_COMPONENT(iVar16, iVar24, &iVar25, &iVar26, &iVar27);
							if (iVar27 == 10)
							{
								if (iVar25 != 0 && iVar25 != joaat("0"))
								{
									if (iVar25 == iVar14)
									{
										return 1;
									}
								}
								else if (iVar26 == iParam1)
								{
									return 1;
								}
							}
							iVar24++;
						}
					}
				}
				else if ((iParam3 >= 128 && iParam3 <= 143) || iVar17 == 8)
				{
					if (iVar14 == joaat("DLC_MP_BIKER_F_DECL_14_0"))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_530(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x768A0
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 1)
		{
			if (iParam2 >= 26)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 1, 3);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
					return 1;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 1)
		{
			if (iParam2 >= 26)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 1, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_531(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x76AC0
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 14)
		{
			if (iParam2 >= 327)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 14, 3);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("CUFF"), 1))
				{
					return 1;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 14)
		{
			if (iParam2 >= 327)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 14, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("CUFF"), 1))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_532(int iParam0, int iParam1)//Position - 0x76C8B
{
	switch (iParam0)
	{
		case joaat("MP_M_Freemode_01"):
			if (iParam1 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 3), joaat("LOW2_OPEN_CHECK"), 0))
			{
				return 1;
			}
			break;
		case joaat("MP_F_Freemode_01"):
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 4), joaat("LOW2_OPEN_CHECK"), 0))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_533(int iParam0)//Position - 0x7A290
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	if (iParam0 == 8)
	{
		return __LIB_0__.func_137(129, -1);
	}
	if (iParam0 == 9)
	{
		return __LIB_0__.func_137(135, -1);
	}
	if (iParam0 == 10)
	{
		return __LIB_0__.func_137(136, -1);
	}
	if (iParam0 == 11)
	{
		return __LIB_0__.func_137(137, -1);
	}
	if (iParam0 == 12)
	{
		iVar0 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar1 = __LIB_1__.func_556(8272, -1, 0);
		if (iVar1 == 0 || iVar0 >= iVar1)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 13)
	{
		iVar2 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar3 = __LIB_1__.func_556(8273, -1, 0);
		if (iVar3 == 0 || iVar2 >= iVar3)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 14)
	{
		iVar4 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar5 = __LIB_1__.func_556(8274, -1, 0);
		if (iVar5 == 0 || iVar4 >= iVar5)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 15)
	{
		iVar6 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar7 = __LIB_1__.func_556(8275, -1, 0);
		if (iVar7 == 0 || iVar6 >= iVar7)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 16)
	{
		iVar8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar9 = __LIB_1__.func_556(8276, -1, 0);
		if (iVar9 == 0 || iVar8 >= iVar9)
		{
			return 0;
		}
		return 1;
	}
	if (iParam0 == 17)
	{
		iVar10 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar11 = __LIB_1__.func_556(8277, -1, 0);
		if (iVar11 == 0 || iVar10 >= iVar11)
		{
			return 0;
		}
		return 1;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return BitTest(Global_113386.f_20564.f_471, iParam0);
	}
	return BitTest(Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_10, iParam0);
}

void func_534(int iParam0)//Position - 0x7C276
{
	int iVar0;
	iVar0 = __LIB_0__.func_716(87);
	Global_2676732[iVar0 /*83*/] = 87;
	Global_2676732[iVar0 /*83*/].f_17 = iParam0;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "", 64);
}

void func_535()//Position - 0x7D540
{
	int iVar0;
	iVar0 = __LIB_0__.func_228(30513, -1);
	if (!Global_1966155 && iVar0 < 3)
	{
		if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !__LIB_1__.func_352(PLAYER::PLAYER_ID()))
		{
			MISC::CLEAR_BIT(&(Global_1946250.f_9), 1);
			__LIB_0__.func_353(30513, iVar0 + 1, -1);
			Global_1966155 = 1;
			__LIB_0__.func_151("CCR_INC_HT" /* GXT: Increasing your reputation with the LS Car Meet unlocks vehicle trade prices, exclusive items for purchase at the Merch Shop and Mod Shop, and additional bonus rewards. */, -1);
		}
		else if (!BitTest(Global_1946250.f_9, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_9), 1);
		}
	}
}

int func_536(int iParam0)//Position - 0x8A1C8
{
	if (__LIB_11__.func_361(iParam0))
	{
		if (!__LIB_0__.func_112())
		{
			return Global_4538992.f_217 >= 8;
		}
		if (NETSHOPPING::NET_GAMESERVER_BASKET_IS_FULL() || Global_4538992.f_217 >= 8)
		{
			return 1;
		}
	}
	return 0;
}

int func_537(int iParam0, int iParam1, int iParam2)//Position - 0xF5EA0
{
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_22"):
		case joaat("DLC_MP_H3_M_JBIB_9_22"):
			return 0;
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_24"):
		case joaat("DLC_MP_H3_M_JBIB_9_24"):
			return 0;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_X17_M_OUTFIT_SCUBA_0"):
		case joaat("DLC_MP_X17_F_OUTFIT_SCUBA_0"):
			if (__LIB_0__.func_137(28231, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_M_OUTFIT_PRP_1"):
		case joaat("DLC_MP_H3_M_OUTFIT_PRP_2"):
		case joaat("DLC_MP_H3_F_OUTFIT_PRP_1"):
		case joaat("DLC_MP_H3_F_OUTFIT_PRP_2"):
			if (__LIB_0__.func_137(28225, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_M_OUTFIT_UND_1"):
		case joaat("DLC_MP_H3_F_OUTFIT_UND_1"):
			if (__LIB_0__.func_137(28226, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_M_OUTFIT_VAL_1"):
		case joaat("DLC_MP_H3_F_OUTFIT_VAL_1"):
			if (__LIB_0__.func_137(28227, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_M_OUTFIT_PR_1"):
		case joaat("DLC_MP_H3_M_OUTFIT_PR_4"):
		case joaat("DLC_MP_H3_M_OUTFIT_PR_2"):
		case joaat("DLC_MP_H3_M_OUTFIT_PR_3"):
		case joaat("DLC_MP_H3_F_OUTFIT_PR_1"):
		case joaat("DLC_MP_H3_F_OUTFIT_PR_4"):
		case joaat("DLC_MP_H3_F_OUTFIT_PR_2"):
		case joaat("DLC_MP_H3_F_OUTFIT_PR_3"):
			if (__LIB_0__.func_137(28229, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_M_OUTFIT_FIB_1"):
		case joaat("DLC_MP_H3_M_OUTFIT_FIB_2"):
		case joaat("DLC_MP_H3_M_OUTFIT_FIB_3"):
		case joaat("DLC_MP_H3_M_OUTFIT_FIB_4"):
		case joaat("DLC_MP_H3_F_OUTFIT_FIB_1"):
		case joaat("DLC_MP_H3_F_OUTFIT_FIB_2"):
		case joaat("DLC_MP_H3_F_OUTFIT_FIB_3"):
		case joaat("DLC_MP_H3_F_OUTFIT_FIB_4"):
			if (__LIB_0__.func_137(28230, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_0"):
		case joaat("DLC_MP_H3_F_JBIB_10_1"):
		case joaat("DLC_MP_H3_M_JBIB_9_0"):
		case joaat("DLC_MP_H3_M_JBIB_9_1"):
		case joaat("DLC_MP_H3_F_FEET_0_0"):
		case joaat("DLC_MP_H3_F_TEETH_1_0"):
		case joaat("DLC_MP_H3_F_TEETH_2_0"):
		case joaat("DLC_MP_H3_M_FEET_0_0"):
		case joaat("DLC_MP_H3_M_TEETH_1_0"):
		case joaat("DLC_MP_H3_M_TEETH_2_0"):
			if (__LIB_0__.func_137(28224, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_16_0"):
		case joaat("DLC_MP_H3_M_JBIB_12_0"):
			if (__LIB_0__.func_137(28172, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_ARENA_M_OUTFIT_MORPH_A_2"):
		case joaat("DLC_MP_ARENA_M_BERD_0_18"):
		case joaat("DLC_MP_ARENA_M_LEGS_4_18"):
		case joaat("DLC_MP_ARENA_M_FEET_6_18"):
		case joaat("DLC_MP_ARENA_M_JBIB_2_18"):
		case joaat("DLC_MP_ARENA_F_OUTFIT_MORPH_A_2"):
		case joaat("DLC_MP_ARENA_F_BERD_0_18"):
		case joaat("DLC_MP_ARENA_F_LEGS_4_18"):
		case joaat("DLC_MP_ARENA_F_FEET_6_18"):
		case joaat("DLC_MP_ARENA_F_JBIB_2_18"):
			if (__LIB_0__.func_137(28171, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_ARENA_M_OUTFIT_MORPH_A_1"):
		case joaat("DLC_MP_ARENA_M_BERD_0_17"):
		case joaat("DLC_MP_ARENA_M_LEGS_4_17"):
		case joaat("DLC_MP_ARENA_M_FEET_6_17"):
		case joaat("DLC_MP_ARENA_M_JBIB_2_17"):
		case joaat("DLC_MP_ARENA_F_OUTFIT_MORPH_A_1"):
		case joaat("DLC_MP_ARENA_F_BERD_0_17"):
		case joaat("DLC_MP_ARENA_F_LEGS_4_17"):
		case joaat("DLC_MP_ARENA_F_FEET_6_17"):
		case joaat("DLC_MP_ARENA_F_JBIB_2_17"):
			if (__LIB_0__.func_137(28173, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_ARENA_M_OUTFIT_MORPH_A_0"):
		case joaat("DLC_MP_ARENA_M_BERD_0_16"):
		case joaat("DLC_MP_ARENA_M_LEGS_4_16"):
		case joaat("DLC_MP_ARENA_M_FEET_6_16"):
		case joaat("DLC_MP_ARENA_M_JBIB_2_16"):
		case joaat("DLC_MP_ARENA_F_OUTFIT_MORPH_A_0"):
		case joaat("DLC_MP_ARENA_F_BERD_0_16"):
		case joaat("DLC_MP_ARENA_F_LEGS_4_16"):
		case joaat("DLC_MP_ARENA_F_FEET_6_16"):
		case joaat("DLC_MP_ARENA_F_JBIB_2_16"):
			if (__LIB_0__.func_137(28174, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_ARENA_M_OUTFIT_MORPH_A_3"):
		case joaat("DLC_MP_ARENA_M_BERD_0_19"):
		case joaat("DLC_MP_ARENA_M_LEGS_4_19"):
		case joaat("DLC_MP_ARENA_M_FEET_6_19"):
		case joaat("DLC_MP_ARENA_M_JBIB_2_19"):
		case joaat("DLC_MP_ARENA_F_OUTFIT_MORPH_A_3"):
		case joaat("DLC_MP_ARENA_F_BERD_0_19"):
		case joaat("DLC_MP_ARENA_F_LEGS_4_19"):
		case joaat("DLC_MP_ARENA_F_FEET_6_19"):
		case joaat("DLC_MP_ARENA_F_JBIB_2_19"):
			if (__LIB_0__.func_137(28175, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_18"):
		case joaat("DLC_MP_H3_M_JBIB_9_18"):
			if (__LIB_1__.func_595(77, -1) || __LIB_0__.func_137(28197, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_15"):
		case joaat("DLC_MP_H3_M_JBIB_9_15"):
			if (__LIB_1__.func_596(92, -1) >= __LIB_0__.func_238(92, 5, 9) || __LIB_0__.func_137(28198, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_16"):
		case joaat("DLC_MP_H3_F_JBIB_10_17"):
		case joaat("DLC_MP_H3_F_JBIB_10_19"):
		case joaat("DLC_MP_H3_M_JBIB_9_16"):
		case joaat("DLC_MP_H3_M_JBIB_9_17"):
		case joaat("DLC_MP_H3_M_JBIB_9_19"):
			if (((__LIB_1__.func_595(77, -1) && __LIB_1__.func_595(78, -1)) && __LIB_1__.func_596(92, -1) >= __LIB_0__.func_238(92, 5, 9)) || __LIB_0__.func_137(28200, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_001_F"):
				case joaat("mpHeist3_Tee_001_M"):
					if (__LIB_1__.func_595(78, -1) || __LIB_0__.func_137(28199, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_000_F"):
				case joaat("mpHeist3_Tee_000_M"):
					if (((__LIB_1__.func_595(77, -1) && __LIB_1__.func_595(78, -1)) && __LIB_1__.func_596(92, -1) >= __LIB_0__.func_238(92, 5, 9)) || __LIB_0__.func_137(28200, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_23"):
		case joaat("DLC_MP_H3_M_JBIB_9_23"):
			if (__LIB_1__.func_596(93, -1) >= __LIB_0__.func_238(93, 5, 9) || __LIB_0__.func_137(28201, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_21"):
		case joaat("DLC_MP_H3_M_JBIB_9_21"):
			if (__LIB_1__.func_595(79, -1) || __LIB_0__.func_137(28202, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_20"):
		case joaat("DLC_MP_H3_M_JBIB_9_20"):
			if (__LIB_1__.func_595(80, -1) || __LIB_0__.func_137(28203, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_007_F"):
				case joaat("mpHeist3_Tee_008_F"):
				case joaat("mpHeist3_Tee_009_F"):
				case joaat("mpHeist3_Tee_007_M"):
				case joaat("mpHeist3_Tee_008_M"):
				case joaat("mpHeist3_Tee_009_M"):
					if (((__LIB_1__.func_596(93, -1) >= __LIB_0__.func_238(93, 5, 9) && __LIB_1__.func_595(79, -1)) && __LIB_1__.func_595(80, -1)) || __LIB_0__.func_137(28204, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_7"):
		case joaat("DLC_MP_H3_M_JBIB_9_7"):
			if (__LIB_1__.func_596(95, -1) >= __LIB_0__.func_238(95, 5, 9) || __LIB_0__.func_137(28205, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_8"):
		case joaat("DLC_MP_H3_F_JBIB_10_9"):
		case joaat("DLC_MP_H3_F_JBIB_10_10"):
		case joaat("DLC_MP_H3_M_JBIB_9_8"):
		case joaat("DLC_MP_H3_M_JBIB_9_9"):
		case joaat("DLC_MP_H3_M_JBIB_9_10"):
			if (((__LIB_1__.func_595(81, -1) && __LIB_1__.func_596(94, -1) >= __LIB_0__.func_238(94, 5, 9)) && __LIB_1__.func_596(95, -1) >= __LIB_0__.func_238(95, 5, 9)) || __LIB_0__.func_137(28208, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_004_F"):
				case joaat("mpHeist3_Tee_004_M"):
					if (__LIB_1__.func_595(81, -1) || __LIB_0__.func_137(28206, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_005_F"):
				case joaat("mpHeist3_Tee_005_M"):
					if (__LIB_1__.func_596(94, -1) >= __LIB_0__.func_238(94, 5, 9) || __LIB_0__.func_137(28207, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_2"):
		case joaat("DLC_MP_H3_M_JBIB_9_2"):
			if (__LIB_1__.func_595(82, -1) || __LIB_0__.func_137(28209, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_5"):
		case joaat("DLC_MP_H3_M_JBIB_9_5"):
			if (__LIB_1__.func_595(83, -1) || __LIB_0__.func_137(28210, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_3"):
		case joaat("DLC_MP_H3_M_JBIB_9_3"):
			if (__LIB_1__.func_596(96, -1) >= __LIB_0__.func_238(96, 5, 9) || __LIB_0__.func_137(28211, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_4"):
		case joaat("DLC_MP_H3_F_JBIB_10_6"):
		case joaat("DLC_MP_H3_M_JBIB_9_4"):
		case joaat("DLC_MP_H3_M_JBIB_9_6"):
			if (((__LIB_1__.func_595(82, -1) && __LIB_1__.func_595(83, -1)) && __LIB_1__.func_596(96, -1) >= __LIB_0__.func_238(96, 5, 9)) || __LIB_0__.func_137(28212, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_006_F"):
				case joaat("mpHeist3_Tee_006_M"):
					if (((__LIB_1__.func_595(84, -1) && __LIB_1__.func_595(85, -1)) && __LIB_1__.func_596(97, -1) >= __LIB_0__.func_238(97, 5, 9)) || __LIB_0__.func_137(28212, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_10_11"):
		case joaat("DLC_MP_H3_M_JBIB_9_11"):
			if (__LIB_1__.func_595(84, -1) || __LIB_0__.func_137(28213, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_12"):
		case joaat("DLC_MP_H3_M_JBIB_9_12"):
			if (__LIB_1__.func_595(85, -1) || __LIB_0__.func_137(28214, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_14"):
		case joaat("DLC_MP_H3_M_JBIB_9_14"):
			if (__LIB_1__.func_596(97, -1) >= __LIB_0__.func_238(97, 5, 9) || __LIB_0__.func_137(28215, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_10_13"):
		case joaat("DLC_MP_H3_M_JBIB_9_13"):
			if (((__LIB_1__.func_595(84, -1) && __LIB_1__.func_595(85, -1)) && __LIB_1__.func_596(97, -1) >= __LIB_0__.func_238(97, 5, 9)) || __LIB_0__.func_137(28216, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_002_F"):
				case joaat("mpHeist3_Tee_002_M"):
					if (__LIB_0__.func_137(28249, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_13_11"):
		case joaat("DLC_MP_H3_F_JBIB_13_12"):
		case joaat("DLC_MP_H3_M_JBIB_11_19"):
		case joaat("DLC_MP_H3_M_JBIB_11_20"):
			if ((__LIB_6__.func_979(iParam0, 1, 1, 1, -1) || __LIB_1__.func_595(86, -1)) || __LIB_0__.func_137(28217, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_13_14"):
		case joaat("DLC_MP_H3_M_JBIB_11_22"):
			if ((__LIB_6__.func_979(iParam0, 1, 1, 1, -1) || __LIB_1__.func_595(87, -1)) || __LIB_0__.func_137(28218, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_13_13"):
		case joaat("DLC_MP_H3_M_JBIB_11_21"):
			if ((__LIB_6__.func_979(iParam0, 1, 1, 1, -1) || __LIB_1__.func_595(88, -1)) || __LIB_0__.func_137(28219, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_13_10"):
		case joaat("DLC_MP_H3_M_JBIB_11_18"):
		case joaat("DLC_MP_H3_F_JBIB_13_15"):
		case joaat("DLC_MP_H3_M_JBIB_11_23"):
			if ((__LIB_6__.func_979(iParam0, 1, 1, 1, -1) || ((__LIB_1__.func_595(86, -1) && __LIB_1__.func_595(87, -1)) && __LIB_1__.func_595(88, -1))) || __LIB_0__.func_137(28220, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_013_F"):
				case joaat("mpHeist3_Tee_013_M"):
					if (__LIB_0__.func_137(28183, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_014_F"):
				case joaat("mpHeist3_Tee_014_M"):
					if (__LIB_0__.func_137(28182, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_015_F"):
				case joaat("mpHeist3_Tee_015_M"):
					if (__LIB_0__.func_137(28184, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_016_F"):
				case joaat("mpHeist3_Tee_016_M"):
					if (__LIB_0__.func_137(28181, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_017_F"):
				case joaat("mpHeist3_Tee_017_M"):
					if (__LIB_0__.func_137(28178, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_018_F"):
				case joaat("mpHeist3_Tee_018_M"):
					if (__LIB_0__.func_137(28177, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_019_F"):
				case joaat("mpHeist3_Tee_019_M"):
					if (__LIB_0__.func_137(28176, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_020_F"):
				case joaat("mpHeist3_Tee_020_M"):
					if (__LIB_0__.func_137(28180, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_021_F"):
				case joaat("mpHeist3_Tee_021_M"):
					if (__LIB_0__.func_137(28179, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_022_F"):
				case joaat("mpHeist3_Tee_022_M"):
					if (((((((((__LIB_0__.func_137(28176, -1) && __LIB_0__.func_137(28177, -1)) && __LIB_0__.func_137(28178, -1)) && __LIB_0__.func_137(28179, -1)) && __LIB_0__.func_137(28180, -1)) && __LIB_0__.func_137(28181, -1)) && __LIB_0__.func_137(28182, -1)) && __LIB_0__.func_137(28183, -1)) && __LIB_0__.func_137(28184, -1)) || __LIB_0__.func_137(28221, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_023_F"):
				case joaat("mpHeist3_Tee_023_M"):
					if (__LIB_0__.func_137(28191, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_12_2"):
		case joaat("DLC_MP_H3_M_JBIB_11_2"):
			if (__LIB_0__.func_137(28185, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_12_3"):
		case joaat("DLC_MP_H3_M_JBIB_11_3"):
			if (__LIB_0__.func_137(28188, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_12_4"):
		case joaat("DLC_MP_H3_M_JBIB_11_4"):
			if (__LIB_0__.func_137(28186, -1))
			{
				return 1;
			}
			break;
		case joaat("DLC_MP_H3_F_JBIB_12_5"):
		case joaat("DLC_MP_H3_M_JBIB_11_5"):
			if (__LIB_0__.func_137(28187, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_011_F"):
				case joaat("mpHeist3_Tee_011_M"):
					if (__LIB_0__.func_137(28190, -1))
					{
						return 1;
					}
					break;
				case joaat("mpHeist3_Tee_012_F"):
				case joaat("mpHeist3_Tee_012_M"):
					if (__LIB_0__.func_137(28189, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H3_F_JBIB_12_0"):
		case joaat("DLC_MP_H3_F_JBIB_12_1"):
		case joaat("DLC_MP_H3_M_JBIB_11_0"):
		case joaat("DLC_MP_H3_M_JBIB_11_1"):
			if (__LIB_6__.func_804(0, 1) || __LIB_0__.func_137(28222, -1))
			{
				return 1;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_003_F"):
				case joaat("mpHeist3_Tee_003_M"):
					if (__LIB_6__.func_804(0, 1) || __LIB_0__.func_137(28222, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	switch (iParam1)
	{
		case joaat("mpHeist3_overlays"):
			switch (iParam2)
			{
				case joaat("mpHeist3_Tee_010_F"):
				case joaat("mpHeist3_Tee_010_M"):
					if ((((((((((((((((((__LIB_1__.func_595(77, -1) && __LIB_1__.func_595(78, -1)) && __LIB_1__.func_596(92, -1) >= __LIB_0__.func_238(92, 5, 9)) && __LIB_1__.func_596(93, -1) >= __LIB_0__.func_238(93, 5, 9)) && __LIB_1__.func_595(79, -1)) && __LIB_1__.func_595(80, -1)) && __LIB_1__.func_595(81, -1)) && __LIB_1__.func_596(94, -1) >= __LIB_0__.func_238(94, 5, 9)) && __LIB_1__.func_596(95, -1) >= __LIB_0__.func_238(95, 5, 9)) && __LIB_1__.func_595(82, -1)) && __LIB_1__.func_595(83, -1)) && __LIB_1__.func_596(96, -1) >= __LIB_0__.func_238(96, 5, 9)) && __LIB_1__.func_595(84, -1)) && __LIB_1__.func_595(85, -1)) && __LIB_1__.func_596(97, -1) >= __LIB_0__.func_238(97, 5, 9)) && __LIB_1__.func_595(86, -1)) && __LIB_1__.func_595(87, -1)) && __LIB_1__.func_595(88, -1)) || __LIB_0__.func_137(28223, -1))
					{
						return 1;
					}
					break;
			}
			break;
	}
	return 0;
}

void func_538(int iParam0, char* sParam1, int iParam2)//Position - 0xFD8C9
{
	if ((iParam0 >= 0 && iParam0 < 21) && iParam2 == iParam0 == 20)
	{
		StringCopy(&(Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2459[iParam0 /*8*/]), sParam1, 32);
	}
}

void func_539(var uParam0)//Position - 0x103493
{
	struct<3> Var0;
	float fVar1;
	int iVar2;
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		iVar2 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (ENTITY::DOES_ENTITY_EXIST(iVar2))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar2, false) && __LIB_0__.func_332(*uParam0, &Var0, &fVar1))
			{
				ENTITY::SET_ENTITY_COORDS(iVar2, Var0, true, false, false, true);
				ENTITY::SET_ENTITY_HEADING(iVar2, fVar1);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar2, 5f);
			}
		}
	}
}

int func_540(var uParam0)//Position - 0x103C70
{
	int iVar0;
	if (uParam0->f_1)
	{
		return 1;
	}
	iVar0 = __LIB_11__.func_415(uParam0);
	STREAMING::REQUEST_MODEL(iVar0);
	if (STREAMING::HAS_MODEL_LOADED(iVar0))
	{
		return 1;
	}
	return 0;
}

int func_541(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1066F5
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if ((iParam2 >= 43 && iParam2 <= 48) || (iParam2 >= 49 && iParam2 <= 54))
			{
				return 1;
			}
			if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_8"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_9"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCARF"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LUXE_SCARF"), 0))
				{
					return 1;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 92)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 3);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCARF"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LUXE_SCARF"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_542(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x107218
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BRACES"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_543(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x10725D
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 25 && iParam2 <= 30)
			{
				return 1;
			}
			else if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_5"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_544(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1072BB
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 19 && iParam2 <= 24)
			{
				return 1;
			}
			else if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_4"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_545(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x107319
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 13 && iParam2 <= 18)
			{
				return 1;
			}
			else if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_3"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_546(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x107377
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("CHAIN"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("ALT_CHAIN"), 0))
				{
					return 1;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 92)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 3);
				}
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("CHAIN"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("ALT_CHAIN"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_547(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x10741F
{
	if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 55)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 4);
				}
				if ((((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TIE"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LOOSE_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BOWTIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LOOSE_BOWTIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("ALT_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TUX_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TUX_TIE_ALT"), 0))
				{
					return 1;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 7)
		{
			if (iParam2 >= 41 && iParam2 <= 88)
			{
				return 1;
			}
			if (iParam2 >= 92)
			{
				if (iParam3 == -1)
				{
					iParam3 = __LIB_0__.func_420(iParam0, iParam2, 7, 3);
				}
				if (((((((((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_10"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_11"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("DRAW_12"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LOOSE_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BOWTIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("LOOSE_BOWTIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("ALT_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TUX_TIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("TUX_TIE_ALT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("FULL_BOWTIE"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("VEST_TIE"), 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

var func_548(var uParam0, int iParam1, int iParam2)//Position - 0x11A5D9
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = Global_4537234[iParam2];
	iVar1 = (iParam1 - 1);
	iVar2 = iParam1;
	while (iVar2 <= (iParam2 - 1))
	{
		if (Global_4537234[iVar2] <= iVar0)
		{
			iVar1++;
			__LIB_11__.func_437(uParam0, iVar1, iVar2);
		}
		iVar2++;
	}
	__LIB_11__.func_437(uParam0, iVar1 + 1, iParam2);
	return iVar1 + 1;
}

bool func_549(char* sParam0)//Position - 0x12A26D
{
	if (!Global_4538835)
	{
		return 1;
	}
	return __LIB_11__.func_447(sParam0) == Global_4538836;
}

bool func_550(char* sParam0, int iParam1)//Position - 0x12B018
{
	if (!Global_4538835 || iParam1 != 1)
	{
		return 1;
	}
	return __LIB_11__.func_336(sParam0) == Global_4538836;
}

int func_551(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x12B291
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		iVar0 = -1;
		if (iParam3 >= 327)
		{
			iVar0 = __LIB_0__.func_420(iParam0, iParam3, 14, 3);
		}
		if ((iParam3 >= 319 && iParam3 <= 326) || (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("WATCH"), 1)))
		{
			if (iParam1 == 11)
			{
				iVar1 = -1;
				iVar2 = -1;
				if (iParam2 >= 237)
				{
					iVar1 = __LIB_0__.func_420(iParam0, iParam2, 11, 3);
					iVar2 = __LIB_0__.func_252(iVar1);
				}
				if ((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("HEIST_DRAW_7"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("HEIST_DRAW_10"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("BIKER_VEST"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_16"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_19"), 0))
				{
				}
				else if ((((((((((((((((((iParam2 >= 48 && iParam2 <= 63) || (iParam2 >= 64 && iParam2 <= 79)) || (iParam2 >= 96 && iParam2 <= 107)) || (iParam2 >= 108 && iParam2 <= 123)) || (iParam2 >= 156 && iParam2 <= 171)) || (iParam2 >= 188 && iParam2 <= 203)) || (iParam2 >= 220 && iParam2 <= 235)) || iVar2 == 3) || iVar2 == 4) || iVar2 == 6) || iVar2 == 7) || iVar2 == 10) || iVar2 == 12) || iVar2 == 14) || (iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("LONG_SLEEVE"), 0))) || (iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("JACKET"), 0))) || (iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SWEAT_VEST"), 0))) || (iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("ARENA_DRAW_17"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 8)
			{
				if (iParam2 >= 241 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 8, 3), joaat("LONG_SLEEVE"), 0))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 3), joaat("TUX_PANTS"), 0))
				{
					return 0;
				}
			}
		}
		if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("PILOT_SUIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 3), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 3), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 3), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
		}
		else if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("DEADLINE_OUTFIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 3), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 3), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 3), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
		}
		else if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar0, joaat("MORPH_SUIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 3), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 3), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 3), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 8)
			{
				if (!iParam2 == 240)
				{
					return 0;
				}
			}
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		iVar3 = -1;
		if (iParam3 >= 327)
		{
			iVar3 = __LIB_0__.func_420(iParam0, iParam3, 14, 4);
		}
		if ((iParam3 >= 319 && iParam3 <= 326) || (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam3, 14, 4), joaat("WATCH"), 1)))
		{
			if (iParam1 == 11)
			{
				iVar4 = -1;
				if (iParam2 >= 237)
				{
					iVar4 = __LIB_0__.func_420(iParam0, iParam2, 11, 4);
				}
				if (((((((iParam2 >= 48 && iParam2 <= 63) || (iParam2 >= 112 && iParam2 <= 127)) || (iParam2 >= 160 && iParam2 <= 175)) || (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar4, joaat("LONG_SLEEVE"), 0))) || (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar4, joaat("TAILS_JACKET"), 0))) || (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar4, joaat("SWEAT_VEST"), 0))) || (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar4, joaat("ARENA_DRAW_17"), 0)))
				{
					return 0;
				}
			}
		}
		if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 4), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 4), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 4), joaat("PILOT_SUIT"), 0)))
				{
					return 0;
				}
			}
		}
		else if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("DEADLINE_OUTFIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 4), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 4), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 4), joaat("DEADLINE_OUTFIT"), 0)))
				{
					return 0;
				}
			}
		}
		else if (iParam3 >= 327 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("MORPH_SUIT"), 1))
		{
			if (iParam1 == 11)
			{
				if (!(iParam2 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 11, 4), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 4)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 4, 4), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 6)
			{
				if (!(iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 4), joaat("MORPH_SUIT"), 0)))
				{
					return 0;
				}
			}
			else if (iParam1 == 8)
			{
				if (!iParam2 == 66)
				{
					return 0;
				}
			}
		}
	}
	return 1;
}

int func_552(int iParam0, int iParam1)//Position - 0x140DD3
{
	switch (iParam0)
	{
		case joaat("MP_M_Freemode_01"):
			if (iParam1 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 3), joaat("OPEN_SHORT"), 0))
			{
				return 1;
			}
			break;
		case joaat("MP_F_Freemode_01"):
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 4), joaat("OPEN_SHORT"), 0))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_553(int iParam0, int iParam1)//Position - 0x140E42
{
	switch (iParam0)
	{
		case joaat("MP_M_Freemode_01"):
			if (iParam1 >= 237 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 3), joaat("JACKET_ONLY"), 0))
			{
				return 1;
			}
			break;
		case joaat("MP_F_Freemode_01"):
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam1, 11, 4), joaat("JACKET_ONLY"), 0))
			{
				return 1;
			}
			break;
	}
	return 0;
}

bool func_554(bool bParam0)//Position - 0x14DA56
{
	if (Global_78319)
	{
		return __LIB_0__.func_154(PLAYER::PLAYER_ID(), bParam0, !__LIB_5__.func_743(1));
	}
	return !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID());
}

bool func_555(int iParam0)//Position - 0x14E5C2
{
	return __LIB_7__.func_91(iParam0, 0, 1);
}

bool func_556(int iParam0)//Position - 0x14F6B2
{
	return __LIB_7__.func_91(iParam0, 14, 1);
}

bool func_557(int iParam0)//Position - 0x151F9E
{
	return __LIB_7__.func_91(iParam0, 8, 1);
}

void func_558(int iParam0, var uParam1)//Position - 0x154900
{
	int iVar0;
	int iVar1;
	if (!BitTest(uParam1->f_4, 2))
	{
		return;
	}
	iVar0 = __LIB_13__.func_95();
	iVar1 = __LIB_0__.func_196(iVar0);
	switch (iParam0)
	{
		case 133:
		case 134:
		case 201:
		case 202:
			if (__LIB_6__.func_814(iParam0))
			{
				if (iVar1 < 19)
				{
					if (iVar1 >= 7)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 19)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 7)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 199:
		case 200:
		case 203:
		case 204:
			if (__LIB_6__.func_814(iParam0))
			{
				if (iVar1 < 18)
				{
					if (iVar1 >= 7)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 18)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 7)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 12f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 141:
		case 142:
			if (__LIB_6__.func_814(iParam0))
			{
				if ((SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_heist")) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_setup1")) == 0) && !Global_113386.f_9085.f_99.f_58[4])
				{
					if (iVar1 < 21)
					{
						if (iVar1 >= 7)
						{
							Global_113386.f_7261[iParam0] = 0;
							OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
						}
					}
					else
					{
						return;
					}
				}
				else if (!Global_113386.f_9085.f_99.f_58[4])
				{
					Global_113386.f_7261[iParam0] = 0;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (Global_113386.f_9085.f_99.f_58[4])
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_heist")) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("jewelry_setup1")) == 0)
			{
				if (iVar1 >= 21)
				{
					if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 18f)
					{
						Global_113386.f_7261[iParam0] = 1;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else if (iVar1 < 7)
				{
					if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 18f)
					{
						Global_113386.f_7261[iParam0] = 1;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
			}
			break;
		case 145:
		case 146:
		case 143:
		case 144:
			if (__LIB_6__.func_814(iParam0))
			{
				if (iVar1 < 20)
				{
					if (iVar1 >= 9)
					{
						Global_113386.f_7261[iParam0] = 0;
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
					}
				}
				else
				{
					return;
				}
			}
			else if (iVar1 >= 20)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 40f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (iVar1 < 9)
			{
				if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), *uParam1) >= 40f)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 147:
		case 148:
			if (!__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 152:
		case 153:
		case 154:
		case 155:
		case 156:
		case 157:
			if (!__LIB_6__.func_814(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("assassin_valet")) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("assassin_valet")) > 0)
			{
				Global_113386.f_7261[iParam0] = 0;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 158:
		case 159:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[70 /*34*/].f_6) == 0)
			{
				if (!__LIB_6__.func_814(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 160:
		case 161:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("omega2")) == 0)
			{
				if (!__LIB_6__.func_814(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 70:
		case 71:
		case 72:
			if (!__LIB_6__.func_814(iParam0) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[26 /*34*/].f_6) == 0)
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			else
			{
				return;
			}
			break;
		case 101:
		case 102:
		case 103:
		case 104:
			if (!__LIB_6__.func_814(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[43 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 190:
		case 191:
			if (!__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 193:
			if (!__LIB_6__.func_814(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[93 /*34*/].f_6) > 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 198:
			if (!__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 80:
			if (!__LIB_6__.func_814(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[8 /*34*/].f_6) == 0 && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[10 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 205:
		case 206:
			if (!__LIB_6__.func_814(iParam0))
			{
				if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[47 /*34*/].f_6) == 0)
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			else
			{
				return;
			}
			break;
		case 207:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[70 /*34*/].f_6) == 0)
			{
				if (!__LIB_6__.func_814(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 208:
		case 209:
		case 211:
		case 210:
		case 212:
		case 213:
		case 214:
		case 215:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[48 /*34*/].f_6) == 0)
			{
				if (!__LIB_6__.func_814(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 99:
		case 100:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(Global_91229[39 /*34*/].f_6) == 0)
			{
				if (!__LIB_6__.func_814(iParam0))
				{
					Global_113386.f_7261[iParam0] = 1;
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
				}
			}
			break;
		case 216:
			if (!__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 217:
		case 218:
			if (!__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 1;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
		case 219:
		case 220:
		case 221:
		case 222:
			if (__LIB_6__.func_814(iParam0))
			{
				Global_113386.f_7261[iParam0] = 0;
				OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(uParam1->f_5, Global_113386.f_7261[iParam0], true, true);
			}
			break;
	}
}

bool func_559(int iParam0)//Position - 0x156305
{
	return __LIB_7__.func_91(iParam0, 4, 0);
}

void func_560(int iParam0, var uParam1)//Position - 0x1566A0
{
	struct<3> Var0;
	if (!__LIB_11__.func_473(iParam0))
	{
		return;
	}
	if ((MISC::GET_FRAME_COUNT() % 30) != 0)
	{
		return;
	}
	if (__LIB_0__.func_121(*uParam1))
	{
		if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(*uParam1))
		{
			Var0 = { uParam1->f_6 };
			Var0.f_2 = (Var0.f_2 + 1f);
			if (!__LIB_0__.func_78(ENTITY::GET_ENTITY_COORDS(*uParam1, true), Var0, 0))
			{
				ENTITY::SET_ENTITY_COORDS_NO_OFFSET(*uParam1, Var0, true, false, true);
			}
		}
	}
}

int func_561()//Position - 0x158F16
{
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	if ((__LIB_5__.func_722(-1082130432) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
	{
		return 0;
	}
	return 1;
}

void func_562()//Position - 0x1594AF
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 30)
	{
		__LIB_11__.func_393(iVar0);
		iVar0++;
	}
	Global_4538992.f_217 = 0;
	Global_4539332 = -1;
	Global_4539333 = -1;
	HUD::USE_FAKE_MP_CASH(false);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
}

int func_563(int iParam0)//Position - 0x159B26
{
	int iVar0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_702(PLAYER::PLAYER_ID(), 27))
	{
		iVar0 = 0;
		while (iVar0 < 32)
		{
			if (__LIB_0__.func_154(PLAYER::INT_TO_PLAYERINDEX(iVar0), 1, 1) && __LIB_7__.func_281(PLAYER::INT_TO_PLAYERINDEX(iVar0)))
			{
				if (Global_2689235[iVar0 /*453*/].f_244 == iParam0)
				{
					return 1;
				}
			}
			iVar0++;
		}
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_1__.func_298(PLAYER::PLAYER_ID(), 5))
		{
			return 1;
		}
	}
	return 0;
}

bool func_564(int iParam0)//Position - 0x159BA1
{
	return __LIB_7__.func_91(iParam0, 15, 1);
}

bool func_565(int iParam0)//Position - 0x159BB2
{
	return __LIB_7__.func_91(iParam0, 4, 1);
}

bool func_566(int iParam0)//Position - 0x159BD3
{
	return __LIB_7__.func_91(iParam0, 1, 1);
}

bool func_567(int iParam0)//Position - 0x15AA80
{
	return __LIB_7__.func_91(iParam0, 3, 1);
}

bool func_568(int iParam0)//Position - 0x15AC1A
{
	return __LIB_7__.func_91(iParam0, 18, 1);
}

int func_569(int iParam0, int iParam1, int iParam2)//Position - 0x15C977
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar1 = -1;
	iVar2 = -1;
	switch (iParam0)
	{
		case joaat("Player_Zero"):
			if (iParam2 == 6 || iParam2 == 7)
			{
				if (!__LIB_0__.func_23(iParam0, iParam1, &iVar0))
				{
					return 0;
				}
			}
			else if (__LIB_0__.func_23(iParam0, iParam1, &iVar0))
			{
				return 0;
			}
			break;
		case joaat("Player_One"):
			if (iParam2 == 17)
			{
				if (!__LIB_0__.func_23(iParam0, iParam1, &iVar0))
				{
					return 0;
				}
			}
			else if (__LIB_0__.func_23(iParam0, iParam1, &iVar0))
			{
				return 0;
			}
			else if (iParam1 >= 53 && iParam1 <= 68)
			{
				if (((((((((iParam2 >= 0 && iParam2 <= 11) || (iParam2 >= 36 && iParam2 <= 51)) || (iParam2 >= 52 && iParam2 <= 63)) || (iParam2 >= 65 && iParam2 <= 72)) || (iParam2 >= 25 && iParam2 <= 33)) || (iParam2 >= 74 && iParam2 <= 85)) || (iParam2 >= 86 && iParam2 <= 101)) || (iParam2 >= 102 && iParam2 <= 117)) || (iParam2 >= 118 && iParam2 <= 133))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (((((iParam2 >= 25 && iParam2 <= 33) || (iParam2 >= 74 && iParam2 <= 85)) || (iParam2 >= 86 && iParam2 <= 101)) || (iParam2 >= 102 && iParam2 <= 117)) || (iParam2 >= 118 && iParam2 <= 133))
			{
				if (((iParam1 >= 0 && iParam1 <= 3) || (iParam1 >= 97 && iParam1 <= 110)) || (iParam1 >= 111 && iParam1 <= 116))
				{
					return 0;
				}
			}
			break;
		case joaat("Player_Two"):
			if (iParam2 == 8 || iParam2 == 34)
			{
				if (!__LIB_0__.func_23(iParam0, iParam1, &iVar0))
				{
					return 0;
				}
			}
			else if (__LIB_0__.func_23(iParam0, iParam1, &iVar0))
			{
				return 0;
			}
			else if (iParam2 == 28 || iParam2 == 12)
			{
				if ((iParam1 >= 62 && iParam1 <= 70) || iParam1 == 92)
				{
					return 0;
				}
			}
			break;
		case joaat("MP_M_Freemode_01"):
			iVar1 = __LIB_0__.func_420(iParam0, iParam1, 4, 3);
			iVar2 = __LIB_0__.func_252(iVar1);
			iVar3 = __LIB_0__.func_420(iParam0, iParam2, 6, 3);
			iVar4 = __LIB_0__.func_252(iVar3);
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, 1137160120, 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, -2005216901, 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, -2005216901, 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, 1137160120, 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256)
			{
				if (((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("BIKER_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("APART_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("APART_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("APART_DRAW_3"), 0))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("LOW_DRAW_1"), 0))
					{
						return 0;
					}
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("ARENA_DRAW_5"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("ARENA_DRAW_7"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("ARENA_DRAW_7"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("ARENA_DRAW_5"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SANTA_SUIT"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("SANTA_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("SANTA_SUIT"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SANTA_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("MORPH_SUIT"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("MORPH_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("MORPH_SUIT"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("MORPH_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if ((((((iParam2 >= 96 && iParam2 <= 175) || iVar4 == 6) || iVar4 == 7) || iVar4 == 8) || iVar4 == 9) || iVar4 == 10)
			{
				if (iParam1 >= 256)
				{
					if (((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_4"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_5"), 0))
					{
						return 0;
					}
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("APART_DRAW_3"), 0))
			{
				if (((((((((((((((((((iParam2 >= 0 && iParam2 <= 15) || (iParam2 >= 64 && iParam2 <= 79)) || (iParam2 >= 192 && iParam2 <= 207)) || (iParam2 >= 224 && iParam2 <= 239)) || (iParam2 >= 240 && iParam2 <= 255)) || iVar4 == 0) || iVar4 == 4) || iVar4 == 12) || iVar4 == 14) || iVar4 == 15) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("LOW_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("COWBOY_BOOTS"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_2"), 0)) || iVar3 == joaat("DLC_MP_VAL_M_FEET1_0")) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_0"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_3"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_4"), 0))
				{
					return 0;
				}
			}
			if ((iParam1 >= 176 && iParam1 <= 191) || iVar2 == 11)
			{
				if ((iParam2 >= 240 && iParam2 <= 255) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("LOW_DRAW_1"), 0))
				{
					return 0;
				}
			}
			else if ((iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("TUX_PANTS"), 0)) && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SKINNY"), 0))
			{
				if ((((iParam2 >= 160 && iParam2 <= 175) || (iParam2 >= 176 && iParam2 <= 191)) || iVar4 == 10) || iVar4 == 11)
				{
				}
				else
				{
					return 0;
				}
			}
			else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SKINNY"), 0))
			{
				if ((((((iParam2 >= 96 && iParam2 <= 175) || iVar4 == 6) || iVar4 == 7) || iVar4 == 8) || iVar4 == 9) || iVar4 == 10)
				{
					return 0;
				}
			}
			else if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("COMBAT_GEAR"), 0))
			{
				if ((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("APART_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_1"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("HEIST_GEAR"), 0))
			{
				if ((((((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("APART_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_0"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_3"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_4"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SILK_PYJAMAS"), 0))
			{
				if ((((((((((((((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BARE_FEET"), 0) || (iParam2 >= 48 && iParam2 <= 63)) || (iParam2 >= 80 && iParam2 <= 95)) || iVar4 == 3) || iVar4 == 5) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_0")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_1")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_2")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_3")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_4")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_5")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_6")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_7")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_8")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_9")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_10")) || iVar3 == joaat("DLC_MP_BEACH_M_FEET0_11"))
				{
				}
				else
				{
					return 0;
				}
			}
			break;
		case joaat("MP_F_Freemode_01"):
			iVar3 = __LIB_0__.func_420(iParam0, iParam2, 6, 4);
			iVar4 = __LIB_0__.func_252(iVar3);
			iVar1 = __LIB_0__.func_420(iParam0, iParam1, 4, 4);
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, 1137160120, 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, -2005216901, 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, -2005216901, 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, 1137160120, 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SANTA_SUIT"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("SANTA_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("SANTA_SUIT"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SANTA_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("MORPH_SUIT"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("MORPH_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("MORPH_SUIT"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("MORPH_SUIT"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if ((iParam2 >= 128 && iParam2 <= 143) || iVar4 == 8)
			{
				if (iParam1 >= 256)
				{
					if (((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_3"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_4"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("IE_DRAW_5"), 0))
					{
						return 0;
					}
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("ARENA_DRAW_5"), 0))
			{
				if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("ARENA_DRAW_7"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("ARENA_DRAW_7"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("ARENA_DRAW_5"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("STOCKINGS"), 0))
			{
				if (((((((iParam2 >= 112 && iParam2 <= 127) || (iParam2 >= 128 && iParam2 <= 143)) || (iParam2 >= 144 && iParam2 <= 159)) || iVar4 == 7) || iVar4 == 8) || iVar4 == 9) || iVar4 == 12)
				{
					return 1;
				}
				else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("STOCKINGS"), 0))
				{
					switch (iVar3)
					{
						case joaat("DLC_MP_VAL_F_FEET0_0"):
							return iVar1 == joaat("DLC_MP_VAL_F_LEGS1_0");
							break;
						case joaat("DLC_MP_VAL_F_FEET0_1"):
							return iVar1 == joaat("DLC_MP_VAL_F_LEGS1_1");
							break;
						case joaat("DLC_MP_VAL_F_FEET0_2"):
							return iVar1 == joaat("DLC_MP_VAL_F_LEGS1_2");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_0"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_0");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_1"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_1");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_2"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_2");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_3"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_3");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_4"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_4");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_5"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_5");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_6"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_6");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_7"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_7");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_8"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_8");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_9"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_9");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_10"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_10");
							break;
						case joaat("DLC_MP_VAL2_F_FEET_0_11"):
							return iVar1 == joaat("DLC_MP_VAL2_F_LEGS_1_11");
							break;
					}
				}
				else
				{
					return 0;
				}
			}
			else if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("COMBAT_GEAR"), 0))
			{
				if (((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("APART_DRAW_2"), 0))
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			else if ((iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("HEIST_GEAR"), 0)) || (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("APART_DRAW_2"), 0)))
			{
				if (((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_0"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("HEIST_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("APART_DRAW_2"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_1"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BIKER_DRAW_8"), 0))
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			else if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("SILK_PYJAMAS"), 0))
			{
				if ((((((((((((((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("BARE_FEET"), 0) || (iParam2 >= 80 && iParam2 <= 95)) || iVar4 == 5) || iVar3 == joaat("DLC_MP_BEACH_F_FEET000")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET001")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET002")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET003")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET004")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET005")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET006")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET007")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET008")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET009")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET010")) || iVar3 == joaat("DLC_MP_BEACH_F_FEET011"))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("LOW2_DRAW_0"), 0))
			{
				if ((FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("X17_DRAW_5"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("X17_DRAW_6"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar3, joaat("PILOT_SUIT"), 0))
				{
					return 0;
				}
			}
			if ((iParam2 >= 144 && iParam2 <= 159) || iVar4 == 9)
			{
				if (((((((iParam1 >= 16 && iParam1 <= 31) || (iParam1 >= 32 && iParam1 <= 47)) || (iParam1 >= 48 && iParam1 <= 63)) || (iParam1 >= 64 && iParam1 <= 79)) || (iParam1 >= 96 && iParam1 <= 111)) || (iParam1 >= 176 && iParam1 <= 191)) || (iParam1 >= 208 && iParam1 <= 223))
				{
					return 0;
				}
				if (iParam1 >= 256)
				{
					iVar2 = __LIB_0__.func_252(iVar1);
					if (((((((((iVar2 == 0 || iVar2 == 1) || iVar2 == 2) || iVar2 == 3) || iVar2 == 4) || iVar2 == 6) || iVar2 == 11) || iVar2 == 13) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("DUNGAREES"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("GORKA_SUIT"), 0))
					{
						return 0;
					}
				}
			}
			else if ((iParam2 >= 32 && iParam2 <= 47) || iVar4 == 2)
			{
				if ((((iParam1 >= 16 && iParam1 <= 31) || (iParam1 >= 48 && iParam1 <= 63)) || (iParam1 >= 96 && iParam1 <= 111)) || (iParam1 >= 176 && iParam1 <= 191))
				{
					return 0;
				}
				if (iParam1 >= 256)
				{
					iVar2 = __LIB_0__.func_252(iVar1);
					if (((((iVar2 == 1 || iVar2 == 3) || iVar2 == 6) || iVar2 == 11) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("DUNGAREES"), 0)) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("LOW2_DRAW_0"), 0))
					{
						return 0;
					}
				}
			}
			else if ((iParam2 >= 112 && iParam2 <= 127) || iVar4 == 7)
			{
				if (iParam1 >= 0 && iParam1 <= 15)
				{
					return 0;
				}
			}
			else if ((iParam2 >= 224 && iParam2 <= 239) || iVar4 == 14)
			{
				if (iParam1 >= 0 && iParam1 <= 15)
				{
					return 0;
				}
				if (iParam1 >= 256)
				{
					iVar2 = __LIB_0__.func_252(iVar1);
					if (iVar2 == 0)
					{
						return 0;
					}
					if (iVar2 == 13)
					{
						return 0;
					}
				}
			}
			else if (iParam2 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iParam0, iParam2, 6, 4), joaat("STOCKINGS"), 0))
			{
				if (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("STOCKINGS"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			else if ((iParam2 >= 176 && iParam2 <= 191) || iVar4 == 11)
			{
				if (iParam1 >= 96 && iParam1 <= 111)
				{
					return 0;
				}
				if (iParam1 >= 256)
				{
					iVar2 = __LIB_0__.func_252(iVar1);
					if ((((iVar2 == 6 || iVar1 == joaat("DLC_MP_LOW2_F_LEGS_0_0")) || iVar1 == joaat("DLC_MP_LOW2_F_LEGS_0_1")) || iVar1 == joaat("DLC_MP_LOW2_F_LEGS_0_2")) || iVar1 == joaat("DLC_MP_LOW2_F_LEGS_0_3"))
					{
						return 0;
					}
				}
			}
			else if ((iParam2 >= 192 && iParam2 <= 207) || iVar4 == 12)
			{
				if (((((iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("LOW_DRAW_0"), 0)) || (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("LOW2_DRAW_0"), 0))) || (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("GUN_DRAW_0"), 0))) || (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("GUN_DRAW_1"), 0))) || (iParam1 >= 256 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar1, joaat("GORKA_SUIT"), 0)))
				{
					return 0;
				}
			}
			break;
	}
	return 1;
}

void func_570(struct<10> Param0)//Position - 0xEA6
{
	if (__LIB_11__.func_490(Param0))
	{
		__LIB_0__.func_71(Param0.f_8, 0);
	}
}

struct<10> func_571(var uParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, var uParam8, var uParam9)//Position - 0xF88
{
	struct<10> Var0;
	Var0.f_0 = uParam0;
	Var0.f_3 = __LIB_0__.func_522(iParam1);
	Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
	Var0.f_5 = iParam5;
	Var0.f_1 = uParam9;
	Var0.f_2 = iParam2;
	Var0.f_6 = bParam3;
	Var0.f_7 = iParam6;
	Var0.f_8 = iParam7;
	Var0.f_9 = uParam8;
	MISC::CLEAR_BIT(&(Var0.f_1), 0);
	return Var0;
}

float func_572(int iParam0, var uParam1)//Position - 0x359B
{
	float fVar0;
	bool bVar1;
	float fVar2;
	int iVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	float fVar7;
	float fVar8;
	float fVar9;
	float fVar10;
	fVar0 = 0f;
	if (iParam0 < 1)
	{
		return 1f;
	}
	bVar1 = BitTest(uParam1, 0);
	fVar2 = SYSTEM::TO_FLOAT(iParam0);
	iVar3 = 0;
	if (BitTest(uParam1, 3))
	{
		iVar3++;
	}
	if (BitTest(uParam1, 4))
	{
		iVar3 += 2;
	}
	if (BitTest(uParam1, 5))
	{
		iVar3 += 4;
	}
	if (BitTest(uParam1, 20))
	{
		iVar3 += 8;
	}
	fVar4 = SYSTEM::TO_FLOAT((3 * iVar3));
	if (BitTest(uParam1, 2))
	{
		fVar4 = (fVar4 * 7f);
	}
	if (BitTest(uParam1, 1))
	{
		if (__LIB_0__.func_365(21))
		{
			return 1f;
		}
	}
	else if (fVar4 < 1f)
	{
		return 1f;
	}
	fVar5 = (1f - (fVar2 / fVar4));
	if (BitTest(uParam1, 16))
	{
		fVar0 = (fVar0 - 0.5f);
	}
	if (BitTest(uParam1, 17))
	{
		fVar0 = (fVar0 - 0.25f);
	}
	if (BitTest(uParam1, 18))
	{
		fVar0 = (fVar0 - 0.1f);
	}
	if (BitTest(uParam1, 19))
	{
		fVar0 = (fVar0 - 0.33f);
	}
	if (bVar1)
	{
		fVar0 = -fVar0;
	}
	if (!BitTest(uParam1, 1))
	{
		if (BitTest(uParam1, 6))
		{
			fVar6 = 0f;
			if (BitTest(uParam1, 8))
			{
				fVar6 = (fVar6 + 0.5f);
			}
			if (BitTest(uParam1, 9))
			{
				fVar6 = (fVar6 + 0.25f);
			}
			if (BitTest(uParam1, 10))
			{
				fVar6 = (fVar6 + 0.125f);
			}
			if (fVar5 < fVar6)
			{
				fVar7 = (fVar5 / fVar6);
				if (BitTest(uParam1, 7))
				{
					fVar7 = (1f - fVar7);
					fVar7 = (fVar7 * fVar7);
					fVar7 = (1f - fVar7);
				}
				fVar0 = (fVar0 * fVar7);
			}
		}
		if (BitTest(uParam1, 11))
		{
			fVar8 = 0f;
			if (BitTest(uParam1, 13))
			{
				fVar8 = (fVar8 + 0.5f);
			}
			if (BitTest(uParam1, 14))
			{
				fVar8 = (fVar8 + 0.25f);
			}
			if (BitTest(uParam1, 15))
			{
				fVar8 = (fVar8 + 0.125f);
			}
			fVar9 = (1f - fVar8);
			if (fVar5 > fVar9)
			{
				fVar10 = ((fVar5 - fVar9) / fVar8);
				if (BitTest(uParam1, 12))
				{
					fVar10 = (fVar10 * fVar10);
				}
				fVar0 = (fVar0 * (1f - fVar10));
			}
		}
	}
	fVar0 = (1f + fVar0);
	return fVar0;
}

int func_573(int iParam0, int iParam1)//Position - 0x3791
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar0 = -1;
	bVar1 = false;
	iVar2 = 0;
	while (iVar2 < 10)
	{
		if (__LIB_11__.func_495(iParam0, iVar2) == 0 && !bVar1)
		{
			iVar0 = iVar2;
		}
		if (__LIB_11__.func_496(iParam0, iVar2) == iParam1 && __LIB_11__.func_495(iParam0, iVar2) > 0)
		{
			bVar1 = true;
			iVar0 = iVar2;
		}
		iVar2++;
	}
	return iVar0;
}

void func_574(int iParam0)//Position - 0x24B8B
{
	__LIB_11__.func_500(iParam0, 1, 0);
	__LIB_11__.func_499(iParam0, 1);
	__LIB_11__.func_498(iParam0, 1);
}

int func_575()//Position - 0x260
{
	if (__LIB_0__.func_3() == 0)
	{
		return 1;
	}
	return 0;
}

void func_576(int iParam0)//Position - 0x353
{
	__LIB_11__.func_500(iParam0, 0, 0);
	__LIB_11__.func_499(iParam0, 1);
	__LIB_11__.func_498(iParam0, 1);
}

void func_577(var uParam0)//Position - 0x22F8
{
	int iVar0;
	int iVar1;
	*uParam0 = 145;
	__LIB_0__.func_17(&(uParam0->f_1));
	uParam0->f_6 = -1;
	uParam0->f_7 = -1;
	uParam0->f_8 = 0f;
	uParam0->f_2 = 0;
	uParam0->f_3 = 0;
	uParam0->f_4 = 0;
	uParam0->f_5 = 145;
	iVar1 = 0;
	while (iVar1 < 3)
	{
		uParam0->f_9[iVar1] = -1;
		uParam0->f_13[iVar1] = 0;
		uParam0->f_17[iVar1] = 0;
		uParam0->f_21[iVar1] = 0;
		__LIB_0__.func_16(&(uParam0->f_25[0 /*295*/][iVar1 /*98*/]));
		__LIB_0__.func_16(&(uParam0->f_25[1 /*295*/][iVar1 /*98*/]));
		iVar0 = 0;
		while (iVar0 < 12)
		{
			uParam0->f_616[iVar1 /*65*/][iVar0] = -1;
			uParam0->f_616[iVar1 /*65*/].f_13[iVar0] = -1;
			uParam0->f_616[iVar1 /*65*/].f_26[iVar0] = -1;
			iVar0++;
		}
		uParam0->f_616[iVar1 /*65*/].f_59 = 0;
		uParam0->f_616[iVar1 /*65*/].f_60 = -99;
		uParam0->f_616[iVar1 /*65*/].f_61 = 2;
		uParam0->f_616[iVar1 /*65*/].f_62 = 0;
		uParam0->f_616[iVar1 /*65*/].f_63 = -99;
		uParam0->f_616[iVar1 /*65*/].f_64 = 1;
		iVar0 = 0;
		while (iVar0 < 9)
		{
			uParam0->f_616[iVar1 /*65*/].f_39[iVar0] = -1;
			uParam0->f_616[iVar1 /*65*/].f_49[iVar0] = -1;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 44)
		{
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/].f_1 = 0;
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/].f_2 = 0;
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/].f_3 = 0;
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/].f_4 = 0;
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/] = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 51)
		{
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/].f_1 = 0;
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/].f_2 = 0;
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/].f_3 = 0;
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/].f_4 = 0;
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/] = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 4)
		{
			uParam0->f_2244[iVar1 /*32*/][iVar0] = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 10)
		{
			uParam0->f_2244[iVar1 /*32*/].f_5[iVar0] = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 15)
		{
			uParam0->f_2244[iVar1 /*32*/].f_16[iVar0] = 0;
			iVar0++;
		}
		uParam0->f_2341[iVar1] = 0;
		iVar0 = 0;
		while (iVar0 <= 3)
		{
			uParam0->f_2838[iVar1 /*15*/][iVar0] = 0;
			uParam0->f_2838[iVar1 /*15*/].f_5[iVar0] = 0;
			uParam0->f_2838[iVar1 /*15*/].f_10[iVar0] = 0;
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			uParam0->f_2345[iVar1 /*164*/][iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_4[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_8[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_12[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_16[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_20[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_24[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_28[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_32[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_36[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_40[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_44[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_48[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_52[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_56[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_60[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_64[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_68[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_72[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_76[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_80[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_84[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_88[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_92[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_96[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_100[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_104[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_108[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_112[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_116[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_120[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_124[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_128[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_132[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_136[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_140[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_144[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_148[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_152[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_156[iVar0] = 0;
			uParam0->f_2345[iVar1 /*164*/].f_160[iVar0] = 0;
			iVar0++;
		}
		iVar1++;
	}
	__LIB_0__.func_15(&(uParam0->f_2884));
	__LIB_11__.func_513(&(uParam0->f_2890));
	__LIB_0__.func_13(&(uParam0->f_2980));
}

void func_578()//Position - 0x10539
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (Global_97374[iVar0 /*17*/] && !Global_97374[iVar0 /*17*/].f_1)
		{
			if (Global_97374[iVar0 /*17*/].f_3 == 0)
			{
				if ((Global_97374[iVar0 /*17*/].f_5 != 88 && Global_97374[iVar0 /*17*/].f_5 != 89) && Global_97374[iVar0 /*17*/].f_5 != 92)
				{
					__LIB_0__.func_322(Global_97374[iVar0 /*17*/].f_5, 1);
				}
			}
		}
		iVar0++;
	}
}

void func_579(int iParam0, int iParam1, char* sParam2, int iParam3, int iParam4, int iParam5, float fParam6, float fParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36)//Position - 0x17026
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(0, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(0, iVar0);
		Global_1649593.f_1177[iVar0] = iParam0;
		Global_1649593.f_1177.f_11[iVar0] = iParam1;
		StringCopy(&(Global_1649593.f_1177.f_22[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_1177.f_194[iVar0] = iParam3;
		Global_1649593.f_1177.f_183[iVar0] = iParam4;
		Global_1649593.f_1177.f_216[iVar0] = iParam5;
		Global_1649593.f_1177.f_227[iVar0 /*3*/] = fParam6;
		Global_1649593.f_1177.f_227[iVar0 /*3*/].f_1 = fParam7;
		Global_1649593.f_1177.f_258[iVar0] = iParam8;
		Global_1649593.f_1177.f_269[iVar0] = iParam9;
		Global_1649593.f_1177.f_312[iVar0] = iParam10;
		Global_1649593.f_1177.f_323[iVar0] = iParam11;
		Global_1649593.f_1177.f_334[iVar0] = iParam12;
		Global_1649593.f_1177.f_345[iVar0] = iParam13;
		Global_1649593.f_1172 = 1;
		Global_1649593.f_1177.f_356[iVar0] = iParam14;
		Global_1649593.f_1177.f_367[iVar0] = iParam15;
		Global_1649593.f_1177.f_378[iVar0] = iParam16;
		Global_1649593.f_1177.f_389[iVar0] = iParam17;
		Global_1649593.f_1177.f_400[iVar0] = iParam18;
		Global_1649593.f_1177.f_411[iVar0] = iParam19;
		Global_1649593.f_1177.f_422[iVar0] = iParam20;
		Global_1649593.f_1177.f_433[iVar0] = iParam21;
		Global_1649593.f_1177.f_444[iVar0] = iParam22;
		Global_1649593.f_1177.f_455[iVar0] = iParam23;
		Global_1649593.f_1177.f_466[iVar0] = iParam24;
		Global_1649593.f_1177.f_205[iVar0] = iParam25;
		Global_1649593.f_1177.f_477[iVar0] = iParam26;
		Global_1649593.f_1177.f_488[iVar0] = iParam27;
		Global_1649593.f_1177.f_499[iVar0] = iParam28;
		Global_1649593.f_1177.f_510[iVar0] = iParam29;
		Global_1649593.f_1177.f_521[iVar0] = iParam30;
		Global_1649593.f_1177.f_532[iVar0] = iParam31;
		Global_1649593.f_1177.f_543[iVar0] = iParam32;
		Global_1649593.f_1177.f_554[iVar0] = iParam33;
		Global_1649593.f_1177.f_565[iVar0] = iParam34;
		Global_1649593.f_1177.f_576[iVar0] = iParam35;
		Global_1649593.f_1177.f_587[iVar0] = iParam36;
	}
}

void func_580(int* iParam0, bool bParam1)//Position - 0x59B
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!PED::IS_PED_INJURED(*iParam0))
		{
			if (!PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(*iParam0))
			{
				if ((ENTITY::IS_ENTITY_ATTACHED_TO_ANY_OBJECT(*iParam0) || ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(*iParam0)) || ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(*iParam0))
				{
					ENTITY::DETACH_ENTITY(*iParam0, true, true);
				}
				ENTITY::FREEZE_ENTITY_POSITION(*iParam0, false);
			}
			if (!PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false))
			{
				ENTITY::SET_ENTITY_COLLISION(*iParam0, true, false);
			}
			if (PED::IS_PED_GROUP_MEMBER(*iParam0, __LIB_0__.func_399()))
			{
				PED::REMOVE_PED_FROM_GROUP(*iParam0);
			}
			if (!bParam1)
			{
				PED::SET_PED_KEEP_TASK(*iParam0, true);
			}
		}
		if (bParam1)
		{
			PED::DELETE_PED(iParam0);
		}
		else
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(iParam0);
		}
	}
}

int func_581(int iParam0)//Position - 0x6BC0C
{
	var uVar0;
	int iVar1;
	uVar0 = __LIB_11__.func_381(iParam0);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

void func_582()//Position - 0x6FA26
{
	if (__LIB_9__.func_96())
	{
		NETWORK::UGC_CLEAR_OFFLINE_QUERY();
	}
	else
	{
		NETWORK::UGC_CLEAR_QUERY_RESULTS();
	}
}

void func_583(var uParam0, int iParam1)//Position - 0x7BC72
{
	int iVar0;
	*uParam0 = -1;
	uParam0->f_1 = -1;
	StringCopy(&(uParam0->f_2), "", 16);
	uParam0->f_7 = -1;
	uParam0->f_8 = -1;
	uParam0->f_9 = 0;
	uParam0->f_10 = 0;
	uParam0->f_11 = { 0f, 0f, 0f };
	uParam0->f_14 = 3f;
	uParam0->f_15 = 0;
	uParam0->f_16 = 0;
	uParam0->f_17 = 0;
	uParam0->f_18 = 0;
	uParam0->f_19 = 0;
	uParam0->f_20 = 0;
	uParam0->f_21 = 0;
	uParam0->f_22 = 0;
	uParam0->f_23 = -1;
	uParam0->f_24 = 0;
	uParam0->f_25 = -1;
	uParam0->f_26 = -1;
	uParam0->f_27 = 0;
	uParam0->f_28 = -1;
	uParam0->f_34 = -1;
	uParam0->f_29 = -1;
	uParam0->f_30 = -1;
	uParam0->f_35 = 0;
	__LIB_11__.func_616(&(uParam0->f_31), -1);
	uParam0->f_36 = 0;
	uParam0->f_43 = -1;
	uParam0->f_44 = -1;
	uParam0->f_45 = -1;
	uParam0->f_46 = -1;
	uParam0->f_47 = -1;
	uParam0->f_48 = 0;
	uParam0->f_37 = -1;
	uParam0->f_49 = 0;
	uParam0->f_50 = 0;
	uParam0->f_51 = 0;
	uParam0->f_52 = -1;
	uParam0->f_53 = 0;
	uParam0->f_54 = -1;
	uParam0->f_55 = 0;
	uParam0->f_56 = -1;
	uParam0->f_57 = -1;
	StringCopy(&(uParam0->f_72), "", 24);
	StringCopy(&(uParam0->f_78), "", 24);
	uParam0->f_114 = 0;
	uParam0->f_58 = -1;
	uParam0->f_59 = 0;
	uParam0->f_60 = 0;
	uParam0->f_116 = -1;
	uParam0->f_117 = -1;
	uParam0->f_118 = 0;
	uParam0->f_119 = -1;
	uParam0->f_120 = -1;
	uParam0->f_148 = -1;
	uParam0->f_149 = 0;
	uParam0->f_150 = 0;
	StringCopy(&(uParam0->f_88), "", 4);
	StringCopy(&(uParam0->f_84), "", 16);
	StringCopy(&(uParam0->f_156), "", 4);
	uParam0->f_158 = 0;
	uParam0->f_157 = 0;
	uParam0->f_66 = -1;
	uParam0->f_67 = 0;
	uParam0->f_68 = 0;
	uParam0->f_61 = 0;
	uParam0->f_62 = 0;
	uParam0->f_63 = 0;
	uParam0->f_146 = 0;
	uParam0->f_147 = -1;
	uParam0->f_64 = 0;
	uParam0->f_65 = 0;
	uParam0->f_175 = -1;
	uParam0->f_176 = -1;
	uParam0->f_66 = -1;
	uParam0->f_69 = -1;
	uParam0->f_163 = -3;
	uParam0->f_164 = 0f;
	uParam0->f_70 = -1;
	uParam0->f_71 = -1;
	uParam0->f_89 = -1;
	uParam0->f_90 = -1;
	uParam0->f_91 = -1;
	uParam0->f_162 = 0;
	uParam0->f_167 = -1;
	uParam0->f_168 = 0f;
	uParam0->f_164 = 0f;
	uParam0->f_170 = 0;
	uParam0->f_169 = 0;
	uParam0->f_171 = 0;
	uParam0->f_172 = 0;
	uParam0->f_173 = 0;
	uParam0->f_165 = 0;
	uParam0->f_174 = -1;
	uParam0->f_199 = -1;
	uParam0->f_200 = -1;
	uParam0->f_201 = -1;
	uParam0->f_166 = -1;
	uParam0->f_207 = -1;
	uParam0->f_198 = -1f;
	uParam0->f_178 = 0;
	uParam0->f_177 = -1;
	uParam0->f_202 = -1;
	uParam0->f_203 = 0;
	uParam0->f_6 = -1;
	uParam0->f_204 = -1;
	uParam0->f_205 = -1;
	uParam0->f_206 = 3000;
	__LIB_11__.func_616(&(uParam0->f_159), 0);
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		uParam0->f_38[iVar0] = -1;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 23)
	{
		uParam0->f_121[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		uParam0->f_151[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		uParam0->f_179[iVar0] = -1;
		uParam0->f_183[iVar0] = -1;
		iVar0++;
	}
	uParam0->f_92 = 0;
	iVar0 = 0;
	while (iVar0 <= 19)
	{
		uParam0->f_93[iVar0] = 0;
		iVar0++;
	}
	if (iParam1 != -1)
	{
		MISC::CLEAR_BIT(&(Global_4718592.f_142625[(iParam1 / 32)]), (iParam1 % 32));
	}
	if (HUD::DOES_BLIP_EXIST(uParam0->f_115))
	{
		HUD::REMOVE_BLIP(&(uParam0->f_115));
	}
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		uParam0->f_193[iVar0] = 0;
		iVar0++;
	}
	__LIB_11__.func_616(&(uParam0->f_187), 0);
	uParam0->f_192 = 0;
	uParam0->f_197 = 0;
	uParam0->f_208 = -1;
	uParam0->f_209 = -1;
}

void func_584(var uParam0)//Position - 0xA93B
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<13> Var3;
	int iVar4;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		Global_2097536.f_2704[iVar0] = 0;
		Global_2097536.f_2775[iVar0] = -1;
		iVar0++;
	}
	Var3 = { __LIB_0__.func_604(PLAYER::PLAYER_ID()) };
	if (STATS::LEADERBOARDS_GET_CACHE_EXISTS(Global_2097536.f_2826))
	{
		iVar4 = STATS::LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(Global_2097536.f_2826);
		iVar0 = 0;
		iVar0 = 0;
		while (iVar0 < iVar4)
		{
			if (iVar0 < 12)
			{
				__LIB_5__.func_8(&Global_2101737);
				iVar2 = 0;
				STATS::LEADERBOARDS_GET_CACHE_DATA_ROW(Global_2097536.f_2826, iVar0, &Global_2101737);
				*(uParam0[iVar0 /*100*/]) = { Global_2101737.f_1 };
				(uParam0[iVar0 /*100*/])->f_16 = { Global_2101737.f_17 };
				(uParam0[iVar0 /*100*/])->f_32 = { Global_2101737.f_33 };
				(uParam0[iVar0 /*100*/])->f_45 = { Global_2101737.f_46 };
				(uParam0[iVar0 /*100*/])->f_58 = Global_2101737.f_59;
				(uParam0[iVar0 /*100*/])->f_59 = Global_2101737.f_60;
				Global_2097536.f_2708 = Global_2101737.f_62;
				Global_2097536.f_2769 = Global_2101737.f_63;
				iVar2 = 0;
				if (BitTest(Global_2101737.f_61, 1))
				{
					iVar2 = 1;
				}
				else if (BitTest(Global_2101737.f_61, 2))
				{
					iVar2 = 2;
				}
				else if (BitTest(Global_2101737.f_61, 3))
				{
					iVar2 = 3;
				}
				Global_2097536.f_2704[(iVar2 - 1)]++;
				(uParam0[iVar0 /*100*/])->f_75 = iVar2;
				if ((uParam0[iVar0 /*100*/])->f_59 != -1)
				{
					if (BitTest(Global_2101737.f_61, 0))
					{
						(uParam0[iVar0 /*100*/])->f_74 = 1;
					}
					else
					{
						(uParam0[iVar0 /*100*/])->f_74 = 0;
					}
					if (__LIB_5__.func_6(&((uParam0[iVar0 /*100*/])->f_32), &Var3))
					{
						Global_2097536.f_2775[(iVar2 - 1)] = 0;
					}
				}
				bVar1 = false;
				while (bVar1 < Global_2101737.f_62)
				{
					if (BitTest(Global_2101737.f_63, bVar1))
					{
						(uParam0[iVar0 /*100*/])->f_67[bVar1] = Global_2101737.f_97[bVar1];
					}
					else
					{
						(uParam0[iVar0 /*100*/])->f_60[bVar1] = Global_2101737.f_64[bVar1];
					}
					bVar1++;
				}
			}
			iVar0++;
		}
	}
}

void func_585(var uParam0)//Position - 0xB0FB
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar2 = __LIB_5__.func_12(Global_2097536.f_2826);
	if (Global_2100721.f_81[iVar2] != 0)
	{
		__LIB_5__.func_11(-1, iVar2);
	}
	iVar0 = 0;
	while (iVar0 < 12)
	{
		__LIB_5__.func_8(&Global_2101737);
		if ((uParam0[iVar0 /*100*/])->f_75 != 0)
		{
			Global_2101737 = Global_2097536.f_2826;
			Global_2101737.f_1 = { *(uParam0[iVar0 /*100*/]) };
			if (MISC::ARE_STRINGS_EQUAL(&((uParam0[iVar0 /*100*/])->f_16), ""))
			{
				Global_2101737.f_17 = { *(uParam0[iVar0 /*100*/]) };
			}
			else
			{
				Global_2101737.f_17 = { (uParam0[iVar0 /*100*/])->f_16 };
			}
			Global_2101737.f_33 = { (uParam0[iVar0 /*100*/])->f_32 };
			if (__LIB_0__.func_585((uParam0[iVar0 /*100*/])->f_45))
			{
				Global_2101737.f_46 = { (uParam0[iVar0 /*100*/])->f_45 };
			}
			else
			{
				Global_2101737.f_46 = { (uParam0[iVar0 /*100*/])->f_32 };
			}
			Global_2101737.f_59 = (uParam0[iVar0 /*100*/])->f_58;
			Global_2101737.f_60 = (uParam0[iVar0 /*100*/])->f_59;
			Global_2101737.f_62 = Global_2097536.f_2708;
			Global_2101737.f_63 = Global_2097536.f_2770;
			if ((uParam0[iVar0 /*100*/])->f_74)
			{
				MISC::SET_BIT(&(Global_2101737.f_61), 0);
			}
			else
			{
				MISC::CLEAR_BIT(&(Global_2101737.f_61), 0);
			}
			MISC::SET_BIT(&(Global_2101737.f_61), (uParam0[iVar0 /*100*/])->f_75);
			bVar1 = false;
			while (bVar1 < Global_2101737.f_62)
			{
				if (BitTest(Global_2101737.f_63, bVar1))
				{
					Global_2101737.f_97[bVar1] = (uParam0[iVar0 /*100*/])->f_67[bVar1];
				}
				else
				{
					Global_2101737.f_64[bVar1] = (uParam0[iVar0 /*100*/])->f_60[bVar1];
				}
				bVar1++;
			}
			Global_2100721.f_81[iVar2] = Global_2097536.f_2826;
			STATS::LEADERBOARDS_CACHE_DATA_ROW(&Global_2101737);
		}
		iVar0++;
	}
	Global_2100721.f_87[iVar2 /*3*/] = { __LIB_0__.func_85(PLAYER::PLAYER_ID()) };
}

void func_586(var uParam0, char* sParam1, int iParam2)//Position - 0xCE39
{
	int iVar0;
	int iVar1;
	if (__LIB_5__.func_27(uParam0->f_44))
	{
		MemCopy(sParam1, {Global_2097157.f_355}, 16);
		sParam1->f_32 = { Global_2097157.f_361 };
		MemCopy(&(sParam1->f_16), {Global_2097157.f_349}, 16);
	}
	else
	{
		StringCopy(sParam1, PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()), 64);
		sParam1->f_32 = { __LIB_0__.func_604(PLAYER::PLAYER_ID()) };
	}
	sParam1->f_59 = iParam2;
	if (__LIB_5__.func_19(uParam0->f_44))
	{
		iVar0 = Global_2097157.f_211.f_36[Global_2097536.f_2709];
		if (iVar0 == 1)
		{
			sParam1->f_58 = 1;
		}
		else
		{
			sParam1->f_58 = 0;
		}
	}
	sParam1->f_74 = 1;
	iVar1 = 0;
	while (iVar1 < Global_2097536.f_2708)
	{
		if (BitTest(Global_2097157.f_142.f_2, Global_2097536.f_2710[iVar1]))
		{
			sParam1->f_67[iVar1] = Global_2097157.f_211.f_36[Global_2097536.f_2710[iVar1]];
		}
		else
		{
			sParam1->f_60[iVar1] = Global_2097157.f_211.f_3[Global_2097536.f_2710[iVar1]];
		}
		iVar1++;
	}
}

void func_587(int iParam0, bool bParam1)//Position - 0x23951
{
	if (PED::IS_PED_INJURED(__LIB_11__.func_91()))
	{
		return;
	}
	if (bParam1)
	{
		if (!PED::IS_PED_GROUP_MEMBER(__LIB_11__.func_91(), __LIB_0__.func_399()))
		{
			return;
		}
		if (!PED::IS_PED_INJURED(__LIB_11__.func_90()))
		{
			if (!PED::IS_PED_GROUP_MEMBER(__LIB_11__.func_90(), __LIB_0__.func_399()))
			{
				return;
			}
		}
	}
	if (Global_96267 == 23)
	{
		Global_96269 = 10;
		Global_96267 = iParam0;
	}
}

struct<2> func_588(struct<2> Param0)//Position - 0x638EB
{
	Param0.f_0 = __LIB_11__.func_635(Param0.f_0);
	return Param0;
}

struct<2> func_589()//Position - 0x639B4
{
	return __LIB_3__.func_990((1920f / 2f), (1080f / 2f));
}

struct<2> func_590()//Position - 0x639CE
{
	return __LIB_3__.func_990(1920f, 1080f);
}

var func_591(int iParam0)//Position - 0x678D2
{
	int iVar0;
	var uVar1;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		__LIB_11__.func_97(&uVar1, iVar0, 6, (*iParam0)[iVar0]);
		iVar0++;
	}
	return uVar1;
}

void func_592(int iParam0, int iParam1, int iParam2, var uParam3, var uParam4, int iParam5)//Position - 0x67B0F
{
	struct<7> Var0;
	int iVar1;
	Var0.f_0 = -105579290;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam1;
	Var0.f_3 = iParam2;
	Var0.f_4 = uParam3;
	Var0.f_5 = uParam4;
	Var0.f_6 = iParam5;
	iVar1 = __LIB_0__.func_679(iParam0);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 7, iVar1);
	}
}

void func_593(int iParam0, int iParam1, int iParam2)//Position - 0x688F5
{
	int iVar0;
	iVar0 = Global_2868734[iParam0 /*3*/][__LIB_0__.func_330(iParam2)];
	STATS::STAT_SET_INT(iVar0, iParam1, true);
}

void func_594(int iParam0, bool bParam1, int iParam2)//Position - 0x68AB3
{
	int iVar0;
	iVar0 = Global_2869167[iParam0 /*3*/][__LIB_0__.func_330(iParam2)];
	STATS::STAT_SET_BOOL(iVar0, bParam1, true);
}

int func_595(int iParam0)//Position - 0x6AE60
{
	GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT(__LIB_11__.func_632(iParam0), false);
	if (!GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(__LIB_11__.func_632(iParam0)))
	{
		return 0;
	}
	return 1;
}

void func_596()//Position - 0x342D
{
	if (Global_21618)
	{
		if (Global_78319)
		{
			if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247))
			{
				if (!MISC::IS_PC_VERSION())
				{
					__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 1f, 1f, 8f, -1f, -1f, "CELL_201" /* GXT: CALL */, 0, 0, 0, 0);
					MISC::SET_BIT(&(Global_2815059.f_1795), 15);
				}
			}
		}
	}
}

void func_597()//Position - 0x347B
{
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247))
	{
		if (!Global_21613)
		{
			__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
			if (BitTest(Global_8136, 20))
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_202" /* GXT: END CALL */, 0, 0, 0, 0);
				if (Global_20209)
				{
					__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
				}
			}
			else
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			if (Global_21618)
			{
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(Global_20247, "SET_DATA_SLOT");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(4);
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CONDFON" /* GXT: ~a~ */);
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&Global_21620);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				__LIB_0__.func_478("CELL_300" /* GXT: CHAR_DEFAULT */);
				__LIB_0__.func_478("CELL_219" /* GXT: CONNECTED */);
				__LIB_0__.func_478("CELL_219" /* GXT: CONNECTED */);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			}
			else if (__LIB_0__.func_166(Global_7451, Global_20266) == 0)
			{
				__LIB_3__.func_637(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(3), -1f, -1f, &(Global_117[Global_7451 /*10*/].f_4), "CELL_300" /* GXT: CHAR_DEFAULT */, "CELL_219" /* GXT: CONNECTED */, "CELL_195" /* GXT: Unknown */, 0);
			}
			else
			{
				__LIB_3__.func_637(Global_20247, "SET_DATA_SLOT", SYSTEM::TO_FLOAT(4), SYSTEM::TO_FLOAT(0), SYSTEM::TO_FLOAT(3), -1f, -1f, &(Global_1998[Global_7451 /*29*/].f_3), &(Global_1998[Global_7451 /*29*/].f_7), "CELL_219" /* GXT: CONNECTED */, &(Global_1998[Global_7451 /*29*/].f_3), 0);
			}
		}
		__LIB_2__.func_41(Global_20247, "DISPLAY_VIEW", 4f, -1082130432, -1082130432, -1082130432, -1082130432);
	}
}

float func_598(struct<3> Param0, struct<3> Param1, struct<3> Param2, struct<3> Param3, float fParam4, bool bParam5)//Position - 0x525E
{
	struct<2> Var0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_4541508 == 0)
	{
		if (BitTest(Global_8136, 14) && Global_20266.f_1 < 4)
		{
			MOBILE::GET_MOBILE_PHONE_POSITION(&Var0);
			if (Global_20219[Global_20211 /*3*/].f_1 == Var0.f_1)
			{
				Global_4541508 = 1;
			}
		}
	}
	if (__LIB_9__.func_607() && Global_4541508 == 0)
	{
		return 2f;
	}
	if (iLocal_18 == 0)
	{
		iLocal_18 = MISC::GET_GAME_TIMER();
	}
	fVar1 = __LIB_0__.func_301((SYSTEM::TO_FLOAT((MISC::GET_GAME_TIMER() - iLocal_18)) / fParam4), 0f, 1f);
	if (fVar1 < 1f)
	{
		fVar2 = fVar1;
		if (bParam5)
		{
			fVar2 = (fVar2 - 1f);
			fVar3 = 0.670158f;
			fVar2 = (((fVar2 * fVar2) * (((fVar3 + 1f) * fVar2) + fVar3)) + 1f);
		}
		else
		{
			fVar2 = SYSTEM::SIN((fVar1 * 90f));
		}
		Global_20194 = { __LIB_9__.func_786(Param0, Param1, fVar2) };
		Global_20197 = { __LIB_9__.func_786(Param2, Param3, fVar2) };
	}
	else
	{
		Global_20194 = { Param1 };
		Global_20197 = { Param3 };
	}
	MOBILE::SET_MOBILE_PHONE_POSITION(Global_20194);
	MOBILE::SET_MOBILE_PHONE_ROTATION(Global_20197, 0);
	return fVar1;
}

int func_599(int iParam0)//Position - 0x28349
{
	switch (__LIB_1__.func_558())
	{
		case joaat("A_C_Dolphin"):
		case joaat("A_C_Fish"):
		case joaat("A_C_KillerWhale"):
		case joaat("A_C_SharkHammer"):
		case joaat("A_C_SharkTiger"):
		case joaat("A_C_Stingray"):
			return 1;
		case joaat("IG_Orleans"):
			return iParam0;
			break;
	}
	return 0;
}

void func_600(int iParam0, char* sParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x975CE
{
	int iVar0;
	iVar0 = __LIB_0__.func_485(iParam2);
	switch (iVar0)
	{
		case 1:
			switch (iParam3)
			{
				case 0:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 6, Global_96316[iParam2 /*5*/].f_3, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 6, Global_96316[iParam2 /*5*/].f_3, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					if (iParam0 != 0)
					{
						PED::CLEAR_PED_PROP(iParam0, 0);
						CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
					}
					break;
				case 1:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 2:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 3:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 8, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 4:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 1, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 4, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 4, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 5:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 2, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 6:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 4, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					if (iParam0 != 0)
					{
						PED::SET_PED_PROP_INDEX(iParam0, 0, 5, 0, false);
						CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
					}
					else
					{
						CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam1, 0, 5, 0, 0);
					}
					break;
				case 7:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 4, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					if (iParam0 != 0)
					{
						PED::SET_PED_PROP_INDEX(iParam0, 0, 1, 0, false);
						CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
					}
					else
					{
						CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam1, 0, 1, 0, 0);
					}
					break;
				case 8:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 8, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 8, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 7, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 9:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 7, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 7, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 6, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
				case 10:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 9, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 1, 1, 0, 0);
					break;
			}
			if (iParam2 == 11)
			{
				switch (iParam3)
				{
					case 0:
					case 7:
					case 8:
					case 9:
						if (iParam0 != 0)
						{
							PED::SET_PED_PROP_INDEX(iParam0, 2, 1, 0, false);
							CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
						}
						else
						{
							CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam1, 2, 1, 0, 0);
						}
						break;
					}
			}
			break;
		case 2:
			switch (iParam3)
			{
				case 0:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, Global_96316[iParam2 /*5*/].f_3, 0, 0);
					if (iParam2 == 6 || iParam2 == 7)
					{
						__LIB_0__.func_486(iParam0, sParam1, 5, 0, 0, 0);
					}
					else
					{
						__LIB_0__.func_486(iParam0, sParam1, 5, 2, 0, 0);
					}
					__LIB_0__.func_486(iParam0, sParam1, 3, Global_96316[iParam2 /*5*/].f_3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, Global_96316[iParam2 /*5*/].f_3, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					if (iParam0 != 0)
					{
						PED::CLEAR_PED_PROP(iParam0, 0);
						CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
					}
					break;
				case 8:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 5, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 1, 0, 0);
					break;
				default:
					return;
					break;
			}
			break;
		case 3:
			switch (iParam3)
			{
				case 0:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 3, Global_96316[iParam2 /*5*/].f_3, 0);
					if (iParam2 == 13)
					{
						__LIB_0__.func_486(iParam0, sParam1, 4, 2, 0, 0);
					}
					else
					{
						__LIB_0__.func_486(iParam0, sParam1, 4, 2, Global_96316[iParam2 /*5*/].f_3, 0);
					}
					__LIB_0__.func_486(iParam0, sParam1, 8, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					if (iParam0 != 0)
					{
						PED::CLEAR_PED_PROP(iParam0, 0);
						CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
					}
					break;
				case 9:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 5, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 4, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					break;
				case 10:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 4, 2, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 3, 2, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					break;
				case 1:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 0, 0, 0);
					break;
				case 8:
					__LIB_0__.func_486(iParam0, sParam1, 0, Global_96316[iParam2 /*5*/].f_2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 2, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 3, 2, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 4, 3, 2, 0);
					__LIB_0__.func_486(iParam0, sParam1, 6, 0, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 8, 1, 0, 0);
					__LIB_0__.func_486(iParam0, sParam1, 10, 1, 0, 0);
					break;
				default:
					return;
					break;
			}
			break;
	}
	if (iParam0 != 0)
	{
		if (bParam4)
		{
			PED::SET_PED_PROP_INDEX(iParam0, 2, 0, 0, false);
		}
		else
		{
			PED::CLEAR_PED_PROP(iParam0, 2);
		}
		CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(sParam1, iParam0, 0);
	}
}

void func_601(int iParam0)//Position - 0xCB1A4
{
	float fVar0;
	char* sVar1;
	MISC::SET_GAME_PAUSED(true);
	PAD::SET_INPUT_EXCLUSIVE(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/);
	fVar0 = 0f;
	while (!PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/) || fVar0 < 1f)
	{
		sVar1 = __LIB_10__.func_825(iParam0, 119);
		HUD::SET_WARNING_MESSAGE("FBR_GENERIC" /* GXT: ~a~ is not available whilst ~a~. */, 16384, 0, false, -1, "FBR_DIR_MODE" /* GXT: Director Mode */, sVar1, true, 0);
		SYSTEM::WAIT(0);
		fVar0 = (fVar0 + MISC::GET_FRAME_TIME());
	}
	MISC::SET_GAME_PAUSED(false);
}

bool func_602(int iParam0)//Position - 0xCF7EC
{
	return __LIB_7__.func_91(iParam0, 20, 1);
}

void func_603(char* sParam0)//Position - 0xD6404
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 35)
	{
		if (!MISC::IS_STRING_NULL(&(Global_113386.f_14141[iVar0 /*104*/])))
		{
			if (MISC::ARE_STRINGS_EQUAL(&(Global_113386.f_14141[iVar0 /*104*/]), sParam0))
			{
				if (Global_113386.f_14141[iVar0 /*104*/].f_24 == 2)
				{
				}
				else
				{
					Global_113386.f_14141[iVar0 /*104*/].f_99[0] = 0;
					Global_113386.f_14141[iVar0 /*104*/].f_99[1] = 0;
					Global_113386.f_14141[iVar0 /*104*/].f_99[2] = 0;
					if (!__LIB_2__.func_292(iVar0))
					{
						Global_113386.f_14141[iVar0 /*104*/].f_24 = 0;
						Global_113386.f_14141[iVar0 /*104*/].f_28 = 0;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_604(var uParam0)//Position - 0xD6808
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		Global_113386.f_2363.f_539.f_294[iVar0] = uParam0->f_17[iVar0];
		iVar1 = 0;
		while (iVar1 < 44)
		{
			Global_113386.f_2363.f_539.f_298[iVar0 /*477*/][iVar1 /*5*/] = { uParam0->f_812[iVar0 /*477*/][iVar1 /*5*/] };
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 51)
		{
			Global_113386.f_2363.f_539.f_298[iVar0 /*477*/].f_221[iVar1 /*5*/] = { uParam0->f_812[iVar0 /*477*/].f_221[iVar1 /*5*/] };
			iVar1++;
		}
		iVar0++;
	}
	__LIB_10__.func_695(uParam0);
}

void func_605()//Position - 0x2F956
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_19__.func_811(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_20__.func_509(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__.func_317(iVar0) && (!__LIB_0__.func_39(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__.func_317(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_606(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x37D23
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_607(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, int iParam6)//Position - 0x3826D
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

void func_608(int iParam0)//Position - 0x38F0B
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[iVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

int func_609(int iParam0)//Position - 0x394AE
{
	if (Global_113386.f_9085 || Global_3)
	{
		if (!Global_78319 || (Global_78319 && iParam0 != __LIB_0__.func_504(__LIB_0__.func_430())))
		{
			if (!__LIB_0__.func_429(__LIB_0__.func_388(iParam0)))
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_610(var uParam0, int iParam1)//Position - 0x39C70
{
	CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_10[iParam1 /*57*/].f_1, __LIB_11__.func_176(uParam0, iParam1, -1), ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(__LIB_11__.func_176(uParam0, iParam1, -1), CAM::GET_GAMEPLAY_CAM_COORD()), true);
}

void func_611(var uParam0, int iParam1)//Position - 0x3BFE6
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		if ((*uParam0)[iVar0 /*5*/])
		{
			if ((uParam0[iVar0 /*5*/])->f_4 == iParam1)
			{
				if ((uParam0[iVar0 /*5*/])->f_1)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam1);
					__LIB_11__.func_694(uParam0[iVar0 /*5*/]);
					return;
				}
				else
				{
					(uParam0[iVar0 /*5*/])->f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

void func_612(var uParam0, int iParam1, char* sParam2)//Position - 0x87313
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_475)
	{
		if (uParam0->f_475[iVar0 /*6*/])
		{
			if (uParam0->f_475[iVar0 /*6*/].f_5 == iParam1 && MISC::ARE_STRINGS_EQUAL(uParam0->f_475[iVar0 /*6*/].f_4, sParam2))
			{
				if (uParam0->f_475[iVar0 /*6*/].f_1)
				{
					VEHICLE::REMOVE_VEHICLE_RECORDING(iParam1, sParam2);
					__LIB_11__.func_694(&(uParam0->f_475[iVar0 /*6*/]));
					return;
				}
				else
				{
					uParam0->f_475[iVar0 /*6*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

void func_613(var uParam0, char* sParam1)//Position - 0x873A2
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_374)
	{
		if (uParam0->f_374[iVar0 /*5*/])
		{
			if (MISC::ARE_STRINGS_EQUAL(uParam0->f_374[iVar0 /*5*/].f_4, sParam1))
			{
				if (uParam0->f_374[iVar0 /*5*/].f_1)
				{
					TASK::REMOVE_WAYPOINT_RECORDING(sParam1);
					__LIB_11__.func_694(&(uParam0->f_374[iVar0 /*5*/]));
					return;
				}
				else
				{
					uParam0->f_374[iVar0 /*5*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

float func_614(int iParam0, int iParam1, int iParam2)//Position - 0x89753
{
	struct<3> Var0;
	struct<3> Var1;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
	Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, false) };
	return __LIB_4__.func_305(Var0, Var1, iParam2);
}

void func_615(int* iParam0, bool bParam1)//Position - 0xA1286
{
	__LIB_18__.func_192(iParam0, bParam1, 0);
}

void func_616(var uParam0)//Position - 0xA12FE
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (CUTSCENE::IS_CUTSCENE_ACTIVE())
	{
		if (CUTSCENE::CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY())
		{
			iVar0 = 0;
			while (iVar0 < *uParam0)
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(uParam0[iVar0 /*82*/]))
				{
					iVar1 = 0;
					while (iVar1 < 12)
					{
						if ((uParam0[iVar0 /*82*/])->f_17.f_13[iVar1] != -1 && (uParam0[iVar0 /*82*/])->f_17[iVar1] != -1)
						{
							CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(uParam0[iVar0 /*82*/], iVar1, (uParam0[iVar0 /*82*/])->f_17.f_13[iVar1], (uParam0[iVar0 /*82*/])->f_17[iVar1], (uParam0[iVar0 /*82*/])->f_16);
							(uParam0[iVar0 /*82*/])->f_17.f_13[iVar1] = -1;
							(uParam0[iVar0 /*82*/])->f_17[iVar1] = -1;
						}
						iVar1++;
					}
					iVar2 = 0;
					while (iVar2 < 9)
					{
						if ((uParam0[iVar0 /*82*/])->f_17.f_39[iVar2] != -1 && (uParam0[iVar0 /*82*/])->f_17.f_49[iVar2] != -1)
						{
							CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(uParam0[iVar0 /*82*/], iVar2, (uParam0[iVar0 /*82*/])->f_17.f_39[iVar2], (uParam0[iVar0 /*82*/])->f_17.f_49[iVar2], (uParam0[iVar0 /*82*/])->f_16);
							(uParam0[iVar0 /*82*/])->f_17.f_39[iVar2] = -1;
							(uParam0[iVar0 /*82*/])->f_17.f_49[iVar2] = -1;
						}
						iVar2++;
					}
					StringCopy(uParam0[iVar0 /*82*/], "", 64);
					(uParam0[iVar0 /*82*/])->f_16 = 0;
				}
				iVar0++;
			}
		}
	}
	else
	{
		__LIB_11__.func_702(uParam0);
	}
}

void func_617(int iParam0)//Position - 0x9F838
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_19__.func_972(iParam0);
	__LIB_6__.func_770(iParam0, 0);
}

void func_618(int* iParam0, bool bParam1, bool bParam2)//Position - 0x155C
{
	int iVar0;
	if (BitTest(iParam0->f_13, 30))
	{
		bParam1 = true;
	}
	__LIB_11__.func_718(iParam0);
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
		{
			HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
		}
		__LIB_0__.func_418(iVar0, iParam0);
		__LIB_0__.func_417(iVar0, iParam0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 31)
	{
		if (iVar0 != 8)
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), iVar0);
			MISC::CLEAR_BIT(&(iParam0->f_14), iVar0);
		}
		iVar0++;
	}
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		HUD::REMOVE_BLIP(iParam0);
	}
	iParam0->f_6 = 0;
	iParam0->f_12 = 0;
	iParam0->f_15 = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
		{
			PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(iParam0->f_17[iVar0], true);
			PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(iParam0->f_17[iVar0], true);
			if (bParam2)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 32, true);
				PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 305, false);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0->f_17[iVar0], 268, false);
			if (bParam1)
			{
				if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()) && iParam0->f_17[iVar0] != PLAYER::PLAYER_PED_ID())
				{
					PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
				}
			}
			if (!BitTest(iParam0->f_13, 29))
			{
				PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], false, -1, 0);
			}
			iParam0->f_17[iVar0] = 0;
		}
		iVar0++;
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(PLAYER::PLAYER_PED_ID(), true);
		PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(PLAYER::PLAYER_PED_ID(), true);
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (bParam2)
		{
			PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, true);
		}
	}
	iParam0->f_21 = 0;
}

void func_619(var uParam0)//Position - 0xEACE
{
	if (uParam0->f_885)
	{
		if (uParam0->f_885.f_1)
		{
			STREAMING::REMOVE_PTFX_ASSET();
			__LIB_11__.func_694(&(uParam0->f_885));
		}
		else
		{
			uParam0->f_885.f_2 = 1;
			uParam0->f_1007 = 1;
		}
	}
}

void func_620(var uParam0, char* sParam1)//Position - 0xFAB9
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_737)
	{
		if (uParam0->f_737[iVar0 /*5*/])
		{
			if (MISC::ARE_STRINGS_EQUAL(uParam0->f_737[iVar0 /*5*/].f_4, sParam1))
			{
				if (uParam0->f_737[iVar0 /*5*/].f_1)
				{
					AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(sParam1);
					__LIB_11__.func_694(&(uParam0->f_737[iVar0 /*5*/]));
					return;
				}
				else
				{
					uParam0->f_737[iVar0 /*5*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

int func_621(int* iParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4)//Position - 0x764DA
{
	int iVar0;
	if (!__LIB_0__.func_317(bParam1))
	{
		iVar0 = __LIB_11__.func_149(bParam1);
		STREAMING::REQUEST_MODEL(iVar0);
		if (STREAMING::HAS_MODEL_LOADED(iVar0))
		{
			if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				PED::DELETE_PED(iParam0);
			}
			*iParam0 = PED::CREATE_PED(26, iVar0, Param2, fParam3, false, false);
			PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam0);
			if (iVar0 == joaat("IG_LamarDavis"))
			{
				if (PED::GET_PED_DRAWABLE_VARIATION(*iParam0, 3) == 0)
				{
					PED::SET_PED_COMPONENT_VARIATION(*iParam0, 5, 2, 0, 0);
				}
			}
			__LIB_0__.func_366(*iParam0, bParam1);
			if (bParam4)
			{
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
			}
			return 1;
		}
	}
	return 0;
}

int func_622(int iParam0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, int iParam5)//Position - 0x8D237
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (iParam5 == 0)
		{
			if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, joaat("SCRIPT_TASK_PERFORM_SEQUENCE")) != 1)
			{
				if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, Param3, false, true, 0) && __LIB_11__.func_417(iParam0, fParam2, fParam4))
				{
					return 1;
				}
			}
		}
		else if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, joaat("SCRIPT_TASK_PLAY_ANIM")) != 1)
		{
			if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, Param3, false, true, 0) && __LIB_11__.func_417(iParam0, fParam2, fParam4))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_623(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x2E08
{
	int iVar0;
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__.func_330(iParam2)];
	if (iVar0 != 0)
	{
		STATS::STAT_SET_INT(iVar0, iParam1, bParam3);
	}
	switch (iParam0)
	{
		case 788:
			Global_1659687[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 789:
			Global_1659693[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 790:
			Global_1659699[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 791:
			Global_1659705[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8729:
			Global_1659711[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 778:
			Global_1659657[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 779:
			Global_1659663[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 780:
			Global_1659669[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 781:
			Global_1659675[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8731:
			Global_1659681[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 768:
			Global_1659627[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 769:
			Global_1659633[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 770:
			Global_1659639[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 771:
			Global_1659645[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8733:
			Global_1659651[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 758:
			Global_1659717[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 759:
			Global_1659723[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 760:
			Global_1659729[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 761:
			Global_1659735[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8735:
			Global_1659741[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 1304:
			Global_1659747[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 7236:
			Global_1659753[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 640:
			Global_1659759[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 1279:
			Global_1659765[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 1878:
			Global_2869777[0 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 2269:
			Global_2869777[1 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 2932:
			Global_2869777[2 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3061:
			Global_2869777[3 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 11391:
			Global_2869950[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 765:
			Global_1659771[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 766:
			Global_1659777[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 767:
			Global_1659783[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8734:
			Global_1659789[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 9538:
			Global_1659795[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 1237:
			Global_1659801[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3056:
			Global_2869862[0 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3057:
			Global_2869862[1 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3058:
			Global_2869862[2 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3059:
			Global_2869862[3 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3060:
			Global_2869862[4 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3639:
			Global_2869953[0 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3640:
			Global_2869953[1 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3641:
			Global_2869953[2 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3642:
			Global_2869953[3 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3643:
			Global_2869953[4 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3644:
			Global_2869969[0 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3645:
			Global_2869969[1 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3646:
			Global_2869969[2 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3647:
			Global_2869969[3 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3648:
			Global_2869969[4 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3224:
			Global_2869862[5 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3230:
			Global_2869777[4 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3666:
			Global_2869985[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3667:
			Global_2869994[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3668:
			Global_2869988[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3669:
			Global_2869997[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3670:
			Global_2869991[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3671:
			Global_2870000[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3692:
			Global_2870003[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3232:
			Global_2869862[6 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3233:
			Global_2869777[5 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3237:
			Global_2869862[7 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 3235:
			Global_2869777[6 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4022:
			Global_2869862[8 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4023:
			Global_2869777[7 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4025:
			Global_2869862[9 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4026:
			Global_2869777[8 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4028:
			Global_2869862[10 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4029:
			Global_2869777[9 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4031:
			Global_2869862[11 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 4032:
			Global_2869777[10 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6112:
			Global_2869862[12 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6113:
			Global_2869777[11 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6170:
			Global_2869862[13 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6171:
			Global_2869777[12 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6548:
			Global_2869862[14 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6549:
			Global_2869777[13 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6561:
			Global_2869862[15 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6562:
			Global_2869777[14 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6564:
			Global_2869862[16 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6565:
			Global_2869777[15 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6567:
			Global_2869862[17 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 6568:
			Global_2869777[16 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 7286:
			Global_2869777[17 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 7288:
			Global_2869777[18 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 7290:
			Global_2869777[19 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8013:
			Global_2869777[20 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8285:
			Global_2870006[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8286:
			Global_2870009[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8287:
			Global_2870012[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8288:
			Global_2870015[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8289:
			Global_2870018[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8290:
			Global_2870021[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8291:
			Global_2870024[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8292:
			Global_2870027[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8293:
			Global_2870030[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8294:
			Global_2870033[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8295:
			Global_2870036[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8296:
			Global_2870039[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8297:
			Global_2870042[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8905:
			Global_2870045[__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8537:
			Global_2869777[21 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8982:
			Global_2869862[23 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8980:
			Global_2869777[22 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8985:
			Global_2869862[24 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 8983:
			Global_2869777[23 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 9624:
			Global_2869777[24 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 9913:
			Global_2869777[25 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 10443:
			Global_2869862[27 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 10441:
			Global_2869777[26 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 10446:
			Global_2869862[28 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		case 10444:
			Global_2869777[27 /*3*/][__LIB_0__.func_330(iParam2)] = iParam1;
			break;
		default:
			break;
	}
}

int func_624(int iParam0, var uParam1)//Position - 0x1D33E
{
	int iVar0;
	var uVar1;
	iVar0 = Global_2866852[iParam0 /*3*/][__LIB_0__.func_330(uParam1)];
	if (STATS::STAT_GET_BOOL(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

int func_625(int iParam0)//Position - 0x275E
{
	int iVar0;
	int iVar1;
	if ((__LIB_1__.func_197(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_1__.func_183(iParam0))
	{
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (__LIB_1__.func_183(iVar0))
		{
			iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
			if (iVar1 == joaat("towtruck") || iVar1 == joaat("towtruck2"))
			{
				if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(iVar0, iParam0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_626(int iParam0, int iParam1, int iParam2)//Position - 0x3BCE
{
	int iVar0;
	char cVar1[32];
	char cVar2[16];
	struct<8> Var3;
	char cVar4[16];
	char cVar5[24];
	char cVar6[24];
	iVar0 = 522;
	StringCopy(&cVar1, "missdrfriedlanderdrf_idles", 32);
	StringCopy(&cVar2, "facials@drf", 16);
	Var3 = { __LIB_11__.func_753(iParam0) };
	StringCopy(&cVar4, "drf_idle_drf", 16);
	StringCopy(&cVar5, "michael_concerned_01", 24);
	StringCopy(&cVar6, "drfriedlander_idle_01", 24);
	if (__LIB_11__.func_752())
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_INJURED(iParam1))
		{
			if (!ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3, 3))
			{
				TASK::TASK_PLAY_ANIM(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3, 2f, -1000f, -1, iVar0, 0f, false, false, false);
				TASK::TASK_PLAY_ANIM(iParam1, &cVar1, &cVar4, 2f, -1000f, -1, iVar0, 0f, false, false, false);
				TASK::TASK_PLAY_ANIM(PLAYER::PLAYER_PED_ID(), &cVar2, &cVar5, 2f, -1000f, -1, 32 | iVar0, 0f, false, 4, false);
				TASK::TASK_PLAY_ANIM(iParam1, &cVar2, &cVar6, 2f, -1000f, -1, 32 | iVar0, 0f, false, false, false);
				PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(PLAYER::PLAYER_PED_ID(), false, false);
				PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(iParam1, false, false);
				if (CAM::DOES_CAM_EXIST(*iParam2))
				{
					CAM::DESTROY_CAM(*iParam2, false);
				}
				if (!CAM::DOES_CAM_EXIST(*iParam2))
				{
					*iParam2 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), false);
				}
				CAM::SET_CAM_COORD(*iParam2, -1906.8422f, -572.3835f, 19.1046f);
				CAM::SET_CAM_ROT(*iParam2, -1.5254f, 0.0003f, 171.4657f, 2);
				CAM::SET_CAM_FOV(*iParam2, 17f);
				CAM::SET_CAM_ACTIVE(*iParam2, true);
				CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
			}
			else if (ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3) >= 0.99f)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_627(int* iParam0, float fParam1, int iParam2, bool bParam3, bool bParam4, float fParam5)//Position - 0x3E85
{
	int iVar0;
	int iVar1;
	bool bVar2;
	char* sVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	bool bVar7;
	float fVar8;
	if (((CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADING_IN()) || CAM::IS_SCREEN_FADED_OUT()) || MISC::IS_FRONTEND_FADING())
	{
		if (!bParam3)
		{
			return;
		}
	}
	if (!__LIB_0__.func_916(iParam0))
	{
		return;
	}
	HUD::HIDE_LOADING_ON_FADE_THIS_FRAME();
	GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(iParam2);
	if (!__LIB_0__.func_517(iParam0->f_1, 256) || (__LIB_0__.func_517(iParam0->f_1, 8192) && PAD::HAVE_CONTROLS_CHANGED(2 /*FRONTEND_CONTROL*/)))
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_CLEAR_SPACE");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam1);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_MAX_WIDTH");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam5);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_DATA_SLOT_EMPTY");
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		if (MISC::IS_PC_VERSION())
		{
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "TOGGLE_MOUSE_BUTTONS");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(__LIB_0__.func_517(iParam0->f_1, 4096));
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
		iVar5 = 0;
		iVar6 = 0;
		while (iVar6 < iParam0->f_123)
		{
			switch (iParam0->f_2[iVar6 /*15*/].f_2)
			{
				case 0:
					bVar4 = true;
					break;
				case 1:
					bVar4 = PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/);
					break;
				case 2:
					bVar4 = !PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/);
					break;
				default:
					bVar4 = false;
					break;
			}
			if (bVar4)
			{
				if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_DATA_SLOT"))
				{
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar5);
					iVar5++;
					bVar7 = false;
					while (bVar7 < iParam0->f_2[iVar6 /*15*/].f_14)
					{
						iVar0 = iParam0->f_2[iVar6 /*15*/].f_3[bVar7 /*2*/];
						iVar1 = iParam0->f_2[iVar6 /*15*/].f_3[bVar7 /*2*/].f_1;
						bVar2 = BitTest(iParam0->f_2[iVar6 /*15*/].f_13, bVar7);
						if (!BitTest(iParam0->f_2[iVar6 /*15*/].f_12, bVar7))
						{
							sVar3 = PAD::GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(iVar0, iVar1, bVar2);
						}
						else
						{
							sVar3 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(iVar0, iVar1, bVar2);
						}
						if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar3))
						{
							__LIB_0__.func_514(sVar3);
						}
						bVar7++;
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(iParam0->f_2[iVar6 /*15*/]))
					{
						__LIB_0__.func_478(iParam0->f_2[iVar6 /*15*/]);
					}
					if (MISC::IS_PC_VERSION())
					{
						if (__LIB_0__.func_517(iParam0->f_1, 4096))
						{
							if (iParam0->f_2[iVar6 /*15*/].f_1)
							{
								GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
								GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam0->f_2[iVar6 /*15*/].f_3[0 /*2*/].f_1);
							}
							else
							{
								GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
								GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(-1);
							}
						}
					}
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
			}
			iVar6++;
		}
		fVar8 = __LIB_0__.func_316(bParam4, __LIB_0__.func_316(__LIB_0__.func_517(iParam0->f_1, 32), 1f, 0f), -1f);
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "DRAW_INSTRUCTIONAL_BUTTONS");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fVar8);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_BACKGROUND_COLOUR");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0f);
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0f);
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0f);
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(80f);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		__LIB_0__.func_712(&(iParam0->f_1), 256);
		__LIB_0__.func_711(&(iParam0->f_1), 128);
	}
	GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*iParam0, 255, 255, 255, 0, 0);
}

int func_628(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x44A1
{
	int iVar0;
	int iVar1;
	int iVar2[13];
	iVar0 = 0;
	while (iVar0 < 13)
	{
		iVar2[iVar0] = iVar0;
		iVar0++;
	}
	if ((iParam0 > 0 && iParam0 < 13) && !__LIB_11__.func_756(&(Global_113386.f_19961), iParam0))
	{
		iVar2[iParam0] = 0;
	}
	else if ((iParam1 > 0 && iParam1 < 13) && !__LIB_11__.func_756(&(Global_113386.f_19961), iParam1))
	{
		iVar2[iParam1] = 0;
	}
	else if ((iParam2 > 0 && iParam2 < 13) && !__LIB_11__.func_756(&(Global_113386.f_19961), iParam2))
	{
		iVar2[iParam2] = 0;
	}
	else if ((iParam3 > 0 && iParam3 < 13) && !__LIB_11__.func_756(&(Global_113386.f_19961), iParam3))
	{
		iVar2[iParam3] = 0;
	}
	else if ((iParam4 > 0 && iParam4 < 13) && !__LIB_11__.func_756(&(Global_113386.f_19961), iParam4))
	{
		iVar2[iParam4] = 0;
	}
	iVar1 = __LIB_11__.func_748(&iVar2, 13, 1, 13);
	if (iVar1 > 0)
	{
		return iVar1;
	}
	if (iParam2 <= 0 || iParam2 >= 13)
	{
		iVar1 = MISC::GET_RANDOM_INT_IN_RANGE(1, 3);
	}
	else if (iParam3 <= 0 || iParam3 >= 13)
	{
		iVar1 = MISC::GET_RANDOM_INT_IN_RANGE(1, 4);
	}
	else if (iParam4 <= 0 || iParam4 >= 13)
	{
		iVar1 = MISC::GET_RANDOM_INT_IN_RANGE(1, 5);
	}
	else
	{
		iVar1 = MISC::GET_RANDOM_INT_IN_RANGE(1, 6);
	}
	switch (iVar1)
	{
		case 1:
			return iParam0;
		case 2:
			return iParam1;
		case 3:
			return iParam2;
		case 4:
			return iParam3;
		case 5:
			return iParam4;
		default:
	}
	return 0;
}

void func_629(int iParam0)//Position - 0x4A8E
{
	switch (iParam0)
	{
		case 0:
			__LIB_0__.func_372(54);
			break;
		case 1:
			__LIB_0__.func_372(55);
			break;
		case 2:
			__LIB_0__.func_372(56);
			break;
		case 3:
			__LIB_0__.func_372(57);
			break;
		case 4:
			__LIB_0__.func_372(58);
			break;
	}
}

int func_630(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x5B76
{
	int iVar0;
	*uParam3 = -99;
	switch (iParam0)
	{
		case joaat("Player_Zero"):
			switch (iParam1)
			{
				case 10:
					if (iParam2 >= 44 && iParam2 <= 47)
					{
						*uParam3 = 0;
					}
					break;
				case 14:
					if (((((((iParam2 >= 31 && iParam2 <= 32) || (iParam2 >= 33 && iParam2 <= 34)) || (iParam2 >= 35 && iParam2 <= 36)) || iParam2 == 37) || (iParam2 >= 38 && iParam2 <= 39)) || (iParam2 >= 40 && iParam2 <= 41)) || (iParam2 >= 42 && iParam2 <= 44))
					{
						*uParam3 = 0;
					}
					break;
			}
			break;
		case joaat("Player_One"):
			switch (iParam1)
			{
				case 10:
					if (iParam2 >= 47 && iParam2 <= 50)
					{
						*uParam3 = 0;
					}
					break;
				case 14:
					if (((((iParam2 >= 26 && iParam2 <= 27) || (iParam2 >= 28 && iParam2 <= 29)) || (iParam2 >= 30 && iParam2 <= 31)) || iParam2 == 32) || (iParam2 >= 35 && iParam2 <= 36))
					{
						*uParam3 = 0;
					}
					break;
			}
			break;
		case joaat("Player_Two"):
			switch (iParam1)
			{
				case 9:
					if (iParam2 >= 15 && iParam2 <= 16)
					{
						*uParam3 = 0;
					}
					break;
				case 10:
					if (iParam2 >= 29 && iParam2 <= 32)
					{
						*uParam3 = 0;
					}
					break;
				case 14:
					if (((((((iParam2 >= 47 && iParam2 <= 48) || (iParam2 >= 49 && iParam2 <= 50)) || (iParam2 >= 51 && iParam2 <= 52)) || iParam2 == 53) || (iParam2 >= 54 && iParam2 <= 55)) || (iParam2 >= 56 && iParam2 <= 57)) || (iParam2 >= 58 && iParam2 <= 60))
					{
						*uParam3 = 0;
					}
					break;
			}
			break;
	}
	if (*uParam3 != -99)
	{
		iVar0 = __LIB_0__.func_19(iParam0);
		Global_113386.f_2363.f_539[iVar0 /*65*/].f_63 = iParam2;
		Global_113386.f_2363.f_539[iVar0 /*65*/].f_64 = iParam1;
		return 1;
	}
	return 0;
}

int func_631(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x1DFEC
{
	int iVar0;
	int iVar1;
	int iVar2[12];
	bool bVar3;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		iVar2[iVar0] = iVar0;
		iVar0++;
	}
	if ((iParam0 > 0 && iParam0 < 12) && !__LIB_11__.func_765(&(Global_113386.f_19961), iParam0))
	{
		iVar2[iParam0] = 0;
		bVar3 = true;
	}
	if ((iParam1 > 0 && iParam1 < 12) && !__LIB_11__.func_765(&(Global_113386.f_19961), iParam1))
	{
		iVar2[iParam1] = 0;
		bVar3 = true;
	}
	if ((iParam2 > 0 && iParam2 < 12) && !__LIB_11__.func_765(&(Global_113386.f_19961), iParam2))
	{
		iVar2[iParam2] = 0;
		bVar3 = true;
	}
	if ((iParam3 > 0 && iParam3 < 12) && !__LIB_11__.func_765(&(Global_113386.f_19961), iParam3))
	{
		iVar2[iParam3] = 0;
		bVar3 = true;
	}
	if ((iParam4 > 0 && iParam4 < 12) && !__LIB_11__.func_765(&(Global_113386.f_19961), iParam4))
	{
		iVar2[iParam4] = 0;
		bVar3 = true;
	}
	if (!bVar3)
	{
		if (iParam0 > 0 && iParam0 < 12)
		{
			iVar2[iParam0] = 0;
		}
		if (iParam1 > 0 && iParam1 < 12)
		{
			iVar2[iParam1] = 0;
		}
		if (iParam2 > 0 && iParam2 < 12)
		{
			iVar2[iParam2] = 0;
		}
		if (iParam3 > 0 && iParam3 < 12)
		{
			iVar2[iParam3] = 0;
		}
		if (iParam4 > 0 && iParam4 < 12)
		{
			iVar2[iParam4] = 0;
		}
	}
	iVar1 = __LIB_11__.func_748(&iVar2, 12, 1, 12);
	if (iVar1 > 0)
	{
		return iVar1;
	}
	iVar1 = MISC::GET_RANDOM_INT_IN_RANGE(1, 3);
	switch (iVar1)
	{
		case 1:
			return iParam0;
		case 2:
			return iParam1;
		default:
	}
	return 0;
}

int func_632(int iParam0)//Position - 0x1E1B7
{
	switch (iParam0)
	{
		case 0:
			return __LIB_11__.func_764(&Global_96909, 1);
			break;
		case 1:
			return __LIB_11__.func_764(&Global_96911, 3);
			break;
		case 2:
			return __LIB_11__.func_764(&Global_96915, 1);
			break;
		case 3:
			return __LIB_11__.func_764(&Global_96917, 1);
			break;
		case 4:
			return __LIB_11__.func_764(&Global_96919, 1);
			break;
		case 5:
			return __LIB_11__.func_764(&Global_96921, 1);
			break;
		case 6:
			return __LIB_11__.func_764(&Global_96923, 1);
			break;
		case 7:
			return __LIB_11__.func_764(&Global_96925, 2);
			break;
		case 8:
			return __LIB_11__.func_764(&Global_96928, 1);
			break;
		case 9:
			return __LIB_11__.func_764(&Global_96930, 1);
			break;
	}
	return 0;
}

int func_633(int iParam0, bool bParam1)//Position - 0x1E2EB
{
	switch (iParam0)
	{
		case 0:
			if (__LIB_0__.func_176(19) && !__LIB_0__.func_176(20))
			{
				if (__LIB_0__.func_176(44))
				{
					return 32;
				}
				else
				{
					return 16;
				}
			}
			break;
		case 1:
			if (__LIB_0__.func_176(20) && !__LIB_0__.func_176(59))
			{
				if ((!__LIB_0__.func_176(21) || __LIB_0__.func_176(72)) || __LIB_0__.func_176(73))
				{
					if (__LIB_0__.func_176(21))
					{
						return 64;
					}
					else if (__LIB_0__.func_176(29))
					{
						return 32;
					}
					else
					{
						return 16;
					}
				}
			}
			break;
		case 4:
			if ((__LIB_0__.func_176(48) && __LIB_0__.func_176(61)) && __LIB_0__.func_176(22))
			{
				if (__LIB_0__.func_176(27))
				{
					return 64;
				}
				else if (__LIB_0__.func_176(24))
				{
					return 32;
				}
				else if (!__LIB_0__.func_176(84) && !__LIB_0__.func_176(85))
				{
					return 16;
				}
			}
			break;
	}
	if (bParam1)
	{
		return 16;
	}
	return 1;
}

int func_634(var uParam0)//Position - 0x21A2A
{
	if (!AUDIO::LOAD_STREAM("Office_Background_Stream", "SHRINK_SOUNDS"))
	{
		return 0;
	}
	if (__LIB_1__.func_8(uParam0))
	{
		if (HUD::HAS_ADDITIONAL_TEXT_LOADED(0))
		{
			return 1;
		}
	}
	return 0;
}

void func_635()//Position - 0x21E85
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < 10)
	{
		iVar0 = iVar1;
		switch (iVar0)
		{
			case 0:
				__LIB_11__.func_770(&Global_96909, 1);
				break;
			case 1:
				__LIB_11__.func_770(&Global_96911, 3);
				break;
			case 2:
				__LIB_11__.func_770(&Global_96915, 1);
				break;
			case 3:
				__LIB_11__.func_770(&Global_96917, 1);
				break;
			case 4:
				__LIB_11__.func_770(&Global_96919, 1);
				break;
			case 5:
				__LIB_11__.func_770(&Global_96921, 1);
				break;
			case 6:
				__LIB_11__.func_770(&Global_96923, 1);
				break;
			case 7:
				__LIB_11__.func_770(&Global_96925, 2);
				break;
			case 8:
				__LIB_11__.func_770(&Global_96928, 1);
				break;
			case 9:
				__LIB_11__.func_770(&Global_96930, 1);
				break;
		}
		iVar1++;
	}
}

void func_636(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, int iParam6)//Position - 0x341F
{
	struct<2> Var0;
	int iVar1;
	int iVar2;
	switch (iParam6)
	{
		case 2:
			StringCopy(&Var0, "DRF_3", 16);
			iVar1 = 17;
			iVar2 = 7;
			break;
		case 3:
			StringCopy(&Var0, "DRF_4", 16);
			iVar1 = 6;
			iVar2 = 17;
			break;
		default:
			break;
	}
	__LIB_11__.func_777(uParam0, uParam1, uParam4, &Var0, iVar1, iVar2, 0);
	__LIB_11__.func_777(uParam2, uParam3, uParam5, &Var0, iVar1, iVar2, 0);
}

void func_637(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x350A
{
	int iVar0;
	switch (uParam6->f_19)
	{
		case 1:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 4))
			{
				case 0:
					iVar0 = 6;
					break;
				case 1:
					iVar0 = 7;
					break;
				case 2:
					iVar0 = 8;
					break;
				case 3:
					iVar0 = 9;
					break;
			}
			break;
		case 2:
		case 4:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 3))
			{
				case 0:
					iVar0 = 6;
					break;
				case 1:
					iVar0 = 7;
					break;
				case 2:
					iVar0 = 9;
					break;
			}
			break;
		case 3:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 4))
			{
				case 0:
					iVar0 = 2;
					break;
				case 1:
					iVar0 = 6;
					break;
				case 2:
					iVar0 = 7;
					break;
				case 3:
					iVar0 = 9;
					break;
			}
			break;
		case 5:
		case 6:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 4))
			{
				case 0:
					iVar0 = 3;
					break;
				case 1:
					iVar0 = 6;
					break;
				case 2:
					iVar0 = 7;
					break;
				case 3:
					iVar0 = 9;
					break;
			}
			break;
		case 7:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 6))
			{
				case 0:
					iVar0 = 2;
					break;
				case 1:
					iVar0 = 4;
					break;
				case 2:
					iVar0 = 6;
					break;
				case 3:
					iVar0 = 7;
					break;
				case 4:
					iVar0 = 8;
					break;
				case 5:
					iVar0 = 9;
					break;
			}
			break;
		case 8:
		case 9:
		case 11:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 8))
			{
				case 0:
					iVar0 = 2;
					break;
				case 1:
					iVar0 = 3;
					break;
				case 2:
					iVar0 = 4;
					break;
				case 3:
					iVar0 = 6;
					break;
				case 4:
					iVar0 = 7;
					break;
				case 5:
					iVar0 = 8;
					break;
				case 6:
					iVar0 = 9;
					break;
				case 7:
					iVar0 = 11;
					break;
			}
			break;
		case 10:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 7))
			{
				case 0:
					iVar0 = 3;
					break;
				case 1:
					iVar0 = 4;
					break;
				case 2:
					iVar0 = 6;
					break;
				case 3:
					iVar0 = 7;
					break;
				case 4:
					iVar0 = 8;
					break;
				case 5:
					iVar0 = 9;
					break;
				case 6:
					iVar0 = 11;
					break;
			}
			break;
		case 12:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 4))
			{
				case 0:
					iVar0 = 6;
					break;
				case 1:
					iVar0 = 7;
					break;
				case 2:
					iVar0 = 9;
					break;
				case 3:
					iVar0 = 11;
					break;
			}
			break;
	}
	__LIB_11__.func_777(uParam0, uParam1, uParam4, "PMCSUM", (iVar0 - 1), 1, 0);
	__LIB_11__.func_777(uParam2, uParam3, uParam5, "PMCSUM", (iVar0 - 1), 1, 0);
}

void func_638(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, int iParam6)//Position - 0x3D4D
{
	int iVar0;
	int iVar1;
	switch (iParam6)
	{
		case 2:
			iVar0 = 3;
			iVar1 = 1;
			break;
		case 3:
			iVar0 = 0;
			iVar1 = 3;
			break;
	}
	__LIB_11__.func_777(uParam0, uParam1, uParam4, "DRF_ACC", iVar0, 1, 0);
	__LIB_11__.func_777(uParam2, uParam3, uParam5, "DRF_DEN", iVar1, 1, 0);
}

void func_639(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x4547
{
	if (iParam3 == 0)
	{
		__LIB_11__.func_777(uParam0, uParam1, uParam2, "DRF_OVG", MISC::GET_RANDOM_INT_IN_RANGE(1, 3), 1, 0);
		__LIB_11__.func_777(uParam0, uParam1, uParam2, "DRF_TMG", __LIB_0__.func_138(__LIB_0__.func_502(), 0, 2), 1, 0);
	}
	else if (iParam3 == 1)
	{
		__LIB_11__.func_777(uParam0, uParam1, uParam2, "DRF_OVO", MISC::GET_RANDOM_INT_IN_RANGE(1, 3), 1, 0);
		__LIB_11__.func_778(uParam0, uParam1, uParam2, "PDRTMO", 3);
	}
	else
	{
		__LIB_11__.func_777(uParam0, uParam1, uParam2, "DRF_OVB", 0, 1, 0);
		__LIB_11__.func_777(uParam0, uParam1, uParam2, "DRF_TMB", 2, 1, 0);
	}
}

struct<4> func_640(int iParam0, var uParam1, var uParam2, bool bParam3)//Position - 0x46CE
{
	struct<4> Var0;
	if (__LIB_0__.func_176(59) && !__LIB_0__.func_176(45))
	{
		if (iParam0 == 2)
		{
			StringCopy(&Var0, "DRF_SOL1", 16);
			*uParam1 = 0;
			*uParam2 = 19;
			if (bParam3)
			{
				__LIB_11__.func_780(&(Global_113386.f_19961), 6);
			}
		}
	}
	else if (__LIB_0__.func_176(14) && !__LIB_0__.func_176(16))
	{
		StringCopy(&Var0, "DRF_EXILE", 16);
		*uParam1 = 0;
		*uParam2 = 9;
		if (bParam3)
		{
			__LIB_11__.func_780(&(Global_113386.f_19961), 7);
		}
	}
	else if (__LIB_0__.func_176(16) && !__LIB_0__.func_176(39))
	{
		StringCopy(&Var0, "DRF_EXILE", 16);
		*uParam1 = 9;
		*uParam2 = 10;
		if (bParam3)
		{
			__LIB_11__.func_780(&(Global_113386.f_19961), 8);
		}
	}
	else if ((__LIB_0__.func_176(39) && !__LIB_0__.func_176(47)) && !__LIB_11__.func_773(518202687))
	{
		StringCopy(&Var0, "DRF_SOL2", 16);
		*uParam1 = 0;
		*uParam2 = 15;
		if (bParam3)
		{
			__LIB_11__.func_780(&(Global_113386.f_19961), 9);
		}
	}
	else if (__LIB_0__.func_176(47) && !__LIB_0__.func_176(22))
	{
		StringCopy(&Var0, "DRF_MIC2", 16);
		*uParam1 = 0;
		*uParam2 = 13;
		if (bParam3)
		{
			__LIB_11__.func_780(&(Global_113386.f_19961), 10);
		}
	}
	return Var0;
}

void func_641(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x496D
{
	struct<4> Var0;
	int iVar1;
	switch (iParam3)
	{
		case 2:
			StringCopy(&Var0, "DRF_3", 16);
			iVar1 = 17;
			break;
		case 3:
			StringCopy(&Var0, "DRF_4", 16);
			iVar1 = 6;
			break;
		default:
			break;
	}
	__LIB_11__.func_777(uParam0, uParam1, uParam2, &Var0, 0, iVar1, 0);
	switch (iParam3)
	{
		case 2:
			StringCopy(&Var0, "DRF_OVR_2", 16);
			break;
		case 3:
			StringCopy(&Var0, "DRF_OVR_5", 16);
			break;
	}
	StringCopy(uParam0[*uParam2 /*4*/], "DRF_OVR", 16);
	*(uParam1[*uParam2 /*4*/]) = { Var0 };
	*uParam2++;
}

void func_642(var uParam0, var uParam1, int iParam2)//Position - 0x4A9E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < iParam2)
	{
		(*uParam0)[iVar0] = __LIB_1__.func_192(uParam1[iVar0 /*4*/]);
		iVar0++;
	}
}

int func_643(var uParam0, var uParam1, var uParam2)//Position - 0x4B62
{
	int iVar0;
	iVar0 = __LIB_11__.func_782(&(Global_113386.f_19961));
	switch (iVar0)
	{
		case 0:
			__LIB_11__.func_777(uParam0, uParam1, uParam2, "PBTNM", 0, 11, 0);
			__LIB_11__.func_781(&(Global_113386.f_19961), 1);
			break;
		case 1:
			__LIB_11__.func_777(uParam0, uParam1, uParam2, "PBTNM2", 0, 10, 0);
			__LIB_11__.func_781(&(Global_113386.f_19961), 2);
			break;
		case 2:
			__LIB_11__.func_777(uParam0, uParam1, uParam2, "PBTNM3", 0, 12, 0);
			__LIB_11__.func_781(&(Global_113386.f_19961), 3);
			break;
		default:
			return 0;
			break;
	}
	return 1;
}

void func_644(int iParam0)//Position - 0xB49
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 16)
	{
		if (iParam0 == Global_44105[iVar0 /*6*/])
		{
			__LIB_11__.func_787(iVar0);
		}
		iVar0++;
	}
}

int func_645()//Position - 0xC17
{
	if (Global_2883694)
	{
		if (__LIB_0__.func_39(0))
		{
			if (Global_3407872 || __LIB_0__.func_2(0))
			{
				return 1;
			}
		}
	}
	if (Global_2883693)
	{
		if (__LIB_0__.func_39(0))
		{
			if (Global_3932160 || __LIB_0__.func_2(0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_646(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11)//Position - 0x1E5FB
{
	struct<15> Var0;
	bool bVar1;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (iParam4 < 3)
	{
		if (iParam4 != bParam3)
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__.func_522(iParam1);
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam2;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam5);
		Var0.f_5 = iParam6;
		Var0.f_6 = bParam3;
		Var0.f_14 = iParam4;
		Var0.f_10 = iParam7;
		Var0.f_11 = -1;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		if (iParam7 != -1)
		{
			MISC::SET_BIT(&(Var0.f_1), 11);
		}
		else if (iParam1 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		bVar1 = false;
		while (bVar1 < 3)
		{
			if (BitTest(iParam2, bVar1))
			{
				__LIB_6__.func_848(bVar1);
			}
			bVar1++;
		}
		return 1;
	}
	return 0;
}

int func_647(int iParam0, int iParam1, bool bParam2)//Position - 0x2817D
{
	if (__LIB_1__.func_197(iParam0) && PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
	{
		if (__LIB_1__.func_197(iParam1))
		{
			if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(iParam1, iParam0))
			{
				if (bParam2)
				{
					if (PED::IS_PED_RAGDOLL(iParam1))
					{
						return 1;
					}
				}
				else
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_648()//Position - 0x6BB90
{
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
	{
		if (CUTSCENE::CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY("Michael", 0))
		{
			PED::FORCE_PED_MOTION_STATE(PLAYER::PLAYER_PED_ID(), joaat("MotionState_Idle"), false, 1, false);
			return 1;
		}
	}
	return 0;
}

void func_649(int* iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x3CEC9
{
	__LIB_11__.func_32(iParam0);
	*iParam0 = VEHICLE::CREATE_VEHICLE(iParam1, Param2, fParam3, true, true, false);
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
		ENTITY::SET_ENTITY_HEALTH(*iParam0, 1000, 0);
	}
}

void func_650(var uParam0, int iParam1, int iParam2, bool bParam3, bool bParam4, int iParam5)//Position - 0x1A15
{
	int iVar0;
	if (!uParam0->f_10)
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			if (!__LIB_0__.func_39(13) && !__LIB_0__.func_39(14))
			{
				if (!OBJECT::DOES_PICKUP_EXIST(uParam0->f_1))
				{
					if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), uParam0->f_3) <= (50f * 50f))
					{
						STREAMING::REQUEST_MODEL(iParam1);
						while (!STREAMING::HAS_MODEL_LOADED(iParam1))
						{
							STREAMING::REQUEST_MODEL(iParam1);
							SYSTEM::WAIT(0);
						}
						if (bParam3)
						{
							__LIB_0__.func_544(uParam0->f_3);
						}
						MISC::CLEAR_AREA(uParam0->f_3, 2.5f, false, false, false, false);
						if (bParam4)
						{
							MISC::SET_BIT(&iVar0, 1);
							uParam0->f_1 = OBJECT::CREATE_PICKUP_ROTATE(joaat("PICKUP_CUSTOM_SCRIPT"), uParam0->f_3, uParam0->f_6, iVar0, -1, iParam5, true, iParam1);
						}
						else
						{
							MISC::SET_BIT(&iVar0, 3);
							MISC::SET_BIT(&iVar0, 4);
							MISC::SET_BIT(&iVar0, 8);
							MISC::SET_BIT(&iVar0, 1);
							uParam0->f_1 = OBJECT::CREATE_PICKUP(iParam2, uParam0->f_3, iVar0, -1, true, iParam1);
						}
						STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam1);
					}
				}
			}
			if (OBJECT::DOES_PICKUP_EXIST(uParam0->f_1))
			{
				uParam0->f_10 = 1;
			}
		}
	}
}

int func_651(var uParam0)//Position - 0x14C0
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_55;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_55;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_68;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_68;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_68;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_652(int iParam0)//Position - 0x2D94
{
	return Global_1659759[__LIB_0__.func_330(iParam0)];
}

void func_653(int iParam0)//Position - 0x9978B
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_20__.func_446(iParam0);
	__LIB_6__.func_770(iParam0, 0);
}

void func_654(int* iParam0)//Position - 0x99901
{
	__LIB_11__.func_810();
	GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(iParam0);
}

int func_655(var uParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, int iParam6)//Position - 0x971D8
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	float fVar7;
	switch (*uParam0)
	{
		case 0:
			__LIB_6__.func_842();
			if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_5, false))
			{
				__LIB_11__.func_127(uParam0);
				Var0 = { CAM::GET_FINAL_RENDERED_CAM_COORD() };
				if (bParam1)
				{
					Var0 = { Var0 + ENTITY::GET_ENTITY_VELOCITY(uParam0->f_5) * FtoV(MISC::GET_FRAME_TIME()) };
				}
				Var1 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_5, Var0) };
				Var2 = { CAM::GET_FINAL_RENDERED_CAM_ROT(2) };
				Var3 = { Var2 + uParam0->f_9 };
				Var4 = { Var3 - ENTITY::GET_ENTITY_ROTATION(uParam0->f_5, 2) };
				Var5 = { (-SYSTEM::SIN(Var3.f_2) * SYSTEM::COS(Var3.f_0)), (SYSTEM::COS(Var3.f_2) * SYSTEM::COS(Var3.f_0)), SYSTEM::SIN(Var3.f_0) };
				Var6 = { (-SYSTEM::SIN(Var4.f_2) * SYSTEM::COS(Var4.f_0)), (SYSTEM::COS(Var4.f_2) * SYSTEM::COS(Var4.f_0)), SYSTEM::SIN(Var4.f_0) };
				fVar7 = CAM::GET_FINAL_RENDERED_CAM_FOV();
				if (uParam0->f_17 > 0 || iParam6 != 0)
				{
					uParam0->f_3 = CAM::CREATE_CAMERA(joaat("TIMED_SPLINE_CAMERA"), false);
				}
				uParam0->f_1 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), true);
				if (bParam1)
				{
					CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_1, uParam0->f_5, Var1, true);
				}
				else
				{
					CAM::SET_CAM_COORD(uParam0->f_1, Var0);
				}
				CAM::SET_CAM_ROT(uParam0->f_1, Var2, 2);
				CAM::SET_CAM_FOV(uParam0->f_1, fVar7);
				uParam0->f_2 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), true);
				if (bParam1 && !bParam4)
				{
					CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_2, uParam0->f_5, Var1 + Var6 * Vector(uParam0->f_12, uParam0->f_12, uParam0->f_12), true);
				}
				else
				{
					CAM::SET_CAM_COORD(uParam0->f_2, Var0 + Var5 * Vector(uParam0->f_12, uParam0->f_12, uParam0->f_12));
				}
				CAM::SET_CAM_ROT(uParam0->f_2, Var2, 2);
				CAM::SET_CAM_FOV(uParam0->f_2, fVar7);
				if (uParam0->f_17 > 0 && iParam6 == 0)
				{
					uParam0->f_4 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), true);
					if (bParam1 && !bParam4)
					{
						CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_4, uParam0->f_5, Var1 + Var6 * Vector(uParam0->f_12, uParam0->f_12, uParam0->f_12) * Vector(uParam0->f_13, uParam0->f_13, uParam0->f_13), true);
					}
					else
					{
						CAM::SET_CAM_COORD(uParam0->f_4, Var0 + Var5 * Vector(uParam0->f_12, uParam0->f_12, uParam0->f_12) * Vector(uParam0->f_13, uParam0->f_13, uParam0->f_13));
					}
					CAM::SET_CAM_ROT(uParam0->f_4, Var2, 2);
					CAM::SET_CAM_FOV(uParam0->f_4, fVar7);
				}
				if (uParam0->f_17 > 0 || iParam6 != 0)
				{
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_3, uParam0->f_1, 0, 2);
					if (iParam6 == 0)
					{
						CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_3, uParam0->f_4, uParam0->f_17, 2);
					}
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_3, uParam0->f_2, (uParam0->f_14 - uParam0->f_17), 2);
					CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_3, iParam6);
					CAM::SET_CAM_ACTIVE(uParam0->f_3, true);
				}
				else
				{
					CAM::SET_CAM_ACTIVE_WITH_INTERP(uParam0->f_2, uParam0->f_1, uParam0->f_14, 2, 2);
				}
				CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
				uParam0->f_7 = MISC::GET_GAME_TIMER();
				uParam0->f_8 = 0;
				*uParam0 = 1;
			}
			else
			{
				return 1;
			}
			break;
		case 1:
			__LIB_6__.func_842();
			if (bParam3)
			{
				if (!uParam0->f_8)
				{
					if (MISC::GET_GAME_TIMER() >= (uParam0->f_7 + uParam0->f_16))
					{
						if (bParam5)
						{
							switch (uParam0->f_6)
							{
								case 1:
									GRAPHICS::ANIMPOSTFX_PLAY("CamPushInFranklin", 0, false);
									break;
								case 0:
									GRAPHICS::ANIMPOSTFX_PLAY("CamPushInMichael", 0, false);
									break;
								case 2:
									GRAPHICS::ANIMPOSTFX_PLAY("CamPushInTrevor", 0, false);
									break;
							}
						}
						else
						{
							GRAPHICS::ANIMPOSTFX_PLAY("CamPushInNeutral", 0, false);
						}
						AUDIO::PLAY_SOUND_FRONTEND(-1, "1st_Person_Transition", "PLAYER_SWITCH_CUSTOM_SOUNDSET", true);
						uParam0->f_8 = 1;
					}
				}
			}
			if (MISC::GET_GAME_TIMER() >= (uParam0->f_7 + uParam0->f_15))
			{
				if (bParam2)
				{
					__LIB_11__.func_127(uParam0);
					CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
				}
				return 1;
			}
			break;
		case 2:
			return 1;
			break;
	}
	return 0;
}

void func_656(int iParam0)//Position - 0xA3211
{
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_20__.func_511(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(Global_77137.f_139[iParam0]));
			Global_77137.f_139[iParam0] = 0;
		}
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			__LIB_6__.func_770(iParam0, 0);
		}
	}
}

void func_657(int iParam0, int iParam1)//Position - 0xA9D69
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (iParam0 == 145 || Global_97782[iVar0] == iParam0)
			{
				if (iParam1 == 0 || ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == __LIB_11__.func_311(iParam0, iParam1))
				{
					if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_97772[iVar0], false))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_97772[iVar0], false, true);
						VEHICLE::DELETE_VEHICLE(&(Global_97772[iVar0]));
						Global_97782[iVar0] = 145;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_658(int* iParam0, float fParam1)//Position - 0xAB3B8
{
	if (__LIB_0__.func_516(iParam0))
	{
		__LIB_2__.func_186(iParam0, (__LIB_5__.func_736(iParam0) + fParam1));
	}
}

int func_659(int iParam0)//Position - 0x93BC
{
	if (Global_113386.f_9085 || Global_3)
	{
		if (!Global_78319 || (Global_78319 && iParam0 != __LIB_0__.func_504(__LIB_0__.func_430())))
		{
			if (!__LIB_11__.func_808(__LIB_0__.func_388(iParam0)))
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_660(int iParam0)//Position - 0x1304
{
	int iVar0;
	struct<14> Var1;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_764)
	{
		return;
	}
	if (Global_113386.f_7688.f_764 > 1)
	{
		iVar0 = iParam0;
		while (iVar0 <= (Global_113386.f_7688.f_764 - 2))
		{
			Global_113386.f_7688.f_651[iVar0 /*14*/] = { Global_113386.f_7688.f_651[iVar0 + 1 /*14*/] };
			iVar0++;
		}
	}
	if (Global_113386.f_7688.f_764 > 0)
	{
		Global_113386.f_7688.f_651[(Global_113386.f_7688.f_764 - 1) /*14*/] = { Var1 };
		Global_113386.f_7688.f_764 = (Global_113386.f_7688.f_764 - 1);
	}
	__LIB_6__.func_848(0);
	__LIB_6__.func_848(1);
	__LIB_6__.func_848(2);
}

void func_661(var uParam0, bool bParam1)//Position - 0x4788B
{
	__LIB_10__.func_730(&(uParam0->f_41), bParam1);
}

void func_662(int iParam0, var uParam1)//Position - 0x111C
{
	if (!__LIB_0__.func_43(iParam0))
	{
		return;
	}
	Global_113386.f_2363.f_539.f_2332[iParam0] = uParam1;
}

void func_663(int iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x77386
{
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		__LIB_11__.func_840(iParam1);
		*iParam0 = PED::CREATE_PED(26, iParam1, Param2, fParam3, true, true);
		PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam0);
		WEAPON::REMOVE_ALL_PED_WEAPONS(*iParam0, true);
	}
}

void func_664(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x7743F
{
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam1) && ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		__LIB_11__.func_840(iParam2);
		*iParam1 = PED::CREATE_PED_INSIDE_VEHICLE(iParam0, 26, iParam2, iParam3, true, true);
		PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam1);
		WEAPON::REMOVE_ALL_PED_WEAPONS(*iParam1, true);
	}
}

void func_665(struct<3> Param0, float fParam1, int iParam2, int iParam3, bool bParam4, bool bParam5)//Position - 0x7E188
{
	int iVar0;
	int iVar1;
	iVar0 = STREAMING::STREAMVOL_CREATE_SPHERE(Param0, fParam1, iParam2, 127);
	if (STREAMING::STREAMVOL_IS_VALID(iVar0))
	{
		iVar1 = (MISC::GET_GAME_TIMER() + iParam3);
		while (!STREAMING::STREAMVOL_HAS_LOADED(iVar0) && MISC::GET_GAME_TIMER() < iVar1)
		{
			if (bParam5)
			{
				__LIB_8__.func_611(0);
			}
			if (bParam4)
			{
				__LIB_0__.func_186();
			}
			SYSTEM::WAIT(0);
		}
		if (MISC::GET_GAME_TIMER() < iVar1)
		{
		}
		STREAMING::STREAMVOL_DELETE(iVar0);
	}
}

int func_666()//Position - 0xC51
{
	if (Global_112331)
	{
		return 1;
	}
	if (!__LIB_0__.func_39(14) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("director_mode")) > 0)
	{
		return 1;
	}
	return 0;
}

int func_667(var uParam0, char* sParam1)//Position - 0xFDC
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_20__.func_464(uParam0) || !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
		__LIB_0__.func_187(sParam1);
		uParam0->f_14 = sParam1;
		uParam0->f_15 = 0;
		uParam0->f_9 = 1;
		return 1;
	}
	return 0;
}

void func_668(var uParam0)//Position - 0x103B
{
	if (__LIB_20__.func_464(uParam0))
	{
		HUD::CLEAR_HELP(true);
	}
	uParam0->f_14 = 0;
	uParam0->f_15 = 0;
	if (uParam0->f_9 == 1)
	{
		uParam0->f_9 = 0;
	}
}

void func_669()//Position - 0x1EB
{
	int iVar0;
	bool bVar1;
	iVar0 = CUTSCENE::GET_CUTSCENE_TIME();
	bVar1 = false;
	while (bVar1 <= (16 - 1))
	{
		if (Local_22[bVar1] != -1)
		{
			if ((!BitTest(uLocal_39, bVar1) && iVar0 >= Local_22[bVar1]) && iVar0 < Local_22.f_17[bVar1])
			{
				__LIB_0__.func_371();
				MISC::SET_BIT(&uLocal_39, bVar1);
			}
		}
		bVar1++;
	}
}

void func_670(int iParam0)//Position - 0x86C
{
	switch (iParam0)
	{
		case 0:
			__LIB_11__.func_846(iParam0, 0, 10000);
			break;
		case 1:
			__LIB_11__.func_846(iParam0, 9000, 10000);
			break;
		case 2:
			__LIB_11__.func_846(iParam0, 27000, 32000);
			break;
		case 3:
			__LIB_11__.func_846(iParam0, 32000, 42000);
			break;
		case 4:
			__LIB_11__.func_846(iParam0, 51000, 63000);
			break;
		case 5:
			__LIB_11__.func_846(iParam0, 63600, 69000);
			break;
		case 6:
			__LIB_11__.func_846(iParam0, 66000, 70200);
			break;
		case 7:
			__LIB_11__.func_846(iParam0, 69600, 79200);
			break;
		case 8:
			__LIB_11__.func_846(iParam0, 77400, 84000);
			break;
		case 12:
			__LIB_11__.func_846(iParam0, 81000, 93600);
			break;
		case 9:
			__LIB_11__.func_846(iParam0, -1, -1);
			break;
		case 11:
			__LIB_11__.func_846(iParam0, 90000, 154200);
			break;
		case 10:
			__LIB_11__.func_846(iParam0, 129600, 133200);
			break;
		case 13:
			__LIB_11__.func_846(iParam0, 144600, 154200);
			break;
		case 14:
			__LIB_11__.func_846(iParam0, 152700, 154200);
			break;
		case 15:
			__LIB_11__.func_846(iParam0, 154200, 154200);
			break;
	}
}

void func_671(var uParam0, int iParam1, struct<3> Param2, struct<3> Param3, int iParam4, int iParam5, int iParam6)//Position - 0x241D
{
	if (uParam0->f_154 >= *uParam0)
	{
		return;
	}
	__LIB_11__.func_850(uParam0[uParam0->f_154 /*17*/], iParam1, Param2, Param3, iParam4, iParam5, iParam6);
	uParam0->f_154++;
}

void func_672(var uParam0)//Position - 0x2B6C
{
	int iVar0;
	char* sVar1;
	char* sVar2;
	sVar1 = __LIB_11__.func_856(uParam0->f_16);
	sVar2 = __LIB_11__.func_855(uParam0->f_16);
	iVar0 = 0;
	while (iVar0 < uParam0->f_17)
	{
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_17[iVar0]) && !ENTITY::IS_ENTITY_DEAD(uParam0->f_17[iVar0], false))
		{
			ENTITY::STOP_ENTITY_ANIM(uParam0->f_17[iVar0], sVar2, sVar1, -1000f);
		}
		__LIB_0__.func_123(&(uParam0->f_17[iVar0]));
		iVar0++;
	}
}

void func_673(var uParam0)//Position - 0x2C0C
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		__LIB_11__.func_857(uParam0[iVar0 /*17*/]);
		iVar0++;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_155)
	{
		__LIB_0__.func_0(&(uParam0->f_155[iVar0 /*11*/].f_10));
		iVar0++;
	}
}

bool func_674(int iParam0)//Position - 0xF972
{
	return __LIB_6__.func_837(iParam0, 6, 1);
}

bool func_675(int iParam0)//Position - 0x1041D
{
	return __LIB_6__.func_837(iParam0, 20, 1);
}

void func_676(int iParam0, int iParam1)//Position - 0x10FEF
{
	switch (iParam0)
	{
		case 0:
			__LIB_11__.func_952(4, *iParam1);
			__LIB_11__.func_952(7, *iParam1);
			__LIB_11__.func_952(8, *iParam1);
			__LIB_11__.func_952(11, *iParam1);
			break;
		case 1:
			if (Global_113386.f_9085.f_330[2 /*6*/])
			{
				__LIB_11__.func_952(4, *iParam1);
			}
			__LIB_11__.func_952(7, *iParam1);
			__LIB_11__.func_952(8, *iParam1);
			__LIB_11__.func_952(11, *iParam1);
			if (Global_113386.f_9085.f_99.f_58[126])
			{
				__LIB_11__.func_952(12, *iParam1);
			}
			break;
		case 2:
			if (Global_113386.f_9085.f_330[20 /*6*/])
			{
				__LIB_11__.func_952(4, *iParam1);
			}
			__LIB_11__.func_952(7, *iParam1);
			__LIB_11__.func_952(8, *iParam1);
			__LIB_11__.func_952(11, *iParam1);
			break;
	}
}

void func_677(int iParam0)//Position - 0x9C2DC
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_20__.func_656(iParam0);
	__LIB_6__.func_770(iParam0, 0);
}

void func_678()//Position - 0x97859
{
	__LIB_11__.func_825((Global_100164 - 1));
}

int func_679(char* sParam0, int iParam1)//Position - 0x6552D
{
	if (__LIB_10__.func_0(sParam0))
	{
		return 1;
	}
	else
	{
		if (__LIB_0__.func_90())
		{
			CUTSCENE::REMOVE_CUTSCENE();
		}
		if (iParam1 == 1)
		{
			CUTSCENE::REQUEST_CUTSCENE(sParam0, 8);
		}
		else
		{
			CUTSCENE::REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(sParam0, iParam1, 8);
		}
	}
	return 0;
}

void func_680(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x7756B
{
	if (iParam0 != -1)
	{
		if (!__LIB_10__.func_5(iParam0))
		{
			return;
		}
		Global_32020[iParam0 /*11*/].f_5 = 1;
		Global_32020[iParam0 /*11*/] = iParam1;
		Global_32020[iParam0 /*11*/].f_1 = iParam2;
		Global_32020[iParam0 /*11*/].f_9 = bParam4;
		Global_32020[iParam0 /*11*/].f_7 = iParam3;
		if (__LIB_10__.func_6(iParam0))
		{
			GRAPHICS::SET_TV_CHANNEL(-1);
			GRAPHICS::SET_TV_CHANNEL_PLAYLIST(iParam1, __LIB_4__.func_740(iParam2), bParam4);
			GRAPHICS::SET_TV_CHANNEL(iParam1);
		}
	}
	StringCopy(&Global_32098, SCRIPT::GET_THIS_SCRIPT_NAME(), 24);
}

int func_681(int* iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x82B94
{
	int iVar0;
	if (!__LIB_0__.func_43(iParam1))
	{
		iVar0 = __LIB_2__.func_108(iParam1);
		STREAMING::REQUEST_MODEL(iVar0);
		if (STREAMING::HAS_MODEL_LOADED(iVar0))
		{
			if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				PED::DELETE_PED(iParam0);
			}
			if (ENTITY::DOES_ENTITY_EXIST(iParam2) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam2, false))
			{
				*iParam0 = PED::CREATE_PED_INSIDE_VEHICLE(iParam2, 26, iVar0, iParam3, false, false);
				PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam0);
				__LIB_2__.func_328(*iParam0, iParam1);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
				}
			}
			return 1;
		}
	}
	return 0;
}

int func_682(int iParam0, int iParam1)//Position - 0x1B7EC
{
	int iVar0;
	int iVar1;
	if (!__LIB_9__.func_51(iParam1) || !__LIB_9__.func_51(iParam0))
	{
		return 1;
	}
	iVar0 = __LIB_1__.func_26(iParam0);
	iVar1 = __LIB_1__.func_26(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	else if (iVar0 < iVar1)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_411(iParam0);
	iVar1 = __LIB_0__.func_411(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	else if (iVar0 < iVar1)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_482(iParam0);
	iVar1 = __LIB_0__.func_482(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	else if (iVar0 < iVar1)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_196(iParam0);
	iVar1 = __LIB_0__.func_196(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	else if (iVar0 < iVar1)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_195(iParam0);
	iVar1 = __LIB_0__.func_195(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	else if (iVar0 < iVar1)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_483(iParam0);
	iVar1 = __LIB_0__.func_483(iParam1);
	if (iVar0 > iVar1)
	{
		return 1;
	}
	return 0;
}

void func_683(char* sParam0, var uParam1, int iParam2, var uParam3)//Position - 0xB0CC2
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (*uParam3 >= 0)
	{
		if (*uParam3 <= (iParam2 - 1))
		{
			iVar0 = 0;
			while (iVar0 <= *uParam3)
			{
				if (__LIB_11__.func_895(sParam0, (*uParam1)[iVar0]))
				{
					iVar1 = 1;
				}
				iVar0++;
			}
			if (iVar1 == 0)
			{
				STREAMING::REQUEST_ANIM_DICT(sParam0);
				(*uParam1)[*uParam3] = sParam0;
				*uParam3++;
			}
		}
	}
}

int func_684(int iParam0, int iParam1)//Position - 0xB240D
{
	struct<82> Var0;
	if (!__LIB_0__.func_317(iParam0))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_11__.func_860(iParam0, &Var0, iParam1);
		return Var0.f_0;
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

void func_685()//Position - 0x2598
{
	if (__LIB_11__.func_907(4))
	{
		__LIB_11__.func_916(4, 0);
		__LIB_11__.func_890(4);
	}
	if (__LIB_11__.func_907(5))
	{
		__LIB_11__.func_916(5, 0);
		__LIB_11__.func_890(5);
	}
	if (__LIB_11__.func_907(0))
	{
		__LIB_11__.func_916(0, 0);
		__LIB_11__.func_890(0);
	}
}

int func_686(int iParam0, char* sParam1, int iParam2)//Position - 0x34E4
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (PLAYER::GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() == 64 && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("prop_bong_01"))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false) && !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0, true))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam0, true, false);
		}
		return 1;
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (ENTITY::IS_ENTITY_A_VEHICLE(iParam0) && PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iParam0), false))
			{
				return 0;
			}
		}
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0, true))
		{
			return 0;
		}
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("prop_bong_01"))
		{
			return 0;
		}
	}
	if (Global_100491)
	{
		return 1;
	}
	if (CAM::IS_SCREEN_FADED_OUT())
	{
		return 1;
	}
	if (__LIB_9__.func_603() || MISC::GET_MISSION_FLAG())
	{
		if (ENTITY::IS_ENTITY_ON_SCREEN(iParam0))
		{
			return 0;
		}
		return 1;
	}
	sParam1 = sParam1;
	iParam2 = iParam2;
	return 0;
}

int func_687(int iParam0)//Position - 0x1FB23
{
	struct<3> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
		if (!ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
		{
			switch (__LIB_11__.func_904(Var0, 1))
			{
				case 0:
					return 202;
					break;
				case 1:
					return 203;
					break;
				case 2:
					return 204;
					break;
				case 3:
					return 205;
					break;
				case 4:
					return 206;
					break;
			}
			return 202;
		}
	}
	return 0;
}

int func_688(bool bParam0)//Position - 0x6A7CC
{
	if (__LIB_0__.func_317(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_12__.func_95(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_689(bool bParam0)//Position - 0x6A7F5
{
	if (__LIB_0__.func_317(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_12__.func_95(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
}

int func_690(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11)//Position - 0x702A1
{
	struct<15> Var0;
	bool bVar1;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (bParam4 < 3)
	{
		if (bParam4 != bParam3)
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__.func_522(iParam1);
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam2;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam5);
		Var0.f_5 = iParam6;
		Var0.f_6 = bParam3;
		Var0.f_14 = bParam4;
		Var0.f_10 = iParam7;
		Var0.f_11 = -1;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		if (iParam7 != -1)
		{
			MISC::SET_BIT(&(Var0.f_1), 11);
		}
		else if (iParam1 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		bVar1 = false;
		while (bVar1 < 3)
		{
			if (BitTest(iParam2, bVar1))
			{
				__LIB_12__.func_132(bVar1);
			}
			bVar1++;
		}
		return 1;
	}
	return 0;
}

int func_691(char* sParam0, int iParam1)//Position - 0x7160C
{
	if (HUD::HAS_THIS_ADDITIONAL_TEXT_LOADED(sParam0, iParam1))
	{
		return 1;
	}
	else if (!__LIB_0__.func_75() && !AUDIO::IS_MOBILE_PHONE_CALL_ONGOING())
	{
		if (!HUD::IS_STREAMING_ADDITIONAL_TEXT(iParam1))
		{
			HUD::REQUEST_ADDITIONAL_TEXT(sParam0, iParam1);
		}
	}
	return 0;
}

int func_692(int iParam0)//Position - 0x724DA
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (iVar0 == __LIB_11__.func_149(14))
	{
		return 0;
	}
	if (iVar0 == __LIB_11__.func_149(15))
	{
		return 1;
	}
	if (iVar0 == __LIB_11__.func_149(17))
	{
		return 2;
	}
	if (iVar0 == joaat("S_F_M_Maid_01"))
	{
		return 3;
	}
	if (iVar0 == joaat("S_M_M_Gardener_01"))
	{
		return 4;
	}
	if (iVar0 == joaat("IG_Denise"))
	{
		return 5;
	}
	if (iVar0 == __LIB_11__.func_149(19))
	{
		return 6;
	}
	if (iVar0 == __LIB_11__.func_149(37))
	{
		return 7;
	}
	if (iVar0 == __LIB_12__.func_95(0))
	{
		return 8;
	}
	if (iVar0 == __LIB_12__.func_95(2))
	{
		return 9;
	}
	if (iVar0 == __LIB_11__.func_149(20))
	{
		return 10;
	}
	if (iVar0 == __LIB_11__.func_149(40))
	{
		return 11;
	}
	if (iVar0 == joaat("S_F_M_Maid_01"))
	{
		return 12;
	}
	if (iVar0 == __LIB_11__.func_149(32))
	{
		return 13;
	}
	if (iVar0 == __LIB_11__.func_149(24))
	{
		return 14;
	}
	return 16;
}

int func_693(int iParam0)//Position - 0x73C4E
{
	if (AUDIO::IS_ANY_SPEECH_PLAYING(PLAYER::PLAYER_PED_ID()))
	{
		return 1;
	}
	if (AUDIO::IS_ANY_SPEECH_PLAYING(iParam0))
	{
		return 1;
	}
	if (__LIB_0__.func_75())
	{
		return 1;
	}
	if (__LIB_10__.func_9())
	{
		return 1;
	}
	return 0;
}

void func_694(int iParam0, int iParam1)//Position - 0x79440
{
	__LIB_11__.func_915(iParam0);
	Global_95447[iParam0] = iParam1;
}

int func_695(int iParam0)//Position - 0x7A485
{
	if (__LIB_8__.func_915(62))
	{
		return 1;
	}
	switch (iParam0)
	{
		case 0:
			if (Global_95447[0] == 19 || Global_95447[0] == 25)
			{
				return 1;
			}
			break;
		case 1:
			if ((((((Global_95447[1] == 32 || Global_95447[1] == 41) || Global_95447[1] == 33) || Global_95447[1] == 34) || Global_95447[1] == 35) || Global_95447[1] == 36) || Global_95447[1] == 25)
			{
				return 1;
			}
			break;
		case 2:
			if (((Global_95447[2] == 48 || Global_95447[2] == 68) || Global_95447[2] == 55) || Global_95447[2] == 71)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_696(int iParam0, int iParam1)//Position - 0x7CC41
{
	struct<3> Var0;
	bool bVar1;
	int iVar2;
	int iVar3;
	float fVar4;
	var uVar5;
	int iVar6;
	struct<3> Var7;
	float fVar8;
	bVar1 = 145;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
			Var0 = { Var0 + Vector(71.1531f, 179.5117f, -812.0607f) };
			break;
		case 5:
		case 6:
		case 7:
			Var0 = { Var0 + Vector(30.116f, -1435.9974f, -14.3064f) };
			break;
		case 10:
		case 8:
		case 9:
		case 11:
		case 12:
			Var0 = { Var0 + Vector(32.4374f, 3819.1438f, 1974.6129f) };
			if (iParam0 == 8)
			{
				bVar1 = false;
			}
			else if (iParam0 == 9)
			{
				bVar1 = 2;
			}
			else if (iParam1 == 124)
			{
				bVar1 = false;
			}
			else
			{
				bVar1 = 145;
			}
			break;
		case 13:
			Var0 = { Var0 + Vector(9.6346f, -1517.601f, -1152.5707f) };
			break;
	}
	if (bVar1 == 145)
	{
		return 0;
	}
	iVar2 = 0;
	while (iVar2 < 8)
	{
		if (Global_97374[iVar2 /*17*/])
		{
			iVar3 = Global_97374[iVar2 /*17*/].f_5;
			fVar4 = Global_97374[iVar2 /*17*/].f_10.f_4;
			uVar5 = Global_97374[iVar2 /*17*/].f_10.f_6;
			iVar6 = Global_91229[iVar3 /*34*/].f_10;
			Var7 = { __LIB_11__.func_156(iVar6, 0) };
			fVar8 = SYSTEM::VDIST2(Var0, Var7);
			if (!BitTest(uVar5, bVar1))
			{
				if (fVar8 < (fVar4 * fVar4))
				{
					return 1;
				}
			}
		}
		iVar2++;
	}
	return 0;
}

int func_697()//Position - 0x8F01B
{
	int iVar0;
	struct<3> Var1;
	int iVar2;
	int iVar3;
	char[] cVar4[8];
	int iVar5;
	int iVar6;
	int iVar7;
	iVar0 = 0;
	Var1 = { 0f, 0f, 0f };
	iVar2 = 226;
	iVar3 = 825812850;
	iVar5 = 0;
	iVar6 = 0;
	while (iVar6 < 11)
	{
		__LIB_11__.func_917(iVar6, &iVar0, &Var1, &iVar2, &iVar3, &cVar4, &iVar5);
		if (OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(Var1, 10f, iVar0, false))
		{
			iVar7 = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(Var1, 10f, iVar0, false, false, true);
			if (ENTITY::DOES_ENTITY_EXIST(iVar7))
			{
				if (iVar3 == 825812850)
				{
					ENTITY::SET_ENTITY_ROTATION(iVar7, 0f, 0f, 21f, 2, true);
				}
				ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&iVar7);
			}
		}
		if (iVar2 != 226)
		{
		}
		else if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar3))
		{
		}
		else
		{
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iVar3, 3, true, true);
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iVar3, 0f, true, true);
			if (((iVar6 != 6 && iVar6 != 7) && iVar6 != 8) && iVar6 != 9)
			{
				OBJECT::REMOVE_DOOR_FROM_SYSTEM(iVar3, 0);
			}
		}
		iVar6++;
	}
	__LIB_11__.func_841(4, 0);
	return 0;
}

void func_698(int iParam0)//Position - 0x8F510
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = __LIB_11__.func_970(iParam0, &iVar0);
	if (iVar1 != 145)
	{
		if (__LIB_0__.func_317(iVar1))
		{
			iVar0 = __LIB_12__.func_95(iVar1);
		}
		else
		{
			iVar0 = __LIB_11__.func_149(iVar1);
		}
	}
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
}

void func_699(int iParam0)//Position - 0x8FA05
{
	int iVar0;
	struct<14> Var1;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_764)
	{
		return;
	}
	if (Global_113386.f_7688.f_764 > 1)
	{
		iVar0 = iParam0;
		while (iVar0 <= (Global_113386.f_7688.f_764 - 2))
		{
			Global_113386.f_7688.f_651[iVar0 /*14*/] = { Global_113386.f_7688.f_651[iVar0 + 1 /*14*/] };
			iVar0++;
		}
	}
	if (Global_113386.f_7688.f_764 > 0)
	{
		Global_113386.f_7688.f_651[(Global_113386.f_7688.f_764 - 1) /*14*/] = { Var1 };
		Global_113386.f_7688.f_764 = (Global_113386.f_7688.f_764 - 1);
	}
	__LIB_12__.func_132(0);
	__LIB_12__.func_132(1);
	__LIB_12__.func_132(2);
}

float func_700(var uParam0)//Position - 0x1724
{
	if (__LIB_0__.func_736(uParam0))
	{
		if (__LIB_1__.func_637(uParam0))
		{
			return uParam0->f_2;
		}
		else
		{
			return (__LIB_0__.func_484(BitTest(*uParam0, 4)) - uParam0->f_1);
		}
	}
	return uParam0->f_1;
}

int func_701(var uParam0, char* sParam1, char* sParam2)//Position - 0x28A7
{
	char cVar0[16];
	char* sVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	int iVar5;
	int iVar6;
	char cVar7[16];
	int iVar8;
	int iVar9;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
	{
		return 0;
	}
	StringCopy(&cVar0, sParam2, 16);
	StringConCat(&cVar0, "SL", 16);
	if (__LIB_20__.func_691(sParam1, 7))
	{
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			sVar1 = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(&cVar0);
			if (MISC::IS_STRING_NULL(sVar1))
			{
				return 0;
			}
			else
			{
				iVar2 = 0;
				iVar3 = 1;
				StringCopy(&cVar4, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sVar1, iVar2, iVar3), 16);
				iVar5 = 1;
				iVar6 = 2;
				StringCopy(&cVar7, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sVar1, iVar5, iVar6), 16);
				if (MISC::STRING_TO_INT(&cVar4, &iVar8))
				{
					if (ENTITY::DOES_ENTITY_EXIST((*uParam0)[iVar8 /*10*/]))
					{
					}
					else
					{
						return 0;
					}
				}
				if (MISC::STRING_TO_INT(&cVar7, &iVar9))
				{
					if (ENTITY::DOES_ENTITY_EXIST((*uParam0)[iVar9 /*10*/]))
					{
					}
					else
					{
						return 0;
					}
				}
			}
		}
		else
		{
			return 0;
		}
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_702(int iParam0, int iParam1)//Position - 0x5FAB
{
	int iVar0;
	char* sVar1;
	int iVar2;
	sVar1 = "";
	iVar2 = 0;
	switch (Global_95447[iParam1])
	{
		case 52:
		case 67:
		case 74:
			sVar1 = "V_Michael_G_Hall";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.6f, 179.4f, 72.2f, "v_michael");
			if (__LIB_11__.func_926(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 56:
		case 57:
			if (iParam1 == 0)
			{
				sVar1 = "V_Michael_1_Hall";
				iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.2079f, 181.3398f, 71.153f, "v_michael");
				if (__LIB_11__.func_926(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
				{
					iVar0 = 1;
				}
			}
			else
			{
				if (!Global_3)
				{
					INTERIOR::CLEAR_ROOM_FOR_ENTITY(iParam0);
				}
				iVar0 = 0;
			}
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			sVar1 = "V_Michael_1_Hall";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.2079f, 181.3398f, 71.153f, "v_michael");
			if (__LIB_11__.func_926(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 47:
			sVar1 = "V_Michael_G_Kitche";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-803.4384f, 182.9567f, 73.2608f, "v_michael");
			if (__LIB_11__.func_926(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 75:
		case 84:
			sVar1 = "V_Michael_G_Kitche";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-803.4384f, 182.9567f, 73.2608f, "v_michael");
			if (__LIB_11__.func_926(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		default:
			if (!Global_3)
			{
			}
			iVar0 = 0;
			break;
	}
	return iVar0;
}

int func_703(int iParam0)//Position - 0xB05C
{
	if (Global_78583 == 52)
	{
		if (!__LIB_11__.func_945(60f))
		{
			return 1;
		}
	}
	if (__LIB_11__.func_330() == 89)
	{
		return 1;
	}
	if (iParam0 != 0)
	{
		if (Global_95447[0] == 7)
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if (Global_95447[1] == 27)
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_95447[2] == 51)
		{
			return 1;
		}
	}
	return 0;
}

int func_704(int iParam0, int iParam1)//Position - 0xE1D3
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_20__.func_260(iParam0);
	iVar1 = __LIB_20__.func_260(iParam1);
	iVar2 = __LIB_9__.func_604(iVar0, iVar1);
	if (iVar2 < 9)
	{
		return Global_113386.f_18103.f_175[iVar2 /*19*/].f_8;
	}
	return 1;
}

void func_705(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, char* sParam5, char* sParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, var uParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, char* sParam23, float fParam24, float fParam25, int iParam26, int iParam27, float fParam28, int iParam29)//Position - 0x12DE3
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char cVar4[64];
	int iVar5;
	int iVar6;
	int iVar7;
	char cVar8[64];
	struct<16> Var9;
	struct<16> Var10;
	iVar0 = -1;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&uParam7))
	{
		iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&uParam7);
		iVar2 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam23);
		iVar3 = (iVar1 - iVar2);
		StringCopy(&cVar4, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&uParam7, 0, iVar3), 64);
		iVar5 = 0;
		while (iVar5 < iParam4 + 1)
		{
			iVar6 = iVar3;
			iVar7 = HUD::GET_LENGTH_OF_LITERAL_STRING(uParam3[iVar5 /*16*/]);
			if (iVar6 > iVar7)
			{
				iVar6 = iVar7;
			}
			StringCopy(&cVar8, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(uParam3[iVar5 /*16*/], 0, iVar6), 64);
			if (MISC::ARE_STRINGS_EQUAL(&cVar4, &cVar8))
			{
				iVar0 = iVar5;
			}
			iVar5++;
		}
	}
	else
	{
		return;
	}
	if (iVar0 == -1)
	{
		return;
	}
	Var9 = { *(uParam2[iVar0 /*16*/]) };
	Var10 = { *(uParam3[iVar0 /*16*/]) };
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var9))
	{
		STREAMING::REQUEST_ANIM_DICT(&Var9);
		if (!STREAMING::HAS_ANIM_DICT_LOADED(&Var9))
		{
			STREAMING::REQUEST_ANIM_DICT(&Var9);
		}
		else
		{
			if (__LIB_1__.func_133(iParam27, 1))
			{
				PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 16);
				PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			}
			if (!__LIB_1__.func_133(iParam27, 64))
			{
				__LIB_1__.func_132(&iParam27, 64);
			}
			TASK::TASK_SYNCHRONIZED_SCENE(iParam0, iParam1, &Var9, &Var10, fParam24, fParam25, iParam26, iParam27, fParam28, iParam29);
			PED::SET_FORCE_FOOTSTEP_UPDATE(iParam0, true);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			*sParam5 = { Var9 };
			*sParam6 = { Var10 };
		}
	}
}

int func_706(int iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x186B2
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	struct<3> Var3;
	struct<3> Var4;
	float fVar5;
	struct<7> Var6;
	struct<7> Var7;
	float fVar8;
	float fVar9;
	struct<3> Var10;
	struct<3> Var11;
	float fVar12;
	int iVar13;
	struct<3> Var14;
	int iVar15;
	int iVar16;
	char[] cVar17[8];
	int iVar18;
	float fVar19;
	struct<3> Var20;
	struct<3> Var21;
	float fVar22;
	switch (iParam1)
	{
		case 5:
			return 0;
			break;
		case 21:
			return 0;
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (15f * 15f))
				{
					return 1;
				}
			}
			else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (7.5f * 7.5f))
			{
				return 1;
			}
			return 0;
			break;
		case 37:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (8.5f * 8.5f))
			{
				return 1;
			}
			return 0;
			break;
		case 56:
		case 57:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (5f * 5f))
			{
				return 1;
			}
			return 0;
			break;
		case 58:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (5f * 5f))
			{
				return 1;
			}
			Var0 = { -0.42f, 0.68f, 1f };
			Var1 = { 4.5f, 2.75f, 1f };
			fVar2 = -22f;
			if (__LIB_5__.func_752(PLAYER::PLAYER_PED_ID(), Param2 + Var0, Var1, (fParam3 + fVar2), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 47:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (3f * 3f))
			{
				return 1;
			}
			Var3 = { 10.8751f, 2.6168f, 1.47f };
			Var4 = { 7.5f, 3f, 1.5f };
			fVar5 = -21f;
			if (__LIB_5__.func_752(PLAYER::PLAYER_PED_ID(), Param2 + Var3, Var4, (fParam3 + fVar5), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 52:
		case 67:
		case 74:
			Var6 = { __LIB_0__.func_347(38) };
			Var7 = { __LIB_0__.func_347(39) };
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var6.f_5) || !OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var7.f_5))
			{
				return 0;
			}
			else
			{
				fVar8 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var6.f_5));
				fVar9 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var7.f_5));
				if (fVar8 >= 0.1f || fVar9 >= 0.1f)
				{
					return 0;
				}
			}
			Var10 = { -0.72f, 0.52f, 1f };
			Var11 = { 3f, 3f, 1f };
			fVar12 = -22f;
			if (__LIB_5__.func_752(PLAYER::PLAYER_PED_ID(), Param2 + Var10, Var11, (fParam3 + fVar12), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 73:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 129:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 61:
		case 63:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			__LIB_11__.func_917(3, &iVar13, &Var14, &iVar15, &iVar16, &cVar17, &iVar18);
			if (iVar15 != 226)
			{
			}
			else if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar16))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(iVar16, iVar13, Var14, true, true, false);
			}
			else
			{
				fVar19 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(iVar16));
				if (fVar19 >= 0.5f)
				{
					return 1;
				}
			}
			return 0;
			break;
		case 102:
		case 120:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 132:
		case 134:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 133:
			Var20 = { 0f, 0f, 1f };
			Var21 = { 2f, 2f, 1f };
			fVar22 = 0f;
			if (__LIB_5__.func_752(PLAYER::PLAYER_PED_ID(), Param2 + Var20, Var21, (fParam3 + fVar22), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
	}
	return 0;
}

int func_707(bool bParam0)//Position - 0x85330
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (Global_113386.f_7688[iVar0 /*15*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (Global_113386.f_7688.f_651[iVar0 /*14*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (Global_113386.f_7688.f_765[iVar0 /*10*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	if (__LIB_0__.func_317(bParam0))
	{
		if (__LIB_11__.func_929(bParam0))
		{
			return 1;
		}
	}
	return 0;
}

int func_708(var uParam0, int iParam1, var uParam2, int iParam3, int iParam4)//Position - 0x855F7
{
	int iVar0;
	int iVar1;
	if (Global_95447[iParam1] == 140 && Global_95463 != 141)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_100162))
		{
			iVar0 = 0;
			iVar1 = __LIB_11__.func_970(iParam1, &iVar0);
			if (iVar1 != 145)
			{
				if (__LIB_0__.func_317(iVar1))
				{
					iVar0 = __LIB_12__.func_95(iVar1);
				}
				else
				{
					iVar0 = __LIB_11__.func_149(iVar1);
				}
				if (ENTITY::GET_ENTITY_MODEL(Global_100162) == iVar0)
				{
					*uParam0 = Global_100162;
					Global_100162 = 0;
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*uParam0, true, true);
					__LIB_11__.func_915(iParam1);
					Global_95447[iParam1] = Global_95463;
					if (ENTITY::DOES_ENTITY_EXIST(Global_100163))
					{
						Global_100162 = Global_100163;
						Global_100163 = 0;
					}
					else
					{
						Global_95463 = 141;
					}
					__LIB_11__.func_921(uParam0, iParam4);
					__LIB_0__.func_203(uParam2, iParam3, *uParam0, __LIB_11__.func_905(iParam1), 0, 1);
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_709(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x86C
{
	struct<14> Var0;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam7 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam5 < 3)
	{
		if (BitTest(iParam4, bParam5))
		{
			return 0;
		}
	}
	if (iParam4 < 1 || iParam4 > 7)
	{
		return 0;
	}
	if (iParam1 == -1)
	{
		return 0;
	}
	if (iParam1 == 83 || iParam2 == 83)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_764 < 8)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__.func_522(iParam3);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam6);
		Var0.f_5 = iParam7;
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam4;
		Var0.f_6 = bParam5;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_13 = iParam12;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_651[Global_113386.f_7688.f_764 /*14*/] = { Var0 };
		Global_113386.f_7688.f_764++;
		__LIB_12__.func_132(0);
		__LIB_12__.func_132(1);
		__LIB_12__.func_132(2);
		return 1;
	}
	return 0;
}

float func_710(int iParam0, int iParam1)//Position - 0xD4E5
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_20__.func_260(iParam0);
	iVar1 = __LIB_20__.func_260(iParam1);
	iVar2 = __LIB_9__.func_604(iVar0, iVar1);
	if (iVar2 < 9)
	{
		if (__LIB_0__.func_736(&(Global_113386.f_18103.f_175[iVar2 /*19*/].f_5)))
		{
			return __LIB_20__.func_700(&(Global_113386.f_18103.f_175[iVar2 /*19*/].f_5));
		}
	}
	return 0f;
}

int func_711(int iParam0, var uParam1, var uParam2, char* sParam3, char* sParam4, int iParam5, char* sParam6, float fParam7)//Position - 0x15BE7
{
	switch (iParam0)
	{
		case 0:
		case 5:
		case 21:
		case 24:
		case 16:
		case 38:
		case 40:
		case 36:
		case 39:
		case 33:
		case 45:
		case 61:
		case 63:
		case 53:
		case 52:
		case 67:
		case 81:
		case 76:
		case 77:
		case 78:
		case 85:
		case 79:
		case 86:
		case 80:
		case 87:
		case 89:
		case 90:
		case 91:
		case 104:
		case 105:
		case 101:
		case 100:
		case 119:
		case 120:
		case 113:
		case 114:
		case 112:
		case 109:
		case 123:
		case 122:
		case 126:
		case 136:
			if (__LIB_11__.func_969(uParam1, uParam2, sParam3, sParam4, iParam5, 0, sParam6))
			{
				__LIB_11__.func_968(iParam0, *uParam2, fParam7);
				return 1;
			}
			return 0;
			break;
		case 6:
		case 31:
			if (__LIB_11__.func_969(uParam1, uParam2, sParam3, sParam4, iParam5, 1, sParam6))
			{
				__LIB_11__.func_968(iParam0, *uParam2, fParam7);
				return 1;
			}
			return 0;
			break;
	}
	return __LIB_11__.func_969(uParam1, uParam2, sParam3, sParam4, iParam5, 0, sParam6);
}

void func_712(int* iParam0, int iParam1, int iParam2, var uParam3, var uParam4)//Position - 0x18878
{
	struct<3> Var0;
	if (iParam2 != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
		{
			if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				Var0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
				STREAMING::REQUEST_MODEL(iParam2);
				if (STREAMING::HAS_MODEL_LOADED(iParam2))
				{
					*iParam0 = PED::CREATE_PED(4, iParam2, Var0 + *uParam3, (ENTITY::GET_ENTITY_HEADING(iParam1) + *uParam4), true, true);
					__LIB_11__.func_921(iParam0, joaat("NO_RELATIONSHIP"));
					ENTITY::SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(iParam1, true);
					if (iParam2 == joaat("S_M_Y_Cop_01"))
					{
						PED::SET_PED_HIGHLY_PERCEPTIVE(*iParam0, true);
					}
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam2);
				}
			}
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(*iParam0, false))
		{
			if (ENTITY::IS_ENTITY_ATTACHED(*iParam0))
			{
				ENTITY::DETACH_ENTITY(*iParam0, true, true);
			}
		}
		PED::DELETE_PED(iParam0);
	}
}

int func_713(var uParam0, int iParam1, struct<3> Param2, int iParam3)//Position - 0x19E8C
{
	struct<98> Var0;
	int iVar1;
	int iVar2;
	int iVar3;
	Var0.f_11 = 12;
	Var0.f_31 = 49;
	Var0.f_81 = 2;
	__LIB_11__.func_860(iParam1, &Var0, iParam3);
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_11__.func_930(iVar1, Var0))
		{
			*uParam0 = iVar1;
			return 1;
		}
	}
	iVar2 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (__LIB_11__.func_930(iVar2, Var0))
	{
		*uParam0 = iVar2;
		return 1;
	}
	iVar3 = VEHICLE::GET_RANDOM_VEHICLE_IN_SPHERE(Param2, 20f, Var0.f_0, 6);
	if (__LIB_11__.func_930(iVar3, Var0))
	{
		*uParam0 = iVar3;
		return 1;
	}
	return 0;
}

int func_714(int iParam0, struct<3> Param1, int iParam2, var uParam3)//Position - 0x834C3
{
	struct<3> Var0;
	float fVar1;
	float fVar2;
	int iVar3;
	int iVar4;
	if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(Param1))
	{
		if (!INTERIOR::IS_VALID_INTERIOR(*uParam3))
		{
			*uParam3 = INTERIOR::GET_INTERIOR_FROM_COLLISION(Param1);
			return 0;
		}
		else if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
			{
				if (STREAMING::GET_PLAYER_SWITCH_STATE() == 11)
				{
					return 1;
				}
			}
		}
	}
	if (iParam0 == 12)
	{
		if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)))
		{
			return 0;
		}
		return 1;
	}
	if (*uParam3 != iParam2)
	{
		if (*uParam3 == 0)
		{
		}
		else if (INTERIOR::IS_VALID_INTERIOR(*uParam3))
		{
			if (INTERIOR::IS_INTERIOR_READY(*uParam3))
			{
				Var0 = { INTERIOR::GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(*uParam3, 0f, 0f, 0f) };
				fVar1 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), Var0);
				fVar2 = SYSTEM::VDIST2(Param1, Var0);
				if (fVar1 > fVar2)
				{
					return 1;
				}
				if (!CAM::IS_SPHERE_VISIBLE(Param1, 1f))
				{
					iVar3 = 0;
					iVar4 = __LIB_11__.func_970(iParam0, &iVar3);
					if (iVar4 != 145)
					{
						if (__LIB_0__.func_317(iVar4))
						{
							iVar3 = __LIB_12__.func_95(iVar4);
						}
						else
						{
							iVar3 = __LIB_11__.func_149(iVar4);
						}
					}
					if (!ENTITY::WOULD_ENTITY_BE_OCCLUDED(iVar3, Param1, false))
					{
						return 1;
					}
				}
			}
		}
		if (SYSTEM::VDIST2(Param1, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) < 15f)
		{
			return 1;
		}
		return 0;
	}
	else if (*uParam3 == 0)
	{
	}
	else if (INTERIOR::IS_VALID_INTERIOR(*uParam3))
	{
		if (INTERIOR::IS_INTERIOR_READY(*uParam3))
		{
		}
	}
	return 1;
}

void func_715(var uParam0, char* sParam1, var uParam2, int iParam3, var uParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17)//Position - 0x2DB49
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(7, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(7, iVar0);
		Global_1649593.f_4659[iVar0] = uParam0;
		StringCopy(&(Global_1649593.f_4659.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4659.f_172[iVar0] = uParam2;
		Global_1649593.f_4659.f_216[iVar0] = iParam3;
		Global_1649593.f_4659.f_183[iVar0] = uParam4;
		Global_1649593.f_4659.f_194[iVar0] = iParam5;
		Global_1649593.f_4659.f_249[iVar0] = iParam6;
		Global_1649593.f_4659.f_260[iVar0] = iParam7;
		Global_1649593.f_4659.f_205[iVar0] = iParam8;
		Global_1649593.f_4659.f_314[iVar0] = iParam9;
		Global_1649593.f_4659.f_325[iVar0] = iParam10;
		Global_1649593.f_4659.f_357[iVar0] = iParam11;
		Global_1649593.f_4659.f_238[iVar0] = iParam12;
		Global_1649593.f_4659.f_271[iVar0] = iParam13;
		Global_1649593.f_4659.f_368[iVar0] = iParam14;
		Global_1649593.f_4659.f_379[iVar0] = iParam15;
		Global_1649593.f_4659.f_390[iVar0] = iParam16;
		Global_1649593.f_4659.f_227[iVar0] = iParam17;
	}
}

void func_716(int iParam0, char* sParam1, var uParam2, var uParam3, int iParam4, int iParam5, char* sParam6, int iParam7, float fParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25)//Position - 0x2E212
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(6, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(6, iVar0);
		Global_1649593.f_4041[iVar0] = iParam0;
		StringCopy(&(Global_1649593.f_4041.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4041.f_183[iVar0] = uParam3;
		Global_1649593.f_4041.f_172[iVar0] = uParam2;
		Global_1649593.f_4041.f_260[iVar0] = iParam4;
		Global_1649593.f_4041.f_271[iVar0] = iParam5;
		StringCopy(&(Global_1649593.f_4041.f_282[iVar0 /*16*/]), sParam6, 64);
		Global_1649593.f_4041.f_443[iVar0] = iParam7;
		Global_1649593.f_4041.f_454[iVar0] = fParam8;
		Global_1649593.f_4041.f_497[iVar0] = iParam9;
		Global_1649593.f_4041.f_508[iVar0] = iParam10;
		Global_1649593.f_4041.f_205[iVar0] = iParam11;
		Global_1649593.f_4041.f_216[iVar0] = iParam12;
		Global_1649593.f_4041.f_227[iVar0] = iParam13;
		Global_1649593.f_4041.f_238[iVar0] = iParam14;
		Global_1649593.f_4041.f_249[iVar0] = iParam15;
		Global_1649593.f_4041.f_519[iVar0] = iParam16;
		Global_1649593.f_4041.f_530[iVar0] = iParam17;
		Global_1649593.f_4041.f_541[iVar0] = iParam18;
		Global_1649593.f_4041.f_552[iVar0] = iParam19;
		Global_1649593.f_4041.f_563[iVar0] = iParam20;
		Global_1649593.f_4041.f_574[iVar0] = iParam21;
		Global_1649593.f_4041.f_585[iVar0] = iParam22;
		Global_1649593.f_4041.f_596[iVar0] = iParam23;
		Global_1649593.f_4041.f_607[iVar0] = iParam24;
		Global_1649593.f_4041.f_194[iVar0] = iParam25;
		if (iParam15 == 5 && __LIB_1__.func_281())
		{
			Global_1649593.f_1172 = 1;
		}
		if (MISC::IS_PC_VERSION())
		{
			iVar2 = 0;
			GRAPHICS::GET_ACTUAL_SCREEN_RESOLUTION(&iVar3, &iVar4);
			if (iVar3 == 1280 && iVar4 >= 960)
			{
				iVar2 = 1;
			}
			if (iParam0 > 99999999)
			{
				Global_1649593.f_1176 = 1;
			}
			else if (iParam0 > 9999999 || iVar2)
			{
				Global_1649593.f_1175 = 1;
			}
			else if (iParam0 > 999)
			{
				Global_1649593.f_1172 = 1;
			}
			if (__LIB_1__.func_280())
			{
				Global_1649593.f_1176 = 1;
			}
		}
	}
}

bool func_717(int iParam0, bool bParam1, int iParam2, bool bParam3)//Position - 0x2314A
{
	bool bVar0;
	int iVar1;
	int iVar2;
	struct<5> Var3;
	int iVar4;
	bool bVar5;
	int iVar6;
	Global_1922024 = 1;
	bVar0 = false;
	Var3.f_4 = 3;
	Var3.f_8 = 3;
	Var3.f_64 = 3;
	Var3.f_75 = 3;
	Var3.f_91 = 3;
	__LIB_0__.func_64(&Var3, iParam0);
	if (__LIB_11__.func_987())
	{
		iVar1 = Global_113386.f_7261.f_227[iParam0];
	}
	else
	{
		iVar1 = Global_42586.f_227[iParam0];
	}
	iVar2 = Global_39990[iParam0];
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !bParam3)
	{
		Global_1922024 = 1;
	}
	else
	{
		bVar5 = true;
		if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != MISC::GET_HASH_KEY("standard_global_reg"))
		{
			if (iParam2 == 0)
			{
				if (Global_39592[iParam0] && MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), Var3, true) < 200f)
				{
					bVar5 = false;
					Global_1922024 = 1;
				}
				if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()) || TASK::IS_PED_BEING_ARRESTED(PLAYER::PLAYER_PED_ID()))
				{
					if (!CAM::IS_SCREEN_FADED_OUT())
					{
						bVar5 = false;
						Global_1922024 = 1;
					}
				}
			}
		}
		if (STREAMING::IS_NEW_LOAD_SCENE_ACTIVE() && (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() || STREAMING::GET_PLAYER_SWITCH_STATE() != 5))
		{
			bVar5 = false;
			Global_1922024 = 1;
		}
		if (bVar5)
		{
			switch (Var3.f_3)
			{
				case 0:
					if (iVar1 == 2)
					{
					}
					else
					{
						if (Var3.f_4[iVar1] != 0)
						{
							ENTITY::REMOVE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar1], false);
						}
						if (Var3.f_4[iVar2] != 0)
						{
							ENTITY::CREATE_MODEL_HIDE(Var3, 10f, Var3.f_4[iVar2], true);
						}
						Global_41186[iParam0] = 1;
					}
					bVar0 = true;
					break;
				case 1:
					if (iVar1 == 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[0 /*8*/]));
								Global_1922024 = 1;
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_34));
								Global_1922024 = 1;
							}
						}
					}
					else if (iVar1 == 1)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
					}
					else if (iVar1 == 2)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_34)) != MISC::GET_HASH_KEY(""))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_34)))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_34));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[0 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[0 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
						{
							if (STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[1 /*8*/])))
							{
								STREAMING::REMOVE_IPL(&(Var3.f_8[1 /*8*/]));
							}
						}
						if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
						{
							if (!STREAMING::IS_IPL_ACTIVE(&(Var3.f_8[2 /*8*/])))
							{
								STREAMING::REQUEST_IPL(&(Var3.f_8[2 /*8*/]));
							}
						}
					}
					Global_40987[iParam0] = 1;
					Global_41186[iParam0] = 1;
					bVar0 = true;
					break;
				case 2:
					iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var3, &(Var3.f_42));
					if (iVar6 != 0)
					{
						if (MISC::GET_HASH_KEY(&(Var3.f_50)) != MISC::GET_HASH_KEY(""))
						{
							if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_50)))
							{
								INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_50));
							}
						}
						if (iVar1 == 0)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
						}
						else if (iVar1 == 1)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if ((MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES")) && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY(&(Var3.f_8[iVar1 /*8*/])))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
						}
						else if (iVar1 == 2)
						{
							if (MISC::GET_HASH_KEY(&(Var3.f_8[0 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[0 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[0 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[1 /*8*/])) != MISC::GET_HASH_KEY(""))
							{
								if (INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[1 /*8*/])))
								{
									INTERIOR::DEACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[1 /*8*/]));
								}
							}
							if (MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("") && MISC::GET_HASH_KEY(&(Var3.f_8[2 /*8*/])) != MISC::GET_HASH_KEY("REMOVE_ALL_STATES"))
							{
								if (!INTERIOR::IS_INTERIOR_ENTITY_SET_ACTIVE(iVar6, &(Var3.f_8[2 /*8*/])))
								{
									INTERIOR::ACTIVATE_INTERIOR_ENTITY_SET(iVar6, &(Var3.f_8[2 /*8*/]));
								}
							}
						}
						if (bParam1)
						{
							INTERIOR::REFRESH_INTERIOR(iVar6);
						}
					}
					Global_41186[iParam0] = 1;
					Global_40987[iParam0] = 1;
					bVar0 = true;
					break;
				case 3:
					if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var3, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), true) < 250f)
					{
						iVar4 = OBJECT::GET_RAYFIRE_MAP_OBJECT(Var3, 25f, &(Var3.f_8[0 /*8*/]));
						if (OBJECT::DOES_RAYFIRE_MAP_OBJECT_EXIST(iVar4))
						{
							if (iVar1 == 0)
							{
								OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 3);
								Global_41186[iParam0] = 1;
								bVar0 = true;
							}
							else if (iVar1 == 1)
							{
								if ((OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 6 && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 7) && OBJECT::GET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4) != 8)
								{
									OBJECT::SET_STATE_OF_RAYFIRE_MAP_OBJECT(iVar4, 10);
									Global_41186[iParam0] = 1;
									bVar0 = true;
								}
							}
							else if (iVar1 == 2)
							{
								bVar0 = true;
							}
						}
					}
					break;
				case 4:
					if (iVar1 == 0)
					{
						ENTITY::REMOVE_MODEL_SWAP(Var3, 50f, Var3.f_4[1], Var3.f_4[0], false);
						MISC::CLEAR_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					else if (iVar1 == 1)
					{
						ENTITY::CREATE_MODEL_SWAP(Var3, 50f, Var3.f_4[0], Var3.f_4[1], true);
						MISC::SET_BIT(&(Global_39338[(iParam0 / 32)]), (iParam0 % 32));
					}
					bVar0 = true;
					break;
			}
			if (bVar0)
			{
				Global_39791[iParam0] = 0;
				Global_39990[iParam0] = iVar1;
				if (!__LIB_11__.func_987())
				{
					if (!Global_40587[iParam0])
					{
						Global_40587[iParam0] = 1;
						Global_40786++;
					}
				}
			}
		}
	}
	return bVar0;
}

void func_718(int iParam0, struct<3> Param1)//Position - 0x2C8AB
{
	float fVar0;
	fVar0 = __LIB_4__.func_305(ENTITY::GET_ENTITY_COORDS(iParam0, true), Param1, 1);
	ENTITY::SET_ENTITY_HEADING(iParam0, fVar0);
}

void func_719(int iParam0)//Position - 0x3DFD3
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
		{
			ENTITY::SET_ENTITY_PROOFS(*iParam0, false, false, false, false, false, false, false, false);
			__LIB_11__.func_880(iParam0);
		}
	}
}

void func_720(int iParam0)//Position - 0x85BC3
{
	int iVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[iVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_6__.func_785(&Var3, __LIB_0__.func_360(iVar1, bVar2), __LIB_10__.func_4(iVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_721(int iParam0)//Position - 0x85CBE
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[iVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

void func_722()//Position - 0x97B85
{
	int iVar0;
	int iVar1;
	__LIB_20__.func_605();
	iVar0 = HUD::GET_MAIN_PLAYER_BLIP_ID();
	if (HUD::DOES_BLIP_EXIST(iVar0))
	{
		iVar1 = Global_113386.f_2363.f_539.f_4321;
		if (__LIB_0__.func_39(14))
		{
			iVar1 = __LIB_20__.func_509(PLAYER::PLAYER_PED_ID());
		}
		if (iVar1 == 0)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_MICHAEL" /* GXT: Michael */);
		}
		else if (iVar1 == 1)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_FRANKLIN" /* GXT: Franklin */);
		}
		else if (iVar1 == 2)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_TREV" /* GXT: Trevor */);
		}
		else
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_PLAYER" /* GXT: Player */);
		}
	}
}

void func_723(int iParam0)//Position - 0x97CCE
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID() && PED::GET_PED_MAX_HEALTH(iParam0) == 200)
		{
			PED::SET_PED_MAX_HEALTH(iParam0, SYSTEM::ROUND((IntToFloat(PED::GET_PED_MAX_HEALTH(iParam0)) * Global_262145.f_106 /* Tunable: MAX_HEALTH_MULTIPLIER */)));
		}
		if (Global_113386.f_2363.f_539.f_290[iVar0] <= 0f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 100f;
		}
		else if (Global_113386.f_2363.f_539.f_290[iVar0] <= 10f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 10f;
		}
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((Global_113386.f_2363.f_539.f_290[iVar0] / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

void func_724(int iParam0)//Position - 0x981B2
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[iVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_725(int iParam0)//Position - 0x981F9
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[iVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_726(int iParam0)//Position - 0x98237
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[iVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[iVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_727(int iParam0)//Position - 0x983C4
{
	int iVar0;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[iVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

int func_728()//Position - 0x98AF9
{
	__LIB_20__.func_605();
	return Global_113386.f_2363.f_539.f_4321;
}

int func_729(int iParam0, float fParam1, float fParam2)//Position - 0x835FD
{
	float fVar0;
	float fVar1;
	fVar0 = __LIB_11__.func_806(ENTITY::GET_ENTITY_HEADING(iParam0));
	fVar1 = (fVar0 - fParam1);
	if (fVar1 < 0f)
	{
		fVar1 = (fVar1 * -1f);
	}
	if (fVar1 <= fParam2 || fVar1 >= (360f - fParam2))
	{
		return 1;
	}
	return 0;
}

void func_730(var uParam0, int iParam1, int iParam2)//Position - 0x8D85C
{
	__LIB_6__.func_760(iParam1, &(uParam0->f_12));
	uParam0->f_7 = __LIB_11__.func_703(iParam1, 145, 0);
	uParam0->f_11 = __LIB_0__.func_119(iParam1);
	if (!uParam0->f_7)
	{
		if (!uParam0->f_10)
		{
			uParam0->f_10 = __LIB_0__.func_329(iParam1);
		}
	}
	if (iParam2 == 1)
	{
		*uParam0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		uParam0->f_6 = ENTITY::GET_ENTITY_HEADING(iParam1);
		uParam0->f_3 = { ENTITY::GET_ENTITY_VELOCITY(iParam1) };
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam1, -1154.3256f, -1523.8713f, 3.262189f, -1158.4525f, -1517.7496f, 6.374244f, 13f, false, true, 0))
		{
			*uParam0 = { -1160.0951f, -1515.407f, 3.1496f };
			uParam0->f_6 = 305.6424f;
		}
		if (Global_78042 == iParam1)
		{
			uParam0->f_9 = 1;
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		uParam0->f_8 = 1;
	}
	else
	{
		uParam0->f_8 = 0;
	}
}

void func_731(var uParam0, bool bParam1, int iParam2, int iParam3, bool bParam4, float fParam5, bool bParam6)//Position - 0x93AB2
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	float fVar7;
	struct<3> Var8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		ENTITY::PROCESS_ENTITY_ATTACHMENTS(uParam0->f_3);
		fVar0 = MISC::GET_FRAME_TIME();
		fVar1 = ENTITY::GET_ENTITY_HEADING(uParam0->f_3);
		if (fVar1 < 0f)
		{
			fVar1 = (fVar1 + 360f);
		}
		if (bParam4)
		{
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar2 = (uParam0->f_43 * uParam0->f_93);
				fVar3 = (uParam0->f_42 * uParam0->f_93);
				uParam0->f_37 = (uParam0->f_37 + (IntToFloat(iParam2) * uParam0->f_95));
				if (uParam0->f_37 > fVar2)
				{
					uParam0->f_37 = fVar2;
				}
				else if (uParam0->f_37 < -fVar3)
				{
					uParam0->f_37 = -fVar3;
				}
			}
			else
			{
				uParam0->f_37 = (IntToFloat(-iParam2) * uParam0->f_41);
				if (uParam0->f_37 > uParam0->f_43)
				{
					uParam0->f_37 = uParam0->f_43;
				}
				else if (uParam0->f_37 < -uParam0->f_42)
				{
					uParam0->f_37 = -uParam0->f_42;
				}
			}
			if (PAD::IS_LOOK_INVERTED() && !PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				iParam3 = (iParam3 * -1);
			}
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar4 = (uParam0->f_47 * uParam0->f_94);
				fVar5 = (uParam0->f_48 * uParam0->f_94);
				uParam0->f_35 = (uParam0->f_35 - (IntToFloat(iParam3) * uParam0->f_96));
				if (uParam0->f_35 > fVar4)
				{
					uParam0->f_35 = fVar4;
				}
				else if (uParam0->f_35 < fVar5)
				{
					uParam0->f_35 = fVar5;
				}
			}
			else
			{
				uParam0->f_35 = (IntToFloat(iParam3) * uParam0->f_46);
				if (uParam0->f_35 > uParam0->f_47)
				{
					uParam0->f_35 = uParam0->f_47;
				}
				else if (uParam0->f_35 < uParam0->f_48)
				{
					uParam0->f_35 = uParam0->f_48;
				}
			}
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar6 = (uParam0->f_44 * 20f);
				fVar7 = (uParam0->f_49 * 5f);
				uParam0->f_50 = (uParam0->f_50 + ((uParam0->f_35 - uParam0->f_50) * (fVar7 * fVar0)));
				uParam0->f_38 = (uParam0->f_38 + ((uParam0->f_37 - uParam0->f_38) * (fVar6 * fVar0)));
			}
			else
			{
				uParam0->f_50 = (uParam0->f_50 + ((uParam0->f_35 - uParam0->f_50) * (uParam0->f_49 * fVar0)));
				uParam0->f_38 = (uParam0->f_38 + ((uParam0->f_37 - uParam0->f_38) * (uParam0->f_44 * fVar0)));
			}
		}
		uParam0->f_36 = (uParam0->f_45 + uParam0->f_50);
		if (fParam5 <= -1000f)
		{
			Var8 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_3, PED::GET_PED_BONE_COORDS(uParam0->f_3, 0, 0f, 0f, 0f)) };
			Var8.f_1 = (Var8.f_1 / 4f);
		}
		else
		{
			Var8.f_1 = fParam5;
		}
		Var9 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(uParam0->f_3, 0f, Var8.f_1, 0f) };
		Var10 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Var9, ((uParam0->f_38 + uParam0->f_39) + fVar1), 0f, uParam0->f_40, 0f) };
		Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_3, Var10) };
		if (!uParam0->f_62 || bParam1)
		{
			__LIB_0__.func_476(uParam0, Var10, !bParam1, bParam6);
		}
		Var11.f_2 = uParam0->f_36;
		CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_4, uParam0->f_3, Var11, true);
		CAM::POINT_CAM_AT_ENTITY(uParam0->f_4, uParam0->f_3, Vector(0.6f, Var8.f_1, 0f) + uParam0->f_52, true);
		CAM::SET_CAM_PARAMS(uParam0->f_4, Var10, 0f, 0f, 0f, uParam0->f_51, 0, 1, 1, 2);
		CAM::SET_CAM_CONTROLS_MINI_MAP_HEADING(uParam0->f_4, true);
	}
}

void func_732(var uParam0, int* iParam1)//Position - 0x449A
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_656)
	{
		if (uParam0->f_656[iVar0 /*6*/])
		{
			if (uParam0->f_656[iVar0 /*6*/].f_5 == *iParam1)
			{
				if (uParam0->f_656[iVar0 /*6*/].f_1)
				{
					GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(iParam1);
					__LIB_11__.func_694(&(uParam0->f_656[iVar0 /*6*/]));
					return;
				}
				else
				{
					uParam0->f_656[iVar0 /*6*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

void func_733(var uParam0, int iParam1)//Position - 0x4825
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_202)
	{
		if (uParam0->f_202[iVar0 /*7*/])
		{
			if (uParam0->f_202[iVar0 /*7*/].f_4 == iParam1)
			{
				if (uParam0->f_202[iVar0 /*7*/].f_1)
				{
					WEAPON::REMOVE_WEAPON_ASSET(iParam1);
					__LIB_11__.func_694(&(uParam0->f_202[iVar0 /*7*/]));
					return;
				}
				else
				{
					uParam0->f_202[iVar0 /*7*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

int func_734(var uParam0, struct<3> Param1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x9856D
{
	if (__LIB_0__.func_86(Param1) || __LIB_0__.func_86(Param2))
	{
		return 0;
	}
	if (uParam0->f_893)
	{
		if ((__LIB_0__.func_78(uParam0->f_893.f_4, Param1, 0) && __LIB_0__.func_78(uParam0->f_893.f_7, Param2, 0)) && uParam0->f_893.f_10 == fParam3)
		{
			uParam0->f_893.f_2 = 0;
			if (!uParam0->f_893.f_1)
			{
				uParam0->f_1007 = 1;
				return 1;
			}
			else
			{
				return 1;
			}
		}
		else
		{
			return 0;
		}
	}
	else
	{
		STREAMING::NEW_LOAD_SCENE_START(Param1, Param2, fParam3, iParam4);
		uParam0->f_893 = 1;
		uParam0->f_893.f_3 = MISC::GET_GAME_TIMER();
		uParam0->f_893.f_4 = { Param1 };
		uParam0->f_893.f_7 = { Param2 };
		uParam0->f_893.f_10 = fParam3;
		uParam0->f_1007 = 1;
		return 1;
	}
	return 0;
}

void func_735()//Position - 0xA1E36
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 18)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938.f_9[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938.f_9[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938.f_9[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938.f_28[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938.f_28[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938.f_28[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	__LIB_9__.func_995();
	Global_97361 = 0;
}

void func_736(var uParam0)//Position - 0xA643F
{
	__LIB_12__.func_15(uParam0);
}

void func_737(int iParam0)//Position - 0x82E24
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		__LIB_12__.func_21(iParam0);
		VEHICLE::SET_PLAYBACK_TO_USE_AI(iParam0, 786603);
	}
}

int func_738(var uParam0, int iParam1, bool bParam2)//Position - 0x82FE5
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(*uParam0, false))
	{
		if (VEHICLE::IS_VEHICLE_SEAT_FREE(*uParam0, -1, false))
		{
			if (iParam1 == 2)
			{
				iVar0 = PED::CREATE_PED_INSIDE_VEHICLE(*uParam0, 6, __LIB_11__.func_123(), -1, false, false);
				PED::SET_PED_RELATIONSHIP_GROUP_HASH(iVar0, iLocal_151);
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_11__.func_123());
			}
			else if (iParam1 == 1)
			{
				iVar0 = PED::CREATE_RANDOM_PED_AS_DRIVER(*uParam0, true);
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
				{
					PED::GIVE_PED_HELMET(iVar0, true, 4096, -1);
				}
			}
			else
			{
				iVar0 = PED::CREATE_PED_INSIDE_VEHICLE(*uParam0, 4, __LIB_12__.func_24(), -1, false, false);
				if (bLocal_60)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_12__.func_24());
				}
			}
			if (bParam2)
			{
				ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(iVar0, true);
				PED::SET_PED_SUFFERS_CRITICAL_HITS(iVar0, false);
				PED::SET_PED_CONFIG_FLAG(iVar0, 32, false);
			}
			if (bLocal_61)
			{
				PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 8192, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 65536, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 2, false);
				VEHICLE::SET_DISABLE_PRETEND_OCCUPANTS(*uParam0, true);
			}
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iVar0, true);
			__LIB_11__.func_109(iVar0);
			bLocal_59 = true;
			return 1;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

bool func_739(struct<3> Param0, int iParam1)//Position - 0x7AC81
{
	return __LIB_12__.func_37(Global_103950.f_2890.f_12.f_66, Param0, iParam1);
}

int func_740()//Position - 0x305E
{
	if ((__LIB_0__.func_176(41) && __LIB_0__.func_176(3)) && __LIB_0__.func_176(21))
	{
		return 1;
	}
	return 0;
}

void func_741(int iParam0, struct<3> Param1, float fParam2)//Position - 0x3BA6
{
	if (__LIB_1__.func_197(iParam0))
	{
		TASK::CLEAR_PED_TASKS(iParam0);
	}
	__LIB_10__.func_701(iParam0, Param1, fParam2, 0, 1);
}

int func_742(var uParam0, struct<3> Param1, int iParam2, var uParam3, int iParam4, int iParam5)//Position - 0x5DFC
{
	var uVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	int iVar4;
	iVar3 = 0;
	if (!__LIB_0__.func_121(iParam2))
	{
		*uParam0 = 0;
		return 0;
	}
	if (*uParam0 == 0)
	{
		Var1 = { __LIB_10__.func_616(iParam2, iParam5) };
		*uParam0 = SHAPETEST::START_SHAPE_TEST_LOS_PROBE(Param1, Var1 + Var1 - Param1 * Vector(0.1f, 0.1f, 0.1f), 511, iParam4, 7);
		return 0;
	}
	iVar4 = SHAPETEST::GET_SHAPE_TEST_RESULT(*uParam0, &uVar0, &Var1, &uVar2, &iVar3);
	if (iVar4 == 0)
	{
		*uParam0 = 0;
		return 0;
	}
	else if (iVar4 == 1)
	{
		return 0;
	}
	*uParam0 = 0;
	if (ENTITY::IS_ENTITY_A_PED(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iVar3) == iParam2)
		{
			if (bLocal_39)
			{
				GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
			}
			*uParam3 = MISC::GET_GAME_TIMER();
			return 1;
		}
		return 0;
	}
	if (ENTITY::IS_ENTITY_A_VEHICLE(iVar3))
	{
		__LIB_0__.func_121(iVar3);
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam2, false))
		{
			if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar3) == PED::GET_VEHICLE_PED_IS_IN(iParam2, false))
			{
				if (bLocal_39)
				{
					GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
				}
				*uParam3 = MISC::GET_GAME_TIMER();
				return 1;
			}
		}
		return 0;
	}
	return 0;
}

void func_743(var uParam0, var uParam1, float fParam2)//Position - 0x11F79
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	if (uParam1->f_46 < 3)
	{
	}
	iVar0 = (uParam1->f_46 - 1);
	iVar1 = 0;
	iVar2 = 1;
	uParam0->f_46 = uParam1->f_46;
	while (iVar1 < uParam1->f_46)
	{
		Var3 = { *(uParam1[iVar1 /*3*/]) - *(uParam1[iVar0 /*3*/]) };
		Var4 = { *(uParam1[iVar2 /*3*/]) - *(uParam1[iVar1 /*3*/]) };
		Var3 = { Var3 / FtoV(SYSTEM::SQRT(((Var3.f_0 * Var3.f_0) + (Var3.f_1 * Var3.f_1)))) };
		Var4 = { Var4 / FtoV(SYSTEM::SQRT(((Var4.f_0 * Var4.f_0) + (Var4.f_1 * Var4.f_1)))) };
		Var5 = { Var3 - Var4 };
		Var5 = { Var5 / FtoV(SYSTEM::SQRT(((Var5.f_0 * Var5.f_0) + (Var5.f_1 * Var5.f_1)))) };
		if (__LIB_11__.func_325(uParam1, *(uParam1[iVar1 /*3*/]) + Var5))
		{
			Var5 = { -Var5 };
		}
		*(uParam0[iVar1 /*3*/]) = { *(uParam1[iVar1 /*3*/]) + Var5 * Vector(fParam2, fParam2, fParam2) };
		iVar0 = iVar1;
		iVar1++;
		iVar2 = (iVar2 + 1 % uParam1->f_46);
	}
}

int func_744(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x184E
{
	struct<15> Var0;
	int iVar1;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam8 < 0)
	{
		return 0;
	}
	if (iParam9 < 0)
	{
		return 0;
	}
	if (iParam10 == 76)
	{
		return 0;
	}
	if (iParam11 == 235)
	{
		return 0;
	}
	if (iParam6 == bParam5)
	{
		return 0;
	}
	if (((bParam5 != 144 && bParam5 != 0) && bParam5 != 1) && bParam5 != 2)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = uParam0;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_9 = iParam3;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__.func_522(iParam4);
		Var0.f_5 = iParam9;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam8);
		Var0.f_1 = iParam12;
		iVar1 = 0;
		MISC::SET_BIT(&iVar1, bParam5);
		Var0.f_2 = iVar1;
		Var0.f_6 = iParam6;
		Var0.f_14 = iParam7;
		Var0.f_7 = iParam10;
		Var0.f_8 = iParam11;
		MISC::SET_BIT(&(Var0.f_1), 0);
		MISC::SET_BIT(&(Var0.f_1), 13);
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		if (iParam4 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		__LIB_6__.func_848(bParam5);
		return 1;
	}
	return 0;
}

void func_745(int* iParam0, struct<3> Param1, bool bParam2)//Position - 0x3386
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_10__.func_658(Param1, 5, bParam2);
	}
}

void func_746(int* iParam0, int iParam1, bool bParam2)//Position - 0x3AE2
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_10__.func_727(iParam1, bParam2, 5);
	}
}

int func_747(int iParam0)//Position - 0x44E5
{
	int iVar0;
	int iVar1;
	if ((__LIB_1__.func_197(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_1__.func_183(iParam0))
	{
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (__LIB_1__.func_183(iVar0))
		{
			iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
			if ((iVar1 == joaat("cargobob") || iVar1 == joaat("cargobob2")) || iVar1 == joaat("cargobob3"))
			{
				if (VEHICLE::DOES_CARGOBOB_HAVE_PICK_UP_ROPE(iVar0))
				{
					if (VEHICLE::IS_VEHICLE_ATTACHED_TO_CARGOBOB(iVar0, iParam0))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_748(int iParam0)//Position - 0x2E63C
{
	if (Global_100493.f_18[iParam0])
	{
		__LIB_20__.func_271(iParam0, 10, 1);
		__LIB_20__.func_271(iParam0, 19, 1);
	}
}

int func_749()//Position - 0x33B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	iVar2 = 0;
	iVar3 = 145;
	if (Global_78319)
	{
		iVar3 = 145;
	}
	else if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 1)
	{
		if (__LIB_0__.func_507())
		{
			if (__LIB_0__.func_506())
			{
				iVar6 = 0;
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(Global_20247, "GET_CURRENT_SELECTION");
				iVar0 = GRAPHICS::END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE();
				iVar4 = MISC::GET_GAME_TIMER();
				while ((!GRAPHICS::IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(iVar0) && iVar6 == 0) && GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 1)
				{
					SYSTEM::WAIT(0);
					iVar5 = MISC::GET_GAME_TIMER();
					if ((iVar5 - iVar4) > 1500)
					{
						iVar6 = 1;
					}
				}
				iVar1 = GRAPHICS::GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(iVar0);
				if (iVar1 > __LIB_0__.func_505() || iVar1 < 0)
				{
					iVar1 = __LIB_0__.func_505();
				}
				iVar2 = Global_20272[iVar1];
				iVar3 = iVar2;
				if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 0)
				{
					iVar3 = 145;
				}
				if (iVar6 == 1)
				{
					iVar3 = 145;
				}
			}
			else
			{
				iVar3 = 145;
			}
		}
		else
		{
			iVar3 = 145;
		}
	}
	else
	{
		iVar3 = 145;
	}
	return iVar3;
}

int func_750()//Position - 0x4EE
{
	if (__LIB_0__.func_77(0) && __LIB_0__.func_507())
	{
		return 1;
	}
	return 0;
}

int func_751()//Position - 0x7CCA
{
	if ((__LIB_0__.func_176(79) && __LIB_0__.func_176(83)) && __LIB_0__.func_368(__LIB_12__.func_59()))
	{
		return 1;
	}
	return 0;
}

int func_752()//Position - 0x7D55
{
	if (__LIB_0__.func_176(68))
	{
		return 1;
	}
	return 0;
}

int func_753(int iParam0, int iParam1)//Position - 0x7D83
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = iParam0;
	while (iVar1 <= iParam1)
	{
		if (__LIB_0__.func_176(iVar1))
		{
			iVar0++;
		}
		iVar1++;
	}
	if (__LIB_0__.func_368(__LIB_12__.func_59()))
	{
		iVar0++;
	}
	return iVar0;
}

int func_754()//Position - 0xB5A7
{
	var uVar0[5];
	int iVar1;
	PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &uVar0, -1);
	iVar1 = 0;
	while (iVar1 <= 4)
	{
		if (__LIB_1__.func_197(uVar0[iVar1]) && uVar0[iVar1] != PLAYER::PLAYER_PED_ID())
		{
			if (SYSTEM::VDIST2(Local_50, ENTITY::GET_ENTITY_COORDS(uVar0[iVar1], true)) <= 16f)
			{
				return 1;
			}
		}
		iVar1++;
	}
	return 0;
}

int func_755(struct<3> Param0)//Position - 0xB69C
{
	float fVar0;
	fVar0 = SYSTEM::VDIST2(Param0, Global_95580[__LIB_12__.func_65(Param0, 0) /*9*/].f_3);
	if (fVar0 <= 40000f)
	{
		return 1;
	}
	return 0;
}

int func_756(struct<3> Param0, int iParam1)//Position - 0xBF19
{
	float fVar0;
	fVar0 = SYSTEM::VDIST2(Param0, __LIB_12__.func_67(iParam1));
	if (fVar0 <= 625f)
	{
		return 1;
	}
	return 0;
}

int func_757(var uParam0)//Position - 0xD07E
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_1__.func_197(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (__LIB_1__.func_183(iVar0))
		{
			iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
			if ((iVar1 == joaat("cargobob") || iVar1 == joaat("cargobob2")) || iVar1 == joaat("cargobob3"))
			{
				if (VEHICLE::DOES_CARGOBOB_HAVE_PICK_UP_ROPE(iVar0))
				{
					iVar2 = VEHICLE::GET_VEHICLE_ATTACHED_TO_CARGOBOB(iVar0);
					if (ENTITY::DOES_ENTITY_EXIST(iVar2))
					{
						*uParam0 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar2);
						if (__LIB_1__.func_183(*uParam0))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_758()//Position - 0xDB39
{
	if (((((Global_43052 == 15 && !__LIB_0__.func_510()) && Global_78316 == -1) && !__LIB_12__.func_60()) && !__LIB_12__.func_76(1112014848)) && !Global_112441)
	{
		return 1;
	}
	return 0;
}

int func_759()//Position - 0x2C9F
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 33;
	while (iVar1 <= 37)
	{
		if (__LIB_0__.func_176(iVar1))
		{
			iVar0++;
		}
		iVar1++;
	}
	if (__LIB_0__.func_368(45))
	{
		iVar0++;
	}
	if (iVar0 == 4)
	{
		return 1;
	}
	return 0;
}

void func_760(bool bParam0)//Position - 0x2A23
{
	if (bParam0)
	{
		__LIB_12__.func_45(1527885205, 0, func_11(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
	else if (!__LIB_0__.func_176(3))
	{
		__LIB_12__.func_45(-224691627, 0, func_11(), 23, 3, 6000, 6000, -1, 50, -1, 0);
	}
	else
	{
		__LIB_12__.func_45(-224691627, 0, func_11(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
}

void func_761(int* iParam0, struct<3> Param1, bool bParam2, bool bParam3, char* sParam4)//Position - 0x3862
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_10__.func_658(Param1, 5, bParam2);
		if (bParam3)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, sParam4);
		}
	}
}

int func_762(int iParam0, int iParam1)//Position - 0x10262
{
	int iVar0;
	iVar0 = (__LIB_11__.func_92(iParam0) - iParam1);
	return iVar0;
}

int func_763(int iParam0)//Position - 0x62F94
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			if (__LIB_12__.func_95(iVar0) == iVar1)
			{
				return iVar0;
			}
			iVar0++;
		}
	}
	return 145;
}

void func_764(var uParam0, var uParam1, char* sParam2, var uParam3, var uParam4, var uParam5, float fParam6, float fParam7, int iParam8, var uParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36)//Position - 0x63A5E
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(0, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(0, iVar0);
		Global_1649593.f_1177[iVar0] = uParam0;
		Global_1649593.f_1177.f_11[iVar0] = uParam1;
		StringCopy(&(Global_1649593.f_1177.f_22[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_1177.f_194[iVar0] = uParam3;
		Global_1649593.f_1177.f_183[iVar0] = uParam4;
		Global_1649593.f_1177.f_216[iVar0] = uParam5;
		Global_1649593.f_1177.f_227[iVar0 /*3*/] = fParam6;
		Global_1649593.f_1177.f_227[iVar0 /*3*/].f_1 = fParam7;
		Global_1649593.f_1177.f_258[iVar0] = iParam8;
		Global_1649593.f_1177.f_269[iVar0] = uParam9;
		Global_1649593.f_1177.f_312[iVar0] = iParam10;
		Global_1649593.f_1177.f_323[iVar0] = iParam11;
		Global_1649593.f_1177.f_334[iVar0] = iParam12;
		Global_1649593.f_1177.f_345[iVar0] = iParam13;
		Global_1649593.f_1172 = 1;
		Global_1649593.f_1177.f_356[iVar0] = iParam14;
		Global_1649593.f_1177.f_367[iVar0] = iParam15;
		Global_1649593.f_1177.f_378[iVar0] = iParam16;
		Global_1649593.f_1177.f_389[iVar0] = iParam17;
		Global_1649593.f_1177.f_400[iVar0] = iParam18;
		Global_1649593.f_1177.f_411[iVar0] = iParam19;
		Global_1649593.f_1177.f_422[iVar0] = iParam20;
		Global_1649593.f_1177.f_433[iVar0] = iParam21;
		Global_1649593.f_1177.f_444[iVar0] = iParam22;
		Global_1649593.f_1177.f_455[iVar0] = iParam23;
		Global_1649593.f_1177.f_466[iVar0] = iParam24;
		Global_1649593.f_1177.f_205[iVar0] = iParam25;
		Global_1649593.f_1177.f_477[iVar0] = iParam26;
		Global_1649593.f_1177.f_488[iVar0] = iParam27;
		Global_1649593.f_1177.f_499[iVar0] = iParam28;
		Global_1649593.f_1177.f_510[iVar0] = iParam29;
		Global_1649593.f_1177.f_521[iVar0] = iParam30;
		Global_1649593.f_1177.f_532[iVar0] = iParam31;
		Global_1649593.f_1177.f_543[iVar0] = iParam32;
		Global_1649593.f_1177.f_554[iVar0] = iParam33;
		Global_1649593.f_1177.f_565[iVar0] = iParam34;
		Global_1649593.f_1177.f_576[iVar0] = iParam35;
		Global_1649593.f_1177.f_587[iVar0] = iParam36;
	}
}

int func_765(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8)//Position - 0x91347
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	struct<3> Var5;
	bool bVar6;
	int iVar7;
	bool bVar8;
	bVar0 = false;
	iVar2 = iParam1;
	if (!WEAPON::HAS_PED_GOT_WEAPON(iParam0, iParam1, false))
	{
		bVar0 = true;
	}
	if (iVar2 == joaat("WEAPON_UNARMED"))
	{
		return 0;
	}
	iVar3 = 0;
	if (iParam2 == 1)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			iVar3 = WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, iVar2);
		}
		if (iVar3 == -1)
		{
			iVar4 = WEAPON::GET_WEAPON_CLIP_SIZE(iVar2);
			if (iVar4 > 0)
			{
				iVar3 = iVar4;
			}
			else
			{
				WEAPON::GET_MAX_AMMO(iParam0, iVar2, &iVar3);
			}
		}
	}
	Var5 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) - Vector(10f, 0f, 0f) };
	if (bParam3)
	{
		Var5 = { iParam4, iParam5, iParam6 };
	}
	while (__LIB_6__.func_772(iVar2, bVar6) != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, iVar2, __LIB_6__.func_772(iVar2, bVar6)))
			{
				if (__LIB_0__.func_520(__LIB_6__.func_772(iVar2, bVar6)))
				{
					iVar7 = WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(__LIB_6__.func_772(iVar2, bVar6));
				}
			}
		}
		bVar6++;
	}
	iVar1 = WEAPON::CREATE_WEAPON_OBJECT(iVar2, iVar3, Var5, bVar0, 1f, iVar7, iParam7, iParam8);
	while (__LIB_6__.func_772(iVar2, bVar8) != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, iVar2, __LIB_6__.func_772(iVar2, bVar8)))
			{
				WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(iVar1, __LIB_6__.func_772(iVar2, bVar8));
				__LIB_3__.func_636(iVar1, __LIB_6__.func_772(iVar2, bVar8));
			}
		}
		bVar8++;
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, iVar2, false))
		{
			WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(iVar1, WEAPON::GET_PED_WEAPON_TINT_INDEX(iParam0, iVar2));
		}
	}
	return iVar1;
}

int func_766()//Position - 0x9E515
{
	int iVar0;
	iVar0 = __LIB_6__.func_774(SCRIPT::GET_THIS_SCRIPT_NAME(), 1);
	if (iVar0 == -1)
	{
		return -1;
	}
	return __LIB_11__.func_155(iVar0);
}

float func_767(int iParam0)//Position - 0xDB92
{
	struct<3> Var0;
	struct<3> Var1;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) - ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	Var1 = { __LIB_0__.func_79(Var0) };
	return MISC::ATAN2(Var1.f_2, SYSTEM::VMAG(Var1.f_0, Var1.f_1, 0f));
}

void func_768(int iParam0)//Position - 0x72592
{
	int iVar0;
	int iVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), iParam0) == 1)
	{
		iVar4 = 28;
		__LIB_0__.func_471(&iVar0, &iVar1, &uVar2, &iVar3, 0);
		if (!PAD::IS_LOOK_INVERTED())
		{
			iVar3 = (iVar3 * -1);
		}
		if (((iVar1 > iVar4 || iVar1 < (iVar4 * -1)) || iVar0 > iVar4) || iVar0 < (iVar4 * -1))
		{
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
		}
	}
}

void func_769(int iParam0)//Position - 0x1171B
{
	bool bVar0;
	bVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[bVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

float func_770(var uParam0)//Position - 0x80DFB
{
	if (__LIB_0__.func_736(uParam0))
	{
		if (__LIB_0__.func_515(uParam0))
		{
			return uParam0->f_2;
		}
		else
		{
			return (__LIB_0__.func_484(BitTest(*uParam0, 4)) - uParam0->f_1);
		}
	}
	return uParam0->f_1;
}

void func_771(int iParam0)//Position - 0x2A9B4
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[iVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

void func_772(int iParam0)//Position - 0x75095
{
	int iVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[iVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_6__.func_785(&Var3, __LIB_0__.func_360(iVar1, bVar2), __LIB_10__.func_4(iVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_773(int iParam0)//Position - 0x75190
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[iVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

void func_774(int iParam0)//Position - 0x7BAB8
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID() && PED::GET_PED_MAX_HEALTH(iParam0) == 200)
		{
			PED::SET_PED_MAX_HEALTH(iParam0, SYSTEM::ROUND((IntToFloat(PED::GET_PED_MAX_HEALTH(iParam0)) * Global_262145.f_106 /* Tunable: MAX_HEALTH_MULTIPLIER */)));
		}
		if (Global_113386.f_2363.f_539.f_290[iVar0] <= 0f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 100f;
		}
		else if (Global_113386.f_2363.f_539.f_290[iVar0] <= 10f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 10f;
		}
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((Global_113386.f_2363.f_539.f_290[iVar0] / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

void func_775(int iParam0)//Position - 0x7BF8F
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[iVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_776(int iParam0)//Position - 0x7BFD6
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[iVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_777(int iParam0)//Position - 0x7C015
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[iVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[iVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_778(int iParam0)//Position - 0x7C1A2
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[iVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

int func_779(int iParam0, int iParam1, bool bParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x14C3
{
	struct<15> Var0;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (bParam2 < 3)
	{
		if (BitTest(iParam1, bParam2))
		{
			return 0;
		}
	}
	if (iParam1 < 1 || iParam1 > 7)
	{
		return 0;
	}
	if (iParam4 <= 0)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_650 < 30)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_1 = 0;
		Var0.f_6 = bParam2;
		Var0.f_2 = iParam1;
		Var0.f_14 = iParam3;
		Var0.f_3 = iParam6;
		Var0.f_7 = -1;
		Var0.f_8 = 0;
		Var0.f_9 = -1;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
		Var0.f_9 = iParam5;
		Var0.f_10 = -1;
		Var0.f_11 = -1;
		MISC::SET_BIT(&(Var0.f_1), 0);
		MISC::SET_BIT(&(Var0.f_1), 6);
		Global_113386.f_7688.f_199[Global_113386.f_7688.f_650 /*15*/] = { Var0 };
		Global_113386.f_7688.f_650++;
		return 1;
	}
	return 0;
}

int func_780(int iParam0, int iParam1)//Position - 0x79CFF
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__.func_505();
	if ((iParam0 >= iVar0 || iParam1 >= iVar0) || iParam0 == iParam1)
	{
		return 0;
	}
	iVar1 = __LIB_20__.func_260(iParam0);
	iVar2 = __LIB_20__.func_260(iParam1);
	if (iVar1 != 7 && iVar2 != 7)
	{
		iVar3 = __LIB_9__.func_604(iVar1, iVar2);
		if (iVar3 != 10)
		{
			if (__LIB_11__.func_898(iVar3) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_781(var uParam0)//Position - 0x7D132
{
	__LIB_12__.func_111(uParam0, 145, joaat("SCRIPT_TASK_ANY"), joaat("SCRIPT_TASK_ANY"), 0f, 0f, 0f, 0f);
}

int func_782()//Position - 0x81D19
{
	if (__LIB_9__.func_51(Global_1574629))
	{
		return __LIB_0__.func_196(Global_1574629);
	}
	return CLOCK::GET_CLOCK_HOURS();
}

int func_783(int iParam0)//Position - 0x243E
{
	if (__LIB_0__.func_317(iParam0))
	{
		return __LIB_0__.func_318(iParam0);
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

void func_784(var uParam0)//Position - 0x5B2AB
{
	int iVar0;
	if (CAM::DOES_CAM_EXIST(uParam0->f_9))
	{
		CAM::DESTROY_CAM(uParam0->f_9, false);
		__LIB_4__.func_749(0);
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_10))
	{
		CAM::DESTROY_CAM(uParam0->f_10, false);
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_11))
	{
		CAM::DESTROY_CAM(uParam0->f_11, false);
	}
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_9))
		{
			CAM::DESTROY_CAM((*uParam0)[iVar0], false);
		}
		iVar0++;
	}
	uParam0->f_15 = 0;
	uParam0->f_16 = 0;
	uParam0->f_17 = 0;
	uParam0->f_18 = 0;
	uParam0->f_19 = 0;
	uParam0->f_20 = 0;
	uParam0->f_21 = 0;
	uParam0->f_24 = 0;
	uParam0->f_27 = 0;
	uParam0->f_28 = 0f;
}

int func_785(bool bParam0, int iParam1)//Position - 0xAD3B
{
	if (__LIB_0__.func_317(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_6__.func_793(bParam0, iParam1));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_786()//Position - 0x25BAE
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_6__.func_816(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_18__.func_190(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__.func_317(iVar0) && (!__LIB_0__.func_39(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__.func_317(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_787(int iParam0, int iParam1)//Position - 0x83DDB
{
	int iVar0;
	char cVar1[24];
	bool bVar2;
	if (iParam1 != 0)
	{
		StringCopy(&cVar1, "FEED_CREW_S" /* GXT: ~a~ - Skills +25% */, 24);
		StringIntConCat(&cVar1, iParam1, 24);
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(&cVar1);
		iVar0 = 0;
		while (iVar0 < Global_96470[iParam0 /*19*/])
		{
			bVar2 = Global_113386.f_1.f_12[iParam0 /*6*/][iVar0];
			if (!BitTest(Global_113386.f_1.f_118, bVar2))
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(__LIB_0__.func_461(bVar2));
			}
			iVar0++;
		}
		HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		if (!__LIB_0__.func_67(56))
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				__LIB_0__.func_151("AM_H_CRWLVL" /* GXT: Crew gain experience with each heist you take them on. Their skill will improve with each job completed. */, -1);
				__LIB_0__.func_460(56);
			}
		}
	}
}

void func_788(int iParam0, int iParam1)//Position - 0x83FF5
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__.func_464(iParam1, Global_96453[iParam0 /*3*/].f_1, Global_96453[iParam0 /*3*/].f_2);
	iVar1 = __LIB_0__.func_463(iParam1);
	if (iVar0 < iVar1)
	{
		iVar2 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) * 0.25f));
		iVar3 = (iVar0 + iVar2);
		if (iVar3 > iVar1)
		{
			__LIB_0__.func_462(iParam1, iVar1, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
		else
		{
			__LIB_0__.func_462(iParam1, iVar3, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
	}
}

void func_789(int iParam0, int iParam1)//Position - 0x84286
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__.func_464(iParam1, Global_96453[iParam0 /*3*/].f_1, Global_96453[iParam0 /*3*/].f_2);
	iVar1 = __LIB_0__.func_465(iParam1);
	if (iVar0 < iVar1)
	{
		iVar2 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) * 0.25f));
		iVar3 = (iVar0 + iVar2);
		if (iVar3 > iVar1)
		{
			__LIB_0__.func_462(iParam1, iVar1, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
		else
		{
			__LIB_0__.func_462(iParam1, iVar3, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
	}
}

void func_790(var uParam0, char* sParam1, int iParam2, var uParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17)//Position - 0xB86ED
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__.func_667(7, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__.func_666(7, iVar0);
		Global_1649593.f_4659[iVar0] = uParam0;
		StringCopy(&(Global_1649593.f_4659.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4659.f_172[iVar0] = iParam2;
		Global_1649593.f_4659.f_216[iVar0] = uParam3;
		Global_1649593.f_4659.f_183[iVar0] = iParam4;
		Global_1649593.f_4659.f_194[iVar0] = iParam5;
		Global_1649593.f_4659.f_249[iVar0] = iParam6;
		Global_1649593.f_4659.f_260[iVar0] = iParam7;
		Global_1649593.f_4659.f_205[iVar0] = iParam8;
		Global_1649593.f_4659.f_314[iVar0] = iParam9;
		Global_1649593.f_4659.f_325[iVar0] = iParam10;
		Global_1649593.f_4659.f_357[iVar0] = iParam11;
		Global_1649593.f_4659.f_238[iVar0] = iParam12;
		Global_1649593.f_4659.f_271[iVar0] = iParam13;
		Global_1649593.f_4659.f_368[iVar0] = iParam14;
		Global_1649593.f_4659.f_379[iVar0] = iParam15;
		Global_1649593.f_4659.f_390[iVar0] = iParam16;
		Global_1649593.f_4659.f_227[iVar0] = iParam17;
	}
}

void func_791(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x2A658
{
	__LIB_20__.func_600(iParam0, "", iParam1, iParam2, bParam3);
}

int func_792(bool bParam0)//Position - 0x70127
{
	if (__LIB_0__.func_317(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_6__.func_816(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_793(bool bParam0)//Position - 0x9838C
{
	STREAMING::REMOVE_ANIM_DICT(__LIB_0__.func_416());
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_0__.func_415());
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_0__.func_414());
	if (bParam0)
	{
		PHYSICS::ROPE_UNLOAD_TEXTURES();
	}
}

void func_794(var uParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, float fParam5, bool bParam6)//Position - 0x9AD07
{
	char* sVar0;
	char* sVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	if ((*uParam0 == iParam1 && !bParam3) && !bParam2)
	{
		return;
	}
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		if (bParam4)
		{
			fVar2 = 8f;
			fVar3 = -8f;
			if (bParam2)
			{
				fVar2 = 1000f;
			}
			if (bParam6)
			{
				fVar2 = 2f;
			}
			switch (iParam1)
			{
				case 0:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					if (uParam0->f_56)
					{
						sVar0 = "Rope_Idle";
					}
					else
					{
						sVar0 = "Rappel_Idle";
						sVar1 = "Rappel_Idle_prop";
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), sVar0, fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					uParam0->f_22 = 0f;
					if (!uParam0->f_56)
					{
						if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
						{
							if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
							{
								ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, sVar1, __LIB_0__.func_416(), fVar2, true, false, false, 0f, 0);
							}
						}
					}
					break;
				case 1:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "Rappel_Walk", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, "Rappel_Walk_prop", __LIB_0__.func_416(), fVar2, true, false, false, 0f, 0);
						}
					}
					break;
				case 2:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "Rappel_Jump_a", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, "Rappel_Jump_a_prop", __LIB_0__.func_416(), fVar2, false, true, false, 0f, 0);
						}
					}
					__LIB_12__.func_0(uParam0);
					uParam0->f_78 = 0;
					uParam0->f_24 = 0f;
					uParam0->f_26 = -1f;
					uParam0->f_25 = 24f;
					break;
				case 3:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					if (uParam0->f_69)
					{
						if (!uParam0->f_79)
						{
							sVar0 = "rappel_jump_c";
							sVar1 = "Rappel_Jump_c_Prop";
						}
						else
						{
							sVar0 = "rappel_jump_a";
							sVar1 = "Rappel_Jump_a_Prop";
						}
					}
					else
					{
						sVar0 = "Rappel_Jump_a";
						sVar1 = "Rappel_Jump_a_prop";
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), sVar0, fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, sVar1, __LIB_0__.func_416(), fVar2, false, true, false, 0f, 0);
						}
					}
					__LIB_12__.func_0(uParam0);
					uParam0->f_78 = 0;
					uParam0->f_24 = 0f;
					uParam0->f_26 = -1f;
					uParam0->f_25 = 24f;
					uParam0->f_87 = MISC::GET_GAME_TIMER();
					break;
				case 4:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					__LIB_12__.func_0(uParam0);
					uParam0->f_78 = 0;
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "Rappel_Walk", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 5:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "Rope_Slide", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 6:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "rappel_to_free_rope", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 7:
					if (bParam2)
					{
						iVar4 = 131072;
					}
					else
					{
						iVar4 = 0;
					}
					ENTITY::DETACH_ENTITY(uParam0->f_3, true, true);
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__.func_416(), "land_action", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				}
		}
		if (bParam2)
		{
			PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(uParam0->f_3, false, false);
		}
	}
	uParam0->f_88 = MISC::GET_GAME_TIMER();
	*uParam0 = iParam1;
}

void func_795(bool bParam0)//Position - 0x9C80E
{
	STREAMING::REQUEST_MODEL(__LIB_0__.func_414());
	if (bParam0)
	{
		while (!__LIB_12__.func_163())
		{
			SYSTEM::WAIT(0);
		}
	}
}

void func_796(bool bParam0)//Position - 0x9C833
{
	STREAMING::REQUEST_MODEL(__LIB_0__.func_415());
	if (bParam0)
	{
		while (!__LIB_12__.func_164())
		{
			SYSTEM::WAIT(0);
		}
	}
}

int func_797(int iParam0)//Position - 0xA5659
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if ((iParam0 == 0 || iParam0 == 14) || iParam0 == 15)
	{
		return 0;
	}
	iVar0 = 0;
	iVar1 = 0;
	while (iVar1 < 10)
	{
		iVar2 = 0;
		while (iVar2 < Global_96470[iVar1 /*19*/])
		{
			iVar3 = 0;
			switch (iVar1)
			{
				case 1:
				case 2:
					iVar3 = __LIB_0__.func_176(90);
					break;
				case 3:
					iVar3 = __LIB_0__.func_176(74);
					break;
				case 4:
					iVar3 = __LIB_0__.func_176(75);
					break;
				case 5:
					iVar3 = __LIB_0__.func_176(93);
					break;
				case 6:
					iVar3 = __LIB_0__.func_176(69);
					break;
				case 7:
					iVar3 = __LIB_0__.func_176(70);
					break;
				case 8:
					iVar3 = __LIB_0__.func_176(84);
					break;
				case 9:
					iVar3 = __LIB_0__.func_176(85);
					break;
			}
			if (iVar3 && Global_113386.f_1.f_12[iVar1 /*6*/][iVar2] == iParam0)
			{
				iVar0++;
			}
			iVar2++;
		}
		iVar1++;
	}
	return iVar0;
}

int func_798(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0xBC342
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_39(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_799(int iParam0)//Position - 0xC1954
{
	__LIB_0__.func_579(&(Global_1649593.f_86[iParam0 /*2*/]));
	__LIB_0__.func_579(&(Global_1649593.f_107[iParam0 /*2*/]));
}

void func_800(int* iParam0, struct<3> Param1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x221E
{
	switch (*iParam2)
	{
		case 0:
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
			{
				*iParam2 = 1;
			}
			break;
		case 1:
			__LIB_0__.func_523(iParam0);
			if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
			{
				HUD::CLEAR_PRINTS();
				__LIB_0__.func_210("LOSE_WANTED" /* GXT: Lose the Cops. */, 7500, 0);
				*iParam2 = 2;
			}
			break;
		case 2:
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)
			{
				HUD::CLEAR_PRINTS();
				if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
				{
					__LIB_12__.func_50(__LIB_12__.func_48(__LIB_9__.func_611(), 0), iParam4);
					__LIB_20__.func_745(iParam0, Param1, 1);
				}
				else if (iParam3 == 0 && !*iParam5)
				{
					__LIB_0__.func_210(__LIB_12__.func_47(__LIB_9__.func_611()), 7500, 0);
					*iParam5 = 1;
				}
				*iParam2 = 0;
			}
			break;
	}
}

void func_801(int* iParam0, var uParam1)//Position - 0x31A4
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!bLocal_28)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (iVar0 != *iParam0)
			{
				if (__LIB_1__.func_183(iVar0))
				{
					iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
					if (iVar1 == joaat("trash"))
					{
						*uParam1 = *iParam0;
						__LIB_0__.func_106(iParam0);
						*iParam0 = iVar0;
						__LIB_0__.func_501(*iParam0, 1);
						__LIB_0__.func_501(*uParam1, 3);
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
						}
					}
					else if (iVar1 == joaat("towtruck"))
					{
						iVar2 = VEHICLE::GET_ENTITY_ATTACHED_TO_TOW_TRUCK(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false));
						if (__LIB_0__.func_121(iVar2))
						{
							iVar0 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar2);
							if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("trash"))
							{
								*uParam1 = *iParam0;
								__LIB_0__.func_106(iParam0);
								*iParam0 = iVar0;
								__LIB_0__.func_501(*iParam0, 1);
								__LIB_0__.func_501(*uParam1, 3);
								if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
								{
									ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
								}
							}
						}
					}
				}
			}
		}
	}
}

void func_802(int* iParam0)//Position - 0x32C9
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (iVar0 != *iParam0)
		{
			if (__LIB_1__.func_183(iVar0))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == __LIB_12__.func_53(__LIB_9__.func_611()))
				{
					__LIB_0__.func_106(iParam0);
					*iParam0 = iVar0;
					__LIB_0__.func_501(*iParam0, 1);
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
				}
			}
		}
	}
}

int func_803(int iParam0, struct<3> Param1, int* iParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7, bool bParam8, float fParam9)//Position - 0x3659
{
	if ((iParam4 == 1 || iParam4 == 2) || iParam4 == 3)
	{
		if (iParam3 == 0)
		{
			__LIB_20__.func_745(iParam2, Param1, 1);
			if (!bParam8)
			{
				if (__LIB_1__.func_183(iParam0))
				{
					if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, fParam9, fParam9, 2f, true, true, 0))
					{
						return 1;
					}
				}
			}
			else if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam9, fParam9, 2f, true, true, 2))
			{
				return 1;
			}
			if (__LIB_0__.func_405(__LIB_12__.func_47(__LIB_9__.func_611()), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_12__.func_47(__LIB_9__.func_611()));
			}
			if (!__LIB_0__.func_300())
			{
				__LIB_12__.func_50(__LIB_12__.func_48(__LIB_9__.func_611(), bParam7), iParam5);
			}
		}
	}
	else if (iParam3 == 0)
	{
		if (!*iParam6)
		{
			if (__LIB_0__.func_405(__LIB_12__.func_48(__LIB_9__.func_611(), 0), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_12__.func_48(__LIB_9__.func_611(), 0));
			}
			__LIB_0__.func_210(__LIB_12__.func_47(__LIB_9__.func_611()), 7500, 0);
			*iParam6 = 1;
		}
	}
	return 0;
}

void func_804(int iParam0, struct<3> Param1, float fParam2)//Position - 0x8969C
{
	if (__LIB_20__.func_511(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param1 };
			Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam2;
		}
	}
}

void func_805(bool bParam0)//Position - 0x2B3
{
	int iVar0;
	iVar0 = __LIB_12__.func_178(bParam0);
	MISC::CLEAR_BIT(&(uLocal_47[__LIB_12__.func_58(bParam0)]), iVar0);
}

void func_806(int iParam0)//Position - 0x70FE
{
	int iVar0;
	iVar0 = __LIB_12__.func_178(iParam0);
	MISC::SET_BIT(&(uLocal_47[__LIB_12__.func_58(iParam0)]), iVar0);
}

int func_807()//Position - 0x854E
{
	if (iLocal_42 == 0)
	{
		if ((__LIB_0__.func_176(74) || __LIB_0__.func_176(74)) && __LIB_20__.func_740())
		{
			return 1;
		}
	}
	else if (iLocal_42 == 1)
	{
		if (__LIB_0__.func_176(68))
		{
			return 1;
		}
	}
	return 0;
}

int func_808(int iParam0)//Position - 0x932F
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		if (iLocal_66[iVar0] == iParam0)
		{
			if (iVar0 == 0 && !__LIB_0__.func_176(33))
			{
				MISC::SET_BIT(&uLocal_49, 3);
			}
			else if (iVar0 == 1 && !__LIB_0__.func_176(34))
			{
				MISC::SET_BIT(&uLocal_49, 3);
			}
			else
			{
				MISC::CLEAR_BIT(&uLocal_49, 3);
			}
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_809(int iParam0)//Position - 0xA0F8
{
	Local_44.f_6 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
	__LIB_12__.func_63(iParam0);
}

int func_810(bool bParam0)//Position - 0xC212
{
	int iVar0;
	if (__LIB_0__.func_43(bParam0))
	{
		if (__LIB_12__.func_74(bParam0))
		{
			iVar0 = 0;
			while (iVar0 < Global_113386.f_7688.f_136)
			{
				if (Global_113386.f_7688[iVar0 /*15*/].f_3 == 5)
				{
					return 1;
				}
				iVar0++;
			}
		}
	}
	return 0;
}

void func_811()//Position - 0xD262
{
	sLocal_45[0] = "AM_H_FBIC1A" /* GXT: This area is unsuitable for the getaway vehicle. Find a more discreet location. */;
	sLocal_45[1] = "AM_H_FBIC1B" /* GXT: The getaway vehicle cannot be placed while meeting a friend. */;
	sLocal_45[2] = "AM_H_FBIC1C" /* GXT: The getaway vehicle cannot be placed while on a taxi job. */;
	sLocal_45[3] = "PRC_WANT";
	sLocal_45[4] = "PRC_DROPOFF";
	sLocal_45[5] = "PRC_INVALVEH";
	sLocal_45[6] = "PRC_HEALTH";
	sLocal_45[7] = __LIB_12__.func_77(7);
	sLocal_45[8] = __LIB_12__.func_77(8);
	sLocal_45[9] = "PRC_USEFIRST";
	sLocal_45[10] = __LIB_12__.func_77(10);
	sLocal_45[11] = __LIB_12__.func_77(11);
	sLocal_45[13] = __LIB_12__.func_77(13);
	sLocal_45[12] = __LIB_12__.func_77(12);
	sLocal_45[14] = "PRC_UNUSE";
	sLocal_45[15] = "PRC_SEATS";
	sLocal_45[16] = "PRC_CBOBVAL";
	sLocal_45[17] = __LIB_12__.func_77(17);
	sLocal_45[18] = __LIB_12__.func_77(18);
	sLocal_45[20] = __LIB_12__.func_77(20);
	sLocal_45[21] = "PRC_PUBAREA";
	sLocal_45[22] = "PRC_LAWAREA";
	sLocal_45[23] = "PRC_RESAREA";
	sLocal_45[24] = "PRC_STOP";
	sLocal_45[25] = "PRC_OWNEDM";
	sLocal_45[26] = "PRC_OWNEDF";
	sLocal_45[27] = "PRC_OWNEDT";
	sLocal_45[28] = "PRC_SECROUTE";
	sLocal_45[29] = "PRC_CLOSELOT";
	sLocal_45[30] = "PRC_CLOSELES";
	sLocal_45[31] = "PRC_CLSAGNT";
	sLocal_45[32] = "PRC_CLOSESAFE_M";
	sLocal_45[33] = "PRC_CLOSESAFE_F";
	sLocal_45[34] = "PRC_CLOSESAFE_T";
	sLocal_45[35] = "PRC_PEDS";
	sLocal_45[36] = "PRC_WATER";
	sLocal_45[37] = "PRC_OBST";
	sLocal_45[38] = "PRC_OBSTVEH";
	sLocal_45[39] = "PRC_UPDWN";
	sLocal_45[40] = "PRC_NEARROAD";
	sLocal_45[41] = "PRC_ONROAD";
	sLocal_45[19] = "PRC_PLAN";
	sLocal_45[42] = "PRC_TOOSTEEP";
	sLocal_45[43] = "PRC_UNEVEN";
	sLocal_45[44] = "PRC_REMIND";
	sLocal_45[45] = "PRC_REMINDA";
}

void func_812()//Position - 0xD605
{
	sLocal_69[0] = "ARMYB" /* GXT: Fort Zancudo */;
	sLocal_69[1] = "AIRP" /* GXT: Los Santos International Airport */;
	sLocal_69[2] = "STAD" /* GXT: Maze Bank Arena */;
	sLocal_69[3] = "TERMINA" /* GXT: Terminal */;
	sLocal_69[4] = "MOVIE" /* GXT: Richards Majestic */;
	sLocal_69[5] = "JAIL" /* GXT: Bolingbroke Penitentiary */;
	sLocal_69[6] = "OCEANA" /* GXT: Pacific Ocean */;
	sLocal_69[7] = "GOLF" /* GXT: GWC and Golfing Society */;
	sLocal_69[8] = "HORS" /* GXT: Vinewood Racetrack */;
	sLocal_69[9] = "MTCHIL" /* GXT: Mount Chiliad */;
	sLocal_69[10] = "MTGORDO" /* GXT: Mount Gordo */;
	sLocal_69[11] = "SANCHIA" /* GXT: San Chianski Mountain Range */;
	sLocal_69[12] = "TATAMO" /* GXT: Tataviam Mountains */;
	Local_68[0 /*261*/][0 /*8*/] = { __LIB_12__.func_78("DELBE" /* GXT: Del Perro Beach */, -1615.2574f, -952.59436f, 20.01716f, -2160.7058f, -423f, -1.28679f, 327.8f) };
	Local_68[0 /*261*/][1 /*8*/] = { __LIB_12__.func_78("DELBE" /* GXT: Del Perro Beach */, -1521.7163f, -914.56757f, 20.17247f, -1855.7148f, -1325.784f, -44.79295f, 254.8f) };
	Local_68[0 /*261*/][2 /*8*/] = { __LIB_12__.func_78("BEACH" /* GXT: Vespucci Beach */, -1162.3699f, -1815.0084f, 15.33822f, -1553.2072f, -1098.6849f, 0.46467f, 253.91f) };
	Local_68[0 /*261*/][3 /*8*/] = { __LIB_12__.func_78("BEACH" /* GXT: Vespucci Beach */, -1464.2185f, -1136.7828f, 0.32167f, -2241.5664f, -358.88486f, 20.32481f, 282.21f) };
	Local_68[0 /*261*/][4 /*8*/] = { __LIB_12__.func_78("PBOX" /* GXT: Pillbox Hill */, 156.41087f, -1042.6412f, 22.31273f, 238.63815f, -821.1217f, 35.10069f, 176.96f) };
	Local_68[0 /*261*/][5 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, 883.1121f, 534.72833f, 115.72503f, 559.7425f, 644.602f, 150.59714f, 301.08f) };
	Local_68[0 /*261*/][6 /*8*/] = { __LIB_12__.func_78("EAST_V" /* GXT: East Vinewood */, 941.45306f, -329.4256f, 60.77003f, 727.76514f, -200.95193f, 75.59085f, 88.89f) };
	Local_68[0 /*261*/][7 /*8*/] = { __LIB_12__.func_78("EAST_V" /* GXT: East Vinewood */, 689.1177f, -273.14056f, 60.21559f, 834.7326f, -352.1655f, 50.92442f, 81.23f) };
	Local_68[0 /*261*/][8 /*8*/] = { __LIB_12__.func_78("MIRR" /* GXT: Mirror Park */, 1048.4985f, -357.0332f, 60.92149f, 1401.5808f, -783.8975f, 75.7477f, 325.93f) };
	Local_68[0 /*261*/][9 /*8*/] = { __LIB_12__.func_78("MIRR" /* GXT: Mirror Park */, 892.28357f, -461.57523f, 70.86029f, 1161.3007f, -829.8299f, 45.90131f, 184.12f) };
	Local_68[0 /*261*/][10 /*8*/] = { __LIB_12__.func_78("VCANA" /* GXT: Vespucci Canals */, -1161.3606f, -1143.7163f, -5.71593f, -864.9714f, -981.12573f, 21.09691f, 328.65f) };
	Local_68[0 /*261*/][11 /*8*/] = { __LIB_12__.func_78("BAYTRE" /* GXT: Baytree Canyon */, 251.40108f, 1068.3472f, 280.6663f, 189.60123f, 1272.3522f, 143.80351f, 160.32f) };
	Local_68[0 /*261*/][13 /*8*/] = { __LIB_12__.func_78("OBSERV" /* GXT: Galileo Observatory */, -450.98346f, 1048.4084f, 252.94498f, -389.56403f, 1244.5039f, 370.24692f, 199.93f) };
	Local_68[0 /*261*/][14 /*8*/] = { __LIB_12__.func_78("AIRP" /* GXT: Los Santos International Airport */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][15 /*8*/] = { __LIB_12__.func_78("TERMINA" /* GXT: Terminal */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][16 /*8*/] = { __LIB_12__.func_78("STAD" /* GXT: Maze Bank Arena */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][17 /*8*/] = { __LIB_12__.func_78("MOVIE" /* GXT: Richards Majestic */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][18 /*8*/] = { __LIB_12__.func_78("GOLF" /* GXT: GWC and Golfing Society */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][19 /*8*/] = { __LIB_12__.func_78("HORS" /* GXT: Vinewood Racetrack */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][20 /*8*/] = { __LIB_12__.func_78("PBOX" /* GXT: Pillbox Hill */, -28.39781f, -1071.2449f, 50.21438f, -49.8352f, -1131.2766f, 20.02555f, 55.12f) };
	Local_68[0 /*261*/][21 /*8*/] = { __LIB_12__.func_78("LOSSF" /* GXT: Los Santos Freeway */, 843.19617f, 25.93548f, 65.16061f, 1138.6865f, 363.05872f, 105.41279f, 61.11f) };
	Local_68[0 /*261*/][22 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -992.56384f, -199.7673f, 30.74956f, -687.9904f, -43.23445f, 80.93306f, 80.53f) };
	Local_68[0 /*261*/][23 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -251.8548f, -446.2141f, 29.5887f, -362.685f, -434.7425f, 90.931f, 50f) };
	Local_68[0 /*261*/][24 /*8*/] = { __LIB_12__.func_78("ALTA" /* GXT: Alta */, 180.2637f, -404.9771f, 40.1713f, 289.9432f, -445.1485f, 124.3793f, 100f) };
	Local_68[0 /*261*/][25 /*8*/] = { __LIB_12__.func_78("ALTA" /* GXT: Alta */, 343.8481f, -323.1273f, 80.7749f, 427.08f, -361.0469f, 45.3411f, 85f) };
	Local_68[0 /*261*/][26 /*8*/] = { __LIB_12__.func_78("RANCHO" /* GXT: Rancho */, 414.5057f, -2092.0999f, 19.8533f, 350.8093f, -2158.395f, 12.3916f, 55f) };
	Local_68[0 /*261*/][27 /*8*/] = { __LIB_12__.func_78("RANCHO" /* GXT: Rancho */, 283.7474f, -2103.9177f, 12.9242f, 391.8871f, -1983.2037f, 33.0042f, 100f) };
	Local_68[0 /*261*/][28 /*8*/] = { __LIB_12__.func_78("PBOX" /* GXT: Pillbox Hill */, 85.038f, -670.3274f, 42.8642f, 227.8234f, -722.2458f, 274f, 175f) };
	Local_68[0 /*261*/][29 /*8*/] = { __LIB_12__.func_78("PBOX" /* GXT: Pillbox Hill */, -107.2516f, -906.36f, 28.2051f, -49.9007f, -752.925f, 330f, 125f) };
	Local_68[0 /*261*/][30 /*8*/] = { __LIB_12__.func_78("TEXTI" /* GXT: Textile City */, 456.8563f, -683.8335f, 32.2903f, 457.5504f, -819.4669f, 25.9553f, 14.4f) };
	Local_68[0 /*261*/][31 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -699.7205f, -227.3646f, 67.818f, -645.1068f, -332.5107f, 30.9132f, 127.1f) };
	Local_68[0 /*261*/].f_260 = 0;
	Local_68[0 /*261*/].f_257 = 32;
	Local_68[2 /*261*/][0 /*8*/] = { __LIB_12__.func_78("PBOX" /* GXT: Pillbox Hill */, -25.50944f, -932.38464f, 20.41711f, 119.94056f, -523.43976f, 33.07988f, 363.4f) };
	Local_68[2 /*261*/][1 /*8*/] = { __LIB_12__.func_78("DOWNT" /* GXT: Downtown */, -25.50944f, -932.38464f, 20.41711f, 119.94056f, -523.43976f, 33.07988f, 363.4f) };
	Local_68[2 /*261*/][2 /*8*/] = { __LIB_12__.func_78("COSI" /* GXT: Countryside */, 1426.9344f, 1225.1151f, 90.76305f, 1429.9823f, 1006.8307f, 120.66425f, 259.89f) };
	Local_68[2 /*261*/][3 /*8*/] = { __LIB_12__.func_78("COSI" /* GXT: Countryside */, 3503.5603f, 3546.4026f, 20.18748f, 3513.9546f, 3875.7952f, 72.94806f, 393.78f) };
	Local_68[2 /*261*/][4 /*8*/] = { __LIB_12__.func_78("SKID" /* GXT: Mission Row */, 403.54044f, -864.46936f, 20.33799f, 396.34406f, -1127.3247f, 35.49262f, 325.93f) };
	Local_68[2 /*261*/][5 /*8*/] = { __LIB_12__.func_78("JAIL" /* GXT: Bolingbroke Penitentiary */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[2 /*261*/][6 /*8*/] = { __LIB_12__.func_78("ARMYB" /* GXT: Fort Zancudo */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[2 /*261*/].f_260 = 2;
	Local_68[2 /*261*/].f_257 = 7;
	Local_68[1 /*261*/][0 /*8*/] = { __LIB_12__.func_78("PALETO" /* GXT: Paleto Bay */, -422.86185f, 6068.399f, 20.34662f, -282.74524f, 6206.324f, 50.46586f, 196.61f) };
	Local_68[1 /*261*/][1 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -755.2506f, 147.4266f, 75.41048f, -1079.0332f, 169.38055f, 50.46801f, 179.12f) };
	Local_68[1 /*261*/][2 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -752.36743f, 90.76733f, 65.5171f, -938.79803f, -15.91457f, 35.48347f, 205.78f) };
	Local_68[1 /*261*/][3 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -890.4999f, 431.1449f, 90.29848f, -875.3576f, 232.3266f, 60.20724f, 263.82f) };
	Local_68[1 /*261*/][4 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -752.36743f, 90.76733f, 65.5171f, -938.79803f, -15.91457f, 35.48347f, 205.78f) };
	Local_68[1 /*261*/][5 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -1198.1826f, 638.63666f, 115.10664f, -444.509f, 750.9377f, 198.29713f, 473.88f) };
	Local_68[1 /*261*/][6 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -844.40753f, 400.9413f, 80.433f, -109.53111f, 420.5014f, 120.2088f, 256.03f) };
	Local_68[1 /*261*/][7 /*8*/] = { __LIB_12__.func_78("ROCKF" /* GXT: Rockford Hills */, -518.62134f, 648.82654f, 130.93524f, -64.0709f, 582.45044f, 215.30841f, 162.72f) };
	Local_68[1 /*261*/][8 /*8*/] = { __LIB_12__.func_78("RICHM" /* GXT: Richman */, -934.98016f, 349.61014f, 85.77298f, -1432.4509f, 269.98038f, 50.7303f, 185.03f) };
	Local_68[1 /*261*/][9 /*8*/] = { __LIB_12__.func_78("RICHM" /* GXT: Richman */, -1633.8134f, -69.53224f, 65.10236f, -1446.8229f, 69.71544f, 48.23926f, 214.92f) };
	Local_68[1 /*261*/][10 /*8*/] = { __LIB_12__.func_78("RICHM" /* GXT: Richman */, -1732.258f, 444.13525f, 130.12581f, -2065.6904f, 412.21207f, 98.09863f, 175.17f) };
	Local_68[1 /*261*/][11 /*8*/] = { __LIB_12__.func_78("RICHM" /* GXT: Richman */, -1618.0363f, 50.95197f, 70.95364f, -1396.5143f, 221.1004f, 50.84464f, 161.61f) };
	Local_68[1 /*261*/][12 /*8*/] = { __LIB_12__.func_78("RICHM" /* GXT: Richman */, -1801.285f, 106.8786f, 72.12892f, -1541.7401f, 263.37378f, 50.44112f, 155.88f) };
	Local_68[1 /*261*/][13 /*8*/] = { __LIB_12__.func_78("PELUFF", -2208.5627f, 146.41006f, 150.93246f, -2350.1223f, 486.60657f, 200.5952f, 299.18f) };
	Local_68[1 /*261*/][14 /*8*/] = { __LIB_12__.func_78("PELUFF", -1852.3263f, 134.41718f, 70.06226f, -1994.3872f, 299.62833f, 100.96516f, 182.04f) };
	Local_68[1 /*261*/][15 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, -1982.6697f, 505.9648f, 100.93644f, -1918.8427f, 713.6382f, 150.73953f, 168.9f) };
	Local_68[1 /*261*/][16 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, -1455.7506f, 887.3351f, 191.97572f, -1663.2073f, 767.3684f, 160.81076f, 239.65f) };
	Local_68[1 /*261*/][17 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, -1570.2218f, 508.20563f, 140.38838f, -808.95325f, 526.43335f, 90.18556f, 238.43f) };
	Local_68[1 /*261*/][18 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, 242.62039f, 583.59045f, 159.40428f, 268.04242f, 827.4494f, 201.69531f, 105.09f) };
	Local_68[1 /*261*/][19 /*8*/] = { __LIB_12__.func_78("CHIL" /* GXT: Vinewood Hills */, -21.10285f, 706.8648f, 150.72626f, -210.43822f, 1056.2755f, 280.31824f, 290.15f) };
	Local_68[1 /*261*/][20 /*8*/] = { __LIB_12__.func_78("RGLEN" /* GXT: Richman Glen */, -1837.5383f, 774.2984f, 120.56287f, -1765.8419f, 831.0044f, 160.35838f, 68.09f) };
	Local_68[1 /*261*/][21 /*8*/] = { __LIB_12__.func_78("DIVINE", -372.0849f, 372.71826f, 100.60433f, 390.2198f, 532.5167f, 180.53801f, 305.88f) };
	Local_68[1 /*261*/].f_260 = 1;
	Local_68[1 /*261*/].f_257 = 22;
	Local_68[3 /*261*/][0 /*8*/] = { __LIB_12__.func_78("MTCHIL" /* GXT: Mount Chiliad */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][1 /*8*/] = { __LIB_12__.func_78("MTGORDO" /* GXT: Mount Gordo */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][2 /*8*/] = { __LIB_12__.func_78("SANCHIA" /* GXT: San Chianski Mountain Range */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][3 /*8*/] = { __LIB_12__.func_78("TATAMO" /* GXT: Tataviam Mountains */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][4 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 531.2397f, -3019.2666f, 50f, 530.1656f, -3393.6226f, -22.4165f, 210f) };
	Local_68[3 /*261*/][5 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 569.1023f, -2913.018f, 15.891f, 420.8226f, -2912.775f, -15.0372f, 25f) };
	Local_68[3 /*261*/][6 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 495.1012f, -2833.1753f, 5.164f, 460.1983f, -2813.5283f, 0.4269f, 12f) };
	Local_68[3 /*261*/][7 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 675.2973f, -2747.4504f, 4.952f, 689.2358f, -2747.3955f, 10.9001f, 4.3f) };
	Local_68[3 /*261*/][8 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 533.437f, -2693.2793f, 17.4952f, 588.6345f, -2693.4624f, 5.3007f, 15f) };
	Local_68[3 /*261*/][9 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 534.9656f, -2699.1365f, 4.9004f, 560.1779f, -2662.1921f, 9.0007f, 15f) };
	Local_68[3 /*261*/][10 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 583.903f, -2689.2068f, 16.9771f, 549.8469f, -2665.3176f, 3.9007f, 17.3f) };
	Local_68[3 /*261*/][11 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 683.428f, -2635.1343f, 9.3367f, 694.4725f, -2679.6597f, 4.7815f, 10f) };
	Local_68[3 /*261*/][12 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 695.2171f, -2694.7688f, 5.9815f, 695.5035f, -2679.1677f, 4.8365f, 10f) };
	Local_68[3 /*261*/][13 /*8*/] = { __LIB_12__.func_78("CYPRE" /* GXT: Cypress Flats */, 731.7991f, -2659.5796f, 4.7713f, 732.5307f, -2678.4001f, 10.5065f, 25f) };
	Local_68[3 /*261*/][14 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 86.1885f, -2430.6963f, -0.1888f, 119.1515f, -2453.121f, 2.8614f, 13f) };
	Local_68[3 /*261*/][15 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 260.3166f, -2426.7773f, 21.2819f, 313.7871f, -2433.6558f, 6.5609f, 20.5f) };
	Local_68[3 /*261*/][16 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 260.3166f, -2426.7773f, 21.2819f, 313.7871f, -2433.6558f, 6.5609f, 20.5f) };
	Local_68[3 /*261*/][17 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 283.1514f, -2456.7773f, 19.4609f, 290.2325f, -2403.6113f, 4.2465f, 20.5f) };
	Local_68[3 /*261*/][18 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 266.0341f, -2446.724f, 19.4623f, 308.3783f, -2414.5442f, 4.5423f, 20.5f) };
	Local_68[3 /*261*/][19 /*8*/] = { __LIB_12__.func_78("ELYSIAN" /* GXT: Elysian Island */, 303.5269f, -2451.4456f, 19.4091f, 270.9798f, -2409.4517f, 4.4609f, 20.5f) };
	Local_68[3 /*261*/][20 /*8*/] = { __LIB_12__.func_78("RANCHO" /* GXT: Rancho */, 515.026f, -1653.5404f, 37.2615f, 582.571f, -1577.8248f, 26.3365f, 100f) };
	Local_68[3 /*261*/][21 /*8*/] = { __LIB_12__.func_78("BURTON" /* GXT: Burton */, -150.7403f, -419.0541f, 28.6163f, -52.8669f, -453.5552f, 39.4051f, 100f) };
	Local_68[3 /*261*/][22 /*8*/] = { __LIB_12__.func_78("SanAnd" /* GXT: San Andreas */, 50.2035f, -470.7132f, 36.9003f, 102.0394f, -322.0089f, 115f, 130f) };
	Local_68[3 /*261*/][23 /*8*/] = { __LIB_12__.func_78("ALTA" /* GXT: Alta */, 499.1769f, -241.2495f, 47.3462f, 393.5317f, -205.7358f, 79.3132f, 120f) };
	Local_68[3 /*261*/][24 /*8*/] = { __LIB_12__.func_78("DTVINE" /* GXT: Downtown Vinewood */, 422.3247f, 62.118f, 113.2905f, 478.494f, 43.322f, 83.4541f, 80f) };
	Local_68[3 /*261*/][25 /*8*/] = { __LIB_12__.func_78("DTVINE" /* GXT: Downtown Vinewood */, 385.4908f, 56.1423f, 159.58f, 332.458f, -87.6805f, 63.3657f, 80f) };
	Local_68[3 /*261*/][26 /*8*/] = { __LIB_12__.func_78("DTVINE" /* GXT: Downtown Vinewood */, 213.6192f, 90.2228f, 98.9357f, 203.3067f, 61.8088f, 86.9197f, 60f) };
	Local_68[3 /*261*/][27 /*8*/] = { __LIB_12__.func_78("DTVINE" /* GXT: Downtown Vinewood */, 192.813f, -14.9451f, 85.3158f, 149.2689f, 0.6803f, 67.0343f, 40f) };
	Local_68[3 /*261*/][28 /*8*/] = { __LIB_12__.func_78("WVINE" /* GXT: West Vinewood */, 16.1659f, 61.8685f, 70.8467f, -17.1751f, 74.3771f, 76.88f, 4.5f) };
	Local_68[3 /*261*/][29 /*8*/] = { __LIB_12__.func_78("WVINE" /* GXT: West Vinewood */, -86.5425f, 84.8701f, 80.2147f, -50.4826f, 67.7335f, 70.297f, 20f) };
	Local_68[3 /*261*/][30 /*8*/] = { __LIB_12__.func_78("ELGORL" /* GXT: El Gordo Lighthouse */, 3449.839f, 5173.9814f, 0.0662f, 3412.309f, 5166.8896f, 14.8342f, 33.7f) };
	Local_68[3 /*261*/].f_260 = 3;
	Local_68[3 /*261*/].f_257 = 31;
	if (__LIB_1__.func_197(PLAYER::PLAYER_PED_ID()))
	{
		sLocal_70 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
	}
}

void func_813(int iParam0, bool bParam1)//Position - 0xE96A
{
	if (__LIB_1__.func_183(iLocal_51))
	{
		__LIB_0__.func_106(&iLocal_51);
	}
	if (!bParam1)
	{
		__LIB_0__.func_512(iParam0);
	}
	SCRIPT::TERMINATE_THIS_THREAD();
}

int func_814(int iParam0)//Position - 0x10ABC3
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_3__.func_103(iParam0);
	if (iVar0 == 0)
	{
		return 0;
	}
	if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	iVar1 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (iVar1 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_425(iVar1, 0))
		{
			if (((__LIB_3__.func_803(iVar1) == 250 || __LIB_3__.func_803(iVar1) == 249) || __LIB_3__.func_803(iVar1) == 237) || __LIB_3__.func_803(iVar1) == 238)
			{
				return 1;
			}
		}
	}
	if (__LIB_3__.func_118(PLAYER::PLAYER_ID(), iVar0) || func_3217(iParam0))
	{
		return 0;
	}
	else if ((iVar1 != __LIB_0__.func_160() && __LIB_3__.func_118(iVar1, iVar0)) && func_3114(iVar1, 11, 1))
	{
		return 0;
	}
	return 1;
}

void func_815(int iParam0, int iParam1)//Position - 0x10CF93
{
	int iVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	iVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (iVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = iVar0;
		}
		Global_1853190 = iVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 5);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_12__.func_187() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853190 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 31);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853190;
	}
	__LIB_7__.func_369();
}

int func_816(var uParam0, var uParam1)//Position - 0x10D479
{
	if (PLAYER::PLAYER_ID() == __LIB_12__.func_188())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (BitTest(Global_1946250.f_506, 31))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_817(int iParam0, int iParam1)//Position - 0x13B6EA
{
	bool bVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	bVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (bVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = bVar0;
		}
		Global_1853185 = bVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_12__.func_188() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853185 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 0);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
	}
	__LIB_7__.func_369();
}

bool func_818(int iParam0)//Position - 0x2CB2B
{
	return __LIB_12__.func_193(iParam0, 6, 1);
}

int func_819()//Position - 0x4CE04
{
	return __LIB_12__.func_197(PLAYER::PLAYER_ID());
}

int func_820(var uParam0, var uParam1)//Position - 0x59EC9
{
	if (__LIB_2__.func_459())
	{
		return 0;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if ((__LIB_3__.func_804(PLAYER::PLAYER_ID()) && !func_959(PLAYER::PLAYER_ID(), 3)) && !__LIB_3__.func_998(PLAYER::PLAYER_ID()))
	{
		if (__LIB_6__.func_25() != 1 && !__LIB_2__.func_557(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

int func_821(int iParam0)//Position - 0x61686
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_2__.func_232() && __LIB_2__.func_590(PLAYER::PLAYER_ID(), __LIB_2__.func_591(iParam0)))
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && __LIB_2__.func_590(__LIB_0__.func_582(), __LIB_2__.func_591(iParam0)))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	if (!__LIB_2__.func_590(PLAYER::PLAYER_ID(), __LIB_2__.func_591(iParam0)))
	{
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if (__LIB_2__.func_590(iVar0, __LIB_2__.func_591(iParam0)) && __LIB_7__.func_33(iVar0))
				{
					Var3 = { __LIB_1__.func_267(iVar0) };
					if (__LIB_0__.func_585(Var3))
					{
						if (NETWORK::NETWORK_IS_FRIEND(&Var3))
						{
							return 3;
						}
						else
						{
							iVar1 = 55;
						}
					}
					else
					{
						iVar1 = 55;
					}
				}
			}
			iVar2++;
		}
		if (iVar1 == 55)
		{
			return 55;
		}
	}
	return 4;
}

int func_822(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x9C575
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_307(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

void func_823(int iParam0, var uParam1)//Position - 0xA99C5
{
	int iVar0;
	iVar0 = __LIB_12__.func_204();
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					*uParam1 = ENTITY::GET_ENTITY_HEADING(iVar0);
				}
			}
			break;
	}
}

void func_824(int iParam0, var uParam1)//Position - 0xA9B13
{
	int iVar0;
	iVar0 = __LIB_12__.func_204();
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					*uParam1 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				}
			}
			break;
	}
}

Vector3 func_825(var uParam0)//Position - 0xAB67F
{
	int iVar0;
	iVar0 = __LIB_12__.func_204();
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != PLAYER::PLAYER_ID())
		{
			return Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_11;
		}
		else if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			return ENTITY::GET_ENTITY_COORDS(iVar0, true);
		}
		else
		{
			return Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_11;
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		return ENTITY::GET_ENTITY_COORDS(iVar0, true);
	}
	else if (__LIB_7__.func_424(iVar0, 1, 0, 1) != __LIB_0__.func_160())
	{
		return Global_2689235[__LIB_7__.func_424(iVar0, 1, 0, 1) /*453*/].f_318.f_11;
	}
	return 0f, 0f, 0f;
}

Vector3 func_826(int iParam0)//Position - 0xAB791
{
	int iVar0;
	iVar0 = __LIB_12__.func_204();
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					return ENTITY::GET_ENTITY_COORDS(iVar0, true);
				}
			}
			break;
	}
	return 0f, 0f, 0f;
}

void func_827(int iParam0)//Position - 0xAE83A
{
	int iVar0;
	if ((MISC::GET_FRAME_COUNT() % 10) == 0 || iParam0)
	{
		iVar0 = __LIB_12__.func_204();
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (__LIB_7__.func_424(iVar0, 1, 0, 1) == PLAYER::PLAYER_ID())
			{
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_11 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 3f, -1f, 0f) };
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_14 = (ENTITY::GET_ENTITY_HEADING(iVar0) + 90f);
				Global_1911933[PLAYER::PLAYER_ID() /*260*/].f_51 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
			}
		}
	}
}

int func_828(struct<3> Param0)//Position - 0xB041D
{
	int iVar0;
	int iVar1;
	var uVar2[15];
	int iVar3;
	iVar0 = __LIB_12__.func_204();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar3 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar2);
			iVar1 = 0;
			while (iVar1 < iVar3)
			{
				if (ENTITY::DOES_ENTITY_EXIST(uVar2[iVar1]) && ENTITY::IS_ENTITY_A_VEHICLE(uVar2[iVar1]))
				{
					if (!ENTITY::IS_ENTITY_DEAD(uVar2[iVar1], false) && !__LIB_2__.func_700(uVar2[iVar1], 1))
					{
						if (__LIB_0__.func_529(uVar2[iVar1], Param0, 1) < 2.5f)
						{
							return 1;
						}
					}
				}
				iVar1++;
			}
		}
	}
	return 0;
}

int func_829()//Position - 0xB259C
{
	if ((__LIB_0__.func_137(27245, -1) || __LIB_0__.func_738(PLAYER::PLAYER_ID())) || NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return 0;
	}
	if (__LIB_2__.func_762(PLAYER::PLAYER_ID()))
	{
		if (__LIB_2__.func_192(PLAYER::PLAYER_ID()))
		{
			if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0) && func_1860(PLAYER::PLAYER_ID()))
			{
				if (__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 158 && __LIB_2__.func_234(PLAYER::PLAYER_ID()) == 1)
				{
					return 1;
				}
			}
			else
			{
				return 1;
			}
		}
		else if (!__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			return 1;
		}
	}
	else if (__LIB_2__.func_192(PLAYER::PLAYER_ID()) || !__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		return 1;
	}
	return 0;
}

char* func_830(var uParam0, var uParam1, var uParam2)//Position - 0xB55A7
{
	int iVar0;
	if (BitTest(Global_1946250.f_4523.f_1, 7))
	{
		return "CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */;
	}
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK23A" /* GXT: You cannot enter The Music Locker while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_11__.func_278())
	{
		return "CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "CAS_APT_BLCK_A" /* GXT: You can't enter The Diamond Casino & Resort while resupplying another business. */;
				case 190:
					return "CAS_APT_BLCK_B" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from another business. */;
				case 167:
					return "CAS_APT_BLCK_C" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Warehouse. */;
				case 168:
					return "CAS_APT_BLCK_D" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Warehouse. */;
				case 178:
					return "CAS_APT_BLCK_E" /* GXT: You can't enter The Diamond Casino & Resort while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAS_APT_BLCK_F" /* GXT: You can't enter The Diamond Casino & Resort while selling vehicles from a Warehouse. */;
				case 225:
					return "CAS_APT_BLCK_G" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Bunker. */;
				case 226:
					return "CAS_APT_BLCK_H" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Bunker. */;
				case 229:
					return "CAS_APT_BLCK_I" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Hangar. */;
				case 230:
					return "CAS_APT_BLCK_J" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Hangar. */;
				case 237:
					return "CAS_APT_BLCK_O" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Nightclub. */;
				case 243:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAS_APT_BLCK_K" /* GXT: You can't enter The Diamond Casino & Resort with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_L" /* GXT: You can't access The Diamond Casino & Resort as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return "CAS_APT_BLCK_M" /* GXT: You can't access The Diamond Casino & Resort whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
		}
	}
	return "";
}

int func_831(int iParam0, int iParam1, var uParam2)//Position - 0xB57AC
{
	int iVar0;
	if (iParam0 != __LIB_0__.func_160())
	{
		if (iParam1 != -1)
		{
			if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				return 0;
			}
			if (Global_1946250.f_3614)
			{
				return 0;
			}
			if (Global_1892703[iParam0 /*599*/].f_10.f_32 == 148)
			{
				return 0;
			}
			if (__LIB_4__.func_0(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
			if (__LIB_2__.func_499())
			{
				return 0;
			}
			if (__LIB_0__.func_77(0))
			{
				return 0;
			}
			if (__LIB_2__.func_477())
			{
				return 0;
			}
			if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
			if (__LIB_8__.func_108(PLAYER::PLAYER_ID(), 1))
			{
				return 0;
			}
			if (__LIB_7__.func_291(iParam0) && !__LIB_1__.func_425(iParam0, 0))
			{
				return 0;
			}
			if (PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED())
			{
				return 0;
			}
			if (__LIB_1__.func_909())
			{
				return 0;
			}
			if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
			{
				iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
				switch (iVar0)
				{
					case 192:
					case 190:
					case 167:
					case 168:
					case 178:
					case 188:
					case 225:
					case 226:
					case 229:
					case 230:
					case 233:
					case 237:
						return 0;
					}
				default:
			}
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(iParam0), false))
			{
				return 0;
			}
			if (__LIB_11__.func_278())
			{
				return 0;
			}
			return 1;
		}
	}
	return 0;
}

int func_832(int iParam0)//Position - 0xBE82E
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_2__.func_232() && __LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0)))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	if (!__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
	{
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if (__LIB_2__.func_851(iVar0, __LIB_2__.func_852(iParam0)) && __LIB_12__.func_207(iVar0))
				{
					Var3 = { __LIB_1__.func_267(iVar0) };
					if (__LIB_0__.func_585(Var3))
					{
						if (NETWORK::NETWORK_IS_FRIEND(&Var3))
						{
							return 3;
						}
						else
						{
							iVar1 = 55;
						}
					}
					else
					{
						iVar1 = 55;
					}
				}
			}
			iVar2++;
		}
		if (iVar1 == 55)
		{
			return 55;
		}
	}
	return 4;
}

int func_833(int iParam0)//Position - 0xC640B
{
	if ((__LIB_5__.func_610(PLAYER::PLAYER_ID()) && BitTest(Global_1946250.f_506, 30)) && iParam0 != func_2202(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_834(int iParam0, int iParam1)//Position - 0xC8DFB
{
	int iVar0;
	int iVar1;
	iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam1, -1, false);
	if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && PED::IS_PED_A_PLAYER(iVar0)) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar0);
		if (!__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iParam1), 22))
		{
			return 0;
		}
		else if (__LIB_2__.func_471(iParam1))
		{
			return 0;
		}
		else if ((__LIB_0__.func_657(iParam1, 1) && __LIB_6__.func_407(iParam1) != iVar1) && !__LIB_2__.func_427(iVar1))
		{
			return 0;
		}
		if (__LIB_2__.func_762(iVar1))
		{
			if (__LIB_1__.func_219(iVar1) == __LIB_2__.func_852(iParam0))
			{
				if ((!__LIB_4__.func_1(iVar1) && __LIB_2__.func_853(iVar1)) && __LIB_12__.func_207(iVar1))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_835(int iParam0, var uParam1, int iParam2)//Position - 0xC91A8
{
	__LIB_2__.func_874(iParam0, &(uParam1->f_22.f_59), &(uParam1->f_22.f_62), &(uParam1->f_22.f_65), &(uParam1->f_22.f_66), 0, 0);
	switch (iParam0)
	{
		case 130:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { -108.8118f, -1765.6328f, 31.3273f };
						uParam1->f_22.f_16 = { 2.0262f, 0f, 141.2996f };
						uParam1->f_22.f_19 = 45.8619f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { -108.5376f, -1765.8752f, 30.7954f };
						uParam1->f_22.f_23 = { 2.0262f, 0f, 141.2996f };
						uParam1->f_22.f_26 = 41.2609f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_r";
						uParam1->f_22.f_28 = { -115.287f, -1772.985f, 28.825f };
						uParam1->f_22.f_31 = { 0f, 0f, 42.75f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { -115.3846f, -1767.0353f, 30.0277f };
						uParam1->f_22.f_16 = { -0.4861f, -0.0421f, -167.3437f };
						uParam1->f_22.f_19 = 49.6936f;
						uParam1->f_22.f_20 = { -115.2621f, -1767.5798f, 30.0229f };
						uParam1->f_22.f_23 = { -0.2546f, -0.0421f, -167.3437f };
						uParam1->f_22.f_26 = 46.912f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { -114.817f, -1771.856f, 28.839f };
						uParam1->f_22.f_31 = { 0f, 0f, -142.589f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { -109.9278f, -1766.642f, 30.4978f };
					uParam1->f_22.f_16 = { -0.7584f, 0f, -159.0229f };
					uParam1->f_22.f_19 = 24.9579f;
					uParam1->f_22.f_20 = { -109.4092f, -1767.9949f, 30.4786f };
					uParam1->f_22.f_23 = { -0.7584f, 0f, -159.0229f };
					uParam1->f_22.f_26 = 22.7044f;
					uParam1->f_22.f_28 = { -105.174f, -1778.526f, 28.51f };
					uParam1->f_22.f_31 = { 0f, 0f, -121.32f };
					break;
			}
			break;
		case 129:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { 1694.4264f, 4770.1133f, 44.0608f };
						uParam1->f_22.f_16 = { -2.4931f, 0f, -12.8128f };
						uParam1->f_22.f_19 = 35.8417f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { 1694.4227f, 4770.097f, 43.682f };
						uParam1->f_22.f_23 = { -2.4931f, 0f, -12.8128f };
						uParam1->f_22.f_26 = 31.9482f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
						uParam1->f_22.f_28 = { 1696.683f, 4785.65f, 41.025f };
						uParam1->f_22.f_31 = { 0f, 0f, -93.77f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { 1694.0562f, 4781.0283f, 42.5435f };
						uParam1->f_22.f_16 = { -2.9309f, 0f, -28.8648f };
						uParam1->f_22.f_19 = 50f;
						uParam1->f_22.f_20 = { 1694.3766f, 4781.6133f, 42.5094f };
						uParam1->f_22.f_23 = { -5.9745f, 0f, -28.8648f };
						uParam1->f_22.f_26 = 50f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { 1696.27f, 4783.938f, 41f };
						uParam1->f_22.f_31 = { 0f, 0f, -98f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { 1717.0848f, 4757.827f, 42.2922f };
					uParam1->f_22.f_16 = { 5.2743f, 0f, 83.6144f };
					uParam1->f_22.f_19 = 43.8546f;
					uParam1->f_22.f_20 = { 1717.0079f, 4758.3228f, 42.3021f };
					uParam1->f_22.f_23 = { 4.3535f, 0f, 83.6144f };
					uParam1->f_22.f_26 = 40.3114f;
					uParam1->f_22.f_28 = { 1710.714f, 4760.226f, 41.03f };
					uParam1->f_22.f_31 = { 0f, 0f, 111.96f };
					break;
			}
			break;
		case 133:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { 758.4058f, -819.5852f, 25.8539f };
						uParam1->f_22.f_16 = { 15.0811f, 0f, -23.6683f };
						uParam1->f_22.f_19 = 37.1834f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { 758.3498f, -819.5715f, 25.8539f };
						uParam1->f_22.f_23 = { 15.0811f, 0f, -13.6734f };
						uParam1->f_22.f_26 = 37.1834f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_r";
						uParam1->f_22.f_28 = { 757.915f, -816.262f, 25.315f };
						uParam1->f_22.f_31 = { 0f, 0f, -90f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { 760.9846f, -811.0167f, 26.7747f };
						uParam1->f_22.f_16 = { -4.7713f, 0f, 150.9875f };
						uParam1->f_22.f_19 = 50f;
						uParam1->f_22.f_20 = { 760.5063f, -811.7852f, 26.6991f };
						uParam1->f_22.f_23 = { -4.7713f, 0f, 146.1795f };
						uParam1->f_22.f_26 = 50f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { 758.075f, -814.638f, 25.325f };
						uParam1->f_22.f_31 = { 0f, 0f, 66.24f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { 723.02f, -831.0468f, 25.8457f };
					uParam1->f_22.f_16 = { 1.5491f, 0f, -13.9919f };
					uParam1->f_22.f_19 = 42.3709f;
					uParam1->f_22.f_20 = { 723.4074f, -831.1434f, 25.8457f };
					uParam1->f_22.f_23 = { 1.5491f, 0f, -13.9919f };
					uParam1->f_22.f_26 = 40.1124f;
					uParam1->f_22.f_28 = { 727.075f, -822.463f, 23.85f };
					uParam1->f_22.f_31 = { 0f, 0f, 14.76f };
					break;
			}
			break;
		case 128:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { -251.8045f, 6217.6104f, 32.4452f };
						uParam1->f_22.f_16 = { 3.6763f, 0f, -161.1623f };
						uParam1->f_22.f_19 = 42.1164f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { -251.8045f, 6217.6104f, 32.4452f };
						uParam1->f_22.f_23 = { 3.6763f, 0f, -157.8062f };
						uParam1->f_22.f_26 = 36.6668f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
						uParam1->f_22.f_28 = { -247.024f, 6213.387f, 30.95f };
						uParam1->f_22.f_31 = { 0f, 0f, -44.02f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { -249.2919f, 6212.654f, 32.0501f };
						uParam1->f_22.f_16 = { -0.4539f, 0f, -108.5578f };
						uParam1->f_22.f_19 = 50f;
						uParam1->f_22.f_20 = { -248.851f, 6212.508f, 32.0464f };
						uParam1->f_22.f_23 = { -0.4539f, 0f, -108.5578f };
						uParam1->f_22.f_26 = 50f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { -245.413f, 6211.325f, 30.938f };
						uParam1->f_22.f_31 = { 0f, 0f, -67.25f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { -242.6039f, 6227.254f, 32.1861f };
					uParam1->f_22.f_16 = { -0.4424f, 0f, -67.6005f };
					uParam1->f_22.f_19 = 42.4849f;
					uParam1->f_22.f_20 = { -242.5572f, 6227.141f, 32.1861f };
					uParam1->f_22.f_23 = { -2.8951f, 0f, -67.6005f };
					uParam1->f_22.f_26 = 39.4369f;
					uParam1->f_22.f_28 = { -237.036f, 6228.629f, 30.5f };
					uParam1->f_22.f_31 = { 0f, 0f, -25.27f };
					break;
			}
			break;
		case 132:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { -1267.4136f, -294.5786f, 40.2166f };
						uParam1->f_22.f_16 = { 0.2903f, 0f, 165.2125f };
						uParam1->f_22.f_19 = 50f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { -1267.415f, -294.5845f, 39.0152f };
						uParam1->f_22.f_23 = { 0.2903f, 0f, 165.2125f };
						uParam1->f_22.f_26 = 46.4161f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
						uParam1->f_22.f_28 = { -1271.043f, -305.413f, 35.95f };
						uParam1->f_22.f_31 = { 0f, 0f, 64.08f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { -1267.4055f, -300.9274f, 37.4091f };
						uParam1->f_22.f_16 = { -7.2476f, 0f, 150.1124f };
						uParam1->f_22.f_19 = 50f;
						uParam1->f_22.f_20 = { -1267.764f, -301.4421f, 37.3315f };
						uParam1->f_22.f_23 = { -5.7945f, 0f, 145.4827f };
						uParam1->f_22.f_26 = 50f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { -1270.116f, -304.05f, 36f };
						uParam1->f_22.f_31 = { 0f, 0f, 66.24f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { -1287.0201f, -270.163f, 38.9997f };
					uParam1->f_22.f_16 = { -0.1074f, 0f, -173.2643f };
					uParam1->f_22.f_19 = 39.9999f;
					uParam1->f_22.f_20 = { -1286.5209f, -270.2582f, 38.9995f };
					uParam1->f_22.f_23 = { -0.1074f, 0f, -173.2643f };
					uParam1->f_22.f_26 = 36.4388f;
					uParam1->f_22.f_28 = { -1286.842f, -278.063f, 37.588f };
					uParam1->f_22.f_31 = { 0f, 0f, -54.36f };
					break;
			}
			break;
		case 131:
			switch (iParam2)
			{
				case 0:
				case 3:
					if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)) || (func_511(0) && __LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0))))
					{
						uParam1->f_22.f_13 = { -601.7713f, 277.0803f, 82.5116f };
						uParam1->f_22.f_16 = { -0.9298f, 0f, -17.2785f };
						uParam1->f_22.f_19 = 24.2148f;
						uParam1->f_22.f_40 = 0.1f;
						uParam1->f_22.f_20 = { -601.9265f, 277.1286f, 82.5116f };
						uParam1->f_22.f_23 = { -0.9298f, 0f, -15.5062f };
						uParam1->f_22.f_26 = 24.2148f;
						uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
						uParam1->f_22.f_28 = { -601.613f, 279.65f, 81.063f };
						uParam1->f_22.f_31 = { 0f, 0f, 87.48f };
						uParam1->f_22.f_5 = "ext_player";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.352f;
						uParam1->f_22.f_37 = 1000;
						uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
						uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
						uParam1->f_22.f_72[0] = 0.251f;
						uParam1->f_22.f_72[1] = 0.35f;
						uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						uParam1->f_22.f_4 = "";
						uParam1->f_22.f_6 = "";
					}
					else
					{
						uParam1->f_22.f_13 = { -597.8455f, 274.016f, 83.2591f };
						uParam1->f_22.f_16 = { -1.2793f, 0f, 36.1417f };
						uParam1->f_22.f_19 = 42.2447f;
						uParam1->f_22.f_20 = { -598.1592f, 274.4453f, 83.2473f };
						uParam1->f_22.f_23 = { -1.2793f, 0f, 36.1417f };
						uParam1->f_22.f_26 = 42.2447f;
						uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
						uParam1->f_22.f_28 = { -601.55f, 280.483f, 81.025f };
						uParam1->f_22.f_31 = { 0f, 0f, 62.28f };
						uParam1->f_22.f_5 = "buzz_short";
						uParam1->f_22.f_34 = 0.2f;
						uParam1->f_22.f_35 = 0.8f;
						uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
						uParam1->f_22.f_72[0] = 0.353f;
						uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
						uParam1->f_22.f_80 = "";
						uParam1->f_22.f_79 = "";
						uParam1->f_22.f_88 = "";
						uParam1->f_22.f_87 = "";
						if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
							uParam1->f_22.f_6 = "enter";
						}
						else
						{
							uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
							uParam1->f_22.f_6 = "enter";
						}
					}
					break;
				case 2:
					uParam1->f_22.f_69[0] = "";
					uParam1->f_22.f_69[1] = "";
					uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_79 = "Garage_Door_Close";
					uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
					uParam1->f_22.f_87 = "Garage_Door_Close";
					uParam1->f_22.f_3 = "anim@apt_trans@garage";
					uParam1->f_22.f_5 = "gar_open_1_left";
					uParam1->f_22.f_34 = 0.1f;
					uParam1->f_22.f_35 = 0.45f;
					uParam1->f_22.f_4 = "";
					uParam1->f_22.f_6 = "";
					uParam1->f_22.f_40 = 0.1f;
					uParam1->f_22.f_13 = { -625.3788f, 283.7031f, 82.1332f };
					uParam1->f_22.f_16 = { 0.7019f, 0f, -82.1546f };
					uParam1->f_22.f_19 = 39.7521f;
					uParam1->f_22.f_20 = { -625.4673f, 284.3577f, 81.997f };
					uParam1->f_22.f_23 = { 0.7019f, 0f, -82.1546f };
					uParam1->f_22.f_26 = 38.9609f;
					uParam1->f_22.f_28 = { -617.775f, 286.063f, 80.688f };
					uParam1->f_22.f_31 = { 0f, 0f, 89.37f };
					break;
			}
			break;
	}
}

void func_836(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0xCC894
{
	__LIB_3__.func_805(iParam3, 1, 0);
	if (__LIB_2__.func_379())
	{
		if (iParam1 == 3 || iParam1 == 4)
		{
			__LIB_3__.func_805(iParam3, 0, iParam1 == 4);
			__LIB_3__.func_805(iParam3, 3, 0);
			__LIB_3__.func_805(iParam3, 4, 0);
			__LIB_3__.func_805(iParam3, 2, 0);
			__LIB_3__.func_805(iParam3, 5, 0);
			__LIB_3__.func_805(iParam3, 6, 0);
			__LIB_3__.func_805(iParam3, 7, 0);
		}
		else
		{
			__LIB_3__.func_805(iParam3, 0, 1);
			__LIB_3__.func_805(iParam3, 3, 0);
			__LIB_3__.func_805(iParam3, 4, 0);
			__LIB_3__.func_805(iParam3, 2, __LIB_2__.func_380());
			__LIB_3__.func_805(iParam3, 5, 0);
			__LIB_3__.func_805(iParam3, 6, 0);
			__LIB_3__.func_805(iParam3, 7, 0);
		}
	}
	else if (iParam1 == 4)
	{
		__LIB_3__.func_805(iParam3, 0, 1);
		__LIB_3__.func_805(iParam3, 3, 0);
		__LIB_3__.func_805(iParam3, 4, 0);
		__LIB_3__.func_805(iParam3, 2, 0);
		__LIB_3__.func_805(iParam3, 5, 0);
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 7, 0);
		__LIB_7__.func_366(iParam3, 7, 0);
	}
	else if (iParam1 == 1 || iParam1 == 2)
	{
		__LIB_3__.func_805(iParam3, 0, 1);
		__LIB_3__.func_805(iParam3, 2, !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */);
		__LIB_3__.func_805(iParam3, 3, 1);
		__LIB_7__.func_366(iParam3, 3, __LIB_0__.func_834(PLAYER::PLAYER_ID()));
		__LIB_3__.func_805(iParam3, 4, !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		__LIB_7__.func_366(iParam3, 4, __LIB_0__.func_833(PLAYER::PLAYER_ID()));
		__LIB_3__.func_805(iParam3, 5, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_7__.func_366(iParam3, 5, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_7__.func_366(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 7, 1);
		__LIB_7__.func_366(iParam3, 7, __LIB_12__.func_209());
	}
	else if (iParam1 == 3)
	{
		__LIB_3__.func_805(iParam3, 0, 0);
		__LIB_3__.func_805(iParam3, 3, 0);
		__LIB_3__.func_805(iParam3, 2, 0);
		__LIB_3__.func_805(iParam3, 5, 0);
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 4, 1);
		__LIB_7__.func_366(iParam3, 4, (__LIB_0__.func_833(PLAYER::PLAYER_ID()) && !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */));
		__LIB_3__.func_805(iParam3, 7, 0);
		__LIB_7__.func_366(iParam3, 7, 0);
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam3->f_5 == 3)
		{
			if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
			{
				__LIB_1__.func_342("CASINO_ENT_F6_H" /* GXT: Go to your Penthouse. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_BUY_PROP" /* GXT: Purchase the Penthouse from www.thediamondcasinoandresort.com. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 4)
		{
			if (__LIB_0__.func_833(PLAYER::PLAYER_ID()))
			{
				__LIB_1__.func_342("CASINO_ENT_F7_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 2)
		{
			__LIB_1__.func_342("CASINO_ENT_F4_H" /* GXT: Go to the Casino. */, 0, 0);
		}
		else if (iParam3->f_5 == 0)
		{
			__LIB_1__.func_342("CASINO_CP_EX_D" /* GXT: Exit the Parking Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 5)
		{
			__LIB_1__.func_342("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
		}
		else if (iParam3->f_5 == 6)
		{
			__LIB_1__.func_342("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
		}
		else if (iParam3->f_5 == 7)
		{
			if (__LIB_11__.func_278())
			{
				__LIB_1__.func_342("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
			}
			else if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				__LIB_1__.func_342("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
			}
			else if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
			{
				__LIB_1__.func_342("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3))
	{
		return;
	}
	else if (__LIB_2__.func_444(3, iParam3))
	{
		__LIB_2__.func_447(0);
		__LIB_2__.func_763(124);
		__LIB_7__.func_394(3);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		__LIB_2__.func_447(1);
		__LIB_2__.func_763(124);
		if (iParam1 == 1)
		{
			__LIB_7__.func_394(4);
			__LIB_2__.func_548(1);
		}
		else if (iParam1 == 3)
		{
			__LIB_7__.func_394(5);
			__LIB_2__.func_548(1);
		}
	}
	else if (__LIB_2__.func_444(2, iParam3))
	{
		__LIB_2__.func_763(123);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(5, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
		__LIB_7__.func_394(0);
	}
	else if (__LIB_2__.func_444(7, iParam3))
	{
		__LIB_2__.func_763(146);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
		__LIB_7__.func_394(0);
	}
}

void func_837(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0xD181F
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	int iVar4;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	if (iParam2 == PLAYER::PLAYER_ID())
	{
		__LIB_3__.func_805(iParam3, 3, !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		__LIB_7__.func_366(iParam3, 3, __LIB_0__.func_833(iParam2));
		bVar1 = (__LIB_0__.func_833(iParam2) && !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		if (bVar1)
		{
			bVar1 = __LIB_11__.func_274(iParam0, PLAYER::PLAYER_ID(), __LIB_6__.func_25()) != false;
		}
		__LIB_3__.func_805(iParam3, 4, bVar1);
		__LIB_7__.func_366(iParam3, 4, bVar1);
	}
	else
	{
		bVar2 = (__LIB_5__.func_711(iParam2) && !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		if (bVar2)
		{
			bVar2 = __LIB_0__.func_338(iParam2) == true;
		}
		__LIB_3__.func_805(iParam3, 3, bVar2);
		__LIB_7__.func_366(iParam3, 3, bVar2);
		__LIB_3__.func_805(iParam3, 4, 0);
		__LIB_7__.func_366(iParam3, 4, 0);
	}
	__LIB_3__.func_805(iParam3, 2, !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */);
	__LIB_7__.func_366(iParam3, 2, !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */);
	__LIB_3__.func_805(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_7__.func_366(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_3__.func_805(iParam3, 6, 0);
	__LIB_7__.func_366(iParam3, 6, 0);
	__LIB_3__.func_805(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
	__LIB_7__.func_366(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
	__LIB_3__.func_805(iParam3, 8, 1);
	__LIB_7__.func_366(iParam3, 8, __LIB_12__.func_209());
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam3->f_5 == 3)
		{
			if (iParam2 == PLAYER::PLAYER_ID())
			{
				if (!__LIB_0__.func_833(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CSNAPT_EXT_F1_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__.func_342("CSNAPT_EXT_F1HB" /* GXT: Go to the Penthouse Garage. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 0)
		{
			if (iParam1 == 2)
			{
				__LIB_1__.func_342("CSNAPT_EXT_H2" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CSNAPT_EXT_H" /* GXT: Exit the Penthouse. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 1)
		{
			__LIB_1__.func_342("CSNAPT_EXT_A_H" /* GXT: All Exit the Penthouse. */, 0, 0);
		}
		else if (iParam3->f_5 == 2)
		{
			__LIB_1__.func_342("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
		}
		else if (iParam3->f_5 == 5)
		{
			__LIB_1__.func_342("CSNAPT_EXT_C_I" /* GXT: Go to the Parking Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 6)
		{
			__LIB_1__.func_342("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
		}
		else if (iParam3->f_5 == 7)
		{
			__LIB_1__.func_342("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
		}
		else if (iParam3->f_5 == 4)
		{
			__LIB_1__.func_342("CAS_APT_EXT_F4" /* GXT: All Exit to the Penthouse Garage */, 0, 0);
		}
		else if (iParam3->f_5 == 8)
		{
			if (__LIB_11__.func_278())
			{
				__LIB_1__.func_342("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
			}
			else if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				__LIB_1__.func_342("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
			}
			else if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
			{
				__LIB_1__.func_342("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3))
	{
		return;
	}
	else if (__LIB_2__.func_444(2, iParam3))
	{
		__LIB_2__.func_763(123);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
		__LIB_2__.func_924();
	}
	else if (__LIB_2__.func_444(3, iParam3))
	{
		__LIB_2__.func_447(1);
		__LIB_2__.func_549(iParam0, -1);
		__LIB_7__.func_394(4);
		__LIB_2__.func_548(1);
		__LIB_2__.func_924();
	}
	else if (__LIB_2__.func_444(5, iParam3))
	{
		__LIB_2__.func_763(125);
		__LIB_7__.func_394(0);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_4), 30);
	}
	else if (__LIB_2__.func_444(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_2__.func_444(8, iParam3))
	{
		__LIB_2__.func_763(146);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		__LIB_2__.func_924();
		iVar3 = __LIB_11__.func_274(iParam0, PLAYER::PLAYER_ID(), 0);
		iVar4 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_7;
		__LIB_2__.func_443(iVar3, iParam0, iVar4, 1, 0, 1, 4);
		__LIB_2__.func_447(1);
		__LIB_2__.func_549(iParam0, -1);
		__LIB_7__.func_394(4);
		__LIB_2__.func_548(1);
	}
}

void func_838(var uParam0, int iParam1, int iParam2)//Position - 0xD4E4F
{
	bool bVar0;
	bVar0 = false;
	while (bVar0 < __LIB_2__.func_559(iParam1->f_6, 9))
	{
		switch (bVar0)
		{
			case 0:
				if (((__LIB_0__.func_657(iParam2, 1) && !func_2492(ENTITY::GET_ENTITY_MODEL(iParam2))) && __LIB_2__.func_934(PLAYER::PLAYER_ID())) && !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */)
				{
					__LIB_7__.func_366(iParam1, bVar0, 1);
				}
				else
				{
					__LIB_7__.func_366(iParam1, bVar0, 0);
				}
				break;
			case 1:
				if ((__LIB_0__.func_834(PLAYER::PLAYER_ID()) && __LIB_0__.func_833(PLAYER::PLAYER_ID())) && !Global_262145.f_26959 /* Tunable: VC_CASINO_DISABLE_PARKING */)
				{
					__LIB_7__.func_366(iParam1, bVar0, 1);
				}
				else
				{
					__LIB_7__.func_366(iParam1, bVar0, 0);
				}
				break;
		}
		bVar0++;
	}
	switch (iParam1->f_5)
	{
		case 0:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (!__LIB_2__.func_934(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CSN_VAL_NA2" /* GXT: A Casino Membership is required to access the Parking Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CSN_VAL_NA1" /* GXT: This vehicle cannot be parked in the Parking Garage. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F3_H" /* GXT: Enter the Parking Garage. */, 0, 0);
			}
			break;
		case 1:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F2_H" /* GXT: Enter your Penthouse Garage. */, 0, 0);
			}
			break;
	}
}

void func_839(int iParam0, var uParam1, int iParam2)//Position - 0xD6EDF
{
	__LIB_3__.func_876(iParam0, &(uParam1->f_22.f_59), &(uParam1->f_22.f_62), &(uParam1->f_22.f_65), &(uParam1->f_22.f_66), 0, 0);
	switch (iParam2)
	{
		case 0:
			uParam1->f_22.f_69[0] = "";
			uParam1->f_22.f_69[1] = "";
			uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
			uParam1->f_22.f_79 = "Garage_Door_Close";
			uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
			uParam1->f_22.f_87 = "Garage_Door_Close";
			uParam1->f_22.f_3 = "anim@apt_trans@garage";
			uParam1->f_22.f_5 = "gar_open_1_left";
			uParam1->f_22.f_34 = 0f;
			uParam1->f_22.f_35 = 0.45f;
			uParam1->f_22.f_4 = "";
			uParam1->f_22.f_6 = "";
			uParam1->f_22.f_40 = 0.1f;
			uParam1->f_22.f_13 = { 931.2416f, 1.1374f, 80.6547f };
			uParam1->f_22.f_16 = { -13.2618f, 0f, -81.488f };
			uParam1->f_22.f_19 = 50f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { 936.579f, 1.334f, 77.773f };
			uParam1->f_22.f_31 = { 0f, 0f, 69f };
			break;
		case 2:
		case 6:
			if (__LIB_0__.func_834(PLAYER::PLAYER_ID()) && (!func_2533() || iParam2 == 2))
			{
				uParam1->f_22.f_13 = { 969.2111f, 65.3035f, 112.9512f };
				uParam1->f_22.f_16 = { -5.093f, 0.0086f, 122.5577f };
				uParam1->f_22.f_19 = 49f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { 0f, 0f, 0f };
				uParam1->f_22.f_23 = { 0f, 0f, 0f };
				uParam1->f_22.f_26 = 0f;
				uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
				uParam1->f_22.f_28 = { 968.135f, 63.338f, 111.554f };
				uParam1->f_22.f_31 = { 0f, 0f, -120.062f };
				uParam1->f_22.f_5 = "ext_player";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.352f;
				uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
				uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
				uParam1->f_22.f_72[0] = 0.251f;
				uParam1->f_22.f_72[1] = 0.35f;
				uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				uParam1->f_22.f_4 = "";
				uParam1->f_22.f_6 = "";
			}
			else
			{
				uParam1->f_22.f_13 = { 961.6945f, 63.0565f, 112.8952f };
				uParam1->f_22.f_16 = { -1.676f, 0.0104f, -88.1937f };
				uParam1->f_22.f_19 = 42.1606f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { 962.3887f, 63.224f, 112.8747f };
				uParam1->f_22.f_23 = { -1.676f, 0.0104f, -88.1937f };
				uParam1->f_22.f_26 = 42.1606f;
				uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
				uParam1->f_22.f_28 = { 967.642f, 62.514f, 111.555f };
				uParam1->f_22.f_31 = { 0f, 0f, -120.755f };
				uParam1->f_22.f_5 = "buzz_short";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.8f;
				uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
				uParam1->f_22.f_72[0] = 0.353f;
				uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
					uParam1->f_22.f_6 = "enter";
				}
				else
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
					uParam1->f_22.f_6 = "enter";
				}
			}
			break;
	}
}

void func_840(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xD8C75
{
	if (Global_2703735.f_1571.f_703.f_16 != __LIB_0__.func_160())
	{
		if (BitTest(Global_2689235[Global_2703735.f_1571.f_703.f_16 /*453*/].f_416, 0) && __LIB_12__.func_210())
		{
			iParam0 = 23;
		}
	}
	if (iParam0 != 18 && iParam0 != 17)
	{
		Global_2674954 = 0;
	}
	Global_2667225.f_490 = iParam0;
	Global_2667225.f_490.f_1 = SCRIPT::GET_ID_OF_THIS_THREAD();
	Global_2667225.f_490.f_2 = iParam1;
	Global_2667225.f_490.f_3 = iParam2;
	Global_2667225.f_490.f_4 = iParam3;
	Global_2667225.f_490.f_5 = iParam4;
}

int func_841(var uParam0, int iParam1)//Position - 0xDAA47
{
	int iVar0;
	int iVar1;
	if (!ENTITY::DOES_ENTITY_EXIST(*uParam0))
	{
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iParam1))
		{
			if (!PED::IS_PED_INJURED(PLAYER::GET_PLAYER_PED(iParam1)))
			{
				iVar0 = ENTITY::GET_ENTITY_MODEL(PLAYER::GET_PLAYER_PED(iParam1));
				iVar1 = 4;
				if (__LIB_0__.func_308(iParam1))
				{
					iVar1 = 5;
				}
				*uParam0 = PED::CREATE_PED(iVar1, iVar0, 962.5547f, 59.6398f, 111.553f, 180f, false, false);
				ENTITY::SET_ENTITY_INVINCIBLE(*uParam0, true);
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(*uParam0, true);
				PED::CLONE_PED_TO_TARGET(PLAYER::GET_PLAYER_PED(iParam1), *uParam0);
				if (__LIB_0__.func_709(ENTITY::GET_ENTITY_MODEL(*uParam0), 14, func_307(*uParam0, 14, 0), -1))
				{
					PED::CLEAR_PED_PROP(*uParam0, 0);
				}
				if (__LIB_0__.func_812(*uParam0, 7))
				{
					PED::SET_PED_COMPONENT_VARIATION(*uParam0, 7, 0, 0, 0);
				}
			}
		}
	}
	if (!ENTITY::DOES_ENTITY_EXIST(*uParam0))
	{
		return 0;
	}
	if (!PED::IS_PED_INJURED(*uParam0))
	{
		if (!PED::HAVE_ALL_STREAMING_REQUESTS_COMPLETED(*uParam0))
		{
			return 0;
		}
	}
	return 1;
}

char* func_842(var uParam0, var uParam1, int iParam2)//Position - 0xDE47C
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK22A" /* GXT: You cannot enter the Casino while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "CAS_APT_BLCK_A" /* GXT: You can't enter The Diamond Casino & Resort while resupplying another business. */;
				case 190:
					return "CAS_APT_BLCK_B" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from another business. */;
				case 167:
					return "CAS_APT_BLCK_C" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Warehouse. */;
				case 168:
					return "CAS_APT_BLCK_D" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Warehouse. */;
				case 178:
					return "CAS_APT_BLCK_E" /* GXT: You can't enter The Diamond Casino & Resort while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAS_APT_BLCK_F" /* GXT: You can't enter The Diamond Casino & Resort while selling vehicles from a Warehouse. */;
				case 225:
					return "CAS_APT_BLCK_G" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Bunker. */;
				case 226:
					return "CAS_APT_BLCK_H" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Bunker. */;
				case 229:
					return "CAS_APT_BLCK_I" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Hangar. */;
				case 230:
					return "CAS_APT_BLCK_J" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Hangar. */;
				case 237:
					return "CAS_APT_BLCK_O" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Nightclub. */;
				case 243:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAS_APT_BLCK_K" /* GXT: You can't enter The Diamond Casino & Resort with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_L" /* GXT: You can't access The Diamond Casino & Resort as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return "CAS_APT_BLCK_M" /* GXT: You can't access The Diamond Casino & Resort whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
		}
	}
	iVar1 = 1;
	if (((iParam2 == 0 || iParam2 == 1) || iParam2 == 3) || iParam2 == 4)
	{
		iVar1 = 0;
	}
	if (!__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar3 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar2, -1, false);
			bVar4 = false;
			if (__LIB_0__.func_121(iVar2))
			{
				bVar4 = ENTITY::GET_ENTITY_MODEL(iVar2) == joaat("rcbandito");
				if (bVar4)
				{
					iVar1 = 1;
				}
			}
			if (iVar1 && ENTITY::DOES_ENTITY_EXIST(iVar3))
			{
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar2))
						{
							return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
						}
						else if (__LIB_2__.func_472(iVar2))
						{
							return "CAS_APT_BLCK_R" /* GXT: You can't enter The Diamond Casino & Resort with the Mobile Operations Center. */;
						}
						else if (bVar4)
						{
							return "CAS_APT_BLCK_T" /* GXT: You can't enter The Diamond Casino & Resort with the RC Bandito. */;
						}
						else
						{
							return "CAS_APT_BLCK_Q" /* GXT: You can't enter The Diamond Casino & Resort with this vehicle. */;
						}
					}
				}
			}
		}
	}
	return "";
}

int func_843(int iParam0)//Position - 0xDE751
{
	if (__LIB_0__.func_121(iParam0))
	{
		if (!__LIB_0__.func_657(iParam0, 0) || __LIB_6__.func_407(iParam0) != PLAYER::PLAYER_ID())
		{
			return 0;
		}
		if (!__LIB_12__.func_212(123, ENTITY::GET_ENTITY_MODEL(iParam0)))
		{
			return 0;
		}
	}
	return 1;
}

int func_844(int iParam0)//Position - 0xE905C
{
	if (iParam0 != 0)
	{
		return __LIB_7__.func_296(iParam0, 1, 0);
	}
	return __LIB_7__.func_296(func_2929(), 1, 0);
}

int func_845(int iParam0)//Position - 0xFAD28
{
	int iVar0;
	if (iParam0 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_425(iParam0, 1) || func_2973(iParam0, 1))
		{
			iVar0 = __LIB_3__.func_803(iParam0);
			if (__LIB_3__.func_66(iVar0) || __LIB_3__.func_65(iVar0))
			{
				return __LIB_7__.func_291(iParam0);
			}
		}
	}
	return 0;
}

int func_846(var uParam0)//Position - 0x1014F1
{
	if (__LIB_2__.func_232())
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	return 4;
}

int func_847(int iParam0)//Position - 0x101862
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_2__.func_232() && __LIB_3__.func_118(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)))
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && __LIB_3__.func_118(__LIB_0__.func_582(), __LIB_3__.func_103(iParam0)))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	if (!__LIB_3__.func_118(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)))
	{
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if ((((__LIB_3__.func_118(iVar0, __LIB_3__.func_103(iParam0)) && __LIB_2__.func_378(iVar0, 0)) && __LIB_2__.func_378(iVar0, 1)) && __LIB_2__.func_378(iVar0, 4)) && func_3111(iVar0, 11, 1))
				{
					Var3 = { __LIB_1__.func_267(iVar0) };
					if (__LIB_0__.func_585(Var3))
					{
						if (NETWORK::NETWORK_IS_FRIEND(&Var3))
						{
							return 3;
						}
						else
						{
							iVar1 = 55;
						}
					}
					else
					{
						iVar1 = 55;
					}
				}
			}
			iVar2++;
		}
		if (iVar1 == 55)
		{
			return 55;
		}
	}
	return 4;
}

int func_848(int iParam0)//Position - 0x1065EA
{
	switch (iParam0)
	{
		case 0:
			return __LIB_1__.func_186(PLAYER::PLAYER_ID());
		case 1:
			return __LIB_5__.func_617();
		case 2:
			return __LIB_5__.func_616();
		case 3:
			return __LIB_5__.func_615();
		case 4:
			return __LIB_12__.func_216();
		case 5:
			return __LIB_3__.func_61(PLAYER::PLAYER_ID());
		default:
	}
	return 0;
}

int func_849(int iParam0)//Position - 0x108146
{
	if (__LIB_1__.func_264(iParam0, 1, 1))
	{
		if (__LIB_7__.func_291(iParam0) && !__LIB_12__.func_197(iParam0))
		{
			return 0;
		}
	}
	return 1;
}

int func_850(int iParam0)//Position - 0x10C8AF
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_3__.func_103(iParam0);
	if (iVar0 == 0)
	{
		return 0;
	}
	if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	iVar1 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (iVar1 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_425(iVar1, 0))
		{
			if (((__LIB_3__.func_803(iVar1) == 250 || __LIB_3__.func_803(iVar1) == 249) || __LIB_3__.func_803(iVar1) == 237) || __LIB_3__.func_803(iVar1) == 238)
			{
				return 1;
			}
		}
	}
	if (__LIB_3__.func_118(PLAYER::PLAYER_ID(), iVar0) || func_3214(iParam0))
	{
		return 0;
	}
	else if ((iVar1 != __LIB_0__.func_160() && __LIB_3__.func_118(iVar1, iVar0)) && func_3111(iVar1, 11, 1))
	{
		return 0;
	}
	return 1;
}

void func_851(int iParam0, int iParam1)//Position - 0x10EB5A
{
	int iVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	iVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (iVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = iVar0;
		}
		Global_1853190 = iVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 5);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_12__.func_220() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853190 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 31);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853190;
	}
	__LIB_7__.func_369();
}

int func_852(var uParam0, var uParam1)//Position - 0x10F03F
{
	if (PLAYER::PLAYER_ID() == __LIB_12__.func_221())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (BitTest(Global_1946250.f_506, 31))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_853(var uParam0)//Position - 0x117312
{
	bool bVar0;
	if (Global_1853191 != __LIB_0__.func_160())
	{
		if (Global_1853191 == PLAYER::PLAYER_ID())
		{
			if (__LIB_5__.func_604() && !func_3486())
			{
				bVar0 = true;
			}
			else
			{
				bVar0 = false;
			}
		}
		else if (__LIB_3__.func_253(Global_1853191))
		{
			if ((__LIB_18__.func_908() && !NETWORK::NETWORK_IS_IN_MP_CUTSCENE()) && !func_3486())
			{
				bVar0 = true;
			}
			else
			{
				bVar0 = false;
			}
		}
		else
		{
			bVar0 = false;
		}
	}
	if (!bVar0)
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 157 /*INPUT_SELECT_WEAPON_UNARMED*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 159 /*INPUT_SELECT_WEAPON_HANDGUN*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 160 /*INPUT_SELECT_WEAPON_SHOTGUN*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 161 /*INPUT_SELECT_WEAPON_SMG*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 162 /*INPUT_SELECT_WEAPON_AUTO_RIFLE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 163 /*INPUT_SELECT_WEAPON_SNIPER*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 164 /*INPUT_SELECT_WEAPON_HEAVY*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 165 /*INPUT_SELECT_WEAPON_SPECIAL*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 158 /*INPUT_SELECT_WEAPON_MELEE*/, true);
	}
	else
	{
		HUD::HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME();
	}
	__LIB_2__.func_419();
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 101 /*INPUT_VEH_ROOF*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 337 /*INPUT_VEH_HYDRAULICS_CONTROL_TOGGLE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 143 /*INPUT_MELEE_BLOCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 257 /*INPUT_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 44 /*INPUT_COVER*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 282 /*INPUT_VEH_GUN_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 283 /*INPUT_VEH_GUN_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 284 /*INPUT_VEH_GUN_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 285 /*INPUT_VEH_GUN_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 113 /*INPUT_VEH_FLY_UNDERCARRIAGE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 119 /*INPUT_VEH_FLY_VERTICAL_FLIGHT_MODE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 352 /*INPUT_VEH_FLY_BOOST*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 102 /*INPUT_VEH_JUMP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 74 /*INPUT_VEH_HEADLIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 36 /*INPUT_DUCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 345 /*INPUT_VEH_MELEE_HOLD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 346 /*INPUT_VEH_MELEE_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 347 /*INPUT_VEH_MELEE_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 91 /*INPUT_VEH_PASSENGER_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 92 /*INPUT_VEH_PASSENGER_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 81 /*INPUT_VEH_NEXT_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 82 /*INPUT_VEH_PREV_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 83 /*INPUT_VEH_NEXT_RADIO_TRACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 84 /*INPUT_VEH_PREV_RADIO_TRACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	if (!Global_1957741)
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 22 /*INPUT_JUMP*/, true);
	}
	return 0;
}

int func_854()//Position - 0x11804C
{
	if (HUD::IS_WARNING_MESSAGE_ACTIVE())
	{
		return 1;
	}
	if (!__LIB_4__.func_715())
	{
		return 1;
	}
	if (__LIB_1__.func_241() || func_3509())
	{
		return 1;
	}
	return 0;
}

int func_855(int iParam0)//Position - 0x11866D
{
	if (__LIB_7__.func_926(iParam0))
	{
		return 5;
	}
	if (__LIB_2__.func_232())
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	return 4;
}

void func_856(var uParam0, var uParam1)//Position - 0x128CD8
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	bool bVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	if (!BitTest(uParam0->f_396, 0))
	{
		if ((__LIB_4__.func_27(PLAYER::PLAYER_ID()) && CAM::IS_SCREEN_FADED_IN()) && !func_3631())
		{
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
			{
				PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
			}
			MISC::SET_BIT(&(uParam0->f_396), 0);
		}
	}
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (Global_1853190 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_21 = { Global_2689235[Global_1853190 /*453*/].f_318.f_18 };
		}
	}
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_CAN_SWITCH_WEAPON(PLAYER::PLAYER_PED_ID(), false);
	}
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && ENTITY::GET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), &bVar0, &bVar1, &bVar2, &bVar3, &bVar4, &uVar5, &uVar6, &uVar7))
		{
			if ((((!bVar0 || !bVar1) || !bVar2) || !bVar3) || !bVar4)
			{
				ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), true, true, true, true, true, false, false, false);
				VEHICLE::SET_DISABLE_WEAPON_BLADE_FORCES(true);
			}
		}
	}
	__LIB_6__.func_404(&(uParam0->f_22.f_94));
}

int func_857()//Position - 0x129AC1
{
	return __LIB_7__.func_297(func_3649(), 1, 0);
}

int func_858(int iParam0, bool bParam1)//Position - 0x12FF18
{
	var uVar0;
	if (iParam0 != __LIB_0__.func_160())
	{
		uVar0 = __LIB_3__.func_367(func_3812(iParam0, bParam1));
		return uVar0;
	}
	return joaat("sm_prop_smug_hgrdoors_light_a");
}

int func_859(int iParam0)//Position - 0x132357
{
	if (__LIB_3__.func_395(&(Global_1952191.f_5470.f_3)) == iParam0)
	{
		return 5;
	}
	if (__LIB_2__.func_232())
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	return 4;
}

void func_860(int iParam0, int iParam1)//Position - 0x13D2F8
{
	bool bVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__.func_160();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	bVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		if (bVar0 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = bVar0;
		}
		Global_1853185 = bVar0;
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
	}
	else if (PLAYER::PLAYER_ID() == __LIB_12__.func_221() || PLAYER::PLAYER_ID() == __LIB_2__.func_191(PLAYER::PLAYER_ID()))
	{
		Global_1853185 = PLAYER::PLAYER_ID();
		MISC::SET_BIT(&(Global_1946250.f_506), 0);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
	}
	__LIB_7__.func_369();
}

int func_861(int iParam0, var uParam1)//Position - 0x13D92C
{
	if (PLAYER::PLAYER_ID() == __LIB_12__.func_221())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (BitTest(Global_1946250.f_506, 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_862(var uParam0)//Position - 0x1562C3
{
	if (__LIB_2__.func_232())
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
	{
		return __LIB_1__.func_48(func_518(__LIB_0__.func_582()));
	}
	return 4;
}

int func_863(var uParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x1596B3
{
	*uParam3 = 1;
	if (bParam2)
	{
		StringCopy(sParam1, __LIB_3__.func_525(uParam0, 1), 64);
		if ((__LIB_7__.func_501(4) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 31))) && (!__LIB_2__.func_232() || (__LIB_3__.func_803(PLAYER::PLAYER_ID()) != 225 && __LIB_3__.func_803(PLAYER::PLAYER_ID()) != 227)))
		{
			return 1;
		}
	}
	else
	{
		StringCopy(sParam1, "ciPI_TYPE_INVITE_TO_SIMPLE_INTERIOR - BUNKER", 64);
		if ((__LIB_7__.func_501(4) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 31))) && !func_4332(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

int func_864(int iParam0)//Position - 0x15A396
{
	switch (iParam0)
	{
		case 115:
			if (!__LIB_12__.func_229())
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_865(int iParam0)//Position - 0x15A5BC
{
	switch (iParam0)
	{
		case 115:
			if (((((((((Global_262145.f_32663 /* Tunable: DISABLE_SIMEON_SHOWROOM */ || __LIB_5__.func_619(20)) || func_25(PLAYER::PLAYER_ID(), 1, 0)) || __LIB_1__.func_557()) || !__LIB_1__.func_386(PLAYER::PLAYER_ID())) || __LIB_1__.func_41()) || __LIB_1__.func_305()) || (__LIB_1__.func_182(PLAYER::PLAYER_ID()) == 236 && __LIB_7__.func_600(PLAYER::PLAYER_ID()) == 8)) || func_4373()) || (__LIB_1__.func_279(PLAYER::PLAYER_ID()) && __LIB_3__.func_536()))
			{
				return 0;
			}
			else
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_866(var uParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x176A89
{
	if (bParam2)
	{
		StringCopy(sParam1, __LIB_3__.func_610(uParam0, 1), 64);
	}
	else
	{
		StringCopy(sParam1, "ciPI_TYPE_INVITE_TO_SIMPLE_INTERIOR - IE_GARAGE", 64);
	}
	if (((__LIB_7__.func_501(1) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 2))) && __LIB_2__.func_232()) && !func_4616(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_867(var uParam0)//Position - 0x177E3D
{
	bool bVar0;
	if (__LIB_4__.func_48(0))
	{
		return __LIB_1__.func_48(func_518(PLAYER::PLAYER_ID()));
	}
	else if (__LIB_6__.func_787(PLAYER::PLAYER_ID(), 0, 0))
	{
		bVar0 = __LIB_0__.func_582();
		return __LIB_1__.func_48(func_518(bVar0));
	}
	return 4;
}

void func_868(int* iParam0, var uParam1, int* iParam2, bool bParam3)//Position - 0x18B86F
{
	__LIB_6__.func_466(iParam0);
	if (BitTest(*iParam0, 15))
	{
		MISC::CLEAR_BIT(iParam0, 15);
	}
	MISC::CLEAR_BIT(iParam0, 4);
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_4) && !BitTest(*iParam0, 27))
	{
		if ((((__LIB_2__.func_106(uParam1->f_31) == 5 || __LIB_2__.func_106(uParam1->f_31) == 4) || (((((BitTest(*iParam0, 3) && !__LIB_1__.func_188(uParam1->f_31)) && !__LIB_0__.func_630(uParam1->f_31, -1)) && !func_69(uParam1->f_31, 0, 0)) && !__LIB_3__.func_870(PLAYER::PLAYER_ID())) && !__LIB_5__.func_610(PLAYER::PLAYER_ID()))) || __LIB_4__.func_713(uParam1->f_31)) || __LIB_6__.func_465(uParam1->f_31))
		{
			if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0->f_4, false))
			{
				OBJECT::DELETE_OBJECT(&(iParam0->f_4));
			}
		}
	}
	else if (bParam3)
	{
		if (iParam2->f_8 != 3)
		{
			iParam0->f_4 = 0;
		}
	}
	if (HUD::IS_NAMED_RENDERTARGET_REGISTERED(__LIB_19__.func_940(iParam0, uParam1)))
	{
		HUD::RELEASE_NAMED_RENDERTARGET(__LIB_19__.func_940(iParam0, uParam1));
		if (Global_1958629)
		{
			Global_1958629 = 0;
		}
	}
	iParam0->f_2 = -1;
	MISC::CLEAR_BIT(iParam0, 5);
	MISC::CLEAR_BIT(iParam0, 27);
}

int func_869(int iParam0, int iParam1, bool bParam2)//Position - 0x1958F6
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Global_1058069.f_14[iParam0];
	if (__LIB_12__.func_231())
	{
		iVar2 = __LIB_6__.func_409(iParam1);
		if (!iVar2 == -1)
		{
			return __LIB_6__.func_890(iVar2);
		}
	}
	if (iVar1 > -1 && iVar1 < 17)
	{
		if (BitTest(Global_4718592.f_658[iParam0 /*22957*/].f_7911[iVar1], 24))
		{
			return 18;
		}
	}
	if (iParam0 > -1 && iParam1 != __LIB_0__.func_160())
	{
		if (Global_4718592.f_111249[iParam0] != -1 && Global_4718592.f_111249[iParam0] <= 4)
		{
			if (Global_4718592.f_111249[iParam0] == 0)
			{
				iVar0 = 15;
			}
			else if (Global_4718592.f_111249[iParam0] == 1)
			{
				iVar0 = 18;
			}
			else if (Global_4718592.f_111249[iParam0] == 2)
			{
				iVar0 = 24;
			}
			else if (Global_4718592.f_111249[iParam0] == 4)
			{
				if (BitTest(Global_4718592.f_15, 29))
				{
					iVar0 = 21;
				}
				else
				{
					iVar0 = 6;
				}
			}
			else
			{
				iVar0 = Global_4718592.f_111249[iParam0];
			}
		}
		else
		{
			iVar0 = __LIB_8__.func_837(iParam1, !bParam2, iParam0, 0);
		}
		if (BitTest(Global_4718592.f_21, 13))
		{
			iVar0 = __LIB_0__.func_726(iParam0);
		}
		if (BitTest(Global_4718592.f_24, 29))
		{
			iVar0 = 0;
		}
		if (BitTest(Global_4718592.f_15, 26) && !__LIB_0__.func_610(iParam0, PLAYER::GET_PLAYER_TEAM(iParam1), 0))
		{
			iVar0 = __LIB_0__.func_722(1);
		}
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

int func_870(int* iParam0, var uParam1)//Position - 0x1B6B37
{
	if (((!__LIB_1__.func_188(uParam1->f_31) && !__LIB_0__.func_630(uParam1->f_31, -1)) && !func_69(uParam1->f_31, 0, 0)) && !__LIB_7__.func_916(PLAYER::PLAYER_ID()))
	{
		if (!TASK::PED_HAS_USE_SCENARIO_TASK(PLAYER::PLAYER_PED_ID()))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), false);
			MISC::CLEAR_BIT(iParam0, 6);
			return 1;
		}
		else if (!BitTest(*iParam0, 6))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), true);
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			MISC::SET_BIT(iParam0, 6);
		}
	}
	else if (((!__LIB_4__.func_958(PLAYER::PLAYER_ID()) && !iParam0->f_2481) && !iParam0->f_2482) && !iParam0->f_2483)
	{
		if (!__LIB_6__.func_561(PLAYER::PLAYER_ID()))
		{
			Global_32234 = 14;
		}
		return 1;
	}
	return 0;
}

int func_871(var uParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1BB8FE
{
	if (uParam0->f_9 == iParam1 && __LIB_11__.func_280(uParam0, iParam2, iParam3))
	{
		return 1;
	}
	return 0;
}

int func_872(int iParam0)//Position - 0x1BC1A1
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__.func_138(__LIB_6__.func_925(), 4, 5);
		case 2:
			return 5;
		case 3:
			return 3;
		case 4:
			return 1;
		default:
	}
	return 0;
}

int func_873(int iParam0)//Position - 0xC6452
{
	if ((__LIB_5__.func_610(PLAYER::PLAYER_ID()) && BitTest(Global_1946250.f_506, 30)) && iParam0 != func_2205(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

void func_874(var uParam0, int iParam1, int iParam2)//Position - 0xD4E99
{
	bool bVar0;
	bVar0 = false;
	while (bVar0 < __LIB_2__.func_559(iParam1->f_6, 9))
	{
		switch (bVar0)
		{
			case 0:
				if (((__LIB_0__.func_657(iParam2, 1) && !func_2495(ENTITY::GET_ENTITY_MODEL(iParam2))) && __LIB_2__.func_934(PLAYER::PLAYER_ID())) && !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */)
				{
					__LIB_7__.func_366(iParam1, bVar0, 1);
				}
				else
				{
					__LIB_7__.func_366(iParam1, bVar0, 0);
				}
				break;
			case 1:
				if ((__LIB_0__.func_834(PLAYER::PLAYER_ID()) && __LIB_0__.func_833(PLAYER::PLAYER_ID())) && !Global_262145.f_26959 /* Tunable: VC_CASINO_DISABLE_PARKING */)
				{
					__LIB_7__.func_366(iParam1, bVar0, 1);
				}
				else
				{
					__LIB_7__.func_366(iParam1, bVar0, 0);
				}
				break;
		}
		bVar0++;
	}
	switch (iParam1->f_5)
	{
		case 0:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (!__LIB_2__.func_934(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CSN_VAL_NA2" /* GXT: A Casino Membership is required to access the Parking Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CSN_VAL_NA1" /* GXT: This vehicle cannot be parked in the Parking Garage. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F3_H" /* GXT: Enter the Parking Garage. */, 0, 0);
			}
			break;
		case 1:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F2_H" /* GXT: Enter your Penthouse Garage. */, 0, 0);
			}
			break;
	}
}

void func_875(int iParam0, var uParam1, int iParam2)//Position - 0xD6F29
{
	__LIB_3__.func_876(iParam0, &(uParam1->f_22.f_59), &(uParam1->f_22.f_62), &(uParam1->f_22.f_65), &(uParam1->f_22.f_66), 0, 0);
	switch (iParam2)
	{
		case 0:
			uParam1->f_22.f_69[0] = "";
			uParam1->f_22.f_69[1] = "";
			uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
			uParam1->f_22.f_79 = "Garage_Door_Close";
			uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
			uParam1->f_22.f_87 = "Garage_Door_Close";
			uParam1->f_22.f_3 = "anim@apt_trans@garage";
			uParam1->f_22.f_5 = "gar_open_1_left";
			uParam1->f_22.f_34 = 0f;
			uParam1->f_22.f_35 = 0.45f;
			uParam1->f_22.f_4 = "";
			uParam1->f_22.f_6 = "";
			uParam1->f_22.f_40 = 0.1f;
			uParam1->f_22.f_13 = { 931.2416f, 1.1374f, 80.6547f };
			uParam1->f_22.f_16 = { -13.2618f, 0f, -81.488f };
			uParam1->f_22.f_19 = 50f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { 936.579f, 1.334f, 77.773f };
			uParam1->f_22.f_31 = { 0f, 0f, 69f };
			break;
		case 2:
		case 6:
			if (__LIB_0__.func_834(PLAYER::PLAYER_ID()) && (!func_2536() || iParam2 == 2))
			{
				uParam1->f_22.f_13 = { 969.2111f, 65.3035f, 112.9512f };
				uParam1->f_22.f_16 = { -5.093f, 0.0086f, 122.5577f };
				uParam1->f_22.f_19 = 49f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { 0f, 0f, 0f };
				uParam1->f_22.f_23 = { 0f, 0f, 0f };
				uParam1->f_22.f_26 = 0f;
				uParam1->f_22.f_3 = "anim@apt_trans@hinge_l";
				uParam1->f_22.f_28 = { 968.135f, 63.338f, 111.554f };
				uParam1->f_22.f_31 = { 0f, 0f, -120.062f };
				uParam1->f_22.f_5 = "ext_player";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.352f;
				uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
				uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
				uParam1->f_22.f_72[0] = 0.251f;
				uParam1->f_22.f_72[1] = 0.35f;
				uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				uParam1->f_22.f_4 = "";
				uParam1->f_22.f_6 = "";
			}
			else
			{
				uParam1->f_22.f_13 = { 961.6945f, 63.0565f, 112.8952f };
				uParam1->f_22.f_16 = { -1.676f, 0.0104f, -88.1937f };
				uParam1->f_22.f_19 = 42.1606f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { 962.3887f, 63.224f, 112.8747f };
				uParam1->f_22.f_23 = { -1.676f, 0.0104f, -88.1937f };
				uParam1->f_22.f_26 = 42.1606f;
				uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
				uParam1->f_22.f_28 = { 967.642f, 62.514f, 111.555f };
				uParam1->f_22.f_31 = { 0f, 0f, -120.755f };
				uParam1->f_22.f_5 = "buzz_short";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.8f;
				uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
				uParam1->f_22.f_72[0] = 0.353f;
				uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
					uParam1->f_22.f_6 = "enter";
				}
				else
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
					uParam1->f_22.f_6 = "enter";
				}
			}
			break;
	}
}

void func_876(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xD8CBE
{
	if (Global_2703735.f_1571.f_703.f_16 != __LIB_0__.func_160())
	{
		if (BitTest(Global_2689235[Global_2703735.f_1571.f_703.f_16 /*453*/].f_416, 0) && __LIB_12__.func_241())
		{
			iParam0 = 23;
		}
	}
	if (iParam0 != 18 && iParam0 != 17)
	{
		Global_2674954 = 0;
	}
	Global_2667225.f_490 = iParam0;
	Global_2667225.f_490.f_1 = SCRIPT::GET_ID_OF_THIS_THREAD();
	Global_2667225.f_490.f_2 = iParam1;
	Global_2667225.f_490.f_3 = iParam2;
	Global_2667225.f_490.f_4 = iParam3;
	Global_2667225.f_490.f_5 = iParam4;
}

int func_877(int iParam0)//Position - 0xDE7CB
{
	if (__LIB_0__.func_121(iParam0))
	{
		if (!__LIB_0__.func_657(iParam0, 0) || __LIB_6__.func_407(iParam0) != PLAYER::PLAYER_ID())
		{
			return 0;
		}
		if (!__LIB_12__.func_243(123, ENTITY::GET_ENTITY_MODEL(iParam0)))
		{
			return 0;
		}
	}
	return 1;
}

int func_878(int iParam0)//Position - 0xE905C
{
	if (iParam0 != 0)
	{
		return __LIB_7__.func_296(iParam0, 1, 0);
	}
	return __LIB_7__.func_296(func_2932(), 1, 0);
}

int func_879()//Position - 0x11804C
{
	if (HUD::IS_WARNING_MESSAGE_ACTIVE())
	{
		return 1;
	}
	if (!__LIB_4__.func_715())
	{
		return 1;
	}
	if (__LIB_1__.func_241() || func_3512())
	{
		return 1;
	}
	return 0;
}

void func_880(var uParam0, var uParam1)//Position - 0x128CD8
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	bool bVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	if (!BitTest(uParam0->f_396, 0))
	{
		if ((__LIB_4__.func_27(PLAYER::PLAYER_ID()) && CAM::IS_SCREEN_FADED_IN()) && !func_3634())
		{
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
			{
				PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
			}
			MISC::SET_BIT(&(uParam0->f_396), 0);
		}
	}
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (Global_1853190 != __LIB_0__.func_160())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_21 = { Global_2689235[Global_1853190 /*453*/].f_318.f_18 };
		}
	}
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_CAN_SWITCH_WEAPON(PLAYER::PLAYER_PED_ID(), false);
	}
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && ENTITY::GET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), &bVar0, &bVar1, &bVar2, &bVar3, &bVar4, &uVar5, &uVar6, &uVar7))
		{
			if ((((!bVar0 || !bVar1) || !bVar2) || !bVar3) || !bVar4)
			{
				ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), true, true, true, true, true, false, false, false);
				VEHICLE::SET_DISABLE_WEAPON_BLADE_FORCES(true);
			}
		}
	}
	__LIB_6__.func_404(&(uParam0->f_22.f_94));
}

int func_881()//Position - 0x129AC1
{
	return __LIB_7__.func_297(func_3652(), 1, 0);
}

int func_882(int iParam0, bool bParam1)//Position - 0x12FF18
{
	var uVar0;
	if (iParam0 != __LIB_0__.func_160())
	{
		uVar0 = __LIB_3__.func_367(func_3815(iParam0, bParam1));
		return uVar0;
	}
	return joaat("sm_prop_smug_hgrdoors_light_a");
}

int func_883(var uParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x1596B3
{
	*uParam3 = 1;
	if (bParam2)
	{
		StringCopy(sParam1, __LIB_3__.func_525(uParam0, 1), 64);
		if ((__LIB_7__.func_501(4) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 31))) && (!__LIB_2__.func_232() || (__LIB_3__.func_803(PLAYER::PLAYER_ID()) != 225 && __LIB_3__.func_803(PLAYER::PLAYER_ID()) != 227)))
		{
			return 1;
		}
	}
	else
	{
		StringCopy(sParam1, "ciPI_TYPE_INVITE_TO_SIMPLE_INTERIOR - BUNKER", 64);
		if ((__LIB_7__.func_501(4) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 31))) && !func_4335(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

int func_884(int iParam0)//Position - 0x15A396
{
	switch (iParam0)
	{
		case 115:
			if (!__LIB_12__.func_249())
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_885(var uParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x176A89
{
	if (bParam2)
	{
		StringCopy(sParam1, __LIB_3__.func_610(uParam0, 1), 64);
	}
	else
	{
		StringCopy(sParam1, "ciPI_TYPE_INVITE_TO_SIMPLE_INTERIOR - IE_GARAGE", 64);
	}
	if (((__LIB_7__.func_501(1) && (BitTest(Global_1946250.f_506, 0) || BitTest(Global_1946250.f_506, 2))) && __LIB_2__.func_232()) && !func_4619(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

void func_886(int* iParam0, var uParam1, int* iParam2, bool bParam3)//Position - 0x18B86F
{
	__LIB_6__.func_466(iParam0);
	if (BitTest(*iParam0, 15))
	{
		MISC::CLEAR_BIT(iParam0, 15);
	}
	MISC::CLEAR_BIT(iParam0, 4);
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_4) && !BitTest(*iParam0, 27))
	{
		if ((((__LIB_2__.func_106(uParam1->f_31) == 5 || __LIB_2__.func_106(uParam1->f_31) == 4) || (((((BitTest(*iParam0, 3) && !__LIB_1__.func_188(uParam1->f_31)) && !__LIB_0__.func_630(uParam1->f_31, -1)) && !func_68(uParam1->f_31, 0, 0)) && !__LIB_3__.func_870(PLAYER::PLAYER_ID())) && !__LIB_5__.func_610(PLAYER::PLAYER_ID()))) || __LIB_4__.func_713(uParam1->f_31)) || __LIB_6__.func_465(uParam1->f_31))
		{
			if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0->f_4, false))
			{
				OBJECT::DELETE_OBJECT(&(iParam0->f_4));
			}
		}
	}
	else if (bParam3)
	{
		if (iParam2->f_8 != 3)
		{
			iParam0->f_4 = 0;
		}
	}
	if (HUD::IS_NAMED_RENDERTARGET_REGISTERED(__LIB_19__.func_940(iParam0, uParam1)))
	{
		HUD::RELEASE_NAMED_RENDERTARGET(__LIB_19__.func_940(iParam0, uParam1));
		if (Global_1958629)
		{
			Global_1958629 = 0;
		}
	}
	iParam0->f_2 = -1;
	MISC::CLEAR_BIT(iParam0, 5);
	MISC::CLEAR_BIT(iParam0, 27);
}

int func_887()//Position - 0x19582D
{
	if ((((((__LIB_0__.func_633() || __LIB_0__.func_185()) || __LIB_0__.func_175()) || __LIB_0__.func_725()) || __LIB_0__.func_490()) || __LIB_0__.func_974()) || func_5123())
	{
		return 1;
	}
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && BitTest(Global_4718592.f_36, 1))
	{
		return 1;
	}
	return 0;
}

int func_888(int* iParam0, var uParam1)//Position - 0x1B6AB3
{
	if (((!__LIB_1__.func_188(uParam1->f_31) && !__LIB_0__.func_630(uParam1->f_31, -1)) && !func_68(uParam1->f_31, 0, 0)) && !__LIB_7__.func_916(PLAYER::PLAYER_ID()))
	{
		if (!TASK::PED_HAS_USE_SCENARIO_TASK(PLAYER::PLAYER_PED_ID()))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), false);
			MISC::CLEAR_BIT(iParam0, 6);
			return 1;
		}
		else if (!BitTest(*iParam0, 6))
		{
			PED::SET_PED_SHOULD_IGNORE_SCENARIO_EXIT_COLLISION_CHECKS(PLAYER::PLAYER_PED_ID(), true);
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			MISC::SET_BIT(iParam0, 6);
		}
	}
	else if (((!__LIB_4__.func_958(PLAYER::PLAYER_ID()) && !iParam0->f_2481) && !iParam0->f_2482) && !iParam0->f_2483)
	{
		if (!__LIB_6__.func_561(PLAYER::PLAYER_ID()))
		{
			Global_32234 = 14;
		}
		return 1;
	}
	return 0;
}

int func_889(var uParam0)//Position - 0x1BCE7D
{
	int iVar0;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, __LIB_20__.func_872(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 1)
	{
		if (__LIB_6__.func_925())
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
		else if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	if (uParam0->f_1.f_1 == 3)
	{
		if (uParam0->f_9 >= 118 && uParam0->f_9 <= 122)
		{
			iVar0 = 2;
		}
	}
	if (uParam0->f_1.f_1 == 2)
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
		if (iVar0 >= 1)
		{
			iVar0++;
		}
	}
	return iVar0;
}

void func_890(int iParam0, char* sParam1)//Position - 0xEFC
{
	char cVar0[64];
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_10__.func_827(iParam0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/], 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_1, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_2, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_3, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_4, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_5, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_6, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_7, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_8, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_9, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_10, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_11, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_12, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_13, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
}

int func_891()//Position - 0x2B482
{
	return __LIB_0__.func_176(15);
}

int func_892()//Position - 0x2B4BC
{
	float fVar0;
	if (Global_95443 == -1)
	{
		Global_95443 = MISC::GET_GAME_TIMER();
	}
	if ((MISC::GET_GAME_TIMER() - Global_95443) > 240000)
	{
		Global_95443 = -1;
		return 1;
	}
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		fVar0 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), __LIB_11__.func_156(212, 0));
		if (fVar0 > 22500f)
		{
			Global_95443 = -1;
			return 1;
		}
	}
	return 0;
}

int func_893()//Position - 0x2B5C7
{
	if (__LIB_0__.func_176(88))
	{
		return 1;
	}
	else if (__LIB_8__.func_915(88))
	{
		return 1;
	}
	return 0;
}

void func_894(int iParam0, int iParam1, int iParam2)//Position - 0x3BF6C
{
	if (iParam2 == 0)
	{
		__LIB_0__.func_59(iParam0, 0);
	}
	Global_113386.f_9085.f_330[iParam0 /*6*/].f_3 = __LIB_0__.func_58();
	Global_113386.f_10016.f_21++;
	if (iParam2 == 0)
	{
		if (!BitTest(Global_91229[iParam0 /*34*/].f_15, 7))
		{
			if (iParam1 != joaat("CITIES_PASSED"))
			{
				STATS::STAT_SET_INT(iParam1, Global_113386.f_10016.f_21, true);
				if (!Global_78588)
				{
					STATS::PRESENCE_EVENT_UPDATESTAT_INT(iParam1, Global_113386.f_9085.f_330[iParam0 /*6*/].f_4, 0);
				}
			}
		}
	}
}

bool func_895(var uParam0, int iParam1)//Position - 0x8ADCC
{
	switch (iParam1)
	{
		case 19:
			return __LIB_0__.func_517(uParam0, 8);
			break;
		case 14:
			return __LIB_0__.func_517(uParam0, 16);
			break;
		case 17:
			return __LIB_0__.func_517(uParam0, 32);
			break;
	}
	return __LIB_11__.func_510(uParam0, iParam1);
}

void func_896()//Position - 0x8B90A
{
	StringCopy(&Global_103942, "", 32);
	__LIB_20__.func_577(&Global_103950);
}

var func_897(int iParam0, int iParam1, int iParam2)//Position - 0x8FEEC
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_7__.func_783(iParam2, iParam1);
	iVar2 = __LIB_0__.func_159(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
			}
			break;
		case 6:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

var func_898(int iParam0, int iParam1)//Position - 0x9BDD4
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_7__.func_250(iParam1);
	iVar2 = __LIB_0__.func_159(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

int func_899(int iParam0, int iParam1, var uParam2, float fParam3, bool bParam4)//Position - 0x5F23F
{
	if (bParam4)
	{
		if (__LIB_2__.func_598(iParam0, iParam1, uParam2, fParam3))
		{
			return 1;
		}
	}
	else if (__LIB_2__.func_597(iParam0, iParam1, uParam2, fParam3))
	{
		return 1;
	}
	return 0;
}

int func_900(int iParam0, bool bParam1)//Position - 0xAD1F1
{
	int iVar0;
	bool bVar1;
	iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
	if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && PED::IS_PED_A_PLAYER(iVar0)) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		bVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar0);
		if (__LIB_4__.func_136(bVar1))
		{
			if (bParam1 == bVar1)
			{
				if (!__LIB_4__.func_682(bVar1, 1) || __LIB_2__.func_192(bVar1))
				{
					if (!__LIB_4__.func_1(bVar1))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_901(int iParam0, int iParam1, var uParam2, float fParam3, bool bParam4)//Position - 0xBC4EE
{
	if (bParam4)
	{
		if (__LIB_2__.func_865(iParam0, iParam1, uParam2, fParam3))
		{
			return 1;
		}
	}
	else if (__LIB_2__.func_864(iParam0, iParam1, uParam2, fParam3))
	{
		return 1;
	}
	return 0;
}

int func_902(var uParam0, var uParam1)//Position - 0xDADE5
{
	if (__LIB_2__.func_459())
	{
		return 0;
	}
	if (Global_1946250.f_4539 != __LIB_0__.func_160())
	{
		MISC::SET_BIT(&(Global_1946250.f_4), 30);
		MISC::SET_BIT(&(Global_1946250.f_6), 20);
		MISC::SET_BIT(&(Global_1946250.f_6), 21);
		CAM::DO_SCREEN_FADE_OUT(500);
		return 1;
	}
	if (__LIB_2__.func_380())
	{
		return 0;
	}
	if ((Global_1966139 >= 10 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 0) && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 1)
	{
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
		return 1;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && !__LIB_1__.func_358(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && __LIB_1__.func_570(PLAYER::PLAYER_ID()))
		{
			if (__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 243)
			{
				if (__LIB_7__.func_468(PLAYER::PLAYER_ID()) == 10)
				{
					return 0;
				}
				else if (__LIB_7__.func_468(PLAYER::PLAYER_ID()) == 7)
				{
					return !__LIB_2__.func_232();
				}
			}
			return 1;
		}
	}
	return 0;
}

void func_903(int iParam0)//Position - 0xF87AF
{
	int iVar0;
	if ((MISC::GET_FRAME_COUNT() % 10) == 0 || iParam0)
	{
		iVar0 = __LIB_8__.func_670();
		if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && !__LIB_3__.func_64(PLAYER::PLAYER_ID()))
		{
			if (__LIB_7__.func_296(iVar0, 1, 0) == PLAYER::PLAYER_ID())
			{
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_11 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 3f, -1f, 0f) };
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_14 = (ENTITY::GET_ENTITY_HEADING(iVar0) + 90f);
				Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_584 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
			}
		}
	}
}

int func_904(int iParam0, int iParam1, var uParam2, float fParam3, int iParam4)//Position - 0x1160C5
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("avenger"))
		{
			if (__LIB_3__.func_279(iParam0, iParam1, uParam2, fParam3))
			{
				return 1;
			}
		}
		else if (__LIB_3__.func_278(iParam0, iParam1, uParam2, fParam3))
		{
			return 1;
		}
	}
	else
	{
		switch (iParam0)
		{
			case 89:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 1271.1602f, 2833.266f, 47.8505f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 1:
						*uParam2 = { 1273.8398f, 2832.4233f, 48.0445f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 2:
						*uParam2 = { 1270.497f, 2836.0203f, 47.8935f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 3:
						*uParam2 = { 1269.67f, 2838.6316f, 47.8761f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 4:
						*uParam2 = { 1273.3903f, 2830.4163f, 47.8672f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 5:
						*uParam2 = { 1275.721f, 2829.5957f, 47.8999f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 6:
						*uParam2 = { 1277.6819f, 2829.5085f, 47.9609f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 7:
						*uParam2 = { 1280.4639f, 2829.0627f, 47.9103f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 8:
						*uParam2 = { 1267.1508f, 2841.7852f, 47.3447f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 9:
						*uParam2 = { 1267.7216f, 2844.5002f, 47.1942f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 10:
						*uParam2 = { 1267.7954f, 2833.062f, 47.5218f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 11:
						*uParam2 = { 1269.3367f, 2831.0698f, 47.5911f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 12:
						*uParam2 = { 1271.4758f, 2829.37f, 47.604f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 13:
						*uParam2 = { 1274.2605f, 2828.1274f, 47.649f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 14:
						*uParam2 = { 1277.5673f, 2827.3584f, 47.6063f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 15:
						*uParam2 = { 1264.8711f, 2833.9558f, 47.3032f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 16:
						*uParam2 = { 1265.6638f, 2831.2053f, 47.3484f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 17:
						*uParam2 = { 1267.4194f, 2828.9055f, 47.4063f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 18:
						*uParam2 = { 1269.7595f, 2826.9675f, 47.2945f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 19:
						*uParam2 = { 1272.065f, 2825.643f, 47.2666f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 20:
						*uParam2 = { 1274.7452f, 2825.0208f, 47.1259f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 21:
						*uParam2 = { 1277.7849f, 2824.6013f, 46.9057f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 22:
						*uParam2 = { 1280.5153f, 2826.1396f, 47.3201f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 23:
						*uParam2 = { 1283.3723f, 2829.4346f, 48.0056f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 24:
						*uParam2 = { 1263.372f, 2839.304f, 46.6271f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 25:
						*uParam2 = { 1263.8484f, 2842.2322f, 46.2861f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 26:
						*uParam2 = { 1260.5125f, 2838.357f, 46.1413f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 27:
						*uParam2 = { 1264.5671f, 2828.6545f, 47.2464f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 28:
						*uParam2 = { 1266.4604f, 2826.1772f, 47.1594f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 29:
						*uParam2 = { 1268.7727f, 2824.4563f, 47.0579f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 30:
						*uParam2 = { 1271.6727f, 2822.6846f, 46.6212f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 31:
						*uParam2 = { 1263.0857f, 2831.7126f, 47.1414f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 32:
						*uParam2 = { 1274.4493f, 2821.8794f, 46.3532f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 33:
						*uParam2 = { 1278.2505f, 2822.0295f, 45.8105f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 34:
						*uParam2 = { 1257.9266f, 2836.171f, 45.9329f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 35:
						*uParam2 = { 1261.768f, 2829.1052f, 47.0479f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 36:
						*uParam2 = { 1263.1381f, 2826.045f, 47.0864f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 37:
						*uParam2 = { 1265.096f, 2823.6772f, 46.9271f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 38:
						*uParam2 = { 1267.2656f, 2821.8245f, 46.6793f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 39:
						*uParam2 = { 1269.6302f, 2820.2715f, 46.302f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 40:
						*uParam2 = { 1272.1984f, 2818.863f, 45.7096f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 41:
						*uParam2 = { 1254.949f, 2833.7646f, 45.64f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 42:
						*uParam2 = { 1251.7576f, 2831.2002f, 45.4054f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 43:
						*uParam2 = { 1259.9983f, 2826.0188f, 46.8389f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 44:
						*uParam2 = { 1261.7456f, 2823.1477f, 46.8274f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 45:
						*uParam2 = { 1263.3832f, 2820.9856f, 46.6642f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 46:
						*uParam2 = { 1265.6178f, 2819.129f, 46.2592f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 47:
						*uParam2 = { 1259.0186f, 2829.0688f, 46.7152f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 48:
						*uParam2 = { 1258.4634f, 2823.2422f, 46.6085f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 49:
						*uParam2 = { 1260.092f, 2820.8743f, 46.5794f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 50:
						*uParam2 = { 1261.997f, 2818.4626f, 46.4136f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 51:
						*uParam2 = { 1257.1969f, 2826.3125f, 46.559f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 52:
						*uParam2 = { 1255.5438f, 2824.16f, 46.4224f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 53:
						*uParam2 = { 1256.0809f, 2821.4216f, 46.4761f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 54:
						*uParam2 = { 1258.0181f, 2818.9758f, 46.4332f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 55:
						*uParam2 = { 1259.4696f, 2817.2332f, 46.4864f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 56:
						*uParam2 = { 1262.8174f, 2816.5637f, 46.3312f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 57:
						*uParam2 = { 1266.1564f, 2817.0305f, 46.153f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 58:
						*uParam2 = { 1269.2313f, 2817.8052f, 45.9693f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 59:
						*uParam2 = { 1255.0479f, 2818.9023f, 46.3317f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 60:
						*uParam2 = { 1253.081f, 2820.9924f, 45.9622f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 61:
						*uParam2 = { 1251.611f, 2822.8125f, 45.9688f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 62:
						*uParam2 = { 1256.7363f, 2816.9163f, 46.4874f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 63:
						*uParam2 = { 1252.9531f, 2816.7393f, 46.6358f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 64:
						*uParam2 = { 1251.5098f, 2818.3994f, 46.503f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 65:
						*uParam2 = { 1249.928f, 2820.3816f, 46.5355f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 66:
						*uParam2 = { 1248.4032f, 2822.1917f, 46.4761f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 67:
						*uParam2 = { 1246.9503f, 2820.2607f, 46.7811f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 68:
						*uParam2 = { 1248.8966f, 2817.9114f, 46.8391f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 69:
						*uParam2 = { 1275.3718f, 2819.6348f, 45.4563f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 70:
						*uParam2 = { 1282.0243f, 2825.1968f, 47.0308f };
						*fParam3 = 129.1997f;
						return 1;
						break;
					case 71:
						*uParam2 = { 1285.3821f, 2827.975f, 47.624f };
						*fParam3 = 129.1997f;
						return 1;
						break;
				}
				break;
			case 90:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 35.5437f, 2623.2295f, 84.2188f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 1:
						*uParam2 = { 32.9167f, 2625.4622f, 84.2134f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 2:
						*uParam2 = { 37.3342f, 2620.4631f, 84.2037f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 3:
						*uParam2 = { 30.1834f, 2626.559f, 84.2997f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 4:
						*uParam2 = { 38.0149f, 2617.5173f, 84.3186f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 5:
						*uParam2 = { 27.7015f, 2627.266f, 84.4008f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 6:
						*uParam2 = { 38.0327f, 2614.2407f, 84.3178f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 7:
						*uParam2 = { 24.6532f, 2627.4126f, 84.4053f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 8:
						*uParam2 = { 37.1503f, 2611.212f, 84.3345f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 9:
						*uParam2 = { 35.5568f, 2625.9763f, 83.8171f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 10:
						*uParam2 = { 37.8448f, 2623.4946f, 83.8422f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 11:
						*uParam2 = { 32.8195f, 2627.5505f, 83.8353f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 12:
						*uParam2 = { 39.3883f, 2621.157f, 83.8174f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 13:
						*uParam2 = { 30.3211f, 2628.6584f, 83.9001f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 14:
						*uParam2 = { 40.2878f, 2618.735f, 83.7933f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 15:
						*uParam2 = { 24.8222f, 2630.0151f, 83.8101f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 16:
						*uParam2 = { 40.6101f, 2616.5037f, 83.7581f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 17:
						*uParam2 = { 37.6416f, 2627.4294f, 83.3106f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 18:
						*uParam2 = { 35.0318f, 2628.5134f, 83.4792f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 19:
						*uParam2 = { 40.6369f, 2623.7314f, 83.2034f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 20:
						*uParam2 = { 41.9683f, 2620.8643f, 83.17f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 21:
						*uParam2 = { 32.3126f, 2629.9304f, 83.5501f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 22:
						*uParam2 = { 27.77f, 2629.873f, 83.7815f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 23:
						*uParam2 = { 42.7141f, 2617.9863f, 83.2981f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 24:
						*uParam2 = { 42.5406f, 2614.4224f, 83.3236f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 25:
						*uParam2 = { 40.552f, 2613.2444f, 83.717f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 26:
						*uParam2 = { 29.6422f, 2631.3296f, 83.4576f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 27:
						*uParam2 = { 22.763f, 2627.366f, 82.575f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 28:
						*uParam2 = { 26.3505f, 2632.273f, 83.4005f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 29:
						*uParam2 = { 39.4551f, 2625.8347f, 83.2519f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 30:
						*uParam2 = { 36.8621f, 2608.4702f, 84.0349f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 31:
						*uParam2 = { 40.0184f, 2610.173f, 83.6425f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 32:
						*uParam2 = { 42.3575f, 2611.8154f, 83.2879f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 33:
						*uParam2 = { 42.1317f, 2626.3193f, 82.6647f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 34:
						*uParam2 = { 43.1532f, 2623.8215f, 82.6026f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 35:
						*uParam2 = { 44.0968f, 2620.3962f, 82.7017f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 36:
						*uParam2 = { 39.4643f, 2628.6355f, 82.8733f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 37:
						*uParam2 = { 37.049f, 2630.2803f, 83.0204f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 38:
						*uParam2 = { 34.8206f, 2631.5657f, 83.131f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 39:
						*uParam2 = { 32.0568f, 2632.8528f, 82.9773f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 40:
						*uParam2 = { 44.6489f, 2617.4473f, 82.8689f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 41:
						*uParam2 = { 44.7777f, 2614.597f, 82.8734f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 42:
						*uParam2 = { 29.4126f, 2633.733f, 82.9957f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 43:
						*uParam2 = { 42.5732f, 2628.955f, 82.1672f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 44:
						*uParam2 = { 44.4737f, 2626.3853f, 82.0845f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 45:
						*uParam2 = { 45.2446f, 2622.923f, 82.1763f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 46:
						*uParam2 = { 46.549f, 2619.9521f, 82.3185f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 47:
						*uParam2 = { 39.4283f, 2631.142f, 82.5992f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 48:
						*uParam2 = { 36.9975f, 2632.7434f, 82.7883f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 49:
						*uParam2 = { 34.6615f, 2633.9753f, 82.6595f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 50:
						*uParam2 = { 31.8639f, 2635.6304f, 82.4682f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 51:
						*uParam2 = { 46.8436f, 2617.114f, 82.4794f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 52:
						*uParam2 = { 47.0039f, 2614.436f, 82.4734f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 53:
						*uParam2 = { 45.5745f, 2629.1243f, 81.3919f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 54:
						*uParam2 = { 46.9903f, 2626.0166f, 81.6138f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 55:
						*uParam2 = { 48.016f, 2622.649f, 81.7077f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 56:
						*uParam2 = { 42.5706f, 2631.644f, 81.7278f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 57:
						*uParam2 = { 39.7644f, 2633.5422f, 82.1933f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 58:
						*uParam2 = { 37.4368f, 2635.0132f, 82.5247f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 59:
						*uParam2 = { 34.7839f, 2636.7842f, 82.3268f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 60:
						*uParam2 = { 48.6319f, 2619.6985f, 81.9456f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 61:
						*uParam2 = { 49.3742f, 2616.338f, 82.0401f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 62:
						*uParam2 = { 48.5621f, 2628.4478f, 80.8926f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 63:
						*uParam2 = { 45.9182f, 2632.3997f, 80.7741f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 64:
						*uParam2 = { 50.0325f, 2625.0498f, 81.1307f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 65:
						*uParam2 = { 50.8857f, 2621.941f, 81.3004f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 66:
						*uParam2 = { 51.0694f, 2618.8406f, 81.5163f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 67:
						*uParam2 = { 43.1369f, 2634.4421f, 81.3043f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 68:
						*uParam2 = { 40.8588f, 2636.0005f, 81.6803f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 69:
						*uParam2 = { 37.4032f, 2638.234f, 82.0182f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 70:
						*uParam2 = { 50.6751f, 2629.3667f, 80.2925f };
						*fParam3 = 313.3997f;
						return 1;
						break;
					case 71:
						*uParam2 = { 53.2798f, 2631.1514f, 79.4363f };
						*fParam3 = 313.3997f;
						return 1;
						break;
				}
				break;
			case 91:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 2751.0974f, 3905.6992f, 43.5366f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 1:
						*uParam2 = { 2753.2856f, 3903.5781f, 43.8065f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 2:
						*uParam2 = { 2755.3296f, 3901.586f, 43.9002f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 3:
						*uParam2 = { 2757.8047f, 3900.9646f, 44.0416f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 4:
						*uParam2 = { 2749.198f, 3908.2583f, 43.2462f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 5:
						*uParam2 = { 2764.3748f, 3898.9119f, 44.0617f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 6:
						*uParam2 = { 2749.9453f, 3902.369f, 43.3682f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 7:
						*uParam2 = { 2748.0188f, 3905.2007f, 43.2457f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 8:
						*uParam2 = { 2745.9998f, 3911.7505f, 42.5635f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 9:
						*uParam2 = { 2746.3755f, 3914.8345f, 42.3922f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 10:
						*uParam2 = { 2747.3542f, 3918.5493f, 42.5865f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 11:
						*uParam2 = { 2752.7231f, 3900.4346f, 43.5586f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 12:
						*uParam2 = { 2755.2375f, 3899.0203f, 43.6342f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 13:
						*uParam2 = { 2758.1338f, 3898.3892f, 43.7535f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 14:
						*uParam2 = { 2761.0906f, 3898.3796f, 43.9451f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 15:
						*uParam2 = { 2752.0747f, 3897.0486f, 43.1943f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 16:
						*uParam2 = { 2746.809f, 3901.9822f, 43.0561f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 17:
						*uParam2 = { 2746.6982f, 3908.5981f, 42.9066f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 18:
						*uParam2 = { 2743.3044f, 3912.4497f, 42.298f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 19:
						*uParam2 = { 2744.7998f, 3916.766f, 42.3995f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 20:
						*uParam2 = { 2754.953f, 3896.0254f, 43.269f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 21:
						*uParam2 = { 2758.3557f, 3895.0107f, 43.3702f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 22:
						*uParam2 = { 2761.2769f, 3894.831f, 43.4694f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 23:
						*uParam2 = { 2764.141f, 3895.268f, 43.5008f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 24:
						*uParam2 = { 2748.9377f, 3899.4556f, 43.1068f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 25:
						*uParam2 = { 2745.503f, 3905.6042f, 43.067f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 26:
						*uParam2 = { 2743.9531f, 3908.3984f, 42.5953f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 27:
						*uParam2 = { 2760.5835f, 3900.6477f, 44.1841f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 28:
						*uParam2 = { 2763.648f, 3901.0103f, 44.2701f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 29:
						*uParam2 = { 2748.3696f, 3911.5298f, 42.849f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 30:
						*uParam2 = { 2748.3428f, 3914.5188f, 42.731f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 31:
						*uParam2 = { 2748.965f, 3917.4236f, 42.8464f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 32:
						*uParam2 = { 2753.8806f, 3906.3196f, 44.013f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 33:
						*uParam2 = { 2755.812f, 3904.498f, 44.1247f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 34:
						*uParam2 = { 2752.1672f, 3908.9233f, 43.9039f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 35:
						*uParam2 = { 2758.4736f, 3903.3123f, 44.1842f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 36:
						*uParam2 = { 2760.9504f, 3902.6458f, 44.2296f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 37:
						*uParam2 = { 2750.977f, 3911.834f, 43.5978f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 38:
						*uParam2 = { 2750.7817f, 3915.203f, 43.5946f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 39:
						*uParam2 = { 2764.9006f, 3902.928f, 44.2664f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 40:
						*uParam2 = { 2751.1052f, 3919.0847f, 43.443f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 41:
						*uParam2 = { 2745.1055f, 3898.4065f, 42.9139f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 42:
						*uParam2 = { 2748.2366f, 3896.0679f, 42.9645f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 43:
						*uParam2 = { 2743.6433f, 3902.0242f, 42.9121f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 44:
						*uParam2 = { 2742.4895f, 3905.2983f, 42.8205f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 45:
						*uParam2 = { 2741.308f, 3909.4883f, 42.4016f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 46:
						*uParam2 = { 2751.9646f, 3894.2546f, 43.0172f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 47:
						*uParam2 = { 2755.3445f, 3893.6313f, 43.138f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 48:
						*uParam2 = { 2759.2693f, 3892.8657f, 43.2631f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 49:
						*uParam2 = { 2762.5881f, 3892.754f, 43.4014f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 50:
						*uParam2 = { 2741.1296f, 3914.2327f, 42.4969f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 51:
						*uParam2 = { 2741.53f, 3898.5276f, 42.8258f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 52:
						*uParam2 = { 2740.2334f, 3902.223f, 42.8216f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 53:
						*uParam2 = { 2739.4766f, 3906.4822f, 42.7914f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 54:
						*uParam2 = { 2738.9502f, 3910.7134f, 42.52f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 55:
						*uParam2 = { 2738.2036f, 3899.7346f, 42.7786f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 56:
						*uParam2 = { 2737.1448f, 3902.989f, 42.7715f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 57:
						*uParam2 = { 2736.1294f, 3907.3137f, 42.699f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 58:
						*uParam2 = { 2736.6453f, 3912.3418f, 42.6994f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 59:
						*uParam2 = { 2733.824f, 3901.8413f, 42.721f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 60:
						*uParam2 = { 2733.386f, 3905.1958f, 42.7453f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 61:
						*uParam2 = { 2733.7373f, 3909.301f, 42.7629f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 62:
						*uParam2 = { 2738.4587f, 3915.1428f, 42.6679f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 63:
						*uParam2 = { 2768.3982f, 3903.1287f, 44.1981f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 64:
						*uParam2 = { 2766.832f, 3900.9316f, 44.1516f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 65:
						*uParam2 = { 2766.6995f, 3897.529f, 43.8105f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 66:
						*uParam2 = { 2765.3008f, 3892.903f, 43.4769f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 67:
						*uParam2 = { 2733.521f, 3912.2544f, 42.8367f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 68:
						*uParam2 = { 2730.4836f, 3909.7227f, 42.7852f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 69:
						*uParam2 = { 2730.8237f, 3907.101f, 42.7568f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 70:
						*uParam2 = { 2731.1475f, 3903.4312f, 42.735f };
						*fParam3 = 127.6f;
						return 1;
						break;
					case 71:
						*uParam2 = { 2728.5374f, 3904.3833f, 42.8372f };
						*fParam3 = 127.6f;
						return 1;
						break;
				}
				break;
			case 92:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 3388.1616f, 5504.3823f, 24.719f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 1:
						*uParam2 = { 3388.6536f, 5501.042f, 24.6321f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 2:
						*uParam2 = { 3388.4978f, 5507.7285f, 24.8161f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 3:
						*uParam2 = { 3390.0056f, 5498.268f, 24.6607f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 4:
						*uParam2 = { 3391.8418f, 5495.683f, 24.5606f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 5:
						*uParam2 = { 3388.8071f, 5495.661f, 24.3003f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 6:
						*uParam2 = { 3383.4788f, 5504.003f, 23.4899f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 7:
						*uParam2 = { 3388.898f, 5510.889f, 24.6925f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 8:
						*uParam2 = { 3386.6338f, 5497.827f, 24.0441f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 9:
						*uParam2 = { 3381.7563f, 5498.6226f, 23.2568f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 10:
						*uParam2 = { 3386.5764f, 5493.7935f, 23.7565f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 11:
						*uParam2 = { 3383.2097f, 5507.192f, 23.3137f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 12:
						*uParam2 = { 3380.478f, 5500.609f, 22.9944f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 13:
						*uParam2 = { 3383.709f, 5510.281f, 23.276f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 14:
						*uParam2 = { 3384.511f, 5513.1763f, 23.0986f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 15:
						*uParam2 = { 3378.478f, 5511.342f, 21.789f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 16:
						*uParam2 = { 3379.3584f, 5502.7734f, 22.5579f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 17:
						*uParam2 = { 3385.4468f, 5501.002f, 23.9848f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 18:
						*uParam2 = { 3378.8135f, 5505.0654f, 22.2581f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 19:
						*uParam2 = { 3377.5134f, 5508.6255f, 21.7155f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 20:
						*uParam2 = { 3376.0889f, 5513.191f, 20.8923f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 21:
						*uParam2 = { 3377.9387f, 5516.016f, 21.328f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 22:
						*uParam2 = { 3389.5593f, 5513.3896f, 24.3813f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 23:
						*uParam2 = { 3391.715f, 5515.3496f, 24.3099f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 24:
						*uParam2 = { 3394f, 5517.3584f, 23.9949f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 25:
						*uParam2 = { 3386.2039f, 5516.0405f, 22.9526f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 26:
						*uParam2 = { 3389.524f, 5517.996f, 23.1304f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 27:
						*uParam2 = { 3379.9019f, 5514.1494f, 21.9795f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 28:
						*uParam2 = { 3382.2488f, 5516.415f, 22.2272f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 29:
						*uParam2 = { 3385.2085f, 5518.8853f, 22.0981f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 30:
						*uParam2 = { 3375.5232f, 5510.3057f, 21.0884f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 31:
						*uParam2 = { 3372.3877f, 5509.4146f, 20.5299f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 32:
						*uParam2 = { 3372.2178f, 5512.5835f, 20.2334f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 33:
						*uParam2 = { 3374.0007f, 5516.319f, 20.1482f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 34:
						*uParam2 = { 3369.167f, 5509.3135f, 20.227f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 35:
						*uParam2 = { 3369.275f, 5513.002f, 19.8691f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 36:
						*uParam2 = { 3369.6292f, 5516.811f, 19.608f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 37:
						*uParam2 = { 3365.9172f, 5508.7075f, 19.6604f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 38:
						*uParam2 = { 3365.623f, 5512.7837f, 19.1774f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 39:
						*uParam2 = { 3365.9685f, 5515.9136f, 19.0932f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 40:
						*uParam2 = { 3361.0632f, 5506.9326f, 18.0267f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 41:
						*uParam2 = { 3360.7683f, 5510.668f, 17.7068f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 42:
						*uParam2 = { 3360.4412f, 5514.057f, 17.5631f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 43:
						*uParam2 = { 3357.7012f, 5502.733f, 18.1952f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 44:
						*uParam2 = { 3357.2566f, 5506.463f, 17.7884f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 45:
						*uParam2 = { 3356.6865f, 5509.801f, 17.6763f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 46:
						*uParam2 = { 3356.1746f, 5512.617f, 17.5359f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 47:
						*uParam2 = { 3386.434f, 5502.8745f, 24.2653f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 48:
						*uParam2 = { 3385.9692f, 5505.866f, 24.1118f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 49:
						*uParam2 = { 3386.2354f, 5509.207f, 24.0966f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 50:
						*uParam2 = { 3386.7961f, 5512.916f, 23.7779f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 51:
						*uParam2 = { 3388.8245f, 5515.874f, 23.5651f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 52:
						*uParam2 = { 3380.7942f, 5508.786f, 22.6091f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 53:
						*uParam2 = { 3380.9067f, 5505.3784f, 22.7751f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 54:
						*uParam2 = { 3381.9817f, 5512.4707f, 22.6257f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 55:
						*uParam2 = { 3383.9697f, 5515.4185f, 22.6581f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 56:
						*uParam2 = { 3380.5405f, 5518.323f, 21.6551f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 57:
						*uParam2 = { 3383.1855f, 5501.028f, 23.4904f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 58:
						*uParam2 = { 3384.234f, 5498.157f, 23.7106f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 59:
						*uParam2 = { 3371.207f, 5515.1104f, 19.9018f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 60:
						*uParam2 = { 3366.9753f, 5510.837f, 19.7014f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 61:
						*uParam2 = { 3362.6228f, 5513.2544f, 18.194f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 62:
						*uParam2 = { 3362.902f, 5509.3633f, 18.3867f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 63:
						*uParam2 = { 3358.5344f, 5508.2915f, 17.6341f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 64:
						*uParam2 = { 3358.3218f, 5511.715f, 17.4145f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 65:
						*uParam2 = { 3359.7312f, 5504.881f, 17.9897f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 66:
						*uParam2 = { 3363.9097f, 5506.6025f, 19.0835f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 67:
						*uParam2 = { 3382.2483f, 5520.138f, 21.5413f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 68:
						*uParam2 = { 3354.6755f, 5511.0103f, 17.9244f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 69:
						*uParam2 = { 3355.1965f, 5507.8623f, 18.0306f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 70:
						*uParam2 = { 3355.7578f, 5504.553f, 18.2431f };
						*fParam3 = 81.3999f;
						return 1;
						break;
					case 71:
						*uParam2 = { 3355.9453f, 5500.8623f, 18.4433f };
						*fParam3 = 81.3999f;
						return 1;
						break;
				}
				break;
			case 93:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 22.651f, 6818.573f, 14.131f };
						*fParam3 = 249f;
						return 1;
						break;
					case 1:
						*uParam2 = { 20.692f, 6821.736f, 14.191f };
						*fParam3 = 249f;
						return 1;
						break;
					case 2:
						*uParam2 = { 19.414f, 6819.553f, 14.167f };
						*fParam3 = 249f;
						return 1;
						break;
					case 3:
						*uParam2 = { 21.954f, 6824.12f, 14.169f };
						*fParam3 = 249f;
						return 1;
						break;
					case 4:
						*uParam2 = { 17.198f, 6818.56f, 14.225f };
						*fParam3 = 249f;
						return 1;
						break;
					case 5:
						*uParam2 = { 27.241f, 6824.966f, 13.825f };
						*fParam3 = 249f;
						return 1;
						break;
					case 6:
						*uParam2 = { 23.047f, 6826.607f, 14.028f };
						*fParam3 = 249f;
						return 1;
						break;
					case 7:
						*uParam2 = { 20.515f, 6817.25f, 14.191f };
						*fParam3 = 249f;
						return 1;
						break;
					case 8:
						*uParam2 = { 14.725f, 6817.731f, 14.283f };
						*fParam3 = 249f;
						return 1;
						break;
					case 9:
						*uParam2 = { 23.838f, 6829.285f, 13.89f };
						*fParam3 = 249f;
						return 1;
						break;
					case 10:
						*uParam2 = { 27.838f, 6821.065f, 14.235f };
						*fParam3 = 249f;
						return 1;
						break;
					case 11:
						*uParam2 = { 26.351f, 6818.526f, 14.29f };
						*fParam3 = 249f;
						return 1;
						break;
					case 12:
						*uParam2 = { 24.295f, 6816.979f, 14.226f };
						*fParam3 = 249f;
						return 1;
						break;
					case 13:
						*uParam2 = { 21.728f, 6815.263f, 14.303f };
						*fParam3 = 249f;
						return 1;
						break;
					case 14:
						*uParam2 = { 23.972f, 6820.442f, 14.041f };
						*fParam3 = 249f;
						return 1;
						break;
					case 15:
						*uParam2 = { 25.547f, 6823.074f, 13.916f };
						*fParam3 = 249f;
						return 1;
						break;
					case 16:
						*uParam2 = { 27.003f, 6827.756f, 13.695f };
						*fParam3 = 249f;
						return 1;
						break;
					case 17:
						*uParam2 = { 27.129f, 6831.114f, 13.506f };
						*fParam3 = 249f;
						return 1;
						break;
					case 18:
						*uParam2 = { 17.69f, 6816.437f, 14.049f };
						*fParam3 = 249f;
						return 1;
						break;
					case 19:
						*uParam2 = { 11.751f, 6816.562f, 14.251f };
						*fParam3 = 249f;
						return 1;
						break;
					case 20:
						*uParam2 = { 15.504f, 6814.849f, 14.01f };
						*fParam3 = 249f;
						return 1;
						break;
					case 21:
						*uParam2 = { 31.327f, 6819.49f, 14.682f };
						*fParam3 = 249f;
						return 1;
						break;
					case 22:
						*uParam2 = { 29.244f, 6817.577f, 14.679f };
						*fParam3 = 249f;
						return 1;
						break;
					case 23:
						*uParam2 = { 30.234f, 6822.535f, 14.224f };
						*fParam3 = 249f;
						return 1;
						break;
					case 24:
						*uParam2 = { 30.465f, 6825.878f, 13.906f };
						*fParam3 = 249f;
						return 1;
						break;
					case 25:
						*uParam2 = { 30.038f, 6829.064f, 13.585f };
						*fParam3 = 249f;
						return 1;
						break;
					case 26:
						*uParam2 = { 27.511f, 6815.661f, 14.727f };
						*fParam3 = 249f;
						return 1;
						break;
					case 27:
						*uParam2 = { 24.795f, 6814.305f, 14.375f };
						*fParam3 = 249f;
						return 1;
						break;
					case 28:
						*uParam2 = { 17.82f, 6813.205f, 14.141f };
						*fParam3 = 249f;
						return 1;
						break;
					case 29:
						*uParam2 = { 30.131f, 6831.814f, 13.386f };
						*fParam3 = 249f;
						return 1;
						break;
					case 30:
						*uParam2 = { 23.756f, 6832.424f, 13.694f };
						*fParam3 = 249f;
						return 1;
						break;
					case 31:
						*uParam2 = { 23.27f, 6834.917f, 13.52f };
						*fParam3 = 249f;
						return 1;
						break;
					case 32:
						*uParam2 = { 21.215f, 6837.258f, 13.489f };
						*fParam3 = 249f;
						return 1;
						break;
					case 33:
						*uParam2 = { 27.08f, 6833.636f, 13.332f };
						*fParam3 = 249f;
						return 1;
						break;
					case 34:
						*uParam2 = { 26.447f, 6835.902f, 13.21f };
						*fParam3 = 249f;
						return 1;
						break;
					case 35:
						*uParam2 = { 24.441f, 6838.05f, 13.059f };
						*fParam3 = 249f;
						return 1;
						break;
					case 36:
						*uParam2 = { 29.354f, 6837.743f, 13.022f };
						*fParam3 = 249f;
						return 1;
						break;
					case 37:
						*uParam2 = { 30.602f, 6834.6f, 13.2f };
						*fParam3 = 249f;
						return 1;
						break;
					case 38:
						*uParam2 = { 32.922f, 6821.413f, 14.682f };
						*fParam3 = 249f;
						return 1;
						break;
					case 39:
						*uParam2 = { 34.967f, 6827.123f, 14.052f };
						*fParam3 = 249f;
						return 1;
						break;
					case 40:
						*uParam2 = { 38.513f, 6826.462f, 14.325f };
						*fParam3 = 249f;
						return 1;
						break;
					case 41:
						*uParam2 = { 34.691f, 6833.21f, 13.488f };
						*fParam3 = 249f;
						return 1;
						break;
					case 42:
						*uParam2 = { 39.248f, 6833.574f, 13.595f };
						*fParam3 = 249f;
						return 1;
						break;
					case 43:
						*uParam2 = { 36.397f, 6820.616f, 15.09f };
						*fParam3 = 249f;
						return 1;
						break;
					case 44:
						*uParam2 = { 34.526f, 6818.045f, 15.365f };
						*fParam3 = 249f;
						return 1;
						break;
					case 45:
						*uParam2 = { 32.299f, 6816.086f, 15.446f };
						*fParam3 = 249f;
						return 1;
						break;
					case 46:
						*uParam2 = { 30.581f, 6814.107f, 15.255f };
						*fParam3 = 249f;
						return 1;
						break;
					case 47:
						*uParam2 = { 27.933f, 6812.444f, 14.957f };
						*fParam3 = 249f;
						return 1;
						break;
					case 48:
						*uParam2 = { 37.584f, 6818.183f, 15.665f };
						*fParam3 = 249f;
						return 1;
						break;
					case 49:
						*uParam2 = { 38.989f, 6820.427f, 15.386f };
						*fParam3 = 249f;
						return 1;
						break;
					case 50:
						*uParam2 = { 40.47f, 6823.521f, 14.967f };
						*fParam3 = 249f;
						return 1;
						break;
					case 51:
						*uParam2 = { 41.635f, 6827.435f, 14.341f };
						*fParam3 = 249f;
						return 1;
						break;
					case 52:
						*uParam2 = { 35.735f, 6815.361f, 16.023f };
						*fParam3 = 249f;
						return 1;
						break;
					case 53:
						*uParam2 = { 33.609f, 6813.269f, 16.1f };
						*fParam3 = 249f;
						return 1;
						break;
					case 54:
						*uParam2 = { 31.287f, 6811.328f, 15.862f };
						*fParam3 = 249f;
						return 1;
						break;
					case 55:
						*uParam2 = { 28.122f, 6809.643f, 16.049f };
						*fParam3 = 249f;
						return 1;
						break;
					case 56:
						*uParam2 = { 26.074f, 6811.51f, 14.848f };
						*fParam3 = 249f;
						return 1;
						break;
					case 57:
						*uParam2 = { 31.256f, 6809.038f, 16.796f };
						*fParam3 = 249f;
						return 1;
						break;
					case 58:
						*uParam2 = { 33.583f, 6810.505f, 16.686f };
						*fParam3 = 249f;
						return 1;
						break;
					case 59:
						*uParam2 = { 41.894f, 6831.13f, 13.881f };
						*fParam3 = 249f;
						return 1;
						break;
					case 60:
						*uParam2 = { 36.457f, 6812.514f, 16.692f };
						*fParam3 = 249f;
						return 1;
						break;
					case 61:
						*uParam2 = { 38.208f, 6814.663f, 16.488f };
						*fParam3 = 249f;
						return 1;
						break;
					case 62:
						*uParam2 = { 40.03f, 6817f, 16.248f };
						*fParam3 = 249f;
						return 1;
						break;
					case 63:
						*uParam2 = { 42.071f, 6819.324f, 15.851f };
						*fParam3 = 249f;
						return 1;
						break;
					case 64:
						*uParam2 = { 34.355f, 6808.291f, 17.702f };
						*fParam3 = 249f;
						return 1;
						break;
					case 65:
						*uParam2 = { 36.718f, 6809.876f, 17.571f };
						*fParam3 = 249f;
						return 1;
						break;
					case 66:
						*uParam2 = { 39.215f, 6811.653f, 17.421f };
						*fParam3 = 249f;
						return 1;
						break;
					case 67:
						*uParam2 = { 41.796f, 6813.66f, 17.205f };
						*fParam3 = 249f;
						return 1;
						break;
					case 68:
						*uParam2 = { 43.952f, 6816.292f, 16.768f };
						*fParam3 = 249f;
						return 1;
						break;
					case 69:
						*uParam2 = { 46.276f, 6818.683f, 16.331f };
						*fParam3 = 249f;
						return 1;
						break;
					case 70:
						*uParam2 = { 44.914f, 6813.21f, 17.709f };
						*fParam3 = 249f;
						return 1;
						break;
					case 71:
						*uParam2 = { 43.249f, 6811.111f, 18.018f };
						*fParam3 = 249f;
						return 1;
						break;
				}
				break;
			case 94:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { -2229.391f, 2397.5696f, 11.2311f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 1:
						*uParam2 = { -2226.695f, 2398.1125f, 11.2385f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 2:
						*uParam2 = { -2232.3289f, 2397.5405f, 11.0408f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 3:
						*uParam2 = { -2224.2375f, 2399.2703f, 11.1047f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 4:
						*uParam2 = { -2234.588f, 2398.6506f, 10.9419f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 5:
						*uParam2 = { -2222.3486f, 2401.0422f, 10.9417f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 6:
						*uParam2 = { -2220.4636f, 2403.047f, 10.8232f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 7:
						*uParam2 = { -2237.0596f, 2399.4885f, 10.8581f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 8:
						*uParam2 = { -2239.4094f, 2401.5674f, 10.8158f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 9:
						*uParam2 = { -2227.7402f, 2395.4604f, 11.5855f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 10:
						*uParam2 = { -2230.8154f, 2395.127f, 11.4438f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 11:
						*uParam2 = { -2225.055f, 2396.6033f, 11.505f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 12:
						*uParam2 = { -2222.7427f, 2397.6926f, 11.256f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 13:
						*uParam2 = { -2233.6914f, 2396.0393f, 11.0873f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 14:
						*uParam2 = { -2236.268f, 2397.0784f, 10.9059f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 15:
						*uParam2 = { -2221.0151f, 2399.122f, 11.0179f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 16:
						*uParam2 = { -2219.4194f, 2400.147f, 10.9312f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 17:
						*uParam2 = { -2239.0613f, 2398.3054f, 10.6641f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 18:
						*uParam2 = { -2229.1199f, 2392.9917f, 11.9076f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 19:
						*uParam2 = { -2226.3933f, 2393.5454f, 11.9546f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 20:
						*uParam2 = { -2232.293f, 2393.2012f, 11.6186f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 21:
						*uParam2 = { -2223.6045f, 2394.491f, 11.8894f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 22:
						*uParam2 = { -2220.8503f, 2395.9983f, 11.4596f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 23:
						*uParam2 = { -2235.3794f, 2394.1843f, 11.1772f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 24:
						*uParam2 = { -2238.3618f, 2395.048f, 10.75f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 25:
						*uParam2 = { -2219.0898f, 2397.1704f, 11.0786f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 26:
						*uParam2 = { -2227.451f, 2391.0557f, 12.3116f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 27:
						*uParam2 = { -2225.0342f, 2391.6858f, 12.4443f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 28:
						*uParam2 = { -2230.79f, 2390.879f, 12.0561f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 29:
						*uParam2 = { -2222.3062f, 2392.8306f, 12.3218f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 30:
						*uParam2 = { -2233.8982f, 2391.2954f, 11.6932f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 31:
						*uParam2 = { -2220.1167f, 2393.8984f, 12.0115f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 32:
						*uParam2 = { -2236.8718f, 2391.825f, 11.1514f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 33:
						*uParam2 = { -2228.9265f, 2388.6443f, 12.6394f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 34:
						*uParam2 = { -2225.9285f, 2389.1448f, 12.8349f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 35:
						*uParam2 = { -2223.18f, 2390.0813f, 12.944f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 36:
						*uParam2 = { -2232.1318f, 2388.9976f, 12.105f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 37:
						*uParam2 = { -2235.8083f, 2389.3247f, 11.512f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 38:
						*uParam2 = { -2220.373f, 2391.4888f, 12.6572f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 39:
						*uParam2 = { -2227.1538f, 2386.7656f, 13.3524f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 40:
						*uParam2 = { -2224.2593f, 2387.372f, 13.4064f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 41:
						*uParam2 = { -2230.4233f, 2386.4082f, 13.0748f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 42:
						*uParam2 = { -2221.363f, 2388.6218f, 13.4145f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 43:
						*uParam2 = { -2234.1753f, 2386.4016f, 12.4966f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 44:
						*uParam2 = { -2219.5242f, 2389.4368f, 13.1914f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 45:
						*uParam2 = { -2236.8835f, 2386.9177f, 11.6504f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 46:
						*uParam2 = { -2229.9592f, 2384.0994f, 13.7233f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 47:
						*uParam2 = { -2225.1353f, 2384.744f, 14.1128f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 48:
						*uParam2 = { -2222.3787f, 2385.7356f, 14.037f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 49:
						*uParam2 = { -2233.2407f, 2383.523f, 13.4595f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 50:
						*uParam2 = { -2219.9507f, 2386.7324f, 13.8671f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 51:
						*uParam2 = { -2235.4944f, 2384.403f, 12.7243f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 52:
						*uParam2 = { -2226.7134f, 2382.1138f, 14.6963f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 53:
						*uParam2 = { -2223.7295f, 2382.4912f, 14.7223f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 54:
						*uParam2 = { -2230.2751f, 2381.5505f, 14.5215f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 55:
						*uParam2 = { -2220.456f, 2383.3547f, 14.661f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 56:
						*uParam2 = { -2234.1604f, 2381.7732f, 13.9503f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 57:
						*uParam2 = { -2228.4067f, 2379.6768f, 15.1295f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 58:
						*uParam2 = { -2225.3298f, 2380.0876f, 15.184f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 59:
						*uParam2 = { -2222.002f, 2380.5261f, 15.235f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 60:
						*uParam2 = { -2218.5105f, 2381.0308f, 15.3455f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 61:
						*uParam2 = { -2218.3403f, 2384.3184f, 14.5635f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 62:
						*uParam2 = { -2232.204f, 2379.1663f, 14.873f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 63:
						*uParam2 = { -2235.7988f, 2379.568f, 14.2479f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 64:
						*uParam2 = { -2230.0442f, 2376.8347f, 15.5302f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 65:
						*uParam2 = { -2226.8787f, 2377.4246f, 15.6056f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 66:
						*uParam2 = { -2223.508f, 2378.1304f, 15.657f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 67:
						*uParam2 = { -2220.2915f, 2378.8284f, 15.7314f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 68:
						*uParam2 = { -2233.7832f, 2377.07f, 15.1765f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 69:
						*uParam2 = { -2217.7534f, 2378.4846f, 16.0174f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 70:
						*uParam2 = { -2236.3535f, 2377.0125f, 14.77f };
						*fParam3 = 186.5998f;
						return 1;
						break;
					case 71:
						*uParam2 = { -2227.6155f, 2384.3647f, 14.0066f };
						*fParam3 = 186.5998f;
						return 1;
						break;
				}
				break;
			case 95:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 2.9559f, 3344.2974f, 39.5231f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 1:
						*uParam2 = { 4.9233f, 3342.8032f, 39.2962f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 2:
						*uParam2 = { 6.0368f, 3340.5745f, 39.4402f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 3:
						*uParam2 = { 7.0319f, 3337.364f, 39.5465f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 4:
						*uParam2 = { 0.865f, 3345.6538f, 39.6006f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 5:
						*uParam2 = { -1.9838f, 3346.3132f, 39.7007f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 6:
						*uParam2 = { -5.2431f, 3346.486f, 39.8856f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 7:
						*uParam2 = { -8.5681f, 3345.7756f, 40.125f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 8:
						*uParam2 = { 7.2847f, 3334.593f, 39.6735f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 9:
						*uParam2 = { 6.3133f, 3345.5842f, 38.4188f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 10:
						*uParam2 = { 8.0149f, 3343.5557f, 38.3946f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 11:
						*uParam2 = { 9.0328f, 3340.344f, 38.6637f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 12:
						*uParam2 = { 9.8996f, 3337.3853f, 38.6453f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 13:
						*uParam2 = { 4.2651f, 3347.267f, 38.6107f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 14:
						*uParam2 = { 1.5763f, 3348.7273f, 38.7441f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 15:
						*uParam2 = { -1.477f, 3349.2227f, 38.9949f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 16:
						*uParam2 = { -5.0361f, 3349.3591f, 39.4227f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 17:
						*uParam2 = { -7.6208f, 3348.8389f, 39.6561f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 18:
						*uParam2 = { 11.0529f, 3343.1257f, 37.6575f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 19:
						*uParam2 = { 11.6617f, 3339.7993f, 37.8455f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 20:
						*uParam2 = { 11.7325f, 3335.8257f, 38.1546f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 21:
						*uParam2 = { 9.5201f, 3345.8835f, 37.5574f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 22:
						*uParam2 = { 7.4129f, 3348.1301f, 37.7218f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 23:
						*uParam2 = { 5.5117f, 3349.8516f, 37.7782f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 24:
						*uParam2 = { 2.6164f, 3351.4634f, 38.0264f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 25:
						*uParam2 = { -0.5662f, 3352.2712f, 38.4033f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 26:
						*uParam2 = { -3.7082f, 3351.7644f, 38.9341f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 27:
						*uParam2 = { 12.6381f, 3345.4885f, 36.8878f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 28:
						*uParam2 = { 13.9205f, 3342.0994f, 37.005f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 29:
						*uParam2 = { 13.9397f, 3338.521f, 37.2799f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 30:
						*uParam2 = { 11.4801f, 3348.8843f, 36.6927f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 31:
						*uParam2 = { 9.2576f, 3351.0322f, 37.0396f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 32:
						*uParam2 = { 6.6936f, 3352.6309f, 37.2579f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 33:
						*uParam2 = { 4.2026f, 3353.3904f, 37.5635f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 34:
						*uParam2 = { 1.3284f, 3354.406f, 37.8935f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 35:
						*uParam2 = { 14.0366f, 3347.9128f, 36.419f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 36:
						*uParam2 = { 14.9377f, 3344.5618f, 36.6378f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 37:
						*uParam2 = { 15.7987f, 3340.916f, 36.7178f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 38:
						*uParam2 = { 16.2116f, 3337.4768f, 36.866f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 39:
						*uParam2 = { 12.2547f, 3351.1748f, 36.5439f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 40:
						*uParam2 = { 10.2721f, 3353.4492f, 36.7376f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 41:
						*uParam2 = { 7.4438f, 3354.8447f, 37.0817f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 42:
						*uParam2 = { 4.6167f, 3356.2297f, 37.456f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 43:
						*uParam2 = { 15.2429f, 3350.816f, 36.213f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 44:
						*uParam2 = { 16.6443f, 3347.277f, 36.1566f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 45:
						*uParam2 = { 17.3986f, 3343.498f, 36.2871f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 46:
						*uParam2 = { 17.7991f, 3339.859f, 36.4898f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 47:
						*uParam2 = { 13.1833f, 3353.548f, 36.4547f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 48:
						*uParam2 = { 10.1313f, 3355.9414f, 36.8596f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 49:
						*uParam2 = { 7.7583f, 3357.1006f, 37.1938f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 50:
						*uParam2 = { 18.0334f, 3349.9534f, 36.0067f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 51:
						*uParam2 = { 18.8196f, 3346.4885f, 36.0732f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 52:
						*uParam2 = { 19.5308f, 3342.704f, 36.2424f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 53:
						*uParam2 = { 16.4778f, 3353.2944f, 36.157f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 54:
						*uParam2 = { 13.8388f, 3356.0967f, 36.5366f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 55:
						*uParam2 = { 19.3232f, 3352.4558f, 35.9956f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 56:
						*uParam2 = { 20.889f, 3349.3481f, 35.9482f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 57:
						*uParam2 = { 21.2707f, 3345.7026f, 36.0726f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 58:
						*uParam2 = { 17.5554f, 3355.6821f, 36.2423f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 59:
						*uParam2 = { 7.0842f, 3331.9465f, 39.6907f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 60:
						*uParam2 = { 10.2572f, 3333.8564f, 38.7169f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 61:
						*uParam2 = { 13.8006f, 3333.9138f, 37.6397f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 62:
						*uParam2 = { 19.3525f, 3337.302f, 36.5823f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 63:
						*uParam2 = { 20.5559f, 3339.7642f, 36.3966f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 64:
						*uParam2 = { 20.8126f, 3354.9104f, 36.1266f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 65:
						*uParam2 = { 22.3284f, 3352.2476f, 35.9994f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 66:
						*uParam2 = { 23.7986f, 3346.3674f, 36.0638f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 67:
						*uParam2 = { 25.9502f, 3346.3384f, 36.1102f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 68:
						*uParam2 = { 28.793f, 3346.075f, 36.1792f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 69:
						*uParam2 = { 24.8377f, 3353.6833f, 36.1142f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 70:
						*uParam2 = { 27.5445f, 3353.989f, 36.2078f };
						*fParam3 = 304.9976f;
						return 1;
						break;
					case 71:
						*uParam2 = { 23.8873f, 3338.8928f, 36.4143f };
						*fParam3 = 304.9976f;
						return 1;
						break;
				}
				break;
			case 96:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 2088.716f, 1761.805f, 102.7459f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 1:
						*uParam2 = { 2090.085f, 1759.7692f, 102.665f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 2:
						*uParam2 = { 2090.729f, 1757.4058f, 102.7376f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 3:
						*uParam2 = { 2091.2593f, 1754.6055f, 102.7174f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 4:
						*uParam2 = { 2090.9124f, 1751.8243f, 102.7941f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 5:
						*uParam2 = { 2086.8884f, 1763.7021f, 102.605f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 6:
						*uParam2 = { 2084.1914f, 1764.4224f, 102.7752f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 7:
						*uParam2 = { 2081.2036f, 1765.4229f, 102.861f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 8:
						*uParam2 = { 2091.6675f, 1761.2405f, 102.3413f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 9:
						*uParam2 = { 2092.6023f, 1758.6461f, 102.3652f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 10:
						*uParam2 = { 2092.8306f, 1756.005f, 102.4137f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 11:
						*uParam2 = { 2092.9434f, 1753.2646f, 102.4525f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 12:
						*uParam2 = { 2090.6082f, 1763.0116f, 102.3541f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 13:
						*uParam2 = { 2089.1626f, 1764.5531f, 102.3083f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 14:
						*uParam2 = { 2087.1025f, 1765.5913f, 102.2621f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 15:
						*uParam2 = { 2084.467f, 1766.2134f, 102.3925f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 16:
						*uParam2 = { 2093.8872f, 1760.2478f, 102.1165f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 17:
						*uParam2 = { 2094.3862f, 1757.1965f, 102.172f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 18:
						*uParam2 = { 2094.3662f, 1754.5903f, 102.2312f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 19:
						*uParam2 = { 2093.006f, 1762.5438f, 102.0864f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 20:
						*uParam2 = { 2091.731f, 1764.5216f, 102.1204f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 21:
						*uParam2 = { 2089.549f, 1766.5216f, 102.0708f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 22:
						*uParam2 = { 2087.342f, 1767.3484f, 102.0586f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 23:
						*uParam2 = { 2096.504f, 1755.587f, 102.0255f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 24:
						*uParam2 = { 2095.6104f, 1752.8127f, 102.1444f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 25:
						*uParam2 = { 2096.38f, 1758.5002f, 101.9672f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 26:
						*uParam2 = { 2095.844f, 1761.2625f, 101.9232f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 27:
						*uParam2 = { 2094.8584f, 1763.6738f, 101.8812f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 28:
						*uParam2 = { 2093.0505f, 1766.3274f, 101.8449f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 29:
						*uParam2 = { 2090.7695f, 1767.5951f, 101.8628f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 30:
						*uParam2 = { 2098.2532f, 1759.6656f, 101.9109f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 31:
						*uParam2 = { 2098.178f, 1756.9022f, 101.9277f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 32:
						*uParam2 = { 2097.7246f, 1753.756f, 101.9977f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 33:
						*uParam2 = { 2097.681f, 1762.2745f, 101.9068f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 34:
						*uParam2 = { 2096.6738f, 1764.8345f, 101.8075f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 35:
						*uParam2 = { 2095.445f, 1766.7247f, 101.7403f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 36:
						*uParam2 = { 2093.2566f, 1768.5397f, 101.6888f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 37:
						*uParam2 = { 2100.3748f, 1758.2767f, 101.8833f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 38:
						*uParam2 = { 2099.8992f, 1755.3898f, 101.93f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 39:
						*uParam2 = { 2098.678f, 1751.7103f, 102.0713f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 40:
						*uParam2 = { 2100.2275f, 1761.4004f, 101.8664f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 41:
						*uParam2 = { 2099.7346f, 1764.0342f, 101.7804f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 42:
						*uParam2 = { 2098.6782f, 1766.4092f, 101.7058f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 43:
						*uParam2 = { 2097.053f, 1768.2438f, 101.6769f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 44:
						*uParam2 = { 2095.2793f, 1769.8192f, 101.6408f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 45:
						*uParam2 = { 2102.8843f, 1759.636f, 101.8921f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 46:
						*uParam2 = { 2102.463f, 1756.4159f, 101.9887f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 47:
						*uParam2 = { 2101.3425f, 1752.9009f, 102.1014f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 48:
						*uParam2 = { 2102.696f, 1762.5413f, 101.7835f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 49:
						*uParam2 = { 2101.9438f, 1765.5876f, 101.6151f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 50:
						*uParam2 = { 2100.6362f, 1768.1581f, 101.5699f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 51:
						*uParam2 = { 2098.3474f, 1770.2921f, 101.6113f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 52:
						*uParam2 = { 2105.28f, 1761.0273f, 101.7212f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 53:
						*uParam2 = { 2104.7305f, 1757.6967f, 102.0019f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 54:
						*uParam2 = { 2105.274f, 1763.8737f, 101.3662f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 55:
						*uParam2 = { 2104.5037f, 1767.0835f, 101.1978f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 56:
						*uParam2 = { 2102.7817f, 1769.6658f, 101.3225f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 57:
						*uParam2 = { 2100.6396f, 1771.6241f, 101.3821f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 58:
						*uParam2 = { 2103.6628f, 1754.3434f, 102.177f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 59:
						*uParam2 = { 2101.3704f, 1749.6652f, 102.1619f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 60:
						*uParam2 = { 2107.0864f, 1759.2644f, 102.0158f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 61:
						*uParam2 = { 2106.1902f, 1755.9755f, 102.1996f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 62:
						*uParam2 = { 2107.4976f, 1762.2758f, 101.7752f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 63:
						*uParam2 = { 2107.35f, 1765.6398f, 101.3373f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 64:
						*uParam2 = { 2106.3005f, 1769.1107f, 101.0559f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 65:
						*uParam2 = { 2104.2886f, 1771.7609f, 101.0137f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 66:
						*uParam2 = { 2108.541f, 1757.0953f, 102.1371f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 67:
						*uParam2 = { 2109.696f, 1760.6952f, 102.0667f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 68:
						*uParam2 = { 2109.7332f, 1763.8131f, 101.8257f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 69:
						*uParam2 = { 2109.4414f, 1767.8726f, 101.4387f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 70:
						*uParam2 = { 2112.2334f, 1765.8905f, 101.8228f };
						*fParam3 = 275.1998f;
						return 1;
						break;
					case 71:
						*uParam2 = { 2111.8997f, 1762.6686f, 102.072f };
						*fParam3 = 275.1998f;
						return 1;
						break;
				}
				break;
			case 97:
				switch (iParam1)
				{
					case 0:
						*uParam2 = { 1867.959f, 266.977f, 162.799f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 1:
						*uParam2 = { 1861.209f, 271.57f, 162.988f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 2:
						*uParam2 = { 1869.656f, 266.557f, 162.788f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 3:
						*uParam2 = { 1859.598f, 273.439f, 162.868f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 4:
						*uParam2 = { 1872.011f, 266.714f, 162.855f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 5:
						*uParam2 = { 1859.007f, 276.038f, 162.874f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 6:
						*uParam2 = { 1866.206f, 265.681f, 162.633f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 7:
						*uParam2 = { 1860.868f, 269.345f, 162.871f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 8:
						*uParam2 = { 1868.009f, 264.873f, 162.544f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 9:
						*uParam2 = { 1859.375f, 271.272f, 162.843f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 10:
						*uParam2 = { 1869.935f, 264.734f, 162.576f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 11:
						*uParam2 = { 1857.968f, 273.485f, 162.7f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 12:
						*uParam2 = { 1862.402f, 265.559f, 162.54f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 13:
						*uParam2 = { 1864.16f, 264.525f, 162.467f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 14:
						*uParam2 = { 1860.703f, 266.871f, 162.584f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 15:
						*uParam2 = { 1866.105f, 263.633f, 162.376f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 16:
						*uParam2 = { 1868.01f, 263.138f, 162.336f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 17:
						*uParam2 = { 1858.843f, 268.51f, 162.569f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 18:
						*uParam2 = { 1857.425f, 270.3f, 162.508f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 19:
						*uParam2 = { 1862.256f, 263.469f, 162.269f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 20:
						*uParam2 = { 1860.332f, 264.725f, 162.279f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 21:
						*uParam2 = { 1864.259f, 262.371f, 162.248f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 22:
						*uParam2 = { 1866.129f, 261.472f, 162.21f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 23:
						*uParam2 = { 1858.599f, 265.984f, 162.206f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 24:
						*uParam2 = { 1856.779f, 267.746f, 162.128f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 25:
						*uParam2 = { 1860.377f, 262.636f, 162.244f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 26:
						*uParam2 = { 1862.166f, 261.46f, 162.223f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 27:
						*uParam2 = { 1864.025f, 260.218f, 162.175f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 28:
						*uParam2 = { 1858.452f, 263.812f, 162.149f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 29:
						*uParam2 = { 1856.733f, 264.821f, 162.012f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 30:
						*uParam2 = { 1860.356f, 260.687f, 162.45f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 31:
						*uParam2 = { 1858.561f, 261.828f, 162.421f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 32:
						*uParam2 = { 1856.896f, 262.856f, 162.353f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 33:
						*uParam2 = { 1862.385f, 259.346f, 162.419f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 34:
						*uParam2 = { 1858.707f, 259.766f, 162.657f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 35:
						*uParam2 = { 1860.407f, 258.665f, 162.659f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 36:
						*uParam2 = { 1857.008f, 260.852f, 162.637f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 37:
						*uParam2 = { 1857.622f, 258.003f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 38:
						*uParam2 = { 1859.138f, 257.02f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 39:
						*uParam2 = { 1856.001f, 259.054f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 40:
						*uParam2 = { 1856.518f, 256.172f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 41:
						*uParam2 = { 1857.962f, 255.236f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 42:
						*uParam2 = { 1854.923f, 257.206f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 43:
						*uParam2 = { 1855.402f, 254.504f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 44:
						*uParam2 = { 1856.834f, 253.574f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 45:
						*uParam2 = { 1853.703f, 255.605f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 46:
						*uParam2 = { 1854.185f, 252.622f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 47:
						*uParam2 = { 1855.691f, 251.645f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 48:
						*uParam2 = { 1852.553f, 253.68f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 49:
						*uParam2 = { 1853.164f, 250.915f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 50:
						*uParam2 = { 1854.538f, 250.024f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 51:
						*uParam2 = { 1851.464f, 252.017f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 52:
						*uParam2 = { 1851.724f, 249.093f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 53:
						*uParam2 = { 1853.146f, 247.81f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 54:
						*uParam2 = { 1850.046f, 249.82f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 55:
						*uParam2 = { 1850.339f, 246.858f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 56:
						*uParam2 = { 1851.966f, 245.588f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 57:
						*uParam2 = { 1848.671f, 247.725f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 58:
						*uParam2 = { 1849.188f, 245.152f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 59:
						*uParam2 = { 1850.877f, 243.88f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 60:
						*uParam2 = { 1847.669f, 245.96f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 61:
						*uParam2 = { 1847.917f, 242.854f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 62:
						*uParam2 = { 1849.498f, 241.741f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 63:
						*uParam2 = { 1846.254f, 243.644f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 64:
						*uParam2 = { 1846.539f, 240.573f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 65:
						*uParam2 = { 1848.17f, 239.515f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 66:
						*uParam2 = { 1844.871f, 241.654f, 162.716f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 67:
						*uParam2 = { 1845.3508f, 238.6816f, 162.5609f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 68:
						*uParam2 = { 1847.1068f, 237.6861f, 162.5507f };
						*fParam3 = 144.998f;
						return 1;
						break;
					case 69:
						*uParam2 = { 1843.4437f, 239.7369f, 162.4986f };
						*fParam3 = 144.998f;
						return 1;
						break;
				}
				break;
			}
	}
	return 0;
}

int func_905()//Position - 0x127144
{
	int iVar0;
	var uVar1;
	var uVar2[25];
	char* sVar3;
	int iVar4;
	int iVar5;
	var uVar6[25];
	int iVar7;
	int iVar8;
	var uVar9[25];
	int iVar10;
	if ((Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_16 != -1 && __LIB_4__.func_374(PLAYER::PLAYER_ID())) && __LIB_0__.func_170(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_16) == 4)
	{
		return -1;
	}
	if (__LIB_4__.func_972(PLAYER::PLAYER_ID()) && !__LIB_3__.func_317(PLAYER::PLAYER_ID()))
	{
		iVar4 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar2);
		iVar0 = 0;
		while (iVar0 < iVar4)
		{
			if (ENTITY::DOES_ENTITY_EXIST(uVar2[iVar0]) && ENTITY::IS_ENTITY_A_VEHICLE(uVar2[iVar0]))
			{
				if (!ENTITY::IS_ENTITY_DEAD(uVar2[iVar0], false))
				{
					if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Truck", 3))
					{
						if (__LIB_0__.func_656(uVar2[iVar0], 1))
						{
							sVar3 = ENTITY::GET_ENTITY_SCRIPT(uVar2[iVar0], &uVar1);
							if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar3))
							{
								if (MISC::ARE_STRINGS_EQUAL(sVar3, "am_mp_bunker"))
								{
									if (__LIB_1__.func_264(Global_1853186, 1, 1))
									{
										if (__LIB_7__.func_297(uVar2[iVar0], 1, 0) == Global_1853186)
										{
											return uVar2[iVar0];
										}
									}
								}
							}
						}
					}
				}
			}
			iVar0++;
		}
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && !__LIB_4__.func_972(PLAYER::PLAYER_ID()))
	{
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_582())
		{
			iVar7 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar6);
			iVar5 = 0;
			while (iVar5 < iVar7)
			{
				if (ENTITY::DOES_ENTITY_EXIST(uVar6[iVar5]) && ENTITY::IS_ENTITY_A_VEHICLE(uVar6[iVar5]))
				{
					if (!ENTITY::IS_ENTITY_DEAD(uVar6[iVar5], false))
					{
						if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Truck", 3))
						{
							if (__LIB_0__.func_656(uVar6[iVar5], 1))
							{
								if (__LIB_1__.func_264(__LIB_0__.func_582(), 1, 1))
								{
									if (__LIB_7__.func_297(uVar6[iVar5], 1, 0) == __LIB_0__.func_582())
									{
										return uVar6[iVar5];
									}
								}
							}
						}
					}
				}
				iVar5++;
			}
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (__LIB_3__.func_317(PLAYER::PLAYER_ID()))
		{
			if (!ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_290))
			{
				iVar10 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar9);
				iVar8 = 0;
				while (iVar8 < iVar10)
				{
					if (ENTITY::DOES_ENTITY_EXIST(uVar9[iVar8]) && ENTITY::IS_ENTITY_A_VEHICLE(uVar9[iVar8]))
					{
						if (!ENTITY::IS_ENTITY_DEAD(uVar9[iVar8], false))
						{
							if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Truck", 3))
							{
								if (__LIB_0__.func_656(uVar9[iVar8], 1))
								{
									if (__LIB_1__.func_264(Global_1946250.f_3630, 1, 1))
									{
										if (__LIB_7__.func_297(uVar9[iVar8], 1, 0) == Global_1946250.f_3630)
										{
											Global_2815059.f_290 = uVar9[iVar8];
											return uVar9[iVar8];
										}
									}
								}
							}
						}
					}
					iVar8++;
				}
			}
			else
			{
				return Global_2815059.f_290;
			}
		}
	}
	else if (__LIB_3__.func_317(PLAYER::PLAYER_ID()))
	{
		__LIB_3__.func_316(0);
	}
	return Global_2815059.f_304[1];
}

int func_906(int iParam0)//Position - 0x15725F
{
	switch (iParam0)
	{
		case 115:
			if (!__LIB_12__.func_308())
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_907(int iParam0)//Position - 0x17E712
{
	if ((((__LIB_9__.func_276(iParam0) || __LIB_9__.func_275(iParam0)) || __LIB_9__.func_274(iParam0)) || __LIB_9__.func_273(iParam0)) || __LIB_9__.func_272(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_908(int iParam0, bool bParam1, char* sParam2, int iParam3)//Position - 0x17F812
{
	struct<13> Var0;
	struct<13> Var1;
	if (((((iParam3 == 1 || iParam3 == 2) || iParam3 == 3) || iParam3 == 4) || iParam3 == 5) || iParam3 == 6)
	{
		return 1;
	}
	if (iParam0 == 0)
	{
		Var0 = { __LIB_11__.func_527(sParam2) };
		Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
		if (bParam1)
		{
			if (NETWORK::NETWORK_ARE_HANDLES_THE_SAME(&Var1, &Var0))
			{
				return 1;
			}
			else if (!NETWORK::NETWORK_IS_FRIEND(&Var0))
			{
				return 0;
			}
		}
		else if (__LIB_0__.func_53())
		{
			if (NETWORK::NETWORK_ARE_HANDLES_THE_SAME(&Var1, &Var0))
			{
				return 1;
			}
			else if ((NETWORK::NETWORK_PERMISSIONS_HAS_GAMER_RECORD(&Var0) && NETWORK::NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(&Var0)) && !NETWORK::NETWORK_CAN_VIEW_GAMER_USER_CONTENT(&Var0))
			{
				return 0;
			}
		}
		else
		{
			Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
			if (!NETWORK::NETWORK_ARE_HANDLES_THE_SAME(&Var1, &Var0))
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_909(var uParam0, var uParam1, var uParam2)//Position - 0x17F985
{
	int iVar0;
	var* uVar1[16];
	*uParam0 = DATAFILE::DATAFILE_GET_FILE_DICT(0);
	if (*uParam0 == 0)
	{
	}
	*uParam1 = DATAFILE::DATADICT_GET_ARRAY(*uParam0, "list");
	uParam2->f_12 = 1;
	uParam2->f_67 = DATAFILE::DATAARRAY_GET_COUNT(*uParam1);
	iVar0 = 0;
	while (iVar0 <= (uParam2->f_67 - 1))
	{
		uVar1[iVar0] = DATAFILE::DATAARRAY_GET_DICT(*uParam1, iVar0);
		StringCopy(&(uParam2->f_1179[iVar0 /*6*/]), DATAFILE::DATADICT_GET_STRING(uVar1[iVar0], "cid"), 24);
		iVar0++;
	}
	uParam2->f_12 = DATAFILE::DATADICT_GET_BOOL(*uParam0, "h2h");
	uParam2->f_11 = DATAFILE::DATADICT_GET_BOOL(*uParam0, "ch");
	if (__LIB_9__.func_96())
	{
		StringCopy(&(uParam2->f_14), DATAFILE::DATADICT_GET_STRING(*uParam0, "name"), 64);
	}
}

void func_910()//Position - 0x1802E2
{
	if (__LIB_0__.func_826(Global_4718592.f_116524) != 7)
	{
		return;
	}
	MISC::SET_BIT(&(Global_4980736.f_94390[66 /*1004*/].f_550), 25);
	MISC::SET_BIT(&(Global_4980736.f_94390[67 /*1004*/].f_550), 25);
	MISC::SET_BIT(&(Global_4980736.f_94390[68 /*1004*/].f_550), 25);
	MISC::SET_BIT(&(Global_4980736.f_94390[69 /*1004*/].f_550), 25);
}

void func_911(char* sParam0, var uParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7)//Position - 0x183B86
{
	int iVar0;
	char cVar1[32];
	if (*iParam3 == 0)
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 <= (iParam2 - 1))
	{
		StringCopy(&cVar1, sParam0, 32);
		StringConCat(&cVar1, "_BS", 32);
		StringIntConCat(&cVar1, iVar0, 32);
		if ((*iParam4)[iVar0] == 0)
		{
			(*iParam4)[iVar0] = DATAFILE::DATADICT_GET_ARRAY(*iParam3, &cVar1);
		}
		if ((*iParam4)[iVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE((*iParam4)[iVar0], bParam5) == 2)
		{
			(*uParam1)[iVar0] = DATAFILE::DATAARRAY_GET_INT((*iParam4)[iVar0], bParam5);
		}
		else if (__LIB_3__.func_695())
		{
			if (iParam7 != -2340845)
			{
				(*uParam1)[iVar0] = iParam7;
			}
		}
		else
		{
			(*uParam1)[iVar0] = iParam6;
		}
		iVar0++;
	}
}

void func_912(char* sParam0, var uParam1, int iParam2, int iParam3, bool bParam4, float fParam5, float fParam6)//Position - 0x183C32
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (*iParam3 == 0)
	{
		*iParam3 = DATAFILE::DATADICT_GET_ARRAY(*iParam2, sParam0);
	}
	if (*iParam3 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*iParam3, bParam4) == 3)
	{
		*uParam1 = DATAFILE::DATAARRAY_GET_FLOAT(*iParam3, bParam4);
	}
	else if (__LIB_3__.func_695())
	{
		if (fParam6 != -2340845.8f)
		{
			*uParam1 = fParam6;
		}
	}
	else
	{
		*uParam1 = fParam5;
	}
}

void func_913(char* sParam0, var uParam1, int iParam2, int iParam3, bool bParam4, struct<3> Param5, struct<3> Param6)//Position - 0x183C9D
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (*iParam3 == 0)
	{
		*iParam3 = DATAFILE::DATADICT_GET_ARRAY(*iParam2, sParam0);
	}
	if (*iParam3 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*iParam3, bParam4) == 5)
	{
		*uParam1 = { DATAFILE::DATAARRAY_GET_VECTOR(*iParam3, bParam4) };
	}
	else if (__LIB_3__.func_695())
	{
		if (!__LIB_0__.func_86(Param6))
		{
			*uParam1 = { Param6 };
		}
	}
	else
	{
		*uParam1 = { Param5 };
	}
}

void func_914(char* sParam0, int iParam1, int iParam2, int iParam3, bool bParam4, int iParam5, int iParam6)//Position - 0x183D10
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (*iParam3 == 0)
	{
		*iParam3 = DATAFILE::DATADICT_GET_ARRAY(*iParam2, sParam0);
	}
	if (*iParam3 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*iParam3, bParam4) == 2)
	{
		*iParam1 = DATAFILE::DATAARRAY_GET_INT(*iParam3, bParam4);
	}
	else if (__LIB_3__.func_695())
	{
		if (iParam6 != -2340845)
		{
			*iParam1 = iParam6;
		}
	}
	else
	{
		*iParam1 = iParam5;
	}
}

void func_915(var uParam0)//Position - 0x1848F6
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_3__.func_695())
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		if (uParam0->f_13[iVar0 /*4*/].f_3 != 0)
		{
		}
		else
		{
			iVar1 = uParam0->f_13[iVar0 /*4*/].f_1;
			iVar2 = uParam0->f_13[iVar0 /*4*/].f_2;
			if (iVar1 == -1 && iVar2 == -1)
			{
			}
			else
			{
				if (iVar1 == -1)
				{
					iVar1 = 0;
				}
				if (iVar2 == -1)
				{
					iVar2 = 16;
				}
				iVar3 = iVar1;
				while (iVar3 <= iVar2)
				{
					MISC::SET_BIT(&(uParam0->f_13[iVar0 /*4*/].f_3), iVar3);
					iVar3++;
				}
			}
		}
		iVar0++;
	}
}

void func_916(char* sParam0, var uParam1, int iParam2, float fParam3, float fParam4)//Position - 0x18500F
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (DATAFILE::DATADICT_GET_TYPE(*iParam2, sParam0) == 3)
	{
		*uParam1 = DATAFILE::DATADICT_GET_FLOAT(*iParam2, sParam0);
	}
	else if (__LIB_3__.func_695())
	{
		if (fParam4 != -2340845.8f)
		{
			*uParam1 = fParam4;
		}
	}
	else
	{
		*uParam1 = fParam3;
	}
}

void func_917(char* sParam0, var uParam1, int iParam2, struct<3> Param3, struct<3> Param4)//Position - 0x18505C
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (DATAFILE::DATADICT_GET_TYPE(*iParam2, sParam0) == 5)
	{
		*uParam1 = { DATAFILE::DATADICT_GET_VECTOR(*iParam2, sParam0) };
	}
	else if (__LIB_3__.func_695())
	{
		if (!__LIB_0__.func_86(Param4))
		{
			*uParam1 = { Param4 };
		}
	}
	else
	{
		*uParam1 = { Param3 };
	}
}

void func_918(int iParam0)//Position - 0x186E5F
{
	if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_530, 15))
	{
		__LIB_9__.func_798(&(Global_4980736.f_94390[iParam0 /*1004*/].f_140), 1);
	}
	if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_542, 30))
	{
		__LIB_9__.func_798(&(Global_4980736.f_94390[iParam0 /*1004*/].f_140), 7);
	}
	if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_547, 9))
	{
		__LIB_9__.func_798(&(Global_4980736.f_94390[iParam0 /*1004*/].f_140), 3);
	}
	if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_544, 30))
	{
		__LIB_9__.func_798(&(Global_4980736.f_94390[iParam0 /*1004*/].f_140), 4);
	}
	if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_537, 13))
	{
		__LIB_9__.func_798(&(Global_4980736.f_94390[iParam0 /*1004*/].f_140), 5);
	}
}

int func_919(bool bParam0)//Position - 0x18C359
{
	if (bParam0 < 31)
	{
		return bParam0;
	}
	else if (bParam0 < 62)
	{
		return (bParam0 - 31);
	}
	return (bParam0 - __LIB_9__.func_799(bParam0) * 31);
}

void func_920(bool bParam0)//Position - 0x195731
{
	if (__LIB_3__.func_695())
	{
		return;
	}
	if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_107, 9))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 0;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_107, 10))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 3;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_107, 11))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 5;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 8))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 8;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 27))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 9;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 11))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 6;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 20))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 1;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 21))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 2;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 24))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 4;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 25))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 7;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 26))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 10;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_108, 28))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 12;
	}
	else if (BitTest(Global_4980736.f_78578[bParam0 /*450*/].f_113, 24))
	{
		Global_4980736.f_78578[bParam0 /*450*/].f_429 = 11;
	}
	if (__LIB_9__.func_404(1))
	{
		Global_4980736.f_78578[6 /*450*/].f_237[0 /*3*/] = { -2557.42f, 2322.16f, 32.06f };
		Global_4980736.f_78578[7 /*450*/].f_237[0 /*3*/] = { -2556.88f, 2330.35f, 32.06f };
		Global_4980736.f_78578[8 /*450*/].f_237[0 /*3*/] = { -2556.95f, 2337.92f, 32.06f };
		Global_4980736.f_78578[9 /*450*/].f_237[0 /*3*/] = { -2557.35f, 2345.59f, 32.06f };
	}
}

char* func_921(char* sParam0, int iParam1, int iParam2, bool bParam3, char* sParam4, char* sParam5)//Position - 0x19DD14
{
	char* sVar0;
	if (*iParam1 == 0)
	{
		return "";
	}
	sVar0 = "";
	if (*iParam2 == 0)
	{
		*iParam2 = DATAFILE::DATADICT_GET_ARRAY(*iParam1, sParam0);
	}
	if (*iParam2 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*iParam2, bParam3) == 4)
	{
		sVar0 = DATAFILE::DATAARRAY_GET_STRING(*iParam2, bParam3);
	}
	else if (__LIB_3__.func_695())
	{
		if (!MISC::ARE_STRINGS_EQUAL(sParam5, "DEFAULT" /* GXT: _ */))
		{
			sVar0 = sParam5;
		}
	}
	else if (!MISC::ARE_STRINGS_EQUAL(sParam4, "DEFAULT" /* GXT: _ */))
	{
		sVar0 = sParam4;
	}
	return sVar0;
}

void func_922(bool bParam0)//Position - 0x19E30E
{
	if (__LIB_3__.func_695())
	{
		return;
	}
	if (BitTest(Global_4980736.f_5742[bParam0 /*442*/].f_120, 17))
	{
		MISC::SET_BIT(&(Global_4980736.f_5742[bParam0 /*442*/].f_30), 0);
	}
	if (BitTest(Global_4980736.f_5742[bParam0 /*442*/].f_120, 29))
	{
		MISC::SET_BIT(&(Global_4980736.f_5742[bParam0 /*442*/].f_30), 1);
	}
	if (BitTest(Global_4980736.f_5742[bParam0 /*442*/].f_122, 4))
	{
		MISC::SET_BIT(&(Global_4980736.f_5742[bParam0 /*442*/].f_30), 2);
	}
}

void func_923(char* sParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x1A173E
{
	if (*iParam2 == 0)
	{
		return;
	}
	if (DATAFILE::DATADICT_GET_TYPE(*iParam2, sParam0) == 2)
	{
		*iParam1 = DATAFILE::DATADICT_GET_INT(*iParam2, sParam0);
	}
	else if (__LIB_3__.func_695())
	{
		if (iParam4 != -2340845)
		{
			*iParam1 = iParam4;
		}
	}
	else
	{
		*iParam1 = iParam3;
	}
}

void func_924(int iParam0)//Position - 0x1A70B7
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	int iVar5;
	int iVar6;
	var* uVar7;
	var* uVar8;
	int iVar9;
	int iVar10;
	if (DATAFILE::DATADICT_GET_DICT(iParam0, "eoir") == 0 || DATAFILE::DATADICT_GET_DICT(iParam0, "eoep") == 0)
	{
		return;
	}
	iVar5 = DATAFILE::DATADICT_GET_ARRAY(iParam0, "eoid");
	iVar6 = DATAFILE::DATADICT_GET_ARRAY(iParam0, "eoet");
	uVar7 = DATAFILE::DATADICT_GET_DICT(iParam0, "eoir");
	uVar8 = DATAFILE::DATADICT_GET_DICT(iParam0, "eoep");
	iVar0 = 0;
	while (iVar0 <= 29)
	{
		if (iVar5 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar5, iVar0) == 2)
		{
			Global_4718592.f_111285[iVar0] = DATAFILE::DATAARRAY_GET_INT(iVar5, iVar0);
		}
		else
		{
			Global_4718592.f_111285[iVar0] = -1;
		}
		if (iVar6 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar6, iVar0) == 2)
		{
			Global_4718592.f_111254[iVar0] = DATAFILE::DATAARRAY_GET_INT(iVar6, iVar0);
		}
		else
		{
			Global_4718592.f_111254[iVar0] = -1;
		}
		iVar1 = 0;
		while (iVar1 <= 12)
		{
			iVar2 = 0;
			while (iVar2 <= 3)
			{
				if (__LIB_3__.func_695())
				{
					StringCopy(&cVar4, "eor", 16);
					StringIntConCat(&cVar4, iVar0, 16);
					StringIntConCat(&cVar4, iVar1, 16);
					StringIntConCat(&cVar4, iVar2, 16);
				}
				else
				{
					StringCopy(&cVar4, "eor", 16);
					StringIntConCat(&cVar4, iVar0, 16);
					StringConCat(&cVar4, "_", 16);
					StringIntConCat(&cVar4, iVar1, 16);
					StringConCat(&cVar4, "_", 16);
					StringIntConCat(&cVar4, iVar2, 16);
				}
				if (DATAFILE::DATADICT_GET_TYPE(uVar7, &cVar4) == 2)
				{
					Global_4718592.f_111316[iVar0 /*66*/][iVar1 /*5*/][iVar2] = DATAFILE::DATADICT_GET_INT(uVar7, &cVar4);
				}
				else
				{
					Global_4718592.f_111316[iVar0 /*66*/][iVar1 /*5*/][iVar2] = -1;
				}
				if (__LIB_3__.func_695())
				{
					StringCopy(&cVar4, "eop", 16);
					StringIntConCat(&cVar4, iVar0, 16);
					StringIntConCat(&cVar4, iVar1, 16);
					StringIntConCat(&cVar4, iVar2, 16);
				}
				else
				{
					StringCopy(&cVar4, "eop", 16);
					StringIntConCat(&cVar4, iVar0, 16);
					StringConCat(&cVar4, "_", 16);
					StringIntConCat(&cVar4, iVar1, 16);
					StringConCat(&cVar4, "_", 16);
					StringIntConCat(&cVar4, iVar2, 16);
				}
				if (DATAFILE::DATADICT_GET_TYPE(uVar8, &cVar4) == 2)
				{
					Global_4718592.f_113297[iVar0 /*66*/][iVar1 /*5*/][iVar2] = DATAFILE::DATADICT_GET_INT(uVar8, &cVar4);
				}
				else
				{
					Global_4718592.f_111316[iVar0 /*66*/][iVar1 /*5*/][iVar2] = -1;
				}
				iVar2++;
			}
			iVar1++;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 29)
	{
		iVar9 = Global_4718592.f_111285[iVar0];
		iVar10 = Global_4718592.f_111254[iVar0];
		if (iVar9 != -1 && iVar10 != -1)
		{
			iVar3 = 0;
			while (iVar3 <= 29)
			{
				if ((iVar3 != iVar0 && Global_4718592.f_111285[iVar3] == iVar9) && Global_4718592.f_111254[iVar3] == iVar10)
				{
					Global_4718592.f_111254[iVar3] = -1;
					Global_4718592.f_111285[iVar3] = -1;
					iVar1 = 0;
					while (iVar1 <= 12)
					{
						iVar2 = 0;
						while (iVar2 <= 3)
						{
							Global_4718592.f_111316[iVar3 /*66*/][iVar1 /*5*/][iVar2] = -1;
							Global_4718592.f_113297[iVar3 /*66*/][iVar1 /*5*/][iVar2] = -1;
							iVar2++;
						}
						iVar1++;
					}
				}
				iVar3++;
			}
		}
		iVar0++;
	}
}

int func_925(int iParam0)//Position - 0x1C33E6
{
	if (MISC::IS_PS3_VERSION() || (__LIB_0__.func_52() && iParam0 == 0))
	{
		if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(1) == 0 || NETWORK::NETWORK_HAVE_COMMUNICATION_PRIVILEGES(1, -1) == 0)
		{
			return 0;
		}
	}
	else if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(1) == 0)
	{
		return 0;
	}
	if (__LIB_11__.func_549() == 0)
	{
		return 0;
	}
	return 1;
}

void func_926()//Position - 0x1DB87A
{
	MISC::SET_BIT(&(Global_1048576.f_10), 8);
	__LIB_1__.func_689();
}

int func_927(int iParam0, bool bParam1)//Position - 0x1DD27D
{
	if (bParam1)
	{
	}
	return __LIB_11__.func_365(iParam0, 0);
}

int func_928(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1E839C
{
	bool bVar0;
	int iVar1;
	struct<6> Var2;
	int iVar3;
	int iVar4;
	bVar0 = false;
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < Global_1573108)
	{
		bVar0 = false;
		if (Global_1573035[iVar1 /*6*/] == iParam0)
		{
			bVar0 = true;
			switch (iParam0)
			{
				case 2:
				case 5:
				case 6:
				case 9:
				case 10:
				case 11:
				case 8:
					if (!Global_1573035[iVar1 /*6*/].f_1 == iParam1)
					{
						bVar0 = false;
					}
					break;
				case 1:
				case 7:
					break;
				case 0:
				case 3:
				case 4:
					if (!Global_1573035[iVar1 /*6*/].f_2 == iParam2 || !Global_1573035[iVar1 /*6*/].f_3 == iParam3)
					{
						bVar0 = false;
					}
					break;
				default:
					bVar0 = false;
					break;
			}
			if (bVar0)
			{
				Global_1573035[iVar1 /*6*/].f_4 = __LIB_12__.func_426();
				Global_1573035[iVar1 /*6*/].f_5 = 0;
				Global_1573035[iVar1 /*6*/].f_1 = iParam1;
				switch (iParam0)
				{
					case 8:
						Global_1573035[iVar1 /*6*/].f_2 = iParam2;
						Global_1573035[iVar1 /*6*/].f_3 = iParam3;
						break;
				}
				Var2 = { Global_1573035[iVar1 /*6*/] };
				iVar3 = iVar1;
				iVar4 = iVar3 + 1;
				while (iVar4 < Global_1573108)
				{
					Global_1573035[iVar3 /*6*/] = { Global_1573035[iVar4 /*6*/] };
					iVar3++;
					iVar4++;
				}
				Global_1573035[iVar3 /*6*/] = { Var2 };
				return 1;
			}
		}
		iVar1++;
	}
	return 0;
}

void func_929(int iParam0)//Position - 0x1EA1C1
{
	if (iParam0 == 24)
	{
		Global_1931975.f_2 = Global_1931975;
	}
	__LIB_12__.func_430(1);
	Global_1931975 = iParam0;
}

int func_930(int iParam0)//Position - 0x1EA3E7
{
	if (__LIB_4__.func_21(iParam0, 0) && __LIB_2__.func_208(iParam0) == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_931()//Position - 0x1F19EC
{
	switch (__LIB_11__.func_666())
	{
		case default:
			return 1;
		case -1:
			return 0;
		case 0:
			return 0;
		case 8:
			return 0;
	}
}

int func_932()//Position - 0x1F1A1C
{
	switch (__LIB_11__.func_667())
	{
		case default:
			return 0;
		case 4:
		case 5:
		case 10:
		case 11:
		case 12:
		case 13:
			return 1;
	}
}

int func_933(int iParam0)//Position - 0x1F7E9F
{
	int iVar0;
	if (!__LIB_1__.func_264(iParam0, 0, 1))
	{
		return -1;
	}
	if (Global_1660944 == 0)
	{
		return -1;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1660944)
	{
		if (Global_1660783[iVar0 /*5*/].f_1 == iParam0)
		{
			if (PED::IS_PEDHEADSHOT_VALID(Global_1660783[iVar0 /*5*/].f_2) && PED::IS_PEDHEADSHOT_READY(Global_1660783[iVar0 /*5*/].f_2))
			{
				return iVar0;
			}
			__LIB_6__.func_961(iVar0);
			return -1;
		}
		iVar0++;
	}
	return -1;
}

void func_934()//Position - 0x1FC4E7
{
	Global_2714762.f_692 = 0;
	__LIB_1__.func_660();
}

bool func_935(int iParam0)//Position - 0x2049B8
{
	return __LIB_9__.func_812(iParam0);
}

int func_936(bool bParam0)//Position - 0x204FB8
{
	int iVar0;
	int iVar1;
	if (bParam0)
	{
		iVar0 = 6509;
	}
	else
	{
		iVar0 = 11072;
	}
	iVar1 = __LIB_1__.func_556(iVar0, -1, 0);
	if (iVar1 == 0)
	{
		return 1;
	}
	if (NETWORK::GET_CLOUD_TIME_AS_INT() >= iVar1)
	{
		__LIB_1__.func_597(iVar0, 0, -1, 1, 0);
		return 1;
	}
	return 0;
}

int func_937()//Position - 0x206B72
{
	int iVar0;
	var uVar1;
	iVar0 = 0;
	uVar1 = Global_1659747[__LIB_1__.func_443(-1)];
	iVar0 = BitTest(uVar1, 9);
	if (iVar0 != __LIB_2__.func_107(PLAYER::PLAYER_ID()))
	{
	}
	return iVar0;
}

int func_938(int iParam0)//Position - 0x207321
{
	if (__LIB_9__.func_276(iParam0))
	{
		return 0;
	}
	if (__LIB_9__.func_275(iParam0))
	{
		return 1;
	}
	if (__LIB_9__.func_274(iParam0))
	{
		return 2;
	}
	if (__LIB_9__.func_273(iParam0))
	{
		return 3;
	}
	if (__LIB_9__.func_272(iParam0))
	{
		return 4;
	}
	return -1;
}

int func_939()//Position - 0x2084F3
{
	struct<6> Var0;
	Var0 = { __LIB_7__.func_695() };
	if (MISC::ARE_STRINGS_EQUAL(&Var0, ".") || MISC::IS_STRING_NULL_OR_EMPTY(&Var0))
	{
		return 0;
	}
	return 1;
}

int func_940(var uParam0)//Position - 0x20BA3E
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_177589[iVar1 /*13*/].f_3;
		case 62:
			return Global_998606.f_9405[iVar1 /*13*/].f_3;
		default:
	}
	return iVar0;
}

int func_941(int iParam0)//Position - 0x20BDDE
{
	int iVar0;
	var uVar1;
	iVar0 = iParam0;
	uVar1 = __LIB_11__.func_544(iVar0);
	return uVar1;
}

int func_942(var uParam0)//Position - 0x20BFC5
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_61;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_61;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_75;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_75;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_75;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_943(var uParam0, bool bParam1)//Position - 0x20C17B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (!bParam1)
	{
		if (__LIB_9__.func_267(uParam0))
		{
			if (BitTest(Global_1573916.f_1[uParam0->f_9 /*2*/], 0))
			{
				return Global_2660383.f_513[uParam0->f_9];
			}
		}
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_54;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return 0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_54;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_54;
		case 40:
			return 0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_54;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

struct<16> func_944(var uParam0)//Position - 0x20C338
{
	struct<16> Var0;
	int iVar1;
	StringCopy(&Var0, "[UNKNOWN]", 64);
	if (__LIB_9__.func_267(uParam0))
	{
		MemCopy(&Var0, {Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_6}, 16);
		return Var0;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			MemCopy(&Var0, {Global_2660249.f_1.f_6}, 16);
			return Var0;
		}
		return Var0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return Var0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_6;
		case 62:
			MemCopy(&Var0, {Global_998606.f_3[iVar1 /*6*/]}, 16);
			return Var0;
		case 40:
			return Var0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_6;
	}
	else if (uParam0->f_2 < 32)
	{
		return Var0;
	}
	return Var0;
}

struct<16> func_945(var uParam0)//Position - 0x20C513
{
	struct<16> Var0;
	int iVar1;
	StringCopy(&Var0, "NO DESCRIPTION", 64);
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_28;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_28;
		}
		return Var0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return Var0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_38;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_38;
		case 40:
			return Var0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_38;
	}
	else if (uParam0->f_2 < 32)
	{
		return Var0;
	}
	return Var0;
}

int func_946(var uParam0)//Position - 0x20C605
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_57;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_57;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_70;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_70;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_70;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_947(var uParam0)//Position - 0x20D0B6
{
	int iVar0;
	int iVar1;
	iVar0 = 32;
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_58;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_58;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_71;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_71;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_71;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_948(int iParam0, int iParam1, int iParam2)//Position - 0x20D18B
{
	int iVar0;
	iVar0 = __LIB_9__.func_832(iParam1, iParam2);
	if (iVar0 == -1)
	{
		return 0;
	}
	return BitTest(Global_1641652[iVar0 /*6*/], iParam0);
}

void func_949(int iParam0, int iParam1)//Position - 0x20F2B0
{
	int iVar0;
	iVar0 = __LIB_12__.func_485(iParam0);
	HUD::SET_BLIP_DISPLAY(iVar0, 0);
}

void func_950(int iParam0)//Position - 0x20F43F
{
	if (__LIB_12__.func_499(iParam0))
	{
		return;
	}
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 8);
}

void func_951(int iParam0)//Position - 0x20F66E
{
	__LIB_12__.func_506(iParam0);
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 8);
}

int func_952(int iParam0, struct<3> Param1, struct<4> Param2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8)//Position - 0x210467
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param2.f_3)))
	{
		iVar1 = MISC::GET_HASH_KEY(&(Param2.f_3));
	}
	if (iVar1 != 0)
	{
		iVar0 = 0;
		while (iVar0 < Global_1573885)
		{
			if (!__LIB_12__.func_491(iVar0))
			{
				if (Global_2621865[iVar0 /*26*/].f_25 == iVar1)
				{
					if (MISC::ARE_STRINGS_EQUAL(&(Global_2621865[iVar0 /*26*/].f_15.f_3), &(Param2.f_3)))
					{
						if (Param2.f_1 == 9999)
						{
							return iVar0;
						}
						else
						{
							if (Global_2621865[iVar0 /*26*/].f_15.f_1 == 9999)
							{
								return iVar0;
							}
							return iVar0;
						}
					}
				}
			}
			iVar0++;
		}
		return -1;
	}
	iVar0 = 0;
	while (iVar0 < Global_1573885)
	{
		if (!__LIB_12__.func_491(iVar0))
		{
			if ((Global_2621865[iVar0 /*26*/].f_2 == iParam0 && Global_2621865[iVar0 /*26*/].f_15 == Param2.f_0) && Global_2621865[iVar0 /*26*/].f_15.f_1 == Param2.f_1)
			{
				if (__LIB_0__.func_394(Global_2621865[iVar0 /*26*/].f_3, Param1, 1056964608, 0))
				{
					return iVar0;
				}
			}
		}
		iVar0++;
	}
	return -1;
}

int func_953(var uParam0)//Position - 0x210743
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_9__.func_267(uParam0))
	{
		return BitTest(Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_63, 9);
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return BitTest(Global_2660249.f_1.f_63, 9);
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return BitTest(Global_794709.f_4[iVar1 /*88*/].f_76, 9);
		case 62:
			return BitTest(Global_998606.f_604[iVar1 /*88*/].f_76, 9);
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return iVar0;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

Vector3 func_954(var uParam0)//Position - 0x210A4A
{
	struct<3> Var0;
	int iVar1;
	Var0 = { 0f, 0f, 0f };
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_44;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_44;
		}
		return Var0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return Var0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_56;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_56;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_56;
	}
	else if (uParam0->f_2 < 32)
	{
		return Var0;
	}
	return Var0;
}

int func_955(var uParam0)//Position - 0x210DA7
{
	int iVar0;
	int iVar1;
	iVar0 = 16777215;
	if (__LIB_9__.func_267(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_62;
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return Global_2660249.f_1.f_62;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			if (Global_794709.f_4[iVar1 /*88*/].f_78 & 16777215 == 0)
			{
				Global_794709.f_4[iVar1 /*88*/].f_78 = 16777215;
			}
			return Global_794709.f_4[iVar1 /*88*/].f_78;
		case 62:
			if (Global_998606.f_604[iVar1 /*88*/].f_78 & 16777215 == 0)
			{
				Global_998606.f_604[iVar1 /*88*/].f_78 = 16777215;
			}
			return Global_998606.f_604[iVar1 /*88*/].f_78;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return iVar0;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_956(var uParam0)//Position - 0x210FE4
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return iVar0;
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return iVar0;
		case 62:
			return iVar0;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return BitTest(Global_1020252.f_5[iVar1 /*88*/].f_76, 16);
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

void func_957(var uParam0)//Position - 0x21136B
{
	__LIB_12__.func_514(uParam0);
}

void func_958(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x212EAC
{
	struct<3> Var0;
	struct<13> Var1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (!__LIB_1__.func_264(iParam0, 0, 1))
	{
		return;
	}
	Var0.f_0 = -374624960;
	Var0.f_1 = PLAYER::PLAYER_ID();
	NETWORK::NETWORK_GET_LOCAL_HANDLE(&Var1, 13);
	Var0.f_2 = { Var1 };
	if (bParam1)
	{
		iVar2 = 0;
		MISC::SET_BIT(&iVar2, 6);
		Var0.f_2.f_13 = iVar2;
		Var0.f_2.f_19 = 0;
		Var0.f_2.f_20 = 0;
	}
	if (bParam2)
	{
		iVar3 = 0;
		MISC::SET_BIT(&iVar3, 0);
		Var0.f_2.f_13 = iVar3;
		Var0.f_2.f_19 = 1;
		Var0.f_2.f_20 = 0;
	}
	if (bParam3)
	{
		iVar4 = 0;
		MISC::SET_BIT(&iVar4, 0);
		Var0.f_2.f_13 = iVar4;
		Var0.f_2.f_19 = 1;
		Var0.f_2.f_20 = 1;
	}
	Var0.f_2.f_14 = __LIB_0__.func_846(PLAYER::PLAYER_ID());
	StringCopy(&(Var0.f_2.f_15), "", 16);
	SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 23, __LIB_1__.func_276(iParam0));
}

int func_959(var uParam0)//Position - 0x212F8C
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_80;
		case 62:
			return iVar0;
		default:
	}
	return iVar0;
}

void func_960(int iParam0, bool bParam1)//Position - 0x212FD5
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (iParam0 >= Global_1659410)
	{
		return;
	}
	if (bParam1)
	{
		if (__LIB_9__.func_820(iParam0))
		{
			iVar0 = 0;
			iVar0 = 0;
			while (iVar0 <= 11)
			{
				if (Global_2654152[iParam0 /*82*/].f_11)
				{
					if (MISC::GET_GAME_TIMER() > Global_2657438[iVar0 /*4*/].f_2 || Global_2657438[iVar0 /*4*/].f_2 == 0)
					{
						if (Global_2654152[iParam0 /*82*/].f_2)
						{
							Global_2657438[iVar0 /*4*/] = Global_2654152[iParam0 /*82*/].f_9;
							Global_2657438[iVar0 /*4*/].f_1 = MISC::GET_HASH_KEY(&(Global_2654152[iParam0 /*82*/].f_56));
							Global_2657438[iVar0 /*4*/].f_2 = MISC::GET_GAME_TIMER() + 30000;
							iVar0 = 12;
						}
					}
				}
				iVar0++;
			}
		}
	}
	if (Global_2654152[iParam0 /*82*/].f_54 != -1)
	{
		HUD::THEFEED_REMOVE_ITEM(Global_2654152[iParam0 /*82*/].f_54);
	}
	if (!Global_2654152[iParam0 /*82*/].f_19)
	{
		if (Global_2654152[iParam0 /*82*/].f_15 != 0)
		{
			NETWORK::UGC_RELEASE_CACHED_DESCRIPTION(Global_2654152[iParam0 /*82*/].f_15);
		}
	}
	iVar1 = iParam0;
	iVar2 = iVar1 + 1;
	while (iVar2 < Global_1659410)
	{
		Global_2654152[iVar1 /*82*/] = { Global_2654152[iVar2 /*82*/] };
		iVar1++;
		iVar2++;
	}
	__LIB_9__.func_818(iVar1);
	Global_1659410 = (Global_1659410 - 1);
	if (Global_1659411)
	{
		if (Global_1659409 > 0)
		{
			__LIB_9__.func_266();
		}
	}
}

int func_961(int iParam0)//Position - 0x2205BC
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 6)
	{
		if (iParam0 == __LIB_11__.func_539(iVar0))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_962(struct<16> Param0)//Position - 0x222768
{
	int iVar0;
	iVar0 = __LIB_0__.func_716(4);
	Global_2676732[iVar0 /*83*/] = 4;
	Global_2676732[iVar0 /*83*/].f_1 = { Param0 };
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-FromLiveArea", 64);
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[1 /*16*/]), "-LiveAreaContentType=UGC_TYPE_GTA5_MISSION", 64);
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[2 /*16*/]), "-LiveAreaLoadContent=", 64);
	MemCopy(&(Global_2676732[iVar0 /*83*/].f_18[3 /*16*/]), {Global_4718592.f_116811}, 16);
}

int func_963()//Position - 0x22BA03
{
	if ((((__LIB_9__.func_783(12) && __LIB_9__.func_783(13)) && __LIB_9__.func_783(14)) && __LIB_9__.func_783(15)) && __LIB_9__.func_783(16))
	{
		return 1;
	}
	return 0;
}

int func_964()//Position - 0x22BA45
{
	var uVar0;
	if (__LIB_2__.func_107(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	uVar0 = Global_1659747[__LIB_1__.func_443(-1)];
	if (BitTest(uVar0, 9))
	{
		__LIB_9__.func_782(1);
		return 1;
	}
	return 0;
}

void func_965(int iParam0, var uParam1, var uParam2)//Position - 0x25A861
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	if (iParam0 != -1)
	{
		switch (iParam0)
		{
			case 1:
				*uParam1 = { 960.363f, -3006.056f, -39.615f };
				*uParam2 = { 0f, 0f, 136.8f };
				break;
			case 4:
				*uParam1 = { 904.915f, -3200.1f, -97.13f };
				*uParam2 = { -0.25f, 0f, -29.88f };
				break;
			case 7:
				*uParam1 = { -1237.536f, -2985.021f, -41.231f };
				*uParam2 = { 0f, 0f, 28.8f };
				break;
			case 9:
				if (__LIB_2__.func_272())
				{
					*uParam1 = { 364.4f, 4824.8f, -58.95f };
					*uParam2 = { 0f, 0f, 125.64f };
				}
				else
				{
					*uParam1 = { 364.55f, 4824.95f, -58.95f };
					*uParam2 = { 0f, 0f, 125.28f };
				}
				break;
			case 11:
				*uParam1 = { -1614.179f, -3019.259f, -75.18f };
				*uParam2 = { 0f, 0f, 135f };
				break;
			case 13:
				*uParam1 = { 209.421f, 5163.441f, -89.1819f };
				*uParam2 = { 0f, 0f, 45f };
				break;
			case 15:
				if (BitTest(Global_1946250.f_5, 20))
				{
					*uParam1 = { 968.285f, 69.992f, 115.1643f };
					*uParam2 = { 0f, 0f, 155f };
				}
				else if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 == PLAYER::PLAYER_ID())
				{
					*uParam1 = { 970.3978f, 79.27974f, 116.1807f };
					*uParam2 = { 0f, 0f, -165f };
				}
				else
				{
					iVar1 = 0;
					while (iVar1 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
					{
						if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1)))
						{
							bVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1));
							if (bVar2 != PLAYER::PLAYER_ID())
							{
								if (__LIB_8__.func_208(PLAYER::PLAYER_ID(), bVar2, 1))
								{
									if (__LIB_1__.func_264(bVar2, 1, 1))
									{
										if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::GET_PLAYER_PED(bVar2), 986.92114f, 72.84271f, 115.09269f, 988.66064f, 71.72717f, 117.164215f, 2f, false, true, 0))
										{
											bVar0 = true;
											iVar1 = NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS();
										}
									}
								}
							}
						}
						iVar1++;
					}
					if (!bVar0)
					{
						*uParam1 = { 988.464f, 70.844f, 116.1642f };
						*uParam2 = { 0f, 0f, 17f };
					}
					else
					{
						*uParam1 = { 990.914f, 69.306f, 116.1642f };
						*uParam2 = { 0f, 0f, 17f };
					}
				}
				break;
			case 17:
				if (BitTest(Global_1946250.f_5, 20))
				{
					*uParam1 = { 2738.123f, -381.553f, -49.3715f };
					*uParam2 = { 0f, 0f, 90f };
				}
				else
				{
					*uParam1 = { 2723.993f, -370.147f, -55.3644f };
					*uParam2 = { 0f, 0f, -133.5f };
				}
				break;
			case 20:
				*uParam1 = { 1558.369f, 384.953f, -53.8531f };
				*uParam2 = { 0f, 0f, 0f };
				break;
			case 22:
				*uParam1 = { -1360.148f, 144.8f, -95.7f };
				*uParam2 = { 0f, 0f, 90f };
				break;
			case 24:
				switch (__LIB_4__.func_89(PLAYER::PLAYER_ID()))
				{
					case 1:
						*uParam1 = { 386.225f, -68.459f, 111.39f };
						*uParam2 = { 0f, 0f, 244.79999f };
						break;
					case 2:
						*uParam1 = { -1013.67f, -431.549f, 71.8881f };
						*uParam2 = { 0f, 0f, 291.75f };
						break;
					case 3:
						*uParam1 = { -593.428f, -709.732f, 121.032f };
						*uParam2 = { 0f, 0f, 84.649994f };
						break;
					case 4:
						*uParam1 = { -997.128f, -755.634f, 69.9212f };
						*uParam2 = { 0f, 0f, 354.8f };
						break;
				}
				break;
			default:
				break;
			}
	}
}

int func_966()//Position - 0x25F261
{
	return __LIB_9__.func_815(0);
}

void func_967(int iParam0, int iParam1, int iParam2)//Position - 0x27A610
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	if (iParam0 != -1)
	{
		if (__LIB_2__.func_106(iParam0) == 6)
		{
			if (iParam1 == 0)
			{
				Var2 = { __LIB_1__.func_983(iParam0, 0) };
				if (__LIB_4__.func_713(iParam0))
				{
					iParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, "hei_dlc_apart_high2_new");
				}
				else if (__LIB_4__.func_712(iParam0))
				{
					iParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, "v_mp_apt_h_01");
				}
				else if (__LIB_4__.func_711(iParam0, 77))
				{
					iParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, "apa_v_mp_stilts_a");
				}
				else if (__LIB_4__.func_711(iParam0, 73))
				{
					iParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, "apa_v_mp_stilts_b");
				}
				else
				{
					iParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, "hei_dlc_apart_high_new");
				}
			}
			if (__LIB_4__.func_713(iParam0))
			{
				iVar1 = joaat("mp_apt_h_01_study");
			}
			else if (__LIB_4__.func_712(iParam0))
			{
				iVar1 = __LIB_12__.func_581(iParam2);
			}
			else if (__LIB_4__.func_711(iParam0, 77))
			{
				iVar1 = joaat("mr_mp_stilts_a_plan");
			}
			else if (__LIB_4__.func_711(iParam0, 73))
			{
				iVar1 = joaat("mr_mp_stilts_b_PlanRm");
			}
			else
			{
				iVar1 = joaat("rm_high_planning");
			}
			if (INTERIOR::IS_VALID_INTERIOR(iParam1) && INTERIOR::IS_INTERIOR_READY(iParam1))
			{
				iVar0 = 0;
				while (iVar0 < 12)
				{
					if (ENTITY::DOES_ENTITY_EXIST(Global_1931975.f_1914[iVar0]) && iVar1 != INTERIOR::GET_ROOM_KEY_FROM_ENTITY(Global_1931975.f_1914[iVar0]))
					{
						INTERIOR::FORCE_ROOM_FOR_ENTITY(Global_1931975.f_1914[iVar0], iParam1, iVar1);
					}
					iVar0++;
				}
			}
		}
	}
}

int func_968()//Position - 0x27C57D
{
	if (__LIB_9__.func_830())
	{
		return 0;
	}
	return 1;
}

int func_969()//Position - 0x27E7F9
{
	int iVar0;
	iVar0 = 0;
	if (__LIB_9__.func_353() != -1 && iVar0 != __LIB_9__.func_353())
	{
		iVar0 = __LIB_9__.func_353();
	}
	if (Global_4718592 == 2)
	{
		iVar0 = 0;
	}
	if (Global_4718592 == 1 && Global_2711251[0] != 1)
	{
		iVar0 = 0;
	}
	if (iVar0 >= 4)
	{
		iVar0 = 0;
	}
	return iVar0;
}

char* func_970(int iParam0)//Position - 0x2A2845
{
	switch (iParam0)
	{
		case 1:
			return "imp_impexp_intwaremed";
			break;
		case 2:
			return "imp_impexp_intwaremed";
			break;
		case 3:
			return "imp_impexp_intwaremed";
			break;
		case 6:
		case 7:
		case 8:
		case 9:
			return "imp_imptexp_mod_int_01";
			break;
		case 4:
			return "Bkr_Biker_DLC_INT_01";
			break;
		case 5:
			return "Bkr_Biker_DLC_INT_02";
			break;
		case 10:
			return "gr_grdlc_int_01";
			break;
		case 11:
			return "gr_grdlc_int_02";
			break;
		case 12:
			return "sm_smugdlc_int_01";
			break;
		case 13:
			return "xm_x17dlc_int_01";
			break;
		case 14:
			return "xm_x17dlc_int_02";
			break;
		case 15:
			return "ba_dlc_int_01_ba";
			break;
		case 16:
			return "ba_dlc_int_03_ba";
			break;
		case 17:
			if (__LIB_6__.func_367() == 0)
			{
				return "xs_x18_int_mod";
			}
			else
			{
				return "xs_x18_int_mod2";
			}
			break;
		case 18:
			return "tr_tuner_car_meet";
			break;
		case 19:
			return "tr_tuner_mod_garage";
			break;
		case 20:
			return "sf_dlc_garage_sec";
			break;
		default:
			return "";
			break;
	}
	return "";
}

int func_971(var uParam0)//Position - 0x2EEFBA
{
	if ((!__LIB_12__.func_657(uParam0->f_122) || (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(uParam0->f_114) && __LIB_0__.func_682(uParam0->f_114))) || ENTITY::DOES_ENTITY_EXIST(uParam0->f_113))
	{
		return 1;
	}
	return 0;
}

int func_972()//Position - 0x2EF5B7
{
	if (!BitTest(Global_8138, 3))
	{
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appcamera")) > 0 || __LIB_11__.func_657())
		{
			return 0;
		}
	}
	return 1;
}

int func_973(int iParam0)//Position - 0x2EF722
{
	if (PED::IS_PED_RUNNING_MOBILE_PHONE_TASK(iParam0) && __LIB_11__.func_655())
	{
		return 1;
	}
	return 0;
}

bool func_974()//Position - 0x2EFA88
{
	if ((__LIB_0__.func_52() || __LIB_0__.func_53()) || MISC::IS_PC_VERSION())
	{
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (__LIB_3__.func_139(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
			return PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 176 /*INPUT_CELLPHONE_SELECT*/);
		}
		else if ((((!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 177 /*INPUT_CELLPHONE_CANCEL*/) && !PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 172 /*INPUT_CELLPHONE_UP*/)) && !PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 173 /*INPUT_CELLPHONE_DOWN*/)) && !PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 175 /*INPUT_CELLPHONE_RIGHT*/)) && !PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 174 /*INPUT_CELLPHONE_LEFT*/))
		{
			return PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 176 /*INPUT_CELLPHONE_SELECT*/);
		}
		else
		{
			return 0;
		}
	}
	return PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/);
}

int func_975(var uParam0, int iParam1, bool bParam2)//Position - 0x2F145B
{
	if ((__LIB_12__.func_657(uParam0->f_122) && !__LIB_0__.func_810()) && !Global_4521801.f_18)
	{
		if (bParam2)
		{
			uParam0->f_115 = uParam0->f_114;
		}
		if (__LIB_1__.func_262(&(uParam0->f_114), iParam1, PED::GET_PED_BONE_COORDS(uParam0->f_122, 28422, 0f, 0f, 0f), 0, 1, 0, 0, 0, 0, 0))
		{
			uParam0->f_113 = NETWORK::NET_TO_OBJ(uParam0->f_114);
			NETWORK::SET_NETWORK_ID_CAN_MIGRATE(uParam0->f_114, false);
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if (Global_4521801.f_18)
	{
		if (bParam2)
		{
			uParam0->f_116 = uParam0->f_113;
		}
	}
	uParam0->f_113 = OBJECT::CREATE_OBJECT(iParam1, PED::GET_PED_BONE_COORDS(uParam0->f_122, 28422, 0f, 0f, 0f), false, false, false);
	if (!ENTITY::IS_ENTITY_VISIBLE_TO_SCRIPT(uParam0->f_122))
	{
		ENTITY::SET_ENTITY_VISIBLE(uParam0->f_113, false, false);
	}
	return 1;
}

int func_976()//Position - 0x2F2319
{
	switch (__LIB_11__.func_667())
	{
		case default:
			return 0;
		case 12:
			return 1;
	}
}

void func_977(var uParam0)//Position - 0x2F9973
{
	switch (*uParam0)
	{
		case 0:
			if (uParam0->f_1 >= __LIB_11__.func_670())
			{
				uParam0->f_1 = (__LIB_11__.func_670() - 1);
			}
			break;
		case 1:
			if (uParam0->f_1 >= 4)
			{
				uParam0->f_1 = (4 - 1);
			}
			break;
		case 2:
			if (uParam0->f_1 >= __LIB_9__.func_337())
			{
				uParam0->f_1 = (__LIB_9__.func_337() - 1);
			}
			break;
	}
}

void func_978()//Position - 0x308F43
{
	if (!__LIB_6__.func_518())
	{
		return;
	}
	if (Global_21611)
	{
		MemCopy(&(Global_1973149.f_1), {Global_21224}, 4);
		Global_1973149 = Global_7451;
		Global_1973149.f_6 = Global_21615;
	}
}

void func_979(struct<30> Param0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, bool bParam14, int iParam15, bool bParam16, bool bParam17)//Position - 0x334171
{
	struct<4> Var0;
	if (iParam15 == 2147483647 || iParam15 == -2147483647)
	{
		bParam16 = false;
	}
	StringCopy(&Var0, "", 16);
	switch (Param0.f_29[bParam14])
	{
		case 5:
			if (bParam16)
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
				HUD::ADD_TEXT_COMPONENT_INTEGER(iParam15);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 7:
			if (bParam16)
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
				HUD::ADD_TEXT_COMPONENT_INTEGER(-iParam15);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 1:
		case 9:
		case 11:
			if (bParam16)
			{
				if (Param0.f_29[bParam14] == 11 && iParam15 < 0)
				{
					iParam15 = (iParam15 * -1);
				}
				if (iParam15 >= 3600000 || iParam15 <= -3600000)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 14);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else if (Param0.f_29[bParam14] == 9)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 6);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 2055);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 6:
			if (bParam16)
			{
				if (iParam15 == 2147483647)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else if (iParam15 >= 3600000 || iParam15 <= -3600000)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 14);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 2055);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 2:
		case 10:
			if (bParam16)
			{
				iParam15 = (iParam15 * -1);
				if (iParam15 >= 3600000 || iParam15 <= -3600000)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 14);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else if (Param0.f_29[bParam14] == 10)
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 6);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(iParam15, 2055);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 3:
			if (bParam17)
			{
				if (STREAMING::IS_MODEL_IN_CDIMAGE(iParam15))
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SCLB_VEH_CUST" /* GXT: ~a~ (custom) */);
					HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(iParam15));
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
				else
				{
					GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
					GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
				}
			}
			else if (STREAMING::IS_MODEL_IN_CDIMAGE(iParam15))
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(iParam15));
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 8:
			if (__LIB_5__.func_4(iParam15) != 0)
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(__LIB_7__.func_318(__LIB_5__.func_4(iParam15), 0));
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 13:
		case 15:
		case 14:
		case 16:
			if (bParam16)
			{
				if (Param0.f_29[bParam14] == 14 || Param0.f_29[bParam14] == 16)
				{
					iParam15 = (iParam15 * -1);
				}
				if (!MISC::SHOULD_USE_METRIC_MEASUREMENTS())
				{
					if (Param0.f_29[bParam14] == 15 || Param0.f_29[bParam14] == 16)
					{
						iParam15 = SYSTEM::FLOOR(__LIB_5__.func_2(SYSTEM::TO_FLOAT(iParam15)));
					}
					else
					{
						iParam15 = SYSTEM::FLOOR(__LIB_1__.func_502(SYSTEM::TO_FLOAT(iParam15)));
					}
				}
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
				HUD::ADD_TEXT_COMPONENT_INTEGER(iParam15);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 21:
			if (iParam15 > 20)
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				Var0 = { __LIB_5__.func_3(iParam15) };
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(&Var0);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 22:
			if (bParam16)
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
				HUD::ADD_TEXT_COMPONENT_INTEGER(__LIB_8__.func_297(iParam15));
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			else
			{
				GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SC_LB_EMPTY" /* GXT: – */);
				GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
			}
			break;
		case 0:
			break;
	}
}

int func_980(var uParam0)//Position - 0x3353F9
{
	int iVar0;
	int iVar1;
	switch ((uParam0[0 /*100*/])->f_76)
	{
		case 0:
			__LIB_8__.func_245(uParam0);
			if ((__LIB_0__.func_52() || __LIB_0__.func_53()) && !NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
			{
				(uParam0[0 /*100*/])->f_76 = 3;
				return 0;
			}
			iVar0 = 0;
			while (iVar0 < 12)
			{
				if (__LIB_0__.func_585((uParam0[iVar0 /*100*/])->f_32))
				{
					if (!__LIB_5__.func_13(&((uParam0[iVar0 /*100*/])->f_32), &Global_2103169))
					{
						Global_2103169[Global_2103169.f_206 /*13*/] = { (uParam0[iVar0 /*100*/])->f_32 };
						Global_2103169.f_206++;
					}
				}
				iVar0++;
			}
			if (Global_2103169.f_206 > 0)
			{
				(uParam0[0 /*100*/])->f_76 = 1;
			}
			else
			{
				(uParam0[0 /*100*/])->f_76 = 3;
			}
			break;
		case 1:
			if (__LIB_8__.func_244(&((uParam0[1 /*100*/])->f_76), &(Global_2103169.f_206), &Global_2103169, &(Global_2103169.f_157)))
			{
				(uParam0[0 /*100*/])->f_76 = 2;
			}
			break;
		case 2:
			if (Global_2103169.f_206 > 12)
			{
				Global_2103169.f_206 = 12;
			}
			iVar0 = 0;
			while (iVar0 < 12)
			{
				iVar1 = 0;
				while (iVar1 < Global_2103169.f_206)
				{
					if (__LIB_0__.func_585((uParam0[iVar0 /*100*/])->f_32) && __LIB_0__.func_585(Global_2103169[iVar1 /*13*/]))
					{
						if (NETWORK::NETWORK_ARE_HANDLES_THE_SAME(&((uParam0[iVar0 /*100*/])->f_32), &(Global_2103169[iVar1 /*13*/])))
						{
							(uParam0[iVar0 /*100*/])->f_80 = { Global_2103169.f_157[iVar1 /*4*/] };
						}
					}
					iVar1++;
				}
				iVar0++;
			}
			(uParam0[0 /*100*/])->f_76 = 3;
			break;
		case 3:
			return 1;
			break;
	}
	return 0;
}

int func_981(int iParam0, int iParam1)//Position - 0x340580
{
	if (__LIB_6__.func_911() == 0)
	{
		return 0;
	}
	switch (iParam0)
	{
		case 0:
			return 0;
			break;
		case 2:
			return Global_1576214;
			break;
		case 3:
			if (Global_1576214)
			{
				return __LIB_11__.func_387(iParam1);
			}
			else
			{
				return 0;
			}
			break;
		case 4:
			break;
	}
	return 0;
}

void func_982(int iParam0, int iParam1)//Position - 0x342862
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	float fVar7;
	float fVar8;
	float fVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == 0)
		{
			iParam0 = PLAYER::PLAYER_PED_ID();
		}
		iVar0 = __LIB_0__.func_228(447, iParam1);
		iVar1 = __LIB_0__.func_228(448, iParam1);
		iVar2 = __LIB_0__.func_228(449, iParam1);
		iVar3 = __LIB_0__.func_228(450, iParam1);
		iVar4 = __LIB_0__.func_228(451, iParam1);
		iVar5 = __LIB_0__.func_228(452, iParam1);
		iVar6 = __LIB_0__.func_228(453, iParam1);
		fVar7 = __LIB_2__.func_97(87, iParam1);
		fVar8 = __LIB_2__.func_97(88, iParam1);
		fVar9 = __LIB_2__.func_97(89, iParam1);
		fVar10 = __LIB_2__.func_97(90, iParam1);
		fVar11 = __LIB_2__.func_97(91, iParam1);
		fVar12 = __LIB_2__.func_97(92, iParam1);
		fVar13 = __LIB_2__.func_97(93, iParam1);
		if (iVar4 >= 0)
		{
			fVar11 = 1f;
		}
		else
		{
			fVar11 = 0f;
		}
		PED::SET_PED_HEAD_OVERLAY(iParam0, 0, iVar0, fVar7);
		if (iVar1 >= 27)
		{
			iVar1 = (iVar1 - 7);
		}
		PED::SET_PED_HEAD_OVERLAY(iParam0, 1, iVar1, fVar8);
		PED::SET_PED_HEAD_OVERLAY_TINT(iParam0, 1, 1, 0, 0);
		PED::SET_PED_HEAD_OVERLAY(iParam0, 2, iVar2, fVar9);
		PED::SET_PED_HEAD_OVERLAY_TINT(iParam0, 2, 1, 0, 0);
		PED::SET_PED_HEAD_OVERLAY(iParam0, 3, iVar3, fVar10);
		PED::SET_PED_HEAD_OVERLAY(iParam0, 4, iVar4, fVar11);
		PED::SET_PED_HEAD_OVERLAY(iParam0, 6, iVar5, fVar12);
		PED::SET_PED_HEAD_OVERLAY(iParam0, 7, iVar6, fVar13);
	}
}

void func_983(int iParam0, int iParam1, var uParam2, int iParam3)//Position - 0x351CAA
{
	bool bVar0;
	bVar0 = __LIB_12__.func_611(iParam0, iParam1, iParam3);
	*uParam2 = iParam0;
	if (*uParam2 == 1)
	{
		if (iParam1 == 1)
		{
			*uParam2 = 4;
		}
		else if (iParam1 == 2)
		{
			*uParam2 = 9;
		}
		else if (bVar0)
		{
			*uParam2 = 25;
		}
		else if (iParam1 == 3 || iParam1 == 4)
		{
			*uParam2 = 26;
		}
		else
		{
			*uParam2 = 1;
		}
	}
	else if (*uParam2 == 2)
	{
		if (iParam1 == 0 || iParam1 == 1)
		{
			*uParam2 = 10;
		}
		else if (!bVar0 && (iParam1 == 6 || iParam1 == 7))
		{
			*uParam2 = 21;
		}
		else if (iParam1 == 18 || iParam1 == 19)
		{
			*uParam2 = 24;
		}
		else if (iParam1 == 10 || iParam1 == 11)
		{
			*uParam2 = 11;
		}
		else if (iParam1 == 12 || iParam1 == 13)
		{
			*uParam2 = 12;
		}
		else if (iParam1 == 2 || iParam1 == 3)
		{
			*uParam2 = 13;
		}
		else if (iParam1 == 4 || iParam1 == 5)
		{
			*uParam2 = 14;
		}
		else if (bVar0)
		{
			*uParam2 = 25;
		}
		else if (iParam1 == 24 || iParam1 == 25)
		{
			*uParam2 = 28;
		}
		else if (iParam1 == 26)
		{
			*uParam2 = 29;
		}
		else if (iParam1 == 27)
		{
			*uParam2 = 30;
		}
		else
		{
			*uParam2 = 10;
		}
	}
	else if (*uParam2 == 0 || *uParam2 == 9)
	{
		if (iParam1 == 5)
		{
			*uParam2 = 15;
		}
		else if (iParam1 == 6)
		{
			*uParam2 = 16;
		}
		else if (iParam1 == 1)
		{
			*uParam2 = 18;
		}
		else if (iParam1 == 7)
		{
			*uParam2 = 17;
		}
		else if (bVar0)
		{
			*uParam2 = 25;
		}
		else
		{
			*uParam2 = 0;
		}
	}
	else if (*uParam2 == 7)
	{
		*uParam2 = 15;
	}
	else if (*uParam2 == 134)
	{
		*uParam2 = 20;
	}
	else if (*uParam2 == 254)
	{
		*uParam2 = 27;
	}
}

int func_984(bool bParam0)//Position - 0x35F42F
{
	if (bParam0)
	{
		return __LIB_1__.func_556(8527, -1, 0);
	}
	return __LIB_11__.func_411(PLAYER::PLAYER_ID());
}

int func_985(bool bParam0)//Position - 0x35F493
{
	if (bParam0)
	{
		return __LIB_1__.func_556(8529, -1, 0);
	}
	return __LIB_3__.func_781(PLAYER::PLAYER_ID());
}

bool func_986()//Position - 0x3824BD
{
	return __LIB_12__.func_701() != 0;
}

void func_987(int iParam0)//Position - 0x389767
{
	int iVar0;
	int iVar1;
	if (iParam0 >= Global_1659440)
	{
		return;
	}
	if (Global_2656326[iParam0 /*46*/].f_26 != -1)
	{
		HUD::THEFEED_REMOVE_ITEM(Global_2656326[iParam0 /*46*/].f_26);
	}
	iVar0 = iParam0;
	iVar1 = iVar0 + 1;
	while (iVar1 < Global_1659440)
	{
		Global_2656326[iVar0 /*46*/] = { Global_2656326[iVar1 /*46*/] };
		Global_2656326[iVar0 /*46*/] = { Global_2656326[iVar1 /*46*/] };
		iVar0++;
		iVar1++;
	}
	__LIB_9__.func_822(iVar0);
	Global_1659440 = (Global_1659440 - 1);
	if (Global_1659411)
	{
		if (Global_1659409 > 0)
		{
			__LIB_9__.func_266();
		}
	}
}

int func_988()//Position - 0x39162D
{
	return __LIB_12__.func_572(129);
}

int func_989(var uParam0, int iParam1, float fParam2)//Position - 0x39AFF0
{
	struct<3> Var0;
	if (iParam1 == 2 && !__LIB_0__.func_630(uParam0->f_31, -1))
	{
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_1742.f_150, true) <= 30f)
		{
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_1742.f_153, uParam0->f_1742.f_153.f_3, uParam0->f_1742.f_153.f_6, false, true))
			{
				return 1;
			}
		}
	}
	else
	{
		Var0 = { __LIB_1__.func_265(PLAYER::PLAYER_ID()) };
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_146.f_47, true) <= 40f)
		{
			if ((OBJECT::IS_POINT_IN_ANGLED_AREA(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_146.f_57[0 /*8*/], uParam0->f_146.f_57[0 /*8*/].f_3, uParam0->f_146.f_57[0 /*8*/].f_6, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_146.f_57[1 /*8*/], uParam0->f_146.f_57[1 /*8*/].f_3, uParam0->f_146.f_57[1 /*8*/].f_6, false, true)) || OBJECT::IS_POINT_IN_ANGLED_AREA(__LIB_1__.func_265(PLAYER::PLAYER_ID()), uParam0->f_146.f_57[2 /*8*/], uParam0->f_146.f_57[2 /*8*/].f_3, uParam0->f_146.f_57[2 /*8*/].f_6, false, true))
			{
				return 1;
			}
			else if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, uParam0->f_146.f_1592, true) < (uParam0->f_146.f_1595 + fParam2) && (Var0.f_2 > uParam0->f_146.f_57[2 /*8*/].f_2 && Var0.f_2 < uParam0->f_146.f_57[2 /*8*/].f_3.f_2))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_990(var uParam0)//Position - 0x39FDCC
{
	int iVar0;
	iVar0 = __LIB_7__.func_206(uParam0);
	if (iVar0 == -1)
	{
		return 0;
	}
	return 1;
}

int func_991()//Position - 0x3A05BC
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(100, 10000000);
	bVar1 = false;
	bVar2 = false;
	iVar3 = 0;
	while (bVar2)
	{
		iVar3 = 0;
		bVar1 = false;
		iVar3 = 0;
		while (iVar3 < 16)
		{
			if (bVar2)
			{
				if (!__LIB_9__.func_812(iVar3))
				{
					if (Global_2686568[iVar3 /*41*/].f_3.f_17 == iVar0)
					{
						bVar2 = false;
						bVar1 = true;
					}
				}
			}
			iVar3++;
		}
		bVar2 = false;
		if (bVar1)
		{
			iVar0++;
			bVar2 = true;
		}
	}
	return iVar0;
}

int func_992(var uParam0)//Position - 0x3A37F2
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_9__.func_267(uParam0))
	{
		return BitTest(Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_63, 17);
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return BitTest(Global_2660249.f_1.f_63, 17);
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return BitTest(Global_794709.f_4[iVar1 /*88*/].f_76, 17);
		case 62:
			return BitTest(Global_998606.f_604[iVar1 /*88*/].f_76, 17);
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return iVar0;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

void func_993(bool bParam0)//Position - 0x3ACF62
{
	int iVar0;
	int iVar1;
	if (bParam0 >= 21)
	{
		return;
	}
	Global_4718592.f_170137.f_1[bParam0] = __LIB_11__.func_562(13, bParam0, iVar0);
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		Global_4718592.f_170137.f_23[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(0, bParam0, iVar0);
		Global_4718592.f_170137.f_108[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(1, bParam0, iVar0);
		Global_4718592.f_170137.f_278[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(8, bParam0, iVar0);
		Global_4718592.f_170137.f_363[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(9, bParam0, iVar0);
		Global_4718592.f_170137.f_448[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(10, bParam0, iVar0);
		Global_4718592.f_170137.f_533[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(12, bParam0, iVar0);
		Global_4718592.f_170137.f_193[bParam0 /*4*/][iVar0] = __LIB_11__.func_559(7, bParam0, iVar0);
		Global_4718592.f_170137.f_618[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(24, bParam0, iVar0);
		Global_4718592.f_170137.f_703[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(25, bParam0, iVar0);
		Global_4718592.f_170137.f_788[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(26, bParam0, iVar0);
		Global_4718592.f_170137.f_873[bParam0 /*4*/][iVar0] = __LIB_11__.func_559(27, bParam0, iVar0);
		iVar0++;
	}
	Global_4718592.f_170137.f_958[bParam0] = __LIB_11__.func_562(3, bParam0, iVar0);
	Global_4718592.f_170137.f_2440[bParam0] = __LIB_11__.func_562(6, bParam0, iVar0);
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_4718592.f_170137.f_980[bParam0 /*5*/][iVar0] = __LIB_11__.func_562(4, bParam0, iVar0);
		Global_4718592.f_170137.f_1086[bParam0 /*5*/][iVar0] = __LIB_11__.func_559(5, bParam0, iVar0);
		Global_4718592.f_170137.f_1192[bParam0 /*5*/][iVar0] = __LIB_11__.func_562(14, bParam0, iVar0);
		Global_4718592.f_170137.f_1298[bParam0 /*5*/][iVar0] = __LIB_11__.func_562(28, bParam0, iVar0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		Global_4718592.f_170137.f_2462[bParam0 /*4*/][iVar0] = __LIB_11__.func_559(15, bParam0, iVar0);
		Global_4718592.f_170137.f_2547[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(16, bParam0, iVar0);
		Global_4718592.f_170137.f_2632[bParam0 /*4*/][iVar0] = __LIB_11__.func_562(28, bParam0, iVar0);
		iVar0++;
	}
	Global_4718592.f_170137.f_2729[bParam0] = __LIB_11__.func_562(17, bParam0, iVar0);
	Global_4718592.f_170137.f_2773[bParam0] = __LIB_11__.func_562(18, bParam0, iVar0);
	Global_4718592.f_170137.f_2751[bParam0] = __LIB_11__.func_562(19, bParam0, iVar0);
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_4718592.f_170137.f_1404[bParam0 /*5*/][iVar0] = __LIB_11__.func_561(bParam0, iVar0);
		Global_4718592.f_170137.f_1510[bParam0 /*5*/][iVar0] = __LIB_11__.func_562(20, bParam0, iVar0);
		Global_4718592.f_170137.f_1616[bParam0 /*5*/][iVar0] = __LIB_11__.func_562(21, bParam0, iVar0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		Global_4718592.f_170137.f_1722[bParam0 /*11*/][iVar0] = OBJECT::GET_WEAPON_TYPE_FROM_PICKUP_TYPE(__LIB_11__.func_560(bParam0, iVar0));
		Global_4718592.f_170137.f_1954[bParam0 /*11*/][iVar0] = 0;
		Global_4718592.f_170137.f_2186[bParam0 /*11*/][iVar0] = 0;
		iVar0++;
	}
	if (BitTest(360, bParam0))
	{
		MISC::SET_BIT(&(Global_4718592.f_170137.f_2795), bParam0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2795), bParam0);
	}
	if (BitTest(1200, bParam0))
	{
		MISC::SET_BIT(&(Global_4718592.f_170137.f_2796), bParam0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2796), bParam0);
	}
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2798), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2799), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2802), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2803), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2804), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2805), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2801), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2800), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2806), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2807), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2797), bParam0);
	MISC::CLEAR_BIT(&(Global_4718592.f_170137.f_2728), bParam0);
	iVar1 = 0;
	while (iVar1 <= 59)
	{
		Global_4980736.f_69361[iVar1 /*151*/].f_83[bParam0] = 76;
		Global_4980736.f_78422.f_83[bParam0] = 76;
		iVar1++;
	}
}

void func_994(var uParam0)//Position - 0x3AE334
{
	int iVar0;
	uParam0->f_2 = -1;
	uParam0->f_3 = 0;
	__LIB_11__.func_616(uParam0, 0);
	uParam0->f_4 = 0f;
	uParam0->f_5 = -1;
	uParam0->f_6 = -1;
	iVar0 = 0;
	while (iVar0 <= 11)
	{
		__LIB_11__.func_566(uParam0, iVar0);
		iVar0++;
	}
}

void func_995(var uParam0)//Position - 0x3AF09F
{
	*uParam0 = 0;
	uParam0->f_1.f_7 = 0;
	uParam0->f_1.f_1 = 0;
	uParam0->f_1.f_3 = 0;
	uParam0->f_1 = 0;
	uParam0->f_1.f_2 = 0;
	uParam0->f_1.f_4 = 1;
	uParam0->f_1.f_5 = 0;
	uParam0->f_1.f_6 = 0;
	__LIB_11__.func_616(&(uParam0->f_238), 100);
	uParam0->f_248 = -1;
	uParam0->f_9 = 1;
	uParam0->f_9.f_1 = 0;
	uParam0->f_9.f_2 = 0;
	uParam0->f_9.f_3 = 0;
	__LIB_11__.func_616(&(uParam0->f_9.f_6), 0);
	__LIB_11__.func_616(&(uParam0->f_9.f_11), 0);
	uParam0->f_9.f_21 = -1;
	uParam0->f_9.f_22 = -1;
	uParam0->f_9.f_23 = -1;
	__LIB_11__.func_597(&(uParam0->f_49));
	MISC::SET_BIT(&(uParam0->f_49.f_182), 3);
	uParam0->f_249 = 100;
	uParam0->f_250 = 100;
	uParam0->f_253 = 0;
	uParam0->f_33 = 0;
	uParam0->f_33.f_1 = 9;
	uParam0->f_35 = 0;
	uParam0->f_35.f_1 = 1;
	uParam0->f_37.f_1 = 0;
	uParam0->f_37.f_4 = 1;
	uParam0->f_37.f_3 = 0;
	uParam0->f_37.f_5 = 1;
	uParam0->f_37.f_2 = 0;
	uParam0->f_43.f_1 = 0;
	uParam0->f_43.f_4 = 1;
	uParam0->f_43.f_3 = 0;
	uParam0->f_43.f_5 = 1;
	uParam0->f_43.f_2 = 0;
	uParam0->f_254 = 0;
	uParam0->f_255 = -1;
}

void func_996(var uParam0)//Position - 0x3AF44E
{
	int iVar0;
	*uParam0 = 0;
	uParam0->f_1 = 0;
	__LIB_11__.func_584(&(uParam0->f_2));
	uParam0->f_39 = { 0f, 0f, 0f };
	uParam0->f_42 = { 0f, 0f, 0f };
	uParam0->f_45 = 0f;
	uParam0->f_46 = 0;
	uParam0->f_47 = 0.8f;
	uParam0->f_48 = -1;
	uParam0->f_49 = 0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		uParam0->f_50[iVar0] = 0;
		iVar0++;
	}
	uParam0->f_56 = -1;
	uParam0->f_58 = 0;
	uParam0->f_57 = -1;
	uParam0->f_59 = 0;
	uParam0->f_60 = -1;
	__LIB_11__.func_580(&(uParam0->f_61));
	uParam0->f_78 = -1;
	uParam0->f_79 = -1;
	uParam0->f_80 = -1;
	uParam0->f_81 = 10f;
	uParam0->f_82 = -1;
	uParam0->f_83 = 0;
	uParam0->f_84 = 0;
	uParam0->f_85 = -1;
	uParam0->f_86 = 0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		uParam0->f_87[iVar0] = 0;
		iVar0++;
	}
	uParam0->f_92 = 0;
	__LIB_11__.func_585(&(uParam0->f_96));
	uParam0->f_93 = 0;
	uParam0->f_94 = -1;
	uParam0->f_95 = -1;
	uParam0->f_105 = -1;
	uParam0->f_106 = 0;
	uParam0->f_107 = 0;
	uParam0->f_108 = 0;
	uParam0->f_110 = 0;
	uParam0->f_109 = 0;
	uParam0->f_111 = -1;
	uParam0->f_112 = -1;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		uParam0->f_113[iVar0] = 0f;
		iVar0++;
	}
	uParam0->f_118 = 0;
	uParam0->f_140 = 0;
	uParam0->f_162 = 0;
	iVar0 = 0;
	while (iVar0 <= 19)
	{
		uParam0->f_119[iVar0] = 0;
		uParam0->f_141[iVar0] = 0;
		iVar0++;
	}
	__LIB_11__.func_598(&(uParam0->f_163));
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		uParam0->f_215[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 0)
	{
		uParam0->f_219[iVar0] = 0;
		iVar0++;
	}
	uParam0->f_221 = 0;
	uParam0->f_222 = -1;
	uParam0->f_223 = 0;
	uParam0->f_224 = -1;
	uParam0->f_225 = -1;
	uParam0->f_227 = -1;
	uParam0->f_226 = 0;
	__LIB_11__.func_577(&(uParam0->f_228));
}

void func_997(var uParam0)//Position - 0x3AF806
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 29)
	{
		__LIB_11__.func_587(uParam0, iVar0);
		iVar0++;
	}
}

void func_998(int iParam0)//Position - 0x3AFEB0
{
	Global_4718592.f_176572[iParam0 /*8*/] = -1;
	Global_4718592.f_176572[iParam0 /*8*/].f_1 = -1;
	Global_4718592.f_176572[iParam0 /*8*/].f_2 = -1;
	Global_4718592.f_176572[iParam0 /*8*/].f_3 = 0;
	Global_4718592.f_176572[iParam0 /*8*/].f_7 = 0;
	__LIB_11__.func_595(iParam0);
}

void func_999(var uParam0)//Position - 0x3B016D
{
	int iVar0;
	uParam0->f_1 = { 0f, 0f, 0f };
	*uParam0 = 0;
	uParam0->f_9 = 0;
	uParam0->f_8 = -1;
	uParam0->f_10 = -1;
	iVar0 = 0;
	while (iVar0 <= 16)
	{
		uParam0->f_11[iVar0 /*3*/] = { 0f, 0f, 0f };
		iVar0++;
	}
	uParam0->f_5 = 0;
	uParam0->f_4 = 10f;
	uParam0->f_6 = -1;
	uParam0->f_7 = 0;
	uParam0->f_79 = 0;
	uParam0->f_80 = -1;
	uParam0->f_81 = 0;
	uParam0->f_82 = -1;
	uParam0->f_83 = 0;
	uParam0->f_84 = 0;
	iVar0 = 0;
	while (iVar0 <= 19)
	{
		uParam0->f_85[iVar0] = 0;
		uParam0->f_107[iVar0] = 0;
		iVar0++;
	}
	uParam0->f_106 = 0;
	uParam0->f_128 = 0;
	uParam0->f_129 = 0;
	__LIB_11__.func_616(&(uParam0->f_63), 0);
	__LIB_11__.func_584(&(uParam0->f_156));
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		__LIB_11__.func_601(&(uParam0->f_130[iVar0 /*5*/]));
		iVar0++;
	}
}

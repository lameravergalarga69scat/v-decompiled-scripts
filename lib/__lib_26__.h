int func_0(int iParam0)//Position - 0xF88
{
	var uVar0;
	if (iParam0 == -1)
	{
		return 0;
	}
	uVar0 = __LIB_0__.func_228(22032, -1);
	return BitTest(uVar0, iParam0);
}

int func_1(int iParam0, int iParam1, int iParam2)//Position - 0x12B9
{
	int iVar0;
	char* sVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	char cVar5[16];
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_112())
	{
		iVar0 = 0;
		__LIB_19__.func_611(&sVar1, iParam0, iParam2, iVar0);
		iVar2 = MISC::GET_HASH_KEY(&sVar1);
		if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(iVar2))
		{
			iVar3 = NETSHOPPING::NET_GAMESERVER_GET_PRICE(iVar2, joaat("CATEGORY_PROPERTIE"), true);
			StringCopy(&cVar4, __LIB_4__.func_855(iParam1), 16);
			return iVar3;
		}
		else
		{
			StringCopy(&cVar5, __LIB_4__.func_855(iParam1), 16);
		}
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24883 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_1_RENOVATION_ONLY */;
					break;
				case 1:
					return Global_262145.f_24884 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_2 */;
					break;
				case 2:
					return Global_262145.f_24885 /* Tunable: BB_NIGHTCLUB_PROPERTY_STYLE_3 */;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24895 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_DEFAULT_RENOVATION_ONLY */;
					break;
				case 1:
					return Global_262145.f_24896 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_LED_TUBES */;
					break;
				case 2:
					return Global_262145.f_24897 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_GEOMETRIC */;
					break;
				case 3:
					return Global_262145.f_24898 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_RIBBON */;
					break;
				case 4:
					return Global_262145.f_24899 /* Tunable: BB_NIGHTCLUB_PROPERTY_LIGHTING_LASER_SHOW */;
					break;
			}
			break;
		case 2:
			return Global_262145.f_24426 /* Tunable: -438242317 */;
			break;
		case 7:
			return Global_262145.f_24427 /* Tunable: -1426095971 */;
		case 8:
			return Global_262145.f_24428 /* Tunable: 530619504 */;
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 2:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 3:
					return (Global_262145.f_24900 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_1 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
				case 4:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 5:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 6:
					return (Global_262145.f_24901 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_2 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
				case 7:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24903 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_FEMALE */);
					break;
				case 8:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24904 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MALE */);
					break;
				case 9:
					return (Global_262145.f_24902 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_STYLE_3 */ + Global_262145.f_24905 /* Tunable: BB_NIGHTCLUB_PROPERTY_DANCERS_MIXED */);
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return Global_262145.f_24906 /* Tunable: BB_NIGHTCLUB_PROPERTY_DRY_ICE */;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_24886 /* Tunable: 91858633 */;
					break;
				case 1:
					return Global_262145.f_24887 /* Tunable: -1168036437 */;
					break;
				case 2:
					return Global_262145.f_24888 /* Tunable: 1788794576 */;
					break;
				case 3:
					return Global_262145.f_24889 /* Tunable: -1100638156 */;
					break;
				case 4:
					return Global_262145.f_24890 /* Tunable: 1443977855 */;
					break;
				case 5:
					return Global_262145.f_24891 /* Tunable: 176534428 */;
					break;
				case 6:
					return Global_262145.f_24892 /* Tunable: -668591946 */;
					break;
				case 7:
					return Global_262145.f_24893 /* Tunable: 2004204966 */;
					break;
				case 8:
					return Global_262145.f_24894 /* Tunable: 1383136622 */;
					break;
			}
			break;
		case 5:
			return Global_262145.f_24425 /* Tunable: 1585043699 */;
			break;
	}
	return 0;
}

int func_2(int iParam0, int iParam1)//Position - 0x44B1
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar1))
		{
			if (!__LIB_7__.func_246(iVar1, iParam0, 1))
			{
				if (iParam1 || !__LIB_1__.func_424(iVar1, 31))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_3(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x71E9
{
	int iVar0;
	iVar0 = __LIB_4__.func_885(iParam0, iParam1, iParam2, iParam3);
	if (!__LIB_4__.func_884(iParam0))
	{
		iVar0 = (iVar0 + __LIB_11__.func_62(iParam0, __LIB_19__.func_834() + 1, -1, iParam2));
	}
	if (__LIB_4__.func_883(iParam0))
	{
		iVar0 = (iVar0 + iParam2);
	}
	return iVar0;
}

int func_4(int iParam0, int iParam1)//Position - 0x8C25
{
	int iVar0;
	switch (iParam0)
	{
		case 20:
			iVar0 = iVar0;
			break;
		case 0:
			switch (iParam1)
			{
				case 1:
					iVar0 += 7;
					break;
				case 2:
					iVar0 += 6;
					break;
				case 3:
					iVar0 += 4;
					break;
				case 4:
					iVar0 += 2;
					break;
				case 5:
					iVar0 += 3;
					break;
				case 6:
					iVar0 += 2;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 7:
					iVar0 += 4;
					break;
				case 8:
					iVar0 += 4;
					break;
				case 9:
					iVar0 += 2;
					break;
				case 10:
					iVar0 += 2;
					break;
				case 11:
					iVar0 += 2;
					break;
				case 12:
					iVar0 += 4;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 13:
					iVar0 += 2;
					break;
				case 14:
					iVar0 += 4;
					break;
				case 15:
					iVar0 += 6;
					break;
				case 16:
					iVar0 += 3;
					break;
				case 17:
					iVar0 += 3;
					break;
				case 18:
					iVar0 += 2;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 4;
					break;
				case 21:
					iVar0 += 6;
					break;
				case 22:
					iVar0 += 2;
					break;
				case 23:
					iVar0 += 4;
					break;
				case 24:
					iVar0 += 5;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 19:
					iVar0 += 5;
					break;
				case 20:
					iVar0 += 4;
					break;
				case 21:
					iVar0 += 6;
					break;
				case 22:
					iVar0 += 2;
					break;
				case 23:
					iVar0 += 4;
					break;
				case 24:
					iVar0 += 5;
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 31:
					iVar0 += 5;
					break;
				case 32:
					iVar0 += 2;
					break;
				case 33:
					iVar0 += 3;
					break;
				case 34:
					iVar0 += 5;
					break;
				case 35:
					iVar0 += 5;
					break;
				case 36:
					iVar0 += 5;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 68:
					iVar0 = iVar0;
					break;
				case 69:
					iVar0 = iVar0;
					break;
				case 70:
					iVar0 = iVar0;
					break;
				case 71:
					iVar0 = iVar0;
					break;
				case 72:
					iVar0 = iVar0;
					break;
				case 73:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 74:
					iVar0++;
					break;
				case 75:
					iVar0++;
					break;
				case 76:
					iVar0++;
					break;
				case 77:
					iVar0++;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 78:
					iVar0 = iVar0;
					break;
				case 79:
					iVar0 = iVar0;
					break;
				case 80:
					iVar0 = iVar0;
					break;
				case 81:
					iVar0 = iVar0;
					break;
				case 82:
					iVar0 = iVar0;
					break;
				case 83:
					iVar0 = iVar0;
					break;
				case 84:
					iVar0 = iVar0;
					break;
			}
			break;
		case 7:
			iVar0 += 4;
			break;
		case 8:
			switch (iParam1)
			{
				case 62:
					iVar0 += 6;
					break;
				case 63:
					iVar0 += 6;
					break;
				case 64:
					iVar0 += 6;
					break;
				case 65:
					iVar0 += 6;
					break;
				case 66:
					iVar0 += 6;
					break;
				case 67:
					iVar0 += 6;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 85:
					iVar0 = iVar0;
					break;
				case 86:
					iVar0 = iVar0;
					break;
				case 87:
					iVar0 = iVar0;
					break;
				case 88:
					iVar0 = iVar0;
					break;
				case 89:
					iVar0 = iVar0;
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 90:
					iVar0 += 2;
					break;
				case 91:
					iVar0 += 2;
					break;
				case 92:
					iVar0 += 2;
					break;
				case 93:
					iVar0 += 2;
					break;
				case 94:
					iVar0 += 2;
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 37:
					iVar0 += 3;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 38:
					iVar0 += 4;
					break;
				case 39:
					iVar0 += 4;
					break;
				case 40:
					iVar0 += 4;
					break;
				case 41:
					iVar0 += 4;
					break;
			}
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		default:
			iVar0 = iVar0;
			break;
	}
	if ((__LIB_4__.func_870(iParam0) && iParam0 != 7) || iParam0 == 12)
	{
		iVar0 = (iVar0 + __LIB_25__.func_816(iParam0, __LIB_19__.func_834() + 1));
	}
	return iVar0;
}

int func_5(int iParam0, int iParam1, int iParam2)//Position - 0xA1B3
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0 = iVar0;
			break;
		case 8:
			iVar0 = iVar0;
			break;
		case 5:
			iVar0 = iVar0;
			break;
		case 11:
			iVar0 += 3;
			break;
		case 13:
			iVar0 = iVar0;
			break;
		case 4:
			switch (iParam1)
			{
				case 1:
					iVar0 += 2;
					break;
				case 2:
					iVar0 += 2;
					break;
				case 3:
					iVar0 += 2;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 18:
					iVar0 += 2;
					break;
				case 19:
					iVar0 += 2;
					break;
				case 20:
					iVar0 += 2;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 21:
					iVar0 += 7;
					break;
				case 22:
					iVar0 += 7;
					break;
				case 23:
					iVar0 += 7;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 27:
					iVar0 = iVar0;
					break;
				case 28:
					iVar0 = iVar0;
					break;
				case 29:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 30:
					iVar0 += 2;
					break;
				case 31:
					iVar0 += 2;
					break;
				case 32:
					iVar0 += 2;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 36:
					iVar0 += 7;
					break;
				case 37:
					iVar0 += 7;
					break;
				case 38:
					iVar0 += 7;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 39:
					iVar0 += 4;
					break;
				case 40:
					iVar0 += 4;
					break;
				case 41:
					iVar0 += 6;
					break;
			}
			break;
		case 17:
			switch (iParam1)
			{
				case 42:
					iVar0 += 2;
					break;
				case 43:
					iVar0 += 2;
					break;
				case 44:
					iVar0 += 2;
					break;
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 45:
					iVar0 += 6;
					break;
				case 46:
					iVar0 += 6;
					break;
				case 47:
					iVar0 += 6;
					break;
			}
			break;
		case 16:
			switch (iParam1)
			{
				case 48:
					iVar0 += 2;
					break;
				case 49:
					iVar0 += 2;
					break;
				case 50:
					iVar0 += 2;
					break;
			}
			break;
		case 12:
			iVar0 += 11;
			break;
	}
	iVar0 = (iVar0 + __LIB_4__.func_909(iParam0, __LIB_19__.func_834() + 1, iParam2));
	iVar0 = (iVar0 + __LIB_19__.func_10(iParam0));
	return iVar0;
}

int func_6(int iParam0, int iParam1)//Position - 0xB273
{
	int iVar0;
	switch (iParam0)
	{
		case 20:
			iVar0 += 2;
			break;
		case 0:
			switch (iParam1)
			{
				case 1:
					iVar0 += 16;
					break;
				case 2:
					iVar0 += 14;
					break;
				case 3:
					iVar0 += 13;
					break;
				case 4:
					iVar0 += 12;
					break;
				case 5:
					iVar0 += 12;
					break;
				case 6:
					iVar0 += 12;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 7:
					iVar0 += 12;
					break;
				case 8:
					iVar0 += 12;
					break;
				case 9:
					iVar0 += 12;
					break;
				case 10:
					iVar0 += 12;
					break;
				case 11:
					iVar0 += 12;
					break;
				case 12:
					iVar0 += 12;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 13:
					iVar0 += 17;
					break;
				case 14:
					iVar0 += 12;
					break;
				case 15:
					iVar0 += 13;
					break;
				case 16:
					iVar0 += 14;
					break;
				case 17:
					iVar0 += 12;
					break;
				case 18:
					iVar0 += 14;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 19:
					iVar0 += 14;
					break;
				case 20:
					iVar0 += 14;
					break;
				case 21:
					iVar0 += 14;
					break;
				case 22:
					iVar0 += 14;
					break;
				case 23:
					iVar0 += 14;
					break;
				case 24:
					iVar0 += 14;
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 25:
					iVar0 += 4;
					break;
				case 26:
					iVar0 += 4;
					break;
				case 27:
					iVar0 += 4;
					break;
				case 28:
					iVar0 += 4;
					break;
				case 29:
					iVar0 += 4;
					break;
				case 30:
					iVar0 += 4;
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 31:
					iVar0 += 13;
					break;
				case 32:
					iVar0 += 13;
					break;
				case 33:
					iVar0 += 13;
					break;
				case 34:
					iVar0 += 13;
					break;
				case 35:
					iVar0 += 13;
					break;
				case 36:
					iVar0 += 13;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 68:
					iVar0 = iVar0;
					break;
				case 69:
					iVar0 = iVar0;
					break;
				case 70:
					iVar0 = iVar0;
					break;
				case 71:
					iVar0 = iVar0;
					break;
				case 72:
					iVar0 = iVar0;
					break;
				case 73:
					iVar0 = iVar0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 74:
					iVar0 += 10;
					break;
				case 75:
					iVar0 += 10;
					break;
				case 76:
					iVar0 += 10;
					break;
				case 77:
					iVar0 += 10;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 78:
					iVar0 += 3;
					break;
				case 79:
					iVar0 += 3;
					break;
				case 80:
					iVar0 += 3;
					break;
				case 81:
					iVar0 += 3;
					break;
				case 82:
					iVar0 += 5;
					break;
				case 83:
					iVar0 += 3;
					break;
				case 84:
					iVar0 += 3;
					break;
			}
			break;
		case 7:
			iVar0 += 8;
			break;
		case 8:
			switch (iParam1)
			{
				case 62:
					iVar0 += 8;
					break;
				case 63:
					iVar0 += 8;
					break;
				case 64:
					iVar0 += 8;
					break;
				case 65:
					iVar0 += 8;
					break;
				case 66:
					iVar0 += 8;
					break;
				case 67:
					iVar0 += 8;
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 85:
					iVar0 += 3;
					break;
				case 86:
					iVar0 += 3;
					break;
				case 87:
					iVar0 += 3;
					break;
				case 88:
					iVar0 += 3;
					break;
				case 89:
					iVar0 += 3;
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 90:
					iVar0 += 2;
					break;
				case 91:
					iVar0 += 2;
					break;
				case 92:
					iVar0 += 2;
					break;
				case 93:
					iVar0 += 2;
					break;
				case 94:
					iVar0 += 2;
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 37:
					iVar0 += 18;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 38:
					iVar0 += 8;
					break;
				case 39:
					iVar0 += 8;
					break;
				case 40:
					iVar0 += 8;
					break;
				case 41:
					iVar0 += 8;
					break;
			}
			break;
		case 15:
			iVar0 = iVar0;
			break;
		case 16:
			iVar0 = iVar0;
			break;
		case 17:
			iVar0 = iVar0;
			break;
		case 18:
			iVar0 = iVar0;
			break;
		case 19:
			iVar0 = iVar0;
			break;
		default:
			iVar0 = iVar0;
			break;
	}
	if (iParam0 == 12 || iParam0 == 9)
	{
		iVar0 = (iVar0 + __LIB_25__.func_816(iParam0, __LIB_19__.func_834() + 1));
	}
	return iVar0;
}

void func_7(int iParam0, bool bParam1)//Position - 0xFF71
{
	int iVar0;
	int iVar1;
	if (!__LIB_3__.func_121(iParam0))
	{
		return;
	}
	if (bParam1)
	{
		__LIB_9__.func_320(iParam0);
	}
	iVar1 = __LIB_1__.func_556(iParam0, -1, 0);
	iVar0 = __LIB_19__.func_774(iParam0, iVar1);
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_3), iVar0);
}

void func_8(int iParam0, int iParam1)//Position - 0x12654
{
	if ((__LIB_2__.func_232() || !__LIB_4__.func_973(1)) || __LIB_1__.func_297(iParam0) == 3)
	{
		if (!__LIB_7__.func_81(PLAYER::PLAYER_ID(), 0) && !__LIB_7__.func_81(PLAYER::PLAYER_ID(), 3))
		{
			__LIB_4__.func_830(iParam0);
			__LIB_4__.func_826(iParam0, __LIB_8__.func_301(1, 1), __LIB_4__.func_829(), __LIB_4__.func_828(), __LIB_4__.func_827(), iParam1);
		}
	}
}

void func_9(var uParam0)//Position - 0x16A6F
{
	if (*uParam0 >= __LIB_9__.func_586())
	{
		*uParam0 = -1;
	}
}

bool func_10(int iParam0)//Position - 0x16E92
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (Global_4718592.f_162510.f_4 == 2 && BitTest(Global_4718592.f_162510.f_14, 2));
	}
	return (!__LIB_9__.func_588(iParam0) && !__LIB_9__.func_588(iParam0));
}

void func_11(bool bParam0)//Position - 0xECCB
{
	if (bParam0)
	{
		if (!__LIB_9__.func_597())
		{
			MISC::SET_BIT(&Global_1958711, 18);
		}
	}
	else if (__LIB_9__.func_597())
	{
		MISC::CLEAR_BIT(&Global_1958711, 18);
	}
}

void func_12(int iParam0, int iParam1, var uParam2, bool bParam3)//Position - 0x7DB4
{
	int iVar0;
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__.func_330(uParam2)];
	if (iVar0 != 0)
	{
		STATS::STAT_SET_INT(iVar0, iParam1, bParam3);
	}
	switch (iParam0)
	{
		case 788:
			Global_1659687[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 789:
			Global_1659693[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 790:
			Global_1659699[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 791:
			Global_1659705[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8729:
			Global_1659711[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 778:
			Global_1659657[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 779:
			Global_1659663[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 780:
			Global_1659669[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 781:
			Global_1659675[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8731:
			Global_1659681[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 768:
			Global_1659627[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 769:
			Global_1659633[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 770:
			Global_1659639[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 771:
			Global_1659645[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8733:
			Global_1659651[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 758:
			Global_1659717[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 759:
			Global_1659723[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 760:
			Global_1659729[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 761:
			Global_1659735[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8735:
			Global_1659741[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 1304:
			Global_1659747[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 7236:
			Global_1659753[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 640:
			Global_1659759[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 1279:
			Global_1659765[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 1878:
			Global_2869777[0 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 2269:
			Global_2869777[1 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 2932:
			Global_2869777[2 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3061:
			Global_2869777[3 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 11391:
			Global_2869950[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 765:
			Global_1659771[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 766:
			Global_1659777[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 767:
			Global_1659783[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8734:
			Global_1659789[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 9538:
			Global_1659795[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 1237:
			Global_1659801[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3056:
			Global_2869862[0 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3057:
			Global_2869862[1 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3058:
			Global_2869862[2 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3059:
			Global_2869862[3 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3060:
			Global_2869862[4 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3639:
			Global_2869953[0 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3640:
			Global_2869953[1 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3641:
			Global_2869953[2 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3642:
			Global_2869953[3 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3643:
			Global_2869953[4 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3644:
			Global_2869969[0 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3645:
			Global_2869969[1 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3646:
			Global_2869969[2 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3647:
			Global_2869969[3 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3648:
			Global_2869969[4 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3224:
			Global_2869862[5 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3230:
			Global_2869777[4 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3666:
			Global_2869985[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3667:
			Global_2869994[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3668:
			Global_2869988[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3669:
			Global_2869997[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3670:
			Global_2869991[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3671:
			Global_2870000[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3692:
			Global_2870003[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3232:
			Global_2869862[6 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3233:
			Global_2869777[5 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3237:
			Global_2869862[7 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 3235:
			Global_2869777[6 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4022:
			Global_2869862[8 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4023:
			Global_2869777[7 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4025:
			Global_2869862[9 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4026:
			Global_2869777[8 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4028:
			Global_2869862[10 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4029:
			Global_2869777[9 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4031:
			Global_2869862[11 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 4032:
			Global_2869777[10 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6112:
			Global_2869862[12 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6113:
			Global_2869777[11 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6170:
			Global_2869862[13 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6171:
			Global_2869777[12 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6548:
			Global_2869862[14 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6549:
			Global_2869777[13 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6561:
			Global_2869862[15 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6562:
			Global_2869777[14 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6564:
			Global_2869862[16 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6565:
			Global_2869777[15 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6567:
			Global_2869862[17 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 6568:
			Global_2869777[16 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 7286:
			Global_2869777[17 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 7288:
			Global_2869777[18 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 7290:
			Global_2869777[19 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8013:
			Global_2869777[20 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8285:
			Global_2870006[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8286:
			Global_2870009[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8287:
			Global_2870012[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8288:
			Global_2870015[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8289:
			Global_2870018[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8290:
			Global_2870021[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8291:
			Global_2870024[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8292:
			Global_2870027[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8293:
			Global_2870030[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8294:
			Global_2870033[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8295:
			Global_2870036[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8296:
			Global_2870039[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8297:
			Global_2870042[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8905:
			Global_2870045[__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8537:
			Global_2869777[21 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8982:
			Global_2869862[23 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8980:
			Global_2869777[22 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8985:
			Global_2869862[24 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 8983:
			Global_2869777[23 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 9624:
			Global_2869777[24 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 9913:
			Global_2869777[25 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 10443:
			Global_2869862[27 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 10441:
			Global_2869777[26 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 10446:
			Global_2869862[28 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		case 10444:
			Global_2869777[27 /*3*/][__LIB_0__.func_330(uParam2)] = iParam1;
			break;
		default:
			break;
	}
}

void func_13(int iParam0, int iParam1, var uParam2, bool bParam3, bool bParam4)//Position - 0x8AF1
{
	int iVar0;
	if (bParam4)
	{
	}
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__.func_330(uParam2)];
	if (iVar0 != 0)
	{
		STATS::STAT_SET_INT(iVar0, iParam1, bParam3);
	}
}

int func_14()//Position - 0x125A9
{
	if (Global_1574612)
	{
		return 1;
	}
	if (__LIB_0__.func_189())
	{
		return 1;
	}
	if (__LIB_0__.func_188())
	{
		return 1;
	}
	return __LIB_0__.func_421(120, -1);
}

int func_15(int iParam0, int iParam1)//Position - 0x8229
{
	return __LIB_0__.func_534(__LIB_9__.func_301(iParam1), iParam0, 0);
}

int func_16(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0xF2A5
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	var uVar3;
	bVar0 = false;
	if (!__LIB_0__.func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__.func_5()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam2 == joaat("CATEGORY_WEAPON_AMMO") || iParam2 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	bVar2 = false;
	iVar1 = 0;
	while (iVar1 < 15)
	{
		if (Global_4534105[iVar1 /*85*/].f_66.f_2 == 0)
		{
			bVar2 = true;
		}
		else if (Global_4534105[iVar1 /*85*/].f_66.f_5 == 1)
		{
			return 0;
		}
		iVar1++;
	}
	if (!bVar2)
	{
		return 0;
	}
	*iParam0 = 0;
	if (!bVar0)
	{
		if (NETSHOPPING::NET_GAMESERVER_BASKET_IS_ACTIVE())
		{
			NETSHOPPING::NET_GAMESERVER_BASKET_END();
		}
	}
	if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_START(&uVar3, iParam2, iParam3, iParam4))
	{
		*iParam0 = __LIB_19__.func_740(uVar3, iParam1, joaat("SERVICE_INVALID"), iParam3, iParam2, 0, 1, iParam4, uParam5, 0, bVar0);
		return 1;
	}
	return 0;
}

int func_17(int iParam0, int iParam1)//Position - 0x93B
{
	int iVar0;
	if (__LIB_9__.func_633(iParam0))
	{
		iVar0 = 0;
		while (iVar0 < 40)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == iParam1 || Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == (1000 + iParam1))
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_18(int iParam0, int iParam1, var uParam2)//Position - 0x2744
{
	float fVar0;
	float fVar1;
	var uVar2[13];
	int iVar3;
	int iVar4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	bool bVar9;
	struct<3> Var10;
	float fVar11;
	float fVar12;
	int iVar13;
	int iVar14;
	int iVar15;
	if (!__LIB_6__.func_401(1))
	{
		return -1;
	}
	fVar0 = Global_262145.f_18151 /* Tunable: FIMPORT_EXPORT_SELL_MIN_LOCATION_DISTANCE_FROM_OFFICE */;
	fVar1 = Global_262145.f_18152 /* Tunable: FIMPORT_EXPORT_SELL_MIN_LOCATION_DISTANCE_FROM_WAREHOUSE */;
	iVar4 = __LIB_0__.func_603(PLAYER::PLAYER_ID());
	if (Global_1853348[iVar4 /*834*/].f_267[5] > -1)
	{
		Var5 = { Global_1312193[Global_1853348[iVar4 /*834*/].f_267[5] /*1951*/].f_38[0 /*27*/].f_23 };
		Var5.f_2 = 0f;
	}
	else
	{
		return -1;
	}
	if (__LIB_9__.func_633(iVar4))
	{
		Var6 = { Global_1946250.f_533[__LIB_1__.func_260(__LIB_2__.func_78(iVar4)) /*3*/] };
		Var6.f_2 = 0f;
	}
	else
	{
		return -1;
	}
	if (iParam1 > 0)
	{
		iVar7 = 0;
		while (iVar7 < iParam1)
		{
			Var10 = { __LIB_3__.func_596((*iParam0)[iVar7]) };
			Var10.f_2 = 0f;
			fVar11 = SYSTEM::VDIST(Var10, Var5);
			fVar12 = SYSTEM::VDIST(Var10, Var6);
			if (fVar11 >= fVar0 && fVar12 >= fVar1)
			{
				__LIB_9__.func_642((*iParam0)[iVar7], &iVar8, &bVar9);
				if (!BitTest((*uParam2)[iVar8], bVar9))
				{
					uVar2[iVar3] = (*iParam0)[iVar7];
					iVar3++;
				}
			}
			iVar7++;
		}
		if (iVar3 > 0)
		{
			iVar13 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar3);
			__LIB_9__.func_642(uVar2[iVar13], &iVar8, &bVar9);
			MISC::SET_BIT(uParam2[iVar8], bVar9);
			return uVar2[iVar13];
		}
		else
		{
			iVar7 = 0;
			while (iVar7 < iParam1)
			{
				__LIB_9__.func_642((*iParam0)[iVar7], &iVar8, &bVar9);
				if (!BitTest((*uParam2)[iVar8], bVar9))
				{
					uVar2[iVar3] = (*iParam0)[iVar7];
					iVar3++;
				}
				iVar7++;
			}
			if (iVar3 > 0)
			{
				iVar14 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar3);
				__LIB_9__.func_642(uVar2[iVar14], &iVar8, &bVar9);
				MISC::SET_BIT(uParam2[iVar8], bVar9);
				return uVar2[iVar14];
			}
			else
			{
				iVar15 = MISC::GET_RANDOM_INT_IN_RANGE(0, iParam1);
				__LIB_9__.func_642(uVar2[iVar15], &iVar8, &bVar9);
				MISC::SET_BIT(uParam2[iVar8], bVar9);
				return uVar2[iVar15];
			}
		}
	}
	else
	{
		return -1;
	}
	return -1;
}

int func_19(int iParam0)//Position - 0x38CE
{
	switch (iParam0)
	{
		case 179:
			if (__LIB_19__.func_831() < 2)
			{
				return 0;
			}
			break;
		case 148:
			if (__LIB_9__.func_505() < 2)
			{
				return 0;
			}
			break;
		default:
			if (__LIB_9__.func_505() < 2)
			{
				return 0;
			}
			break;
	}
	return 1;
}

int func_20(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x4BDD
{
	int iVar0;
	iVar0 = __LIB_4__.func_865(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_19__.func_851(iParam0, iParam2));
	return iVar0;
}

void func_21(int* iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x16337
{
	int iVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	iVar0 = uParam2;
	if (iParam3 > 3)
	{
		iParam3 = 3;
	}
	iVar1 = 0;
	while (iVar1 < iParam3)
	{
		bVar2 = false;
		iVar3 = (iVar0 + iVar1);
		if (iVar3 > 31)
		{
			bVar2 = true;
			iVar3 = (iVar3 - 32);
		}
		if (!bVar2)
		{
			MISC::SET_BIT(iParam0, iVar3);
		}
		else
		{
			MISC::SET_BIT(iParam0, iVar3);
		}
		iVar1++;
	}
	if (*iParam0 != 0)
	{
		__LIB_0__.func_427(5370, *iParam0, -1, 1, 0);
	}
	if (*uParam1 != 0)
	{
		__LIB_0__.func_427(5371, *uParam1, -1, 1, 0);
	}
}

void func_22(bool bParam0)//Position - 0x2470D
{
	__LIB_0__.func_521(27089, bParam0, -1);
	__LIB_9__.func_652(PLAYER::PLAYER_ID(), bParam0);
}

void func_23(bool bParam0)//Position - 0x247AF
{
	__LIB_0__.func_521(27090, bParam0, -1);
	__LIB_9__.func_653(PLAYER::PLAYER_ID(), bParam0);
}

void func_24(char* sParam0, int iParam1, int iParam2)//Position - 0x3C168
{
	StringCopy(sParam0, __LIB_9__.func_659(iParam1), 64);
	StringConCat(sParam0, "_t0_v", 64);
	StringIntConCat(sParam0, iParam2, 64);
}

void func_25(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x3C512
{
	StringCopy(sParam0, __LIB_9__.func_662(iParam1, iParam2), 64);
	StringConCat(sParam0, "_t0_v", 64);
	StringIntConCat(sParam0, iParam3, 64);
}

void func_26(char* sParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x3DF61
{
	StringCopy(sParam0, __LIB_9__.func_663(iParam1, iParam2), 64);
	StringConCat(sParam0, "_t", 64);
	StringIntConCat(sParam0, iParam3, 64);
	StringConCat(sParam0, "_v", 64);
	StringIntConCat(sParam0, iParam4, 64);
}

void func_27(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x428CF
{
	char cVar0[16];
	StringCopy(&cVar0, __LIB_19__.func_789(iParam1, iParam2), 16);
	StringCopy(sParam0, "PR_", 64);
	StringConCat(sParam0, &cVar0, 64);
	StringConCat(sParam0, "_t", 64);
	StringIntConCat(sParam0, iParam3, 64);
	StringConCat(sParam0, "_v0", 64);
}

int func_28(int iParam0, int iParam1)//Position - 0x463E4
{
	int iVar0;
	char* sVar1;
	int iVar2;
	int iVar3;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_112())
	{
		iVar0 = iParam1;
		if (iVar0 == -1)
		{
			iVar0 = 0;
		}
		__LIB_9__.func_667(&sVar1, iParam0, iVar0, 0);
		iVar2 = MISC::GET_HASH_KEY(&sVar1);
		if (NETSHOPPING::NET_GAMESERVER_CATALOG_ITEM_KEY_IS_VALID(iVar2))
		{
			iVar3 = NETSHOPPING::NET_GAMESERVER_GET_PRICE(iVar2, joaat("CATEGORY_PROPERTY_INTERIOR"), true);
			return iVar3;
		}
	}
	switch (iParam0)
	{
		case 0:
			if (iParam1 == 0)
			{
				return Global_262145.f_18052 /* Tunable: BIKER_CLUBHOUSE_STYLE_WALL_STYLE_A */;
			}
			else if (iParam1 == 1)
			{
				return Global_262145.f_18053 /* Tunable: BIKER_CLUBHOUSE_STYLE_WALL_STYLE_B */;
			}
			return 0;
		case 1:
			if (iParam1 == 0)
			{
				return Global_262145.f_18054 /* Tunable: BIKER_CLUBHOUSE_STYLE_WALL_HANGING_A */;
			}
			else if (iParam1 == 1)
			{
				return Global_262145.f_18055 /* Tunable: BIKER_CLUBHOUSE_STYLE_WALL_HANGING_B */;
			}
			return 0;
		case 2:
			if (iParam1 == 0)
			{
				return Global_262145.f_18056 /* Tunable: BIKER_CLUBHOUSE_STYLE_FURNITURE_OPTION_A */;
			}
			else if (iParam1 == 1)
			{
				return Global_262145.f_18057 /* Tunable: BIKER_CLUBHOUSE_STYLE_FURNITURE_OPTION_B */;
			}
			return 0;
		case 3:
			return 0;
			break;
		case 4:
			return Global_262145.f_18074 /* Tunable: BIKER_CLUBHOUSE_CLUB_NAME_FONT */;
		case 5:
			return 0;
		case 6:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_18058 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_CREW */;
				case 1:
					return Global_262145.f_18059 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_1 */;
				case 2:
					return Global_262145.f_18060 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_2 */;
				case 3:
					return Global_262145.f_18061 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_3 */;
				case 4:
					return Global_262145.f_18062 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_4 */;
				case 5:
					return Global_262145.f_18063 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_5 */;
				case 6:
					return Global_262145.f_18064 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_6 */;
				case 7:
					return Global_262145.f_18065 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_7 */;
				case 8:
					return Global_262145.f_18066 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_8 */;
				case 9:
					return Global_262145.f_18067 /* Tunable: BIKER_CLUBHOUSE_CLUB_SIGNAGE_9 */;
				default:
			}
			break;
		case 7:
			return 0;
		case 8:
			return Global_262145.f_18075 /* Tunable: BIKER_CLUBHOUSE_GUN_LOCKER */;
		case 9:
			return Global_262145.f_18076 /* Tunable: BIKER_CLUBHOUSE_CUSTOM_BIKE_SHOP */;
		case 10:
			return Global_262145.f_18073 /* Tunable: BIKER_CLUBHOUSE_CLUB_NAME */;
	}
	return 0;
}

int func_29(int iParam0)//Position - 0x47275
{
	if (__LIB_7__.func_972())
	{
		if (((iParam0 == 88 || iParam0 == 94) || iParam0 == 18) || iParam0 == 56)
		{
			return 1;
		}
	}
	return 0;
}

bool func_30()//Position - 0x482B7
{
	return __LIB_1__.func_556(8721, -1, 0) != 0;
}

int func_31(int iParam0)//Position - 0x49F4A
{
	if (__LIB_7__.func_972())
	{
		if (iParam0 == 28 || iParam0 == 14)
		{
			return 1;
		}
	}
	return 0;
}

void func_32(bool bParam0)//Position - 0x5426B
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2, 17))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2), 17);
		}
		__LIB_1__.func_597(9631, 1, -1, 1, 0);
	}
	else
	{
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2, 17))
		{
			MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_2), 17);
		}
		__LIB_1__.func_597(9631, 0, -1, 1, 0);
	}
}

void func_33(int iParam0, int iParam1)//Position - 0x5AB22
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
					break;
				case 6:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
					break;
				case 7:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 2, -1, 1, 0);
					break;
				case 8:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 3, -1, 1, 0);
					break;
				case 9:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 4, -1, 1, 0);
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
					break;
				case 11:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
					break;
				case 12:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 2, -1, 1, 0);
					break;
				case 13:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 3, -1, 1, 0);
					break;
			}
			break;
		case 3:
			__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
			break;
		case 4:
			__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
			break;
	}
}

int func_34(int iParam0, int iParam1, int iParam2)//Position - 0x5AC8D
{
	if (iParam0 == __LIB_0__.func_160() || !__LIB_8__.func_970(iParam1))
	{
		return 0;
	}
	switch (iParam1)
	{
		case 0:
			return __LIB_19__.func_830(iParam0, iParam2);
		case 1:
			return __LIB_8__.func_968(iParam0, iParam2);
		case 3:
			return __LIB_8__.func_967(iParam0);
		case 2:
			return __LIB_19__.func_771(iParam0, iParam2);
		case 4:
			return __LIB_8__.func_962(iParam0);
		default:
	}
	return 0;
}

void func_35(int iParam0, int iParam1)//Position - 0x5B0DB
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 0, -1, 1, 0);
					break;
				case 1:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
					break;
				case 2:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 2, -1, 1, 0);
					break;
				case 3:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 3, -1, 1, 0);
					break;
				case 4:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 4, -1, 1, 0);
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
					break;
				case 6:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 2, -1, 1, 0);
					break;
				case 7:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 3, -1, 1, 0);
					break;
				case 8:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 4, -1, 1, 0);
					break;
				case 9:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 5, -1, 1, 0);
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 2, -1, 1, 0);
					break;
				case 11:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 3, -1, 1, 0);
					break;
				case 12:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 4, -1, 1, 0);
					break;
				case 13:
					__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 5, -1, 1, 0);
					break;
			}
			break;
		case 3:
			__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
			break;
		case 4:
			__LIB_1__.func_597(__LIB_1__.func_341(iParam0), 1, -1, 1, 0);
			break;
	}
}

int func_36(int iParam0)//Position - 0x5BC40
{
	int iVar0;
	if (iParam0 == -1)
	{
		return -1;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (__LIB_9__.func_664(iVar0) == iParam0)
		{
			return iVar0;
		}
		iVar0++;
	}
	return 0;
}

void func_37(int iParam0)//Position - 0x6E302
{
	Global_1640675 = 0;
	__LIB_0__.func_521(__LIB_9__.func_728(iParam0), 0, -1);
	if (iParam0 == 5)
	{
		__LIB_0__.func_521(15440, 0, -1);
	}
	Global_1640746 = 0;
	__LIB_0__.func_579(&Global_1640747);
}

int func_38()//Position - 0x7195F
{
	if ((((((__LIB_6__.func_926() || __LIB_7__.func_40()) || __LIB_6__.func_931()) || __LIB_7__.func_47()) || __LIB_9__.func_202()) || __LIB_0__.func_974()) || __LIB_0__.func_973())
	{
		return 1;
	}
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && BitTest(Global_4718592.f_36, 1))
	{
		return 1;
	}
	return 0;
}

void func_39(bool bParam0)//Position - 0xC5DC0
{
	if (bParam0)
	{
		if (__LIB_1__.func_302(4))
		{
			__LIB_1__.func_484(21);
			__LIB_1__.func_484(22);
		}
		__LIB_1__.func_484(31);
		__LIB_8__.func_124(bParam0);
	}
	else
	{
		if (__LIB_0__.func_163(PLAYER::PLAYER_ID(), 21))
		{
			__LIB_1__.func_485(21);
			if (!__LIB_1__.func_302(3) && __LIB_1__.func_302(4))
			{
				__LIB_1__.func_484(22);
			}
		}
		__LIB_1__.func_485(31);
		__LIB_8__.func_124(bParam0);
	}
}

void func_40(int iParam0)//Position - 0xC64A7
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_5__.func_874();
	iVar1 = NETWORK::GET_CLOUD_TIME_AS_INT();
	iVar2 = __LIB_5__.func_873();
	if (iVar0 == 0)
	{
		__LIB_5__.func_872();
	}
	else if ((iVar0 - iVar1) >= Global_262145.f_27176 /* Tunable: VC_CASINO_CHIP_MAX_WIN_LOSS_COOLDOWN */)
	{
		__LIB_19__.func_214();
		iVar2 = 0;
	}
	if ((iParam0 + iVar2) >= Global_262145.f_27178 /* Tunable: VC_CASINO_CHIP_MAX_WIN_DAILY */)
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_WON_GD"), Global_262145.f_27178 /* Tunable: VC_CASINO_CHIP_MAX_WIN_DAILY */);
		__LIB_19__.func_214();
		Global_2725354 = 1;
	}
	else
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_WON_GD"), (iVar2 + iParam0));
	}
}

void func_41(int iParam0)//Position - 0xC6563
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_5__.func_876();
	iVar1 = NETWORK::GET_CLOUD_TIME_AS_INT();
	iVar2 = __LIB_5__.func_827();
	if (iVar0 == 0)
	{
		__LIB_5__.func_875();
	}
	else if ((iVar0 - iVar1) >= Global_262145.f_27175 /* Tunable: VC_CASINO_CHIP_MAX_BUY_COOLDOWN */)
	{
		__LIB_19__.func_215();
		iVar2 = 0;
	}
	if (iParam0 + iVar2) > __LIB_5__.func_828()
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_PUR_GD"), __LIB_5__.func_828());
		__LIB_19__.func_215();
	}
	else
	{
		__LIB_0__.func_779(joaat("MPPLY_CASINO_CHIPS_PUR_GD"), (iVar2 + iParam0));
	}
}

void func_42(int iParam0)//Position - 0xC8362
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_131), __LIB_9__.func_744(iVar0));
		iVar0++;
	}
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_131), __LIB_9__.func_744(iParam0));
}

void func_43(int iParam0)//Position - 0xD0864
{
	if (iParam0 != -1)
	{
		MISC::SET_BIT(&(Global_2359296[__LIB_0__.func_153() /*5567*/].f_1[(iParam0 / 32)]), (iParam0 % 32));
		Global_2359296[__LIB_0__.func_153() /*5567*/] = NETWORK::GET_CLOUD_TIME_AS_INT();
		__LIB_11__.func_271();
		__LIB_0__.func_371();
	}
}

int func_44(int iParam0)//Position - 0x11CE77
{
	return __LIB_19__.func_842(iParam0);
}

char* func_45(int iParam0)//Position - 0x122772
{
	if (((__LIB_0__.func_163(iParam0, 28) || __LIB_0__.func_163(PLAYER::PLAYER_ID(), 28)) || __LIB_9__.func_509(iParam0)) && !__LIB_9__.func_772(iParam0))
	{
		return __LIB_1__.func_435();
	}
	if (iParam0 != PLAYER::PLAYER_ID())
	{
		if (!__LIB_0__.func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
		{
			return __LIB_1__.func_435();
		}
	}
	if (__LIB_18__.func_185(iParam0, 1))
	{
		if (__LIB_1__.func_359(iParam0))
		{
			return __LIB_1__.func_192(&(Global_1892703[iParam0 /*599*/].f_10.f_105));
		}
		else
		{
			return __LIB_1__.func_192(&(Global_1892703[iParam0 /*599*/].f_10.f_354));
		}
	}
	else
	{
		return __LIB_1__.func_192(&(Global_1892703[iParam0 /*599*/].f_10.f_354));
	}
	return "";
}

int func_46(int iParam0)//Position - 0x13C454
{
	int iVar0;
	if (Global_117[iParam0 /*10*/].f_8 != 166)
	{
		if (__LIB_0__.func_532(iParam0, Global_20266) == 1)
		{
			__LIB_9__.func_776(iParam0, Global_20266, 0);
			if (__LIB_0__.func_166(iParam0, Global_20266) == 0)
			{
				iVar0 = Global_20266;
				__LIB_6__.func_826(iParam0, iVar0);
			}
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

int func_47(int iParam0)//Position - 0x1473EA
{
	int iVar0;
	iParam0 += 159;
	__LIB_1__.func_327(iParam0, &iVar0, 0);
	if ((iVar0 >= 0 && Global_1585857[iVar0 /*142*/].f_66 != 0) && !__LIB_19__.func_695(iParam0))
	{
		return 1;
	}
	return 0;
}

struct<16> func_48()//Position - 0x14A943
{
	int iVar0;
	struct<16> Var1;
	iVar0 = __LIB_0__.func_603(PLAYER::PLAYER_ID());
	if (iVar0 != __LIB_0__.func_160())
	{
		if (iVar0 != PLAYER::PLAYER_ID())
		{
			if (((__LIB_0__.func_163(iVar0, 28) || __LIB_0__.func_163(PLAYER::PLAYER_ID(), 28)) || __LIB_9__.func_509(iVar0)) && !__LIB_9__.func_772(iVar0))
			{
				StringCopy(&Var1, __LIB_25__.func_971(iVar0, 0), 64);
				return Var1;
			}
			if (!__LIB_0__.func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				StringCopy(&Var1, __LIB_25__.func_971(iVar0, 0), 64);
				return Var1;
			}
		}
		return Global_1892703[iVar0 /*599*/].f_10.f_105;
	}
	StringCopy(&Var1, "", 64);
	return Var1;
}

struct<16> func_49(int iParam0)//Position - 0x14AACB
{
	struct<16> Var0;
	if (Global_1892703[iParam0 /*599*/].f_10.f_121 != Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_121)
	{
		StringCopy(&Var0, __LIB_25__.func_971(iParam0, 0), 64);
		return Var0;
	}
	if (((__LIB_0__.func_163(iParam0, 28) || __LIB_0__.func_163(PLAYER::PLAYER_ID(), 28)) || __LIB_9__.func_509(iParam0)) && !__LIB_9__.func_772(iParam0))
	{
		StringCopy(&Var0, __LIB_25__.func_971(iParam0, 0), 64);
		return Var0;
	}
	if (iParam0 != PLAYER::PLAYER_ID())
	{
		if (!__LIB_0__.func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
		{
			StringCopy(&Var0, __LIB_25__.func_971(iParam0, 0), 64);
			return Var0;
		}
	}
	if (__LIB_1__.func_113(iParam0, 1) && !__LIB_18__.func_185(iParam0, 1))
	{
		if (__LIB_0__.func_581(iParam0))
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_338;
		}
		else
		{
			return Global_1892703[iParam0 /*599*/].f_10.f_105;
		}
	}
	else
	{
		return Global_1892703[iParam0 /*599*/].f_10.f_338;
	}
	StringCopy(&Var0, "", 64);
	return Var0;
}

void func_50()//Position - 0xE1F
{
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247))
	{
		__LIB_19__.func_843();
		if (Global_20265 == 1)
		{
			if (Global_20254)
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 5f, -1f, -1f, "CELL_203" /* GXT: ANSWER */, 0, 0, 0, 0);
			}
			else
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 1f, 5f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			if (Global_21652)
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (BitTest(Global_8136, 20))
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_204" /* GXT: REJECT */, 0, 0, 0, 0);
			}
			else
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
		}
		else
		{
			__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			MISC::CLEAR_BIT(&Global_8136, 17);
			if (BitTest(Global_8136, 20))
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
			}
			else if (Global_20254)
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, "CELL_202" /* GXT: END CALL */, 0, 0, 0, 0);
				if (Global_20209)
				{
					__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
				}
			}
			else
			{
				__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 6f, -1f, -1f, 0, 0, 0, 0, 0);
			}
		}
	}
}

void func_51(int iParam0)//Position - 0x69C
{
	if (!__LIB_9__.func_787(iParam0))
	{
		MISC::SET_BIT(&(Global_1888478.f_3), iParam0);
	}
}

int func_52(int iParam0, int iParam1)//Position - 0xEE9
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < __LIB_9__.func_791())
	{
		if (Global_1888478.f_7[iVar0 /*8*/].f_7 == iParam1)
		{
			iParam0 = (iParam0 - 1);
			if (iParam0 < 0)
			{
				return iVar0;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_53(int iParam0, char* sParam1, int iParam2, char* sParam3, int iParam4, char* sParam5, int* iParam6)//Position - 0x55D25
{
	__LIB_19__.func_918(2, iParam0, sParam1, 0, iParam6, -1);
	__LIB_19__.func_918(1, iParam2, sParam3, 1, iParam6, 17);
	__LIB_19__.func_918(3, iParam4, sParam5, 2, iParam6, -1);
}

bool func_54(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xB18F7
{
	int iVar0;
	bool bVar1;
	bVar1 = false;
	iVar0 = 0;
	while (iVar0 < __LIB_4__.func_9())
	{
		(*uParam2)[iVar0] = __LIB_9__.func_808(iVar0);
		(*uParam0)[iVar0] = __LIB_7__.func_713(iVar0);
		(*uParam1)[iVar0] = (*uParam0)[iVar0];
		if (!bVar1 && (Global_23150.f_1616[iVar0] != (*uParam1)[iVar0] || !MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_79[iVar0 /*6*/]), (*uParam2)[iVar0])))
		{
			bVar1 = true;
		}
		*uParam3++;
		iVar0++;
	}
	return bVar1;
}

int func_55(bool bParam0, int iParam1, bool bParam2, int iParam3)//Position - 0x16B91
{
	char* sVar0;
	__LIB_9__.func_849(&sVar0, bParam0, iParam1, bParam2, iParam3);
	return MISC::GET_HASH_KEY(&sVar0);
}

int func_56()//Position - 0x16C1F
{
	if (__LIB_0__.func_649(&(Global_2789228.f_142)) && !__LIB_2__.func_47(&(Global_2789228.f_142), Global_262145.f_15610 /* Tunable: EXEC_BUY_FAIL_COOLDOWN */, 1))
	{
		return 0;
	}
	return 1;
}

void func_57(var uParam0, bool bParam1)//Position - 0x1EA3E
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5613 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	Global_23150.f_4309[Global_23150.f_5613] = uParam0;
	Global_23150.f_5613++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 2;
	Global_23150.f_6134++;
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_8__.func_911();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_8__.func_910();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_58(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x1F1C0
{
	float fVar0;
	float fVar1;
	var uVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	if (bParam3)
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 9;
	}
	else
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 7;
	}
	Global_23150.f_6134++;
	fVar0 = __LIB_8__.func_911();
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_8__.func_911();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &uVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_8__.func_910();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_59(int iParam0, int iParam1)//Position - 0x9428
{
	int iVar0;
	if (iParam0 <= 0)
	{
		return;
	}
	iVar0 = __LIB_0__.func_534(iParam1, -1, 0);
	__LIB_0__.func_427(iParam1, (iVar0 + iParam0), -1, 1, 0);
}

int func_60(int iParam0)//Position - 0x4B1F
{
	if (__LIB_0__.func_396(iParam0) == 264)
	{
		return __LIB_1__.func_337(iParam0);
	}
	return -1;
}

void func_61()//Position - 0x288
{
	if (Global_20254)
	{
		__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 13f, -1f, -1f, "CELL_201" /* GXT: CALL */, 0, 0, 0, 0);
		__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 14f, -1f, -1f, "CELL_213" /* GXT: NO */, 0, 0, 0, 0);
	}
	else
	{
		__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 2f, 0f, 13f, -1f, -1f, 0, 0, 0, 0, 0);
		__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 3f, 1f, 14f, -1f, -1f, 0, 0, 0, 0, 0);
	}
	__LIB_3__.func_637(Global_20247, "SET_SOFT_KEYS", 1f, 0f, 1f, -1f, -1f, 0, 0, 0, 0, 0);
	MISC::CLEAR_BIT(&Global_8136, 17);
}

void func_62(var uParam0)//Position - 0x183170
{
	if (CAM::DOES_CAM_EXIST(uParam0->f_1.f_39))
	{
		if (CAM::GET_RENDERING_CAM() == uParam0->f_1.f_39)
		{
			CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
		}
		CAM::DESTROY_CAM(uParam0->f_1.f_39, false);
		if (__LIB_8__.func_312() && !__LIB_0__.func_706())
		{
			STREAMING::CLEAR_FOCUS();
		}
		MISC::CLEAR_BIT(&(uParam0->f_1), 15);
		if ((!BitTest(Global_2621446, 18) && uParam0->f_47.f_1467 != 10) && uParam0->f_47.f_1467 != 11)
		{
			HUD::DISPLAY_RADAR(true);
		}
		uParam0->f_1.f_41 = 0;
		__LIB_7__.func_176(1, __LIB_1__.func_282(), 1);
		MISC::SET_BIT(&(uParam0->f_47), 1);
		__LIB_6__.func_151();
		__LIB_6__.func_287(0);
		__LIB_6__.func_286();
	}
	if (BitTest(uParam0->f_1, 16))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 16);
	}
	if (BitTest(uParam0->f_1, 17))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 17);
	}
}

int func_63()//Position - 0x18D62C
{
	int iVar0;
	if (Global_2715699.f_6597 && Global_2725323)
	{
		if (__LIB_18__.func_741(0))
		{
			if (__LIB_4__.func_715() && !CAM::IS_SCREEN_FADED_OUT())
			{
				if ((((Global_2715699.f_6619 == 122 || Global_2715699.f_6619 == 123) || Global_2715699.f_6619 == 124) || Global_2715699.f_6619 == 125) || Global_2715699.f_6619 == 154)
				{
					return 1;
				}
				if (Global_2715699.f_6619 > -1)
				{
					iVar0 = __LIB_0__.func_170(Global_2715699.f_6619);
					if (iVar0 == 24)
					{
						return 1;
					}
				}
				if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2, 26))
				{
					return 1;
				}
				if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2, 27))
				{
					return 1;
				}
				if (__LIB_0__.func_490())
				{
					return 1;
				}
				if (Global_1958741)
				{
					return 1;
				}
				if (BitTest(Global_4718592.f_37, 23))
				{
					if (!__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0) && !__LIB_0__.func_81())
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_64(var uParam0)//Position - 0x18EA83
{
	PAD::DISABLE_ALL_CONTROL_ACTIONS(0 /*PLAYER_CONTROL*/);
	PAD::DISABLE_ALL_CONTROL_ACTIONS(2 /*FRONTEND_CONTROL*/);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(1), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(0), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 187 /*INPUT_FRONTEND_DOWN*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 205 /*INPUT_FRONTEND_LB*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 189 /*INPUT_FRONTEND_LEFT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 207 /*INPUT_FRONTEND_LT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 199 /*INPUT_FRONTEND_PAUSE*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 206 /*INPUT_FRONTEND_RB*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 190 /*INPUT_FRONTEND_RIGHT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 208 /*INPUT_FRONTEND_RT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 217 /*INPUT_FRONTEND_SELECT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 188 /*INPUT_FRONTEND_UP*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(224), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 204 /*INPUT_FRONTEND_Y*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 218 /*INPUT_SCRIPT_LEFT_AXIS_X*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 219 /*INPUT_SCRIPT_LEFT_AXIS_Y*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(228), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(229), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(230), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(231), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(226), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(227), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(1), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(224), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(222), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(0), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(234), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(235), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(232), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(233), true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/, true);
	if (__LIB_6__.func_154())
	{
		PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(231), true);
	}
	if (__LIB_4__.func_73(&(uParam0->f_1)) != 3)
	{
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 0 /*INPUT_NEXT_CAMERA*/, true);
		if (uParam0->f_47.f_23 != 3)
		{
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 0 /*INPUT_NEXT_CAMERA*/, true);
		}
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 0 /*INPUT_NEXT_CAMERA*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 1 /*INPUT_LOOK_LR*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 2 /*INPUT_LOOK_UD*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 3 /*INPUT_LOOK_UP_ONLY*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 4 /*INPUT_LOOK_DOWN_ONLY*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 5 /*INPUT_LOOK_LEFT_ONLY*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 6 /*INPUT_LOOK_RIGHT_ONLY*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 95 /*INPUT_VEH_CINEMATIC_UD*/, true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 98 /*INPUT_VEH_CINEMATIC_LR*/, true);
	}
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(230), true);
		PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(231), true);
		if (__LIB_6__.func_338() == 2)
		{
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(228), true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(229), true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(230), true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, __LIB_6__.func_183(231), true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 218 /*INPUT_SCRIPT_LEFT_AXIS_X*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 219 /*INPUT_SCRIPT_LEFT_AXIS_Y*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 220 /*INPUT_SCRIPT_RIGHT_AXIS_X*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 221 /*INPUT_SCRIPT_RIGHT_AXIS_Y*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 31 /*INPUT_MOVE_UD*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 30 /*INPUT_MOVE_LR*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 1 /*INPUT_LOOK_LR*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 2 /*INPUT_LOOK_UD*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 21 /*INPUT_SPRINT*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 9 /*INPUT_SCRIPTED_FLY_LR*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 8 /*INPUT_SCRIPTED_FLY_UD*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 11 /*INPUT_SCRIPTED_FLY_ZDOWN*/, true);
			PAD::ENABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 10 /*INPUT_SCRIPTED_FLY_ZUP*/, true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(1), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(224), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(222), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(0), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(234), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(235), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(232), true);
			PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, __LIB_6__.func_183(233), true);
		}
	}
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	PAD::DISABLE_CONTROL_ACTION(1 /*CAMERA_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 82 /*INPUT_VEH_PREV_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 81 /*INPUT_VEH_NEXT_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 16 /*INPUT_SELECT_NEXT_WEAPON*/, false);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 17 /*INPUT_SELECT_PREV_WEAPON*/, false);
	if (MISC::IS_PC_VERSION())
	{
		if (!HUD::IS_WARNING_MESSAGE_ACTIVE())
		{
			PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
		}
	}
	if (__LIB_6__.func_161())
	{
		PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 199 /*INPUT_FRONTEND_PAUSE*/, true);
	}
	if (__LIB_6__.func_215(&(uParam0->f_47)) != 5)
	{
		PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 245 /*INPUT_MP_TEXT_CHAT_ALL*/, true);
		PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 246 /*INPUT_MP_TEXT_CHAT_TEAM*/, true);
	}
	if (NETWORK::NETWORK_TEXT_CHAT_IS_TYPING() || BitTest(uParam0->f_47, 19))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 0 /*INPUT_NEXT_CAMERA*/, true);
	}
}

void func_65(var uParam0)//Position - 0x19002A
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0) || (__LIB_6__.func_153(&(uParam0->f_1)) && __LIB_4__.func_746(&(uParam0->f_1))))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_2621446.f_2))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(Global_2621446.f_2);
			if (BitTest(Global_2815059.f_4660, 31))
			{
				iVar0 = PLAYER::GET_PLAYER_INDEX();
				if (iVar0 != __LIB_0__.func_160())
				{
					iVar2 = 0;
					while (iVar2 <= 31)
					{
						iVar3 = PLAYER::INT_TO_PARTICIPANTINDEX(iVar2);
						if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(iVar3))
						{
							iVar4 = NETWORK::NETWORK_GET_PLAYER_INDEX(iVar3);
							if (__LIB_0__.func_723(iVar4, iVar0, -2, 1) || BitTest(Global_4718592.f_23, 16))
							{
								NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar4, true);
								NETWORK::NETWORK_OVERRIDE_SEND_RESTRICTIONS(iVar4, true);
							}
							else
							{
								NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar4, false);
								NETWORK::NETWORK_OVERRIDE_SEND_RESTRICTIONS(iVar4, false);
							}
						}
						iVar2++;
					}
				}
			}
			else
			{
				iVar0 = PLAYER::INT_TO_PLAYERINDEX(uParam0->f_1.f_43);
				if (iVar0 != __LIB_0__.func_160() && iVar1 != __LIB_0__.func_160())
				{
					if (__LIB_1__.func_264(iVar0, 0, 1) && __LIB_1__.func_264(iVar1, 0, 1))
					{
						if ((!__LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0) || (__LIB_6__.func_154() && __LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))) || BitTest(Global_4718592.f_23, 16))
						{
							NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar0, true);
						}
						else if (!__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0) && __LIB_1__.func_381(PLAYER::PLAYER_ID()))
						{
							NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar0, true);
							NETWORK::NETWORK_OVERRIDE_SEND_RESTRICTIONS(iVar0, true);
						}
						else if (__LIB_0__.func_723(iVar1, iVar0, -2, 1) || PLAYER::GET_PLAYER_TEAM(iVar1) == -1)
						{
							NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar0, true);
						}
						else
						{
							NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar0, false);
						}
					}
				}
			}
		}
		uParam0->f_1.f_43++;
		if (uParam0->f_1.f_43 >= __LIB_1__.func_527())
		{
			uParam0->f_1.f_43 = 0;
		}
	}
}

int func_66(int iParam0)//Position - 0x1903D0
{
	if (__LIB_0__.func_236())
	{
		return 1;
	}
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0) || Global_2789733)
	{
		return Global_1853348[iParam0 /*834*/].f_205.f_52;
	}
	return 1;
}

int func_67(int iParam0)//Position - 0x192051
{
	if (Global_1574963)
	{
		if (!__LIB_0__.func_905(PLAYER::PLAYER_ID()))
		{
			if (!__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0) && !__LIB_0__.func_911(PLAYER::PLAYER_ID()))
			{
				if (!BitTest(Global_2621446, 20) || Global_2621446.f_82)
				{
					if (PLAYER::GET_PLAYER_TEAM(iParam0) != -1)
					{
						if (!BitTest(Global_2621446.f_69.f_5, 14) && !BitTest(Global_4718592.f_658[PLAYER::GET_PLAYER_TEAM(iParam0) /*22957*/].f_12180, 6))
						{
							if (PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) != PLAYER::GET_PLAYER_TEAM(iParam0) && !__LIB_0__.func_610(PLAYER::GET_PLAYER_TEAM(iParam0), PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()), 0))
							{
								return 0;
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

int func_68()//Position - 0x1924D1
{
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		if (__LIB_6__.func_338() == 2)
		{
			if (Global_1836363)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_69(int iParam0)//Position - 0x193E89
{
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
			return 1;
			break;
		case 11:
			if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
			{
				if (__LIB_6__.func_154())
				{
					return 1;
				}
			}
			break;
	}
	return 0;
}

void func_70(var uParam0)//Position - 0x197411
{
	if ((!__LIB_0__.func_236() || !NETWORK::NETWORK_IS_ACTIVITY_SESSION()) || !__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		return;
	}
	switch (*uParam0)
	{
		case 0:
			__LIB_6__.func_231();
			uParam0->f_4 = GRAPHICS::REQUEST_SCALEFORM_MOVIE("MP_SPECTATOR_OVERLAY");
			*uParam0++;
			break;
		case 1:
			if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_4))
			{
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_4, "SHOW_TICKER");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				__LIB_6__.func_230(uParam0, 0);
				__LIB_8__.func_839(uParam0);
				__LIB_6__.func_227(uParam0, 0);
				uParam0->f_1 = Global_1940311.f_2;
				*uParam0++;
			}
			break;
		case 2:
			if (!Global_1836363)
			{
				GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(uParam0->f_4, 255, 255, 255, 255, 0);
			}
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(6);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(8);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(9);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(16);
			if (__LIB_6__.func_148())
			{
				if (uParam0->f_2 == 0)
				{
					__LIB_6__.func_230(uParam0, 1);
					uParam0->f_2 = 1;
				}
			}
			else if (uParam0->f_2)
			{
				__LIB_6__.func_230(uParam0, 0);
				uParam0->f_2 = 0;
			}
			if (__LIB_6__.func_226(uParam0))
			{
				__LIB_6__.func_227(uParam0, __LIB_6__.func_148());
			}
			if (uParam0->f_1 != Global_1940311.f_2)
			{
				if (__LIB_6__.func_225())
				{
					__LIB_8__.func_839(uParam0);
				}
				uParam0->f_1 = Global_1940311.f_2;
			}
			if (Global_1940311 > 0)
			{
				if (__LIB_0__.func_109())
				{
					__LIB_6__.func_224(uParam0);
					__LIB_8__.func_688();
					Global_1940311 = (Global_1940311 - 1);
					if (Global_1940311 < 0)
					{
						Global_1940311 = 0;
					}
				}
			}
			break;
	}
}

int func_71()//Position - 0x19AB27
{
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		if (NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_0__.func_727()) != __LIB_0__.func_160() && NETWORK::NETWORK_IS_PLAYER_ACTIVE(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_0__.func_727())))
		{
			return __LIB_0__.func_905(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_0__.func_727()));
		}
		else if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775 != __LIB_0__.func_160() && NETWORK::NETWORK_IS_PLAYER_ACTIVE(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775))
		{
			return __LIB_0__.func_905(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775);
		}
	}
	else
	{
		return __LIB_0__.func_905(PLAYER::PLAYER_ID());
	}
	return 0;
}

int func_72()//Position - 0x1B25A8
{
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		if ((Global_1574964 == 1 || Global_1836598 == 1) || __LIB_9__.func_49(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

void func_73(var uParam0)//Position - 0x1B26C0
{
	struct<9> Var0;
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("GTAOlogo", false);
		if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("GTAOlogo"))
		{
			if (!CAM::IS_SCREEN_FADED_IN() && !CAM::IS_SCREEN_FADING_IN())
			{
				if (uParam0->f_47.f_2188 != 0.147f)
				{
					uParam0->f_47.f_2188 = 0.147f;
					uParam0->f_47.f_2188.f_1 = 0.204f;
					uParam0->f_47.f_2188.f_2 = 0.145f;
					uParam0->f_47.f_2188.f_3 = 0.255f;
					uParam0->f_47.f_2188.f_4 = 255;
					uParam0->f_47.f_2188.f_5 = 255;
					uParam0->f_47.f_2188.f_6 = 255;
					uParam0->f_47.f_2188.f_7 = 255;
				}
				GRAPHICS::SET_SCRIPT_GFX_ALIGN(76, 66);
				GRAPHICS::SET_SCRIPT_GFX_ALIGN_PARAMS(-0.0755f, -0.0755f, 0f, 0f);
				HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
				Var0.f_0 = uParam0->f_47.f_2188;
				Var0.f_1 = uParam0->f_47.f_2188.f_1;
				Var0.f_2 = uParam0->f_47.f_2188.f_2;
				Var0.f_3 = uParam0->f_47.f_2188.f_3;
				Var0.f_4 = uParam0->f_47.f_2188.f_4;
				Var0.f_5 = uParam0->f_47.f_2188.f_5;
				Var0.f_6 = uParam0->f_47.f_2188.f_6;
				Var0.f_7 = uParam0->f_47.f_2188.f_7;
				Var0.f_8 = uParam0->f_47.f_2188.f_8;
				__LIB_1__.func_861(&Var0);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
				GRAPHICS::DRAW_SPRITE("GTAOlogo", "GTAOTransitionLogo", __LIB_0__.func_820(Var0.f_0), __LIB_0__.func_819(Var0.f_1), Var0.f_2, Var0.f_3, Var0.f_8, Var0.f_4, Var0.f_5, Var0.f_6, Var0.f_7, false, 0);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
				GRAPHICS::RESET_SCRIPT_GFX_ALIGN();
			}
		}
	}
}

void func_74(int* iParam0, int iParam1)//Position - 0x1B5761
{
	bool bVar0;
	if (!BitTest(*iParam0, 9))
	{
		if (BitTest(*iParam0, 3))
		{
			bVar0 = false;
			PLAYER::SET_EVERYONE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), false);
			if ((iParam0->f_13 != 0f && iParam0->f_13.f_1 != 0f) && iParam0->f_13.f_2 != 0f)
			{
				if (__LIB_18__.func_544(iParam0->f_13, 0f, 0, 0, 0, 0, 1, 0, 1, 0, 0))
				{
					iParam0->f_13 = { 0f, 0f, 0f };
					bVar0 = true;
				}
			}
			else
			{
				bVar0 = true;
			}
			if (bVar0)
			{
				if (!NETWORK::NETWORK_IS_IN_SPECTATOR_MODE())
				{
					if (!BitTest(iParam0->f_2, 1) || iParam1)
					{
						ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
						PED::DISABLE_PED_HEATSCALE_OVERRIDE(PLAYER::PLAYER_PED_ID());
						ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
						ENTITY::FREEZE_ENTITY_POSITION(PLAYER::PLAYER_PED_ID(), false);
						ENTITY::SET_ENTITY_COLLISION(PLAYER::PLAYER_PED_ID(), true, false);
					}
					MISC::CLEAR_BIT(iParam0, 3);
				}
			}
		}
	}
}

bool func_75()//Position - 0x1B7C0C
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	bool bVar4;
	iVar2 = 0;
	MISC::CLEAR_BIT(&Global_1931419, 5);
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if ((((iVar1 != __LIB_0__.func_160() && PLAYER::PLAYER_ID() != iVar1) && __LIB_1__.func_264(iVar1, 1, 1)) && BitTest(Global_1892703[iVar1 /*599*/].f_3, 0)) && ((__LIB_2__.func_246(PLAYER::PLAYER_ID()) && Global_1853348[iVar1 /*834*/].f_267.f_33 == Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_33) || __LIB_8__.func_208(iVar1, PLAYER::PLAYER_ID(), 1)))
		{
			if (!bVar4 || !BitTest(Global_1892703[iVar1 /*599*/].f_3, 4))
			{
				iVar2++;
				bVar4 = true;
			}
			if (!__LIB_0__.func_649(&(Global_1931419.f_2)) || __LIB_2__.func_47(&(Global_1931419.f_2), 500, 0))
			{
				if (BitTest(Global_1892703[iVar1 /*599*/].f_3, 1))
				{
					bVar3 = true;
				}
			}
			if (__LIB_9__.func_884(iVar1))
			{
				MISC::SET_BIT(&Global_1931419, 5);
			}
		}
		iVar0++;
	}
	if (bVar3)
	{
		__LIB_19__.func_677(1);
	}
	Global_1931419.f_1 = iVar2;
	return Global_1931419.f_1 > 0;
}

int func_76()//Position - 0x1604
{
	int iVar0;
	int iVar1;
	if (__LIB_0__.func_734() && !__LIB_9__.func_891())
	{
		return 1;
	}
	if (BitTest(Global_4718592.f_30, 25) || BitTest(Global_4718592.f_32, 23))
	{
		if (__LIB_0__.func_80())
		{
			return 1;
		}
	}
	iVar0 = PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID());
	if (iVar0 > 4 || iVar0 < 0)
	{
		iVar0 = 0;
	}
	iVar1 = Global_1058069.f_14[iVar0];
	if (iVar1 < 17)
	{
		if ((((BitTest(Global_4718592.f_658[iVar0 /*22957*/].f_7929[iVar1], 23) && BitTest(Global_4718592.f_658[iVar0 /*22957*/].f_7929[iVar1], 24)) && BitTest(Global_4718592.f_658[iVar0 /*22957*/].f_7929[iVar1], 25)) && BitTest(Global_4718592.f_658[iVar0 /*22957*/].f_7929[iVar1], 26)) && BitTest(Global_4718592.f_32, 16))
		{
			return 1;
		}
	}
	return 0;
}

void func_77(int iParam0, int iParam1)//Position - 0x38D8
{
	int iVar0;
	iVar0 = __LIB_0__.func_426(iParam0, __LIB_0__.func_330(iParam1));
	iVar0++;
	__LIB_9__.func_892(iParam0, iVar0, iParam1);
}

int func_78(int iParam0)//Position - 0x8944
{
	if (__LIB_9__.func_526(iParam0))
	{
		return 1;
	}
	return __LIB_19__.func_910(iParam0);
}

int func_79(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x484A8
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_517(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_80(char* sParam0, char* sParam1, int iParam2, int iParam3, bool bParam4)//Position - 0xB35D3
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	iVar0 = -1;
	HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	if (!iParam3 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam3);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	if (!bParam4)
	{
		iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
	}
	else
	{
		Global_2787505 = { __LIB_0__.func_604(PLAYER::PLAYER_ID()) };
		if (NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&Global_2787435, 35, &Global_2787505))
		{
			bVar1 = false;
			if (MISC::ARE_STRINGS_EQUAL(&(Global_2787435.f_22), "Leader") && Global_2787435.f_30 == 0)
			{
				bVar1 = true;
			}
			if (Global_2787435.f_21 > 0)
			{
				bVar2 = false;
			}
			else
			{
				bVar2 = true;
			}
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(bVar2, NETWORK::NETWORK_CLAN_IS_ROCKSTAR_CLAN(&Global_2787435, 35), &(Global_2787435.f_17), Global_2787435.f_30, bVar1, false, Global_2787435, PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()), Global_1576215, Global_1576216, Global_1576217);
		}
		else
		{
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		}
	}
	__LIB_18__.func_314(8, sParam0, 1, sParam1, 0, 0, 0, 0, 1, 0, 0, 0);
	return iVar0;
}

int func_81(int iParam0)//Position - 0xBC444
{
	int iVar0;
	iVar0 = -1;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 5:
		case 6:
		case 7:
		case 10:
		case 11:
		case 12:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
			iVar0 = __LIB_8__.func_296();
			break;
	}
	return iVar0;
}

int func_82(char* sParam0, char* sParam1, bool bParam2, int iParam3)//Position - 0x105E8F
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(sParam0) > 23)
	{
		return 0;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_2__.func_9(sParam0, sParam1) && Global_1574757.f_56 == Global_1574757.f_58)
	{
		return 0;
	}
	__LIB_18__.func_388();
	Global_1574757 = 3;
	StringCopy(&(Global_1574757.f_1), SCRIPT::GET_THIS_SCRIPT_NAME(), 32);
	Global_1574757.f_9 = MISC::GET_HASH_KEY(&(Global_1574757.f_1));
	StringCopy(&(Global_1574757.f_12), sParam0, 16);
	StringCopy(&(Global_1574757.f_16), sParam1, 64);
	Global_1574757.f_58 = iParam3;
	Global_1574757.f_56 = iParam3;
	__LIB_1__.func_270();
	__LIB_1__.func_269(bParam2);
	__LIB_1__.func_268();
	return 1;
}

void func_83(int iParam0, int iParam1)//Position - 0x13AD0B
{
	if ((__LIB_1__.func_145() || !__LIB_6__.func_401(1)) || __LIB_1__.func_297(iParam0) == 3)
	{
		if (!__LIB_6__.func_946(PLAYER::PLAYER_ID(), 0) && !__LIB_6__.func_946(PLAYER::PLAYER_ID(), 3))
		{
			__LIB_4__.func_830(iParam0);
			__LIB_4__.func_826(iParam0, __LIB_6__.func_900(1, 1), __LIB_4__.func_829(), __LIB_4__.func_828(), __LIB_4__.func_827(), iParam1);
		}
	}
}

int func_84(int iParam0)//Position - 0x13C08B
{
	if (__LIB_0__.func_581(PLAYER::PLAYER_ID()))
	{
		return __LIB_19__.func_852(PLAYER::PLAYER_ID(), iParam0);
	}
	return 0;
}

var func_85()//Position - 0x14C3A7
{
	var uVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (__LIB_1__.func_556(7989, -1, 0) >= 3600000)
	{
		MISC::SET_BIT(&uVar0, 14);
	}
	iVar1 = __LIB_1__.func_556(7987, -1, 0);
	iVar2 = __LIB_1__.func_556(7988, -1, 0);
	if ((iVar1 + iVar2) >= 50)
	{
		MISC::SET_BIT(&uVar0, 15);
	}
	iVar3 = __LIB_1__.func_556(7984, -1, 0);
	if (iVar3 >= 10)
	{
		MISC::SET_BIT(&uVar0, 16);
	}
	iVar4 = __LIB_1__.func_556(7982, -1, 0);
	if (iVar4 >= 10)
	{
		MISC::SET_BIT(&uVar0, 17);
	}
	iVar5 = __LIB_1__.func_556(7983, -1, 0);
	if (iVar5 >= 10)
	{
		MISC::SET_BIT(&uVar0, 18);
	}
	if (((((((((((__LIB_0__.func_137(140, -1) && __LIB_0__.func_137(142, -1)) && __LIB_0__.func_137(139, -1)) && __LIB_0__.func_137(149, -1)) && __LIB_0__.func_137(144, -1)) && __LIB_0__.func_137(145, -1)) && __LIB_0__.func_137(147, -1)) && __LIB_0__.func_137(146, -1)) && __LIB_0__.func_137(138, -1)) && __LIB_0__.func_137(143, -1)) && __LIB_0__.func_137(141, -1)) && __LIB_0__.func_137(148, -1))
	{
		MISC::SET_BIT(&uVar0, 19);
	}
	return uVar0;
}

void func_86()//Position - 0x4DD22
{
	if (Global_97753)
	{
		__LIB_20__.func_786();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_0__.func_51(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_87()//Position - 0x4E7F4
{
	int iVar0;
	int iVar1;
	__LIB_20__.func_786();
	iVar0 = HUD::GET_MAIN_PLAYER_BLIP_ID();
	if (HUD::DOES_BLIP_EXIST(iVar0))
	{
		iVar1 = Global_113386.f_2363.f_539.f_4321;
		if (__LIB_0__.func_39(14))
		{
			iVar1 = __LIB_18__.func_190(PLAYER::PLAYER_PED_ID());
		}
		if (iVar1 == 0)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_MICHAEL" /* GXT: Michael */);
		}
		else if (iVar1 == 1)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_FRANKLIN" /* GXT: Franklin */);
		}
		else if (iVar1 == 2)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_TREV" /* GXT: Trevor */);
		}
		else
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_PLAYER" /* GXT: Player */);
		}
	}
}

int func_88(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, char* sParam7, float fParam8, bool bParam9, int iParam10, bool bParam11, int iParam12, var uParam13, var uParam14, var uParam15, int iParam16, bool bParam17)//Position - 0x509D7
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7[3];
	bool bVar8;
	bool bVar9;
	int iVar10;
	int iVar11;
	var uVar12[3];
	var uVar13[3];
	bool bVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	struct<3> Var19;
	int iVar20;
	int iVar21;
	iVar4 = 0;
	uParam0->f_17[0] = uParam1;
	uParam0->f_17[1] = uParam2;
	uParam0->f_17[2] = uParam3;
	uParam0->f_16 = uParam1;
	uVar12[0] = uParam4;
	uVar12[1] = uParam5;
	uVar12[2] = uParam6;
	uVar13[0] = uParam13;
	uVar13[1] = uParam14;
	uVar13[2] = uParam15;
	iVar6 = 1;
	iVar1 = 0;
	iVar2 = 0;
	iVar3 = 0;
	iVar7[0] = 0;
	iVar7[1] = 0;
	iVar7[2] = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
		{
			iVar3++;
		}
		if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
		{
			if (!BitTest(uParam0->f_13, 29) && !BitTest(uParam0->f_13, 28))
			{
				if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
				{
					PED::SET_PED_USING_ACTION_MODE(uParam0->f_17[iVar0], true, -1, 0);
				}
				if (iVar0 == 2)
				{
					MISC::SET_BIT(&(uParam0->f_13), 28);
				}
			}
		}
		else if (!BitTest(uParam0->f_13, 29) && BitTest(uParam0->f_13, 28))
		{
			if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
			{
				PED::SET_PED_USING_ACTION_MODE(uParam0->f_17[iVar0], false, -1, 0);
			}
			if (iVar0 == 2)
			{
				MISC::CLEAR_BIT(&(uParam0->f_13), 28);
			}
		}
		iVar0++;
	}
	if (iVar3 == 0)
	{
		return 1;
	}
	if (BitTest(uParam0->f_13, 26))
	{
		bVar14 = false;
		if (!ENTITY::DOES_ENTITY_EXIST(uParam0->f_21))
		{
			iVar16 = 64;
			iVar16 |= 65536;
			iVar16 |= 2048;
			iVar16 |= 1;
			iVar16 |= 2;
			iVar16 |= 4;
			iVar16 |= 32;
			iVar16 |= 16;
			iVar16 |= 8;
			iVar15 = VEHICLE::GET_CLOSEST_VEHICLE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 50f, 0, iVar16);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar15, false))
			{
				uParam0->f_21 = iVar15;
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(uParam0->f_21, false))
		{
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(uParam0->f_21, true)) < 400f)
			{
				if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					if (!PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0) || !bParam17)
					{
						if (__LIB_0__.func_443(uParam0->f_21, uParam0, iVar3))
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
								{
									PED::SET_PED_MAX_MOVE_BLEND_RATIO(uParam0->f_17[iVar0], 1f);
									if (PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
									{
										PED::REMOVE_PED_FROM_GROUP(uParam0->f_17[iVar0]);
									}
									if (TASK::GET_SCRIPT_TASK_STATUS(uParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 7 && !__LIB_0__.func_456(uParam0->f_17[iVar0], uParam0->f_21))
									{
										if (!PED::IS_PED_RAGDOLL(uParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(uParam0->f_17[iVar0]))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(uParam0->f_17[iVar0], true);
											TASK::TASK_ENTER_VEHICLE(uParam0->f_17[iVar0], uParam0->f_21, 60000, iVar0, 1f, 1, 0);
											PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(uParam0->f_17[iVar0], iVar0);
										}
									}
								}
								iVar0++;
							}
							return 1;
						}
						else
						{
							bVar14 = true;
						}
					}
					else
					{
						bVar14 = true;
					}
				}
				else
				{
					bVar14 = true;
				}
			}
			else
			{
				bVar14 = true;
			}
		}
		else
		{
			bVar14 = true;
		}
		if (bVar14)
		{
			MISC::CLEAR_BIT(&(uParam0->f_13), 26);
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GETTING_INTO_A_VEHICLE(uParam0->f_17[iVar0]) && !uParam0->f_15)
					{
						TASK::CLEAR_PED_TASKS(uParam0->f_17[iVar0]);
					}
					if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						if (__LIB_11__.func_688(uParam0, uParam0->f_17[iVar0], fParam8, 1))
						{
							PED::SET_PED_AS_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399());
						}
					}
				}
				iVar0++;
			}
		}
	}
	if (!BitTest(uParam0->f_13, 26))
	{
		if ((!__LIB_6__.func_835(uParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) && !ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
			{
				if (!BitTest(uParam0->f_13, 13))
				{
					if (iParam16 == 4 || iParam16 == 5)
					{
					}
					if (!__LIB_18__.func_197(uParam0, 2))
					{
						iVar17 = 0;
						iVar18 = 0;
						iVar0 = 0;
						while (iVar0 < 3)
						{
							if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
							{
								iVar17++;
							}
							iVar0++;
						}
						iVar18 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar17);
						if (!PED::IS_PED_INJURED(uParam0->f_17[iVar18]))
						{
							__LIB_6__.func_834(uParam0->f_17[iVar18], "NEED_A_BIGGER_VEHICLE", 3);
						}
						__LIB_0__.func_440(uParam0, "MORE_SEATS" /* GXT: A vehicle with more seats is needed. */, 0);
						MISC::SET_BIT(&(uParam0->f_13), 13);
					}
				}
				bVar9 = true;
			}
		}
		else
		{
			bVar9 = false;
			MISC::CLEAR_BIT(&(uParam0->f_13), 13);
			__LIB_0__.func_444("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
		}
		if (!ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			if ((!PED::IS_PED_INJURED(uParam0->f_17[0]) || !PED::IS_PED_INJURED(uParam0->f_17[1])) || !PED::IS_PED_INJURED(uParam0->f_17[2]))
			{
				if (!BitTest(uParam0->f_13, 31))
				{
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()) && !__LIB_18__.func_197(uParam0, 2))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (__LIB_0__.func_454(iVar10, uParam0))
						{
							__LIB_0__.func_440(uParam0, "CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */, 0);
							MISC::SET_BIT(&(uParam0->f_13), 31);
						}
					}
				}
				else if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					MISC::CLEAR_BIT(&(uParam0->f_13), 31);
					__LIB_0__.func_444("CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */);
				}
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
		{
			if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
			{
				if (PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/))
				{
					MISC::SET_BIT(&(uParam0->f_13), 21);
				}
			}
			else if (BitTest(uParam0->f_13, 21))
			{
				MISC::CLEAR_BIT(&(uParam0->f_13), 21);
			}
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_17[iVar0]))
			{
				if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						PED::SET_PED_DIES_IN_WATER(uParam0->f_17[iVar0], true);
					}
					else
					{
						PED::SET_PED_DIES_IN_WATER(uParam0->f_17[iVar0], false);
					}
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
						{
							if (PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (!__LIB_6__.func_835(uParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
								{
									if (!__LIB_0__.func_453(uParam0->f_17[iVar0]))
									{
										PED::REMOVE_PED_FROM_GROUP(uParam0->f_17[iVar0]);
									}
								}
							}
						}
						if (iVar10 != iParam10 && !ENTITY::IS_ENTITY_DEAD(iVar10, false))
						{
							if (PED::IS_PED_SITTING_IN_VEHICLE(uParam0->f_17[iVar0], iVar10))
							{
								if (ENTITY::IS_ENTITY_IN_WATER(iVar10) && !VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(iVar10))
								{
									Var19 = { ENTITY::GET_ENTITY_COORDS(iVar10, true) };
									if (Var19.f_2 < -1f)
									{
										TASK::TASK_LEAVE_VEHICLE(uParam0->f_17[iVar0], iVar10, 64);
									}
								}
							}
						}
					}
					bVar8 = true;
					if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_17[iVar0]))
						{
							iVar10 = PED::GET_VEHICLE_PED_IS_IN(uParam0->f_17[iVar0], false);
							if (!ENTITY::IS_ENTITY_DEAD(iVar10, false))
							{
								if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
								{
									if (iVar10 != iParam10)
									{
										if (!PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar10))
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(uParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(uParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
								else
								{
									if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
									{
										iVar20 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									}
									if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar20, false))
									{
										if (iVar10 != iVar20)
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(uParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(uParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
							}
						}
					}
					if (PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						iVar21 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						if (ENTITY::DOES_ENTITY_EXIST(iVar21))
						{
							if (__LIB_0__.func_443(iVar21, uParam0, 0))
							{
								if (__LIB_0__.func_452(iVar0, uParam0) || !BitTest(uParam0->f_13, 27))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(uParam0->f_17[iVar0], iVar0);
									__LIB_0__.func_417(iVar0, uParam0);
									iVar4++;
									if (iVar4 >= iVar3)
									{
										MISC::SET_BIT(&(uParam0->f_13), 27);
									}
								}
							}
							else if (!__LIB_0__.func_452(iVar0, uParam0))
							{
								if (ENTITY::GET_ENTITY_MODEL(iVar21) == joaat("sentinel2"))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(uParam0->f_17[iVar0], 4);
								}
								else
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(uParam0->f_17[iVar0], 2);
								}
								__LIB_0__.func_451(iVar0, uParam0);
							}
						}
					}
					if ((!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()) && !__LIB_0__.func_450(uParam0->f_17[iVar0], iParam10)) && !__LIB_0__.func_449(uParam0->f_17[iVar0], iParam10))
					{
						if (__LIB_11__.func_688(uParam0, uParam0->f_17[iVar0], fParam8, bParam11))
						{
							if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (((!PED::IS_PED_RAGDOLL(uParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(uParam0->f_17[iVar0])) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(uParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(uParam0->f_17[iVar0]))
								{
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(uParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7)
									{
										TASK::CLEAR_PED_TASKS(uParam0->f_17[iVar0]);
									}
									PED::SET_PED_AS_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399());
									bVar8 = false;
								}
							}
						}
						if (bVar8)
						{
							if (!HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
							{
								uParam0->f_11 = MISC::GET_GAME_TIMER();
								uParam0->f_1[iVar0] = __LIB_6__.func_825(uParam0->f_17[iVar0], 0, 0);
								HUD::SET_BLIP_DISPLAY(uParam0->f_1[iVar0], 2);
								if (bParam9)
								{
									__LIB_0__.func_439(uParam0->f_1[iVar0], uParam0);
								}
							}
						}
						iVar6 = 0;
					}
					else if (HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
					{
						if (((__LIB_9__.func_979(uParam0->f_17[iVar0], 1) || __LIB_0__.func_450(uParam0->f_17[iVar0], iParam10)) || iParam12) || (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
						{
							if (HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
							{
								HUD::REMOVE_BLIP(&(uParam0->f_1[iVar0]));
								__LIB_0__.func_444(uVar12[iVar0]);
							}
						}
						else
						{
							if (bParam9)
							{
								__LIB_0__.func_439(uParam0->f_1[iVar0], uParam0);
							}
							iVar6 = 0;
						}
					}
					else if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
					{
						if (!PED::IS_PED_SITTING_IN_VEHICLE(uParam0->f_17[iVar0], iParam10))
						{
							if ((ENTITY::IS_ENTITY_AT_ENTITY(uParam0->f_17[iVar0], iParam10, 20f, 20f, 5f, false, true, 0) && !BitTest(uParam0->f_13, 11)) && !((bParam17 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
							{
								if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_17[iVar0]))
								{
									if (!PED::IS_PED_IN_VEHICLE(uParam0->f_17[iVar0], iParam10, false))
									{
										if (!__LIB_9__.func_979(uParam0->f_17[iVar0], 1))
										{
											if (__LIB_0__.func_437(uParam0->f_17[iVar0]))
											{
												iVar11 = TASK::GET_SCRIPT_TASK_STATUS(uParam0->f_17[iVar0], joaat("SCRIPT_TASK_LEAVE_VEHICLE"));
												if (iVar11 == 7)
												{
													TASK::TASK_LEAVE_ANY_VEHICLE(uParam0->f_17[iVar0], 0, 0);
												}
											}
										}
									}
								}
								else
								{
									if (PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
									{
										if ((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(uParam0->f_17[iVar0]) && !PED::IS_PED_RAGDOLL(uParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(uParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(uParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::REMOVE_PED_FROM_GROUP(uParam0->f_17[iVar0]);
										}
									}
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(uParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7 && !__LIB_0__.func_456(uParam0->f_17[iVar0], iParam10))
									{
										if (((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(uParam0->f_17[iVar0]) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(PLAYER::PLAYER_PED_ID())) && !__LIB_0__.func_448(uParam0->f_17[iVar0], 2f)) && !PED::IS_PED_RAGDOLL(uParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(uParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(uParam0->f_17[iVar0], true);
											if (BitTest(uParam0->f_13, 10))
											{
												PED::SET_PED_MAX_MOVE_BLEND_RATIO(uParam0->f_17[iVar0], 1f);
											}
											TASK::TASK_ENTER_VEHICLE(uParam0->f_17[iVar0], iParam10, 60000, iVar0, 2f, 1, 0);
											PED::SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(uParam0->f_17[iVar0], false);
										}
									}
									else if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false))
									{
										uParam0->f_1[iVar0] = __LIB_6__.func_825(uParam0->f_17[iVar0], 0, 0);
										HUD::SET_BLIP_DISPLAY(uParam0->f_1[iVar0], 2);
										iVar6 = 0;
									}
								}
							}
							else if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (__LIB_11__.func_688(uParam0, uParam0->f_17[iVar0], fParam8, bParam11))
								{
									if (!PED::IS_PED_RAGDOLL(uParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(uParam0->f_17[iVar0]))
									{
										iVar11 = TASK::GET_SCRIPT_TASK_STATUS(uParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
										if (iVar11 == 7)
										{
											TASK::CLEAR_PED_TASKS(uParam0->f_17[iVar0]);
										}
										PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(uParam0->f_17[iVar0], false);
										PED::SET_PED_AS_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399());
									}
								}
							}
						}
						else if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
						{
							if (!PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (!BitTest(uParam0->f_13, 21))
								{
									PED::SET_PED_AS_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399());
								}
							}
							else if (BitTest(uParam0->f_13, 21))
							{
								PED::REMOVE_PED_FROM_GROUP(uParam0->f_17[iVar0]);
								MISC::SET_BIT(&(uParam0->f_13), 21);
							}
						}
						else if (PED::IS_PED_GROUP_MEMBER(uParam0->f_17[iVar0], __LIB_0__.func_399()) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
						{
							PED::REMOVE_PED_FROM_GROUP(uParam0->f_17[iVar0]);
						}
					}
				}
				else if (HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(uParam0->f_1[iVar0]));
					__LIB_0__.func_444(uVar12[iVar0]);
				}
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
			{
				iVar7[iVar0] = 1;
				iVar1++;
			}
			iVar0++;
		}
		if (!__LIB_18__.func_197(uParam0, 2))
		{
			if (iVar1 > 0)
			{
				iVar0 = 0;
				while (iVar0 < 3)
				{
					if (iVar7[iVar0])
					{
						if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
						{
							if (__LIB_0__.func_453(uParam0->f_17[iVar0]) || ENTITY::IS_ENTITY_AT_ENTITY(uParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), uParam0->f_8, uParam0->f_8, uParam0->f_8, false, true, 0))
							{
								iVar1 = (iVar1 - 1);
								iVar7[iVar0] = 0;
							}
						}
					}
					else if (!PED::IS_PED_INJURED(uParam0->f_17[iVar0]))
					{
						if (!ENTITY::IS_ENTITY_AT_ENTITY(uParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), (uParam0->f_8 * 0.85f), (uParam0->f_8 * 0.85f), uParam0->f_8, false, true, 0) && !__LIB_0__.func_453(uParam0->f_17[iVar0]))
						{
						}
					}
					iVar0++;
				}
			}
			iVar5 = MISC::GET_GAME_TIMER();
			if ((iVar5 - uParam0->f_11) > 1500 || iVar3 == 1)
			{
				if (iVar1 > 0)
				{
					if (uParam0->f_12 < iVar1)
					{
						if ((iVar1 == iVar3 || (iVar2 + iVar1) == iVar3) && iVar3 > 1)
						{
							if (!BitTest(uParam0->f_13, 5))
							{
								__LIB_0__.func_440(uParam0, sParam7, 0);
								MISC::SET_BIT(&(uParam0->f_13), 5);
								uParam0->f_12 = iVar1;
							}
							else
							{
								uParam0->f_12 = iVar1;
							}
						}
						else
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (iVar7[iVar0])
								{
									if (!__LIB_0__.func_447(iVar0, uParam0))
									{
										if (!MISC::IS_STRING_NULL(uVar13[iVar0]))
										{
											if (!MISC::ARE_STRINGS_EQUAL(uVar13[iVar0], ""))
											{
												__LIB_18__.func_199(uParam0, uVar12[iVar0], uVar13[iVar0], 0);
												__LIB_0__.func_445(iVar0, uParam0);
												uParam0->f_12 = iVar1;
											}
										}
										if (!__LIB_0__.func_447(iVar0, uParam0))
										{
											__LIB_0__.func_440(uParam0, uVar12[iVar0], 0);
											__LIB_0__.func_445(iVar0, uParam0);
											uParam0->f_12 = iVar1;
										}
									}
									else
									{
										uParam0->f_12 = iVar1;
									}
								}
								iVar0++;
							}
						}
					}
				}
				else
				{
					uParam0->f_12 = 0;
				}
			}
		}
		MISC::CLEAR_BIT(&(uParam0->f_13), 10);
		if (iVar6 && !bVar9)
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (HUD::DOES_BLIP_EXIST(uParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(uParam0->f_1[iVar0]));
					__LIB_0__.func_444(uVar12[iVar0]);
				}
				iVar0++;
			}
			__LIB_0__.func_444("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
			return 1;
		}
	}
	return 0;
}

int func_89(char* sParam0)//Position - 0x5276A
{
	if (!__LIB_18__.func_177(1, 1, 0))
	{
		if ((!MISC::IS_STRING_NULL_OR_EMPTY(sParam0) && __LIB_0__.func_1(sParam0)) || __LIB_0__.func_1("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */))
		{
			HUD::CLEAR_HELP(true);
		}
		return 0;
	}
	switch (Global_43052)
	{
		case 0:
		case 3:
			if (__LIB_0__.func_303(0) < 3)
			{
				return 1;
			}
			break;
		case 4:
			if (__LIB_0__.func_303(0) < 1)
			{
				return 1;
			}
			break;
		case 5:
		case 15:
			if (__LIB_0__.func_303(0) < 1)
			{
				return 1;
			}
			break;
		default:
			break;
	}
	return 0;
}

int func_90(int iParam0, int iParam1)//Position - 0x5C6B2
{
	int iVar0;
	switch (iParam1)
	{
		case 0:
			iVar0 = 0;
			break;
		case 1:
			iVar0 = 1;
			break;
		case 2:
			iVar0 = 2;
			break;
	}
	if (iParam0 < 0 || iParam0 >= __LIB_0__.func_348(&(Global_113386.f_32749.f_5038[iVar0 /*157*/])))
	{
		return 0;
	}
	return __LIB_7__.func_193(Global_113386.f_32749.f_5038[iVar0 /*157*/][iParam0 /*78*/].f_66, 0);
}

void func_91(var uParam0)//Position - 0x5D81D
{
	if (__LIB_18__.func_189(uParam0))
	{
		STREAMING::REQUEST_MODEL(uParam0->f_12.f_66);
	}
}

void func_92()//Position - 0x883
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4[10];
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if ((Local_124.f_9 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && Local_124.f_0 != 45)
	{
		iVar0 = __LIB_10__.func_16(Local_124.f_0, 0);
		if (BitTest(Global_100493.f_1393[Local_124.f_0], 22))
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 350 /*INPUT_VEH_CAR_JUMP*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
		}
		if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
		{
			if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar0))
			{
				Local_103.f_5 = OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(iVar0) > 0.1f;
			}
			iVar2 = 1;
			iVar3 = 1;
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 32)
			{
				if (__LIB_0__.func_154(PLAYER::INT_TO_PLAYERINDEX(iVar1), 1, 1) && !__LIB_0__.func_743(PLAYER::INT_TO_PLAYERINDEX(iVar1)))
				{
					if (((BitTest(Local_104[iVar1 /*17*/], 5) && (!BitTest(Local_104[iVar1 /*17*/], 6) || BitTest(Local_104[iVar1 /*17*/], 21))) || (!BitTest(Local_104[iVar1 /*17*/], 5) && BitTest(Local_104[iVar1 /*17*/], 22))) || (BitTest(Local_104[iVar1 /*17*/], 5) && (Local_124.f_0 == 42 || Local_124.f_0 == 43)))
					{
						iVar3 = 0;
						if (((__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1) && PLAYER::PLAYER_ID() == iVar1) && BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/], 21)) && BitTest(Local_104[iVar1 /*17*/].f_6, 1))
						{
							iVar3 = 1;
						}
						if (((__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1) && PLAYER::PLAYER_ID() == iVar1) && BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/], 6)) && !BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/], 21))
						{
						}
						else if (((__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1) && PLAYER::PLAYER_ID() != iVar1) && BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/], 6)) && (BitTest(Local_104[iVar1 /*17*/], 21) || BitTest(Local_104[iVar1 /*17*/], 22)))
						{
						}
						else
						{
							iVar2 = 0;
						}
					}
				}
				iVar1++;
			}
			if (iVar3 || iVar2)
			{
				if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("MPBitset", 3))
				{
					iVar5 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar4);
					iVar6 = 0;
					while (iVar6 < iVar5)
					{
						if ((ENTITY::DOES_ENTITY_EXIST(uVar4[iVar6]) && VEHICLE::IS_VEHICLE_DRIVEABLE(uVar4[iVar6], false)) && ENTITY::IS_ENTITY_A_MISSION_ENTITY(uVar4[iVar6]))
						{
							if (DECORATOR::DECOR_EXIST_ON(uVar4[iVar6], "MPBitset"))
							{
								iVar7 = DECORATOR::DECOR_GET_INT(uVar4[iVar6], "MPBitset");
							}
							if (BitTest(iVar7, 5))
							{
								iVar8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(uVar4[iVar6]);
								if (iVar8 == Local_124.f_100 && iVar8 != 0)
								{
									iVar3 = 0;
									if ((__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1) && PLAYER::INT_TO_PLAYERINDEX(iVar1) != PLAYER::PLAYER_ID()) && BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/], 6))
									{
									}
									else
									{
										iVar2 = 0;
									}
									iVar6 = iVar5 + 1;
								}
							}
						}
						iVar6++;
					}
				}
			}
			Local_103.f_6 = iVar3;
		}
		iVar9 = __LIB_10__.func_16(Local_124.f_0, 0);
		if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar9) && NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(iVar9))
		{
			__LIB_19__.func_980(Local_124.f_0, Local_103.f_6, 0, 1);
		}
		Global_100493.f_1551 = Local_103.f_5;
	}
	else if (Local_124.f_9 == 0)
	{
	}
}

void func_93()//Position - 0x4FF1
{
	if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && BitTest(uLocal_390, 0)) && Local_124.f_116.f_31 != 2)
	{
		if (Local_124.f_0 == 45)
		{
			switch (Local_124.f_675)
			{
				case 12:
					__LIB_2__.func_8(165);
					break;
				case 17:
					__LIB_2__.func_8(166);
					if (__LIB_19__.func_949(PLAYER::PLAYER_ID()))
					{
						__LIB_2__.func_8(167);
					}
					break;
				case 10:
					__LIB_2__.func_8(168);
					break;
				case 13:
					__LIB_2__.func_8(169);
					break;
				case 4:
				case 5:
					__LIB_2__.func_8(170);
					break;
				case 6:
				case 7:
				case 8:
				case 9:
					__LIB_2__.func_8(167);
					break;
				default:
					__LIB_2__.func_8(27);
					break;
			}
		}
		else if (Local_124.f_0 == 44)
		{
			__LIB_2__.func_8(167);
		}
		else
		{
			__LIB_2__.func_8(27);
		}
	}
}

void func_94(int iParam0, var uParam1)//Position - 0x163C2
{
	var uVar0;
	var uVar1;
	var uVar2;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
	}
	uParam1->f_5 = __LIB_19__.func_951(0, -1);
	uParam1->f_6 = __LIB_19__.func_951(1, -1);
	uParam1->f_7 = __LIB_19__.func_951(2, -1);
	uParam1->f_8 = __LIB_19__.func_951(3, -1);
	uParam1->f_9[48] = __LIB_19__.func_951(5, -1);
	*uParam1 = __LIB_19__.func_951(6, -1);
	if (!__LIB_9__.func_531())
	{
		uParam1->f_9[10] = 0;
	}
	else if (__LIB_19__.func_951(4, -1) != 2)
	{
		uParam1->f_9[10] = 1;
	}
	else
	{
		uParam1->f_9[10] = 2;
	}
	if (!BitTest(__LIB_19__.func_951(9, -1), 1) && !BitTest(__LIB_19__.func_951(9, -1), 2))
	{
		MISC::CLEAR_BIT(&(uParam1->f_77), 13);
		MISC::CLEAR_BIT(&(uParam1->f_77), 12);
	}
	else
	{
		__LIB_16__.func_463(&uVar0, &uVar1, &uVar2);
		uParam1->f_71 = uVar0;
		uParam1->f_72 = uVar1;
		uParam1->f_73 = uVar2;
		if (BitTest(__LIB_19__.func_951(9, -1), 1))
		{
			MISC::SET_BIT(&(uParam1->f_77), 13);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam1->f_77), 13);
		}
		if (BitTest(__LIB_19__.func_951(9, -1), 2))
		{
			MISC::SET_BIT(&(uParam1->f_77), 12);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam1->f_77), 12);
		}
	}
}

void func_95()//Position - 0x165DD
{
	if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
	{
		if (!ENTITY::IS_ENTITY_DEAD(Local_124.f_406, false) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false))
		{
			if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406)) || !Global_78319)
			{
				VEHICLE::SET_DISABLE_PED_STAND_ON_TOP(Local_124.f_406, false);
				if ((((((((!__LIB_10__.func_473() && !__LIB_10__.func_17()) && !__LIB_10__.func_472()) && !__LIB_10__.func_471()) && !__LIB_10__.func_553()) && !__LIB_10__.func_477()) && !__LIB_10__.func_12()) && !__LIB_10__.func_395()) && !__LIB_4__.func_531())
				{
					ENTITY::FREEZE_ENTITY_POSITION(Local_124.f_406, false);
				}
				if (((((!__LIB_3__.func_251(PLAYER::PLAYER_ID()) && !__LIB_2__.func_743(PLAYER::PLAYER_ID())) && !__LIB_3__.func_49(PLAYER::PLAYER_ID())) && !__LIB_2__.func_417(PLAYER::PLAYER_ID())) && !__LIB_4__.func_532()) && !__LIB_4__.func_531())
				{
					VEHICLE::SET_VEHICLE_DOORS_LOCKED(Local_124.f_406, 1);
				}
				if ((Local_124.f_0 == 45 && !__LIB_10__.func_523()) && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
				{
					if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !ENTITY::IS_ENTITY_DEAD(Local_124.f_406, false))
					{
						if (NETWORK::NETWORK_GET_ENTITY_IS_NETWORKED(Local_124.f_406))
						{
							if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Local_124.f_406, false))
							{
								VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, false);
							}
							else
							{
								VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Local_124.f_406, true);
							}
						}
						VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Local_124.f_406, PLAYER::PLAYER_ID(), false);
						VEHICLE::SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(Local_124.f_406, true);
						VEHICLE::SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(Local_124.f_406, true);
					}
				}
				else
				{
					VEHICLE::SET_VEHICLE_LIGHTS(Local_124.f_406, 2);
					VEHICLE::SET_VEHICLE_LIGHTS(Local_124.f_406, 0);
					if (!__LIB_10__.func_467())
					{
						AUDIO::SET_VEHICLE_RADIO_ENABLED(Local_124.f_406, true);
					}
				}
				ENTITY::SET_ENTITY_PROOFS(Local_124.f_406, false, false, false, false, false, false, false, false);
				ENTITY::SET_ENTITY_COLLISION(Local_124.f_406, true, false);
				VEHICLE::SET_FORCE_HD_VEHICLE(Local_124.f_406, false);
				if (!__LIB_10__.func_12())
				{
					VEHICLE::SET_VEHICLE_HANDBRAKE(Local_124.f_406, false);
				}
				if (!__LIB_10__.func_554())
				{
					VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, false);
					MISC::CLEAR_BIT(&uLocal_202, 9);
				}
				if (iLocal_436)
				{
					AUDIO::SET_VEHICLE_RADIO_ENABLED(Local_124.f_406, true);
					iLocal_436 = 0;
				}
				if (!bLocal_437 && __LIB_10__.func_43())
				{
					VEHICLE::SET_VEHICLE_MOD_KIT(Local_124.f_406, 0);
					VEHICLE::REMOVE_VEHICLE_MOD(Local_124.f_406, 15);
				}
			}
		}
	}
	iLocal_430 = 0;
	HUD::THEFEED_SHOW();
}

void func_96(int iParam0, int iParam1, bool bParam2)//Position - 0x16EF0
{
	if (__LIB_0__.func_674())
	{
		if (iParam1 == 1)
		{
			if (Global_2815059.f_4462 == -1)
			{
				Global_2815059.f_4462 = Global_262145.f_27172 /* Tunable: 945146471 */;
			}
			__LIB_0__.func_495(&(Global_2815059.f_4460), 0, 0);
			if (bParam2)
			{
				if (Global_2815059.f_4465 == -1)
				{
					Global_2815059.f_4465 = Global_262145.f_27173 /* Tunable: -29732167 */;
				}
				__LIB_0__.func_495(&(Global_2815059.f_4463), 0, 0);
			}
			else
			{
				Global_1574582 = 0;
				Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
				__LIB_7__.func_51(1);
			}
		}
		else
		{
			Global_1574582 = 0;
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
			__LIB_7__.func_51(1);
		}
		if ((!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && !__LIB_1__.func_203()) && !func_248(PLAYER::PLAYER_ID()))
		{
			Global_1057408 = 0;
		}
		STATS::PLAYSTATS_SWITCH_PASSIVE_MODE(false, -1, -1, iParam0);
	}
}

void func_97()//Position - 0x1AAC4
{
	if (__LIB_19__.func_992())
	{
		HUD::CLEAR_HELP(true);
	}
}

int func_98()//Position - 0x1BDC8
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_1__.func_174(PLAYER::PLAYER_ID()))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			iVar0 = 0;
			while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
			{
				if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
				{
					iVar3 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
					if (((!PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(iVar3), Local_124.f_406, false) && !__LIB_1__.func_154(iVar3)) && __LIB_5__.func_97(PLAYER::PLAYER_ID(), 0)) && Local_124.f_676 != -1)
					{
						iVar2++;
						if (BitTest(Local_104[iVar3 /*17*/].f_9[Local_124.f_676], 0))
						{
							iVar1++;
						}
					}
				}
				iVar0++;
			}
			if (iVar1 == iVar2)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
	}
	return 0;
}

int func_99(var uParam0, int iParam1)//Position - 0x338E0
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(__LIB_10__.func_54(uParam0), iParam1, 0);
	return iVar0;
}

void func_100(int iParam0, int iParam1)//Position - 0x782BC
{
	bool bVar0;
	bVar0 = false;
	if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0))
	{
		if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Vehicle", 3))
		{
			if (!DECORATOR::DECOR_EXIST_ON(iParam0, "Player_Vehicle") || (DECORATOR::DECOR_GET_INT(iParam0, "Player_Vehicle") != NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()) && DECORATOR::DECOR_GET_INT(iParam0, "Player_Vehicle") != -1))
			{
				DECORATOR::DECOR_SET_INT(iParam0, "Player_Vehicle", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()));
				bVar0 = true;
			}
		}
		if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("PV_Slot", 3))
		{
			if (!DECORATOR::DECOR_EXIST_ON(iParam0, "PV_Slot") || !DECORATOR::DECOR_GET_INT(iParam0, "PV_Slot") == iParam1)
			{
				DECORATOR::DECOR_SET_INT(iParam0, "PV_Slot", iParam1);
				bVar0 = true;
			}
		}
		if (bVar0)
		{
			__LIB_19__.func_952(iParam1);
		}
	}
}

void func_101(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x7A7C6
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_19__.func_996(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_102(int iParam0)//Position - 0x7D47D
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_0__.func_625(iParam0);
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_278 == iVar0)
	{
		return 1;
	}
	iVar1 = Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10;
	if (iVar1 != __LIB_0__.func_160())
	{
		if (Global_1853348[iVar1 /*834*/].f_267.f_278 == iVar0)
		{
			return 1;
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_6 == iParam0)
	{
		return 1;
	}
	if (__LIB_1__.func_335(PLAYER::PLAYER_ID(), 0) || (func_749(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_1__.func_350(PLAYER::PLAYER_ID())) == 12))
	{
		return 1;
	}
	if (__LIB_0__.func_279(PLAYER::PLAYER_ID()) || (func_749(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_1__.func_350(PLAYER::PLAYER_ID())) == 8))
	{
		return 1;
	}
	if (__LIB_0__.func_278(PLAYER::PLAYER_ID()) || (func_749(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_1__.func_350(PLAYER::PLAYER_ID())) == 5))
	{
		return 1;
	}
	if (__LIB_1__.func_349(PLAYER::PLAYER_ID()) || (func_749(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_1__.func_350(PLAYER::PLAYER_ID())) == 10))
	{
		return 1;
	}
	if (__LIB_1__.func_348(PLAYER::PLAYER_ID()) || (func_749(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_1__.func_350(PLAYER::PLAYER_ID())) == 6))
	{
		return 1;
	}
	return 0;
}

int func_103(bool bParam0)//Position - 0xA5438
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("minitank"))
	{
		__LIB_1__.func_327(279, &iVar0, 1);
		if (iVar0 >= 0)
		{
			return iVar0;
		}
	}
	if (Local_124.f_0 == 45)
	{
		if ((__LIB_10__.func_530() && !__LIB_4__.func_531()) || __LIB_10__.func_554())
		{
			if (__LIB_1__.func_155(PLAYER::PLAYER_ID(), 0, 0))
			{
				return Global_4282954;
			}
		}
		else if (__LIB_10__.func_523())
		{
			if (__LIB_9__.func_649(PLAYER::PLAYER_ID()))
			{
				return -1;
			}
		}
		else if (__LIB_10__.func_531())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
			{
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("trailersmall2"))
				{
					__LIB_1__.func_327(157, &iVar1, 1);
					if (iVar1 >= 0)
					{
						return iVar1;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("phantom3") || ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("hauler2"))
				{
					__LIB_1__.func_327(158, &iVar1, 1);
					if (iVar1 >= 0)
					{
						return iVar1;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("trailerlarge"))
				{
					return -1;
				}
			}
		}
		else if (__LIB_10__.func_467())
		{
			return Global_4282954;
		}
		else if (__LIB_10__.func_553())
		{
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("rcbandito"))
			{
				__LIB_1__.func_327(257, &iVar2, 1);
				if (iVar2 >= 0)
				{
					return iVar2;
				}
			}
			else
			{
				return Global_4282954;
			}
		}
		else if (__LIB_10__.func_473())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
			{
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("avenger"))
				{
					__LIB_1__.func_327(190, &iVar3, 1);
					if (iVar3 >= 0)
					{
						return iVar3;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("riot2"))
				{
					__LIB_1__.func_327(186, &iVar3, 1);
					if (iVar3 >= 0)
					{
						return iVar3;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("chernobog"))
				{
					__LIB_1__.func_327(187, &iVar3, 1);
					if (iVar3 >= 0)
					{
						return iVar3;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("thruster"))
				{
					__LIB_1__.func_327(189, &iVar3, 1);
					if (iVar3 >= 0)
					{
						return iVar3;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("khanjali"))
				{
					__LIB_1__.func_327(188, &iVar3, 1);
					if (iVar3 >= 0)
					{
						return iVar3;
					}
				}
			}
		}
		else if (__LIB_10__.func_472())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
			{
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("speedo4"))
				{
					__LIB_1__.func_327(224, &iVar4, 1);
					if (iVar4 >= 0)
					{
						return iVar4;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("mule4"))
				{
					__LIB_1__.func_327(225, &iVar4, 1);
					if (iVar4 >= 0)
					{
						return iVar4;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("pounder2"))
				{
					__LIB_1__.func_327(226, &iVar4, 1);
					if (iVar4 >= 0)
					{
						return iVar4;
					}
				}
				else if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("terbyte"))
				{
					__LIB_1__.func_327(222, &iVar4, 1);
					if (iVar4 >= 0)
					{
						return iVar4;
					}
				}
			}
		}
		else if (__LIB_10__.func_471())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
			{
				if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("oppressor2"))
				{
					__LIB_1__.func_327(223, &iVar5, 1);
					if (iVar5 >= 0)
					{
						return iVar5;
					}
				}
			}
		}
		else if (__LIB_10__.func_477() && !__LIB_4__.func_532())
		{
			if (BitTest(uLocal_203, 10))
			{
				return Global_4282954;
			}
		}
		else if (__LIB_4__.func_532() || __LIB_4__.func_531())
		{
			return -1;
		}
		else if (__LIB_10__.func_395())
		{
			return Global_4282954;
		}
	}
	if (bParam0)
	{
		return Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2;
	}
	return -1;
}

bool func_104()//Position - 0xA8BAC
{
	return (__LIB_4__.func_512(0) && func_1213(0));
}

void func_105()//Position - 0xB199F
{
	struct<7> Var0;
	int iVar1;
	if (Global_2815059.f_5174)
	{
		return;
	}
	iVar1 = 0;
	while (iVar1 < 20)
	{
		__LIB_20__.func_9(__LIB_10__.func_67(iVar1 + 1), Var0, -1, 1);
		iVar1++;
	}
	__LIB_1__.func_597(2439, 0, -1, 1, 0);
	__LIB_1__.func_597(2440, 0, -1, 1, 0);
}

struct<7> func_106(int iParam0)//Position - 0xB1AA8
{
	int iVar0;
	if (Global_2815059.f_5175)
	{
		return Global_2815059.f_5176;
	}
	iVar0 = (iParam0 - Global_262145.f_10675 /* Tunable: THRESHOLD_NO_OF_CARS */);
	iVar0++;
	if (iVar0 < 1)
	{
		iVar0 += 20;
	}
	return __LIB_20__.func_5(__LIB_10__.func_67(iVar0), -1);
}

int func_107(int iParam0, var uParam1)//Position - 0xB1EE3
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_20__.func_8(iParam0);
	iVar1 = __LIB_20__.func_8(uParam1);
	return (iVar1 - iVar0);
}

int func_108(char[16] cParam0, int iParam1, bool bParam2)//Position - 0xB25AA
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!Global_262145.f_20189 /* Tunable: -1205783322 */)
	{
		return 0;
	}
	if (Global_262145.f_20198 /* Tunable: -1975062848 */)
	{
		__LIB_10__.func_73(&cParam0);
		iVar1 = MISC::GET_HASH_KEY(&cParam0);
		iVar0 = 0;
		while (iVar0 < 10)
		{
			if (Global_1585153[iVar0] == iVar1)
			{
				iVar2 = __LIB_20__.func_11(cParam0);
				if (iVar2 >= iParam1)
				{
					return 1;
				}
			}
			iVar0++;
		}
		if (bParam2)
		{
			if (__LIB_10__.func_68(&Global_1585175, iVar1))
			{
				iVar2 = __LIB_20__.func_11(cParam0);
				if (iVar2 >= iParam1)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_109(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xB27DF
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = MISC::GET_HASH_KEY(&uParam0);
	iVar0 = 0;
	while (iVar0 < 10)
	{
		if (Global_1585153[iVar0] == iVar1)
		{
			iVar2 = __LIB_20__.func_12(iVar0);
			__LIB_10__.func_74(iVar0, iVar2 + 1);
		}
		iVar0++;
	}
}

int func_110(char[16] cParam0, int iParam1, int iParam2)//Position - 0xB2DEA
{
	int iVar0;
	if (!Global_262145.f_20189 /* Tunable: -1205783322 */)
	{
		return 0;
	}
	__LIB_10__.func_73(&cParam0);
	if (Global_262145.f_20191 /* Tunable: -880808617 */)
	{
		if (__LIB_20__.func_14(cParam0))
		{
			iVar0 = 0;
			while (iVar0 < 363)
			{
				if (iVar0 != iParam2)
				{
					if (Global_1585857[iVar0 /*142*/].f_66 != 0)
					{
						if (Global_1585857[iVar0 /*142*/].f_66 == iParam1)
						{
							if (__LIB_10__.func_63(cParam0, Global_1585857[iVar0 /*142*/].f_1))
							{
								return 1;
							}
						}
					}
				}
				iVar0++;
			}
		}
	}
	return 0;
}

void func_111()//Position - 0xB4C89
{
	int iVar0;
	iVar0 = __LIB_0__.func_228(30513, -1);
	if (!Global_1966155 && iVar0 < 3)
	{
		if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !__LIB_1__.func_352(PLAYER::PLAYER_ID()))
		{
			MISC::CLEAR_BIT(&(Global_1946250.f_9), 1);
			__LIB_1__.func_39(30513, iVar0 + 1, -1);
			Global_1966155 = 1;
			__LIB_0__.func_151("CCR_INC_HT" /* GXT: Increasing your reputation with the LS Car Meet unlocks vehicle trade prices, exclusive items for purchase at the Merch Shop and Mod Shop, and additional bonus rewards. */, -1);
		}
		else if (!BitTest(Global_1946250.f_9, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_9), 1);
		}
	}
}

void func_112(int iParam0)//Position - 0xB952C
{
	int iVar0;
	char* sVar1;
	bool bVar2;
	char* sVar3;
	iVar0 = __LIB_5__.func_561(iParam0);
	if (!__LIB_5__.func_560(iVar0))
	{
		return;
	}
	sVar1 = "";
	switch (iVar0)
	{
		case 0:
			sVar1 = "CCR_UNL_CLTH" /* GXT: LS Car Meet Clothing Unlocked: ~a~ */;
			break;
		case 1:
			sVar1 = "";
			break;
		case 2:
			sVar1 = "CCR_UNL_RC" /* GXT: LS Car Meet Race Unlocked: ~a~ */;
			break;
		case 3:
			sVar1 = "CCR_UNL_FA" /* GXT: Auto Shop Contract Ability Unlocked: ~a~ */;
			break;
		case 4:
			sVar1 = "CCR_UNL_FT" /* GXT: LS Car Meet Feature Unlocked: ~a~ */;
			break;
		case 5:
			sVar1 = "CCR_UNL_WS" /* GXT: LS Car Meet Wheel Style Unlocked: ~a~ */;
			break;
		case 6:
			sVar1 = "CCR_UNL_LIV" /* GXT: LS Car Meet Livery Unlocked: ~a~ */;
			break;
		case 7:
			sVar1 = "";
			break;
	}
	bVar2 = !__LIB_6__.func_925();
	sVar3 = __LIB_19__.func_87(iParam0, bVar2, -1, 0);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar1) && !MISC::IS_STRING_NULL_OR_EMPTY(sVar3))
	{
		__LIB_26__.func_80(sVar1, sVar3, 0, 0, 0);
	}
}

int func_113(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0xCB328
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (iParam2 == -2)
	{
		iVar0 = PLAYER::GET_PLAYER_TEAM(iParam0);
	}
	else
	{
		iVar0 = iParam2;
	}
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 148)
	{
		bVar1 = true;
	}
	iVar2 = iParam0;
	if (iVar2 > -1)
	{
		if (Global_1853348[iVar2 /*834*/] == 148)
		{
			bVar1 = true;
		}
	}
	if (!bVar1)
	{
		if (iVar0 != -1)
		{
			if (__LIB_10__.func_87())
			{
				iVar3 = __LIB_9__.func_510(iParam0);
				if (!iVar3 == -1)
				{
					return __LIB_6__.func_890(iVar3);
				}
			}
			if ((__LIB_0__.func_723(iParam1, iParam0, iVar0, 0) && !BitTest(Global_4718592.f_15, 18)) || ((__LIB_0__.func_610(PLAYER::GET_PLAYER_TEAM(iParam1), PLAYER::GET_PLAYER_TEAM(iParam0), 0) && BitTest(Global_4718592.f_15, 23)) && !BitTest(Global_4718592.f_15, 18)))
			{
				return __LIB_0__.func_720(1);
			}
			else if (BitTest(Global_4718592.f_15, 26))
			{
				return __LIB_0__.func_722(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		else if ((Global_1836584 || Global_1836575) || Global_1853348[iParam0 /*834*/] == 0)
		{
			if (iParam0 == iParam1 || (Global_1836584 == 1 && Global_1836594 == 0))
			{
				return __LIB_0__.func_720(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		if (Global_1836579 && Global_1836068.f_14 == iParam0)
		{
			return 28;
		}
	}
	iVar4 = __LIB_9__.func_510(iParam0);
	if (!iVar4 == -1)
	{
		return __LIB_6__.func_890(iVar4);
	}
	if (bParam3)
	{
		return 0;
	}
	return 1;
}

int func_114(int iParam0, int iParam1, bool bParam2)//Position - 0xCB6B9
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Global_1058069.f_14[iParam0];
	if (__LIB_10__.func_87())
	{
		iVar2 = __LIB_9__.func_510(iParam1);
		if (!iVar2 == -1)
		{
			return __LIB_6__.func_890(iVar2);
		}
	}
	if (iVar1 > -1 && iVar1 < 17)
	{
		if (BitTest(Global_4718592.f_658[iParam0 /*22957*/].f_7911[iVar1], 24))
		{
			return 18;
		}
	}
	if (iParam0 > -1 && iParam1 != __LIB_0__.func_160())
	{
		if (Global_4718592.f_111249[iParam0] != -1 && Global_4718592.f_111249[iParam0] <= 4)
		{
			if (Global_4718592.f_111249[iParam0] == 0)
			{
				iVar0 = 15;
			}
			else if (Global_4718592.f_111249[iParam0] == 1)
			{
				iVar0 = 18;
			}
			else if (Global_4718592.f_111249[iParam0] == 2)
			{
				iVar0 = 24;
			}
			else if (Global_4718592.f_111249[iParam0] == 4)
			{
				if (BitTest(Global_4718592.f_15, 29))
				{
					iVar0 = 21;
				}
				else
				{
					iVar0 = 6;
				}
			}
			else
			{
				iVar0 = Global_4718592.f_111249[iParam0];
			}
		}
		else
		{
			iVar0 = __LIB_8__.func_837(iParam1, !bParam2, iParam0, 0);
		}
		if (BitTest(Global_4718592.f_21, 13))
		{
			iVar0 = __LIB_0__.func_726(iParam0);
		}
		if (BitTest(Global_4718592.f_24, 29))
		{
			iVar0 = 0;
		}
		if (BitTest(Global_4718592.f_15, 26) && !__LIB_0__.func_610(iParam0, PLAYER::GET_PLAYER_TEAM(iParam1), 0))
		{
			iVar0 = __LIB_0__.func_722(1);
		}
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

void func_115(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xD0259
{
	if (Global_2703735.f_1571.f_703.f_16 != __LIB_0__.func_160())
	{
		if (BitTest(Global_2689235[Global_2703735.f_1571.f_703.f_16 /*453*/].f_416, 0) && __LIB_20__.func_25())
		{
			iParam0 = 23;
		}
	}
	if (iParam0 != 18 && iParam0 != 17)
	{
		Global_2674954 = 0;
	}
	Global_2667225.f_490 = iParam0;
	Global_2667225.f_490.f_1 = SCRIPT::GET_ID_OF_THIS_THREAD();
	Global_2667225.f_490.f_2 = iParam1;
	Global_2667225.f_490.f_3 = iParam2;
	Global_2667225.f_490.f_4 = iParam3;
	Global_2667225.f_490.f_5 = iParam4;
}

int func_116()//Position - 0xD13BE
{
	if (__LIB_18__.func_366(21, 6))
	{
		return 0;
	}
	return 1;
}

void func_117()//Position - 0xD1586
{
	int iVar0;
	int iVar1;
	Global_102711[3] = -1;
	Global_102711[42] = -1;
	Global_102711[21] = -1;
	Global_102711[22] = -1;
	Global_102711[38] = -1;
	Global_102711[13] = -1;
	Global_102711[31] = -1;
	Global_102711[33] = -1;
	Global_102711[60] = -1;
	iVar0 = 0;
	while (iVar0 < 22 + 1)
	{
		iVar1 = __LIB_8__.func_261(iVar0, 1, 0);
		if (iVar1 != 2 && iVar1 != 58)
		{
			Global_102711[iVar1] = iVar0;
		}
		iVar0++;
	}
	Global_102711[55] = -1;
}

int func_118(int iParam0)//Position - 0xD3B7F
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("akula"):
					return 1;
					break;
				}
			}
	}
	return 0;
}

int func_119(int iParam0)//Position - 0xD3BCA
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_120(int iParam0)//Position - 0xD3BE0
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("minitank"):
			return 1;
			break;
	}
	if (BitTest(Global_4718592.f_39, 7))
	{
		return 0;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_121(int iParam0)//Position - 0xD3C1D
{
	int iVar0;
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("speedo4"):
			if ((!__LIB_10__.func_469() && !__LIB_10__.func_17()) && !__LIB_10__.func_472())
			{
				return 1;
			}
			break;
		default:
			if (__LIB_0__.func_596(iVar0) && !__LIB_10__.func_395())
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_122(int iParam0)//Position - 0xD3C9F
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("patriot"):
			if (!Global_262145.f_24226 /* Tunable: ENABLE_PATRIOT_MODS */ || !NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_123(int iParam0)//Position - 0xD3D6B
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			switch (ENTITY::GET_ENTITY_MODEL(iParam0))
			{
				case joaat("comet4"):
				case joaat("revolter"):
				case joaat("savestra"):
				case joaat("deluxo"):
				case joaat("viseris"):
				case joaat("caracara"):
					if ((!__LIB_10__.func_469() && !__LIB_10__.func_17()) && (!__LIB_10__.func_553() || (__LIB_10__.func_553() && !__LIB_11__.func_343(PLAYER::PLAYER_ID()))))
					{
						return 1;
					}
					break;
				case joaat("speedo4"):
					if (((!__LIB_10__.func_469() && !__LIB_10__.func_17()) && !__LIB_10__.func_472()) && (!__LIB_10__.func_553() || (__LIB_10__.func_553() && !__LIB_11__.func_343(PLAYER::PLAYER_ID()))))
					{
						return 1;
					}
					break;
				case joaat("patriot"):
					if (!Global_262145.f_24226 /* Tunable: ENABLE_PATRIOT_MODS */ || !NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
					{
						return 1;
					}
					break;
				}
			}
	}
	return 0;
}

int func_124(int iParam0)//Position - 0xD3E6D
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("starling"):
			case joaat("rcbandito"):
			case joaat("minitank"):
				return 1;
			}
		default:
	}
	return 0;
}

int func_125(int iParam0)//Position - 0xD51F7
{
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		if ((((((((((iParam0 == 64 || iParam0 == 65) || iParam0 == 66) || iParam0 == 67) || iParam0 == 68) || iParam0 == 69) || iParam0 == 70) || iParam0 == 71) || iParam0 == 72) || iParam0 == 73) || iParam0 == 86)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) == joaat("mamba"))
			{
				if (iParam0 == 40)
				{
					return 1;
				}
			}
		}
		if (__LIB_20__.func_29())
		{
			if ((((((((((((((((((((((iParam0 == 10 || iParam0 == 86) || iParam0 == 9) || iParam0 == 26) || iParam0 == 40) || iParam0 == 23) || iParam0 == 15) || iParam0 == 46) || iParam0 == 44) || iParam0 == 25) || iParam0 == 12) || iParam0 == 8) || iParam0 == 28) || iParam0 == 29) || iParam0 == 30) || iParam0 == 60) || iParam0 == 85) || iParam0 == 39) || iParam0 == 32) || iParam0 == 6) || iParam0 == 55) || iParam0 == 58) || iParam0 == 56)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_126(int iParam0)//Position - 0xD53DE
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(Local_124.f_406))
		{
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("thruster"):
			case joaat("oppressor2"):
			case joaat("rcbandito"):
			case joaat("minitank"):
				return 1;
				break;
			}
	}
	if (__LIB_10__.func_523())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_127(int iParam0)//Position - 0xD54E1
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("kuruma2"))
		{
			return 1;
		}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_128(int iParam0)//Position - 0xD5513
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("kuruma2"):
			case joaat("insurgent2"):
			case joaat("dune5"):
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("insurgent3"):
			case joaat("pounder2"):
			case joaat("speedo4"):
			case joaat("mule4"):
			case joaat("imperator"):
			case joaat("rcbandito"):
			case joaat("minitank"):
				return 1;
			}
		default:
	}
	if (__LIB_0__.func_586(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		return 1;
	}
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_129(int iParam0)//Position - 0xD55BA
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if ((((((((((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("lectro") || (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("vindicator") && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("trailerlarge")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("trailersmall2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("oppressor")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("vigilante")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("scramjet")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("rcbandito")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("formula")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("formula2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("minitank")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("openwheel1")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("openwheel2"))
		{
			return 1;
		}
	}
	if (((__LIB_10__.func_523() && __LIB_20__.func_29()) || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	return 0;
}

int func_130(int iParam0)//Position - 0xD5701
{
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("blazer"):
			case joaat("blazer3"):
			case joaat("raptor"):
			case joaat("diablous"):
			case joaat("technical2"):
			case joaat("blazer5"):
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("stromberg"):
			case joaat("deluxo"):
			case joaat("bruiser"):
			case joaat("bruiser2"):
			case joaat("bruiser3"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("toreador"):
			case joaat("verus"):
			case joaat("reever"):
				return 1;
				break;
			case joaat("turismo2"):
				return 1;
				break;
			default:
				if (__LIB_0__.func_174(ENTITY::GET_ENTITY_MODEL(iParam0), 1))
				{
					return 1;
				}
				break;
			}
	}
	if (__LIB_10__.func_523())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	return 0;
}

int func_131(int iParam0, int iParam1, int iParam2, char* sParam3, bool bParam4, int iParam5)//Position - 0xE0CF9
{
	int iVar0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		iVar0 = __LIB_20__.func_32(iParam0, iParam1, iParam2, sParam3, bParam4, iParam5);
		if ((__LIB_19__.func_954() && !bParam4) && iVar0 > 0)
		{
			iVar0 = SYSTEM::CEIL((IntToFloat(iVar0) * Global_262145.f_30979 /* Tunable: 428263877 */));
		}
		return iVar0;
	}
	return __LIB_4__.func_539(iParam0, iParam1, iParam2);
}

int func_132(int iParam0)//Position - 0xF6579
{
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 0;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (((((((((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("taxi") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("insurgent")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("insurgent2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("technical")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("limo2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("rcbandito")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("minitank")) || !__LIB_1__.func_371(ENTITY::GET_ENTITY_MODEL(iParam0))) || (DECORATOR::DECOR_EXIST_ON(iParam0, "Not_Allow_As_Saved_Veh") && DECORATOR::DECOR_GET_INT(iParam0, "Not_Allow_As_Saved_Veh") != 0)) || Global_2815059.f_911) || Global_2815059.f_954) || __LIB_1__.func_179(iParam0))
		{
			return 1;
		}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_133(int iParam0)//Position - 0xF669A
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if ((((((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("trailerlarge") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("halftrack")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("trailersmall2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("avenger")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("thruster")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("khanjali")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("oppressor2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("scarab")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("minitank"))
		{
			return 1;
		}
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (__LIB_4__.func_531() && func_1687(Local_124.f_406))
	{
		return 1;
	}
	return 0;
}

int func_134(int iParam0)//Position - 0xF6782
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("trailerlarge"):
			case joaat("halftrack"):
			case joaat("oppressor2"):
			case joaat("scarab"):
			case joaat("scarab2"):
			case joaat("scarab3"):
			case joaat("deathbike2"):
			case joaat("slamvan4"):
			case joaat("slamvan5"):
			case joaat("slamvan6"):
			case joaat("minitank"):
				return 1;
			}
		default:
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_135(int iParam0)//Position - 0xF67F3
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("sanchez"):
			case joaat("sanchez2"):
			case joaat("faggio2"):
			case joaat("dune"):
			case joaat("bfinjection"):
			case joaat("enduro"):
			case joaat("innovation"):
			case joaat("chimera"):
			case joaat("dune4"):
			case joaat("dune5"):
			case joaat("trailerlarge"):
			case joaat("halftrack"):
			case joaat("trailersmall2"):
			case joaat("phantom3"):
			case joaat("hauler2"):
			case joaat("vigilante"):
			case joaat("riot2"):
			case joaat("chernobog"):
			case joaat("mule4"):
			case joaat("pounder2"):
			case joaat("oppressor2"):
			case joaat("slamvan4"):
			case joaat("slamvan5"):
			case joaat("slamvan6"):
			case joaat("deathbike2"):
			case joaat("scarab"):
			case joaat("scarab2"):
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
			case joaat("rrocket"):
			case joaat("zhaba"):
			case joaat("stryder"):
			case joaat("minitank"):
			case joaat("veto"):
			case joaat("veto2"):
				return 1;
				break;
			}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_136(int iParam0)//Position - 0xF6A07
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("ratloader"):
		case joaat("ratloader2"):
			if ((__LIB_10__.func_102(iParam0, 4) == 1 || __LIB_10__.func_102(iParam0, 4) == 2) || __LIB_10__.func_102(iParam0, 4) == 3)
			{
				return 1;
			}
			break;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_137(int iParam0)//Position - 0xF6BAD
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("voltic"):
			case joaat("surge"):
			case joaat("cyclone"):
			case joaat("voltic2"):
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("raiden"):
			case joaat("rcbandito"):
			case joaat("minitank"):
			case joaat("veto"):
			case joaat("veto2"):
			case joaat("iwagen"):
				return 1;
				break;
			}
	}
	if (__LIB_10__.func_523())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_138(int iParam0)//Position - 0xF6C3D
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("voltic"):
			case joaat("surge"):
			case joaat("cyclone"):
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("avenger"):
			case joaat("neon"):
			case joaat("raiden"):
			case joaat("thruster"):
			case joaat("tezeract"):
			case joaat("oppressor2"):
			case joaat("rcbandito"):
			case joaat("minitank"):
			case joaat("imorgon"):
			case joaat("iwagen"):
			case joaat("omnisegt"):
				return 1;
				break;
			default:
				break;
			}
	}
	if (__LIB_10__.func_523())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_139(int iParam0)//Position - 0xF6CE8
{
	if (BitTest(Global_1574989, 7))
	{
		return 1;
	}
	if (__LIB_4__.func_532())
	{
		return 0;
	}
	if (__LIB_4__.func_531())
	{
		return 0;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("pcj"))
		{
			if (__LIB_10__.func_102(iParam0, 2) == 0)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("ruffian"))
		{
			if (__LIB_10__.func_102(iParam0, 5) == 0)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bagger"))
		{
			if (__LIB_10__.func_102(iParam0, 10) >= 0)
			{
				return 1;
			}
		}
		else if ((((((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("pigalle") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("innovation")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("guardian")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("dukes2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("scramjet")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("deveste")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("s80")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("veto")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("veto2"))
		{
			return 1;
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("esskey"))
		{
			if (__LIB_10__.func_102(iParam0, 2) >= 0)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("vortex"))
		{
			if (__LIB_10__.func_102(iParam0, 7) >= 0)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("hauler2"))
		{
			return 1;
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("microlight") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("vigilante"))
		{
			return 1;
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("visione"))
		{
			switch (__LIB_10__.func_102(iParam0, 2))
			{
				case 0:
				case 1:
				case 3:
				case 4:
					return 1;
				default:
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("viseris"))
		{
			if (__LIB_10__.func_102(iParam0, 4) >= 5)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("speedo4"))
		{
			if (__LIB_10__.func_102(iParam0, 5) >= 2)
			{
				return 1;
			}
		}
		else if ((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("cerberus") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("cerberus2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("cerberus3"))
		{
			if (__LIB_10__.func_102(iParam0, 2) >= 1)
			{
				return 1;
			}
		}
		if (VEHICLE::GET_VEHICLE_PLATE_TYPE(iParam0) == 3)
		{
			return 1;
		}
	}
	if (__LIB_20__.func_159(iParam0) && !BitTest(Global_4718592.f_33, 22))
	{
		return 1;
	}
	return 0;
}

int func_140(int iParam0)//Position - 0xF6F87
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (((((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("banshee") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2)) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bfinjection")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("dune")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bifta")) || (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("stinger") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2))) || (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("coquette2") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2))) || (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("coquette3") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2)))
		{
			return 1;
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("carbonizzare") && VEHICLE::GET_CONVERTIBLE_ROOF_STATE(iParam0) == 2)
		{
			return 1;
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("peyote"))
		{
			if (!VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2))
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("nightshark"))
		{
			if (__LIB_10__.func_102(iParam0, 5) >= 0)
			{
				return 1;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("rcbandito"))
		{
			if (__LIB_10__.func_102(iParam0, 5) >= 0 && __LIB_10__.func_102(iParam0, 5) <= 7)
			{
				return 1;
			}
		}
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("dune3"):
			case joaat("trailerlarge"):
			case joaat("barrage"):
			case joaat("dune5"):
			case joaat("dune4"):
			case joaat("trophytruck2"):
			case joaat("trophytruck"):
			case joaat("ruston"):
			case joaat("xls2"):
			case joaat("dukes2"):
			case joaat("khanjali"):
			case joaat("scramjet"):
			case joaat("issi4"):
			case joaat("zr380"):
			case joaat("issi6"):
			case joaat("zr3802"):
			case joaat("zr3803"):
			case joaat("locust"):
			case joaat("stryder"):
			case joaat("vagrant"):
			case joaat("formula2"):
			case joaat("outlaw"):
			case joaat("minitank"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("veto"):
			case joaat("veto2"):
			case joaat("winky"):
			case joaat("sm722"):
			case joaat("draugur"):
				return 1;
				break;
			}
	}
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || (__LIB_4__.func_531() && __LIB_20__.func_29()))
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_141(int iParam0)//Position - 0xF71DA
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("deathbike2"))
		{
			return 1;
		}
		if (VEHICLE::IS_THIS_MODEL_A_QUADBIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))
		{
			return 1;
		}
		if (__LIB_9__.func_238(ENTITY::GET_ENTITY_MODEL(iParam0)))
		{
			return 1;
		}
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("dune"):
			case joaat("dune2"):
			case joaat("dune4"):
			case joaat("dune5"):
			case joaat("apc"):
			case joaat("halftrack"):
			case joaat("dune3"):
			case joaat("trailerlarge"):
			case joaat("phantom3"):
			case joaat("hauler2"):
			case joaat("trailersmall2"):
			case joaat("avenger"):
			case joaat("khanjali"):
			case joaat("chernobog"):
			case joaat("riot2"):
			case joaat("mule4"):
			case joaat("pounder2"):
			case joaat("terbyte"):
			case joaat("rcbandito"):
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
			case joaat("formula"):
			case joaat("formula2"):
			case joaat("minitank"):
			case joaat("stryder"):
			case joaat("burrito2"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("veto"):
			case joaat("veto2"):
				return 1;
				break;
			}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_142(int iParam0)//Position - 0xF7363
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("ruffian"))
		{
			if (__LIB_10__.func_102(iParam0, 7) == 1)
			{
				return 1;
			}
		}
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("rcbandito"):
			case joaat("dune4"):
			case joaat("dune5"):
			case joaat("trailerlarge"):
			case joaat("trailersmall2"):
			case joaat("avenger"):
			case joaat("hotring"):
			case joaat("formula"):
			case joaat("formula2"):
			case joaat("minitank"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("veto"):
			case joaat("veto2"):
				return 1;
				break;
			case joaat("scarab"):
			case joaat("scarab2"):
			case joaat("scarab3"):
				if (__LIB_10__.func_102(iParam0, 42) > 0)
				{
					return 1;
				}
				break;
			}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_143(int iParam0)//Position - 0xF7F4F
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = ENTITY::GET_ENTITY_MODEL(Global_1585308);
	switch (iParam0)
	{
		case 3:
			iVar0 = 0;
			break;
		case 61:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 58;
			}
			else if (__LIB_10__.func_103(iVar1))
			{
				iVar0 = 2;
			}
			else
			{
				iVar0 = 1;
			}
			break;
		case 62:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 61;
			}
			else if (__LIB_10__.func_103(iVar1))
			{
				iVar0 = 99;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 55;
			}
			else
			{
				iVar0 = 2;
			}
			break;
		case 63:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 67;
			}
			else if (iVar1 == joaat("gauntlet5"))
			{
				iVar0 = 92;
			}
			else if (((((((iVar1 == joaat("vectre") || iVar1 == joaat("zr350")) || iVar1 == joaat("warrener2")) || iVar1 == joaat("rt3000")) || iVar1 == joaat("previon")) || iVar1 == joaat("euros")) || iVar1 == joaat("growler")) || iVar1 == joaat("comet6"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("jester4"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("tailgater2"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("dominator8"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("futo2"))
			{
				iVar0 = 96;
			}
			else if (iVar1 == joaat("corsita") || iVar1 == joaat("lm87"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("tenf2"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 75;
			}
			else
			{
				iVar0 = 3;
			}
			break;
		case 91:
			if (__LIB_2__.func_218(Global_1585309, Global_1585310))
			{
				iVar0 = 33;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				iVar0 = 34;
			}
			else
			{
				iVar0 = 4;
			}
			break;
		case 65:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 31;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 10;
			}
			else
			{
				iVar0 = 5;
			}
			break;
		case 66:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 85;
			}
			else if (iVar1 == joaat("dominator4"))
			{
				iVar0 = 65;
			}
			else if (iVar1 == joaat("issi5"))
			{
				iVar0 = 70;
			}
			else
			{
				iVar0 = 6;
			}
			break;
		case 67:
			iVar0 = 7;
			break;
		case 90:
			iVar0 = 8;
			break;
		case 68:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("yosemite3")))
			{
				iVar0 = 76;
			}
			else
			{
				iVar0 = 9;
			}
			break;
		case 69:
			if (iVar1 == joaat("cypher"))
			{
				iVar0 = 11;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 11;
			}
			else
			{
				iVar0 = 10;
			}
			break;
		case 70:
			if (iVar1 == joaat("cypher"))
			{
				iVar0 = 5;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 68;
			}
			else
			{
				iVar0 = 11;
			}
			break;
		case 71:
			iVar0 = 12;
			break;
		case 72:
			iVar0 = 13;
			break;
		case 73:
			iVar0 = 14;
			break;
		case 76:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("gauntlet5")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("youga3")))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 33;
			}
			else if (iVar1 == joaat("kanjosj"))
			{
				iVar0 = 16;
			}
			else
			{
				iVar0 = 15;
			}
			break;
		case 77:
			if (__LIB_10__.func_113())
			{
				iVar0 = 28;
			}
			else if (iVar1 == joaat("kanjosj"))
			{
				iVar0 = 15;
			}
			else
			{
				iVar0 = 16;
			}
			break;
		case 78:
			if (__LIB_10__.func_112())
			{
				iVar0 = 83;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 33;
			}
			else if (iVar1 == joaat("kanjosj"))
			{
				iVar0 = 33;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 23;
			}
			else
			{
				iVar0 = 17;
			}
			break;
		case 79:
			if (iVar1 == joaat("calico"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 21;
			}
			else if (iVar1 == joaat("comet6"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("dominator7"))
			{
				iVar0 = 61;
			}
			else if (iVar1 == joaat("tailgater2"))
			{
				iVar0 = 60;
			}
			else
			{
				iVar0 = 18;
			}
			break;
		case 80:
			if (iVar1 == joaat("dominator7"))
			{
				iVar0 = 18;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 72;
			}
			else
			{
				iVar0 = 19;
			}
			break;
		case 81:
			if (iVar1 == joaat("youga3"))
			{
				iVar0 = 70;
			}
			else if (iVar1 == joaat("seminole2"))
			{
				iVar0 = 65;
			}
			else if (iVar1 == joaat("warrener2"))
			{
				iVar0 = 69;
			}
			else if (iVar1 == joaat("dominator7"))
			{
				iVar0 = 19;
			}
			else if (iVar1 == joaat("sultan3"))
			{
				iVar0 = 70;
			}
			else if (__LIB_0__.func_596(iVar1))
			{
				iVar0 = 53;
			}
			else
			{
				iVar0 = 20;
			}
			break;
		case 82:
			if (iVar1 == joaat("comet6"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("warrener2") || iVar1 == joaat("calico"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("remus"))
			{
				iVar0 = 59;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 18;
			}
			else if (iVar1 == joaat("tailgater2") || iVar1 == joaat("dominator8"))
			{
				iVar0 = 52;
			}
			else if (__LIB_0__.func_596(iVar1))
			{
				iVar0 = 62;
			}
			else
			{
				iVar0 = 21;
			}
			break;
		case 83:
			if (iVar1 == joaat("kanjo"))
			{
				iVar0 = 32;
			}
			else if (iVar1 == joaat("comet6"))
			{
				iVar0 = 89;
			}
			else if (iVar1 == joaat("zr350") || iVar1 == joaat("growler"))
			{
				iVar0 = 78;
			}
			else if (iVar1 == joaat("weevil2"))
			{
				iVar0 = 40;
			}
			else
			{
				iVar0 = 22;
			}
			break;
		case 84:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("yosemite3")))
			{
				iVar0 = 71;
			}
			else if (iVar1 == joaat("remus"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("torero2"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 15;
			}
			else
			{
				iVar0 = 23;
			}
			break;
		case 92:
			if (iVar1 == joaat("z190"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("s80"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("greenwood"))
			{
				iVar0 = 50;
			}
			else
			{
				iVar0 = 24;
			}
			break;
		case 4:
			iVar0 = 25;
			break;
		case 6:
			if (__LIB_10__.func_111())
			{
				iVar0 = 30;
			}
			else if (__LIB_4__.func_529(Global_1585309, Global_1585310) && iVar1 != joaat("strikeforce"))
			{
				iVar0 = 42;
			}
			else if (iVar1 == joaat("strikeforce"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("club"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("reever"))
			{
				iVar0 = 75;
			}
			else
			{
				iVar0 = 26;
			}
			break;
		case 5:
			if (__LIB_4__.func_529(Global_1585309, Global_1585310) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("avenger")))
			{
				iVar0 = 48;
			}
			else if (iVar1 == joaat("deity") || iVar1 == joaat("greenwood"))
			{
				iVar0 = 28;
			}
			else
			{
				iVar0 = 27;
			}
			break;
		case 7:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("oppressor2")))
			{
				iVar0 = 47;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("strikeforce")))
			{
				iVar0 = 42;
			}
			else if (__LIB_10__.func_113())
			{
				iVar0 = 16;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("rcbandito")))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("deity"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("greenwood"))
			{
				iVar0 = 91;
			}
			else
			{
				iVar0 = 28;
			}
			break;
		case 8:
			if ((__LIB_2__.func_217(Global_1585309, Global_1585310) || Global_1585309 == 44) && __LIB_4__.func_536(Global_1585308))
			{
				iVar0 = 95;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("deluxo")))
			{
				iVar0 = 43;
			}
			else if (((iVar1 == joaat("sc1") || iVar1 == joaat("flashgt")) || iVar1 == joaat("zorrusso")) || iVar1 == joaat("locust"))
			{
				iVar0 = 38;
			}
			else if (iVar1 == joaat("freecrawler"))
			{
				iVar0 = 43;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("toros")))
			{
				iVar0 = 75;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("bruiser2")))
			{
				iVar0 = 54;
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus3")))
			{
				iVar0 = 33;
			}
			else if (iVar1 == joaat("seminole2"))
			{
				iVar0 = 40;
			}
			else if (iVar1 == joaat("veto"))
			{
				iVar0 = 42;
			}
			else
			{
				iVar0 = 29;
			}
			break;
		case 9:
			if (iVar1 == joaat("gp1"))
			{
				iVar0 = 66;
			}
			else if (__LIB_10__.func_111())
			{
				iVar0 = 26;
			}
			else if ((__LIB_4__.func_529(Global_1585309, Global_1585310) || iVar1 == joaat("khanjali")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("sultan2")))
			{
				iVar0 = 70;
			}
			else if (iVar1 == joaat("flashgt"))
			{
				iVar0 = 68;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("menacer")))
			{
				iVar0 = 72;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("dynasty")))
			{
				iVar0 = 39;
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("drafter")) || iVar1 == joaat("zhaba")) || iVar1 == joaat("draugur"))
			{
				iVar0 = 70;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("thrax")))
			{
				iVar0 = 81;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("rebla")) || iVar1 == joaat("italirsx"))
			{
				iVar0 = 77;
			}
			else if (iVar1 == joaat("vstr"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("openwheel2"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("veto") || iVar1 == joaat("veto2"))
			{
				iVar0 = 43;
			}
			else if (iVar1 == joaat("remus"))
			{
				iVar0 = 23;
			}
			else if (iVar1 == joaat("jester4"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("tailgater2"))
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("astron"))
			{
				iVar0 = 70;
			}
			else if (iVar1 == joaat("vigero2"))
			{
				iVar0 = 76;
			}
			else if (iVar1 == joaat("sm722"))
			{
				iVar0 = 68;
			}
			else if (iVar1 == joaat("torero2"))
			{
				iVar0 = 50;
			}
			else if (iVar1 == joaat("tenf2"))
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("picador"))
			{
				iVar0 = 65;
			}
			else
			{
				iVar0 = 30;
			}
			break;
		case 86:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 5;
			}
			else if (iVar1 == joaat("squaddie"))
			{
				iVar0 = 39;
			}
			else if (__LIB_9__.func_238(iVar1))
			{
				iVar0 = 66;
			}
			else if (iVar1 == joaat("champion"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("torero2"))
			{
				iVar0 = 47;
			}
			else
			{
				iVar0 = 31;
			}
			break;
		case 93:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("fagaloa")))
			{
				iVar0 = 38;
			}
			else if (__LIB_7__.func_981(Global_1585308))
			{
				iVar0 = 60;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("dynasty")))
			{
				iVar0 = 75;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("kanjo")))
			{
				iVar0 = 22;
			}
			else if (iVar1 == joaat("furia"))
			{
				iVar0 = 47;
			}
			else
			{
				iVar0 = 32;
			}
			break;
		case 10:
			if (__LIB_2__.func_218(Global_1585309, Global_1585310))
			{
				iVar0 = 4;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("avenger")))
			{
				iVar0 = 43;
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus3")))
			{
				iVar0 = 34;
			}
			else if (iVar1 == joaat("bruiser") || iVar1 == joaat("bruiser3"))
			{
				iVar0 = 34;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 17;
			}
			else if (iVar1 == joaat("kanjosj") || iVar1 == joaat("postlude"))
			{
				iVar0 = 17;
			}
			else
			{
				iVar0 = 33;
			}
			break;
		case 89:
			if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("brutus3")))
			{
				iVar0 = 29;
			}
			else if (iVar1 == joaat("bruiser") || iVar1 == joaat("bruiser3"))
			{
				iVar0 = 91;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				iVar0 = 4;
			}
			else
			{
				iVar0 = 34;
			}
			break;
		case 11:
			iVar0 = 35;
			break;
		case 12:
			if (__LIB_4__.func_529(Global_1585309, Global_1585310) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("thruster")))
			{
				if (iVar1 != joaat("microlight"))
				{
					iVar0 = 77;
				}
				else
				{
					iVar0 = 69;
				}
			}
			else
			{
				iVar0 = 36;
			}
			break;
		case 13:
			iVar0 = 37;
			break;
		case 14:
			if (iVar1 == joaat("cheetah2") || __LIB_4__.func_534(Global_1585308))
			{
				iVar0 = 91;
			}
			else if ((iVar1 == joaat("comet4") || iVar1 == joaat("club")) || iVar1 == joaat("manana2"))
			{
				iVar0 = 40;
			}
			else if (iVar1 == joaat("sc1") || iVar1 == joaat("flashgt"))
			{
				iVar0 = 29;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("fagaloa")))
			{
				iVar0 = 32;
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("toros")) || iVar1 == joaat("zorrusso")) || iVar1 == joaat("locust"))
			{
				iVar0 = 29;
			}
			else if (((iVar1 == joaat("asbo") || iVar1 == joaat("gauntlet5")) || iVar1 == joaat("winky")) || iVar1 == joaat("brioso3"))
			{
				iVar0 = 49;
			}
			else if (iVar1 == joaat("zhaba"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("calico"))
			{
				iVar0 = 40;
			}
			else if ((iVar1 == joaat("comet6") || iVar1 == joaat("warrener2")) || iVar1 == joaat("remus"))
			{
				iVar0 = 48;
			}
			else if (iVar1 == joaat("vectre"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("dominator8"))
			{
				iVar0 = 49;
			}
			else if (iVar1 == joaat("tenf2"))
			{
				iVar0 = 47;
			}
			else if ((iVar1 == joaat("postlude") || iVar1 == joaat("picador")) || iVar1 == joaat("sentinel4"))
			{
				iVar0 = 39;
			}
			else
			{
				iVar0 = 38;
			}
			break;
		case 15:
			if (iVar1 == joaat("gp1"))
			{
				iVar0 = 47;
			}
			else if (__LIB_10__.func_110())
			{
				iVar0 = 64;
			}
			else if (iVar1 == joaat("gb200"))
			{
				iVar0 = 60;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("strikeforce")))
			{
				iVar0 = 26;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("dynasty")))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("gauntlet4"))
			{
				iVar0 = 50;
			}
			else if (iVar1 == joaat("s80"))
			{
				iVar0 = 24;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("zhaba")))
			{
				iVar0 = 75;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("jb7002")))
			{
				iVar0 = 70;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("club")))
			{
				iVar0 = 26;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("veto")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("veto2")))
			{
				iVar0 = 76;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("squaddie")))
			{
				iVar0 = 31;
			}
			else if ((((iVar1 == joaat("calico") || iVar1 == joaat("vectre")) || iVar1 == joaat("postlude")) || iVar1 == joaat("picador")) || iVar1 == joaat("sentinel4"))
			{
				iVar0 = 38;
			}
			else
			{
				iVar0 = 39;
			}
			break;
		case 16:
			if ((iVar1 == joaat("comet4") || iVar1 == joaat("club")) || iVar1 == joaat("manana2"))
			{
				iVar0 = 38;
			}
			else if (iVar1 == joaat("seminole2"))
			{
				iVar0 = 29;
			}
			else if (iVar1 == joaat("brioso2"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("calico"))
			{
				iVar0 = 18;
			}
			else if (iVar1 == joaat("weevil2"))
			{
				iVar0 = 22;
			}
			else
			{
				iVar0 = 40;
			}
			break;
		case 17:
			iVar0 = 41;
			break;
		case 18:
			if (__LIB_4__.func_529(Global_1585309, Global_1585310) && !VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("strikeforce")))
			{
				iVar0 = 26;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("strikeforce")))
			{
				iVar0 = 28;
			}
			else if (iVar1 == joaat("veto") || iVar1 == joaat("veto2"))
			{
				iVar0 = 29;
			}
			else
			{
				iVar0 = 42;
			}
			break;
		case 19:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("avenger")))
			{
				iVar0 = 33;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("deluxo")))
			{
				iVar0 = 29;
			}
			else if (iVar1 == joaat("freecrawler"))
			{
				iVar0 = 29;
			}
			else if (iVar1 == joaat("veto") || iVar1 == joaat("veto2"))
			{
				iVar0 = 30;
			}
			else
			{
				iVar0 = 43;
			}
			break;
		case 20:
			iVar0 = 44;
			break;
		case 21:
			iVar0 = 45;
			break;
		case 22:
			iVar0 = 46;
			break;
		case 23:
			if (iVar1 == joaat("gp1"))
			{
				iVar0 = 39;
			}
			else if (((iVar1 == joaat("infernus2") || iVar1 == joaat("ruston")) || iVar1 == joaat("penumbra2")) || iVar1 == joaat("picador"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("oppressor2"))
			{
				iVar0 = 28;
			}
			else if (iVar1 == joaat("zr3802"))
			{
				iVar0 = 66;
			}
			else if ((iVar1 == joaat("locust") || iVar1 == joaat("comet7")) || iVar1 == joaat("kanjosj"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("formula"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("furia"))
			{
				iVar0 = 32;
			}
			else if (iVar1 == joaat("openwheel2") || iVar1 == joaat("italirsx"))
			{
				iVar0 = 64;
			}
			else if (iVar1 == joaat("veto") || iVar1 == joaat("veto2"))
			{
				iVar0 = 59;
			}
			else if (iVar1 == joaat("weevil"))
			{
				iVar0 = 50;
			}
			else if (iVar1 == joaat("jester4"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("comet6"))
			{
				iVar0 = 18;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 67;
			}
			else if (iVar1 == joaat("granger2"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("reever"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("buffalo4"))
			{
				iVar0 = 52;
			}
			else if (iVar1 == joaat("champion"))
			{
				iVar0 = 31;
			}
			else if (iVar1 == joaat("sm722"))
			{
				iVar0 = 69;
			}
			else if (iVar1 == joaat("torero2"))
			{
				iVar0 = 31;
			}
			else if (iVar1 == joaat("tenf2"))
			{
				iVar0 = 38;
			}
			else
			{
				iVar0 = 47;
			}
			break;
		case 24:
			if (__LIB_4__.func_529(Global_1585309, Global_1585310) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("avenger")))
			{
				iVar0 = 27;
			}
			else if ((iVar1 == joaat("comet6") || iVar1 == joaat("warrener2")) || iVar1 == joaat("remus"))
			{
				iVar0 = 38;
			}
			else
			{
				iVar0 = 48;
			}
			break;
		case 25:
			if ((iVar1 == joaat("asbo") || iVar1 == joaat("gauntlet5")) || iVar1 == joaat("winky"))
			{
				iVar0 = 38;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("vstr")))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("dominator8") || iVar1 == joaat("brioso3"))
			{
				iVar0 = 38;
			}
			else
			{
				iVar0 = 49;
			}
			break;
		case 26:
			if (!__LIB_10__.func_109())
			{
				if ((iVar1 == joaat("oppressor") || iVar1 == joaat("oppressor2")) || iVar1 == joaat("coquette4"))
				{
					iVar0 = 70;
				}
				else if (iVar1 == joaat("gauntlet4"))
				{
					iVar0 = 51;
				}
				else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("vstr")))
				{
					iVar0 = 49;
				}
				else if ((((((((((((((((((((iVar1 == joaat("gauntlet5") || iVar1 == joaat("seminole2")) || iVar1 == joaat("zr350")) || iVar1 == joaat("jester4")) || iVar1 == joaat("comet6")) || iVar1 == joaat("warrener2")) || iVar1 == joaat("remus")) || iVar1 == joaat("vectre")) || iVar1 == joaat("cypher")) || iVar1 == joaat("previon")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("euros")) || iVar1 == joaat("growler")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("calico")) || iVar1 == joaat("sultan3")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("weevil2")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("sentinel4"))
				{
					iVar0 = 97;
				}
				else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("weevil")))
				{
					iVar0 = 47;
				}
				else if (iVar1 == joaat("greenwood"))
				{
					iVar0 = 24;
				}
				else if (iVar1 == joaat("torero2"))
				{
					iVar0 = 30;
				}
				else
				{
					iVar0 = 50;
				}
			}
			else if (__LIB_2__.func_217(Global_1585309, Global_1585310) || Global_1585309 == 44)
			{
				iVar0 = 97;
			}
			else
			{
				iVar0 = 50;
			}
			break;
		case 27:
			if ((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("neo")) || iVar1 == joaat("gauntlet4")) || iVar1 == joaat("gauntlet5"))
			{
				iVar0 = 52;
			}
			else
			{
				iVar0 = 51;
			}
			break;
		case 75:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("bruiser2")))
			{
				iVar0 = 29;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("neo")) || iVar1 == joaat("gauntlet5"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("gauntlet4"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("buffalo4"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("tailgater2") || iVar1 == joaat("dominator8"))
			{
				iVar0 = 21;
			}
			else
			{
				iVar0 = 52;
			}
			break;
		case 87:
			if (__LIB_0__.func_596(iVar1))
			{
				iVar0 = 20;
			}
			else
			{
				iVar0 = 53;
			}
			break;
		case 28:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("bruiser2")))
			{
				iVar0 = 52;
			}
			else
			{
				iVar0 = 54;
			}
			break;
		case 29:
			if (iVar1 == joaat("growler"))
			{
				iVar0 = 2;
			}
			else
			{
				iVar0 = 55;
			}
			break;
		case 30:
			iVar0 = 56;
			break;
		case 85:
			iVar0 = 57;
			break;
		case 31:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 1;
			}
			else
			{
				iVar0 = 58;
			}
			break;
		case 32:
			if ((iVar1 == joaat("toros") || iVar1 == joaat("everon")) || iVar1 == joaat("manana2"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("nebula"))
			{
				iVar0 = 65;
			}
			else if (iVar1 == joaat("dukes3") || iVar1 == joaat("youga3"))
			{
				iVar0 = 60;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("veto")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("veto2")))
			{
				iVar0 = 47;
			}
			else if (((iVar1 == joaat("zr350") || iVar1 == joaat("jester4")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("buffalo4"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("remus"))
			{
				iVar0 = 21;
			}
			else if (iVar1 == joaat("vigero2") || iVar1 == joaat("greenwood"))
			{
				iVar0 = 60;
			}
			else
			{
				iVar0 = 59;
			}
			break;
		case 94:
			if (((((((iVar1 == joaat("sc1") || iVar1 == joaat("dukes3")) || iVar1 == joaat("youga3")) || iVar1 == joaat("toreador")) || iVar1 == joaat("zr350")) || iVar1 == joaat("jester4")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("buffalo4"))
			{
				iVar0 = 65;
			}
			else if (iVar1 == joaat("dominator7"))
			{
				iVar0 = 20;
			}
			else if (iVar1 == joaat("gb200"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("michelli"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("dominator3") || iVar1 == joaat("freecrawler"))
			{
				iVar0 = 91;
			}
			else if (__LIB_7__.func_981(Global_1585308))
			{
				iVar0 = 32;
			}
			else if (iVar1 == joaat("nebula"))
			{
				iVar0 = 73;
			}
			else if (((((iVar1 == joaat("komoda") || iVar1 == joaat("seminole2")) || iVar1 == joaat("cinquemila")) || iVar1 == joaat("sentinel")) || iVar1 == joaat("lm87")) || iVar1 == joaat("ruiner4"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("openwheel2"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("warrener2") || iVar1 == joaat("calico"))
			{
				iVar0 = 21;
			}
			else if (iVar1 == joaat("tailgater2"))
			{
				iVar0 = 18;
			}
			else if (iVar1 == joaat("granger2"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("greenwood"))
			{
				iVar0 = 65;
			}
			else
			{
				iVar0 = 60;
			}
			break;
		case 33:
			if (__LIB_2__.func_218(Global_1585309, Global_1585310))
			{
				iVar0 = 2;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				iVar0 = 92;
			}
			else if (iVar1 == joaat("dominator7") || iVar1 == joaat("corsita"))
			{
				iVar0 = 65;
			}
			else
			{
				iVar0 = 61;
			}
			break;
		case 34:
			if (__LIB_0__.func_596(iVar1))
			{
				iVar0 = 21;
			}
			else
			{
				iVar0 = 62;
			}
			break;
		case 88:
			iVar0 = 63;
			break;
		case 35:
			if (__LIB_10__.func_110())
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("openwheel2") || iVar1 == joaat("italirsx"))
			{
				iVar0 = 47;
			}
			else
			{
				iVar0 = 64;
			}
			break;
		case 36:
			if ((iVar1 == joaat("sc1") || iVar1 == joaat("dominator8")) || iVar1 == joaat("toreador"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("dominator4"))
			{
				iVar0 = 6;
			}
			else if ((((((iVar1 == joaat("nebula") || iVar1 == joaat("dukes3")) || iVar1 == joaat("youga3")) || iVar1 == joaat("zr350")) || iVar1 == joaat("jester4")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("buffalo4"))
			{
				iVar0 = 59;
			}
			else if (iVar1 == joaat("seminole2"))
			{
				iVar0 = 20;
			}
			else if (iVar1 == joaat("futo2"))
			{
				iVar0 = 72;
			}
			else if (iVar1 == joaat("astron"))
			{
				iVar0 = 76;
			}
			else if (iVar1 == joaat("vigero2") || iVar1 == joaat("greenwood"))
			{
				iVar0 = 59;
			}
			else if ((iVar1 == joaat("tenf") || iVar1 == joaat("kanjosj")) || iVar1 == joaat("tenf2"))
			{
				iVar0 = 72;
			}
			else if (iVar1 == joaat("corsita"))
			{
				iVar0 = 61;
			}
			else if (iVar1 == joaat("picador"))
			{
				iVar0 = 30;
			}
			else
			{
				iVar0 = 65;
			}
			break;
		case 37:
			if (iVar1 == joaat("gp1"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("zr3802"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("gauntlet4") || iVar1 == joaat("gauntlet3"))
			{
				iVar0 = 91;
			}
			else if (__LIB_9__.func_238(iVar1))
			{
				iVar0 = 31;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 47;
			}
			else
			{
				iVar0 = 66;
			}
			break;
		case 38:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("gp1"))
			{
				iVar0 = 68;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 66;
			}
			else
			{
				iVar0 = 67;
			}
			break;
		case 39:
			if (iVar1 == joaat("flashgt"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("patriot2"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("sm722"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("postlude"))
			{
				iVar0 = 10;
			}
			else
			{
				iVar0 = 68;
			}
			break;
		case 40:
			if (__LIB_10__.func_109())
			{
				if (__LIB_2__.func_217(Global_1585309, Global_1585310) || Global_1585309 == 44)
				{
					iVar0 = 98;
				}
				else
				{
					iVar0 = 69;
				}
			}
			else if (((((__LIB_10__.func_108() && iVar1 != joaat("torero")) || iVar1 == joaat("havok")) || iVar1 == joaat("microlight")) || iVar1 == joaat("pyro")) || iVar1 == joaat("vigilante"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("freecrawler"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("tigon") || iVar1 == joaat("champion"))
			{
				iVar0 = 76;
			}
			else if (((((((((((iVar1 == joaat("jester4") || iVar1 == joaat("comet6")) || iVar1 == joaat("remus")) || iVar1 == joaat("vectre")) || iVar1 == joaat("cypher")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("tenf")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("ruiner4")) || iVar1 == joaat("turismor")) || iVar1 == joaat("schwarzer"))
			{
				iVar0 = 98;
			}
			else if (iVar1 == joaat("warrener2"))
			{
				iVar0 = 20;
			}
			else if (iVar1 == joaat("granger2"))
			{
				iVar0 = 70;
			}
			else if (iVar1 == joaat("sm722"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 74;
			}
			else
			{
				iVar0 = 69;
			}
			break;
		case 41:
			if (iVar1 == joaat("torero"))
			{
				iVar0 = 91;
			}
			else if (__LIB_4__.func_529(Global_1585309, Global_1585310) || iVar1 == joaat("khanjali"))
			{
				iVar0 = 30;
			}
			else if (((iVar1 == joaat("comet4") || iVar1 == joaat("pounder2")) || iVar1 == joaat("vagrant")) || iVar1 == joaat("sentinel"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("oppressor2") || iVar1 == joaat("coquette4"))
			{
				iVar0 = 50;
			}
			else if (iVar1 == joaat("issi5"))
			{
				iVar0 = 6;
			}
			else if (((iVar1 == joaat("drafter") || iVar1 == joaat("zhaba")) || iVar1 == joaat("sultan2")) || iVar1 == joaat("astron"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 73;
			}
			else if (iVar1 == joaat("jb7002"))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("youga3"))
			{
				iVar0 = 20;
			}
			else if (iVar1 == joaat("yosemite3"))
			{
				iVar0 = 23;
			}
			else if (iVar1 == joaat("sultan3"))
			{
				iVar0 = 20;
			}
			else if (iVar1 == joaat("granger2"))
			{
				iVar0 = 75;
			}
			else
			{
				iVar0 = 70;
			}
			break;
		case 42:
			if (iVar1 == joaat("yosemite3"))
			{
				iVar0 = 70;
			}
			else
			{
				iVar0 = 71;
			}
			break;
		case 43:
			if (iVar1 == joaat("menacer"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("futo2"))
			{
				iVar0 = 65;
			}
			else if ((iVar1 == joaat("tenf") || iVar1 == joaat("kanjosj")) || iVar1 == joaat("tenf2"))
			{
				iVar0 = 65;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 19;
			}
			else
			{
				iVar0 = 72;
			}
			break;
		case 44:
			if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar1))
			{
				iVar0 = 32;
			}
			else if (iVar1 == joaat("z190"))
			{
				iVar0 = 24;
			}
			else if (iVar1 == joaat("michelli"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("freecrawler"))
			{
				iVar0 = 69;
			}
			else if (iVar1 == joaat("nebula"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("zhaba"))
			{
				iVar0 = 38;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("club")))
			{
				iVar0 = 39;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 30;
			}
			else
			{
				iVar0 = 73;
			}
			break;
		case 45:
			if (iVar1 == joaat("infernus2") || iVar1 == joaat("ruston"))
			{
				iVar0 = 47;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("schlagen")))
			{
				iVar0 = 91;
			}
			else if ((iVar1 == joaat("locust") || iVar1 == joaat("penumbra2")) || iVar1 == joaat("comet7"))
			{
				iVar0 = 47;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("zhaba")))
			{
				iVar0 = 39;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("gauntlet5")) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("youga3")))
			{
				iVar0 = 15;
			}
			else if ((((((((((((((iVar1 == joaat("comet6") || iVar1 == joaat("jester4")) || iVar1 == joaat("vectre")) || iVar1 == joaat("warrener2")) || iVar1 == joaat("rt3000")) || iVar1 == joaat("cypher")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("euros")) || iVar1 == joaat("zr350")) || iVar1 == joaat("previon")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("growler")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("picador"))
			{
				iVar0 = 76;
			}
			else if (iVar1 == joaat("futo2") || iVar1 == joaat("astron"))
			{
				iVar0 = 75;
			}
			else if (((iVar1 == joaat("rhinehart") || iVar1 == joaat("sentinel")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("zentorno"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("corsita"))
			{
				iVar0 = 77;
			}
			else if (iVar1 == joaat("kanjosj"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("lm87"))
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("draugur"))
			{
				iVar0 = 69;
			}
			else
			{
				iVar0 = 74;
			}
			break;
		case 46:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("fagaloa")))
			{
				iVar0 = 84;
			}
			else if (((VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("schlagen")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("futo2")) || iVar1 == joaat("astron"))
			{
				iVar0 = 74;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("toros")))
			{
				iVar0 = 38;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("hellion")))
			{
				iVar0 = 89;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("dynasty")))
			{
				iVar0 = 32;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("zhaba")))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("brioso2"))
			{
				iVar0 = 40;
			}
			else if (iVar1 == joaat("glendale2") || iVar1 == joaat("yosemite3"))
			{
				iVar0 = 82;
			}
			else if (iVar1 == joaat("patriot3"))
			{
				iVar0 = 81;
			}
			else if (iVar1 == joaat("granger2"))
			{
				iVar0 = 69;
			}
			else if (iVar1 == joaat("reever"))
			{
				iVar0 = 26;
			}
			else if (((iVar1 == joaat("rhinehart") || iVar1 == joaat("sentinel")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("zentorno"))
			{
				iVar0 = 74;
			}
			else if (iVar1 == joaat("corsita") || iVar1 == joaat("postlude"))
			{
				iVar0 = 76;
			}
			else
			{
				iVar0 = 75;
			}
			break;
		case 47:
			if ((((((((((((((((((((((((((((iVar1 == joaat("issi7") || iVar1 == joaat("imorgon")) || iVar1 == joaat("paragon")) || iVar1 == joaat("paragon2")) || iVar1 == joaat("kanjo")) || iVar1 == joaat("club")) || iVar1 == joaat("penumbra2")) || iVar1 == joaat("coquette4")) || iVar1 == joaat("tigon")) || iVar1 == joaat("yosemite3")) || iVar1 == joaat("brioso2")) || iVar1 == joaat("zr350")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("warrener2")) || iVar1 == joaat("comet6")) || iVar1 == joaat("vectre")) || iVar1 == joaat("remus")) || iVar1 == joaat("jester4")) || iVar1 == joaat("rt3000")) || iVar1 == joaat("cypher")) || iVar1 == joaat("previon")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("euros")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("growler")) || iVar1 == joaat("baller7")) || iVar1 == joaat("cinquemila")) || iVar1 == joaat("champion"))
			{
				iVar0 = 77;
			}
			else if (iVar1 == joaat("veto") || iVar1 == joaat("veto2"))
			{
				iVar0 = 39;
			}
			else if ((((iVar1 == joaat("astron") || iVar1 == joaat("vigero2")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("postlude")) || iVar1 == joaat("picador"))
			{
				iVar0 = 77;
			}
			else if (iVar1 == joaat("corsita"))
			{
				iVar0 = 78;
			}
			else
			{
				iVar0 = 76;
			}
			break;
		case 48:
			if (__LIB_4__.func_529(Global_1585309, Global_1585310) || iVar1 == joaat("thruster"))
			{
				if (iVar1 != joaat("microlight"))
				{
					iVar0 = 36;
				}
			}
			else if ((((((((iVar1 == joaat("issi7") || iVar1 == joaat("imorgon")) || iVar1 == joaat("yosemite2")) || iVar1 == joaat("paragon")) || iVar1 == joaat("paragon2")) || iVar1 == joaat("kanjo")) || iVar1 == joaat("penumbra2")) || iVar1 == joaat("coquette4")) || iVar1 == joaat("baller7"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("rebla") || iVar1 == joaat("italirsx"))
			{
				iVar0 = 30;
			}
			else if (iVar1 == joaat("club") || iVar1 == joaat("cinquemila"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("tigon") || iVar1 == joaat("champion"))
			{
				iVar0 = 69;
			}
			else if (iVar1 == joaat("yosemite3"))
			{
				iVar0 = 9;
			}
			else if ((iVar1 == joaat("zr350") || iVar1 == joaat("dominator7")) || iVar1 == joaat("previon"))
			{
				iVar0 = 21;
			}
			else if ((((((iVar1 == joaat("warrener2") || iVar1 == joaat("vectre")) || iVar1 == joaat("jester4")) || iVar1 == joaat("rt3000")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("euros")) || iVar1 == joaat("growler"))
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("comet6"))
			{
				iVar0 = 21;
			}
			else if ((iVar1 == joaat("kanjosj") || iVar1 == joaat("postlude")) || iVar1 == joaat("picador"))
			{
				iVar0 = 76;
			}
			else
			{
				iVar0 = 77;
			}
			break;
		case 49:
			if (iVar1 == joaat("zr350") || iVar1 == joaat("growler"))
			{
				iVar0 = 22;
			}
			else
			{
				iVar0 = 78;
			}
			break;
		case 50:
			iVar0 = 79;
			break;
		case 51:
			iVar0 = 80;
			break;
		case 52:
			if (iVar1 == joaat("tampa3"))
			{
				iVar0 = 83;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("thrax")))
			{
				iVar0 = 70;
			}
			else if (iVar1 == joaat("glendale2") || iVar1 == joaat("yosemite3"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("patriot3"))
			{
				iVar0 = 75;
			}
			else
			{
				iVar0 = 81;
			}
			break;
		case 74:
			if (iVar1 == joaat("tampa3"))
			{
				iVar0 = 95;
			}
			else if (__LIB_10__.func_112())
			{
				iVar0 = 17;
			}
			else if (iVar1 == joaat("glendale2") || iVar1 == joaat("yosemite3"))
			{
				iVar0 = 81;
			}
			else
			{
				iVar0 = 82;
			}
			break;
		case 53:
			if (iVar1 == joaat("tampa3"))
			{
				iVar0 = 81;
			}
			else if (__LIB_10__.func_112())
			{
				iVar0 = 82;
			}
			else
			{
				iVar0 = 83;
			}
			break;
		case 54:
			if ((iVar1 == joaat("xa21") || iVar1 == joaat("dynasty")) || iVar1 == joaat("youga3"))
			{
				iVar0 = 91;
			}
			else if ((((__LIB_10__.func_108() || iVar1 == joaat("havok")) || iVar1 == joaat("microlight")) || iVar1 == joaat("pyro")) || iVar1 == joaat("vigilante"))
			{
				iVar0 = 69;
			}
			else if (((iVar1 == joaat("barrage") || iVar1 == joaat("pounder2")) || iVar1 == joaat("mule4")) || iVar1 == joaat("speedo4"))
			{
				iVar0 = 95;
			}
			else if (iVar1 == joaat("fagaloa"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("vstr"))
			{
				iVar0 = 30;
			}
			else if ((iVar1 == joaat("club") || iVar1 == joaat("coquette4")) || iVar1 == joaat("cinquemila"))
			{
				iVar0 = 76;
			}
			else if (iVar1 == joaat("slamtruck"))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("cypher"))
			{
				iVar0 = 3;
			}
			else if (iVar1 == joaat("jester4"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("growler"))
			{
				iVar0 = 23;
			}
			else if (iVar1 == joaat("torero2"))
			{
				iVar0 = 23;
			}
			else
			{
				iVar0 = 84;
			}
			break;
		case 55:
			if ((__LIB_2__.func_218(Global_1585309, Global_1585310) || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				iVar0 = 6;
			}
			else
			{
				iVar0 = 85;
			}
			break;
		case 56:
			iVar0 = 86;
			break;
		case 57:
			iVar0 = 87;
			break;
		case 58:
			iVar0 = 88;
			break;
		case 59:
			if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("hellion")))
			{
				iVar0 = 75;
			}
			else if (VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("drafter")))
			{
				iVar0 = 91;
			}
			else if (iVar1 == joaat("comet6"))
			{
				iVar0 = 22;
			}
			else
			{
				iVar0 = 89;
			}
			break;
		case 60:
			iVar0 = 90;
			break;
		case 95:
			if (iVar1 == joaat("gp1"))
			{
				iVar0 = 67;
			}
			else if ((iVar1 == joaat("xa21") || iVar1 == joaat("dynasty")) || iVar1 == joaat("youga3"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("cheetah2") || __LIB_4__.func_534(Global_1585308))
			{
				iVar0 = 38;
			}
			else if (((iVar1 == joaat("torero") || iVar1 == joaat("comet4")) || iVar1 == joaat("pounder2")) || iVar1 == joaat("vagrant"))
			{
				iVar0 = 70;
			}
			else if ((((((iVar1 == joaat("dominator3") || iVar1 == joaat("freecrawler")) || iVar1 == joaat("seminole2")) || iVar1 == joaat("cinquemila")) || iVar1 == joaat("sentinel")) || iVar1 == joaat("lm87")) || iVar1 == joaat("ruiner4"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("patriot2"))
			{
				iVar0 = 68;
			}
			else if ((iVar1 == joaat("toros") || iVar1 == joaat("everon")) || iVar1 == joaat("manana2"))
			{
				iVar0 = 59;
			}
			else if (iVar1 == joaat("schlagen"))
			{
				iVar0 = 75;
			}
			else if (iVar1 == joaat("rcbandito"))
			{
				iVar0 = 28;
			}
			else if (iVar1 == joaat("bruiser") || iVar1 == joaat("bruiser3"))
			{
				iVar0 = 33;
			}
			else if (iVar1 == joaat("yosemite2"))
			{
				iVar0 = 77;
			}
			else if (iVar1 == joaat("drafter"))
			{
				iVar0 = 89;
			}
			else if (iVar1 == joaat("neo") || iVar1 == joaat("gauntlet5"))
			{
				iVar0 = 51;
			}
			else if (iVar1 == joaat("gauntlet4") || iVar1 == joaat("gauntlet3"))
			{
				iVar0 = 66;
			}
			else if (((((((iVar1 == joaat("paragon") || iVar1 == joaat("paragon2")) || iVar1 == joaat("kanjo")) || iVar1 == joaat("penumbra2")) || iVar1 == joaat("issi7")) || iVar1 == joaat("imorgon")) || iVar1 == joaat("brioso2")) || iVar1 == joaat("baller7"))
			{
				iVar0 = 76;
			}
			else if (iVar1 == joaat("vstr"))
			{
				iVar0 = 50;
			}
			else if (iVar1 == joaat("komoda"))
			{
				iVar0 = 60;
			}
			else if (iVar1 == joaat("formula"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("slamtruck"))
			{
				iVar0 = 84;
			}
			else if (iVar1 == joaat("reever"))
			{
				iVar0 = 47;
			}
			else if (iVar1 == joaat("deity") || iVar1 == joaat("greenwood"))
			{
				iVar0 = 27;
			}
			else
			{
				iVar0 = 91;
			}
			break;
		case 96:
			if (iVar1 == joaat("gauntlet5"))
			{
				iVar0 = 3;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				iVar0 = 61;
			}
			else
			{
				iVar0 = 92;
			}
			break;
		case 97:
			iVar0 = 93;
			break;
		case 98:
			iVar0 = 94;
			break;
		case 99:
			if (__LIB_4__.func_536(Global_1585308))
			{
				iVar0 = 29;
			}
			else if (iVar1 == joaat("tampa3"))
			{
				iVar0 = 82;
			}
			else if (((iVar1 == joaat("barrage") || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("pounder2"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("mule4"))) || VEHICLE::IS_VEHICLE_MODEL(Global_1585308, joaat("speedo4")))
			{
				iVar0 = 84;
			}
			else
			{
				iVar0 = 95;
			}
			break;
		case 100:
			iVar0 = 96;
			break;
		case 101:
			if (((((((((((((((((((((__LIB_10__.func_109() || iVar1 == joaat("gauntlet5")) || iVar1 == joaat("seminole2")) || iVar1 == joaat("zr350")) || iVar1 == joaat("jester4")) || iVar1 == joaat("comet6")) || iVar1 == joaat("warrener2")) || iVar1 == joaat("remus")) || iVar1 == joaat("vectre")) || iVar1 == joaat("cypher")) || iVar1 == joaat("previon")) || iVar1 == joaat("dominator8")) || iVar1 == joaat("euros")) || iVar1 == joaat("growler")) || iVar1 == joaat("dominator7")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("calico")) || iVar1 == joaat("sultan3")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("weevil2")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("sentinel4"))
			{
				iVar0 = 50;
			}
			else
			{
				iVar0 = 97;
			}
			break;
		case 102:
			if ((((((((((((__LIB_10__.func_109() || iVar1 == joaat("jester4")) || iVar1 == joaat("comet6")) || iVar1 == joaat("remus")) || iVar1 == joaat("vectre")) || iVar1 == joaat("cypher")) || iVar1 == joaat("tailgater2")) || iVar1 == joaat("tenf")) || iVar1 == joaat("kanjosj")) || iVar1 == joaat("tenf2")) || iVar1 == joaat("ruiner4")) || iVar1 == joaat("turismor")) || iVar1 == joaat("schwarzer"))
			{
				iVar0 = 69;
			}
			else
			{
				iVar0 = 98;
			}
			break;
		case 103:
			if (__LIB_10__.func_103(iVar1))
			{
				iVar0 = 1;
			}
			else
			{
				iVar0 = 99;
			}
			break;
	}
	return iVar0;
}

int func_144()//Position - 0xFF6D3
{
	if (__LIB_10__.func_554())
	{
		if (__LIB_5__.func_97(PLAYER::PLAYER_ID(), 0) && INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == joaat("MainRoom"))
		{
			return 1;
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

int func_145(var uParam0, int* iParam1, var uParam2, bool bParam3, bool bParam4, char* sParam5, bool bParam6, int iParam7, bool bParam8, bool bParam9, char* sParam10, bool bParam11, bool bParam12, bool bParam13, bool bParam14, bool bParam15, int iParam16, bool bParam17, int iParam18, bool bParam19, bool bParam20, bool bParam21, bool bParam22, bool bParam23, bool bParam24, bool bParam25, bool bParam26, bool bParam27, bool bParam28, bool bParam29, int iParam30, int iParam31, bool bParam32, char* sParam33, bool bParam34)//Position - 0x109146
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char* sVar4;
	char* sVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	struct<16> Var10;
	int iVar11;
	int iVar12;
	int iVar13;
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	switch (*uParam2)
	{
		case 0:
			if (bParam3)
			{
				if (iParam7 == 6)
				{
					iVar6 = 121;
				}
				else if (iParam7 == 7)
				{
					iVar6 = 63;
				}
				else if (__LIB_9__.func_514())
				{
					iVar6 = 21;
				}
				else
				{
					iVar6 = 51;
				}
				if (*iParam1 == 0)
				{
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						if (__LIB_9__.func_514())
						{
							sVar4 = "FMMC_KEY_TIS2SJ";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP2";
						}
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_KEY_TIP7";
						iVar6 = 21;
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_KEY_TIP5";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_KEY_TIP6";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_KEY_TIP10" /* GXT: Enter Synopsis (MAX 125 characters): */;
					}
					else if (iParam7 == 8)
					{
						sVar4 = "FMMC_KEY_TXT7";
					}
					else if (iParam7 == 9)
					{
						sVar4 = "FMMC_KEY_TXT8";
					}
					else if (iParam7 == 10)
					{
						sVar4 = "FMMC_KEY_VSS";
					}
				}
				else if (__LIB_9__.func_514())
				{
					sVar4 = "FMMC_KEY_TIS2FJ";
				}
				else
				{
					sVar4 = "FMMC_KEY_TIP2F";
				}
				if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
				{
					sVar5 = sVar4;
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						sVar4 = "FMMC_SS_RL_35";
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_SS_RL_32";
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_SS_RL_33";
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_SS_RL_34";
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_SS_RL_49";
					}
					else if (iParam7 == 7)
					{
						sVar4 = "FMMC_SS_RL_57";
					}
				}
				if (MISC::IS_PC_VERSION())
				{
					iVar7 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar7 = 0;
				}
				else
				{
					iVar7 = 1;
				}
				if (bParam24)
				{
					if (bParam26)
					{
						sVar4 = "LINE_NUMBER";
					}
					else
					{
						sVar4 = "WEB_SEARCH" /* GXT: Search... */;
					}
				}
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, "", "", "", "", iVar6);
				}
				else
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, sParam5, sParam10, "", "", iVar6);
				}
			}
			else
			{
				if (MISC::IS_PC_VERSION())
				{
					iVar8 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar8 = 0;
				}
				else
				{
					iVar8 = 1;
				}
				if (bParam4)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 10)
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 25;
					}
					if (__LIB_0__.func_236())
					{
						iVar9 = 64;
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_116531)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_116531), "", "", "", iVar9);
					}
				}
				else if (bParam32)
				{
					sVar4 = "CST_KEY_TEXT";
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (bParam25)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_BLIMP";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (iParam30 != -1)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "DMC_HTM_EH";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					Var10 = { Global_4718592.f_169405[iParam30 /*16*/] };
					if (iParam31 > -1)
					{
						Var10 = { Global_4718592.f_169486[iParam30 /*65*/][iParam31 /*16*/] };
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&Var10))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &Var10, "", "", "", iVar9);
					}
				}
				else if (bParam27)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					else
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam34)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDM_T";
					}
					else
					{
						sVar4 = "FMMC_CDM_F1";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam13)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam9)
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_TIPTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPTF";
						}
					}
					else
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_ALTT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_ALTTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_ALTTF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M36";
					}
					iVar11 = 0;
					while (iVar11 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116682[iVar11 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116682[iVar11 /*16*/]), "", 64);
						}
						iVar11++;
					}
					MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116682[0 /*16*/]), &(Global_4718592.f_116682[1 /*16*/]), &(Global_4718592.f_116682[2 /*16*/]), &(Global_4718592.f_116682[3 /*16*/]), &(Global_4718592.f_116682[4 /*16*/]), &(Global_4718592.f_116682[5 /*16*/]), &(Global_4718592.f_116682[6 /*16*/]), &(Global_4718592.f_116682[7 /*16*/]), iVar9);
				}
				else if (bParam6)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP4";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP4F";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_SMS3";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/])))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 126);
					}
					else
					{
						iVar12 = 0;
						while (iVar12 <= 1)
						{
							if (MISC::IS_STRING_NULL(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/])))
							{
								StringCopy(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/]), "", 64);
							}
							iVar12++;
						}
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/]), &(Global_4718592.f_93381[iParam16 /*43*/].f_6[1 /*16*/]), "", "", 126);
					}
				}
				else if (bParam8)
				{
					iVar9 = 61;
					if (bParam11)
					{
						if (__LIB_9__.func_514())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_SOD" /* GXT: Enter your Eyefind subject: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_SODE" /* GXT: Subject too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_SODF" /* GXT: Forbidden text. Try again: */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "CELL_EMAIL_SOD" /* GXT: Enter your Eyefind subject (MAX 60 characters): */;
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "CELL_EMAIL_SODE" /* GXT: Subject too long. Try again (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "CELL_EMAIL_SODF" /* GXT: Forbidden text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
						{
							sVar5 = sVar4;
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					else if (__LIB_9__.func_514())
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8S" /* GXT: Enter Message (MAX 20 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8FS" /* GXT: Invalid Message. Try again (MAX 20 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
						iVar9 = 21;
					}
					else
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8" /* GXT: Enter Message (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8F" /* GXT: Forbidden Text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam12)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP9" /* GXT: Enter Outfit Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP9F" /* GXT: Invalid Outfit Name. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP9N" /* GXT: Outfit Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 16);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", 16);
					}
				}
				else if (bParam14)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP12N" /* GXT: Custom Team Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam28)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIPTN";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPTNF";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam15)
				{
					iVar9 = 61;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam17)
				{
					if (__LIB_0__.func_53())
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 20;
					}
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP14S" /* GXT: Enter Yacht Name (MAX 20 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP14ES" /* GXT: Subject too long. Try again (MAX 20 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP14OS" /* GXT: Empty Text. Try again (MAX 20 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP14FS" /* GXT: Forbidden Text. Try again (MAX 20 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP14N" /* GXT: Yacht Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam29)
				{
					iVar9 = 15;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP16S" /* GXT: Enter Vehicle Name (MAX 15 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP16ES" /* GXT: Subject too long. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP16OS" /* GXT: Empty Text. Try again (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP16FS" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP16IS" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP16N";
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(64);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (iParam18 > 0)
				{
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						iVar9 = 16;
					}
					else
					{
						iVar9 = 15;
					}
					if (bParam20)
					{
						sVar4 = "FMMC_KEY_TIP15B" /* GXT: You must enter a name (MAX 15 characters): */;
					}
					else if (bParam21)
					{
						sVar4 = "FMMC_KEY_TIP15U" /* GXT: Name already in use. Try again (MAX 15 characters): */;
					}
					else if (bParam19)
					{
						sVar4 = "FMMC_KEY_TIP15N" /* GXT: Name Too Short. Try again (MAX 15 characters): */;
					}
					else if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP15I" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == 0)
					{
						if (iParam18 == 2)
						{
							sVar4 = "FMMC_MCK_TIP15" /* GXT: Enter MC Name (MAX 15 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP15" /* GXT: Enter Organization Name (MAX 15 characters): */;
						}
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP15F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 501;
						if (bParam11)
						{
							if (__LIB_9__.func_514())
							{
								if (*iParam1 == 0)
								{
									sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
								}
								else if (*iParam1 == -1)
								{
									sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
								}
								else
								{
									sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
								}
							}
							else if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMAIL_BOD" /* GXT: Enter your Eyefind message (MAX 500 characters): */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMAIL_BODE" /* GXT: Message too long. Try again (MAX 500 characters): */;
							}
							else
							{
								sVar4 = "CELL_EMAIL_BODF" /* GXT: Forbidden message. Try again (MAX 500 characters): */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP3";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIP3E";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP3F";
						}
					}
					else
					{
						iVar9 = 251;
						if (__LIB_9__.func_514())
						{
							iVar9 = 150;
						}
						if (bParam11)
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
							}
						}
						else if (__LIB_9__.func_514())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "FMMC_KEY_TIPSS";
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "FMMC_KEY_TIPSSE";
							}
							else
							{
								sVar4 = "FMMC_KEY_TIPSSF";
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPS";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIPSE";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPSF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M20";
						if (bParam11)
						{
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					iVar13 = 0;
					while (iVar13 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116553[iVar13 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116553[iVar13 /*16*/]), "", 64);
						}
						iVar13++;
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					if (bParam11)
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, sParam5, sParam10, "", "", "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116553[0 /*16*/]), &(Global_4718592.f_116553[1 /*16*/]), &(Global_4718592.f_116553[2 /*16*/]), &(Global_4718592.f_116553[3 /*16*/]), &(Global_4718592.f_116553[4 /*16*/]), &(Global_4718592.f_116553[5 /*16*/]), &(Global_4718592.f_116553[6 /*16*/]), &(Global_4718592.f_116553[7 /*16*/]), iVar9);
					}
				}
			}
			StringCopy(&Global_1922008, "", 64);
			*iParam1 = 0;
			*uParam2 = 1;
			break;
		case 1:
			*uParam0 = MISC::UPDATE_ONSCREEN_KEYBOARD();
			switch (*uParam0)
			{
				case 0:
					return 0;
				case 3:
					*uParam2 = 0;
					*uParam0 = 0;
					*iParam1 = 0;
					return 0;
				case 2:
					*iParam1 = 0;
					return 0;
				case 1:
					if ((bParam4 || bParam13) || bParam29)
					{
						if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
							if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
							{
								*iParam1 = 0;
								return 1;
							}
							iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
							iVar3 = 0;
							while (iVar3 <= (iVar1 - 1))
							{
								if (*uParam2 != 0)
								{
									if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
									{
										if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 0, 1)))
										{
											iVar2 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
											StringCopy(&Global_1922008, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 1, iVar2), 64);
										}
									}
									else
									{
										*iParam1 = 0;
										return 1;
									}
								}
								iVar3++;
							}
						}
					}
					if (__LIB_0__.func_236())
					{
						*iParam1 = 0;
						return 1;
					}
					if (SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_PENDING(*iParam1))
						{
							HUD::BUSYSPINNER_OFF();
							iVar0 = SOCIALCLUB::SC_PROFANITY_GET_STRING_STATUS(*iParam1);
							switch (iVar0)
							{
								case 0:
									if (bParam9)
									{
										StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
										iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
										iVar3 = 0;
										while (iVar3 <= (iVar1 - 1))
										{
											if (*uParam2 != 0)
											{
												if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
												{
													if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, iVar3, iVar3 + 1)))
													{
														*iParam1 = -3;
													}
												}
											}
											iVar3++;
										}
									}
									if (*iParam1 != -3)
									{
										*iParam1 = 0;
										return 1;
									}
									else
									{
										*uParam2 = 0;
										*uParam0 = 0;
										return 0;
									}
									break;
								case 1:
									*uParam2 = 0;
									*uParam0 = 0;
									return 0;
									break;
								case -1:
									*uParam2 = 0;
									*uParam0 = 3;
									*iParam1 = 0;
									__LIB_9__.func_513(1);
									return 0;
									break;
							}
						}
						else if (bParam11)
						{
							if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appinternet")) == 0)
							{
								HUD::BUSYSPINNER_OFF();
								*iParam1 = 0;
								return 1;
							}
						}
						break;
					}
					if (bParam4)
					{
						if (bParam22)
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(&Global_1922008, iParam1);
						}
						else
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING(&Global_1922008, iParam1);
						}
					}
					else if (MISC::IS_STRING_NULL_OR_EMPTY(MISC::GET_ONSCREEN_KEYBOARD_RESULT()))
					{
						*iParam1 = -2;
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
					else if (bParam22)
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					else
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					if (__LIB_0__.func_53())
					{
						if ((!NETWORK::NETWORK_IS_SIGNED_ONLINE() || __LIB_7__.func_45() == 0) || func_1879() == 1)
						{
							*iParam1 = 0;
							*uParam2 = 0;
							*uParam0 = 3;
							return 0;
						}
					}
					if (bParam17)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKYACHTNAME" /* GXT: Registering your yacht's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else if (bParam29)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKVEHICLENAME" /* GXT: Registering your vehicle's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKPROFANITY" /* GXT: Checking your text for profanity.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							*iParam1 = -1;
						}
						else
						{
							*iParam1 = -2;
						}
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
				default:
			}
			break;
	}
	return 0;
}

void func_146(var uParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0x10CD8C
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	iVar0 = __LIB_20__.func_46(iParam1, iParam2);
	iVar1 = (iVar0 / 32);
	iVar2 = (iVar0 % 32);
	if (bParam3)
	{
		if (bParam4)
		{
			MISC::SET_BIT(&(uParam0->f_653[iVar1]), iVar2);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam0->f_653[iVar1]), iVar2);
		}
	}
	else if (bParam4)
	{
		MISC::SET_BIT(&(uParam0->f_663[iVar1]), iVar2);
	}
	else
	{
		MISC::CLEAR_BIT(&(uParam0->f_663[iVar1]), iVar2);
	}
}

int func_147(var uParam0, int iParam1)//Position - 0x12D9B6
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(__LIB_10__.func_180(uParam0), iParam1, 0);
	return iVar0;
}

int func_148(int iParam0, int iParam1, int iParam2)//Position - 0x12FF87
{
	int iVar0;
	switch (iParam0)
	{
		case joaat("hotring"):
			if (iParam1 == 48)
			{
				if (__LIB_1__.func_556(6532, -1, 0) < __LIB_10__.func_189(iParam2))
				{
					if (iParam2 == 24)
					{
						if (Global_262145.f_32556 /* Tunable: FREE_ECOLA_LIVERY */)
						{
							return 0;
						}
					}
					else if (iParam2 == 28)
					{
						if (Global_262145.f_32555 /* Tunable: FREE_SPRUNK_LIVERY */)
						{
							return 0;
						}
					}
					return 1;
				}
			}
			break;
		case joaat("weevil"):
			if (iParam1 == 48)
			{
				if (iParam2 == 15)
				{
					iVar0 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES16"));
					if (!__LIB_1__.func_595(110, -1) && !BitTest(iVar0, 12))
					{
						return 1;
					}
				}
			}
			break;
		default:
			break;
	}
	return 0;
}

int func_149(int iParam0, int iParam1, bool bParam2)//Position - 0x131D87
{
	if (bParam2)
	{
		return 1;
	}
	if (__LIB_1__.func_925(iParam0) && iParam1 != 19)
	{
		return 0;
	}
	switch (iParam1)
	{
		case 15:
		case 16:
			if (__LIB_5__.func_749(iParam0) || __LIB_7__.func_315(iParam0))
			{
				return 1;
			}
			break;
		case 17:
			if (__LIB_1__.func_323(iParam0))
			{
				return 1;
			}
			break;
		case 18:
			if (__LIB_1__.func_926(iParam0))
			{
				return 1;
			}
			break;
		case 19:
			if (__LIB_1__.func_925(iParam0))
			{
				return 1;
			}
			break;
		case 20:
			if (__LIB_1__.func_932(iParam0))
			{
				return 1;
			}
			break;
		case 21:
			break;
		case 22:
			break;
		case 23:
			break;
		case 24:
			break;
		default:
			if (__LIB_20__.func_51(iParam0, iParam1))
			{
				return 1;
			}
			else if (iParam1 == 14)
			{
			}
			else if (VEHICLE::GET_VEHICLE_CLASS_FROM_NAME(iParam0) == __LIB_10__.func_195(iParam1))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_150(int iParam0, int iParam1, var uParam2)//Position - 0x134047
{
	switch (iParam0)
	{
		case 3:
			*uParam2 = (iParam1 - __LIB_1__.func_556(162, -1, 0));
			break;
		case 4:
			*uParam2 = (iParam1 - __LIB_1__.func_556(819, -1, 0));
			break;
		case 5:
			*uParam2 = (iParam1 - __LIB_1__.func_556(154, -1, 0));
			break;
		case 6:
			*uParam2 = (iParam1 - __LIB_1__.func_556(161, -1, 0));
			break;
		case 8:
			*uParam2 = (iParam1 - __LIB_1__.func_596(38, -1));
			break;
		case 10:
			*uParam2 = (iParam1 - __LIB_1__.func_596(58, -1));
			break;
		case 11:
			*uParam2 = (iParam1 - __LIB_1__.func_596(57, -1));
			break;
		case 9:
			*uParam2 = (iParam1 - __LIB_1__.func_596(51, -1));
			break;
		default:
			return 0;
	}
	if (*uParam2 > 0)
	{
		return 1;
	}
	return 0;
}

int func_151(char* sParam0, int iParam1, bool bParam2)//Position - 0x134BEB
{
	float fVar0;
	fVar0 = SYSTEM::TO_FLOAT(__LIB_20__.func_53(sParam0, iParam1, bParam2, 0, 0, 0, 0));
	if (bParam2)
	{
		fVar0 = (fVar0 * __LIB_10__.func_206(iParam1));
	}
	else
	{
		fVar0 = (fVar0 * __LIB_10__.func_205(iParam1));
		fVar0 = (fVar0 / 2f);
	}
	return SYSTEM::FLOOR((fVar0 * Global_295754.f_52));
}

int func_152(int iParam0, int iParam1)//Position - 0x13873F
{
	switch (iParam1)
	{
		case 138:
		case 139:
		case 140:
		case 141:
		case 142:
		case 143:
		case 144:
		case 145:
		case 146:
		case 147:
		case 166:
		case 167:
		case 168:
		case 169:
		case 137:
			if (__LIB_0__.func_784(__LIB_2__.func_370(PLAYER::PLAYER_ID(), 1), 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 148:
		case 149:
		case 150:
		case 151:
			if (__LIB_1__.func_596(38, -1) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 152:
		case 153:
		case 154:
			if (__LIB_1__.func_556(154, -1, 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 155:
		case 156:
		case 157:
		case 158:
			if (__LIB_1__.func_556(161, -1, 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 159:
		case 160:
		case 161:
			if (__LIB_1__.func_556(162, -1, 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 162:
		case 163:
		case 164:
		case 165:
			if (__LIB_1__.func_556(819, -1, 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 133:
			return 1;
			break;
		case 134:
			return 1;
			break;
		case 135:
			if (__LIB_1__.func_596(51, -1) >= 1 || __LIB_1__.func_596(52, -1) >= 1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 170:
			if (__LIB_0__.func_784(__LIB_2__.func_370(PLAYER::PLAYER_ID(), 1), 0) >= __LIB_10__.func_202(iParam0, iParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 136:
			if (__LIB_1__.func_596(58, -1) >= 1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
	}
	return 0;
}

int func_153(int iParam0, int iParam1)//Position - 0x13A01B
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("gauntlet2"):
		case joaat("blista3"):
		case joaat("stalion2"):
		case joaat("dominator2"):
		case joaat("buffalo3"):
		case joaat("massacro2"):
		case joaat("jester2"):
			if ((iParam1 == 5 || iParam1 == 2) || iParam1 == 4)
			{
				return 0;
			}
			break;
		case joaat("ratloader"):
			if (iParam1 == 2)
			{
				return 0;
			}
			break;
	}
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		switch (iParam1)
		{
			case 1:
				if (__LIB_20__.func_29())
				{
					return 1;
				}
				else if (__LIB_20__.func_57())
				{
					return 0;
				}
				break;
			case 2:
				if (__LIB_20__.func_57() && Local_124.f_443 == 98)
				{
					return 0;
				}
				break;
		}
		if ((__LIB_20__.func_29() || __LIB_4__.func_532()) || (__LIB_4__.func_531() && iParam1 != 1))
		{
			return 0;
		}
	}
	if (iParam1 == 6)
	{
		return 0;
	}
	if (iParam1 == 6)
	{
		if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			return 0;
		}
	}
	return 1;
}

void func_154(int iParam0, int iParam1, int iParam2)//Position - 0x13B7C2
{
	int iVar0;
	*iParam2 = -1;
	if ((iParam1 < 0 || iParam1 > 1) || iParam0 == __LIB_0__.func_160())
	{
		return;
	}
	iVar0 = __LIB_10__.func_233(iParam1);
	if (__LIB_5__.func_246(iParam0))
	{
		if (!__LIB_5__.func_255(1))
		{
			__LIB_1__.func_39(iVar0, 1, -1);
			*iParam2 = 1;
			return;
		}
	}
	if (__LIB_5__.func_245(iParam0))
	{
		if (!__LIB_5__.func_255(2))
		{
			__LIB_1__.func_39(iVar0, 2, -1);
			*iParam2 = 2;
			return;
		}
	}
}

void func_155(char* sParam0, bool bParam1)//Position - 0x13BD69
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_23150.f_5611 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_23150.f_79[Global_23150.f_5611 /*6*/]), sParam0, 24);
	Global_23150.f_5611++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 1;
	Global_23150.f_6134++;
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_8__.func_911();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_8__.func_910();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_156(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x13BEA5
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 5;
	Global_23150.f_6134++;
	fVar0 = 0f;
	if (bParam3)
	{
		fVar0 = __LIB_8__.func_911();
	}
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_8__.func_911();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_8__.func_910();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

int func_157(int iParam0)//Position - 0x13FA00
{
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("prototipo"):
			case joaat("vagner"):
			case joaat("rcbandito"):
			case joaat("impaler3"):
			case joaat("issi5"):
			case joaat("scarab2"):
			case joaat("dominator5"):
			case joaat("bruiser2"):
			case joaat("zr3802"):
			case joaat("monster4"):
			case joaat("cerberus2"):
			case joaat("brutus2"):
			case joaat("slamvan5"):
			case joaat("imperator2"):
			case joaat("asbo"):
				return 0;
			case joaat("locust"):
				if (__LIB_10__.func_102(iParam0, 5) >= 6)
				{
					return 0;
				}
				break;
			case joaat("postlude"):
				if (__LIB_10__.func_102(iParam0, 4) >= 12)
				{
					return 0;
				}
				break;
			default:
				if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(iParam0)))
				{
					return 0;
				}
				break;
			}
	}
	return 1;
}

void func_158(int iParam0, int iParam1)//Position - 0x140E12
{
	__LIB_18__.func_477(iParam0, "", 1, 1, 0, 0, 0);
	if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		__LIB_21__.func_66(13, 0);
	}
	else
	{
		__LIB_21__.func_66(12, 0);
	}
	__LIB_20__.func_23(iParam0);
	if (*iParam1 == -1)
	{
		*iParam1 = iParam0;
	}
}

int func_159(int iParam0, int iParam1, int iParam2)//Position - 0x1440B5
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (iParam2 == 85)
	{
		iVar0 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES0"));
		iVar1 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES1"));
		iVar2 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES2"));
		iVar3 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES3"));
		iVar4 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES4"));
		iVar5 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES5"));
		iVar6 = __LIB_0__.func_714(joaat("MPPLY_XMASLIVERIES6"));
		switch (iParam1)
		{
			case joaat("XMAS_CAMO01"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 0) && !BitTest(iVar0, 0))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 10) && !BitTest(iVar0, 10))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 20) && !BitTest(iVar0, 20))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 0) && !BitTest(iVar1, 0))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 10) && !BitTest(iVar1, 10))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 20) && !BitTest(iVar1, 20))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 0) && !BitTest(iVar2, 0))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 10) && !BitTest(iVar2, 10))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 20) && !BitTest(iVar2, 20))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 0) && !BitTest(iVar3, 0))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 10) && !BitTest(iVar3, 10))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 20) && !BitTest(iVar3, 20))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 0) && !BitTest(iVar4, 0))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 10) && !BitTest(iVar4, 10))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 20) && !BitTest(iVar4, 20))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 0) && !BitTest(iVar5, 0))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 10) && !BitTest(iVar5, 10))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 20) && !BitTest(iVar5, 20))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 0) && !BitTest(iVar6, 0))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 10) && !BitTest(iVar6, 10))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 20) && !BitTest(iVar6, 20))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO02"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 1) && !BitTest(iVar0, 1))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 11) && !BitTest(iVar0, 11))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 21) && !BitTest(iVar0, 21))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 1) && !BitTest(iVar1, 1))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 11) && !BitTest(iVar1, 11))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 21) && !BitTest(iVar1, 21))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 1) && !BitTest(iVar2, 1))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 11) && !BitTest(iVar2, 11))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 21) && !BitTest(iVar2, 21))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 1) && !BitTest(iVar3, 1))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 11) && !BitTest(iVar3, 11))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 21) && !BitTest(iVar3, 21))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 1) && !BitTest(iVar4, 1))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 11) && !BitTest(iVar4, 11))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 21) && !BitTest(iVar4, 21))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 1) && !BitTest(iVar5, 1))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 11) && !BitTest(iVar5, 11))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 21) && !BitTest(iVar5, 21))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 1) && !BitTest(iVar6, 1))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 11) && !BitTest(iVar6, 11))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 21) && !BitTest(iVar6, 21))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO03"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 2) && !BitTest(iVar0, 2))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 12) && !BitTest(iVar0, 12))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 22) && !BitTest(iVar0, 22))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 2) && !BitTest(iVar1, 2))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 12) && !BitTest(iVar1, 12))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 22) && !BitTest(iVar1, 22))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 2) && !BitTest(iVar2, 2))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 12) && !BitTest(iVar2, 12))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 22) && !BitTest(iVar2, 22))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 2) && !BitTest(iVar3, 2))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 12) && !BitTest(iVar3, 12))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 22) && !BitTest(iVar3, 22))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 2) && !BitTest(iVar4, 2))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 12) && !BitTest(iVar4, 12))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 22) && !BitTest(iVar4, 22))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 2) && !BitTest(iVar5, 2))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 12) && !BitTest(iVar5, 12))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 22) && !BitTest(iVar5, 22))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 2) && !BitTest(iVar6, 2))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 12) && !BitTest(iVar6, 12))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 22) && !BitTest(iVar6, 22))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO04"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 3) && !BitTest(iVar0, 3))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 13) && !BitTest(iVar0, 13))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 23) && !BitTest(iVar0, 23))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 3) && !BitTest(iVar1, 3))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 13) && !BitTest(iVar1, 13))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 23) && !BitTest(iVar1, 23))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 3) && !BitTest(iVar2, 3))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 13) && !BitTest(iVar2, 13))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 23) && !BitTest(iVar2, 23))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 3) && !BitTest(iVar3, 3))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 13) && !BitTest(iVar3, 13))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 23) && !BitTest(iVar3, 23))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 3) && !BitTest(iVar4, 3))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 13) && !BitTest(iVar4, 13))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 23) && !BitTest(iVar4, 23))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 3) && !BitTest(iVar5, 3))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 13) && !BitTest(iVar5, 13))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 23) && !BitTest(iVar5, 23))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 3) && !BitTest(iVar6, 3))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 13) && !BitTest(iVar6, 13))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 23) && !BitTest(iVar6, 23))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO05"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 4) && !BitTest(iVar0, 4))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 14) && !BitTest(iVar0, 14))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 24) && !BitTest(iVar0, 24))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 4) && !BitTest(iVar1, 4))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 14) && !BitTest(iVar1, 14))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 24) && !BitTest(iVar1, 24))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 4) && !BitTest(iVar2, 4))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 14) && !BitTest(iVar2, 14))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 24) && !BitTest(iVar2, 24))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 4) && !BitTest(iVar3, 4))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 14) && !BitTest(iVar3, 14))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 24) && !BitTest(iVar3, 24))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 4) && !BitTest(iVar4, 4))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 14) && !BitTest(iVar4, 14))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 24) && !BitTest(iVar4, 24))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 4) && !BitTest(iVar5, 4))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 14) && !BitTest(iVar5, 14))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 24) && !BitTest(iVar5, 24))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 4) && !BitTest(iVar6, 4))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 14) && !BitTest(iVar6, 14))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 24) && !BitTest(iVar6, 24))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO06"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 5) && !BitTest(iVar0, 5))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 15) && !BitTest(iVar0, 15))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 25) && !BitTest(iVar0, 25))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 5) && !BitTest(iVar1, 5))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 15) && !BitTest(iVar1, 15))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 25) && !BitTest(iVar1, 25))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 5) && !BitTest(iVar2, 5))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 15) && !BitTest(iVar2, 15))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 25) && !BitTest(iVar2, 25))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 5) && !BitTest(iVar3, 5))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 15) && !BitTest(iVar3, 15))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 25) && !BitTest(iVar3, 25))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 5) && !BitTest(iVar4, 5))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 15) && !BitTest(iVar4, 15))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 25) && !BitTest(iVar4, 25))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 5) && !BitTest(iVar5, 5))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 15) && !BitTest(iVar5, 15))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 25) && !BitTest(iVar5, 25))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 5) && !BitTest(iVar6, 5))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 15) && !BitTest(iVar6, 15))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 25) && !BitTest(iVar6, 25))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO07"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 6) && !BitTest(iVar0, 6))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 16) && !BitTest(iVar0, 16))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 26) && !BitTest(iVar0, 26))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 6) && !BitTest(iVar1, 6))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 16) && !BitTest(iVar1, 16))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 26) && !BitTest(iVar1, 26))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 6) && !BitTest(iVar2, 6))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 16) && !BitTest(iVar2, 16))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 26) && !BitTest(iVar2, 26))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 6) && !BitTest(iVar3, 6))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 16) && !BitTest(iVar3, 16))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 26) && !BitTest(iVar3, 26))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 6) && !BitTest(iVar4, 6))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 16) && !BitTest(iVar4, 16))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 26) && !BitTest(iVar4, 26))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 6) && !BitTest(iVar5, 6))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 16) && !BitTest(iVar5, 16))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 26) && !BitTest(iVar5, 26))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 6) && !BitTest(iVar6, 6))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 16) && !BitTest(iVar6, 16))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 26) && !BitTest(iVar6, 26))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO08"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 7) && !BitTest(iVar0, 7))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 17) && !BitTest(iVar0, 17))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 27) && !BitTest(iVar0, 27))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 7) && !BitTest(iVar1, 7))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 17) && !BitTest(iVar1, 17))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 27) && !BitTest(iVar1, 27))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 7) && !BitTest(iVar2, 7))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 17) && !BitTest(iVar2, 17))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 27) && !BitTest(iVar2, 27))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 7) && !BitTest(iVar3, 7))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 17) && !BitTest(iVar3, 17))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 27) && !BitTest(iVar3, 27))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 7) && !BitTest(iVar4, 7))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 17) && !BitTest(iVar4, 17))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 27) && !BitTest(iVar4, 27))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 7) && !BitTest(iVar5, 7))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 17) && !BitTest(iVar5, 17))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 27) && !BitTest(iVar5, 27))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 7) && !BitTest(iVar6, 7))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 17) && !BitTest(iVar6, 17))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 27) && !BitTest(iVar6, 27))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO09"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 8) && !BitTest(iVar0, 8))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 18) && !BitTest(iVar0, 18))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 28) && !BitTest(iVar0, 28))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 8) && !BitTest(iVar1, 8))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 18) && !BitTest(iVar1, 18))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 28) && !BitTest(iVar1, 28))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 8) && !BitTest(iVar2, 8))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 18) && !BitTest(iVar2, 18))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 28) && !BitTest(iVar2, 28))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 8) && !BitTest(iVar3, 8))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 18) && !BitTest(iVar3, 18))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 28) && !BitTest(iVar3, 28))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 8) && !BitTest(iVar4, 8))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 18) && !BitTest(iVar4, 18))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 28) && !BitTest(iVar4, 28))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 8) && !BitTest(iVar5, 8))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 18) && !BitTest(iVar5, 18))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 28) && !BitTest(iVar5, 28))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 8) && !BitTest(iVar6, 8))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 18) && !BitTest(iVar6, 18))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 28) && !BitTest(iVar6, 28))
						{
							return 1;
						}
						break;
				}
				break;
			case joaat("XMAS_CAMO10"):
				switch (iParam0)
				{
					case joaat("thruster"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 9) && !BitTest(iVar0, 9))
						{
							return 1;
						}
						break;
					case joaat("molotok"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 19) && !BitTest(iVar0, 19))
						{
							return 1;
						}
						break;
					case joaat("khanjali"):
						if (!BitTest(Global_262145.f_23086 /* Tunable: VEHXMAS_CAMO6 */, 29) && !BitTest(iVar0, 29))
						{
							return 1;
						}
						break;
					case joaat("streiter"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 9) && !BitTest(iVar1, 9))
						{
							return 1;
						}
						break;
					case joaat("riot2"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 19) && !BitTest(iVar1, 19))
						{
							return 1;
						}
						break;
					case joaat("comet4"):
						if (!BitTest(Global_262145.f_23087 /* Tunable: VEHXMAS_CAMO7 */, 29) && !BitTest(iVar1, 29))
						{
							return 1;
						}
						break;
					case joaat("chernobog"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 9) && !BitTest(iVar2, 9))
						{
							return 1;
						}
						break;
					case joaat("barrage"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 19) && !BitTest(iVar2, 19))
						{
							return 1;
						}
						break;
					case joaat("avenger"):
						if (!BitTest(Global_262145.f_23088 /* Tunable: VEHXMAS_CAMO8 */, 29) && !BitTest(iVar2, 29))
						{
							return 1;
						}
						break;
					case joaat("trailersmall2"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 9) && !BitTest(iVar3, 9))
						{
							return 1;
						}
						break;
					case joaat("technical3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 19) && !BitTest(iVar3, 19))
						{
							return 1;
						}
						break;
					case joaat("tampa3"):
						if (!BitTest(Global_262145.f_23089 /* Tunable: VEHXMAS_CAMO9 */, 29) && !BitTest(iVar3, 29))
						{
							return 1;
						}
						break;
					case joaat("oppressor"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 9) && !BitTest(iVar4, 9))
						{
							return 1;
						}
						break;
					case joaat("nightshark"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 19) && !BitTest(iVar4, 19))
						{
							return 1;
						}
						break;
					case joaat("insurgent3"):
						if (!BitTest(Global_262145.f_23090 /* Tunable: VEHXMAS_CAMO10 */, 29) && !BitTest(iVar4, 29))
						{
							return 1;
						}
						break;
					case joaat("halftrack"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 9) && !BitTest(iVar5, 9))
						{
							return 1;
						}
						break;
					case joaat("dune3"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 19) && !BitTest(iVar5, 19))
						{
							return 1;
						}
						break;
					case joaat("ardent"):
						if (!BitTest(Global_262145.f_23091 /* Tunable: VEHXMAS_CAMO11 */, 29) && !BitTest(iVar5, 29))
						{
							return 1;
						}
						break;
					case joaat("apc"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 9) && !BitTest(iVar6, 9))
						{
							return 1;
						}
						break;
					case joaat("akula"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 19) && !BitTest(iVar6, 19))
						{
							return 1;
						}
						break;
					case joaat("trailerlarge"):
						if (!BitTest(Global_262145.f_23092 /* Tunable: VEHXMAS_CAMO12 */, 29) && !BitTest(iVar6, 29))
						{
							return 1;
						}
						break;
				}
				break;
			}
	}
	return __LIB_20__.func_65(iParam0, iParam1, iParam2);
}

int func_160(int iParam0)//Position - 0x14B1D2
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	iVar0 = __LIB_1__.func_556(161, -1, 0);
	iVar1 = __LIB_0__.func_784(__LIB_2__.func_370(PLAYER::PLAYER_ID(), 1), 0);
	iVar2 = __LIB_1__.func_556(162, -1, 0);
	iVar3 = __LIB_1__.func_556(154, -1, 0);
	iVar4 = __LIB_1__.func_556(819, -1, 0);
	iVar5 = __LIB_1__.func_596(38, -1);
	switch (iParam0)
	{
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 37:
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 36:
			if (iVar1 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 31:
		case 32:
		case 33:
			return 1;
			break;
		case 53:
		case 54:
		case 55:
		case 56:
			if (iVar5 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 57:
		case 58:
		case 59:
			if (iVar3 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 60:
		case 61:
		case 62:
		case 63:
			if (iVar0 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 64:
		case 65:
		case 66:
			if (iVar2 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 67:
		case 68:
		case 69:
		case 70:
			if (iVar4 >= __LIB_10__.func_190(iParam0))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 34:
			if (__LIB_1__.func_596(51, -1) >= 1 || __LIB_1__.func_596(52, -1) >= 1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case 35:
			if (__LIB_1__.func_596(58, -1) >= 1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
	}
	return 0;
}

int func_161(int iParam0, bool bParam1, var uParam2)//Position - 0x150B3C
{
	int iVar0;
	bool bVar1;
	*uParam2 = 0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if (!STREAMING::IS_MODEL_A_VEHICLE(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if ((!__LIB_6__.func_818(iVar0, bParam1, uParam2) && !__LIB_0__.func_280(PLAYER::PLAYER_ID())) && !func_2227(iParam0))
	{
		return 0;
	}
	if (__LIB_0__.func_280(PLAYER::PLAYER_ID()))
	{
		if (__LIB_0__.func_109(iVar0))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	bVar1 = false;
	if (__LIB_0__.func_341(PLAYER::PLAYER_ID()) && (VEHICLE::IS_THIS_MODEL_A_HELI(iVar0) || VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0)))
	{
		bVar1 = true;
	}
	if (((VEHICLE::IS_BIG_VEHICLE(iParam0) && !__LIB_6__.func_817(iParam0)) && !bVar1) && !(__LIB_0__.func_266(ENTITY::GET_ENTITY_MODEL(iParam0)) && __LIB_1__.func_105(PLAYER::PLAYER_ID())))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
				*uParam2 = 16;
				break;
			default:
				*uParam2 = 2;
				break;
		}
		return 0;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if ((__LIB_0__.func_108(iParam0) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("sentinel2")) && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("issi2"))
		{
			*uParam2 = 2;
			return 0;
		}
	}
	return 1;
}

void func_162(int iParam0, int iParam1)//Position - 0x1511CF
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_20__.func_69(iParam0))
	{
		return;
	}
	if ((iParam1 != 0 && iParam1 != 1) && iParam1 != 2)
	{
		iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			iVar0 = VEHICLE::GET_LAST_PED_IN_VEHICLE_SEAT(iParam0, -1);
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !PED::IS_PED_INJURED(iVar0))
		{
			if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Zero"))
			{
				iParam1 = 0;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_One"))
			{
				iParam1 = 1;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Two"))
			{
				iParam1 = 2;
			}
		}
		if ((iParam1 != 0 && iParam1 != 1) && iParam1 != 2)
		{
			iParam1 = Global_113386.f_2363.f_539.f_4321;
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		iVar2 = 0;
		while (iVar2 < 2)
		{
			if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66)
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
				{
					if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
					{
						Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66 = 0;
						Global_113386.f_32749.f_5592[iVar1] = iVar2;
					}
				}
			}
			iVar2++;
		}
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
			{
				if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
				{
					Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66 = 0;
				}
			}
		}
		iVar1++;
	}
	Global_113386.f_32749.f_5590 = iParam1;
	Global_78042 = iParam0;
	Global_113386.f_32749.f_5588 = 1;
	__LIB_6__.func_760(iParam0, &(Global_113386.f_32749.f_5510));
}

int func_163(int iParam0)//Position - 0x1517F1
{
	int iVar0;
	int iVar1;
	if (PED::IS_PED_INJURED(iParam0))
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = __LIB_20__.func_509(iParam0);
	if (!__LIB_0__.func_317(iVar0))
	{
		return 0;
	}
	iVar1 = 0;
	while (iVar1 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar1]))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_97772[iVar1], false))
			{
				if (PED::IS_PED_IN_VEHICLE(iParam0, Global_97772[iVar1], false))
				{
					return 1;
				}
			}
		}
		iVar1++;
	}
	return 0;
}

int func_164()//Position - 0x15338C
{
	if (PLAYER::PLAYER_ID() == __LIB_0__.func_160())
	{
		return 0;
	}
	if (Local_124.f_0 == 45 && __LIB_1__.func_155(PLAYER::PLAYER_ID(), 0, 0))
	{
		return 1;
	}
	if (__LIB_10__.func_531())
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_10__.func_473())
	{
		return 1;
	}
	if (__LIB_10__.func_472())
	{
		return 1;
	}
	if (__LIB_10__.func_471())
	{
		return 1;
	}
	if (__LIB_10__.func_553())
	{
		return 1;
	}
	if (__LIB_10__.func_477() && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 == PLAYER::PLAYER_ID())
		{
			return 1;
		}
	}
	if (__LIB_10__.func_395())
	{
		return 1;
	}
	return 0;
}

void func_165(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x156B88
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	if (bParam3)
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 9;
	}
	else
	{
		Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 7;
	}
	Global_23150.f_6134++;
	fVar0 = __LIB_8__.func_911();
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_8__.func_911();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_8__.func_910();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_166(int iParam0, int iParam1, int iParam2)//Position - 0x15D1E0
{
	if (__LIB_10__.func_735(iParam0, iParam1, iParam2) && __LIB_9__.func_526(__LIB_10__.func_25(iParam0, iParam1, iParam2)))
	{
		__LIB_20__.func_76(__LIB_10__.func_25(iParam0, iParam1, iParam2));
	}
}

void func_167()//Position - 0x160F5B
{
	int iVar0;
	int iVar1;
	if (Local_124.f_116.f_1 == -1)
	{
		return;
	}
	__LIB_10__.func_121(1);
	if (Local_124.f_468[Local_124.f_116.f_1] == 0)
	{
		__LIB_10__.func_121(0);
	}
	switch (Local_124.f_116.f_1)
	{
		case 10:
			if (Local_470.f_59[0] == 0 && __LIB_20__.func_80(VEHICLE::GET_VEHICLE_WHEEL_TYPE(Local_124.f_406), (Local_470.f_9[23] - 1)) == 0)
			{
				__LIB_10__.func_121(0);
			}
			break;
		case 11:
			if (Local_470.f_59[0] == 1)
			{
				__LIB_10__.func_121(0);
			}
			break;
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
			iVar0 = __LIB_20__.func_80(VEHICLE::GET_VEHICLE_WHEEL_TYPE(Local_124.f_406), (Local_470.f_9[23] - 1));
			if (iVar0 == (Local_124.f_116.f_1 - 12) + 1)
			{
				__LIB_10__.func_121(0);
			}
			break;
		case 2:
			if (!VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(Local_124.f_406))
			{
				__LIB_10__.func_121(0);
			}
			break;
		case 1:
			if (VEHICLE::GET_DRIFT_TYRES_SET(Local_124.f_406))
			{
				__LIB_10__.func_121(0);
			}
			break;
		case 0:
			if (!VEHICLE::GET_DRIFT_TYRES_SET(Local_124.f_406) && VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(Local_124.f_406))
			{
				__LIB_10__.func_121(0);
			}
			break;
		default:
			iVar1 = __LIB_10__.func_286(Local_124.f_116.f_1);
			if (iVar1 != 0)
			{
				if (__LIB_20__.func_79() == iVar1)
				{
					__LIB_10__.func_121(0);
				}
			}
			break;
	}
	iLocal_426 = 1;
}

int func_168(int iParam0)//Position - 0x164C1A
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_1__.func_556(819, -1, 0);
	iVar1 = __LIB_10__.func_194(iParam0);
	if (iVar1 == -1)
	{
		return 1;
	}
	else if (iVar0 >= iVar1)
	{
		return 1;
	}
	return 0;
}

void func_169()//Position - 0x1686DE
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (Global_2815059.f_5170)
	{
		return;
	}
	iVar0 = __LIB_0__.func_714(joaat("MPPLY_THRESHOLD_RESET"));
	iVar0 = (iVar0 + -1);
	iVar1 = __LIB_1__.func_443(-1);
	iVar2 = __LIB_1__.func_556(2443, -1, 0);
	if (iVar0 > -1)
	{
		if (iVar1 > 0)
		{
			iVar0 = (iVar0 - 1000);
		}
		if ((iVar0 > -1 && iVar0 < 1000) && !iVar0 == iVar2)
		{
			__LIB_1__.func_597(2443, iVar0, -1, 1, 0);
		}
	}
}

void func_170(int iParam0)//Position - 0x16AE88
{
	__LIB_18__.func_477(iParam0, "", 1, 1, 0, 0, 0);
	if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		__LIB_21__.func_66(13, 0);
	}
	else
	{
		__LIB_21__.func_66(12, 0);
	}
	__LIB_20__.func_23(iParam0);
}

void func_171(var uParam0)//Position - 0x17C447
{
	__LIB_20__.func_87(Local_470.f_5, Local_470.f_6, Local_470.f_7, Local_470.f_8, uParam0);
}

int func_172(int iParam0)//Position - 0x17C5F6
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("swift"):
			case joaat("swift2"):
				return 1;
				break;
			}
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_173(int iParam0)//Position - 0x17C634
{
	if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (((Local_124.f_0 == 44 || __LIB_10__.func_554()) || __LIB_10__.func_553()) && __LIB_0__.func_174(ENTITY::GET_ENTITY_MODEL(iParam0), 0))
		{
			return 0;
		}
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("baller3"):
			case joaat("baller4"):
			case joaat("baller5"):
			case joaat("baller6"):
			case joaat("cog55"):
			case joaat("cog552"):
			case joaat("cognoscenti"):
			case joaat("cognoscenti2"):
			case joaat("schafter3"):
			case joaat("schafter4"):
			case joaat("schafter5"):
			case joaat("schafter6"):
			case joaat("prototipo"):
			case joaat("windsor2"):
			case joaat("youga2"):
			case joaat("nero"):
			case joaat("gp1"):
			case joaat("infernus2"):
			case joaat("turismo2"):
			case joaat("cheetah2"):
			case joaat("vagner"):
			case joaat("xa21"):
			case joaat("rapidgt3"):
			case joaat("visione"):
			case joaat("cyclone"):
			case joaat("deluxo"):
			case joaat("khanjali"):
			case joaat("z190"):
			case joaat("viseris"):
			case joaat("revolter"):
			case joaat("yosemite"):
			case joaat("gb200"):
			case joaat("fagaloa"):
			case joaat("issi3"):
			case joaat("flashgt"):
			case joaat("entity2"):
			case joaat("cheburek"):
			case joaat("taipan"):
			case joaat("tezeract"):
			case joaat("jester3"):
			case joaat("swinger"):
			case joaat("patriot2"):
			case joaat("stafford"):
			case joaat("schlagen"):
			case joaat("toros"):
			case joaat("deviant"):
			case joaat("deveste"):
			case joaat("clique"):
			case joaat("impaler"):
			case joaat("italigto"):
			case joaat("rcbandito"):
			case joaat("imperator3"):
			case joaat("gauntlet3"):
			case joaat("neo"):
			case joaat("gauntlet4"):
			case joaat("jugular"):
			case joaat("issi7"):
			case joaat("krieger"):
			case joaat("emerus"):
			case joaat("paragon"):
			case joaat("paragon2"):
			case joaat("asbo"):
			case joaat("imorgon"):
			case joaat("rebla"):
			case joaat("vstr"):
			case joaat("sugoi"):
			case joaat("vagrant"):
			case joaat("furia"):
			case joaat("coquette4"):
			case joaat("penumbra2"):
			case joaat("italirsx"):
			case joaat("weevil"):
			case joaat("toreador"):
			case joaat("veto"):
			case joaat("veto2"):
			case joaat("deity"):
			case joaat("comet7"):
			case joaat("zeno"):
			case joaat("champion"):
			case joaat("baller7"):
			case joaat("buffalo4"):
			case joaat("corsita"):
			case joaat("vigero2"):
			case joaat("rhinehart"):
			case joaat("kanjosj"):
			case joaat("sentinel4"):
			case joaat("weevil2"):
			case joaat("greenwood"):
			case joaat("postlude"):
			case joaat("sm722"):
			case joaat("tenf"):
			case joaat("tenf2"):
			case joaat("torero2"):
				return 0;
			case joaat("locust"):
				if ((__LIB_10__.func_102(iParam0, 5) >= 3 && __LIB_10__.func_102(iParam0, 5) < 6) || __LIB_10__.func_102(iParam0, 5) >= 9)
				{
					return 0;
				}
				break;
			case joaat("picador"):
				if (__LIB_10__.func_102(iParam0, 5) == 2)
				{
					return 0;
				}
				break;
			default:
				if (__LIB_1__.func_932(ENTITY::GET_ENTITY_MODEL(iParam0)))
				{
					return 0;
				}
				break;
			}
	}
	return 1;
}

void func_174()//Position - 0x18273F
{
	if (__LIB_1__.func_323(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		if (((((((Local_470.f_9[5] >= 1 && Local_470.f_9[42] >= 1) && Local_470.f_9[43] >= 1) && (Local_470.f_9[44] >= 1 || Local_470.f_9[40] >= 1)) && (Local_470.f_9[45] >= 1 || Local_470.f_9[13] >= 1)) && Local_470.f_9[9] >= 1) && (Local_470.f_9[10] >= 1 || Local_470.f_9[6] >= 1)) && Local_470.f_9[4] >= 1)
		{
			__LIB_1__.func_602(52, 1, -1);
			__LIB_20__.func_88();
		}
	}
}

void func_175()//Position - 0x182DCB
{
	if (!Global_262145.f_19174 /* Tunable: 270252597 */)
	{
		if (Local_124.f_116.f_1 == 1)
		{
			if (__LIB_9__.func_935(PLAYER::PLAYER_ID()))
			{
				if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(NETWORK::VEH_TO_NET(Local_124.f_406)))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_406))
					{
						if (NETWORK::NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(Local_124.f_406))
						{
							NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::VEH_TO_NET(Local_124.f_406), true);
						}
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_406);
					}
				}
			}
			PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 309, false);
			TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
			__LIB_10__.func_468(8);
			__LIB_9__.func_952(1);
		}
		else if (Local_124.f_116.f_1 == 0)
		{
			__LIB_20__.func_91();
			__LIB_7__.func_261(Local_124.f_0, 21, 1);
			Local_124.f_116.f_5 = 0;
		}
		else if (Local_124.f_116.f_1 == 2 && !Global_262145.f_19173 /* Tunable: -475525840 */)
		{
			__LIB_20__.func_91();
			__LIB_9__.func_939(1);
		}
	}
	else if (Local_124.f_116.f_1 == 0)
	{
		__LIB_20__.func_91();
		__LIB_7__.func_261(Local_124.f_0, 21, 1);
		Local_124.f_116.f_5 = 0;
	}
	else if (Local_124.f_116.f_1 == 1 && !Global_262145.f_19173 /* Tunable: -475525840 */)
	{
		__LIB_20__.func_91();
		__LIB_9__.func_939(1);
	}
}

void func_176(bool bParam0)//Position - 0x184495
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(1194, -1, 0);
	if (bParam0)
	{
		MISC::SET_BIT(&iVar0, 16);
		MISC::SET_BIT(&(Global_2815059.f_1792), 11);
	}
	else
	{
		MISC::CLEAR_BIT(&iVar0, 16);
		MISC::CLEAR_BIT(&(Global_2815059.f_1792), 11);
	}
	__LIB_1__.func_597(1194, iVar0, -1, 1, 0);
}

int func_177()//Position - 0x1844F7
{
	int iVar0;
	if (!BitTest(Global_2815059.f_1792, 11))
	{
		iVar0 = __LIB_1__.func_556(1194, -1, 0);
		if (!BitTest(iVar0, 16))
		{
			return 0;
		}
	}
	return 1;
}

void func_178()//Position - 0x185E68
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "ARENA_MOD_EX1" /* GXT: Exit the Workshop */, 0, 1, 0, 0, 0);
	if (!BitTest(Global_103905, 0))
	{
		if (__LIB_6__.func_25() == 0)
		{
			__LIB_10__.func_222(1, 1);
			__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
		}
		__LIB_10__.func_222(2, 1);
		__LIB_18__.func_477(2, "ARENA_MOD_EX3" /* GXT: Exit the Arena */, 0, 1, 0, 0, 0);
	}
}

void func_179()//Position - 0x185EC1
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "CHR17_BASE_EX1" /* GXT: Exit the Vehicle Workshop */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(1, 1);
	__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(2, 1);
	__LIB_18__.func_477(2, "HACKER_HUB_EX3" /* GXT: Exit the Nerve Center */, 0, 1, 0, 0, 0);
}

void func_180()//Position - 0x185F08
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "CHR17_BASE_EX1" /* GXT: Exit the Vehicle Workshop */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(1, 1);
	__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(2, 1);
	__LIB_18__.func_477(2, "BATTLE_HUB_EX3" /* GXT: Exit the Garage */, 0, 1, 0, 0, 0);
}

void func_181()//Position - 0x185F4F
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "CHR17_AVENG_EX1" /* GXT: Exit the Avenger Vehicle Workshop */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(1, 1);
	__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(2, 1);
	__LIB_18__.func_477(2, "CHR17_AVENG_EX3" /* GXT: Exit the Avenger */, 0, 1, 0, 0, 0);
}

void func_182()//Position - 0x185F96
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "CHR17_BASE_EX1" /* GXT: Exit the Vehicle Workshop */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(1, 1);
	__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(2, 1);
	__LIB_18__.func_477(2, "CHR17_BASE_EX3" /* GXT: Exit the Facility */, 0, 1, 0, 0, 0);
}

void func_183()//Position - 0x185FDD
{
	__LIB_10__.func_222(0, 1);
	__LIB_18__.func_477(0, "SMUG_HANGAR_EX1" /* GXT: Exit the Aircraft Workshop */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(1, 1);
	__LIB_18__.func_477(1, "SMUG_HANGAR_EX2" /* GXT: Exit the Aircraft */, 0, 1, 0, 0, 0);
	__LIB_10__.func_222(2, 1);
	__LIB_18__.func_477(2, "SMUG_HANGAR_EX3" /* GXT: Exit the Hangar */, 0, 1, 0, 0, 0);
}

void func_184()//Position - 0x186024
{
	if (__LIB_1__.func_251(PLAYER::PLAYER_ID()))
	{
		__LIB_10__.func_222(0, 1);
		__LIB_18__.func_477(0, "GR_TRUMOD_EX1" /* GXT: Exit the Mobile Operations Center */, 0, 1, 0, 0, 0);
		if (!Global_262145.f_21130 /* Tunable: 2020787663 */)
		{
			__LIB_10__.func_222(1, 1);
			__LIB_18__.func_477(1, "GR_TRUMOD_EX2" /* GXT: Exit the Bunker */, 0, 1, 0, 0, 0);
			__LIB_10__.func_222(2, 1);
			__LIB_18__.func_477(2, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
		}
	}
	else
	{
		__LIB_10__.func_222(0, 1);
		__LIB_18__.func_477(0, "GR_TRUMOD_EX1" /* GXT: Exit the Mobile Operations Center */, 0, 1, 0, 0, 0);
		if (!Global_262145.f_21130 /* Tunable: 2020787663 */)
		{
			__LIB_10__.func_222(1, 1);
			__LIB_18__.func_477(1, "GR_TRUMOD_EX3" /* GXT: Exit the Vehicle */, 0, 1, 0, 0, 0);
		}
	}
}

int func_185(int* iParam0, bool bParam1)//Position - 0x18C7DA
{
	int iVar0;
	int iVar1;
	bool bVar2;
	iVar0 = 2;
	if (Global_2103068.f_2 + 5 < MISC::GET_FRAME_COUNT() && Global_2103068.f_2 > 0)
	{
		__LIB_0__.func_579(&Global_2103068);
		__LIB_0__.func_579(&(Global_2103068.f_49));
		*iParam0 = 0;
		Global_2103068.f_2 = 0;
		__LIB_1__.func_416(0);
	}
	Global_2103068.f_2 = MISC::GET_FRAME_COUNT();
	iVar1 = -1;
	if (__LIB_0__.func_52())
	{
		if (NETWORK::NETWORK_IS_NP_AVAILABLE() == 0)
		{
			iVar1 = NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON();
		}
	}
	if ((__LIB_0__.func_52() && (((iVar1 == 4 || iVar1 == 2) || iVar1 == 1) || iVar1 == 5)) || (!__LIB_7__.func_45() && NETWORK::NETWORK_IS_SIGNED_ONLINE()))
	{
		if (NETWORK::NETWORK_IS_REFRESHING_ROS_CREDENTIALS())
		{
			__LIB_7__.func_792(&(Global_2103068.f_3), __LIB_4__.func_73(&(Global_2103068.f_3)));
			if (!BitTest(*iParam0, 4))
			{
				MISC::SET_BIT(iParam0, 4);
				StringCopy(&(Global_2103068.f_3.f_1), "", 64);
				__LIB_7__.func_793(&(Global_2103068.f_3), 0);
			}
		}
		else
		{
			if (iVar1 == 4)
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "HUD_PROFILECHNG" /* GXT: Please change to a profile with correct permissions. */, iVar0, 0, false, -1, 0, 0, true, 0);
			}
			else if (iVar1 == 2)
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "HUD_GAMEUPD_G" /* GXT: The game requires an update to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
			}
			else if (iVar1 == 1)
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "HUD_SYSTUPD_G" /* GXT: The system requires an update to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
			}
			else if (iVar1 == 5)
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NO_INT" /* GXT: No internet connection detected, establish a connection to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
			}
			else if (!__LIB_7__.func_45())
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NO_ROS" /* GXT: The Rockstar game services are unavailable right now. Please try again later. */, iVar0, 0, false, -1, 0, 0, true, 0);
			}
			if (!BitTest(*iParam0, 0))
			{
				if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
				{
					MISC::SET_BIT(iParam0, 0);
				}
			}
			else if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
			{
				__LIB_0__.func_579(&(Global_2103068.f_49));
				__LIB_0__.func_579(&Global_2103068);
				*iParam0 = 0;
				Global_2103068.f_2 = 0;
				__LIB_1__.func_416(0);
				return 1;
			}
		}
	}
	else
	{
		__LIB_7__.func_792(&(Global_2103068.f_3), __LIB_4__.func_73(&(Global_2103068.f_3)));
		if ((__LIB_0__.func_649(&(Global_2103068.f_49)) && !__LIB_2__.func_47(&(Global_2103068.f_49), 2000, 1)) && !NETWORK::NETWORK_IS_SIGNED_ONLINE())
		{
			MISC::SET_BIT(iParam0, 3);
			StringCopy(&(Global_2103068.f_3.f_1), "", 64);
			__LIB_7__.func_793(&(Global_2103068.f_3), 0);
		}
		else if (!BitTest(*iParam0, 3))
		{
			if (!BitTest(*iParam0, 1))
			{
				PLAYER::DISPLAY_SYSTEM_SIGNIN_UI(false);
				MISC::SET_BIT(iParam0, 1);
				StringCopy(&(Global_2103068.f_3.f_1), "", 64);
				__LIB_7__.func_793(&(Global_2103068.f_3), 0);
			}
		}
		if (__LIB_0__.func_649(&Global_2103068))
		{
			if (!__LIB_2__.func_47(&Global_2103068, 4000, 1))
			{
				bVar2 = true;
			}
		}
		if (!bVar2)
		{
			if (bParam1)
			{
				if (!NETWORK::NETWORK_IS_SIGNED_ONLINE())
				{
					if (NETWORK::NETWORK_IS_CABLE_CONNECTED())
					{
						HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "STORE_NOT_ONL" /* GXT: Sign in to the Rockstar Games Social Club to access the Store. */, iVar0, 0, false, -1, 0, 0, true, 0);
					}
					else
					{
						HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NO_INT" /* GXT: No internet connection detected, establish a connection to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
					}
					if (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED())
					{
						if (!BitTest(*iParam0, 0))
						{
							if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
							{
								MISC::SET_BIT(iParam0, 0);
							}
						}
						else if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
						{
							__LIB_0__.func_579(&Global_2103068);
							*iParam0 = 0;
							Global_2103068.f_2 = 0;
							__LIB_1__.func_416(0);
							return 1;
						}
					}
				}
				else
				{
					__LIB_0__.func_579(&Global_2103068);
					*iParam0 = 0;
					Global_2103068.f_2 = 0;
					__LIB_1__.func_416(0);
					return 1;
				}
			}
			else if (BitTest(*iParam0, 3))
			{
				if (NETWORK::NETWORK_IS_CABLE_CONNECTED())
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_SIGN_OUT", iVar0, 0, false, -1, 0, 0, true, 0);
				}
				else
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NO_INT" /* GXT: No internet connection detected, establish a connection to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
				}
				if (!BitTest(*iParam0, 0))
				{
					if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
					{
						MISC::SET_BIT(iParam0, 0);
					}
				}
				else if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
				{
					__LIB_0__.func_579(&(Global_2103068.f_49));
					__LIB_0__.func_579(&Global_2103068);
					*iParam0 = 0;
					Global_2103068.f_2 = 0;
					__LIB_1__.func_416(0);
					return 1;
				}
			}
			else
			{
				if (NETWORK::NETWORK_IS_CABLE_CONNECTED())
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NOT_ONL" /* GXT: Sign in to view leaderboard data. */, iVar0, 0, false, -1, 0, 0, true, 0);
				}
				else
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("PM_INF_QMFT" /* GXT: Alert */, "SCLB_NO_INT" /* GXT: No internet connection detected, establish a connection to access this feature. */, iVar0, 0, false, -1, 0, 0, true, 0);
				}
				if (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED())
				{
					if (!BitTest(*iParam0, 0))
					{
						if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
						{
							MISC::SET_BIT(iParam0, 0);
						}
					}
					else if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
					{
						__LIB_0__.func_579(&(Global_2103068.f_49));
						__LIB_0__.func_579(&Global_2103068);
						*iParam0 = 0;
						Global_2103068.f_2 = 0;
						__LIB_1__.func_416(0);
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_186(int iParam0)//Position - 0x18D89C
{
	int iVar0[12];
	int iVar1;
	int iVar2;
	int iVar3;
	iVar1 = 0;
	iVar2 = 0;
	while (iVar2 < 12)
	{
		iVar0[iVar2] = iVar2;
		iVar1 = (iVar1 + __LIB_20__.func_98(iParam0, iVar0[iVar2]));
		iVar2++;
	}
	iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(1, iVar1 + 1);
	iVar2 = 0;
	while (iVar2 < 12)
	{
		if (iVar3 <= __LIB_20__.func_98(iParam0, iVar0[iVar2]))
		{
			return iVar0[iVar2];
		}
		else
		{
			iVar3 = (iVar3 - __LIB_20__.func_98(iParam0, iVar0[iVar2]));
		}
		iVar2++;
	}
	return -1;
}

int func_187(int iParam0, int iParam1)//Position - 0x18DEAB
{
	int iVar0[11];
	int iVar1;
	int iVar2;
	int iVar3;
	iVar1 = 0;
	iVar2 = 0;
	while (iVar2 < 11)
	{
		iVar0[iVar2] = iVar2;
		iVar1 = (iVar1 + __LIB_20__.func_99(iParam0, iVar0[iVar2], iParam1));
		iVar2++;
	}
	iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(1, iVar1 + 1);
	iVar2 = 0;
	while (iVar2 < 11)
	{
		if (iVar3 <= __LIB_20__.func_99(iParam0, iVar0[iVar2], iParam1))
		{
			return iVar0[iVar2];
		}
		else
		{
			iVar3 = (iVar3 - __LIB_20__.func_99(iParam0, iVar0[iVar2], iParam1));
		}
		iVar2++;
	}
	return -1;
}

void func_188(int iParam0, int iParam1, int iParam2)//Position - 0x192F77
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		__LIB_1__.func_199();
		if (iParam2 == -1)
		{
			iParam2 = __LIB_1__.func_556(2042, -1, 0);
		}
		PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(iParam0, 5, __LIB_18__.func_183(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_217(PLAYER::GET_PLAYER_PED(iParam0), iParam2), false);
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(iParam0, __LIB_0__.func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		PED::SET_PED_COMPONENT_VARIATION(PLAYER::GET_PLAYER_PED(iParam0), 5, __LIB_18__.func_183(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_217(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		if (iParam1 == -1)
		{
			iParam1 = __LIB_1__.func_556(586, -1, 0);
		}
		if (__LIB_6__.func_401(1) && __LIB_0__.func_357(iParam0))
		{
			__LIB_7__.func_243(iParam0, __LIB_1__.func_286(Global_2824753), 0);
		}
		else
		{
			__LIB_7__.func_243(iParam0, iParam1, 0);
		}
		if (BitTest(Global_4718592.f_28, 4))
		{
			__LIB_7__.func_243(iParam0, Global_1836612, 1);
		}
		__LIB_6__.func_782(iParam0, iParam2);
		PED::SET_PED_RESET_FLAG(PLAYER::GET_PLAYER_PED(iParam0), 177, true);
	}
}

void func_189(int iParam0, var uParam1)//Position - 0x19D4A2
{
	uParam1->f_67 = -1;
	uParam1->f_66 = 0;
	switch (iParam0)
	{
		case 28:
			uParam1->f_66 = joaat("alpha");
			StringCopy(&(uParam1->f_1), "V1S1ONRY", 16);
			uParam1->f_5 = 118;
			uParam1->f_6 = 118;
			uParam1->f_7 = 3;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 24);
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[22] = 1;
			break;
		case 82:
			uParam1->f_66 = joaat("banshee2");
			StringCopy(&(uParam1->f_1), "DR1FT3R", 16);
			uParam1->f_5 = 69;
			uParam1->f_6 = 96;
			uParam1->f_7 = 107;
			uParam1->f_8 = 154;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 180;
			uParam1->f_63 = 130;
			uParam1->f_64 = 97;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[1] = 2;
			uParam1->f_9[3] = 4;
			uParam1->f_9[4] = 5;
			uParam1->f_9[7] = 3;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 5;
			uParam1->f_9[28] = 18;
			uParam1->f_59[0] = 1;
			break;
		case 7:
			uParam1->f_66 = joaat("bestiagts");
			StringCopy(&(uParam1->f_1), "BE4STY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 40;
			uParam1->f_6 = 57;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[7] = 1;
			break;
		case 37:
			uParam1->f_66 = joaat("btype3");
			StringCopy(&(uParam1->f_1), "L4WLE55", 16);
			*uParam1 = 2;
			uParam1->f_5 = 146;
			uParam1->f_6 = 118;
			uParam1->f_7 = 33;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[5] = 3;
			uParam1->f_9[6] = 2;
			uParam1->f_9[8] = 1;
			uParam1->f_9[9] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[43] = 1;
			uParam1->f_9[44] = 3;
			uParam1->f_9[46] = 2;
			break;
		case 76:
			uParam1->f_66 = joaat("cheetah");
			StringCopy(&(uParam1->f_1), "BUZZ3D", 16);
			*uParam1 = 1;
			uParam1->f_5 = 91;
			uParam1->f_6 = 67;
			uParam1->f_7 = 70;
			uParam1->f_8 = 35;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_63 = 174;
			uParam1->f_64 = 239;
			uParam1->f_74 = 255;
			uParam1->f_75 = 5;
			uParam1->f_76 = 190;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 6;
			break;
		case 73:
			uParam1->f_66 = joaat("coquette2");
			StringCopy(&(uParam1->f_1), "T0PL3SS", 16);
			uParam1->f_5 = 66;
			uParam1->f_6 = 2;
			uParam1->f_7 = 136;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[2] = 3;
			uParam1->f_9[4] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 43;
			break;
		case 61:
			uParam1->f_66 = joaat("coquette3");
			StringCopy(&(uParam1->f_1), "V1NT4G3", 16);
			uParam1->f_5 = 5;
			uParam1->f_6 = 117;
			uParam1->f_7 = 112;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			break;
		case 49:
			uParam1->f_66 = joaat("entityxf");
			StringCopy(&(uParam1->f_1), "IML4TE", 16);
			*uParam1 = 1;
			uParam1->f_5 = 35;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 15;
			uParam1->f_75 = 3;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 26);
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[14] = 33;
			uParam1->f_9[15] = 2;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 23;
			uParam1->f_59[0] = 1;
			break;
		case 70:
			uParam1->f_66 = joaat("feltzer2");
			StringCopy(&(uParam1->f_1), "P0W3RFUL", 16);
			*uParam1 = 2;
			uParam1->f_5 = 83;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_75 = 255;
			uParam1->f_76 = 140;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			break;
		case 40:
			uParam1->f_66 = joaat("feltzer3");
			StringCopy(&(uParam1->f_1), "M4J3ST1C", 16);
			uParam1->f_5 = 100;
			uParam1->f_6 = 149;
			uParam1->f_7 = 105;
			uParam1->f_8 = 109;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[4] = 1;
			uParam1->f_9[6] = 2;
			uParam1->f_9[23] = 6;
			break;
		case 19:
			uParam1->f_66 = joaat("fmj");
			StringCopy(&(uParam1->f_1), "C4TCHM3", 16);
			*uParam1 = 4;
			uParam1->f_5 = 92;
			uParam1->f_6 = 159;
			uParam1->f_7 = 135;
			uParam1->f_8 = 41;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[10] = 2;
			uParam1->f_9[15] = 4;
			uParam1->f_9[23] = 8;
			break;
		case 94:
			uParam1->f_66 = joaat("jester");
			StringCopy(&(uParam1->f_1), "H0TP1NK", 16);
			*uParam1 = 2;
			uParam1->f_5 = 135;
			uParam1->f_6 = 54;
			uParam1->f_7 = 67;
			uParam1->f_8 = 140;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_63 = 174;
			uParam1->f_64 = 239;
			uParam1->f_75 = 255;
			uParam1->f_76 = 140;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 2;
			uParam1->f_9[10] = 1;
			uParam1->f_9[14] = 6;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 2;
			break;
		case 31:
			uParam1->f_66 = joaat("mamba");
			StringCopy(&(uParam1->f_1), "0LDBLU3", 16);
			uParam1->f_5 = 74;
			uParam1->f_6 = 154;
			uParam1->f_7 = 74;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 2);
			uParam1->f_9[4] = 1;
			uParam1->f_9[23] = 27;
			uParam1->f_59[0] = 1;
			break;
		case 88:
			uParam1->f_66 = joaat("massacro");
			StringCopy(&(uParam1->f_1), "TR0P1CAL", 16);
			*uParam1 = 3;
			uParam1->f_5 = 54;
			uParam1->f_6 = 6;
			uParam1->f_7 = 92;
			uParam1->f_8 = 91;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 252;
			uParam1->f_63 = 238;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 14;
			break;
		case 79:
			uParam1->f_66 = joaat("nightshade");
			StringCopy(&(uParam1->f_1), "DE4DLY", 16);
			*uParam1 = 3;
			uParam1->f_5 = 147;
			uParam1->f_6 = 119;
			uParam1->f_7 = 34;
			uParam1->f_8 = 35;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 226;
			uParam1->f_63 = 6;
			uParam1->f_64 = 6;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 3;
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 23;
			break;
		case 58:
			uParam1->f_66 = joaat("omnis");
			StringCopy(&(uParam1->f_1), "0BEYM3", 16);
			*uParam1 = 1;
			uParam1->f_5 = 36;
			uParam1->f_6 = 92;
			uParam1->f_7 = 89;
			uParam1->f_8 = 55;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 114;
			uParam1->f_63 = 204;
			uParam1->f_64 = 114;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[4] = 1;
			uParam1->f_9[14] = 45;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 13;
			uParam1->f_59[0] = 1;
			break;
		case 16:
			uParam1->f_66 = joaat("osiris");
			StringCopy(&(uParam1->f_1), "OH3LL0", 16);
			uParam1->f_5 = 147;
			uParam1->f_6 = 119;
			uParam1->f_7 = 5;
			uParam1->f_8 = 70;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 15;
			uParam1->f_75 = 3;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[1] = 5;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[8] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 13;
			break;
		case 25:
			uParam1->f_66 = joaat("pfister811");
			StringCopy(&(uParam1->f_1), "M1DL1F3", 16);
			uParam1->f_5 = 50;
			uParam1->f_6 = 50;
			uParam1->f_7 = 53;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 5;
			uParam1->f_9[4] = 3;
			uParam1->f_9[22] = 1;
			break;
		case 1:
			uParam1->f_66 = joaat("prototipo");
			StringCopy(&(uParam1->f_1), "FUTUR3", 16);
			*uParam1 = 1;
			uParam1->f_5 = 146;
			uParam1->f_6 = 35;
			uParam1->f_7 = 145;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 252;
			uParam1->f_63 = 238;
			uParam1->f_74 = 35;
			uParam1->f_75 = 1;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[1] = 2;
			uParam1->f_9[14] = 1;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			break;
		case 22:
			uParam1->f_66 = joaat("reaper");
			StringCopy(&(uParam1->f_1), "2FA5T4U", 16);
			*uParam1 = 4;
			uParam1->f_5 = 71;
			uParam1->f_6 = 2;
			uParam1->f_7 = 107;
			uParam1->f_8 = 145;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 132;
			uParam1->f_63 = 102;
			uParam1->f_64 = 226;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 1;
			uParam1->f_59[0] = 1;
			break;
		case 91:
			uParam1->f_66 = joaat("sabregt2");
			StringCopy(&(uParam1->f_1), "GUNZ0UT", 16);
			uParam1->f_5 = 141;
			uParam1->f_6 = 118;
			uParam1->f_7 = 64;
			uParam1->f_8 = 88;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[24] = 1;
			break;
		case 64:
			uParam1->f_66 = joaat("seven70");
			StringCopy(&(uParam1->f_1), "FRU1TY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 84;
			uParam1->f_6 = 3;
			uParam1->f_8 = 138;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 14;
			uParam1->f_59[0] = 1;
			break;
		case 13:
			uParam1->f_66 = joaat("sheava");
			StringCopy(&(uParam1->f_1), "B1GB0Y", 16);
			*uParam1 = 3;
			uParam1->f_5 = 29;
			uParam1->f_6 = 34;
			uParam1->f_7 = 35;
			uParam1->f_8 = 1;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[10] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 1;
			uParam1->f_59[0] = 1;
			break;
		case 52:
			uParam1->f_66 = joaat("sultanrs");
			StringCopy(&(uParam1->f_1), "SN0WFLK3", 16);
			uParam1->f_5 = 111;
			uParam1->f_6 = 112;
			uParam1->f_7 = 4;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 15;
			uParam1->f_9[1] = 7;
			uParam1->f_9[2] = 6;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 5;
			uParam1->f_9[7] = 9;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 3;
			uParam1->f_9[23] = 22;
			uParam1->f_59[0] = 1;
			break;
		case 10:
			uParam1->f_66 = joaat("t20");
			StringCopy(&(uParam1->f_1), "CAR4M3L", 16);
			*uParam1 = 2;
			uParam1->f_5 = 106;
			uParam1->f_6 = 159;
			uParam1->f_7 = 67;
			uParam1->f_8 = 136;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 180;
			uParam1->f_63 = 130;
			uParam1->f_64 = 97;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			uParam1->f_9[1] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 16;
			break;
		case 34:
			uParam1->f_66 = joaat("tampa");
			StringCopy(&(uParam1->f_1), "CH4RG3D", 16);
			*uParam1 = 3;
			uParam1->f_5 = 12;
			uParam1->f_6 = 120;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 2;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[14] = 43;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 30;
			uParam1->f_59[0] = 1;
			break;
		case 85:
			uParam1->f_66 = joaat("turismor");
			StringCopy(&(uParam1->f_1), "IN4H4ZE", 16);
			*uParam1 = 1;
			uParam1->f_5 = 145;
			uParam1->f_6 = 119;
			uParam1->f_7 = 70;
			uParam1->f_8 = 140;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 222;
			uParam1->f_75 = 222;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 12;
			break;
		case 46:
			uParam1->f_66 = joaat("tropos");
			StringCopy(&(uParam1->f_1), "1MS0RAD", 16);
			*uParam1 = 2;
			uParam1->f_5 = 34;
			uParam1->f_6 = 149;
			uParam1->f_8 = 153;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_75 = 255;
			uParam1->f_76 = 140;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 5;
			break;
		case 4:
			uParam1->f_66 = joaat("tyrus");
			StringCopy(&(uParam1->f_1), "C1TRUS", 16);
			uParam1->f_5 = 36;
			uParam1->f_6 = 3;
			uParam1->f_7 = 26;
			uParam1->f_8 = 89;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 252;
			uParam1->f_63 = 238;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[4] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 10;
			uParam1->f_59[0] = 1;
			break;
		case 67:
			uParam1->f_66 = joaat("verlierer2");
			StringCopy(&(uParam1->f_1), "PR3C1OUS", 16);
			*uParam1 = 1;
			uParam1->f_5 = 136;
			uParam1->f_6 = 118;
			uParam1->f_7 = 5;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[8] = 1;
			uParam1->f_9[20] = 1;
			break;
		case 55:
			uParam1->f_66 = joaat("zentorno");
			StringCopy(&(uParam1->f_1), "W1NN1NG", 16);
			*uParam1 = 1;
			uParam1->f_5 = 119;
			uParam1->f_6 = 29;
			uParam1->f_7 = 5;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 2;
			uParam1->f_9[22] = 1;
			break;
		case 43:
			uParam1->f_66 = joaat("ztype");
			StringCopy(&(uParam1->f_1), "B1GMON3Y", 16);
			*uParam1 = 1;
			uParam1->f_5 = 159;
			uParam1->f_6 = 146;
			uParam1->f_7 = 160;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 150;
			uParam1->f_76 = 5;
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[6] = 1;
			uParam1->f_9[23] = 20;
			uParam1->f_59[0] = 1;
			break;
	}
	if (uParam1->f_66 == 0)
	{
		__LIB_20__.func_105(iParam0, uParam1);
	}
}

void func_190(var uParam0, float fParam1)//Position - 0x1A1612
{
	struct<3> Var0;
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	if (!Global_78319)
	{
		if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			PED::SET_FACIAL_IDLE_ANIM_OVERRIDE(PLAYER::PLAYER_PED_ID(), "Mood_Normal_1", 0);
			Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("family1")) == 0)
			{
				GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(Var0, 50f);
				if (__LIB_0__.func_299(*uParam0) != 3)
				{
					MISC::CLEAR_AREA_OF_OBJECTS(Var0, fParam1, 0);
				}
				MISC::CLEAR_AREA_OF_PROJECTILES(Var0, 5f, 0);
				MISC::CLEAR_AREA_OF_PEDS(Var0, 1.5f, 1);
			}
			PLAYER::SET_EVERYONE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), true);
		}
	}
	CAM::SET_WIDESCREEN_BORDERS(true, -1);
	WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), true);
	Global_2726719 = 0;
	HUD::THEFEED_FLUSH_QUEUE();
	Global_102575 = 1;
	__LIB_7__.func_279(1, 1, 0, 0, 0, 0, 0);
}

void func_191(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, int iParam5)//Position - 0x1A1B8B
{
	struct<4> Var0;
	struct<4> Var1;
	switch (iParam0)
	{
		case 4:
			*uParam1 = { 1100.18f, -3163.3f, -38.48f };
			*uParam2 = 177.4037f;
			*uParam3 = { 1100.18f, -3163.3f, -38.48f };
			*uParam4 = 177.4037f;
			break;
		case 5:
			*uParam1 = { 1000.06f, -3147.64f, -39.8878f };
			*uParam2 = 353.7148f;
			*uParam3 = { 1000.0454f, -3148.4387f, -39.8878f };
			*uParam4 = 353.7148f;
			break;
		case 1:
			*uParam1 = { 229.2138f, -987.2036f, -99.9999f };
			*uParam2 = 171.7613f;
			*uParam3 = { 229.2138f, -987.2036f, -99.9999f };
			*uParam4 = 171.7613f;
			break;
		case 2:
			*uParam1 = { 1091.9655f, -3153.3896f, -38.5186f };
			*uParam2 = 181.5529f;
			*uParam3 = { 1091.9655f, -3153.3896f, -38.5186f };
			*uParam4 = 181.5529f;
			break;
		case 3:
			*uParam1 = { 959.3535f, -2994.553f, -39.9685f };
			*uParam2 = 180f;
			*uParam3 = { 959.3535f, -2994.553f, -39.9685f };
			*uParam4 = 180f;
			break;
		case 6:
			__LIB_18__.func_381(103, 958, &Var0, 109, 1);
			__LIB_18__.func_381(103, 959, &Var1, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			*uParam3 = { Var1 };
			*uParam4 = Var1.f_3.f_2;
			break;
		case 7:
			__LIB_18__.func_381(106, 958, &Var0, 109, 1);
			__LIB_18__.func_381(106, 959, &Var1, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			*uParam3 = { Var1 };
			*uParam4 = Var1.f_3.f_2;
			break;
		case 8:
			__LIB_18__.func_381(109, 958, &Var0, 109, 1);
			__LIB_18__.func_381(109, 959, &Var1, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			*uParam3 = { Var1 };
			*uParam4 = Var1.f_3.f_2;
			break;
		case 9:
			__LIB_18__.func_381(112, 958, &Var0, 109, 1);
			__LIB_18__.func_381(112, 959, &Var1, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			*uParam3 = { Var1 };
			*uParam4 = Var1.f_3.f_2;
			break;
		case 10:
			*uParam1 = { 1103.6588f, -2997.0256f, -39.9876f };
			*uParam2 = 180f;
			*uParam3 = { 1103.6588f, -2997.0256f, -39.9876f };
			*uParam4 = 180f;
			break;
		case 11:
			*uParam1 = { 834.2265f, -3234.795f, -98.4865f };
			*uParam2 = 62.28f;
			*uParam3 = { 834.2265f, -3234.795f, -98.4865f };
			*uParam4 = 62.28f;
			break;
		case 12:
			*uParam1 = { 995.0557f, -2969.318f, -44.4897f };
			*uParam2 = 75.0989f;
			*uParam3 = { 995.0557f, -2969.318f, -44.4897f };
			*uParam4 = 75.0989f;
			break;
		case 13:
			*uParam1 = { 524.4195f, 4750.5244f, -69.9765f };
			*uParam2 = 90f;
			*uParam3 = { 524.4195f, 4750.5244f, -69.9765f };
			*uParam4 = 90f;
			break;
		case 14:
			*uParam1 = { 479.457f, 4816.46f, -56.4018f };
			*uParam2 = 200.3467f;
			*uParam3 = { 479.457f, 4816.46f, -56.4018f };
			*uParam4 = 200.3467f;
			break;
		case 15:
			*uParam1 = { -1503.3656f, -2995.6792f, -83.2073f };
			*uParam2 = 186.2352f;
			*uParam3 = { -1503.3656f, -2995.6792f, -83.2073f };
			*uParam4 = 186.5379f;
			break;
		case 16:
			*uParam1 = { -1420.8846f, -3014.8914f, -80.6422f };
			*uParam2 = 18.8886f;
			*uParam3 = { -1420.8846f, -3014.8914f, -80.6422f };
			*uParam4 = 18.8886f;
			break;
		case 17:
			if (__LIB_6__.func_25() == 0)
			{
				*uParam1 = { 203.2757f, 5180.184f, -89.7098f };
				*uParam2 = 90f;
				*uParam3 = { 203.2757f, 5180.184f, -89.7098f };
				*uParam4 = 90f;
			}
			else
			{
				*uParam1 = { 180.7597f, 5186.9717f, 10.0786f };
				*uParam2 = 89.6809f;
				*uParam3 = { 180.7597f, 5186.9717f, 10.0786f };
				*uParam4 = 89.6809f;
			}
			break;
		case 18:
			switch (iParam5)
			{
				case 0:
					*uParam1 = { __LIB_10__.func_403(iParam5) };
					*uParam2 = 179.5f;
					*uParam3 = { -2166.8755f, 1156.4324f, -25.3676f };
					*uParam4 = 179.5f;
					break;
				case 1:
					*uParam1 = { __LIB_10__.func_403(iParam5) };
					*uParam2 = 179.5f;
					*uParam3 = { -2159.5403f, 1156.5397f, -25.3676f };
					*uParam4 = 179.5f;
					break;
				case 2:
					*uParam1 = { __LIB_10__.func_403(iParam5) };
					*uParam2 = 179.5f;
					*uParam3 = { -2153.1277f, 1156.3943f, -25.3676f };
					*uParam4 = 179.5f;
					break;
				case 3:
					*uParam1 = { __LIB_10__.func_403(iParam5) };
					*uParam2 = 179.5f;
					*uParam3 = { -2145.7485f, 1157.3513f, -25.3682f };
					*uParam4 = 179.5f;
					break;
			}
			break;
		case 19:
			*uParam1 = { -1351.707f, 155.8296f, -100.1944f };
			*uParam2 = 178.7478f;
			*uParam3 = { -1351.707f, 155.8296f, -100.1944f };
			*uParam4 = 178.7478f;
			break;
		case 20:
			*uParam1 = { -1065.526f, -74.694f, -91.2f };
			*uParam2 = 90f;
			*uParam3 = { -1065.526f, -74.694f, -91.2f };
			*uParam4 = 90f;
			if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()) && !ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
			{
				if (PED::IS_PED_ON_ANY_BIKE(PLAYER::PLAYER_PED_ID()))
				{
					*uParam1 = { -1064.956f, -74.694f, -91.2f };
					*uParam3 = { *uParam1 };
				}
			}
			break;
	}
}

void func_192(var uParam0)//Position - 0x1A4CAD
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	uParam0->f_636[0] = __LIB_1__.func_556(1452, -1, 0);
	uParam0->f_636[1] = __LIB_1__.func_556(1453, -1, 0);
	uParam0->f_636[2] = __LIB_1__.func_556(1454, -1, 0);
	uParam0->f_636[3] = __LIB_1__.func_556(1455, -1, 0);
	uParam0->f_636[4] = __LIB_1__.func_556(1456, -1, 0);
	uParam0->f_636[5] = __LIB_1__.func_556(1457, -1, 0);
	uParam0->f_636[6] = __LIB_1__.func_556(1458, -1, 0);
	uParam0->f_636[7] = __LIB_1__.func_556(1459, -1, 0);
	uParam0->f_636[8] = __LIB_1__.func_556(3964, -1, 0);
	uParam0->f_636[9] = __LIB_1__.func_556(3965, -1, 0);
	uParam0->f_636[11] = __LIB_1__.func_556(9383, -1, 0);
	uParam0->f_636[12] = __LIB_1__.func_556(9869, -1, 0);
	uParam0->f_650[0] = __LIB_1__.func_556(1463, -1, 0);
	uParam0->f_650[1] = __LIB_1__.func_556(1464, -1, 0);
	uParam0->f_653[0] = __LIB_1__.func_556(1467, -1, 0);
	uParam0->f_653[1] = __LIB_1__.func_556(1468, -1, 0);
	uParam0->f_653[2] = __LIB_1__.func_556(1469, -1, 0);
	uParam0->f_653[3] = __LIB_1__.func_556(1470, -1, 0);
	uParam0->f_653[4] = __LIB_1__.func_556(1471, -1, 0);
	uParam0->f_653[5] = __LIB_1__.func_556(1472, -1, 0);
	uParam0->f_653[6] = __LIB_1__.func_556(1473, -1, 0);
	uParam0->f_653[7] = __LIB_1__.func_556(1474, -1, 0);
	uParam0->f_663[0] = __LIB_1__.func_556(1475, -1, 0);
	uParam0->f_663[1] = __LIB_1__.func_556(1476, -1, 0);
	uParam0->f_663[2] = __LIB_1__.func_556(1477, -1, 0);
	uParam0->f_663[3] = __LIB_1__.func_556(1478, -1, 0);
	uParam0->f_663[4] = __LIB_1__.func_556(1479, -1, 0);
	uParam0->f_663[5] = __LIB_1__.func_556(1480, -1, 0);
	uParam0->f_663[6] = __LIB_1__.func_556(1481, -1, 0);
	uParam0->f_663[7] = __LIB_1__.func_556(1482, -1, 0);
}

int func_193(int iParam0, int iParam1)//Position - 0x1A5660
{
	int iVar0;
	switch (iParam0)
	{
		case joaat("faction"):
			if (__LIB_19__.func_959(iParam0) == 1)
			{
				return joaat("faction2");
			}
			else if (__LIB_19__.func_959(iParam0) == 2)
			{
				if (Global_262145.f_14734 /* Tunable: ENABLE_LOWRIDER2_FACTION */)
				{
					if (iParam1 == 0)
					{
						return joaat("faction3");
					}
				}
				if (iParam1 == 1)
				{
					return joaat("faction2");
				}
			}
			break;
		case joaat("buccaneer"):
			return joaat("buccaneer2");
			break;
		case joaat("chino"):
			return joaat("chino2");
			break;
		case joaat("moonbeam"):
			return joaat("moonbeam2");
			break;
		case joaat("primo"):
			return joaat("primo2");
			break;
		case joaat("voodoo2"):
			return joaat("voodoo");
			break;
		case joaat("comet2"):
			if (Global_262145.f_19186 /* Tunable: ENABLE_IE_COMET3 */)
			{
				return joaat("comet3");
			}
			break;
		case joaat("diablous"):
			if (Global_262145.f_19188 /* Tunable: ENABLE_IE_DIABLOUS2 */)
			{
				return joaat("diablous2");
			}
			break;
		case joaat("fcr"):
			if (Global_262145.f_19192 /* Tunable: ENABLE_IE_FCR2 */)
			{
				return joaat("fcr2");
			}
			break;
		case joaat("italigtb"):
			if (Global_262145.f_19194 /* Tunable: ENABLE_IE_ITALIGTB2 */)
			{
				return joaat("italigtb2");
			}
			break;
		case joaat("specter"):
			if (Global_262145.f_19199 /* Tunable: ENABLE_IE_SPECTER2 */)
			{
				return joaat("specter2");
			}
			break;
		case joaat("nero"):
			if (Global_262145.f_19196 /* Tunable: ENABLE_IE_NERO2 */)
			{
				return joaat("nero2");
			}
			break;
		case joaat("elegy2"):
			if (Global_262145.f_19189 /* Tunable: ENABLE_IE_ELEGY */)
			{
				return joaat("elegy");
			}
			break;
		case joaat("sabregt"):
			return joaat("sabregt2");
			break;
		case joaat("tornado"):
		case joaat("tornado2"):
		case joaat("tornado3"):
			return joaat("tornado5");
			break;
		case joaat("virgo3"):
			return joaat("virgo2");
			break;
		case joaat("minivan"):
			return joaat("minivan2");
			break;
		case joaat("slamvan"):
			if (!__LIB_0__.func_267(PLAYER::PLAYER_ID()))
			{
				return joaat("slamvan3");
			}
			else if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
			{
				if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_2, 12))
				{
					if (iParam1 == 0)
					{
						return joaat("slamvan3");
					}
					else if (iParam1 == 1)
					{
						return joaat("slamvan4");
					}
					else if (iParam1 == 2)
					{
						return joaat("slamvan5");
					}
					else if (iParam1 == 3)
					{
						return joaat("slamvan6");
					}
				}
				else if (iParam1 == 0)
				{
					return joaat("slamvan4");
				}
				else if (iParam1 == 1)
				{
					return joaat("slamvan5");
				}
				else if (iParam1 == 2)
				{
					return joaat("slamvan6");
				}
			}
			break;
		case joaat("sultan"):
			return joaat("sultanrs");
			break;
		case joaat("banshee"):
			return joaat("banshee2");
			break;
		case joaat("technical"):
			if (Global_262145.f_21144 /* Tunable: ENABLE_TECHNICAL_MODSHOP */)
			{
				return joaat("technical3");
			}
			break;
		case joaat("insurgent"):
			if (Global_262145.f_21145 /* Tunable: ENABLE_INSURGENT_MODSHOP */)
			{
				return joaat("insurgent3");
			}
			break;
		case joaat("ratloader"):
		case joaat("ratloader2"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster4");
			}
			else if (iParam1 == 2)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster3"):
			if (iParam1 == 0)
			{
				return joaat("monster4");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster4"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster5"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster4");
			}
			break;
		case joaat("glendale"):
			if (!__LIB_0__.func_267(PLAYER::PLAYER_ID()))
			{
				return joaat("glendale2");
			}
			else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_2, 12))
			{
				if (iParam1 == 0)
				{
					return joaat("glendale2");
				}
				else if (iParam1 == 1)
				{
					return joaat("bruiser");
				}
				else if (iParam1 == 2)
				{
					return joaat("bruiser2");
				}
				else if (iParam1 == 3)
				{
					return joaat("bruiser3");
				}
			}
			else if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser2");
			}
			else if (iParam1 == 2)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser"):
			if (iParam1 == 0)
			{
				return joaat("bruiser2");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser2"):
			if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser3"):
			if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser2");
			}
			break;
		case joaat("impaler"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler3");
			}
			else if (iParam1 == 2)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler2"):
			if (iParam1 == 0)
			{
				return joaat("impaler3");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler3"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler4"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler3");
			}
			break;
		case joaat("issi3"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi5");
			}
			else if (iParam1 == 2)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi4"):
			if (iParam1 == 0)
			{
				return joaat("issi5");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi5"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi6"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi5");
			}
			break;
		case joaat("gargoyle"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike2");
			}
			else if (iParam1 == 2)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("dominator"):
		case joaat("dominator2"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator5");
			}
			else if (iParam1 == 2)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator4"):
			if (iParam1 == 0)
			{
				return joaat("dominator5");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator5"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator6"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator5");
			}
			break;
		case joaat("imperator"):
			if (iParam1 == 0)
			{
				return joaat("imperator2");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator3");
			}
			break;
		case joaat("imperator2"):
			if (iParam1 == 0)
			{
				return joaat("imperator");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator3");
			}
			break;
		case joaat("imperator3"):
			if (iParam1 == 0)
			{
				return joaat("imperator");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator2");
			}
			break;
		case joaat("deathbike"):
			if (iParam1 == 0)
			{
				return joaat("deathbike2");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("deathbike2"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("deathbike3"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike2");
			}
			break;
		case joaat("zr380"):
			if (iParam1 == 0)
			{
				return joaat("zr3802");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3803");
			}
			break;
		case joaat("zr3802"):
			if (iParam1 == 0)
			{
				return joaat("zr380");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3803");
			}
			break;
		case joaat("zr3803"):
			if (iParam1 == 0)
			{
				return joaat("zr380");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3802");
			}
			break;
		case joaat("cerberus"):
			if (iParam1 == 0)
			{
				return joaat("cerberus2");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus3");
			}
			break;
		case joaat("cerberus2"):
			if (iParam1 == 0)
			{
				return joaat("cerberus");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus3");
			}
			break;
		case joaat("cerberus3"):
			if (iParam1 == 0)
			{
				return joaat("cerberus");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus2");
			}
			break;
		case joaat("scarab"):
			if (iParam1 == 0)
			{
				return joaat("scarab2");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab3");
			}
			break;
		case joaat("scarab2"):
			if (iParam1 == 0)
			{
				return joaat("scarab");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab3");
			}
			break;
		case joaat("scarab3"):
			if (iParam1 == 0)
			{
				return joaat("scarab");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab2");
			}
			break;
		case joaat("slamvan4"):
			if (iParam1 == 0)
			{
				return joaat("slamvan5");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan6");
			}
			break;
		case joaat("slamvan5"):
			if (iParam1 == 0)
			{
				return joaat("slamvan4");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan6");
			}
			break;
		case joaat("slamvan6"):
			if (iParam1 == 0)
			{
				return joaat("slamvan4");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan5");
			}
			break;
		case joaat("brutus"):
			if (iParam1 == 0)
			{
				return joaat("brutus2");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus3");
			}
			break;
		case joaat("brutus2"):
			if (iParam1 == 0)
			{
				return joaat("brutus");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus3");
			}
			break;
		case joaat("brutus3"):
			if (iParam1 == 0)
			{
				return joaat("brutus");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus2");
			}
			break;
		case joaat("youga2"):
			return joaat("youga3");
			break;
		case joaat("gauntlet3"):
			return joaat("gauntlet5");
			break;
		case joaat("manana"):
			return joaat("manana2");
			break;
		case joaat("peyote"):
			return joaat("peyote3");
		case joaat("yosemite"):
			return joaat("yosemite3");
		case joaat("tenf"):
			return joaat("tenf2");
		case joaat("weevil"):
			return joaat("weevil2");
		case joaat("brioso2"):
			return joaat("brioso3");
		case joaat("sentinel3"):
			return joaat("sentinel4");
	}
	if (__LIB_0__.func_174(iParam0, 0))
	{
		iVar0 = iParam0;
	}
	else
	{
		iVar0 = 0;
	}
	return iVar0;
}

int func_194(bool bParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x1B5B62
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (VEHICLE::GET_NUM_MOD_KITS(Local_124.f_406) > 0)
		{
			VEHICLE::SET_VEHICLE_MOD_KIT(Local_124.f_406, 0);
		}
		switch (VEHICLE::GET_VEHICLE_MOD_KIT_TYPE(Local_124.f_406))
		{
			case 0:
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
				{
					return 4;
				}
				else
				{
					return 0;
				}
				break;
			case 1:
				return 1;
				break;
			case 2:
				return 2;
				break;
			case 3:
				return 3;
				break;
		}
		return 0;
	}
	if (bParam5)
	{
		return 3;
	}
	if (bParam4)
	{
		return 3;
	}
	if (bParam3)
	{
		return __LIB_18__.func_769(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
	}
	if (bParam0)
	{
		return __LIB_7__.func_962(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
	}
	if (bParam1)
	{
		return __LIB_4__.func_244(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
	}
	if (bParam2)
	{
		return __LIB_7__.func_789(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
	}
	return __LIB_7__.func_790(ENTITY::GET_ENTITY_MODEL(Local_124.f_406));
}

void func_195(int iParam0, int iParam1)//Position - 0x1B60DC
{
	if (!__LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0) || iParam1)
	{
		if (!__LIB_0__.func_674())
		{
			Global_1574582.f_1 = 1;
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_9 = 1;
			if (iParam0 == 1)
			{
				Global_1574582.f_2 = 1;
			}
			__LIB_20__.func_111(7, 0, -1);
		}
	}
}

void func_196(bool bParam0, bool bParam1, bool bParam2)//Position - 0x1B761E
{
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	if (bParam0)
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(4);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(5);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
	}
	if (bParam1)
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(2);
	}
	if (bParam2)
	{
		if (!__LIB_10__.func_480())
		{
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
		}
	}
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(1);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(6);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(9);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(14);
	__LIB_6__.func_952();
}

int func_197(int iParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x1B7D2E
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (__LIB_10__.func_478(1))
	{
		if (__LIB_10__.func_183(iParam0, iParam3))
		{
			if (!(ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_304[0]) && __LIB_1__.func_251(PLAYER::PLAYER_ID())) && !ENTITY::DOES_ENTITY_EXIST(Global_103231))
			{
				return 0;
			}
			if (!(ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_304[1]) && __LIB_1__.func_251(PLAYER::PLAYER_ID())) && !ENTITY::DOES_ENTITY_EXIST(Global_103231))
			{
				return 0;
			}
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_299(iParam0) == 1)
		{
			if ((__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) || __LIB_9__.func_375(PLAYER::PLAYER_ID())) || __LIB_6__.func_974(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (__LIB_6__.func_945(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (__LIB_0__.func_665(PLAYER::PLAYER_ID()))
			{
				return 0;
			}
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (iParam0 == 46 && ((Global_262145.f_21612 /* Tunable: 311722703 */ && __LIB_0__.func_333(PLAYER::PLAYER_ID())) || (Global_262145.f_21611 /* Tunable: GR_DISABLE_WEAPON_WORKSHOP */ && __LIB_0__.func_337(PLAYER::PLAYER_ID()))))
			{
				return 0;
			}
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (iParam0 == 48 && (Global_262145.f_24709 /* Tunable: 1908565944 */ && __LIB_9__.func_300(PLAYER::PLAYER_ID())))
			{
				return 0;
			}
		}
		if (bParam1)
		{
			if ((!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()) || ((!CAM::IS_GAMEPLAY_CAM_RENDERING() && !CAM::IS_AIM_CAM_ACTIVE()) && !bParam2)) || __LIB_0__.func_527())
			{
				return 0;
			}
		}
		if (bParam2)
		{
			if ((!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || !PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) && !__LIB_10__.func_183(iParam0, iParam3))
			{
				if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 198.22726f, 5176.4146f, -89.99727f, 201.1166f, 5174.4595f, -87.24727f, 1.5f, false, true, 0) && __LIB_2__.func_215(iParam0, iParam3))
				{
				}
				else if (__LIB_19__.func_415(PLAYER::PLAYER_PED_ID()) && __LIB_10__.func_184(iParam0, iParam3))
				{
				}
				else if (__LIB_10__.func_484(iParam0, iParam3) && __LIB_9__.func_942())
				{
				}
				else
				{
					return 0;
				}
			}
			bVar0 = false;
			if (__LIB_10__.func_183(iParam0, iParam3))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_304[0]))
				{
					iVar1 = Global_2815059.f_304[0];
					bVar0 = true;
				}
			}
			else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 198.22726f, 5176.4146f, -89.99727f, 201.1166f, 5174.4595f, -87.24727f, 1.5f, false, true, 0) && __LIB_2__.func_215(iParam0, iParam3))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_1965535))
				{
					iVar1 = Global_1965535;
					bVar0 = true;
				}
			}
			else if (__LIB_10__.func_184(iParam0, iParam3) && __LIB_19__.func_415(PLAYER::PLAYER_PED_ID()))
			{
				if (__LIB_6__.func_369(PLAYER::PLAYER_PED_ID()))
				{
					iVar1 = Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[0];
				}
				else
				{
					iVar1 = Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_465.f_5[1];
				}
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					bVar0 = true;
				}
			}
			else if (__LIB_10__.func_484(iParam0, iParam3) && __LIB_9__.func_942())
			{
				iVar1 = Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_484;
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					bVar0 = true;
				}
			}
			else
			{
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			}
			if (ENTITY::DOES_ENTITY_EXIST(iVar1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar1, false))
				{
					if (!ENTITY::IS_ENTITY_UPSIDEDOWN(iVar1))
					{
						if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar1, -1, false) == PLAYER::PLAYER_PED_ID())
						{
							if (!PED::IS_PED_BEING_JACKED(PLAYER::PLAYER_PED_ID()) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
							{
								if (!ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar1) && !__LIB_10__.func_183(iParam0, iParam3))
								{
									bVar0 = true;
								}
							}
						}
					}
				}
			}
			if (!bVar0)
			{
				return 0;
			}
		}
		if (((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || TASK::IS_PED_GETTING_UP(PLAYER::PLAYER_PED_ID())) || FIRE::IS_ENTITY_ON_FIRE(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true)) || (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !bParam2)) || (!PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID()) && !bParam2)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(PLAYER::PLAYER_PED_ID())) || HUD::IS_HUD_COMPONENT_ACTIVE(19)) || CAM::IS_FIRST_PERSON_AIM_CAM_ACTIVE()) || __LIB_0__.func_134()) || func_3369(iParam0)) || __LIB_0__.func_497()) || __LIB_0__.func_663()) || __LIB_0__.func_511())
		{
			return 0;
		}
		if ((((__LIB_0__.func_198() || __LIB_0__.func_497()) || Global_31962) || Global_1836610) || Global_1836746)
		{
			return 0;
		}
		if ((!__LIB_0__.func_527() && __LIB_0__.func_190()) && (__LIB_0__.func_299(iParam0) != 4 || MISC::GET_HASH_KEY(&(Global_23150.f_1)) != joaat("PIM_TITLE1")))
		{
			return 0;
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (Global_1574964)
			{
				return 0;
			}
			if (BitTest(Global_2815059.f_428.f_5, 0))
			{
				return 0;
			}
			if (__LIB_0__.func_706())
			{
				return 0;
			}
			if (__LIB_9__.func_281(PLAYER::PLAYER_ID()))
			{
				if (__LIB_20__.func_114(iParam0, __LIB_0__.func_396(PLAYER::PLAYER_ID())))
				{
					if (__LIB_10__.func_483(iParam0))
					{
						return 0;
					}
				}
			}
			if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 21))
			{
				return 0;
			}
			if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 25))
			{
				return 0;
			}
			if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 3)
			{
				if (__LIB_1__.func_337(PLAYER::PLAYER_ID()) == 8 || __LIB_1__.func_337(PLAYER::PLAYER_ID()) == 9)
				{
					return 0;
				}
			}
			if (Global_2815059.f_28.f_41)
			{
				if (__LIB_0__.func_299(iParam0) == 4)
				{
					return 0;
				}
			}
			if ((BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_30, 14) || BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_30, 11)) || Global_1946179)
			{
				if (__LIB_0__.func_299(iParam0) == 4)
				{
					return 0;
				}
			}
			if (Global_1574632.f_18 != 0)
			{
				return 0;
			}
			if (!__LIB_0__.func_581(PLAYER::PLAYER_ID()))
			{
				if ((__LIB_0__.func_286(PLAYER::PLAYER_ID()) && ((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 159 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 164) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 142) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 148) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 153)) || __LIB_20__.func_104() != 0)
				{
					if (__LIB_0__.func_299(iParam0) == 1)
					{
						return 0;
					}
					if (__LIB_0__.func_299(iParam0) == 0)
					{
						return 0;
					}
				}
				else if ((((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 167 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 168) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 169) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 190) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 191) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 192) && __LIB_20__.func_104() == 0)
				{
					if (__LIB_0__.func_299(iParam0) == 1)
					{
						return 1;
					}
				}
			}
			else
			{
				if (__LIB_0__.func_286(PLAYER::PLAYER_ID()) && ((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 159 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 164) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 142) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 148) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 153))
				{
					if (__LIB_0__.func_299(iParam0) == 3)
					{
						return 0;
					}
				}
				if ((__LIB_0__.func_286(PLAYER::PLAYER_ID()) && ((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 159 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 164) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 142) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 148) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 153)) || __LIB_20__.func_104() != 0)
				{
					if (__LIB_0__.func_299(iParam0) == 1)
					{
						return 0;
					}
					if (__LIB_0__.func_299(iParam0) == 0)
					{
						return 0;
					}
				}
				else if ((((((__LIB_0__.func_396(PLAYER::PLAYER_ID()) == 167 || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 168) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 169) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 190) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 191) || __LIB_0__.func_396(PLAYER::PLAYER_ID()) == 192) && __LIB_20__.func_104() == 0)
				{
					if (__LIB_0__.func_299(iParam0) == 1)
					{
						return 1;
					}
				}
			}
		}
		if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 4 || __LIB_1__.func_298(PLAYER::PLAYER_ID(), 14))
		{
			if (__LIB_0__.func_299(iParam0) != 3)
			{
				return 0;
			}
			else
			{
				return 1;
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (__LIB_20__.func_115(iVar2))
			{
				if (__LIB_0__.func_299(iParam0) != 3)
				{
					return 0;
				}
				else
				{
					return 1;
				}
			}
		}
		if (iParam0 == 50)
		{
			if (__LIB_11__.func_461(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
			{
				return 0;
			}
			if (((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) || __LIB_4__.func_61(PLAYER::PLAYER_PED_ID()) > 9) || Global_2667225.f_2681) || BitTest(Global_1946250.f_4, 2))
			{
				return 0;
			}
		}
		return 1;
	}
	return 0;
}

int func_198()//Position - 0x1BBE90
{
	if (__LIB_6__.func_841(1000))
	{
		return 1;
	}
	return 0;
}

void func_199()//Position - 0x1BE7D2
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	if (__LIB_6__.func_369(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = 1;
	}
	else if (__LIB_6__.func_368(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = 2;
	}
	TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
	iVar1 = __LIB_20__.func_117(iVar0);
	Var2 = { __LIB_10__.func_495(iVar1, iVar0) };
	if (__LIB_0__.func_86(Var2))
	{
		return;
	}
	if (!__LIB_0__.func_394(__LIB_0__.func_85(PLAYER::PLAYER_ID()), Var2, 0.01f, 0))
	{
		TASK::TASK_GO_STRAIGHT_TO_COORD(PLAYER::PLAYER_PED_ID(), Var2, 1f, 4000, __LIB_10__.func_494(iVar1, iVar0), 0.1f);
	}
	else
	{
		TASK::TASK_ACHIEVE_HEADING(PLAYER::PLAYER_PED_ID(), __LIB_10__.func_494(iVar1, iVar0), 0);
	}
}

int func_200()//Position - 0x1C0051
{
	int iVar0;
	if (((INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Meet_rm") || Global_1957730) || Global_1946244 != 7) || SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("am_mp_car_meet_property")) <= 0)
	{
		return 0;
	}
	if (!__LIB_5__.func_570(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if ((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	iVar0 = 201;
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		iVar0 = 223;
	}
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, iVar0))
	{
		__LIB_0__.func_495(&uLocal_217, 0, 0);
		return 1;
	}
	if (((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || BitTest(iLocal_201, 4)) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2)) || !__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1)) || !__LIB_2__.func_47(&uLocal_217, 3000, 0))
	{
		return 0;
	}
	if (MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_1), "INST_MENU_TTL" /* GXT: TEST TRACK */))
	{
		return 0;
	}
	if (__LIB_20__.func_123())
	{
		return 0;
	}
	if (__LIB_2__.func_571(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	return 1;
}

int func_201()//Position - 0x1C0321
{
	if (Global_262145.f_25915 /* Tunable: -1090183715 */)
	{
		return 0;
	}
	if (__LIB_0__.func_706())
	{
		return 0;
	}
	if (__LIB_20__.func_94())
	{
		if (!__LIB_0__.func_113(joaat("rcbandito")))
		{
			return 0;
		}
		if (PLAYER::PLAYER_ID() != Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
		{
			return 0;
		}
		if ((HUD::IS_PAUSE_MENU_ACTIVE() || CAM::IS_SCREEN_FADING_OUT()) || CAM::IS_SCREEN_FADED_OUT())
		{
			return 0;
		}
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		MISC::CLEAR_BIT(&iLocal_201, 30);
		if ((!NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_1__.func_352(PLAYER::PLAYER_ID())) && !__LIB_1__.func_168())
		{
			MISC::CLEAR_BIT(&iLocal_201, 4);
		}
	}
	else if ((((((((((__LIB_0__.func_661() || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f) || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || !__LIB_10__.func_51(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
	{
		return 0;
	}
	if (((((((((PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 113) || __LIB_0__.func_661()) || __LIB_2__.func_417(PLAYER::PLAYER_ID())) || PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) || (!__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1) && !__LIB_20__.func_94())) || BitTest(iLocal_201, 4)) || __LIB_9__.func_949()) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0) || __LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	if (__LIB_6__.func_25() == 0)
	{
		if (INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Arena_Mod_Rm2") && INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Arena_Mod_Rm"))
		{
			return 0;
		}
		if (__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 == PLAYER::PLAYER_ID() && __LIB_9__.func_100(PLAYER::PLAYER_ID()))
			{
				if (__LIB_20__.func_94())
				{
					if (TASK::IS_PED_RUNNING(PLAYER::PLAYER_PED_ID()))
					{
						return 0;
					}
				}
			}
		}
	}
	else if (INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Mod2_Room"))
	{
		return 0;
	}
	if (__LIB_9__.func_951(PLAYER::PLAYER_ID()))
	{
		if (__LIB_6__.func_25() == 0)
		{
			if (INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) != joaat("Arena_Mod_Rm"))
			{
				if (__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
				{
					if (!BitTest(iLocal_201, 30))
					{
						if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !HUD::IS_HELP_MESSAGE_ON_SCREEN())
						{
							__LIB_0__.func_151("AREAN_WORKSH_OC" /* GXT: You already have a vehicle parked in the Workshop area. Move it to modify this vehicle instead. */, -1);
							MISC::SET_BIT(&iLocal_201, 30);
						}
					}
				}
				return 0;
			}
		}
		else if (__LIB_0__.func_293(PLAYER::PLAYER_ID(), -1))
		{
			if (!__LIB_10__.func_492())
			{
				if (!BitTest(iLocal_201, 30))
				{
					if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !HUD::IS_HELP_MESSAGE_ON_SCREEN())
					{
						__LIB_0__.func_151("AREAN_WORKSH_OC" /* GXT: You already have a vehicle parked in the Workshop area. Move it to modify this vehicle instead. */, -1);
						MISC::SET_BIT(&iLocal_201, 30);
					}
				}
				return 0;
			}
		}
	}
	return 1;
}

void func_202()//Position - 0x1C162C
{
	int iVar0;
	int iVar1;
	Global_1585125 = __LIB_0__.func_714(joaat("MPPLY_IFPUMA"));
	if (Global_1585125 == 0)
	{
		if (__LIB_20__.func_130())
		{
			iVar0 = 0;
			while (iVar0 < 363)
			{
				if (Global_1585857[iVar0 /*142*/].f_66 != 0)
				{
					if (__LIB_10__.func_784(Global_1585857[iVar0 /*142*/].f_1))
					{
						iVar1 = MISC::GET_HASH_KEY(&(Global_1585857[iVar0 /*142*/].f_1));
						Global_1585125 = iVar1;
						__LIB_0__.func_779(joaat("MPPLY_IFPUMA"), Global_1585125);
						return;
					}
				}
				iVar0++;
			}
			if (!__LIB_10__.func_313())
			{
				iVar0 = 0;
				while (iVar0 < 30)
				{
					if (__LIB_10__.func_784(Global_109919[iVar0 /*4*/]))
					{
						iVar1 = MISC::GET_HASH_KEY(&(Global_109919[iVar0 /*4*/]));
						Global_1585125 = iVar1;
						__LIB_0__.func_779(joaat("MPPLY_IFPUMA"), Global_1585125);
						return;
					}
					iVar0++;
				}
			}
			Global_1585125 = -1;
		}
		else
		{
			Global_1585125 = -1;
		}
		__LIB_0__.func_779(joaat("MPPLY_IFPUMA"), Global_1585125);
	}
}

void func_203(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x1C465F
{
	struct<4> Var0;
	switch (iParam0)
	{
		case 1:
			*uParam1 = { 232.3305f, -978.2742f, -99.9999f };
			*uParam2 = 109.9817f;
			break;
		case 2:
			*uParam1 = { 1055.6757f, -2979.6812f, -39.9998f };
			*uParam2 = 240.5175f;
			break;
		case 3:
			*uParam1 = { 963.1391f, -2989.9492f, -40.647f };
			*uParam2 = 145.5505f;
			break;
		case 6:
			__LIB_18__.func_381(103, 957, &Var0, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			break;
		case 7:
			__LIB_18__.func_381(106, 957, &Var0, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			break;
		case 8:
			__LIB_18__.func_381(109, 957, &Var0, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			break;
		case 9:
			__LIB_18__.func_381(112, 957, &Var0, 109, 1);
			*uParam1 = { Var0 };
			*uParam2 = Var0.f_3.f_2;
			break;
		case 4:
			*uParam1 = { 1097.9149f, -3158.7808f, -38.5186f };
			*uParam2 = 297.3401f;
			break;
		case 5:
			*uParam1 = { 1001.8054f, -3153.558f, -39.9077f };
			*uParam2 = 123.7145f;
			break;
		case 10:
			*uParam1 = { 1100.2329f, -2999.4558f, -39.9f };
			*uParam2 = 289.8913f;
			break;
		case 11:
			*uParam1 = { 834.0781f, -3243.958f, -99.6991f };
			*uParam2 = 313.129f;
			break;
		case 12:
			*uParam1 = { -1294.7067f, -3003.859f, -49.4896f };
			*uParam2 = 171.8827f;
			break;
		case 13:
			*uParam1 = { 519.1105f, 4748.473f, -69.9999f };
			*uParam2 = 302.8558f;
			break;
		case 14:
			*uParam1 = { 486.8096f, 4765.4497f, -59.9938f };
			*uParam2 = 38.7659f;
			break;
		case 15:
			*uParam1 = { -1497.9567f, -3002.7698f, -83.2069f };
			*uParam2 = 52.5724f;
			break;
		case 16:
			*uParam1 = { -1419.1652f, -3015.4885f, -79.1556f };
			*uParam2 = 115.76f;
			break;
		case 17:
			*uParam1 = { 210.4078f, 5184.9917f, -89.0003f };
			*uParam2 = 137.3959f;
			break;
		case 18:
			*uParam1 = { -2172.4958f, 1158.008f, -24.3721f };
			*uParam2 = 257.4376f;
			break;
		case 20:
			*uParam1 = { -1062.8873f, -80.4686f, -91.2f };
			*uParam2 = 193.2372f;
			break;
	}
}

void func_204()//Position - 0x1C592C
{
	if (__LIB_0__.func_582() != __LIB_0__.func_160())
	{
		if (!__LIB_9__.func_962())
		{
			if (__LIB_20__.func_29() || __LIB_20__.func_57())
			{
				if (__LIB_9__.func_644(__LIB_0__.func_582()) && __LIB_3__.func_583(PLAYER::PLAYER_ID()))
				{
					if (!BitTest(iLocal_201, 19))
					{
						__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
						CAM::DO_SCREEN_FADE_OUT(500);
						MISC::SET_BIT(&iLocal_201, 19);
						__LIB_3__.func_577(1);
					}
					else if (CAM::IS_SCREEN_FADED_OUT())
					{
						if (__LIB_0__.func_582() == PLAYER::PLAYER_ID())
						{
							__LIB_3__.func_579(__LIB_0__.func_582(), 0);
						}
					}
				}
			}
			else if (__LIB_19__.func_987() || __LIB_19__.func_986())
			{
				if (__LIB_9__.func_644(__LIB_0__.func_582()))
				{
					if (!BitTest(iLocal_201, 19))
					{
						__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
						CAM::DO_SCREEN_FADE_OUT(500);
						MISC::SET_BIT(&iLocal_201, 19);
						__LIB_3__.func_577(1);
					}
					else if (CAM::IS_SCREEN_FADED_OUT())
					{
						if (__LIB_0__.func_582() == PLAYER::PLAYER_ID())
						{
							__LIB_3__.func_579(__LIB_0__.func_582(), 0);
						}
					}
				}
			}
		}
	}
}

void func_205(int iParam0)//Position - 0x1C651A
{
	struct<14> Var0;
	int iVar1;
	int iVar2;
	Var0.f_2 = 4;
	Var0.f_7 = 4;
	if (SCRIPT::GET_EVENT_DATA(1, iParam0, &Var0, 14))
	{
		iVar1 = 0;
		while (iVar1 <= 3)
		{
			if (iVar1 >= 0 && iVar1 < 4)
			{
				if (Var0.f_2[iVar1] != __LIB_0__.func_160())
				{
					if (PLAYER::PLAYER_ID() == Var0.f_2[iVar1])
					{
						Local_104[PLAYER::PLAYER_ID() /*17*/].f_7 = iVar1;
						Global_1835008[iVar1 /*103*/].f_101 = Var0.f_7[iVar1];
						if (!Var0.f_13)
						{
							iLocal_219 = Var0.f_12;
						}
						else
						{
							iLocal_219 = 3;
						}
						if (((Var0.f_12 == 2 || Var0.f_12 == 1) && Global_1835008[iVar1 /*103*/].f_101 != -1) && !Var0.f_13)
						{
							__LIB_3__.func_582(1);
							CAM::DO_SCREEN_FADE_OUT(500);
						}
						else if (Var0.f_12 == 0 || Var0.f_13)
						{
							__LIB_3__.func_582(0);
						}
						if (Global_1835008[iVar1 /*103*/].f_101 == -1)
						{
							__LIB_19__.func_961(PLAYER::PLAYER_ID(), 1);
						}
						else
						{
							Global_1835008[iVar1 /*103*/].f_100 = PLAYER::PLAYER_ID();
							__LIB_19__.func_961(PLAYER::PLAYER_ID(), 0);
						}
					}
				}
				if (PLAYER::PLAYER_ID() == __LIB_0__.func_582())
				{
					if (Var0.f_7[iVar1] != -1)
					{
						iVar2++;
					}
					if (PLAYER::PLAYER_ID() == Var0.f_2[iVar1])
					{
						Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_381 = Var0.f_7[iVar1];
					}
				}
			}
			if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
			{
				__LIB_0__.func_579(&(Local_103.f_37));
			}
			iVar1++;
		}
		if (PLAYER::PLAYER_ID() == __LIB_0__.func_582())
		{
			if (iVar2 > 0 && iVar2 < 5)
			{
				iLocal_220 = iVar2;
			}
			else
			{
				iLocal_220 = 0;
			}
		}
	}
}

void func_206()//Position - 0x1C6D1B
{
	int iVar0;
	if (!__LIB_20__.func_135())
	{
		return;
	}
	if (PLAYER::PLAYER_ID() == __LIB_0__.func_160())
	{
		return;
	}
	iVar0 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9;
	if (__LIB_10__.func_530())
	{
		iVar0 = Global_1853184;
	}
	if (iVar0 != __LIB_0__.func_160() && PLAYER::PLAYER_ID() == iVar0)
	{
		if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
		{
			if (!__LIB_0__.func_649(&uLocal_575))
			{
				NETWORK::NETWORK_REQUEST_TO_BE_HOST_OF_THIS_SCRIPT();
				__LIB_0__.func_580(&uLocal_575, 0, 0);
			}
			else if (__LIB_2__.func_47(&uLocal_575, 2000, 0))
			{
				__LIB_0__.func_579(&uLocal_575);
			}
		}
		else if (!BitTest(iLocal_201, 27))
		{
			if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_12) && !ENTITY::IS_ENTITY_DEAD(Local_124.f_12, false))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
				{
					NETWORK::SET_NETWORK_ID_CAN_MIGRATE(NETWORK::PED_TO_NET(Local_124.f_12), false);
					MISC::SET_BIT(&iLocal_201, 27);
				}
				else
				{
					NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Local_124.f_12);
				}
			}
		}
	}
}

void func_207()//Position - 0x1C74CB
{
	if (Global_1853205)
	{
		if (Global_1853185 != __LIB_0__.func_160())
		{
			if (!__LIB_3__.func_439(Global_1853185))
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					if (!ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
					{
						MISC::CLEAR_AREA(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 0.5f, false, false, false, false);
						TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
						if (((!PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_DIVING(PLAYER::PLAYER_PED_ID())) && !PED::IS_PED_LANDING(PLAYER::PLAYER_PED_ID())) && !PED::IS_PED_ON_VEHICLE(PLAYER::PLAYER_PED_ID()))
						{
							if (__LIB_2__.func_47(&Global_1853206, 2000, 0))
							{
								if (!__LIB_9__.func_949())
								{
									__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
									CAM::DO_SCREEN_FADE_IN(500);
								}
								Global_1853205 = 0;
								__LIB_0__.func_579(&Global_1853206);
							}
						}
					}
				}
			}
		}
	}
}

void func_208()//Position - 0x1C7979
{
	if (__LIB_10__.func_554())
	{
		if (__LIB_5__.func_97(PLAYER::PLAYER_ID(), 0))
		{
			if (Global_1853184 != __LIB_0__.func_160())
			{
				if (PLAYER::PLAYER_ID() == Global_1853184)
				{
					if ((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && !BitTest(uLocal_202, 9))
					{
						VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, true);
						MISC::SET_BIT(&uLocal_202, 9);
					}
				}
				if (AUDIO::IS_AUDIO_SCENE_ACTIVE("MP_CAR_MOD_SHOP_OFFICE"))
				{
					if (PLAYER::PLAYER_ID() == Global_1853184)
					{
						if (__LIB_9__.func_935(PLAYER::PLAYER_ID()))
						{
							if (ENTITY::DOES_ENTITY_EXIST(iLocal_118))
							{
								AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(iLocal_118, "PLAYER_GROUP", 0f);
							}
						}
					}
					else if (__LIB_9__.func_935(Global_1853184))
					{
						if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Global_1853184), false))
						{
							iLocal_118 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Global_1853184), false);
						}
						if (ENTITY::DOES_ENTITY_EXIST(iLocal_118))
						{
							AUDIO::ADD_ENTITY_TO_AUDIO_MIX_GROUP(iLocal_118, "PLAYER_GROUP", 0f);
						}
					}
				}
			}
		}
		else if (Global_1853184 != __LIB_0__.func_160())
		{
			if (PLAYER::PLAYER_ID() == Global_1853184)
			{
				if ((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && BitTest(uLocal_202, 9))
				{
					VEHICLE::SET_VEHICLE_IN_CAR_MOD_SHOP(Local_124.f_406, false);
					MISC::CLEAR_BIT(&uLocal_202, 9);
				}
			}
			if (__LIB_9__.func_935(Global_1853184))
			{
				if (AUDIO::IS_AUDIO_SCENE_ACTIVE("MP_CAR_MOD_SHOP_OFFICE"))
				{
					AUDIO::STOP_AUDIO_SCENE("MP_CAR_MOD_SHOP_OFFICE");
					if (Global_1853184 != __LIB_0__.func_160())
					{
						if (ENTITY::DOES_ENTITY_EXIST(iLocal_118))
						{
							AUDIO::REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(iLocal_118, 0f);
						}
					}
				}
			}
		}
	}
}

void func_209()//Position - 0x1C7B57
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_10__.func_554() || __LIB_10__.func_553())
	{
		if (__LIB_0__.func_154(PLAYER::PLAYER_ID(), 1, 1))
		{
			iVar0 = 0;
			while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
			{
				if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
				{
					iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
					if (__LIB_0__.func_154(iVar1, 1, 1))
					{
						if (__LIB_5__.func_97(iVar1, 0) || __LIB_10__.func_553())
						{
							if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
							{
								iVar2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
								if (ENTITY::DOES_ENTITY_EXIST(iVar2))
								{
									if (!PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(iVar1), iVar2, false) && BitTest(Local_104[iVar1 /*17*/].f_6, 6))
									{
										NETWORK::SET_PLAYER_INVISIBLE_LOCALLY(iVar1, false);
									}
								}
							}
						}
					}
				}
				iVar0++;
			}
		}
	}
}

int func_210()//Position - 0x1C80E7
{
	int iVar0;
	struct<4> Var1;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_10__.func_553())
		{
			iVar0 = Local_124.f_12.f_2;
		}
		else
		{
			iVar0 = Local_124.f_12;
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (!BitTest(Local_103.f_8, 8))
			{
				if (__LIB_10__.func_554() || __LIB_10__.func_395())
				{
					Local_103.f_42 = "amb@world_human_tourist_map@female@idle_a";
					Local_103.f_43 = "idle_c";
				}
				else if (__LIB_10__.func_553())
				{
					if (Local_103.f_49 == 1)
					{
						Local_103.f_42 = "anim@amb@range@weapon_test@";
						Local_103.f_43 = "weapon_test_busrt_01_amy_skater_01";
						Local_103.f_44 = "weapon_test_busrt_01_w_ar_assaultriflemk2";
					}
				}
				else
				{
					Local_103.f_42 = "MOVE_P_M_ONE_IDLES@GENERIC";
					Local_103.f_43 = "fidget_rub_chin";
				}
				STREAMING::REQUEST_ANIM_DICT(Local_103.f_42);
				if (STREAMING::HAS_ANIM_DICT_LOADED(Local_103.f_42))
				{
					if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
					{
						__LIB_20__.func_140(&Var1);
						Local_103.f_40 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(Var1, Var1.f_3, 2, true, false, 1f, 0f, 1f);
						NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(iVar0, Local_103.f_40, Local_103.f_42, Local_103.f_43, 4f, -4f, 32781, 0, 1000f, 0);
						if (__LIB_10__.func_553())
						{
							NETWORK::NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Local_103.f_48, Local_103.f_40, Local_103.f_42, Local_103.f_44, 4f, -4f, 32781);
						}
						NETWORK::NETWORK_START_SYNCHRONISED_SCENE(Local_103.f_40);
						MISC::SET_BIT(&(Local_103.f_8), 8);
						return 1;
					}
					else
					{
						NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(iVar0));
					}
				}
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_211()//Position - 0x1C8719
{
	int iVar0;
	if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1) && !__LIB_1__.func_174(PLAYER::PLAYER_ID()))
	{
		if (__LIB_10__.func_554() || __LIB_20__.func_147())
		{
			if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false) && !__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
				{
					iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false);
					if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
					{
						if (PLAYER::PLAYER_PED_ID() != VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false))
						{
							if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 2))
							{
								if (__LIB_10__.func_17())
								{
									if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("halftrack")))
									{
										if (VEHICLE::IS_TURRET_SEAT(iVar0, __LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0)))
										{
											return;
										}
									}
								}
								__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
								MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 2);
								if (__LIB_10__.func_554())
								{
									__LIB_0__.func_579(&uLocal_566);
									__LIB_0__.func_580(&uLocal_566, 0, 0);
									iLocal_568 = 1;
									if (__LIB_9__.func_935(Local_103.f_31[iLocal_114]))
									{
										Global_103226 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									}
									__LIB_9__.func_904(1);
								}
								if (__LIB_10__.func_473() && Global_1853191 != __LIB_0__.func_160())
								{
									CAM::DO_SCREEN_FADE_OUT(500);
									__LIB_9__.func_964(1);
								}
							}
						}
					}
				}
			}
			else if (BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 2))
			{
				MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 2);
			}
			if (__LIB_10__.func_554())
			{
				if (CAM::IS_SCREEN_FADED_OUT())
				{
					if (iLocal_568)
					{
						if (!__LIB_0__.func_649(&uLocal_566))
						{
							__LIB_0__.func_580(&uLocal_566, 0, 0);
						}
						else if (__LIB_2__.func_47(&uLocal_566, 15000, 0))
						{
							if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
							{
								CAM::DO_SCREEN_FADE_IN(500);
								__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
								__LIB_9__.func_904(0);
								MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 27);
								iLocal_568 = 0;
								__LIB_0__.func_579(&uLocal_566);
							}
							else
							{
								TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
							}
						}
					}
				}
				else if (Global_1853184 != __LIB_0__.func_160())
				{
					if ((CAM::IS_SCREEN_FADED_IN() && (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || !__LIB_9__.func_968(PLAYER::PLAYER_ID()))) && !BitTest(Global_2689235[Global_1853184 /*453*/].f_197, 26))
					{
						if (iLocal_568)
						{
							iLocal_568 = 0;
							__LIB_0__.func_579(&uLocal_566);
						}
					}
				}
			}
			else if (__LIB_10__.func_467())
			{
				if (BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 2))
				{
					if (!__LIB_0__.func_154(Local_103.f_31[iLocal_114], 0, 1))
					{
						TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
						__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
						MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 2);
					}
				}
			}
		}
	}
}

void func_212()//Position - 0x1C8A5D
{
	int iVar0;
	if (__LIB_20__.func_295(0))
	{
		if (__LIB_0__.func_154(Local_103.f_31[iLocal_114], 1, 1) && !__LIB_1__.func_174(PLAYER::PLAYER_ID()))
		{
			if (__LIB_4__.func_238(Local_103.f_31[iLocal_114]))
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false))
				{
					iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114]), false);
					if (ENTITY::DOES_ENTITY_EXIST(iVar0))
					{
						if (__LIB_10__.func_513(PLAYER::PLAYER_ID(), Local_103.f_31[iLocal_114]) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
						{
							if (((CAM::IS_SCREEN_FADED_OUT() && !CAM::IS_SCREEN_FADING_IN()) && !CAM::IS_SCREEN_FADING_OUT()) || (__LIB_20__.func_147() && !__LIB_10__.func_469()))
							{
								if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 0) && (!__LIB_2__.func_731(PLAYER::PLAYER_ID()) || __LIB_10__.func_554()))
								{
									MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 0);
								}
							}
							if (PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
							{
								__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
							}
						}
						else if (!__LIB_1__.func_154(PLAYER::PLAYER_ID()))
						{
							if (!NETWORK::NETWORK_IS_ENTITY_FADING(iVar0) && !NETWORK::NETWORK_IS_ENTITY_FADING(PLAYER::GET_PLAYER_PED(Local_103.f_31[iLocal_114])))
							{
								if (!BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 0) && (!__LIB_2__.func_731(PLAYER::PLAYER_ID()) || __LIB_10__.func_554()))
								{
									MISC::SET_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 0);
								}
							}
						}
					}
				}
			}
		}
	}
	else if (BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114], 0))
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
			{
				__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
			}
		}
		MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_9[iLocal_114]), 0);
	}
}

void func_213(int iParam0)//Position - 0x1C9C53
{
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (__LIB_20__.func_295(0))
		{
			if ((__LIB_0__.func_154(PLAYER::INT_TO_PLAYERINDEX(iLocal_113), 1, 1) && BitTest(Global_2689235[iLocal_113 /*453*/].f_197, 9)) && NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(PLAYER::INT_TO_PLAYERINDEX(iLocal_113), SCRIPT::GET_THIS_SCRIPT_NAME(), Global_1945918))
			{
				Local_103.f_31[iParam0] = PLAYER::INT_TO_PLAYERINDEX(iLocal_113);
			}
			if (__LIB_0__.func_154(Local_103.f_31[iParam0], 1, 1))
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false) || PED::IS_PED_ON_ANY_BIKE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0])))
				{
					if (!BitTest(Local_103.f_8, 3))
					{
						Local_103.f_45 = { ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), true) };
						MISC::SET_BIT(&(Local_103.f_8), 3);
					}
					if (VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), false, true) == 0)
					{
						if (!BitTest(Local_103.f_10[iParam0], 2) && !__LIB_10__.func_521())
						{
							MISC::SET_BIT(&(Local_103.f_10[iParam0]), 2);
						}
						if (BitTest(Local_103.f_8, 0))
						{
							MISC::CLEAR_BIT(&(Local_103.f_8), 0);
						}
					}
					else
					{
						if (!BitTest(Local_103.f_8, 0))
						{
							MISC::SET_BIT(&(Local_103.f_8), 0);
						}
						if (BitTest(Local_103.f_10[iParam0], 2))
						{
							MISC::CLEAR_BIT(&(Local_103.f_10[iParam0]), 2);
						}
					}
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false))
					{
						if (ENTITY::DOES_ENTITY_EXIST(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false)))
						{
							if (VEHICLE::GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), Local_103.f_31[iParam0]))
							{
								Local_103.f_36 = VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), false, true);
							}
						}
					}
					if (!__LIB_4__.func_238(Local_103.f_31[iParam0]))
					{
						if (!BitTest(Local_103.f_8, 4))
						{
							MISC::SET_BIT(&(Local_103.f_8), 4);
						}
					}
					else if (BitTest(Local_103.f_8, 4))
					{
						MISC::CLEAR_BIT(&(Local_103.f_8), 4);
					}
				}
			}
		}
		else if (BitTest(Local_103.f_8, 4))
		{
			MISC::CLEAR_BIT(&(Local_103.f_8), 4);
		}
	}
	if (BitTest(Local_103.f_8, 0))
	{
		if (__LIB_20__.func_295(0))
		{
			if (__LIB_10__.func_530() || (__LIB_10__.func_554() && Global_262145.f_19175 /* Tunable: -1100917885 */))
			{
				if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), false))
				{
					if (PLAYER::PLAYER_PED_ID() != VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), -1, false))
					{
						TASK::TASK_LEAVE_VEHICLE(PLAYER::PLAYER_PED_ID(), PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), 0);
						__LIB_10__.func_520(1);
					}
				}
				if (__LIB_10__.func_519())
				{
					if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1)
					{
						__LIB_10__.func_520(0);
					}
				}
			}
		}
	}
	if (__LIB_10__.func_554())
	{
		if (__LIB_20__.func_295(0))
		{
			if ((BitTest(Local_103.f_8, 4) && !__LIB_9__.func_967(PLAYER::PLAYER_ID())) && !__LIB_5__.func_97(PLAYER::PLAYER_ID(), 0))
			{
				if (__LIB_0__.func_154(Local_103.f_31[iParam0], 1, 1))
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(Local_103.f_31[iParam0]), false), false))
						{
							if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_ENTER_VEHICLE")) != 1)
							{
								if (!HUD::IS_WARNING_MESSAGE_ACTIVE())
								{
									if (!Global_262145.f_19175 /* Tunable: -1100917885 */)
									{
										__LIB_9__.func_966(1);
										if (PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
										{
											__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
										}
									}
									else if (PLAYER::PLAYER_ID() == Local_103.f_31[iParam0])
									{
										__LIB_9__.func_966(1);
									}
								}
								else if (!BitTest(Global_103317, 0))
								{
									TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
									if (BitTest(Local_104[PLAYER::PLAYER_ID() /*17*/].f_6, 3))
									{
										MISC::CLEAR_BIT(&(Local_104[PLAYER::PLAYER_ID() /*17*/].f_6), 3);
										MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_476), 7);
									}
									__LIB_9__.func_948(0);
									__LIB_10__.func_36(-1);
								}
							}
						}
					}
				}
			}
		}
		else if (__LIB_9__.func_967(PLAYER::PLAYER_ID()))
		{
			if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
			{
				__LIB_18__.func_465(PLAYER::PLAYER_ID(), 0, 0, 0);
			}
			__LIB_9__.func_966(0);
		}
		if (BitTest(Local_103.f_10[iParam0], 2))
		{
			__LIB_10__.func_32(1);
		}
		else
		{
			__LIB_10__.func_32(0);
		}
	}
}

void func_214()//Position - 0x1CA6AE
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = 0;
	while (iVar0 <= (__LIB_19__.func_978() - 1))
	{
		if (Local_103.f_15[iVar0] != -1)
		{
			if (((!BitTest(Local_104[Local_103.f_15[iVar0] /*17*/].f_6, 3) && !__LIB_1__.func_174(PLAYER::INT_TO_PLAYERINDEX(Local_103.f_15[iVar0]))) || BitTest(Local_104[Local_103.f_15[iVar0] /*17*/].f_6, 7)) || __LIB_10__.func_531())
			{
				if (Local_103.f_15[iVar0] != -1)
				{
					Local_103.f_15[iVar0] = -1;
					Local_103.f_20[iVar0] = -1;
				}
			}
		}
		else
		{
			iVar1 = 0;
			while (iVar1 < 32)
			{
				iVar2 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
				if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar2))
				{
					if ((__LIB_0__.func_154(iVar2, 0, 1) && !__LIB_0__.func_743(iVar2)) && Local_104[iVar1 /*17*/].f_8 == -1)
					{
						if ((BitTest(Local_104[iVar1 /*17*/].f_6, 3) || __LIB_3__.func_439(iVar2)) || __LIB_2__.func_601())
						{
							if (!__LIB_20__.func_300(iVar1))
							{
								Local_103.f_26[iVar0] = iVar1;
								if (__LIB_10__.func_554() || __LIB_10__.func_12())
								{
									if (!__LIB_5__.func_97(PLAYER::PLAYER_ID(), 0))
									{
										if (__LIB_20__.func_141(iVar1, iVar0))
										{
											Local_103.f_15[iVar0] = iVar1;
											Local_103.f_20[iVar0] = iVar0;
										}
									}
									else
									{
										Local_103.f_15[iVar0] = iVar1;
										Local_103.f_20[iVar0] = iVar0;
									}
								}
								else
								{
									Local_103.f_15[iVar0] = iVar1;
									Local_103.f_20[iVar0] = iVar0;
								}
							}
						}
					}
				}
				iVar1++;
			}
		}
		if (Local_103.f_15[iVar0] != -1)
		{
			iVar3 = PLAYER::INT_TO_PLAYERINDEX(Local_103.f_15[iVar0]);
			if (!NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar3) || __LIB_0__.func_743(iVar3))
			{
				if (Local_103.f_15[iVar0] == iVar3)
				{
					Local_103.f_15[iVar0] = -1;
					Local_103.f_20[iVar0] = -1;
					Local_103.f_26[iVar0] = -1;
				}
			}
		}
		if (((((__LIB_10__.func_554() || __LIB_10__.func_469()) || __LIB_10__.func_17()) || __LIB_10__.func_553()) || __LIB_10__.func_12()) || __LIB_10__.func_395())
		{
			if (Local_103.f_15[iVar0] != -1)
			{
				iVar4 = PLAYER::INT_TO_PLAYERINDEX(Local_103.f_15[iVar0]);
				if (__LIB_0__.func_154(iVar4, 1, 1))
				{
					if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(iVar4), false) && !__LIB_1__.func_174(iVar4))
					{
						Local_103.f_15[iVar0] = -1;
						Local_103.f_26[iVar0] = -1;
						Local_103.f_20[iVar0] = -1;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_215()//Position - 0x1CD8DE
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (__LIB_19__.func_978() - 1))
	{
		if (Local_103.f_31[iVar0] != __LIB_0__.func_160())
		{
			if (__LIB_0__.func_154(Local_103.f_31[iVar0], 1, 1) && Local_103.f_31[iVar0] != PLAYER::PLAYER_ID())
			{
				if (__LIB_1__.func_174(Local_103.f_31[iVar0]) && __LIB_10__.func_513(PLAYER::PLAYER_ID(), Local_103.f_31[iVar0]))
				{
					__LIB_6__.func_842();
				}
			}
		}
		iVar0++;
	}
}

void func_216()//Position - 0x1CEDF6
{
	int iVar0;
	var uVar1;
	if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || !__LIB_10__.func_531()) || !ENTITY::DOES_ENTITY_EXIST(Local_124.f_12)) || PED::IS_PED_INJURED(Local_124.f_12)) || PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	if (((!BitTest(Global_100493.f_1466, 7) && !Global_1946250.f_3376) && CAM::IS_SCREEN_FADED_IN()) && __LIB_0__.func_76(PLAYER::PLAYER_PED_ID(), Local_124.f_12, 1) < 10f)
	{
		__LIB_1__.func_415(1);
		if (__LIB_7__.func_156(PLAYER::PLAYER_ID()))
		{
			if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_277, 10))
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_NEWMODTPBUNK", "SPEECH_PARAMS_FORCE", 0);
				MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_277), 10);
			}
			else
			{
				__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_OGREETBUNK", "SPEECH_PARAMS_FORCE", 0);
			}
		}
		else
		{
			__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_MGREETBUNK", "SPEECH_PARAMS_FORCE", 0);
		}
		MISC::SET_BIT(&(Global_100493.f_1466), 7);
	}
	if ((Global_1946250.f_3376 || __LIB_0__.func_76(PLAYER::PLAYER_PED_ID(), Local_124.f_12, 1) > 20f) && BitTest(Global_100493.f_1466, 7))
	{
		__LIB_1__.func_415(1);
		__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_BYEBUNK", "SPEECH_PARAMS_FORCE", 0);
		MISC::CLEAR_BIT(&(Global_100493.f_1466), 7);
	}
	if (!__LIB_0__.func_649(&uLocal_536))
	{
		__LIB_0__.func_580(&uLocal_536, 0, 0);
	}
	if (((__LIB_2__.func_47(&uLocal_536, 3000, 0) && __LIB_0__.func_76(PLAYER::PLAYER_PED_ID(), Local_124.f_12, 0) < 1f) && ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), Local_124.f_12)) && !__LIB_0__.func_86(ENTITY::GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Local_124.f_12)))
	{
		__LIB_1__.func_415(1);
		__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_BUMPBUNK", "SPEECH_PARAMS_FORCE", 0);
		__LIB_0__.func_579(&uLocal_536);
	}
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (!__LIB_0__.func_649(&uLocal_538))
		{
			__LIB_0__.func_580(&uLocal_538, 0, 0);
		}
		if (__LIB_2__.func_47(&uLocal_538, 120000, 0) && !BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_277, 15))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Local_124.f_12))
			{
				__LIB_1__.func_415(1);
				uVar1 = __LIB_20__.func_152(&iVar0);
				if (uVar1 && !BitTest(Global_100493.f_1466, 10))
				{
					if (!__LIB_3__.func_457(iVar0))
					{
						__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_BUYTRUCKBUNK", "SPEECH_PARAMS_FORCE", 1);
					}
					else
					{
						__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_HINTMODTPBUNK", "SPEECH_PARAMS_FORCE", 1);
					}
					MISC::SET_BIT(&(Global_100493.f_1466), 10);
				}
				else
				{
					__LIB_20__.func_34(Local_124.f_12, "WEPSEXPERT_IDLEBUNK", "SPEECH_PARAMS_FORCE", 1);
					MISC::CLEAR_BIT(&(Global_100493.f_1466), 10);
				}
				__LIB_0__.func_579(&uLocal_538);
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(NETWORK::PED_TO_NET(Local_124.f_12));
			}
		}
	}
}

int func_217(var uParam0)//Position - 0x1CF8DB
{
	*uParam0 = __LIB_1__.func_236(PLAYER::PLAYER_ID());
	if (*uParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_20__.func_154(*uParam0) && BitTest(Global_1853348[*uParam0 /*834*/].f_267.f_277, 16))
	{
		return 1;
	}
	return 0;
}

int func_218(var uParam0)//Position - 0x1D0189
{
	*uParam0 = __LIB_1__.func_236(PLAYER::PLAYER_ID());
	if (*uParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_20__.func_155(*uParam0) && BitTest(Global_1853348[*uParam0 /*834*/].f_267.f_277, 16))
	{
		return 1;
	}
	return 0;
}

void func_219()//Position - 0x1D04A3
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (!ENTITY::DOES_ENTITY_EXIST(iVar0) && ENTITY::DOES_ENTITY_EXIST(__LIB_10__.func_538()))
		{
			iVar0 = __LIB_10__.func_538();
		}
		__LIB_20__.func_156();
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (iVar0 != iLocal_196[iLocal_197])
			{
				iLocal_197++;
				if (iLocal_197 >= iLocal_196)
				{
					iLocal_197 = 0;
				}
				iLocal_196[iLocal_197] = iVar0;
			}
		}
	}
	iVar1 = 0;
	while (iVar1 < iLocal_196)
	{
		if (!ENTITY::DOES_ENTITY_EXIST(iLocal_196[iVar1]) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_196[iVar1], false))
		{
			iLocal_196[iVar1] = 0;
		}
		iVar1++;
	}
}

void func_220()//Position - 0x1E54A3
{
	int iVar0;
	if (iLocal_157 == 1)
	{
		iVar0 = __LIB_2__.func_345();
		if (iLocal_158 != -1)
		{
			iVar0 = iLocal_158;
		}
		if (__LIB_2__.func_48(iVar0))
		{
			if (__LIB_2__.func_46(iVar0) == 2)
			{
				iLocal_157 = 2;
				iLocal_159 = iVar0;
			}
			else
			{
				iLocal_157 = 3;
				__LIB_18__.func_226(iVar0);
			}
			iLocal_158 = -1;
		}
	}
	else if (iLocal_157 == 2 || iLocal_157 == 3)
	{
		iLocal_157 = 0;
	}
	if (iLocal_157 == 2)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
	}
	else if (iLocal_157 == 3)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "ERROR", "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
	}
}

void func_221(bool bParam0)//Position - 0x1E974D
{
	struct<13> Var0;
	struct<103> Var1;
	Var1.f_9 = 49;
	Var1.f_59 = 2;
	Var1.f_78 = -1;
	Var1.f_79 = -1;
	Var1.f_96 = -1;
	Var1.f_97 = 1;
	Var1.f_99 = 132;
	Var1.f_100 = -1;
	if (bParam0)
	{
		__LIB_20__.func_161();
	}
	Global_2715699.f_6007 = 0;
	Global_2715699.f_6007.f_1 = { Var1 };
	Global_2715699.f_6007.f_104 = { 0f, 0f, 0f };
	Global_2715699.f_6007.f_107 = 0f;
	Global_2715699.f_6007.f_108 = 0;
	Global_2715699.f_6007.f_109 = 0;
	Global_2715699.f_6007.f_110 = 0;
	Global_2715699.f_6007.f_111 = 0;
	Global_2715699.f_6007.f_112 = -2;
	Global_2715699.f_6007.f_113 = { Var0 };
	Global_2715699.f_6007.f_126 = { Var0 };
	Global_2715699.f_6007.f_139 = { Var0 };
	Global_2715699.f_6007.f_152 = { Var0 };
	Global_2715699.f_6007.f_165 = { Var0 };
	Global_2715699.f_6007.f_178 = { Var0 };
	Global_2715699.f_6007.f_191 = { Var0 };
	Global_2715699.f_6007.f_204 = { Var0 };
	Global_2715699.f_6007.f_217 = { Var0 };
	Global_2715699.f_6007.f_230 = { Var0 };
	Global_2715699.f_6007.f_256 = 0;
	Global_2715699.f_6007.f_257 = 0;
	__LIB_0__.func_579(&(Global_2715699.f_6007.f_259));
	__LIB_0__.func_579(&(Global_2715699.f_6007.f_261));
	__LIB_0__.func_579(&(Global_2715699.f_6007.f_263));
	Global_2715699.f_6007.f_265 = 0;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_769 = 0;
	Global_2715699.f_6007.f_266 = 0;
	Global_2715699.f_6007.f_267 = 0;
	Global_2715699.f_6007.f_268 = 0;
	Global_2715699.f_6007.f_269 = 0;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_769.f_1 = 0;
}

void func_222(char* sParam0)//Position - 0x18A5
{
	__LIB_6__.func_896(&(Global_113386.f_19963.f_1), 1024);
	if (!MISC::IS_STRING_NULL(sParam0))
	{
		__LIB_0__.func_324(sParam0);
	}
}

int func_223(int iParam0, float fParam1, float fParam2)//Position - 0x1C96
{
	int iVar0;
	float fVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(iParam0, false);
				fVar1 = __LIB_10__.func_589(iParam0, 1);
				if (fVar1 > fParam1)
				{
					if (!ENTITY::IS_ENTITY_ON_SCREEN(iVar0) || ENTITY::IS_ENTITY_OCCLUDED(iVar0))
					{
						return 1;
					}
					else if (fParam2 != 0f)
					{
						if (fVar1 > fParam2)
						{
							if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
							{
								return 1;
							}
						}
					}
				}
			}
			else if (__LIB_10__.func_589(iParam0, 1) > fParam1)
			{
				if (!ENTITY::IS_ENTITY_ON_SCREEN(iParam0) || ENTITY::IS_ENTITY_OCCLUDED(iParam0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_224()//Position - 0x5875
{
	__LIB_6__.func_896(&(Global_113386.f_19963.f_1), 2048);
}

void func_225()//Position - 0x8EFE
{
	__LIB_6__.func_896(&(Global_113386.f_19963.f_1), 4194304);
}

int func_226(int iParam0)//Position - 0x96F5
{
	if (__LIB_0__.func_404() && MISC::GET_GAME_TIMER() >= iParam0 + 1000)
	{
		CAM::DO_SCREEN_FADE_OUT(500);
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			SYSTEM::WAIT(0);
		}
		__LIB_6__.func_849(0);
		__LIB_0__.func_296();
		return 1;
	}
	return 0;
}

void func_227(int iParam0, bool bParam1, int iParam2)//Position - 0x9FE3
{
	PLAYER::SET_PLAYER_CONTROL(PLAYER::GET_PLAYER_INDEX(), false, iParam0);
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		FIRE::STOP_FIRE_IN_RANGE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 15f);
	}
	CUTSCENE::SET_PAD_CAN_SHAKE_DURING_CUTSCENE(bParam1);
	__LIB_6__.func_849(0);
	__LIB_7__.func_279(1, 1, iParam2, 0, 0, 0, 0);
	HUD::DISPLAY_RADAR(false);
	HUD::DISPLAY_HUD(false);
	__LIB_9__.func_485(23, 1);
}

int func_228(struct<3> Param0, float fParam1)//Position - 0x162F6
{
	if (__LIB_10__.func_567(Param0, 1) <= fParam1 && !__LIB_10__.func_585())
	{
		return 1;
	}
	return 0;
}

void func_229()//Position - 0x21070
{
	bool bVar0;
	bVar0 = __LIB_0__.func_517(Global_113386.f_19963.f_1, 4096);
	Global_113386.f_19963.f_1 = 0;
	if (bVar0)
	{
		__LIB_6__.func_896(&(Global_113386.f_19963.f_1), 4096);
	}
}

int func_230(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0xF47D
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_41(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_231(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x181F4
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_41(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_232(int* iParam0)//Position - 0x18B74
{
	__LIB_10__.func_598(iParam0, &(iParam0->f_2), iParam0->f_1);
}

void func_233(var uParam0, int iParam1, float fParam2, float fParam3, float fParam4, int iParam5)//Position - 0x5EBE
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	HUD::GET_HUD_COLOUR(1, &iVar0, &iVar1, &iVar2, &uVar3);
	HUD::SET_TEXT_COLOUR(iVar0, iVar1, iVar2, iParam5);
	HUD::SET_TEXT_WRAP(fParam3, fParam4);
	HUD::SET_TEXT_JUSTIFICATION(1);
	HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(14f));
	HUD::SET_TEXT_CENTRE(false);
	HUD::SET_TEXT_FONT(0);
	__LIB_10__.func_580();
	if (uParam0->f_531[iParam1])
	{
		HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT("STRING");
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(&(uParam0->f_71[iParam1 /*16*/]));
	}
	else
	{
		HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(&(uParam0->f_71[iParam1 /*16*/]));
		if (uParam0->f_57[iParam1] == 16 || uParam0->f_57[iParam1] == 17)
		{
			HUD::ADD_TEXT_COMPONENT_INTEGER(uParam0->f_489[iParam1]);
		}
	}
	HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam3, fParam2, 0);
	fVar4 = fParam4;
	switch (uParam0->f_517[iParam1])
	{
		case 0:
			break;
		case 1:
			__LIB_7__.func_172(7, 0, 1, &fVar5, &fVar6, 0);
			GRAPHICS::DRAW_SPRITE("CommonMenu", __LIB_7__.func_159(7, 0), (fParam4 - 0.006f), ((fParam2 + __LIB_10__.func_582(2f)) + (0.25f * fVar6)), fVar5, fVar6, 0f, 255, 255, 255, iParam5, false, 0);
			fVar4 = (fVar4 - ((fVar5 * 0.38f) + 0.006f));
			break;
		case 2:
			__LIB_7__.func_172(5, 0, 1, &fVar5, &fVar6, 0);
			GRAPHICS::DRAW_SPRITE("CommonMenu", __LIB_7__.func_159(5, 0), (fParam4 - 0.006f), ((fParam2 + __LIB_10__.func_582(2f)) + (0.25f * fVar6)), fVar5, fVar6, 0f, 255, 255, 255, iParam5, false, 0);
			fVar4 = (fVar4 - ((fVar5 * 0.38f) + 0.006f));
			break;
		case 3:
			__LIB_7__.func_172(6, 0, 1, &fVar5, &fVar6, 0);
			GRAPHICS::DRAW_SPRITE("CommonMenu", __LIB_7__.func_159(6, 0), (fParam4 - 0.006f), ((fParam2 + __LIB_10__.func_582(2f)) + (0.25f * fVar6)), fVar5, fVar6, 0f, 255, 255, 255, iParam5, false, 0);
			fVar4 = (fVar4 - ((fVar5 * 0.38f) + 0.006f));
			break;
	}
	if (uParam0->f_57[iParam1] == 0)
	{
		return;
	}
	if (uParam0->f_57[iParam1] == 15)
	{
		HUD::SET_TEXT_JUSTIFICATION(1);
	}
	else
	{
		HUD::SET_TEXT_JUSTIFICATION(2);
	}
	HUD::SET_TEXT_SCALE(1f, __LIB_10__.func_576(14f));
	if (uParam0->f_57[iParam1] == 5 || uParam0->f_57[iParam1] == 4)
	{
		HUD::SET_TEXT_WRAP(fParam3, (fVar4 - (0.00078125f * 3f)));
	}
	else
	{
		HUD::SET_TEXT_WRAP(fParam3, (fVar4 + (0.00078125f * 2f)));
	}
	HUD::SET_TEXT_COLOUR(iVar0, iVar1, iVar2, iParam5);
	__LIB_20__.func_169(uParam0->f_489[iParam1], uParam0->f_503[iParam1], fParam4, fParam2, &(uParam0->f_280[iParam1 /*16*/]), uParam0->f_57[iParam1]);
}

void func_234(var uParam0)//Position - 0x7F1A
{
	__LIB_20__.func_173(*uParam0, &(uParam0->f_2), uParam0->f_1);
}

int func_235(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x98B2
{
	int iVar0;
	int iVar1;
	if (bParam3)
	{
		if (!bLocal_116)
		{
			iLocal_117 = ENTITY::GET_ENTITY_HEALTH(iParam0);
			bLocal_116 = true;
		}
		iLocal_118 = ENTITY::GET_ENTITY_HEALTH(iParam0);
		iLocal_119 = (iLocal_117 - iLocal_118);
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, iVar0, true))
			{
				if (IntToFloat(iLocal_119) > 100f)
				{
					return 1;
				}
			}
		}
		if (bLocal_116)
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
			{
				if (IntToFloat(iLocal_119) > 100f)
				{
					return 1;
				}
			}
		}
	}
	else if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
	{
		return 1;
	}
	if (!bParam3)
	{
		iVar1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, iVar1, true))
			{
				return 1;
			}
		}
	}
	if (bParam4)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (PED::IS_PED_BEING_JACKED(iParam0))
			{
				if (PED::GET_PEDS_JACKER(iParam0) == PLAYER::PLAYER_PED_ID())
				{
					return 1;
				}
			}
		}
	}
	if (bParam5)
	{
		if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()))
		{
			if (ENTITY::IS_ENTITY_AT_COORD(iParam0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 10f, 10f, 10f, false, true, 0))
			{
				if (PLAYER::HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(PLAYER::PLAYER_ID()))
				{
					return 1;
				}
			}
		}
	}
	if (PED::IS_PED_PERFORMING_STEALTH_KILL(PLAYER::PLAYER_PED_ID()))
	{
		if (PED::WAS_PED_KILLED_BY_STEALTH(iParam0))
		{
			return 1;
		}
	}
	if (__LIB_10__.func_570(PLAYER::PLAYER_PED_ID(), iParam0))
	{
		return 1;
	}
	if (bParam2)
	{
		if (PED::IS_PED_RAGDOLL(iParam0) && __LIB_10__.func_589(iParam0, 1) < 1.5f)
		{
			return 1;
		}
		else if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
		{
			if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), PED::GET_VEHICLE_PED_IS_IN(iParam0, false)))
			{
				return 1;
			}
		}
		else if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), iParam0))
		{
			return 1;
		}
		if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam1, PLAYER::PLAYER_PED_ID(), true))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_236(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0xEB9F
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_10(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_237(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x1F996
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_10(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

int func_238(int iParam0, var uParam1, int iParam2)//Position - 0x2277
{
	int iVar0;
	var uVar1;
	if (iParam0 != 13122)
	{
		if (iParam2 == 0)
		{
		}
		iVar0 = Global_2826809[iParam0 /*3*/][__LIB_0__.func_330(uParam1)];
		if (STATS::STAT_GET_INT(iVar0, &uVar1, -1))
		{
			return uVar1;
		}
	}
	return 0;
}

int func_239(int iParam0, float fParam1)//Position - 0x6D6
{
	struct<3> Var0;
	if (__LIB_1__.func_197(iParam0))
	{
		if (__LIB_10__.func_623(ENTITY::GET_ENTITY_COORDS(iParam0, true), &Var0, fParam1, 0))
		{
			ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), Var0, true, false, false, true);
			__LIB_10__.func_624(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iParam0, true));
			return 1;
		}
	}
	return 0;
}

void func_240(int iParam0)//Position - 0x1A31E
{
	if (iParam0 < 136)
	{
		__LIB_20__.func_200(iParam0);
	}
	else
	{
		__LIB_20__.func_199(iParam0);
	}
	if (Global_78130[0 /*14*/].f_2 == -1)
	{
		__LIB_18__.func_335(3, iParam0, 242, -1);
	}
}

void func_241(int iParam0)//Position - 0x2103F
{
	if (iParam0 < 107)
	{
		__LIB_20__.func_217(iParam0);
	}
	else if (iParam0 < 227)
	{
		__LIB_20__.func_216(iParam0);
	}
	else
	{
		__LIB_20__.func_215(iParam0);
	}
	if (Global_78130[0 /*14*/].f_2 == -1)
	{
		__LIB_18__.func_335(3, iParam0, 318, -1);
	}
}

void func_242(int iParam0)//Position - 0x27878
{
	if (iParam0 < 60)
	{
		__LIB_20__.func_233(iParam0);
	}
	else
	{
		__LIB_20__.func_232(iParam0);
	}
	if (Global_78130[0 /*14*/].f_2 == -1)
	{
		__LIB_18__.func_335(3, iParam0, 181, -1);
	}
}

void func_243(int iParam0)//Position - 0x34CA8
{
	bool bVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			bVar0 = true;
			if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_139[iParam0], false))
				{
					if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_77137.f_139[iParam0], false))
					{
						bVar0 = false;
					}
				}
			}
			if (bVar0)
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
				VEHICLE::DELETE_VEHICLE(&(Global_77137.f_139[iParam0]));
			}
		}
		Global_77137[iParam0] = 1;
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			if (((((iParam0 == 24 && __LIB_0__.func_61(iParam0, 0)) && Global_78046.f_66 == 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] != 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] > 3) && (!func_498(0, Global_77137.f_555[0 /*21*/].f_12) || !func_498(1, Global_77137.f_555[0 /*21*/].f_12)))
			{
				__LIB_0__.func_284(&(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]), &Global_78046);
				Global_78124 = Global_113386.f_32749.f_5591;
			}
			__LIB_6__.func_770(iParam0, 0);
		}
	}
}

void func_244(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0xA4D5
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_87(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

bool func_245(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x2C97D
{
	var uVar0;
	struct<3> Var1;
	int iVar2;
	iVar2 = __LIB_10__.func_656(iParam0, iParam1);
	if (!__LIB_0__.func_121(iParam0) || !__LIB_0__.func_121(iParam1))
	{
		if (iVar2 != -1)
		{
			__LIB_9__.func_801(&(Local_56[iVar2 /*4*/]));
		}
		return 0;
	}
	if (!__LIB_11__.func_747(iParam0, iParam1, fParam2, iParam3))
	{
		return 0;
	}
	if (iVar2 == -1)
	{
		iVar2 = __LIB_10__.func_655();
		if (iVar2 == -1)
		{
			return 0;
		}
		Local_56[iVar2 /*4*/].f_1 = iParam0;
		Local_56[iVar2 /*4*/].f_2 = iParam1;
	}
	Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
	uVar0 = __LIB_20__.func_247(&(Local_56[iVar2 /*4*/]), Var1, iParam1, &(Local_56[iVar2 /*4*/].f_3), iParam0, iParam5);
	return (uVar0 || (MISC::GET_GAME_TIMER() - Local_56[iVar2 /*4*/].f_3) < iParam4);
}

int func_246(int iParam0, float fParam1, bool bParam2, bool bParam3)//Position - 0x2F375
{
	struct<3> Var0;
	struct<3> Var1;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Var1 = { Var0 };
	Var0.f_0 = (Var0.f_0 - fParam1);
	Var0.f_1 = (Var0.f_1 - fParam1);
	Var0.f_2 = (Var0.f_2 - fParam1);
	Var1.f_0 = (Var1.f_0 + fParam1);
	Var1.f_1 = (Var1.f_1 + fParam1);
	Var1.f_2 = (Var1.f_2 + fParam1);
	if (bParam2)
	{
		if (((MISC::IS_PROJECTILE_TYPE_WITHIN_DISTANCE(ENTITY::GET_ENTITY_COORDS(iParam0, true), joaat("WEAPON_GRENADE"), fParam1, true) || MISC::IS_PROJECTILE_TYPE_WITHIN_DISTANCE(ENTITY::GET_ENTITY_COORDS(iParam0, true), joaat("WEAPON_MOLOTOV"), fParam1, true)) || MISC::IS_PROJECTILE_TYPE_WITHIN_DISTANCE(ENTITY::GET_ENTITY_COORDS(iParam0, true), joaat("WEAPON_SMOKEGRENADE"), fParam1, true)) || MISC::IS_PROJECTILE_TYPE_WITHIN_DISTANCE(ENTITY::GET_ENTITY_COORDS(iParam0, true), joaat("WEAPON_STICKYBOMB"), 5f, true))
		{
			if (bParam3)
			{
				if (__LIB_20__.func_236(iParam0, fParam1))
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			return 1;
		}
	}
	else
	{
		if (bParam3)
		{
			if (__LIB_20__.func_236(iParam0, fParam1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if (MISC::IS_PROJECTILE_IN_AREA(Var0, Var1, true))
		{
			return 1;
		}
	}
	return 0;
}

int func_247(int iParam0)//Position - 0x4061
{
	if ((((((((((!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) || __LIB_6__.func_769(iParam0, 0, 0)) || __LIB_6__.func_769(iParam0, 1, 0)) || __LIB_6__.func_769(iParam0, 2, 0)) || __LIB_0__.func_119(iParam0) != 145) || __LIB_0__.func_118(iParam0)) || __LIB_0__.func_117(iParam0)) || __LIB_0__.func_108(iParam0)) || func_149(iParam0)) || !func_137(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 0, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 1, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 2, 0))
		{
		}
		if (__LIB_0__.func_119(iParam0) != 145)
		{
		}
		return 0;
	}
	return 1;
}

void func_248(int iParam0, int iParam1, float fParam2, int iParam3)//Position - 0x2CCA6
{
	if (__LIB_0__.func_121(iParam0))
	{
		if (__LIB_26__.func_245(PLAYER::PLAYER_PED_ID(), iParam0, fParam2, 1, 250, iParam3))
		{
			*iParam1 = MISC::GET_FRAME_COUNT();
		}
	}
}

bool func_249(int iParam0, float fParam1)//Position - 0x2FBF3
{
	return __LIB_26__.func_245(iParam0, PLAYER::PLAYER_PED_ID(), fParam1, 1, 250, 7);
}

int func_250()//Position - 0xFC72
{
	__LIB_18__.func_169();
	switch (Global_113386.f_2363.f_539.f_4321)
	{
		case 0:
			return 1;
			break;
		case 1:
			return 2;
			break;
		case 2:
			return 4;
			break;
	}
	return 0;
}

int func_251(var uParam0, float fParam1)//Position - 0x30D65
{
	if (__LIB_0__.func_516(uParam0))
	{
		if (__LIB_5__.func_736(uParam0) > fParam1)
		{
			return 1;
		}
	}
	return 0;
}

void func_252()//Position - 0x32D57
{
	int iVar0;
	iVar0 = __LIB_18__.func_205();
	if (iVar0 == -1)
	{
		return;
	}
	Global_112473[iVar0 /*10*/] = 1;
}

void func_253(int iParam0, bool bParam1, bool bParam2)//Position - 0x22E50
{
	struct<4> Var0;
	char* sVar1;
	if (iParam0 != -1)
	{
		__LIB_6__.func_773(iParam0, &Var0);
		MemCopy(&sVar1, {__LIB_0__.func_45(iParam0)}, 4);
		STATS::PLAYSTATS_MISSION_CHECKPOINT(&sVar1, 0, Global_100478, 0);
		__LIB_0__.func_47(&sVar1, Var0.f_3, Global_100478, bParam1, bParam2);
	}
}

void func_254(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x24F00
{
	if (iParam0 != 198)
	{
		if (Global_78319)
		{
			Global_42586.f_227[iParam0] = iParam1;
		}
		else
		{
			Global_113386.f_7261.f_227[iParam0] = iParam1;
		}
		Global_39592[iParam0] = iParam2;
		Global_39791[iParam0] = 1;
		__LIB_20__.func_266(iParam0, bParam3, iParam4, 0);
		__LIB_6__.func_791(iParam0, iParam1);
	}
}

void func_255(int* iParam0, int iParam1)//Position - 0x2B22B
{
	struct<3> Var0;
	float fVar1;
	Var0 = { 192.4462f, -953.5946f, 29.0919f };
	fVar1 = 23.45f;
	__LIB_10__.func_697(iParam0, iParam1, Var0, fVar1);
}

int func_256(int* iParam0, int iParam1, struct<3> Param2, float fParam3, char* sParam4, int iParam5)//Position - 0x3EEC2
{
	if (__LIB_11__.func_893(iParam0, iParam1, Param2, fParam3, 1))
	{
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (!ENTITY::IS_ENTITY_DEAD(*iParam0, false))
			{
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(*iParam0, true);
				PED::SET_PED_MONEY(*iParam0, 0);
				if (iParam5 == 1)
				{
					PED::SET_PED_CAN_BE_TARGETTED(*iParam0, false);
				}
			}
			PED::SET_PED_NAME_DEBUG(*iParam0, sParam4);
		}
		return 1;
	}
	return 0;
}

int func_257()//Position - 0x3FB45
{
	int iVar0;
	iVar0 = __LIB_18__.func_205();
	if (iVar0 == -1)
	{
		return 0;
	}
	if (!Global_112473[iVar0 /*10*/].f_4)
	{
		return 0;
	}
	Global_112473[iVar0 /*10*/].f_4 = 0;
	HUD::CLEAR_ADDITIONAL_TEXT(0, true);
	HUD::CLEAR_ADDITIONAL_TEXT(3, true);
	HUD::CLEAR_ADDITIONAL_TEXT(2, true);
	if (!__LIB_0__.func_2(0))
	{
		if (Global_112473[iVar0 /*10*/].f_5 && Global_112473[iVar0 /*10*/].f_6)
		{
			Global_112473[iVar0 /*10*/].f_6 = 0;
		}
		if (!Global_112473[iVar0 /*10*/].f_6 && !Global_112473[iVar0 /*10*/].f_5)
		{
			Global_112473[iVar0 /*10*/].f_6 = 1;
		}
	}
	return 1;
}

void func_258(bool bParam0)//Position - 0x28831
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	if (!PLAYER::IS_PLAYER_DEAD(iVar0))
	{
		if (bParam0)
		{
		}
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 16);
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 32);
	}
	__LIB_7__.func_279(1, 1, 0, 0, 0, 0, 0);
}

void func_259(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x28899
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, __LIB_18__.func_173(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_260()//Position - 0x3923A
{
	Global_100476 = 1;
	if (PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_18__.func_173())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MARRE" /* GXT: ~s~Michael was arrested. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FARRE" /* GXT: ~s~Franklin was arrested. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TARRE" /* GXT: ~s~Trevor was arrested. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
	}
	else if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_18__.func_173())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MDIED" /* GXT: ~s~Michael died. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FDIED" /* GXT: ~s~Franklin died. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TDIED" /* GXT: ~s~Trevor died. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
		MISC::SET_BIT(&(Global_100441.f_20), 25);
	}
}

void func_261(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x220AC
{
	if (iParam0 != 198)
	{
		if (Global_78319)
		{
			Global_42586.f_227[iParam0] = iParam1;
		}
		else
		{
			Global_113386.f_7261.f_227[iParam0] = iParam1;
		}
		Global_39592[iParam0] = iParam2;
		Global_39791[iParam0] = 1;
		__LIB_20__.func_274(iParam0, bParam3, iParam4, 0);
		__LIB_6__.func_791(iParam0, iParam1);
	}
}

bool func_262(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x35810
{
	var uVar0;
	struct<3> Var1;
	int iVar2;
	iVar2 = __LIB_10__.func_724(iParam0, iParam1);
	if (!__LIB_0__.func_121(iParam0) || !__LIB_0__.func_121(iParam1))
	{
		if (iVar2 != -1)
		{
			__LIB_9__.func_801(&(Local_35[iVar2 /*4*/]));
		}
		return 0;
	}
	if (!__LIB_11__.func_747(iParam0, iParam1, fParam2, iParam3))
	{
		return 0;
	}
	if (iVar2 == -1)
	{
		iVar2 = __LIB_10__.func_723();
		if (iVar2 == -1)
		{
			return 0;
		}
		Local_35[iVar2 /*4*/].f_1 = iParam0;
		Local_35[iVar2 /*4*/].f_2 = iParam1;
	}
	Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
	uVar0 = __LIB_20__.func_272(&(Local_35[iVar2 /*4*/]), Var1, iParam1, &(Local_35[iVar2 /*4*/].f_3), iParam0, iParam5);
	return (uVar0 || (MISC::GET_GAME_TIMER() - Local_35[iVar2 /*4*/].f_3) < iParam4);
}

void func_263(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x352FA
{
	if (__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_20__.func_275(iParam0);
			__LIB_0__.func_284(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_6__.func_770(iParam0, 1);
		}
	}
}

void func_264(int iParam0, bool bParam1)//Position - 0x364E1
{
	if (bParam1)
	{
		if (!__LIB_6__.func_837(iParam0, 2, 1))
		{
			__LIB_20__.func_271(iParam0, 2, 1);
		}
	}
	else if (__LIB_6__.func_837(iParam0, 2, 1))
	{
		__LIB_20__.func_270(iParam0, 2, 1);
	}
}

int func_265(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x843B9
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_26__.func_102(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

int func_266(struct<2> Param0, var uParam1, bool bParam2, float fParam3)//Position - 0x85980
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	iVar3 = 0;
	iVar0 = 83;
	while (iVar0 <= 84 + 1)
	{
		if (bParam2)
		{
			if (__LIB_26__.func_102(iVar0))
			{
				fVar1 = fParam3;
			}
			else
			{
				fVar1 = 0f;
			}
		}
		else
		{
			fVar1 = fParam3;
		}
		fVar2 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
		if (fVar2 < fVar1)
		{
			iVar3++;
		}
		iVar0++;
	}
	if (iVar3 > 0)
	{
		return 1;
	}
	return 0;
}

int func_267(int iParam0)//Position - 0xF742B
{
	if (__LIB_26__.func_142(iParam0) && __LIB_26__.func_141(iParam0))
	{
		return 1;
	}
	if (__LIB_10__.func_467())
	{
		return 1;
	}
	if (__LIB_20__.func_159(iParam0))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("thruster"):
			case joaat("rcbandito"):
			case joaat("formula"):
			case joaat("formula2"):
			case joaat("minitank"):
			case joaat("openwheel1"):
			case joaat("openwheel2"):
			case joaat("veto"):
			case joaat("veto2"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_268(int iParam0)//Position - 0xFFC59
{
	if (__LIB_10__.func_523())
	{
		switch (iParam0)
		{
			case 86:
				return BitTest(iLocal_201, 5);
				break;
			case 10:
				return BitTest(iLocal_201, 6);
				break;
			case 31:
				return BitTest(iLocal_201, 7);
				break;
			case 33:
				return BitTest(iLocal_201, 8);
				break;
			case 55:
				return BitTest(iLocal_201, 9);
				break;
			case 38:
				if (!__LIB_20__.func_40(Local_124.f_406))
				{
					if (BitTest(iLocal_201, 10) || BitTest(iLocal_201, 11))
					{
						return 1;
					}
				}
				else if (BitTest(iLocal_201, 10))
				{
					return 1;
				}
				break;
		}
	}
	else if (__LIB_4__.func_532())
	{
		switch (iParam0)
		{
			case 86:
				return BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 0);
				break;
			case 89:
				return BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 1);
				break;
			case 31:
				return BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 2);
				break;
			case 55:
				return BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 3);
				break;
			case 38:
				if (!__LIB_20__.func_40(Local_124.f_406))
				{
					if (BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 4) || BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 5))
					{
						return 1;
					}
				}
				else if (BitTest(Global_2789412[__LIB_10__.func_119() /*106*/].f_105, 4))
				{
					return 1;
				}
				break;
		}
	}
	else if (__LIB_4__.func_531())
	{
		switch (iParam0)
		{
			case 86:
				return BitTest(Global_2789625.f_105, 0);
				break;
			case 89:
				return BitTest(Global_2789625.f_105, 1);
				break;
			case 31:
				return BitTest(Global_2789625.f_105, 2);
				break;
			case 55:
				if (__LIB_26__.func_135(Local_124.f_406))
				{
					return 1;
				}
				return BitTest(Global_2789625.f_105, 3);
				break;
			case 38:
				if (!__LIB_20__.func_40(Local_124.f_406))
				{
					if (BitTest(Global_2789625.f_105, 4) || BitTest(Global_2789625.f_105, 5))
					{
						return 1;
					}
				}
				else if (BitTest(Global_2789625.f_105, 4))
				{
					return 1;
				}
				break;
			}
	}
	return 0;
}

void func_269(int iParam0)//Position - 0x101C9E
{
	if (iParam0 == 0)
	{
		__LIB_20__.func_42(0, __LIB_10__.func_124(iParam0), 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 6, -1, 13, -1082130432, -1082130432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0);
	}
	else if (iParam0 == 55 && __LIB_26__.func_135(Local_124.f_406))
	{
	}
	else
	{
		__LIB_20__.func_42(1, __LIB_10__.func_124(iParam0), -1, func_1837(iParam0), 0, 0, 0, 0, 0, 0, 0, 18, 0, -1, 4, -1082130432, -1082130432, 0, func_1789(iParam0), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0);
	}
}

int func_270()//Position - 0x106972
{
	int iVar0;
	if (__LIB_26__.func_135(Local_124.f_406))
	{
		return 1;
	}
	iVar0 = __LIB_0__.func_228(__LIB_10__.func_125(), -1);
	if ((Global_2789625.f_9[23] - 1) == iVar0 || (Global_2789625.f_9[24] - 1) == iVar0)
	{
		return 1;
	}
	return 0;
}

int func_271(int iParam0, int iParam1)//Position - 0x13B260
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_10__.func_755(iParam0);
	iVar1 = __LIB_20__.func_285(iParam0);
	iVar2 = __LIB_10__.func_229(iParam1);
	__LIB_20__.func_59(iParam0, iParam1, iVar1, iVar2);
	return ((iVar0 + iVar1) + iVar2);
}

int func_272(int iParam0)//Position - 0x15B49B
{
	int iVar0;
	iVar0 = 1;
	while (iVar0 <= 127)
	{
		if (__LIB_26__.func_143(iVar0) == iParam0)
		{
			return iVar0;
		}
		iVar0++;
	}
	return 2;
}

void func_273(var uParam0)//Position - 0x168485
{
	bool bVar0;
	bool bVar1;
	struct<6> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	struct<7> Var6;
	struct<7> Var7;
	var uVar8;
	if (Global_2815059.f_5168)
	{
		return;
	}
	bVar0 = __LIB_20__.func_2();
	bVar1 = __LIB_20__.func_1();
	if (bVar0 || bVar1)
	{
		CLOCK::GET_UTC_TIME(&Var2, &(Var2.f_1), &(Var2.f_2), &(Var2.f_3), &(Var2.f_4), &(Var2.f_5));
		if (bVar0)
		{
			Var6 = { __LIB_9__.func_328(joaat("MPPLY_REPEAT_OFFENDER_1_TIME")) };
			if (__LIB_10__.func_65(&Var6))
			{
				iVar3 = __LIB_26__.func_107(&Var6, &Var2);
				if (iVar3 >= Global_262145.f_10714 /* Tunable: PERMANENTCAPREPEATOFFENDER1 */)
				{
					iVar4 = 1;
				}
			}
			else
			{
				iVar4 = 1;
			}
		}
		if (bVar1)
		{
			Var7 = { __LIB_9__.func_328(joaat("MPPLY_REPEAT_OFFENDER_2_TIME")) };
			if (__LIB_10__.func_65(&Var7))
			{
				iVar3 = __LIB_26__.func_107(&Var7, &Var2);
				if (iVar3 >= Global_262145.f_10715 /* Tunable: PERMANENTCAPREPEATOFFENDER2 */)
				{
					iVar5 = 1;
				}
			}
			else
			{
				iVar5 = 1;
			}
		}
		if (bVar0 && iVar4)
		{
			if (!bVar1 || (bVar1 && iVar5))
			{
				__LIB_0__.func_779(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"), 0);
				*uParam0 = 1;
			}
			else
			{
				__LIB_0__.func_779(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"), Global_262145.f_10701 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL2 */);
				*uParam0 = 1;
			}
			__LIB_20__.func_288((__LIB_20__.func_8(&Var6) + Global_262145.f_10714 /* Tunable: PERMANENTCAPREPEATOFFENDER1 */), &uVar8);
			__LIB_10__.func_737(&uVar8);
		}
		if (bVar1 && iVar5)
		{
			if (!bVar0 || (bVar0 && iVar4))
			{
				__LIB_0__.func_779(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"), 0);
				*uParam0 = 1;
			}
			else
			{
				__LIB_0__.func_779(joaat("MPPLY_CHAR_PEAK_EXPLOIT_LEVEL"), Global_262145.f_10700 /* Tunable: REPEATOFFENDERMINEXPLOITLEVEL1 */);
				*uParam0 = 1;
			}
			__LIB_20__.func_288((__LIB_20__.func_8(&Var7) + Global_262145.f_10715 /* Tunable: PERMANENTCAPREPEATOFFENDER2 */), &uVar8);
			__LIB_10__.func_737(&uVar8);
		}
	}
}

void func_274(int iParam0, bool bParam1)//Position - 0x185BF5
{
	bool bVar0;
	int iVar1;
	int iVar2;
	iVar2 = __LIB_26__.func_143(iParam0);
	if (iVar2 != -1)
	{
		bVar0 = (iVar2 % 32);
		iVar1 = (iVar2 / 32);
		if (bParam1)
		{
			if (!BitTest(Global_102577[iVar1], bVar0))
			{
				MISC::SET_BIT(&(Global_102577[iVar1]), bVar0);
			}
		}
		else if (BitTest(Global_102577[iVar1], bVar0))
		{
			MISC::CLEAR_BIT(&(Global_102577[iVar1]), bVar0);
		}
	}
}

bool func_275(int iParam0, int iParam1, bool bParam2)//Position - 0x187FC3
{
	struct<4> Var0;
	StringCopy(&Var0, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), 16);
	return __LIB_26__.func_108(Var0, iParam1, bParam2);
}

int func_276(int iParam0, int iParam1)//Position - 0x18DB3D
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (iParam1 != 2)
	{
		if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam0, __LIB_10__.func_387(iParam1)) <= 0)
		{
			return 0;
		}
	}
	if (__LIB_10__.func_388(__LIB_10__.func_387(iParam1)))
	{
		return 0;
	}
	switch (__LIB_10__.func_387(iParam1))
	{
		case 18:
			if (__LIB_26__.func_138(iParam0))
			{
				return 0;
			}
			break;
		case 15:
			if (__LIB_26__.func_130(iParam0))
			{
				return 0;
			}
			break;
		case 13:
			if (__LIB_26__.func_137(iParam0))
			{
				return 0;
			}
			break;
	}
	switch (iParam1)
	{
		case 0:
			return 10;
			break;
		case 1:
			return 10;
			break;
		case 2:
			return 10;
			break;
		case 3:
			return 10;
			break;
		case 4:
			return 10;
			break;
	}
	return 0;
}

int func_277(int iParam0, int iParam1, int iParam2)//Position - 0x18E11A
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (iParam1 != 2)
	{
		if (VEHICLE::GET_NUM_VEHICLE_MODS(iParam0, __LIB_10__.func_387(iParam1)) <= 0)
		{
			return 0;
		}
	}
	if (__LIB_10__.func_391(__LIB_10__.func_387(iParam1), iParam2))
	{
		return 0;
	}
	switch (__LIB_10__.func_387(iParam1))
	{
		case 18:
			if (__LIB_26__.func_138(iParam0))
			{
				return 0;
			}
			break;
		case 15:
			if (__LIB_26__.func_130(iParam0))
			{
				return 0;
			}
			break;
		case 13:
			if (__LIB_26__.func_137(iParam0))
			{
				return 0;
			}
			break;
	}
	switch (iParam1)
	{
		case 0:
			return 10;
			break;
		case 1:
			return 10;
			break;
		case 2:
			return 10;
			break;
		case 3:
			return 10;
			break;
		case 4:
			return 10;
			break;
	}
	return 0;
}

void func_278(int iParam0)//Position - 0x1A2F55
{
	int iVar0;
	if (!__LIB_10__.func_217(iParam0, &iVar0))
	{
		return;
	}
	__LIB_26__.func_146(&Local_124, 1, iVar0, 1, 1);
	__LIB_26__.func_146(&Local_124, 0, iVar0, 1, 1);
	__LIB_26__.func_146(&Local_124, 2, iVar0, 1, 1);
}

void func_279(int iParam0, bool bParam1, int iParam2)//Position - 0x1A3DFC
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_26__.func_147(iParam0, -1);
	iVar1 = iParam0;
	if (iVar1 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&iVar0, __LIB_0__.func_158(iVar1));
		}
		else
		{
			MISC::CLEAR_BIT(&iVar0, __LIB_0__.func_158(iVar1));
		}
		__LIB_1__.func_597(__LIB_10__.func_180(iParam0), iVar0, iParam2, 1, 0);
	}
}

int func_280(int iParam0)//Position - 0x1A532C
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (VEHICLE::GET_NUM_MOD_KITS(iParam0) > 0)
		{
			if (__LIB_0__.func_305(iParam0, 0))
			{
				if (__LIB_10__.func_102(iParam0, 0) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 1))
			{
				if (__LIB_10__.func_102(iParam0, 1) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 2))
			{
				if (__LIB_10__.func_102(iParam0, 2) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 3) && !__LIB_26__.func_136(iParam0))
			{
				if (__LIB_10__.func_102(iParam0, 3) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 4))
			{
				if (__LIB_10__.func_102(iParam0, 4) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 5))
			{
				if (__LIB_10__.func_102(iParam0, 5) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 6))
			{
				if (__LIB_10__.func_102(iParam0, 6) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 7))
			{
				if (__LIB_10__.func_102(iParam0, 7) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 8))
			{
				if (__LIB_10__.func_102(iParam0, 8) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 9))
			{
				if (__LIB_10__.func_102(iParam0, 9) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 10))
			{
				if (__LIB_10__.func_102(iParam0, 10) == -1)
				{
					if (__LIB_10__.func_307(ENTITY::GET_ENTITY_MODEL(iParam0)))
					{
						if (!__LIB_2__.func_355(Local_470.f_66, Local_470.f_77, Local_470.f_9[10]))
						{
							return 0;
						}
					}
					else
					{
						return 0;
					}
				}
			}
			if (__LIB_0__.func_305(iParam0, 11))
			{
				if (__LIB_10__.func_102(iParam0, 11) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 12))
			{
				if (__LIB_10__.func_102(iParam0, 12) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 13) && !__LIB_26__.func_137(iParam0))
			{
				if (__LIB_10__.func_102(iParam0, 13) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 14))
			{
				if (__LIB_10__.func_102(iParam0, 14) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 15))
			{
				if (__LIB_10__.func_102(iParam0, 15) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 16))
			{
				if (__LIB_10__.func_102(iParam0, 16) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 23) && !__LIB_26__.func_135(iParam0))
			{
				if (__LIB_10__.func_102(iParam0, 23) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 24) && !__LIB_26__.func_135(iParam0))
			{
				if (__LIB_10__.func_102(iParam0, 24) == -1)
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 18) && !__LIB_26__.func_138(iParam0))
			{
				if (!VEHICLE::IS_TOGGLE_MOD_ON(iParam0, 18))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 20))
			{
				if (!VEHICLE::IS_TOGGLE_MOD_ON(iParam0, 20))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_305(iParam0, 22) && !__LIB_26__.func_142(iParam0))
			{
				if (!VEHICLE::IS_TOGGLE_MOD_ON(iParam0, 22))
				{
					return 0;
				}
			}
			if (VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(iParam0) && !__LIB_26__.func_135(iParam0))
			{
				return 0;
			}
			if (!VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				iVar0 = VEHICLE::GET_VEHICLE_WINDOW_TINT(iParam0);
				if (iVar0 == -1)
				{
					iVar0 = 0;
				}
				if (iVar0 == 0 && !__LIB_26__.func_140(iParam0))
				{
					return 0;
				}
			}
			return 1;
		}
	}
	return 0;
}

bool func_281(var uParam0)//Position - 0x101
{
	char* sVar0;
	char* sVar1;
	__LIB_20__.func_307(uParam0, uParam0->f_57.f_2, &sVar0);
	__LIB_20__.func_307(uParam0, uParam0->f_57.f_2, &sVar1);
	return (__LIB_0__.func_1(&sVar0) || __LIB_0__.func_1(&sVar1));
}

int func_282(var uParam0)//Position - 0x768
{
	if (uParam0->f_57.f_8 == 2)
	{
		return uParam0->f_57.f_8.f_1;
	}
	return (uParam0->f_57.f_8.f_1 + 1 % __LIB_20__.func_308(uParam0->f_57.f_8));
}

void func_283(var uParam0)//Position - 0xBC0
{
	char* sVar0;
	uParam0->f_57.f_1 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(__LIB_10__.func_800(uParam0), __LIB_20__.func_309(uParam0), 2, true, false, 1f, 0f, 1f);
	__LIB_20__.func_310(uParam0, &sVar0);
	NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(PLAYER::PLAYER_PED_ID(), uParam0->f_57.f_1, &sVar0, "exit", 4f, -4f, 13, 16, 1000f, 0);
	NETWORK::NETWORK_START_SYNCHRONISED_SCENE(uParam0->f_57.f_1);
	__LIB_6__.func_404(&(uParam0->f_57.f_5));
	__LIB_10__.func_805(uParam0, 8);
}

int func_284(var uParam0)//Position - 0x11B6
{
	int iVar0;
	switch (uParam0->f_57.f_8)
	{
		case 2:
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
			if (iVar0 >= 1)
			{
				iVar0++;
			}
			break;
		default:
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, __LIB_20__.func_308(uParam0->f_57.f_8));
	}
	return iVar0;
}

Vector3 func_285(int iParam0)//Position - 0x1A0B
{
	switch (iParam0)
	{
		case 0:
			return Vector(-59.42f, 4832.75f, 391.558f) - __LIB_20__.func_315();
		case 1:
			return Vector(-59.42f, 4832.75f, 392.858f) - __LIB_20__.func_315();
		default:
	}
	return 0f, 0f, 0f;
}

char* func_286(int iParam0, var uParam1, var uParam2)//Position - 0x7204A
{
	int iVar0;
	var uVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK24A" /* GXT: You cannot enter the Auto Shop while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "AUS_P_BLCK_A" /* GXT: You can't enter the Auto Shop while resupplying another business. */;
				case 190:
					return "AUS_P_BLCK_B" /* GXT: You can't enter the Auto Shop while selling goods from another business. */;
				case 167:
					return "AUS_P_BLCK_C" /* GXT: You can't enter the Auto Shop while acquiring goods for a Warehouse. */;
				case 168:
					return "AUS_P_BLCK_D" /* GXT: You can't enter the Auto Shop while selling goods from a Warehouse. */;
				case 178:
					return "AUS_P_BLCK_E" /* GXT: You can't enter the Auto Shop while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "AUS_P_BLCK_F" /* GXT: You can't enter the Auto Shop while selling vehicles from a Warehouse. */;
				case 225:
					return "AUS_P_BLCK_G" /* GXT: You can't enter the Auto Shop while acquiring goods for a Bunker. */;
				case 226:
					return "AUS_P_BLCK_H" /* GXT: You can't enter the Auto Shop while selling goods from a Bunker. */;
				case 229:
					return "AUS_P_BLCK_I" /* GXT: You can't enter the Auto Shop while acquiring goods for a Hangar. */;
				case 230:
					return "AUS_P_BLCK_J" /* GXT: You can't enter the Auto Shop while selling goods from a Hangar. */;
				case 237:
					return "AUS_P_BLCK_O" /* GXT: You can't enter the Auto Shop while taking part in Nightclub business. */;
				case 243:
					return "AUS_P_BLCK_P" /* GXT: You can't enter the Auto Shop while working for Ms. Baker. */;
				case 271:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "AUS_P_BLCK_K" /* GXT: You can't enter the Auto Shop with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "AUS_P_BLCK_L" /* GXT: You can't access the Auto Shop as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_2__.func_593(PLAYER::PLAYER_ID()))
	{
		return "AUS_P_BLCK_M" /* GXT: You can't access the Auto Shop whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_1__.func_354(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "AUS_P_BLCK_N" /* GXT: You can't enter the Auto Shop while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "AUS_P_BLCK_N" /* GXT: You can't enter the Auto Shop while taking part in a Business Battle. */;
		}
	}
	if (!__LIB_7__.func_627(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar4 = __LIB_18__.func_515(iVar3, &uVar2, &uVar1);
			iVar5 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar5))
			{
				iVar6 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar5);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar3))
						{
							iVar7 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar3);
							if ((__LIB_0__.func_121(iVar7) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) && !__LIB_2__.func_472(iVar3))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "AUS_P_BLCK_Q" /* GXT: You can't enter the Auto Shop with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar3))
						{
							return "AUS_P_BLCK_R" /* GXT: You can't enter the Auto Shop with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar3) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar3))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar3), 25)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) || __LIB_1__.func_178(iVar3)) || __LIB_2__.func_471(iVar3)) || (__LIB_0__.func_657(iVar3, 1) && iVar4 != iVar6))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar3))
							{
								return "";
							}
							else
							{
								return "AUS_P_BLCK_Q" /* GXT: You can't enter the Auto Shop with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar3) && ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rcbandito"))
						{
							return "AUS_P_BLCK_T" /* GXT: You can't enter the Auto Shop with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	if ((!__LIB_2__.func_590(PLAYER::PLAYER_ID(), __LIB_2__.func_591(iParam0)) && __LIB_19__.func_96(iParam0)) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar8 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar8) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar8, false))
		{
			if ((((((!__LIB_0__.func_657(iVar8, 1) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar8), 25)) || ENTITY::GET_ENTITY_MODEL(iVar8) == joaat("oppressor2")) || __LIB_6__.func_132(iVar8)) || __LIB_2__.func_613(ENTITY::GET_ENTITY_MODEL(iVar8))) || __LIB_2__.func_342(iVar8, 0)) || __LIB_2__.func_342(iVar8, 1))
			{
				return "AUS_P_BLCK_U" /* GXT: You can't enter the Auto Shop to modify this vehicle. */;
			}
		}
	}
	return "";
}

char* func_287(int iParam0, var uParam1, int iParam2)//Position - 0xD31BE
{
	int iVar0;
	var uVar1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return "";
	}
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK1A" /* GXT: You cannot enter the Arcade while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "ARC_P_BLCK_A" /* GXT: You can't enter the Arcade while resupplying another business. */;
				case 190:
					return "ARC_P_BLCK_B" /* GXT: You can't enter the Arcade while selling goods from another business. */;
				case 167:
					return "ARC_P_BLCK_C" /* GXT: You can't enter the Arcade while acquiring goods for a Warehouse. */;
				case 168:
					return "ARC_P_BLCK_D" /* GXT: You can't enter the Arcade while selling goods from a Warehouse. */;
				case 178:
					return "ARC_P_BLCK_E" /* GXT: You can't enter the Arcade while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "ARC_P_BLCK_F" /* GXT: You can't enter the Arcade while selling vehicles from a Warehouse. */;
				case 225:
					return "ARC_P_BLCK_G" /* GXT: You can't enter the Arcade while acquiring goods for a Bunker. */;
				case 226:
					return "ARC_P_BLCK_H" /* GXT: You can't enter the Arcade while selling goods from a Bunker. */;
				case 229:
					return "ARC_P_BLCK_I" /* GXT: You can't enter the Arcade while acquiring goods for a Hangar. */;
				case 230:
					return "ARC_P_BLCK_J" /* GXT: You can't enter the Arcade while selling goods from a Hangar. */;
				case 237:
					return "ARC_P_BLCK_O" /* GXT: You can't enter the Arcade while taking part in Nightclub business. */;
				case 243:
					return "ARC_P_BLCK_P" /* GXT: You can't enter the Arcade while working for Ms. Baker. */;
				case 158:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (iParam2 == 1 || iParam2 == 2)
	{
		if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
		{
			__LIB_3__.func_864(iParam0, &uVar1, &Var2, &Var3, &fVar4, &uVar5, iParam2);
			if ((!__LIB_18__.func_913(PLAYER::PLAYER_ID()) && __LIB_0__.func_121(PLAYER::PLAYER_PED_ID())) && ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Var2, Var3, fVar4, false, false, 0))
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || __LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0) == -1)
				{
					return "ARC_P_BLCK_SU" /* GXT: The Garage will become accessible once the Arcade is setup. */;
				}
			}
		}
	}
	if (__LIB_2__.func_477())
	{
		return "ARC_P_BLCK_K" /* GXT: You can't enter the Arcade with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "ARC_P_BLCK_L" /* GXT: You can't access the Arcade as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_2__.func_762(PLAYER::PLAYER_ID()))
	{
		return "ARC_P_BLCK_M" /* GXT: You can't access the Arcade whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_2__.func_762(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "ARC_P_BLCK_N" /* GXT: You can't enter the Arcade while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "ARC_P_BLCK_N" /* GXT: You can't enter the Arcade while taking part in a Business Battle. */;
		}
	}
	if (__LIB_2__.func_762(PLAYER::PLAYER_ID()) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar8 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar9 = __LIB_18__.func_515(iVar8, &uVar7, &uVar6);
			iVar10 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar8, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar10))
			{
				iVar11 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar10);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar8))
						{
							iVar12 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar8);
							if ((__LIB_0__.func_121(iVar12) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8))) && !__LIB_2__.func_472(iVar8))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "ARC_P_BLCK_Q" /* GXT: You can't enter the Arcade with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar8))
						{
							return "ARC_P_BLCK_R" /* GXT: You can't enter the Arcade with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar8) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar8))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar8), 22)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8))) || __LIB_1__.func_178(iVar8)) || __LIB_2__.func_471(iVar8)) || (__LIB_0__.func_657(iVar8, 1) && iVar9 != iVar11))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar8))
							{
								return "";
							}
							else
							{
								return "ARC_P_BLCK_Q" /* GXT: You can't enter the Arcade with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar8) && ENTITY::GET_ENTITY_MODEL(iVar8) == joaat("rcbandito"))
						{
							return "ARC_P_BLCK_T" /* GXT: You can't enter the Arcade with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	return "";
}

Vector3 func_288()//Position - 0x1998
{
	return __LIB_0__.func_298(Vector(-60f, 4841.945f, 362.58f) - __LIB_10__.func_819(), (180f - -66.83f));
}

Vector3 func_289()//Position - 0x1B4A
{
	return __LIB_0__.func_298(Vector(-60f, 4845.8f, 364.74f) - __LIB_10__.func_822(), -4f);
}

void func_290(var uParam0)//Position - 0xE81
{
	char* sVar0;
	uParam0->f_8 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(__LIB_10__.func_606(uParam0), __LIB_20__.func_184(uParam0), 2, true, false, 1f, 0f, 1.12f);
	__LIB_20__.func_186(uParam0, &sVar0);
	NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(PLAYER::PLAYER_PED_ID(), uParam0->f_8, &sVar0, "exit", 4f, -4f, 9, 0, 1000f, 0);
	NETWORK::NETWORK_START_SYNCHRONISED_SCENE(uParam0->f_8);
	__LIB_6__.func_404(&(uParam0->f_6));
	__LIB_10__.func_614(uParam0, 8);
}

int func_291(var uParam0)//Position - 0x1BDC
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0)))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::INT_TO_PARTICIPANTINDEX(iVar0));
			if (iVar1 != PLAYER::PLAYER_ID() && __LIB_0__.func_154(iVar1, 1, 1))
			{
				if (__LIB_10__.func_613(PLAYER::GET_PLAYER_PED(iVar1), &(uParam0->f_16[uParam0->f_9 /*14*/])) || __LIB_2__.func_461(iVar1) == uParam0->f_9)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

var func_292(int iParam0, var uParam1)//Position - 0x73729
{
	struct<5> Var0;
	Var0 = { __LIB_6__.func_296(iParam0) };
	*uParam1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var0, Var0.f_3);
	return Var0.f_4;
}

void func_293(var uParam0)//Position - 0xDF1
{
	if (CAM::DOES_CAM_EXIST(uParam0->f_10))
	{
		__LIB_10__.func_836(uParam0);
		CAM::DESTROY_CAM(uParam0->f_10, false);
	}
	uParam0->f_10 = 0;
}

int func_294(int* iParam0, float fParam1)//Position - 0x1E9D5
{
	if (__LIB_0__.func_736(iParam0))
	{
		if (__LIB_7__.func_78(iParam0) > fParam1)
		{
			return 1;
		}
	}
	return 0;
}

int func_295()//Position - 0x1AC9E
{
	if (__LIB_11__.func_287() <= 0)
	{
		return 0;
	}
	if (__LIB_11__.func_286() <= 0)
	{
		return 1;
	}
	if (__LIB_10__.func_859())
	{
		return 2;
	}
	return 3;
}

int func_296(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x9F9
{
	int iVar0;
	if (iParam1 == 7)
	{
		return 0;
	}
	if (!bParam3)
	{
		if (Global_97919.f_44 == 1)
		{
			return 2;
		}
	}
	if (iParam1 == 0)
	{
		if (__LIB_6__.func_854(0))
		{
			return 0;
		}
		Global_43016++;
		*iParam0 = Global_43016;
		PLAYER::SET_PLAYER_INVINCIBLE(PLAYER::GET_PLAYER_INDEX(), false);
		Global_23011.f_5 = 0;
		if (iParam2 != 5)
		{
			PLAYER::FORCE_CLEANUP(8);
		}
		Global_43052 = iParam2;
		Global_43014 = *iParam0;
		Global_43015 = iParam4;
		Global_43013 = 0;
		return 1;
	}
	if (*iParam0 != -1)
	{
		if (Global_43013 > 0)
		{
			iVar0 = 0;
			iVar0 = 0;
			while (iVar0 < Global_43013)
			{
				if (Global_43019[iVar0 /*4*/] == *iParam0)
				{
					return 2;
				}
				iVar0++;
			}
		}
		else if (Global_43014 == *iParam0)
		{
			return 1;
		}
		*iParam0 = -1;
	}
	if (*iParam0 == -1)
	{
		if (!__LIB_6__.func_763(iParam2))
		{
			return 0;
		}
		if (Global_43013 == 8)
		{
			return 0;
		}
		Global_43016++;
		*iParam0 = Global_43016;
		Global_43019[Global_43013 /*4*/] = Global_43016;
		Global_43019[Global_43013 /*4*/].f_1 = iParam1;
		Global_43019[Global_43013 /*4*/].f_2 = iParam2;
		Global_43019[Global_43013 /*4*/].f_3 = 0;
		Global_43013++;
		if (iParam4 != 0)
		{
			__LIB_0__.func_525(iParam0, iParam4);
		}
	}
	return 2;
}

void func_297(int iParam0)//Position - 0x5DF06
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	bVar0 = false;
	iVar1 = 10;
	iVar3 = 0;
	iVar4 = 0;
	iVar5 = -1;
	iVar6 = 2;
	iVar7 = 13;
	Global_78130[0 /*14*/].f_5 = 0;
	switch (iParam0)
	{
		case 31:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			break;
		case 0:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 1:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 2:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 3:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 4:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 5:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 6:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 7:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 8:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		case 9:
			StringCopy(&Var2, "NO_LABEL", 16);
			iVar3 = 0;
			iVar4 = 0;
			bVar0 = true;
			break;
		default:
			__LIB_18__.func_374(iVar7, iParam0, 10, -1);
			return;
			break;
	}
	__LIB_18__.func_326(&(Global_78130[0 /*14*/]), iVar7, iParam0, &Var2, iVar3, iVar4, iVar1, bVar0, iVar5, iVar6, 0);
}

int func_298(int iParam0)//Position - 0x680F7
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 64)
	{
		if (!__LIB_2__.func_467(Global_2681762.f_199.f_1[iVar0 /*15*/].f_1))
		{
			iVar1++;
			if (iVar1 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_299(int iParam0)//Position - 0x7B2CA
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_7__.func_203(PLAYER::PLAYER_ID(), -1))
		{
			iParam0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		}
	}
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if (__LIB_8__.func_778(PLAYER::PLAYER_ID()) == 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			if (__LIB_0__.func_291(iParam0) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_300()//Position - 0x12D8E9
{
	int iVar0;
	int iVar1;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
		iVar1 = __LIB_4__.func_337(iVar0);
		if (__LIB_10__.func_891(iVar1))
		{
			return 1;
		}
	}
	return 0;
}

int func_301(int iParam0)//Position - 0x221E5
{
	if (iParam0 == 28)
	{
		return __LIB_2__.func_319(&(Global_1951109.f_54), iParam0);
	}
	if (iParam0 != -1)
	{
		__LIB_6__.func_294(iParam0);
		return (__LIB_2__.func_319(&(Global_1951109.f_54), iParam0) && INTERIOR::IS_INTERIOR_READY(Global_1951109[iParam0]));
	}
	return 0;
}

char* func_302(int iParam0)//Position - 0x1A073F
{
	char* sVar0;
	int iVar1;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		sVar0 = __LIB_1__.func_192(&(Global_1892703[iParam0 /*599*/].f_10.f_105));
		return sVar0;
	}
	if (Global_1892703[iParam0 /*599*/].f_10.f_121 != Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_121)
	{
		sVar0 = __LIB_18__.func_548(iParam0, 0);
		return sVar0;
	}
	if (((__LIB_1__.func_424(iParam0, 28) || __LIB_1__.func_424(PLAYER::PLAYER_ID(), 28)) || __LIB_1__.func_574(iParam0)) && !__LIB_1__.func_573(iParam0))
	{
		return __LIB_18__.func_548(iParam0, 0);
	}
	iVar1 = __LIB_2__.func_191(iParam0);
	if (iVar1 != __LIB_0__.func_160())
	{
		if (iVar1 != PLAYER::PLAYER_ID())
		{
			if (!__LIB_0__.func_53() && !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true))
			{
				return __LIB_18__.func_548(iVar1, 0);
			}
		}
	}
	if (iVar1 != __LIB_0__.func_160())
	{
		sVar0 = __LIB_1__.func_192(&(Global_1892703[iVar1 /*599*/].f_10.f_105));
		if (MISC::IS_STRING_NULL_OR_EMPTY(sVar0))
		{
			return __LIB_18__.func_548(iVar1, 0);
		}
		else
		{
			return sVar0;
		}
	}
	return "";
}

int func_303()//Position - 0x1A091B
{
	if ((__LIB_1__.func_424(PLAYER::PLAYER_ID(), 21) || __LIB_1__.func_424(PLAYER::PLAYER_ID(), 22)) || __LIB_7__.func_186())
	{
		return 1;
	}
	if (__LIB_7__.func_82())
	{
		__LIB_1__.func_484(22);
		return 1;
	}
	return 0;
}

void func_304(int iParam0, int iParam1)//Position - 0x1ACF99
{
	if (__LIB_5__.func_554(PLAYER::PLAYER_ID()) && __LIB_4__.func_728())
	{
		if (__LIB_2__.func_491(iParam0) && iParam1 > 0)
		{
			__LIB_1__.func_597(11522, (__LIB_1__.func_556(11522, -1, 0) + iParam1), -1, 1, 0);
		}
	}
}

int func_305(int iParam0, var uParam1)//Position - 0x1B9807
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	if (Global_1836844.f_20)
	{
		if (!__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (!uParam1->f_4[iVar0])
				{
					if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST((*uParam1)[iVar0]))
					{
						uParam1->f_4[iVar0] = 1;
						uParam1->f_8[iVar0] = Global_1836844.f_21;
					}
				}
				iVar0++;
			}
		}
	}
	else
	{
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (!uParam1->f_4[iVar0])
			{
				uParam1->f_8[iVar0] = -1;
			}
			iVar0++;
		}
		if (ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(NETWORK::NET_TO_ENT(iParam0), PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (!NETWORK::NETWORK_DOES_NETWORK_ID_EXIST((*uParam1)[iVar0]))
				{
					(*uParam1)[iVar0] = iParam0;
					Jump @213; //curOff = 184
				}
				else if ((*uParam1)[iVar0] == iParam0)
				{
				}
				else
				{
					iVar0++;
				}
			}
		}
		else
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (iParam0 == (*uParam1)[iVar0])
				{
					if (!__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
					{
						(*uParam1)[iVar0] = 0;
						uParam1->f_4[iVar0] = 0;
						uParam1->f_8[iVar0] = -1;
					}
					else if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(NETWORK::NET_TO_ENT(iParam0)))
					{
						(*uParam1)[iVar0] = 0;
						uParam1->f_4[iVar0] = 0;
						uParam1->f_8[iVar0] = -1;
					}
				}
				iVar0++;
			}
		}
	}
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (uParam1->f_4[iVar0] && iParam0 == (*uParam1)[iVar0])
			{
				if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(iParam0))
				{
					iVar1 = NETWORK::NET_TO_OBJ(iParam0);
					if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
					{
						if (__LIB_0__.func_682(iParam0))
						{
							if (ENTITY::IS_ENTITY_ATTACHED(iVar1))
							{
								ENTITY::DETACH_ENTITY(iVar1, true, true);
							}
							else
							{
								Var2 = { __LIB_10__.func_945(uParam1->f_8[iVar0], 1) };
								ENTITY::SET_ENTITY_COORDS(iVar1, Var2, true, false, false, true);
								uParam1->f_4[iVar0] = 0;
								uParam1->f_8[iVar0] = -1;
								(*uParam1)[iVar0] = 0;
								return 1;
							}
						}
					}
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_306(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1D0C80
{
	int iVar0;
	iVar0 = __LIB_4__.func_865(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_19__.func_832(iParam0, iParam2));
	return iVar0;
}

int func_307(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1D1085
{
	int iVar0;
	iVar0 = __LIB_4__.func_866(iParam0, iParam1, iParam3);
	if (!__LIB_0__.func_114(iParam0))
	{
		iVar0 = (iVar0 + __LIB_19__.func_833(iParam0, iParam2));
	}
	return iVar0;
}

int func_308(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6)//Position - 0x1D2BD1
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0++;
			break;
		case 24:
			iVar0++;
			break;
		case 10:
			switch (iParam1)
			{
				case 30:
					iVar0 += 4;
					break;
				case 31:
				case 32:
					iVar0 += 3;
					break;
			}
			break;
		case 33:
			switch (iParam1)
			{
				case 89:
					iVar0++;
					break;
				case 90:
					iVar0 += 2;
					break;
			}
			break;
		case 36:
			iVar0 += 2;
			break;
		case 37:
			iVar0 += 2;
			break;
		case 38:
			iVar0++;
			break;
		case 8:
			iVar0 += 7;
			break;
		case 13:
			switch (iParam1)
			{
				case 38:
					iVar0 += 3;
					break;
				case 39:
					iVar0 += 3;
					break;
				case 40:
					iVar0 += 4;
					break;
			}
			break;
		case 16:
			iVar0 += 12;
			break;
		case 35:
			iVar0 += 4;
			break;
		case 4:
			iVar0 += 16;
			break;
		case 46:
			iVar0++;
			break;
		case 9:
			iVar0 += 7;
			break;
		case 14:
			iVar0 += 7;
			break;
		case 17:
			iVar0 += 7;
			break;
		case 47:
			iVar0 += 2;
			break;
		case 11:
			iVar0 += 3;
			break;
		case 18:
			iVar0 += 4;
			break;
		case 6:
			iVar0 += 11;
			break;
		case 48:
			iVar0 += 2;
			break;
		case 44:
			iVar0 += 2;
			break;
		case 21:
			iVar0 += 8;
			break;
		case 22:
			iVar0 += 3;
			break;
		case 7:
			iVar0 += 7;
			break;
		case 15:
			iVar0++;
			break;
		case 2:
			iVar0++;
			break;
		case 34:
			iVar0 += 5;
			break;
		case 27:
			iVar0 += 9;
			break;
		case 26:
			iVar0 += 3;
			break;
		case 31:
			iVar0++;
			break;
		case 3:
			iVar0 += 21;
			break;
		case 12:
			iVar0 += 20;
			break;
		case 41:
			iVar0 += 11;
			break;
		case 49:
			iVar0 += 3;
			break;
		case 29:
			iVar0++;
			break;
		case 5:
			iVar0 += 3;
			break;
		case 50:
			iVar0 += 4;
			break;
		case 23:
			iVar0 += 4;
			break;
		case 20:
			iVar0 += 3;
			break;
		case 32:
			iVar0 = iVar0;
			break;
		case 51:
			iVar0 += 4;
			break;
		case 52:
			iVar0 += 6;
			break;
		case 39:
			iVar0 += 2;
			break;
		case 40:
			iVar0++;
			break;
		case 25:
			iVar0 += 3;
			break;
	}
	if (!bParam5)
	{
		iVar0 = (iVar0 + __LIB_4__.func_894(iParam0, -1));
	}
	if (!bParam6)
	{
		if (__LIB_4__.func_893(0, iParam1) != -1)
		{
			iVar0 = (iVar0 + __LIB_19__.func_836(__LIB_13__.func_268(iParam2) + 1, iParam0, iParam2));
		}
	}
	if (!bParam3)
	{
		if (__LIB_8__.func_146(iParam0, iParam1))
		{
			iVar0 = (iVar0 + __LIB_4__.func_892(iParam0, iParam1));
		}
	}
	return iVar0;
}

int func_309(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x1D3FF3
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = iVar0;
			break;
		case 1:
			iVar0 += 5;
			break;
		case 2:
			iVar0 += 2;
			break;
		case 3:
			iVar0++;
			break;
		case 4:
			iVar0 += 3;
			break;
		case 5:
			iVar0 += 2;
			break;
		case 8:
			iVar0 += 3;
			break;
		case 6:
			iVar0++;
			break;
		case 12:
			iVar0 += 2;
			break;
		case 7:
			iVar0 += 6;
			break;
		case 9:
			iVar0 = iVar0;
			break;
		case 11:
			iVar0 = iVar0;
			break;
		case 13:
			iVar0 += 2;
			break;
		case 10:
			iVar0 += 4;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_4__.func_873(iParam0))
		{
			if (iParam3 != __LIB_0__.func_160())
			{
				iVar0 = (iVar0 + __LIB_19__.func_8(iParam0, __LIB_13__.func_268(iParam3) + 1, iParam3, -1, iParam2));
			}
		}
		if (iParam3 != __LIB_0__.func_160())
		{
			iVar0 = (iVar0 + __LIB_8__.func_148(iParam0, __LIB_13__.func_268(iParam3) + 1));
		}
	}
	if (!bParam6)
	{
		if (__LIB_4__.func_902(0, iParam1) != -1)
		{
			if (iParam3 != __LIB_0__.func_160())
			{
				iVar0 = (iVar0 + __LIB_1__.func_363(__LIB_13__.func_268(iParam3) + 1, iParam0));
			}
		}
	}
	if (!bParam4)
	{
		if (__LIB_8__.func_947(iParam0))
		{
			iVar0 = (iVar0 + __LIB_4__.func_901(iParam0));
		}
	}
	return iVar0;
}

int func_310(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x1D4274
{
	int iVar0;
	switch (iParam0)
	{
		case 11:
			iVar0 += 9;
			break;
		case 1:
			iVar0 = iVar0;
			break;
		case 7:
			iVar0 += 10;
			break;
		case 2:
			iVar0 += 12;
			break;
		case 4:
			iVar0 += 10;
			break;
		case 8:
			iVar0++;
			break;
		case 5:
			iVar0 += 2;
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					iVar0++;
					break;
				case 1:
					iVar0++;
					break;
				case 2:
					iVar0 = iVar0;
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 3:
					iVar0 += 4;
					break;
				case 4:
					iVar0 += 2;
					break;
				case 5:
					iVar0 += 5;
					break;
			}
			break;
		case 3:
			if (iParam2 >= 4)
			{
				iVar0 += 10;
			}
			else if (iParam2 == 3)
			{
				iVar0 += 8;
			}
			else if (iParam2 == 2)
			{
				iVar0 += 7;
			}
			else if (iParam2 == 1)
			{
				iVar0 += 6;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 34:
					iVar0++;
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 6:
					iVar0++;
					break;
				case 7:
					iVar0 += 4;
					break;
				case 8:
					iVar0 += 2;
					break;
			}
			break;
		case 0:
			if (iParam2 >= 3)
			{
				iVar0 += 2;
			}
			else
			{
				iVar0++;
			}
			break;
		case 23:
			iVar0 = (iVar0 + iParam2);
			break;
		case 20:
			iVar0 += 5;
			break;
		case 22:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 25:
			iVar0 = (iVar0 + iParam2);
			break;
		case 24:
			iVar0 = (iVar0 + (3 * iParam2));
			break;
		case 16:
			iVar0 = (iVar0 + (5 * iParam2));
			break;
		case 17:
			iVar0 += 5;
			break;
		case 26:
			iVar0++;
			break;
	}
	if (!bParam5)
	{
		if (__LIB_8__.func_144(iParam0))
		{
			if (iParam3 != __LIB_0__.func_160())
			{
				iVar0 = (iVar0 + __LIB_25__.func_972(iParam0, __LIB_13__.func_268(iParam3) + 1, iParam3, -1, iParam2));
			}
		}
		if (iParam3 != __LIB_0__.func_160())
		{
			iVar0 = (iVar0 + __LIB_4__.func_905(iParam0, __LIB_13__.func_268(iParam3) + 1));
		}
	}
	if (!bParam6)
	{
		if (__LIB_4__.func_904(0, iParam1) != -1)
		{
			if (iParam3 != __LIB_0__.func_160())
			{
				iVar0 = (iVar0 + __LIB_8__.func_150(__LIB_13__.func_268(iParam3) + 1, iParam0));
			}
		}
	}
	if (!bParam4)
	{
		if (__LIB_8__.func_149(iParam0))
		{
			iVar0 = (iVar0 + __LIB_4__.func_903(iParam0));
		}
	}
	return iVar0;
}

int func_311(int iParam0, int iParam1)//Position - 0x1D8714
{
	if (__LIB_4__.func_682(iParam0, 1) && __LIB_4__.func_682(iParam1, 1))
	{
		return (__LIB_14__.func_219(iParam0) == __LIB_2__.func_191(iParam1) || __LIB_14__.func_219(iParam1) == __LIB_2__.func_191(iParam0));
	}
	return 0;
}

int func_312(int iParam0)//Position - 0x1E3942
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_6__.func_768(iParam0, 0))
		{
			return NETWORK::NETWORK_PLAYER_IS_ROCKSTAR_DEV(iParam0);
		}
	}
	return 0;
}

void func_313(var uParam0)//Position - 0x1E6CB4
{
	int iVar0;
	bool bVar1;
	if (uParam0->f_1467 == uParam0->f_1468)
	{
		iVar0 = uParam0->f_1468;
		bVar1 = false;
		while (!bVar1)
		{
			iVar0 = (iVar0 - 1);
			if (iVar0 < 0)
			{
				iVar0 = 21;
			}
			if (__LIB_26__.func_69(iVar0))
			{
				bVar1 = true;
			}
			if (!bVar1)
			{
				if (uParam0->f_1467 == iVar0)
				{
					bVar1 = true;
				}
			}
		}
		uParam0->f_2185 = -1;
		uParam0->f_1469 = 0;
		uParam0->f_1468 = iVar0;
	}
}

int func_314()//Position - 0x1E8A39
{
	if (__LIB_8__.func_303(PLAYER::PLAYER_ID()))
	{
		return BitTest(Global_4718592.f_24, 21);
	}
	return 0;
}

void func_315(var uParam0)//Position - 0x20507A
{
	if (CAM::IS_SCREEN_FADED_OUT())
	{
		HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("");
		HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(5);
		__LIB_26__.func_73(uParam0);
	}
}

void func_316(var uParam0)//Position - 0x205DFB
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	iVar0 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282());
	bVar1 = false;
	bVar2 = false;
	if (iVar0 > -1)
	{
		if ((((__LIB_1__.func_155(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282()), 1, 0) || BitTest(Global_1853348[iVar0 /*834*/].f_833, 8)) || BitTest(Global_1853348[iVar0 /*834*/].f_267.f_30, 2)) || __LIB_3__.func_859(PLAYER::INT_TO_PLAYERINDEX(iVar0))) || __LIB_3__.func_998(PLAYER::INT_TO_PLAYERINDEX(iVar0)))
		{
			bVar1 = true;
		}
	}
	if (__LIB_6__.func_317())
	{
		bVar1 = true;
		bVar2 = true;
	}
	if (BitTest(uParam0->f_47, 15))
	{
		bVar2 = true;
	}
	if (BitTest(Global_2815059.f_4660, 25))
	{
		bVar2 = true;
	}
	if (BitTest(Global_2815059.f_4661, 0))
	{
		bVar2 = true;
	}
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() && __LIB_6__.func_171(PLAYER::PLAYER_ID()))
	{
		bVar2 = true;
	}
	if (__LIB_0__.func_911(PLAYER::PLAYER_ID()))
	{
		if (PLAYER::IS_PLAYER_DEAD(PLAYER::PLAYER_ID()))
		{
			bVar2 = true;
		}
	}
	if (__LIB_8__.func_850(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282())) || Global_1931426 == 1)
	{
		bVar2 = true;
	}
	if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
	{
		if (__LIB_6__.func_336() == 1 || __LIB_6__.func_336() == 2)
		{
			bVar2 = true;
		}
		if (__LIB_0__.func_706())
		{
			bVar2 = true;
		}
		if (__LIB_26__.func_72())
		{
			bVar2 = true;
		}
	}
	if (!bVar2)
	{
		if (__LIB_6__.func_300(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282()), 0) && !bVar1)
		{
			if ((!CAM::IS_SCREEN_FADED_OUT() && !CAM::IS_SCREEN_FADING_OUT()) && !CAM::IS_SCREEN_FADING_IN())
			{
				if (!__LIB_8__.func_786())
				{
					CAM::DO_SCREEN_FADE_OUT(0);
				}
			}
		}
		else if (((BitTest(Global_2689235[iVar0 /*453*/].f_197, 0) || BitTest(Global_1892703[iVar0 /*599*/].f_519, 1)) || BitTest(Global_1892703[iVar0 /*599*/].f_519, 2)) || (BitTest(uParam0->f_47, 20) && !bVar1))
		{
			if ((!CAM::IS_SCREEN_FADED_OUT() && !CAM::IS_SCREEN_FADING_OUT()) && !CAM::IS_SCREEN_FADING_IN())
			{
				if (!__LIB_8__.func_786())
				{
					CAM::DO_SCREEN_FADE_OUT(500);
				}
			}
		}
		else if ((!__LIB_6__.func_300(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282()), 0) && !__LIB_0__.func_695(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282()), 0, 0)) || __LIB_1__.func_282() == 0)
		{
			if ((CAM::IS_SCREEN_FADED_OUT() && !CAM::IS_SCREEN_FADING_IN()) && !CAM::IS_SCREEN_FADING_OUT())
			{
				if (!BitTest(uParam0->f_47, 16))
				{
					if (__LIB_1__.func_264(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__.func_282()), 1, 1))
					{
						if (ENTITY::HAS_COLLISION_LOADED_AROUND_ENTITY(__LIB_1__.func_282()))
						{
							iVar3 = 2500;
							if (__LIB_6__.func_315() || __LIB_0__.func_493())
							{
								iVar3 = 3500;
							}
							if (!BitTest(Global_2815059.f_4660, 31))
							{
								if (!__LIB_8__.func_786())
								{
									CAM::DO_SCREEN_FADE_IN(iVar3);
									PAD::SET_CONTROL_VALUE_NEXT_FRAME(0 /*PLAYER_CONTROL*/, 98 /*INPUT_VEH_CINEMATIC_LR*/, 1f);
								}
							}
						}
					}
				}
			}
		}
	}
}

bool func_317()//Position - 0x2061AF
{
	return ((BitTest(Global_4718592.f_30, 12) && !__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0)) && BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_36.f_18, 14));
}

void func_318(var uParam0, int iParam1, struct<3> Param2, bool bParam3, struct<3> Param4)//Position - 0x207799
{
	struct<3> Var0;
	if (__LIB_0__.func_706())
	{
		return;
	}
	if (!CAM::DOES_CAM_EXIST(uParam0->f_1.f_39))
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam1))
		{
			Var0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		}
		else
		{
			Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Param4, 0f, Param2) };
		}
		uParam0->f_1.f_39 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
		if (ENTITY::DOES_ENTITY_EXIST(iParam1))
		{
			CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_1.f_39, iParam1, Param2, true);
			__LIB_8__.func_695(&(uParam0->f_1.f_39), iParam1, Param2);
		}
		else
		{
			CAM::SET_CAM_COORD(uParam0->f_1.f_39, Param4);
		}
		CAM::SET_CAM_ACTIVE(uParam0->f_1.f_39, true);
		CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
		MISC::SET_BIT(&(uParam0->f_1), 15);
		if (!BitTest(Global_2621446, 18))
		{
			HUD::DISPLAY_RADAR(!bParam3);
		}
		if (__LIB_6__.func_329())
		{
			Var0 = { __LIB_6__.func_328() };
		}
		if (!__LIB_0__.func_86(Var0))
		{
			if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && !STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
			{
				STREAMING::SET_FOCUS_POS_AND_VEL(Var0, 0f, 0f, 0f);
			}
		}
		NETWORK::NETWORK_SET_IN_FREE_CAM_MODE(true);
		__LIB_7__.func_176(0, 0, 1);
		MISC::SET_BIT(&(uParam0->f_47), 1);
		__LIB_6__.func_151();
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_1.f_39, iParam1, Param2, true);
		__LIB_8__.func_695(&(uParam0->f_1.f_39), iParam1, Param2);
	}
}

void func_319(var uParam0, float fParam1, struct<3> Param2, struct<3> Param3, float fParam4, bool bParam5, int iParam6)//Position - 0x207A1A
{
	if (iParam6 == 0)
	{
		if (__LIB_0__.func_706())
		{
			return;
		}
	}
	if (!CAM::DOES_CAM_EXIST(uParam0->f_1.f_39))
	{
		uParam0->f_1.f_39 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
		CAM::SET_CAM_COORD(uParam0->f_1.f_39, Param2);
		CAM::SET_CAM_ROT(uParam0->f_1.f_39, Param3, 2);
		CAM::SET_CAM_FOV(uParam0->f_1.f_39, fParam4);
		CAM::SET_CAM_ACTIVE(uParam0->f_1.f_39, true);
		CAM::SHAKE_CAM(uParam0->f_1.f_39, "HAND_SHAKE", fParam1);
		CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
		MISC::SET_BIT(&(uParam0->f_1), 15);
		if (!BitTest(Global_2621446, 18))
		{
			HUD::DISPLAY_RADAR(!bParam5);
		}
		if (__LIB_6__.func_329())
		{
			Param2 = { __LIB_6__.func_328() };
		}
		if (!__LIB_0__.func_86(Param2))
		{
			if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && !STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
			{
				STREAMING::SET_FOCUS_POS_AND_VEL(Param2, 0f, 0f, 0f);
			}
		}
		NETWORK::NETWORK_SET_IN_FREE_CAM_MODE(true);
		__LIB_7__.func_176(0, 0, 1);
		MISC::SET_BIT(&(uParam0->f_47), 1);
		__LIB_6__.func_151();
	}
}

bool func_320(int iParam0)//Position - 0x7973
{
	float fVar0;
	float fVar1;
	fVar0 = SYSTEM::TO_FLOAT(__LIB_20__.func_347());
	fVar1 = (fVar0 * Global_262145.f_24528 /* Tunable: -43532675 */);
	return iParam0 > SYSTEM::ROUND(fVar1);
}

int func_321(var uParam0, bool bParam1)//Position - 0x181CD
{
	return NETWORK::NET_TO_VEH(__LIB_10__.func_983(uParam0, bParam1));
}

int func_322(var uParam0, bool bParam1, int iParam2)//Position - 0x181F1
{
	int iVar0;
	if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(__LIB_10__.func_984(uParam0, bParam1, iParam2)))
	{
		iVar0 = NETWORK::NET_TO_PED(__LIB_10__.func_984(uParam0, bParam1, iParam2));
	}
	return iVar0;
}

void func_323(var uParam0, int iParam1)//Position - 0x183FD
{
	switch (iParam1)
	{
		case 0:
			__LIB_10__.func_988(uParam0, 2);
			break;
		case 1:
			__LIB_10__.func_988(uParam0, 3);
			break;
	}
}

void func_324(var uParam0, int iParam1)//Position - 0x18456
{
	switch (iParam1)
	{
		case 0:
			__LIB_11__.func_0(uParam0, 2);
			break;
		case 1:
			__LIB_11__.func_0(uParam0, 3);
			break;
	}
}

int func_325()//Position - 0x191E0
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_1__.func_483(PLAYER::PLAYER_ID());
	iVar1 = 1;
	if (iVar0 != __LIB_0__.func_160())
	{
		iVar1 = (iVar1 + __LIB_13__.func_268(iVar0));
		if (iVar1 <= Global_262145.f_18675 /* Tunable: BIKER_CLUBHOUSE_MEDIUM_THRESHOLD */)
		{
			return 1;
		}
		else if (iVar1 > Global_262145.f_18675 /* Tunable: BIKER_CLUBHOUSE_MEDIUM_THRESHOLD */ && iVar1 <= Global_262145.f_18676 /* Tunable: BIKER_CLUBHOUSE_HARD_THRESHOLD */)
		{
			return 2;
		}
		else
		{
			return 3;
		}
	}
	return -1;
}

bool func_326(var uParam0)//Position - 0x19BD5
{
	return __LIB_11__.func_1(uParam0, 1);
}

char* func_327(var uParam0, var uParam1, var uParam2)//Position - 0xEB77E
{
	int iVar0;
	bool bVar1;
	if (__LIB_1__.func_288())
	{
		return "";
	}
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK18A" /* GXT: You cannot enter the Kosatka while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (BitTest(Global_1946250.f_4523, 3))
	{
		if (__LIB_4__.func_138(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_SUB" /* GXT: You cannot enter the Kosatka while holding the security case. */;
		}
	}
	if (__LIB_1__.func_909())
	{
		if (__LIB_4__.func_138(PLAYER::PLAYER_ID(), 242))
		{
			return "BAN_BLOCK_SUB" /* GXT: You cannot enter the Kosatka while holding the gold. */;
		}
		else if (__LIB_4__.func_138(PLAYER::PLAYER_ID(), 241))
		{
			return "JEW_BLOCK_SUB" /* GXT: You cannot enter the Kosatka while holding the diamonds. */;
		}
		else if (__LIB_4__.func_138(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_SUB" /* GXT: You cannot enter the Kosatka while holding the security case. */;
		}
		else if (__LIB_4__.func_138(PLAYER::PLAYER_ID(), 239))
		{
			return "VAN_BLOCK_SUB" /* GXT: You cannot enter the Kosatka while holding the antiques. */;
		}
	}
	iVar0 = __LIB_19__.func_321(0, 1);
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			bVar1 = __LIB_0__.func_582();
			if (__LIB_18__.func_604(PLAYER::PLAYER_ID(), 0))
			{
				return "H4_SUB_KICKd" /* GXT: You no longer have access to the Kosatka as you became a Prospect. */;
			}
			else if (bVar1 != __LIB_0__.func_160() && __LIB_2__.func_456(bVar1))
			{
				return "H4_SUB_KICKa" /* GXT: You no longer have access to the Kosatka as you became an Associate. */;
			}
			else
			{
				return "H4_SUB_KICKb" /* GXT: You no longer have access to the Kosatka as you became a Bodyguard. */;
			}
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && (PLAYER::PLAYER_ID() == iVar0 || __LIB_0__.func_582() == iVar0))
	{
		return "SUB_BLOCK_BALIS" /* GXT: You cannot enter the Kosatka whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_2__.func_104())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_2__.func_477())
	{
		return "SUB_BLOCK_PROS" /* GXT: You cannot enter the Kosatka with a prostitute. */;
	}
	if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 3)
	{
		return "SUP_BLOCK_SUB" /* GXT: You cannot enter the Kosatka whilst carrying Supplies. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) || __LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "SUB_MC_BLOCK_E" /* GXT: You cannot enter the Kosatka while active in a mission. */;
		}
	}
	if (Global_1835493 != 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("kosatka")) && !__LIB_0__.func_657(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				return "SUB_MC_BLOCK_V" /* GXT: You cannot enter the Kosatka while in a mission vehicle. */;
			}
		}
	}
	if (BitTest(Global_1946250.f_7, 9))
	{
		if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				return "H4_SUB_SUTAR" /* GXT: You cannot enter the Kosatka in this area. Move the Kosatka to a suitable area. */;
			}
		}
	}
	return "";
}

int func_328(int iParam0, var uParam1)//Position - 0x142324
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bVar0 = PLAYER::PLAYER_ID();
	bVar1 = __LIB_0__.func_582();
	bVar2 = false;
	if (__LIB_2__.func_459())
	{
		return 0;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		bVar0 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9;
	}
	if (bVar0 != __LIB_0__.func_160())
	{
		if ((((__LIB_3__.func_803(bVar0) == 237 || __LIB_3__.func_803(bVar0) == 250) || __LIB_3__.func_803(bVar0) == 238) || __LIB_3__.func_803(bVar0) == 249) || __LIB_3__.func_803(bVar0) == 299)
		{
			if (__LIB_1__.func_570(bVar0))
			{
				bVar2 = true;
			}
		}
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		if (!__LIB_1__.func_264(bVar0, 0, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 6);
			return 1;
		}
		if (__LIB_7__.func_864(bVar0) != iParam0)
		{
			MISC::SET_BIT(&Global_1946250, 18);
			return 1;
		}
		if (bVar2)
		{
			if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && __LIB_3__.func_898(PLAYER::PLAYER_ID(), bVar0))
			{
				if (!BitTest(Global_1946250.f_506, 9))
				{
					if (__LIB_3__.func_803(bVar0) == 237 && !__LIB_18__.func_661(bVar0))
					{
						Global_1946250.f_3377 = 5;
					}
					else if ((__LIB_3__.func_803(bVar0) == 238 || __LIB_3__.func_803(bVar0) == 250) || __LIB_18__.func_661(bVar0))
					{
						Global_1946250.f_3377 = 99;
					}
					return 1;
				}
			}
			else if (__LIB_3__.func_803(bVar0) == 237 && __LIB_6__.func_367() != 0)
			{
				MISC::SET_BIT(&(Global_1946250.f_506), 8);
				return !BitTest(Global_1946250.f_506, 9);
			}
		}
		else if ((__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && !__LIB_3__.func_999(PLAYER::PLAYER_ID(), bVar0)) && __LIB_6__.func_367() != 0)
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 10);
			return 1;
		}
		if ((Global_1578979 >= 10 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 0) && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 1)
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 13);
			__LIB_7__.func_755(bVar0, 1);
			return 1;
		}
	}
	else if (bVar2)
	{
		if (__LIB_3__.func_803(bVar0) == 238 && !BitTest(Global_1946250.f_506, 9))
		{
			Global_1946250.f_3377 = 99;
		}
		return !BitTest(Global_1946250.f_506, 9);
	}
	else if (__LIB_6__.func_367() != 0 && __LIB_4__.func_973(0))
	{
		MISC::SET_BIT(&(Global_1946250.f_506), 10);
		return 1;
	}
	if ((__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 264 && __LIB_2__.func_234(PLAYER::PLAYER_ID()) == 1) || (bVar1 != __LIB_0__.func_160() && __LIB_4__.func_109(bVar1, 22)))
	{
		if (__LIB_6__.func_367() == 0)
		{
			return 1;
		}
	}
	if (BitTest(Global_1946250.f_506, 14))
	{
		return 1;
	}
	if ((BitTest(Global_1946250.f_506, 9) && !bVar2) && bVar0 != __LIB_0__.func_160())
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_506), 9);
	}
	return 0;
}

void func_329(int iParam0)//Position - 0x1BC05A
{
	int iVar0;
	iVar0 = __LIB_20__.func_393(iParam0);
	if (iVar0 > 0)
	{
		__LIB_20__.func_392(iParam0, iVar0);
	}
}

void func_330(int iParam0, int iParam1)//Position - 0x1BC27D
{
	int iVar0;
	if ((iParam0 == -1 || iParam0 == 7) || iParam1 < 0)
	{
		return;
	}
	iVar0 = __LIB_0__.func_228(__LIB_11__.func_16(iParam0), -1);
	if (iVar0 > __LIB_10__.func_928(iParam0))
	{
		return;
	}
	if ((iVar0 + iParam1) > 255)
	{
		return;
	}
	__LIB_1__.func_39(__LIB_11__.func_16(iParam0), (iVar0 + iParam1), -1);
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_33[iParam0] = (iVar0 + iParam1);
}

void func_331()//Position - 0x1BC3EE
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		iVar1 = iVar0;
		iVar2 = __LIB_20__.func_393(iVar1);
		if (iVar2 > 0)
		{
			__LIB_20__.func_392(iVar1, iVar2);
		}
		iVar0++;
	}
}

void func_332(var uParam0, int iParam1)//Position - 0x1BC4E2
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		if ((*uParam0)[iVar0] > 0)
		{
			iVar2 = __LIB_20__.func_393(iVar0);
			if ((*uParam0)[iVar0] > iVar2)
			{
				return;
			}
			if (iVar2 > 0)
			{
				iVar3 = iVar0;
				__LIB_20__.func_392(iVar3, (*uParam0)[iVar0]);
				if (iParam1 > -1)
				{
					iVar1 = 0;
					while (iVar1 < 3)
					{
						if (Global_1964472[iParam1 /*10*/].f_1[iVar1] == iVar3)
						{
							Global_1964472[iParam1 /*10*/].f_5[iVar1] = (Global_1964472[iParam1 /*10*/].f_5[iVar1] - (*uParam0)[iVar0]);
						}
						iVar1++;
					}
				}
			}
		}
		iVar0++;
	}
}

int func_333(int iParam0)//Position - 0x1BDAE8
{
	float fVar0;
	float fVar1;
	float fVar2;
	fVar0 = SYSTEM::TO_FLOAT(__LIB_20__.func_347());
	fVar1 = (fVar0 * Global_262145.f_24534 /* Tunable: 1775809810 */);
	fVar2 = (fVar0 * Global_262145.f_24533 /* Tunable: -192251228 */);
	if (iParam0 > SYSTEM::ROUND(fVar2) && iParam0 <= SYSTEM::ROUND(fVar1))
	{
		return 1;
	}
	return 0;
}

int func_334(int iParam0, int iParam1)//Position - 0x1CA75A
{
	float fVar0;
	float fVar1;
	fVar0 = __LIB_9__.func_873(iParam0, iParam1);
	fVar1 = (SYSTEM::TO_FLOAT(__LIB_20__.func_349(iParam0, iParam1)) * fVar0);
	return SYSTEM::ROUND(fVar1);
}

int func_335(char* sParam0, char* sParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x1CEAD5
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	iVar0 = -1;
	HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	if (!iParam3 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam3);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	if (!bParam4)
	{
		iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
	}
	else
	{
		Global_2787505 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
		if (NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&Global_2787435, 35, &Global_2787505))
		{
			bVar1 = false;
			if (MISC::ARE_STRINGS_EQUAL(&(Global_2787435.f_22), "Leader") && Global_2787435.f_30 == 0)
			{
				bVar1 = true;
			}
			if (Global_2787435.f_21 > 0)
			{
				bVar2 = false;
			}
			else
			{
				bVar2 = true;
			}
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(bVar2, NETWORK::NETWORK_CLAN_IS_ROCKSTAR_CLAN(&Global_2787435, 35), &(Global_2787435.f_17), Global_2787435.f_30, bVar1, false, Global_2787435, PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()), Global_1576215, Global_1576216, Global_1576217);
		}
		else
		{
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		}
	}
	__LIB_18__.func_263(8, sParam0, 1, sParam1, 0, 0, 0, 0, 1, 0, 0, 0);
	return iVar0;
}

void func_336(float fParam0)//Position - 0x1D2D99
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_9__.func_568(fParam0);
	iVar1 = __LIB_1__.func_556(7213, -1, 0);
	iVar2 = __LIB_0__.func_310((iVar1 + iVar0), 0, 1000);
	if (iVar2 != iVar1)
	{
		__LIB_1__.func_597(7213, iVar2, -1, 1, 0);
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_4 = __LIB_19__.func_868();
	}
}

int func_337(bool bParam0, bool bParam1, bool bParam2)//Position - 0x1EF8ED
{
	int iVar0;
	int iVar1;
	if (bParam0)
	{
		if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	if (bParam2)
	{
		return 1;
	}
	if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		return 0;
	}
	if (__LIB_0__.func_77(0))
	{
		return 0;
	}
	if (__LIB_0__.func_190())
	{
		return 0;
	}
	if (NETWORK::NETWORK_TEXT_CHAT_IS_TYPING())
	{
		return 0;
	}
	if (Global_75485)
	{
		return 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appinternet")) > 0)
	{
		return 0;
	}
	if (Global_60335)
	{
		return 0;
	}
	if (bParam1)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (PED::IS_PED_IN_ANY_BOAT(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 4)
				{
					return 0;
				}
			}
			else if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 4)
				{
					return 0;
				}
			}
			else if (PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 4)
				{
					return 0;
				}
			}
			else if (PED::IS_PED_IN_ANY_SUB(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 4)
				{
					return 0;
				}
			}
			else if (PED::IS_PED_ON_ANY_BIKE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 4)
				{
					return 0;
				}
			}
			else if (CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 3 || CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 4)
			{
				return 0;
			}
			if (CAM::IS_GAMEPLAY_CAM_LOOKING_BEHIND())
			{
				return 0;
			}
		}
	}
	if ((__LIB_0__.func_185() || __LIB_0__.func_307(Global_4718592.f_168757)) || __LIB_0__.func_175())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar1 = __LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0);
			if (((VEHICLE::IS_TURRET_SEAT(iVar0, iVar1) || (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("apc") && iVar1 != -1)) || (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("akula") && iVar1 != -1)) || (((ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("riot2") && iVar1 == 0) && __LIB_0__.func_305(iVar0, 10)) && VEHICLE::GET_VEHICLE_MOD(iVar0, 10) != -1))
			{
				return 0;
			}
		}
	}
	if (Global_1957727)
	{
		return 0;
	}
	if (__LIB_4__.func_681(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	return 1;
}

void func_338(int iParam0, var* uParam1, var uParam2, bool bParam3)//Position - 0x1F4B31
{
	struct<3> Var0;
	if (bParam3)
	{
		*uParam1 = { __LIB_6__.func_899(ENTITY::GET_ENTITY_COORDS(iParam0, true), 50f, (50f * 1.5f), 10f) };
	}
	else
	{
		Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_HEADING(iParam0), 0f, 120f, 0f) };
		*uParam1 = { __LIB_6__.func_899(Var0, (50f / 2f), 50f, 10f) };
	}
	*uParam2 = __LIB_0__.func_670(*uParam1, ENTITY::GET_ENTITY_COORDS(iParam0, true));
}

int func_339()//Position - 0x201687
{
	if (__LIB_7__.func_452(Global_2703735, 1))
	{
		return 50;
	}
	return 0;
}

Vector3 func_340(bool bParam0)//Position - 0x201751
{
	int iVar0;
	if (__LIB_20__.func_339(bParam0))
	{
		iVar0 = PLAYER::GET_PLAYER_PED(bParam0);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			return ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false);
		}
	}
	return 0f, 0f, 0f;
}

var func_341(bool bParam0)//Position - 0x216CE1
{
	var uVar0;
	int iVar1;
	iVar1 = PLAYER::PLAYER_ID();
	if (bParam0)
	{
		if (__LIB_8__.func_450(4, 0))
		{
			MISC::SET_BIT(&uVar0, 0);
		}
		if (__LIB_8__.func_450(5, 0))
		{
			MISC::SET_BIT(&uVar0, 1);
		}
		if (__LIB_8__.func_450(6, 1))
		{
			MISC::SET_BIT(&uVar0, 2);
		}
		if (__LIB_8__.func_450(1, 0))
		{
			MISC::SET_BIT(&uVar0, 3);
		}
		if (__LIB_8__.func_450(2, 0))
		{
			MISC::SET_BIT(&uVar0, 4);
		}
		if (__LIB_8__.func_450(3, 0))
		{
			MISC::SET_BIT(&uVar0, 5);
		}
		if ((((__LIB_5__.func_686(61) || __LIB_5__.func_686(62)) || __LIB_5__.func_686(63)) || __LIB_5__.func_686(64)) || __LIB_5__.func_686(65))
		{
			MISC::SET_BIT(&uVar0, 6);
		}
		if (__LIB_2__.func_456(iVar1))
		{
			MISC::SET_BIT(&uVar0, 7);
		}
		if (__LIB_5__.func_685(iVar1, 0))
		{
			MISC::SET_BIT(&uVar0, 8);
		}
		if (__LIB_5__.func_685(iVar1, 1))
		{
			MISC::SET_BIT(&uVar0, 9);
		}
		if (__LIB_5__.func_685(iVar1, 2))
		{
			MISC::SET_BIT(&uVar0, 10);
		}
		if (__LIB_5__.func_554(iVar1))
		{
			MISC::SET_BIT(&uVar0, 11);
		}
		if (__LIB_8__.func_449(iVar1, 3))
		{
			MISC::SET_BIT(&uVar0, 12);
		}
		if (__LIB_8__.func_449(iVar1, 4))
		{
			MISC::SET_BIT(&uVar0, 13);
		}
		if (__LIB_8__.func_449(iVar1, 2))
		{
			MISC::SET_BIT(&uVar0, 14);
		}
		if (__LIB_8__.func_449(iVar1, 6))
		{
			MISC::SET_BIT(&uVar0, 15);
		}
		if (__LIB_8__.func_449(iVar1, 5))
		{
			MISC::SET_BIT(&uVar0, 16);
		}
		if (__LIB_4__.func_987(iVar1))
		{
			MISC::SET_BIT(&uVar0, 17);
		}
		if (__LIB_8__.func_449(iVar1, 1))
		{
			MISC::SET_BIT(&uVar0, 18);
		}
		if (__LIB_1__.func_247(iVar1))
		{
			MISC::SET_BIT(&uVar0, 19);
		}
		if (__LIB_4__.func_107(iVar1))
		{
			MISC::SET_BIT(&uVar0, 20);
		}
		if (__LIB_4__.func_135(iVar1))
		{
			MISC::SET_BIT(&uVar0, 21);
		}
		if (__LIB_1__.func_186(iVar1))
		{
			MISC::SET_BIT(&uVar0, 22);
		}
		if (__LIB_4__.func_139(iVar1))
		{
			MISC::SET_BIT(&uVar0, 23);
		}
		if (__LIB_4__.func_140(iVar1))
		{
			MISC::SET_BIT(&uVar0, 24);
		}
		if (__LIB_1__.func_333(iVar1))
		{
			MISC::SET_BIT(&uVar0, 25);
		}
		if (__LIB_3__.func_457(iVar1))
		{
			MISC::SET_BIT(&uVar0, 26);
		}
		if (__LIB_8__.func_448())
		{
			MISC::SET_BIT(&uVar0, 27);
		}
		if (__LIB_4__.func_152(iVar1))
		{
			MISC::SET_BIT(&uVar0, 28);
		}
		if (__LIB_4__.func_136(iVar1))
		{
			MISC::SET_BIT(&uVar0, 29);
		}
		if (__LIB_2__.func_593(iVar1))
		{
			MISC::SET_BIT(&uVar0, 30);
		}
		if (__LIB_2__.func_474(iVar1))
		{
			MISC::SET_BIT(&uVar0, 31);
		}
	}
	return uVar0;
}

int func_342(int iParam0, int iParam1, bool bParam2, int iParam3)//Position - 0x21C830
{
	int iVar0;
	iVar0 = __LIB_4__.func_865(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_19__.func_786(iParam0, bParam2));
	return iVar0;
}

void func_343(var uParam0)//Position - 0x2290B2
{
	if (CAM::DOES_CAM_EXIST(uParam0->f_1.f_39))
	{
		if (CAM::GET_RENDERING_CAM() == uParam0->f_1.f_39)
		{
			CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
		}
		CAM::DESTROY_CAM(uParam0->f_1.f_39, false);
		if (__LIB_18__.func_618() && !__LIB_0__.func_706())
		{
			STREAMING::CLEAR_FOCUS();
		}
		MISC::CLEAR_BIT(&(uParam0->f_1), 15);
		if ((!BitTest(Global_2621446, 18) && uParam0->f_47.f_1467 != 10) && uParam0->f_47.f_1467 != 11)
		{
			HUD::DISPLAY_RADAR(true);
		}
		uParam0->f_1.f_41 = 0;
		__LIB_8__.func_779(1, __LIB_1__.func_282(), 1);
		MISC::SET_BIT(&(uParam0->f_47), 1);
		__LIB_6__.func_151();
		__LIB_6__.func_287(0);
		__LIB_6__.func_286();
	}
	if (BitTest(uParam0->f_1, 16))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 16);
	}
	if (BitTest(uParam0->f_1, 17))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 17);
	}
}

int func_344(int iParam0, bool bParam1)//Position - 0x2348FD
{
	if (!__LIB_7__.func_594(PLAYER::PLAYER_ID(), iParam0))
	{
		return 0;
	}
	if (!bParam1 && !__LIB_16__.func_672(PLAYER::PLAYER_ID(), iParam0))
	{
		return 0;
	}
	if (!bParam1 && !__LIB_8__.func_126(PLAYER::PLAYER_ID(), __LIB_4__.func_816(iParam0)))
	{
		return 0;
	}
	return 1;
}

void func_345()//Position - 0x23722B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = 0;
	iVar3 = -1;
	iVar0 = 0;
	while (iVar0 < 10)
	{
		iVar2 = (iVar0 + __LIB_18__.func_704(12));
		__LIB_1__.func_327(iVar2, &iVar1, 1);
		if (iVar1 >= 0)
		{
			if (Global_1585857[iVar1 /*142*/].f_66 != 0 && __LIB_7__.func_193(Global_1585857[iVar1 /*142*/].f_66, 1))
			{
				if (Global_2815059.f_958 != iVar1)
				{
					if (__LIB_1__.func_177(Global_1585857[iVar1 /*142*/].f_66))
					{
						if (Global_1585857[iVar1 /*142*/].f_66 != 0)
						{
							iVar3 = Global_1585857[iVar1 /*142*/].f_66;
						}
						switch (iVar0)
						{
							case 0:
								Global_1944113.f_38 = iVar3;
								break;
							case 1:
								Global_1944113.f_39 = iVar3;
								break;
							case 2:
								Global_1944113.f_40 = iVar3;
								break;
							case 3:
								Global_1944113.f_41 = iVar3;
								break;
							case 4:
								Global_1944113.f_42 = iVar3;
								break;
							case 5:
								Global_1944113.f_43 = iVar3;
								break;
							case 6:
								Global_1944113.f_44 = iVar3;
								break;
							case 7:
								Global_1944113.f_45 = iVar3;
								break;
							case 8:
								Global_1944113.f_46 = iVar3;
								break;
							case 9:
								Global_1944113.f_47 = iVar3;
								break;
							}
						}
					}
				}
		}
		iVar0++;
	}
}

var func_346()//Position - 0x237371
{
	var uVar0;
	uVar0 = __LIB_13__.func_416();
	if (!__LIB_2__.func_232())
	{
		if (__LIB_0__.func_582() != __LIB_0__.func_160())
		{
			uVar0 = __LIB_13__.func_268(__LIB_0__.func_582()) + 1;
		}
	}
	return uVar0;
}

int func_347(int iParam0, bool bParam1, bool bParam2)//Position - 0x237809
{
	int iVar0;
	int iVar1;
	if (__LIB_2__.func_491(iParam0))
	{
		if (!bParam1 && bParam2)
		{
			iVar0 = Global_262145.f_18216 /* Tunable: BIKER_MC_POINTS_FAIL_MISSION */;
		}
		else if (!bParam2)
		{
			iVar0 = Global_262145.f_18215 /* Tunable: -782187318 */;
		}
		else
		{
			iVar0 = Global_262145.f_18197 /* Tunable: BIKER_MC_POINTS_PASS_MISSION */;
		}
		iVar1 = 19;
	}
	else if (__LIB_2__.func_492(iParam0))
	{
		iVar0 = 6;
		iVar1 = 24;
	}
	else if (__LIB_1__.func_266(iParam0, 0))
	{
		if (bParam1)
		{
			iVar0 = Global_262145.f_18196 /* Tunable: BIKER_MC_POINTS_WIN_CHALLENGE */;
			iVar1 = 20;
		}
	}
	else if (__LIB_10__.func_929(iParam0))
	{
		if (!bParam1 && bParam2)
		{
			iVar0 = Global_262145.f_18216 /* Tunable: BIKER_MC_POINTS_FAIL_MISSION */;
		}
		else if (!bParam2)
		{
			iVar0 = Global_262145.f_18215 /* Tunable: -782187318 */;
		}
		else
		{
			iVar0 = Global_262145.f_18197 /* Tunable: BIKER_MC_POINTS_PASS_MISSION */;
		}
		iVar1 = 18;
	}
	if (iVar0 != 0)
	{
		STATS::PLAYSTATS_EARNED_MC_POINTS(__LIB_1__.func_835(__LIB_0__.func_582()), __LIB_3__.func_639(__LIB_0__.func_582()), __LIB_1__.func_834(), __LIB_1__.func_833(), iVar1, iVar0);
	}
	__LIB_1__.func_832(iVar0);
	__LIB_16__.func_549(iVar0);
	return iVar0;
}

void func_348()//Position - 0x238515
{
	int iVar0;
	if (__LIB_11__.func_76())
	{
		__LIB_10__.func_976(8);
		__LIB_10__.func_976(9);
		__LIB_10__.func_976(10);
		__LIB_10__.func_976(12);
		__LIB_10__.func_976(13);
		__LIB_10__.func_976(14);
		__LIB_10__.func_976(19);
		__LIB_10__.func_976(20);
		__LIB_10__.func_976(21);
		__LIB_10__.func_976(22);
		__LIB_10__.func_976(23);
		__LIB_10__.func_976(24);
		__LIB_10__.func_976(25);
		__LIB_10__.func_976(26);
		__LIB_10__.func_976(15);
		__LIB_10__.func_976(16);
		__LIB_10__.func_976(17);
		__LIB_10__.func_976(18);
		__LIB_10__.func_976(35);
		__LIB_10__.func_976(45);
		__LIB_10__.func_976(46);
		if (__LIB_10__.func_924(11))
		{
			__LIB_10__.func_976(11);
			iVar0 = __LIB_1__.func_556(7229, -1, 0);
			MISC::SET_BIT(&iVar0, 2);
			__LIB_1__.func_597(7229, iVar0, -1, 1, 0);
		}
	}
	if (__LIB_10__.func_924(48))
	{
		if (__LIB_3__.func_640(151, 3))
		{
			__LIB_6__.func_826(151, 3);
		}
		__LIB_10__.func_976(48);
	}
	if (__LIB_10__.func_924(49))
	{
		if (__LIB_3__.func_640(152, 3))
		{
			__LIB_6__.func_826(152, 3);
		}
		__LIB_10__.func_976(49);
	}
	if (__LIB_10__.func_924(50))
	{
		if (__LIB_3__.func_640(153, 3))
		{
			__LIB_6__.func_826(153, 3);
		}
		__LIB_10__.func_976(50);
	}
	if (__LIB_10__.func_924(51))
	{
		if (__LIB_3__.func_640(__LIB_20__.func_406(), 3))
		{
			__LIB_6__.func_826(__LIB_20__.func_406(), 3);
		}
		__LIB_10__.func_976(51);
	}
}

int func_349(int iParam0)//Position - 0x107B3F
{
	int iVar0;
	switch (iParam0)
	{
		case 31:
			return __LIB_26__.func_268(iParam0);
		case 38:
			return __LIB_10__.func_744();
		case 89:
			iVar0 = 0;
			iVar0 = 0;
			while (iVar0 <= 2)
			{
				if (!__LIB_10__.func_746(iVar0))
				{
					return 0;
				}
				iVar0++;
			}
			break;
		case 55:
			return __LIB_10__.func_747();
		case 86:
			iVar0 = 0;
			iVar0 = 0;
			while (iVar0 <= 2)
			{
				if (!__LIB_10__.func_745(iVar0))
				{
					return 0;
				}
				iVar0++;
			}
			break;
	}
	return 1;
}

int func_350()//Position - 0x13B1A2
{
	int iVar0;
	if (!__LIB_20__.func_43())
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		if (!__LIB_10__.func_743(iVar0))
		{
			return 0;
		}
		if (!__LIB_10__.func_741(iVar0))
		{
			return 0;
		}
		iVar0++;
	}
	if (!__LIB_26__.func_270())
	{
		return 0;
	}
	return 1;
}

int func_351(int iParam0)//Position - 0x157AC4
{
	if (__LIB_10__.func_523())
	{
		switch (iParam0)
		{
			case 86:
			case 10:
			case 31:
			case 33:
			case 55:
			case 38:
				if (!__LIB_26__.func_268(iParam0))
				{
					return 0;
				}
				break;
			}
	}
	return 1;
}

int func_352()//Position - 0x157BBF
{
	if ((Local_124.f_443 == 2 && !BitTest(iLocal_420, 4)) && !iLocal_523)
	{
		if (__LIB_20__.func_29())
		{
			if (__LIB_26__.func_268(38))
			{
				return 1;
			}
		}
		else if (__LIB_20__.func_57())
		{
			if (__LIB_26__.func_268(55))
			{
				return 1;
			}
		}
		else if (__LIB_4__.func_532() || __LIB_4__.func_531())
		{
			if ((((__LIB_26__.func_268(38) && __LIB_26__.func_268(86)) && __LIB_26__.func_268(55)) && __LIB_26__.func_268(89)) && __LIB_26__.func_268(31))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_353()//Position - 0x1C5879
{
	if (__LIB_10__.func_523())
	{
		if (Local_124.f_116.f_31 == 2)
		{
			switch (Local_124.f_443)
			{
				case 33:
				case 38:
				case 86:
				case 55:
					if (__LIB_26__.func_268(Local_124.f_443))
					{
						__LIB_18__.func_455();
					}
					break;
				}
		}
	}
	else if (__LIB_4__.func_532() || __LIB_4__.func_531())
	{
		if (Local_124.f_116.f_31 == 2)
		{
			switch (Local_124.f_443)
			{
				case 89:
				case 33:
				case 38:
				case 86:
				case 55:
				case 31:
					if (__LIB_26__.func_268(Local_124.f_443))
					{
						__LIB_18__.func_455();
					}
					break;
				}
			}
	}
}

void func_354(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x26035
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	PLAYER::SET_EVERYONE_IGNORE_PLAYER(iVar0, false);
	PLAYER::SET_PLAYER_CONTROL(iVar0, bParam3, 0);
	__LIB_7__.func_279(0, 1, 0, 0, 0, 0, 0);
	if (iParam2 == 1)
	{
		HUD::DISPLAY_RADAR(true);
		HUD::DISPLAY_HUD(true);
	}
	HUD::CLEAR_HELP(true);
	if (iParam0 == 1)
	{
		CAM::SET_WIDESCREEN_BORDERS(false, 0);
	}
	if (iParam1 == 1)
	{
		if ((iLocal_39 != 0 && iLocal_39 != joaat("OBJECT")) && iLocal_39 != joaat("GADGET_PARACHUTE"))
		{
			if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
			{
				if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_39, false))
				{
					WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_39, false);
				}
			}
		}
	}
	if (__LIB_1__.func_197(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), false, 0);
	}
}

void func_355(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0x5C209
{
	int iVar0;
	iVar0 = __LIB_25__.func_78(iParam3);
	if (__LIB_1__.func_637(uParam0))
	{
		if (!BitTest(Global_1966339[iVar0], 2))
		{
			__LIB_7__.func_330(iVar0, uParam2, iParam1, 0, 0);
		}
	}
	else if (uParam0->f_12 > 0f)
	{
		if (!BitTest(Global_1966339[iVar0], 0) && !BitTest(Global_1966339[iVar0], 1))
		{
			__LIB_7__.func_330(iVar0, uParam2, iParam1, 1, 0);
		}
	}
	else if (!BitTest(Global_1966339[iVar0], 2))
	{
		__LIB_7__.func_330(iVar0, uParam2, iParam1, 0, 0);
	}
}

void func_356(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0x5C28F
{
	int iVar0;
	iVar0 = __LIB_25__.func_78(iParam3);
	if (__LIB_1__.func_637(uParam0))
	{
		if (!BitTest(Global_1966339[iVar0], 2))
		{
			__LIB_7__.func_330(iVar0, uParam2, iParam1, 0, 1);
		}
	}
	else if (uParam0->f_12 > 0f)
	{
		if (!BitTest(Global_1966339[iVar0], 0) && !BitTest(Global_1966339[iVar0], 1))
		{
			__LIB_7__.func_330(iVar0, uParam2, iParam1, 1, 1);
		}
	}
	else if (!BitTest(Global_1966339[iVar0], 2))
	{
		__LIB_7__.func_330(iVar0, uParam2, iParam1, 0, 1);
	}
}

int func_357(int iParam0, struct<3> Param1, struct<3> Param2, struct<3> Param3)//Position - 0x5F011
{
	struct<9> Var0;
	if (__LIB_3__.func_764())
	{
		if (!__LIB_0__.func_649(&uLocal_102))
		{
			__LIB_0__.func_580(&uLocal_102, 0, 0);
		}
		else if (__LIB_2__.func_47(&uLocal_102, 8000, 0))
		{
			__LIB_0__.func_579(&uLocal_102);
			__LIB_7__.func_352(0);
		}
	}
	if (!SCRIPT::IS_THREAD_ACTIVE(iLocal_104) && !SCRIPT::HAS_SCRIPT_WITH_NAME_HASH_LOADED(joaat("am_mp_drone")))
	{
		SCRIPT::REQUEST_SCRIPT("AM_MP_DRONE");
	}
	if ((SCRIPT::HAS_SCRIPT_WITH_NAME_HASH_LOADED(joaat("am_mp_drone")) && !SCRIPT::IS_THREAD_ACTIVE(iLocal_104)) && !__LIB_3__.func_764())
	{
		Var0.f_1 = -1;
		Var0.f_0 = 0;
		Var0.f_2 = { Param1 };
		Var0.f_5 = { Param2 };
		Var0.f_8 = { Param3 };
		Var0.f_1 = iParam0;
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("am_mp_drone")) < 1)
		{
			if (!NETWORK::NETWORK_IS_SCRIPT_ACTIVE("AM_MP_DRONE", Var0.f_0, true, 0))
			{
				iLocal_104 = SYSTEM::START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(joaat("am_mp_drone"), &Var0, 12, 1424);
				SCRIPT::SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(joaat("am_mp_drone"));
				__LIB_0__.func_579(&uLocal_102);
			}
			else
			{
				return 1;
			}
		}
	}
	else if (SCRIPT::IS_THREAD_ACTIVE(iLocal_104) && !__LIB_3__.func_764())
	{
		return 1;
	}
	return 0;
}

char* func_358(int iParam0)//Position - 0x157C5F
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	switch (iParam0)
	{
		case 3:
			if (!__LIB_10__.func_147() && !__LIB_10__.func_146())
			{
				return "CMOD_MOD_0_D" /* GXT: Full body repair and engine service. */;
			}
			else if (__LIB_10__.func_146())
			{
				return "SVM_VS_TRUCK_D" /* GXT: Customize your Mobile Operations Center. */;
			}
			else
			{
				return "SVM_VS_CAB_D" /* GXT: Customize the cab of your Mobile Operations Center. */;
			}
			break;
		case 4:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "CMOD_MOD_B1_D" /* GXT: Protect your bike with military spec composite body panels. */;
				break;
			}
			else if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0) || VEHICLE::IS_THIS_MODEL_A_HELI(iVar0))
			{
				return "CMOD_MOD_A1_D" /* GXT: Protect your aircraft with military spec composite body panels. */;
				break;
			}
			else
			{
				return "CMOD_MOD_1_D" /* GXT: Protect your car's occupants with military spec composite body panels. */;
				break;
			}
			break;
		case 5:
			if (__LIB_10__.func_467() || (__LIB_10__.func_473() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger"))))
			{
				return "CMOD_SUS_0_D" /* GXT: Choose your aircraft's handling to fit your flying style. */;
			}
			else
			{
				return "CMOD_MOD_3_D" /* GXT: Increase stopping power and eliminate brake fade. */;
			}
			break;
		case 8:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (__LIB_10__.func_144(Local_124.f_406))
			{
				if (__LIB_1__.func_926(iVar0))
				{
					return "CMOD_FWIN_D";
				}
				else
				{
					return "CMOD_FBUM_D";
				}
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (joaat("TOP_SHIELD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMM_FRSH_D" /* GXT: Custom front shields. */;
			}
			else if (((iVar0 == joaat("slamvan4") || iVar0 == joaat("cerberus")) || iVar0 == joaat("cerberus2")) || iVar0 == joaat("cerberus3"))
			{
				return "MNU_CUSBR" /* GXT: Custom rear bumpers. */;
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_MOD_22_D" /* GXT: Increase downforce. */;
			}
			else if (iVar0 == joaat("bruiser2"))
			{
				return "CMOD_LEC_D";
			}
			else
			{
				return "CMOD_MOD_4_D" /* GXT: Custom front and rear bumpers. */;
			}
			break;
		case 100:
			return "CMOD_MOD_71_D" /* GXT: Customize the look of your bumpers. */;
			break;
		case 99:
			if (__LIB_10__.func_134(Local_124.f_406))
			{
				return "CMOD_WEAPO_D";
			}
			else if (__LIB_9__.func_917(Local_124.f_406))
			{
				return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
			}
			else
			{
				return "CMOD_MOD_4_D" /* GXT: Custom front and rear bumpers. */;
			}
			break;
		case 9:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_BADGES" /* GXT: A selection of hood badges. */;
			}
			else if (__LIB_4__.func_533(Local_124.f_406) || iVar0 == joaat("oppressor"))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_COVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("picador"))
			{
				return "CMOD_R_COV_D";
			}
			else if (joaat("TOP_RUFSPOILER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_R_SPO_D";
			}
			else if (iVar0 == joaat("gp1"))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_ARM_PLAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				if ((VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("pounder2")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("mule4"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("speedo4")))
				{
					return "CMOD_ARMPSPD";
				}
				else
				{
					return "CMOD_ARMPL_D";
				}
			}
			else if (joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_DEFEC_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_WINP_D";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("rogue"))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_RTURR_D";
				}
				else
				{
					return "CMOD_SEWEAP_D";
				}
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (__LIB_10__.func_467())
			{
				return "CMOD_MHAN_5_D" /* GXT: The internal framework of the aircraft. */;
			}
			else if (iVar0 == joaat("flashgt"))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_RWING" /* GXT: Window Spoilers */;
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_MOD_BRB_D" /* GXT: Custom brace bars. */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_LID_D";
			}
			else if (joaat("CMOD_VORT_M") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_VORT_D";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else if (joaat("TOP_TAILFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_TAFI_D" /* GXT: Custom tail fins. */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (joaat("TOP_GRIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_GRIP_D" /* GXT: Custom heel grips. */;
			}
			else if (joaat("TOP_ROOFPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("ruiner4"))
			{
				if (iVar0 == joaat("zhaba"))
				{
					return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
				}
				else
				{
					return "CMM_ROPAN_D" /* GXT: Custom roof panels. */;
				}
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (iVar0 == joaat("thrax"))
			{
				return "SMOD_CHASS_3" /* GXT: Additional bodywork panels. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_D";
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMOD_SEAT_D";
			}
			else
			{
				return "CMOD_MOD_5_D" /* GXT: The internal framework of the vehicle. */;
			}
			break;
		case 38:
			if (!bLocal_496)
			{
				if (__LIB_20__.func_533(7))
				{
					return "CMOD_MOD_6c_D" /* GXT: Transforms vehicle appearance. ~n~Your next respray purchase will be free with your coupon. */;
				}
			}
			if (__LIB_10__.func_523())
			{
				return "IE_RS_DT1" /* GXT: Transform the color of the vehicle. */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "TUN_SPR_D" /* GXT: Apply the customer's requested paint color. */;
			}
			else if (__LIB_10__.func_467() || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger")))
			{
				return "CMOD_MHAN_6_D" /* GXT: Transforms your aircraft's appearance. */;
			}
			else
			{
				return "CMOD_MOD_6_D" /* GXT: Transforms vehicle appearance. */;
			}
			break;
		case 10:
			if (Local_124.f_0 == 44)
			{
				if (__LIB_0__.func_174(iVar0, 0))
				{
					return "SMOD_ENGINE_4" /* GXT: Increases horsepower. */;
				}
				else
				{
					return "CMOD_MOD_7_D" /* GXT: Increases brake horsepower. */;
				}
			}
			else if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_PE_DT1" /* GXT: Max out the vehicle's performance. */;
			}
			else if (__LIB_10__.func_467() || (__LIB_10__.func_473() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger"))))
			{
				return "SMUG_ENGINE_D" /* GXT: Optimize your aircraft's engine for increased air speed. */;
			}
			else
			{
				return "CMOD_MOD_7_D" /* GXT: Increases brake horsepower. */;
			}
			break;
		case 13:
			return "CMOD_MOD_8_D" /* GXT: Rig your vehicle with timed or ignition explosives. */;
			break;
		case 21:
			return "CMOD_MOD_34_D" /* GXT: Prepare vehicle for gold heist. */;
			break;
		case 22:
			return "CMOD_MOD_34_D" /* GXT: Prepare vehicle for gold heist. */;
			break;
		case 23:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("avarus")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_HAND_D" /* GXT: Custom handlebars. */;
			}
			else if (iVar0 == joaat("avarus"))
			{
				return "CMOD_MOD_OT_D" /* GXT: Custom oil tanks. */;
			}
			else if (iVar0 == joaat("blazer4") || iVar0 == joaat("penetrator"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOODC_D";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || iVar0 == joaat("picador"))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RPAN_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
				{
					return "CMOD_SWEAP_OD";
				}
				else
				{
					return "CMOD_SWEAP_VE";
				}
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWSH_D";
			}
			else if (joaat("TOP_BPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_BPLAT_D";
			}
			else if (joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_CU_WIND_0" /* GXT: Custom Windshields */;
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_CANA_D";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_NOPAN_D" /* GXT: Custom nose panels. */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOLI_D";
			}
			else if (joaat("TOP_VENTBRAC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_VENTBRA_D" /* GXT: Custom Vent Braces */;
			}
			else if (joaat("TOP_RSPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_RSPLI_D" /* GXT: Custom rear splitters. */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_MOD_S41D";
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMOD_PEDAL_D";
			}
			else if (iVar0 == joaat("weevil"))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HECFOG_D";
			}
			else
			{
				return "CMOD_MOD_11_D" /* GXT: Improved engine cooling. */;
			}
			break;
		case 26:
		case 101:
			if (joaat("TOP_SEAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
				{
					return "CMOD_MOD_SE_D" /* GXT: Custom seats. */;
				}
				else
				{
					return "CMOD_SEAT_D";
				}
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
				break;
			}
			else if (iVar0 == joaat("greenwood"))
			{
				return "CMOD_AFI_1" /* GXT: Custom Air Filter */;
			}
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_4__.func_533(Local_124.f_406))
			{
				return "CMOD_MOD_SE_D" /* GXT: Custom seats. */;
			}
			else if (iVar0 == joaat("swinger") || (iVar0 == joaat("gauntlet5") && iParam0 == 101))
			{
				return "CMOD_BON_D" /* GXT: Custom Hoods. */;
			}
			else
			{
				return "CMOD_MOD_13_D" /* GXT: Enhance car engine cooling. */;
			}
			break;
		case 27:
			return "CMOD_MOD_14_D" /* GXT: Custom air horns. */;
			break;
		case 31:
			if (__LIB_10__.func_523())
			{
				return "IE_RT_DT1" /* GXT: The tracker must be removed so it cannot be traced by the original owner. */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "TUN_SER_D" /* GXT: Service and repair the customer's vehicle before installing the requested modifications on the checklist. */;
			}
			else
			{
				return "CMOD_MOD_90_D" /* GXT: Insurance and Tracker options. */;
			}
			break;
		case 28:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_26__.func_141(Local_124.f_406))
			{
				return "CMOD_MOD_15ND" /* GXT: Improved night time visibility. */;
			}
			else
			{
				return "CMOD_MOD_15_D" /* GXT: Improved night time visibility and decorative lighting. */;
			}
			break;
		case 12:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_THRUST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_ROCKB_D";
			}
			else if (joaat("TOP_PROPELLER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_PROPELL_D";
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else
			{
				return "CMOD_MOD_16_D" /* GXT: Customized sports exhausts. */;
			}
			break;
		case 33:
			if (__LIB_10__.func_523())
			{
				return "IE_PL_DT1" /* GXT: The plate must be changed so it cannot be tracked by the cops. */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				if (__LIB_26__.func_352())
				{
					return "PERSO_MOD_CLCOS" /* GXT: Confirm service cost of $~1~. The customer will reimburse this cost and you will receive an additional payment of up to $~1~ upon delivery. */;
				}
			}
			else
			{
				return "CMOD_MOD_18_D" /* GXT: Customize license plate. */;
			}
			break;
		case 40:
		case 102:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (joaat("TOP_PANN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_PANN_D" /* GXT: Custom panniers. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_SPOT1" /* GXT: Custom side spot lights. */;
			}
			else if (iVar0 == joaat("feltzer3"))
			{
				return "CMOD_R_SPO_D";
			}
			else if (iVar0 == joaat("tornado5"))
			{
				return "CMOD_MOD_66_D" /* GXT: A selection of lavish roof styles. */;
			}
			else if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_FUT_D" /* GXT: Custom fuel tanks. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ANTENNAR_D" /* GXT: Custom rear antennas */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("penetrator"))
			{
				return "CMOD_VCOV_D";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("dune3"))
			{
				if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_D";
				}
				else if (iVar0 != joaat("tampa3") && !__LIB_10__.func_467())
				{
					return "CMOD_WEAPO_D";
				}
				else if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_D";
				}
				else if (__LIB_10__.func_467())
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else
				{
					return "CMOD_MINIG_D";
				}
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_D";
				}
				else if (iVar0 == joaat("molotok"))
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else if (iVar0 == joaat("hunter"))
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_D";
				}
				else if (((iVar0 == joaat("khanjali") || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("pounder2"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("speedo4"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("oppressor2")))
				{
					return "CMOD_PWEAP_D";
				}
				else if (iVar0 == joaat("mule4"))
				{
					return "CMOD_SEWEAP_D";
				}
				else
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SNORKEL_D";
			}
			else if (iVar0 == joaat("riot2"))
			{
				return "CMOD_WATER_D";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWHE_D";
			}
			else if (iVar0 == joaat("drafter"))
			{
				return "SMOD_CHASS_3b" /* GXT: Additional roof scoops. */;
			}
			else if ((((iVar0 == joaat("hellion") || iVar0 == joaat("zhaba")) || iVar0 == joaat("landstalker2")) || iVar0 == joaat("squaddie")) || iVar0 == joaat("previon"))
			{
				return "CMOD_ROF_3" /* GXT: Custom roofs. */;
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
			}
			break;
		case 42:
			if (__LIB_10__.func_467())
			{
				if (__LIB_10__.func_59(iVar0))
				{
					return "CMOD_MOD_78_D" /* GXT: Remove this aircraft from your Hangar. */;
				}
				else
				{
					return "CMOD_MOD_77_D" /* GXT: Sell your aircraft. */;
				}
			}
			else
			{
				return "CMOD_MOD_35_D" /* GXT: Sell your vehicle. */;
			}
			break;
		case 54:
			if ((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && (VEHICLE::IS_VEHICLE_STOLEN(Local_124.f_406) || (__LIB_0__.func_657(Local_124.f_406, 1) && !func_2869(Local_124.f_406))))
			{
				return "CMOD_MOD_36_D1" /* GXT: The Vehicle Identification Number is a unique code used to identify individual vehicles. This has already been removed from the vehicle. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "CMOD_MOD_36_D" /* GXT: The Vehicle Identification Number is a unique code used to identify individual vehicles. Remove this to prevent the stolen vehicle from being traced. */;
			}
			break;
		case 44:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMOD_MOD_SP_D" /* GXT: Enhance your vehicle's look with custom step plates. */;
			}
			else if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0))
			{
				return "CMOD_DROP_D" /* GXT: Enhance your aircraft's look with drop tanks. */;
			}
			else if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (joaat("TOP_TURRET_B") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("barrage")))
			{
				return "CMOD_TBRACK_D";
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("michelli"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_VCOV_D";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_SIDEP_D";
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (joaat("TOP_SSTEP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "TOP_SSTEP" /* GXT: Side Step */;
			}
			else if (iVar0 == joaat("zhaba") || iVar0 == joaat("club"))
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMOD_DOOR_D";
			}
			else
			{
				return "CMOD_MOD_21_D" /* GXT: Enhance your vehicle's look with custom side skirts. */;
			}
			break;
		case 46:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RTURR_D";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("mule4"))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (iVar0 == joaat("mule4"))
			{
				return "CMOD_PWEAP_D";
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VISO_D";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VCOV_D";
			}
			else if (iVar0 == joaat("pounder2") || iVar0 == joaat("granger2"))
			{
				return "CMOD_ROF_3" /* GXT: Custom roofs. */;
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_FBUM_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_WINP_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_REAR_DOOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RDOOR_D" /* GXT: Custom trunk doors. */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_HOLI_D";
			}
			else if (joaat("TOP_STORAGEBOX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_STORBO_D" /* GXT: Custom top box. */;
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (joaat("TOP_BACKREST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_BKRE_D" /* GXT: Custom Backrests */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_REAR1" /* GXT: Rear wheel options. */;
			}
			else if ((__LIB_4__.func_533(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_BEC_D" /* GXT: Custom belt drive covers. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ANTENNA_D" /* GXT: Custom front antennas */;
			}
			else
			{
				return "CMOD_MOD_22_D" /* GXT: Increase downforce. */;
			}
			break;
		case 47:
			return "CMOD_MOD_24_D" /* GXT: Upgrade to a sports oriented suspension setup. */;
			break;
		case 58:
			if (((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531()) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("rcbandito")))
			{
				return "CMOD_IE_25_D" /* GXT: Tire design and custom burnout smoke. */;
			}
			else
			{
				return "CMOD_MOD_25_D" /* GXT: Bulletproof tires and custom burnout smoke. */;
			}
			break;
		case 57:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_59_D" /* GXT: Custom wheel colors. */;
			}
			break;
		case 48:
			return "CMOD_MOD_61_D" /* GXT: Customize the look of your tailgate. */;
			break;
		case 50:
			return "CMOD_MOD_26_D" /* GXT: Improved acceleration with close ratio transmission. */;
			break;
		case 53:
			return "CMOD_MOD_27_D" /* GXT: Reduced lag turbocharger. */;
			break;
		case 55:
			if (__LIB_10__.func_523())
			{
				return "IE_WH_DT1" /* GXT: Change the wheel rims to complete the modifications. */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "TUN_WHE_D" /* GXT: Install the customer's requested wheels. */;
			}
			else
			{
				return "CMOD_MOD_60_D" /* GXT: Custom rims, tires and colors. */;
			}
			break;
		case 56:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			else
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			break;
		case 60:
			return "CMOD_MOD_29_D" /* GXT: A selection of tinted windows. */;
			break;
		case 15:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_4__.func_533(Local_124.f_406))
			{
				return "CMOD_MOD_SIS_D" /* GXT: Custom sissy bars. */;
			}
			else if (((joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) && iVar0 != joaat("impaler2")) && iVar0 != joaat("impaler3")) && iVar0 != joaat("impaler4"))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RDIF_D";
			}
			else if (joaat("TOP_ROOFRAIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_R_RAI_D";
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) && iVar0 != joaat("dominator8"))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_PROMI_D";
			}
			else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_BOMB_D";
			}
			else if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DPLA_D";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DOOR_D";
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_MOD_BRB_D" /* GXT: Custom brace bars. */;
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("gb200"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (joaat("TOP_BUMPEX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_BUMX_D";
			}
			else if (__LIB_10__.func_143(iVar0))
			{
				return "CMOD_WNG_FD" /* GXT: Custom front fender. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (iVar0 == joaat("club"))
			{
				return "IE_BO_DT1" /* GXT: Customize the vehicle's bodywork to improve the appearance. */;
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "SMOD_IN_STEER" /* GXT: Customize the link between you and your vehicle. */;
			}
			else
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
			}
			break;
		case 95:
			if ((iVar0 == joaat("faggio3") || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_CU_WIND_0" /* GXT: Custom Windshields */;
			}
			else if (joaat("CMOD_SLOU_N") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLOU_D";
			}
			else if ((((iVar0 == joaat("blazer4") || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2))) || iVar0 == joaat("ruiner4"))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (joaat("TOP_BTRIM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || iVar0 == joaat("greenwood"))
			{
				return "CMOD_MOD_75_D" /* GXT: Custom body trims. */;
			}
			else if (iVar0 == joaat("bruiser") || iVar0 == joaat("bruiser3"))
			{
				return "CMOD_BULLH_D";
			}
			else if (iVar0 == joaat("fcr2"))
			{
				return "CMOD_MOD_SWI_D" /* GXT: Custom swingarm. */;
				break;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) && iVar0 != joaat("xa21"))
			{
				return "CMOD_RDIF_D";
				break;
			}
			else if (iVar0 == joaat("xa21"))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLIGHT_D";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("cheetah2") || __LIB_4__.func_534(Local_124.f_406))
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
				break;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_WEAPO_D";
				break;
			}
			else if (joaat("TOP_ENGD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_MOD_ENG_D" /* GXT: Custom engine detail. */;
				break;
			}
			else if (iVar0 == joaat("comet4"))
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
				break;
			}
			else if ((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45))) || iVar0 == joaat("kanjo"))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_SSHADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SUNSS_D";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_RCDETONAD" /* GXT: Rig your RC Bandito with explosive. */;
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_VISO_D";
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_D";
			}
			else if ((joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35))) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_HOODC_D";
			}
			else if (iVar0 == joaat("gauntlet3"))
			{
				return "CMOD_WNG_RD" /* GXT: Custom rear fender. */;
			}
			else if (joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_WINSP_D" /* GXT: Custom window spoilers. */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("ruiner4"))
			{
				return "CMM_MOD_ST35";
			}
			else
			{
				return "CMOD_MOD_SHI_D" /* GXT: Custom shifters. */;
			}
			break;
		case 6:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (Local_124.f_0 == 44)
			{
				if (__LIB_0__.func_174(iVar0, 0))
				{
					return "SMOD_CHASS_6" /* GXT: Vehicle body stylings. */;
				}
				else
				{
					return "CMOD_MOD_37_D" /* GXT: Change the look and aerodynamics of your vehicle. */;
				}
			}
			else
			{
				return "CMOD_MOD_37_D" /* GXT: Change the look and aerodynamics of your vehicle. */;
			}
			break;
		case 7:
			return "CMOD_MOD_38_D" /* GXT: Customize your bullbars. */;
			break;
		case 11:
			return "CMOD_MOD_39_D" /* GXT: Custom engine. */;
			break;
		case 14:
			if (iVar0 == joaat("diablous2"))
			{
				return "CMOD_MOD_74_D" /* GXT: Customize the headlight cover. */;
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HECFOG_D";
			}
			else if ((((joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEFG_D";
			}
			else
			{
				return "CMOD_MOD_40_D" /* GXT: Customize the fairing. */;
			}
			break;
		case 16:
			return "CMOD_MOD_41_D" /* GXT: A selection of vehicle frames. */;
			break;
		case 17:
			return "CMOD_MOD_42_D" /* GXT: Front suspension, affects cornering. */;
			break;
		case 18:
			if (__LIB_10__.func_109())
			{
				return "MNU_CUSBF" /* GXT: Custom front bumpers. */;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MISIL_D";
			}
			else if (joaat("TOP_HDLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_HEPR_D";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("tula"))
			{
				return "CMOD_SWEAP_D";
			}
			else if (iVar0 == joaat("tula"))
			{
				return "CMOD_SWEAP_TU";
			}
			else if (joaat("TOP_BUM_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_BUMPA_D";
			}
			else if (joaat("TOP_WARMOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_WARMOR_D";
			}
			else
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			break;
		case 19:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "CMOD_MOD_44_D" /* GXT: Customize your front seat. */;
			}
			else
			{
				return "CMOD_MOD_C44_D" /* GXT: Customize your front seats. */;
			}
			break;
		case 20:
			return "CMOD_MOD_45_D" /* GXT: Alters the style of your fuel tank. */;
			break;
		case 24:
			if (joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)) || joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_LADDER_D";
			}
			else
			{
				return "CMOD_MOD_46_D" /* GXT: Change the look of your Handlebars. */;
			}
			break;
		case 25:
			return "CMOD_MOD_47_D" /* GXT: Customize your headlights. */;
			break;
		case 32:
			return "CMOD_MOD_48_D" /* GXT: Custom mirrors. */;
			break;
		case 34:
			if (joaat("TOP_LSPOIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMM_LSPO_D" /* GXT: Custom lip spoiler. */;
			}
			else
			{
				return "CMOD_MOD_49_D" /* GXT: Plate holder options. */;
			}
			break;
		case 35:
			return "CMOD_MOD_50_D" /* GXT: Custom pushbar. */;
			break;
		case 37:
			return "CMOD_MOD_51_D" /* GXT: Customize your rear seat. */;
			break;
		case 36:
			if ((__LIB_4__.func_535(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_OT_D" /* GXT: Custom oil tanks. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_BKRE_D" /* GXT: Custom Backrests */;
			}
			else if (__LIB_10__.func_109())
			{
				return "MNU_CUSBR" /* GXT: Custom rear bumpers. */;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MORTA_D";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_REPR_D";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SIDEP_D";
			}
			else if ((((((joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_LOU_D";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_RPAN_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_UPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_UPLAT_D";
			}
			else if (iVar0 == joaat("seminole2"))
			{
				return "SMOD_CHASS_2" /* GXT: A selection of radio antenna options. */;
			}
			else
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			break;
		case 39:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_53_D" /* GXT: Stiffen your chassis with a roll cage. */;
			}
			break;
		case 41:
			if (iVar0 == joaat("verus"))
			{
				return "CMOD_MOD_54_QD" /* GXT: Add saddle bags to your quad bike. */;
			}
			return "CMOD_MOD_54_D" /* GXT: Add saddle bags to your bike. */;
			break;
		case 43:
			if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("youga3")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("seminole2")))
			{
				return "CMOD_MOD_555_D" /* GXT: Attach side steps to your vehicle. */;
			}
			else
			{
				return "CMOD_MOD_55_D" /* GXT: Attach side steps to your truck. */;
			}
			break;
		case 45:
			if (__LIB_10__.func_467())
			{
				return "CMOD_MOD_SM_D" /* GXT: Get yourself a custom smoke color */;
			}
			else if (((((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || iVar0 == joaat("weevil2")) || iVar0 == joaat("ruiner4")) || iVar0 == joaat("picador"))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "CMOD_MOD_56_D" /* GXT: Get yourself out of a jam with a spare wheel */;
			}
			break;
		case 51:
			return "CMOD_MOD_57_D" /* GXT: Alter your truck bed. */;
			break;
		case 59:
			return "CMOD_MOD_58_D" /* GXT: Custom wheelie bar. */;
			break;
		case 52:
			if (1621664729 == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMOD_RUNKC_D";
			}
			else
			{
				return "CMOD_MOD_62_D" /* GXT: Custom trunk options. */;
			}
			break;
		case 93:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_7__.func_981(Local_124.f_406))
			{
				return "CMOD_DEFEC_D1";
			}
			else
			{
				return "CMOD_MOD_63_D" /* GXT: Custom deflector options. */;
			}
			break;
		case 94:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_64_D" /* GXT: Custom ornaments. */;
			}
			break;
		case 61:
		case 103:
			if (Local_124.f_0 == 44)
			{
				if ((((((((((((((((iVar0 == joaat("banshee") || iVar0 == joaat("sultan")) || iVar0 == joaat("comet2")) || iVar0 == joaat("diablous")) || iVar0 == joaat("elegy2")) || iVar0 == joaat("fcr")) || iVar0 == joaat("italigtb")) || iVar0 == joaat("nero")) || iVar0 == joaat("fcr")) || iVar0 == joaat("specter")) || iVar0 == joaat("ratloader")) || iVar0 == joaat("ratloader2")) || iVar0 == joaat("glendale")) || iVar0 == joaat("impaler")) || iVar0 == joaat("gargoyle")) || iVar0 == joaat("vamos")) || iVar0 == joaat("issi3"))
				{
					return "CMOD_MOD_100_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications exclusive to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
				}
				else
				{
					return "CMOD_MOD_99_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications unique to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
				}
			}
			else if (__LIB_10__.func_469() || __LIB_10__.func_17())
			{
				return "GR_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to new weapons, armor, camo liveries, and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
			}
			else if (__LIB_10__.func_554() || __LIB_10__.func_553())
			{
				switch (iVar0)
				{
					case joaat("ratloader"):
					case joaat("ratloader2"):
					case joaat("deveste"):
					case joaat("issi3"):
					case joaat("gargoyle"):
					case joaat("impaler"):
					case joaat("dominator"):
						return "ARENA_UPGRAD_H1" /* GXT: Upgrade this vehicle to an Arena Contender and gain access to unique modifications suitable to the Arena War Series. */;
						break;
					case joaat("slamvan"):
					case joaat("glendale"):
						if (iParam0 == 61)
						{
							return "IE_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						else
						{
							return "ARENA_UPGRAD_H1" /* GXT: Upgrade this vehicle to an Arena Contender and gain access to unique modifications suitable to the Arena War Series. */;
						}
						break;
					case joaat("banshee"):
					case joaat("sultan"):
					case joaat("comet2"):
					case joaat("diablous"):
					case joaat("elegy2"):
					case joaat("fcr"):
					case joaat("italigtb"):
					case joaat("nero"):
					case joaat("specter"):
						return "IE_OFF_UPD2" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						break;
					default:
						if (__LIB_10__.func_476(Local_124.f_406, 0))
						{
							return "ARENA_UPGRAD_H2" /* GXT: Transform this Arena Contender to another style suitable for the Arena War Series: Apocalypse, Future Shock or Nightmare. */;
						}
						else if ((((((((((((((((iVar0 == joaat("banshee") || iVar0 == joaat("sultan")) || iVar0 == joaat("comet2")) || iVar0 == joaat("diablous")) || iVar0 == joaat("elegy2")) || iVar0 == joaat("fcr")) || iVar0 == joaat("italigtb")) || iVar0 == joaat("nero")) || iVar0 == joaat("fcr")) || iVar0 == joaat("specter")) || iVar0 == joaat("ratloader")) || iVar0 == joaat("ratloader2")) || iVar0 == joaat("glendale")) || iVar0 == joaat("impaler")) || iVar0 == joaat("gargoyle")) || iVar0 == joaat("vamos")) || iVar0 == joaat("issi3"))
						{
							return "IE_OFF_UPD2" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						else
						{
							return "IE_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						break;
				}
			}
			else if (!__LIB_10__.func_147() && !__LIB_10__.func_146())
			{
				return "CMOD_MOD_99_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications unique to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
			}
			else if (__LIB_10__.func_146())
			{
				if (__LIB_10__.func_145())
				{
					return "SVM_VS_AAT_D" /* GXT: Customize your Anti-Aircraft Trailer. */;
				}
				return "SVM_VS_TRUCK_D" /* GXT: Customize your Mobile Operations Center. */;
			}
			else
			{
				return "SVM_VS_TRI_D" /* GXT: Customize the trailer of your Mobile Operations Center. */;
			}
			break;
		case 86:
			if (__LIB_10__.func_523())
			{
				return "IE_BO_DT1" /* GXT: Customize the vehicle's bodywork to improve the appearance. */;
			}
			else if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "TUN_BOD_D" /* GXT: Install the customer's requested bodywork modifications. */;
			}
			else
			{
				return "CMOD_SMOD_1_D" /* GXT: Framework customization. */;
			}
			break;
		case 89:
			if (__LIB_4__.func_532() || __LIB_4__.func_531())
			{
				return "TUN_PER_D" /* GXT: Install the customer's requested performance upgrades. */;
			}
			return "CMOD_SMOD_2_D" /* GXT: Tune and install engine components. */;
			break;
		case 87:
			return "CMOD_SMOD_3_D" /* GXT: Products for maximum style and comfort. */;
			break;
		case 88:
			return "CMOD_SMOD_4_D" /* GXT: Decorative identification. */;
			break;
		case 75:
			return "CMOD_SMOD_5_D" /* GXT: Lift kits to control the height of your vehicle. Extreme use may cause minor vehicle damage. */;
			break;
		case 85:
			if ((((iVar0 == joaat("tampa3") || iVar0 == joaat("nightshark")) || iVar0 == joaat("apc")) || iVar0 == joaat("dune3")) || iVar0 == joaat("halftrack"))
			{
				return "CMOD_LGR_D" /* GXT: A selection of vinyl wraps for your vehicle. */;
			}
			else if (__LIB_10__.func_467() || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger")))
			{
				return "CMOD_SHAN_6_D" /* GXT: Choose a livery for your aircraft. */;
			}
			else
			{
				return "CMOD_SMOD_6_D" /* GXT: A selection of decals for your vehicle. */;
			}
			break;
		case 74:
			return "CMOD_SMOD_7_D" /* GXT: Customize your main storage. */;
			break;
		case 91:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)))
			{
				return "CMOD_SUNS_D";
			}
			return "SMOD_IN_1" /* GXT: A selection of interior designs. */;
			break;
		case 65:
			if (joaat("TOP_INTERTYPE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)))
			{
				return "CMOD_INTTYPE_D" /* GXT: Custom Interior Type */;
			}
			return "SMOD_IN_2" /* GXT: Add decorative items to your dash. */;
			break;
		case 66:
			if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 29)))
			{
				return "CMOD_REPR_D";
			}
			else if (iVar0 == joaat("issi5"))
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
			}
			else
			{
				return "SMOD_IN_3" /* GXT: Custom control panel designs. */;
			}
			break;
		case 67:
			return "SMOD_IN_4" /* GXT: Customize the look of your dials. */;
			break;
		case 90:
			return "SMOD_IN_4" /* GXT: Customize the look of your dials. */;
			break;
		case 68:
			if (((iVar0 == joaat("sultanrs") || iVar0 == joaat("banshee2")) || iVar0 == joaat("gauntlet5")) || __LIB_10__.func_106())
			{
				return "SMOD_IN_5b" /* GXT: Install door card upgrades. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 31)))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "SMOD_IN_5" /* GXT: Install speaker upgrade kits. */;
			}
			break;
		case 69:
			return "SMOD_IN_SEAT" /* GXT: Options where style meets comfort. */;
			break;
		case 70:
			return "SMOD_IN_STEER" /* GXT: Customize the link between you and your vehicle. */;
			break;
		case 71:
			if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_MOD_SHI_D" /* GXT: Custom shifters. */;
			}
			return "SMOD_IN_KNOB" /* GXT: Custom lever handle styles. */;
			break;
		case 72:
			if (joaat("TOP_DECORATIONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_DECOR_D";
			}
			else if (joaat("TOP_TWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_TWIBBL_D";
			}
			else
			{
				return "SMOD_IN_PLAQUE" /* GXT: Make a statement with additional signage. */;
			}
			break;
		case 63:
			if (joaat("TOP_RWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_RWIBBL_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_WINP_D";
			}
			else if ((joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_CANA_D";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_VENT_D" /* GXT: Custom Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			break;
		case 73:
			return "SMOD_IN_ICE" /* GXT: Parcel shelf customization. */;
			break;
		case 79:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_SCOOPS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SCOOP_D";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEFG_D";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || iVar0 == joaat("tenf"))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMOD_RDIF_D";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (__LIB_10__.func_139(Local_124.f_406))
			{
				return "SMOD_CHASS_1b" /* GXT: Custom headlight trim. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_1c" /* GXT: Custom arch covers. */;
			}
			else
			{
				return "SMOD_CHASS_1" /* GXT: Custom rear wheel covers. */;
			}
			break;
		case 80:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_10__.func_109())
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_2c" /* GXT: A selection of side hood grille options. */;
			}
			else if (joaat("TOP_SPIKE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_SPIKE_D";
			}
			else if (joaat("TOP_SKID") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)) || iVar0 == joaat("draugur"))
			{
				return "CMOD_SKIDPL_D" /* GXT: Custom skid plate. */;
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_HOODC_D";
			}
			else if (__LIB_10__.func_138(Local_124.f_406))
			{
				return "SMOD_CHASS_2b" /* GXT: A selection of foglights options. */;
			}
			else
			{
				return "SMOD_CHASS_2" /* GXT: A selection of radio antenna options. */;
			}
			break;
		case 81:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_10__.func_109())
			{
			}
			else if (iVar0 == joaat("cypher") || joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
				return "CMOD_MOD_73_D" /* GXT: Customize the look of your roof. */;
			}
			else if (joaat("TOP_BLADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_BLADE_D";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_SLIGHT_D";
			}
			else if (__LIB_10__.func_137(Local_124.f_406))
			{
				return "SMOD_CHASS_3b" /* GXT: Additional roof scoops. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_3c" /* GXT: Front vehicle detailing. */;
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
			}
			else if (joaat("TOP_IMANI_TECH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_REMOTE_D" /* GXT: Imani's custom modifications. */;
			}
			else
			{
				return "SMOD_CHASS_3" /* GXT: Additional bodywork panels. */;
			}
			break;
		case 82:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_PWEAP_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_MOD_S41D";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOPAN_D" /* GXT: Custom nose panels. */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "SMOD_CHASS_1c" /* GXT: Custom arch covers. */;
			}
			else if (__LIB_10__.func_109())
			{
				return "MNU_BUMF7" /* GXT: Custom Splitter & Intercooler */;
			}
			else if (__LIB_10__.func_136())
			{
				return "CMOD_MOD_FUT_D" /* GXT: Custom fuel tanks. */;
			}
			else if (iVar0 == joaat("slamvan3"))
			{
				return "SMOD_ROLLCAGE_1" /* GXT: Custom roll cage designs. */;
			}
			else if (iVar0 == joaat("yosemite3"))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else
			{
				return "SMOD_CHASS_4" /* GXT: Custom gas tank designs. */;
			}
			break;
		case 84:
			if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMOD_SNORKEL_D";
			}
			else if (iVar0 == joaat("dominator7"))
			{
				return "SMOD_ENGINE_3b" /* GXT: A selection of support struts. */;
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_VENT_D" /* GXT: Custom Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else
			{
				return "SMOD_CHASS_5" /* GXT: Side door detailing. */;
			}
			break;
		case 83:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_D";
			}
			else if (joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)) || joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMM_TLIG_D" /* GXT: Custom tail lights. */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_5b" /* GXT: Side wheel options. */;
			}
			else
			{
				return "SMOD_CHASS_5" /* GXT: Side door detailing. */;
			}
			break;
		case 76:
			if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMOD_VCOV_D";
			}
			else if (iVar0 == joaat("kanjosj"))
			{
				return "CMOD_ENCOV_D";
			}
			else
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			break;
		case 77:
			if (joaat("TOP_RAILCOV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMM_RCOV_D" /* GXT: Custom rail covers. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (iVar0 == joaat("greenwood"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (__LIB_10__.func_140(iVar0))
			{
				return "SMOD_ENGINE_2b" /* GXT: Optional cam covers. */;
			}
			else if (__LIB_10__.func_113())
			{
				return "CMM_MOD_DBOS" /* GXT: Custom boost options. */;
			}
			else
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			break;
		case 78:
			if (__LIB_10__.func_742(iVar0))
			{
				return "SMOD_ENGINE_3b" /* GXT: A selection of support struts. */;
			}
			else if (__LIB_10__.func_112())
			{
				return "CMM_MOD_DUMP" /* GXT: Custom vertical jumps. */;
			}
			else if (iVar0 == joaat("previon"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else
			{
				return "SMOD_ENGINE_3" /* GXT: Additional engine components. */;
			}
			break;
		case 92:
			if ((__LIB_10__.func_523() || __LIB_4__.func_532()) || __LIB_4__.func_531())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
				break;
			}
			if ((iVar0 == joaat("sultanrs") || iVar0 == joaat("banshee2")) || iVar0 == joaat("gauntlet5"))
			{
				return "SMOD_LIGHT_COLb" /* GXT: A selection of colors for dials. */;
			}
			else
			{
				return "SMOD_LIGHT_COL" /* GXT: A selection of colors for dials, neon plaques and neon speaker highlights. */;
			}
			break;
	}
	return "";
}

int func_359(int iParam0)//Position - 0x184526
{
	if (__LIB_10__.func_523())
	{
		switch (__LIB_26__.func_272(iParam0))
		{
			case 31:
				if (__LIB_26__.func_268(31))
				{
					return 0;
				}
				break;
			case 33:
			case 38:
			case 10:
			case 86:
			case 55:
				if (iParam0 != Local_124.f_116.f_1 || __LIB_26__.func_268(__LIB_26__.func_272(iParam0)))
				{
					return 0;
				}
				break;
		}
	}
	else if (__LIB_4__.func_532() || __LIB_4__.func_531())
	{
		switch (__LIB_26__.func_272(iParam0))
		{
			case 33:
				if (!__LIB_26__.func_352())
				{
					return 0;
				}
				break;
			case 38:
				if (!__LIB_26__.func_268(31))
				{
					return 0;
				}
				break;
			case 89:
				if (!__LIB_26__.func_268(38))
				{
					return 0;
				}
				break;
			case 86:
				if (!__LIB_26__.func_268(89))
				{
					return 0;
				}
				break;
			case 55:
				if (!__LIB_26__.func_268(86))
				{
					return 0;
				}
				break;
			}
	}
	return 1;
}

void func_360(int* iParam0, struct<3> Param1, bool bParam2)//Position - 0x6F0E7
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_0__.func_392(Param1, bParam2);
		HUD::SET_BLIP_PRIORITY(*iParam0, 9);
	}
}

void func_361(int iParam0)//Position - 0x7257E
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[iVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

int func_362(var uParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x7AF91
{
	if (uParam0->f_1)
	{
		if (MISC::GET_GAME_TIMER() >= (uParam0->f_8 + uParam0->f_9))
		{
			uParam0->f_1 = 0;
		}
	}
	switch (uParam0->f_5)
	{
		case 0:
			uParam0->f_7 = 0;
			if (uParam0->f_6 == 0)
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					if (__LIB_18__.func_201(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 1;
						uParam0->f_7 = 1;
					}
				}
				else if (__LIB_19__.func_975(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			else if (uParam0->f_6 == 1)
			{
				if (__LIB_19__.func_975(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			else if (uParam0->f_6 == 2)
			{
				if (__LIB_18__.func_201(bParam1, bParam2, bParam3))
				{
					uParam0->f_4 = MISC::GET_GAME_TIMER();
					uParam0->f_5 = 1;
					uParam0->f_7 = 1;
				}
			}
			if (__LIB_0__.func_302(uParam0))
			{
				uParam0->f_7 = 1;
				uParam0->f_5 = 4;
			}
			break;
		case 1:
			if ((MISC::GET_GAME_TIMER() - uParam0->f_4) <= 500)
			{
				if (uParam0->f_6 == 0)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
					{
						if (!__LIB_18__.func_201(bParam1, bParam2, bParam3))
						{
							uParam0->f_4 = MISC::GET_GAME_TIMER();
							uParam0->f_5 = 3;
						}
					}
					else if (!__LIB_19__.func_975(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
				else if (uParam0->f_6 == 1)
				{
					if (!__LIB_19__.func_975(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
				else if (uParam0->f_6 == 2)
				{
					if (!__LIB_18__.func_201(bParam1, bParam2, bParam3))
					{
						uParam0->f_4 = MISC::GET_GAME_TIMER();
						uParam0->f_5 = 3;
					}
				}
			}
			else
			{
				uParam0->f_5 = 2;
			}
			break;
		case 2:
			if (uParam0->f_6 == 0)
			{
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					if (!__LIB_18__.func_201(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (!__LIB_19__.func_975(bParam1, bParam2, bParam3))
				{
					uParam0->f_5 = 0;
				}
			}
			else if (uParam0->f_6 == 1)
			{
				if (!__LIB_19__.func_975(bParam1, bParam2, bParam3) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
				{
					uParam0->f_5 = 0;
				}
			}
			else if (uParam0->f_6 == 2)
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
				{
					uParam0->f_5 = 0;
				}
				else if (!__LIB_18__.func_201(bParam1, bParam2, bParam3))
				{
					uParam0->f_5 = 0;
				}
			}
			break;
		case 3:
			if ((MISC::GET_GAME_TIMER() - uParam0->f_4) > 500)
			{
				if (uParam0->f_6 == 0)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
					{
						if (__LIB_19__.func_974(bParam1, bParam2, bParam3))
						{
							uParam0->f_5 = 0;
						}
					}
					else if (__LIB_19__.func_973(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (uParam0->f_6 == 1)
				{
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || __LIB_19__.func_973(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
				else if (uParam0->f_6 == 2)
				{
					if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
					{
						uParam0->f_5 = 0;
					}
					else if (__LIB_19__.func_974(bParam1, bParam2, bParam3))
					{
						uParam0->f_5 = 0;
					}
				}
			}
			break;
		case 4:
			if (!__LIB_0__.func_302(uParam0))
			{
				uParam0->f_5 = 0;
			}
			break;
	}
	if (!__LIB_18__.func_177(bParam1, bParam2, bParam3))
	{
		uParam0->f_5 = 0;
		uParam0->f_7 = 0;
	}
	if (uParam0->f_7)
	{
		__LIB_0__.func_184();
		return 1;
	}
	else
	{
		return 0;
	}
	return 0;
}

void func_363()//Position - 0xAE18F
{
	if (Global_97753)
	{
		__LIB_20__.func_786();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_11__.func_104(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

int func_364(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x5277
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_11(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

float func_365(int iParam0, int iParam1)//Position - 0x432CB
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		return __LIB_11__.func_323(iParam0, ENTITY::GET_ENTITY_COORDS(iParam1, false));
	}
	return 0f;
}

void func_366(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x45DE9
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_11(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_367(bool bParam0, bool bParam1, int iParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x49B7F
{
	if (bParam0)
	{
		PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID(), 0);
		PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), true);
		PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), true);
		__LIB_0__.func_83(1);
		HUD::THEFEED_FLUSH_QUEUE();
		HUD::THEFEED_PAUSE();
		if (Global_20266.f_1 > 3 && !bParam6)
		{
			if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING())
			{
				AUDIO::STOP_SCRIPTED_CONVERSATION(false);
			}
			if (!__LIB_0__.func_73())
			{
				Global_20266.f_1 = 3;
			}
			Global_21605 = 5;
		}
		__LIB_0__.func_686(1, bParam3, iParam2, 0);
		Global_63160 = 1;
		Global_75488 = 1;
		Global_78317 = 1;
	}
	else
	{
		__LIB_0__.func_83(0);
		HUD::THEFEED_RESUME();
		Global_63160 = 0;
		if (bParam1)
		{
			GRAPHICS::CASCADE_SHADOWS_INIT_SESSION();
		}
		PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), false);
		PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), false);
		__LIB_0__.func_686(0, bParam3, iParam2, 0);
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (((((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !__LIB_6__.func_948(PLAYER::PLAYER_ID())) && !__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0)) && !__LIB_0__.func_80()) && !bParam4) && !bParam5)
			{
				ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
			}
		}
		else if (((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !__LIB_6__.func_948(PLAYER::PLAYER_ID())) && !bParam4) && !bParam5)
		{
			ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
		}
		Global_78317 = 0;
	}
}

void func_368(int iParam0)//Position - 0x6D981
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		__LIB_19__.func_810(iParam0, iVar0);
		iVar0++;
	}
}

void func_369(int iParam0)//Position - 0x6DFE5
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID() && PED::GET_PED_MAX_HEALTH(iParam0) == 200)
		{
			PED::SET_PED_MAX_HEALTH(iParam0, SYSTEM::ROUND((IntToFloat(PED::GET_PED_MAX_HEALTH(iParam0)) * Global_262145.f_106 /* Tunable: MAX_HEALTH_MULTIPLIER */)));
		}
		if (Global_113386.f_2363.f_539.f_290[iVar0] <= 0f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 100f;
		}
		else if (Global_113386.f_2363.f_539.f_290[iVar0] <= 10f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 10f;
		}
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((Global_113386.f_2363.f_539.f_290[iVar0] / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

void func_370(int iParam0)//Position - 0x6E48E
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[iVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_371(int iParam0)//Position - 0x6E513
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[iVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[iVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_372(int iParam0)//Position - 0x6E6DC
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[iVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

void func_373(int iParam0, bool bParam1)//Position - 0x6E739
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_18__.func_178(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_374(var uParam0)//Position - 0x800FD
{
	int iVar0;
	if (!__LIB_20__.func_449(1))
	{
		return 0;
	}
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && !__LIB_9__.func_603())
	{
		if (((!uParam0->f_18[3] && uParam0->f_23) && !Global_3) && __LIB_20__.func_449(0))
		{
			uParam0->f_7 = 3;
			return 1;
		}
		else if (__LIB_20__.func_449(0) == 0 && __LIB_19__.func_971() == 0)
		{
			__LIB_20__.func_441(&iVar0);
			if (iVar0 == 1)
			{
				__LIB_9__.func_982(14, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 4)
			{
				__LIB_9__.func_982(25, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 2)
			{
				__LIB_9__.func_982(26, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 1)
			{
				__LIB_9__.func_982(27, 1, -1);
			}
			else if ((PLAYER::IS_PLAYER_ONLINE() && NETWORK::NETWORK_IS_SIGNED_ONLINE()) == 0)
			{
				__LIB_9__.func_982(13, 1, -1);
			}
			else if (NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS() == 0)
			{
			}
			else if (NETWORK::NETWORK_CAN_ENTER_MULTIPLAYER() == 0)
			{
			}
			else
			{
				__LIB_9__.func_982(14, 1, -1);
			}
		}
	}
	return 0;
}

int func_375()//Position - 0x83DFF
{
	int iVar0;
	iVar0 = __LIB_6__.func_774(SCRIPT::GET_THIS_SCRIPT_NAME(), 1);
	if (iVar0 == -1)
	{
		return -1;
	}
	return __LIB_11__.func_180(iVar0);
}

int func_376(int iParam0)//Position - 0x6297
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_11__.func_201(iParam0))
	{
		return 0;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = PED::GET_VEHICLE_PED_IS_IN(iParam0, false);
	if (!__LIB_0__.func_524(iVar0))
	{
		return 0;
	}
	iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
	if (!__LIB_11__.func_201(iVar1))
	{
		return 0;
	}
	if (Global_78319)
	{
		iVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
		if (iVar2 == __LIB_0__.func_160())
		{
			return 0;
		}
		if (!__LIB_0__.func_154(iVar2, 1, 0))
		{
			Global_2689235[iVar2 /*453*/].f_242 = 0;
			return 0;
		}
		return Global_2689235[iVar2 /*453*/].f_242;
	}
	return 1;
}

void func_377(var uParam0)//Position - 0x6722
{
	__LIB_20__.func_458(&(uParam0->f_51));
	__LIB_20__.func_458(&(uParam0->f_30));
	__LIB_20__.func_458(&(uParam0->f_72));
	__LIB_11__.func_184(&(uParam0->f_120.f_6[0]));
	__LIB_11__.func_184(&(uParam0->f_120.f_6[1]));
	__LIB_11__.func_184(&(uParam0->f_93.f_21));
}

void func_378(var uParam0, char* sParam1)//Position - 0x6F6D
{
	if (!__LIB_0__.func_786(sParam1))
	{
		uParam0->f_13 = sParam1;
	}
	__LIB_20__.func_458(uParam0);
	__LIB_0__.func_86(Local_49);
	if (uParam0->f_1 == 0)
	{
		uParam0->f_14[0] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, uParam0->f_8, 0f, (-uParam0->f_9 * 0.25f), -Local_48, 1f, false, false, false);
		uParam0->f_14[1] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, -uParam0->f_8, 0f, (-uParam0->f_9 * 0.25f), Local_48, 1f, false, false, false);
		uParam0->f_14[2] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, uParam0->f_8, 0f, (-uParam0->f_9 * 0.75f), -Local_48, 1f, false, false, false);
		uParam0->f_14[3] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, -uParam0->f_8, 0f, (-uParam0->f_9 * 0.75f), Local_48, 1f, false, false, false);
	}
	else
	{
		uParam0->f_14[0] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, Local_50, 0f, 90f, 0f, 1f, false, false, false);
		uParam0->f_14[1] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, -1.96f, 0.1f, -2.16f, 0f, 35f, 0f, 1f, false, false, false);
		uParam0->f_14[2] = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(uParam0->f_13, uParam0->f_3, 1.96f, 0.1f, -2.16f, 0f, 145f, 0f, 1f, false, false, false);
	}
}

void func_379(int iParam0, var uParam1, float fParam2, float fParam3)//Position - 0xB47F
{
	struct<3> Var0;
	float fVar1;
	int iVar2;
	Var0 = { __LIB_11__.func_186(*(uParam1[0 /*3*/]), *(uParam1[1 /*3*/]), fParam2, 0) };
	fVar1 = __LIB_4__.func_305(*(uParam1[0 /*3*/]), *(uParam1[1 /*3*/]), 1);
	__LIB_10__.func_698(iParam0, Var0 + Vector(0.1f, 0f, 0f));
	ENTITY::SET_ENTITY_HEADING(iParam0, fVar1);
	ENTITY::FREEZE_ENTITY_POSITION(iParam0, false);
	if (fParam3 == 0f)
	{
		return;
	}
	VEHICLE::SET_VEHICLE_ENGINE_ON(iParam0, true, true, false);
	if (fParam2 > 1f)
	{
		return;
	}
	VEHICLE::SET_VEHICLE_FORWARD_SPEED(iParam0, fParam3);
	iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
	if (!__LIB_11__.func_201(iVar2))
	{
		return;
	}
	Var0 = { __LIB_11__.func_186(*(uParam1[0 /*3*/]), *(uParam1[1 /*3*/]), 1.1f, 0) };
	TASK::TASK_VEHICLE_DRIVE_TO_COORD(iVar2, iParam0, Var0, fParam3, 0, ENTITY::GET_ENTITY_MODEL(iParam0), 262144, 0.5f, 1000f);
}

void func_380(var uParam0)//Position - 0xB98D
{
	__LIB_10__.func_721(uParam0, 0);
	__LIB_10__.func_721(uParam0, 1);
	__LIB_10__.func_721(uParam0, 2);
}

void func_381(var uParam0, int iParam1)//Position - 0x2C5CA
{
	uParam0->f_13 = iParam1;
	__LIB_20__.func_668(uParam0);
}

void func_382(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x2C74E
{
	__LIB_20__.func_453(*(uParam0[0 /*3*/]), *(uParam0[1 /*3*/]), uParam0->f_7, iParam1, iParam2, iParam3, iParam4);
}

int func_383(int iParam0)//Position - 0x2CCD7
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (__LIB_11__.func_225(iVar0))
	{
		return 1;
	}
	if (iVar0 == joaat("regina"))
	{
		if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2))
		{
			return 1;
		}
		if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 3) && VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 4))
		{
			return 1;
		}
	}
	if (iVar0 == joaat("banshee") && VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("peyote") && VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("coquette") && !VEHICLE::DOES_VEHICLE_HAVE_ROOF(iParam0))
	{
		return 1;
	}
	if (iVar0 == joaat("manana") && VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("mesa") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("voltic") && VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("bobcatxl") && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 1))
	{
		return 1;
	}
	if (iVar0 == joaat("ruiner"))
	{
		if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 3) && !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 7))
		{
			return 0;
		}
		return 1;
	}
	if (iVar0 == joaat("yosemite3"))
	{
		if (VEHICLE::GET_VEHICLE_MOD(iParam0, 5) == 4)
		{
			return 1;
		}
	}
	if (iVar0 == joaat("rt3000") && VEHICLE::GET_VEHICLE_MOD(iParam0, 10) == 3)
	{
		return 1;
	}
	if (iVar0 == joaat("brioso3"))
	{
		switch (VEHICLE::GET_VEHICLE_MOD(iParam0, 10))
		{
			case 1:
			case 4:
			case 7:
			case 10:
				return 1;
			}
		default:
	}
	if (iVar0 == joaat("zr350") && VEHICLE::GET_VEHICLE_MOD(iParam0, 0) > 11)
	{
		return 1;
	}
	return 0;
}

void func_384(var uParam0, int iParam1)//Position - 0x161
{
	if (((__LIB_0__.func_1("MPOF_AC_PC_EXIT" /* GXT: Use ~INPUT_SCRIPT_LEFT_AXIS_X~ to change pose.~n~Press ~INPUT_SCRIPT_RRIGHT~ to stand up. */) || __LIB_0__.func_1("MPOF_AC_EXIT" /* GXT: Use ~INPUT_SCRIPT_LEFT_AXIS_X~ to change pose.~n~Press ~INPUT_FRONTEND_RIGHT~ to stand up. */)) || __LIB_0__.func_1("MPOFSEAT_PCEXIT" /* GXT: Press ~INPUT_SCRIPT_RRIGHT~ to stand up. */)) || __LIB_0__.func_1("MPOFSEAT_EXIT" /* GXT: Press ~INPUT_FRONTEND_RIGHT~ to stand up. */))
	{
		HUD::CLEAR_HELP(true);
	}
	if (iParam1 && uParam0->f_6 != -1)
	{
		__LIB_6__.func_404(&(uParam0->f_6));
		uParam0->f_6 = -1;
	}
}

Vector3 func_385(int iParam0, char* sParam1, bool bParam2)//Position - 0x17DF48
{
	int iVar0;
	if (!__LIB_11__.func_237(iParam0, sParam1))
	{
		return 0f, 0f, 0f;
	}
	iVar0 = ENTITY::GET_ENTITY_BONE_INDEX_BY_NAME(iParam0, sParam1);
	if (bParam2)
	{
		return ENTITY::GET_ENTITY_BONE_ROTATION(iParam0, iVar0);
	}
	return ENTITY::GET_ENTITY_BONE_OBJECT_ROTATION(iParam0, iVar0);
}

bool func_386(var uParam0, float fParam1)//Position - 0x17EABB
{
	bool bVar0;
	float fVar1;
	bool bVar2;
	bVar0 = __LIB_11__.func_240(uParam0, fParam1);
	fVar1 = 90f;
	bVar2 = MISC::ABSF((fVar1 - fParam1)) <= 5f;
	if (bVar2)
	{
	}
	if (bVar0)
	{
	}
	return (bVar2 || bVar0);
}

int func_387(int iParam0)//Position - 0x17F4D3
{
	if (__LIB_11__.func_231(iParam0))
	{
		return __LIB_11__.func_244();
	}
	return __LIB_11__.func_243();
}

int func_388()//Position - 0x180A72
{
	int iVar0;
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1))
	{
		iVar0 = __LIB_0__.func_582();
		if (__LIB_1__.func_264(iVar0, 1, 1) && BitTest(Global_1853348[iVar0 /*834*/].f_267.f_384.f_3, 6))
		{
			return 1;
		}
		if ((__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0) && __LIB_3__.func_804(PLAYER::PLAYER_ID())) || __LIB_8__.func_546(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

int func_389(var uParam0)//Position - 0x81E
{
	int iVar0;
	iVar0 = (uParam0->f_1.f_2 + 1 % __LIB_20__.func_183(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 2 || uParam0->f_1.f_1 == 3)
	{
		return uParam0->f_1.f_2;
	}
	if (__LIB_6__.func_925())
	{
		if (uParam0->f_1.f_1 == 1)
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
	}
	else if (uParam0->f_1.f_1 == 1)
	{
		if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	return iVar0;
}

int func_390(var uParam0)//Position - 0xB1F
{
	int iVar0;
	if (uParam0->f_1.f_1 == 2 || uParam0->f_1.f_1 == 3)
	{
		return uParam0->f_1.f_2;
	}
	iVar0 = (uParam0->f_1.f_2 + 1 % __LIB_20__.func_481(uParam0->f_1.f_1));
	if (__LIB_6__.func_925())
	{
		if (uParam0->f_1.f_1 == 1)
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
	}
	else if (uParam0->f_1.f_1 == 1)
	{
		if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	return iVar0;
}

int func_391(var uParam0)//Position - 0x1AFD
{
	int iVar0;
	switch (uParam0->f_1.f_1)
	{
		case 2:
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
			if (iVar0 >= 1)
			{
				iVar0++;
			}
			break;
		default:
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, __LIB_20__.func_481(uParam0->f_1.f_1));
	}
	if (uParam0->f_1.f_1 == 1)
	{
		if (__LIB_6__.func_925())
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
		else if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	if (uParam0->f_1.f_1 == 3)
	{
		if (uParam0->f_9 >= 118 && uParam0->f_9 <= 122)
		{
			iVar0 = 2;
		}
	}
	return iVar0;
}

void func_392(int iParam0)//Position - 0x50917
{
	if (__LIB_6__.func_401(0) || iParam0 == 0)
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_1 = iParam0;
	}
}

void func_393(int iParam0)//Position - 0x50947
{
	if (__LIB_6__.func_401(0) || iParam0 == 0)
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = iParam0;
	}
}

void func_394(int iParam0, int iParam1)//Position - 0x69482
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bVar0 = iParam0 != true;
	bVar1 = iParam1 != 2;
	if (bVar0 == 1)
	{
		bVar2 = false;
		if (!iParam0 == 3)
		{
			if (GRAPHICS::GET_USINGSEETHROUGH())
			{
				GRAPHICS::SEETHROUGH_SET_MAX_THICKNESS(Global_1930707);
				Global_1930707 = -1f;
				GRAPHICS::SET_SEETHROUGH(false);
				bVar2 = true;
			}
			GRAPHICS::SET_NIGHTVISION(bVar0);
			MISC::SET_BIT(&(Global_1924338[PLAYER::PLAYER_ID() /*199*/].f_198), 0);
		}
		else
		{
			if (GRAPHICS::GET_REQUESTINGNIGHTVISION() || GRAPHICS::GET_USINGNIGHTVISION())
			{
				GRAPHICS::SET_NIGHTVISION(false);
				bVar2 = true;
			}
			GRAPHICS::SET_SEETHROUGH(bVar0);
			Global_1930707 = GRAPHICS::SEETHROUGH_GET_MAX_THICKNESS();
			GRAPHICS::SEETHROUGH_SET_MAX_THICKNESS(0.5f);
			MISC::SET_BIT(&(Global_1924338[PLAYER::PLAYER_ID() /*199*/].f_198), 2);
		}
		if (iParam1 == 1 || bVar1)
		{
			if (Global_1930708 == -1)
			{
				Global_1930708 = AUDIO::GET_SOUND_ID();
			}
			if (!Global_1930708 == -1 && AUDIO::HAS_SOUND_FINISHED(Global_1930708))
			{
				if (iParam1 == 1)
				{
					if (!bVar2)
					{
						AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "On", "GTAO_Vision_Modes_SoundSet", false);
					}
					else
					{
						AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "Switch", "GTAO_Vision_Modes_SoundSet", false);
					}
				}
				else if (bVar1)
				{
					if (!bVar2)
					{
						AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "On", "GTAO_Vision_Modes_SoundSet", true);
					}
					else
					{
						AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "Switch", "GTAO_Vision_Modes_SoundSet", true);
					}
				}
			}
		}
	}
	else
	{
		if (GRAPHICS::GET_REQUESTINGNIGHTVISION() || GRAPHICS::GET_USINGNIGHTVISION())
		{
			GRAPHICS::SET_NIGHTVISION(bVar0);
			MISC::CLEAR_BIT(&(Global_1924338[PLAYER::PLAYER_ID() /*199*/].f_198), 0);
		}
		if (GRAPHICS::GET_USINGSEETHROUGH())
		{
			GRAPHICS::SEETHROUGH_SET_MAX_THICKNESS(Global_1930707);
			Global_1930707 = -1f;
			GRAPHICS::SET_SEETHROUGH(bVar0);
			MISC::CLEAR_BIT(&(Global_1924338[PLAYER::PLAYER_ID() /*199*/].f_198), 2);
		}
		if (iParam1 == 1 || bVar1)
		{
			if (Global_1930708 == -1)
			{
				Global_1930708 = AUDIO::GET_SOUND_ID();
			}
			if (!Global_1930708 == -1 && AUDIO::HAS_SOUND_FINISHED(Global_1930708))
			{
				if (iParam1 == 1)
				{
					AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "Off", "GTAO_Vision_Modes_SoundSet", false);
				}
				else if (bVar1)
				{
					AUDIO::PLAY_SOUND_FRONTEND(Global_1930708, "Off", "GTAO_Vision_Modes_SoundSet", true);
				}
			}
		}
	}
	__LIB_18__.func_469(!bVar0);
}

void func_395(var uParam0)//Position - 0x744FE
{
	int iVar0;
	__LIB_6__.func_404(&(uParam0->f_6));
	__LIB_26__.func_384(uParam0, 1);
	if (uParam0->f_13 > 2)
	{
		__LIB_4__.func_82(-1);
		iVar0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(uParam0->f_8);
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar0))
		{
			NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(uParam0->f_8);
		}
	}
}

int func_396(int* iParam0, var uParam1, var uParam2)//Position - 0x78826
{
	if (__LIB_4__.func_713(uParam1->f_31))
	{
		return 0;
	}
	else if (__LIB_4__.func_710(uParam1->f_31))
	{
		return joaat("prop_tv_flat_michael");
	}
	else if (__LIB_4__.func_711(uParam1->f_31, 73))
	{
		if (!BitTest(*uParam2, 3))
		{
			return joaat("apa_mp_h_str_avunits_04");
		}
		else
		{
			return joaat("prop_tv_flat_01");
		}
	}
	else if (__LIB_4__.func_711(uParam1->f_31, 77))
	{
		if (!BitTest(*uParam2, 3))
		{
			return joaat("apa_mp_h_str_avunits_01");
		}
		else
		{
			return joaat("prop_tv_flat_01");
		}
	}
	else if (__LIB_4__.func_712(uParam1->f_31) && !BitTest(*uParam2, 3))
	{
		if ((Global_4196256 == 1 || Global_4196256 == 2) || Global_4196256 == 6)
		{
			return joaat("apa_mp_h_str_avunitm_01");
		}
		else if (Global_4196256 == 5)
		{
			return joaat("apa_mp_h_str_avunitm_03");
		}
		else if (Global_4196256 == 3 || Global_4196256 == 7)
		{
			return joaat("prop_tv_flat_01");
		}
		else if (Global_4196256 == 4)
		{
			return joaat("apa_mp_h_str_avunitl_01_b");
		}
		else
		{
			return joaat("apa_mp_h_str_avunitl_04");
		}
	}
	else if (__LIB_1__.func_188(uParam1->f_31) && !BitTest(*uParam2, 3))
	{
		return joaat("ex_prop_ex_tv_flat_01");
	}
	else if (__LIB_18__.func_376(uParam1->f_31, 0, 0) && !BitTest(*uParam2, 3))
	{
		return joaat("prop_tv_flat_01");
	}
	else if (__LIB_0__.func_630(uParam1->f_31, -1) && !BitTest(*uParam2, 3))
	{
		if (__LIB_1__.func_984(uParam1->f_31) == 91)
		{
			return joaat("prop_tv_flat_michael");
		}
		else
		{
			return joaat("prop_tv_flat_02");
		}
	}
	else if (__LIB_7__.func_916(PLAYER::PLAYER_ID()) && !BitTest(*uParam2, 3))
	{
		return joaat("sm_prop_smug_tv_flat_01");
	}
	else if (__LIB_4__.func_958(PLAYER::PLAYER_ID()) && !BitTest(*uParam2, 3))
	{
		return joaat("xm_prop_x17_tv_flat_01");
	}
	else if (iParam0->f_2481 && !BitTest(*uParam2, 3))
	{
		if (BitTest(*iParam0, 31))
		{
			return joaat("vw_prop_vw_tv_rt_01a");
		}
		else
		{
			return joaat("vw_prop_vw_cinema_tv_01");
		}
	}
	else if (iParam0->f_2482 && !BitTest(*uParam2, 3))
	{
		return joaat("ch_prop_ch_tv_rt_01a");
	}
	else if (iParam0->f_2483 && !BitTest(*uParam2, 3))
	{
		if (BitTest(iParam0->f_1, 0))
		{
			return joaat("sf_prop_sf_tv_flat_scr_01a");
		}
		else
		{
			return joaat("prop_tv_flat_01");
		}
	}
	else
	{
		switch (uParam1->f_33)
		{
			case 2:
				return joaat("prop_tv_03");
				break;
			case 6:
				return joaat("prop_tv_flat_01");
				break;
			case 10:
				return joaat("prop_tv_flat_01");
				break;
			}
	}
	return 0;
}

bool func_397()//Position - 0xD5DBE
{
	return __LIB_19__.func_692(PLAYER::PLAYER_ID());
}

void func_398(int iParam0, int iParam1, var uParam2)//Position - 0x12639B
{
	switch (iParam1)
	{
		case 0:
			if ((Global_262145.f_24391 /* Tunable: 1595462041 */ || __LIB_18__.func_933(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_170(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 1:
			if (Global_262145.f_24391 /* Tunable: 1595462041 */ && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_163(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				uParam2->f_2 = 1;
				if (!BitTest(uParam2->f_3, 6))
				{
					MISC::SET_BIT(&(uParam2->f_3), 6);
				}
				MISC::SET_BIT(&(uParam2->f_3), 0);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 2:
			if (__LIB_11__.func_259(iParam0) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_169(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14), &(uParam2->f_4));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_3__.func_168(&(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 3:
			if ((__LIB_3__.func_915(iParam0) || __LIB_11__.func_259(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_167(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
			}
			break;
	}
}

int func_399(int* iParam0, var uParam1)//Position - 0x19C0F8
{
	if (__LIB_4__.func_958(PLAYER::PLAYER_ID()))
	{
		return joaat("xm_prop_x17_tv_flat_01");
	}
	else if (__LIB_4__.func_713(uParam1->f_31))
	{
		return joaat("prop_tv_flat_01_screen");
	}
	else if (__LIB_4__.func_710(uParam1->f_31))
	{
		return joaat("prop_tv_flat_01_screen");
	}
	else if (__LIB_1__.func_188(uParam1->f_31))
	{
		return joaat("prop_tv_flat_01_screen");
	}
	else if (__LIB_0__.func_630(uParam1->f_31, -1))
	{
		if (__LIB_1__.func_984(uParam1->f_31) == 91)
		{
			return joaat("prop_tv_flat_michael");
		}
		else
		{
			return joaat("prop_tv_flat_02");
		}
	}
	else if (__LIB_18__.func_376(uParam1->f_31, 0, 0))
	{
		return joaat("prop_tv_flat_01");
	}
	else if (__LIB_7__.func_916(PLAYER::PLAYER_ID()))
	{
		return joaat("prop_tv_flat_01_screen");
	}
	else if (iParam0->f_2481)
	{
		if (BitTest(*iParam0, 31))
		{
			return joaat("vw_prop_vw_tv_rt_01a");
		}
		else
		{
			return joaat("vw_prop_vw_cinema_tv_01");
		}
	}
	else if (iParam0->f_2482)
	{
		return joaat("ch_prop_ch_tv_rt_01a");
	}
	else if (iParam0->f_2483)
	{
		if (BitTest(iParam0->f_1, 0))
		{
			return joaat("sf_prop_sf_tv_flat_scr_01a");
		}
		else
		{
			return joaat("prop_tv_flat_01");
		}
	}
	else
	{
		switch (uParam1->f_33)
		{
			case 2:
				return joaat("prop_tv_03_overlay");
				break;
			case 6:
				return joaat("prop_tv_flat_01_screen");
				break;
			case 10:
				return joaat("prop_tv_flat_01_screen");
				break;
			}
	}
	return 0;
}

void func_400(int* iParam0, var uParam1, int* iParam2, bool bParam3)//Position - 0x1A5C56
{
	__LIB_6__.func_466(iParam0);
	if (BitTest(*iParam0, 15))
	{
		MISC::CLEAR_BIT(iParam0, 15);
	}
	MISC::CLEAR_BIT(iParam0, 4);
	if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_4) && !BitTest(*iParam0, 27))
	{
		if ((((__LIB_2__.func_106(uParam1->f_31) == 5 || __LIB_2__.func_106(uParam1->f_31) == 4) || (((((BitTest(*iParam0, 3) && !__LIB_1__.func_188(uParam1->f_31)) && !__LIB_0__.func_630(uParam1->f_31, -1)) && !__LIB_18__.func_376(uParam1->f_31, 0, 0)) && !__LIB_3__.func_870(PLAYER::PLAYER_ID())) && !__LIB_5__.func_610(PLAYER::PLAYER_ID()))) || __LIB_4__.func_713(uParam1->f_31)) || __LIB_6__.func_465(uParam1->f_31))
		{
			if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0->f_4, false))
			{
				OBJECT::DELETE_OBJECT(&(iParam0->f_4));
			}
		}
	}
	else if (bParam3)
	{
		if (iParam2->f_8 != 3)
		{
			iParam0->f_4 = 0;
		}
	}
	if (HUD::IS_NAMED_RENDERTARGET_REGISTERED(__LIB_19__.func_940(iParam0, uParam1)))
	{
		HUD::RELEASE_NAMED_RENDERTARGET(__LIB_19__.func_940(iParam0, uParam1));
		if (Global_1958629)
		{
			Global_1958629 = 0;
		}
	}
	iParam0->f_2 = -1;
	MISC::CLEAR_BIT(iParam0, 5);
	MISC::CLEAR_BIT(iParam0, 27);
}

void func_401(var uParam0)//Position - 0x1C1124
{
	uParam0->f_1.f_1 = __LIB_10__.func_607(uParam0->f_16[uParam0->f_9 /*14*/].f_13);
	uParam0->f_1.f_2 = __LIB_20__.func_480(uParam0);
	uParam0->f_1.f_3 = 3;
	uParam0->f_1.f_4 = 3;
}

int func_402(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0x3A1B
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	bVar0 = false;
	if (!__LIB_0__.func_112())
	{
		bVar0 = true;
	}
	if (!bVar0)
	{
		if (!NETSHOPPING::NET_GAMESERVER_IS_SESSION_VALID(__LIB_0__.func_5()) || NETSHOPPING::NET_GAMESERVER_IS_SESSION_REFRESH_PENDING())
		{
			Global_4535607 = 1;
			return 0;
		}
		if (Global_2726699)
		{
			if (iParam2 == joaat("CATEGORY_WEAPON_AMMO") || iParam2 == joaat("CATEGORY_MART"))
			{
				Global_4535608 = 1;
				return 0;
			}
		}
	}
	bVar2 = false;
	iVar1 = 0;
	while (iVar1 < 15)
	{
		if (Global_4534105[iVar1 /*85*/].f_66.f_2 == 0)
		{
			bVar2 = true;
		}
		else if (Global_4534105[iVar1 /*85*/].f_66.f_5 == 1)
		{
			return 0;
		}
		iVar1++;
	}
	if (!bVar2)
	{
		return 0;
	}
	*iParam0 = 0;
	if (!bVar0)
	{
		if (NETSHOPPING::NET_GAMESERVER_BASKET_IS_ACTIVE())
		{
			NETSHOPPING::NET_GAMESERVER_BASKET_END();
		}
	}
	if (bVar0 || NETSHOPPING::NET_GAMESERVER_BASKET_START(&iVar3, iParam2, iParam3, iParam4))
	{
		*iParam0 = __LIB_20__.func_492(iVar3, iParam1, joaat("SERVICE_INVALID"), iParam3, iParam2, 0, 1, iParam4, uParam5, 0, bVar0);
		return 1;
	}
	return 0;
}

void func_403(char* sParam0, bool bParam1)//Position - 0x2665D
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_23150.f_5611 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_23150.f_79[Global_23150.f_5611 /*6*/]), sParam0, 24);
	Global_23150.f_5611++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 1;
	Global_23150.f_6134++;
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_20__.func_494();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_20__.func_493();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

void func_404(char* sParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x27116
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	if (Global_23150.f_5612 >= 40)
	{
		return;
	}
	if (Global_23150.f_6134 >= 4)
	{
		return;
	}
	if (Global_23150.f_6135 != 1)
	{
		return;
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		return;
	}
	StringCopy(&(Global_2725950[Global_23150.f_5612 /*16*/]), sParam0, 64);
	Global_23150.f_5612++;
	Global_23150.f_2387[Global_23150.f_6133 /*5*/][Global_23150.f_6134] = 5;
	Global_23150.f_6134++;
	fVar0 = 0f;
	if (bParam3)
	{
		fVar0 = __LIB_20__.func_494();
	}
	if (bParam2)
	{
	}
	if (Global_23150.f_6134 >= Global_23150.f_6132)
	{
		fVar0 = __LIB_20__.func_494();
		if (Global_23150.f_5466[Global_23150.f_5610] && Global_23150.f_6134 == Global_23150.f_6132)
		{
			__LIB_7__.func_172(26, 1, 0, &fVar1, &fVar2, 0);
			fVar0 = (fVar0 + (fVar1 * 2f));
		}
		if (fVar0 > Global_23150.f_5459[(Global_23150.f_5610 - 1)])
		{
			Global_23150.f_5459[(Global_23150.f_5610 - 1)] = fVar0;
		}
	}
	if (bParam1)
	{
		if (Global_23150.f_6134 >= Global_23150.f_6132)
		{
			fVar3 = __LIB_20__.func_493();
			if (fVar3 > Global_23150.f_6136[Global_23150.f_5609])
			{
				Global_23150.f_6136[Global_23150.f_5609] = fVar3;
			}
		}
	}
}

int func_405(int iParam0)//Position - 0x2B98A
{
	int iVar0;
	int iVar1;
	if (__LIB_4__.func_660(iParam0))
	{
		iVar0 = __LIB_9__.func_630(iParam0);
		iVar1 = __LIB_3__.func_974(iParam0);
		if (iVar1 == 2)
		{
			return (111 - iVar0);
		}
		else if (iVar1 == 1)
		{
			return (42 - iVar0);
		}
		else
		{
			return (16 - iVar0);
		}
	}
	return 0;
}

int func_406(int iParam0)//Position - 0x36529
{
	return __LIB_20__.func_499(iParam0);
}

int func_407(int* iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10)//Position - 0x1B7976
{
	if (((__LIB_4__.func_710(iParam1) || __LIB_4__.func_711(iParam1, -1)) || __LIB_4__.func_712(iParam1)) && !BitTest(uParam2, 3))
	{
		return 1;
	}
	if (__LIB_1__.func_188(iParam1))
	{
		return 1;
	}
	if (__LIB_0__.func_630(iParam1, -1))
	{
		return 1;
	}
	if (__LIB_18__.func_376(iParam1, 0, 0))
	{
		return 1;
	}
	if (__LIB_7__.func_916(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if (__LIB_4__.func_958(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if (iParam0->f_2481)
	{
		return 1;
	}
	if (iParam0->f_2482)
	{
		return 1;
	}
	if (iParam0->f_2483)
	{
		return 1;
	}
	return 0;
}

void func_408(var uParam0)//Position - 0x1BC64F
{
	int iVar0;
	CAM::SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(-70.0027f, -10.1277f);
	switch (uParam0->f_13)
	{
		case 4:
		case 8:
		case 6:
			__LIB_8__.func_611(1);
			CAM::INVALIDATE_IDLE_CAM();
			HUD::HUD_FORCE_WEAPON_WHEEL(false);
			HUD::DISPLAY_AMMO_THIS_FRAME(false);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(19);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(2);
			HUD::HUD_SUPPRESS_WEAPON_WHEEL_RESULTS_THIS_FRAME();
			__LIB_0__.func_184();
			if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &iVar0, true) && iVar0 != joaat("WEAPON_UNARMED"))
			{
				WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), joaat("WEAPON_UNARMED"), true);
			}
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
			__LIB_4__.func_62(1);
			__LIB_0__.func_186();
			break;
	}
}

void func_409(var uParam0)//Position - 0x1BD4F9
{
	int iVar0;
	__LIB_6__.func_404(&(uParam0->f_6));
	__LIB_11__.func_267(uParam0);
	if (uParam0->f_13 > 2)
	{
		__LIB_4__.func_82(-1);
		iVar0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(uParam0->f_8);
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar0))
		{
			NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(uParam0->f_8);
		}
		__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
	}
	MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 15);
}

void func_410(int iParam0)//Position - 0x1416
{
	int iVar0;
	iVar0 = __LIB_10__.func_857();
	Global_1966127 = (Global_1966127 + iParam0);
	__LIB_20__.func_476(iVar0, iParam0);
	__LIB_10__.func_848();
}

bool func_411()//Position - 0x82FA
{
	return __LIB_26__.func_295() != 3;
}

int func_412()//Position - 0x8853
{
	int iVar0;
	if (__LIB_1__.func_113(PLAYER::PLAYER_ID(), 1))
	{
		iVar0 = __LIB_0__.func_582();
		if (__LIB_0__.func_154(iVar0, 1, 1) && BitTest(Global_1853348[iVar0 /*834*/].f_267.f_384.f_3, 6))
		{
			return 1;
		}
		if ((__LIB_0__.func_292(PLAYER::PLAYER_ID(), 0) && __LIB_0__.func_286(PLAYER::PLAYER_ID())) || __LIB_20__.func_491(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

void func_413(int iParam0)//Position - 0xE760
{
	Global_1966118 = NETWORK::GET_CLOUD_TIME_AS_INT();
	Global_1966136 = iParam0;
	if (!__LIB_10__.func_853())
	{
		__LIB_20__.func_479();
	}
	if (!__LIB_10__.func_850())
	{
		__LIB_20__.func_478();
	}
}

int func_414(int iParam0)//Position - 0xF0A1
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar0 = __LIB_11__.func_289(iParam0);
	iVar2 = 1;
	bVar1 = false;
	while (bVar1 < 54)
	{
		if (bVar1 < 32)
		{
			if (BitTest(Global_2788825, bVar1))
			{
				if (iVar2 == iVar0)
				{
					return bVar1;
				}
				else
				{
					iVar2++;
				}
			}
		}
		else if (BitTest(Global_2788826, (bVar1 - 32)))
		{
			if (iVar2 == iVar0)
			{
				return bVar1;
			}
			else
			{
				iVar2++;
			}
		}
		bVar1++;
	}
	return -1;
}

int func_415(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x2BCA9
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_235(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

void func_416()//Position - 0x344A
{
	__LIB_2__.func_41(Global_20247, "SET_INPUT_EVENT", SYSTEM::TO_FLOAT(4), -1082130432, -1082130432, -1082130432, -1082130432);
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Navigate", &Global_20255, true);
	__LIB_11__.func_301();
}

void func_417()//Position - 0x350A
{
	__LIB_2__.func_41(Global_20247, "SET_INPUT_EVENT", SYSTEM::TO_FLOAT(2), -1082130432, -1082130432, -1082130432, -1082130432);
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Navigate", &Global_20255, true);
	__LIB_11__.func_302();
}

void func_418()//Position - 0x74FB
{
	Global_2821909.f_2 = 1;
	Global_2821909.f_38 = 1;
	if (NETWORK::NETWORK_IS_SIGNED_ONLINE())
	{
		if (NETWORK::NETWORK_SESSION_IS_IN_VOICE_SESSION())
		{
			while (NETWORK::NETWORK_SESSION_IS_VOICE_SESSION_BUSY())
			{
				SYSTEM::WAIT(0);
			}
			NETWORK::NETWORK_SESSION_VOICE_LEAVE();
			Global_2821909 = 0;
			Global_2821909.f_2 = 0;
		}
		else if (__LIB_0__.func_585(Global_2821909.f_20))
		{
			if (NETWORK::NETWORK_IS_FRIEND(&(Global_2821909.f_20)))
			{
				if (!NETWORK::NETWORK_IS_FRIEND_HANDLE_ONLINE(&(Global_2821909.f_20)))
				{
					__LIB_20__.func_508();
				}
			}
		}
		else
		{
			__LIB_20__.func_508();
		}
	}
	else
	{
		__LIB_20__.func_508();
	}
	if (Global_2821909.f_37)
	{
		__LIB_6__.func_849(0);
	}
	Global_2821909.f_37 = 0;
	Global_2821909.f_3 = 0;
}

int func_419(int iParam0)//Position - 0x19B7
{
	return __LIB_7__.func_787(iParam0, -1, 1);
}

int func_420(int* iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, char* sParam7, float fParam8, bool bParam9, int iParam10, bool bParam11, int iParam12, var uParam13, var uParam14, var uParam15, int iParam16, bool bParam17)//Position - 0x92295
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7[3];
	bool bVar8;
	bool bVar9;
	int iVar10;
	int iVar11;
	var uVar12[3];
	var uVar13[3];
	bool bVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	struct<3> Var19;
	int iVar20;
	int iVar21;
	iVar4 = 0;
	iParam0->f_17[0] = uParam1;
	iParam0->f_17[1] = uParam2;
	iParam0->f_17[2] = uParam3;
	iParam0->f_16 = uParam1;
	uVar12[0] = uParam4;
	uVar12[1] = uParam5;
	uVar12[2] = uParam6;
	uVar13[0] = uParam13;
	uVar13[1] = uParam14;
	uVar13[2] = uParam15;
	iVar6 = 1;
	iVar1 = 0;
	iVar2 = 0;
	iVar3 = 0;
	iVar7[0] = 0;
	iVar7[1] = 0;
	iVar7[2] = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
		{
			iVar3++;
		}
		if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
		{
			if (!BitTest(iParam0->f_13, 29) && !BitTest(iParam0->f_13, 28))
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], true, -1, 0);
				}
				if (iVar0 == 2)
				{
					MISC::SET_BIT(&(iParam0->f_13), 28);
				}
			}
		}
		else if (!BitTest(iParam0->f_13, 29) && BitTest(iParam0->f_13, 28))
		{
			if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
			{
				PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], false, -1, 0);
			}
			if (iVar0 == 2)
			{
				MISC::CLEAR_BIT(&(iParam0->f_13), 28);
			}
		}
		iVar0++;
	}
	if (iVar3 == 0)
	{
		return 1;
	}
	if (BitTest(iParam0->f_13, 26))
	{
		bVar14 = false;
		if (!ENTITY::DOES_ENTITY_EXIST(iParam0->f_21))
		{
			iVar16 = 64;
			iVar16 |= 65536;
			iVar16 |= 2048;
			iVar16 |= 1;
			iVar16 |= 2;
			iVar16 |= 4;
			iVar16 |= 32;
			iVar16 |= 16;
			iVar16 |= 8;
			iVar15 = VEHICLE::GET_CLOSEST_VEHICLE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 50f, 0, iVar16);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar15, false))
			{
				iParam0->f_21 = iVar15;
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0->f_21, false))
		{
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0->f_21, true)) < 400f)
			{
				if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					if (!PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0) || !bParam17)
					{
						if (__LIB_11__.func_161(iParam0->f_21, iParam0, iVar3))
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
								{
									PED::SET_PED_MAX_MOVE_BLEND_RATIO(iParam0->f_17[iVar0], 1f);
									if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
									{
										PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
									}
									if (TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 7 && !__LIB_0__.func_456(iParam0->f_17[iVar0], iParam0->f_21))
									{
										if (!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0]))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], true);
											TASK::TASK_ENTER_VEHICLE(iParam0->f_17[iVar0], iParam0->f_21, 60000, iVar0, 1f, 1, 0);
											PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], iVar0);
										}
									}
								}
								iVar0++;
							}
							return 1;
						}
						else
						{
							bVar14 = true;
						}
					}
					else
					{
						bVar14 = true;
					}
				}
				else
				{
					bVar14 = true;
				}
			}
			else
			{
				bVar14 = true;
			}
		}
		else
		{
			bVar14 = true;
		}
		if (bVar14)
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), 26);
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0]) && !iParam0->f_15)
					{
						TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
					}
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						if (__LIB_20__.func_451(iParam0, iParam0->f_17[iVar0], fParam8, 1))
						{
							PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399());
						}
					}
				}
				iVar0++;
			}
		}
	}
	if (!BitTest(iParam0->f_13, 26))
	{
		if ((!__LIB_11__.func_317(iParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) && !ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
			{
				if (!BitTest(iParam0->f_13, 13))
				{
					if (iParam16 == 4 || iParam16 == 5)
					{
					}
					if (!__LIB_18__.func_197(iParam0, 2))
					{
						iVar17 = 0;
						iVar18 = 0;
						iVar0 = 0;
						while (iVar0 < 3)
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
							{
								iVar17++;
							}
							iVar0++;
						}
						iVar18 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar17);
						if (!PED::IS_PED_INJURED(iParam0->f_17[iVar18]))
						{
							__LIB_6__.func_834(iParam0->f_17[iVar18], "NEED_A_BIGGER_VEHICLE", 3);
						}
						__LIB_0__.func_440(iParam0, "MORE_SEATS" /* GXT: A vehicle with more seats is needed. */, 0);
						MISC::SET_BIT(&(iParam0->f_13), 13);
					}
				}
				bVar9 = true;
			}
		}
		else
		{
			bVar9 = false;
			MISC::CLEAR_BIT(&(iParam0->f_13), 13);
			__LIB_0__.func_444("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
		}
		if (!ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			if ((!PED::IS_PED_INJURED(iParam0->f_17[0]) || !PED::IS_PED_INJURED(iParam0->f_17[1])) || !PED::IS_PED_INJURED(iParam0->f_17[2]))
			{
				if (!BitTest(iParam0->f_13, 31))
				{
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()) && !__LIB_18__.func_197(iParam0, 2))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (__LIB_11__.func_166(iVar10, iParam0))
						{
							__LIB_0__.func_440(iParam0, "CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */, 0);
							MISC::SET_BIT(&(iParam0->f_13), 31);
						}
					}
				}
				else if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					MISC::CLEAR_BIT(&(iParam0->f_13), 31);
					__LIB_0__.func_444("CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */);
				}
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
		{
			if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
			{
				if (PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/))
				{
					MISC::SET_BIT(&(iParam0->f_13), 21);
				}
			}
			else if (BitTest(iParam0->f_13, 21))
			{
				MISC::CLEAR_BIT(&(iParam0->f_13), 21);
			}
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_17[iVar0]))
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						PED::SET_PED_DIES_IN_WATER(iParam0->f_17[iVar0], true);
					}
					else
					{
						PED::SET_PED_DIES_IN_WATER(iParam0->f_17[iVar0], false);
					}
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
						{
							if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (!__LIB_11__.func_317(iParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
								{
									if (!__LIB_0__.func_453(iParam0->f_17[iVar0]))
									{
										PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
									}
								}
							}
						}
						if (iVar10 != iParam10 && !ENTITY::IS_ENTITY_DEAD(iVar10, false))
						{
							if (PED::IS_PED_SITTING_IN_VEHICLE(iParam0->f_17[iVar0], iVar10))
							{
								if (ENTITY::IS_ENTITY_IN_WATER(iVar10) && !VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(iVar10))
								{
									Var19 = { ENTITY::GET_ENTITY_COORDS(iVar10, true) };
									if (Var19.f_2 < -1f)
									{
										TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
									}
								}
							}
						}
					}
					bVar8 = true;
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam0->f_17[iVar0]))
						{
							iVar10 = PED::GET_VEHICLE_PED_IS_IN(iParam0->f_17[iVar0], false);
							if (!ENTITY::IS_ENTITY_DEAD(iVar10, false))
							{
								if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
								{
									if (iVar10 != iParam10)
									{
										if (!PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar10))
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
								else
								{
									if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
									{
										iVar20 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									}
									if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar20, false))
									{
										if (iVar10 != iVar20)
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
							}
						}
					}
					if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
					{
						iVar21 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						if (ENTITY::DOES_ENTITY_EXIST(iVar21))
						{
							if (__LIB_11__.func_161(iVar21, iParam0, 0))
							{
								if (__LIB_11__.func_165(iVar0, iParam0) || !BitTest(iParam0->f_13, 27))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], iVar0);
									__LIB_11__.func_160(iVar0, iParam0);
									iVar4++;
									if (iVar4 >= iVar3)
									{
										MISC::SET_BIT(&(iParam0->f_13), 27);
									}
								}
							}
							else if (!__LIB_11__.func_165(iVar0, iParam0))
							{
								if (ENTITY::GET_ENTITY_MODEL(iVar21) == joaat("sentinel2"))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], 4);
								}
								else
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], 2);
								}
								__LIB_11__.func_164(iVar0, iParam0);
							}
						}
					}
					if ((!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()) && !__LIB_0__.func_450(iParam0->f_17[iVar0], iParam10)) && !__LIB_0__.func_449(iParam0->f_17[iVar0], iParam10))
					{
						if (__LIB_20__.func_451(iParam0, iParam0->f_17[iVar0], fParam8, bParam11))
						{
							if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (((!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0]))
								{
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7)
									{
										TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
									}
									PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399());
									bVar8 = false;
								}
							}
						}
						if (bVar8)
						{
							if (!HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
							{
								iParam0->f_11 = MISC::GET_GAME_TIMER();
								iParam0->f_1[iVar0] = __LIB_6__.func_825(iParam0->f_17[iVar0], 0, 0);
								HUD::SET_BLIP_DISPLAY(iParam0->f_1[iVar0], 2);
								if (bParam9)
								{
									__LIB_0__.func_439(iParam0->f_1[iVar0], iParam0);
								}
							}
						}
						iVar6 = 0;
					}
					else if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
					{
						if (((__LIB_9__.func_979(iParam0->f_17[iVar0], 1) || __LIB_0__.func_450(iParam0->f_17[iVar0], iParam10)) || iParam12) || (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
						{
							if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
							{
								HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
								__LIB_0__.func_444(uVar12[iVar0]);
							}
						}
						else
						{
							if (bParam9)
							{
								__LIB_0__.func_439(iParam0->f_1[iVar0], iParam0);
							}
							iVar6 = 0;
						}
					}
					else if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
					{
						if (!PED::IS_PED_SITTING_IN_VEHICLE(iParam0->f_17[iVar0], iParam10))
						{
							if ((ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], iParam10, 20f, 20f, 5f, false, true, 0) && !BitTest(iParam0->f_13, 11)) && !((bParam17 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
							{
								if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam0->f_17[iVar0]))
								{
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar0], iParam10, false))
									{
										if (!__LIB_9__.func_979(iParam0->f_17[iVar0], 1))
										{
											if (__LIB_0__.func_437(iParam0->f_17[iVar0]))
											{
												iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_LEAVE_VEHICLE"));
												if (iVar11 == 7)
												{
													TASK::TASK_LEAVE_ANY_VEHICLE(iParam0->f_17[iVar0], 0, 0);
												}
											}
										}
									}
								}
								else
								{
									if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
									{
										if ((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0]) && !PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
										}
									}
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7 && !__LIB_0__.func_456(iParam0->f_17[iVar0], iParam10))
									{
										if (((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0]) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(PLAYER::PLAYER_PED_ID())) && !__LIB_0__.func_448(iParam0->f_17[iVar0], 2f)) && !PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], true);
											if (BitTest(iParam0->f_13, 10))
											{
												PED::SET_PED_MAX_MOVE_BLEND_RATIO(iParam0->f_17[iVar0], 1f);
											}
											TASK::TASK_ENTER_VEHICLE(iParam0->f_17[iVar0], iParam10, 60000, iVar0, 2f, 1, 0);
											PED::SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(iParam0->f_17[iVar0], false);
										}
									}
									else if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false))
									{
										iParam0->f_1[iVar0] = __LIB_6__.func_825(iParam0->f_17[iVar0], 0, 0);
										HUD::SET_BLIP_DISPLAY(iParam0->f_1[iVar0], 2);
										iVar6 = 0;
									}
								}
							}
							else if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (__LIB_20__.func_451(iParam0, iParam0->f_17[iVar0], fParam8, bParam11))
								{
									if (!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0]))
									{
										iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
										if (iVar11 == 7)
										{
											TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
										}
										PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], false);
										PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399());
									}
								}
							}
						}
						else if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
						{
							if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()))
							{
								if (!BitTest(iParam0->f_13, 21))
								{
									PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399());
								}
							}
							else if (BitTest(iParam0->f_13, 21))
							{
								PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
								MISC::SET_BIT(&(iParam0->f_13), 21);
							}
						}
						else if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__.func_399()) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
						{
							PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
						}
					}
				}
				else if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
					__LIB_0__.func_444(uVar12[iVar0]);
				}
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
			{
				iVar7[iVar0] = 1;
				iVar1++;
			}
			iVar0++;
		}
		if (!__LIB_18__.func_197(iParam0, 2))
		{
			if (iVar1 > 0)
			{
				iVar0 = 0;
				while (iVar0 < 3)
				{
					if (iVar7[iVar0])
					{
						if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
						{
							if (__LIB_0__.func_453(iParam0->f_17[iVar0]) || ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), iParam0->f_8, iParam0->f_8, iParam0->f_8, false, true, 0))
							{
								iVar1 = (iVar1 - 1);
								iVar7[iVar0] = 0;
							}
						}
					}
					else if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
					{
						if (!ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), (iParam0->f_8 * 0.85f), (iParam0->f_8 * 0.85f), iParam0->f_8, false, true, 0) && !__LIB_0__.func_453(iParam0->f_17[iVar0]))
						{
						}
					}
					iVar0++;
				}
			}
			iVar5 = MISC::GET_GAME_TIMER();
			if ((iVar5 - iParam0->f_11) > 1500 || iVar3 == 1)
			{
				if (iVar1 > 0)
				{
					if (iParam0->f_12 < iVar1)
					{
						if ((iVar1 == iVar3 || (iVar2 + iVar1) == iVar3) && iVar3 > 1)
						{
							if (!BitTest(iParam0->f_13, 5))
							{
								__LIB_0__.func_440(iParam0, sParam7, 0);
								MISC::SET_BIT(&(iParam0->f_13), 5);
								iParam0->f_12 = iVar1;
							}
							else
							{
								iParam0->f_12 = iVar1;
							}
						}
						else
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (iVar7[iVar0])
								{
									if (!__LIB_11__.func_163(iVar0, iParam0))
									{
										if (!MISC::IS_STRING_NULL(uVar13[iVar0]))
										{
											if (!MISC::ARE_STRINGS_EQUAL(uVar13[iVar0], ""))
											{
												__LIB_20__.func_450(iParam0, uVar12[iVar0], uVar13[iVar0], 0);
												__LIB_11__.func_162(iVar0, iParam0);
												iParam0->f_12 = iVar1;
											}
										}
										if (!__LIB_11__.func_163(iVar0, iParam0))
										{
											__LIB_0__.func_440(iParam0, uVar12[iVar0], 0);
											__LIB_11__.func_162(iVar0, iParam0);
											iParam0->f_12 = iVar1;
										}
									}
									else
									{
										iParam0->f_12 = iVar1;
									}
								}
								iVar0++;
							}
						}
					}
				}
				else
				{
					iParam0->f_12 = 0;
				}
			}
		}
		MISC::CLEAR_BIT(&(iParam0->f_13), 10);
		if (iVar6 && !bVar9)
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
					__LIB_0__.func_444(uVar12[iVar0]);
				}
				iVar0++;
			}
			__LIB_0__.func_444("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
			return 1;
		}
	}
	return 0;
}

int func_421(int iParam0)//Position - 0x61453
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		iVar5 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar1 = 0;
		while (iVar1 <= 8)
		{
			iVar2 = iVar1;
			iVar4 = __LIB_6__.func_788(iParam0, iVar2);
			if (__LIB_6__.func_779(iVar5, 14, iVar4, -1))
			{
				return 1;
			}
			iVar1++;
		}
		iVar0 = 0;
		while (iVar0 <= 14)
		{
			iVar3 = iVar0;
			if ((iVar3 != 12 && iVar3 != 13) && iVar3 != 14)
			{
				iVar4 = __LIB_6__.func_795(iParam0, iVar3);
				if (__LIB_6__.func_779(iVar5, iVar3, iVar4, -1))
				{
					return 1;
				}
			}
			iVar0++;
		}
	}
	else
	{
		iVar6 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1);
		if (iVar6 > 0)
		{
			iVar7 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, iVar6, PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar7, joaat("HAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar7, joaat("HAIR_SHRINK"), 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_422(var uParam0, int* iParam1, var uParam2, bool bParam3, bool bParam4, char* sParam5, bool bParam6, int iParam7, bool bParam8, bool bParam9, char* sParam10, bool bParam11, bool bParam12, bool bParam13, bool bParam14, bool bParam15, int iParam16, bool bParam17, int iParam18, bool bParam19, bool bParam20, bool bParam21, bool bParam22, bool bParam23, bool bParam24, bool bParam25, bool bParam26, bool bParam27, bool bParam28, bool bParam29, int iParam30, int iParam31, bool bParam32, char* sParam33, bool bParam34)//Position - 0xE782E
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char* sVar4;
	char* sVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	struct<16> Var10;
	int iVar11;
	int iVar12;
	int iVar13;
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	switch (*uParam2)
	{
		case 0:
			if (bParam3)
			{
				if (iParam7 == 6)
				{
					iVar6 = 121;
				}
				else if (iParam7 == 7)
				{
					iVar6 = 63;
				}
				else if (__LIB_9__.func_514())
				{
					iVar6 = 21;
				}
				else
				{
					iVar6 = 51;
				}
				if (*iParam1 == 0)
				{
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						if (__LIB_9__.func_514())
						{
							sVar4 = "FMMC_KEY_TIS2SJ";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP2";
						}
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_KEY_TIP7";
						iVar6 = 21;
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_KEY_TIP5";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_KEY_TIP6";
						if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("fm_capture_creator")) > 0)
						{
							iVar6 = 21;
						}
						else
						{
							iVar6 = 23;
						}
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_KEY_TIP10" /* GXT: Enter Synopsis (MAX 125 characters): */;
					}
					else if (iParam7 == 8)
					{
						sVar4 = "FMMC_KEY_TXT7";
					}
					else if (iParam7 == 9)
					{
						sVar4 = "FMMC_KEY_TXT8";
					}
					else if (iParam7 == 10)
					{
						sVar4 = "FMMC_KEY_VSS";
					}
				}
				else if (__LIB_9__.func_514())
				{
					sVar4 = "FMMC_KEY_TIS2FJ";
				}
				else
				{
					sVar4 = "FMMC_KEY_TIP2F";
				}
				if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
				{
					sVar5 = sVar4;
					if ((iParam7 == 0 || iParam7 == 1) || iParam7 == 2)
					{
						sVar4 = "FMMC_SS_RL_35";
					}
					else if (iParam7 == 3)
					{
						sVar4 = "FMMC_SS_RL_32";
					}
					else if (iParam7 == 4)
					{
						sVar4 = "FMMC_SS_RL_33";
					}
					else if (iParam7 == 5)
					{
						sVar4 = "FMMC_SS_RL_34";
					}
					else if (iParam7 == 6)
					{
						sVar4 = "FMMC_SS_RL_49";
					}
					else if (iParam7 == 7)
					{
						sVar4 = "FMMC_SS_RL_57";
					}
				}
				if (MISC::IS_PC_VERSION())
				{
					iVar7 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar7 = 0;
				}
				else
				{
					iVar7 = 1;
				}
				if (bParam24)
				{
					if (bParam26)
					{
						sVar4 = "LINE_NUMBER";
					}
					else
					{
						sVar4 = "WEB_SEARCH" /* GXT: Search... */;
					}
				}
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, "", "", "", "", iVar6);
				}
				else
				{
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar7, sVar4, sVar5, sParam5, sParam10, "", "", iVar6);
				}
			}
			else
			{
				if (MISC::IS_PC_VERSION())
				{
					iVar8 = 6;
				}
				else if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
				{
					iVar8 = 0;
				}
				else
				{
					iVar8 = 1;
				}
				if (bParam4)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 10)
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 25;
					}
					if (__LIB_0__.func_236())
					{
						iVar9 = 64;
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_116531)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_116531), "", "", "", iVar9);
					}
				}
				else if (bParam32)
				{
					sVar4 = "CST_KEY_TEXT";
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (bParam25)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_BLIMP";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_169373)))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_169373), "", "", "", iVar9);
					}
				}
				else if (iParam30 != -1)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "DMC_HTM_EH";
					}
					else
					{
						sVar4 = "FMMC_KEY_BTIPF";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					Var10 = { Global_4718592.f_169405[iParam30 /*16*/] };
					if (iParam31 > -1)
					{
						Var10 = { Global_4718592.f_169486[iParam30 /*65*/][iParam31 /*16*/] };
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&Var10))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &Var10, "", "", "", iVar9);
					}
				}
				else if (bParam27)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					else
					{
						sVar4 = "FMMC_CDP_ADD2";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam34)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_CDM_T";
					}
					else
					{
						sVar4 = "FMMC_CDM_F1";
					}
					iVar9 = 60;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
				}
				else if (bParam13)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPF";
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M19";
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					iVar9 = 63;
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(2);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam9)
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_TIPTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPTF";
						}
					}
					else
					{
						iVar9 = 63;
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_ALTT";
						}
						else if (*iParam1 == -3)
						{
							sVar4 = "FMMC_KEY_ALTTS";
						}
						else
						{
							sVar4 = "FMMC_KEY_ALTTF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M36";
					}
					iVar11 = 0;
					while (iVar11 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116682[iVar11 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116682[iVar11 /*16*/]), "", 64);
						}
						iVar11++;
					}
					MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116682[0 /*16*/]), &(Global_4718592.f_116682[1 /*16*/]), &(Global_4718592.f_116682[2 /*16*/]), &(Global_4718592.f_116682[3 /*16*/]), &(Global_4718592.f_116682[4 /*16*/]), &(Global_4718592.f_116682[5 /*16*/]), &(Global_4718592.f_116682[6 /*16*/]), &(Global_4718592.f_116682[7 /*16*/]), iVar9);
				}
				else if (bParam6)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP4";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP4F";
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_SMS3";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/])))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 126);
					}
					else
					{
						iVar12 = 0;
						while (iVar12 <= 1)
						{
							if (MISC::IS_STRING_NULL(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/])))
							{
								StringCopy(&(Global_4718592.f_93381[iParam16 /*43*/].f_6[iVar12 /*16*/]), "", 64);
							}
							iVar12++;
						}
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, &(Global_4718592.f_93381[iParam16 /*43*/].f_6[0 /*16*/]), &(Global_4718592.f_93381[iParam16 /*43*/].f_6[1 /*16*/]), "", "", 126);
					}
				}
				else if (bParam8)
				{
					iVar9 = 61;
					if (bParam11)
					{
						if (__LIB_9__.func_514())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_SOD" /* GXT: Enter your Eyefind subject: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_SODE" /* GXT: Subject too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_SODF" /* GXT: Forbidden text. Try again: */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "CELL_EMAIL_SOD" /* GXT: Enter your Eyefind subject (MAX 60 characters): */;
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "CELL_EMAIL_SODE" /* GXT: Subject too long. Try again (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "CELL_EMAIL_SODF" /* GXT: Forbidden text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
						{
							sVar5 = sVar4;
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					else if (__LIB_9__.func_514())
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8S" /* GXT: Enter Message (MAX 20 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8FS" /* GXT: Invalid Message. Try again (MAX 20 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
						iVar9 = 21;
					}
					else
					{
						if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP8" /* GXT: Enter Message (MAX 60 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP8F" /* GXT: Forbidden Text. Try again (MAX 60 characters): */;
						}
						if (MISC::IS_XBOX360_VERSION())
						{
							sVar5 = sVar4;
							sVar4 = "FMMC_SMS4" /* GXT: Message */;
						}
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam12)
				{
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP9" /* GXT: Enter Outfit Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP9F" /* GXT: Invalid Outfit Name. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP9N" /* GXT: Outfit Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, "", "", "", "", 16);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(iVar8, sVar4, sVar5, sParam5, "", "", "", 16);
					}
				}
				else if (bParam14)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP12N" /* GXT: Custom Team Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam28)
				{
					iVar9 = 16;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIPTN";
					}
					else
					{
						sVar4 = "FMMC_KEY_TIPTNF";
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam15)
				{
					iVar9 = 61;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP12" /* GXT: Enter Custom Team Name (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP12F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam17)
				{
					if (__LIB_0__.func_53())
					{
						iVar9 = 21;
					}
					else
					{
						iVar9 = 20;
					}
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP14S" /* GXT: Enter Yacht Name (MAX 20 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP14ES" /* GXT: Subject too long. Try again (MAX 20 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP14OS" /* GXT: Empty Text. Try again (MAX 20 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP14FS" /* GXT: Forbidden Text. Try again (MAX 20 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP14N" /* GXT: Yacht Name */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (bParam29)
				{
					iVar9 = 15;
					if (*iParam1 == 0)
					{
						sVar4 = "FMMC_KEY_TIP16S" /* GXT: Enter Vehicle Name (MAX 15 characters): */;
					}
					else if (*iParam1 == -1)
					{
						sVar4 = "FMMC_KEY_TIP16ES" /* GXT: Subject too long. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == -2)
					{
						sVar4 = "FMMC_KEY_TIP16OS" /* GXT: Empty Text. Try again (MAX 15 characters): */;
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP16FS" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP16IS" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_XBOX360_VERSION())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_KEY_TIP16N";
					}
					MISC::NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(64);
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else if (iParam18 > 0)
				{
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						iVar9 = 16;
					}
					else
					{
						iVar9 = 15;
					}
					if (bParam20)
					{
						sVar4 = "FMMC_KEY_TIP15B" /* GXT: You must enter a name (MAX 15 characters): */;
					}
					else if (bParam21)
					{
						sVar4 = "FMMC_KEY_TIP15U" /* GXT: Name already in use. Try again (MAX 15 characters): */;
					}
					else if (bParam19)
					{
						sVar4 = "FMMC_KEY_TIP15N" /* GXT: Name Too Short. Try again (MAX 15 characters): */;
					}
					else if (bParam23)
					{
						sVar4 = "FMMC_KEY_TIP15I" /* GXT: Invalid Character. Try again (MAX 15 characters): */;
					}
					else if (*iParam1 == 0)
					{
						if (iParam18 == 2)
						{
							sVar4 = "FMMC_MCK_TIP15" /* GXT: Enter MC Name (MAX 15 characters): */;
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP15" /* GXT: Enter Organization Name (MAX 15 characters): */;
						}
					}
					else
					{
						sVar4 = "FMMC_KEY_TIP15F" /* GXT: Forbidden Text. Try again (MAX 15 characters): */;
					}
					if (MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD(0, sVar4, sVar5, sParam5, "", "", "", iVar9);
					}
				}
				else
				{
					if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
					{
						iVar9 = 501;
						if (bParam11)
						{
							if (__LIB_9__.func_514())
							{
								if (*iParam1 == 0)
								{
									sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
								}
								else if (*iParam1 == -1)
								{
									sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
								}
								else
								{
									sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
								}
							}
							else if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMAIL_BOD" /* GXT: Enter your Eyefind message (MAX 500 characters): */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMAIL_BODE" /* GXT: Message too long. Try again (MAX 500 characters): */;
							}
							else
							{
								sVar4 = "CELL_EMAIL_BODF" /* GXT: Forbidden message. Try again (MAX 500 characters): */;
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIP3";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIP3E";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIP3F";
						}
					}
					else
					{
						iVar9 = 251;
						if (__LIB_9__.func_514())
						{
							iVar9 = 150;
						}
						if (bParam11)
						{
							if (*iParam1 == 0)
							{
								sVar4 = "CELL_EMASH_BOD" /* GXT: Enter your Eyefind message: */;
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "CELL_EMASH_BODE" /* GXT: Message too long. Try again: */;
							}
							else
							{
								sVar4 = "CELL_EMASH_BODF" /* GXT: Forbidden message. Try again: */;
							}
						}
						else if (__LIB_9__.func_514())
						{
							if (*iParam1 == 0)
							{
								sVar4 = "FMMC_KEY_TIPSS";
							}
							else if (*iParam1 == -1)
							{
								sVar4 = "FMMC_KEY_TIPSSE";
							}
							else
							{
								sVar4 = "FMMC_KEY_TIPSSF";
							}
						}
						else if (*iParam1 == 0)
						{
							sVar4 = "FMMC_KEY_TIPS";
						}
						else if (*iParam1 == -1)
						{
							sVar4 = "FMMC_KEY_TIPSE";
						}
						else
						{
							sVar4 = "FMMC_KEY_TIPSF";
						}
					}
					if (MISC::IS_XBOX360_VERSION() || __LIB_0__.func_53())
					{
						sVar5 = sVar4;
						sVar4 = "FMMC_T0_M20";
						if (bParam11)
						{
							sVar4 = "CELL_EMAIL_DESC" /* GXT: Description */;
						}
					}
					iVar13 = 0;
					while (iVar13 <= 7)
					{
						if (MISC::IS_STRING_NULL(&(Global_4718592.f_116553[iVar13 /*16*/])))
						{
							StringCopy(&(Global_4718592.f_116553[iVar13 /*16*/]), "", 64);
						}
						iVar13++;
					}
					if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam33))
					{
						sVar4 = sParam33;
					}
					if (bParam11)
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, sParam5, sParam10, "", "", "", "", "", "", iVar9);
					}
					else
					{
						MISC::DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(iVar8, sVar4, sVar5, &(Global_4718592.f_116553[0 /*16*/]), &(Global_4718592.f_116553[1 /*16*/]), &(Global_4718592.f_116553[2 /*16*/]), &(Global_4718592.f_116553[3 /*16*/]), &(Global_4718592.f_116553[4 /*16*/]), &(Global_4718592.f_116553[5 /*16*/]), &(Global_4718592.f_116553[6 /*16*/]), &(Global_4718592.f_116553[7 /*16*/]), iVar9);
					}
				}
			}
			StringCopy(&Global_1922008, "", 64);
			*iParam1 = 0;
			*uParam2 = 1;
			break;
		case 1:
			*uParam0 = MISC::UPDATE_ONSCREEN_KEYBOARD();
			switch (*uParam0)
			{
				case 0:
					return 0;
				case 3:
					*uParam2 = 0;
					*uParam0 = 0;
					*iParam1 = 0;
					return 0;
				case 2:
					*iParam1 = 0;
					return 0;
				case 1:
					if ((bParam4 || bParam13) || bParam29)
					{
						if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
							if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
							{
								*iParam1 = 0;
								return 1;
							}
							iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
							iVar3 = 0;
							while (iVar3 <= (iVar1 - 1))
							{
								if (*uParam2 != 0)
								{
									if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
									{
										if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 0, 1)))
										{
											iVar2 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
											StringCopy(&Global_1922008, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, 1, iVar2), 64);
										}
									}
									else
									{
										*iParam1 = 0;
										return 1;
									}
								}
								iVar3++;
							}
						}
					}
					if (__LIB_0__.func_236())
					{
						*iParam1 = 0;
						return 1;
					}
					if (SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_PENDING(*iParam1))
						{
							HUD::BUSYSPINNER_OFF();
							iVar0 = SOCIALCLUB::SC_PROFANITY_GET_STRING_STATUS(*iParam1);
							switch (iVar0)
							{
								case 0:
									if (bParam9)
									{
										StringCopy(&Global_1922008, MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 64);
										iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&Global_1922008);
										iVar3 = 0;
										while (iVar3 <= (iVar1 - 1))
										{
											if (*uParam2 != 0)
											{
												if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
												{
													if (MISC::ARE_STRINGS_EQUAL(" ", HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&Global_1922008, iVar3, iVar3 + 1)))
													{
														*iParam1 = -3;
													}
												}
											}
											iVar3++;
										}
									}
									if (*iParam1 != -3)
									{
										*iParam1 = 0;
										return 1;
									}
									else
									{
										*uParam2 = 0;
										*uParam0 = 0;
										return 0;
									}
									break;
								case 1:
									*uParam2 = 0;
									*uParam0 = 0;
									return 0;
									break;
								case -1:
									*uParam2 = 0;
									*uParam0 = 3;
									*iParam1 = 0;
									__LIB_9__.func_513(1);
									return 0;
									break;
							}
						}
						else if (bParam11)
						{
							if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("appinternet")) == 0)
							{
								HUD::BUSYSPINNER_OFF();
								*iParam1 = 0;
								return 1;
							}
						}
						break;
					}
					if (bParam4)
					{
						if (bParam22)
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(&Global_1922008, iParam1);
						}
						else
						{
							SOCIALCLUB::SC_PROFANITY_CHECK_STRING(&Global_1922008, iParam1);
						}
					}
					else if (MISC::IS_STRING_NULL_OR_EMPTY(MISC::GET_ONSCREEN_KEYBOARD_RESULT()))
					{
						*iParam1 = -2;
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
					else if (bParam22)
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING_UGC(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					else
					{
						SOCIALCLUB::SC_PROFANITY_CHECK_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), iParam1);
					}
					if (__LIB_0__.func_53())
					{
						if ((!NETWORK::NETWORK_IS_SIGNED_ONLINE() || __LIB_7__.func_45() == 0) || __LIB_19__.func_799() == 1)
						{
							*iParam1 = 0;
							*uParam2 = 0;
							*uParam0 = 3;
							return 0;
						}
					}
					if (bParam17)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKYACHTNAME" /* GXT: Registering your yacht's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else if (bParam29)
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKVEHICLENAME" /* GXT: Registering your vehicle's name.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					else
					{
						HUD::BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("ERROR_CHECKPROFANITY" /* GXT: Checking your text for profanity.  Please wait... */);
						HUD::END_TEXT_COMMAND_BUSYSPINNER_ON(1);
					}
					if (!SOCIALCLUB::SC_PROFANITY_GET_CHECK_IS_VALID(*iParam1))
					{
						if (!MISC::IS_STRING_NULL_OR_EMPTY(&Global_1922008))
						{
							*iParam1 = -1;
						}
						else
						{
							*iParam1 = -2;
						}
						*uParam2 = 0;
						*uParam0 = 0;
						HUD::BUSYSPINNER_OFF();
						return 0;
					}
				default:
			}
			break;
	}
	return 0;
}

int func_423()//Position - 0xE9B61
{
	int iVar0;
	if (!__LIB_0__.func_155(0))
	{
		iVar0 = Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_96.f_28;
	}
	else
	{
		iVar0 = Global_4718592.f_606;
	}
	if (iVar0 < 0)
	{
		iVar0 = 0;
	}
	if (__LIB_1__.func_381(PLAYER::PLAYER_ID()) && iVar0 >= 4)
	{
		iVar0 = 3;
	}
	return iVar0;
}

int func_424(int iParam0, int iParam1)//Position - 0x4EE1
{
	var uVar0;
	int iVar1;
	if (iParam0 == -1)
	{
		return 0;
	}
	uVar0 = __LIB_22__.func_304(iParam0, iParam1);
	iVar1 = __LIB_0__.func_158(iParam0);
	if (iVar1 < 0 || iVar1 >= 32)
	{
		return 0;
	}
	return BitTest(uVar0, iVar1);
}

int func_425(var uParam0)//Position - 0x2E25A
{
	if (uParam0->f_9)
	{
		if (__LIB_7__.func_91(*uParam0, 10, 1))
		{
			return 1;
		}
		if (uParam0->f_1 == 1)
		{
			if (__LIB_7__.func_91(*uParam0, 19, 1))
			{
				return 1;
			}
		}
		if (!Global_100493.f_16)
		{
			return 1;
		}
		if (Global_78319)
		{
			if (Global_1574654.f_4)
			{
				return 1;
			}
		}
		else if (uParam0->f_9 && uParam0->f_11 != 0)
		{
			if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
			{
				if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 82.34222f, -1310.2776f, 25.770123f, 142.89174f, -1274.1537f, 46.512486f, 62f, false, true, 0))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_426(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x5366D
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_427(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, int iParam6)//Position - 0x53BB5
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

void func_428(int iParam0, int iParam1)//Position - 0x54EA3
{
	char cVar0[64];
	struct<13> Var1;
	int iVar2;
	StringCopy(&cVar0, __LIB_4__.func_577(iParam0, iParam1), 64);
	if (MISC::GET_HASH_KEY(&cVar0) == joaat("CREW_LOGO"))
	{
		if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && __LIB_0__.func_154(PLAYER::PLAYER_ID(), 0, 1)) && __LIB_6__.func_911()) && NETWORK::NETWORK_CLAN_SERVICE_IS_VALID())
		{
			Var1 = { __LIB_0__.func_604(PLAYER::PLAYER_ID()) };
			if (NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(&Var1) && NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&iVar2, 35, &Var1))
			{
				NETWORK::NETWORK_CLAN_RELEASE_EMBLEM(iVar2);
			}
		}
	}
	else if (MISC::GET_HASH_KEY(&cVar0) != 0)
	{
		GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(&cVar0);
	}
}

void func_429()//Position - 0x55AA1
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_12__.func_95(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_20__.func_763(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__.func_317(iVar0) && (!__LIB_0__.func_39(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__.func_317(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_430(int iParam0)//Position - 0x55DF3
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[bVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_6__.func_785(&Var3, __LIB_0__.func_360(iVar1, bVar2), __LIB_0__.func_359(bVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

int func_431(int iParam0)//Position - 0x565B2
{
	if (__LIB_11__.func_361(iParam0))
	{
		return Global_4538992.f_217 != 0;
	}
	return 0;
}

int func_432(var uParam0)//Position - 0x5FF38
{
	switch (uParam0->f_522)
	{
		case 78:
			return __LIB_11__.func_362();
			break;
		case 235:
		case 236:
		case 237:
		case 238:
		case 239:
			return 1;
			break;
	}
	return 0;
}

int func_433(int iParam0, int iParam1, int iParam2)//Position - 0x77749
{
	int iVar0;
	*iParam1 = 0;
	if (PED::IS_PED_INJURED(iParam0))
	{
		return 0;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (iParam2 == -99)
	{
		iParam2 = __LIB_6__.func_795(iParam0, 11);
	}
	if (__LIB_6__.func_808(iVar0, iParam2, -1))
	{
		if (iVar0 == joaat("MP_M_Freemode_01"))
		{
			if ((iParam2 >= 96 && iParam2 <= 107) || (iParam2 >= 236 && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(__LIB_0__.func_420(iVar0, iParam2, 11, 3), joaat("DRAW_6"), 0)))
			{
				*iParam1 = 1;
			}
		}
		else if (iVar0 == joaat("MP_F_Freemode_01"))
		{
			if (iParam2 >= 160 && iParam2 <= 175)
			{
				*iParam1 = 1;
			}
		}
		return 1;
	}
	return 0;
}

void func_434()//Position - 0x78EA4
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(PLAYER::PLAYER_PED_ID());
	if (__LIB_0__.func_317(bVar0))
	{
		Global_113386.f_2363.f_539.f_2336[bVar0] = __LIB_13__.func_95();
	}
}

int func_435(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xF9976
{
	int iVar0;
	iVar0 = MISC::GET_HASH_KEY(__LIB_1__.func_192(&uParam0));
	if (__LIB_6__.func_925())
	{
		return __LIB_11__.func_402(iVar0);
	}
	return __LIB_11__.func_401(iVar0);
}

void func_436(int iParam0)//Position - 0xFF3A1
{
	__LIB_1__.func_597(8527, iParam0, -1, 1, 0);
	Global_1970897[PLAYER::PLAYER_ID() /*68*/].f_18.f_16 = iParam0;
}

int func_437(int iParam0, bool bParam1)//Position - 0xFF46A
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 != -1)
	{
		if (iParam0 == PLAYER::PLAYER_ID())
		{
			return __LIB_20__.func_515(bParam1) != 0;
		}
		else
		{
			return __LIB_3__.func_689(iParam0) != 0;
		}
	}
	return 0;
}

int func_438(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, var uParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, var uParam23, var uParam24, var uParam25, var uParam26, var uParam27, var uParam28, var uParam29, var uParam30, var uParam31, var uParam32, var uParam33, var uParam34, var uParam35, var uParam36, var uParam37, var uParam38, var uParam39, var uParam40, var uParam41, var uParam42, var uParam43, var uParam44, var uParam45, var uParam46, var uParam47, var uParam48, var uParam49, var uParam50, var uParam51, var uParam52, var uParam53, var uParam54, var uParam55, var uParam56, var uParam57, var uParam58, var uParam59, var uParam60, var uParam61, var uParam62, var uParam63, var uParam64, var uParam65, int iParam66, int iParam67)//Position - 0x1010CB
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	iVar5 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0) || PED::IS_PED_INJURED(iParam0))
	{
		return 0;
	}
	iVar1 = 0;
	while (iVar1 <= 8)
	{
		iVar2 = iVar1;
		iVar4 = __LIB_6__.func_766(iParam0, uParam1.f_39[iVar1], uParam1.f_49[iVar1], iVar2);
		if (iParam66 == 1)
		{
			if (__LIB_6__.func_779(iVar5, 14, iVar4, -1))
			{
				return 1;
			}
		}
		if (iParam67 == 1)
		{
			if (__LIB_6__.func_827(iVar5, 14, iVar4, -1))
			{
				return 1;
			}
		}
		iVar1++;
	}
	iVar0 = 0;
	while (iVar0 <= 14)
	{
		iVar3 = iVar0;
		if ((iVar3 != 12 && iVar3 != 13) && iVar3 != 14)
		{
			iVar4 = __LIB_0__.func_350(iParam0, uParam1.f_13[iVar0], uParam1[iVar0], iVar3);
			if (iParam66 == 1)
			{
				if (__LIB_6__.func_779(iVar5, iVar3, iVar4, -1))
				{
					return 1;
				}
			}
			if (iParam67 == 1)
			{
				if (__LIB_6__.func_827(iVar5, iVar3, iVar4, -1))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_439(var uParam0)//Position - 0x10131D
{
	int iVar0;
	if (uParam0->f_1 || *uParam0 == 21)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_616))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_616));
		if (*uParam0 == 57)
		{
			GRAPHICS::CLEAR_TIMECYCLE_MODIFIER();
		}
	}
	iVar0 = __LIB_11__.func_415(uParam0);
	uParam0->f_616 = OBJECT::CREATE_OBJECT_NO_OFFSET(iVar0, uParam0->f_184.f_31 + Vector(-1f, 0f, 0f), false, false, false);
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_616))
	{
		ENTITY::SET_ENTITY_HEADING(uParam0->f_616, uParam0->f_184.f_34);
		ENTITY::SET_ENTITY_COLLISION(uParam0->f_616, false, false);
		ENTITY::FREEZE_ENTITY_POSITION(uParam0->f_616, true);
		STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
		if (*uParam0 == 57)
		{
			GRAPHICS::SET_TIMECYCLE_MODIFIER("DLC_MpSecurity_Stu_Wardrobe");
		}
	}
}

int func_440(int iParam0)//Position - 0x10939D
{
	int iVar0;
	if (((!__LIB_11__.func_434(iParam0) && !__LIB_11__.func_426(iParam0)) && iParam0 != 3) && iParam0 != 4)
	{
		return iParam0;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return iParam0;
	}
	iVar0 = -1;
	if (__LIB_2__.func_102(PLAYER::PLAYER_ID()))
	{
		switch (iParam0)
		{
			case 259:
				return 1;
				break;
			case 262:
				return 2;
				break;
			case 231:
				return 3;
				break;
			case 230:
				return 4;
				break;
			case 260:
				return 5;
				break;
			case 201:
				return 6;
				break;
			}
	}
	switch (iParam0)
	{
		case 256:
			return 0;
			break;
		case 235:
			return 1;
			break;
		case 7:
			return 2;
			break;
		case 195:
			return 3;
			break;
		case 8:
			return 4;
			break;
		case 9:
			return 5;
			break;
		case 203:
			return 6;
			break;
		case 204:
			return 7;
			break;
		case 201:
			return 8;
			break;
		case 193:
			return 9;
			break;
		case 182:
			return 10;
			break;
		case 222:
			return 11;
			break;
		case 167:
			return 12;
			break;
		case 230:
			return 13;
			break;
		case 249:
			return 14;
			break;
		case 206:
			return 15;
			break;
		case 250:
			return 16;
			break;
		case 260:
			return 17;
			break;
		case 10:
			return 18;
			break;
		case 168:
			return 19;
			break;
		case 210:
			return 20;
			break;
		case 175:
			return 21;
			break;
		case 189:
			return 22;
			break;
		case 153:
			return 23;
			break;
		case 122:
			return 24;
			break;
		case 11:
			return 25;
			break;
		case 248:
			return 27;
			break;
		case 259:
			return 28;
			break;
		case 220:
			return 29;
			break;
		case 213:
			return 30;
			break;
		case 205:
			return 31;
			break;
		case 184:
			return 32;
			break;
		case 173:
			return 33;
			break;
		case 171:
			return 34;
			break;
		case 169:
			return 35;
			break;
		case 12:
			return 36;
			break;
		case 232:
			return 37;
			break;
		case 229:
			return 38;
			break;
		case 215:
			return 39;
			break;
		case 241:
			return 40;
			break;
		case 183:
			return 41;
			break;
		case 194:
			return 42;
			break;
		case 13:
			return 43;
			break;
		case 231:
			return 44;
			break;
		case 252:
			return 45;
			break;
		case 262:
			return 46;
			break;
		case 202:
			return 47;
			break;
		case 170:
			return 48;
			break;
		case 181:
			return 49;
			break;
		case 172:
			return 50;
			break;
		case 251:
			return 51;
			break;
		case 14:
			return 52;
			break;
		case 233:
			return 53;
			break;
		case 15:
			return 54;
			break;
		case 16:
			return 55;
			break;
		case 192:
			return 56;
			break;
		case 17:
			return 57;
			break;
		case 19:
			return 58;
			break;
		case 20:
			return 59;
			break;
		case 21:
			return 60;
			break;
		case 22:
			return 61;
			break;
		case 187:
			return 62;
			break;
		case 23:
			return 63;
			break;
		case 27:
			return 64;
			break;
		case 25:
			return 65;
			break;
		case 162:
			return 66;
			break;
		case 26:
			return 67;
			break;
		case 101:
			return 68;
			break;
		case 103:
			return 69;
			break;
		case 272:
			return 70;
			break;
		case 129:
			return 71;
			break;
		case 136:
			return 72;
			break;
		case 158:
			return 73;
			break;
		case 138:
			return 74;
			break;
		case 3:
			return 75;
			break;
		case 4:
			return 76;
			break;
	}
	switch (iParam0)
	{
		case 257:
			return 0;
			break;
		case 61:
			return 1;
			break;
		case 62:
			return 2;
			break;
		case 63:
			return 3;
			break;
		case 64:
			return 4;
			break;
		case 65:
			return 5;
			break;
		case 66:
			return 6;
			break;
		case 67:
			return 7;
			break;
		case 68:
			return 8;
			break;
		case 69:
			return 9;
			break;
		case 70:
			return 10;
			break;
		case 71:
			return 11;
			break;
		case 72:
			return 12;
			break;
		case 73:
			return 13;
			break;
		case 74:
			return 14;
			break;
		case 75:
			return 15;
			break;
		case 76:
			return 16;
			break;
		case 77:
			return 17;
			break;
		case 123:
		case 126:
			return 19;
			break;
		case 128:
			return 20;
			break;
		case 156:
			return 21;
			break;
		case 190:
			return 22;
			break;
		case 207:
			return 23;
			break;
		case 217:
			return 24;
			break;
		case 218:
			return 25;
			break;
		case 224:
			return 26;
			break;
		case 239:
			return 27;
			break;
		case 255:
			return 28;
			break;
		case 240:
			return 29;
			break;
		case 266:
			return 30;
			break;
		case 267:
			return 31;
			break;
	}
	if (iVar0 == -1)
	{
	}
	return iVar0;
}

bool func_441(char* sParam0)//Position - 0x124166
{
	if (!Global_4538835)
	{
		return 1;
	}
	return __LIB_11__.func_442(sParam0) == Global_4538836;
}

bool func_442(char* sParam0)//Position - 0x12A46B
{
	if (!Global_4538835)
	{
		return 1;
	}
	return __LIB_11__.func_448(sParam0) == Global_4538836;
}

bool func_443(char* sParam0)//Position - 0x12AB87
{
	if (!Global_4538835)
	{
		return 1;
	}
	return __LIB_11__.func_450(sParam0) == Global_4538836;
}

void func_444(var uParam0, var uParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x12F57C
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	iVar0 = 0;
	while (iVar0 < Global_4538837)
	{
		Global_4538837[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_4538840)
	{
		Global_4538840[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_4538843)
	{
		Global_4538843[iVar0] = 0;
		iVar0++;
	}
	iVar1 = 0;
	if (bParam4)
	{
		iVar1 = 1;
	}
	iVar2 = ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID());
	if (iVar2 == joaat("MP_M_Freemode_01"))
	{
		if (Global_4538836 == 2)
		{
		}
		else if (Global_4538836 == 1)
		{
		}
		else if (Global_4538836 == 0)
		{
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(joaat("MP_M_Freemode_01"));
		Stack.Push(iParam3);
		Stack.Push(89);
		Stack.Push(2);
		Stack.Push(14);
		Stack.Push(0);
		Stack.Push(10);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		iVar4 = 14;
		iVar3 = __LIB_6__.func_758(joaat("MP_M_Freemode_01"), joaat("DLC_MP_LUXE_M_PEARS_0_0"), iVar4, iParam2);
		iVar5 = iVar3;
		iVar6 = __LIB_6__.func_758(joaat("MP_M_Freemode_01"), joaat("DLC_MP_LUXE2_M_PEARS_0_0"), iVar4, iParam2);
		iVar7 = 0;
		while (iVar7 < 11)
		{
			if (iVar7 < 6)
			{
				iVar3 = iVar5;
			}
			else
			{
				iVar3 = iVar6;
			}
			iVar8 = 0;
			while (iVar8 < 8)
			{
				if (__LIB_11__.func_452(iVar2, iVar7, iVar8, 2) != -1)
				{
					if (!Global_4538835 || Global_4538836 == 2)
					{
						Stack.Push(uParam1);
						Stack.Push(iParam2);
						Stack.Push(iVar2);
						Stack.Push(iParam3);
						Stack.Push(89);
						Stack.Push((iVar3 + __LIB_11__.func_452(iVar2, iVar7, iVar8, 1)));
						Stack.Push(iVar4);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(iVar1);
						Stack.Push(0);
						Stack.Push(-1);
						Call_Loc(*uParam0);
					}
					if (!Global_4538835 || Global_4538836 == 1)
					{
						Stack.Push(uParam1);
						Stack.Push(iParam2);
						Stack.Push(iVar2);
						Stack.Push(iParam3);
						Stack.Push(89);
						Stack.Push((iVar3 + __LIB_11__.func_452(iVar2, iVar7, iVar8, 0)));
						Stack.Push(iVar4);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(iVar1);
						Stack.Push(0);
						Stack.Push(-1);
						Call_Loc(*uParam0);
					}
					if (!Global_4538835 || Global_4538836 == 0)
					{
						Stack.Push(uParam1);
						Stack.Push(iParam2);
						Stack.Push(iVar2);
						Stack.Push(iParam3);
						Stack.Push(89);
						Stack.Push((iVar3 + __LIB_11__.func_452(iVar2, iVar7, iVar8, 2)));
						Stack.Push(iVar4);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(0);
						Stack.Push(iVar1);
						Stack.Push(0);
						Stack.Push(-1);
						Call_Loc(*uParam0);
					}
				}
				iVar8++;
			}
			iVar7++;
		}
		if (!Global_4538835 || Global_4538836 == 0)
		{
			iVar3 = __LIB_6__.func_758(joaat("MP_M_Freemode_01"), joaat("DLC_MP_VWD_M_PEARS_0_0"), iVar4, iParam2);
			iVar9 = 0;
			while (iVar9 < 14)
			{
				Stack.Push(uParam1);
				Stack.Push(iParam2);
				Stack.Push(iVar2);
				Stack.Push(iParam3);
				Stack.Push(89);
				Stack.Push((iVar3 + iVar9));
				Stack.Push(iVar4);
				Stack.Push(0);
				Stack.Push(0);
				Stack.Push(0);
				Stack.Push(iVar1);
				Stack.Push(0);
				Stack.Push(-1);
				Call_Loc(*uParam0);
				iVar9++;
			}
		}
	}
	else if (iVar2 == joaat("MP_F_Freemode_01"))
	{
	}
}

int func_445(int iParam0, int iParam1, int iParam2)//Position - 0x14D22A
{
	if (iParam2 == 234)
	{
		return 0;
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_434(iParam2);
					break;
				case 2:
					return __LIB_11__.func_426(iParam2);
					break;
				case 3:
					return __LIB_11__.func_434(iParam2);
					break;
				case 4:
					return __LIB_11__.func_434(iParam2);
					break;
				case 5:
					return __LIB_11__.func_434(iParam2);
					break;
				case 6:
					return __LIB_11__.func_459(iParam2);
					break;
				case 7:
					return __LIB_11__.func_434(iParam2);
					break;
				case 8:
					return __LIB_11__.func_422(iParam2);
					break;
				case 9:
					return __LIB_11__.func_434(iParam2);
					break;
				case 10:
					return __LIB_11__.func_434(iParam2);
					break;
				case 11:
					return __LIB_11__.func_434(iParam2);
					break;
				case 12:
					return __LIB_11__.func_434(iParam2);
					break;
				case 13:
					return __LIB_11__.func_434(iParam2);
					break;
				case 14:
					break;
				case 15:
					break;
				case 16:
					return __LIB_11__.func_421(iParam2);
					break;
				case 17:
					return __LIB_11__.func_421(iParam2);
					break;
				case 18:
					return __LIB_11__.func_422(iParam2);
					break;
				case 19:
					return __LIB_11__.func_458(iParam2);
					break;
				case 20:
					return __LIB_11__.func_356(iParam2);
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_459(iParam2);
					break;
				case 1:
					return __LIB_11__.func_434(iParam2);
					break;
				case 2:
					return __LIB_11__.func_458(iParam2);
					break;
				case 3:
					return __LIB_11__.func_434(iParam2);
					break;
				case 4:
					return __LIB_11__.func_426(iParam2);
					break;
				case 5:
					return __LIB_11__.func_422(iParam2);
					break;
				case 6:
					return __LIB_11__.func_459(iParam2);
					break;
				case 7:
					return __LIB_11__.func_434(iParam2);
					break;
				case 8:
					return __LIB_11__.func_434(iParam2);
					break;
				case 9:
					return __LIB_11__.func_434(iParam2);
					break;
				case 10:
					return __LIB_11__.func_434(iParam2);
					break;
				case 11:
					return __LIB_11__.func_434(iParam2);
					break;
				case 12:
					return __LIB_11__.func_434(iParam2);
					break;
				case 13:
					return __LIB_11__.func_434(iParam2);
					break;
				case 14:
					return __LIB_11__.func_459(iParam2);
					break;
				case 15:
					return __LIB_11__.func_421(iParam2);
					break;
				case 16:
					return __LIB_11__.func_434(iParam2);
					break;
				case 17:
					return __LIB_11__.func_356(iParam2);
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_459(iParam2);
					break;
				case 1:
					return __LIB_11__.func_422(iParam2);
					break;
				case 2:
					return __LIB_11__.func_434(iParam2);
					break;
				case 3:
					return __LIB_11__.func_459(iParam2);
					break;
				case 4:
					return __LIB_11__.func_426(iParam2);
					break;
				case 5:
					return __LIB_11__.func_434(iParam2);
					break;
				case 6:
					return __LIB_11__.func_459(iParam2);
					break;
				case 7:
					return __LIB_11__.func_434(iParam2);
					break;
				case 8:
					return __LIB_11__.func_458(iParam2);
					break;
				case 9:
					return __LIB_11__.func_421(iParam2);
					break;
				case 10:
					return __LIB_11__.func_356(iParam2);
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_421(iParam2);
					break;
				case 2:
					return __LIB_11__.func_422(iParam2);
					break;
				case 3:
					return __LIB_11__.func_457(iParam2);
					break;
				case 4:
					return __LIB_11__.func_356(iParam2);
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_421(iParam2);
					break;
				case 2:
					return __LIB_11__.func_422(iParam2);
					break;
				case 3:
					return __LIB_11__.func_457(iParam2);
					break;
				case 4:
					return __LIB_11__.func_356(iParam2);
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_456(iParam2);
					break;
				case 1:
					return __LIB_11__.func_426(iParam2);
					break;
				case 2:
					return __LIB_11__.func_434(iParam2);
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_456(iParam2);
					break;
				case 2:
					return ((__LIB_11__.func_458(iParam2) || __LIB_11__.func_421(iParam2)) || __LIB_11__.func_426(iParam2));
					break;
				case 3:
					return (__LIB_11__.func_459(iParam2) || __LIB_11__.func_422(iParam2));
					break;
				case 4:
					return ((__LIB_11__.func_458(iParam2) || __LIB_11__.func_421(iParam2)) || __LIB_11__.func_426(iParam2));
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_426(iParam2);
					break;
				case 2:
					return __LIB_11__.func_422(iParam2);
					break;
				case 3:
					if (iParam2 == 261)
					{
						return 1;
					}
					break;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_457(iParam2);
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 0:
					return __LIB_11__.func_434(iParam2);
					break;
				case 1:
					return __LIB_11__.func_459(iParam2);
					break;
				case 2:
					return __LIB_11__.func_426(iParam2);
					break;
				case 3:
					return __LIB_11__.func_426(iParam2);
					break;
			}
			break;
	}
	return 0;
}

void func_446()//Position - 0x14DC1B
{
	if (!Global_1660993)
	{
		__LIB_20__.func_517(1);
		Global_1660992 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), Global_262145.f_2420 /* Tunable: PLAYER_HEADSHOP_UPLOAD_TUNABLE */);
	}
}

void func_447()//Position - 0x152A8D
{
	__LIB_11__.func_469();
}

void func_448(int iParam0)//Position - 0x1533FB
{
	if (Global_4535613)
	{
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (iParam0 || MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), Global_4535614)) > 40000)
			{
				if (!Global_100493.f_1458 && !STATS::STAT_SAVE_PENDING_OR_REQUESTED())
				{
					if (__LIB_4__.func_571() && MISC::IS_PC_VERSION())
					{
					}
					else
					{
						if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
						{
							STATS::STAT_SET_OPEN_SAVETYPE_IN_JOB(10);
						}
						__LIB_6__.func_881(-264716935, 10, 0);
					}
					Global_4535614 = NETWORK::GET_NETWORK_TIME();
					Global_4535613 = 0;
				}
			}
		}
		else
		{
			__LIB_0__.func_533();
			Global_4535613 = 0;
		}
	}
}

int func_449(var uParam0, int iParam1, bool bParam2)//Position - 0x158BF0
{
	if (iParam1 != -1)
	{
		if (__LIB_20__.func_556(iParam1))
		{
			return 0;
		}
		if (!bParam2 && !__LIB_20__.func_555(iParam1))
		{
			return 0;
		}
	}
	if (__LIB_0__.func_75() || __LIB_0__.func_436())
	{
		return 0;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && HUD::IS_MESSAGE_BEING_DISPLAYED())
	{
		return 0;
	}
	if (*uParam0 == -1)
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_6__.func_768(PLAYER::PLAYER_ID(), 0))
		{
			return 0;
		}
		if ((Global_31962 || Global_1836610) || Global_1836746)
		{
			return 0;
		}
	}
	return 1;
}

void func_450(var uParam0)//Position - 0x15AC2B
{
	if (*uParam0 == 51)
	{
		uParam0->f_699 = __LIB_11__.func_484();
		if (!ENTITY::DOES_ENTITY_EXIST(uParam0->f_698))
		{
			if (STREAMING::IS_MODEL_VALID(uParam0->f_699))
			{
				if (__LIB_0__.func_584(uParam0->f_699))
				{
					uParam0->f_698 = OBJECT::CREATE_OBJECT_NO_OFFSET(uParam0->f_699, 1098.708f, 196.1115f, -48.3602f, false, false, false);
					ENTITY::SET_ENTITY_HEADING(uParam0->f_698, 135f);
					ENTITY::FREEZE_ENTITY_POSITION(uParam0->f_698, true);
				}
			}
		}
	}
}

int func_451(int iParam0, int iParam1, var uParam2)//Position - 0x28FEB
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_20__.func_260(iParam0);
	iVar1 = __LIB_20__.func_260(iParam1);
	if (iVar0 != 7 && iVar1 != 7)
	{
		*uParam2 = __LIB_9__.func_604(iVar0, iVar1);
		if (*uParam2 != 10)
		{
			return 1;
		}
	}
	*uParam2 = 10;
	return 0;
}

int func_452(var uParam0, bool bParam1, bool bParam2)//Position - 0x620A
{
	if (!__LIB_0__.func_516(&(uParam0->f_2)))
	{
		__LIB_6__.func_892(&(uParam0->f_2));
	}
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(14);
	if (!bParam2)
	{
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*uParam0, 255, 255, 255, 255, 0);
	}
	else if (bParam2)
	{
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*uParam0, 255, 255, 255, 255, 0);
	}
	if (bParam1)
	{
		if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
		{
			return 0;
		}
	}
	if (uParam0->f_1 == -1)
	{
		return 1;
	}
	if (__LIB_5__.func_736(&(uParam0->f_2)) * 1000f) > SYSTEM::TO_FLOAT(uParam0->f_1)
	{
		__LIB_1__.func_37(&(uParam0->f_2));
		return 0;
	}
	return 1;
}

void func_453(int iParam0, bool bParam1, int iParam2)//Position - 0x6BC44
{
	int iVar0;
	int iVar1;
	if (__LIB_2__.func_169(iParam0) == 13122)
	{
		return;
	}
	iVar0 = __LIB_18__.func_260(iParam0, -1);
	iVar1 = iParam0;
	if (iVar1 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&iVar0, __LIB_0__.func_158(iVar1));
		}
		else
		{
			MISC::CLEAR_BIT(&iVar0, __LIB_0__.func_158(iVar1));
		}
		__LIB_1__.func_597(__LIB_2__.func_169(iParam0), iVar0, iParam2, 1, 0);
	}
}

int func_454(var uParam0, bool bParam1, bool bParam2)//Position - 0x205AB
{
	if (!__LIB_0__.func_736(&(uParam0->f_2)))
	{
		__LIB_6__.func_892(&(uParam0->f_2));
	}
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(14);
	if (!bParam2)
	{
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*uParam0, 255, 255, 255, 255, 0);
	}
	else if (bParam2)
	{
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*uParam0, 255, 255, 255, 255, 0);
	}
	if (bParam1)
	{
		if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
		{
			return 0;
		}
	}
	if (uParam0->f_1 == -1)
	{
		return 1;
	}
	if (__LIB_7__.func_78(&(uParam0->f_2)) * 1000f) > SYSTEM::TO_FLOAT(uParam0->f_1)
	{
		__LIB_0__.func_735(&(uParam0->f_2));
		return 0;
	}
	return 1;
}

void func_455(int* iParam0)//Position - 0x20A1D
{
	if (!__LIB_0__.func_736(iParam0))
	{
		__LIB_18__.func_276(iParam0);
	}
	else
	{
		__LIB_6__.func_892(iParam0);
	}
}

int func_456(int iParam0)//Position - 0x2115E
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar2 = (__LIB_0__.func_505() - 1);
		iVar0 = 3;
		while (iVar0 <= iVar2)
		{
			if (__LIB_2__.func_108(iVar0) == iVar1)
			{
				return iVar0;
			}
			iVar0++;
		}
	}
	return 145;
}

void func_457(char* sParam0, char* sParam1, float fParam2, float fParam3, float fParam4, float fParam5, float fParam6, struct<4> Param7)//Position - 0x63463
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return;
	}
	iVar0 = SYSTEM::ROUND((fParam3 * IntToFloat(iLocal_133)));
	fParam3 = (SYSTEM::TO_FLOAT(iVar0) * (1f / IntToFloat(iLocal_133)));
	iVar0 = SYSTEM::ROUND(((fParam5 * IntToFloat(iLocal_133)) / 4f)) * 4;
	fParam5 = (SYSTEM::TO_FLOAT(iVar0) * (1f / IntToFloat(iLocal_133)));
	GRAPHICS::DRAW_SPRITE_ARX(sParam0, sParam1, __LIB_11__.func_635(fParam2), fParam3, (fParam4 * fLocal_131), fParam5, fParam6, Param7.f_0, Param7.f_1, Param7.f_2, Param7.f_3, 0, 1);
}

void func_458(int iParam0, var uParam1)//Position - 0x64714
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		(*uParam1)[iVar0] = __LIB_17__.func_456(iParam0, iVar0, 6);
		iVar0++;
	}
}

void func_459()//Position - 0x6B906
{
	fLocal_130 = __LIB_11__.func_642();
	fLocal_131 = __LIB_11__.func_641();
}

void func_460(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16)//Position - 0x280B
{
	__LIB_11__.func_169(iParam0);
	(*uParam1)[0] = uParam3;
	(*uParam2)[0] = uParam4;
	(*uParam1)[1] = uParam5;
	(*uParam2)[1] = uParam6;
	(*uParam1)[2] = iParam7;
	(*uParam2)[2] = iParam8;
	(*uParam1)[3] = iParam9;
	(*uParam2)[3] = iParam10;
	(*uParam1)[4] = iParam11;
	(*uParam2)[4] = iParam12;
	(*uParam1)[5] = iParam13;
	(*uParam2)[5] = iParam14;
	(*uParam1)[6] = iParam15;
	(*uParam2)[6] = iParam16;
}

int func_461(var uParam0)//Position - 0x28391
{
	float fVar0;
	struct<3> Var1;
	float fVar2;
	struct<3> Var3;
	int iVar4;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID()))
		{
			if (!__LIB_20__.func_599(1))
			{
				Var1 = { PED::GET_PED_BONE_COORDS(PLAYER::PLAYER_PED_ID(), 31086, 0f, 0f, 0f) };
				Var1.f_2 = (Var1.f_2 + 0.75f);
				if (WATER::TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(Var1, 208, &fVar0) == 1)
				{
					fVar2 = -0.32f;
					if (__LIB_1__.func_558() == joaat("A_C_Hen"))
					{
						fVar2 = -0.24f;
					}
					if (((Var1.f_2 - fVar0) - 0.75f) < fVar2)
					{
						return 1;
					}
				}
			}
			Var3 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
			if (Var3.f_2 <= -150f)
			{
				if (__LIB_1__.func_558() == joaat("IG_Orleans"))
				{
					iVar4 = ENTITY::GET_ENTITY_HEALTH(PLAYER::PLAYER_PED_ID());
					if (iVar4 < 500)
					{
						return 1;
					}
					else if (MISC::GET_GAME_TIMER() > *uParam0 + 2000)
					{
						ENTITY::SET_ENTITY_HEALTH(PLAYER::PLAYER_PED_ID(), (iVar4 - 500), 0);
						*uParam0 = MISC::GET_GAME_TIMER();
					}
				}
			}
		}
		if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), -1031.02f, -399.0387f, 37.4325f) < 40f)
		{
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1027.634f, -397.8321f, 38.1158f, -1026.0916f, -397.068f, 37.5389f, 1.5f, false, true, 0))
			{
				return 1;
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1033.1865f, -400.7195f, 38.1248f, -1034.7971f, -401.579f, 37.6024f, 1.5f, false, true, 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_462(int iParam0, int iParam1, bool bParam2)//Position - 0xA1CE4
{
	__LIB_11__.func_675(iParam1);
	if (!__LIB_11__.func_650(iParam0))
	{
		return;
	}
	if (bParam2)
	{
		if (!__LIB_0__.func_39(14))
		{
			HUD::THEFEED_HIDE_THIS_FRAME();
		}
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(2);
	}
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 58, true);
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 102, true);
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 195, true);
	}
	if ((!__LIB_11__.func_644(iParam0) || iParam0 == joaat("A_C_Hen")) && iParam0 != joaat("IG_Orleans"))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 22 /*INPUT_JUMP*/, true);
	}
	if (!__LIB_0__.func_39(14))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/, true);
	}
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 244 /*INPUT_INTERACTION_MENU*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 27 /*INPUT_PHONE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 28 /*INPUT_SPECIAL_ABILITY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 29 /*INPUT_SPECIAL_ABILITY_SECONDARY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 171 /*INPUT_SPECIAL_ABILITY_PC*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 49 /*INPUT_ARREST*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 36 /*INPUT_DUCK*/, true);
	if (iParam0 != joaat("IG_Orleans"))
	{
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 23 /*INPUT_ENTER*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 45 /*INPUT_RELOAD*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 50 /*INPUT_ACCURATE_AIM*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 44 /*INPUT_COVER*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 55 /*INPUT_DIVE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 58 /*INPUT_THROW_GRENADE*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 262 /*INPUT_NEXT_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 261 /*INPUT_PREV_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 7 /*INPUT_CINEMATIC_SLOWMO*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 48 /*INPUT_HUD_SPECIAL*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 56 /*INPUT_DROP_WEAPON*/, true);
		PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 57 /*INPUT_DROP_AMMO*/, true);
	}
	else
	{
		CAM::DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE();
		PLAYER::SET_PLAYER_CAN_USE_COVER(PLAYER::PLAYER_ID(), false);
	}
	if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() == 4 || CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() == 0)
	{
		CAM::SET_FOLLOW_PED_CAM_VIEW_MODE(1);
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PLAYER::RESET_PLAYER_STAMINA(PLAYER::PLAYER_ID());
	}
	Global_100480 = 1;
}

void func_463(var uParam0, var uParam1, var uParam2, bool bParam3, bool bParam4)//Position - 0xBA050
{
	char* sVar0;
	sVar0 = uParam2;
	if (!__LIB_0__.func_786(sVar0))
	{
		if (__LIB_6__.func_965())
		{
			__LIB_0__.func_821(uParam1, 0);
			HUD::SET_TEXT_RIGHT_JUSTIFY(bParam4);
			HUD::SET_TEXT_CENTRE(bParam3);
			__LIB_9__.func_595(__LIB_0__.func_820(*uParam0), __LIB_0__.func_819(uParam0->f_1), sVar0, 0);
		}
	}
}

int func_464(int iParam0, int iParam1, bool bParam2)//Position - 0xD963F
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 4;
	if (iParam1 == 0)
	{
		iVar0 = 0;
	}
	else if (iParam1 == 2)
	{
		iVar0 = 2;
	}
	else if (iParam1 == 1)
	{
		iVar0 = 1;
	}
	else if (iParam1 == 145)
	{
		iVar0 = 3;
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[iVar0]))
	{
		iVar1 = -1;
		iVar2 = 0;
		while (iVar2 < Global_100366)
		{
			if (iVar1 < 0)
			{
				if (!ENTITY::DOES_ENTITY_EXIST(Global_100366[iVar2]))
				{
					iVar1 = iVar2;
				}
			}
			iVar2++;
		}
		if (iVar1 < 0 || iVar1 > Global_100366)
		{
			iVar1 = 0;
		}
		Global_100366[iVar1] = Global_97919[iVar0];
		if (bParam2)
		{
			if (!PED::IS_PED_INJURED(Global_100366[iVar1]))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iParam0))
				{
					if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
					{
						TASK::CLEAR_PED_TASKS(Global_100366[iVar1]);
						TASK::TASK_SMART_FLEE_COORD(Global_100366[iVar1], ENTITY::GET_ENTITY_COORDS(iParam0, true), 1000f, -1, true, false);
					}
				}
			}
		}
	}
	Global_97919[iVar0] = iParam0;
	Global_113386.f_2363.f_539.f_2296[iParam1] = __LIB_13__.func_95();
	Global_113386.f_2363.f_539.f_2300[iParam1 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Global_113386.f_2363.f_539.f_2310[iParam1] = ENTITY::GET_ENTITY_HEADING(iParam0);
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_97919.f_47), iVar0);
	}
	return 1;
}

bool func_465()//Position - 0x2D40B
{
	return __LIB_18__.func_189(&(Global_103950.f_2890));
}

void func_466(int iParam0, bool bParam1)//Position - 0x38FA4
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_19__.func_976(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

void func_467(int iParam0, var uParam1)//Position - 0x94A74
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_20__.func_728())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_20__.func_728())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_20__.func_728() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

void func_468(bool bParam0, int iParam1)//Position - 0x96665
{
	GRAPHICS::SET_TV_CHANNEL(-1);
	if (bParam0)
	{
		__LIB_8__.func_825();
	}
	if (iParam1 != -1)
	{
		Global_32020[iParam1 /*11*/].f_4 = 1;
	}
	StringCopy(&Global_32098, "NULL", 24);
}

void func_469(var uParam0, int iParam1, bool bParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x9C57F
{
	int iVar0;
	iVar0 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == 3)
		{
			iVar0 = 1;
		}
	}
	else if (__LIB_0__.func_430() == __LIB_0__.func_388(iParam1))
	{
		iVar0 = 1;
	}
	switch (iParam1)
	{
		case 0:
			*uParam4 = 3;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_609(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 1:
			*uParam4 = 0;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_609(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 2:
			*uParam4 = 1;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_609(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 3:
			*uParam4 = 2;
			*uParam6 = 0;
			if ((((((!uParam0->f_23 || Global_3) || (uParam0->f_23 && ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)))) || (uParam0->f_23 && __LIB_0__.func_2(0))) || (uParam0->f_23 && Global_43018)) || !__LIB_9__.func_986()) || !__LIB_20__.func_449(0))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if (((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
	}
	if (iParam1 != 3)
	{
		if (iVar0 || uParam0->f_34[iParam1] == 2)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_34[iParam1] == 1 || uParam0->f_18[iParam1]) || ((!uParam0->f_23 && PED::IS_PED_INJURED((*uParam0)[iParam1])) && *uParam3 == 1)) || (uParam0->f_23 && BitTest(Global_97919.f_47, iParam1)))
		{
			if (*uParam3 == 1)
			{
				*uParam3 = 2;
			}
		}
		else if (uParam0->f_24[iParam1] != 0)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_23 && !BitTest(Global_113386.f_9085.f_2[27 /*3*/], 1)) && !Global_3) && !__LIB_0__.func_2(0))
		{
			if ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))
			{
			}
			else
			{
				*uParam3 = 1;
			}
		}
	}
	else
	{
		*uParam3 = 3;
	}
	if ((iVar0 && uParam0->f_34[iParam1] == 0) || uParam0->f_34[iParam1] == 3)
	{
		if (!__LIB_0__.func_39(14))
		{
			*uParam6 = 1;
		}
	}
	if (bParam2)
	{
		__LIB_11__.func_107(uParam0, iParam1, uParam5);
	}
}

void func_470(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0xA19EF
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, __LIB_20__.func_728(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

int func_471()//Position - 0x11B2F
{
	char* sVar0;
	sVar0 = __LIB_11__.func_707(0);
	STREAMING::REQUEST_CLIP_SET(sVar0);
	if (!STREAMING::HAS_CLIP_SET_LOADED(sVar0))
	{
		return 0;
	}
	return 1;
}

int func_472(int iParam0, int iParam1)//Position - 0x1C68B
{
	var uVar0;
	int iVar1;
	iVar1 = __LIB_12__.func_134(iParam0, iParam1);
	STATS::STAT_GET_INT(iVar1, &uVar0, -1);
	return uVar0;
}

void func_473(var uParam0)//Position - 0x9290C
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_20__.func_448(uParam0))
	{
	}
	iVar0 = 0;
	uParam0->f_1232 = 0;
	__LIB_11__.func_119(uParam0);
	iVar1 = 0;
	while (iVar1 < 20)
	{
		uParam0->f_10[iVar1 /*57*/].f_44 = 0;
		iVar1++;
	}
	uParam0->f_1231 = 0;
	if (CAM::DOES_CAM_EXIST(uParam0->f_1))
	{
		CAM::DESTROY_CAM(uParam0->f_1, false);
	}
	uParam0->f_1 = CAM::CREATE_CAMERA(joaat("CUSTOM_TIMED_SPLINE_CAMERA"), false);
	if (CAM::DOES_CAM_EXIST(uParam0->f_1))
	{
		iVar1 = 0;
		while (iVar1 < uParam0->f_1217)
		{
			__LIB_20__.func_447(uParam0, iVar1);
			if (uParam0->f_10[iVar1 /*57*/].f_4 || uParam0->f_10[iVar1 /*57*/].f_2 == 2)
			{
				if (__LIB_11__.func_111(uParam0, iVar1))
				{
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_1, uParam0->f_10[iVar1 /*57*/].f_1, uParam0->f_10[iVar1 /*57*/].f_5, 2);
				}
				else
				{
					CAM::ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(uParam0->f_1, uParam0->f_10[iVar1 /*57*/].f_5, 2);
				}
			}
			else
			{
				CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_1, uParam0->f_10[iVar1 /*57*/].f_1, uParam0->f_10[iVar1 /*57*/].f_5, 2);
			}
			if (__LIB_11__.func_111(uParam0, iVar1))
			{
				__LIB_20__.func_610(uParam0, iVar1);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_28 > 0 && uParam0->f_10[iVar1 /*57*/].f_29 > 0f)
			{
				switch (uParam0->f_10[iVar1 /*57*/].f_28)
				{
					case 1:
						iVar0 = 4;
						break;
					case 2:
						iVar0 = 8;
						break;
					case 3:
						iVar0 = 16;
						break;
				}
				CAM::SET_CAM_SPLINE_NODE_EASE(uParam0->f_1, iVar1, iVar0, uParam0->f_10[iVar1 /*57*/].f_29);
			}
			iVar2 = 0;
			if (uParam0->f_10[iVar1 /*57*/].f_30)
			{
				iVar2++;
			}
			if (uParam0->f_10[iVar1 /*57*/].f_31)
			{
				iVar2 += 8;
			}
			CAM::SET_CAM_SPLINE_NODE_VELOCITY_SCALE(uParam0->f_1, iVar1, uParam0->f_10[iVar1 /*57*/].f_32);
			CAM::SET_CAM_SPLINE_NODE_EXTRA_FLAGS(uParam0->f_1, iVar1, iVar2);
			iVar1++;
		}
		if (uParam0->f_3)
		{
			if (uParam0->f_1219 >= 0)
			{
				CAM::ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(uParam0->f_1, uParam0->f_1219, 2);
			}
		}
		if (uParam0->f_2)
		{
			CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_1, 0);
		}
		iVar1 = 0;
		while (iVar1 < 16)
		{
			if (uParam0->f_1151[iVar1 /*2*/].f_1 > -1f)
			{
				CAM::OVERRIDE_CAM_SPLINE_VELOCITY(uParam0->f_1, iVar1, uParam0->f_1151[iVar1 /*2*/], uParam0->f_1151[iVar1 /*2*/].f_1);
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 16)
		{
			CAM::OVERRIDE_CAM_SPLINE_MOTION_BLUR(uParam0->f_1, iVar1, uParam0->f_1184[iVar1 /*2*/], uParam0->f_1184[iVar1 /*2*/].f_1);
			iVar1++;
		}
		CAM::ALLOW_MOTION_BLUR_DECAY(uParam0->f_1, false);
	}
}

void func_474(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x9F5FC
{
	if (__LIB_12__.func_148(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_19__.func_972(iParam0);
			__LIB_0__.func_284(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_6__.func_770(iParam0, 1);
		}
	}
}

void func_475(var uParam0)//Position - 0xA5B24
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_7))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_7));
	}
	__LIB_11__.func_999(uParam0, 0, joaat("WEAPON_UNARMED"), 1, 1, 1);
	__LIB_0__.func_412(uParam0);
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_6));
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_8));
	}
}

int func_476(var uParam0)//Position - 0x19DF9
{
	if (__LIB_12__.func_15(uParam0))
	{
		return 1;
	}
	return 0;
}

void func_477()//Position - 0x938F8
{
	if (Global_97753)
	{
		__LIB_20__.func_605();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_0__.func_51(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_478(char* sParam0, bool bParam1)//Position - 0x31CE0
{
	__LIB_26__.func_258(bParam1);
	CUTSCENE::REQUEST_CUTSCENE(sParam0, 8);
}

void func_479()//Position - 0x37AD
{
	float fVar0;
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_381, false))
	{
		VEHICLE::DELETE_VEHICLE(&iLocal_381);
		iLocal_381 = VEHICLE::CREATE_VEHICLE(iLocal_57, Local_396, fLocal_399, true, true, false);
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(iLocal_381, 6);
	}
	if (ENTITY::DOES_ENTITY_EXIST(iLocal_379))
	{
		PED::DELETE_PED(&iLocal_379);
	}
	if ((!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false) && !ENTITY::IS_ENTITY_DEAD(iLocal_381, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_381, false))
	{
		ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), -1907.8273f, -560.0641f, 10.8064f, true, false, false, true);
		ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), 260.195f);
		ENTITY::SET_ENTITY_COORDS(iLocal_381, Local_396, true, false, false, true);
		ENTITY::SET_ENTITY_HEADING(iLocal_381, fLocal_399);
		if (ENTITY::DOES_ENTITY_EXIST(iLocal_382))
		{
			if (!ENTITY::IS_ENTITY_DEAD(iLocal_382, false))
			{
				VEHICLE::SET_VEHICLE_FIXED(iLocal_382);
				ENTITY::SET_ENTITY_INVINCIBLE(iLocal_382, true);
				VEHICLE::SET_VEHICLE_CAN_BREAK(iLocal_382, false);
				ENTITY::SET_ENTITY_COORDS(iLocal_382, __LIB_11__.func_751(iLocal_382), true, false, false, true);
				ENTITY::SET_ENTITY_HEADING(iLocal_382, 231f);
			}
		}
		TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
		TASK::TASK_STAND_STILL(PLAYER::PLAYER_PED_ID(), -1);
		if ((!iLocal_409 || !ENTITY::DOES_ENTITY_EXIST(iLocal_380)) || ENTITY::IS_ENTITY_DEAD(iLocal_380, false))
		{
			iLocal_380 = PED::CREATE_PED(26, iLocal_56, -1899.7f, -562.2f, 10.7945f, 217.9453f, true, true);
			PED::SET_PED_COMPONENT_VARIATION(iLocal_380, 3, iLocal_404, iLocal_405, 0);
			PED::SET_PED_COMPONENT_VARIATION(iLocal_380, 4, 0, iLocal_406, 0);
			PED::SET_PED_MONEY(iLocal_380, (2000 + MISC::GET_RANDOM_INT_IN_RANGE(5, 301)));
			ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(iLocal_380, true, 1);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iLocal_380, true);
			__LIB_0__.func_203(&uLocal_63, 1, iLocal_380, "FRIEDLANDER", 0, 1);
			iLocal_409 = 1;
		}
		else
		{
			ENTITY::SET_ENTITY_COORDS(iLocal_380, -1899.7f, -562.2f, 10.7945f, true, false, false, true);
			ENTITY::SET_ENTITY_HEADING(iLocal_380, 217.9453f);
			TASK::CLEAR_PED_TASKS_IMMEDIATELY(iLocal_380);
			TASK::TASK_STAND_STILL(iLocal_380, -1);
		}
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			if (!iLocal_408)
			{
				STREAMING::NEW_LOAD_SCENE_START(-1905.4998f, -557.8768f, 12.4125f, __LIB_0__.func_79(Vector(12.4748f, -560.2881f, -1904.7095f) - Vector(12.4125f, -557.8768f, -1905.4998f)), 100f, 0);
				iLocal_408 = 1;
				SYSTEM::WAIT(0);
			}
			while (!STREAMING::IS_NEW_LOAD_SCENE_LOADED() || (!PED::IS_PED_INJURED(iLocal_380) && !PED::HAVE_ALL_STREAMING_REQUESTS_COMPLETED(iLocal_380)))
			{
				SYSTEM::WAIT(0);
			}
			if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
			{
				TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			}
			CAM::DO_SCREEN_FADE_IN(500);
		}
		fVar0 = 2f;
		if (!PED::IS_PED_INJURED(iLocal_380) && !ENTITY::IS_ENTITY_DEAD(iLocal_381, false))
		{
			TASK::OPEN_SEQUENCE_TASK(&iLocal_386);
			TASK::TASK_ENTER_VEHICLE(0, iLocal_381, -1, -1, fVar0, 1, 0);
			TASK::TASK_VEHICLE_DRIVE_TO_COORD(0, iLocal_381, -1783.7303f, -629.1945f, 9.89f, 20f, 0, ENTITY::GET_ENTITY_MODEL(iLocal_381), 786484, 10f, 12f);
			TASK::TASK_VEHICLE_DRIVE_WANDER(0, iLocal_381, 19f, 786484);
			TASK::CLOSE_SEQUENCE_TASK(iLocal_386);
			TASK::TASK_PERFORM_SEQUENCE(iLocal_380, iLocal_386);
			PED::FORCE_PED_MOTION_STATE(iLocal_380, joaat("MotionState_Run"), true, 1, true);
		}
		iLocal_383 = HUD::ADD_BLIP_FOR_ENTITY(iLocal_380);
		HUD::SET_BLIP_COLOUR(iLocal_383, 1);
		__LIB_6__.func_892(&iLocal_237);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
		iLocal_385 = CAM::CREATE_CAMERA_WITH_PARAMS(joaat("DEFAULT_SCRIPTED_CAMERA"), -1904.6146f, -558.892f, 12.8339f, -9.0794f, 0f, -127.4455f, 50f, true, 2);
		CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
		HUD::DISPLAY_RADAR(false);
		HUD::DISPLAY_HUD(false);
	}
	MISC::CLEAR_AREA(-1886.8839f, -571.1942f, 11.3828f, 2.5f, true, true, false, false);
	VEHICLE::CREATE_VEHICLE(iLocal_58, -1886.8839f, -571.1942f, 11.3828f, -40.83f, true, true, false);
}

void func_480()//Position - 0x3B91
{
	__LIB_6__.func_771();
}

int func_481(int* iParam0, int* iParam1, var uParam2)//Position - 0x3E07
{
	bool bVar0;
	bool bVar1;
	if (__LIB_0__.func_736(iParam0) && __LIB_19__.func_812(iParam0) > 1.3f)
	{
		bVar0 = PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/);
		bVar1 = PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/);
		if (bVar0 || bVar1)
		{
			if (bVar0)
			{
				*uParam2 = 1;
			}
			else
			{
				*uParam2 = 0;
			}
			if (__LIB_0__.func_1("SHRINK_ACCEPT"))
			{
				HUD::CLEAR_HELP(true);
			}
			__LIB_1__.func_899(iParam1);
			return 1;
		}
	}
	__LIB_20__.func_627(iParam1, 1128792064, 1, 0, 1, 1065353216);
	return 0;
}

struct<4> func_482(var uParam0, var uParam1, int iParam2, bool bParam3)//Position - 0x4343
{
	struct<4> Var0;
	int iVar1;
	if (__LIB_11__.func_758() <= 0)
	{
		if (!__LIB_11__.func_757())
		{
			iVar1 = __LIB_20__.func_628(1, 2, 3, 4, 12);
		}
		else if (__LIB_11__.func_755() >= 1)
		{
			iVar1 = __LIB_20__.func_628(5, 6, 7, 0, 0);
		}
		else
		{
			iVar1 = __LIB_20__.func_628(5, 7, 0, 0, 0);
		}
	}
	else if (__LIB_11__.func_758() >= 2)
	{
		iVar1 = __LIB_20__.func_628(10, 11, 0, 0, 0);
	}
	else if (!__LIB_11__.func_757())
	{
		if (iParam2 != 4)
		{
			iVar1 = __LIB_20__.func_628(8, 9, 0, 0, 0);
		}
		else
		{
			iVar1 = 9;
		}
	}
	else if (iParam2 != 4)
	{
		iVar1 = __LIB_20__.func_628(8, 9, 10, 0, 0);
	}
	else
	{
		iVar1 = __LIB_20__.func_628(9, 10, 0, 0, 0);
	}
	__LIB_4__.func_259(uParam0, iVar1);
	if (bParam3)
	{
		__LIB_11__.func_754(&(Global_113386.f_19961), iVar1, 1);
	}
	StringCopy(&Var0, "OBTSX", 16);
	if (iVar1 < 10)
	{
		StringConCat(&Var0, "0", 16);
	}
	StringIntConCat(&Var0, iVar1, 16);
	return Var0;
}

struct<4> func_483(int iParam0, int iParam1, bool bParam2, var uParam3)//Position - 0x1DC53
{
	struct<4> Var0;
	bool bVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	if ((((!__LIB_11__.func_765(&(Global_113386.f_19961), 8) && iParam1) && iParam0 != 4) && __LIB_20__.func_632(3) > 0) && MISC::GET_RANDOM_FLOAT_IN_RANGE(0f, 1f) < 0.75f)
	{
		bVar1 = 8;
		*uParam3 = 4;
	}
	else
	{
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 1) && __LIB_20__.func_632(5) > 0)
		{
			MISC::SET_BIT(&uVar2, 1);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 2) && __LIB_20__.func_632(7) >= 2)
		{
			MISC::SET_BIT(&uVar2, 2);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 3) && ((((__LIB_20__.func_632(8) > 0 || __LIB_20__.func_632(9) > 0) && __LIB_20__.func_632(7) > 0) && iParam1) && iParam0 != 4))
		{
			MISC::SET_BIT(&uVar2, 3);
			iVar3++;
		}
		if ((!__LIB_11__.func_765(&(Global_113386.f_19961), 4) && __LIB_20__.func_632(1) > 0) && __LIB_20__.func_632(1) < 3)
		{
			MISC::SET_BIT(&uVar2, 4);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 5) && __LIB_20__.func_632(1) >= 3)
		{
			MISC::SET_BIT(&uVar2, 5);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 6) && __LIB_20__.func_632(0) > 0)
		{
			MISC::SET_BIT(&uVar2, 6);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 7))
		{
			MISC::SET_BIT(&uVar2, 7);
			iVar3++;
		}
		if (((!__LIB_11__.func_765(&(Global_113386.f_19961), 8) && iParam1) && __LIB_20__.func_632(3) > 0) && iParam0 != 4)
		{
			MISC::SET_BIT(&uVar2, 8);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 9))
		{
			MISC::SET_BIT(&uVar2, 9);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 10))
		{
			MISC::SET_BIT(&uVar2, 10);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 11))
		{
			MISC::SET_BIT(&uVar2, 11);
			iVar3++;
		}
		if (iVar3 <= 0)
		{
			if (iParam0 != 4)
			{
				bVar1 = __LIB_20__.func_631(7, 9, 10, 11, 0);
			}
			else
			{
				bVar1 = __LIB_20__.func_631(7, 9, 10, 0, 0);
			}
		}
		else
		{
			iVar4 = MISC::GET_RANDOM_INT_IN_RANGE(1, iVar3 + 1);
			bVar5 = true;
			while (iVar4 > 0)
			{
				if (BitTest(uVar2, bVar5))
				{
					iVar4 = (iVar4 - 1);
					if (iVar4 == 0)
					{
						bVar1 = bVar5;
					}
				}
				bVar5++;
			}
		}
		switch (bVar1)
		{
			case 1:
				*uParam3 = 5;
				break;
			case 2:
				*uParam3 = 5;
				break;
			case 3:
				*uParam3 = 7;
				break;
			case 4:
				*uParam3 = 4;
				break;
			case 5:
				*uParam3 = 4;
				break;
			case 6:
				*uParam3 = 5;
				break;
			case 7:
				*uParam3 = 4;
				break;
			case 8:
				*uParam3 = 4;
				break;
			case 9:
				*uParam3 = 4;
				break;
			case 10:
				*uParam3 = 5;
				break;
			case 11:
				*uParam3 = 7;
				break;
			}
	}
	if (bParam2)
	{
		__LIB_11__.func_763(&(Global_113386.f_19961), bVar1, 1);
	}
	StringCopy(&Var0, "OBTOW", 16);
	if (bVar1 < 10)
	{
		StringConCat(&Var0, "0", 16);
	}
	StringIntConCat(&Var0, bVar1, 16);
	return Var0;
}

void func_484(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x21AC9
{
	__LIB_18__.func_237(uParam0, iParam1);
	__LIB_18__.func_237(uParam0, iParam3);
	__LIB_18__.func_237(uParam0, iParam2);
	__LIB_18__.func_237(uParam0, iParam5);
	if (iParam6 == 4)
	{
		__LIB_18__.func_237(uParam0, iParam4);
	}
	__LIB_1__.func_9(uParam0);
	HUD::REQUEST_ADDITIONAL_TEXT("SHRINK", 0);
	AUDIO::LOAD_STREAM("Office_Background_Stream", "SHRINK_SOUNDS");
	STREAMING::NEW_LOAD_SCENE_START(-1904.2f, -573.2f, 19.6f, -0.2f, 0f, -59.4f, 10f, 0);
	__LIB_11__.func_766();
}

struct<4> func_485(var uParam0, var uParam1, int iParam2, bool bParam3)//Position - 0x3865
{
	struct<4> Var0;
	int iVar1;
	if (__LIB_11__.func_758() <= 0)
	{
		if (!__LIB_11__.func_757())
		{
			iVar1 = __LIB_20__.func_628(1, 2, 3, 4, 12);
		}
		else if (__LIB_11__.func_755() >= 1)
		{
			iVar1 = __LIB_20__.func_628(5, 6, 7, 0, 0);
		}
		else
		{
			iVar1 = __LIB_20__.func_628(5, 7, 0, 0, 0);
		}
	}
	else if (__LIB_11__.func_758() >= 2)
	{
		iVar1 = __LIB_20__.func_628(10, 11, 0, 0, 0);
	}
	else if (!__LIB_11__.func_757())
	{
		if (iParam2 != 4)
		{
			iVar1 = __LIB_20__.func_628(8, 9, 0, 0, 0);
		}
		else
		{
			iVar1 = 9;
		}
	}
	else if (iParam2 != 4)
	{
		iVar1 = __LIB_20__.func_628(8, 9, 10, 0, 0);
	}
	else
	{
		iVar1 = __LIB_20__.func_628(9, 10, 0, 0, 0);
	}
	__LIB_4__.func_259(uParam0, iVar1);
	if (bParam3)
	{
		__LIB_11__.func_754(&(Global_113386.f_19961), iVar1, 1);
	}
	StringCopy(&Var0, "DRF_PR_", 16);
	switch (iVar1)
	{
		case 1:
			StringConCat(&Var0, "1_A", 16);
			*uParam1 = 3;
			break;
		case 2:
			StringConCat(&Var0, "1_B", 16);
			*uParam1 = 5;
			break;
		case 3:
			StringConCat(&Var0, "1_C", 16);
			*uParam1 = 3;
			break;
		case 4:
			StringConCat(&Var0, "1_D", 16);
			*uParam1 = 3;
			break;
		case 5:
			StringConCat(&Var0, "1_STR", 16);
			*uParam1 = 3;
			break;
		case 6:
			StringConCat(&Var0, "5_T1B", 16);
			*uParam1 = 5;
			break;
		case 7:
			StringCopy(&Var0, "5_T1C", 16);
			*uParam1 = 4;
			break;
		case 8:
			StringConCat(&Var0, "5PROA", 16);
			*uParam1 = 5;
			break;
		case 9:
			StringConCat(&Var0, "5PROB", 16);
			*uParam1 = 5;
			break;
		case 10:
			StringConCat(&Var0, "5STRA", 16);
			*uParam1 = 7;
			break;
		case 11:
			StringConCat(&Var0, "5STRB", 16);
			*uParam1 = 4;
			break;
		case 12:
			StringConCat(&Var0, "5_NON", 16);
			*uParam1 = 5;
			break;
	}
	return Var0;
}

struct<4> func_486(int iParam0, int iParam1, bool bParam2, var uParam3)//Position - 0x3DF5
{
	struct<4> Var0;
	bool bVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	if ((((!__LIB_11__.func_765(&(Global_113386.f_19961), 8) && iParam1) && iParam0 != 4) && __LIB_20__.func_632(3) > 0) && MISC::GET_RANDOM_FLOAT_IN_RANGE(0f, 1f) < 0.75f)
	{
		bVar1 = 8;
		*uParam3 = 4;
	}
	else
	{
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 1) && __LIB_20__.func_632(5) > 0)
		{
			MISC::SET_BIT(&uVar2, 1);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 2) && __LIB_20__.func_632(7) >= 2)
		{
			MISC::SET_BIT(&uVar2, 2);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 3) && ((((__LIB_20__.func_632(8) > 0 || __LIB_20__.func_632(9) > 0) && __LIB_20__.func_632(7) > 0) && iParam1) && iParam0 != 4))
		{
			MISC::SET_BIT(&uVar2, 3);
			iVar3++;
		}
		if ((!__LIB_11__.func_765(&(Global_113386.f_19961), 4) && __LIB_20__.func_632(1) > 0) && __LIB_20__.func_632(1) < 3)
		{
			MISC::SET_BIT(&uVar2, 4);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 5) && __LIB_20__.func_632(1) >= 3)
		{
			MISC::SET_BIT(&uVar2, 5);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 6) && __LIB_20__.func_632(0) > 0)
		{
			MISC::SET_BIT(&uVar2, 6);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 7))
		{
			MISC::SET_BIT(&uVar2, 7);
			iVar3++;
		}
		if (((!__LIB_11__.func_765(&(Global_113386.f_19961), 8) && iParam1) && __LIB_20__.func_632(3) > 0) && iParam0 != 4)
		{
			MISC::SET_BIT(&uVar2, 8);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 9))
		{
			MISC::SET_BIT(&uVar2, 9);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 10))
		{
			MISC::SET_BIT(&uVar2, 10);
			iVar3++;
		}
		if (!__LIB_11__.func_765(&(Global_113386.f_19961), 11))
		{
			MISC::SET_BIT(&uVar2, 11);
			iVar3++;
		}
		if (iVar3 <= 0)
		{
			if (iParam0 != 4)
			{
				bVar1 = __LIB_20__.func_631(7, 9, 10, 11, 0);
			}
			else
			{
				bVar1 = __LIB_20__.func_631(7, 9, 10, 0, 0);
			}
		}
		else
		{
			iVar4 = MISC::GET_RANDOM_INT_IN_RANGE(1, iVar3 + 1);
			bVar5 = true;
			while (iVar4 > 0)
			{
				if (BitTest(uVar2, bVar5))
				{
					iVar4 = (iVar4 - 1);
					if (iVar4 == 0)
					{
						bVar1 = bVar5;
					}
				}
				bVar5++;
			}
		}
		switch (bVar1)
		{
			case 1:
				*uParam3 = 5;
				break;
			case 2:
				*uParam3 = 5;
				break;
			case 3:
				*uParam3 = 7;
				break;
			case 4:
				*uParam3 = 4;
				break;
			case 5:
				*uParam3 = 4;
				break;
			case 6:
				*uParam3 = 5;
				break;
			case 7:
				*uParam3 = 4;
				break;
			case 8:
				*uParam3 = 4;
				break;
			case 9:
				*uParam3 = 4;
				break;
			case 10:
				*uParam3 = 5;
				break;
			case 11:
				*uParam3 = 7;
				break;
			}
	}
	if (bParam2)
	{
		__LIB_11__.func_763(&(Global_113386.f_19961), bVar1, 1);
	}
	StringCopy(&Var0, "DRF_OWR_", 16);
	if (bVar1 >= 1 && bVar1 <= 3)
	{
		StringIntConCat(&Var0, bVar1, 16);
	}
	else if (bVar1 < 7)
	{
		StringIntConCat(&Var0, 4, 16);
		if (bVar1 == 4)
		{
			StringConCat(&Var0, "A", 16);
		}
		else if (bVar1 == 5)
		{
			StringConCat(&Var0, "B", 16);
		}
		else
		{
			StringConCat(&Var0, "C", 16);
		}
	}
	else
	{
		StringIntConCat(&Var0, 7, 16);
		if (bVar1 == 7)
		{
			StringConCat(&Var0, "A", 16);
		}
		else if (bVar1 == 8)
		{
			StringConCat(&Var0, "B", 16);
		}
		else if (bVar1 == 9)
		{
			StringConCat(&Var0, "C", 16);
		}
		else if (bVar1 == 10)
		{
			StringConCat(&Var0, "D", 16);
		}
		else
		{
			StringConCat(&Var0, "E", 16);
		}
	}
	return Var0;
}

void func_487(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x451F
{
	struct<4> Var0;
	int iVar1;
	int iVar2;
	Var0 = { __LIB_20__.func_640(iParam3, &iVar1, &iVar2, 1) };
	__LIB_11__.func_777(uParam0, uParam1, uParam2, &Var0, iVar1, iVar2, 0);
}

int func_488(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x4AD3
{
	if (Global_96902 != 0 && (MISC::GET_GAME_TIMER() - Global_96902) < 1800000)
	{
		return 0;
	}
	HUD::REQUEST_ADDITIONAL_TEXT("SHRINK", 0);
	HUD::REQUEST_ADDITIONAL_TEXT("DrfAud", 6);
	while (!HUD::HAS_ADDITIONAL_TEXT_LOADED(0) || !HUD::HAS_ADDITIONAL_TEXT_LOADED(6))
	{
		SYSTEM::WAIT(0);
	}
	if (!__LIB_20__.func_643(uParam1, uParam2, uParam3))
	{
		return 0;
	}
	__LIB_0__.func_203(uParam0, 0, PLAYER::PLAYER_PED_ID(), "MICHAEL", 0, 1);
	__LIB_0__.func_203(uParam0, 1, 0, "FRIEDLANDER", 0, 1);
	Global_96902 = MISC::GET_GAME_TIMER();
	return 1;
}

void func_489()//Position - 0x4D9E
{
	__LIB_0__.func_296();
	__LIB_20__.func_635();
	__LIB_11__.func_769();
	SCRIPT::TERMINATE_THIS_THREAD();
}

int func_490(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9)//Position - 0x3C4
{
	struct<10> Var0;
	struct<10> Var1;
	int iVar2;
	int iVar3;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam4 < 0)
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 == 76)
	{
		return 0;
	}
	if (iParam7 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_866 < 10)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__.func_522(iParam1);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
		Var0.f_5 = iParam5;
		Var0.f_1 = iParam9;
		Var0.f_2 = iParam2;
		Var0.f_6 = bParam3;
		Var0.f_7 = iParam6;
		Var0.f_8 = iParam7;
		Var0.f_9 = iParam8;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_765[Global_113386.f_7688.f_866 /*10*/] = { Var0 };
		Global_113386.f_7688.f_866++;
		return 1;
	}
	else
	{
		Var1 = { __LIB_20__.func_571(iParam0, iParam1, iParam2, bParam3, iParam4, iParam5, iParam6, iParam7, iParam8, iParam9) };
		iVar2 = 0;
		__LIB_11__.func_792(&iVar2);
		iVar3 = __LIB_11__.func_492(Var1, Global_113386.f_7688.f_765[iVar2 /*10*/]);
		if (iVar3 == 2)
		{
			__LIB_20__.func_570(Global_113386.f_7688.f_765[iVar2 /*10*/]);
			Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
			__LIB_11__.func_491(&Var1);
			return 1;
		}
		else if (iVar3 == 1)
		{
			if (__LIB_11__.func_490(Var1))
			{
				__LIB_20__.func_570(Global_113386.f_7688.f_765[iVar2 /*10*/]);
				Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
				__LIB_11__.func_491(&Var1);
				return 1;
			}
			else
			{
				if (!__LIB_11__.func_490(Global_113386.f_7688.f_765[iVar2 /*10*/]))
				{
					Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
					__LIB_11__.func_491(&Var1);
					return 1;
				}
				__LIB_11__.func_491(&Var1);
				return 1;
			}
		}
		else
		{
			__LIB_20__.func_570(Var1);
			__LIB_11__.func_491(&Var1);
			return 1;
		}
	}
	return 0;
}

void func_491(var uParam0, bool bParam1)//Position - 0x2B775
{
	__LIB_20__.func_276(&(uParam0->f_35), bParam1);
}

void func_492(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x295FA
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_14(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

int func_493(char* sParam0, int iParam1, int iParam2)//Position - 0x37746
{
	int iVar0;
	struct<32> Var1;
	int iVar2;
	__LIB_20__.func_238();
	__LIB_0__.func_133();
	Global_100441 = 0;
	StringCopy(&(Global_100441.f_3), sParam0, 32);
	Global_100441.f_11 = iParam1;
	MISC::PAUSE_DEATH_ARREST_RESTART(true);
	MISC::SET_FADE_OUT_AFTER_ARREST(false);
	MISC::SET_FADE_OUT_AFTER_DEATH(false);
	__LIB_6__.func_849(1);
	__LIB_8__.func_770(1);
	__LIB_20__.func_237(0);
	__LIB_0__.func_129(1);
	MISC::CLEAR_BIT(&(Global_100441.f_20), 9);
	MISC::CLEAR_BIT(&(Global_100441.f_20), 6);
	MISC::CLEAR_BIT(&(Global_100441.f_20), 20);
	MISC::CLEAR_BIT(&(Global_100441.f_20), 21);
	MISC::CLEAR_BIT(&(Global_100441.f_20), 5);
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
				if (ENTITY::IS_ENTITY_UPSIDEDOWN(iVar0))
				{
					MISC::SET_BIT(&(Global_100441.f_20), 5);
				}
			}
		}
	}
	HUD::CLEAR_HELP(true);
	HUD::CLEAR_PRINTS();
	__LIB_0__.func_128(0);
	__LIB_0__.func_12(1);
	Global_100441.f_2 = Global_100478;
	if (__LIB_10__.func_622())
	{
		if (__LIB_0__.func_127())
		{
			if (Global_100478 >= __LIB_20__.func_277())
			{
				if (!BitTest(Global_91229[iParam2 /*34*/].f_15, 16))
				{
					if (Global_113386.f_9085.f_330[iParam2 /*6*/].f_1 >= 2)
					{
						Global_94617 = 1;
					}
				}
			}
		}
		else if (Global_100441.f_11 == 6)
		{
			__LIB_6__.func_773(iParam2, &Var1);
			if (Var1.f_31 == 1)
			{
				if (Global_113386.f_18574[iParam2 /*6*/].f_4 >= 2)
				{
					Global_94617 = 1;
				}
			}
		}
		else
		{
			iVar2 = __LIB_0__.func_125(SCRIPT::GET_THIS_SCRIPT_NAME());
			if (iVar2 > -1)
			{
				if (Global_113386.f_24986.f_4[iVar2] >= 2)
				{
					Global_94617 = 1;
				}
			}
		}
	}
	return 1;
}

int func_494(int iParam0, int iParam1, float fParam2)//Position - 0xCB95
{
	float fVar0;
	float fVar1;
	float fVar2;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		fVar0 = __LIB_11__.func_806(ENTITY::GET_ENTITY_HEADING(iParam0));
		fVar1 = __LIB_11__.func_806(ENTITY::GET_ENTITY_HEADING(iParam1));
		fVar2 = (fVar0 - fVar1);
		if (fVar2 < 0f)
		{
			fVar2 = (fVar2 * -1f);
		}
		if (fVar2 <= fParam2 || fVar2 >= (360f - fParam2))
		{
			return 1;
		}
	}
	return 0;
}

void func_495(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x9961B
{
	if (__LIB_11__.func_902(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_20__.func_446(iParam0);
			__LIB_0__.func_284(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_6__.func_770(iParam0, 1);
		}
	}
}

void func_496(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x74512
{
	int iVar0;
	if (!__LIB_11__.func_815(iParam0, 0))
	{
		WEAPON::GIVE_WEAPON_TO_PED(iParam0, iParam1, iParam2, bParam3, bParam4);
		return;
	}
	else
	{
		if (bParam5)
		{
			__LIB_11__.func_814(iParam0, bParam3);
			WEAPON::GET_CURRENT_PED_WEAPON(iParam0, &iVar0, true);
		}
		else
		{
			iVar0 = __LIB_11__.func_312(__LIB_20__.func_509(iParam0));
			if (iVar0 == 0 || iVar0 == joaat("WEAPON_UNARMED"))
			{
				if (!WEAPON::HAS_PED_GOT_WEAPON(iParam0, iParam1, false))
				{
					WEAPON::GIVE_WEAPON_TO_PED(iParam0, iParam1, iParam2, bParam3, bParam4);
					return;
				}
				else
				{
					iVar0 = iParam1;
				}
			}
		}
		if (iVar0 == joaat("WEAPON_GRENADELAUNCHER") || iVar0 == joaat("WEAPON_RPG"))
		{
			if (WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, iVar0) < 5)
			{
				WEAPON::SET_PED_AMMO(iParam0, iVar0, 5, false);
			}
		}
		else if (WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, iVar0) < iParam2)
		{
			WEAPON::SET_PED_AMMO(iParam0, iVar0, iParam2, false);
		}
		WEAPON::SET_CURRENT_PED_WEAPON(iParam0, iVar0, bParam3);
	}
}

int func_497(int iParam0)//Position - 0x93F45
{
	int iVar0;
	if (!__LIB_20__.func_449(1))
	{
		return 0;
	}
	if (!iParam0->f_39)
	{
		iParam0->f_7 = 4;
		iParam0->f_39 = 1;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && !__LIB_9__.func_603())
	{
		if (((!iParam0->f_18[3] && iParam0->f_23) && !Global_3) && __LIB_20__.func_449(0))
		{
			iParam0->f_7 = 3;
			return 1;
		}
		else if (__LIB_20__.func_449(0) == 0 && __LIB_19__.func_971() == 0)
		{
			__LIB_20__.func_441(&iVar0);
			if (iVar0 == 1)
			{
				__LIB_9__.func_982(14, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 4)
			{
				__LIB_9__.func_982(25, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 2)
			{
				__LIB_9__.func_982(26, 1, -1);
			}
			else if (__LIB_0__.func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 1)
			{
				__LIB_9__.func_982(27, 1, -1);
			}
			else if ((PLAYER::IS_PLAYER_ONLINE() && NETWORK::NETWORK_IS_SIGNED_ONLINE()) == 0)
			{
				__LIB_9__.func_982(13, 1, -1);
			}
			else if (NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS() == 0)
			{
			}
			else if (NETWORK::NETWORK_CAN_ENTER_MULTIPLAYER() == 0)
			{
			}
			else
			{
				__LIB_9__.func_982(14, 1, -1);
			}
		}
	}
	return 0;
}

void func_498(var uParam0, int iParam1, bool bParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x9437B
{
	int iVar0;
	iVar0 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == 3)
		{
			iVar0 = 1;
		}
	}
	else if (__LIB_0__.func_430() == __LIB_0__.func_388(iParam1))
	{
		iVar0 = 1;
	}
	switch (iParam1)
	{
		case 0:
			*uParam4 = 3;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_659(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 1:
			*uParam4 = 0;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_659(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 2:
			*uParam4 = 1;
			*uParam6 = 0;
			if (!__LIB_11__.func_690(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_20__.func_659(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 3:
			*uParam4 = 2;
			*uParam6 = 0;
			if ((((((!uParam0->f_23 || Global_3) || (uParam0->f_23 && ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)))) || (uParam0->f_23 && __LIB_0__.func_2(0))) || (uParam0->f_23 && Global_43018)) || !__LIB_9__.func_986()) || !__LIB_20__.func_449(0))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if (((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
	}
	if (iParam1 != 3)
	{
		if (iVar0 || uParam0->f_34[iParam1] == 2)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_34[iParam1] == 1 || uParam0->f_18[iParam1]) || ((!uParam0->f_23 && PED::IS_PED_INJURED((*uParam0)[iParam1])) && *uParam3 == 1)) || (uParam0->f_23 && BitTest(Global_97919.f_47, iParam1)))
		{
			if (*uParam3 == 1)
			{
				*uParam3 = 2;
			}
		}
		else if (uParam0->f_24[iParam1] != 0)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_23 && !BitTest(Global_113386.f_9085.f_2[27 /*3*/], 1)) && !Global_3) && !__LIB_0__.func_2(0))
		{
			if ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))
			{
			}
			else
			{
				*uParam3 = 1;
			}
		}
	}
	else
	{
		*uParam3 = 3;
	}
	if ((iVar0 && uParam0->f_34[iParam1] == 0) || uParam0->f_34[iParam1] == 3)
	{
		if (!__LIB_0__.func_39(14))
		{
			*uParam6 = 1;
		}
	}
	if (bParam2)
	{
		__LIB_11__.func_107(uParam0, iParam1, uParam5);
	}
}

int func_499()//Position - 0x2AA4D
{
	__LIB_26__.func_429();
	return Global_113386.f_2363.f_539.f_4321;
}

int func_500(var uParam0)//Position - 0x35DDC
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_60 = __LIB_0__.func_408(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_60 = __LIB_11__.func_137(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_60 = __LIB_11__.func_136(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_60 = __LIB_20__.func_443(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_60);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_11__.func_135(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_11__.func_150(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_11__.func_150(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_11__.func_134(), ""))
				{
					__LIB_11__.func_150(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_11__.func_133(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_11__.func_133(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_11__.func_132(0, 0, 1, 1);
	}
	else
	{
		__LIB_11__.func_132(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_11__.func_131(uParam0);
	return iVar0;
}

void func_501(struct<3> Param0, struct<3> Param1, var uParam2, float fParam3)//Position - 0x9E049
{
	__LIB_11__.func_834(Param0.f_0, Param1.f_0, uParam2, fParam3);
	__LIB_11__.func_834(Param0.f_1, Param1.f_1, &(uParam2->f_1), fParam3);
	__LIB_11__.func_834(Param0.f_2, Param1.f_2, &(uParam2->f_2), fParam3);
}

void func_502(bool bParam0)//Position - 0x291E5
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	if (!PLAYER::IS_PLAYER_DEAD(iVar0))
	{
		if (bParam0)
		{
		}
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 16);
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 32);
	}
	__LIB_26__.func_367(1, 1, 0, 0, 0, 0, 0);
}

Vector3 func_503(int iParam0)//Position - 0x3EB09
{
	if (iParam0 == -1)
	{
		return 0f, 0f, 0f;
	}
	if (!__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return 0f, 0f, 0f;
	}
	return Global_77137.f_555[0 /*21*/];
}

int func_504(var uParam0, char* sParam1, int iParam2)//Position - 0xD8B
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_20__.func_464(uParam0) || !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
		__LIB_5__.func_952(sParam1, iParam2);
		uParam0->f_14 = sParam1;
		uParam0->f_15 = iParam2;
		uParam0->f_9 = 1;
		return 1;
	}
	return 0;
}

int func_505(int iParam0, int iParam1)//Position - 0x10BC
{
	int iVar0;
	if (__LIB_1__.func_183(iParam0))
	{
		iVar0 = 0;
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 0, false) && VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 1, false))
		{
			return 1;
		}
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 4, false) && VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 5, false))
		{
			return 1;
		}
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 0, false))
		{
			iVar0++;
		}
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 1, false))
		{
			iVar0++;
		}
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 4, false))
		{
			iVar0++;
		}
		if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, 5, false))
		{
			iVar0++;
		}
		if (iVar0 >= iParam1)
		{
			return 1;
		}
	}
	return 0;
}

int func_506()//Position - 0x100
{
	CLOCK::SET_CLOCK_TIME(Local_21.f_0, Local_21.f_1, Local_21.f_2);
	MISC::SET_WIND(-1f);
	switch (iLocal_59)
	{
		case 0:
			CAM::DO_SCREEN_FADE_IN(0);
			__LIB_0__.func_371();
			CAM::DO_SCREEN_FADE_IN(500);
			CUTSCENE::START_CUTSCENE(0);
			iLocal_59++;
			break;
		case 1:
			if (!CUTSCENE::HAS_CUTSCENE_FINISHED())
			{
				if (bLocal_64)
				{
					__LIB_20__.func_669();
				}
				HUD::SET_TEXT_RENDER_ID(iLocal_53);
				GRAPHICS::DRAW_SCALEFORM_MOVIE(iLocal_51, 0.2f, 0.34f, 0.410001f, 0.69f, 100, 100, 100, 255, 0);
				HUD::SET_TEXT_RENDER_ID(iLocal_54);
				if (bLocal_55)
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iLocal_52, "SET_TEXT");
					__LIB_0__.func_478("KEYNOTE_NAME");
					__LIB_0__.func_478("KEYNOTE_TITLE");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::DRAW_SCALEFORM_MOVIE(iLocal_52, 0.5f, 0.5f, 1f, 1f, 100, 100, 100, 255, 0);
				}
			}
			else
			{
				return 1;
			}
			break;
	}
	return 0;
}

void func_507(var uParam0, int iParam1)//Position - 0xA46
{
	struct<3> Var0;
	__LIB_11__.func_851(uParam0);
	MISC::CLEAR_BIT(&uLocal_43, iParam1);
	switch (iParam1)
	{
		case 0:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-4.29f) + 180f) };
			__LIB_20__.func_671(uParam0, 82047830, 667.319f, 572.133f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 83248680, 666.312f, 571.675f, 128.521f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 71526810, 665.235f, 571.183f, 128.521f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 49826530, 664.124f, 570.679f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 78575440, 663.029f, 570.181f, 128.521f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 12133230, 661.937f, 569.685f, 128.521f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 89665750, 660.839f, 569.194f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 65990810, 659.537f, 569.392f, 128.521f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 21233450, 658.187f, 569.572f, 128.523f, Var0, 4, 0, 1f);
			__LIB_11__.func_849(&(uParam0->f_155[0 /*11*/]), 659.867f, 571.539f, 128.531f, Var0, 0, 0.5f, -1.5f);
			__LIB_11__.func_849(&(uParam0->f_155[1 /*11*/]), 660.646f, 567.108f, 128.521f, Var0, 0, 0.5f, -1.5f);
			break;
		case 1:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.98f) + 180f) };
			__LIB_20__.func_671(uParam0, 21091970, 670.312f, 568.023f, 128.521f, Var0, 5, 0, 0.5f);
			__LIB_20__.func_671(uParam0, 97482490, 669.189f, 567.502f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 66764240, 668.28f, 566.688f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 82832850, 667.384f, 565.885f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 33636100, 666.491f, 565.085f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 22769640, 665.595f, 564.282f, 128.522f, Var0, 6, 1, 0);
			break;
		case 2:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.78f) + 180f) };
			__LIB_20__.func_671(uParam0, 91480760, 673.7f, 564.799f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 64996320, 672.996f, 563.847f, 128.521f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 30855220, 672.271f, 562.865f, 128.521f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 98921990, 671.557f, 561.897f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 73357200, 670.258f, 561.366f, 128.522f, Var0, 6, 1, 0);
			__LIB_11__.func_849(&(uParam0->f_155[0 /*11*/]), 669.564f, 563.469f, 128.521f, Var0, 2, -1.5f, -1.5f);
			__LIB_11__.func_849(&(uParam0->f_155[1 /*11*/]), 672.34f, 559.914f, 128.522f, Var0, 2, -1.5f, -1.5f);
			break;
		case 3:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.38f) + 180f) };
			__LIB_20__.func_671(uParam0, 89689390, 681.517f, 555.801f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 71057000, 681.796f, 556.967f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 26206390, 682.076f, 558.137f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 58207860, 682.36f, 559.342f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 43622440, 682.635f, 560.475f, 128.522f, Var0, 6, 1, 0);
			break;
		case 4:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.17f) + 180f) };
			__LIB_20__.func_671(uParam0, 78555440, 687.841f, 559.785f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 12324420, 687.807f, 558.602f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 4083210, 687.771f, 557.382f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 2021980, 688.465f, 556.159f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 21091970, 688.431f, 554.961f, 128.521f, Var0, 6, 1, 0);
			__LIB_11__.func_849(&(uParam0->f_155[0 /*11*/]), 685.931f, 556.306f, 128.522f, Var0, 0, 0.5f, -1.5f);
			__LIB_11__.func_849(&(uParam0->f_155[1 /*11*/]), 685.897f, 555.108f, 128.521f, Var0, 1, -1.5f, -1.5f);
			break;
		case 5:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-2.97f) + 180f) };
			__LIB_20__.func_671(uParam0, 31491440, 692.632f, 559.992f, 128.522f, Var0, 5, 2, -0.5f);
			__LIB_20__.func_671(uParam0, 34393340, 693.189f, 558.886f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 94762900, 693.396f, 557.684f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 95283980, 693.6f, 556.498f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 92416940, 693.803f, 555.317f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 53597080, 694.007f, 554.131f, 128.522f, Var0, 6, 1, 0);
			break;
		case 6:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-2.7f) + 180f) };
			__LIB_20__.func_671(uParam0, 86170110, 697.492f, 561.188f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 62247860, 697.964f, 560.188f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 43665230, 698.467f, 559.116f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 32906070, 698.988f, 558.013f, 128.522f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 70836820, 699.502f, 556.925f, 128.522f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 67800350, 700.014f, 555.841f, 128.522f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 41115560, 701.184f, 555.063f, 128.521f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 98430790, 701.005f, 553.758f, 128.522f, Var0, 6, 1, 0);
			__LIB_11__.func_849(&(uParam0->f_155[0 /*11*/]), 698.861f, 554.048f, 128.521f, Var0, 0, 0.5f, -1.5f);
			__LIB_11__.func_849(&(uParam0->f_155[1 /*11*/]), 703.267f, 554.91f, 128.522f, Var0, 0, 0.5f, -1.5f);
			break;
		case 7:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.99f) + 180f) };
			__LIB_20__.func_671(uParam0, 13168530, 652.833f, 570.052f, 128.529f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 92127780, 652.006f, 569.319f, 128.528f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 51664260, 651.136f, 568.538f, 128.729f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 35914010, 650.242f, 567.746f, 128.729f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 43076060, 649.661f, 566.94f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 21755390, 648.426f, 566.137f, 128.929f, Var0, 6, 2, 0);
			break;
		case 8:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.9f) + 180f) };
			__LIB_20__.func_671(uParam0, 20501110, 656.955f, 565.868f, 128.53f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 10114780, 656.193f, 565.067f, 128.53f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 12664730, 655.358f, 564.19f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 32956570, 654.534f, 563.324f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 11862860, 653.696f, 562.443f, 128.93f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 87809290, 652.862f, 561.566f, 128.93f, Var0, 6, 2, 0);
			break;
		case 9:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.76f) + 180f) };
			__LIB_20__.func_671(uParam0, 75170110, 662.947f, 560.965f, 128.529f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 62246860, 662.306f, 560.065f, 128.529f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 83665250, 661.603f, 559.079f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 22016170, 660.91f, 558.106f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 41846840, 660.204f, 557.116f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 10000350, 659.502f, 556.13f, 128.929f, Var0, 6, 2, 0);
			break;
		case 10:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.68f) + 180f) };
			__LIB_20__.func_671(uParam0, 86878180, 667.872f, 557.785f, 128.53f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 22242820, 667.31f, 556.833f, 128.53f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 93969290, 666.693f, 555.791f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 12101010, 666.086f, 554.762f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 20232220, 665.467f, 553.715f, 128.93f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 57707370, 664.852f, 552.673f, 128.93f, Var0, 6, 2, 0);
			break;
		case 11:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.53f) + 180f) };
			__LIB_20__.func_671(uParam0, 13130110, 674.882f, 554.326f, 128.529f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 97845810, 674.46f, 553.305f, 128.529f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 12345670, 673.997f, 552.186f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 89101110, 673.541f, 551.081f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 12131410, 673.076f, 549.958f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 51617180, 672.613f, 548.839f, 128.929f, Var0, 6, 2, 0);
			break;
		case 12:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.45f) + 180f) };
			__LIB_20__.func_671(uParam0, 60616260, 680.396f, 552.335f, 128.53f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 36465660, 680.063f, 551.281f, 128.53f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 67686970, 679.697f, 550.127f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 71727370, 679.336f, 548.988f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 47576770, 678.969f, 547.829f, 128.93f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 78798080, 678.603f, 546.674f, 128.93f, Var0, 6, 2, 0);
			break;
		case 13:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.31f) + 180f) };
			__LIB_20__.func_671(uParam0, 11511610, 688.034f, 550.483f, 128.529f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 17118110, 687.853f, 549.393f, 128.529f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 91201210, 687.653f, 548.199f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 12212310, 687.457f, 547.02f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 23124120, 687.257f, 545.821f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 51261270, 687.058f, 544.627f, 128.929f, Var0, 6, 2, 0);
			break;
		case 14:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.22f) + 180f) };
			__LIB_20__.func_671(uParam0, 15515610, 693.855f, 549.783f, 128.53f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 57158150, 693.767f, 548.682f, 128.53f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 91601610, 693.67f, 547.474f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 16216310, 693.575f, 546.283f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 64165160, 693.478f, 545.071f, 128.93f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 61671680, 693.381f, 543.865f, 128.93f, Var0, 6, 2, 0);
			break;
		case 15:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.08f) + 180f) };
			__LIB_20__.func_671(uParam0, 19920020, 701.652f, 549.708f, 128.529f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 1202200, 701.721f, 548.605f, 128.529f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 32042050, 701.795f, 547.396f, 128.729f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 20620720, 701.869f, 546.203f, 128.729f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 8209210, 701.944f, 544.99f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 2112120, 702.019f, 543.781f, 128.929f, Var0, 6, 2, 0);
			break;
		case 16:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-2.99f) + 180f) };
			__LIB_20__.func_671(uParam0, 24024120, 707.482f, 550.335f, 128.53f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 43244240, 707.644f, 549.242f, 128.53f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 42452460, 707.821f, 548.044f, 128.73f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 24724820, 707.996f, 546.862f, 128.73f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 48249250, 708.174f, 545.659f, 128.929f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 2512520, 708.351f, 544.461f, 128.929f, Var0, 6, 2, 0);
			break;
		case 17:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.98f) + 180f) };
			__LIB_20__.func_671(uParam0, 46779100, 646.434f, 564.522f, 128.927f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 93643160, 645.612f, 563.784f, 128.927f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 34729570, 644.71f, 562.975f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 28556490, 643.821f, 562.177f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 75335160, 642.916f, 561.365f, 129.327f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 84872300, 642.015f, 560.557f, 129.327f, Var0, 6, 2, 0);
			break;
		case 18:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.91f) + 180f) };
			__LIB_20__.func_671(uParam0, 65187100, 651.092f, 559.707f, 128.926f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 87514460, 650.325f, 558.912f, 128.926f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 46165810, 649.483f, 558.04f, 128.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 12560720, 648.654f, 557.18f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 27854880, 647.809f, 556.306f, 129.326f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 97601360, 646.968f, 555.435f, 129.326f, Var0, 6, 2, 0);
			break;
		case 19:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.75f) + 180f) };
			__LIB_20__.func_671(uParam0, 55178130, 657.925f, 554.108f, 128.927f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 75148880, 657.29f, 553.204f, 128.927f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 88865540, 656.593f, 552.213f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 64916770, 655.906f, 551.235f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 70536220, 655.207f, 550.241f, 129.327f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 17101310, 654.512f, 549.25f, 129.327f, Var0, 6, 2, 0);
			break;
		case 20:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.68f) + 180f) };
			__LIB_20__.func_671(uParam0, 76870120, 663.545f, 550.463f, 128.926f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 32147850, 662.977f, 549.515f, 128.926f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 97662220, 662.353f, 548.477f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 12107070, 661.738f, 547.453f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 60841880, 661.111f, 546.411f, 129.326f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 27803350, 660.489f, 545.373f, 129.326f, Var0, 6, 2, 0);
			break;
		case 21:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.53f) + 180f) };
			__LIB_20__.func_671(uParam0, 19202120, 671.531f, 546.515f, 128.927f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 22232420, 671.116f, 545.491f, 128.927f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 52627280, 670.66f, 544.369f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 29303130, 670.211f, 543.262f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 23334350, 669.753f, 542.135f, 129.327f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 36373830, 669.298f, 541.014f, 129.327f, Var0, 6, 2, 0);
			break;
		case 22:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.46f) + 180f) };
			__LIB_20__.func_671(uParam0, 18283840, 677.828f, 544.227f, 128.926f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 85858680, 677.487f, 543.176f, 128.926f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 78889900, 677.112f, 542.024f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 91929390, 676.744f, 540.888f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 49596970, 676.368f, 539.731f, 129.326f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 98991000, 675.994f, 538.58f, 129.326f, Var0, 6, 2, 0);
			break;
		case 23:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.3f) + 180f) };
			__LIB_20__.func_671(uParam0, 12812910, 686.526f, 542.118f, 128.927f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 30131130, 686.352f, 541.027f, 128.927f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 21331340, 686.16f, 539.831f, 129.127f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 13513610, 685.972f, 538.652f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 37138130, 685.779f, 537.451f, 129.327f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 91401410, 685.588f, 536.256f, 129.327f, Var0, 6, 2, 0);
			break;
		case 24:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.23f) + 180f) };
			__LIB_20__.func_671(uParam0, 16917010, 693.176f, 541.306f, 128.926f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 71172170, 693.08f, 540.205f, 128.926f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 31741750, 692.975f, 538.998f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 17617810, 692.871f, 537.808f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 79180180, 692.765f, 536.597f, 129.326f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 21831840, 692.66f, 535.391f, 129.326f, Var0, 6, 2, 0);
			break;
		case 25:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3.07f) + 180f) };
			__LIB_20__.func_671(uParam0, 21321420, 702.065f, 541.218f, 128.927f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 15216210, 702.14f, 540.116f, 128.927f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 72182190, 702.223f, 538.907f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 22022120, 702.304f, 537.715f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 22223220, 702.387f, 536.502f, 129.327f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 42252260, 703.116f, 526.841f, 129.618f, Var0, 6, 2, 0);
			break;
		case 26:
			Var0 = { 0f, 0f, (__LIB_0__.func_407(-3f) + 180f) };
			__LIB_20__.func_671(uParam0, 25325420, 708.727f, 541.922f, 128.926f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 55256250, 709.881f, 539.828f, 128.926f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 72582590, 709.05f, 539.628f, 129.127f, Var0, 6, 2, 0);
			__LIB_20__.func_671(uParam0, 26026120, 709.217f, 538.445f, 129.127f, Var0, 6, 0, 0);
			__LIB_20__.func_671(uParam0, 62263260, 709.386f, 537.241f, 129.326f, Var0, 6, 1, 0);
			__LIB_20__.func_671(uParam0, 42652650, 709.555f, 536.043f, 129.326f, Var0, 6, 2, 0);
			break;
		default:
			break;
	}
}

int func_508(bool bParam0, int iParam1)//Position - 0x2BFFE
{
	struct<82> Var0;
	if (!__LIB_0__.func_317(bParam0))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_11__.func_860(bParam0, &Var0, iParam1);
		return Var0.f_0;
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_509(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x9BFE8
{
	if (__LIB_20__.func_511(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_20__.func_656(iParam0);
			__LIB_0__.func_284(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_6__.func_770(iParam0, 1);
		}
	}
}

void func_510(int iParam0)//Position - 0x13F01
{
	int iVar0;
	iVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[iVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_511(var uParam0, struct<98> Param1)//Position - 0x24172
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*uParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*uParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
		}
	}
	if (__LIB_0__.func_283(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
			}
		}
	}
	__LIB_18__.func_202(uParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Param1.f_96);
}

void func_512(int iParam0)//Position - 0x65635
{
	int iVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	iVar0 = __LIB_18__.func_168(iParam0);
	if (__LIB_0__.func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[iVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_6__.func_785(&Var3, __LIB_0__.func_360(iVar1, bVar2), __LIB_10__.func_4(iVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_513(int iParam0, bool bParam1)//Position - 0x6D337
{
	__LIB_20__.func_512(iParam0, bParam1, 0);
}

void func_514(int iParam0, float fParam1, float fParam2, int iParam3)//Position - 0x736C4
{
	__LIB_11__.func_887(-1, iParam0, fParam1, fParam2, iParam3, 1);
}

void func_515(int iParam0, int iParam1, int iParam2)//Position - 0x798AA
{
	int iVar0;
	int iVar1;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
			Global_113386.f_2363.f_539.f_2247[iParam1 /*4*/][iParam0] = (Global_113386.f_2363.f_539.f_2247[iParam1 /*4*/][iParam0] + iParam2);
			break;
		case 3:
			iVar1 = 13122;
			switch (iParam1)
			{
				case 1:
					iVar1 = 72;
					break;
				case 3:
					iVar1 = 74;
					break;
				case 2:
					iVar1 = 73;
					break;
				case 4:
					iVar1 = 75;
					break;
				case 5:
					iVar1 = 76;
					break;
				case 6:
					iVar1 = 77;
					break;
				case 7:
					iVar1 = 78;
					break;
			}
			if (iVar1 != 13122)
			{
				iVar0 = __LIB_0__.func_534(iVar1, -1, 0);
				iVar0 = (iVar0 + iParam2);
				if (iVar0 > 100)
				{
					iVar0 = 100;
				}
				__LIB_0__.func_427(iVar1, iVar0, -1, 1, 0);
			}
			break;
	}
}

int func_516(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x8F682
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_15(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_517(int iParam0, bool bParam1)//Position - 0x8F7CD
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_18__.func_168(iParam0);
	if (__LIB_0__.func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_18__.func_178(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_518(var uParam0)//Position - 0xB0942
{
	if (__LIB_18__.func_189(uParam0))
	{
		if (STREAMING::HAS_MODEL_LOADED(uParam0->f_12.f_66))
		{
			return 1;
		}
		else
		{
			return 0;
		}
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_519(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x890
{
	struct<14> Var0;
	if (__LIB_0__.func_2(0))
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam7 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam5 < 3)
	{
		if (BitTest(iParam4, bParam5))
		{
			return 0;
		}
	}
	if (iParam4 < 1 || iParam4 > 7)
	{
		return 0;
	}
	if (iParam1 == -1)
	{
		return 0;
	}
	if (iParam1 == 83 || iParam2 == 83)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_764 < 8)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__.func_522(iParam3);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam6);
		Var0.f_5 = iParam7;
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam4;
		Var0.f_6 = bParam5;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_13 = iParam12;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_651[Global_113386.f_7688.f_764 /*14*/] = { Var0 };
		Global_113386.f_7688.f_764++;
		__LIB_6__.func_848(0);
		__LIB_6__.func_848(1);
		__LIB_6__.func_848(2);
		return 1;
	}
	return 0;
}

void func_520(int iParam0)//Position - 0x1FD5E
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[bVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_521(int iParam0)//Position - 0x1FDA5
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[bVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_522(int iParam0)//Position - 0x1FDE3
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[bVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[bVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_523(int iParam0)//Position - 0x1FF70
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[bVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

void func_524(int iParam0)//Position - 0x1FFAC
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[bVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

void func_525(int iParam0)//Position - 0x68E39
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[bVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

int func_526(bool bParam0, bool bParam1)//Position - 0x70713
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__.func_505();
	if ((bParam0 >= iVar0 || bParam1 >= iVar0) || bParam0 == bParam1)
	{
		return 0;
	}
	iVar1 = __LIB_20__.func_260(bParam0);
	iVar2 = __LIB_20__.func_260(bParam1);
	if (iVar1 != 7 && iVar2 != 7)
	{
		iVar3 = __LIB_9__.func_604(iVar1, iVar2);
		if (iVar3 != 10)
		{
			if (__LIB_11__.func_898(iVar3) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_527(char* sParam0, char* sParam1, var uParam2)//Position - 0x20EF
{
	char cVar0[16];
	char cVar1[16];
	int iVar2;
	struct<4> Var3[15];
	bool bVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_20__.func_691(sParam0, 7))
	{
		cVar0 = { *sParam1 };
		StringCopy(&cVar1, "", 16);
		iVar2 = -1;
		cVar0 = { *sParam1 };
		StringConCat(&cVar0, "a", 16);
		StringConCat(&cVar0, "_", 16);
		StringConCat(&cVar0, &cVar1, 16);
		StringConCat(&cVar0, "1", 16);
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			StringCopy(&cVar1, "", 16);
		}
		else
		{
			StringCopy(&cVar1, "0", 16);
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "a", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
			}
			else
			{
				return 0;
			}
		}
		bVar4 = true;
		cVar0 = { *sParam1 };
		StringConCat(&cVar0, "a", 16);
		StringConCat(&cVar0, "_", 16);
		StringConCat(&cVar0, &cVar1, 16);
		StringConCat(&cVar0, "1", 16);
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			iVar2++;
			Var3[iVar2 /*4*/] = { *sParam1 };
			StringConCat(&(Var3[iVar2 /*4*/]), "a", 16);
			bVar4 = false;
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "b", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "b", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "c", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "c", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "d", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "d", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "e", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "e", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "f", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "f", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "g", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "g", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "h", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "h", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "i", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "i", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "j", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "j", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "k", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "k", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "JJJ", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "JJJ", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "m", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "m", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "n", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "n", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "o", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "o", 16);
				bVar4 = false;
			}
		}
		iVar5 = iVar2;
		iVar6 = 0;
		while (iVar6 < *uParam2)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(uParam2[iVar6 /*4*/]))
			{
				iVar7 = 0;
				while (iVar7 < Var3.f_0)
				{
					if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Var3[iVar7 /*4*/])))
					{
						if (MISC::ARE_STRINGS_EQUAL(uParam2[iVar6 /*4*/], &(Var3[iVar7 /*4*/])))
						{
							iVar8 = iVar7;
							while (iVar8 <= (Var3.f_0 - 1))
							{
								if (iVar8 + 1 < Var3.f_0)
								{
									Var3[iVar8 /*4*/] = { Var3[iVar8 + 1 /*4*/] };
								}
								else
								{
									StringCopy(&(Var3[iVar8 /*4*/]), "", 16);
								}
								iVar8++;
							}
							iVar5 = (iVar5 - 1);
						}
					}
					iVar7++;
				}
			}
			iVar6++;
		}
		iVar9 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar5 + 1);
		*sParam1 = { Var3[iVar9 /*4*/] };
		if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
		{
			return 0;
		}
		return 1;
	}
	return 0;
}

int func_528(int iParam0)//Position - 0xAE96
{
	if (iParam0 != 0)
	{
		if (__LIB_20__.func_695(0))
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if (__LIB_20__.func_695(1))
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_78583 == 50)
		{
			if (!__LIB_11__.func_945(60f))
			{
				return 1;
			}
		}
		if (((__LIB_20__.func_695(2) || Global_95447[2] == 59) || Global_95447[2] == 72) || Global_95447[2] == 60)
		{
			return 1;
		}
	}
	if (iParam0 != 3)
	{
		if ((__LIB_20__.func_695(3) || Global_95447[3] == 82) || Global_95447[3] == 83)
		{
			return 1;
		}
	}
	return 0;
}

void func_529(int iParam0, int iParam1)//Position - 0x191CD
{
	__LIB_11__.func_915(iParam0);
	Global_95447[iParam0] = iParam1;
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 2:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(1, iParam1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 2:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(1, iParam1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 2:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(1, iParam1);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 2:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(1, iParam1);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(2, iParam1);
					break;
				case 2:
					__LIB_20__.func_694(0, iParam1);
					__LIB_20__.func_694(1, iParam1);
					break;
			}
			break;
		case 12:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					break;
			}
			break;
		case 13:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					break;
			}
			break;
		case 14:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					break;
			}
			break;
		case 15:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					break;
			}
			break;
		case 25:
			switch (iParam0)
			{
				case 0:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(0, iParam1);
					break;
			}
			break;
		case 47:
			switch (iParam0)
			{
				case 2:
					__LIB_20__.func_694(3, iParam1);
					break;
				case 3:
					__LIB_20__.func_694(2, iParam1);
					break;
			}
			break;
		case 56:
			switch (iParam0)
			{
				case 2:
					__LIB_20__.func_694(0, iParam1);
					break;
				case 0:
					__LIB_20__.func_694(2, iParam1);
					break;
			}
			break;
		case 57:
			switch (iParam0)
			{
				case 2:
					__LIB_20__.func_694(0, iParam1);
					break;
				case 0:
					__LIB_20__.func_694(2, iParam1);
					break;
			}
			break;
		case 58:
			switch (iParam0)
			{
				case 2:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(2, iParam1);
					break;
			}
			break;
		case 74:
			switch (iParam0)
			{
				case 2:
					__LIB_20__.func_694(1, iParam1);
					break;
				case 1:
					__LIB_20__.func_694(2, iParam1);
					break;
			}
			break;
		case 99:
			switch (iParam0)
			{
				case 6:
					__LIB_20__.func_694(7, iParam1);
					break;
				case 7:
					__LIB_20__.func_694(6, iParam1);
					break;
			}
			break;
		case 116:
			switch (iParam0)
			{
				case 9:
					__LIB_20__.func_694(11, iParam1);
					break;
				case 11:
					__LIB_20__.func_694(9, iParam1);
					break;
			}
			break;
		case 117:
			switch (iParam0)
			{
				case 9:
					__LIB_20__.func_694(11, iParam1);
					break;
				case 11:
					__LIB_20__.func_694(9, iParam1);
					break;
			}
			break;
		case 124:
			switch (iParam0)
			{
				case 11:
					__LIB_20__.func_694(8, iParam1);
					break;
				case 8:
					__LIB_20__.func_694(11, iParam1);
					break;
			}
			break;
		case 136:
			switch (iParam0)
			{
				case 13:
					__LIB_20__.func_694(14, iParam1);
					break;
				case 14:
					__LIB_20__.func_694(13, iParam1);
					break;
			}
			break;
	}
}

void func_530(int iParam0, int iParam1)//Position - 0x3D358
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	var uVar12;
	if (__LIB_11__.func_975(iParam1, &iVar0, &iVar1, &iVar2, &iVar3, &iVar4, &iVar5, &iVar6, &iVar7, &iVar8, &iVar9, &iVar10, &iVar11, &uVar12))
	{
		__LIB_11__.func_974(iParam0, iVar0);
		__LIB_11__.func_974(iParam0, iVar1);
		__LIB_11__.func_974(iParam0, iVar2);
		__LIB_11__.func_974(iParam0, iVar3);
		__LIB_11__.func_974(iParam0, iVar4);
		__LIB_11__.func_974(iParam0, iVar5);
		__LIB_11__.func_974(iParam0, iVar6);
		__LIB_11__.func_974(iParam0, iVar7);
		__LIB_11__.func_974(iParam0, iVar8);
		__LIB_11__.func_974(iParam0, iVar9);
		__LIB_11__.func_974(iParam0, iVar10);
		__LIB_11__.func_974(iParam0, iVar11);
		if (__LIB_1__.func_133(uVar12, 1))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
		}
		if (__LIB_1__.func_133(uVar12, 2))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
			PED::SET_PED_PROP_INDEX(iParam0, 1, 0, 0, false);
		}
		if (__LIB_1__.func_133(uVar12, 4))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
			PED::SET_PED_PROP_INDEX(iParam0, 1, 1, 0, false);
		}
	}
}

int func_531(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x66E31
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_560(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_532(int* iParam0, float fParam1)//Position - 0x15ED
{
	if (__LIB_0__.func_736(iParam0))
	{
		if (__LIB_20__.func_700(iParam0) > fParam1)
		{
			return 1;
		}
	}
	return 0;
}

int func_533(int* iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x6B09
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (iParam0 == PLAYER::PLAYER_PED_ID())
	{
		return 0;
	}
	if (((iParam1 != 3 && Global_95447[iParam1] != 47) && Global_95447[iParam1] != 137) && Global_95447[iParam1] != 138)
	{
		TASK::CLEAR_PED_TASKS(iParam0);
	}
	iVar0 = 0;
	iVar1 = 0;
	iVar2 = 0;
	PED::SET_PED_RESET_FLAG(iParam0, 60, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 104, true);
	TASK::SET_PED_PATH_CAN_USE_CLIMBOVERS(iParam0, false);
	iVar0 = 1;
	PED::SET_PED_RESET_FLAG(iParam0, 62, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 294, true);
	if (Global_95447[iParam1] == 121 || Global_95447[iParam1] == 118)
	{
	}
	else
	{
		PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 2);
		iVar0 = 1;
	}
	if (Global_95447[iParam1] == 108)
	{
		PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 64);
		iVar0 = 1;
	}
	if (__LIB_11__.func_922(iParam1, &fVar3))
	{
		PED::SET_PED_CAPSULE(iParam0, fVar3);
		iVar1 = 1;
	}
	if (!bParam3)
	{
		if (__LIB_20__.func_702(iParam0, iParam1))
		{
			iVar2 = 1;
		}
	}
	__LIB_11__.func_921(&iParam0, iParam2);
	if (Global_95447[iParam1] == 116)
	{
		PED::SET_FORCE_STEP_TYPE(iParam0, true, 20, 0);
		iVar0 = 1;
	}
	else if (Global_95447[iParam1] == 41)
	{
	}
	else
	{
		PED::SET_FORCE_STEP_TYPE(iParam0, true, 0, 1);
		iVar0 = 1;
	}
	if (__LIB_11__.func_925(Global_95447[iParam1]))
	{
		PED::SET_FACIAL_IDLE_ANIM_OVERRIDE(iParam0, "mood_sleeping_1", 0);
		iVar0 = 1;
	}
	else
	{
		PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(iParam0);
	}
	if ((iVar0 || iVar1) || iVar2)
	{
		return 1;
	}
	return 0;
}

void func_534(int iParam0)//Position - 0x3A904
{
	bool bVar0;
	bVar0 = __LIB_20__.func_763(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[bVar0] = __LIB_13__.func_95();
	}
}

int func_535(int iParam0, bool bParam1, bool bParam2)//Position - 0x825ED
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 4;
	if (bParam1 == 0)
	{
		iVar0 = 0;
	}
	else if (bParam1 == 2)
	{
		iVar0 = 2;
	}
	else if (bParam1 == 1)
	{
		iVar0 = 1;
	}
	else if (bParam1 == 145)
	{
		iVar0 = 3;
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[iVar0]))
	{
		iVar1 = -1;
		iVar2 = 0;
		while (iVar2 < Global_100366)
		{
			if (iVar1 < 0)
			{
				if (!ENTITY::DOES_ENTITY_EXIST(Global_100366[iVar2]))
				{
					iVar1 = iVar2;
				}
			}
			iVar2++;
		}
		if (iVar1 < 0 || iVar1 > Global_100366)
		{
			iVar1 = 0;
		}
		Global_100366[iVar1] = Global_97919[iVar0];
		if (bParam2)
		{
			if (!PED::IS_PED_INJURED(Global_100366[iVar1]))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iParam0))
				{
					if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
					{
						TASK::CLEAR_PED_TASKS(Global_100366[iVar1]);
						TASK::TASK_SMART_FLEE_COORD(Global_100366[iVar1], ENTITY::GET_ENTITY_COORDS(iParam0, true), 1000f, -1, true, false);
					}
				}
			}
		}
	}
	Global_97919[iVar0] = iParam0;
	Global_113386.f_2363.f_539.f_2296[bParam1] = __LIB_13__.func_95();
	Global_113386.f_2363.f_539.f_2300[bParam1 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Global_113386.f_2363.f_539.f_2310[bParam1] = ENTITY::GET_ENTITY_HEADING(iParam0);
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_97919.f_47), iVar0);
	}
	return 1;
}

void func_536(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x2AB06
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_29(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_537(int* iParam0, int iParam1, bool bParam2, float fParam3, int iParam4)//Position - 0x2A3DF
{
	struct<3> Var0;
	struct<3> Var1;
	if (iParam4 == 1 && !HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_0__.func_392(ENTITY::GET_ENTITY_COORDS(iParam1, true), 0);
		if (bParam2)
		{
			HUD::SET_BLIP_COLOUR(*iParam0, 3);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, "BLIP_FRIEND" /* GXT: Friend */);
		}
		else
		{
			HUD::SET_BLIP_COLOUR(*iParam0, 1);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, "BLIP_ENEMY" /* GXT: Enemy */);
		}
		if (ENTITY::IS_ENTITY_A_PED(iParam1))
		{
			HUD::SET_BLIP_SCALE(*iParam0, 0.7f);
		}
	}
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		Var0 = { HUD::GET_BLIP_COORDS(*iParam0) };
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		Var0.f_0 = (Var0.f_0 + ((Var1.f_0 - Var0.f_0) / fParam3));
		Var0.f_1 = (Var0.f_1 + ((Var1.f_1 - Var0.f_1) / fParam3));
		Var0.f_2 = (Var0.f_2 + ((Var1.f_2 - Var0.f_2) / fParam3));
		HUD::SET_BLIP_COORDS(*iParam0, Var0);
	}
}

void func_538(var uParam0)//Position - 0x2EAB2
{
	uParam0->f_126 = 0;
	if (uParam0->f_129 == 0)
	{
	}
	switch (uParam0->f_129)
	{
		case 1:
			uParam0->f_130 = 8;
			*uParam0 = { -331.1481f, 4753.729f, 227.6643f };
			uParam0->f_3 = 229f;
			uParam0->f_128 = 2;
			__LIB_11__.func_985(uParam0, -329.1481f, 4749.729f, 228.6643f);
			__LIB_11__.func_985(uParam0, -291.5515f, 4691.305f, 235.7776f);
			__LIB_11__.func_985(uParam0, -310.1067f, 4684.866f, 246.5917f);
			__LIB_11__.func_985(uParam0, -415.3808f, 4672.355f, 253.3204f);
			__LIB_11__.func_985(uParam0, -430.98f, 4707.3994f, 253.2198f);
			__LIB_11__.func_985(uParam0, -447.766f, 4737.7837f, 244.1033f);
			__LIB_11__.func_985(uParam0, -502.0252f, 4732.673f, 239.5285f);
			__LIB_11__.func_985(uParam0, -579.2366f, 4750.397f, 211.4045f);
			__LIB_11__.func_985(uParam0, -622.6068f, 4716.045f, 225.8445f);
			__LIB_11__.func_985(uParam0, -672.1638f, 4728.694f, 238.2206f);
			__LIB_11__.func_985(uParam0, -736.2177f, 4783.163f, 226.502f);
			__LIB_11__.func_985(uParam0, -795.5958f, 4867.9976f, 255.8227f);
			__LIB_11__.func_985(uParam0, -855.1999f, 4865.062f, 289.7517f);
			__LIB_11__.func_985(uParam0, -876.2197f, 4796.1655f, 298.3487f);
			__LIB_11__.func_985(uParam0, -944.431f, 4773.4795f, 284.3422f);
			__LIB_11__.func_985(uParam0, -1026.6361f, 4834.1626f, 255.4192f);
			__LIB_11__.func_985(uParam0, -1070.0287f, 4825.063f, 231.3936f);
			__LIB_11__.func_985(uParam0, -1089.925f, 4804.061f, 216.7211f);
			__LIB_11__.func_985(uParam0, -1279.2612f, 4841.332f, 151.8451f);
			__LIB_11__.func_985(uParam0, -1375.7675f, 4798.2275f, 126.2156f);
			__LIB_11__.func_985(uParam0, -1467.242f, 4803.929f, 81.1326f);
			__LIB_11__.func_985(uParam0, -1485.8629f, 4750.4497f, 58.8107f);
			__LIB_11__.func_985(uParam0, -1541.9647f, 4738.9575f, 50.8111f);
			__LIB_11__.func_985(uParam0, -1581.132f, 4839.46f, 52.7062f);
			__LIB_11__.func_985(uParam0, -1494.7415f, 4971.167f, 46.7483f);
			uParam0->f_127 = 0;
			uParam0->f_125 = 15f;
			break;
		case 2:
			uParam0->f_130 = 8;
			*uParam0 = { 376.5668f, 1058.3768f, 236.1919f };
			uParam0->f_3 = 2.9613f;
			uParam0->f_128 = 1;
			__LIB_11__.func_985(uParam0, 374.2899f, 1074.4827f, 235.7123f);
			__LIB_11__.func_985(uParam0, 362.0448f, 1110.6335f, 235.1055f);
			__LIB_11__.func_985(uParam0, 319.5104f, 1161.1849f, 235.4029f);
			__LIB_11__.func_985(uParam0, 300.0755f, 1237.2719f, 234.0581f);
			__LIB_11__.func_985(uParam0, 269.5442f, 1263.0739f, 232.5312f);
			__LIB_11__.func_985(uParam0, 240.08f, 1180.87f, 224.46f);
			__LIB_11__.func_985(uParam0, 214.48f, 1216.27f, 224.59f);
			__LIB_11__.func_985(uParam0, 183.42f, 1205.29f, 224.59f);
			__LIB_11__.func_985(uParam0, 188.68f, 1187.18f, 224.59f);
			__LIB_11__.func_985(uParam0, 198.22f, 1180.16f, 226.01f);
			__LIB_11__.func_985(uParam0, 203.38f, 1121.57f, 224.59f);
			__LIB_11__.func_985(uParam0, 260.94f, 1135.36f, 220.6f);
			__LIB_11__.func_985(uParam0, 290.6088f, 1094.6976f, 215.5821f);
			__LIB_11__.func_985(uParam0, 309.9068f, 1019.8271f, 209.4761f);
			uParam0->f_127 = 0;
			uParam0->f_125 = 15f;
			break;
		case 3:
			uParam0->f_130 = 8;
			*uParam0 = { 857.7981f, 1278.2418f, 358.1998f };
			uParam0->f_3 = 152.4354f;
			uParam0->f_128 = 1;
			__LIB_11__.func_985(uParam0, 827.49f, 1278.53f, 359.37f);
			__LIB_11__.func_985(uParam0, 846.14f, 1276.5f, 358.83f);
			__LIB_11__.func_985(uParam0, 835.834f, 1244.0568f, 351.752f);
			__LIB_11__.func_985(uParam0, 799.0862f, 1223.3503f, 340.1938f);
			__LIB_11__.func_985(uParam0, 741.2345f, 1201.0686f, 325.2563f);
			__LIB_11__.func_985(uParam0, 676.7847f, 1219.0261f, 322.9875f);
			__LIB_11__.func_985(uParam0, 624.7384f, 1217.0782f, 315.5874f);
			__LIB_11__.func_985(uParam0, 566.5258f, 1191.4326f, 301.3754f);
			__LIB_11__.func_985(uParam0, 519.7023f, 1226.5149f, 290.0847f);
			__LIB_11__.func_985(uParam0, 469.1648f, 1233.8317f, 277.0887f);
			__LIB_11__.func_985(uParam0, 439.77f, 1292.51f, 270.32f);
			__LIB_11__.func_985(uParam0, 407.94f, 1253.81f, 258f);
			__LIB_11__.func_985(uParam0, 409.55f, 1205.16f, 249.29f);
			__LIB_11__.func_985(uParam0, 422.5302f, 1114.8162f, 233f);
			__LIB_11__.func_985(uParam0, 436.9201f, 1045.166f, 235.1103f);
			__LIB_11__.func_985(uParam0, 406.2167f, 1031.1447f, 236.0167f);
			__LIB_11__.func_985(uParam0, 380.8393f, 1048.0707f, 236.4371f);
			__LIB_11__.func_985(uParam0, 374.2899f, 1074.4827f, 235.7123f);
			__LIB_11__.func_985(uParam0, 362.0448f, 1110.6335f, 235.1055f);
			__LIB_11__.func_985(uParam0, 319.5104f, 1161.1849f, 235.4029f);
			__LIB_11__.func_985(uParam0, 300.0755f, 1237.2719f, 234.0581f);
			__LIB_11__.func_985(uParam0, 267.55f, 1261.09f, 232f);
			__LIB_11__.func_985(uParam0, 252.79f, 1238.97f, 230f);
			__LIB_11__.func_985(uParam0, 268.05f, 1137f, 220.53f);
			__LIB_11__.func_985(uParam0, 307.27f, 1050.44f, 210.96f);
			__LIB_11__.func_985(uParam0, 298.58f, 989.24f, 209.66f);
			__LIB_11__.func_985(uParam0, 279.85f, 946.37f, 209.82f);
			uParam0->f_127 = 0;
			uParam0->f_125 = 15f;
			break;
		case 4:
			uParam0->f_130 = 8;
			*uParam0 = { 857.7981f, 1278.2418f, 358.1998f };
			uParam0->f_3 = 152.4354f;
			uParam0->f_128 = 1;
			__LIB_11__.func_985(uParam0, 827.49f, 1278.53f, 359.37f);
			__LIB_11__.func_985(uParam0, 850.14f, 1280.21f, 358.57f);
			__LIB_11__.func_985(uParam0, 852.6194f, 1265.3116f, 357.7758f);
			__LIB_11__.func_985(uParam0, 835.834f, 1244.0568f, 351.752f);
			__LIB_11__.func_985(uParam0, 799.0862f, 1223.3503f, 340.1938f);
			__LIB_11__.func_985(uParam0, 741.2345f, 1201.0686f, 325.2563f);
			__LIB_11__.func_985(uParam0, 676.7847f, 1219.0261f, 322.9875f);
			__LIB_11__.func_985(uParam0, 624.7384f, 1217.0782f, 315.5874f);
			__LIB_11__.func_985(uParam0, 566.5258f, 1191.4326f, 301.3754f);
			__LIB_11__.func_985(uParam0, 519.7023f, 1226.5149f, 290.0847f);
			__LIB_11__.func_985(uParam0, 469.1648f, 1233.8317f, 277.0887f);
			__LIB_11__.func_985(uParam0, 445.0087f, 1295.1957f, 271.5344f);
			__LIB_11__.func_985(uParam0, 411.0428f, 1234.2543f, 254.587f);
			__LIB_11__.func_985(uParam0, 438.2f, 1112.65f, 231.8f);
			__LIB_11__.func_985(uParam0, 500.16f, 1096.98f, 229.77f);
			__LIB_11__.func_985(uParam0, 532.43f, 1064.83f, 223.78f);
			__LIB_11__.func_985(uParam0, 533.5f, 1027.03f, 216.61f);
			__LIB_11__.func_985(uParam0, 491.57f, 968.53f, 204.7f);
			__LIB_11__.func_985(uParam0, 462.99f, 893.08f, 197.09f);
			__LIB_11__.func_985(uParam0, 416.58f, 894.3f, 198f);
			__LIB_11__.func_985(uParam0, 399.39f, 933.08f, 201.46f);
			__LIB_11__.func_985(uParam0, 377.99f, 993.49f, 207.88f);
			__LIB_11__.func_985(uParam0, 328.88f, 1007.05f, 209.52f);
			uParam0->f_127 = 0;
			uParam0->f_125 = 15f;
			break;
		case 5:
			uParam0->f_130 = 8;
			*uParam0 = { 500.677f, 5598.262f, 794.8943f };
			uParam0->f_3 = 156.5849f;
			uParam0->f_128 = 2;
			__LIB_11__.func_985(uParam0, 481.4428f, 5521.119f, 771.8f);
			__LIB_11__.func_985(uParam0, 435.2f, 5507.4f, 743.7f);
			__LIB_11__.func_985(uParam0, 380.6f, 5498.7f, 713.3f);
			__LIB_11__.func_985(uParam0, 349.6f, 5447.3f, 675.5f);
			__LIB_11__.func_985(uParam0, 312.5256f, 5385.502f, 642.6f);
			__LIB_11__.func_985(uParam0, 276.9f, 5347.8f, 630.6f);
			__LIB_11__.func_985(uParam0, 226.4586f, 5295.504f, 618.1f);
			__LIB_11__.func_985(uParam0, 231.5871f, 5249.3643f, 600.8f);
			__LIB_11__.func_985(uParam0, 201.4f, 5247.7f, 590f);
			__LIB_11__.func_985(uParam0, 172.3f, 5203.5f, 570f);
			__LIB_11__.func_985(uParam0, 145.6254f, 5185.032f, 551.3f);
			__LIB_11__.func_985(uParam0, 130.1801f, 5224.4473f, 541.8f);
			__LIB_11__.func_985(uParam0, 113.3f, 5174.3f, 526.5f);
			__LIB_11__.func_985(uParam0, 113.9507f, 5107.92f, 509.5f);
			__LIB_11__.func_985(uParam0, 88.1f, 5073.2f, 491.5f);
			__LIB_11__.func_985(uParam0, 89.5557f, 5017.5713f, 460.8f);
			__LIB_11__.func_985(uParam0, 30.4282f, 5050.1685f, 454.2f);
			__LIB_11__.func_985(uParam0, 7.4203f, 5010.681f, 443.9f);
			__LIB_11__.func_985(uParam0, -46.7f, 5005.9f, 408.6f);
			__LIB_11__.func_985(uParam0, -65.7f, 4955.6f, 392.4f);
			__LIB_11__.func_985(uParam0, -131.1f, 4919f, 353.3f);
			__LIB_11__.func_985(uParam0, -184.3982f, 4900.4634f, 329.1f);
			__LIB_11__.func_985(uParam0, -271.4f, 4916.4f, 290f);
			__LIB_11__.func_985(uParam0, -304f, 4950.3f, 261f);
			__LIB_11__.func_985(uParam0, -335.4192f, 4997.4253f, 220.3f);
			__LIB_11__.func_985(uParam0, -366.6329f, 4919.2505f, 196f);
			__LIB_11__.func_985(uParam0, -460.1884f, 4883.4795f, 186.7f);
			__LIB_11__.func_985(uParam0, -544.8522f, 4874.6475f, 167.6f);
			__LIB_11__.func_985(uParam0, -573.751f, 4893.331f, 168.5f);
			__LIB_11__.func_985(uParam0, -590.3f, 4962.9f, 156.5f);
			__LIB_11__.func_985(uParam0, -625.4877f, 5013.7354f, 143.4f);
			__LIB_11__.func_985(uParam0, -634.5757f, 5056.1675f, 142.8f);
			__LIB_11__.func_985(uParam0, -706.3599f, 5069.932f, 140.4f);
			__LIB_11__.func_985(uParam0, -762.2672f, 5126.6323f, 135.7f);
			__LIB_11__.func_985(uParam0, -764.7f, 5192.5f, 111.5f);
			__LIB_11__.func_985(uParam0, -789.0667f, 5263.0425f, 88.1f);
			__LIB_11__.func_985(uParam0, -849.2f, 5259.7f, 86f);
			uParam0->f_127 = 0;
			uParam0->f_125 = 15f;
			break;
	}
}

void func_539(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x30AD0
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, func_15(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_540(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x22FE0
{
	if (iParam0 != 198)
	{
		if (Global_78319)
		{
			Global_42586.f_227[iParam0] = iParam1;
		}
		else
		{
			Global_113386.f_7261.f_227[iParam0] = iParam1;
		}
		Global_39592[iParam0] = iParam2;
		Global_39791[iParam0] = 1;
		__LIB_20__.func_717(iParam0, bParam3, iParam4, 0);
		__LIB_6__.func_791(iParam0, iParam1);
	}
}

void func_541(char* sParam0, bool bParam1)//Position - 0x3774A
{
	__LIB_26__.func_502(bParam1);
	CUTSCENE::REQUEST_CUTSCENE(sParam0, 8);
}

void func_542(var uParam0, int iParam1, int iParam2)//Position - 0xE180
{
	__LIB_6__.func_760(iParam1, &(uParam0->f_12));
	uParam0->f_7 = __LIB_20__.func_510(iParam1, 145, 0);
	uParam0->f_11 = __LIB_0__.func_119(iParam1);
	if (!uParam0->f_7)
	{
		if (!uParam0->f_10)
		{
			uParam0->f_10 = __LIB_0__.func_329(iParam1);
		}
	}
	if (iParam2 == 1)
	{
		*uParam0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		uParam0->f_6 = ENTITY::GET_ENTITY_HEADING(iParam1);
		uParam0->f_3 = { ENTITY::GET_ENTITY_VELOCITY(iParam1) };
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam1, -1154.3256f, -1523.8713f, 3.262189f, -1158.4525f, -1517.7496f, 6.374244f, 13f, false, true, 0))
		{
			*uParam0 = { -1160.0951f, -1515.407f, 3.1496f };
			uParam0->f_6 = 305.6424f;
		}
		if (Global_78042 == iParam1)
		{
			uParam0->f_9 = 1;
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		uParam0->f_8 = 1;
	}
	else
	{
		uParam0->f_8 = 0;
	}
}

int func_543(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0xE32C
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, __LIB_20__.func_728(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_544(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0xE498
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_20__.func_509(iParam0);
		iVar1 = 0;
		while (iVar1 < 12)
		{
			__LIB_20__.func_607(iParam0, iVar1, &(uParam1->f_13[iVar1]), uParam1[iVar1], &(uParam1->f_26[iVar1]), iParam2, 145);
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 9)
		{
			__LIB_20__.func_606(iParam0, iVar1, &(uParam1->f_39[iVar1]), &(uParam1->f_49[iVar1]), iParam2, 145);
			iVar1++;
		}
		if (__LIB_0__.func_317(iVar0))
		{
			uParam1->f_59 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_59;
			uParam1->f_60 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_60;
			uParam1->f_61 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_61;
			uParam1->f_62 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_62;
			uParam1->f_63 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_63;
			uParam1->f_64 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_64;
		}
		else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::GET_ENTITY_MODEL(iParam0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_0__.func_421(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__.func_534(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__.func_534(753, iParam3, 0);
			}
			uParam1->f_60 = __LIB_0__.func_534(754, iParam3, 0);
			uParam1->f_61 = __LIB_0__.func_534(755, iParam3, 0);
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (__LIB_0__.func_421(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__.func_534(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__.func_534(753, iParam3, 0);
			}
		}
	}
}

void func_545()//Position - 0x3B350
{
	if (__LIB_0__.func_39(14))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[0 /*29*/])
			{
				Global_20266 = 0;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[1 /*29*/])
			{
				Global_20266 = 1;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[2 /*29*/])
			{
				Global_20266 = 2;
			}
			else
			{
				Global_20266 = 0;
			}
		}
	}
	else
	{
		Global_20266 = __LIB_20__.func_728();
		if (Global_20266 == 145)
		{
			Global_20266 = 3;
		}
		if (Global_78319)
		{
			Global_20266 = 3;
		}
		if (Global_20266 > 3)
		{
			Global_20266 = 3;
		}
	}
}

void func_546()//Position - 0x924DF
{
	Global_100476 = 1;
	if (PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_20__.func_728())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MARRE" /* GXT: ~s~Michael was arrested. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FARRE" /* GXT: ~s~Franklin was arrested. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TARRE" /* GXT: ~s~Trevor was arrested. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
	}
	else if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_20__.func_728())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MDIED" /* GXT: ~s~Michael died. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FDIED" /* GXT: ~s~Franklin died. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TDIED" /* GXT: ~s~Trevor died. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
		MISC::SET_BIT(&(Global_100441.f_20), 25);
	}
}

int func_547()//Position - 0x93BF4
{
	if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
	{
		return 0;
	}
	switch (__LIB_20__.func_728())
	{
		case 0:
			if (Global_113386.f_9085.f_99.f_58[65])
			{
				return 1;
			}
			break;
		case 1:
			if (Global_113386.f_9085.f_99.f_58[66])
			{
				return 1;
			}
			break;
		case 2:
			if (Global_113386.f_9085.f_99.f_58[65])
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_548(int iParam0)//Position - 0x93C73
{
	bool bVar0;
	bVar0 = __LIB_20__.func_728();
	if (__LIB_6__.func_813(iParam0))
	{
		return 1;
	}
	if (iParam0 == 49)
	{
		if (bVar0 == 1)
		{
			if (BitTest(Global_113386.f_7229[5], 0) || BitTest(Global_113386.f_7229[6], 0))
			{
				return 0;
			}
		}
		if (__LIB_0__.func_317(bVar0))
		{
			if (BitTest(Global_95468[5], bVar0))
			{
				return 0;
			}
		}
	}
	switch (iParam0)
	{
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
			if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[0], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[0], bVar0))
				{
					if (iParam0 != 40)
					{
						return 0;
					}
					else
					{
						return 1;
					}
				}
			}
			break;
		case 47:
		case 48:
		case 49:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[5], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[5], bVar0))
				{
					return 0;
				}
			}
			break;
		case 50:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[6], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[6], bVar0))
				{
					return 0;
				}
			}
			break;
		case 51:
		case 52:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[2], 0))
				{
					return 0;
				}
				if (__LIB_0__.func_317(bVar0))
				{
					if (BitTest(Global_95468[2], bVar0))
					{
						return 0;
					}
				}
			}
			else if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[1], 0))
				{
					return 0;
				}
				if (__LIB_0__.func_317(bVar0))
				{
					if (BitTest(Global_95468[1], bVar0))
					{
						return 0;
					}
				}
			}
			break;
		case 53:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[3], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[3], bVar0))
				{
					return 0;
				}
			}
			break;
		default:
			return 0;
			break;
	}
	return 1;
}

void func_549(int iParam0)//Position - 0x9853B
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_20__.func_509(iParam0);
		__LIB_19__.func_976(iParam0, &(Global_113386.f_2363.f_539.f_1764));
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar1);
			iVar1++;
		}
	}
}

void func_550(bool bParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x1579
{
	if (bParam0)
	{
		__LIB_0__.func_296();
	}
	if (bParam1)
	{
		if (!__LIB_0__.func_75() || (bParam0 && !bParam3))
		{
			HUD::CLEAR_PRINTS();
		}
		HUD::CLEAR_REMINDER_MESSAGE();
	}
	if (bParam2)
	{
		HUD::CLEAR_HELP(true);
	}
}

void func_551()//Position - 0x6D80D
{
	int iVar0;
	int iVar1;
	__LIB_26__.func_429();
	iVar0 = HUD::GET_MAIN_PLAYER_BLIP_ID();
	if (HUD::DOES_BLIP_EXIST(iVar0))
	{
		iVar1 = Global_113386.f_2363.f_539.f_4321;
		if (__LIB_0__.func_39(14))
		{
			iVar1 = __LIB_20__.func_763(PLAYER::PLAYER_PED_ID());
		}
		if (iVar1 == 0)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_MICHAEL" /* GXT: Michael */);
		}
		else if (iVar1 == 1)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_FRANKLIN" /* GXT: Franklin */);
		}
		else if (iVar1 == 2)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_TREV" /* GXT: Trevor */);
		}
		else
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_PLAYER" /* GXT: Player */);
		}
	}
}

int func_552(var uParam0)//Position - 0x75666
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_28 = __LIB_0__.func_408(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_28 = __LIB_11__.func_137(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_28 = __LIB_11__.func_136(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_28 = __LIB_20__.func_443(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_28);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_11__.func_135(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_11__.func_150(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_11__.func_150(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_11__.func_134(), ""))
				{
					__LIB_11__.func_150(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_11__.func_133(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_11__.func_133(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_11__.func_132(0, 0, 1, 1);
	}
	else
	{
		__LIB_11__.func_132(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_11__.func_131(uParam0);
	return iVar0;
}

int func_553(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x8DA08
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, __LIB_26__.func_499(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_554(int iParam0, int iParam1, int iParam2)//Position - 0xAE1F6
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (*iParam1)
		{
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)
			{
				if (*iParam2 == 0)
				{
					*iParam2 = (MISC::GET_GAME_TIMER() + MISC::GET_RANDOM_INT_IN_RANGE(200, 800));
				}
				else if (MISC::GET_GAME_TIMER() >= *iParam2)
				{
					__LIB_12__.func_4(iParam0, 0, iParam1, iParam2);
				}
			}
		}
		else if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
		{
			if (*iParam2 == 0)
			{
				*iParam2 = (MISC::GET_GAME_TIMER() + MISC::GET_RANDOM_INT_IN_RANGE(1000, 4000));
			}
			else if (MISC::GET_GAME_TIMER() >= *iParam2)
			{
				__LIB_12__.func_4(iParam0, 1, iParam1, iParam2);
			}
		}
	}
}

void func_555(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0xAEB21
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__.func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_6__.func_824(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_6__.func_769(iVar0, __LIB_26__.func_499(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__.func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_556(int iParam0, var uParam1)//Position - 0xB13AD
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_26__.func_499())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_26__.func_499())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_26__.func_499() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

void func_557(int iParam0, bool bParam1)//Position - 0x2F05
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_20__.func_509(iParam0);
	if (__LIB_0__.func_317(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_18__.func_178(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

void func_558()//Position - 0x3C328
{
	if (Global_97753)
	{
		__LIB_20__.func_605();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_11__.func_174(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_559(int iParam0, struct<98> Param1)//Position - 0x950E0
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*iParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*iParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*iParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*iParam0, true);
		}
	}
	if (__LIB_0__.func_283(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Param1.f_90);
			}
		}
	}
	__LIB_18__.func_176(iParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Param1.f_96);
}

int func_560(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x43A4A
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_244(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

void func_561(struct<3> Param0, struct<3> Param1, float fParam2)//Position - 0x8326C
{
	bool bVar0;
	int iVar1;
	bVar0 = true;
	if (!bLocal_41)
	{
		if (!__LIB_12__.func_23(Param0, Param1, fParam2, 200f))
		{
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				iVar1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
				if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
				{
					if (ENTITY::IS_ENTITY_AT_COORD(iVar1, Param0, fParam2, fParam2, fParam2, false, true, 0))
					{
						bVar0 = false;
					}
				}
			}
			if (bVar0)
			{
				MISC::CLEAR_AREA_OF_VEHICLES(Param0, fParam2, false, false, false, false, false, false, 0);
			}
		}
	}
}

void func_562(int iParam0, int iParam1, var uParam2, float fParam3, float fParam4, float fParam5, float fParam6, float fParam7, float fParam8, float fParam9, bool bParam10)//Position - 0xA028D
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	float fVar7;
	float fVar8;
	int iVar9;
	int iVar10;
	if (iLocal_44 == 0)
	{
		if (*uParam2 < fParam3)
		{
			*uParam2 = fParam3;
			iLocal_44 = 1;
		}
	}
	if (fParam8 < 0f)
	{
		fParam8 = fLocal_92;
	}
	fVar0 = (fParam3 * fParam7);
	if (!fVar0 > fParam3)
	{
		fVar0 = (fParam3 + 0.1f);
	}
	fVar5 = (fParam3 * fParam9);
	fVar6 = (((fParam6 - fParam5) * 0.4f) + fParam5);
	fVar2 = __LIB_12__.func_35(iParam0, iParam1);
	if (fVar2 < 0f)
	{
		fVar2 = (fVar2 * -1f);
	}
	fVar3 = fVar2;
	if (fVar3 < fParam4)
	{
		fVar3 = fParam4;
	}
	if (fVar3 > fVar6)
	{
		fVar3 = fVar6;
	}
	fVar4 = fParam3;
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (__LIB_11__.func_140(iParam1, iParam0))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(iParam1, false))
			{
				fVar4 = fVar0;
			}
			else if (fVar2 < 50f)
			{
				fVar4 = fParam3;
			}
			else
			{
				fVar4 = fVar0;
			}
		}
		else if (fVar2 < fParam5)
		{
			if (__LIB_12__.func_34(iParam0, iParam1) < fParam5)
			{
				fVar1 = __LIB_12__.func_33(iParam0, iParam1);
				fVar1 = (fVar1 + -15f);
				if (fVar1 < 0f)
				{
					fVar1 = 0f;
				}
				if (fVar1 > 75f)
				{
					fVar1 = 75f;
				}
				fVar7 = ((75f - fVar1) / 75f);
			}
			else
			{
				fVar7 = 1f;
			}
			fVar4 = ((((((fParam5 - fParam4) - (fVar3 - fParam4)) / (fParam5 - fParam4)) * (fVar0 - fParam3)) * fVar7) + fParam3);
		}
		else if (fVar2 > fParam6)
		{
			fVar4 = fVar5;
			iLocal_45 = 1;
		}
		else if (iLocal_45)
		{
			if (fVar2 < fVar6)
			{
				fVar4 = fParam3;
				iLocal_45 = 0;
			}
			else
			{
				fVar4 = fVar5;
			}
		}
		else
		{
			fVar4 = fParam3;
		}
	}
	fVar1 = (fVar4 - *uParam2);
	if (fVar1 > 0f)
	{
		fVar1 = MISC::GET_FRAME_TIME();
		fVar8 = ((fLocal_99 * fParam3) * fVar1);
		fVar1 = (fVar4 - *uParam2);
		if (fVar1 > fVar8)
		{
			fVar1 = fVar8;
		}
		*uParam2 = (*uParam2 + fVar1);
	}
	else
	{
		fVar1 = MISC::GET_FRAME_TIME();
		fVar8 = ((fLocal_100 * fParam3) * fVar1);
		fVar1 = (fVar4 - *uParam2);
		if (fVar1 < (fVar8 * -1f))
		{
			fVar1 = (fVar8 * -1f);
		}
		*uParam2 = (*uParam2 + fVar1);
	}
	if (bParam10)
	{
		if (!PED::IS_PED_INJURED(iParam1))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(iParam1, false))
			{
				iVar9 = PED::GET_VEHICLE_PED_IS_IN(iParam1, false);
				if (!ENTITY::IS_ENTITY_DEAD(iVar9, false))
				{
					iVar10 = ENTITY::GET_ENTITY_MODEL(iVar9);
					if (VEHICLE::IS_THIS_MODEL_A_CAR(iVar10) || VEHICLE::IS_THIS_MODEL_A_BIKE(iVar10))
					{
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar9, false))
						{
							fVar1 = fVar4;
							if (fVar1 < fParam3)
							{
								fVar1 = fParam3;
							}
							fVar1 = (fVar1 - fParam3);
							fVar1 = (fVar1 / (fVar0 - fParam3));
							fVar1 = (fVar1 * fParam8);
							fVar1 = (fVar1 * (fLocal_90 - fLocal_91));
							fVar1 = (fVar1 + fLocal_91);
							fLocal_89 = fVar1;
							if (fLocal_89 < fLocal_91)
							{
								fLocal_89 = fLocal_91;
							}
							if (fLocal_89 > fLocal_90)
							{
								fLocal_89 = fLocal_90;
							}
							PLAYER::SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(PLAYER::PLAYER_ID(), fLocal_89);
						}
					}
				}
			}
		}
	}
}

void func_563()//Position - 0xA5E34
{
	if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			__LIB_11__.func_884();
		}
		return;
	}
	if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
	{
		__LIB_11__.func_884();
		return;
	}
	__LIB_20__.func_678();
	if (Global_100164 > 0)
	{
		return;
	}
	STREAMING::ALLOW_PLAYER_SWITCH_OUTRO();
}

int func_564(int iParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, bool bParam5, bool bParam6, bool bParam7)//Position - 0x3F35
{
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (__LIB_12__.func_52(iParam1, "Loading", 0))
		{
			*iParam0 = PED::CREATE_PED(26, iParam1, Param2, fParam3, true, true);
			if (__LIB_1__.func_197(*iParam0))
			{
				if (bParam5)
				{
					ENTITY::FREEZE_ENTITY_POSITION(*iParam0, true);
				}
				if (bParam6)
				{
					PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(*iParam0, bParam6);
				}
				if (!bParam7)
				{
					PED::SET_PED_CAN_BE_TARGETTED(*iParam0, bParam7);
				}
				if (bParam4)
				{
					__LIB_12__.func_51(iParam1, 1);
				}
				return 1;
			}
		}
	}
	else if (__LIB_1__.func_197(*iParam0))
	{
		return 1;
	}
	return 0;
}

void func_565()//Position - 0x2C2
{
	if (((BitTest(uLocal_49, 0) && !BitTest(uLocal_49, 1)) && !BitTest(uLocal_49, 14)) && __LIB_20__.func_750())
	{
		if (__LIB_9__.func_596(0, 172, 0) || __LIB_9__.func_596(0, 173, 0))
		{
			iLocal_78 = MISC::GET_GAME_TIMER();
		}
		if (iLocal_78 != -1)
		{
			if ((MISC::GET_GAME_TIMER() - iLocal_78) < 200)
			{
				iLocal_43 = __LIB_20__.func_749();
			}
			else
			{
				iLocal_78 = -1;
			}
		}
	}
	else
	{
		iLocal_43 = 145;
		iLocal_78 = -1;
	}
}

void func_566(int iParam0, bool bParam1)//Position - 0x7205
{
	Global_113386.f_10049.f_128 = iParam0;
	iLocal_37 = iParam0;
	if (bParam1)
	{
		return;
	}
	__LIB_0__.func_533();
}

int func_567()//Position - 0x7D6B
{
	if (__LIB_20__.func_753(33, 37) >= 4)
	{
		return 1;
	}
	return 0;
}

void func_568(bool bParam0)//Position - 0x7F4B
{
	if (bParam0)
	{
		__LIB_12__.func_45(1527885205, 0, __LIB_18__.func_173(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
	else if (!__LIB_0__.func_176(3))
	{
		__LIB_12__.func_45(-224691627, 0, __LIB_18__.func_173(), 23, 3, 6000, 6000, -1, 50, -1, 0);
	}
	else
	{
		__LIB_12__.func_45(-224691627, 0, __LIB_18__.func_173(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
}

struct<4> func_569(bool bParam0)//Position - 0x8450
{
	struct<4> Var0;
	if (bParam0)
	{
		switch (__LIB_18__.func_173())
		{
			case 1:
				StringCopy(&Var0, "FBI4_ISAGO", 16);
				break;
			case 2:
				StringCopy(&Var0, "FBI4_ISAGO", 16);
				break;
		}
	}
	else
	{
		switch (__LIB_18__.func_173())
		{
			case 1:
				StringCopy(&Var0, "FBI4_THATSIT", 16);
				break;
			case 2:
				StringCopy(&Var0, "FBI4_THATSIT", 16);
				break;
			}
	}
	return Var0;
}

int func_570(struct<3> Param0)//Position - 0xB74B
{
	float fVar0;
	fVar0 = SYSTEM::VDIST2(Param0, Global_95644[__LIB_11__.func_904(Param0, 0) /*9*/].f_3);
	if (fVar0 <= 40000f)
	{
		return 1;
	}
	return 0;
}

int func_571(struct<3> Param0)//Position - 0xB8A6
{
	if (!__LIB_0__.func_528(1))
	{
		if (!__LIB_0__.func_528(0))
		{
			if (__LIB_20__.func_756(Param0, 0))
			{
				return 1;
			}
		}
		else if (__LIB_20__.func_756(Param0, 1))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(7))
	{
		if (!__LIB_0__.func_528(4))
		{
			if (__LIB_20__.func_756(Param0, 4))
			{
				return 1;
			}
		}
		else
		{
			if (__LIB_20__.func_756(Param0, 5))
			{
				return 1;
			}
			if (__LIB_20__.func_756(Param0, 6))
			{
				return 1;
			}
		}
	}
	if (__LIB_20__.func_756(Param0, 2))
	{
		return 1;
	}
	if (__LIB_20__.func_756(Param0, 3))
	{
		return 1;
	}
	if (!__LIB_0__.func_528(8))
	{
		if (__LIB_20__.func_756(Param0, 8))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(16))
	{
		if (__LIB_20__.func_756(Param0, 16))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(15))
		{
			if (__LIB_20__.func_756(Param0, 15))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(14))
			{
				if (__LIB_20__.func_756(Param0, 14))
				{
					return 1;
				}
				if (!__LIB_0__.func_528(13))
				{
					if (__LIB_20__.func_756(Param0, 13))
					{
						return 1;
					}
					if (!__LIB_0__.func_528(12))
					{
						if (__LIB_20__.func_756(Param0, 12))
						{
							return 1;
						}
						if (!__LIB_0__.func_528(11))
						{
							if (__LIB_20__.func_756(Param0, 11))
							{
								return 1;
							}
							if (!__LIB_0__.func_528(10))
							{
								if (__LIB_20__.func_756(Param0, 10))
								{
									return 1;
								}
								if (!__LIB_0__.func_528(9))
								{
									if (__LIB_20__.func_756(Param0, 9))
									{
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
	if (!__LIB_0__.func_528(20))
	{
		if (__LIB_20__.func_756(Param0, 20))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(19))
		{
			if (__LIB_20__.func_756(Param0, 19))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(18))
			{
				if (__LIB_20__.func_756(Param0, 18))
				{
					return 1;
				}
				if (!__LIB_0__.func_528(17))
				{
					if (__LIB_20__.func_756(Param0, 17))
					{
						return 1;
					}
				}
			}
		}
	}
	if (!__LIB_0__.func_528(21))
	{
		if (__LIB_20__.func_756(Param0, 21))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(22))
	{
		if (__LIB_20__.func_756(Param0, 22))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(23))
	{
		if (__LIB_20__.func_756(Param0, 23))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(24))
	{
		if (__LIB_20__.func_756(Param0, 24))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(26))
	{
		if (!__LIB_0__.func_528(25))
		{
			if (__LIB_20__.func_756(Param0, 25))
			{
				return 1;
			}
		}
		else if (__LIB_20__.func_756(Param0, 26))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(30))
	{
		if (__LIB_20__.func_756(Param0, 30))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(29))
		{
			if (__LIB_20__.func_756(Param0, 29))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(28))
			{
				if (__LIB_20__.func_756(Param0, 28))
				{
					return 1;
				}
				if (!__LIB_0__.func_528(27))
				{
					if (__LIB_20__.func_756(Param0, 27))
					{
						return 1;
					}
				}
			}
		}
	}
	if (!__LIB_0__.func_528(31))
	{
		if (__LIB_20__.func_756(Param0, 31))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(34))
	{
		if (__LIB_20__.func_756(Param0, 34))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(33))
		{
			if (__LIB_20__.func_756(Param0, 33))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(32))
			{
				if (__LIB_20__.func_756(Param0, 32))
				{
					return 1;
				}
			}
		}
	}
	if (!__LIB_0__.func_528(35))
	{
		if (__LIB_20__.func_756(Param0, 35))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(36))
	{
		if (__LIB_20__.func_756(Param0, 36))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(43))
	{
		if (__LIB_20__.func_756(Param0, 43))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(42))
		{
			if (__LIB_20__.func_756(Param0, 42))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(38))
			{
				if (__LIB_20__.func_756(Param0, 42))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(39))
			{
				if (__LIB_20__.func_756(Param0, 42))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(40))
			{
				if (__LIB_20__.func_756(Param0, 42))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(41))
			{
				if (__LIB_20__.func_756(Param0, 42))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(37))
			{
				if (__LIB_20__.func_756(Param0, 42))
				{
					return 1;
				}
			}
		}
	}
	if (!__LIB_0__.func_528(45))
	{
		if (__LIB_20__.func_756(Param0, 45))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(44))
		{
			if (__LIB_20__.func_756(Param0, 44))
			{
				return 1;
			}
		}
	}
	if (!__LIB_0__.func_528(51))
	{
		if (__LIB_20__.func_756(Param0, 51))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(48))
		{
			if (__LIB_20__.func_756(Param0, 48))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(49))
			{
				if (__LIB_20__.func_756(Param0, 49))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(50))
			{
				if (__LIB_20__.func_756(Param0, 50))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(47))
			{
				if (__LIB_20__.func_756(Param0, 47))
				{
					return 1;
				}
				if (!__LIB_0__.func_528(46))
				{
					if (__LIB_20__.func_756(Param0, 46))
					{
						return 1;
					}
				}
			}
		}
	}
	if (!__LIB_0__.func_528(53))
	{
		if (__LIB_20__.func_756(Param0, 53))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(56))
		{
			if (__LIB_20__.func_756(Param0, 56))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(55))
			{
				if (__LIB_20__.func_756(Param0, 55))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(54))
			{
				if (__LIB_20__.func_756(Param0, 54))
				{
					return 1;
				}
			}
			if (!__LIB_0__.func_528(52))
			{
				if (__LIB_20__.func_756(Param0, 52))
				{
					return 1;
				}
			}
		}
	}
	if (!__LIB_0__.func_528(57))
	{
		if (__LIB_20__.func_756(Param0, 57))
		{
			return 1;
		}
	}
	if (!__LIB_0__.func_528(62))
	{
		if (__LIB_20__.func_756(Param0, 62))
		{
			return 1;
		}
		if (!__LIB_0__.func_528(61))
		{
			if (__LIB_20__.func_756(Param0, 61))
			{
				return 1;
			}
			if (!__LIB_0__.func_528(60))
			{
				if (__LIB_20__.func_756(Param0, 60))
				{
					return 1;
				}
				if (!__LIB_0__.func_528(59))
				{
					if (__LIB_20__.func_756(Param0, 59))
					{
						return 1;
					}
					if (!__LIB_0__.func_528(58))
					{
						if (__LIB_20__.func_756(Param0, 58))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_572(var uParam0, int iParam1)//Position - 0xFAFB
{
	if (iParam1 == -1)
	{
		return 0;
	}
	if (!__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam1))
	{
		return 0;
	}
	else
	{
		__LIB_0__.func_284(&(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]), uParam0);
	}
	return 1;
}

float func_573(int iParam0)//Position - 0xFB46
{
	if (iParam0 == -1)
	{
		return 0f;
	}
	if (!__LIB_12__.func_98(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return 0f;
	}
	return Global_77137.f_555[0 /*21*/].f_3;
}

bool func_574(int iParam0)//Position - 0x1002F
{
	return __LIB_6__.func_837(iParam0, 1, 1);
}

bool func_575(struct<3> Param0, int iParam1)//Position - 0x10065
{
	return __LIB_12__.func_37(Global_106934.f_2890.f_12.f_66, Param0, iParam1);
}

void func_576(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, bool bParam5)//Position - 0x6E2E1
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = bParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_577(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, bool bParam6)//Position - 0x6E829
{
	int iVar0;
	iVar0 = __LIB_20__.func_763(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = bParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

int func_578(var uParam0)//Position - 0x81197
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_48 = __LIB_0__.func_408(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_48 = __LIB_11__.func_137(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_48 = __LIB_11__.func_136(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_48 = __LIB_20__.func_443(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_48);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_11__.func_135(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_11__.func_150(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_11__.func_150(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_11__.func_134(), ""))
				{
					__LIB_11__.func_150(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_11__.func_133(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_11__.func_133(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_11__.func_132(0, 0, 1, 1);
	}
	else
	{
		__LIB_11__.func_132(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_11__.func_131(uParam0);
	return iVar0;
}

void func_579(int iParam0)//Position - 0x85C4A
{
	int iVar0;
	iVar0 = __LIB_18__.func_168(iParam0);
	if (__LIB_0__.func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[iVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

bool func_580()//Position - 0x8881B
{
	return __LIB_26__.func_518(&(Global_106934.f_2890));
}

void func_581(int iParam0)//Position - 0x738
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 16)
	{
		if (Global_113386.f_24904[iVar0 /*4*/] == iParam0)
		{
			Global_113386.f_24904[iVar0 /*4*/] = 145;
			__LIB_6__.func_896(&(Global_113386.f_24904[iVar0 /*4*/].f_2), 4);
		}
		iVar0++;
	}
}

void func_582()//Position - 0x8256D
{
	if (__LIB_0__.func_295())
	{
		__LIB_6__.func_775(0, -1, 1);
	}
	else
	{
		ENTITY::FREEZE_ENTITY_POSITION(PLAYER::PLAYER_PED_ID(), false);
	}
}

int func_583(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0x171C9
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam2, false))
	{
		__LIB_20__.func_730(uParam0, iParam2, iParam3);
		uParam1->f_4 = iParam2;
		if (__LIB_0__.func_328(iParam2))
		{
			uParam1->f_3 = 1;
		}
		else
		{
			uParam1->f_3 = 0;
		}
		return 1;
	}
	return 0;
}

void func_584()//Position - 0x81BFE
{
	Global_100476 = 1;
	if (PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_24__.func_941())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MARRE" /* GXT: ~s~Michael was arrested. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FARRE" /* GXT: ~s~Franklin was arrested. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TARRE" /* GXT: ~s~Trevor was arrested. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
	}
	else if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_24__.func_941())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MDIED" /* GXT: ~s~Michael died. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FDIED" /* GXT: ~s~Franklin died. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TDIED" /* GXT: ~s~Trevor died. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
		MISC::SET_BIT(&(Global_100441.f_20), 25);
	}
}

void func_585()//Position - 0x8B3FB
{
	if (__LIB_0__.func_39(14))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[0 /*29*/])
			{
				Global_20266 = 0;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[1 /*29*/])
			{
				Global_20266 = 1;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[2 /*29*/])
			{
				Global_20266 = 2;
			}
			else
			{
				Global_20266 = 0;
			}
		}
	}
	else
	{
		Global_20266 = __LIB_24__.func_941();
		if (Global_20266 == 145)
		{
			Global_20266 = 3;
		}
		if (Global_78319)
		{
			Global_20266 = 3;
		}
		if (Global_20266 > 3)
		{
			Global_20266 = 3;
		}
	}
}

void func_586(var uParam0, int iParam1, bool bParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x8E8AA
{
	int iVar0;
	iVar0 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == 3)
		{
			iVar0 = 1;
		}
	}
	else if (__LIB_0__.func_430() == __LIB_0__.func_388(iParam1))
	{
		iVar0 = 1;
	}
	switch (iParam1)
	{
		case 0:
			*uParam4 = 3;
			*uParam6 = 0;
			if (!__LIB_6__.func_832(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_18__.func_194(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 1:
			*uParam4 = 0;
			*uParam6 = 0;
			if (!__LIB_6__.func_832(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_18__.func_194(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 2:
			*uParam4 = 1;
			*uParam6 = 0;
			if (!__LIB_6__.func_832(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_18__.func_194(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))) || __LIB_0__.func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 3:
			*uParam4 = 2;
			*uParam6 = 0;
			if ((((((!uParam0->f_23 || Global_3) || (uParam0->f_23 && ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)))) || (uParam0->f_23 && __LIB_0__.func_2(0))) || (uParam0->f_23 && Global_43018)) || !__LIB_9__.func_986()) || !__LIB_20__.func_449(0))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if (((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
	}
	if (iParam1 != 3)
	{
		if (iVar0 || uParam0->f_34[iParam1] == 2)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_34[iParam1] == 1 || uParam0->f_18[iParam1]) || ((!uParam0->f_23 && PED::IS_PED_INJURED((*uParam0)[iParam1])) && *uParam3 == 1)) || (uParam0->f_23 && BitTest(Global_97919.f_47, iParam1)))
		{
			if (*uParam3 == 1)
			{
				*uParam3 = 2;
			}
		}
		else if (uParam0->f_24[iParam1] != 0)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_23 && !BitTest(Global_113386.f_9085.f_2[27 /*3*/], 1)) && !Global_3) && !__LIB_0__.func_2(0))
		{
			if ((((__LIB_6__.func_854(0) || __LIB_6__.func_854(3)) || __LIB_6__.func_854(2)) || __LIB_0__.func_39(9)) || __LIB_0__.func_39(10))
			{
			}
			else
			{
				*uParam3 = 1;
			}
		}
	}
	else
	{
		*uParam3 = 3;
	}
	if ((iVar0 && uParam0->f_34[iParam1] == 0) || uParam0->f_34[iParam1] == 3)
	{
		if (!__LIB_0__.func_39(14))
		{
			*uParam6 = 1;
		}
	}
	if (bParam2)
	{
		__LIB_11__.func_107(uParam0, iParam1, uParam5);
	}
}

void func_587()//Position - 0x770CF
{
	if (Global_97753)
	{
		__LIB_26__.func_429();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_11__.func_174(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_588(var uParam0, struct<3> Param1, float fParam2)//Position - 0x9924B
{
	__LIB_12__.func_106(uParam0, Param1.f_0, fParam2);
	__LIB_12__.func_106(&(uParam0->f_1), Param1.f_1, fParam2);
	__LIB_12__.func_106(&(uParam0->f_2), Param1.f_2, fParam2);
}

void func_589(int iParam0, int iParam1, bool bParam2, bool bParam3, int iParam4)//Position - 0xA08C4
{
	if (iParam0 != 198)
	{
		if (Global_78319)
		{
			Global_42586.f_227[iParam0] = iParam1;
		}
		else
		{
			Global_113386.f_7261.f_227[iParam0] = iParam1;
		}
		Global_39592[iParam0] = bParam2;
		Global_39791[iParam0] = 1;
		__LIB_6__.func_792(iParam0, bParam3, iParam4, 0);
		__LIB_6__.func_791(iParam0, iParam1);
	}
}

void func_590(int iParam0)//Position - 0xA6C
{
	char* sVar0;
	switch (iParam0)
	{
		case 0:
			sVar0 = "FB_HUND_PERC" /* GXT: Game 100% complete! */;
			break;
		case 1:
			sVar0 = "FB_STORY" /* GXT: Story complete! */;
			break;
		case 2:
			sVar0 = "FB_VEHICLES" /* GXT: Every vehicle driven! */;
			break;
		case 3:
			sVar0 = "FB_PROPERTIES" /* GXT: All properties purchased! */;
			break;
		case 4:
			sVar0 = "FB_PSYCH" /* GXT: Psychology report received! */;
			break;
		case 5:
			sVar0 = "FB_MAPREV" /* GXT: Map fully discovered! */;
			break;
	}
	__LIB_12__.func_108(sVar0);
}

int func_591(int iParam0, char* sParam1, char* sParam2, char* sParam3, var uParam4, var uParam5)//Position - 0x753BD
{
	*uParam4 = 9;
	*uParam5 = 0;
	switch (iParam0)
	{
		case 11:
			StringCopy(sParam1, "SWITCH@FRANKLIN@STRIPCLUB", 64);
			StringCopy(sParam2, "002113_02_FRAS_15_STRIPCLUB_IDLE", 64);
			StringCopy(sParam3, "002113_02_FRAS_15_STRIPCLUB_EXIT", 64);
			return 1;
			break;
		case 124:
			StringCopy(sParam1, "SWITCH@MICHAEL@WASH_FACE", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 234:
			StringCopy(sParam1, "SWITCH@TREVOR@ON_TOILET", 64);
			StringCopy(sParam2, "trev_on_toilet_loop", 64);
			StringCopy(sParam3, "trev_on_toilet_exit", 64);
			*uParam4 = 1545;
			*uParam5 = 1544;
			return 1;
			break;
		case 316:
			StringCopy(sParam1, "SWITCH@TREVOR@JERKING_OFF", 64);
			StringCopy(sParam2, "trev_jerking_off_loop", 64);
			StringCopy(sParam3, "trev_jerking_off_exit", 64);
			*uParam4 = 1545;
			*uParam5 = 1544;
			return 1;
			break;
		case 77:
			StringCopy(sParam1, "SWITCH@MICHAEL@BEDROOM", 64);
			StringCopy(sParam2, "BED_LOOP_Michael", 64);
			StringCopy(sParam3, "BED_EXIT_Michael", 64);
			return 1;
			break;
		case 78:
			StringCopy(sParam1, "SWITCH@MICHAEL@BEDROOM2", 64);
			StringCopy(sParam2, "BED_LOOP_Michael", 64);
			StringCopy(sParam3, "BED_EXIT_Michael", 64);
			return 1;
			break;
		case 79:
			StringCopy(sParam1, "SAFE@MICHAEL@IG_3", 64);
			StringCopy(sParam2, "BASE_MICHAEL", 64);
			StringCopy(sParam3, "EXIT_MICHAEL", 64);
			return 1;
			break;
		case 80:
			StringCopy(sParam1, "SWITCH@MICHAEL@SITTING", 64);
			StringCopy(sParam2, "IDLE", 64);
			StringCopy(sParam3, "EXIT_FORWARD", 64);
			return 1;
			break;
		case 82:
			StringCopy(sParam1, "SWITCH@MICHAEL@WAKES_UP_SCREAMING", 64);
			StringCopy(sParam2, "001671_02_MICS2_1_WAKES_UP_SCREAMING_IDLE", 64);
			StringCopy(sParam3, "001671_02_MICS2_1_WAKES_UP_SCREAMING_EXIT", 64);
			return 1;
			break;
		case 84:
			StringCopy(sParam1, "SAVECountryside@", 64);
			StringCopy(sParam2, "M_Sleep_Loop_countryside", 64);
			StringCopy(sParam3, "M_GetOut_countryside", 64);
			return 1;
			break;
		case 83:
			StringCopy(sParam1, "SWITCH@MICHAEL@WAKES_UP_SCARED", 64);
			StringCopy(sParam2, "001672_02_MICS2_1_WAKES_UP_SCARED_IDLE", 64);
			StringCopy(sParam3, "001672_02_MICS2_1_WAKES_UP_SCARED_EXIT", 64);
			return 1;
			break;
		case 85:
			StringCopy(sParam1, "SWITCH@MICHAEL@WATCHING_TV", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 291:
			StringCopy(sParam1, "SWITCH@TREVOR@WATCHING_TV", 64);
			StringCopy(sParam2, "LOOP", 64);
			StringCopy(sParam3, "EXIT", 64);
			return 1;
			break;
		case 128:
			StringCopy(sParam1, "SWITCH@MICHAEL@SITTING", 64);
			StringCopy(sParam2, "IDLE", 64);
			StringCopy(sParam3, "EXIT_FORWARD", 64);
			return 1;
			break;
		case 86:
			StringCopy(sParam1, "SWITCH@MICHAEL@ON_SOFA", 64);
			StringCopy(sParam2, "BASE_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 87:
		case 88:
		case 184:
		case 185:
			StringCopy(sParam1, "SWITCH@MICHAEL@SUNLOUNGER", 64);
			StringCopy(sParam2, "SunLounger_Idle", 64);
			StringCopy(sParam3, "SunLounger_GetUp", 64);
			*uParam4 = 1545;
			*uParam5 = 1544;
			return 1;
			break;
		case 89:
		case 90:
			StringCopy(sParam1, "SWITCH@MICHAEL@SLEEP_IN_CAR", 64);
			StringCopy(sParam2, "BASE_MICHAEL", 64);
			StringCopy(sParam3, "SLEEP_IN_CAR_MICHAEL", 64);
			return 1;
			break;
		case 127:
			StringCopy(sParam1, "SWITCH@MICHAEL@SLEEP_IN_CAR", 64);
			StringCopy(sParam2, "BASE_PREMIER_MICHAEL", 64);
			StringCopy(sParam3, "SLEEP_IN_CAR_PREMIER_MICHAEL", 64);
			return 1;
			break;
		case 91:
		case 92:
		case 93:
		case 104:
		case 81:
		case 126:
			StringCopy(sParam1, "SWITCH@MICHAEL@SMOKING2", 64);
			StringCopy(sParam2, "LOOP", 64);
			StringCopy(sParam3, "EXIT", 64);
			*uParam4 |= 1536;
			*uParam5 |= 1536;
			return 1;
			break;
		case 94:
			StringCopy(sParam1, "SWITCH@MICHAEL@CAFE", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 95:
			StringCopy(sParam1, "SWITCH@MICHAEL@EXIT_RESTAURANT", 64);
			StringCopy(sParam2, "mic_exit_restaurant_loop", 64);
			StringCopy(sParam3, "mic_exit_restaurant_exit", 64);
			return 1;
			break;
		case 134:
			StringCopy(sParam1, "SWITCH@MICHAEL@DRUNK_BAR", 64);
			StringCopy(sParam2, "Drunk_Idle_PED", 64);
			StringCopy(sParam3, "Drunk_Exit_PED", 64);
			return 1;
			break;
		case 108:
		case 109:
			StringCopy(sParam1, "SWITCH@MICHAEL@PARKBENCH_SMOKE_RANGER", 64);
			StringCopy(sParam2, "parkbench_smoke_ranger_loop", 64);
			StringCopy(sParam3, "parkbench_smoke_ranger_exit", 64);
			return 1;
			break;
		case 112:
		case 113:
		case 123:
			StringCopy(sParam1, "SWITCH@MICHAEL@SITTING_ON_CAR_BONNET", 64);
			StringCopy(sParam2, "sitting_on_car_bonnet_loop", 64);
			StringCopy(sParam3, "sitting_on_car_bonnet_exit", 64);
			*uParam4 |= 1536;
			*uParam5 |= 1536;
			return 1;
			break;
		case 41:
		case 135:
		case 136:
		case 137:
		case 138:
		case 139:
			StringCopy(sParam1, "SWITCH@MICHAEL@SITTING_ON_CAR_PREMIERE", 64);
			StringCopy(sParam2, "SITTING_ON_CAR_PREMIERE_LOOP_PLAYER", 64);
			StringCopy(sParam3, "SITTING_ON_CAR_PREMIERE_EXIT_PLAYER", 64);
			*uParam4 |= 1536;
			*uParam5 |= 1536;
			return 1;
			break;
		case 114:
			StringCopy(sParam1, "SWITCH@MICHAEL@PHARMACY", 64);
			StringCopy(sParam2, "mics1_ig_11_loop", 64);
			StringCopy(sParam3, "mics1_ig_11_exit", 64);
			return 1;
			break;
		case 105:
			StringCopy(sParam1, "SWITCH@MICHAEL@STUCKINTRAFFIC", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "StuckInTraffic_Aggitated", 64);
			*uParam5 |= 32;
			return 1;
			break;
		case 106:
			StringCopy(sParam1, "SWITCH@MICHAEL@STUCKINTRAFFIC", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "StuckInTraffic_HitWheel", 64);
			*uParam5 |= 32;
			return 1;
			break;
		case 107:
			StringCopy(sParam1, "SWITCH@MICHAEL@STUCKINTRAFFIC", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "StuckInTraffic_HitHorn", 64);
			*uParam5 |= 32;
			return 1;
			break;
		case 98:
			StringCopy(sParam1, "SWITCH@MICHAEL@AMANDA_EXITS_CAR", 64);
			StringCopy(sParam2, "000606_02_MICS1_5_AMANDA_EXITS_CAR_IDLE_MIC", 64);
			StringCopy(sParam3, "000606_02_MICS1_5_AMANDA_EXITS_CAR_EXIT_MIC", 64);
			return 1;
			break;
		case 170:
			StringCopy(sParam1, "SWITCH@MICHAEL@OPENS_DOOR_FOR_AMA", 64);
			StringCopy(sParam2, "001895_02_MICS3_17_OPENS_DOOR_FOR_AMA_IDLE_MIC", 64);
			StringCopy(sParam3, "001895_02_MICS3_17_OPENS_DOOR_FOR_AMA_EXIT_MIC", 64);
			return 1;
			break;
		case 171:
			StringCopy(sParam1, "SWITCH@MICHAEL@DROPPING_OFF_JMY", 64);
			StringCopy(sParam2, "001839_02_MICS3_20_DROPPING_OFF_JMY_IDLE_MIC", 64);
			StringCopy(sParam3, "001839_02_MICS3_20_DROPPING_OFF_JMY_EXIT_MIC", 64);
			return 1;
			break;
		case 172:
			StringCopy(sParam1, "SWITCH@MICHAEL@TRACY_EXITS_CAR", 64);
			StringCopy(sParam2, "001840_01_MICS3_IG_21_TRACY_EXITS_CAR_IDLE_MIC", 64);
			StringCopy(sParam3, "001840_01_MICS3_IG_21_TRACY_EXITS_CAR_MIC", 64);
			return 1;
			break;
		case 103:
			StringCopy(sParam1, "SWITCH@MICHAEL@PIER", 64);
			StringCopy(sParam2, "pier_lean_smoke_idle", 64);
			StringCopy(sParam3, "pier_lean_smoke_outro", 64);
			*uParam5 |= 68;
			return 1;
			break;
		case 121:
			StringCopy(sParam1, "SWITCH@MICHAEL@MARINA", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "exit", 64);
			return 1;
			break;
		case 122:
			StringCopy(sParam1, "SWITCH@MICHAEL@ARGUE_WITH_AMANDA", 64);
			StringCopy(sParam2, "argue_with_amanda_loop_michael", 64);
			StringCopy(sParam3, "argue_with_amanda_exit_michael", 64);
			return 1;
			break;
		case 125:
			StringCopy(sParam1, "SWITCH@MICHAEL@WALK_AND_TALK", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "Im_A_Married_Man_Michael", 64);
			return 1;
			break;
		case 115:
		case 116:
		case 117:
		case 97:
		case 162:
			StringCopy(sParam1, "SWITCH@MICHAEL@CAFE", 64);
			StringCopy(sParam2, "Cafe_Idle_PED", 64);
			StringCopy(sParam3, "Cafe_Exit_PED", 64);
			return 1;
			break;
		case 110:
		case 111:
		case 131:
		case 132:
			StringCopy(sParam1, "SWITCH@MICHAEL@BENCH", 64);
			StringCopy(sParam2, "bench_on_phone_idle", 64);
			StringCopy(sParam3, "EXIT_FORWARD", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1026;
			return 1;
			break;
		case 129:
			StringCopy(sParam1, "SWITCH@MICHAEL@ON_CLUBCHAIR", 64);
			StringCopy(sParam2, "Switch_ON_CLUBCHAIR_BASE", 64);
			StringCopy(sParam3, "Switch_ON_CLUBCHAIR", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 130:
			StringCopy(sParam1, "SAFE@MICHAEL@IG_5", 64);
			StringCopy(sParam2, "BASE_MICHAEL", 64);
			StringCopy(sParam3, "EXIT_1_MICHAEL", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 150:
			StringCopy(sParam1, "SWITCH@MICHAEL@RONEX_IG_5_P2", 64);
			StringCopy(sParam2, "BASE_MICHAEL", 64);
			StringCopy(sParam3, "RONEX_IG5_P2_MICHAEL", 64);
			return 1;
			break;
		case 151:
			StringCopy(sParam1, "SWITCH@MICHAEL@RESTAURANT", 64);
			StringCopy(sParam2, "001510_02_GC_MICS3_IG_1_BASE_MICHAEL", 64);
			StringCopy(sParam3, "001510_02_GC_MICS3_IG_1_EXIT_MICHAEL", 64);
			return 1;
			break;
		case 152:
			StringCopy(sParam1, "SWITCH@MICHAEL@LOUNGE_CHAIRS", 64);
			StringCopy(sParam2, "001523_01_MICS3_9_LOUNGE_CHAIRS_IDLE_MIC", 64);
			StringCopy(sParam3, "001523_01_MICS3_9_LOUNGE_CHAIRS_EXIT_MIC", 64);
			return 1;
			break;
		case 153:
			StringCopy(sParam1, "SWITCH@MICHAEL@GOODBYE_TO_SOLOMAN", 64);
			StringCopy(sParam2, "001400_01_MICS3_5_BYE_TO_SOLOMAN_IDLE", 64);
			StringCopy(sParam3, "001400_01_MICS3_5_BYE_TO_SOLOMAN_EXIT", 64);
			return 1;
			break;
		case 154:
			StringCopy(sParam1, "SWITCH@MICHAEL@GOODBYE_TO_SOLOMAN", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 155:
			StringCopy(sParam1, "SWITCH@MICHAEL@AMA_TENNIS", 64);
			StringCopy(sParam2, "001833_01_MICS3_18_AMA_TENNIS_IDLE_MIC", 64);
			StringCopy(sParam3, "001833_01_MICS3_18_AMA_TENNIS_EXIT_MIC", 64);
			return 1;
			break;
		case 156:
			StringCopy(sParam1, "SWITCH@MICHAEL@AROUND_THE_TABLE_SELFISH", 64);
			StringCopy(sParam2, "AROUND_THE_TABLE_SELFISH_BASE_Michael", 64);
			StringCopy(sParam3, "AROUND_THE_TABLE_SELFISH_Michael", 64);
			return 1;
			break;
		case 157:
			StringCopy(sParam1, "SWITCH@MICHAEL@REJECTED_ENTRY", 64);
			StringCopy(sParam2, "001396_01_MICS3_6_REJECTED_ENTRY_IDLE_MIC", 64);
			StringCopy(sParam3, "001396_01_MICS3_6_REJECTED_ENTRY_EXIT_MIC", 64);
			return 1;
			break;
		case 159:
			StringCopy(sParam1, "SWITCH@MICHAEL@EXITS_BARBER", 64);
			StringCopy(sParam2, "001406_01_MICS3_7_EXITS_BARBER_IDLE", 64);
			StringCopy(sParam3, "001406_01_MICS3_7_EXITS_BARBER_EXIT", 64);
			return 1;
			break;
		case 160:
			StringCopy(sParam1, "SWITCH@MICHAEL@EXITS_FANCYSHOP", 64);
			StringCopy(sParam2, "001405_01_MICS3_8_EXITS_FANCYSHOP_IDLE", 64);
			StringCopy(sParam3, "001405_01_MICS3_8_EXITS_FANCYSHOP_EXIT", 64);
			return 1;
			break;
		case 161:
			StringCopy(sParam1, "SWITCH@MICHAEL@SMOKING", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 163:
			StringCopy(sParam1, "SWITCH@MICHAEL@GETS_READY", 64);
			StringCopy(sParam2, "001520_02_MICS3_14_GETS_READY_IDLE_MIC", 64);
			StringCopy(sParam3, "001520_02_MICS3_14_GETS_READY_EXIT_MIC", 64);
			return 1;
			break;
		case 164:
			StringCopy(sParam1, "SWITCH@MICHAEL@READS_SCRIPT", 64);
			StringCopy(sParam2, "001404_01_MICS3_16_READS_SCRIPT_IDLE", 64);
			StringCopy(sParam3, "001404_01_MICS3_16_READS_SCRIPT_EXIT", 64);
			return 1;
			break;
		case 165:
			StringCopy(sParam1, "SWITCH@MICHAEL@BAR_EMPLOYEE_CONVO", 64);
			StringCopy(sParam2, "001387_03_MICS3_2_BAR_EMPLOYEE_CONVO_IDLE_MIC", 64);
			StringCopy(sParam3, "001387_03_MICS3_2_BAR_EMPLOYEE_CONVO_EXIT_MIC", 64);
			return 1;
			break;
		case 158:
			StringCopy(sParam1, "SWITCH@MICHAEL@PROSTITUTE", 64);
			StringCopy(sParam2, "BASE_MICHAEL", 64);
			StringCopy(sParam3, "EXIT_MICHAEL", 64);
			return 1;
			break;
		case 166:
			StringCopy(sParam1, "SWITCH@MICHAEL@TALKS_TO_GUARD", 64);
			StringCopy(sParam2, "001393_02_MICS3_3_TALKS_TO_GUARD_IDLE_MIC", 64);
			StringCopy(sParam3, "001393_02_MICS3_3_TALKS_TO_GUARD_EXIT_MIC", 64);
			return 1;
			break;
		case 167:
			StringCopy(sParam1, "SWITCH@MICHAEL@ON_SET_W_JMY", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "001513_03_GC_MICS3_IG_4_ON_SET_W_JMY_EXIT_MIC", 64);
			return 1;
			break;
		case 168:
			StringCopy(sParam1, "SWITCH@MICHAEL@TV_W_KIDS", 64);
			StringCopy(sParam2, "001520_02_MICS3_14_TV_W_KIDS_IDLE_MIC", 64);
			StringCopy(sParam3, "001520_02_MICS3_14_TV_W_KIDS_EXIT_MIC", 64);
			return 1;
			break;
		case 173:
			StringCopy(sParam1, "SWITCH@MICHAEL@BIKING_WITH_JIMMY", 64);
			StringCopy(sParam2, "LOOP_Michael", 64);
			StringCopy(sParam3, "EXIT_Michael", 64);
			return 1;
			break;
		case 169:
			StringCopy(sParam1, "SWITCH@MICHAEL@GAMING_W_JMY", 64);
			StringCopy(sParam2, "001518_02_MICS3_11_GAMING_W_JMY_IDLE_MIC", 64);
			StringCopy(sParam3, "001518_02_MICS3_11_GAMING_W_JMY_EXIT_MIC", 64);
			return 1;
			break;
	}
	switch (iParam0)
	{
		case 186:
			StringCopy(sParam1, "SWITCH@FRANKLIN@CLEANING_APT", 64);
			StringCopy(sParam2, "001918_01_FRAS_V2_1_CLEANING_APT_IDLE", 64);
			StringCopy(sParam3, "001918_01_FRAS_V2_1_CLEANING_APT_EXIT", 64);
			return 1;
			break;
		case 187:
			StringCopy(sParam1, "SWITCH@FRANKLIN@ON_CELL", 64);
			StringCopy(sParam2, "001914_01_FRAS_V2_2_ON_CELL_IDLE", 64);
			StringCopy(sParam3, "001914_01_FRAS_V2_2_ON_CELL_EXIT", 64);
			return 1;
			break;
		case 188:
			StringCopy(sParam1, "SWITCH@FRANKLIN@SNACKING", 64);
			StringCopy(sParam2, "001922_01_FRAS_V2_3_SNACKING_IDLE", 64);
			StringCopy(sParam3, "001922_01_FRAS_V2_3_SNACKING_EXIT", 64);
			return 1;
			break;
		case 189:
			StringCopy(sParam1, "SWITCH@FRANKLIN@ON_LAPTOP", 64);
			StringCopy(sParam2, "001927_01_FRAS_V2_4_ON_LAPTOP_IDLE", 64);
			StringCopy(sParam3, "001927_01_FRAS_V2_4_ON_LAPTOP_EXIT", 64);
			return 1;
			break;
		case 190:
			StringCopy(sParam1, "SWITCH@FRANKLIN@IRONING", 64);
			StringCopy(sParam2, "001947_01_GC_FRAS_V2_IG_6_BASE", 64);
			StringCopy(sParam3, "001947_01_GC_FRAS_V2_IG_6_EXIT", 64);
			return 1;
			break;
		case 191:
			StringCopy(sParam1, "SWITCH@FRANKLIN@WATCHING_TV", 64);
			StringCopy(sParam2, "001915_01_FRAS_V2_8_WATCHING_TV_IDLE", 64);
			StringCopy(sParam3, "001915_01_FRAS_V2_8_WATCHING_TV_EXIT", 64);
			return 1;
			break;
		case 175:
		case 176:
			StringCopy(sParam1, "SWITCH@FRANKLIN@BED", 64);
			StringCopy(sParam2, "Sleep_LOOP", 64);
			StringCopy(sParam3, "Sleep_GetUp_RubEyes", 64);
			return 1;
			break;
		case 177:
			StringCopy(sParam1, "SWITCH@FRANKLIN@NAPPING", 64);
			StringCopy(sParam2, "002333_01_FRAS_V2_10_NAPPING_IDLE", 64);
			StringCopy(sParam3, "002333_01_FRAS_V2_10_NAPPING_EXIT", 64);
			return 1;
			break;
		case 178:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GETTING_READY", 64);
			StringCopy(sParam2, "002334_02_FRAS_V2_11_GETTING_DRESSED_IDLE", 64);
			StringCopy(sParam3, "002334_02_FRAS_V2_11_GETTING_DRESSED_EXIT", 64);
			return 1;
			break;
		case 179:
		case 180:
			StringCopy(sParam1, "SWITCH@FRANKLIN@BED", 64);
			StringCopy(sParam2, "Bed_Reading_LOOP", 64);
			StringCopy(sParam3, "Bed_Reading_GetUp", 64);
			return 1;
			break;
		case 181:
		case 182:
		case 183:
			StringCopy(sParam1, "SWITCH@FRANKLIN@PRESS_UPS", 64);
			StringCopy(sParam2, "PressUps_LOOP", 64);
			StringCopy(sParam3, "PressUps_OUT", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 192:
			StringCopy(sParam1, "SWITCH@FRANKLIN@002110_04_MAGD_3_WEED_EXCHANGE", 64);
			StringCopy(sParam2, "002110_04_MAGD_3_WEED_EXCHANGE_SHOPKEEPER", 64);
			StringCopy(sParam3, "002110_04_MAGD_3_WEED_EXCHANGE_FRANKLIN", 64);
			return 1;
			break;
		case 193:
			StringCopy(sParam1, "SWITCH@FRANKLIN@DISPENSARY", 64);
			StringCopy(sParam2, "exit_dispensary_idle", 64);
			StringCopy(sParam3, "exit_dispensary_outro_ped", 64);
			return 1;
			break;
		case 194:
			StringCopy(sParam1, "SWITCH@FRANKLIN@DISPENSARY", 64);
			StringCopy(sParam2, "exit_dispensary_idle", 64);
			StringCopy(sParam3, "exit_dispensary_outro", 64);
			return 1;
			break;
		case 195:
			StringCopy(sParam1, "SWITCH@FRANKLIN@DISPENSARY", 64);
			StringCopy(sParam2, "exit_dispensary_idle", 64);
			StringCopy(sParam3, "exit_dispensary_outro", 64);
			return 1;
			break;
		case 198:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GARBAGE", 64);
			StringCopy(sParam2, "Garbage_Idle_PLYR", 64);
			StringCopy(sParam3, "Garbage_Toss_PLYR", 64);
			return 1;
			break;
		case 199:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GARBAGE_B", 64);
			StringCopy(sParam2, "Garbage_Idle_PLYR", 64);
			StringCopy(sParam3, "Garbage_Toss_PLYR", 64);
			return 1;
			break;
		case 200:
			StringCopy(sParam1, "SWITCH@FRANKLIN@THROW_CUP", 64);
			StringCopy(sParam2, "throw_cup_loop", 64);
			StringCopy(sParam3, "throw_cup_exit", 64);
			return 1;
			break;
		case 201:
			StringCopy(sParam1, "SWITCH@FRANKLIN@HIT_CUP_HAND", 64);
			StringCopy(sParam2, "hit_cup_hand_loop", 64);
			StringCopy(sParam3, "hit_cup_hand_exit", 64);
			return 1;
			break;
		case 202:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GYM", 64);
			StringCopy(sParam2, "001942_02_GC_FRAS_IG_5_BASE", 64);
			StringCopy(sParam3, "001942_02_GC_FRAS_IG_5_EXIT", 64);
			return 1;
			break;
		case 203:
		case 206:
		case 207:
			StringCopy(sParam1, "SWITCH@FRANKLIN@PLAYS_W_DOG", 64);
			StringCopy(sParam2, "001916_01_FRAS_V2_9_PLAYS_W_DOG_IDLE", 64);
			StringCopy(sParam3, "001916_01_FRAS_V2_9_PLAYS_W_DOG_EXIT", 64);
			return 1;
			break;
		case 204:
		case 205:
			StringCopy(sParam1, "SWITCH@FRANKLIN@PLAYS_W_DOG", 64);
			StringCopy(sParam2, "001916_01_FRAS_V2_9_PLAYS_W_DOG_IDLE", 64);
			StringCopy(sParam3, "001916_01_FRAS_V2_9_PLAYS_W_DOG_EXIT", 64);
			return 1;
			break;
		case 211:
		case 213:
		case 216:
		case 217:
			StringCopy(sParam1, "SWITCH@FRANKLIN@ADMIRE_MOTORCYCLE", 64);
			StringCopy(sParam2, "BASE_FRANKLIN", 64);
			StringCopy(sParam3, "EXIT_FRANKLIN", 64);
			return 1;
			break;
		case 212:
		case 214:
			StringCopy(sParam1, "SWITCH@FRANKLIN@CLEANING_CAR", 64);
			StringCopy(sParam2, "001946_01_GC_FRAS_V2_IG_5_BASE", 64);
			StringCopy(sParam3, "001946_01_GC_FRAS_V2_IG_5_EXIT", 64);
			return 1;
			break;
		case 196:
			StringCopy(sParam1, "SWITCH@FRANKLIN@TANISHA_ARGUE", 64);
			StringCopy(sParam2, "BASE_Franklin", 64);
			StringCopy(sParam3, "Tanisha_Argue_Franklin", 64);
			return 1;
			break;
		case 197:
			StringCopy(sParam1, "SWITCH@FRANKLIN@WALK_AROUND_HOUSE", 64);
			StringCopy(sParam2, "IDLE_FRANKLIN", 64);
			StringCopy(sParam3, "EXIT_FRANKLIN", 64);
			return 1;
			break;
		case 215:
			StringCopy(sParam1, "SWITCH@FRANKLIN@BYE_TAXI", 64);
			StringCopy(sParam2, "001938_01_FRAS_V2_7_BYE_TAXI_IDLE_FRA", 64);
			StringCopy(sParam3, "001938_01_FRAS_V2_7_BYE_TAXI_EXIT_FRA", 64);
			return 1;
			break;
		case 221:
			StringCopy(sParam1, "SWITCH@FRANKLIN@PICKUP_LINE", 64);
			StringCopy(sParam2, "base_Franklin", 64);
			StringCopy(sParam3, "switch_P1_Franklin", 64);
			return 1;
			break;
		case 222:
			StringCopy(sParam1, "SWITCH@FRANKLIN@CHOPSHOP", 64);
			StringCopy(sParam2, "BASE", 64);
			StringCopy(sParam3, "CheckShoe", 64);
			return 1;
			break;
		case 223:
			StringCopy(sParam1, "SWITCH@FRANKLIN@CHOPSHOP", 64);
			StringCopy(sParam2, "BASE", 64);
			StringCopy(sParam3, "WipeHands", 64);
			return 1;
			break;
		case 224:
			StringCopy(sParam1, "SWITCH@FRANKLIN@CHOPSHOP", 64);
			StringCopy(sParam2, "BASE", 64);
			StringCopy(sParam3, "WipeRight", 64);
			return 1;
			break;
		case 226:
		case 227:
		case 230:
			StringCopy(sParam1, "SWITCH@FRANKLIN@EXIT_BUILDING", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "switch_01", 64);
			return 1;
			break;
		case 228:
		case 229:
			StringCopy(sParam1, "SWITCH@FRANKLIN@EXIT_BUILDING", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "switch_02", 64);
			return 1;
			break;
		case 218:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GANG_TAUNT_P1", 64);
			StringCopy(sParam2, "gang_taunt_loop_franklin", 64);
			StringCopy(sParam3, "gang_taunt_exit_franklin", 64);
			return 1;
			break;
		case 219:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GANG_TAUNT_P3", 64);
			StringCopy(sParam2, "gang_taunt_with_lamar_loop_frank", 64);
			StringCopy(sParam3, "gang_taunt_with_lamar_exit_frank", 64);
			return 1;
			break;
		case 220:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GANG_TAUNT_P5", 64);
			StringCopy(sParam2, "fras_ig_6_p5_loop_frank", 64);
			StringCopy(sParam3, "fras_ig_6_p5_exit_frank", 64);
			return 1;
			break;
		case 225:
			StringCopy(sParam1, "SWITCH@FRANKLIN@GANG_TAUNT_P3", 64);
			StringCopy(sParam2, "fras_ig_10_p3_loop_frank", 64);
			StringCopy(sParam3, "fras_ig_10_p3_exit_frank", 64);
			return 1;
			break;
		case 232:
		case 233:
			StringCopy(sParam1, "missheist_agency2aig_9", 64);
			StringCopy(sParam2, "Franklin_call_Michael_IDLE_PLAYER", 64);
			StringCopy(sParam3, "Franklin_call_Michael_EXIT_PLAYER", 64);
			return 1;
			break;
		case 235:
			StringCopy(sParam1, "SWITCH@TREVOR@MOCKS_LAPDANCE", 64);
			StringCopy(sParam2, "001443_01_TRVS_28_IDLE_TRV", 64);
			StringCopy(sParam3, "001443_01_TRVS_28_EXIT_TRV", 64);
			return 1;
			break;
		case 236:
			StringCopy(sParam1, "SWITCH@TREVOR@BAR", 64);
			StringCopy(sParam2, "LOOP_Trevor", 64);
			StringCopy(sParam3, "EXIT_Trevor", 64);
			return 1;
			break;
		case 237:
			StringCopy(sParam1, "SWITCH@TREVOR@CHASE_STRIPPERS", 64);
			StringCopy(sParam2, "LOOP_Trevor", 64);
			StringCopy(sParam3, "EXIT_Trevor", 64);
			return 1;
			break;
		case 238:
			StringCopy(sParam1, "SWITCH@TREVOR@STRIPCLUB", 64);
			StringCopy(sParam2, "trev_leave_stripclub_idle", 64);
			StringCopy(sParam3, "trev_leave_stripclub_outro", 64);
			return 1;
			break;
		case 239:
			StringCopy(sParam1, "SWITCH@TREVOR@ESCORTED_OUT", 64);
			StringCopy(sParam2, "001215_02_TRVS_12_ESCORTED_OUT_IDLE_TRV", 64);
			StringCopy(sParam3, "001215_02_TRVS_12_ESCORTED_OUT_EXIT_TRV", 64);
			return 1;
			break;
		case 273:
		case 274:
			StringCopy(sParam1, "SWITCH@TREVOR@PUKING_INTO_FOUNTAIN", 64);
			StringCopy(sParam2, "trev_fountain_puke_loop", 64);
			StringCopy(sParam3, "trev_fountain_puke_exit", 64);
			return 1;
			break;
		case 245:
		case 40:
			StringCopy(sParam1, "SWITCH@TREVOR@TREV_SMOKING_METH", 64);
			StringCopy(sParam2, "TREV_SMOKING_METH_LOOP", 64);
			StringCopy(sParam3, "TREV_SMOKING_METH_EXIT", 64);
			*uParam4 = 1545;
			*uParam5 = 1544;
			return 1;
			break;
		case 315:
			StringCopy(sParam1, "SWITCH@TREVOR@HEAD_IN_SINK", 64);
			StringCopy(sParam2, "trev_sink_idle", 64);
			StringCopy(sParam3, "trev_sink_exit", 64);
			*uParam4 = 1545;
			*uParam5 = 1544;
			return 1;
			break;
		case 250:
		case 251:
		case 252:
		case 253:
			StringCopy(sParam1, "SWITCH@TREVOR@AT_THE_DOCKS", 64);
			StringCopy(sParam2, "001209_01_TRVS_3_AT_THE_DOCKS_IDLE", 64);
			StringCopy(sParam3, "001209_01_TRVS_3_AT_THE_DOCKS_EXIT", 64);
			return 1;
			break;
		case 262:
			StringCopy(sParam1, "SWITCH@TREVOR@KO_NEIGHBOUR", 64);
			StringCopy(sParam2, "001500_03_TRVS_19_KO_NEIGHBOUR_LOOP_TRV", 64);
			StringCopy(sParam3, "001500_03_TRVS_19_KO_NEIGHBOUR_EXIT_TRV", 64);
			return 1;
			break;
		case 243:
			StringCopy(sParam1, "SWITCH@TREVOR@GARBAGE_FOOD", 64);
			StringCopy(sParam2, "LOOP_Trevor", 64);
			StringCopy(sParam3, "EXIT_Trevor", 64);
			return 1;
			break;
		case 244:
			StringCopy(sParam1, "SWITCH@TREVOR@THROW_FOOD", 64);
			StringCopy(sParam2, "LOOP_Trevor", 64);
			StringCopy(sParam3, "EXIT_Trevor", 64);
			return 1;
			break;
		case 271:
		case 272:
		case 265:
		case 266:
		case 267:
		case 268:
		case 269:
		case 270:
		case 279:
		case 240:
		case 241:
		case 242:
			StringCopy(sParam1, "SWITCH@TREVOR@SLOUCHED_GET_UP", 64);
			StringCopy(sParam2, "TREV_SLOUCHED_GET_UP_IDLE", 64);
			StringCopy(sParam3, "TREV_SLOUCHED_GET_UP_EXIT", 64);
			return 1;
			break;
		case 280:
			StringCopy(sParam1, "SWITCH@TREVOR@NAKED_ISLAND", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "exit", 64);
			return 1;
			break;
		case 246:
			StringCopy(sParam1, "SWITCH@TREVOR@PUSHES_BODYBUILDER", 64);
			StringCopy(sParam2, "001426_03_TRVS_5_PUSHES_BODYBUILDER_IDLE_TRV", 64);
			StringCopy(sParam3, "001426_03_TRVS_5_PUSHES_BODYBUILDER_EXIT_TRV", 64);
			return 1;
			break;
		case 286:
			StringCopy(sParam1, "SWITCH@TREVOR@RUDE_AT_CAFE", 64);
			StringCopy(sParam2, "001218_03_TRVS_23_RUDE_AT_CAFE_IDLE_TRV", 64);
			StringCopy(sParam3, "001218_03_TRVS_23_RUDE_AT_CAFE_EXIT_TRV", 64);
			return 1;
			break;
		case 247:
			StringCopy(sParam1, "SWITCH@TREVOR@ANNOYS_SUNBATHERS", 64);
			StringCopy(sParam2, "trev_annoys_sunbathers_loop_trevor", 64);
			StringCopy(sParam3, "trev_annoys_sunbathers_exit_trevor", 64);
			return 1;
			break;
		case 263:
			StringCopy(sParam1, "SWITCH@TREVOR@SCARES_TRAMP", 64);
			StringCopy(sParam2, "TREV_SCARES_TRAMP_IDLE_TREVOR", 64);
			StringCopy(sParam3, "TREV_SCARES_TRAMP_EXIT_TREVOR", 64);
			return 1;
			break;
		case 278:
			StringCopy(sParam1, "SWITCH@TREVOR@NAKED_ON_BRIDGE", 64);
			StringCopy(sParam2, "002055_01_TRVS_17_NAKED_ON_BRIDGE_IDLE", 64);
			StringCopy(sParam3, "002055_01_TRVS_17_NAKED_ON_BRIDGE_EXIT", 64);
			return 1;
			break;
		case 264:
			StringCopy(sParam1, "SWITCH@TREVOR@DUMPSTER", 64);
			StringCopy(sParam2, "002002_01_TRVS_14_DUMPSTER_IDLE", 64);
			StringCopy(sParam3, "002002_01_TRVS_14_DUMPSTER_EXIT", 64);
			return 1;
			break;
		case 255:
			StringCopy(sParam1, "SWITCH@TREVOR@FUNERAL_HOME", 64);
			StringCopy(sParam2, "trvs_ig_11_loop", 64);
			StringCopy(sParam3, "trvs_ig_11_exit", 64);
			return 1;
			break;
		case 285:
			StringCopy(sParam1, "SWITCH@TREVOR@BRIDGE", 64);
			StringCopy(sParam2, "HOLD_LOOP_trevor", 64);
			StringCopy(sParam3, "THROW_EXIT_trevor", 64);
			return 1;
			break;
		case 259:
			StringCopy(sParam1, "SWITCH@TREVOR@YELLS_AT_DOORMAN", 64);
			StringCopy(sParam2, "001430_01_TRVS_21_YELLS_AT_DOORMAN_IDLE_TRV", 64);
			StringCopy(sParam3, "001430_01_TRVS_21_YELLS_AT_DOORMAN_EXIT_TRV", 64);
			return 1;
			break;
		case 248:
			StringCopy(sParam1, "SWITCH@TREVOR@BLOCK_CAMERA", 64);
			StringCopy(sParam2, "001220_03_GC_TRVS_IG_7_BASE_TREVOR", 64);
			StringCopy(sParam3, "001220_03_GC_TRVS_IG_7_EXIT_TREVOR", 64);
			return 1;
			break;
		case 249:
			StringCopy(sParam1, "SWITCH@TREVOR@GUITAR_BEATDOWN", 64);
			StringCopy(sParam2, "001370_02_TRVS_8_GUITAR_BEATDOWN_IDLE_TRV", 64);
			StringCopy(sParam3, "001370_02_TRVS_8_GUITAR_BEATDOWN_EXIT_TRV", 64);
			return 1;
			break;
		case 254:
			StringCopy(sParam1, "SWITCH@TREVOR@LINGERIE_SHOP", 64);
			StringCopy(sParam2, "trev_exit_lingerie_shop_idle", 64);
			StringCopy(sParam3, "trev_exit_lingerie_shop_outro", 64);
			return 1;
			break;
		case 287:
			StringCopy(sParam1, "SWITCH@TREVOR@RAND_TEMPLE", 64);
			StringCopy(sParam2, "", 64);
			StringCopy(sParam3, "TAI_CHI_Trevor", 64);
			return 1;
			break;
		case 288:
			StringCopy(sParam1, "SWITCH@TREVOR@UNDER_PIER", 64);
			StringCopy(sParam2, "LOOP_Trevor", 64);
			StringCopy(sParam3, "EXIT_Trevor", 64);
			return 1;
			break;
		case 289:
			StringCopy(sParam1, "SWITCH@TREVOR@DRUNK_HOWLING", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "exit", 64);
			return 1;
			break;
		case 290:
			StringCopy(sParam1, "SWITCH@TREVOR@DRUNK_HOWLING_SC", 64);
			StringCopy(sParam2, "loop", 64);
			StringCopy(sParam3, "exit", 64);
			return 1;
			break;
		case 292:
		case 295:
			StringCopy(sParam1, "SWITCH@TREVOR@BED", 64);
			StringCopy(sParam2, "Bed_Sleep_TREVOR", 64);
			StringCopy(sParam3, "Bed_GetUp_1_TREVOR", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 293:
		case 294:
			StringCopy(sParam1, "SWITCH@TREVOR@BED", 64);
			StringCopy(sParam2, "Bed_Sleep_TREVOR", 64);
			StringCopy(sParam3, "Bed_GetUp_2_TREVOR", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 299:
			StringCopy(sParam1, "SWITCH@TREVOR@FLOYD_CRYING", 64);
			StringCopy(sParam2, "Console_LOOP_TREVOR", 64);
			StringCopy(sParam3, "Console_Wasnt_Fun_TREVOR", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 300:
		case 301:
		case 302:
		case 303:
			StringCopy(sParam1, "SWITCH@TREVOR@FLOYD_CRYING", 64);
			StringCopy(sParam2, "Console_LOOP_TREVOR", 64);
			StringCopy(sParam3, "Console_Get_Along_TREVOR", 64);
			*uParam4 |= 1024;
			*uParam5 |= 1024;
			return 1;
			break;
		case 296:
			StringCopy(sParam1, "SWITCH@TREVOR@BEAR_IN_FLOYDS_FACE", 64);
			StringCopy(sParam2, "bear_in_floyds_face_loop_trev", 64);
			StringCopy(sParam3, "bear_in_floyds_face_exit_trev", 64);
			return 1;
			break;
		case 297:
			StringCopy(sParam1, "SWITCH@TREVOR@BEAR_FLOYDS_FACE_SMELL", 64);
			StringCopy(sParam2, "bear_floyds_face_smell_loop_trev", 64);
			StringCopy(sParam3, "bear_floyds_face_smell_exit_trev", 64);
			return 1;
			break;
		case 298:
			StringCopy(sParam1, "SWITCH@TREVOR@PINEAPPLE", 64);
			StringCopy(sParam2, "Pineapple_LOOP_TREVOR", 64);
			StringCopy(sParam3, "Pineapple_EXIT_TREVOR", 64);
			return 1;
			break;
		case 304:
			StringCopy(sParam1, "SWITCH@MICHAEL@SMOKING2", 64);
			StringCopy(sParam2, "LOOP", 64);
			StringCopy(sParam3, "EXIT", 64);
			*uParam4 |= 1536;
			*uParam5 |= 1536;
			return 1;
			break;
		case 305:
			__LIB_12__.func_109(iParam0, sParam1, sParam2, sParam3);
			return 1;
			break;
		case 310:
			StringCopy(sParam1, "SWITCH@TREVOR@DIGGING", 64);
			StringCopy(sParam2, "001433_01_TRVS_26_DIGGING_IDLE", 64);
			StringCopy(sParam3, "001433_01_TRVS_26_DIGGING_EXIT", 64);
			*uParam5 |= 32768;
			return 1;
			break;
		case 311:
			StringCopy(sParam1, "SWITCH@TREVOR@FLUSHES_FOOT", 64);
			StringCopy(sParam2, "002057_03_TRVS_27_FLUSHES_FOOT_IDLE", 64);
			StringCopy(sParam3, "002057_03_TRVS_27_FLUSHES_FOOT_EXIT", 64);
			*uParam5 |= 32768;
			return 1;
			break;
		default:
			StringCopy(sParam1, "NULL", 64);
			StringCopy(sParam2, "NULL", 64);
			StringCopy(sParam3, "NULL", 64);
			return 0;
			break;
	}
	StringCopy(sParam1, "NULL", 64);
	StringCopy(sParam2, "NULL", 64);
	StringCopy(sParam3, "NULL", 64);
	return 0;
}

int func_592(int iParam0, int iParam1)//Position - 0x7E2C2
{
	int iVar0;
	int iVar1;
	iVar0 = 4;
	while (iVar0 > 0)
	{
		Global_113386.f_18533.f_4[iParam0 /*6*/][iVar0] = Global_113386.f_18533.f_4[iParam0 /*6*/][(iVar0 - 1)];
		iVar0 = (iVar0 - 1);
	}
	Global_113386.f_18533.f_4[iParam0 /*6*/][0] = iParam1;
	if (__LIB_12__.func_113(iParam1, &iVar1))
	{
		MISC::SET_BIT(&(Global_113386.f_18533.f_23), iVar1);
	}
	return 1;
}

void func_593(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0x7F20F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (__LIB_20__.func_682(iParam0, iParam1))
	{
		iVar0 = __LIB_0__.func_411(iParam1);
		iVar1 = __LIB_1__.func_26(iParam0);
		iVar2 = (__LIB_1__.func_26(iParam0) - __LIB_1__.func_26(iParam1));
		iVar3 = (__LIB_0__.func_411(iParam0) - __LIB_0__.func_411(iParam1));
		iVar4 = (__LIB_0__.func_482(iParam0) - __LIB_0__.func_482(iParam1));
		iVar5 = (__LIB_0__.func_196(iParam0) - __LIB_0__.func_196(iParam1));
		iVar6 = (__LIB_0__.func_195(iParam0) - __LIB_0__.func_195(iParam1));
		iVar7 = (__LIB_0__.func_483(iParam0) - __LIB_0__.func_483(iParam1));
	}
	else
	{
		iVar0 = __LIB_0__.func_411(iParam0);
		iVar1 = __LIB_1__.func_26(iParam1);
		iVar2 = (__LIB_1__.func_26(iParam1) - __LIB_1__.func_26(iParam0));
		iVar3 = (__LIB_0__.func_411(iParam1) - __LIB_0__.func_411(iParam0));
		iVar4 = (__LIB_0__.func_482(iParam1) - __LIB_0__.func_482(iParam0));
		iVar5 = (__LIB_0__.func_196(iParam1) - __LIB_0__.func_196(iParam0));
		iVar6 = (__LIB_0__.func_195(iParam1) - __LIB_0__.func_195(iParam0));
		iVar7 = (__LIB_0__.func_483(iParam1) - __LIB_0__.func_483(iParam0));
	}
	while (iVar7 < 0)
	{
		iVar7 += 60;
		iVar6 = (iVar6 - 1);
	}
	while (iVar7 > 59)
	{
		iVar7 = (iVar7 - 60);
		iVar6++;
	}
	while (iVar6 < 0)
	{
		iVar6 += 60;
		iVar5 = (iVar5 - 1);
	}
	while (iVar6 > 59)
	{
		iVar6 = (iVar6 - 60);
		iVar5++;
	}
	while (iVar5 < 0)
	{
		iVar5 += 24;
		iVar4 = (iVar4 - 1);
	}
	while (iVar5 > 23)
	{
		iVar5 = (iVar5 - 24);
		iVar4++;
	}
	while (iVar4 < 0)
	{
		while (iVar3 < 0)
		{
			iVar3 += 12;
			iVar2 = (iVar2 - 1);
		}
		iVar4 = (iVar4 + __LIB_0__.func_139(iVar0, iVar1));
		iVar3 = (iVar3 - 1);
		iVar0 = SYSTEM::ROUND(__LIB_0__.func_732(SYSTEM::TO_FLOAT(iVar0 + 1), 0f, 12f));
	}
	while (iVar3 < 0)
	{
		iVar3 += 12;
		iVar2 = (iVar2 - 1);
	}
	while (iVar3 > 12)
	{
		iVar3 = (iVar3 - 12);
		iVar2++;
	}
	*uParam2 = iVar7;
	*uParam3 = iVar6;
	*uParam4 = iVar5;
	*uParam5 = iVar4;
	*uParam6 = iVar3;
	*uParam7 = iVar2;
}

int func_594(int iParam0)//Position - 0x814BA
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	switch (iParam0)
	{
		case 231:
			iVar0 = joaat("A_M_M_Hillbilly_02");
			iVar1 = __LIB_11__.func_813();
			iVar2 = joaat("baller");
			iVar3 = joaat("dubsta");
			STREAMING::REQUEST_MODEL(iVar2);
			STREAMING::REQUEST_MODEL(iVar3);
			STREAMING::REQUEST_MODEL(iVar0);
			STREAMING::REQUEST_MODEL(iVar1);
			STREAMING::REQUEST_MODEL(joaat("radi"));
			STREAMING::REQUEST_MODEL(joaat("sabregt"));
			VEHICLE::REQUEST_VEHICLE_RECORDING(3, "lkexcile2");
			VEHICLE::REQUEST_VEHICLE_RECORDING(4, "lkexcile2");
			VEHICLE::REQUEST_VEHICLE_RECORDING(5, "lkexile2");
			VEHICLE::REQUEST_VEHICLE_RECORDING(1, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(2, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(3, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(4, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(5, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(6, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(7, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(8, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(9, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(10, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(11, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(12, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(13, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(14, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(15, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(16, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(17, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(18, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(19, "lkexcile2_chase");
			VEHICLE::REQUEST_VEHICLE_RECORDING(100, "lkexcile2_chase");
			STREAMING::REQUEST_ANIM_DICT("missexile2");
			STREAMING::REQUEST_ANIM_DICT("missexile2switch");
			STREAMING::REQUEST_ANIM_DICT("missswitch");
			STREAMING::REQUEST_ANIM_DICT("shake_cam_all@");
			__LIB_12__.func_117(15);
			return 1;
			break;
	}
	return 0;
}

int func_595(struct<3> Param0, float fParam1, float fParam2, int iParam3, var uParam4, var uParam5)//Position - 0x821F2
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	float fVar3;
	struct<3> Var4;
	if (__LIB_0__.func_394(Param0, 0f, 0f, 0f, 1.5f, 0))
	{
		*uParam4 = { 0f, 0f, 0f };
		*uParam5 = 0f;
		return 0;
	}
	fVar3 = (MISC::GET_RANDOM_FLOAT_IN_RANGE((-fParam2 / 2f), (fParam2 / 2f)) * 0.5f);
	Var4 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Param0, fParam1, fVar3, fParam2, 0f) };
	if (PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(Var4, 1, &Var1, &uVar2, &iVar0, iParam3, 3f, 0f))
	{
		*uParam4 = { Var1 };
		*uParam5 = uVar2;
		*uParam4 = { __LIB_12__.func_120(*uParam4, *uParam5, iVar0) };
		return 1;
	}
	*uParam4 = { Param0 };
	*uParam5 = fParam1;
	return 0;
}

int func_596(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x104F1
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_6__.func_769(*uParam1, func_14(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_597(int iParam0)//Position - 0x6988
{
	if ((((((((((!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) || __LIB_6__.func_769(iParam0, 0, 0)) || __LIB_6__.func_769(iParam0, 1, 0)) || __LIB_6__.func_769(iParam0, 2, 0)) || __LIB_0__.func_119(iParam0) != 145) || __LIB_0__.func_118(iParam0)) || __LIB_0__.func_117(iParam0)) || __LIB_0__.func_108(iParam0)) || func_82(iParam0)) || !func_70(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 0, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 1, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 2, 0))
		{
		}
		if (__LIB_0__.func_119(iParam0) != 145)
		{
		}
		return 0;
	}
	return 1;
}

int func_598(int iParam0)//Position - 0x25CAB
{
	bool bVar0;
	bVar0 = __LIB_24__.func_941();
	if (__LIB_6__.func_813(iParam0))
	{
		return 1;
	}
	if (iParam0 == 49)
	{
		if (bVar0 == 1)
		{
			if (BitTest(Global_113386.f_7229[5], 0) || BitTest(Global_113386.f_7229[6], 0))
			{
				return 0;
			}
		}
		if (__LIB_0__.func_317(bVar0))
		{
			if (BitTest(Global_95468[5], bVar0))
			{
				return 0;
			}
		}
	}
	switch (iParam0)
	{
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
			if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[0], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[0], bVar0))
				{
					if (iParam0 != 40)
					{
						return 0;
					}
					else
					{
						return 1;
					}
				}
			}
			break;
		case 47:
		case 48:
		case 49:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[5], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[5], bVar0))
				{
					return 0;
				}
			}
			break;
		case 50:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[6], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[6], bVar0))
				{
					return 0;
				}
			}
			break;
		case 51:
		case 52:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[2], 0))
				{
					return 0;
				}
				if (__LIB_0__.func_317(bVar0))
				{
					if (BitTest(Global_95468[2], bVar0))
					{
						return 0;
					}
				}
			}
			else if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[1], 0))
				{
					return 0;
				}
				if (__LIB_0__.func_317(bVar0))
				{
					if (BitTest(Global_95468[1], bVar0))
					{
						return 0;
					}
				}
			}
			break;
		case 53:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[3], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__.func_317(bVar0))
			{
				if (BitTest(Global_95468[3], bVar0))
				{
					return 0;
				}
			}
			break;
		default:
			return 0;
			break;
	}
	return 1;
}

void func_599(int iParam0, bool bParam1)//Position - 0x76BD8
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bVar0 = __LIB_18__.func_190(iParam0);
	if (__LIB_0__.func_317(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_18__.func_178(iParam0, &(Global_113386.f_2363.f_539.f_298[bVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (bVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_600(int iParam0, int iParam1)//Position - 0x86BD0
{
	if (__LIB_0__.func_485(iParam0) != 1)
	{
		return -1;
	}
	return __LIB_12__.func_142(iParam0, iParam1);
}

void func_601(int iParam0, bool bParam1)//Position - 0x7515E
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	if (!__LIB_0__.func_2(0))
	{
		iVar0 = __LIB_0__.func_434(__LIB_0__.func_466(iParam0));
		iVar2 = 0;
		iVar1 = 0;
		while (iVar1 < Global_96470[iVar0 /*19*/])
		{
			bVar3 = Global_113386.f_1.f_12[iVar0 /*6*/][iVar1];
			if (!BitTest(Global_113386.f_1.f_118, bVar3))
			{
				iVar2++;
				if (!Global_96453[iVar1 /*3*/])
				{
					switch (Global_96316[bVar3 /*5*/])
					{
						case 1:
							iVar4 = 0;
							while (iVar4 < 4)
							{
								__LIB_20__.func_789(iVar1, iVar4);
								iVar4++;
							}
							break;
						case 3:
							iVar4 = 0;
							while (iVar4 < 3)
							{
								__LIB_20__.func_788(iVar1, iVar4);
								iVar4++;
							}
							break;
						case 2:
							iVar4 = 0;
							while (iVar4 < 3)
							{
								__LIB_20__.func_788(iVar1, iVar4);
								iVar4++;
							}
							break;
					}
					Global_96453[iVar1 /*3*/] = 1;
				}
			}
			iVar1++;
		}
		if (bParam1)
		{
			__LIB_20__.func_787(iVar0, iVar2);
		}
	}
}

int func_602(bool bParam0)//Position - 0x9C756
{
	if (((__LIB_6__.func_839() && __LIB_12__.func_164()) && __LIB_12__.func_163()) && (PHYSICS::ROPE_ARE_TEXTURES_LOADED() || !bParam0))
	{
		return 1;
	}
	return 0;
}

int func_603(var uParam0)//Position - 0xA57AA
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_49 = __LIB_0__.func_408(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_49 = __LIB_11__.func_137(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_49 = __LIB_11__.func_136(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_49 = __LIB_20__.func_443(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__.func_301((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_49);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_11__.func_135(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_11__.func_150(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_11__.func_150(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_11__.func_134(), ""))
				{
					__LIB_11__.func_150(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_11__.func_133(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_11__.func_133(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_11__.func_132(0, 0, 1, 1);
	}
	else
	{
		__LIB_11__.func_132(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_11__.func_131(uParam0);
	return iVar0;
}

bool func_604(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x54B2
{
	var uVar0;
	struct<3> Var1;
	int iVar2;
	iVar2 = __LIB_12__.func_42(iParam0, iParam1);
	if (!__LIB_0__.func_121(iParam0) || !__LIB_0__.func_121(iParam1))
	{
		if (iVar2 != -1)
		{
			__LIB_9__.func_801(&(Local_38[iVar2 /*4*/]));
		}
		return 0;
	}
	if (!__LIB_11__.func_747(iParam0, iParam1, fParam2, iParam3))
	{
		return 0;
	}
	if (iVar2 == -1)
	{
		iVar2 = __LIB_12__.func_41();
		if (iVar2 == -1)
		{
			return 0;
		}
		Local_38[iVar2 /*4*/].f_1 = iParam0;
		Local_38[iVar2 /*4*/].f_2 = iParam1;
	}
	Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
	uVar0 = __LIB_20__.func_742(&(Local_38[iVar2 /*4*/]), Var1, iParam1, &(Local_38[iVar2 /*4*/].f_3), iParam0, iParam5);
	return (uVar0 || (MISC::GET_GAME_TIMER() - Local_38[iVar2 /*4*/].f_3) < iParam4);
}

int func_605(int iParam0)//Position - 0x2965
{
	if ((((((((((!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) || __LIB_6__.func_769(iParam0, 0, 0)) || __LIB_6__.func_769(iParam0, 1, 0)) || __LIB_6__.func_769(iParam0, 2, 0)) || __LIB_0__.func_119(iParam0) != 145) || __LIB_0__.func_118(iParam0)) || __LIB_0__.func_117(iParam0)) || __LIB_0__.func_108(iParam0)) || func_59(iParam0)) || !func_47(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 0, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 1, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 2, 0))
		{
		}
		if (__LIB_0__.func_119(iParam0) != 145)
		{
		}
		return 0;
	}
	return 1;
}

int func_606(int iParam0, struct<3> Param1, int* iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, float fParam10)//Position - 0x1C8F
{
	float fVar0;
	if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
	{
		if (iParam4 == 0)
		{
			if (__LIB_1__.func_183(iParam0))
			{
				if (!ENTITY::IS_ENTITY_UPSIDEDOWN(iParam0))
				{
					__LIB_12__.func_50(__LIB_12__.func_49(__LIB_9__.func_611()), iParam9);
				}
			}
			if (!ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam10, fParam10, 2f, false, true, 2))
			{
				ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam10, fParam10, 2f, true, true, 2);
				if (__LIB_0__.func_405(__LIB_12__.func_49(__LIB_9__.func_611()), 0, 0))
				{
					HUD::CLEAR_THIS_PRINT(__LIB_12__.func_49(__LIB_9__.func_611()));
				}
				*iParam5 = 1;
				__LIB_20__.func_745(iParam2, Param1, 1);
			}
			else
			{
				if (*iParam5)
				{
					fVar0 = (fParam10 / 2f);
					if (__LIB_0__.func_530(PLAYER::PLAYER_PED_ID(), Param1, fVar0, 1))
					{
						*iParam5 = 0;
						__LIB_12__.func_39(1077936128, 1);
					}
				}
				__LIB_0__.func_523(iParam2);
			}
		}
	}
	else if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, fParam10, fParam10, 2f, false, true, 2))
	{
		if (*iParam7 == -1)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 2);
			return 1;
		}
		if (!*iParam8)
		{
			if (__LIB_0__.func_405(__LIB_12__.func_49(__LIB_9__.func_611()), 0, 0))
			{
				HUD::CLEAR_PRINTS();
			}
			*iParam7 = MISC::GET_GAME_TIMER();
			*iParam8 = 1;
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 2);
		}
		else if ((MISC::GET_GAME_TIMER() - *iParam7) > 3000)
		{
			return 1;
		}
	}
	else
	{
		if (VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(iParam0) == 2)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 1);
		}
		if (!*iParam6)
		{
			if (__LIB_0__.func_405(__LIB_12__.func_48(__LIB_9__.func_611(), 0), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_12__.func_48(__LIB_9__.func_611(), 0));
			}
			if (!__LIB_0__.func_405(__LIB_12__.func_47(__LIB_9__.func_611()), 0, 0))
			{
				__LIB_0__.func_210(__LIB_12__.func_47(__LIB_9__.func_611()), 7500, 0);
				*iParam6 = 1;
			}
		}
		*iParam5 = 1;
	}
	return 0;
}

void func_607(int iParam0, bool bParam1)//Position - 0x1F5
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (46 - 1))
	{
		if (iParam0 != iVar0 && iParam0 != 46)
		{
			__LIB_20__.func_805(iVar0);
		}
		iVar0++;
	}
	if (bParam1)
	{
		if (iParam0 != 46)
		{
			if ((!__LIB_0__.func_1(__LIB_12__.func_57(iParam0)) && !Global_112026) && !BitTest(uLocal_49, 15))
			{
				MISC::SET_BIT(&uLocal_49, 15);
				HUD::CLEAR_HELP(true);
			}
		}
		else if ((HUD::IS_HELP_MESSAGE_BEING_DISPLAYED() && !Global_112026) && !BitTest(uLocal_49, 15))
		{
			MISC::SET_BIT(&uLocal_49, 15);
			HUD::CLEAR_HELP(true);
		}
	}
}

int func_608(int iParam0)//Position - 0xE20
{
	if ((((((((((!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) || __LIB_6__.func_769(iParam0, 0, 0)) || __LIB_6__.func_769(iParam0, 1, 0)) || __LIB_6__.func_769(iParam0, 2, 0)) || __LIB_0__.func_119(iParam0) != 145) || __LIB_0__.func_118(iParam0)) || __LIB_0__.func_117(iParam0)) || __LIB_0__.func_108(iParam0)) || func_37(iParam0)) || !func_25(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_0__.func_117(iParam0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 0, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 1, 0))
		{
		}
		if (__LIB_6__.func_769(iParam0, 2, 0))
		{
		}
		if (__LIB_0__.func_119(iParam0) != 145)
		{
		}
		return 0;
	}
	return 1;
}

struct<4> func_609(bool bParam0)//Position - 0x842D
{
	struct<4> Var0;
	if (bParam0)
	{
		switch (__LIB_18__.func_173())
		{
			case 1:
				StringCopy(&Var0, "AHF_C8", 16);
				break;
			case 0:
				StringCopy(&Var0, "AHF_C5", 16);
				break;
		}
	}
	else
	{
		switch (__LIB_18__.func_173())
		{
			case 1:
				StringCopy(&Var0, "AHF_C9", 16);
				break;
			case 0:
				StringCopy(&Var0, "AHF_C6", 16);
				break;
			}
	}
	return Var0;
}

int func_610(int iParam0)//Position - 0x8C34
{
	struct<3> Var0;
	if (ENTITY::IS_ENTITY_UPSIDEDOWN(iParam0))
	{
		__LIB_20__.func_806(39);
		return 0;
	}
	if (!VEHICLE::IS_ENTRY_POINT_FOR_SEAT_CLEAR(PLAYER::PLAYER_PED_ID(), iParam0, -1, false, false) && !VEHICLE::IS_ENTRY_POINT_FOR_SEAT_CLEAR(PLAYER::PLAYER_PED_ID(), iParam0, 0, false, false))
	{
		__LIB_20__.func_806(37);
		return 0;
	}
	if (ENTITY::IS_ENTITY_IN_WATER(iParam0))
	{
		__LIB_20__.func_806(36);
		return 0;
	}
	Var0 = { ENTITY::GET_ENTITY_ROTATION(iParam0, 2) };
	if (Var0.f_0 >= 10f || Var0.f_0 <= -10f)
	{
		__LIB_20__.func_806(42);
		return 0;
	}
	else if (Var0.f_1 >= 15f || Var0.f_1 <= -15f)
	{
		__LIB_20__.func_806(43);
		return 0;
	}
	return 1;
}

void func_611(bool bParam0, bool bParam1)//Position - 0x8CE9
{
	__LIB_20__.func_805(bParam0);
	if (__LIB_0__.func_1(__LIB_12__.func_57(bParam0)))
	{
		HUD::CLEAR_HELP(true);
		MISC::SET_BIT(&uLocal_49, 15);
	}
	if (bParam1 != 46)
	{
		__LIB_20__.func_805(bParam1);
		if (__LIB_0__.func_1(__LIB_12__.func_57(bParam1)))
		{
			HUD::CLEAR_HELP(true);
			MISC::SET_BIT(&uLocal_49, 15);
		}
	}
}

int func_612(int iParam0)//Position - 0x9005
{
	if (ENTITY::GET_ENTITY_HEALTH(iParam0) < 300 || VEHICLE::GET_VEHICLE_ENGINE_HEALTH(iParam0) < 300f)
	{
		__LIB_20__.func_806(6);
		return 0;
	}
	return 1;
}

int func_613()//Position - 0x939B
{
	if ((((PED::IS_PED_IN_ANY_BOAT(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_FLYING_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_ON_MOUNT(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_POLICE_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_TRAIN(PLAYER::PLAYER_PED_ID()))
	{
		__LIB_20__.func_806(14);
		return 0;
	}
	return 1;
}

void func_614(var uParam0, int iParam1)//Position - 0xC30A
{
	bool bVar0;
	bVar0 = __LIB_12__.func_178(*iParam1);
	if (BitTest(uParam0, bVar0))
	{
		if (!BitTest(uLocal_49, 3))
		{
			bLocal_46 = *iParam1;
			iLocal_39 = 1;
			fLocal_48 = 0f;
			__LIB_20__.func_805(44);
			__LIB_20__.func_805(45);
			iLocal_76 = MISC::GET_GAME_TIMER();
			*iParam1 = 46;
		}
		else if (14 == bVar0)
		{
			__LIB_20__.func_805(bVar0);
			*iParam1 = 46;
		}
		else
		{
			bLocal_46 = *iParam1;
			iLocal_39 = 1;
			fLocal_48 = 0f;
			*iParam1 = 46;
		}
	}
}

void func_615()//Position - 0xC4CB
{
	if ((((!__LIB_0__.func_368(__LIB_12__.func_59()) && !__LIB_0__.func_368(35)) && !__LIB_20__.func_810(__LIB_18__.func_173())) && !__LIB_0__.func_200()) && !__LIB_0__.func_509())
	{
		if (iLocal_77 < 2 && (MISC::GET_GAME_TIMER() - iLocal_76) > 480000)
		{
			if (iLocal_42 != 2)
			{
				__LIB_20__.func_806(44);
			}
			else
			{
				__LIB_20__.func_806(45);
			}
			iLocal_77++;
		}
	}
}

int func_616()//Position - 0xC7BB
{
	if (iLocal_42 != 2)
	{
		if (iLocal_42 == 1 && __LIB_18__.func_173() == 2)
		{
			if (!BitTest(uLocal_49, 16))
			{
				MISC::SET_BIT(&uLocal_49, 16);
			}
			return 1;
		}
		else if (BitTest(uLocal_49, 16))
		{
			MISC::CLEAR_BIT(&uLocal_49, 16);
		}
		if (__LIB_20__.func_758())
		{
			return 0;
		}
	}
	else if (__LIB_0__.func_368(35))
	{
		return 0;
	}
	else if (__LIB_20__.func_758())
	{
		return 0;
	}
	return 1;
}

void func_617(bool bParam0)//Position - 0xEA0F
{
	char* sVar0;
	if (bParam0)
	{
		sVar0 = "PRC_MARK";
		if (iLocal_42 == 2)
		{
			sVar0 = "PRC_MARKVEH";
			__LIB_12__.func_86(sVar0);
		}
		else if (iLocal_42 == 0)
		{
			if (__LIB_18__.func_173() == 0)
			{
				__LIB_12__.func_85(sVar0);
				__LIB_12__.func_84(sVar0);
			}
			else if (__LIB_18__.func_173() == 1)
			{
				__LIB_12__.func_83(sVar0);
			}
			else
			{
				__LIB_12__.func_83(sVar0);
			}
		}
		else if (iLocal_42 == 1)
		{
			if (__LIB_18__.func_173() == 0)
			{
				__LIB_12__.func_85(sVar0);
				__LIB_12__.func_86(sVar0);
			}
			else if (__LIB_18__.func_173() == 1)
			{
				__LIB_12__.func_83(sVar0);
				__LIB_12__.func_86(sVar0);
			}
			else
			{
				__LIB_12__.func_83(sVar0);
				__LIB_12__.func_86(sVar0);
			}
		}
		MISC::SET_BIT(&uLocal_49, 11);
	}
	else if (BitTest(uLocal_49, 11))
	{
		__LIB_12__.func_82();
		__LIB_12__.func_81();
		__LIB_12__.func_80();
		__LIB_12__.func_79();
		MISC::CLEAR_BIT(&uLocal_49, 11);
	}
}

int func_618(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x9A613
{
	int iVar0;
	*iParam1 = 0;
	if (iParam2 == -1)
	{
		iParam2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11), PED::GET_PED_TEXTURE_VARIATION(iParam0, 11));
	}
	if (iParam3 == -1)
	{
		iParam3 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1), PED::GET_PED_TEXTURE_VARIATION(iParam0, 1));
	}
	if (iParam4 == -1)
	{
		iParam4 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HOODED_JACKET"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("FITTED_HOOD"), 0))
		{
			if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1) && PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam4, joaat("HOOD_HAT"), 1))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SKI_MASK"), 0) || FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
					{
					}
					else
					{
						return 0;
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("BIKER_MASK"), 0))
				{
				}
				else
				{
					return 0;
				}
			}
			if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("NIGHT_VISION"), 0))
			{
				return 0;
			}
		}
		else
		{
			if (PED::GET_PED_PROP_INDEX(iParam0, 0) != -1)
			{
				return 0;
			}
			if ((!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HOOD_COMPAT"), 0) && !FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0)) && PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1) != 0)
			{
				return 0;
			}
		}
		return 1;
	}
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_14"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_HEIST_M_BERD_21_0"):
			case joaat("DLC_MP_HEIST_M_BERD_21_1"):
			case joaat("DLC_MP_HEIST_M_BERD_21_2"):
			case joaat("DLC_MP_HEIST_M_BERD_21_3"):
			case joaat("DLC_MP_HEIST_M_BERD_21_4"):
			case joaat("DLC_MP_HEIST_M_BERD_21_5"):
			case joaat("DLC_MP_HEIST_M_BERD_21_6"):
			case joaat("DLC_MP_HEIST_M_BERD_21_7"):
			case joaat("DLC_MP_HEIST_M_BERD_21_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_0"):
			case joaat("DLC_MP_HEIST_M_BERD_14_1"):
			case joaat("DLC_MP_HEIST_M_BERD_14_2"):
			case joaat("DLC_MP_HEIST_M_BERD_14_3"):
			case joaat("DLC_MP_HEIST_M_BERD_14_4"):
			case joaat("DLC_MP_HEIST_M_BERD_14_5"):
			case joaat("DLC_MP_HEIST_M_BERD_14_6"):
			case joaat("DLC_MP_HEIST_M_BERD_14_7"):
			case joaat("DLC_MP_HEIST_M_BERD_14_8"):
			case joaat("DLC_MP_HEIST_M_BERD_14_9"):
			case joaat("DLC_MP_HEIST_M_BERD_14_10"):
			case joaat("DLC_MP_HEIST_M_BERD_14_11"):
			case joaat("DLC_MP_HEIST_M_BERD_14_12"):
			case joaat("DLC_MP_HEIST_M_BERD_14_13"):
			case joaat("DLC_MP_HEIST_M_BERD_14_14"):
			case joaat("DLC_MP_HEIST_M_BERD_14_15"):
			case joaat("DLC_MP_HEIST_M_BERD_14_16"):
			case joaat("DLC_MP_HEIST_M_BERD_14_17"):
			case joaat("DLC_MP_HEIST_M_BERD_14_18"):
			case joaat("DLC_MP_HEIST_M_BERD_14_19"):
			case joaat("DLC_MP_HEIST_M_BERD_14_20"):
			case joaat("DLC_MP_HEIST_M_BERD_14_21"):
			case joaat("DLC_MP_HEIST_M_BERD_14_22"):
			case joaat("DLC_MP_HEIST_M_BERD_14_23"):
			case joaat("DLC_MP_HEIST_M_BERD_14_24"):
			case joaat("DLC_MP_HEIST_M_BERD_14_25"):
			case joaat("DLC_MP_IND_M_BERD_4_0"):
			case joaat("DLC_MP_IND_M_BERD_4_1"):
			case joaat("DLC_MP_IND_M_BERD_3_0"):
			case joaat("DLC_MP_IND_M_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
		}
	}
	else
	{
		if (!FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam2, joaat("HEIST_DRAW_15"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("SCRUFFY_BALACLAVA"), 0))
		{
			*iParam1 = 1;
			return 0;
		}
		switch (iParam3)
		{
			case joaat("DLC_MP_SMUG_F_BERD_8_0"):
			case joaat("DLC_MP_SMUG_F_BERD_8_1"):
			case joaat("DLC_MP_SMUG_F_BERD_8_2"):
			case joaat("DLC_MP_SMUG_F_BERD_8_3"):
			case joaat("DLC_MP_SMUG_F_BERD_8_4"):
			case joaat("DLC_MP_SMUG_F_BERD_8_5"):
			case joaat("DLC_MP_SMUG_F_BERD_8_6"):
			case joaat("DLC_MP_SMUG_F_BERD_8_7"):
			case joaat("DLC_MP_SMUG_F_BERD_8_8"):
			case joaat("DLC_MP_SMUG_F_BERD_8_9"):
			case joaat("DLC_MP_SMUG_F_BERD_8_10"):
			case joaat("DLC_MP_SMUG_F_BERD_8_11"):
			case joaat("DLC_MP_SMUG_F_BERD_8_12"):
			case joaat("DLC_MP_SMUG_F_BERD_8_13"):
			case joaat("DLC_MP_SMUG_F_BERD_8_14"):
			case joaat("DLC_MP_SMUG_F_BERD_8_15"):
			case joaat("DLC_MP_SMUG_F_BERD_8_16"):
			case joaat("DLC_MP_SMUG_F_BERD_8_17"):
			case joaat("DLC_MP_SMUG_F_BERD_8_18"):
			case joaat("DLC_MP_SMUG_F_BERD_8_19"):
			case joaat("DLC_MP_SMUG_F_BERD_8_20"):
			case joaat("DLC_MP_SMUG_F_BERD_8_21"):
			case joaat("DLC_MP_SMUG_F_BERD_8_22"):
			case joaat("DLC_MP_SMUG_F_BERD_8_23"):
			case joaat("DLC_MP_SMUG_F_BERD_8_24"):
			case joaat("DLC_MP_SMUG_F_BERD_8_25"):
			case joaat("DLC_MP_HEIST_F_BERD_23_0"):
			case joaat("DLC_MP_HEIST_F_BERD_23_1"):
			case joaat("DLC_MP_HEIST_F_BERD_23_2"):
			case joaat("DLC_MP_HEIST_F_BERD_23_3"):
			case joaat("DLC_MP_HEIST_F_BERD_23_4"):
			case joaat("DLC_MP_HEIST_F_BERD_23_5"):
			case joaat("DLC_MP_HEIST_F_BERD_23_6"):
			case joaat("DLC_MP_HEIST_F_BERD_23_7"):
			case joaat("DLC_MP_HEIST_F_BERD_23_8"):
			case joaat("DLC_MP_HEIST_F_BERD_23_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_0"):
			case joaat("DLC_MP_HEIST_F_BERD_22_1"):
			case joaat("DLC_MP_HEIST_F_BERD_22_2"):
			case joaat("DLC_MP_HEIST_F_BERD_22_3"):
			case joaat("DLC_MP_HEIST_F_BERD_22_4"):
			case joaat("DLC_MP_HEIST_F_BERD_22_5"):
			case joaat("DLC_MP_HEIST_F_BERD_22_6"):
			case joaat("DLC_MP_HEIST_F_BERD_22_7"):
			case joaat("DLC_MP_HEIST_F_BERD_22_8"):
			case joaat("DLC_MP_HEIST_F_BERD_22_9"):
			case joaat("DLC_MP_HEIST_F_BERD_22_10"):
			case joaat("DLC_MP_HEIST_F_BERD_22_11"):
			case joaat("DLC_MP_HEIST_F_BERD_22_12"):
			case joaat("DLC_MP_HEIST_F_BERD_22_13"):
			case joaat("DLC_MP_HEIST_F_BERD_22_14"):
			case joaat("DLC_MP_HEIST_F_BERD_22_15"):
			case joaat("DLC_MP_HEIST_F_BERD_22_16"):
			case joaat("DLC_MP_HEIST_F_BERD_22_17"):
			case joaat("DLC_MP_HEIST_F_BERD_22_18"):
			case joaat("DLC_MP_HEIST_F_BERD_22_19"):
			case joaat("DLC_MP_HEIST_F_BERD_22_20"):
			case joaat("DLC_MP_HEIST_F_BERD_22_21"):
			case joaat("DLC_MP_HEIST_F_BERD_21_0"):
			case joaat("DLC_MP_HEIST_F_BERD_21_1"):
			case joaat("DLC_MP_HEIST_F_BERD_21_2"):
			case joaat("DLC_MP_HEIST_F_BERD_21_3"):
			case joaat("DLC_MP_HEIST_F_BERD_21_4"):
			case joaat("DLC_MP_HEIST_F_BERD_21_5"):
			case joaat("DLC_MP_HEIST_F_BERD_21_6"):
			case joaat("DLC_MP_HEIST_F_BERD_21_7"):
			case joaat("DLC_MP_HEIST_F_BERD_21_8"):
			case joaat("DLC_MP_HEIST_F_BERD_20_0"):
			case joaat("DLC_MP_HEIST_F_BERD_20_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_0"):
			case joaat("DLC_MP_HEIST_F_BERD_19_1"):
			case joaat("DLC_MP_HEIST_F_BERD_19_2"):
			case joaat("DLC_MP_HEIST_F_BERD_19_3"):
			case joaat("DLC_MP_HEIST_F_BERD_19_4"):
			case joaat("DLC_MP_HEIST_F_BERD_19_5"):
			case joaat("DLC_MP_HEIST_F_BERD_19_6"):
			case joaat("DLC_MP_HEIST_F_BERD_19_7"):
			case joaat("DLC_MP_HEIST_F_BERD_19_8"):
			case joaat("DLC_MP_HEIST_F_BERD_19_9"):
			case joaat("DLC_MP_HEIST_F_BERD_19_10"):
			case joaat("DLC_MP_HEIST_F_BERD_18_0"):
			case joaat("DLC_MP_HEIST_F_BERD_18_1"):
			case joaat("DLC_MP_HEIST_F_BERD_18_2"):
			case joaat("DLC_MP_HEIST_F_BERD_18_3"):
			case joaat("DLC_MP_HEIST_F_BERD_18_4"):
			case joaat("DLC_MP_HEIST_F_BERD_18_5"):
			case joaat("DLC_MP_HEIST_F_BERD_18_6"):
			case joaat("DLC_MP_HEIST_F_BERD_18_7"):
			case joaat("DLC_MP_HEIST_F_BERD_18_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_0"):
			case joaat("DLC_MP_HEIST_F_BERD_17_1"):
			case joaat("DLC_MP_HEIST_F_BERD_17_2"):
			case joaat("DLC_MP_HEIST_F_BERD_17_3"):
			case joaat("DLC_MP_HEIST_F_BERD_17_4"):
			case joaat("DLC_MP_HEIST_F_BERD_17_5"):
			case joaat("DLC_MP_HEIST_F_BERD_17_6"):
			case joaat("DLC_MP_HEIST_F_BERD_17_7"):
			case joaat("DLC_MP_HEIST_F_BERD_17_8"):
			case joaat("DLC_MP_HEIST_F_BERD_17_9"):
			case joaat("DLC_MP_HEIST_F_BERD_17_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_0"):
			case joaat("DLC_MP_HEIST_F_BERD_14_1"):
			case joaat("DLC_MP_HEIST_F_BERD_14_2"):
			case joaat("DLC_MP_HEIST_F_BERD_14_3"):
			case joaat("DLC_MP_HEIST_F_BERD_14_4"):
			case joaat("DLC_MP_HEIST_F_BERD_14_5"):
			case joaat("DLC_MP_HEIST_F_BERD_14_6"):
			case joaat("DLC_MP_HEIST_F_BERD_14_7"):
			case joaat("DLC_MP_HEIST_F_BERD_14_8"):
			case joaat("DLC_MP_HEIST_F_BERD_14_9"):
			case joaat("DLC_MP_HEIST_F_BERD_14_10"):
			case joaat("DLC_MP_HEIST_F_BERD_14_11"):
			case joaat("DLC_MP_HEIST_F_BERD_14_12"):
			case joaat("DLC_MP_HEIST_F_BERD_14_13"):
			case joaat("DLC_MP_HEIST_F_BERD_14_14"):
			case joaat("DLC_MP_HEIST_F_BERD_14_15"):
			case joaat("DLC_MP_HEIST_F_BERD_14_16"):
			case joaat("DLC_MP_HEIST_F_BERD_14_17"):
			case joaat("DLC_MP_HEIST_F_BERD_14_18"):
			case joaat("DLC_MP_HEIST_F_BERD_14_19"):
			case joaat("DLC_MP_HEIST_F_BERD_14_20"):
			case joaat("DLC_MP_HEIST_F_BERD_14_21"):
			case joaat("DLC_MP_HEIST_F_BERD_14_22"):
			case joaat("DLC_MP_HEIST_F_BERD_14_23"):
			case joaat("DLC_MP_HEIST_F_BERD_14_24"):
			case joaat("DLC_MP_HEIST_F_BERD_14_25"):
			case joaat("DLC_MP_HEIST_F_BERD_13_0"):
			case joaat("DLC_MP_HEIST_F_BERD_13_1"):
			case joaat("DLC_MP_HEIST_F_BERD_13_2"):
			case joaat("DLC_MP_HEIST_F_BERD_13_3"):
			case joaat("DLC_MP_HEIST_F_BERD_12_0"):
			case joaat("DLC_MP_HEIST_F_BERD_12_1"):
			case joaat("DLC_MP_HEIST_F_BERD_12_2"):
			case joaat("DLC_MP_HEIST_F_BERD_12_3"):
			case joaat("DLC_MP_HEIST_F_BERD_7_0"):
			case joaat("DLC_MP_HEIST_F_BERD_7_1"):
			case joaat("DLC_MP_HEIST_F_BERD_5_0"):
			case joaat("DLC_MP_HEIST_F_BERD_5_1"):
			case joaat("DLC_MP_HEIST_F_BERD_4_0"):
			case joaat("DLC_MP_HEIST_F_BERD_4_1"):
			case joaat("DLC_MP_HEIST_F_BERD_0_0"):
			case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_0"):
			case joaat("DLC_MP_LTS_F_BERD_0_1"):
			case joaat("DLC_MP_LTS_F_BERD_0_2"):
			case joaat("DLC_MP_LTS_F_BERD_0_3"):
			case joaat("DLC_MP_LTS_F_BERD_0_4"):
			case joaat("DLC_MP_IND_F_BERD_4_0"):
			case joaat("DLC_MP_IND_F_BERD_4_1"):
			case joaat("DLC_MP_IND_F_BERD_3_0"):
			case joaat("DLC_MP_IND_F_BERD_3_1"):
				*iParam1 = 1;
				return 0;
				break;
			}
	}
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iParam3, joaat("HAZ_MASK"), 0) && !__LIB_0__.func_709(iVar0, 14, func_290(iParam0, 14, 0), -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_619(int iParam0)//Position - 0xFFABB
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_2__.func_232() && __LIB_3__.func_118(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)))
	{
		return __LIB_1__.func_48(__LIB_18__.func_516(PLAYER::PLAYER_ID()));
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && __LIB_3__.func_118(__LIB_0__.func_582(), __LIB_3__.func_103(iParam0)))
	{
		return __LIB_1__.func_48(__LIB_18__.func_516(__LIB_0__.func_582()));
	}
	if (!__LIB_3__.func_118(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)))
	{
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if ((((__LIB_3__.func_118(iVar0, __LIB_3__.func_103(iParam0)) && __LIB_2__.func_378(iVar0, 0)) && __LIB_2__.func_378(iVar0, 1)) && __LIB_2__.func_378(iVar0, 4)) && func_3114(iVar0, 11, 1))
				{
					Var3 = { __LIB_1__.func_267(iVar0) };
					if (__LIB_0__.func_585(Var3))
					{
						if (NETWORK::NETWORK_IS_FRIEND(&Var3))
						{
							return 3;
						}
						else
						{
							iVar1 = 55;
						}
					}
					else
					{
						iVar1 = 55;
					}
				}
			}
			iVar2++;
		}
		if (iVar1 == 55)
		{
			return 55;
		}
	}
	return 4;
}

int func_620(int iParam0)//Position - 0xCBC6
{
	if (!PED::IS_PED_WEARING_HELMET(iParam0) && !__LIB_0__.func_709(ENTITY::GET_ENTITY_MODEL(iParam0), 14, func_307(iParam0, 14, 0), -1))
	{
		return 0;
	}
	return 1;
}

int func_621(int iParam0, int iParam1)//Position - 0x1D933
{
	var uVar0;
	int iVar1;
	if (__LIB_2__.func_169(iParam0) == 13122)
	{
		return 0;
	}
	uVar0 = __LIB_12__.func_192(iParam0, iParam1);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

int func_622(int iParam0)//Position - 0x2CAF0
{
	int iVar0;
	if (__LIB_0__.func_527())
	{
		iVar0 = 0;
		while (iVar0 < 58)
		{
			if (__LIB_0__.func_299(iVar0) == iParam0)
			{
				if (__LIB_20__.func_818(iVar0))
				{
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_623(int iParam0, bool bParam1)//Position - 0x32CC8
{
	var uVar0;
	int iVar1;
	if (bParam1)
	{
		if (iParam0 == 15)
		{
			return 1;
		}
	}
	if (__LIB_6__.func_26(PLAYER::PLAYER_ID()))
	{
		switch (iParam0)
		{
			case 4:
			case 5:
			case 12:
			case 15:
				return 1;
				break;
			}
	}
	uVar0 = __LIB_12__.func_194(iParam0);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

void func_624(int iParam0, int iParam1, var uParam2, int iParam3)//Position - 0x37493
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar0 = 0;
	bVar1 = __LIB_6__.func_25() == true;
	iParam1 = (iParam1 - 1);
	iParam3->f_46 = __LIB_2__.func_446();
	MISC::SET_BIT(&(iParam3->f_2), 4);
	if (bVar1)
	{
		switch (iParam1)
		{
			case 0:
			case 1:
			case 2:
				__LIB_3__.func_805(iParam3, 4, 0);
				__LIB_3__.func_805(iParam3, 6, 0);
				__LIB_3__.func_805(iParam3, 0, 1);
				__LIB_7__.func_366(iParam3, 0, 1);
				__LIB_3__.func_805(iParam3, 5, 0);
				__LIB_3__.func_805(iParam3, 2, 0);
				__LIB_3__.func_805(iParam3, 7, 0);
				__LIB_3__.func_805(iParam3, 3, 0);
				break;
			default:
				iVar0 = 4;
				__LIB_3__.func_805(iParam3, 4, 1);
				__LIB_3__.func_805(iParam3, 6, 1);
				__LIB_3__.func_805(iParam3, 0, 0);
				__LIB_3__.func_805(iParam3, 5, 1);
				__LIB_3__.func_805(iParam3, 2, 0);
				__LIB_3__.func_805(iParam3, 7, BitTest(Global_1946250.f_506, 31));
				__LIB_3__.func_805(iParam3, 3, 0);
				break;
		}
	}
	else
	{
		__LIB_3__.func_805(iParam3, 0, 1);
		__LIB_7__.func_366(iParam3, 0, 1);
		__LIB_3__.func_805(iParam3, 5, 0);
		__LIB_3__.func_805(iParam3, 2, 1);
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 7, 0);
		__LIB_3__.func_805(iParam3, 3, BitTest(Global_1946250.f_506, 31));
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 == 0)
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if ((__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3)) || __LIB_2__.func_444(5, iParam3))
	{
		if (__LIB_2__.func_444(1, iParam3))
		{
			iVar2 = __LIB_11__.func_274(iParam0, PLAYER::PLAYER_ID(), -1);
			__LIB_2__.func_443(iVar2, iParam0, NETWORK::NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT(), iParam1, 0, 0, -1);
		}
		if (bVar1)
		{
			MISC::SET_BIT(&(Global_1946250.f_10), 10);
			if ((iParam1 == 0 || iParam1 == 1) || iParam1 == 2)
			{
				return;
			}
			else
			{
				MISC::SET_BIT(&(Global_1946250.f_9), 28);
			}
		}
		__LIB_2__.func_442(iParam1, 1, 0);
		MISC::CLEAR_BIT(&(iParam3->f_2), 1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		__LIB_2__.func_442(iParam1, 0, 0);
	}
	else if (__LIB_2__.func_444(6, iParam3) || __LIB_2__.func_444(2, iParam3))
	{
		if (bVar1)
		{
			MISC::SET_BIT(&(Global_1946250.f_10), 10);
		}
		__LIB_2__.func_442(iParam1, 1, 1);
	}
	else if (__LIB_2__.func_444(7, iParam3) || __LIB_2__.func_444(3, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_10), 28);
	}
}

char* func_625(var uParam0, var uParam1, var uParam2)//Position - 0x3FAA5
{
	int iVar0;
	var uVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK26A" /* GXT: You cannot enter the Agency while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "FHQ_P_BLCK_A" /* GXT: You can't enter the Agency while resupplying another business. */;
				case 190:
					return "FHQ_P_BLCK_B" /* GXT: You can't enter the Agency while selling goods from another business. */;
				case 167:
					return "FHQ_P_BLCK_C" /* GXT: You can't enter the Agency while acquiring goods for a Warehouse. */;
				case 168:
					return "FHQ_P_BLCK_D" /* GXT: You can't enter the Agency while selling goods from a Warehouse. */;
				case 178:
					return "FHQ_P_BLCK_E" /* GXT: You can't enter the Agency while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "FHQ_P_BLCK_F" /* GXT: You can't enter the Agency while selling vehicles from a Warehouse. */;
				case 225:
					return "FHQ_P_BLCK_G" /* GXT: You can't enter the Agency while acquiring goods for a Bunker. */;
				case 226:
					return "FHQ_P_BLCK_H" /* GXT: You can't enter the Agency while selling goods from a Bunker. */;
				case 229:
					return "FHQ_P_BLCK_I" /* GXT: You can't enter the Agency while acquiring goods for a Hangar. */;
				case 230:
					return "FHQ_P_BLCK_J" /* GXT: You can't enter the Agency while selling goods from a Hangar. */;
				case 237:
					return "FHQ_P_BLCK_O" /* GXT: You can't enter the Agency while taking part in Nightclub business. */;
				case 243:
					return "FHQ_P_BLCK_P" /* GXT: You can't enter the Agency while working for Ms. Baker. */;
				case 271:
					return "FHQ_P_BLCK_U" /* GXT: You can't enter the Agency while conducting Auto Shop Business. */;
				}
			}
		default:
	}
	if (__LIB_2__.func_477())
	{
		return "FHQ_P_BLCK_K" /* GXT: You can't enter the Agency with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "FHQ_P_BLCK_L" /* GXT: You can't access the Agency as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_2__.func_474(PLAYER::PLAYER_ID()))
	{
		return "FHQ_P_BLCK_M" /* GXT: You can't access the Agency whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_2__.func_469(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "FHQ_P_BLCK_N" /* GXT: You can't enter the Agency while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "FHQ_P_BLCK_N" /* GXT: You can't enter the Agency while taking part in a Business Battle. */;
		}
	}
	if (!__LIB_7__.func_627(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar4 = __LIB_18__.func_515(iVar3, &uVar2, &uVar1);
			iVar5 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar5))
			{
				iVar6 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar5);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar3))
						{
							iVar7 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar3);
							if ((__LIB_0__.func_121(iVar7) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) && !__LIB_2__.func_472(iVar3))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "FHQ_P_BLCK_Q" /* GXT: You can't enter the Agency with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar3))
						{
							return "FHQ_P_BLCK_R" /* GXT: You can't enter the Agency with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar3) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar3))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar3), 26)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) || __LIB_1__.func_178(iVar3)) || (__LIB_2__.func_471(iVar3) && !__LIB_2__.func_384(iVar3, 1))) || (__LIB_0__.func_657(iVar3, 1) && iVar4 != iVar6))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar3))
							{
								return "";
							}
							else
							{
								return "FHQ_P_BLCK_Q" /* GXT: You can't enter the Agency with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar3) && ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rcbandito"))
						{
							return "FHQ_P_BLCK_T" /* GXT: You can't enter the Agency with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	return "";
}

int func_626(bool bParam0, int iParam1)//Position - 0x4CA6C
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	var uVar8;
	var uVar9;
	var uVar10;
	bVar0 = false;
	bVar1 = false;
	if (iParam1 == 1)
	{
		bVar1 = true;
	}
	else if (iParam1 == 2)
	{
		bVar0 = true;
	}
	if (Global_1835493 != 0)
	{
		if (!bVar0 && iParam1 != 4)
		{
			if (bParam0)
			{
			}
			return 1;
		}
		else if (bVar0)
		{
			iVar2 = Global_1835493;
			MISC::CLEAR_BIT(&iVar2, 4);
			if (iVar2 > 0)
			{
				if (bParam0)
				{
				}
				return 1;
			}
		}
		else if (iParam1 == 4)
		{
			iVar3 = Global_1835493;
			MISC::CLEAR_BIT(&iVar3, 6);
			if (iVar3 > 0)
			{
				if (bParam0)
				{
				}
				return 1;
			}
		}
		else if (iParam1 == 6)
		{
			uVar4 = Global_1835493;
			MISC::CLEAR_BIT(&uVar4, 7);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 8)
		{
			uVar5 = Global_1835493;
			MISC::CLEAR_BIT(&uVar5, 8);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 9)
		{
			uVar6 = Global_1835493;
			MISC::CLEAR_BIT(&uVar6, 9);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 10)
		{
			uVar7 = Global_1835493;
			MISC::CLEAR_BIT(&uVar7, 10);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 11)
		{
			uVar8 = Global_1835493;
			MISC::CLEAR_BIT(&uVar8, 11);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 12)
		{
			uVar9 = Global_1835493;
			MISC::CLEAR_BIT(&uVar9, 12);
			if (bParam0)
			{
			}
			return 1;
		}
		else if (iParam1 == 13)
		{
			uVar10 = Global_1835493;
			MISC::CLEAR_BIT(&uVar10, 14);
			if (bParam0)
			{
			}
			return 1;
		}
	}
	if (((((((((((__LIB_7__.func_291(PLAYER::PLAYER_ID()) && !__LIB_7__.func_998()) && !(iParam1 == 4 && __LIB_7__.func_379(PLAYER::PLAYER_ID()))) && !(iParam1 == 3 && func_739())) && !(iParam1 == 6 && __LIB_8__.func_213())) && !(iParam1 == 7 && __LIB_8__.func_213())) && !(iParam1 == 8 && __LIB_7__.func_708())) && !(iParam1 == 9 && __LIB_7__.func_707())) && !(iParam1 == 10 && __LIB_7__.func_301())) && !(iParam1 == 11 && __LIB_20__.func_819())) && !(iParam1 == 12 && __LIB_7__.func_301())) && !(iParam1 == 13 && __LIB_20__.func_819()))
	{
		return 1;
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return 1;
	}
	if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 21))
	{
		return 1;
	}
	if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 25))
	{
		return 1;
	}
	if (__LIB_6__.func_926() && NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if (bParam0)
		{
		}
		return 1;
	}
	if (__LIB_1__.func_288())
	{
		return 1;
	}
	if (bVar1)
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 9 || Global_4718592.f_2 == 2)
		{
			if (bParam0)
			{
			}
			return 1;
		}
		if (Global_262145.f_15867 /* Tunable: EXEC_DISABLE_OFFICE_ENTRY */)
		{
			if (bParam0)
			{
			}
			return 1;
		}
		if (__LIB_0__.func_693(PLAYER::PLAYER_ID()) || __LIB_0__.func_694(PLAYER::PLAYER_ID()))
		{
			if (bParam0)
			{
			}
			return 1;
		}
	}
	return 0;
}

bool func_627(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x5C3CC
{
	int iVar0;
	bool bVar1;
	bVar1 = false;
	iVar0 = 0;
	while (iVar0 < __LIB_4__.func_9())
	{
		(*uParam2)[iVar0] = __LIB_12__.func_200(iVar0);
		(*uParam0)[iVar0] = __LIB_7__.func_713(iVar0);
		(*uParam1)[iVar0] = (*uParam0)[iVar0];
		if (!bVar1 && (Global_23150.f_1616[iVar0] != (*uParam1)[iVar0] || !MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_79[iVar0 /*6*/]), (*uParam2)[iVar0])))
		{
			bVar1 = true;
		}
		*uParam3++;
		iVar0++;
	}
	return bVar1;
}

char* func_628(var uParam0, var uParam1, int iParam2)//Position - 0x5C747
{
	int iVar0;
	var uVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK25A" /* GXT: You cannot enter the LS Car Meet while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (__LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0) == -1)
		{
			if (iParam2 == 9 || iParam2 == 10)
			{
				if (!__LIB_5__.func_570(PLAYER::PLAYER_ID()))
				{
					return "CAR_P_BLCK_V" /* GXT: You must be a member of the LS Car Meet to enter the Test Track. */;
				}
			}
		}
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "CAR_P_BLCK_A" /* GXT: You can't enter the LS Car Meet while resupplying another business. */;
				case 190:
					return "CAR_P_BLCK_B" /* GXT: You can't enter the LS Car Meet while selling goods from another business. */;
				case 167:
					return "CAR_P_BLCK_C" /* GXT: You can't enter the LS Car Meet while acquiring goods for a Warehouse. */;
				case 168:
					return "CAR_P_BLCK_D" /* GXT: You can't enter the LS Car Meet while selling goods from a Warehouse. */;
				case 178:
					return "CAR_P_BLCK_E" /* GXT: You can't enter the LS Car Meet while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAR_P_BLCK_F" /* GXT: You can't enter the LS Car Meet while selling vehicles from a Warehouse. */;
				case 225:
					return "CAR_P_BLCK_G" /* GXT: You can't enter the LS Car Meet while acquiring goods for a Bunker. */;
				case 226:
					return "CAR_P_BLCK_H" /* GXT: You can't enter the LS Car Meet while selling goods from a Bunker. */;
				case 229:
					return "CAR_P_BLCK_I" /* GXT: You can't enter the LS Car Meet while acquiring goods for a Hangar. */;
				case 230:
					return "CAR_P_BLCK_J" /* GXT: You can't enter the LS Car Meet while selling goods from a Hangar. */;
				case 237:
					return "CAR_P_BLCK_O" /* GXT: You can't enter the LS Car Meet while taking part in Nightclub business. */;
				case 243:
					return "CAR_P_BLCK_P" /* GXT: You can't enter the LS Car Meet while working for Ms. Baker. */;
				case 271:
					return "CAR_P_BLCK_U" /* GXT: You can't enter the LS Car Meet while working for Sessanta. */;
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAR_P_BLCK_K" /* GXT: You can't enter the LS Car Meet with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAR_P_BLCK_L" /* GXT: You can't access the LS Car Meet as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
	{
		return "CAR_P_BLCK_M" /* GXT: You can't access the LS Car Meet whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAR_P_BLCK_N" /* GXT: You can't enter the LS Car Meet while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAR_P_BLCK_N" /* GXT: You can't enter the LS Car Meet while taking part in a Business Battle. */;
		}
	}
	if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		iVar4 = __LIB_18__.func_515(iVar3, &uVar2, &uVar1);
		iVar5 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, -1, false);
		iVar6 = ENTITY::GET_ENTITY_MODEL(iVar3);
		if (ENTITY::DOES_ENTITY_EXIST(iVar5))
		{
			iVar7 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar5);
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
				{
					if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar3))
					{
						iVar8 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar3);
						if ((__LIB_0__.func_121(iVar8) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) && !__LIB_2__.func_472(iVar3))
						{
							return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
						}
						else
						{
							return "CAR_P_BLCK_Q" /* GXT: You can't enter the LS Car Meet with this vehicle. */;
						}
					}
					else if (__LIB_2__.func_472(iVar3))
					{
						return "CAR_P_BLCK_R" /* GXT: You can't enter the LS Car Meet with the Mobile Operations Center. */;
					}
					else if (((((__LIB_1__.func_179(iVar3) || __LIB_1__.func_376(iVar6)) || __LIB_1__.func_180(iVar6)) || __LIB_1__.func_178(iVar3)) || __LIB_2__.func_471(iVar3)) || (__LIB_0__.func_657(iVar3, 1) && iVar4 != iVar7))
					{
						if (__LIB_1__.func_180(iVar6) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar3))
						{
							return "";
						}
						else
						{
							return "CAR_P_BLCK_Q" /* GXT: You can't enter the LS Car Meet with this vehicle. */;
						}
					}
					else if (__LIB_0__.func_121(iVar3) && ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rcbandito"))
					{
						return "CAR_P_BLCK_T" /* GXT: You can't enter the LS Car Meet with the RC Bandito. */;
					}
					else if ((((((!__LIB_1__.func_393(iVar6) || !__LIB_7__.func_283(iVar6, 21)) || !__LIB_0__.func_657(iVar3, 1)) || __LIB_1__.func_178(iVar3)) || __LIB_0__.func_655(iVar3, 1)) || __LIB_1__.func_580(iVar3, 1)) || __LIB_0__.func_656(iVar3, 1))
					{
						return "CAR_P_BLCK_Q" /* GXT: You can't enter the LS Car Meet with this vehicle. */;
					}
				}
			}
		}
	}
	return "";
}

int func_629(int iParam0)//Position - 0x61A1F
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<13> Var3;
	if (__LIB_8__.func_108(PLAYER::PLAYER_ID(), 1))
	{
		return 0;
	}
	if (__LIB_2__.func_431() == iParam0)
	{
		return 0;
	}
	if ((__LIB_8__.func_108(PLAYER::PLAYER_ID(), 1) || (__LIB_7__.func_291(PLAYER::PLAYER_ID()) && !__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))) || __LIB_1__.func_909())
	{
		return 0;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		switch (iVar0)
		{
			case 192:
			case 190:
			case 167:
			case 168:
			case 178:
			case 188:
			case 225:
			case 226:
			case 229:
			case 230:
			case 233:
			case 237:
				return 0;
			}
		default:
	}
	if (__LIB_4__.func_973(0))
	{
		if (__LIB_2__.func_590(__LIB_0__.func_582(), __LIB_2__.func_591(iParam0)))
		{
			return 1;
		}
	}
	else if (__LIB_2__.func_590(PLAYER::PLAYER_ID(), __LIB_2__.func_591(iParam0)))
	{
		if (!BitTest(Global_1836751.f_2, 6))
		{
			return 1;
		}
		iVar2 = 0;
		while (iVar2 < 32)
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
			if (__LIB_1__.func_264(iVar1, 1, 1) && iVar1 != PLAYER::PLAYER_ID())
			{
				if ((__LIB_2__.func_590(iVar1, __LIB_2__.func_591(iParam0)) && __LIB_7__.func_33(iVar1)) && func_1122(iVar1))
				{
					if (BitTest(Global_1836751.f_2, 9))
					{
						Var3 = { __LIB_1__.func_267(iVar1) };
						if (__LIB_0__.func_585(Var3))
						{
							if (NETWORK::NETWORK_IS_FRIEND(&Var3))
							{
								return 1;
							}
						}
					}
					else
					{
						return 1;
					}
				}
			}
			iVar2++;
		}
	}
	return 0;
}

int func_630(int iParam0)//Position - 0x61BB4
{
	int iVar0;
	int iVar1;
	struct<35> Var2;
	struct<13> Var3;
	bool bVar4;
	bool bVar5;
	bool bVar6;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		return __LIB_2__.func_593(iParam0);
	}
	iVar0 = __LIB_12__.func_201(iParam0);
	switch (iVar0)
	{
		case 0:
			return 1;
			break;
		case 1:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			if (iVar1 == Var2.f_0 && Var2.f_0 != 0)
			{
				return 1;
			}
			break;
		case 2:
			Var3 = { __LIB_1__.func_267(iParam0) };
			return NETWORK::NETWORK_IS_FRIEND(&Var3);
			break;
		case 3:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			Var3 = { __LIB_1__.func_267(iParam0) };
			if ((iVar1 == Var2.f_0 && Var2.f_0 != 0) || NETWORK::NETWORK_IS_FRIEND(&Var3))
			{
				return 1;
			}
			break;
		case 4:
			if (__LIB_4__.func_973(1))
			{
				return __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			break;
		case 5:
			Var3 = { __LIB_1__.func_267(iParam0) };
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			bVar5 = NETWORK::NETWORK_IS_FRIEND(&Var3);
			bVar6 = (iVar1 == Var2.f_0 && Var2.f_0 != 0);
			if (__LIB_4__.func_973(1))
			{
				bVar4 = __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			if ((bVar4 || bVar5) || bVar6)
			{
				return 1;
			}
			break;
		case 6:
			return 0;
			break;
	}
	return 0;
}

char* func_631(int iParam0, var uParam1, var uParam2)//Position - 0x66383
{
	int iVar0;
	var uVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK24A" /* GXT: You cannot enter the Auto Shop while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "AUS_P_BLCK_A" /* GXT: You can't enter the Auto Shop while resupplying another business. */;
				case 190:
					return "AUS_P_BLCK_B" /* GXT: You can't enter the Auto Shop while selling goods from another business. */;
				case 167:
					return "AUS_P_BLCK_C" /* GXT: You can't enter the Auto Shop while acquiring goods for a Warehouse. */;
				case 168:
					return "AUS_P_BLCK_D" /* GXT: You can't enter the Auto Shop while selling goods from a Warehouse. */;
				case 178:
					return "AUS_P_BLCK_E" /* GXT: You can't enter the Auto Shop while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "AUS_P_BLCK_F" /* GXT: You can't enter the Auto Shop while selling vehicles from a Warehouse. */;
				case 225:
					return "AUS_P_BLCK_G" /* GXT: You can't enter the Auto Shop while acquiring goods for a Bunker. */;
				case 226:
					return "AUS_P_BLCK_H" /* GXT: You can't enter the Auto Shop while selling goods from a Bunker. */;
				case 229:
					return "AUS_P_BLCK_I" /* GXT: You can't enter the Auto Shop while acquiring goods for a Hangar. */;
				case 230:
					return "AUS_P_BLCK_J" /* GXT: You can't enter the Auto Shop while selling goods from a Hangar. */;
				case 237:
					return "AUS_P_BLCK_O" /* GXT: You can't enter the Auto Shop while taking part in Nightclub business. */;
				case 243:
					return "AUS_P_BLCK_P" /* GXT: You can't enter the Auto Shop while working for Ms. Baker. */;
				case 271:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "AUS_P_BLCK_K" /* GXT: You can't enter the Auto Shop with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "AUS_P_BLCK_L" /* GXT: You can't access the Auto Shop as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_2__.func_593(PLAYER::PLAYER_ID()))
	{
		return "AUS_P_BLCK_M" /* GXT: You can't access the Auto Shop whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_1__.func_354(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "AUS_P_BLCK_N" /* GXT: You can't enter the Auto Shop while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "AUS_P_BLCK_N" /* GXT: You can't enter the Auto Shop while taking part in a Business Battle. */;
		}
	}
	if (!__LIB_7__.func_627(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar4 = __LIB_18__.func_515(iVar3, &uVar2, &uVar1);
			iVar5 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar5))
			{
				iVar6 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar5);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar3))
						{
							iVar7 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar3);
							if ((__LIB_0__.func_121(iVar7) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) && !__LIB_2__.func_472(iVar3))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "AUS_P_BLCK_Q" /* GXT: You can't enter the Auto Shop with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar3))
						{
							return "AUS_P_BLCK_R" /* GXT: You can't enter the Auto Shop with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar3) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar3))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar3), 25)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3))) || __LIB_1__.func_178(iVar3)) || __LIB_2__.func_471(iVar3)) || (__LIB_0__.func_657(iVar3, 1) && iVar4 != iVar6))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar3)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar3))
							{
								return "";
							}
							else
							{
								return "AUS_P_BLCK_Q" /* GXT: You can't enter the Auto Shop with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar3) && ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rcbandito"))
						{
							return "AUS_P_BLCK_T" /* GXT: You can't enter the Auto Shop with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	if ((!__LIB_2__.func_590(PLAYER::PLAYER_ID(), __LIB_2__.func_591(iParam0)) && func_1184(iParam0)) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar8 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar8) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar8, false))
		{
			if ((((((!__LIB_0__.func_657(iVar8, 1) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar8), 25)) || ENTITY::GET_ENTITY_MODEL(iVar8) == joaat("oppressor2")) || __LIB_6__.func_132(iVar8)) || __LIB_2__.func_613(ENTITY::GET_ENTITY_MODEL(iVar8))) || __LIB_2__.func_342(iVar8, 0)) || __LIB_2__.func_342(iVar8, 1))
			{
				return "AUS_P_BLCK_U" /* GXT: You can't enter the Auto Shop to modify this vehicle. */;
			}
		}
	}
	return "";
}

void func_632(int iParam0)//Position - 0x9BBA9
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	bool bVar14;
	struct<5> Var15;
	int* iVar16;
	int iVar17;
	struct<5> Var18;
	int* iVar19;
	int iVar20;
	struct<5> Var21;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	iVar1 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11);
	iVar2 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 11);
	iVar3 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 1);
	iVar4 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 1);
	iVar5 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 8);
	iVar6 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 8);
	iVar7 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 10);
	iVar8 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 10);
	iVar9 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, iVar1, iVar2);
	iVar10 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 1, iVar3, iVar4);
	iVar11 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 8, iVar5, iVar6);
	iVar12 = FILES::GET_HASH_NAME_FOR_PROP(iParam0, 0, PED::GET_PED_PROP_INDEX(iParam0, 0), PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, 0));
	iVar13 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 10, iVar7, iVar8);
	bVar14 = false;
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar9, joaat("HOODED_JACKET"), 0) && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar9, joaat("HOOD_UP"), 0))
	{
		if (!__LIB_20__.func_822(iParam0, &bVar14, iVar9, iVar10, iVar12) || PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
		{
			if (__LIB_0__.func_258(iVar9, 0, 0, &iVar16))
			{
				FILES::GET_SHOP_PED_COMPONENT(iVar16, &Var15);
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 11, Var15.f_3, Var15.f_4, PED::GET_PED_PALETTE_VARIATION(iParam0, 11));
				if (PED::GET_PED_DRAWABLE_VARIATION(iParam0, 10) == 0 && __LIB_0__.func_257(iVar13, 11, -1))
				{
					if (__LIB_0__.func_257(iVar13, 11, Var15.f_1))
					{
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, iVar7, iVar8, 0);
					}
					else if (__LIB_0__.func_256(iVar13, 10, &iVar17, -1))
					{
						if (__LIB_0__.func_257(iVar17, 11, Var15.f_1))
						{
							FILES::GET_SHOP_PED_COMPONENT(iVar17, &Var18);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var18.f_3, Var18.f_4, 0);
						}
					}
				}
				if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("MP_M_Freemode_01"))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar13, joaat("CREW_LOGO"), 0))
					{
						if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_16"), 0) && iVar13 != joaat("DLC_MP_IE_M_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_M_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_19"), 0) && iVar13 != joaat("DLC_MP_IE_M_DECL_2_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_M_DECL_2_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GORKA_SUIT"), 0))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_X17_M_DECL_10_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("FX_DRAW_2"), 0) && iVar13 != joaat("DLC_MP_FIXER_M_DECL_0_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_M_DECL_0_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("FX_DRAW_3"), 0) && iVar13 != joaat("DLC_MP_FIXER_M_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_M_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar13, joaat("CREW_LOGO"), 0))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_16"), 0))
					{
						if (iVar13 != joaat("DLC_MP_IE_F_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_F_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("IE_DRAW_19"), 0))
					{
						if (iVar13 != joaat("DLC_MP_IE_F_DECL_2_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_F_DECL_2_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("GORKA_SUIT"), 0))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_X17_F_DECL_10_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("FX_DRAW_7"), 0) && iVar13 != joaat("DLC_MP_FIXER_F_DECL_1_0"))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_F_DECL_1_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar16, joaat("FX_DRAW_8"), 0) && iVar13 != joaat("DLC_MP_FIXER_F_DECL_2_0"))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_F_DECL_2_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
				}
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 1, iVar3, iVar4, 0);
			}
		}
	}
	else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar9, joaat("HOODED_JACKET"), 0) && FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar9, joaat("HOOD_DOWN"), 0))
	{
		if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar12, joaat("FAKE_HAT"), 1))
		{
			if (__LIB_0__.func_258(iVar9, 1, 0, &iVar19))
			{
				FILES::GET_SHOP_PED_COMPONENT(iVar19, &Var15);
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 11, Var15.f_3, Var15.f_4, PED::GET_PED_PALETTE_VARIATION(iParam0, 11));
				if (PED::GET_PED_DRAWABLE_VARIATION(iParam0, 10) == 0 && __LIB_0__.func_257(iVar13, 11, -1))
				{
					if (__LIB_0__.func_257(iVar13, 11, Var15.f_1))
					{
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, iVar7, iVar8, 0);
					}
					else if (__LIB_0__.func_256(iVar13, 10, &iVar20, -1))
					{
						if (__LIB_0__.func_257(iVar20, 11, Var15.f_1))
						{
							FILES::GET_SHOP_PED_COMPONENT(iVar20, &Var21);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var21.f_3, Var21.f_4, 0);
						}
					}
				}
				if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("MP_M_Freemode_01"))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar13, joaat("CREW_LOGO"), 0))
					{
						if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("IE_DRAW_16"), 0) && iVar13 != joaat("DLC_MP_IE_M_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_M_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("IE_DRAW_19"), 0) && iVar13 != joaat("DLC_MP_IE_M_DECL_2_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_M_DECL_2_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("GORKA_SUIT"), 0))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_X17_M_DECL_10_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("FX_DRAW_2"), 0) && iVar13 != joaat("DLC_MP_FIXER_M_DECL_0_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_M_DECL_0_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
						else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("FX_DRAW_3"), 0) && iVar13 != joaat("DLC_MP_FIXER_M_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_M_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
				}
				else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar13, joaat("CREW_LOGO"), 0))
				{
					if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("IE_DRAW_16"), 0))
					{
						if (iVar13 != joaat("DLC_MP_IE_F_DECL_1_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_F_DECL_1_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("IE_DRAW_19"), 0))
					{
						if (iVar13 != joaat("DLC_MP_IE_F_DECL_2_0"))
						{
							FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_IE_F_DECL_2_0"), &Var15);
							PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
						}
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("GORKA_SUIT"), 0))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_X17_F_DECL_10_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("FX_DRAW_7"), 0) && iVar13 != joaat("DLC_MP_FIXER_F_DECL_1_0"))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_F_DECL_1_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
					else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar19, joaat("FX_DRAW_8"), 0) && iVar13 != joaat("DLC_MP_FIXER_F_DECL_2_0"))
					{
						FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_FIXER_F_DECL_2_0"), &Var15);
						PED::SET_PED_COMPONENT_VARIATION(iParam0, 10, Var15.f_3, Var15.f_4, 0);
					}
				}
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 1, iVar3, iVar4, 0);
			}
		}
	}
	else if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar11, joaat("HAZ_HOOD"), 0) || __LIB_0__.func_255(iParam0, iVar9))
	{
		iVar6 = iVar2;
		if (!__LIB_20__.func_822(iParam0, &bVar14, iVar9, iVar10, iVar12))
		{
			if (bVar14)
			{
				if (iVar0 == joaat("MP_M_Freemode_01"))
				{
					iVar5 = 15;
					iVar6 = 0;
				}
				else
				{
					iVar5 = 14;
					iVar6 = 0;
				}
			}
			else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("MP_M_Freemode_01"))
			{
				FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_HEIST_M_SPECIAL_6_0"), &Var15);
				iVar5 = Var15.f_3;
			}
			else
			{
				FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_HEIST_F_SPECIAL_10_0"), &Var15);
				iVar5 = Var15.f_3;
			}
		}
		else if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("MP_M_Freemode_01"))
		{
			FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_HEIST_M_SPECIAL_7_0"), &Var15);
			iVar5 = Var15.f_3;
		}
		else
		{
			FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_HEIST_F_SPECIAL_11_0"), &Var15);
			iVar5 = Var15.f_3;
		}
		if (iVar5 != PED::GET_PED_DRAWABLE_VARIATION(iParam0, 8) || iVar6 != PED::GET_PED_TEXTURE_VARIATION(iParam0, 8))
		{
			PED::SET_PED_COMPONENT_VARIATION(iParam0, 8, iVar5, iVar6, PED::GET_PED_PALETTE_VARIATION(iParam0, 8));
		}
	}
}

int func_633(int iParam0, bool bParam1)//Position - 0xA9746
{
	if (iParam0 != 0)
	{
		return __LIB_7__.func_424(iParam0, 1, 0, bParam1);
	}
	return __LIB_7__.func_424(__LIB_12__.func_204(), 1, 0, 1);
}

var func_634(int iParam0, int iParam1)//Position - 0xA99A3
{
	var uVar0;
	switch (iParam0)
	{
		case 147:
			__LIB_20__.func_823(iParam0, &uVar0);
			break;
	}
	return uVar0;
}

float func_635(int iParam0, int iParam1)//Position - 0xA9A10
{
	float fVar0;
	float fVar1;
	__LIB_20__.func_823(iParam0, &fVar1);
	switch (iParam0)
	{
		case 147:
			switch (iParam1)
			{
				case 1:
					fVar0 = (180f - fVar1);
					break;
				case 0:
					fVar0 = (180f - fVar1);
					break;
				case 2:
					fVar0 = (180f - fVar1);
					break;
			}
			break;
	}
	return fVar0;
}

Vector3 func_636(int iParam0, int iParam1)//Position - 0xA9AEF
{
	struct<3> Var0;
	switch (iParam0)
	{
		case 147:
			__LIB_20__.func_824(iParam0, &Var0);
			break;
	}
	return Var0;
}

void func_637(int iParam0, int iParam1, bool bParam2)//Position - 0xAA9B0
{
	if (__LIB_0__.func_674())
	{
		if (iParam1 == 1)
		{
			if (Global_2815059.f_4462 == -1)
			{
				Global_2815059.f_4462 = Global_262145.f_27172 /* Tunable: 945146471 */;
			}
			__LIB_0__.func_495(&(Global_2815059.f_4460), 0, 0);
			if (bParam2)
			{
				if (Global_2815059.f_4465 == -1)
				{
					Global_2815059.f_4465 = Global_262145.f_27173 /* Tunable: -29732167 */;
				}
				__LIB_0__.func_495(&(Global_2815059.f_4463), 0, 0);
			}
			else
			{
				Global_1574582 = 0;
				Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
				__LIB_4__.func_508(1);
			}
		}
		else
		{
			Global_1574582 = 0;
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
			__LIB_4__.func_508(1);
		}
		if ((!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && !__LIB_1__.func_203()) && !func_1684(PLAYER::PLAYER_ID()))
		{
			Global_1057408 = 0;
		}
		STATS::PLAYSTATS_SWITCH_PASSIVE_MODE(false, -1, -1, iParam0);
	}
}

void func_638(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, int iParam6)//Position - 0xAF9AC
{
	int iVar0;
	var uVar1;
	iVar0 = __LIB_12__.func_204();
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					__LIB_20__.func_823(iParam0, &uVar1);
					switch (iParam6)
					{
						case 3:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -1.2164f, 7.7879f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -17f, 6.5f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 15f, 34f) };
							*uParam5 = 0f;
							*uParam4 = 22f;
							break;
						case 4:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -0.1323f, -8.5728f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -13.9f, -7.5f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 17.1f, -18.25f) };
							*uParam5 = 0f;
							*uParam4 = 16f;
							break;
						}
					}
			}
			break;
	}
}

void func_639(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, int iParam6)//Position - 0xAFAA5
{
	int iVar0;
	float fVar1;
	iVar0 = __LIB_12__.func_204();
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					__LIB_20__.func_823(iParam0, &fVar1);
					switch (iParam6)
					{
						case 0:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -54.8f, 3.9f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -56.7f, 3.8f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -53f, 6.8f) };
							*uParam5 = 0f;
							*uParam4 = 2.8f;
							break;
						case 1:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 37.8f, 2.8f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 36f, 2.7f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 39.7f, 5.8f) };
							*uParam5 = 0f;
							*uParam4 = 2.8f;
							break;
						case 2:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 30.6f, 2.8f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 29.8f, 2.7f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 31.5f, 5.5f) };
							*uParam5 = (fVar1 + 180f);
							*uParam4 = 2.4f;
							break;
						case 5:
							*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 2f, -7f) };
							*uParam2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -6f, -7.5f) };
							*uParam3 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, 10f, -14f) };
							*uParam5 = 0f;
							*uParam4 = 16f;
							break;
						}
					}
			}
			break;
	}
}

void func_640(int iParam0, var uParam1, int iParam2)//Position - 0xB0680
{
	int iVar0;
	char* sVar1;
	var uVar2;
	iVar0 = __LIB_12__.func_204();
	sVar1 = "dlc_hei4_anims_submarine_enter_exit_sounds";
	switch (iParam0)
	{
		case 147:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("kosatka"))
				{
					__LIB_20__.func_823(iParam0, &uVar2);
					switch (iParam2)
					{
						case 0:
							MISC::SET_BIT(&(Global_1946250.f_4), 12);
							uParam1->f_22.f_80 = sVar1;
							uParam1->f_22.f_79 = "Enter_Hatch_Transition";
							break;
						case 1:
							MISC::SET_BIT(&(Global_1946250.f_4), 12);
							uParam1->f_22.f_80 = sVar1;
							uParam1->f_22.f_79 = "Enter_Hatch_Transition";
							break;
						case 2:
							MISC::SET_BIT(&(Global_1946250.f_4), 12);
							uParam1->f_22.f_80 = sVar1;
							uParam1->f_22.f_79 = "Enter_Door_Transition";
							break;
						case 5:
							MISC::SET_BIT(&(Global_1946250.f_4), 12);
							uParam1->f_22.f_80 = __LIB_2__.func_688();
							uParam1->f_22.f_79 = "Moonpool_Prompt_Enter";
							break;
						case 3:
							uParam1->f_22.f_78 = __LIB_2__.func_688();
							uParam1->f_22.f_77 = "Helicopter_Prompt_Enter";
							break;
						case 4:
							uParam1->f_22.f_78 = __LIB_2__.func_688();
							uParam1->f_22.f_77 = "Moonpool_Prompt_Enter";
							break;
						}
					}
			}
			break;
	}
}

void func_641(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0xB232A
{
	int iVar0;
	iVar0 = 0;
	if (iParam1 == 1)
	{
		__LIB_3__.func_805(iParam3, 0, 1);
		__LIB_3__.func_805(iParam3, 1, 0);
		__LIB_3__.func_805(iParam3, 2, 0);
		__LIB_3__.func_805(iParam3, 3, 0);
		__LIB_3__.func_805(iParam3, 4, 0);
		__LIB_3__.func_805(iParam3, 5, 0);
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 7, 0);
	}
	else if (iParam1 == 2)
	{
		__LIB_3__.func_805(iParam3, 0, 0);
		__LIB_3__.func_805(iParam3, 1, 0);
		__LIB_3__.func_805(iParam3, 2, 1);
		__LIB_3__.func_805(iParam3, 3, 1);
		__LIB_3__.func_805(iParam3, 4, 1);
		__LIB_7__.func_366(iParam3, 4, __LIB_0__.func_833(PLAYER::PLAYER_ID()));
		__LIB_3__.func_805(iParam3, 5, 1);
		__LIB_3__.func_805(iParam3, 6, 1);
		__LIB_3__.func_805(iParam3, 7, 1);
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam1 == 2)
		{
			if (iParam3->f_5 == 3)
			{
				if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CASINO_ENT_F6_H" /* GXT: Go to your Penthouse. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CASINO_BUY_PROP" /* GXT: Purchase the Penthouse from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 4)
			{
				if (__LIB_7__.func_310(2))
				{
					__LIB_1__.func_342("CASINO_ENT_F7_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 6)
			{
				__LIB_1__.func_342("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else if (iParam3->f_5 == 7)
			{
				__LIB_1__.func_342("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
			}
			else if (iParam3->f_5 == 2)
			{
				__LIB_1__.func_342("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F8_H" /* GXT: Go to the Parking Garage. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3))
	{
		return;
	}
	else if (__LIB_2__.func_444(2, iParam3))
	{
		__LIB_2__.func_763(123);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(3, iParam3))
	{
		__LIB_2__.func_447(0);
		__LIB_2__.func_763(124);
		__LIB_7__.func_394(3);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		__LIB_2__.func_447(1);
		__LIB_2__.func_763(124);
		__LIB_7__.func_394(4);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(5, iParam3))
	{
		__LIB_2__.func_763(125);
		__LIB_7__.func_394(0);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
		if (__LIB_20__.func_829())
		{
			MISC::SET_BIT(&(Global_1946250.f_6), 20);
		}
	}
	else if (__LIB_2__.func_444(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
}

int func_642(int iParam0)//Position - 0xBE412
{
	if (__LIB_7__.func_926(iParam0))
	{
		return 5;
	}
	return __LIB_20__.func_832(iParam0);
}

int func_643(int iParam0)//Position - 0xBE59C
{
	if (SYSTEM::VDIST(__LIB_1__.func_265(PLAYER::PLAYER_ID()), __LIB_2__.func_850(iParam0)) <= 200f || (__LIB_7__.func_926(iParam0) && func_2167(iParam0)))
	{
		if (__LIB_8__.func_108(PLAYER::PLAYER_ID(), 1))
		{
			return 0;
		}
		if (__LIB_2__.func_431() == iParam0)
		{
			return 0;
		}
		if (__LIB_7__.func_926(iParam0))
		{
			return 1;
		}
		if (__LIB_2__.func_853(PLAYER::PLAYER_ID()) && __LIB_12__.func_207(PLAYER::PLAYER_ID()))
		{
			if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
			{
				return 1;
			}
		}
		if (__LIB_4__.func_973(0))
		{
			if (__LIB_2__.func_853(__LIB_0__.func_582()) && __LIB_12__.func_207(__LIB_0__.func_582()))
			{
				if (__LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0)))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_644(int iParam0)//Position - 0xBED03
{
	int iVar0;
	int iVar1;
	struct<13> Var2;
	if (__LIB_8__.func_108(PLAYER::PLAYER_ID(), 1))
	{
		return 0;
	}
	if (__LIB_2__.func_431() == iParam0)
	{
		return 0;
	}
	if (__LIB_4__.func_973(0))
	{
		if (__LIB_2__.func_851(__LIB_0__.func_582(), __LIB_2__.func_852(iParam0)))
		{
			return 1;
		}
	}
	if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
	{
		if (!BitTest(Global_1836751.f_2, 5))
		{
			return 1;
		}
	}
	if (!__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
	{
		iVar1 = 0;
		while (iVar1 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
			if (__LIB_1__.func_264(iVar0, 1, 1) && iVar0 != PLAYER::PLAYER_ID())
			{
				if ((__LIB_2__.func_851(iVar0, __LIB_2__.func_852(iParam0)) && __LIB_12__.func_207(iVar0)) && func_2184(iVar0))
				{
					if (BitTest(Global_1836751.f_2, 8))
					{
						Var2 = { __LIB_1__.func_267(iVar0) };
						if (__LIB_0__.func_585(Var2))
						{
							if (NETWORK::NETWORK_IS_FRIEND(&Var2))
							{
								return 1;
							}
						}
					}
					else
					{
						return 1;
					}
				}
			}
			iVar1++;
		}
	}
	return 0;
}

int func_645(int iParam0)//Position - 0xBEE07
{
	int iVar0;
	int iVar1;
	struct<35> Var2;
	struct<13> Var3;
	bool bVar4;
	bool bVar5;
	bool bVar6;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		return __LIB_2__.func_860(iParam0);
	}
	iVar0 = __LIB_12__.func_208(iParam0);
	switch (iVar0)
	{
		case 0:
			return 1;
			break;
		case 1:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			if (iVar1 == Var2.f_0 && Var2.f_0 != 0)
			{
				return 1;
			}
			break;
		case 2:
			Var3 = { __LIB_1__.func_267(iParam0) };
			return NETWORK::NETWORK_IS_FRIEND(&Var3);
			break;
		case 3:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			Var3 = { __LIB_1__.func_267(iParam0) };
			if ((iVar1 == Var2.f_0 && Var2.f_0 != 0) || NETWORK::NETWORK_IS_FRIEND(&Var3))
			{
				return 1;
			}
			break;
		case 4:
			if (__LIB_4__.func_973(1))
			{
				return __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			break;
		case 5:
			Var3 = { __LIB_1__.func_267(iParam0) };
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			bVar5 = NETWORK::NETWORK_IS_FRIEND(&Var3);
			bVar6 = (iVar1 == Var2.f_0 && Var2.f_0 != 0);
			if (__LIB_4__.func_973(1))
			{
				bVar4 = __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			if ((bVar4 || bVar5) || bVar6)
			{
				return 1;
			}
			break;
		case 6:
			return 0;
			break;
	}
	return 0;
}

char* func_646(int iParam0, var uParam1, int iParam2)//Position - 0xC7676
{
	int iVar0;
	var uVar1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return "";
	}
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK1A" /* GXT: You cannot enter the Arcade while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar0 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar0)
			{
				case 192:
					return "ARC_P_BLCK_A" /* GXT: You can't enter the Arcade while resupplying another business. */;
				case 190:
					return "ARC_P_BLCK_B" /* GXT: You can't enter the Arcade while selling goods from another business. */;
				case 167:
					return "ARC_P_BLCK_C" /* GXT: You can't enter the Arcade while acquiring goods for a Warehouse. */;
				case 168:
					return "ARC_P_BLCK_D" /* GXT: You can't enter the Arcade while selling goods from a Warehouse. */;
				case 178:
					return "ARC_P_BLCK_E" /* GXT: You can't enter the Arcade while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "ARC_P_BLCK_F" /* GXT: You can't enter the Arcade while selling vehicles from a Warehouse. */;
				case 225:
					return "ARC_P_BLCK_G" /* GXT: You can't enter the Arcade while acquiring goods for a Bunker. */;
				case 226:
					return "ARC_P_BLCK_H" /* GXT: You can't enter the Arcade while selling goods from a Bunker. */;
				case 229:
					return "ARC_P_BLCK_I" /* GXT: You can't enter the Arcade while acquiring goods for a Hangar. */;
				case 230:
					return "ARC_P_BLCK_J" /* GXT: You can't enter the Arcade while selling goods from a Hangar. */;
				case 237:
					return "ARC_P_BLCK_O" /* GXT: You can't enter the Arcade while taking part in Nightclub business. */;
				case 243:
					return "ARC_P_BLCK_P" /* GXT: You can't enter the Arcade while working for Ms. Baker. */;
				case 158:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (iParam2 == 1 || iParam2 == 2)
	{
		if (__LIB_2__.func_851(PLAYER::PLAYER_ID(), __LIB_2__.func_852(iParam0)))
		{
			__LIB_3__.func_864(iParam0, &uVar1, &Var2, &Var3, &fVar4, &uVar5, iParam2);
			if ((!__LIB_12__.func_207(PLAYER::PLAYER_ID()) && __LIB_0__.func_121(PLAYER::PLAYER_PED_ID())) && ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Var2, Var3, fVar4, false, false, 0))
			{
				if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || __LIB_0__.func_306(PLAYER::PLAYER_PED_ID(), 0) == -1)
				{
					return "ARC_P_BLCK_SU" /* GXT: The Garage will become accessible once the Arcade is setup. */;
				}
			}
		}
	}
	if (__LIB_2__.func_477())
	{
		return "ARC_P_BLCK_K" /* GXT: You can't enter the Arcade with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "ARC_P_BLCK_L" /* GXT: You can't access the Arcade as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_2__.func_762(PLAYER::PLAYER_ID()))
	{
		return "ARC_P_BLCK_M" /* GXT: You can't access the Arcade whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_2__.func_762(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "ARC_P_BLCK_N" /* GXT: You can't enter the Arcade while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "ARC_P_BLCK_N" /* GXT: You can't enter the Arcade while taking part in a Business Battle. */;
		}
	}
	if (__LIB_2__.func_762(PLAYER::PLAYER_ID()) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar8 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar9 = __LIB_18__.func_515(iVar8, &uVar7, &uVar6);
			iVar10 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar8, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar10))
			{
				iVar11 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar10);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar8))
						{
							iVar12 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar8);
							if ((__LIB_0__.func_121(iVar12) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8))) && !__LIB_2__.func_472(iVar8))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "ARC_P_BLCK_Q" /* GXT: You can't enter the Arcade with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar8))
						{
							return "ARC_P_BLCK_R" /* GXT: You can't enter the Arcade with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar8) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar8))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar8), 22)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8))) || __LIB_1__.func_178(iVar8)) || __LIB_2__.func_471(iVar8)) || (__LIB_0__.func_657(iVar8, 1) && iVar9 != iVar11))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar8)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar8))
							{
								return "";
							}
							else
							{
								return "ARC_P_BLCK_Q" /* GXT: You can't enter the Arcade with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar8) && ENTITY::GET_ENTITY_MODEL(iVar8) == joaat("rcbandito"))
						{
							return "ARC_P_BLCK_T" /* GXT: You can't enter the Arcade with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	return "";
}

void func_647(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0xD13F8
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	bVar1 = (iParam1 == 1 || iParam1 == 2);
	if (iParam2 == PLAYER::PLAYER_ID())
	{
		__LIB_3__.func_805(iParam3, 3, bVar1);
		__LIB_7__.func_366(iParam3, 3, bVar1);
		bVar2 = bVar1;
		if (bVar2)
		{
			bVar2 = __LIB_11__.func_274(iParam0, PLAYER::PLAYER_ID(), __LIB_6__.func_25()) != false;
		}
		__LIB_3__.func_805(iParam3, 4, bVar2);
		__LIB_7__.func_366(iParam3, 4, bVar2);
	}
	else
	{
		bVar3 = (bVar1 && __LIB_5__.func_711(iParam2));
		if (bVar3)
		{
			bVar3 = __LIB_0__.func_338(iParam2) == false;
		}
		__LIB_3__.func_805(iParam3, 3, bVar3);
		__LIB_7__.func_366(iParam3, 3, bVar3);
		__LIB_3__.func_805(iParam3, 4, 0);
		__LIB_7__.func_366(iParam3, 4, 0);
	}
	__LIB_3__.func_805(iParam3, 2, (bVar1 && !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */));
	__LIB_7__.func_366(iParam3, 2, (bVar1 && !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */));
	__LIB_3__.func_805(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_7__.func_366(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	if (iParam1 == 3)
	{
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_7__.func_366(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 7, 0);
		__LIB_7__.func_366(iParam3, 7, 0);
		__LIB_3__.func_805(iParam3, 8, 0);
		__LIB_7__.func_366(iParam3, 8, 0);
	}
	else
	{
		__LIB_3__.func_805(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_7__.func_366(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_7__.func_366(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 8, 1);
		__LIB_7__.func_366(iParam3, 8, __LIB_12__.func_209());
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam3->f_5 == 3)
		{
			if (iParam2 == PLAYER::PLAYER_ID())
			{
				__LIB_1__.func_342("CSNAPT_EXT_F0_H" /* GXT: Go to your Penthouse. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CSNAPT_EXT_F0HB" /* GXT: Go to the Penthouse. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 0)
		{
			__LIB_1__.func_342("CSNAPT_EXT_H3" /* GXT: Exit the Penthouse Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 1)
		{
			__LIB_1__.func_342("CSNAPT_EXT_AHB" /* GXT: All Exit the Penthouse Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 2)
		{
			__LIB_1__.func_342("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
		}
		else if (iParam3->f_5 == 5)
		{
			__LIB_1__.func_342("CSNAPT_EXT_C_I" /* GXT: Go to the Parking Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 6)
		{
			__LIB_1__.func_342("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
		}
		else if (iParam3->f_5 == 7)
		{
			__LIB_1__.func_342("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
		}
		else if (iParam3->f_5 == 4)
		{
			__LIB_1__.func_342("CAS_APT_EXT_F5" /* GXT: All Exit to the Penthouse */, 0, 0);
		}
		else if (iParam3->f_5 == 8)
		{
			if (__LIB_11__.func_278())
			{
				__LIB_1__.func_342("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
			}
			else if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				__LIB_1__.func_342("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
			}
			else if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
			{
				__LIB_1__.func_342("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3))
	{
		return;
	}
	else if (__LIB_2__.func_444(2, iParam3))
	{
		__LIB_2__.func_763(123);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(3, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 9);
	}
	else if (__LIB_2__.func_444(5, iParam3))
	{
		__LIB_2__.func_763(125);
		if (iParam1 == 3)
		{
			__LIB_7__.func_394(1);
		}
		else
		{
			__LIB_7__.func_394(0);
		}
		Global_1946250.f_3377 = iParam1;
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
	}
	else if (__LIB_2__.func_444(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_2__.func_444(8, iParam3))
	{
		__LIB_2__.func_763(146);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 9);
		MISC::SET_BIT(&(Global_1946250.f_5), 13);
	}
}

char* func_648(var uParam0, var uParam1, var uParam2)//Position - 0xD5AED
{
	struct<3> Var0;
	int iVar1;
	var uVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	if (__LIB_12__.func_196())
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
		{
			Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
		}
		if (Var0.f_2 < 105f)
		{
			if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
			{
				return "SI_ENTR_BLCK21A" /* GXT: You cannot enter the Penthouse Garage or Casino Parking Lot while on call. You can cancel this via the Quick Join app on the phone. */;
			}
			else
			{
				return "SI_ENTR_BLCK19A" /* GXT: You cannot enter the Parking Lot while on call. You can cancel this via the Quick Join app on the phone. */;
			}
		}
		else
		{
			return "SI_ENTR_BLCK20A" /* GXT: You cannot enter the Penthouse while on call. You can cancel this via the Quick Join app on the phone. */;
		}
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar1 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar1)
			{
				case 192:
					return "CAS_APT_BLCK_A" /* GXT: You can't enter The Diamond Casino & Resort while resupplying another business. */;
				case 190:
					return "CAS_APT_BLCK_B" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from another business. */;
				case 167:
					return "CAS_APT_BLCK_C" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Warehouse. */;
				case 168:
					return "CAS_APT_BLCK_D" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Warehouse. */;
				case 178:
					return "CAS_APT_BLCK_E" /* GXT: You can't enter The Diamond Casino & Resort while acquiring a vehicle for a Warehouse. */;
				case 188:
					return "CAS_APT_BLCK_F" /* GXT: You can't enter The Diamond Casino & Resort while selling vehicles from a Warehouse. */;
				case 225:
					return "CAS_APT_BLCK_G" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Bunker. */;
				case 226:
					return "CAS_APT_BLCK_H" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Bunker. */;
				case 229:
					return "CAS_APT_BLCK_I" /* GXT: You can't enter The Diamond Casino & Resort while acquiring goods for a Hangar. */;
				case 230:
					return "CAS_APT_BLCK_J" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Hangar. */;
				case 237:
					return "CAS_APT_BLCK_O" /* GXT: You can't enter The Diamond Casino & Resort while selling goods from a Nightclub. */;
				case 243:
					if (__LIB_3__.func_804(PLAYER::PLAYER_ID()))
					{
						return "";
					}
					break;
				}
			}
	}
	if (__LIB_2__.func_477())
	{
		return "CAS_APT_BLCK_K" /* GXT: You can't enter The Diamond Casino & Resort with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_L" /* GXT: You can't access The Diamond Casino & Resort as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false)) && __LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_0__.func_834(PLAYER::PLAYER_ID()))
	{
		return "CAS_APT_BLCK_M" /* GXT: You can't access The Diamond Casino & Resort whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_0__.func_834(PLAYER::PLAYER_ID()) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "CAS_APT_BLCK_N" /* GXT: You can't enter The Diamond Casino & Resort while taking part in a Business Battle. */;
		}
	}
	if (__LIB_0__.func_834(PLAYER::PLAYER_ID()) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar4 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar5 = __LIB_18__.func_515(iVar4, &uVar3, &uVar2);
			iVar6 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar4, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar6))
			{
				iVar7 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar6);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar4))
						{
							iVar8 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar4);
							if ((__LIB_0__.func_121(iVar8) && !__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar4))) && !__LIB_2__.func_472(iVar4))
							{
								return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
							}
							else
							{
								return "CAS_APT_BLCK_Q" /* GXT: You can't enter The Diamond Casino & Resort with this vehicle. */;
							}
						}
						else if (__LIB_2__.func_472(iVar4))
						{
							return "CAS_APT_BLCK_R" /* GXT: You can't enter The Diamond Casino & Resort with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar4) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar4))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar4), 21)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar4))) || __LIB_1__.func_178(iVar4)) || __LIB_2__.func_471(iVar4)) || (__LIB_0__.func_657(iVar4, 1) && iVar5 != iVar7))
						{
							if (__LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar4)) && ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar4))
							{
								return "";
							}
							else
							{
								return "CAS_APT_BLCK_Q" /* GXT: You can't enter The Diamond Casino & Resort with this vehicle. */;
							}
						}
						else if (__LIB_0__.func_121(iVar4) && ENTITY::GET_ENTITY_MODEL(iVar4) == joaat("rcbandito"))
						{
							return "CAS_APT_BLCK_T" /* GXT: You can't enter The Diamond Casino & Resort with the RC Bandito. */;
						}
					}
				}
			}
		}
	}
	return "";
}

void func_649()//Position - 0xD8BA6
{
	if (__LIB_1__.func_310() && !__LIB_1__.func_309())
	{
		__LIB_1__.func_543();
	}
	if (__LIB_1__.func_309())
	{
		__LIB_1__.func_308();
	}
	else
	{
		__LIB_6__.func_967();
		__LIB_20__.func_840(0, 0, 0, 0, 0);
		Global_2667225.f_1753 = 0;
		Global_2667225.f_1752 = 0;
	}
}

int func_650(int iParam0, var uParam1)//Position - 0xDA939
{
	char* sVar0;
	bool bVar1;
	if (__LIB_2__.func_909(iParam0))
	{
		return __LIB_18__.func_572(iParam0, uParam1);
	}
	else if (BitTest(Global_1946250.f_6, 20))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_2), 21);
		STREAMING::REQUEST_IPL("ch_cutscene_casino");
		if (Global_1946250.f_4539 != __LIB_0__.func_160())
		{
			if (!ENTITY::DOES_ENTITY_EXIST(uParam1->f_2))
			{
				if (!__LIB_20__.func_841(&(uParam1->f_2), Global_1946250.f_4539))
				{
					return 0;
				}
			}
		}
		if (!BitTest(uParam1->f_188, 1))
		{
			if (CUTSCENE::CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY())
			{
				CUTSCENE::SET_CUTSCENE_ENTITY_STREAMING_FLAGS("MP_1", 0, 1);
				MISC::SET_BIT(&(uParam1->f_188), 1);
			}
		}
		if (CUTSCENE::HAS_CUTSCENE_LOADED())
		{
			ENTITY::CREATE_MODEL_HIDE(959.0179f, 40.0682f, 116.2767f, 1f, joaat("hei_ch3_12_casinonew_penthouse"), false);
			return 1;
		}
		return 0;
	}
	else
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 27);
		sVar0 = "mini@strip_club@throwout_d@";
		bVar1 = true;
		STREAMING::REQUEST_ANIM_DICT(sVar0);
		if (!STREAMING::HAS_ANIM_DICT_LOADED(sVar0))
		{
			bVar1 = false;
		}
		STREAMING::REQUEST_MODEL(joaat("S_M_Y_Casino_01"));
		if (!STREAMING::HAS_MODEL_LOADED(joaat("S_M_Y_Casino_01")))
		{
			bVar1 = false;
		}
		if (!bVar1)
		{
			return 0;
		}
	}
	return 1;
}

void func_651(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0xDC97D
{
	int iVar0;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	if (iParam1 == 2)
	{
		__LIB_3__.func_805(iParam3, 0, 0);
		__LIB_3__.func_805(iParam3, 1, 0);
		__LIB_3__.func_805(iParam3, 5, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_3__.func_805(iParam3, 7, 1);
		__LIB_7__.func_366(iParam3, 7, __LIB_12__.func_209());
		iVar0 = 2;
		if (__LIB_2__.func_380())
		{
			if (__LIB_2__.func_379())
			{
				iVar0 = 4;
			}
			else
			{
				iVar0 = 5;
			}
			__LIB_3__.func_805(iParam3, 2, 0);
			__LIB_3__.func_805(iParam3, 3, 0);
			__LIB_3__.func_805(iParam3, 4, __LIB_2__.func_379());
			__LIB_7__.func_366(iParam3, 4, __LIB_2__.func_379());
		}
		else
		{
			__LIB_3__.func_805(iParam3, 2, 1);
			__LIB_7__.func_366(iParam3, 2, __LIB_7__.func_310(1));
			__LIB_3__.func_805(iParam3, 3, !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
			__LIB_7__.func_366(iParam3, 3, __LIB_7__.func_310(2));
			__LIB_3__.func_805(iParam3, 4, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
			__LIB_7__.func_366(iParam3, 4, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
		}
	}
	else
	{
		__LIB_3__.func_805(iParam3, 2, 0);
		__LIB_3__.func_805(iParam3, 3, 0);
		__LIB_3__.func_805(iParam3, 4, 0);
		__LIB_3__.func_805(iParam3, 6, 0);
		__LIB_3__.func_805(iParam3, 5, 0);
		__LIB_3__.func_805(iParam3, 7, 0);
		__LIB_7__.func_366(iParam3, 7, 0);
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam1 == 2)
		{
			if (iParam3->f_5 == 2)
			{
				if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CASINO_ENT_F6_H" /* GXT: Go to your Penthouse. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CASINO_BUY_PROP" /* GXT: Purchase the Penthouse from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 3)
			{
				if (__LIB_7__.func_310(2))
				{
					__LIB_1__.func_342("CASINO_ENT_F7_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 5)
			{
				__LIB_1__.func_342("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else if (iParam3->f_5 == 6)
			{
				__LIB_1__.func_342("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
			}
			else if (iParam3->f_5 == 7)
			{
				if (__LIB_11__.func_278())
				{
					__LIB_1__.func_342("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
				}
				else if (BitTest(Global_1946250.f_4523.f_1, 7))
				{
					__LIB_1__.func_342("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
				}
				else if (__LIB_0__.func_834(PLAYER::PLAYER_ID()))
				{
					__LIB_1__.func_342("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
				}
				else
				{
					__LIB_1__.func_342("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__.func_342("CASINO_ENT_F8_H" /* GXT: Go to the Parking Garage. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_2__.func_444(0, iParam3) || __LIB_2__.func_444(1, iParam3))
	{
		return;
	}
	else if (__LIB_2__.func_444(2, iParam3))
	{
		__LIB_2__.func_447(0);
		__LIB_2__.func_763(124);
		__LIB_7__.func_394(3);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(3, iParam3))
	{
		__LIB_2__.func_447(1);
		__LIB_2__.func_763(124);
		__LIB_7__.func_394(4);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(4, iParam3))
	{
		__LIB_2__.func_763(125);
		__LIB_7__.func_394(0);
		__LIB_2__.func_548(1);
	}
	else if (__LIB_2__.func_444(5, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
		if (__LIB_20__.func_829())
		{
			MISC::SET_BIT(&(Global_1946250.f_6), 20);
		}
	}
	else if (__LIB_2__.func_444(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_2__.func_444(7, iParam3))
	{
		__LIB_2__.func_763(146);
		__LIB_7__.func_394(1);
		__LIB_2__.func_548(1);
	}
}

bool func_652(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xDE0E3
{
	int iVar0;
	bool bVar1;
	bVar1 = false;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (__LIB_2__.func_988(iVar0))
		{
			(*uParam2)[iVar0] = "";
			(*uParam0)[iVar0] = 0;
			(*uParam1)[iVar0] = 0;
			if (!MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_79[iVar0 /*6*/]), (*uParam2)[iVar0]))
			{
				bVar1 = true;
			}
		}
		else
		{
			(*uParam2)[iVar0] = __LIB_2__.func_987(iVar0);
			(*uParam0)[iVar0] = __LIB_12__.func_242(iVar0);
			(*uParam1)[iVar0] = (*uParam0)[iVar0];
			if (!bVar1 && (Global_23150.f_1616[iVar0] != (*uParam1)[iVar0] || !MISC::ARE_STRINGS_EQUAL(&(Global_23150.f_79[iVar0 /*6*/]), (*uParam2)[iVar0])))
			{
				bVar1 = true;
			}
			*uParam3++;
		}
		iVar0++;
	}
	return bVar1;
}

int func_653(var uParam0, var uParam1, var uParam2)//Position - 0xDE70C
{
	int iVar0;
	if ((uParam0->f_1 == 2 && __LIB_0__.func_121(PLAYER::PLAYER_PED_ID())) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_20__.func_843(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

char* func_654(int iParam0, var uParam1, var uParam2)//Position - 0xE5BC5
{
	int iVar0;
	int iVar1;
	var uVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK2A" /* GXT: You cannot enter the Arena Workshop while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	iVar0 = __LIB_3__.func_17(iParam0);
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar1 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar1)
			{
				case 192:
					return "ARENA_WS_BLCK_A" /* GXT: You can't enter this Arena Workshop while resupplying another business. */;
				case 190:
					return "ARENA_WS_BLCK_B" /* GXT: You can't enter this Arena Workshop while selling goods from another business. */;
				case 167:
					return "ARENA_WS_BLCK_C" /* GXT: You can't enter this Arena Workshop while acquiring goods for a warehouse. */;
				case 168:
					return "ARENA_WS_BLCK_D" /* GXT: You can't enter this Arena Workshop while selling goods from a warehouse. */;
				case 178:
					return "ARENA_WS_BLCK_E" /* GXT: You can't enter this Arena Workshop while acquiring a vehicle for a warehouse. */;
				case 188:
					return "ARENA_WS_BLCK_F" /* GXT: You can't enter this Arena Workshop while selling vehicles from a warehouse. */;
				case 225:
					return "ARENA_WS_BLCK_G" /* GXT: You can't enter this Arena Workshop while acquiring goods for a bunker. */;
				case 226:
					return "ARENA_WS_BLCK_H" /* GXT: You can't enter this Arena Workshop while selling goods from a bunker. */;
				case 229:
					return "ARENA_WS_BLCK_I" /* GXT: You can't enter this Arena Workshop while acquiring goods for a hangar. */;
				case 230:
					return "ARENA_WS_BLCK_J" /* GXT: You can't enter this Arena Workshop while selling goods from a hangar. */;
				case 237:
					return "ARENA_WS_BLCK_O" /* GXT: You can't enter this Arena Workshop while selling goods from a Nightclub. */;
				case 243:
					return "ARENA_WS_BLCK_S" /* GXT: You can't enter the Arena Workshop while on a job for the Casino Manager. */;
				}
			}
		default:
	}
	if (__LIB_2__.func_477())
	{
		return "ARENA_WS_BLCK_K" /* GXT: You cannot enter your Arena Workshop with a prostitute. */;
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "ARENA_WS_BLCK_L" /* GXT: You can't access your Arena Workshop as the Beast. */;
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && __LIB_3__.func_16(PLAYER::PLAYER_ID(), iVar0))
	{
		return "ARENA_WS_BLCK_M" /* GXT: You can't access this Arena Workshop whilst wearing the Ballistic Equipment. */;
	}
	if ((__LIB_3__.func_16(PLAYER::PLAYER_ID(), iVar0) && __LIB_0__.func_740(PLAYER::PLAYER_ID())) && __LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "ARENA_WS_BLCK_N" /* GXT: You can't enter this Arena Workshop while taking part in a Business Battle. */;
			}
		}
		else
		{
			return "ARENA_WS_BLCK_N" /* GXT: You can't enter this Arena Workshop while taking part in a Business Battle. */;
		}
	}
	if (__LIB_3__.func_16(PLAYER::PLAYER_ID(), iVar0) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar4 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar5 = __LIB_18__.func_515(iVar4, &uVar3, &uVar2);
			iVar6 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar4, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar6))
			{
				iVar7 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar6);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iVar4))
						{
							return "PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */;
						}
						else if (__LIB_2__.func_472(iVar4))
						{
							return "ARENA_WS_BLCK_R" /* GXT: You cannot enter the Arena Workshop with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar4) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar4))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar4), 18)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar4))) || __LIB_1__.func_178(iVar4)) || __LIB_2__.func_471(iVar4)) || (__LIB_0__.func_657(iVar4, 1) && iVar5 != iVar7))
						{
							return "ARENA_WS_BLCK_Q" /* GXT: You cannot enter the Arena Workshop with this vehicle. */;
						}
					}
				}
			}
		}
	}
	return "";
}

void func_655(var uParam0, int iParam1)//Position - 0xE8E4D
{
	struct<3> Var0;
	float* fVar1;
	float* fVar2;
	struct<3> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	var uVar8;
	var uVar9;
	var uVar10;
	int iVar11;
	if (__LIB_0__.func_649(&uLocal_95))
	{
		if (__LIB_2__.func_47(&uLocal_95, 1000, 0) && !__LIB_2__.func_47(&uLocal_95, 2000, 0))
		{
			return;
		}
		else if (__LIB_2__.func_47(&uLocal_95, 2000, 0))
		{
			__LIB_0__.func_579(&uLocal_95);
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (ENTITY::GET_ENTITY_SPEED(iParam1) > 1f)
		{
			return;
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam1, false))
			{
				return;
			}
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!__LIB_0__.func_649(&uLocal_95))
			{
				__LIB_0__.func_580(&uLocal_95, 0, 0);
			}
			if (!BitTest(uParam0->f_22, 2))
			{
				Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 2.4f, 1f, 0.4f) };
				Var3 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 2.4f, -1f, 0.4f) };
				__LIB_2__.func_718(iParam1, Var0, &fVar1);
				__LIB_2__.func_718(iParam1, Var3, &fVar2);
				iVar5 = __LIB_20__.func_844(iParam1);
				iVar6 = PLAYER::GET_PLAYER_PED(iVar5);
				if (PED::IS_PED_IN_ANY_VEHICLE(iVar6, false))
				{
					iVar4 = PED::GET_VEHICLE_PED_IS_IN(iVar6, false);
				}
				if ((ENTITY::DOES_ENTITY_EXIST(iVar4) && !ENTITY::IS_ENTITY_DEAD(iVar4, false)) && !VEHICLE::IS_VEHICLE_MODEL(iVar4, joaat("terbyte")))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0, Var3, 1f, 81, iVar4, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0, Var3, 1f, 83, iParam1, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar11 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar7, &uVar8, &uVar9, &uVar10);
				if (iVar11 == 2)
				{
					if (iVar7 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar11 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

char* func_656(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xFA7A9
{
	int iVar0;
	if ((Global_2815059.f_319 || Global_2815059.f_318) || Global_2815059.f_317)
	{
		return "";
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if (__LIB_3__.func_64(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
		{
			if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
			{
				return "MP_HACK_ORENOV" /* GXT: Your renovated Terrorbyte is now available. */;
			}
			else
			{
				return "MP_HACK_RENOV" /* GXT: The owner has renovated the Terrorbyte. */;
			}
		}
	}
	if (BitTest(Global_1946250.f_506, 7))
	{
		return "BB_TRUCK_KICKi" /* GXT: You no longer have access to the Nerve Center as the owner has left the game. */;
	}
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			iVar0 = __LIB_0__.func_582();
			if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
			{
				return "BB_TRUCK_KICKd" /* GXT: You no longer have access to the Nerve Center as you became a Prospect. */;
			}
			else if (iVar0 != __LIB_0__.func_160() && __LIB_2__.func_456(iVar0))
			{
				return "BB_TRUCK_KICKa" /* GXT: You no longer have access to the Nerve Center as you became an Associate. */;
			}
			else
			{
				return "BB_TRUCK_KICKb" /* GXT: You no longer have access to the Nerve Center as you became a Bodyguard. */;
			}
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if ((BitTest(Global_1946250.f_506, 8) || (__LIB_3__.func_63(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) && PLAYER::PLAYER_ID() != Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)) || (Global_1946250.f_3366 && !BitTest(Global_1946250.f_506, 0)))
		{
			if ((!Global_2815059.f_319 && !Global_2815059.f_318) && !BitTest(Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_3, 7))
			{
				if (__LIB_0__.func_121(__LIB_3__.func_62()) && Global_1853193 == __LIB_20__.func_844(__LIB_3__.func_62()))
				{
					return "BB_TRUCK_KICKc" /* GXT: Owner has requested all to leave the Nerve Center. */;
				}
				else
				{
					return "MP_HTRUCK_DEST" /* GXT: The Terrorbyte has been destroyed and returned to the Nightclub Warehouse. */;
				}
			}
		}
		if (BitTest(Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_3, 7))
		{
			return "MP_HTRUCK_DEST" /* GXT: The Terrorbyte has been destroyed and returned to the Nightclub Warehouse. */;
		}
	}
	return "";
}

int func_657(var uParam0, var uParam1)//Position - 0xFAA4C
{
	int iVar0;
	if (!BitTest(Global_1946250.f_506, 0))
	{
		if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_264(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9, 0, 1) && (!__LIB_1__.func_229(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) || __LIB_3__.func_68(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)))
			{
				MISC::SET_BIT(&(Global_1946250.f_506), 7);
				return 1;
			}
		}
	}
	else if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0) && (!__LIB_1__.func_229(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) || __LIB_3__.func_68(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)))
		{
			iVar0 = __LIB_0__.func_582();
			if (iVar0 != __LIB_0__.func_160())
			{
				__LIB_2__.func_736(1);
				return 1;
			}
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if (!BitTest(Global_1946250.f_506, 0))
		{
			if (__LIB_4__.func_682(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9, 0))
			{
				MISC::SET_BIT(&(Global_1946250.f_506), 8);
				return 1;
			}
		}
		if ((__LIB_3__.func_63(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) && PLAYER::PLAYER_ID() != Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) || __LIB_3__.func_67(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && __LIB_3__.func_902(PLAYER::PLAYER_ID(), 0))
			{
				TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
				if (!BitTest(Global_1946250.f_506, 10))
				{
					MISC::SET_BIT(&(Global_1946250.f_506), 10);
				}
			}
			else if ((TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) != 0) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
			{
				return 1;
			}
		}
		if ((BitTest(Global_1946250.f_506, 10) && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) != 1) && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) != 0)
		{
			return 1;
		}
		if (Global_2815059.f_317 && Global_2815059.f_320)
		{
			return 1;
		}
		if (__LIB_3__.func_64(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
		{
			return 1;
		}
		if (PLAYER::PLAYER_ID() != Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
		{
			if (!__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) || !__LIB_2__.func_457(PLAYER::PLAYER_ID(), Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
			{
				if (__LIB_20__.func_845(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
				{
					return 1;
				}
			}
		}
	}
	if (Global_1835491)
	{
		return 1;
	}
	return 0;
}

int func_658(var uParam0, int iParam1)//Position - 0xFB315
{
	struct<13> Var0;
	struct<13> Var1;
	int iVar2;
	if (iParam1 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && !__LIB_2__.func_457(PLAYER::PLAYER_ID(), iParam1))
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	Var0 = { __LIB_1__.func_267(iParam1) };
	Var1 = { __LIB_1__.func_267(PLAYER::PLAYER_ID()) };
	iVar2 = __LIB_2__.func_180(&Var1);
	if (iVar2 == -1 || iVar2 != __LIB_2__.func_180(&Var0))
	{
		if (!NETWORK::NETWORK_IS_FRIEND(&Var0))
		{
			if (!__LIB_2__.func_457(PLAYER::PLAYER_ID(), iParam1))
			{
				return 0;
			}
		}
	}
	if (__LIB_20__.func_845(iParam1))
	{
		if (!__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) || !__LIB_2__.func_457(iParam1, PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	if (__LIB_3__.func_903(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__.func_71(PLAYER::PLAYER_ID(), iParam1, 0, 1) || __LIB_3__.func_70())
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

int func_659(int iParam0, var uParam1)//Position - 0xFB576
{
	if (__LIB_3__.func_903(PLAYER::PLAYER_ID()))
	{
		if (iParam0 != __LIB_0__.func_160())
		{
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != Global_2689235[iParam0 /*453*/].f_318.f_9)
			{
				return 0;
			}
		}
	}
	if (__LIB_20__.func_845(PLAYER::PLAYER_ID()))
	{
		if (!__LIB_4__.func_682(iParam0, 1) || !__LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	if (__LIB_1__.func_909())
	{
		return 0;
	}
	if ((iParam0 != __LIB_0__.func_160() && __LIB_1__.func_264(iParam0, 1, 1)) && !__LIB_0__.func_811(PLAYER::GET_PLAYER_PED(iParam0)))
	{
		return 1;
	}
	return 0;
}

int func_660(int iParam0, var uParam1)//Position - 0xFB619
{
	int iVar0;
	if (__LIB_20__.func_845(PLAYER::PLAYER_ID()))
	{
		if (!__LIB_4__.func_682(iParam0, 1) || !__LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	iVar0 = __LIB_20__.func_844(0);
	if (__LIB_3__.func_61(PLAYER::PLAYER_ID()) && (BitTest(Global_1946250.f_506, 0) || iVar0 == PLAYER::PLAYER_ID()))
	{
		if (Global_1946250.f_3280 == -1)
		{
			return 1;
		}
	}
	if (Global_1946250.f_3280 == -1)
	{
		if ((__LIB_3__.func_61(PLAYER::PLAYER_ID()) && !__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0)) || (BitTest(Global_1946250.f_506, 0) || iVar0 == PLAYER::PLAYER_ID()))
		{
			if (__LIB_1__.func_425(iParam0, 0) && !__LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID()))
			{
				return 0;
			}
			return 1;
		}
	}
	return 0;
}

char* func_661(var uParam0, var uParam1, var uParam2)//Position - 0xFB706
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_1__.func_288())
	{
		return "";
	}
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK13A" /* GXT: You cannot enter the Nerve Center while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (BitTest(Global_1946250.f_4523, 12))
	{
		if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the security case. */;
		}
	}
	if (__LIB_1__.func_909())
	{
		if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 242))
		{
			return "BAN_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the gold. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 241))
		{
			return "JEW_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the diamonds. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the security case. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 239))
		{
			return "VAN_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the antiques. */;
		}
	}
	iVar0 = __LIB_20__.func_844(0);
	if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !NETWORK::NETWORK_IS_IN_MP_CUTSCENE()) && PLAYER::PLAYER_ID() == iVar0)
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if ((!__LIB_0__.func_655(iVar1, 1) && !VEHICLE::IS_VEHICLE_MODEL(iVar1, joaat("caddy2"))) && !VEHICLE::IS_VEHICLE_MODEL(iVar1, joaat("caddy3")))
		{
			if (__LIB_0__.func_657(iVar1, 1))
			{
			}
		}
	}
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			iVar2 = __LIB_0__.func_582();
			if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
			{
				return "BB_TRUCK_KICKd" /* GXT: You no longer have access to the Nerve Center as you became a Prospect. */;
			}
			else if (iVar2 != __LIB_0__.func_160() && __LIB_2__.func_456(iVar2))
			{
				return "BB_TRUCK_KICKa" /* GXT: You no longer have access to the Nerve Center as you became an Associate. */;
			}
			else
			{
				return "BB_TRUCK_KICKb" /* GXT: You no longer have access to the Nerve Center as you became a Bodyguard. */;
			}
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && (PLAYER::PLAYER_ID() == iVar0 || __LIB_0__.func_582() == iVar0))
	{
		return "HAC_BLOCK_MOC" /* GXT: You can't access this Nerve Center whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_2__.func_104())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_2__.func_477())
	{
		return "HAC_MC_BLOCK_P" /* GXT: You cannot enter your Nerve Center with a prostitute. */;
	}
	if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 3)
	{
		return "SUP_BLOCK_HAC" /* GXT: You can't access this Nerve Center whilst carrying Supplies. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) || __LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "HACK_MC_BLOCK_E" /* GXT: You cannot enter your Nerve Center while active in a mission. */;
		}
	}
	if (Global_1835493 != 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("terbyte")) && !__LIB_0__.func_657(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				return "HAC_MC_BLOCK_V" /* GXT: You cannot enter your Nerve Center while in a mission vehicle. */;
			}
		}
	}
	if (BitTest(Global_1946250.f_2, 30))
	{
		if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				return "BB_TRUCK_SUTAR" /* GXT: You are unable to access the Nerve Center in this area. Move the Terrorbyte to a suitable area. */;
			}
		}
	}
	return "";
}

int func_662(int iParam0, var uParam1, var uParam2)//Position - 0xFC992
{
	int iVar0;
	int iVar1;
	if (__LIB_3__.func_60() || __LIB_3__.func_74(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if (PED::IS_PED_BEING_JACKED(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	if (Global_1835491)
	{
		return 0;
	}
	if (__LIB_2__.func_742(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(iParam0), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_0__.func_121(iVar0))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("terbyte")))
			{
				if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && __LIB_0__.func_582() == __LIB_7__.func_296(iVar0, 1, 0))
				{
					return 1;
				}
			}
		}
		iVar1 = __LIB_20__.func_844(0);
		if (!VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("terbyte")))
		{
			if (!__LIB_7__.func_509(iVar0, iVar1) || iVar1 != iParam0)
			{
				return 0;
			}
		}
	}
	return 1;
}

char* func_663(int iParam0, var uParam1, int iParam2)//Position - 0x107199
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (__LIB_12__.func_196())
	{
		if (iParam2 == 0 || iParam2 == 1)
		{
			return "SI_ENTR_BLCK11A" /* GXT: You cannot enter the Nightclub Warehouse while on call. You can cancel this via the Quick Join app on the phone. */;
		}
		else
		{
			return "SI_ENTR_BLCK12A" /* GXT: You cannot enter the Nightclub while on call. You can cancel this via the Quick Join app on the phone. */;
		}
	}
	iVar0 = __LIB_3__.func_103(iParam0);
	iVar1 = __LIB_0__.func_582();
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar2 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			if (iParam2 == 2 || iParam2 == 3)
			{
				switch (iVar2)
				{
					case 192:
						return "CLUB_BLOCK_A" /* GXT: You can't enter this Nightclub while resupplying another business. */;
					case 190:
						return "CLUB_BLOCK_B" /* GXT: You can't enter this Nightclub while selling goods from another business. */;
					case 167:
						return "CLUB_BLOCK_C" /* GXT: You can't enter this Nightclub while acquiring goods for a warehouse. */;
					case 168:
						return "CLUB_BLOCK_D" /* GXT: You can't enter this Nightclub while selling goods from a warehouse. */;
					case 178:
						return "CLUB_BLOCK_E" /* GXT: You can't enter this Nightclub while acquiring a vehicle for a warehouse. */;
					case 188:
						return "CLUB_BLOCK_F" /* GXT: You can't enter this Nightclub while selling vehicles from a warehouse. */;
					case 225:
						return "CLUB_BLOCK_G" /* GXT: You can't enter this Nightclub while acquiring goods for a bunker. */;
					case 226:
						return "CLUB_BLOCK_H" /* GXT: You can't enter this Nightclub while selling goods from a bunker. */;
					case 229:
						return "CLUB_BLOCK_I" /* GXT: You can't enter this Nightclub while acquiring goods for a hangar. */;
					case 230:
						return "CLUB_BLOCK_J" /* GXT: You can't enter this Nightclub while selling goods from a hangar. */;
					default:
				}
			}
			else
			{
				switch (iVar2)
				{
					case 192:
						return "HUB_BLOCK_A" /* GXT: You can't enter this Nightclub Warehouse while resupplying another business. */;
					case 190:
						return "HUB_BLOCK_B" /* GXT: You can't enter this Nightclub Warehouse while selling goods from another business. */;
					case 167:
						return "HUB_BLOCK_C" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a warehouse. */;
					case 168:
						return "HUB_BLOCK_D" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a warehouse. */;
					case 178:
						return "HUB_BLOCK_E" /* GXT: You can't enter this Nightclub Warehouse while acquiring a vehicle for a warehouse. */;
					case 188:
						return "HUB_BLOCK_F" /* GXT: You can't enter this Nightclub Warehouse while selling vehicles from a warehouse. */;
					case 225:
						return "HUB_BLOCK_G" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a bunker. */;
					case 226:
						return "HUB_BLOCK_H" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a bunker. */;
					case 229:
						return "HUB_BLOCK_I" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a hangar. */;
					case 230:
						return "HUB_BLOCK_J" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a hangar. */;
					}
				}
			}
		default:
	}
	if (__LIB_2__.func_477())
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_K" /* GXT: You cannot enter your Nightclub with a prostitute. */;
		}
		else
		{
			return "HUB_BLOCK_K" /* GXT: You cannot enter your Nightclub Warehouse with a prostitute. */;
		}
	}
	if (__LIB_2__.func_104())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_L" /* GXT: You can't access your Nightclub as the Beast. */;
		}
		else
		{
			return "HUB_BLOCK_L" /* GXT: You can't access your Nightclub Warehouse as the Beast. */;
		}
	}
	if ((__LIB_2__.func_475() && !__LIB_3__.func_162(__LIB_7__.func_377(PLAYER::PLAYER_ID()))) && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	iVar3 = 0;
	if ((iVar1 != __LIB_0__.func_160() && iVar1 != PLAYER::PLAYER_ID()) && __LIB_3__.func_118(iVar1, iVar0))
	{
		iVar3 = 1;
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && (__LIB_3__.func_118(PLAYER::PLAYER_ID(), iVar0) || iVar3))
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_M" /* GXT: You can't access this Nightclub whilst wearing the Ballistic Equipment. */;
		}
		else
		{
			return "HUB_BLOCK_M" /* GXT: You can't access this Nightclub Warehouse whilst wearing the Ballistic Equipment. */;
		}
	}
	if (((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && iVar3) && !__LIB_2__.func_859(__LIB_3__.func_803(PLAYER::PLAYER_ID()))) && !__LIB_4__.func_0(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			if (iParam2 == 2 || iParam2 == 3)
			{
				return "CLUB_BLOCK_S" /* GXT: You cannot enter this Nightclub whilst in a vehicle. */;
			}
			else
			{
				return "HUB_BLOCK_S" /* GXT: You cannot enter this Nightclub Warehouse whilst in a vehicle. */;
			}
		}
	}
	if (__LIB_3__.func_118(PLAYER::PLAYER_ID(), iVar0) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_1__.func_182(PLAYER::PLAYER_ID()) == 140)
			{
				if (iParam2 == 2 || iParam2 == 3)
				{
				}
				else
				{
					return "HUB_BLOCK_N" /* GXT: Your Nightclub Warehouse is unavailable whilst being a member of an MC. */;
				}
			}
		}
		else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_3__.func_118(iVar1, iVar0))
			{
				if (__LIB_2__.func_456(iVar1))
				{
					if (iParam2 == 2 || iParam2 == 3)
					{
					}
					else
					{
						return "HUB_BLOCK_O" /* GXT: Your Nightclub Warehouse is unavailable when working as an Associate for a CEO. */;
					}
				}
				else if (iParam2 == 2 || iParam2 == 3)
				{
				}
				else
				{
					return "HUB_BLOCK_P" /* GXT: Your Nightclub Warehouse is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar6 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar7 = __LIB_18__.func_515(iVar6, &uVar5, &uVar4);
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar6, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8))
			{
				iVar9 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar8);
				if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_7__.func_291(PLAYER::PLAYER_ID()))
					{
						if (__LIB_2__.func_472(iVar6))
						{
							return "CLUB_BLOCK_R" /* GXT: You cannot enter the Nightclub with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__.func_179(iVar6) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar6))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar6), 15)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar6))) || __LIB_1__.func_178(iVar6)) || __LIB_2__.func_471(iVar6)) || (__LIB_0__.func_657(iVar6, 1) && iVar7 != iVar9))
						{
							if (!__LIB_3__.func_160(__LIB_3__.func_161()))
							{
								return "CLUB_BLOCK_Q" /* GXT: You cannot enter the Nightclub with this vehicle. */;
							}
						}
					}
				}
			}
		}
	}
	return "";
}

void func_664(int iParam0)//Position - 0x1080D7
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < 32)
	{
		iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
		if (__LIB_1__.func_264(iVar0, 0, 1) && iVar0 != PLAYER::PLAYER_ID())
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(iVar0), iParam0, false) && !__LIB_20__.func_849(iVar0))
			{
				__LIB_1__.func_114(__LIB_1__.func_276(iVar0), 0, 0f, 0, 0, 0, -1);
				VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(iParam0, iVar0, true);
			}
		}
		iVar1++;
	}
}

void func_665(int iParam0, int iParam1, var uParam2)//Position - 0x10C04C
{
	switch (iParam1)
	{
		case 0:
			if ((Global_262145.f_24391 /* Tunable: 1595462041 */ || __LIB_12__.func_218(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_170(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 1:
			if (Global_262145.f_24391 /* Tunable: 1595462041 */ && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_163(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				uParam2->f_2 = 1;
				if (!BitTest(uParam2->f_3, 6))
				{
					MISC::SET_BIT(&(uParam2->f_3), 6);
				}
				MISC::SET_BIT(&(uParam2->f_3), 0);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 2:
			if (__LIB_20__.func_850(iParam0) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_169(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14), &(uParam2->f_4));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_3__.func_168(&(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 3:
			if ((__LIB_3__.func_915(iParam0) || __LIB_20__.func_850(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_167(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
			}
			break;
	}
}

void func_666(var uParam0, var uParam1)//Position - 0x117E61
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	bool bVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	if (!BitTest(uParam0->f_396, 0))
	{
		if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
		{
			PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
		}
		MISC::SET_BIT(&(uParam0->f_396), 0);
	}
	if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && CAM::IS_SCREEN_FADED_IN()) && !__LIB_3__.func_998(PLAYER::PLAYER_ID()))
	{
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 427, true);
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 353, true);
		PED::SET_PED_MAX_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID(), 3f);
	}
	if ((!__LIB_3__.func_998(PLAYER::PLAYER_ID()) && __LIB_3__.func_271()) && (!BitTest(Global_1946250.f_4523, 4) || uParam0->f_399 == 1))
	{
		if (!__LIB_0__.func_649(&(uParam0->f_397)))
		{
			if (__LIB_20__.func_854())
			{
				__LIB_0__.func_580(&(uParam0->f_397), 0, 0);
				uParam0->f_399 = 1;
			}
		}
		if (__LIB_0__.func_649(&(uParam0->f_397)))
		{
			if (__LIB_20__.func_854())
			{
				__LIB_0__.func_495(&(uParam0->f_397), 0, 0);
				if (!Global_2787784)
				{
					MISC::SET_BIT(&(Global_1946250.f_4523), 4);
					uParam0->f_399 = 1;
				}
			}
			else if (__LIB_2__.func_47(&(uParam0->f_397), 10000, 0))
			{
				__LIB_0__.func_579(&(uParam0->f_397));
				MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
				uParam0->f_399 = 0;
			}
			else if (!BitTest(Global_1946250.f_4523, 4))
			{
				MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
				uParam0->f_399 = 1;
			}
		}
	}
	else if (uParam0->f_399)
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
		uParam0->f_399 = 0;
		__LIB_0__.func_579(&(uParam0->f_397));
	}
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && ENTITY::GET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), &bVar0, &bVar1, &bVar2, &bVar3, &bVar4, &uVar5, &uVar6, &uVar7))
		{
			if ((((!bVar0 || !bVar1) || !bVar2) || !bVar3) || !bVar4)
			{
				ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), true, true, true, true, true, false, false, false);
				VEHICLE::SET_DISABLE_WEAPON_BLADE_FORCES(true);
			}
		}
	}
}

char* func_667(int iParam0, var uParam1, var uParam2)//Position - 0x12586D
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK17A" /* GXT: You cannot enter the Facility while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	iVar0 = __LIB_0__.func_631(iParam0);
	iVar1 = __LIB_0__.func_582();
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar2 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar2)
			{
				case 192:
					return "BASE_BLOCK_A" /* GXT: You can't enter this Facility while resupplying another business. */;
				case 190:
					return "BASE_BLOCK_B" /* GXT: You can't enter this Facility while selling goods from another business. */;
				case 167:
					return "BASE_BLOCK_C" /* GXT: You can't enter this Facility while acquiring goods for a warehouse. */;
				case 168:
					return "BASE_BLOCK_D" /* GXT: You can't enter this Facility while selling goods from a warehouse. */;
				case 178:
					return "BASE_BLOCK_E" /* GXT: You can't enter this Facility while acquiring a vehicle for a warehouse. */;
				case 188:
					return "BASE_BLOCK_F" /* GXT: You can't enter this Facility while selling vehicles from a warehouse. */;
				case 225:
					return "BASE_BLOCK_G" /* GXT: You can't enter this Facility while acquiring goods for a bunker. */;
				case 226:
					return "BASE_BLOCK_H" /* GXT: You can't enter this Facility while selling goods from a bunker. */;
				case 229:
					return "BASE_BLOCK_I" /* GXT: You can't enter this Facility while acquiring goods for a hangar. */;
				case 230:
					return "BASE_BLOCK_J" /* GXT: You can't enter this Facility while selling goods from a hangar. */;
				}
			}
		default:
	}
	if (__LIB_2__.func_477())
	{
		return "BASE_BLOCK_K" /* GXT: You cannot enter your Facility with a prostitute. */;
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "BASE_BLOCK_L" /* GXT: You can't access your Facility as the Beast. */;
	}
	if (__LIB_2__.func_475())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	iVar3 = 0;
	if ((iVar1 != __LIB_0__.func_160() && iVar1 != PLAYER::PLAYER_ID()) && __LIB_3__.func_274(iVar1, iVar0))
	{
		iVar3 = 1;
	}
	if (__LIB_3__.func_274(PLAYER::PLAYER_ID(), iVar0) || iVar3)
	{
		if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
		{
			return "BASE_BLOCK_M" /* GXT: You can't access this Facility whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__.func_297(PLAYER::PLAYER_ID()))
		{
			return "BASE_BLOCK_U" /* GXT: You can't enter this Facility whilst participating in a Business Battle. */;
		}
		if (__LIB_2__.func_104())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_3__.func_274(PLAYER::PLAYER_ID(), iVar0) && !__LIB_7__.func_314(PLAYER::PLAYER_ID()))
	{
		if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_1__.func_182(PLAYER::PLAYER_ID()) == 140)
			{
				return "BASE_BLOCK_N" /* GXT: Your Facility is unavailable whilst being a member of an MC. */;
			}
		}
		else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_3__.func_274(iVar1, iVar0))
			{
				if (__LIB_2__.func_456(iVar1))
				{
					return "BASE_BLOCK_O" /* GXT: Your Facility is unavailable when working as an Associate for a CEO. */;
				}
				else
				{
					return "BASE_BLOCK_P" /* GXT: Your Facility is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !__LIB_4__.func_27(PLAYER::PLAYER_ID()))
		{
			iVar6 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar7 = __LIB_18__.func_515(iVar6, &uVar5, &uVar4);
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar6, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8))
			{
				iVar9 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar8);
				if ((__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1) && __LIB_3__.func_803(PLAYER::PLAYER_ID()) != 233) && !__LIB_7__.func_926(iParam0))
				{
					if ((((((__LIB_1__.func_179(iVar6) || __LIB_1__.func_376(ENTITY::GET_ENTITY_MODEL(iVar6))) || !__LIB_7__.func_283(ENTITY::GET_ENTITY_MODEL(iVar6), 13)) || __LIB_1__.func_180(ENTITY::GET_ENTITY_MODEL(iVar6))) || __LIB_1__.func_178(iVar6)) || __LIB_2__.func_471(iVar6)) || (__LIB_0__.func_657(iVar6, 1) && iVar7 != iVar9))
					{
						return "BASE_BLOCK_R" /* GXT: You cannot enter the Facility with this vehicle. */;
					}
					if (__LIB_2__.func_472(iVar6))
					{
						return "BASE_BLOCK_T" /* GXT: You cannot enter the Facility with the Mobile Operations Center. */;
					}
				}
			}
		}
	}
	else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && iVar3)
	{
		if ((__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1) && __LIB_3__.func_803(PLAYER::PLAYER_ID()) != 233) && !__LIB_7__.func_926(iParam0))
		{
			return "BASE_BLOCK_S" /* GXT: You cannot enter this Facility, only the Facility's Owner can drive a vehicle in. */;
		}
	}
	return "";
}

void func_668(var uParam0, int iParam1)//Position - 0x12993C
{
	struct<3> Var0;
	float* fVar1;
	float* fVar2;
	struct<3> Var3;
	int iVar4;
	int iVar5;
	var uVar6;
	var uVar7;
	var uVar8;
	int iVar9;
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!BitTest(uParam0->f_22, 2))
			{
				Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 0f, -7f, 0f) };
				Var3 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 0f, -7.8f, 0f) };
				__LIB_3__.func_318(iParam1, Var0, &fVar1);
				__LIB_3__.func_318(iParam1, Var3, &fVar2);
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(__LIB_20__.func_857()), false))
				{
					iVar4 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(__LIB_20__.func_857()), false);
				}
				if (ENTITY::DOES_ENTITY_EXIST(iVar4) && !ENTITY::IS_ENTITY_DEAD(iVar4, false))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0.f_0, Var0.f_1, fVar1, Var3.f_0, Var3.f_1, fVar2, 1f, 81, iVar4, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0.f_0, Var0.f_1, fVar1, Var3.f_0, Var3.f_1, fVar2, 2f, 83, iParam1, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar9 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar5, &uVar6, &uVar7, &uVar8);
				if (iVar9 == 2)
				{
					if (iVar5 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar9 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

char* func_669(var uParam0, var uParam1, var uParam2)//Position - 0x12C190
{
	int iVar0;
	int iVar1;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK3A" /* GXT: You cannot enter the Avenger while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	iVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	if (__LIB_1__.func_288())
	{
		return "";
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (!__LIB_19__.func_59(iVar1) && ENTITY::GET_ENTITY_MODEL(iVar1) != joaat("avenger"))
		{
			if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()) && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar1, -1, false) == PLAYER::PLAYER_PED_ID())
			{
				if (!__LIB_1__.func_174(PLAYER::PLAYER_ID()))
				{
					if (!__LIB_4__.func_958(PLAYER::PLAYER_ID()))
					{
						if (VEHICLE::IS_VEHICLE_MODEL(iVar1, joaat("oppressor2")))
						{
							return "PROP_NO_OPPRE" /* GXT: The Oppressor Mk II can only be modified in the Specialized Vehicle Workshop. */;
						}
						else
						{
							return "PROP_NO_WORKA" /* GXT: Unable to enter as this vehicle cannot be modified in the Avenger Vehicle Workshop. */;
						}
					}
				}
			}
		}
	}
	if (__LIB_2__.func_477())
	{
		return "AVENG_BLOCK_G" /* GXT: You cannot enter your Avenger with a prostitute. */;
	}
	if (__LIB_2__.func_475())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	if (BitTest(Global_1946250.f_506, 31))
	{
		if (__LIB_3__.func_330(PLAYER::PLAYER_ID()))
		{
			if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
			{
				return "AVENG_BLOCK_H" /* GXT: Your Avenger is unavailable whilst being a member of an MC. */;
			}
			else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
			{
				if (!__LIB_3__.func_330(iVar0))
				{
					if (__LIB_2__.func_456(iVar0))
					{
						return "AVENG_BLOCK_I" /* GXT: Your Avenger is unavailable when working as an Associate for a CEO. */;
					}
					else
					{
						return "AVENG_BLOCK_J" /* GXT: Your Avenger is unavailable when working as a Bodyguard for a VIP. */;
					}
				}
			}
		}
	}
	if (__LIB_3__.func_330(PLAYER::PLAYER_ID()) || __LIB_3__.func_330(__LIB_0__.func_582()))
	{
		if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_AVENG" /* GXT: You can't access this Avenger whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__.func_104())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_3__.func_341())
	{
		return "GAN_AVEN_SUTAR" /* GXT: You are unable to access the Avenger's Hold in this area. Move the Avenger to a suitable area. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) || __LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0))
	{
		return "TRUC_AV_BLOCK_E" /* GXT: You cannot enter your Avenger's hold while active in a mission. */;
	}
	if (Global_1835493 != 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("avenger")) && !__LIB_0__.func_657(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				return "AV_BLOCK_VEH" /* GXT: You cannot enter your Avenger's hold while in a mission vehicle. */;
			}
		}
	}
	return "";
}

char* func_670(int iParam0, var uParam1, var uParam2)//Position - 0x139E5D
{
	int iVar0;
	bool bVar1;
	int iVar2;
	var uVar3;
	var uVar4;
	int iVar5;
	int iVar6;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK14A" /* GXT: You cannot enter the Hangar while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	iVar0 = __LIB_0__.func_625(iParam0);
	bVar1 = __LIB_0__.func_582();
	if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 0))
	{
		iVar2 = __LIB_3__.func_803(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
		{
			switch (iVar2)
			{
				case 192:
					return "HANG_BLOCK_A" /* GXT: You can't enter this Hangar while resupplying another business. */;
				case 190:
					return "HANG_BLOCK_B" /* GXT: You can't enter this Hangar while selling goods from another business. */;
				case 167:
					return "HANG_BLOCK_C" /* GXT: You can't enter this Hangar while acquiring goods for a warehouse. */;
				case 168:
					return "HANG_BLOCK_D" /* GXT: You can't enter this Hangar while selling goods from a warehouse. */;
				case 178:
					return "HANG_BLOCK_E" /* GXT: You can't enter this Hangar while acquiring a vehicle for a warehouse. */;
				case 188:
					return "HANG_BLOCK_F" /* GXT: You can't enter this Hangar while selling vehicles from a warehouse. */;
				case 233:
					return "HANG_BLOCK_L" /* GXT: You can't enter this Hangar while on a heist prep mission. */;
				}
			}
		default:
	}
	if (__LIB_2__.func_477())
	{
		return "HANG_BLOCK_G" /* GXT: You cannot enter your Hangar with a prostitute. */;
	}
	if (__LIB_2__.func_475())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	if (__LIB_3__.func_397(PLAYER::PLAYER_ID(), iVar0) && !__LIB_7__.func_309(PLAYER::PLAYER_ID()))
	{
		if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
		{
			return "HANG_BLOCK_H" /* GXT: Your Hangar is unavailable whilst being a member of an MC. */;
		}
		else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_3__.func_397(bVar1, iVar0))
			{
				if (__LIB_2__.func_456(bVar1))
				{
					return "HANG_BLOCK_I" /* GXT: Your Hangar is unavailable when working as an Associate for a CEO. */;
				}
				else
				{
					return "HANG_BLOCK_J" /* GXT: Your Hangar is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!__LIB_1__.func_242(PLAYER::PLAYER_PED_ID()))
			{
				return "HANG_BLOCK_K" /* GXT: You cannot enter the Hangar with this vehicle. */;
			}
			iVar5 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar6 = __LIB_18__.func_515(iVar5, &uVar4, &uVar3);
			if (((__LIB_1__.func_178(iVar5) && iVar6 == PLAYER::PLAYER_ID()) && __LIB_3__.func_405(iVar5)) || __LIB_1__.func_104(iVar5, 1))
			{
			}
			else if (__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
			{
				return "HANG_BLOCK_K" /* GXT: You cannot enter the Hangar with this vehicle. */;
			}
		}
	}
	if (__LIB_3__.func_397(PLAYER::PLAYER_ID(), iVar0) || __LIB_3__.func_397(bVar1, iVar0))
	{
		if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_HANG" /* GXT: You can't access this Hangar whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__.func_104())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_2__.func_476(PLAYER::PLAYER_ID()))
	{
		return "PPA_BEAST3" /* GXT: You can't access your Hangar as the Beast. */;
	}
	return "";
}

void func_671(var uParam0)//Position - 0x14B02C
{
	int iVar0;
	struct<3> Var1;
	float* fVar2;
	float* fVar3;
	struct<3> Var4;
	int iVar5;
	int iVar6;
	var uVar7;
	var uVar8;
	var uVar9;
	int iVar10;
	iVar0 = __LIB_8__.func_97();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!BitTest(uParam0->f_22, 2))
			{
				Var1 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -7.9f, 0f) };
				Var4 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -8.5f, 0f) };
				__LIB_3__.func_318(iVar0, Var1, &fVar2);
				__LIB_3__.func_318(iVar0, Var4, &fVar3);
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(__LIB_20__.func_857()), false))
				{
					iVar5 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(__LIB_20__.func_857()), false);
				}
				if (ENTITY::DOES_ENTITY_EXIST(iVar5) && !ENTITY::IS_ENTITY_DEAD(iVar5, false))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1.f_0, Var1.f_1, fVar2, Var4.f_0, Var4.f_1, fVar3, 1f, 81, iVar5, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1.f_0, Var1.f_1, fVar2, Var4.f_0, Var4.f_1, fVar3, 2f, 83, iVar0, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar10 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar6, &uVar7, &uVar8, &uVar9);
				if (iVar10 == 2)
				{
					if (iVar6 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar10 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

int func_672(int iParam0, var uParam1)//Position - 0x14D28F
{
	if (PLAYER::PLAYER_ID() == __LIB_20__.func_857())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (__LIB_3__.func_457(PLAYER::PLAYER_ID()) || BitTest(Global_1946250.f_506, 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_673(int iParam0, int iParam1, struct<3> Param2)//Position - 0x1504A3
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (!__LIB_1__.func_233(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
		if (SYSTEM::VDIST2(__LIB_3__.func_77(__LIB_6__.func_933(__LIB_20__.func_857())), Param2) <= 3600f)
		{
			return 1;
		}
	}
	return 0;
}

char* func_674(int iParam0, char* sParam1, var uParam2)//Position - 0x17C89B
{
	bool bVar0;
	if (__LIB_12__.func_196())
	{
		return "SI_ENTR_BLCK16A" /* GXT: You cannot enter the Warehouse while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_7__.func_619(PLAYER::PLAYER_ID(), __LIB_2__.func_321(iParam0)))
	{
		if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 1))
		{
			if (__LIB_1__.func_359(PLAYER::PLAYER_ID()))
			{
				return "WHOUSE_MC_BLOCK_P" /* GXT: Your Warehouse is unavailable whilst you are an MC President. */;
			}
			else
			{
				StringCopy(sParam1, __LIB_18__.func_946(PLAYER::PLAYER_ID(), 0), 64);
				return "WHOUSE_MC_BLOCK_M" /* GXT: Your Warehouse is unavailable whilst you are Motorcycle Club ~a~. */;
			}
		}
		else if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			bVar0 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
			if (!__LIB_7__.func_619(bVar0, __LIB_2__.func_321(iParam0)))
			{
				if (__LIB_2__.func_456(__LIB_0__.func_582()))
				{
					return "WHOUSE_GOONHLP1C" /* GXT: Your Warehouse is unavailable when working as an Associate for a CEO. */;
				}
				else
				{
					return "WHOUSE_GOON_HLP1" /* GXT: Your Warehouse is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
	}
	if (__LIB_7__.func_619(PLAYER::PLAYER_ID(), __LIB_2__.func_321(iParam0)) || __LIB_7__.func_619(__LIB_0__.func_582(), __LIB_2__.func_321(iParam0)))
	{
		if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_WARE" /* GXT: You can't access this Warehouse whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__.func_104())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_2__.func_475())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	return "";
}

int func_675(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0x1954AD
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (iParam2 == -2)
	{
		iVar0 = PLAYER::GET_PLAYER_TEAM(iParam0);
	}
	else
	{
		iVar0 = iParam2;
	}
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 148)
	{
		bVar1 = true;
	}
	iVar2 = iParam0;
	if (iVar2 > -1)
	{
		if (Global_1853348[iVar2 /*834*/] == 148)
		{
			bVar1 = true;
		}
	}
	if (!bVar1)
	{
		if (iVar0 != -1)
		{
			if (__LIB_12__.func_231())
			{
				iVar3 = __LIB_6__.func_409(iParam0);
				if (!iVar3 == -1)
				{
					return __LIB_6__.func_890(iVar3);
				}
			}
			if ((__LIB_0__.func_723(iParam1, iParam0, iVar0, 0) && !BitTest(Global_4718592.f_15, 18)) || ((__LIB_0__.func_610(PLAYER::GET_PLAYER_TEAM(iParam1), PLAYER::GET_PLAYER_TEAM(iParam0), 0) && BitTest(Global_4718592.f_15, 23)) && !BitTest(Global_4718592.f_15, 18)))
			{
				return __LIB_0__.func_720(1);
			}
			else if (BitTest(Global_4718592.f_15, 26))
			{
				return __LIB_0__.func_722(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		else if ((Global_1836584 || Global_1836575) || Global_1853348[iParam0 /*834*/] == 0)
		{
			if (iParam0 == iParam1 || (Global_1836584 == 1 && Global_1836594 == 0))
			{
				return __LIB_0__.func_720(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		if (Global_1836579 && Global_1836068.f_14 == iParam0)
		{
			return 28;
		}
	}
	iVar4 = __LIB_6__.func_409(iParam0);
	if (!iVar4 == -1)
	{
		return __LIB_6__.func_890(iVar4);
	}
	if (bParam3)
	{
		return 0;
	}
	return 1;
}

void func_676(var uParam0, bool bParam1)//Position - 0x197B35
{
	struct<2> Var0;
	int iVar1;
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_47.f_1471))
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SHOW_TICKER");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam1);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_0__.func_727());
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SET_TICKER_TITLE");
		switch (Global_1853348[PLAYER::PLAYER_ID() /*834*/])
		{
			case 1:
			case 2:
			case 3:
			case 0:
			case 8:
				if (__LIB_6__.func_869(iVar1))
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_8__.func_840(), 16);
							__LIB_0__.func_478(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__.func_514(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_0__.func_514(&(Global_1048576.f_14));
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						case 3:
							__LIB_6__.func_234(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
					}
				}
				else
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_8__.func_840(), 16);
							__LIB_0__.func_478(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__.func_514(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_6__.func_234(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						}
				}
				break;
			default:
				if (uParam0->f_47.f_2175 >= 2)
				{
					uParam0->f_47.f_2175 = 0;
				}
				switch (uParam0->f_47.f_2175)
				{
					case 0:
						MemCopy(&Var0, {__LIB_8__.func_689(func_5173())}, 4);
						__LIB_0__.func_514(&Var0);
						uParam0->f_47.f_2178 = 8000;
						uParam0->f_47.f_2175++;
						break;
					case 1:
						__LIB_6__.func_234(uParam0);
						break;
				}
				break;
		}
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

int func_677(var uParam0, int* iParam1, int* iParam2, var uParam3)//Position - 0x1B6A02
{
	int iVar0;
	iVar0 = PLAYER::PLAYER_ID();
	if (iParam1->f_6 == -1)
	{
		return 1;
	}
	if (BitTest(*iParam1, 2))
	{
		if (BitTest(*iParam1, 1))
		{
			if (BitTest(uParam0->f_3[iParam1->f_6 /*2*/], 2))
			{
				if (__LIB_20__.func_870(iParam2, uParam3))
				{
					MISC::CLEAR_BIT(iParam1, 2);
				}
			}
		}
		else if (((((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__.func_77(0)) && !HUD::IS_WARNING_MESSAGE_ACTIVE()) && !__LIB_0__.func_661()) && !__LIB_1__.func_156()) && func_5471())
		{
			if (((PAD::IS_DISABLED_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, __LIB_4__.func_261(0)) && !PAD::IS_DISABLED_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/)) || __LIB_0__.func_706())
			{
				__LIB_6__.func_404(&(iParam2->f_3));
				if (BitTest(*iParam1, 9))
				{
					MISC::SET_BIT(iParam1, 11);
				}
				else
				{
					MISC::SET_BIT(iParam1, 1);
				}
			}
		}
	}
	else if (uParam0->f_3[iParam1->f_6 /*2*/].f_1 != iVar0 || !BitTest(uParam0->f_3[iParam1->f_6 /*2*/], 0))
	{
		iParam1->f_6 = -1;
		MISC::CLEAR_BIT(iParam1, 1);
		return 1;
	}
	return 0;
}

int func_678(int iParam0)//Position - 0xBEE50
{
	int iVar0;
	int iVar1;
	struct<35> Var2;
	struct<13> Var3;
	bool bVar4;
	bool bVar5;
	bool bVar6;
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		return __LIB_2__.func_860(iParam0);
	}
	iVar0 = __LIB_12__.func_240(iParam0);
	switch (iVar0)
	{
		case 0:
			return 1;
			break;
		case 1:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			if (iVar1 == Var2.f_0 && Var2.f_0 != 0)
			{
				return 1;
			}
			break;
		case 2:
			Var3 = { __LIB_1__.func_267(iParam0) };
			return NETWORK::NETWORK_IS_FRIEND(&Var3);
			break;
		case 3:
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			Var3 = { __LIB_1__.func_267(iParam0) };
			if ((iVar1 == Var2.f_0 && Var2.f_0 != 0) || NETWORK::NETWORK_IS_FRIEND(&Var3))
			{
				return 1;
			}
			break;
		case 4:
			if (__LIB_4__.func_973(1))
			{
				return __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			break;
		case 5:
			Var3 = { __LIB_1__.func_267(iParam0) };
			iVar1 = __LIB_3__.func_808();
			Var2 = { __LIB_7__.func_298(iParam0) };
			bVar5 = NETWORK::NETWORK_IS_FRIEND(&Var3);
			bVar6 = (iVar1 == Var2.f_0 && Var2.f_0 != 0);
			if (__LIB_4__.func_973(1))
			{
				bVar4 = __LIB_2__.func_457(iParam0, PLAYER::PLAYER_ID());
			}
			if ((bVar4 || bVar5) || bVar6)
			{
				return 1;
			}
			break;
		case 6:
			return 0;
			break;
	}
	return 0;
}

void func_679()//Position - 0xD8BEF
{
	if (__LIB_1__.func_310() && !__LIB_1__.func_309())
	{
		__LIB_1__.func_543();
	}
	if (__LIB_1__.func_309())
	{
		__LIB_1__.func_308();
	}
	else
	{
		__LIB_6__.func_967();
		__LIB_20__.func_876(0, 0, 0, 0, 0);
		Global_2667225.f_1753 = 0;
		Global_2667225.f_1752 = 0;
	}
}

int func_680(var uParam0, var uParam1, var uParam2)//Position - 0xDE786
{
	int iVar0;
	if ((uParam0->f_1 == 2 && __LIB_0__.func_121(PLAYER::PLAYER_PED_ID())) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_20__.func_877(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

void func_681(var uParam0, int iParam1)//Position - 0xE8E4D
{
	struct<3> Var0;
	float* fVar1;
	float* fVar2;
	struct<3> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	var uVar8;
	var uVar9;
	var uVar10;
	int iVar11;
	if (__LIB_0__.func_649(&uLocal_95))
	{
		if (__LIB_2__.func_47(&uLocal_95, 1000, 0) && !__LIB_2__.func_47(&uLocal_95, 2000, 0))
		{
			return;
		}
		else if (__LIB_2__.func_47(&uLocal_95, 2000, 0))
		{
			__LIB_0__.func_579(&uLocal_95);
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (ENTITY::GET_ENTITY_SPEED(iParam1) > 1f)
		{
			return;
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam1, false))
			{
				return;
			}
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!__LIB_0__.func_649(&uLocal_95))
			{
				__LIB_0__.func_580(&uLocal_95, 0, 0);
			}
			if (!BitTest(uParam0->f_22, 2))
			{
				Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 2.4f, 1f, 0.4f) };
				Var3 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 2.4f, -1f, 0.4f) };
				__LIB_2__.func_718(iParam1, Var0, &fVar1);
				__LIB_2__.func_718(iParam1, Var3, &fVar2);
				iVar5 = __LIB_20__.func_878(iParam1);
				iVar6 = PLAYER::GET_PLAYER_PED(iVar5);
				if (PED::IS_PED_IN_ANY_VEHICLE(iVar6, false))
				{
					iVar4 = PED::GET_VEHICLE_PED_IS_IN(iVar6, false);
				}
				if ((ENTITY::DOES_ENTITY_EXIST(iVar4) && !ENTITY::IS_ENTITY_DEAD(iVar4, false)) && !VEHICLE::IS_VEHICLE_MODEL(iVar4, joaat("terbyte")))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0, Var3, 1f, 81, iVar4, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0, Var3, 1f, 83, iParam1, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar11 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar7, &uVar8, &uVar9, &uVar10);
				if (iVar11 == 2)
				{
					if (iVar7 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar11 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

char* func_682(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0xFA7A9
{
	int iVar0;
	if ((Global_2815059.f_319 || Global_2815059.f_318) || Global_2815059.f_317)
	{
		return "";
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if (__LIB_3__.func_64(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
		{
			if (PLAYER::PLAYER_ID() == Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)
			{
				return "MP_HACK_ORENOV" /* GXT: Your renovated Terrorbyte is now available. */;
			}
			else
			{
				return "MP_HACK_RENOV" /* GXT: The owner has renovated the Terrorbyte. */;
			}
		}
	}
	if (BitTest(Global_1946250.f_506, 7))
	{
		return "BB_TRUCK_KICKi" /* GXT: You no longer have access to the Nerve Center as the owner has left the game. */;
	}
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			iVar0 = __LIB_0__.func_582();
			if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
			{
				return "BB_TRUCK_KICKd" /* GXT: You no longer have access to the Nerve Center as you became a Prospect. */;
			}
			else if (iVar0 != __LIB_0__.func_160() && __LIB_2__.func_456(iVar0))
			{
				return "BB_TRUCK_KICKa" /* GXT: You no longer have access to the Nerve Center as you became an Associate. */;
			}
			else
			{
				return "BB_TRUCK_KICKb" /* GXT: You no longer have access to the Nerve Center as you became a Bodyguard. */;
			}
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
	{
		if ((BitTest(Global_1946250.f_506, 8) || (__LIB_3__.func_63(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9) && PLAYER::PLAYER_ID() != Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9)) || (Global_1946250.f_3366 && !BitTest(Global_1946250.f_506, 0)))
		{
			if ((!Global_2815059.f_319 && !Global_2815059.f_318) && !BitTest(Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_3, 7))
			{
				if (__LIB_0__.func_121(__LIB_3__.func_62()) && Global_1853193 == __LIB_20__.func_878(__LIB_3__.func_62()))
				{
					return "BB_TRUCK_KICKc" /* GXT: Owner has requested all to leave the Nerve Center. */;
				}
				else
				{
					return "MP_HTRUCK_DEST" /* GXT: The Terrorbyte has been destroyed and returned to the Nightclub Warehouse. */;
				}
			}
		}
		if (BitTest(Global_2689235[Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 /*453*/].f_318.f_3, 7))
		{
			return "MP_HTRUCK_DEST" /* GXT: The Terrorbyte has been destroyed and returned to the Nightclub Warehouse. */;
		}
	}
	return "";
}

char* func_683(var uParam0, var uParam1, var uParam2)//Position - 0xFB706
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_1__.func_288())
	{
		return "";
	}
	if (__LIB_7__.func_373())
	{
		return "SI_ENTR_BLCK13A" /* GXT: You cannot enter the Nerve Center while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (BitTest(Global_1946250.f_4523, 12))
	{
		if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the security case. */;
		}
	}
	if (__LIB_1__.func_909())
	{
		if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 242))
		{
			return "BAN_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the gold. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 241))
		{
			return "JEW_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the diamonds. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 240))
		{
			return "CAS_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the security case. */;
		}
		else if (__LIB_4__.func_730(PLAYER::PLAYER_ID(), 239))
		{
			return "VAN_BLOCK_HAC" /* GXT: You cannot enter the rear of the Terrorbyte while holding the antiques. */;
		}
	}
	iVar0 = __LIB_20__.func_878(0);
	if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !NETWORK::NETWORK_IS_IN_MP_CUTSCENE()) && PLAYER::PLAYER_ID() == iVar0)
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if ((!__LIB_0__.func_655(iVar1, 1) && !VEHICLE::IS_VEHICLE_MODEL(iVar1, joaat("caddy2"))) && !VEHICLE::IS_VEHICLE_MODEL(iVar1, joaat("caddy3")))
		{
			if (__LIB_0__.func_657(iVar1, 1))
			{
			}
		}
	}
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 0))
		{
			iVar2 = __LIB_0__.func_582();
			if (__LIB_18__.func_185(PLAYER::PLAYER_ID(), 0))
			{
				return "BB_TRUCK_KICKd" /* GXT: You no longer have access to the Nerve Center as you became a Prospect. */;
			}
			else if (iVar2 != __LIB_0__.func_160() && __LIB_2__.func_456(iVar2))
			{
				return "BB_TRUCK_KICKa" /* GXT: You no longer have access to the Nerve Center as you became an Associate. */;
			}
			else
			{
				return "BB_TRUCK_KICKb" /* GXT: You no longer have access to the Nerve Center as you became a Bodyguard. */;
			}
		}
	}
	if (__LIB_0__.func_811(PLAYER::PLAYER_PED_ID()) && (PLAYER::PLAYER_ID() == iVar0 || __LIB_0__.func_582() == iVar0))
	{
		return "HAC_BLOCK_MOC" /* GXT: You can't access this Nerve Center whilst wearing the Ballistic Equipment. */;
	}
	if (__LIB_2__.func_104())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_2__.func_475() && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
		}
	}
	if (__LIB_2__.func_477())
	{
		return "HAC_MC_BLOCK_P" /* GXT: You cannot enter your Nerve Center with a prostitute. */;
	}
	if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 3)
	{
		return "SUP_BLOCK_HAC" /* GXT: You can't access this Nerve Center whilst carrying Supplies. */;
	}
	if (__LIB_0__.func_740(PLAYER::PLAYER_ID()) || __LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor2")))
		{
		}
		else
		{
			return "HACK_MC_BLOCK_E" /* GXT: You cannot enter your Nerve Center while active in a mission. */;
		}
	}
	if (Global_1835493 != 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("terbyte")) && !__LIB_0__.func_657(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				return "HAC_MC_BLOCK_V" /* GXT: You cannot enter your Nerve Center while in a mission vehicle. */;
			}
		}
	}
	if (BitTest(Global_1946250.f_2, 30))
	{
		if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1) && !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				return "BB_TRUCK_SUTAR" /* GXT: You are unable to access the Nerve Center in this area. Move the Terrorbyte to a suitable area. */;
			}
		}
	}
	return "";
}

int func_684(int iParam0, var uParam1, var uParam2)//Position - 0xFC992
{
	int iVar0;
	int iVar1;
	if (__LIB_3__.func_60() || __LIB_3__.func_74(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if (PED::IS_PED_BEING_JACKED(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	if (__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1))
	{
		return 0;
	}
	if (Global_1835491)
	{
		return 0;
	}
	if (__LIB_2__.func_742(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(iParam0), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_0__.func_121(iVar0))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("terbyte")))
			{
				if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && __LIB_0__.func_582() == __LIB_7__.func_296(iVar0, 1, 0))
				{
					return 1;
				}
			}
		}
		iVar1 = __LIB_20__.func_878(0);
		if (!VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("terbyte")))
		{
			if (!__LIB_7__.func_509(iVar0, iVar1) || iVar1 != iParam0)
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_685(int iParam0, int iParam1, var uParam2)//Position - 0x10C04C
{
	switch (iParam1)
	{
		case 0:
			if ((Global_262145.f_24391 /* Tunable: 1595462041 */ || __LIB_18__.func_933(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_170(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 1:
			if (Global_262145.f_24391 /* Tunable: 1595462041 */ && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_163(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				uParam2->f_2 = 1;
				if (!BitTest(uParam2->f_3, 6))
				{
					MISC::SET_BIT(&(uParam2->f_3), 6);
				}
				MISC::SET_BIT(&(uParam2->f_3), 0);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				__LIB_2__.func_782(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 2:
			if (__LIB_20__.func_814(iParam0) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_169(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14), &(uParam2->f_4));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_3__.func_168(&(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 3:
			if ((__LIB_3__.func_915(iParam0) || __LIB_20__.func_814(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_3__.func_167(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
			}
			break;
	}
}

void func_686(var uParam0, var uParam1)//Position - 0x117E61
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	bool bVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	if (!BitTest(uParam0->f_396, 0))
	{
		if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
		{
			PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
		}
		MISC::SET_BIT(&(uParam0->f_396), 0);
	}
	if ((__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && CAM::IS_SCREEN_FADED_IN()) && !__LIB_3__.func_998(PLAYER::PLAYER_ID()))
	{
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 427, true);
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 353, true);
		PED::SET_PED_MAX_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID(), 3f);
	}
	if ((!__LIB_3__.func_998(PLAYER::PLAYER_ID()) && __LIB_3__.func_271()) && (!BitTest(Global_1946250.f_4523, 4) || uParam0->f_399 == 1))
	{
		if (!__LIB_0__.func_649(&(uParam0->f_397)))
		{
			if (__LIB_20__.func_879())
			{
				__LIB_0__.func_580(&(uParam0->f_397), 0, 0);
				uParam0->f_399 = 1;
			}
		}
		if (__LIB_0__.func_649(&(uParam0->f_397)))
		{
			if (__LIB_20__.func_879())
			{
				__LIB_0__.func_495(&(uParam0->f_397), 0, 0);
				if (!Global_2787784)
				{
					MISC::SET_BIT(&(Global_1946250.f_4523), 4);
					uParam0->f_399 = 1;
				}
			}
			else if (__LIB_2__.func_47(&(uParam0->f_397), 10000, 0))
			{
				__LIB_0__.func_579(&(uParam0->f_397));
				MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
				uParam0->f_399 = 0;
			}
			else if (!BitTest(Global_1946250.f_4523, 4))
			{
				MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
				uParam0->f_399 = 1;
			}
		}
	}
	else if (uParam0->f_399)
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_4523), 4);
		uParam0->f_399 = 0;
		__LIB_0__.func_579(&(uParam0->f_397));
	}
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && ENTITY::GET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), &bVar0, &bVar1, &bVar2, &bVar3, &bVar4, &uVar5, &uVar6, &uVar7))
		{
			if ((((!bVar0 || !bVar1) || !bVar2) || !bVar3) || !bVar4)
			{
				ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), true, true, true, true, true, false, false, false);
				VEHICLE::SET_DISABLE_WEAPON_BLADE_FORCES(true);
			}
		}
	}
}

void func_687(var uParam0, int iParam1)//Position - 0x12993C
{
	struct<3> Var0;
	float* fVar1;
	float* fVar2;
	struct<3> Var3;
	int iVar4;
	int iVar5;
	var uVar6;
	var uVar7;
	var uVar8;
	int iVar9;
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!BitTest(uParam0->f_22, 2))
			{
				Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 0f, -7f, 0f) };
				Var3 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iParam1, true), ENTITY::GET_ENTITY_HEADING(iParam1), 0f, -7.8f, 0f) };
				__LIB_3__.func_318(iParam1, Var0, &fVar1);
				__LIB_3__.func_318(iParam1, Var3, &fVar2);
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(__LIB_20__.func_881()), false))
				{
					iVar4 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(__LIB_20__.func_881()), false);
				}
				if (ENTITY::DOES_ENTITY_EXIST(iVar4) && !ENTITY::IS_ENTITY_DEAD(iVar4, false))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0.f_0, Var0.f_1, fVar1, Var3.f_0, Var3.f_1, fVar2, 1f, 81, iVar4, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var0.f_0, Var0.f_1, fVar1, Var3.f_0, Var3.f_1, fVar2, 2f, 83, iParam1, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar9 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar5, &uVar6, &uVar7, &uVar8);
				if (iVar9 == 2)
				{
					if (iVar5 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar9 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

void func_688(var uParam0)//Position - 0x14B02C
{
	int iVar0;
	struct<3> Var1;
	float* fVar2;
	float* fVar3;
	struct<3> Var4;
	int iVar5;
	int iVar6;
	var uVar7;
	var uVar8;
	var uVar9;
	int iVar10;
	iVar0 = __LIB_8__.func_97();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!BitTest(uParam0->f_22, 2))
			{
				Var1 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -7.9f, 0f) };
				Var4 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -8.5f, 0f) };
				__LIB_3__.func_318(iVar0, Var1, &fVar2);
				__LIB_3__.func_318(iVar0, Var4, &fVar3);
				if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(__LIB_20__.func_881()), false))
				{
					iVar5 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(__LIB_20__.func_881()), false);
				}
				if (ENTITY::DOES_ENTITY_EXIST(iVar5) && !ENTITY::IS_ENTITY_DEAD(iVar5, false))
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1.f_0, Var1.f_1, fVar2, Var4.f_0, Var4.f_1, fVar3, 1f, 81, iVar5, 4);
				}
				else
				{
					uParam0->f_22.f_107 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1.f_0, Var1.f_1, fVar2, Var4.f_0, Var4.f_1, fVar3, 2f, 83, iVar0, 4);
				}
				if (uParam0->f_22.f_107 != 0)
				{
					MISC::SET_BIT(&(uParam0->f_22), 2);
				}
			}
			else
			{
				iVar10 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_22.f_107, &iVar6, &uVar7, &uVar8, &uVar9);
				if (iVar10 == 2)
				{
					if (iVar6 == 0)
					{
						MISC::CLEAR_BIT(&Global_1946250, 19);
						uParam0->f_22.f_107 = 0;
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
					else
					{
						uParam0->f_22.f_107 = 0;
						MISC::SET_BIT(&Global_1946250, 19);
						MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					}
				}
				else if (iVar10 == 0)
				{
					MISC::CLEAR_BIT(&(uParam0->f_22), 2);
					uParam0->f_22.f_107 = 0;
				}
			}
		}
	}
}

int func_689(int iParam0, var uParam1)//Position - 0x14D28F
{
	if (PLAYER::PLAYER_ID() == __LIB_20__.func_881())
	{
		if (Global_1946250.f_3280 == -1)
		{
			if (__LIB_3__.func_457(PLAYER::PLAYER_ID()) || BitTest(Global_1946250.f_506, 0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_690(int iParam0, int iParam1, struct<3> Param2)//Position - 0x1504A3
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		if (!__LIB_1__.func_233(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
		if (SYSTEM::VDIST2(__LIB_3__.func_77(__LIB_6__.func_933(__LIB_20__.func_881())), Param2) <= 3600f)
		{
			return 1;
		}
	}
	return 0;
}

int func_691(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4)//Position - 0x1954AD
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (iParam2 == -2)
	{
		iVar0 = PLAYER::GET_PLAYER_TEAM(iParam0);
	}
	else
	{
		iVar0 = iParam2;
	}
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 148)
	{
		bVar1 = true;
	}
	iVar2 = iParam0;
	if (iVar2 > -1)
	{
		if (Global_1853348[iVar2 /*834*/] == 148)
		{
			bVar1 = true;
		}
	}
	if (!bVar1)
	{
		if (iVar0 != -1)
		{
			if (__LIB_20__.func_887())
			{
				iVar3 = __LIB_6__.func_409(iParam0);
				if (!iVar3 == -1)
				{
					return __LIB_6__.func_890(iVar3);
				}
			}
			if ((__LIB_0__.func_723(iParam1, iParam0, iVar0, 0) && !BitTest(Global_4718592.f_15, 18)) || ((__LIB_0__.func_610(PLAYER::GET_PLAYER_TEAM(iParam1), PLAYER::GET_PLAYER_TEAM(iParam0), 0) && BitTest(Global_4718592.f_15, 23)) && !BitTest(Global_4718592.f_15, 18)))
			{
				return __LIB_0__.func_720(1);
			}
			else if (BitTest(Global_4718592.f_15, 26))
			{
				return __LIB_0__.func_722(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		else if ((Global_1836584 || Global_1836575) || Global_1853348[iParam0 /*834*/] == 0)
		{
			if (iParam0 == iParam1 || (Global_1836584 == 1 && Global_1836594 == 0))
			{
				return __LIB_0__.func_720(1);
			}
			else
			{
				return __LIB_8__.func_837(iParam1, 1, iVar0, bParam4);
			}
		}
		if (Global_1836579 && Global_1836068.f_14 == iParam0)
		{
			return 28;
		}
	}
	iVar4 = __LIB_6__.func_409(iParam0);
	if (!iVar4 == -1)
	{
		return __LIB_6__.func_890(iVar4);
	}
	if (bParam3)
	{
		return 0;
	}
	return 1;
}

int func_692(int iParam0, int iParam1, bool bParam2)//Position - 0x1958F6
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Global_1058069.f_14[iParam0];
	if (__LIB_20__.func_887())
	{
		iVar2 = __LIB_6__.func_409(iParam1);
		if (!iVar2 == -1)
		{
			return __LIB_6__.func_890(iVar2);
		}
	}
	if (iVar1 > -1 && iVar1 < 17)
	{
		if (BitTest(Global_4718592.f_658[iParam0 /*22957*/].f_7911[iVar1], 24))
		{
			return 18;
		}
	}
	if (iParam0 > -1 && iParam1 != __LIB_0__.func_160())
	{
		if (Global_4718592.f_111249[iParam0] != -1 && Global_4718592.f_111249[iParam0] <= 4)
		{
			if (Global_4718592.f_111249[iParam0] == 0)
			{
				iVar0 = 15;
			}
			else if (Global_4718592.f_111249[iParam0] == 1)
			{
				iVar0 = 18;
			}
			else if (Global_4718592.f_111249[iParam0] == 2)
			{
				iVar0 = 24;
			}
			else if (Global_4718592.f_111249[iParam0] == 4)
			{
				if (BitTest(Global_4718592.f_15, 29))
				{
					iVar0 = 21;
				}
				else
				{
					iVar0 = 6;
				}
			}
			else
			{
				iVar0 = Global_4718592.f_111249[iParam0];
			}
		}
		else
		{
			iVar0 = __LIB_8__.func_837(iParam1, !bParam2, iParam0, 0);
		}
		if (BitTest(Global_4718592.f_21, 13))
		{
			iVar0 = __LIB_0__.func_726(iParam0);
		}
		if (BitTest(Global_4718592.f_24, 29))
		{
			iVar0 = 0;
		}
		if (BitTest(Global_4718592.f_15, 26) && !__LIB_0__.func_610(iParam0, PLAYER::GET_PLAYER_TEAM(iParam1), 0))
		{
			iVar0 = __LIB_0__.func_722(1);
		}
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

void func_693(var uParam0, bool bParam1)//Position - 0x197B35
{
	struct<2> Var0;
	int iVar1;
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_47.f_1471))
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SHOW_TICKER");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam1);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_0__.func_727());
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_47.f_1471, "SET_TICKER_TITLE");
		switch (Global_1853348[PLAYER::PLAYER_ID() /*834*/])
		{
			case 1:
			case 2:
			case 3:
			case 0:
			case 8:
				if (__LIB_6__.func_869(iVar1))
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_8__.func_840(), 16);
							__LIB_0__.func_478(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__.func_514(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_0__.func_514(&(Global_1048576.f_14));
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						case 3:
							__LIB_6__.func_234(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
					}
				}
				else
				{
					if (uParam0->f_47.f_2175 >= 3)
					{
						uParam0->f_47.f_2175 = 0;
					}
					switch (uParam0->f_47.f_2175)
					{
						case 0:
							StringCopy(&Var0, __LIB_8__.func_840(), 16);
							__LIB_0__.func_478(&Var0);
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 1:
							__LIB_0__.func_514(&(Global_4718592.f_116531));
							uParam0->f_47.f_2178 = 8000;
							uParam0->f_47.f_2175++;
							break;
						case 2:
							__LIB_6__.func_234(uParam0);
							uParam0->f_47.f_2178 = 4000;
							uParam0->f_47.f_2175++;
							break;
						}
				}
				break;
			default:
				if (uParam0->f_47.f_2175 >= 2)
				{
					uParam0->f_47.f_2175 = 0;
				}
				switch (uParam0->f_47.f_2175)
				{
					case 0:
						MemCopy(&Var0, {__LIB_8__.func_689(func_5176())}, 4);
						__LIB_0__.func_514(&Var0);
						uParam0->f_47.f_2178 = 8000;
						uParam0->f_47.f_2175++;
						break;
					case 1:
						__LIB_6__.func_234(uParam0);
						break;
				}
				break;
		}
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

int func_694(var uParam0)//Position - 0x1BC096
{
	int iVar0;
	iVar0 = (uParam0->f_1.f_2 + 1 % __LIB_20__.func_872(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 2 || uParam0->f_1.f_1 == 3)
	{
		return uParam0->f_1.f_2;
	}
	if (__LIB_6__.func_925())
	{
		if (uParam0->f_1.f_1 == 1)
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
	}
	else if (uParam0->f_1.f_1 == 1)
	{
		if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	return iVar0;
}

void func_695(var uParam0, char* sParam1)//Position - 0x1BCADD
{
	switch (uParam0->f_1.f_1)
	{
		case 0:
			StringCopy(sParam1, "ANIM@AMB@CLUBHOUSE@SEATING", 64);
			break;
		case 1:
			StringCopy(sParam1, "ANIM@AMB@OFFICE@SEATING", 64);
			break;
		case 2:
			StringCopy(sParam1, "ANIM@AMB@FACILITY@BRIEFING_ROOM@SEATING", 64);
			break;
		case 3:
			StringCopy(sParam1, "ANIM@AMB@YACHT@JACUZZI@SEATED", 64);
			break;
		case 4:
			StringCopy(sParam1, "anim@scripted@player@fix_agy_ig7_railing", 64);
			break;
	}
	if (uParam0->f_1.f_1 == 4 && __LIB_7__.func_43(PLAYER::PLAYER_PED_ID()))
	{
		StringConCat(sParam1, "@HEELED", 64);
	}
	else if (__LIB_6__.func_925())
	{
		StringConCat(sParam1, "@FEMALE", 64);
	}
	else
	{
		StringConCat(sParam1, "@MALE", 64);
	}
	switch (uParam0->f_1.f_1)
	{
		case 1:
			if (__LIB_6__.func_925())
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
				}
			}
			else
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_A@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_E@BASE@", 64);
						break;
					}
			}
			break;
		case 0:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@BASE@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@BASE@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@BASE@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@BASE@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@BASE@", 64);
					break;
			}
			break;
		case 2:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@", 64);
					break;
			}
			break;
		case 3:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VARIATION_01@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VARIATION_02@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VARIATION_03@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VARIATION_04@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VARIATION_05@", 64);
					break;
			}
			break;
		case 4:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@", 64);
					break;
			}
			break;
	}
}

void func_696(var uParam0)//Position - 0x1BCE45
{
	uParam0->f_1.f_1 = __LIB_12__.func_236(uParam0->f_16[uParam0->f_9 /*14*/].f_13);
	uParam0->f_1.f_2 = __LIB_20__.func_889(uParam0);
	uParam0->f_1.f_3 = 3;
	uParam0->f_1.f_4 = 3;
}

void func_697(var uParam0)//Position - 0x1BD7B5
{
	int iVar0;
	__LIB_6__.func_404(&(uParam0->f_6));
	__LIB_11__.func_267(uParam0);
	if (uParam0->f_13 > 2)
	{
		__LIB_4__.func_82(-1);
		iVar0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(uParam0->f_8);
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar0))
		{
			NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(uParam0->f_8);
		}
		if (!__LIB_0__.func_497() && !STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
		{
			__LIB_18__.func_465(PLAYER::PLAYER_ID(), 1, 0, 0);
		}
	}
	MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 15);
}

void func_698(int iParam0)//Position - 0x2A42C
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_4__.func_65(iParam0, -1);
	iVar1 = __LIB_12__.func_266(iVar0);
	switch (iVar1)
	{
		case 0:
			__LIB_0__.func_181(19, 1);
			return;
		case 7:
			__LIB_0__.func_181(17, 1);
			return;
		case 1:
			__LIB_0__.func_181(15, 1);
			return;
		case 2:
			__LIB_0__.func_181(13, 1);
			return;
		case 3:
			__LIB_0__.func_181(18, 1);
			return;
		case 4:
			__LIB_0__.func_181(12, 1);
			return;
		case 5:
			__LIB_0__.func_181(14, 1);
			return;
		case 6:
			__LIB_0__.func_181(16, 1);
			return;
		default:
	}
}

void func_699(int iParam0)//Position - 0x8B0DB
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	iVar0 = __LIB_12__.func_290(iParam0);
	if (iVar0 == -1)
	{
		return;
	}
	__LIB_11__.func_497(iVar0);
}

void func_700()//Position - 0x8B221
{
	__LIB_20__.func_577(&Global_106934);
}

void func_701(int iParam0)//Position - 0x8B9D3
{
	if (BitTest(Global_97374[iParam0 /*17*/].f_10.f_1, 6))
	{
		if (Global_96287 != 4 && Global_96287 != 5)
		{
			__LIB_12__.func_289(Global_97374[iParam0 /*17*/].f_5);
		}
	}
	if (BitTest(Global_97374[iParam0 /*17*/].f_10.f_1, 7))
	{
		if (Global_96287 != 4 && Global_96287 != 5)
		{
			__LIB_12__.func_289(Global_97374[iParam0 /*17*/].f_5);
		}
	}
	Global_97374[iParam0 /*17*/].f_1 = 0;
	Global_97374[iParam0 /*17*/].f_3 = -1;
	Global_97374[iParam0 /*17*/].f_4 = 6;
	Global_97374[iParam0 /*17*/].f_5 = -1;
	Global_97374[iParam0 /*17*/].f_6 = -1;
	Global_97374[iParam0 /*17*/].f_7 = -1;
	if (Global_97374[iParam0 /*17*/])
	{
		if (Global_97374[iParam0 /*17*/].f_9 != 263)
		{
			if (Global_97374[iParam0 /*17*/].f_9 < 0 || Global_97374[iParam0 /*17*/].f_9 >= 263)
			{
			}
			__LIB_10__.func_604(Global_97374[iParam0 /*17*/].f_9, 0, 0);
		}
		Global_97374[iParam0 /*17*/].f_9 = 263;
	}
	Global_97374[iParam0 /*17*/] = 0;
	Global_97374[iParam0 /*17*/].f_8 = -1;
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 0);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 1);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 2);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 3);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 6);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 7);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 8);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 9);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 10);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 11);
	MISC::CLEAR_BIT(&(Global_97374[iParam0 /*17*/].f_10.f_1), 12);
}

void func_702(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x8D956
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_7__.func_783(iParam2, iParam1);
	iVar1 = __LIB_0__.func_159(iVar0);
	switch (iVar1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
			}
			break;
		case 6:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
			}
			break;
		default:
			break;
	}
}

void func_703(int iParam0, int iParam1)//Position - 0x95275
{
	int iVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	if (((iParam0 != 0 || iParam0 != 1) || iParam0 != 2) || iParam0 != 3)
	{
		return;
	}
	__LIB_0__.func_383(iParam0, iParam1, &iVar2, &iVar3);
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		iVar0 = __LIB_1__.func_556(iVar3, -1, 0);
	}
	else
	{
		STATS::STAT_GET_INT(iVar2, &iVar0, -1);
	}
	switch (iParam1)
	{
		case 2:
			fVar1 = (0.8f + (0.4f * (SYSTEM::TO_FLOAT(iVar0) / 100f)));
			PLAYER::SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(PLAYER::PLAYER_ID(), fVar1, true);
			break;
		case 7:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("armenian3")) != 0 || SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("trevor3")) != 0)
			{
				Global_97724 = 1;
			}
			else
			{
				fVar1 = (1f - (SYSTEM::TO_FLOAT(iVar0) / 100f));
				PLAYER::SET_PLAYER_NOISE_MULTIPLIER(PLAYER::PLAYER_ID(), fVar1);
				PLAYER::SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(PLAYER::PLAYER_ID(), fVar1);
				PLAYER::SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(PLAYER::PLAYER_ID(), fVar1);
			}
			break;
	}
}

int func_704(int iParam0)//Position - 0x98B62
{
	return __LIB_12__.func_292(iParam0);
}

void func_705()//Position - 0x98BBC
{
	int iVar0;
	int iVar1;
	Global_97531 = 0;
	Global_97532 = 0;
	iVar0 = 0;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		iVar1 = 0;
		while (iVar1 < 24)
		{
			Global_97533[iVar0 /*25*/][iVar1] = 0;
			iVar1++;
		}
		iVar0++;
	}
	__LIB_12__.func_293();
}

void func_706(int iParam0, int iParam1, int iParam2)//Position - 0x9B6CE
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_7__.func_250(iParam1);
	iVar1 = __LIB_0__.func_159(iVar0);
	switch (iVar1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_0"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_0"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_0"), iParam2, true);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_1"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_1"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_1"), iParam2, true);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_2"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_2"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_2"), iParam2, true);
					break;
			}
			break;
		default:
			break;
	}
}

int func_707(var uParam0, var uParam1, char* sParam2)//Position - 0x66712
{
	*uParam1 = 1;
	StringCopy(sParam2, "PIM_AUTO_MAN_M" /* GXT: Auto Shop Management */, 16);
	return __LIB_18__.func_418(PLAYER::PLAYER_ID());
}

int func_708(var uParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x6672E
{
	*uParam3 = 1;
	if (bParam2)
	{
		StringCopy(sParam1, __LIB_2__.func_619(uParam0, 1), 64);
	}
	else
	{
		StringCopy(sParam1, "ciPI_TYPE_INVITE_TO_SIMPLE_INTERIOR - AUTO_SHOP", 64);
	}
	return __LIB_18__.func_418(PLAYER::PLAYER_ID());
}

int func_709(bool bParam0, bool bParam1)//Position - 0xA4C4F
{
	int iVar0;
	if (__LIB_2__.func_192(bParam0))
	{
		if (__LIB_7__.func_246(bParam1, bParam0, 0) || __LIB_12__.func_304(bParam1, bParam0))
		{
			iVar0 = 0;
			while (iVar0 < 7)
			{
				if (__LIB_2__.func_377(bParam0, iVar0) == bParam1)
				{
					return iVar0;
				}
				iVar0++;
			}
		}
	}
	return -1;
}

void func_710(int iParam0, int iParam1, bool bParam2)//Position - 0xA7DFB
{
	if (__LIB_0__.func_674())
	{
		if (iParam1 == 1)
		{
			if (Global_2815059.f_4462 == -1)
			{
				Global_2815059.f_4462 = Global_262145.f_27172 /* Tunable: 945146471 */;
			}
			__LIB_0__.func_495(&(Global_2815059.f_4460), 0, 0);
			if (bParam2)
			{
				if (Global_2815059.f_4465 == -1)
				{
					Global_2815059.f_4465 = Global_262145.f_27173 /* Tunable: -29732167 */;
				}
				__LIB_0__.func_495(&(Global_2815059.f_4463), 0, 0);
			}
			else
			{
				Global_1574582 = 0;
				Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
				__LIB_4__.func_508(1);
			}
		}
		else
		{
			Global_1574582 = 0;
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_8 = 0;
			__LIB_4__.func_508(1);
		}
		if ((!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && !__LIB_1__.func_203()) && !func_1690(PLAYER::PLAYER_ID()))
		{
			Global_1057408 = 0;
		}
		STATS::PLAYSTATS_SWITCH_PASSIVE_MODE(false, -1, -1, iParam0);
	}
}

int func_711(int iParam0, int iParam1, var uParam2, float fParam3, bool bParam4)//Position - 0xA8CB6
{
	switch (iParam0)
	{
		case 147:
			if (iParam1 > 32)
			{
				return 0;
			}
			if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__.func_160())
			{
				if (bParam4)
				{
					if (__LIB_7__.func_428(iParam0, iParam1, uParam2, fParam3))
					{
						return 1;
					}
				}
				else if (__LIB_3__.func_850(iParam0, iParam1, uParam2, fParam3))
				{
					return 1;
				}
			}
			else
			{
				*uParam2 = { Global_1946250.f_3626 };
				*fParam3 = (Global_1946250.f_3629 - 180f);
				return 1;
			}
			break;
	}
	return 0;
}

int func_712(var uParam0, var uParam1)//Position - 0xCBE0B
{
	if (__LIB_2__.func_459())
	{
		return 0;
	}
	if (__LIB_2__.func_379())
	{
		return 0;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && !__LIB_1__.func_358(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && __LIB_1__.func_570(PLAYER::PLAYER_ID()))
		{
			if (__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 243)
			{
				if (__LIB_7__.func_468(PLAYER::PLAYER_ID()) == 7)
				{
					return !__LIB_2__.func_232();
				}
			}
			return 1;
		}
	}
	return 0;
}

int func_713(int iParam0, var uParam1)//Position - 0xD2148
{
	bool bVar0;
	bVar0 = PLAYER::PLAYER_ID();
	if (__LIB_2__.func_459())
	{
		return 0;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		bVar0 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9;
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		if (!__LIB_1__.func_264(bVar0, 0, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 1);
			return 1;
		}
		if (iParam0 != __LIB_7__.func_849(bVar0))
		{
			MISC::SET_BIT(&Global_1946250, 18);
			return 1;
		}
	}
	if (__LIB_4__.func_682(PLAYER::PLAYER_ID(), 1) && !__LIB_1__.func_358(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__.func_425(PLAYER::PLAYER_ID(), 1) && __LIB_1__.func_570(PLAYER::PLAYER_ID()))
		{
			if (__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 243)
			{
				if (__LIB_7__.func_468(PLAYER::PLAYER_ID()) == 7)
				{
					return !__LIB_2__.func_232();
				}
			}
			return 1;
		}
	}
	return 0;
}

int func_714()//Position - 0xD625D
{
	if ((((((__LIB_3__.func_803(PLAYER::PLAYER_ID()) == 229 || __LIB_3__.func_803(PLAYER::PLAYER_ID()) == 191) || __LIB_1__.func_289()) || __LIB_1__.func_224()) || __LIB_1__.func_288()) || Global_2788199.f_227 == 1) || (Global_2667225.f_1753 && __LIB_12__.func_305(PLAYER::PLAYER_ID())))
	{
		return 0;
	}
	return 1;
}

Vector3 func_715(var uParam0)//Position - 0x1480F2
{
	int iVar0;
	iVar0 = __LIB_20__.func_905();
	if (Global_1853185 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_251(Global_1853185))
		{
			return 848.7985f, -3236.5745f, -100.0893f;
		}
		else if (Global_1853185 != PLAYER::PLAYER_ID())
		{
			return Global_2689235[Global_1853185 /*453*/].f_318.f_11;
		}
		else if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			return ENTITY::GET_ENTITY_COORDS(iVar0, true);
		}
		else
		{
			return Global_2689235[Global_1853185 /*453*/].f_318.f_11;
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		return ENTITY::GET_ENTITY_COORDS(iVar0, true);
	}
	else if (__LIB_7__.func_297(iVar0, 1, 0) != __LIB_0__.func_160())
	{
		return Global_2689235[__LIB_7__.func_297(iVar0, 1, 0) /*453*/].f_318.f_11;
	}
	return 0f, 0f, 0f;
}

Vector3 func_716(int iParam0)//Position - 0x1481F2
{
	int iVar0;
	iVar0 = __LIB_20__.func_905();
	switch (iParam0)
	{
		case 81:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("trailerlarge"))
				{
					return ENTITY::GET_ENTITY_COORDS(iVar0, true);
				}
			}
			break;
	}
	return 0f, 0f, 0f;
}

void func_717(int iParam0)//Position - 0x149F2D
{
	int iVar0;
	if ((MISC::GET_FRAME_COUNT() % 60) == 0 || iParam0)
	{
		iVar0 = __LIB_20__.func_905();
		if ((((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && !__LIB_3__.func_459(PLAYER::PLAYER_ID())) && !__LIB_3__.func_86(PLAYER::PLAYER_ID())) && !__LIB_3__.func_87(PLAYER::PLAYER_ID()))
		{
			if (__LIB_7__.func_297(iVar0, 1, 0) == PLAYER::PLAYER_ID() && !__LIB_3__.func_458(PLAYER::PLAYER_ID()))
			{
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_11 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 2f, -17f, 0f) };
				Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_14 = ENTITY::GET_ENTITY_HEADING(iVar0);
			}
		}
	}
}

int func_718(int iParam0)//Position - 0x14B43B
{
	int iVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	float fVar5;
	var uVar6;
	var uVar7;
	struct<3> Var8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("apc"):
			case joaat("insurgent"):
			case joaat("insurgent2"):
			case joaat("insurgent3"):
			case joaat("caracara"):
			case joaat("caracara2"):
				return 1;
				break;
			case joaat("voodoo"):
			case joaat("voodoo2"):
			case joaat("vigilante"):
			case joaat("visione"):
			case joaat("deluxo"):
			case joaat("oppressor2"):
			case joaat("menacer"):
				return 1;
				break;
		}
		iVar0 = 0;
		while (iVar0 < 8)
		{
			if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam0, iVar0, false))
			{
				return 1;
			}
			iVar0++;
		}
		fVar1 = (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(iParam0) / 1000f);
		if (fVar1 < 0.4f)
		{
			return 1;
		}
		fVar1 = (SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) / 1000f);
		if (fVar1 < 0.4f)
		{
			return 1;
		}
	}
	iVar2 = __LIB_20__.func_905();
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (!__LIB_1__.func_251(PLAYER::PLAYER_ID()) && !ENTITY::IS_ENTITY_DEAD(iVar2, false))
		{
			Var9 = { __LIB_1__.func_265(PLAYER::PLAYER_ID()) };
			if (PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE(Var9, iVar3, &Var8, 1, 3f, 0f))
			{
				if (SYSTEM::VDIST2(Var9, Var8) > 2500f)
				{
					return 1;
				}
			}
			ENTITY::GET_ENTITY_QUATERNION(iVar2, &uVar4, &fVar5, &uVar6, &uVar7);
			if (fVar5 < -0.03f || fVar5 > 0.03f)
			{
				return 1;
			}
			if (ENTITY::DOES_ENTITY_EXIST(iVar2) && !ENTITY::IS_ENTITY_DEAD(iVar2, false))
			{
				Var10 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar2, 0f, -10f, 0f) };
				Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar2, 0f, -15.5f, 0f) };
				if (MISC::ABSF((Var10.f_2 - Var11.f_2)) > 0.8f)
				{
					MISC::SET_BIT(&(Global_1946250.f_1), 3);
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_719(int iParam0, var uParam1)//Position - 0x14D7C0
{
	int iVar0;
	var uVar1;
	iVar0 = __LIB_20__.func_905();
	switch (iParam0)
	{
		case 81:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("trailerlarge"))
				{
					*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -8.9f, -2f) };
					if (MISC::GET_GROUND_Z_FOR_3D_COORD(*uParam1, &uVar1, false, false))
					{
						*uParam1 = { *uParam1, uParam1->f_1, uVar1 };
					}
					else
					{
						*uParam1 = { *uParam1, uParam1->f_1, (uParam1->f_2 - 1.5f) };
					}
				}
			}
			break;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (__LIB_3__.func_317(PLAYER::PLAYER_ID()))
		{
			if (__LIB_0__.func_86(*uParam1))
			{
				if (Global_1946250.f_3630 != __LIB_0__.func_160())
				{
					if (!__LIB_0__.func_86(Global_2689235[Global_1946250.f_3630 /*453*/].f_318.f_11))
					{
						*uParam1 = { Global_2689235[Global_1946250.f_3630 /*453*/].f_318.f_11 };
					}
				}
			}
		}
	}
}

void func_720(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5)//Position - 0x14D993
{
	int iVar0;
	var uVar1;
	iVar0 = __LIB_20__.func_905();
	switch (iParam0)
	{
		case 81:
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("trailerlarge"))
				{
					*uParam1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, 0f, -5f, 0f) };
					*uParam2 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(*uParam1, ENTITY::GET_ENTITY_HEADING(iVar0), 0f, 6f, -1.5f) };
					if (MISC::GET_GROUND_Z_FOR_3D_COORD(*uParam2, &uVar1, false, false))
					{
						*uParam2 = { *uParam2, uParam2->f_1, uVar1 };
					}
					*uParam3 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(*uParam1, ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -6f, 2.5f) };
					*uParam4 = __LIB_18__.func_577(joaat("trailerlarge"));
					*uParam5 = ENTITY::GET_ENTITY_HEADING(iVar0);
				}
			}
			break;
	}
}

void func_721(int iParam0, var uParam1, bool bParam2)//Position - 0x1A1F08
{
	struct<194> Var0;
	int iVar1;
	int iVar2;
	char* sVar3;
	int iVar4;
	int iVar5;
	if (__LIB_3__.func_695() && !__LIB_0__.func_836())
	{
		return;
	}
	Var0.f_5 = 15;
	Var0.f_21 = 15;
	Var0.f_37 = 15;
	Var0.f_53 = 15;
	Var0.f_69 = 15;
	Var0.f_85 = 15;
	Var0.f_85.f_1 = 6;
	Var0.f_85.f_1.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	Var0.f_85.f_1.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7.f_7 = 6;
	__LIB_20__.func_914("wiSW", &(uParam1->f_181), iParam0, &Var0, bParam2, -1, -2340845);
	__LIB_20__.func_914("wiBS", &(uParam1->f_182), iParam0, &(Var0.f_1), bParam2, 0, -2340845);
	__LIB_20__.func_914("wiAO", &(uParam1->f_187), iParam0, &(Var0.f_3), bParam2, -1, -2340845);
	__LIB_20__.func_914("wiRW", &(uParam1->f_183), iParam0, &(Var0.f_2), bParam2, 0, -2340845);
	uParam1->f_188 = __LIB_21__.func_16("wiA", iParam0, &(Var0.f_4), bParam2, 0, 0);
	iVar4 = 15;
	if (__LIB_0__.func_836())
	{
		iVar4 = 5;
	}
	iVar2 = 0;
	while (iVar2 <= (iVar4 - 1))
	{
		iVar5 = 0;
		__LIB_12__.func_376(&sVar3, "wiWp", iVar2, -1);
		__LIB_20__.func_914(&sVar3, &iVar5, iParam0, &(Var0.f_5[iVar2]), bParam2, 0, -2340845);
		(*uParam1)[iVar2 /*12*/] = iVar5;
		__LIB_12__.func_376(&sVar3, "wiAm", iVar2, -1);
		__LIB_20__.func_914(&sVar3, &((uParam1[iVar2 /*12*/])->f_1), iParam0, &(Var0.f_21[iVar2]), bParam2, 0, -2340845);
		__LIB_12__.func_376(&sVar3, "wiTnt", iVar2, -1);
		__LIB_20__.func_914(&sVar3, &((uParam1[iVar2 /*12*/])->f_2), iParam0, &(Var0.f_37[iVar2]), bParam2, -1, -2340845);
		__LIB_12__.func_376(&sVar3, "wiLTnt", iVar2, -1);
		__LIB_20__.func_914(&sVar3, &((uParam1[iVar2 /*12*/])->f_3), iParam0, &(Var0.f_53[iVar2]), bParam2, -1, -2340845);
		__LIB_12__.func_376(&sVar3, "wiDM", iVar2, -1);
		__LIB_20__.func_912(&sVar3, &((uParam1[iVar2 /*12*/])->f_4), iParam0, &(Var0.f_69[iVar2]), bParam2, -1f, -904994889);
		iVar1 = 0;
		iVar1 = 0;
		while (iVar1 <= 5)
		{
			iVar5 = -1;
			__LIB_12__.func_376(&sVar3, "wiWpC", iVar2, iVar1);
			__LIB_20__.func_914(&sVar3, &iVar5, iParam0, &(Var0.f_85[iVar2 /*7*/][iVar1]), bParam2, -1, -2340845);
			(uParam1[iVar2 /*12*/])->f_5[iVar1] = iVar5;
			iVar1++;
		}
		iVar2++;
	}
	__LIB_20__.func_914("wiPc", &(uParam1->f_184), iParam0, &(Var0.f_191), bParam2, 0, -2340845);
	__LIB_20__.func_914("wiPt", &(uParam1->f_184.f_1), iParam0, &(Var0.f_192), bParam2, -1, -2340845);
	__LIB_20__.func_914("wiPpt", &(uParam1->f_184.f_2), iParam0, &(Var0.f_193), bParam2, -1, -2340845);
}

void func_722(int iParam0)//Position - 0x1DB68E
{
	if (!__LIB_12__.func_404())
	{
		NETWORK::NETWORK_SESSION_SET_UNIQUE_CREW_LIMIT_TRANSITION(2);
		NETWORK::NETWORK_SESSION_SET_UNIQUE_CREW_ONLY_CREWS_TRANSITION(true);
		if (iParam0 == 0)
		{
			iParam0 = 32;
		}
		NETWORK::NETWORK_SESSION_SET_CREW_LIMIT_MAX_MEMBERS_TRANSITION((iParam0 / 2));
		__LIB_12__.func_403();
	}
}

void func_723(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x1E290A
{
	if (__LIB_7__.func_50())
	{
		return;
	}
	if (bParam2)
	{
		HUD::THEFEED_HIDE_THIS_FRAME();
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
	}
	if (__LIB_9__.func_202() && __LIB_0__.func_742() == 34)
	{
		bParam3 = false;
	}
	if (!bParam3)
	{
	}
	else
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(4);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(5);
		HUD::REMOVE_MULTIPLAYER_BANK_CASH();
		HUD::REMOVE_MULTIPLAYER_WALLET_CASH();
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
	}
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(1);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(6);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(8);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(9);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(14);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(16);
	if (bParam1)
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(17);
	}
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(19);
	HUD::HIDE_STREET_AND_CAR_NAMES_THIS_FRAME();
	__LIB_12__.func_417(1);
	__LIB_1__.func_304();
	__LIB_6__.func_359();
	if ((iParam0 && !__LIB_4__.func_609()) && !__LIB_0__.func_827(54))
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
	}
	else
	{
		HUD::DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME();
		HUD::SHOW_HUD_COMPONENT_THIS_FRAME(10);
	}
}

void func_724(bool bParam0)//Position - 0x1E6891
{
	if (bParam0)
	{
		Global_2715699.f_2846.f_181 = 1;
		if (__LIB_1__.func_155(PLAYER::PLAYER_ID(), 1, 0))
		{
			Global_2715699.f_1.f_2843 = 1;
		}
	}
	else
	{
		Global_2715699.f_1.f_2843 = 0;
	}
	Global_2715699.f_1.f_2842 = bParam0;
}

int func_725(int iParam0, int iParam1)//Position - 0x203DAD
{
	int iVar0;
	int iVar1;
	bool bVar2;
	if (!Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_192 != 0 && NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return 0;
	}
	iVar0 = -1;
	bVar2 = false;
	if (__LIB_9__.func_276(iParam0))
	{
		bVar2 = true;
		iVar0 = 0;
		iVar1 = __LIB_1__.func_556(11070, -1, 0);
	}
	if (__LIB_9__.func_275(iParam0))
	{
		bVar2 = true;
		iVar0 = 0;
		iVar1 = __LIB_1__.func_556(11066, -1, 0);
	}
	if (__LIB_9__.func_274(iParam0))
	{
		bVar2 = true;
		iVar0 = 0;
		iVar1 = __LIB_1__.func_556(11067, -1, 0);
	}
	if (__LIB_9__.func_273(iParam0))
	{
		bVar2 = true;
		iVar0 = 0;
		iVar1 = __LIB_1__.func_556(11068, -1, 0);
	}
	if (__LIB_9__.func_272(iParam0))
	{
		bVar2 = true;
		iVar0 = 1;
		iVar1 = __LIB_1__.func_556(11069, -1, 0);
	}
	if (!bVar2)
	{
		return 0;
	}
	if (iVar0 != -1)
	{
		if (iParam1 == iVar0)
		{
			if (iVar1 == 0)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_726()//Position - 0x2051BC
{
	if (!__LIB_1__.func_155(PLAYER::PLAYER_ID(), 0, 0))
	{
		return 0;
	}
	return __LIB_19__.func_670(__LIB_9__.func_80());
}

void func_727()//Position - 0x2087A8
{
	__LIB_12__.func_444();
	__LIB_12__.func_445();
	__LIB_12__.func_458();
	__LIB_12__.func_457();
	__LIB_12__.func_420();
	Global_2715699.f_6315 = 0;
	Global_2715699.f_6314 = 0;
	__LIB_9__.func_780(0, 0);
	__LIB_18__.func_721(1, 0);
	__LIB_18__.func_721(1, 0);
	GRAPHICS::TRIGGER_SCREENBLUR_FADE_OUT(250f);
	GRAPHICS::ANIMPOSTFX_STOP("MP_job_load");
	HUD::BUSYSPINNER_OFF();
	__LIB_16__.func_621(0, 0, 1);
}

bool func_728(var uParam0)//Position - 0x20B75E
{
	if (*uParam0 != 191)
	{
		return 0;
	}
	return __LIB_20__.func_651(uParam0) == 1;
}

bool func_729(var uParam0)//Position - 0x20B855
{
	if (*uParam0 != 191)
	{
		return 0;
	}
	return __LIB_20__.func_651(uParam0) == 7;
}

bool func_730(var uParam0)//Position - 0x20E8B0
{
	if (*uParam0 != 191)
	{
		return 0;
	}
	return __LIB_20__.func_651(uParam0) == 8;
}

void func_731(int iParam0)//Position - 0x20E9EF
{
	if (__LIB_12__.func_475(iParam0))
	{
		Global_1573131.f_14 = 1;
		return;
	}
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 16);
	Global_1573131.f_14 = 1;
}

void func_732(int iParam0)//Position - 0x20EA36
{
	if (__LIB_12__.func_477(iParam0))
	{
		__LIB_12__.func_476(iParam0);
		return;
	}
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 14);
	__LIB_12__.func_476(iParam0);
}

int func_733(int iParam0, int iParam1)//Position - 0x20F118
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_12__.func_471(iParam0);
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 1)
	{
		if (Global_2653090[iParam1 /*5*/].f_1[iVar1 /*3*/] == iVar0)
		{
			return iVar1;
		}
		iVar1++;
	}
	return -1;
}

int func_734(int iParam0)//Position - 0x20F246
{
	if (__LIB_12__.func_490(iParam0))
	{
		return 1;
	}
	return 0;
}

void func_735(int iParam0)//Position - 0x20F3E6
{
	if (__LIB_12__.func_499(iParam0))
	{
		return;
	}
	if (__LIB_12__.func_498(iParam0))
	{
		return;
	}
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 7);
}

int func_736(int iParam0)//Position - 0x20FFAA
{
	int iVar0;
	if (__LIB_0__.func_3() == 0)
	{
		iVar0 = __LIB_0__.func_685(iParam0, 1);
		if (iVar0 == -1)
		{
			return 0;
		}
		return __LIB_12__.func_512(iVar0);
	}
	return 0;
}

void func_737(var uParam0, var uParam1)//Position - 0x210620
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	float fVar3;
	struct<3> Var4;
	float fVar5;
	float fVar6;
	switch (*uParam0)
	{
		case 190:
			break;
		default:
			return;
	}
	if (*uParam0 == 190)
	{
		iVar0 = __LIB_20__.func_651(uParam0);
		if (iVar0 < 0 || iVar0 >= Global_1039641.f_684)
		{
			return;
		}
		Var1 = { Global_1039641[iVar0 /*3*/] };
		Var2 = { Global_1039641.f_256[iVar0 /*3*/] };
		fVar3 = Global_1039641.f_512[iVar0];
		Var4 = { 0f, 0f, 0f };
		fVar5 = 0.1f;
		fVar6 = -0.1f;
		if (((__LIB_0__.func_394(Var1, Var4, 1056964608, 0) || __LIB_0__.func_394(Var2, Var4, 1056964608, 0)) || __LIB_0__.func_394(Var1, Var2, fVar5, 0)) || (fVar3 > fVar6 && fVar3 < fVar5))
		{
			return;
		}
		uParam1->f_14 = 1;
		uParam1->f_24 = { Var1 };
		uParam1->f_27 = { Var2 };
		uParam1->f_30 = fVar3;
		return;
	}
}

bool func_738(var uParam0)//Position - 0x2109E8
{
	if (*uParam0 != 191)
	{
		return 0;
	}
	return __LIB_20__.func_651(uParam0) == 3;
}

int func_739(var uParam0)//Position - 0x210B4A
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (__LIB_9__.func_267(uParam0))
	{
		return BitTest(Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_63, 14);
	}
	if (__LIB_2__.func_12(uParam0->f_1))
	{
		if (__LIB_2__.func_11(uParam0))
		{
			return BitTest(Global_2660249.f_1.f_63, 14);
		}
		return iVar0;
	}
	iVar1 = __LIB_7__.func_206(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return BitTest(Global_794709.f_4[iVar1 /*88*/].f_76, 14);
		case 62:
			return BitTest(Global_998606.f_604[iVar1 /*88*/].f_76, 14);
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return iVar0;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_740(var uParam0)//Position - 0x21107D
{
	int iVar0;
	iVar0 = __LIB_20__.func_651(uParam0);
	switch (iVar0)
	{
		case 0:
		case 1:
		case 6:
		case 7:
			return 12;
		case 18:
		case 19:
			return 36;
		case 10:
		case 11:
			return 20;
		case 12:
		case 13:
			return 19;
		case 2:
		case 3:
			return 11;
		case 4:
		case 5:
			return 10;
		case 20:
		case 21:
		case 22:
		case 23:
			return 38;
		case 24:
		case 25:
			return 43;
		case 26:
			return 45;
		case 27:
			return 44;
		default:
	}
	return 13;
}

bool func_741(var uParam0)//Position - 0x21121F
{
	if (*uParam0 != 191)
	{
		return 0;
	}
	return __LIB_20__.func_651(uParam0) == 6;
}

int func_742(int iParam0, int iParam1)//Position - 0x21141F
{
	return __LIB_20__.func_948(5, iParam0, iParam1);
}

int func_743(int iParam0)//Position - 0x212C3B
{
	int iVar0;
	bool bVar1;
	if (Global_1659410 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	bVar1 = false;
	iVar0 = 0;
	while (iVar0 < Global_1659410)
	{
		if (!__LIB_9__.func_829(iVar0))
		{
			if (iVar0 != iParam0)
			{
				if (((Global_2654152[iVar0 /*82*/].f_13 == Global_2654152[iParam0 /*82*/].f_13 && Global_2654152[iVar0 /*82*/].f_12 == Global_2654152[iParam0 /*82*/].f_12) && __LIB_0__.func_394(Global_2654152[iVar0 /*82*/].f_6, Global_2654152[iParam0 /*82*/].f_6, 1056964608, 0)) && MISC::ARE_STRINGS_EQUAL(&(Global_2654152[iVar0 /*82*/].f_56), &(Global_2654152[iParam0 /*82*/].f_56)))
				{
					bVar1 = false;
					if (!bVar1)
					{
						if (__LIB_9__.func_820(iParam0) && !__LIB_9__.func_820(iVar0))
						{
							bVar1 = true;
						}
					}
					if ((Global_2654152[iParam0 /*82*/].f_11 && Global_2654152[iVar0 /*82*/].f_11) || (!Global_2654152[iParam0 /*82*/].f_11 && !Global_2654152[iVar0 /*82*/].f_11))
					{
						if (bVar1)
						{
							Global_2654152[iVar0 /*82*/].f_3 = 1;
						}
						else
						{
							return 1;
						}
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_744(int iParam0)//Position - 0x216633
{
	switch (iParam0)
	{
		case 15:
		case 14:
		case 11:
		case 13:
		case 12:
		case 8:
		case 1:
		case 5:
		case 6:
		case 3:
		case 0:
		case 2:
		case 122:
		case 148:
			return __LIB_7__.func_335(__LIB_9__.func_793(iParam0));
		default:
	}
	return 68500;
}

void func_745(var uParam0, int iParam1)//Position - 0x27A4E3
{
	struct<3> Var0;
	__LIB_19__.func_421(&Var0, 187, iParam1);
	ENTITY::SET_ENTITY_ROTATION(*uParam0, Var0, 2, true);
	ENTITY::FREEZE_ENTITY_POSITION(*uParam0, true);
	ENTITY::SET_ENTITY_PROOFS(*uParam0, true, true, true, true, true, true, false, false);
	ENTITY::SET_ENTITY_INVINCIBLE(*uParam0, true);
	ENTITY::SET_ENTITY_DYNAMIC(*uParam0, false);
	ENTITY::SET_CAN_CLIMB_ON_ENTITY(*uParam0, false);
}

float func_746(int iParam0)//Position - 0x29332D
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0f;
	}
	iVar0 = 12;
	switch (iParam0)
	{
		case joaat("WEAPON_MICROSMG"):
			iVar0 = 5;
			break;
		case joaat("WEAPON_SMG"):
			iVar0 = 5;
			break;
		case joaat("WEAPON_SAWNOFFSHOTGUN"):
			iVar0 = 4;
			break;
		case joaat("WEAPON_PUMPSHOTGUN"):
			iVar0 = 4;
			break;
		case joaat("WEAPON_ASSAULTSHOTGUN"):
			iVar0 = 4;
			break;
		case joaat("WEAPON_ASSAULTRIFLE"):
			iVar0 = 25;
			break;
		case joaat("WEAPON_CARBINERIFLE"):
			iVar0 = 25;
			break;
		case joaat("WEAPON_ADVANCEDRIFLE"):
			iVar0 = 25;
			break;
		case joaat("WEAPON_SNIPERRIFLE"):
			iVar0 = 2;
			break;
		case joaat("WEAPON_HEAVYSNIPER"):
			iVar0 = 2;
			break;
		case joaat("WEAPON_MG"):
			iVar0 = 26;
			break;
		case joaat("WEAPON_COMBATMG"):
			iVar0 = 26;
			break;
		case joaat("WEAPON_RPG"):
			iVar0 = 6;
			break;
		case joaat("WEAPON_GRENADELAUNCHER"):
			iVar0 = 3;
			break;
		case joaat("WEAPON_KNIFE"):
			iVar0 = 8;
			break;
		case joaat("WEAPON_APPISTOL"):
			iVar0 = 1;
			break;
		case joaat("WEAPON_COMBATPISTOL"):
			iVar0 = 1;
			break;
		case joaat("WEAPON_PISTOL"):
			iVar0 = 1;
			break;
		case joaat("WEAPON_SMOKEGRENADE"):
			iVar0 = 3;
			break;
		case joaat("WEAPON_GRENADE"):
			iVar0 = 3;
			break;
		case joaat("WEAPON_STICKYBOMB"):
			iVar0 = 7;
			break;
	}
	if (iVar0 != 12)
	{
		if (__LIB_17__.func_525(iVar0))
		{
			return 0.08f;
		}
		else if (__LIB_17__.func_526(iVar0))
		{
			return 0.06f;
		}
		else if (__LIB_17__.func_527(iVar0))
		{
			return 0.04f;
		}
		else if (__LIB_17__.func_528(iVar0))
		{
			return 0.02f;
		}
	}
	return 0f;
}

int func_747(int iParam0)//Position - 0x29441C
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_7__.func_972())
		{
			if ((iParam0 == joaat("WEAPON_MARKSMANRIFLE") || iParam0 == joaat("WEAPON_COMPACTRIFLE")) || iParam0 == joaat("WEAPON_COMPACTLAUNCHER"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_748(int iParam0, int iParam1)//Position - 0x2C67C0
{
	int iVar0;
	switch (iParam0)
	{
		case joaat("faction"):
			if (__LIB_12__.func_609(iParam0) == 1)
			{
				return joaat("faction2");
			}
			else if (__LIB_12__.func_609(iParam0) == 2)
			{
				if (Global_262145.f_14734 /* Tunable: ENABLE_LOWRIDER2_FACTION */)
				{
					if (iParam1 == 0)
					{
						return joaat("faction3");
					}
				}
				if (iParam1 == 1)
				{
					return joaat("faction2");
				}
			}
			break;
		case joaat("buccaneer"):
			return joaat("buccaneer2");
			break;
		case joaat("chino"):
			return joaat("chino2");
			break;
		case joaat("moonbeam"):
			return joaat("moonbeam2");
			break;
		case joaat("primo"):
			return joaat("primo2");
			break;
		case joaat("voodoo2"):
			return joaat("voodoo");
			break;
		case joaat("comet2"):
			if (Global_262145.f_19186 /* Tunable: ENABLE_IE_COMET3 */)
			{
				return joaat("comet3");
			}
			break;
		case joaat("diablous"):
			if (Global_262145.f_19188 /* Tunable: ENABLE_IE_DIABLOUS2 */)
			{
				return joaat("diablous2");
			}
			break;
		case joaat("fcr"):
			if (Global_262145.f_19192 /* Tunable: ENABLE_IE_FCR2 */)
			{
				return joaat("fcr2");
			}
			break;
		case joaat("italigtb"):
			if (Global_262145.f_19194 /* Tunable: ENABLE_IE_ITALIGTB2 */)
			{
				return joaat("italigtb2");
			}
			break;
		case joaat("specter"):
			if (Global_262145.f_19199 /* Tunable: ENABLE_IE_SPECTER2 */)
			{
				return joaat("specter2");
			}
			break;
		case joaat("nero"):
			if (Global_262145.f_19196 /* Tunable: ENABLE_IE_NERO2 */)
			{
				return joaat("nero2");
			}
			break;
		case joaat("elegy2"):
			if (Global_262145.f_19189 /* Tunable: ENABLE_IE_ELEGY */)
			{
				return joaat("elegy");
			}
			break;
		case joaat("sabregt"):
			return joaat("sabregt2");
			break;
		case joaat("tornado"):
		case joaat("tornado2"):
		case joaat("tornado3"):
			return joaat("tornado5");
			break;
		case joaat("virgo3"):
			return joaat("virgo2");
			break;
		case joaat("minivan"):
			return joaat("minivan2");
			break;
		case joaat("slamvan"):
			if (!__LIB_4__.func_6(PLAYER::PLAYER_ID()))
			{
				return joaat("slamvan3");
			}
			else if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
			{
				if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_2, 12))
				{
					if (iParam1 == 0)
					{
						return joaat("slamvan3");
					}
					else if (iParam1 == 1)
					{
						return joaat("slamvan4");
					}
					else if (iParam1 == 2)
					{
						return joaat("slamvan5");
					}
					else if (iParam1 == 3)
					{
						return joaat("slamvan6");
					}
				}
				else if (iParam1 == 0)
				{
					return joaat("slamvan4");
				}
				else if (iParam1 == 1)
				{
					return joaat("slamvan5");
				}
				else if (iParam1 == 2)
				{
					return joaat("slamvan6");
				}
			}
			break;
		case joaat("sultan"):
			return joaat("sultanrs");
			break;
		case joaat("banshee"):
			return joaat("banshee2");
			break;
		case joaat("technical"):
			if (Global_262145.f_21144 /* Tunable: ENABLE_TECHNICAL_MODSHOP */)
			{
				return joaat("technical3");
			}
			break;
		case joaat("insurgent"):
			if (Global_262145.f_21145 /* Tunable: ENABLE_INSURGENT_MODSHOP */)
			{
				return joaat("insurgent3");
			}
			break;
		case joaat("ratloader"):
		case joaat("ratloader2"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster4");
			}
			else if (iParam1 == 2)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster3"):
			if (iParam1 == 0)
			{
				return joaat("monster4");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster4"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster5");
			}
			break;
		case joaat("monster5"):
			if (iParam1 == 0)
			{
				return joaat("monster3");
			}
			else if (iParam1 == 1)
			{
				return joaat("monster4");
			}
			break;
		case joaat("glendale"):
			if (!__LIB_4__.func_6(PLAYER::PLAYER_ID()))
			{
				return joaat("glendale2");
			}
			else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353.f_2, 12))
			{
				if (iParam1 == 0)
				{
					return joaat("glendale2");
				}
				else if (iParam1 == 1)
				{
					return joaat("bruiser");
				}
				else if (iParam1 == 2)
				{
					return joaat("bruiser2");
				}
				else if (iParam1 == 3)
				{
					return joaat("bruiser3");
				}
			}
			else if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser2");
			}
			else if (iParam1 == 2)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser"):
			if (iParam1 == 0)
			{
				return joaat("bruiser2");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser2"):
			if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser3");
			}
			break;
		case joaat("bruiser3"):
			if (iParam1 == 0)
			{
				return joaat("bruiser");
			}
			else if (iParam1 == 1)
			{
				return joaat("bruiser2");
			}
			break;
		case joaat("impaler"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler3");
			}
			else if (iParam1 == 2)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler2"):
			if (iParam1 == 0)
			{
				return joaat("impaler3");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler3"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler4");
			}
			break;
		case joaat("impaler4"):
			if (iParam1 == 0)
			{
				return joaat("impaler2");
			}
			else if (iParam1 == 1)
			{
				return joaat("impaler3");
			}
			break;
		case joaat("issi3"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi5");
			}
			else if (iParam1 == 2)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi4"):
			if (iParam1 == 0)
			{
				return joaat("issi5");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi5"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi6");
			}
			break;
		case joaat("issi6"):
			if (iParam1 == 0)
			{
				return joaat("issi4");
			}
			else if (iParam1 == 1)
			{
				return joaat("issi5");
			}
			break;
		case joaat("gargoyle"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike2");
			}
			else if (iParam1 == 2)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("dominator"):
		case joaat("dominator2"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator5");
			}
			else if (iParam1 == 2)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator4"):
			if (iParam1 == 0)
			{
				return joaat("dominator5");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator5"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator6");
			}
			break;
		case joaat("dominator6"):
			if (iParam1 == 0)
			{
				return joaat("dominator4");
			}
			else if (iParam1 == 1)
			{
				return joaat("dominator5");
			}
			break;
		case joaat("imperator"):
			if (iParam1 == 0)
			{
				return joaat("imperator2");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator3");
			}
			break;
		case joaat("imperator2"):
			if (iParam1 == 0)
			{
				return joaat("imperator");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator3");
			}
			break;
		case joaat("imperator3"):
			if (iParam1 == 0)
			{
				return joaat("imperator");
			}
			else if (iParam1 == 1)
			{
				return joaat("imperator2");
			}
			break;
		case joaat("deathbike"):
			if (iParam1 == 0)
			{
				return joaat("deathbike2");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("deathbike2"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike3");
			}
			break;
		case joaat("deathbike3"):
			if (iParam1 == 0)
			{
				return joaat("deathbike");
			}
			else if (iParam1 == 1)
			{
				return joaat("deathbike2");
			}
			break;
		case joaat("zr380"):
			if (iParam1 == 0)
			{
				return joaat("zr3802");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3803");
			}
			break;
		case joaat("zr3802"):
			if (iParam1 == 0)
			{
				return joaat("zr380");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3803");
			}
			break;
		case joaat("zr3803"):
			if (iParam1 == 0)
			{
				return joaat("zr380");
			}
			else if (iParam1 == 1)
			{
				return joaat("zr3802");
			}
			break;
		case joaat("cerberus"):
			if (iParam1 == 0)
			{
				return joaat("cerberus2");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus3");
			}
			break;
		case joaat("cerberus2"):
			if (iParam1 == 0)
			{
				return joaat("cerberus");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus3");
			}
			break;
		case joaat("cerberus3"):
			if (iParam1 == 0)
			{
				return joaat("cerberus");
			}
			else if (iParam1 == 1)
			{
				return joaat("cerberus2");
			}
			break;
		case joaat("scarab"):
			if (iParam1 == 0)
			{
				return joaat("scarab2");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab3");
			}
			break;
		case joaat("scarab2"):
			if (iParam1 == 0)
			{
				return joaat("scarab");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab3");
			}
			break;
		case joaat("scarab3"):
			if (iParam1 == 0)
			{
				return joaat("scarab");
			}
			else if (iParam1 == 1)
			{
				return joaat("scarab2");
			}
			break;
		case joaat("slamvan4"):
			if (iParam1 == 0)
			{
				return joaat("slamvan5");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan6");
			}
			break;
		case joaat("slamvan5"):
			if (iParam1 == 0)
			{
				return joaat("slamvan4");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan6");
			}
			break;
		case joaat("slamvan6"):
			if (iParam1 == 0)
			{
				return joaat("slamvan4");
			}
			else if (iParam1 == 1)
			{
				return joaat("slamvan5");
			}
			break;
		case joaat("brutus"):
			if (iParam1 == 0)
			{
				return joaat("brutus2");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus3");
			}
			break;
		case joaat("brutus2"):
			if (iParam1 == 0)
			{
				return joaat("brutus");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus3");
			}
			break;
		case joaat("brutus3"):
			if (iParam1 == 0)
			{
				return joaat("brutus");
			}
			else if (iParam1 == 1)
			{
				return joaat("brutus2");
			}
			break;
		case joaat("youga2"):
			return joaat("youga3");
			break;
		case joaat("gauntlet3"):
			return joaat("gauntlet5");
			break;
		case joaat("manana"):
			return joaat("manana2");
			break;
		case joaat("peyote"):
			return joaat("peyote3");
		case joaat("yosemite"):
			return joaat("yosemite3");
		case joaat("tenf"):
			return joaat("tenf2");
		case joaat("weevil"):
			return joaat("weevil2");
		case joaat("brioso2"):
			return joaat("brioso3");
		case joaat("sentinel3"):
			return joaat("sentinel4");
	}
	if (__LIB_0__.func_174(iParam0, 0))
	{
		iVar0 = iParam0;
	}
	else
	{
		iVar0 = 0;
	}
	return iVar0;
}

int func_749()//Position - 0x2D4307
{
	return __LIB_12__.func_572(2);
}

char* func_750(int iParam0, int iParam1, var uParam2, int iParam3, bool bParam4, int iParam5)//Position - 0x2E1513
{
	if (__LIB_12__.func_611(iParam0, iParam1, iParam5))
	{
		return "PM_ARENA" /* GXT: Arena War */;
	}
	else if (iParam0 == 1)
	{
		if (iParam1 == 1)
		{
			return "FMMC_RSTAR_TDM" /* GXT: Team Deathmatch */;
		}
		else if (iParam1 == 2)
		{
			return "FMMC_RSTAR_VDM" /* GXT: Vehicle Deathmatch */;
		}
		else if (iParam1 == 3)
		{
			return "FMMC_RSTAR_KOT" /* GXT: King of the Hill */;
		}
		else if (iParam1 == 4)
		{
			return "FMMC_RSTAR_KOTT" /* GXT: Team King of the Hill */;
		}
		else
		{
			return "FMMC_RSTAR_DM" /* GXT: Deathmatch */;
		}
	}
	else if (iParam0 == 2)
	{
		if (iParam1 == 0 || iParam1 == 1)
		{
			return "FMMC_RSTAR_LR" /* GXT: Land Race */;
		}
		else if (iParam1 == 10 || iParam1 == 11)
		{
			return "FMMC_RSTAR_OFR" /* GXT: On Foot Race */;
		}
		else if (iParam1 == 6 || iParam1 == 7)
		{
			return "FMMC_RSTAR_STR" /* GXT: Stunt Race */;
		}
		else if (iParam1 == 18 || iParam1 == 19)
		{
			return "FMMC_RSTAR_TAR" /* GXT: Target Assault Race */;
		}
		else if (iParam1 == 12 || iParam1 == 13)
		{
			return "FMMC_RSTAR_BR" /* GXT: Bike Race */;
		}
		else if (iParam1 == 2 || iParam1 == 3)
		{
			return "FMMC_RSTAR_WR" /* GXT: Sea Race */;
		}
		else if (iParam1 == 4 || iParam1 == 5)
		{
			return "FMMC_RSTAR_AR" /* GXT: Air Race */;
		}
		else if (iParam1 == 24 || iParam1 == 25)
		{
			return "FMMC_RSTAR_OW" /* GXT: Open Wheel Race */;
		}
		else if (iParam1 == 26)
		{
			return "FMMC_RSTAR_PR" /* GXT: Pursuit Race */;
		}
		else if (iParam1 == 27)
		{
			return "FMMC_RSTAR_STRTR" /* GXT: Street Race */;
		}
		return "FMMC_RSTAR_RA" /* GXT: Race */;
	}
	else if (iParam0 == 0 || iParam0 == 9)
	{
		if (iParam1 == 5)
		{
			return "FMMC_RSTAR_MLTS" /* GXT: Last Team Standing */;
		}
		else if (iParam1 == 9)
		{
			return "FMMC_RSTAR_MCP";
		}
		else if (iParam1 == 6)
		{
			if (BitTest(uParam2, 20))
			{
				return "FMMC_RSTAR_CTNT" /* GXT: Capture - Contend */;
			}
			else if (BitTest(uParam2, 21))
			{
				return "FMMC_RSTAR_GTA" /* GXT: Capture - GTA */;
			}
			else if (BitTest(uParam2, 22))
			{
				return "FMMC_RSTAR_HOLD" /* GXT: Capture - Hold */;
			}
			else if (BitTest(uParam2, 23))
			{
				return "FMMC_RSTAR_RAID" /* GXT: Capture - Raid */;
			}
			else
			{
				return "FMMC_RSTAR_MCTF" /* GXT: Capture */;
			}
		}
		else if (iParam1 == 4)
		{
			if ((((((iParam5 > 0 || iParam3 != 0) || BitTest(uParam2, 15)) || BitTest(uParam2, 18)) || BitTest(uParam2, 19)) || BitTest(uParam2, 29)) || BitTest(uParam2, 28))
			{
				return "FMMC_RSTAR_MAM" /* GXT: Adversary Mode */;
			}
			else
			{
				return "FMMC_RSTAR_MVS" /* GXT: Versus Mission */;
			}
		}
		else if (iParam1 == 1)
		{
			if (bParam4)
			{
				return "FMMC_RSTAR_HFS" /* GXT: Heists */;
			}
			else
			{
				return "FMMC_RSTAR_HF" /* GXT: Heist */;
			}
		}
		else if (iParam1 == 7)
		{
			if (bParam4)
			{
				return "FMMC_RSTAR_HPS" /* GXT: Setups */;
			}
			else
			{
				return "FMMC_RSTAR_HP" /* GXT: Setup */;
			}
		}
	}
	else if (iParam0 == 6)
	{
		return "FMMC_RSTAR_GA" /* GXT: Gang Attack */;
	}
	else if (iParam0 == 3)
	{
		return "FMMC_RSTAR_HM" /* GXT: Survival */;
	}
	else if (iParam0 == 8)
	{
		return "FMMC_RSTAR_BJ" /* GXT: Parachuting */;
	}
	else if (iParam0 == 7)
	{
		return "FMMC_RSTAR_MLTS" /* GXT: Last Team Standing */;
	}
	else if (iParam0 == 165)
	{
		return "FMMC_RSTAR_MCP";
	}
	else if (iParam0 == 134)
	{
		return "AMTT_BLIP" /* GXT: Time Trial */;
	}
	else if (iParam0 == 254)
	{
		return "RC_AMTT_BLIP" /* GXT: RC Bandito Time Trial */;
	}
	if (bParam4)
	{
		return "FMMC_RSTAR_OM" /* GXT: Other Missions */;
	}
	return "FMMC_RSTAR_MS" /* GXT: Mission */;
}

void func_751(var uParam0, bool bParam1, bool bParam2)//Position - 0x2F34B9
{
	struct<3> Var0;
	if (uParam0->f_117 != -1 && GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(uParam0->f_117))
	{
		GRAPHICS::STOP_PARTICLE_FX_LOOPED(uParam0->f_117, false);
	}
	if (bParam2)
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(uParam0->f_114))
		{
			__LIB_1__.func_96(&(uParam0->f_114));
		}
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_113))
		{
			OBJECT::DELETE_OBJECT(&(uParam0->f_113));
		}
	}
	else if (!PED::IS_PED_INJURED(uParam0->f_122) && PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_122, false))
	{
		if (__LIB_12__.func_657(uParam0->f_122))
		{
			__LIB_1__.func_96(&(uParam0->f_114));
		}
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_113))
		{
			OBJECT::DELETE_OBJECT(&(uParam0->f_113));
		}
	}
	else
	{
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_113))
		{
			ENTITY::DETACH_ENTITY(uParam0->f_113, true, true);
			if (bParam1)
			{
				Var0 = { ENTITY::GET_ENTITY_COORDS(uParam0->f_113, false) - uParam0->f_119 };
				Var0 = { Var0 / FtoV(SYSTEM::VMAG(Var0)) };
				Var0 = { Var0 * Vector(4f, 4f, 4f) };
				ENTITY::APPLY_FORCE_TO_ENTITY(uParam0->f_113, 1, Var0, 0f, 0f, 0f, 0, false, true, true, false, true);
			}
		}
		if (__LIB_12__.func_657(uParam0->f_122))
		{
			__LIB_1__.func_46(&(uParam0->f_114));
		}
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_113))
		{
			if (__LIB_1__.func_155(PLAYER::PLAYER_ID(), 1, 1) || __LIB_4__.func_250())
			{
				if (NETWORK::NETWORK_GET_ENTITY_IS_NETWORKED(uParam0->f_113))
				{
					NETWORK::NETWORK_UNREGISTER_NETWORKED_ENTITY(uParam0->f_113);
				}
			}
			ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&(uParam0->f_113));
		}
	}
	uParam0->f_113 = -1;
	uParam0->f_12 = 0;
	uParam0->f_9 = 0;
	uParam0->f_618 = 1;
	uParam0->f_619 = 1;
}

int func_752(int iParam0)//Position - 0x306F2D
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(3812, iParam0, 0);
	if (iVar0 >= 20)
	{
		iVar0 = 0;
		__LIB_12__.func_866(iVar0, iParam0);
	}
	return iVar0;
}

void func_753(var uParam0, var uParam1)//Position - 0x334939
{
	var uVar0;
	var uVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	if (!BitTest(uParam0->f_42, 5) && !BitTest(uParam0->f_42, 6))
	{
		iVar4 = 0;
		while (iVar4 < 12)
		{
			if (__LIB_5__.func_9(uParam1, iVar3, &uVar0, 0))
			{
				(uParam1[iVar3 /*100*/])->f_75 = 1;
				iVar3++;
				if (iVar3 >= 12)
				{
					return;
				}
			}
			if (__LIB_5__.func_9(uParam1, iVar3, &uVar1, 1))
			{
				(uParam1[iVar3 /*100*/])->f_75 = 2;
				iVar3++;
				if (iVar3 >= 12)
				{
					return;
				}
			}
			if (__LIB_5__.func_9(uParam1, iVar3, &uVar2, 2))
			{
				(uParam1[iVar3 /*100*/])->f_75 = 3;
				iVar3++;
				if (iVar3 >= 12)
				{
					return;
				}
			}
			iVar4++;
		}
	}
	else
	{
		__LIB_19__.func_793(uParam1);
	}
}

void func_754(int iParam0, struct<50> Param1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, int iParam17)//Position - 0x33DF50
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (Global_2726723 == 0)
	{
		iVar1 = 0;
		iVar0 = 0;
		while (iVar0 <= 11)
		{
			if (Param1.f_13[iVar0] != 0)
			{
				iVar1 = 1;
				iVar0 = 12;
			}
			iVar0++;
		}
		if (iVar1 == 0)
		{
			return;
		}
	}
	if (Global_2726724 == 0)
	{
		iVar2 = 0;
		while (iVar2 <= 11)
		{
			if (Param1.f_13[iVar2] != 0 && Param1.f_13[iVar2] >= PED::GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(iParam0, iVar2))
			{
				Param1.f_13[iVar2] = 0;
			}
			iVar2++;
		}
		iVar2 = 0;
		while (iVar2 <= 11)
		{
			if (Param1[iVar2] != 0 && Param1[iVar2] >= PED::GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(iParam0, iVar2, Param1.f_13[iVar2]))
			{
				Param1[iVar2] = 0;
			}
			iVar2++;
		}
	}
	__LIB_1__.func_39(387, Param1[0], iParam17);
	__LIB_1__.func_39(388, Param1[1], iParam17);
	__LIB_1__.func_39(389, Param1[2], iParam17);
	__LIB_1__.func_39(390, Param1[3], iParam17);
	__LIB_1__.func_39(391, Param1[4], iParam17);
	__LIB_1__.func_39(392, Param1[5], iParam17);
	__LIB_1__.func_39(393, Param1[6], iParam17);
	__LIB_1__.func_39(394, Param1[7], iParam17);
	__LIB_1__.func_39(395, Param1[8], iParam17);
	__LIB_1__.func_39(396, Param1[9], iParam17);
	__LIB_1__.func_39(397, Param1[10], iParam17);
	__LIB_1__.func_39(398, Param1[11], iParam17);
	__LIB_1__.func_39(399, Param1.f_13[0], iParam17);
	__LIB_1__.func_39(401, Param1.f_13[2], iParam17);
	__LIB_1__.func_39(403, Param1.f_13[4], iParam17);
	__LIB_1__.func_39(404, Param1.f_13[5], iParam17);
	__LIB_1__.func_39(405, Param1.f_13[6], iParam17);
	__LIB_1__.func_39(406, Param1.f_13[7], iParam17);
	__LIB_1__.func_39(408, Param1.f_13[9], iParam17);
	__LIB_1__.func_39(409, Param1.f_13[10], iParam17);
	__LIB_12__.func_670(Param1.f_13[1], iParam17);
	__LIB_9__.func_323(Param1.f_13[3], iParam17);
	__LIB_9__.func_322(Param1.f_13[8], iParam17);
	__LIB_9__.func_321(Param1.f_13[11], iParam17);
	__LIB_1__.func_39(411, Param1.f_26[0], iParam17);
	__LIB_1__.func_39(412, Param1.f_26[1], iParam17);
	__LIB_1__.func_39(413, Param1.f_26[2], iParam17);
	__LIB_1__.func_39(414, Param1.f_26[3], iParam17);
	__LIB_1__.func_39(415, Param1.f_26[4], iParam17);
	__LIB_1__.func_39(416, Param1.f_26[5], iParam17);
	__LIB_1__.func_39(417, Param1.f_26[6], iParam17);
	__LIB_1__.func_39(418, Param1.f_26[7], iParam17);
	__LIB_1__.func_39(419, Param1.f_26[8], iParam17);
	__LIB_1__.func_39(420, Param1.f_26[9], iParam17);
	__LIB_1__.func_39(421, Param1.f_26[10], iParam17);
	__LIB_1__.func_39(422, Param1.f_26[11], iParam17);
	__LIB_1__.func_39(423, Param1.f_39[0], iParam17);
	__LIB_1__.func_39(424, Param1.f_39[1], iParam17);
	__LIB_1__.func_39(425, Param1.f_39[2], iParam17);
	__LIB_1__.func_39(426, Param1.f_39[3], iParam17);
	__LIB_1__.func_39(427, Param1.f_39[4], iParam17);
	__LIB_1__.func_39(428, Param1.f_39[5], iParam17);
	__LIB_1__.func_39(429, Param1.f_39[6], iParam17);
	__LIB_1__.func_39(430, Param1.f_39[7], iParam17);
	__LIB_1__.func_39(431, Param1.f_39[8], iParam17);
	__LIB_1__.func_39(432, Param1.f_49[0], iParam17);
	__LIB_1__.func_39(433, Param1.f_49[1], iParam17);
	__LIB_1__.func_39(434, Param1.f_49[2], iParam17);
	__LIB_1__.func_39(435, Param1.f_49[3], iParam17);
	__LIB_1__.func_39(436, Param1.f_49[4], iParam17);
	__LIB_1__.func_39(437, Param1.f_49[5], iParam17);
	__LIB_1__.func_39(438, Param1.f_49[6], iParam17);
	__LIB_1__.func_39(439, Param1.f_49[7], iParam17);
	__LIB_1__.func_39(440, Param1.f_49[8], iParam17);
}

void func_755(int iParam0, int iParam1, int iParam2, struct<13> Param3, int iParam4)//Position - 0x3775EF
{
	Global_2715699.f_1.f_2828 = { Param3 };
	__LIB_12__.func_690(&(Global_2715699.f_1.f_2828.f_13), iParam0, iParam1, iParam2, iParam4);
}

bool func_756()//Position - 0x38601B
{
	__LIB_12__.func_706();
	return NETWORK::GET_CLOUD_TIME_AS_INT() < Global_1836751.f_3;
}

int func_757(int iParam0)//Position - 0x388E47
{
	__LIB_12__.func_710();
	if (iParam0 == 2)
	{
		return BitTest(Global_1836751, 13);
	}
	else if (iParam0 == 129)
	{
		return BitTest(Global_1836751, 0);
	}
	else if ((iParam0 == 202 || iParam0 == 203) || iParam0 == 204)
	{
		return BitTest(Global_1836751, 2);
	}
	else if (iParam0 == 223)
	{
		return BitTest(Global_1836751, 3);
	}
	else if (iParam0 == 224)
	{
		return BitTest(Global_1836751, 4);
	}
	else if (iParam0 == 232)
	{
		return BitTest(Global_1836751, 5);
	}
	else if (iParam0 == 246)
	{
		return BitTest(Global_1836751, 7);
	}
	else if (iParam0 == 251)
	{
		return BitTest(Global_1836751, 6);
	}
	else if (iParam0 == 252)
	{
		return BitTest(Global_1836751, 8);
	}
	else if (iParam0 == 253)
	{
		return BitTest(Global_1836751, 9);
	}
	else if (iParam0 == 161)
	{
		return BitTest(Global_1836751, 10);
	}
	else if (iParam0 == 278)
	{
		if (!__LIB_5__.func_570(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
		return BitTest(Global_1836751, 11);
	}
	else if (iParam0 == 279)
	{
		if (!__LIB_5__.func_570(PLAYER::PLAYER_ID()) || !__LIB_12__.func_709())
		{
			return 1;
		}
		return BitTest(Global_1836751, 12);
	}
	else if (iParam0 == 283)
	{
		return 1;
		return BitTest(Global_1836751, 14);
	}
	else if (iParam0 == 236 || iParam0 == 150)
	{
		return BitTest(Global_1836751.f_2, 4);
	}
	else if (iParam0 == 254)
	{
		return BitTest(Global_1836751.f_1, 10);
	}
	else if (iParam0 == 289)
	{
		return BitTest(Global_1836751.f_1, 21);
	}
	else if (iParam0 == 303)
	{
		return BitTest(Global_1836751, 15);
	}
	else if (iParam0 == 302)
	{
		return BitTest(Global_1836751, 16);
	}
	return 0;
}

void func_758()//Position - 0x38A01A
{
	if (!Global_20465)
	{
		if (Global_20266.f_1 == 6)
		{
			__LIB_2__.func_41(Global_20247, "SET_DATA_SLOT_EMPTY", 1f, -1082130432, -1082130432, -1082130432, -1082130432);
			__LIB_8__.func_120(1);
			__LIB_2__.func_41(Global_20247, "DISPLAY_VIEW", 1f, SYSTEM::TO_FLOAT(Global_20246), -1082130432, -1082130432, -1082130432);
		}
	}
}

int func_759(var uParam0, int iParam1, bool bParam2, bool bParam3)//Position - 0x396071
{
	if ((__LIB_0__.func_661() || __LIB_0__.func_706()) || uParam0->f_1 == -1)
	{
		return 1;
	}
	if (bParam2)
	{
		return 0;
	}
	else if (bParam3)
	{
		if (__LIB_12__.func_718())
		{
			return 1;
		}
	}
	if (iParam1 && !bParam3)
	{
		if (__LIB_12__.func_718() || !__LIB_12__.func_717())
		{
			return 1;
		}
	}
	return 0;
}

void func_760(var uParam0, bool bParam1)//Position - 0x396978
{
	if (bParam1)
	{
		if (uParam0->f_13)
		{
			uParam0->f_13 = 0;
		}
	}
	switch (uParam0->f_36)
	{
		case 3:
		case 7:
		case 8:
		case 9:
		case 10:
			__LIB_12__.func_700(1);
			HUD::SET_TEXT_RENDER_ID(uParam0->f_1);
			GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
			GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(true);
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam0->f_25)))
			{
				GRAPHICS::DRAW_SPRITE_NAMED_RENDERTARGET(__LIB_12__.func_698(), &(uParam0->f_25), 0.5f, 0.5f, 1f, 1f, 0f, 255, 255, 255, uParam0->f_9, 0);
			}
			HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
			Global_1966040 = 0;
			break;
		default:
			if (uParam0->f_10)
			{
				if (GRAPHICS::GET_TV_CHANNEL() != 0)
				{
					GRAPHICS::SET_TV_CHANNEL(0);
				}
				__LIB_12__.func_700(1);
				HUD::SET_TEXT_RENDER_ID(uParam0->f_1);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
				GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(true);
				GRAPHICS::DRAW_TV_CHANNEL(0.5f, 0.5f, 1f, 1f, 0f, 255, 255, 255, uParam0->f_9);
				HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
				Global_1966040 = 1;
			}
			else
			{
				__LIB_12__.func_723(uParam0, 0, 0);
			}
			break;
	}
}

int func_761(var uParam0)//Position - 0x396D50
{
	char* sVar0;
	int iVar1;
	sVar0 = __LIB_12__.func_699();
	iVar1 = __LIB_12__.func_724();
	if (MISC::IS_STRING_NULL_OR_EMPTY(sVar0) || iVar1 == 0)
	{
		return 0;
	}
	if (!HUD::IS_NAMED_RENDERTARGET_REGISTERED(sVar0))
	{
		HUD::REGISTER_NAMED_RENDERTARGET(sVar0, false);
		if (!HUD::IS_NAMED_RENDERTARGET_LINKED(iVar1))
		{
			HUD::LINK_NAMED_RENDERTARGET(iVar1);
			if (uParam0->f_1 == -1)
			{
				uParam0->f_1 = HUD::GET_NAMED_RENDERTARGET_RENDER_ID(sVar0);
				return 1;
			}
		}
	}
	else if (!HUD::IS_NAMED_RENDERTARGET_LINKED(iVar1))
	{
		HUD::LINK_NAMED_RENDERTARGET(iVar1);
		if (uParam0->f_1 == -1)
		{
			uParam0->f_1 = HUD::GET_NAMED_RENDERTARGET_RENDER_ID(sVar0);
			return 1;
		}
	}
	else if (uParam0->f_1 == -1)
	{
		uParam0->f_1 = HUD::GET_NAMED_RENDERTARGET_RENDER_ID(sVar0);
		return 1;
	}
	else
	{
		return 1;
	}
	return 0;
}

void func_762(int iParam0, bool bParam1, bool bParam2)//Position - 0x39B824
{
	int iVar0;
	iVar0 = __LIB_2__.func_106(iParam0);
	switch (iParam0)
	{
		case 103:
			if (bParam2)
			{
				__LIB_9__.func_81(121, bParam1);
				__LIB_9__.func_81(133, bParam1);
			}
			else
			{
				__LIB_21__.func_894(121, bParam1);
				__LIB_21__.func_894(133, bParam1);
			}
			break;
		case 104:
			if (bParam2)
			{
				__LIB_9__.func_81(122, bParam1);
				__LIB_9__.func_81(133, bParam1);
			}
			else
			{
				__LIB_21__.func_894(122, bParam1);
				__LIB_21__.func_894(133, bParam1);
			}
			break;
		case 105:
			if (bParam2)
			{
				__LIB_9__.func_81(123, bParam1);
				__LIB_9__.func_81(133, bParam1);
			}
			else
			{
				__LIB_21__.func_894(123, bParam1);
				__LIB_21__.func_894(133, bParam1);
			}
			break;
		case 106:
			if (bParam2)
			{
				__LIB_9__.func_81(124, bParam1);
				__LIB_9__.func_81(134, bParam1);
			}
			else
			{
				__LIB_21__.func_894(124, bParam1);
				__LIB_21__.func_894(134, bParam1);
			}
			break;
		case 107:
			if (bParam2)
			{
				__LIB_9__.func_81(125, bParam1);
				__LIB_9__.func_81(134, bParam1);
			}
			else
			{
				__LIB_21__.func_894(125, bParam1);
				__LIB_21__.func_894(134, bParam1);
			}
			break;
		case 108:
			if (bParam2)
			{
				__LIB_9__.func_81(126, bParam1);
				__LIB_9__.func_81(134, bParam1);
			}
			else
			{
				__LIB_21__.func_894(126, bParam1);
				__LIB_21__.func_894(134, bParam1);
			}
			break;
		case 109:
			if (bParam2)
			{
				__LIB_9__.func_81(127, bParam1);
				__LIB_9__.func_81(135, bParam1);
			}
			else
			{
				__LIB_21__.func_894(127, bParam1);
				__LIB_21__.func_894(135, bParam1);
			}
			break;
		case 110:
			if (bParam2)
			{
				__LIB_9__.func_81(128, bParam1);
				__LIB_9__.func_81(135, bParam1);
			}
			else
			{
				__LIB_21__.func_894(128, bParam1);
				__LIB_21__.func_894(135, bParam1);
			}
			break;
		case 111:
			if (bParam2)
			{
				__LIB_9__.func_81(129, bParam1);
				__LIB_9__.func_81(135, bParam1);
			}
			else
			{
				__LIB_21__.func_894(129, bParam1);
				__LIB_21__.func_894(135, bParam1);
			}
			break;
		case 112:
			if (bParam2)
			{
				__LIB_9__.func_81(130, bParam1);
				__LIB_9__.func_81(136, bParam1);
			}
			else
			{
				__LIB_21__.func_894(130, bParam1);
				__LIB_21__.func_894(136, bParam1);
			}
			break;
		case 113:
			if (bParam2)
			{
				__LIB_9__.func_81(131, bParam1);
				__LIB_9__.func_81(136, bParam1);
			}
			else
			{
				__LIB_21__.func_894(131, bParam1);
				__LIB_21__.func_894(136, bParam1);
			}
			break;
		case 114:
			if (bParam2)
			{
				__LIB_9__.func_81(132, bParam1);
				__LIB_9__.func_81(136, bParam1);
			}
			else
			{
				__LIB_21__.func_894(132, bParam1);
				__LIB_21__.func_894(136, bParam1);
			}
			break;
	}
	if (iVar0 == 6)
	{
		switch (iParam0)
		{
			case 1:
				if (bParam2)
				{
					__LIB_9__.func_81(25, bParam1);
				}
				else
				{
					__LIB_21__.func_894(25, bParam1);
				}
				break;
			case 2:
				if (bParam2)
				{
					__LIB_9__.func_81(26, bParam1);
				}
				else
				{
					__LIB_21__.func_894(26, bParam1);
				}
				break;
			case 3:
				if (bParam2)
				{
					__LIB_9__.func_81(27, bParam1);
				}
				else
				{
					__LIB_21__.func_894(27, bParam1);
				}
				break;
			case 4:
				if (bParam2)
				{
					__LIB_9__.func_81(28, bParam1);
				}
				else
				{
					__LIB_21__.func_894(28, bParam1);
				}
				break;
			case 5:
				if (bParam2)
				{
					__LIB_9__.func_81(29, bParam1);
				}
				else
				{
					__LIB_21__.func_894(29, bParam1);
				}
				break;
			case 6:
				if (bParam2)
				{
					__LIB_9__.func_81(30, bParam1);
				}
				else
				{
					__LIB_21__.func_894(30, bParam1);
				}
				break;
			case 7:
				if (bParam2)
				{
					__LIB_9__.func_81(31, bParam1);
				}
				else
				{
					__LIB_21__.func_894(31, bParam1);
				}
				break;
			case 34:
				if (bParam2)
				{
					__LIB_9__.func_81(32, bParam1);
				}
				else
				{
					__LIB_21__.func_894(32, bParam1);
				}
				break;
			case 35:
				if (bParam2)
				{
					__LIB_9__.func_81(33, bParam1);
				}
				else
				{
					__LIB_21__.func_894(33, bParam1);
				}
				break;
			case 36:
				if (bParam2)
				{
					__LIB_9__.func_81(34, bParam1);
				}
				else
				{
					__LIB_21__.func_894(34, bParam1);
				}
				break;
			case 37:
				if (bParam2)
				{
					__LIB_9__.func_81(35, bParam1);
				}
				else
				{
					__LIB_21__.func_894(35, bParam1);
				}
				break;
			case 38:
				if (bParam2)
				{
					__LIB_9__.func_81(36, bParam1);
				}
				else
				{
					__LIB_21__.func_894(36, bParam1);
				}
				break;
			case 39:
				if (bParam2)
				{
					__LIB_9__.func_81(37, bParam1);
				}
				else
				{
					__LIB_21__.func_894(37, bParam1);
				}
				break;
			case 40:
				if (bParam2)
				{
					__LIB_9__.func_81(38, bParam1);
				}
				else
				{
					__LIB_21__.func_894(38, bParam1);
				}
				break;
			case 41:
				if (bParam2)
				{
					__LIB_9__.func_81(39, bParam1);
				}
				else
				{
					__LIB_21__.func_894(39, bParam1);
				}
				break;
			case 42:
				if (bParam2)
				{
					__LIB_9__.func_81(40, bParam1);
				}
				else
				{
					__LIB_21__.func_894(40, bParam1);
				}
				break;
			case 43:
				if (bParam2)
				{
					__LIB_9__.func_81(41, bParam1);
				}
				else
				{
					__LIB_21__.func_894(41, bParam1);
				}
				break;
			case 73:
				if (bParam2)
				{
					__LIB_9__.func_81(49, bParam1);
				}
				else
				{
					__LIB_21__.func_894(49, bParam1);
				}
				break;
			case 74:
				if (bParam2)
				{
					__LIB_9__.func_81(50, bParam1);
				}
				else
				{
					__LIB_21__.func_894(50, bParam1);
				}
				break;
			case 75:
				if (bParam2)
				{
					__LIB_9__.func_81(51, bParam1);
				}
				else
				{
					__LIB_21__.func_894(51, bParam1);
				}
				break;
			case 76:
				if (bParam2)
				{
					__LIB_9__.func_81(52, bParam1);
				}
				else
				{
					__LIB_21__.func_894(52, bParam1);
				}
				break;
			case 77:
				if (bParam2)
				{
					__LIB_9__.func_81(53, bParam1);
				}
				else
				{
					__LIB_21__.func_894(53, bParam1);
				}
				break;
			case 78:
				if (bParam2)
				{
					__LIB_9__.func_81(54, bParam1);
				}
				else
				{
					__LIB_21__.func_894(54, bParam1);
				}
				break;
			case 79:
				if (bParam2)
				{
					__LIB_9__.func_81(55, bParam1);
				}
				else
				{
					__LIB_21__.func_894(55, bParam1);
				}
				break;
			case 80:
				if (bParam2)
				{
					__LIB_9__.func_81(56, bParam1);
				}
				else
				{
					__LIB_21__.func_894(56, bParam1);
				}
				break;
			case 81:
				if (bParam2)
				{
					__LIB_9__.func_81(57, bParam1);
				}
				else
				{
					__LIB_21__.func_894(57, bParam1);
				}
				break;
			case 82:
				if (bParam2)
				{
					__LIB_9__.func_81(58, bParam1);
				}
				else
				{
					__LIB_21__.func_894(58, bParam1);
				}
				break;
		}
	}
	else if (iVar0 == 5)
	{
		if (bParam2)
		{
			__LIB_9__.func_81(46, bParam1);
		}
		else
		{
			__LIB_21__.func_894(46, bParam1);
		}
	}
	else if (iVar0 == 4)
	{
	}
	if (Global_1312193[iParam0 /*1951*/].f_33 == 2)
	{
		if (bParam2)
		{
			__LIB_9__.func_81(12, bParam1);
		}
		else
		{
			__LIB_21__.func_894(12, bParam1);
		}
	}
	else if (Global_1312193[iParam0 /*1951*/].f_33 == 6)
	{
		if (bParam2)
		{
			__LIB_9__.func_81(13, bParam1);
		}
		else
		{
			__LIB_21__.func_894(13, bParam1);
		}
	}
	else if (Global_1312193[iParam0 /*1951*/].f_33 == 10)
	{
		if (bParam2)
		{
			__LIB_9__.func_81(14, bParam1);
		}
		else
		{
			__LIB_21__.func_894(14, bParam1);
		}
	}
}

void func_763(float* fParam0, float* fParam1, float* fParam2, int iParam3, int iParam4, int iParam5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, int iParam10)//Position - 0x3A343E
{
	struct<16> Var0;
	int iVar1;
	struct<16> Var2;
	float fVar3;
	float fVar4;
	StringCopy(&Var0, "", 64);
	iVar1 = NETWORK::NETWORK_GET_CONTENT_MODIFIER_LIST_ID(iParam3);
	StringCopy(&Var2, "XP_MULTIPLIER", 64);
	Var0 = { __LIB_12__.func_731(iParam4, iParam5, iVar1, Var2, bParam6, bParam7, iParam10) };
	if (iParam4 == 0)
	{
		if (iParam5 == 1 || iParam5 == 7)
		{
			if (Global_262145.f_8573 /* Tunable: HEIST_BADGE_XP_MULTIPLIER */ >= 1f)
			{
				*fParam0 = Global_262145.f_8573 /* Tunable: HEIST_BADGE_XP_MULTIPLIER */;
			}
			if (Global_262145.f_8574 /* Tunable: HEIST_BADGE_CASH_MULTIPLIER */ >= 1f)
			{
				*fParam1 = Global_262145.f_8574 /* Tunable: HEIST_BADGE_CASH_MULTIPLIER */;
			}
			return;
		}
		if (bParam8)
		{
			if (Global_262145.f_23406 /* Tunable: H2_BADGE_XP_MULTIPLIER */ >= 1f)
			{
				*fParam0 = Global_262145.f_23406 /* Tunable: H2_BADGE_XP_MULTIPLIER */;
			}
			if (Global_262145.f_23407 /* Tunable: H2_BADGE_CASH_MULTIPLIER */ >= 1f)
			{
				*fParam1 = Global_262145.f_23407 /* Tunable: H2_BADGE_CASH_MULTIPLIER */;
			}
			return;
		}
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var0))
	{
		if (NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(&Var0, &Var2, fParam0))
		{
		}
		if (NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(&Var0, "FAKE_XP_MULTIPLIER", &fVar3))
		{
		}
		if (fVar3 > 0f)
		{
			*fParam0 = fVar3;
		}
	}
	StringCopy(&Var2, "CASH_MULTIPLIER", 64);
	Var0 = { __LIB_12__.func_731(iParam4, iParam5, iVar1, Var2, bParam6, bParam7, iParam10) };
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var0))
	{
		if (NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(&Var0, &Var2, fParam1))
		{
		}
		if (NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(&Var0, "FAKE_XP_MULTIPLIER", &fVar4))
		{
		}
		if (fVar4 > 0f)
		{
			*fParam1 = fVar4;
		}
	}
	if (bParam9)
	{
		StringCopy(&Var2, "AP_MULTIPLIER", 64);
		Var0 = { __LIB_12__.func_731(iParam4, iParam5, iVar1, Var2, bParam6, bParam7, iParam10) };
		if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var0))
		{
			if (NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(&Var0, &Var2, fParam2))
			{
			}
		}
	}
}

var func_764(int iParam0)//Position - 0x3A485E
{
	int iVar0;
	iVar0 = __LIB_1__.func_556(2483, -1, 0);
	return BitTest(iVar0, iParam0);
}

int func_765(int iParam0)//Position - 0x7FD8C
{
	if (__LIB_12__.func_746(iParam0) == 236 || __LIB_12__.func_746(iParam0) == 150)
	{
		return __LIB_1__.func_181(iParam0);
	}
	return 0;
}

int func_766(int iParam0, int iParam1)//Position - 0xAA127
{
	int iVar0;
	int iVar1;
	var uVar2;
	var uVar3;
	var uVar4;
	var uVar5;
	if (__LIB_12__.func_755(iParam0, &iVar0))
	{
		return -1;
	}
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 < 2)
	{
		if (((Global_2779511[iVar1 /*5*/].f_1 == -1 || Global_2779511[iVar1 /*5*/].f_2 == -1) || Global_2779511[iVar1 /*5*/].f_3 == -1) || Global_2779511[iVar1 /*5*/].f_4 == -1)
		{
			iVar0 = iVar1;
			iVar1 = 2;
		}
		iVar1++;
	}
	if (iVar0 == -1)
	{
		return -1;
	}
	HUD::GET_HUD_COLOUR(iParam0, &uVar2, &uVar3, &uVar4, &uVar5);
	Global_2779511[iVar0 /*5*/] = iParam0;
	Global_2779511[iVar0 /*5*/].f_1 = uVar2;
	Global_2779511[iVar0 /*5*/].f_2 = uVar3;
	Global_2779511[iVar0 /*5*/].f_3 = uVar4;
	Global_2779511[iVar0 /*5*/].f_4 = uVar5;
	HUD::REPLACE_HUD_COLOUR(iParam0, iParam1);
	return iVar0;
}

int func_767(var uParam0, int iParam1, bool bParam2, int iParam3)//Position - 0xADEB1
{
	var* uVar0;
	if (__LIB_19__.func_799())
	{
		uParam0->f_19 = 0;
		return 1;
	}
	if (__LIB_9__.func_96())
	{
		return 1;
	}
	if ((uParam0->f_21 != -1 && uParam0->f_22 != -1) && iParam3 == 0)
	{
		return 1;
	}
	switch (uParam0->f_19)
	{
		case 0:
			__LIB_1__.func_713();
			__LIB_1__.func_711();
			Global_1922915.f_5 = 0;
			uParam0->f_8 = 0;
			if (iParam3 == 1)
			{
				Global_1922940.f_5 = 0;
				Global_1922940.f_4 = 0;
				Global_1922940.f_1 = 0;
				Global_1922940.f_2 = 0;
				return 1;
			}
			else if (iParam3 == 4)
			{
				Global_1922940.f_5 = 0;
				uParam0->f_19 = 1;
				return 0;
			}
			if (uParam0->f_18 == 0 || uParam0->f_18 == 1)
			{
				uParam0->f_19 = 1;
			}
			else if (uParam0->f_18 == 2)
			{
				uParam0->f_19 = 2;
			}
			break;
		case 1:
			if (DATAFILE::DATAFILE_SELECT_UGC_STATS(iParam1, true, 0))
			{
				if (iParam3 == 4)
				{
					uVar0 = DATAFILE::DATAFILE_GET_FILE_DICT(0);
					Global_1922946 = DATAFILE::DATADICT_GET_INT(uVar0, "pt");
					Global_1922946.f_1 = DATAFILE::DATADICT_GET_INT(uVar0, "pu");
					Global_1922946.f_2 = DATAFILE::DATADICT_GET_INT(uVar0, "ft");
					Global_1922946.f_3 = DATAFILE::DATADICT_GET_INT(uVar0, "fu");
					Global_1922946.f_4 = DATAFILE::DATADICT_GET_INT(uVar0, "qt");
					Global_1922946.f_5 = DATAFILE::DATADICT_GET_INT(uVar0, "qu");
				}
				else
				{
					uVar0 = DATAFILE::DATAFILE_GET_FILE_DICT(0);
					Global_1922915.f_10 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "dt"));
					Global_1922915.f_11 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "du"));
					Global_1922915.f_9 = (Global_1922915.f_10 / Global_1922915.f_11);
					Global_1922915.f_13 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "pt"));
					Global_1922915.f_14 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "pu"));
					Global_1057163 = SYSTEM::ROUND(Global_1922915.f_14);
					Global_1922915.f_12 = (Global_1922915.f_13 / Global_1922915.f_14);
					Global_1922915.f_15 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "qt"));
					Global_1922915.f_17 = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(uVar0, "qu"));
					Global_1922915.f_16 = (Global_1922915.f_15 / Global_1922915.f_17);
				}
				if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
				{
					DATAFILE::DATAFILE_DELETE(0);
				}
				if (uParam0->f_18 == 0)
				{
					uParam0->f_19 = 2;
				}
				else
				{
					uParam0->f_19 = 0;
					return 1;
				}
			}
			else
			{
				uParam0->f_8++;
				if (uParam0->f_8 > 5)
				{
					uParam0->f_19 = 0;
					uParam0->f_8 = 0;
					return 1;
				}
			}
			break;
		case 2:
			if (NETWORK::UGC_GET_CONTENT_HAS_PLAYER_RECORD(iParam1))
			{
				if (bParam2)
				{
					if (DATAFILE::DATAFILE_SELECT_UGC_PLAYER_DATA(iParam1, 0))
					{
						uVar0 = DATAFILE::DATAFILE_GET_FILE_DICT(0);
						if (iParam3 == 0)
						{
							Global_1922915 = DATAFILE::DATADICT_GET_INT(uVar0, "quit");
							Global_1922915.f_2 = DATAFILE::DATADICT_GET_INT(uVar0, "ply");
							Global_1922915.f_8 = DATAFILE::DATADICT_GET_INT(uVar0, "fl");
							if (Global_1922915.f_2 > 0)
							{
								Global_1922915.f_5 = 1;
							}
							DATAFILE::DATAFILE_DELETE(0);
						}
						else if (iParam3 == 4)
						{
							Global_1922940.f_5 = DATAFILE::DATADICT_GET_BOOL(uVar0, "won");
							Global_1922940.f_4 = DATAFILE::DATADICT_GET_INT(uVar0, "ply");
							Global_1922940.f_1 = DATAFILE::DATADICT_GET_INT(uVar0, "quit");
							Global_1922940.f_2 = DATAFILE::DATADICT_GET_INT(uVar0, "fl");
						}
						uParam0->f_19 = 0;
						return 1;
					}
					else
					{
						uParam0->f_8++;
						if (uParam0->f_8 > 100)
						{
							uParam0->f_19 = 0;
							uParam0->f_8 = 0;
							return 1;
						}
					}
				}
				else
				{
					uParam0->f_17 = 1;
				}
			}
			else
			{
				uParam0->f_19 = 0;
				return 1;
			}
			break;
	}
	return 0;
}

void func_768()//Position - 0xB5C3D
{
	bool bVar0;
	Global_4718592.f_170137 = 10;
	Global_4718592.f_170137.f_2808 = 0;
	bVar0 = true;
	while (bVar0 <= 20)
	{
		__LIB_20__.func_993(bVar0);
		Global_4718592.f_170137.f_2418[bVar0] = 0;
		bVar0++;
	}
	bVar0 = false;
	while (bVar0 <= 1)
	{
		Global_4718592.f_170137.f_2717[bVar0 /*3*/] = { 0f, 0f, 0f };
		bVar0++;
	}
	Global_4718592.f_170137.f_2724 = 100f;
	Global_4718592.f_170137.f_2727 = 0;
	Global_4718592.f_170137.f_2725 = 0f;
	Global_4718592.f_170137.f_2726 = 0f;
	Global_4718592.f_170137.f_2728 = 0;
	Global_4718592.f_170137.f_2795 = 360;
	Global_4718592.f_170137.f_2796 = 1200;
	Global_4718592.f_170137.f_2797 = 0;
	Global_4718592.f_170137.f_2798 = 0;
	Global_4718592.f_170137.f_2799 = 0;
	Global_4718592.f_170137.f_2802 = 0;
	Global_4718592.f_170137.f_2803 = 0;
	Global_4718592.f_170137.f_2804 = 0;
	Global_4718592.f_170137.f_2805 = 0;
	Global_4718592.f_170137.f_2806 = 0;
	Global_4718592.f_170137.f_2807 = 0;
	Global_4718592.f_170137.f_193[0 /*4*/][0] = __LIB_11__.func_559(7, 0, 0);
	Global_4718592.f_170137.f_1086[0 /*5*/][0] = __LIB_11__.func_559(5, 0, 0);
	Global_4718592.f_170137.f_2462[0 /*4*/][0] = __LIB_11__.func_559(15, 0, 0);
	Global_4718592.f_170137.f_873[0 /*4*/][0] = __LIB_11__.func_559(27, 0, 0);
}

void func_769(var uParam0)//Position - 0xB782E
{
	int iVar0;
	int iVar1;
	uParam0->f_56 = 0;
	uParam0->f_73 = 0;
	*uParam0 = { 0f, 0f, 0f };
	uParam0->f_3 = 0f;
	uParam0->f_4 = 0.75f;
	uParam0->f_27 = 0;
	uParam0->f_28 = 0;
	uParam0->f_29 = 0;
	uParam0->f_45 = 0;
	uParam0->f_49 = 0;
	uParam0->f_51 = 0;
	uParam0->f_52 = -1;
	uParam0->f_53 = -1;
	uParam0->f_50 = 100;
	uParam0->f_54 = 0f;
	uParam0->f_587 = -1;
	uParam0->f_586 = -1;
	uParam0->f_588 = 0;
	uParam0->f_589 = 0;
	uParam0->f_590 = 20;
	uParam0->f_598 = -1;
	uParam0->f_84 = -1;
	uParam0->f_71 = -1;
	uParam0->f_47 = 0;
	uParam0->f_48 = -1;
	uParam0->f_72 = 0;
	uParam0->f_530 = 0;
	uParam0->f_531 = 0;
	uParam0->f_532 = 0;
	uParam0->f_533 = 0;
	uParam0->f_534 = 0;
	uParam0->f_535 = 0;
	uParam0->f_536 = 0;
	uParam0->f_537 = 0;
	uParam0->f_538 = 0;
	uParam0->f_539 = 0;
	uParam0->f_540 = 0;
	uParam0->f_541 = 0;
	uParam0->f_542 = 0;
	uParam0->f_543 = 0;
	uParam0->f_544 = 0;
	uParam0->f_545 = 0;
	uParam0->f_546 = 0;
	uParam0->f_547 = 0;
	uParam0->f_548 = 0;
	uParam0->f_549 = 0;
	uParam0->f_550 = 0;
	uParam0->f_551 = 0;
	uParam0->f_603 = 0;
	__LIB_11__.func_583(&(uParam0->f_936));
	__LIB_11__.func_565(&(uParam0->f_941));
	uParam0->f_553 = -1;
	uParam0->f_554 = -1;
	uParam0->f_555 = 40f;
	uParam0->f_556 = 0;
	uParam0->f_782 = 32f;
	uParam0->f_557 = 0;
	uParam0->f_558 = -1;
	uParam0->f_46 = 0;
	uParam0->f_19 = 0f;
	uParam0->f_5 = 50f;
	uParam0->f_6 = 120f;
	uParam0->f_7 = 30f;
	uParam0->f_701 = -101;
	uParam0->f_702 = -1;
	uParam0->f_712 = 0;
	uParam0->f_925 = -1;
	uParam0->f_68 = -1;
	uParam0->f_66 = -1;
	uParam0->f_67 = -1;
	uParam0->f_713 = -1;
	uParam0->f_714 = -1f;
	uParam0->f_715 = -1;
	uParam0->f_716 = -1;
	uParam0->f_779 = -1;
	uParam0->f_717 = 0;
	uParam0->f_718 = -1;
	uParam0->f_719 = -1;
	uParam0->f_720 = -1;
	uParam0->f_721 = -1;
	uParam0->f_722 = -1;
	uParam0->f_723 = -1;
	uParam0->f_8 = 0f;
	uParam0->f_9 = 0;
	uParam0->f_20 = 0;
	uParam0->f_26 = 1;
	__LIB_11__.func_616(&(uParam0->f_21), -1);
	uParam0->f_10 = -1;
	uParam0->f_11 = { 0f, 0f, 0f };
	uParam0->f_14 = 0f;
	uParam0->f_15 = { 0f, 0f, 0f };
	uParam0->f_18 = 0f;
	uParam0->f_514 = 0;
	uParam0->f_136 = 0;
	uParam0->f_497 = 0;
	uParam0->f_498 = 0;
	uParam0->f_499 = 0;
	uParam0->f_514 = 0;
	uParam0->f_524 = 0;
	uParam0->f_847 = 0;
	uParam0->f_552 = 0f;
	uParam0->f_724 = -1;
	uParam0->f_525 = { 0f, 0f, 0f };
	uParam0->f_515 = 0;
	uParam0->f_523 = -1;
	uParam0->f_709 = -1;
	uParam0->f_85 = -1;
	uParam0->f_86 = -1;
	uParam0->f_135 = 0;
	uParam0->f_87 = 0;
	__LIB_11__.func_584(&(uParam0->f_856));
	uParam0->f_570 = 0;
	uParam0->f_76 = 0;
	uParam0->f_573 = 250;
	uParam0->f_576 = 0;
	uParam0->f_577 = -1;
	uParam0->f_653 = -1;
	uParam0->f_578 = 0;
	uParam0->f_654 = 4;
	uParam0->f_585 = -1;
	uParam0->f_619 = 0;
	uParam0->f_620 = 0;
	uParam0->f_621 = 0;
	uParam0->f_622 = 0;
	uParam0->f_623 = 0;
	uParam0->f_705 = 0;
	uParam0->f_706 = 0;
	uParam0->f_137 = 0;
	uParam0->f_500 = 0;
	uParam0->f_501 = 0;
	uParam0->f_502 = 0;
	uParam0->f_710 = -1;
	uParam0->f_711 = -1;
	uParam0->f_645 = -1;
	uParam0->f_646 = -1;
	uParam0->f_647 = -1;
	uParam0->f_695 = -1;
	uParam0->f_696 = 10;
	uParam0->f_697 = -1;
	uParam0->f_698 = -1;
	uParam0->f_699 = 0;
	uParam0->f_707 = 0;
	uParam0->f_708 = 0;
	uParam0->f_138 = -1;
	uParam0->f_503 = -1;
	uParam0->f_504 = -1;
	uParam0->f_505 = -1;
	uParam0->f_139 = -1;
	uParam0->f_506 = -1;
	uParam0->f_507 = -1;
	uParam0->f_508 = -1;
	uParam0->f_480 = 0;
	uParam0->f_481 = -1;
	uParam0->f_482 = -1;
	uParam0->f_483 = 0;
	uParam0->f_484 = -1;
	uParam0->f_485 = -1;
	uParam0->f_599 = -1;
	uParam0->f_600 = -1;
	uParam0->f_604 = -1;
	uParam0->f_605 = -1;
	uParam0->f_601 = -1;
	uParam0->f_650 = -1;
	uParam0->f_649 = -1;
	uParam0->f_651 = -1;
	uParam0->f_652 = -1;
	uParam0->f_486 = -1;
	uParam0->f_487 = 0;
	uParam0->f_88 = 0;
	uParam0->f_89 = 0;
	uParam0->f_111 = 0;
	uParam0->f_133 = 0;
	iVar1 = 0;
	while (iVar1 <= 19)
	{
		uParam0->f_90[iVar1] = 0;
		uParam0->f_112[iVar1] = 0;
		iVar1++;
	}
	uParam0->f_700 = 1;
	uParam0->f_569 = -1;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		uParam0->f_30[iVar0] = 0;
		uParam0->f_35[iVar0] = 2;
		uParam0->f_40[iVar0] = 99999;
		uParam0->f_559[iVar0] = -1;
		uParam0->f_564[iVar0] = -1;
		uParam0->f_624[iVar0] = 0;
		uParam0->f_629[iVar0] = 0;
		uParam0->f_656[iVar0] = -2;
		uParam0->f_509[iVar0] = 0;
		uParam0->f_606[iVar0] = 0;
		iVar0++;
	}
	__LIB_20__.func_994(&(uParam0->f_140));
	iVar0 = 0;
	while (iVar0 < 4)
	{
		uParam0->f_669[iVar0 /*3*/] = { 0f, 0f, 0f };
		uParam0->f_682[iVar0] = 0f;
		iVar0++;
	}
	uParam0->f_528 = -1;
	uParam0->f_529 = -1;
	uParam0->f_655 = -1;
	uParam0->f_661 = -1;
	uParam0->f_662 = -1;
	uParam0->f_663 = -1;
	uParam0->f_667 = -1;
	uParam0->f_664 = -1;
	uParam0->f_665 = -1;
	uParam0->f_666 = -1;
	uParam0->f_668 = -1;
	uParam0->f_694 = -1;
	uParam0->f_692 = 0;
	uParam0->f_693 = 0;
	uParam0->f_780 = 0;
	uParam0->f_781 = 0;
	StringCopy(&(uParam0->f_783), "", 64);
	StringCopy(&(uParam0->f_799), "", 64);
	StringCopy(&(uParam0->f_815), "", 64);
	StringCopy(&(uParam0->f_831), "", 64);
	__LIB_11__.func_609(&(uParam0->f_897));
	__LIB_11__.func_564(&(uParam0->f_916));
	uParam0->f_848 = 0;
	uParam0->f_849 = -1;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		uParam0->f_893[iVar0] = 0;
		iVar0++;
	}
	__LIB_11__.func_598(&(uParam0->f_725));
	uParam0->f_777 = -1;
	uParam0->f_778 = 0;
	__LIB_11__.func_576(&(uParam0->f_850));
	uParam0->f_648 = 0f;
	__LIB_11__.func_616(&(uParam0->f_923), 0);
	__LIB_11__.func_575(&(uParam0->f_634));
	__LIB_11__.func_582(&(uParam0->f_642));
	__LIB_11__.func_585(&(uParam0->f_927));
	uParam0->f_926 = 0;
}

void func_770()//Position - 0xB8B0B
{
	int iVar0;
	Global_4718592.f_180134.f_2817 = 1;
	Global_4718592.f_180134.f_2818 = 0;
	Global_4718592.f_180134.f_2819 = 1;
	Global_4718592.f_180134.f_2830 = -1;
	__LIB_11__.func_616(&(Global_4718592.f_180134.f_2820), 1);
	__LIB_11__.func_616(&(Global_4718592.f_180134.f_2825), 0);
	iVar0 = 0;
	while (iVar0 <= 10)
	{
		__LIB_20__.func_995(&(Global_4718592.f_180134[iVar0 /*256*/]));
		iVar0++;
	}
	__LIB_11__.func_572();
}

void func_771()//Position - 0xB8F43
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 60)
	{
		__LIB_20__.func_996(&(Global_4980736.f_20330[iVar0 /*234*/]));
		iVar0++;
	}
	iVar1 = 0;
	while (iVar1 < 2)
	{
		Global_4980736.f_34605[iVar1 /*2*/].f_1 = -1;
		Global_4980736.f_34605[iVar1 /*2*/] = 0;
		iVar1++;
	}
	__LIB_20__.func_996(&(Global_4980736.f_34371));
	Global_4980736.f_20329 = 0;
}

void func_772(char* sParam0)//Position - 0xBA186
{
	int iVar0;
	StringCopy(sParam0, "", 64);
	sParam0->f_16 = 0;
	sParam0->f_17 = 0;
	sParam0->f_18 = 0;
	sParam0->f_19 = 0;
	sParam0->f_20 = { 0f, 0f, 0f };
	sParam0->f_23 = { 0f, 0f, 0f };
	sParam0->f_81 = { 0f, 0f, 0f };
	sParam0->f_87 = 0f;
	sParam0->f_84 = { 0f, 0f, 0f };
	sParam0->f_88 = 0;
	sParam0->f_89 = 0;
	sParam0->f_90 = 5000;
	sParam0->f_91 = 6f;
	sParam0->f_92 = 0;
	sParam0->f_52 = 0;
	sParam0->f_94 = 1f;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		sParam0->f_26[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_39[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_53[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_66[iVar0] = 0f;
		sParam0->f_71[iVar0] = 0f;
		sParam0->f_76[iVar0] = 0f;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		__LIB_11__.func_604(&(sParam0->f_490[iVar0 /*4*/]));
		__LIB_11__.func_603(&(sParam0->f_95[iVar0 /*13*/]));
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 0)
	{
		__LIB_21__.func_0(&(sParam0->f_507[iVar0 /*5*/]));
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 29)
	{
		__LIB_11__.func_602(&(sParam0->f_148[iVar0 /*10*/]));
		iVar0++;
	}
	sParam0->f_93 = 0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		StringCopy(&(sParam0->f_449[iVar0 /*8*/]), "", 32);
		iVar0++;
	}
}

void func_773(char* sParam0)//Position - 0xBA343
{
	int iVar0;
	StringCopy(sParam0, "", 16);
	sParam0->f_4 = 0;
	sParam0->f_5 = 0;
	sParam0->f_6 = 0;
	sParam0->f_7 = 0;
	sParam0->f_1572 = 0;
	sParam0->f_34 = 0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		sParam0->f_8[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_21[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_35[iVar0 /*3*/] = { 0f, 0f, 0f };
		sParam0->f_48[iVar0] = 0f;
		sParam0->f_53[iVar0] = 0f;
		sParam0->f_58[iVar0] = 0f;
		sParam0->f_63[iVar0] = -1;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		__LIB_11__.func_608(&(sParam0->f_1555[iVar0 /*2*/]));
		__LIB_11__.func_604(&(sParam0->f_1191[iVar0 /*4*/]));
		__LIB_11__.func_604(&(sParam0->f_1208[iVar0 /*4*/]));
		iVar0++;
	}
	__LIB_11__.func_607(&(sParam0->f_1564));
	__LIB_21__.func_1(sParam0);
	sParam0->f_111 = 0;
	sParam0->f_110 = 0;
	sParam0->f_112 = 0;
	sParam0->f_887 = 0;
	sParam0->f_888 = 5000;
	sParam0->f_889 = 6f;
	sParam0->f_588 = 0;
	sParam0->f_589 = 0;
	sParam0->f_590 = 0;
	sParam0->f_591 = { 0f, 0f, 0f };
	sParam0->f_880 = { 0f, 0f, 0f };
	sParam0->f_883 = 0f;
	sParam0->f_884 = { 0f, 0f, 0f };
	sParam0->f_1551 = -1;
	sParam0->f_1552 = 1f;
	sParam0->f_1553 = 0f;
	sParam0->f_1554 = 0f;
	sParam0->f_1570 = 0;
	sParam0->f_1571 = 3000;
	iVar0 = 0;
	while (iVar0 <= 19)
	{
		__LIB_11__.func_605(sParam0, iVar0);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 29)
	{
		__LIB_11__.func_602(&(sParam0->f_890[iVar0 /*10*/]));
		iVar0++;
	}
	sParam0->f_1625 = 0;
}

void func_774()//Position - 0xBADF1
{
	__LIB_21__.func_2();
}

void func_775(int iParam0)//Position - 0xBDACE
{
	struct<4> Var0;
	struct<2> Var1;
	struct<3> Var2;
	var* uVar3[20];
	var uVar4[4];
	struct<21> Var5;
	var uVar6[4];
	var uVar7[4];
	var uVar8[4];
	var uVar9[4];
	var uVar10[4];
	var uVar11[4];
	var uVar12[4];
	var uVar13[4];
	var uVar14[4];
	bool bVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	struct<2> Var19;
	struct<2> Var20;
	var* uVar21;
	var* uVar22;
	var* uVar23;
	int iVar24;
	var* uVar25;
	int iVar26;
	int iVar27;
	var* uVar28;
	var* uVar29;
	var* uVar30;
	var* uVar31;
	var* uVar32;
	int iVar33;
	int iVar34;
	int iVar35;
	int iVar36;
	Var0 = 4;
	Var0.f_1 = 3;
	Var0.f_1.f_4 = 3;
	Var0.f_1.f_4.f_4 = 3;
	Var0.f_1.f_4.f_4.f_4 = 3;
	Var1 = 4;
	Var1.f_1 = 1;
	Var1.f_1.f_2 = 1;
	Var1.f_1.f_2.f_2 = 1;
	Var1.f_1.f_2.f_2.f_2 = 1;
	Var2 = 4;
	Var2.f_1 = 2;
	Var2.f_1.f_3 = 2;
	Var2.f_1.f_3.f_3 = 2;
	Var2.f_1.f_3.f_3.f_3 = 2;
	Var5 = 4;
	Var5.f_1 = 20;
	Var5.f_1.f_21 = 20;
	Var5.f_1.f_21.f_21 = 20;
	Var5.f_1.f_21.f_21.f_21 = 20;
	iVar16 = 0;
	iVar17 = 0;
	iVar18 = 0;
	StringCopy(&Var19, "", 16);
	StringCopy(&Var20, "", 16);
	iVar16 = 0;
	while (iVar16 <= 3)
	{
		StringCopy(&Var19, "no", 16);
		StringIntConCat(&Var19, iVar16, 16);
		Global_4980736.f_176055[iVar16] = DATAFILE::DATADICT_GET_INT(*iParam0, &Var19);
		StringCopy(&Var19, "loc", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar21 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "head", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar22 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "bit", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar23 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "veh", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar24 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "tars", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar25 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "vfrs", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar26 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "vfre", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar27 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "ty", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar28 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "as", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar29 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "qu", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar30 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "gg", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar31 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "ar", 16);
		StringIntConCat(&Var19, iVar16, 16);
		uVar32 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "ttm", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar33 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "tspr", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar34 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		if (__LIB_3__.func_695())
		{
			StringCopy(&Var19, "tsbt", 16);
			StringIntConCat(&Var19, iVar16, 16);
			uVar3[0] = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		}
		StringCopy(&Var19, "lcet", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar35 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		StringCopy(&Var19, "lcid", 16);
		StringIntConCat(&Var19, iVar16, 16);
		iVar36 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var19);
		bVar15 = false;
		while (bVar15 <= (Global_4980736.f_176055[iVar16] - 1))
		{
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar21, bVar15) };
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_3 = DATAFILE::DATAARRAY_GET_FLOAT(uVar22, bVar15);
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_5 = DATAFILE::DATAARRAY_GET_INT(uVar23, bVar15);
			if (iVar24 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar24, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_7 = DATAFILE::DATAARRAY_GET_INT(iVar24, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_7 = -1;
			}
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_10 = DATAFILE::DATAARRAY_GET_INT(uVar25, bVar15);
			if (iVar26 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar26, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_11 = DATAFILE::DATAARRAY_GET_INT(iVar26, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_11 = -1;
			}
			if (iVar27 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar27, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_12 = DATAFILE::DATAARRAY_GET_INT(iVar27, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_12 = -1;
			}
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_13 = DATAFILE::DATAARRAY_GET_INT(uVar28, bVar15);
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_14 = DATAFILE::DATAARRAY_GET_INT(uVar29, bVar15);
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_15 = DATAFILE::DATAARRAY_GET_INT(uVar30, bVar15);
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_16 = DATAFILE::DATAARRAY_GET_INT(uVar31, bVar15);
			Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_17 = DATAFILE::DATAARRAY_GET_INT(uVar32, bVar15);
			if (iVar33 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar33, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_18 = DATAFILE::DATAARRAY_GET_INT(iVar33, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_18 = -2;
			}
			if (iVar34 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar34, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_19 = DATAFILE::DATAARRAY_GET_INT(iVar34, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_19 = iVar16;
			}
			if (!__LIB_3__.func_695())
			{
				iVar18 = 0;
				iVar18 = 0;
				while (iVar18 <= 2)
				{
					iVar17 = 0;
					StringCopy(&Var19, "tsbt", 16);
					StringIntConCat(&Var19, iVar16, 16);
					StringConCat(&Var19, "f", 16);
					StringIntConCat(&Var19, iVar18, 16);
					__LIB_20__.func_914(&Var19, &iVar17, iParam0, &(Var0[iVar16 /*4*/][iVar18]), bVar15, 0, -2340845);
					Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_59[iVar18] = iVar17;
					iVar18++;
				}
			}
			else if (uVar3[0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar3[0], bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_59[0] = DATAFILE::DATAARRAY_GET_INT(uVar3[0], bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_59[0] = 0;
			}
			if (iVar35 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar35, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_20 = DATAFILE::DATAARRAY_GET_INT(iVar35, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_20 = -1;
			}
			if (iVar36 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar36, bVar15) == 2)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_21 = DATAFILE::DATAARRAY_GET_INT(iVar36, bVar15);
			}
			else
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_21 = -1;
			}
			StringCopy(&Var20, "spwmopo", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_913(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_51), iParam0, &(uVar7[iVar16]), bVar15, 0f, 0f, 0f, 0f, 0f, 0f);
			StringCopy(&Var20, "spwmohe", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_912(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_54), iParam0, &(uVar8[iVar16]), bVar15, 999f, -904994889);
			if (__LIB_0__.func_86(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_51) && Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_54 == 0f)
			{
				Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_54 = 999f;
			}
			StringCopy(&Var20, "spwmtet", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_914(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_47), iParam0, &(uVar11[iVar16]), bVar15, 0, -2340845);
			StringCopy(&Var20, "spwmtei", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_914(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_48), iParam0, &(uVar12[iVar16]), bVar15, -1, -2340845);
			StringCopy(&Var20, "spwrner", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_912(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_49), iParam0, &(uVar13[iVar16]), bVar15, 0f, -904994889);
			StringCopy(&Var20, "spwrneh", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_912(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_50), iParam0, &(uVar14[iVar16]), bVar15, 0f, -904994889);
			StringCopy(&Var20, "sppsvp", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_913(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_55), iParam0, &(uVar9[iVar16]), bVar15, 0f, 0f, 0f, 0f, 0f, 0f);
			StringCopy(&Var20, "sphsvp", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_912(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_58), iParam0, &(uVar10[iVar16]), bVar15, 0f, -904994889);
			StringCopy(&Var20, "alvtsp", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_911(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_63), 1, iParam0, &(Var1[iVar16 /*2*/]), bVar15, 0, -2340845);
			StringCopy(&Var20, "splikn", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_911(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_44), 2, iParam0, &(Var2[iVar16 /*3*/]), bVar15, 0, -2340845);
			StringCopy(&Var20, "tdmspwng", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_914(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_22), iParam0, &(uVar4[iVar16]), bVar15, 0, -2340845);
			StringCopy(&Var20, "spwvset", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_914(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_8), iParam0, &(uVar6[iVar16]), bVar15, -3, -3);
			StringCopy(&Var20, "tdmsspwng", 16);
			StringIntConCat(&Var20, iVar16, 16);
			__LIB_20__.func_911(&Var20, &(Global_4980736.f_179962[iVar16 /*3901*/][bVar15 /*65*/].f_23), 20, iParam0, &(Var5[iVar16 /*21*/]), bVar15, 0, -2340845);
			bVar15++;
		}
		iVar16++;
	}
}

void func_776(int iParam0, int iParam1, var uParam2, bool bParam3, int iParam4)//Position - 0xBEEDD
{
	int iVar0;
	char* sVar1;
	if (__LIB_3__.func_695())
	{
		return;
	}
	__LIB_20__.func_914("blpBS", uParam2, iParam1, iParam0, bParam3, __LIB_0__.func_138(iParam4 == 5, 1, 0), -2340845);
	__LIB_20__.func_914("blpS", &(uParam2->f_1), iParam1, &(iParam0->f_1), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpC", &(uParam2->f_2), iParam1, &(iParam0->f_2), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpCO", &(uParam2->f_3), iParam1, &(iParam0->f_3), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpCA", &(uParam2->f_4), iParam1, &(iParam0->f_4), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpA", &(uParam2->f_5), iParam1, &(iParam0->f_5), bParam3, 255, -2340845);
	__LIB_20__.func_912("blpSc", &(uParam2->f_6), iParam1, &(iParam0->f_6), bParam3, __LIB_12__.func_334(iParam4), -904994889);
	__LIB_20__.func_914("blpSp", &(uParam2->f_7), iParam1, &(iParam0->f_7), bParam3, 0, -2340845);
	__LIB_20__.func_912("blpR", &(uParam2->f_8), iParam1, &(iParam0->f_8), bParam3, 0f, -904994889);
	__LIB_20__.func_912("blpH", &(uParam2->f_9), iParam1, &(iParam0->f_9), bParam3, 0f, -904994889);
	__LIB_20__.func_912("blpSHR", &(uParam2->f_10), iParam1, &(iParam0->f_10), bParam3, 0f, -904994889);
	__LIB_20__.func_914("blpP", &(uParam2->f_11), iParam1, &(iParam0->f_11), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpNm", &(uParam2->f_12), iParam1, &(iParam0->f_12), bParam3, -1, -2340845);
	__LIB_20__.func_914("blpPrq", &(uParam2->f_30), iParam1, &(iParam0->f_13), bParam3, -1, -2340845);
	__LIB_20__.func_914("blpPrqR", &(uParam2->f_31), iParam1, &(iParam0->f_14), bParam3, -1, -2340845);
	__LIB_20__.func_914("blpShZ", &(uParam2->f_32), iParam1, &(iParam0->f_15), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpHiZ", &(uParam2->f_33), iParam1, &(iParam0->f_16), bParam3, 0, -2340845);
	__LIB_20__.func_914("blpARmn", &(uParam2->f_34), iParam1, &(iParam0->f_17), bParam3, 75, -2340845);
	__LIB_20__.func_912("blpARdmn", &(uParam2->f_34.f_1), iParam1, &(iParam0->f_18), bParam3, 100f, -904994889);
	__LIB_20__.func_912("blpARdmx", &(uParam2->f_34.f_2), iParam1, &(iParam0->f_19), bParam3, 1000f, -904994889);
	StringCopy(&sVar1, "", 8);
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		StringCopy(&sVar1, "bBS", 8);
		StringIntConCat(&sVar1, iVar0, 8);
		__LIB_20__.func_914(&sVar1, &(uParam2->f_13[iVar0 /*4*/]), iParam1, &(iParam0->f_20[iVar0]), bParam3, 0, -2340845);
		StringCopy(&sVar1, "bOSRT", 8);
		StringIntConCat(&sVar1, iVar0, 8);
		__LIB_20__.func_914(&sVar1, &(uParam2->f_13[iVar0 /*4*/].f_1), iParam1, &(iParam0->f_25[iVar0]), bParam3, -1, -2340845);
		StringCopy(&sVar1, "bORE", 8);
		StringIntConCat(&sVar1, iVar0, 8);
		__LIB_20__.func_914(&sVar1, &(uParam2->f_13[iVar0 /*4*/].f_2), iParam1, &(iParam0->f_30[iVar0]), bParam3, -1, -2340845);
		StringCopy(&sVar1, "bOBS", 8);
		StringIntConCat(&sVar1, iVar0, 8);
		__LIB_20__.func_914(&sVar1, &(uParam2->f_13[iVar0 /*4*/].f_3), iParam1, &(iParam0->f_35[iVar0]), bParam3, 0, -2340845);
		iVar0++;
	}
	__LIB_12__.func_333(iParam4, bParam3);
	__LIB_12__.func_332(iParam4, bParam3);
	__LIB_20__.func_915(uParam2);
}

void func_777(var uParam0, int iParam1, var uParam2, bool bParam3, int iParam4)//Position - 0xBF506
{
	struct<2> Var0;
	struct<2> Var1;
	struct<2> Var2;
	struct<2> Var3;
	int iVar4;
	int iVar5;
	iVar5 = 0;
	while (iVar5 <= 11)
	{
		StringCopy(&Var0, "wrppo", 16);
		StringCopy(&Var1, "wrpfo", 16);
		StringIntConCat(&Var0, iVar5, 16);
		StringIntConCat(&Var1, iVar5, 16);
		iVar4 = DATAFILE::DATADICT_GET_ARRAY(*iParam1, &Var0);
		if (iVar4 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar4, bParam3) == 5)
		{
			__LIB_20__.func_913(&Var0, uParam2[iVar5 /*3*/], iParam1, uParam0[iVar5], bParam3, 0f, 0f, 0f, 0f, 0f, 0f);
			__LIB_20__.func_912(&Var1, &(uParam2->f_37[iVar5]), iParam1, &(uParam0->f_13[iVar5]), bParam3, 0f, 0f);
		}
		else
		{
			switch (iParam4)
			{
				case 1:
					StringCopy(&Var0, "pdwr1", 16);
					StringCopy(&Var1, "pdwr2", 16);
					break;
				case 2:
					StringCopy(&Var0, "vwrvv", 16);
					StringCopy(&Var1, "fwrvv", 16);
					break;
				case 3:
					StringCopy(&Var0, "owrvv", 16);
					StringCopy(&Var1, "forvv", 16);
					break;
				case 4:
					StringCopy(&Var0, "lwrvv", 16);
					StringCopy(&Var1, "flrvv", 16);
					break;
				case 5:
					StringCopy(&Var0, "int_vwrp_", 16);
					StringCopy(&Var1, "int_vhed_", 16);
					break;
				case 6:
					StringCopy(&Var0, "ctscv", 16);
					StringCopy(&Var1, "ctscf", 16);
					StringIntConCat(&Var0, iVar5, 16);
					StringIntConCat(&Var1, iVar5, 16);
					__LIB_20__.func_917(&Var0, uParam2[iVar5 /*3*/], iParam1, 0f, 0f, 0f, 0f, 0f, 0f);
					__LIB_20__.func_916(&Var1, &(uParam2->f_37[iVar5]), iParam1, 0f, -904994889);
					break;
			}
			if (iParam4 != 6)
			{
				StringIntConCat(&Var0, iVar5, 16);
				StringIntConCat(&Var1, iVar5, 16);
				__LIB_20__.func_913(&Var0, uParam2[iVar5 /*3*/], iParam1, uParam0[iVar5], bParam3, 0f, 0f, 0f, 0f, 0f, 0f);
				__LIB_20__.func_912(&Var1, &(uParam2->f_37[iVar5]), iParam1, &(uParam0->f_13[iVar5]), bParam3, 0f, 0f);
			}
		}
		iVar5++;
	}
	StringCopy(&Var2, "wrpsb", 16);
	StringCopy(&Var3, "wrpcp", 16);
	__LIB_20__.func_914(&Var2, &(uParam2->f_50), iParam1, &(uParam0->f_26), bParam3, 0, -2340845);
	__LIB_20__.func_914(&Var3, &(uParam2->f_51), iParam1, &(uParam0->f_27), bParam3, 0, -2340845);
	switch (iParam4)
	{
		case 1:
			if (BitTest(Global_4980736.f_94390[bParam3 /*1004*/].f_544, 2))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			if (BitTest(Global_4980736.f_94390[bParam3 /*1004*/].f_543, 26))
			{
				MISC::SET_BIT(&(uParam2->f_50), 0);
			}
			if (BitTest(Global_4980736.f_94390[bParam3 /*1004*/].f_543, 27))
			{
				MISC::SET_BIT(&(uParam2->f_50), 1);
			}
			break;
		case 2:
			if (BitTest(Global_4980736.f_78578[bParam3 /*450*/].f_114, 31))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			if (BitTest(Global_4980736.f_78578[bParam3 /*450*/].f_114, 27))
			{
				MISC::SET_BIT(&(uParam2->f_50), 0);
			}
			if (BitTest(Global_4980736.f_78578[bParam3 /*450*/].f_114, 28))
			{
				MISC::SET_BIT(&(uParam2->f_50), 1);
			}
			break;
		case 3:
			if (BitTest(Global_4980736.f_5742[bParam3 /*442*/].f_123, 6))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			if (BitTest(Global_4980736.f_5742[bParam3 /*442*/].f_123, 15))
			{
				MISC::SET_BIT(&(uParam2->f_50), 0);
			}
			if (BitTest(Global_4980736.f_5742[bParam3 /*442*/].f_123, 16))
			{
				MISC::SET_BIT(&(uParam2->f_50), 1);
			}
			break;
		case 4:
			if (BitTest(Global_4980736.f_5[bParam3 /*273*/].f_90, 16))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			if (BitTest(Global_4980736.f_5[bParam3 /*273*/].f_90, 15))
			{
				MISC::SET_BIT(&(uParam2->f_50), 0);
			}
			if (BitTest(Global_4980736.f_5[bParam3 /*273*/].f_90, 17))
			{
				MISC::SET_BIT(&(uParam2->f_50), 1);
			}
			if (BitTest(Global_4980736.f_5[bParam3 /*273*/].f_90, 11))
			{
				MISC::SET_BIT(&(uParam2->f_50), 3);
			}
			break;
		case 5:
			if (BitTest(Global_4980736.f_20330[bParam3 /*234*/].f_46, 6))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			if (BitTest(Global_4980736.f_20330[bParam3 /*234*/].f_46, 7))
			{
				MISC::SET_BIT(&(uParam2->f_50), 0);
			}
			if (BitTest(Global_4980736.f_20330[bParam3 /*234*/].f_46, 8))
			{
				MISC::SET_BIT(&(uParam2->f_50), 1);
			}
			break;
		case 6:
			if (BitTest(Global_4718592.f_38, 18))
			{
				MISC::SET_BIT(&(uParam2->f_50), 2);
			}
			break;
	}
}

void func_778(int iParam0)//Position - 0xDBBBA
{
	struct<2> Var0;
	int iVar1;
	int iVar2;
	if (!BitTest(Global_4718592.f_38, 3))
	{
		return;
	}
	iVar1 = DATAFILE::DATADICT_GET_DICT(*iParam0, "PwrUp");
	__LIB_20__.func_923("pwrBS", &(Global_4718592.f_176701), &iVar1, 0, -2340845);
	__LIB_20__.func_923("pwrMH", &(Global_4718592.f_176701.f_1), &iVar1, 1, -2340845);
	iVar2 = 0;
	while (iVar2 <= 11)
	{
		StringCopy(&Var0, "pwrRC_", 16);
		StringIntConCat(&Var0, iVar2, 16);
		__LIB_20__.func_923(&Var0, &(Global_4718592.f_176701.f_2[iVar2]), &iVar1, 0, -2340845);
		iVar2++;
	}
}

void func_779(int iParam0)//Position - 0xE1D54
{
	int iVar0;
	bool bVar1;
	iVar0 = DATAFILE::DATADICT_GET_DICT(*iParam0, "invty");
	bVar1 = false;
	while (bVar1 <= 5)
	{
		__LIB_26__.func_721(&iVar0, &(Global_4718592.f_175437[bVar1 /*189*/]), bVar1);
		bVar1++;
	}
}

int func_780(int iParam0)//Position - 0x56703
{
	int iVar0;
	int iVar1;
	if (iParam0 == 0)
	{
		return 145;
	}
	iVar0 = 0;
	iVar1 = 145;
	iVar0 = 0;
	while (iVar0 < 41)
	{
		iVar1 = __LIB_20__.func_941(iVar0);
		if (iParam0 == __LIB_11__.func_543(iVar1))
		{
			return iVar1;
		}
		iVar0++;
	}
	return 145;
}

int func_781(var uParam0, var uParam1)//Position - 0x1F12EB
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (uParam1->f_67 - 1))
	{
		if (DATAFILE::DATAFILE_SELECT_UGC_DATA(uParam0->f_7, 0))
		{
			if (!__LIB_13__.func_244(uParam0->f_24, uParam0->f_25, NETWORK::UGC_GET_CONTENT_USER_ID(0), NETWORK::UGC_GET_CONTENT_CATEGORY(0)))
			{
				uParam0->f_27 = 1;
				return 1;
			}
			__LIB_21__.func_7(uParam0, uParam1);
			uParam0->f_9++;
		}
		else
		{
			uParam0->f_8++;
		}
		if (uParam0->f_8 > 200)
		{
			__LIB_1__.func_713();
			uParam0->f_7++;
			uParam0->f_8 = 0;
		}
		if (uParam0->f_9 >= 31)
		{
			return 1;
		}
		if (uParam0->f_7 >= uParam1->f_67)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_782(var uParam0, int iParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x2027DB
{
	struct<2> Var0;
	int iVar1;
	int iVar2;
	if (!BitTest((*uParam0)[0], 0))
	{
	}
	if (!BitTest((*uParam0)[0], 2))
	{
	}
	__LIB_20__.func_914("avrad", &(uParam0->f_3), iParam2, iParam1, bParam3, 0, -2340845);
	iVar1 = 0;
	while (iVar1 <= 0)
	{
		StringCopy(&Var0, "iebs", 16);
		if (iVar1 > 0)
		{
			StringConCat(&Var0, "_", 16);
			StringIntConCat(&Var0, iVar1, 16);
		}
		__LIB_20__.func_914(&Var0, uParam0[iVar1], iParam2, &(iParam1->f_1[iVar1]), bParam3, 0, -2340845);
		iVar1++;
	}
	if (iParam4 && !BitTest((*uParam0)[0], 2))
	{
		__LIB_20__.func_918(iVar1);
	}
	__LIB_20__.func_912("paccc", &(uParam0->f_4), iParam2, &(iParam1->f_4), bParam3, 0f, -904994889);
	__LIB_20__.func_914("lgtsi", &(uParam0->f_5), iParam2, &(iParam1->f_5), bParam3, -1, -2340845);
	__LIB_20__.func_914("paot", &(uParam0->f_6), iParam2, &(iParam1->f_6), bParam3, -1, -2340845);
	iVar1 = 0;
	while (iVar1 <= 11)
	{
		if (iParam4 && !BitTest((*uParam0)[0], 0))
		{
			__LIB_21__.func_17(bParam3, iVar1);
		}
		else
		{
			iVar2 = 0;
			while (iVar2 <= 0)
			{
				StringCopy(&Var0, "bs", 16);
				StringIntConCat(&Var0, iVar1, 16);
				StringConCat(&Var0, "t", 16);
				StringIntConCat(&Var0, iVar2, 16);
				__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/][iVar2]), iParam2, &(iParam1->f_7[iVar1 /*2*/][iVar2]), bParam3, 0, -2340845);
				iVar2++;
			}
		}
		StringCopy(&Var0, "actv", 16);
		if (iVar1 > 0)
		{
			StringIntConCat(&Var0, iVar1 + 1, 16);
		}
		__LIB_20__.func_913(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_2), iParam2, &(iParam1->f_32[iVar1]), bParam3, 0f, 0f, 0f, 0f, 0f, 0f);
		StringCopy(&Var0, "achf", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_912(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_5), iParam2, &(iParam1->f_45[iVar1]), bParam3, 0f, -904994889);
		StringCopy(&Var0, "awt", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_6), iParam2, &(iParam1->f_58[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "awr", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_7), iParam2, &(iParam1->f_71[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "awl", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_913(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_8), iParam2, &(iParam1->f_84[iVar1]), bParam3, 0f, 0f, 0f, 0f, 0f, 0f);
		StringCopy(&Var0, "awlr", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_11), iParam2, &(iParam1->f_97[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "aht", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_912(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_12), iParam2, &(iParam1->f_110[iVar1]), bParam3, 0f, -904994889);
		StringCopy(&Var0, "agrd", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_912(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_13), iParam2, &(iParam1->f_123[iVar1]), bParam3, 0f, -904994889);
		StringCopy(&Var0, "ags", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_14), iParam2, &(iParam1->f_136[iVar1]), bParam3, -1, -2340845);
		StringCopy(&Var0, "agvr", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_912(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_15), iParam2, &(iParam1->f_149[iVar1]), bParam3, 0f, -904994889);
		StringCopy(&Var0, "agvg", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_16), iParam2, &(iParam1->f_162[iVar1]), bParam3, -1, -2340845);
		StringCopy(&Var0, "pgtlp", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_18), iParam2, &(iParam1->f_188[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "pgtco", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_17), iParam2, &(iParam1->f_175[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "gtcst", 16);
		StringIntConCat(&Var0, iVar1, 16);
		uParam0->f_7[iVar1 /*27*/].f_19 = __LIB_21__.func_16(&Var0, iParam2, &(iParam1->f_201[iVar1]), bParam3, 0, 0);
		StringCopy(&Var0, "gtcss", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_25), iParam2, &(iParam1->f_275[iVar1]), bParam3, 0, -2340845);
		StringCopy(&Var0, "gtcsd", 16);
		StringIntConCat(&Var0, iVar1, 16);
		__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_26), iParam2, &(iParam1->f_288[iVar1]), bParam3, -1, -2340845);
		iVar2 = 0;
		while (iVar2 <= 3)
		{
			StringCopy(&Var0, "cs", 16);
			StringIntConCat(&Var0, iVar1, 16);
			StringConCat(&Var0, "i", 16);
			StringIntConCat(&Var0, iVar2, 16);
			__LIB_20__.func_914(&Var0, &(uParam0->f_7[iVar1 /*27*/].f_20[iVar2]), iParam2, &(iParam1->f_214[iVar1 /*5*/][iVar2]), bParam3, 0, -2340845);
			iVar2++;
		}
		iVar1++;
	}
	__LIB_20__.func_914("inpgt", &(uParam0->f_2), iParam2, &(iParam1->f_3), bParam3, -1, -2340845);
}

void func_783(int iParam0)//Position - 0x209ED4
{
	int iVar0;
	int iVar1;
	var* uVar2;
	var* uVar3;
	var* uVar4;
	var* uVar5;
	iVar1 = DATAFILE::DATADICT_GET_DICT(iParam0, "ene");
	Global_4980736.f_176054 = DATAFILE::DATADICT_GET_INT(iVar1, "no");
	Global_4718592.f_110279 = DATAFILE::DATADICT_GET_INT(iVar1, "veh");
	uVar2 = DATAFILE::DATADICT_GET_ARRAY(iVar1, "loc");
	uVar3 = DATAFILE::DATADICT_GET_ARRAY(iVar1, "head");
	uVar4 = DATAFILE::DATADICT_GET_ARRAY(iVar1, "team");
	uVar5 = DATAFILE::DATADICT_GET_ARRAY(iVar1, "dmSPTR");
	if (Global_4980736.f_176054 > 60)
	{
		Global_4980736.f_176054 = 60;
	}
	iVar0 = 0;
	while (iVar0 <= (Global_4980736.f_176054 - 1))
	{
		if (iVar0 < 60)
		{
			Global_4980736.f_176061[iVar0 /*65*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar2, iVar0) };
			Global_4980736.f_176061[iVar0 /*65*/].f_3 = DATAFILE::DATAARRAY_GET_FLOAT(uVar3, iVar0);
			Global_4980736.f_176061[iVar0 /*65*/].f_4 = DATAFILE::DATAARRAY_GET_INT(uVar4, iVar0);
			Global_4980736.f_176061[iVar0 /*65*/].f_19 = DATAFILE::DATAARRAY_GET_INT(uVar5, iVar0);
		}
		iVar0++;
	}
	__LIB_26__.func_775(&iVar1);
}

void func_784(int iParam0)//Position - 0x21C448
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	char[] cVar3[8];
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	int iVar19;
	var* uVar20[5];
	var* uVar21[5];
	var uVar22[5];
	var* uVar23[5];
	var* uVar24[5];
	var uVar25[5];
	var* uVar26[5];
	var* uVar27[5];
	var* uVar28[5];
	var* uVar29[5];
	var* uVar30[5];
	var* uVar31[5];
	var uVar32[5];
	int iVar33;
	int iVar34;
	int iVar35;
	int iVar36;
	bool bVar37;
	struct<2> Var38;
	if (DATAFILE::DATADICT_GET_DICT(iParam0, "mocap") == 0)
	{
		return;
	}
	iVar4 = DATAFILE::DATADICT_GET_DICT(iParam0, "mocap");
	iVar7 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "name");
	iVar8 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits");
	iVar9 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits2");
	iVar10 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits3");
	iVar12 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "timer");
	iVar13 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "rng");
	iVar14 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccp");
	iVar15 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccr");
	iVar16 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccs");
	iVar17 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "vhspz");
	iVar18 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "vrbsm");
	bVar0 = false;
	while (bVar0 <= 4)
	{
		if (iVar7 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar7, bVar0) == 4)
		{
			StringCopy(&(Global_4718592.f_159089[bVar0 /*565*/]), DATAFILE::DATAARRAY_GET_STRING(iVar7, bVar0), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_159089[bVar0 /*565*/]), "", 64);
		}
		__LIB_20__.func_913("mocapPs", &(Global_4718592.f_159089[bVar0 /*565*/].f_20), &iVar4, &iVar5, bVar0, 0f, 0f, 0f, 0f, 0f, 0f);
		__LIB_20__.func_913("mocapRt", &(Global_4718592.f_159089[bVar0 /*565*/].f_23), &iVar4, &iVar6, bVar0, 0f, 0f, 0f, 0f, 0f, 0f);
		if (iVar6 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar6, bVar0) == 5)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_23 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar6, bVar0) };
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_23 = { 0f, 0f, 0f };
		}
		if (iVar8 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar8, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_16 = DATAFILE::DATAARRAY_GET_INT(iVar8, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_16 = 0;
		}
		if (iVar9 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar9, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_17 = DATAFILE::DATAARRAY_GET_INT(iVar9, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_17 = 0;
		}
		if (iVar10 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar10, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_18 = DATAFILE::DATAARRAY_GET_INT(iVar10, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_18 = 0;
		}
		__LIB_20__.func_914("bits4", &(Global_4718592.f_159089[bVar0 /*565*/].f_19), &iVar4, &iVar11, bVar0, 0, 0);
		if (iVar12 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar12, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_88 = DATAFILE::DATAARRAY_GET_INT(iVar12, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_88 = 0;
		}
		if (iVar13 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar13, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_89 = DATAFILE::DATAARRAY_GET_INT(iVar13, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_89 = 0;
		}
		__LIB_20__.func_914("csmpir", &(Global_4718592.f_159089[bVar0 /*565*/].f_90), &iVar4, &iVar19, bVar0, 5000, 5000);
		if (iVar14 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar14, bVar0) == 5)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_81 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar14, bVar0) };
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_81 = { 0f, 0f, 0f };
		}
		if (iVar15 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar15, bVar0) == 3)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_87 = DATAFILE::DATAARRAY_GET_FLOAT(iVar15, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_87 = 0f;
		}
		if (iVar16 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar16, bVar0) == 5)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_84 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar16, bVar0) };
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_84 = { 0f, 0f, 0f };
		}
		if (iVar17 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar17, bVar0) == 3)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_91 = DATAFILE::DATAARRAY_GET_FLOAT(iVar17, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_91 = 6f;
		}
		if (iVar18 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar18, bVar0) == 2)
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_92 = DATAFILE::DATAARRAY_GET_INT(iVar18, bVar0);
		}
		else
		{
			Global_4718592.f_159089[bVar0 /*565*/].f_92 = 0;
		}
		StringCopy(&cVar3, "pstr", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&cVar3, bVar0, 8);
		}
		uVar20[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "pend", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&cVar3, bVar0, 8);
		}
		uVar21[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "strh", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&cVar3, bVar0, 8);
		}
		uVar23[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "endh", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&cVar3, bVar0, 8);
		}
		uVar24[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "mcei", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar26[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "mcet", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar27[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "mceh", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar28[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "plrEW", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar29[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		StringCopy(&cVar3, "pedEW", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar30[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		if (uVar29[bVar0] != 0 || uVar30[bVar0] != 0)
		{
			bVar2 = false;
			while (bVar2 <= 3)
			{
				__LIB_12__.func_759(&(Global_4718592.f_159089[bVar0 /*565*/].f_490[bVar2 /*4*/]), &(uVar29[bVar0]), bVar2);
				bVar2++;
			}
			bVar2 = false;
			while (bVar2 <= 0)
			{
				__LIB_21__.func_30(&(Global_4718592.f_159089[bVar0 /*565*/].f_507[bVar2 /*5*/]), &(uVar30[bVar0]), bVar2);
				bVar2++;
			}
		}
		else
		{
			__LIB_12__.func_381(&(Global_4718592.f_159089[bVar0 /*565*/]), &iVar4, bVar0);
		}
		StringCopy(&cVar3, "plrInf", 8);
		StringIntConCat(&cVar3, bVar0, 8);
		uVar31[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &cVar3);
		bVar2 = false;
		while (bVar2 <= 3)
		{
			iVar35 = DATAFILE::DATAARRAY_GET_DICT(uVar31[bVar0], bVar2);
			__LIB_12__.func_380(iVar35, &(Global_4718592.f_159089[bVar0 /*565*/].f_95[bVar2 /*13*/]));
			bVar2++;
		}
		iVar1 = 0;
		while (iVar1 <= 3)
		{
			if (uVar20[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar20[bVar0], iVar1) == 5)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_26[iVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar20[bVar0], iVar1) };
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_26[iVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar21[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar21[bVar0], iVar1) == 5)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_39[iVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar21[bVar0], iVar1) };
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_39[iVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar23[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar23[bVar0], iVar1) == 3)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_66[iVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar23[bVar0], iVar1);
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_66[iVar1] = 0f;
			}
			if (uVar24[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar24[bVar0], iVar1) == 3)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_71[iVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar24[bVar0], iVar1);
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_71[iVar1] = 0f;
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 <= 29)
		{
			if (uVar26[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar26[bVar0], iVar1) == 2)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/].f_1 = DATAFILE::DATAARRAY_GET_INT(uVar26[bVar0], iVar1);
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/].f_1 = -1;
			}
			if (uVar27[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar27[bVar0], iVar1) == 2)
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/] = DATAFILE::DATAARRAY_GET_INT(uVar27[bVar0], iVar1);
			}
			else
			{
				Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/] = -1;
			}
			if (uVar28[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar28[bVar0], iVar1) == 4)
			{
				StringCopy(&(Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/].f_2), DATAFILE::DATAARRAY_GET_STRING(uVar28[bVar0], iVar1), 32);
			}
			else
			{
				StringCopy(&(Global_4718592.f_159089[bVar0 /*565*/].f_148[iVar1 /*10*/].f_2), "", 32);
			}
			iVar1++;
		}
		bVar2 = false;
		while (bVar2 <= 4)
		{
			StringCopy(&(Global_4718592.f_159089[bVar0 /*565*/].f_449[bVar2 /*8*/]), __LIB_20__.func_921("csehmnt", &iVar4, &(uVar32[bVar0]), bVar2, "", ""), 32);
			bVar2++;
		}
		__LIB_20__.func_914("csmmm", &(Global_4718592.f_159089[bVar0 /*565*/].f_93), &iVar4, &iVar33, bVar0, 0, 0);
		__LIB_21__.func_29(iVar4, &(Global_4718592.f_159089[bVar0 /*565*/].f_513), bVar0);
		iVar36 = 0;
		__LIB_20__.func_914("mcaer", &iVar36, &iVar4, &iVar34, bVar0, 0, -2340845);
		Global_4718592.f_159089[bVar0 /*565*/].f_52 = iVar36;
		bVar37 = false;
		bVar37 = false;
		while (bVar37 <= 3)
		{
			StringCopy(&Var38, "mcaep", 16);
			StringIntConCat(&Var38, bVar0, 16);
			StringConCat(&Var38, "_", 16);
			StringIntConCat(&Var38, bVar37, 16);
			__LIB_20__.func_913(&Var38, &(Global_4718592.f_159089[bVar0 /*565*/].f_53[bVar37 /*3*/]), &iVar4, &(uVar22[bVar0]), bVar37, __LIB_2__.func_364(), __LIB_2__.func_364());
			StringCopy(&Var38, "mcaeh", 16);
			StringIntConCat(&Var38, bVar0, 16);
			StringConCat(&Var38, "_", 16);
			StringIntConCat(&Var38, bVar37, 16);
			__LIB_20__.func_912(&Var38, &(Global_4718592.f_159089[bVar0 /*565*/].f_76[bVar37]), &iVar4, &(uVar25[bVar0]), bVar37, 0f, 0f);
			bVar37++;
		}
		bVar0++;
	}
}

void func_785(int iParam0)//Position - 0x21D2CA
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	char* sVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	var* uVar15[10];
	var* uVar16[10];
	var* uVar17[10];
	var* uVar18[10];
	var* uVar19[10];
	var* uVar20[10];
	var* uVar21[10];
	var* uVar22[10];
	var* uVar23[10];
	var* uVar24[10];
	var* uVar25[10];
	var* uVar26[10];
	var* uVar27[10];
	var* uVar28[10];
	var* uVar29[10];
	var* uVar30[10];
	var* uVar31[10];
	var* uVar32[10];
	var* uVar33[10];
	var uVar34[10];
	var* uVar35[10];
	var uVar36[10];
	var* uVar37[10];
	var* uVar38[10];
	var* uVar39[10];
	var* uVar40[10];
	var* uVar41[10];
	var* uVar42[10];
	var* uVar43[10];
	var* uVar44[10];
	var* uVar45[10];
	var* uVar46[10];
	var* uVar47[10];
	var* uVar48[10];
	var* uVar49[10];
	var* uVar50[10];
	var uVar51[10];
	var uVar52[10];
	int iVar53;
	int iVar54;
	int iVar55;
	int iVar56;
	int iVar57;
	int iVar58;
	int iVar59;
	int iVar60;
	int iVar61;
	int iVar62;
	int iVar63;
	int iVar64;
	int iVar65;
	int iVar66;
	int iVar67;
	int iVar68;
	int iVar69;
	var* uVar70[10];
	var* uVar71[10];
	int iVar72;
	int iVar73;
	int iVar74;
	int iVar75;
	var* uVar76[10];
	var* uVar77[10];
	var* uVar78;
	int iVar79;
	int iVar80;
	bool bVar81;
	struct<2> Var82;
	int iVar83;
	if (DATAFILE::DATADICT_GET_DICT(iParam0, "cuts") == 0)
	{
		return;
	}
	iVar4 = DATAFILE::DATADICT_GET_DICT(iParam0, "cuts");
	iVar5 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "name");
	iVar6 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits");
	iVar7 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits2");
	iVar8 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "bits3");
	iVar9 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "shot");
	iVar10 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "anim");
	iVar11 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "midp");
	iVar12 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "rng");
	iVar56 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "train");
	iVar57 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "trahl");
	iVar58 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "traou");
	iVar59 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "trapo");
	iVar60 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccp");
	iVar61 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccr");
	iVar62 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ccs");
	iVar63 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "clms");
	iVar64 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "clsp");
	iVar65 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "clzs");
	iVar66 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "clze");
	iVar67 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "cfbe");
	iVar68 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "citg");
	iVar69 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "vhspd");
	iVar72 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "sset");
	iVar73 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ssvc");
	iVar74 = DATAFILE::DATADICT_GET_ARRAY(iVar4, "ssfh");
	bVar0 = false;
	while (bVar0 <= 9)
	{
		if (iVar5 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar5, bVar0) == 4)
		{
			StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/]), DATAFILE::DATAARRAY_GET_STRING(iVar5, bVar0), 16);
		}
		else
		{
			StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/]), "", 16);
		}
		if (iVar6 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar6, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_4 = DATAFILE::DATAARRAY_GET_INT(iVar6, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_4 = 0;
		}
		if (iVar7 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar7, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_5 = DATAFILE::DATAARRAY_GET_INT(iVar7, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_5 = 0;
		}
		if (iVar8 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar8, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_6 = DATAFILE::DATAARRAY_GET_INT(iVar8, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_6 = 0;
		}
		__LIB_20__.func_914("bits4", &(Global_4718592.f_142828[bVar0 /*1626*/].f_7), &iVar4, &iVar13, bVar0, 0, 0);
		Global_4718592.f_142828[bVar0 /*1626*/].f_1625 = __LIB_21__.func_16("cselet", &iVar4, &iVar14, bVar0, 0, 0);
		if (Global_4718592.f_142828[bVar0 /*1626*/].f_5 == Global_4718592.f_142828[bVar0 /*1626*/].f_4)
		{
			uVar78 = DATAFILE::DATADICT_GET_DICT(iParam0, "gen");
			if (DATAFILE::DATADICT_GET_TYPE(uVar78, "menubs19") == 0)
			{
				iVar79 = 0;
				iVar79 = 9;
				while (iVar79 <= 31)
				{
					MISC::CLEAR_BIT(&(Global_4718592.f_142828[bVar0 /*1626*/].f_5), iVar79);
					iVar79++;
				}
			}
		}
		if (iVar9 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar9, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_111 = DATAFILE::DATAARRAY_GET_INT(iVar9, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_111 = 0;
		}
		if (iVar10 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar10, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_110 = DATAFILE::DATAARRAY_GET_INT(iVar10, bVar0);
			if (Global_4718592.f_142828[bVar0 /*1626*/].f_110 >= 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_110 = 0;
			}
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_110 = 0;
		}
		if (iVar11 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar11, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_112 = DATAFILE::DATAARRAY_GET_INT(iVar11, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_112 = 0;
		}
		if (iVar12 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar12, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_887 = DATAFILE::DATAARRAY_GET_INT(iVar12, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_887 = 0;
		}
		if (iVar60 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar60, bVar0) == 5)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_880 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar60, bVar0) };
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_880 = { 0f, 0f, 0f };
		}
		if (iVar61 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar61, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_883 = DATAFILE::DATAARRAY_GET_FLOAT(iVar61, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_883 = 0f;
		}
		if (iVar62 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar62, bVar0) == 5)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_884 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar62, bVar0) };
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_884 = { 0f, 0f, 0f };
		}
		__LIB_20__.func_914("synshts", &(Global_4718592.f_142828[bVar0 /*1626*/].f_1564.f_5), &iVar4, &iVar75, bVar0, 0, 0);
		if (iVar72 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar72, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564 = DATAFILE::DATAARRAY_GET_INT(iVar72, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564 = 0;
		}
		if (iVar73 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar73, bVar0) == 5)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564.f_1 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar73, bVar0) };
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564.f_1 = { 0f, 0f, 0f };
		}
		if (iVar74 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar74, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564.f_4 = DATAFILE::DATAARRAY_GET_FLOAT(iVar74, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1564.f_4 = 0f;
		}
		if (iVar56 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar56, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_588 = DATAFILE::DATAARRAY_GET_INT(iVar56, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_588 = 0;
		}
		if (iVar57 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar57, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_590 = DATAFILE::DATAARRAY_GET_INT(iVar57, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_590 = 0;
		}
		if (iVar58 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar58, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_589 = DATAFILE::DATAARRAY_GET_INT(iVar58, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_589 = 0;
		}
		if (iVar59 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar59, bVar0) == 5)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_591 = { DATAFILE::DATAARRAY_GET_VECTOR(iVar59, bVar0) };
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_591 = { 0f, 0f, 0f };
		}
		if (iVar63 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar63, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1551 = DATAFILE::DATAARRAY_GET_INT(iVar63, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1551 = -1;
		}
		if (iVar67 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar67, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1570 = DATAFILE::DATAARRAY_GET_INT(iVar67, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1570 = 0;
		}
		if (iVar68 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar68, bVar0) == 2)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1571 = DATAFILE::DATAARRAY_GET_INT(iVar68, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1571 = 3000;
		}
		if (iVar64 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar64, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1552 = DATAFILE::DATAARRAY_GET_FLOAT(iVar64, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1552 = 1f;
		}
		if (iVar65 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar65, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1553 = DATAFILE::DATAARRAY_GET_FLOAT(iVar65, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1553 = 0f;
		}
		if (iVar66 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar66, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1554 = DATAFILE::DATAARRAY_GET_FLOAT(iVar66, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_1554 = 0f;
		}
		if (iVar69 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar69, bVar0) == 3)
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_889 = DATAFILE::DATAARRAY_GET_FLOAT(iVar69, bVar0);
		}
		else
		{
			Global_4718592.f_142828[bVar0 /*1626*/].f_889 = 6f;
		}
		__LIB_20__.func_914("csspir", &(Global_4718592.f_142828[bVar0 /*1626*/].f_888), &iVar4, &iVar54, bVar0, 5000, 5000);
		iVar80 = 0;
		__LIB_20__.func_914("scaer", &iVar80, &iVar4, &iVar55, bVar0, 0, -2340845);
		Global_4718592.f_142828[bVar0 /*1626*/].f_34 = iVar80;
		bVar81 = false;
		bVar81 = false;
		while (bVar81 <= 3)
		{
			StringCopy(&Var82, "scaep", 16);
			StringIntConCat(&Var82, bVar0, 16);
			StringConCat(&Var82, "_", 16);
			StringIntConCat(&Var82, bVar81, 16);
			__LIB_20__.func_913(&Var82, &(Global_4718592.f_142828[bVar0 /*1626*/].f_35[bVar81 /*3*/]), &iVar4, &(uVar34[bVar0]), bVar81, __LIB_2__.func_364(), __LIB_2__.func_364());
			StringCopy(&Var82, "scaeh", 16);
			StringIntConCat(&Var82, bVar0, 16);
			StringConCat(&Var82, "_", 16);
			StringIntConCat(&Var82, bVar81, 16);
			__LIB_20__.func_912(&Var82, &(Global_4718592.f_142828[bVar0 /*1626*/].f_58[bVar81]), &iVar4, &(uVar36[bVar0]), bVar81, 0f, 0f);
			bVar81++;
		}
		iVar83 = 0;
		__LIB_20__.func_914("sxtecs", &iVar83, &iVar4, &iVar53, bVar0, 0, -2340845);
		Global_4718592.f_142828[bVar0 /*1626*/].f_1572 = iVar83;
		StringCopy(&sVar3, "int", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar15[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "rmin", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar16[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "rmax", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar17[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ctp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar18[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "sps", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar19[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "eps", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar20[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "srt", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar21[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ert", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar22[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "sfv", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar23[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "efv", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar24[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ati", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar38[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ato", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar39[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "atr", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar40[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ala", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar41[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "csp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar42[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "csr", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar43[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "cwtp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar46[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "ctpr", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar47[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "cdtp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar48[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "cdsp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar49[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "cssbs", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar27[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "cseet", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar30[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "skt", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar28[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "skm", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar29[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "fmxc", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar50[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "eind", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar25[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "etyp", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar26[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "pstr", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&sVar3, bVar0, 8);
		}
		uVar32[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "pend", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&sVar3, bVar0, 8);
		}
		uVar33[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "strh", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&sVar3, bVar0, 8);
		}
		uVar31[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "endh", 8);
		if (bVar0 > 0)
		{
			StringIntConCat(&sVar3, bVar0, 8);
		}
		uVar35[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "svwi", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar37[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "camnm", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar44[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "locnm", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar45[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "plrSW", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar76[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "plrEW", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar77[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "spcm", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar70[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		StringCopy(&sVar3, "paos", 8);
		StringIntConCat(&sVar3, bVar0, 8);
		uVar71[bVar0] = DATAFILE::DATADICT_GET_ARRAY(iVar4, &sVar3);
		__LIB_21__.func_31(iVar4, &(Global_4718592.f_142828[bVar0 /*1626*/]), bVar0);
		bVar1 = false;
		while (bVar1 <= 3)
		{
			if (uVar32[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar32[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_8[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar32[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_8[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar33[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar33[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_21[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar33[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_21[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar31[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar31[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_48[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar31[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_48[bVar1] = 0f;
			}
			if (uVar35[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar35[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_53[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar35[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_53[bVar1] = 0f;
			}
			if (uVar37[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar37[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_63[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar37[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_63[bVar1] = -1;
			}
			bVar1++;
		}
		bVar1 = false;
		while (bVar1 <= 19)
		{
			if (uVar15[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar15[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_113[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar15[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_113[bVar1] = 0;
			}
			if (uVar16[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar16[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_68[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar16[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_68[bVar1] = 0f;
			}
			if (uVar17[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar17[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_89[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar17[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_89[bVar1] = 0f;
			}
			if (uVar18[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar18[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_134[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar18[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_134[bVar1] = 0;
			}
			if (uVar19[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar19[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_155[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar19[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_155[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar20[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar20[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_216[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar20[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_216[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar21[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar21[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_277[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar21[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_277[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar22[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar22[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_338[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar22[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_338[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar23[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar23[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_399[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar23[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_399[bVar1] = 0f;
			}
			if (uVar24[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar24[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_420[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar24[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_420[bVar1] = 0f;
			}
			if (uVar27[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar27[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_441[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar27[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_441[bVar1] = 0;
			}
			if (uVar30[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar30[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_525[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar30[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_525[bVar1] = 500;
			}
			if (uVar28[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar28[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_483[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar28[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_483[bVar1] = 0;
			}
			if (uVar29[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar29[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_504[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar29[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_504[bVar1] = 0f;
			}
			if (uVar38[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar38[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_676[bVar1] = DATAFILE::DATAARRAY_GET_INT(uVar38[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_676[bVar1] = 0;
			}
			if (uVar39[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar39[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_697[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar39[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_697[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar40[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar40[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_758[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar40[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_758[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar41[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar41[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_819[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar41[bVar0], bVar1) };
				Global_4718592.f_163014[bVar1] = Global_4718592.f_142828[bVar0 /*1626*/].f_819[bVar1 /*3*/];
				Global_4718592.f_163035[bVar1] = Global_4718592.f_142828[bVar0 /*1626*/].f_819[bVar1 /*3*/].f_1;
				Global_4718592.f_163056[bVar1] = Global_4718592.f_142828[bVar0 /*1626*/].f_819[bVar1 /*3*/].f_2;
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_819[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar42[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar42[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_594[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar42[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_594[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar43[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar43[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_655[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar43[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_655[bVar1] = 0f;
			}
			if (uVar46[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar46[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1387[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar46[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1387[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar47[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar47[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1448[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar47[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1448[bVar1] = 0f;
			}
			if (uVar48[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar48[bVar0], bVar1) == 5)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1469[bVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar48[bVar0], bVar1) };
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1469[bVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar49[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar49[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1530[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar49[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1530[bVar1] = 0f;
			}
			if (uVar44[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar44[bVar0], bVar1) == 4)
			{
				StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1225[bVar1 /*4*/]), DATAFILE::DATAARRAY_GET_STRING(uVar44[bVar0], bVar1), 16);
			}
			else
			{
				StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1225[bVar1 /*4*/]), "", 16);
			}
			if (uVar45[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar45[bVar0], bVar1) == 4)
			{
				StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1306[bVar1 /*4*/]), DATAFILE::DATAARRAY_GET_STRING(uVar45[bVar0], bVar1), 16);
			}
			else
			{
				StringCopy(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1306[bVar1 /*4*/]), "", 16);
			}
			if (uVar50[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar50[bVar0], bVar1) == 3)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_546[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(uVar50[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_546[bVar1] = 0f;
			}
			StringCopy(&sVar3, "zsct", 8);
			StringIntConCat(&sVar3, bVar0, 8);
			__LIB_20__.func_914(&sVar3, &(Global_4718592.f_142828[bVar0 /*1626*/].f_462[bVar1]), &iVar4, &(uVar52[bVar0]), bVar1, -1, -2340845);
			StringCopy(&sVar3, "drnc", 8);
			StringIntConCat(&sVar3, bVar0, 8);
			Global_4718592.f_142828[bVar0 /*1626*/].f_567[bVar1] = __LIB_21__.func_16(&sVar3, &iVar4, &(uVar51[bVar0]), bVar1, 0, 0);
			bVar1++;
		}
		bVar1 = false;
		while (bVar1 <= 29)
		{
			if (uVar25[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar25[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_890[bVar1 /*10*/].f_1 = DATAFILE::DATAARRAY_GET_INT(uVar25[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_890[bVar1 /*10*/].f_1 = -1;
			}
			if (uVar26[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar26[bVar0], bVar1) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_890[bVar1 /*10*/] = DATAFILE::DATAARRAY_GET_INT(uVar26[bVar0], bVar1);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_890[bVar1 /*10*/] = -1;
			}
			bVar1++;
		}
		iVar2 = 0;
		while (iVar2 <= 3)
		{
			if (uVar70[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar70[bVar0], iVar2) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1555[iVar2 /*2*/] = DATAFILE::DATAARRAY_GET_INT(uVar70[bVar0], iVar2);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1555[iVar2 /*2*/] = 0;
			}
			if (uVar71[bVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar71[bVar0], iVar2) == 2)
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1555[iVar2 /*2*/].f_1 = DATAFILE::DATAARRAY_GET_INT(uVar71[bVar0], iVar2);
			}
			else
			{
				Global_4718592.f_142828[bVar0 /*1626*/].f_1555[iVar2 /*2*/].f_1 = -1;
			}
			__LIB_12__.func_759(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1191[iVar2 /*4*/]), &(uVar76[bVar0]), iVar2);
			__LIB_12__.func_759(&(Global_4718592.f_142828[bVar0 /*1626*/].f_1208[iVar2 /*4*/]), &(uVar77[bVar0]), iVar2);
			iVar2++;
		}
		bVar0++;
	}
}

void func_786(int iParam0)//Position - 0x22786E
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<2> Var3;
	struct<61> Var4;
	var* uVar5[4];
	var* uVar6[4];
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	int iVar19;
	int iVar20;
	int iVar21;
	int iVar22;
	int iVar23;
	int iVar24;
	int iVar25;
	int iVar26;
	int iVar27;
	int iVar28;
	int iVar29;
	int iVar30;
	int iVar31;
	int iVar32;
	int iVar33;
	int iVar34;
	int iVar35;
	int iVar36;
	int iVar37;
	int iVar38;
	int iVar39;
	int iVar40;
	int iVar41;
	int iVar42;
	int iVar43;
	int iVar44;
	int iVar45;
	int iVar46;
	int iVar47;
	int iVar48;
	int iVar49;
	int iVar50;
	int iVar51;
	int iVar52;
	int iVar53;
	int iVar54;
	struct<61> Var55;
	int iVar56;
	int iVar57;
	int iVar58;
	Var4 = 2;
	Var4.f_3 = 2;
	Var4.f_3.f_1 = 2;
	Var4.f_3.f_1.f_3 = 2;
	Var4.f_10 = 2;
	Var4.f_13 = 2;
	Var4.f_16 = 2;
	Var4.f_19 = 2;
	Var4.f_22 = 2;
	Var4.f_25 = 2;
	Var4.f_28 = 2;
	Var4.f_31 = 2;
	Var4.f_34 = 2;
	Var4.f_37 = 2;
	Var4.f_40 = 2;
	Var4.f_43 = 2;
	Var4.f_46 = 2;
	Var4.f_49 = 2;
	Var4.f_52 = 2;
	Var4.f_55 = 2;
	Var4.f_58 = 2;
	iVar0 = 0;
	while (iVar0 <= (Global_4718592.f_593 - 1))
	{
		if (iVar0 < 4)
		{
			iVar7 = 0;
			iVar8 = 0;
			iVar9 = 0;
			iVar10 = 0;
			iVar11 = 0;
			iVar12 = 0;
			iVar13 = 0;
			iVar14 = 0;
			iVar15 = 0;
			iVar16 = 0;
			iVar17 = 0;
			iVar18 = 0;
			iVar19 = 0;
			iVar20 = 0;
			iVar21 = 0;
			iVar22 = 0;
			iVar23 = 0;
			iVar24 = 0;
			iVar25 = 0;
			iVar26 = 0;
			iVar27 = 0;
			iVar28 = 0;
			iVar29 = 0;
			iVar30 = 0;
			iVar31 = 0;
			iVar32 = 0;
			iVar33 = 0;
			iVar34 = 0;
			iVar35 = 0;
			iVar36 = 0;
			iVar37 = 0;
			iVar38 = 0;
			iVar39 = 0;
			iVar40 = 0;
			iVar41 = 0;
			iVar42 = 0;
			iVar43 = 0;
			iVar44 = 0;
			iVar45 = 0;
			iVar46 = 0;
			iVar47 = 0;
			iVar48 = 0;
			iVar49 = 0;
			iVar50 = 0;
			iVar51 = 0;
			iVar52 = 0;
			iVar53 = 0;
			iVar54 = 0;
			Var55 = { Var4 };
			iVar56 = 0;
			iVar57 = 0;
			StringCopy(&Var3, "itvsd", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar7 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "itved", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar12 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "invor", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar13 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "emonR", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar14 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "pDSaD", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar15 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "todh", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar29 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "todm", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar30 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "tods", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar31 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "todsh", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar32 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "armr", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar16 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "bsthr", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar17 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "mgdm", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar18 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rorcp", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar19 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rocok", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar20 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rodp", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar21 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rodpt", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar22 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rochta", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar23 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rotes", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar24 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "expRR", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar25 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "rolsw", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar26 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "roapa", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar27 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "sthpp", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar28 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "txt3", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar44 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "txt4", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar45 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "txt5", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar46 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "fail", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar47 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "bfm", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar52 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "wwm", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar48 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "vss", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar49 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "cwt", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar50 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "vhm", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar51 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "tsc", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar53 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "mcry", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar54 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "bdprt", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar56 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			StringCopy(&Var3, "bdpst", 16);
			StringIntConCat(&Var3, iVar0, 16);
			iVar57 = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
			iVar2 = 0;
			while (iVar2 <= 3)
			{
				StringCopy(&Var3, "rlbs", 16);
				StringIntConCat(&Var3, iVar0, 16);
				StringConCat(&Var3, "-", 16);
				StringIntConCat(&Var3, iVar2, 16);
				uVar5[iVar2] = 0;
				uVar5[iVar2] = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
				StringCopy(&Var3, "rlnm", 16);
				StringIntConCat(&Var3, iVar2, 16);
				uVar6[iVar2] = DATAFILE::DATADICT_GET_ARRAY(*iParam0, &Var3);
				iVar2++;
			}
			bVar1 = false;
			while (bVar1 <= (Global_4718592.f_658[iVar0 /*22957*/].f_59 - 1))
			{
				__LIB_20__.func_914("oCH_CTL", &(Global_4718592.f_658[iVar0 /*22957*/].f_15964[bVar1]), iParam0, &iVar8, bVar1, -1, -2340845);
				__LIB_20__.func_914("shTckRS", &(Global_4718592.f_658[iVar0 /*22957*/].f_15982[bVar1]), iParam0, &iVar9, bVar1, -1, -2340845);
				__LIB_20__.func_914("cusot", &(Global_4718592.f_658[iVar0 /*22957*/].f_16000[bVar1]), iParam0, &iVar10, bVar1, -1, -2340845);
				__LIB_20__.func_914("cusmot", &(Global_4718592.f_658[iVar0 /*22957*/].f_16018[bVar1]), iParam0, &iVar11, bVar1, -1, -2340845);
				StringCopy(&Var3, "todw", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1349[bVar1]), iParam0, &iVar33, bVar1, 0, -2340845);
				StringCopy(&Var3, "todwtt", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_912(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1367[bVar1]), iParam0, &iVar42, bVar1, 0f, -904994889);
				StringCopy(&Var3, "todwcod", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1385[bVar1]), iParam0, &iVar43, bVar1, 0, -2340845);
				StringCopy(&Var3, "grvd", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_941[bVar1]), iParam0, &iVar34, bVar1, 0, -2340845);
				StringCopy(&Var3, "grvc", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_959[bVar1]), iParam0, &iVar35, bVar1, 0, -2340845);
				StringCopy(&Var3, "cvhr", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1421[bVar1]), iParam0, &iVar36, bVar1, 0, -2340845);
				StringCopy(&Var3, "cvhrt", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_912(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1439[bVar1]), iParam0, &iVar39, bVar1, 0f, -904994889);
				StringCopy(&Var3, "cvhp", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_912(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1457[bVar1]), iParam0, &iVar40, bVar1, 0f, -904994889);
				StringCopy(&Var3, "cvhdm", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_912(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1475[bVar1]), iParam0, &iVar41, bVar1, 0f, -904994889);
				StringCopy(&Var3, "cvcht", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_914(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1403[bVar1]), iParam0, &iVar37, bVar1, 0, -2340845);
				StringCopy(&Var3, "tddm", 16);
				StringIntConCat(&Var3, iVar0, 16);
				__LIB_20__.func_912(&Var3, &(Global_4718592.f_658[iVar0 /*22957*/].f_1493[bVar1]), iParam0, &iVar38, bVar1, 0f, -904994889);
				iVar58 = 0;
				while (iVar58 <= 1)
				{
					__LIB_21__.func_42(iVar58, iParam0, &Var55, &(Global_4718592.f_658[iVar0 /*22957*/].f_2055[bVar1 /*41*/][iVar58 /*20*/]), iVar0, bVar1);
					iVar58++;
				}
				if (!__LIB_12__.func_385(&iVar7, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_905[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar7, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_905[bVar1] = 5;
				}
				if (!__LIB_12__.func_385(&iVar12, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_923[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar12, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_923[bVar1] = 20;
				}
				if (!__LIB_12__.func_385(&iVar13, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1709[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar13, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1709[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar14, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1727[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar14, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1727[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar15, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1871[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar15, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1871[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar16, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1511[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar16, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1511[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar17, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1529[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar17, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1529[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar18, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1547[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar18, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1547[bVar1] = 100;
				}
				if (!__LIB_12__.func_385(&iVar19, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_16456[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar19, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_16456[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar20, 3, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_16708[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(iVar20, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_16708[bVar1] = 0f;
				}
				if (!__LIB_12__.func_385(&iVar21, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1565[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar21, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1565[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar22, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1583[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar22, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1583[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar23, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1853[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar23, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1853[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar24, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1601[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar24, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1601[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar25, 3, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1619[bVar1] = DATAFILE::DATAARRAY_GET_FLOAT(iVar25, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1619[bVar1] = 0f;
				}
				if (!__LIB_12__.func_385(&iVar26, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1655[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar26, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1655[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar27, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1673[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar27, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1673[bVar1] = -1;
				}
				if (!__LIB_12__.func_385(&iVar28, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1691[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar28, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1691[bVar1] = -2;
				}
				if (!__LIB_12__.func_385(&iVar29, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1277[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar29, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1277[bVar1] = 12;
				}
				if (!__LIB_12__.func_385(&iVar30, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1295[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar30, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1295[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar31, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1313[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar31, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1313[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar32, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1331[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar32, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_1331[bVar1] = 0;
				}
				if (!__LIB_11__.func_573())
				{
					if (!__LIB_12__.func_385(&iVar44, 4, bVar1))
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13775[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar44, bVar1), 64);
					}
					else
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13775[bVar1 /*16*/]), "", 64);
					}
					if (!__LIB_12__.func_385(&iVar45, 4, bVar1))
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13229[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar45, bVar1), 64);
					}
					else
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13229[bVar1 /*16*/]), "", 64);
					}
					if (!__LIB_12__.func_385(&iVar46, 4, bVar1))
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13502[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar46, bVar1), 64);
					}
					else
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_13502[bVar1 /*16*/]), "", 64);
					}
				}
				if (!__LIB_12__.func_385(&iVar47, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14048[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar47, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14048[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar52, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14321[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar52, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14321[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar48, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14594[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar48, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14594[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar49, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14867[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar49, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_14867[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar50, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_15140[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar50, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_15140[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar51, 4, bVar1))
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_15413[bVar1 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(iVar51, bVar1), 64);
				}
				else
				{
					StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_15413[bVar1 /*16*/]), "", 64);
				}
				if (!__LIB_12__.func_385(&iVar53, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_5836[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar53, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_5836[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar54, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_5854[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar54, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_5854[bVar1] = 0;
				}
				if (!__LIB_12__.func_385(&iVar56, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_12183[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar56, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_12183[bVar1] = Global_4718592.f_658[iVar0 /*22957*/].f_5552;
				}
				if (!__LIB_12__.func_385(&iVar57, 2, bVar1))
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_12201[bVar1] = DATAFILE::DATAARRAY_GET_INT(iVar57, bVar1);
				}
				else
				{
					Global_4718592.f_658[iVar0 /*22957*/].f_12201[bVar1] = Global_4718592.f_658[iVar0 /*22957*/].f_5816;
				}
				iVar2 = 0;
				while (iVar2 <= 3)
				{
					if (uVar5[iVar2] != 0)
					{
						Global_4718592.f_658[iVar0 /*22957*/].f_12219[bVar1 /*5*/][iVar2] = DATAFILE::DATAARRAY_GET_INT(uVar5[iVar2], bVar1);
					}
					else
					{
						Global_4718592.f_658[iVar0 /*22957*/].f_12219[bVar1 /*5*/][iVar2] = 0;
					}
					if (uVar6[iVar2] != 0)
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_12305[iVar2 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(uVar6[iVar2], 0), 64);
					}
					else
					{
						StringCopy(&(Global_4718592.f_658[iVar0 /*22957*/].f_12305[iVar2 /*16*/]), "", 64);
					}
					iVar2++;
				}
				bVar1++;
			}
		}
		iVar0++;
	}
}

bool func_787(int iParam0)//Position - 0x237813
{
	return __LIB_21__.func_49(iParam0, 3);
}

void func_788(var uParam0, int iParam1, int iParam2)//Position - 0x2434ED
{
	if (iParam1 == 0 || iParam1 == 1)
	{
		if (NETWORK::UGC_GET_CONTENT_IS_VERIFIED(uParam0->f_7))
		{
			if (Global_1020252.f_5[iParam2 /*88*/].f_65 == 2)
			{
				__LIB_12__.func_549(Global_1025782.f_5[iParam2 /*88*/].f_22);
			}
			else if (Global_1020252.f_5[iParam2 /*88*/].f_65 == 1)
			{
				__LIB_12__.func_548(Global_1025782.f_5[iParam2 /*88*/].f_22);
			}
			else if (Global_1020252.f_5[iParam2 /*88*/].f_65 == 4)
			{
				__LIB_20__.func_962(Global_1025782.f_5[iParam2 /*88*/].f_22);
			}
		}
	}
}

void func_789(int iParam0, int iParam1, bool bParam2, int iParam3, bool bParam4)//Position - 0x246A8C
{
	int iVar0;
	if (!__LIB_6__.func_781())
	{
		return;
	}
	if (!bParam2)
	{
		return;
	}
	if (iParam0 == 0)
	{
		if (((iParam1 != 6 && iParam1 != 5) && iParam1 != 4) && iParam1 != 9)
		{
			if (__LIB_15__.func_447(PLAYER::PLAYER_ID()) < iParam3)
			{
				return;
			}
		}
	}
	else if (iParam0 == 2)
	{
		if (iParam3 >= 9999)
		{
			return;
		}
	}
	iVar0 = __LIB_12__.func_552(iParam0, iParam1, bParam4);
	if (iVar0 == -1)
	{
		return;
	}
	__LIB_19__.func_928(iVar0, 1);
}

int func_790()//Position - 0xC1BF0
{
	if (__LIB_0__.func_190())
	{
		return 0;
	}
	if (__LIB_0__.func_698())
	{
		return 0;
	}
	if (!__LIB_6__.func_965())
	{
		return 0;
	}
	if (!__LIB_4__.func_715())
	{
		return 0;
	}
	if (__LIB_0__.func_191(8, -1))
	{
		return 0;
	}
	if (__LIB_1__.func_523() == 2)
	{
		return 0;
	}
	if (Global_2815059.f_4612)
	{
		return 0;
	}
	if (__LIB_0__.func_706())
	{
		return 0;
	}
	else if (!__LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0) && Global_1573860[0 /*4*/] > 0)
	{
		return 0;
	}
	if (((__LIB_0__.func_104(1) || __LIB_6__.func_964(1)) || Global_23011.f_124) || Global_23011)
	{
		return 0;
	}
	if (HUD::IS_PAUSE_MENU_ACTIVE())
	{
		return 0;
	}
	if (__LIB_0__.func_734() && Global_1965530 == 2)
	{
		return 0;
	}
	if (__LIB_18__.func_460(PLAYER::PLAYER_ID()) && !__LIB_0__.func_734())
	{
		return 0;
	}
	if (Global_1931426)
	{
		return 0;
	}
	if (Global_1931431)
	{
		return 0;
	}
	if (__LIB_1__.func_302(0))
	{
		return 0;
	}
	if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_30, 4))
	{
		return 0;
	}
	if (Global_1640732)
	{
		return 0;
	}
	if ((Global_1959720.f_718.f_5 || Global_1962546.f_718.f_5) || Global_1958748.f_718.f_5)
	{
		return 0;
	}
	if ((Global_1966534.f_724.f_5 || Global_1966534.f_744.f_724.f_5) || Global_1966534.f_1497.f_724.f_5)
	{
		return 0;
	}
	if (Global_1973321.f_726.f_5)
	{
		return 0;
	}
	if (__LIB_1__.func_522(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((Global_1640768 || Global_1640769) || Global_1640770)
	{
		return 0;
	}
	return 1;
}

void func_791(bool bParam0, bool bParam1, bool bParam2)//Position - 0xC2E85
{
	var uVar0;
	if (__LIB_18__.func_449(bParam0))
	{
		return;
	}
	__LIB_2__.func_298(&(Global_2678393.f_723[bParam0]), &(Global_2678393.f_1086[bParam0]), &(Global_2678393.f_393), bParam1, bParam0, bParam2, &uVar0);
}

int func_792(int iParam0)//Position - 0xCD13F
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	iVar0 = 1;
	if (__LIB_26__.func_34(iParam0, 2, 13))
	{
		iVar0 = 5;
	}
	else if (__LIB_26__.func_34(iParam0, 2, 12))
	{
		iVar0 = 4;
	}
	else if (__LIB_26__.func_34(iParam0, 2, 11))
	{
		iVar0 = 3;
	}
	else if (__LIB_26__.func_34(iParam0, 2, 10))
	{
		iVar0 = 2;
	}
	return iVar0;
}

void func_793()//Position - 0xDD974
{
	if (__LIB_20__.func_430())
	{
		__LIB_10__.func_973(0);
		__LIB_10__.func_973(1);
		__LIB_10__.func_973(2);
		__LIB_10__.func_973(3);
	}
}

void func_794()//Position - 0xDDA1C
{
	if (__LIB_20__.func_431())
	{
		__LIB_9__.func_315(4);
		__LIB_9__.func_315(5);
		__LIB_9__.func_315(6);
		__LIB_9__.func_315(7);
	}
}

int func_795(bool bParam0)//Position - 0xF07
{
	var uVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_19__.func_760(1))
	{
		iVar1 = 0;
		while (iVar1 < 32)
		{
			iVar3 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
			if (__LIB_1__.func_264(iVar3, 0, 0))
			{
				if (__LIB_1__.func_145())
				{
					if (__LIB_6__.func_941(iVar3, PLAYER::PLAYER_ID(), bParam0))
					{
						MISC::SET_BIT(&uVar0, iVar3);
					}
				}
				else
				{
					iVar2 = __LIB_0__.func_582();
					if (iVar2 != __LIB_0__.func_160())
					{
						if (__LIB_6__.func_941(iVar3, iVar2, bParam0))
						{
							MISC::SET_BIT(&uVar0, iVar3);
						}
					}
				}
			}
			iVar1++;
		}
	}
	return uVar0;
}

int func_796()//Position - 0xC1C1
{
	if ((((Global_4718592.f_107227 == 6 || Global_4718592.f_107227 == 7) || Global_4718592.f_107227 == 18) || Global_4718592.f_107227 == 19) && Global_4718592.f_2 == 20)
	{
		return 0;
	}
	if (__LIB_2__.func_59(7))
	{
		if (__LIB_0__.func_286(Global_2703735.f_4.f_16) || __LIB_1__.func_385(Global_2703735.f_4.f_16))
		{
			return 0;
		}
	}
	return 1;
}

int func_797(int iParam0)//Position - 0xCCCB
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_7__.func_203(PLAYER::PLAYER_ID(), -1))
		{
			iParam0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		}
	}
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if (__LIB_7__.func_133(PLAYER::PLAYER_ID()) == 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			if (__LIB_0__.func_291(iParam0) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_798(bool bParam0, struct<3> Param1, var uParam2)//Position - 0x20249
{
	struct<26> Var0;
	int iVar1;
	int iVar2;
	if (!__LIB_6__.func_489(Param1))
	{
		return;
	}
	if (*uParam2 > 18)
	{
		return;
	}
	if (*uParam2 <= 0)
	{
		return;
	}
	Var0.f_3 = -1;
	Var0.f_3.f_1 = -1;
	Var0.f_3.f_2 = -1000;
	Var0.f_6 = 18;
	Var0.f_0 = -1247260598;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = bParam0;
	Var0.f_3 = { Param1 };
	Var0.f_25 = *uParam2;
	iVar1 = 0;
	while (iVar1 < *uParam2)
	{
		Var0.f_6[iVar1] = (*uParam2)[iVar1];
		iVar1++;
	}
	iVar2 = __LIB_7__.func_213(1, 1);
	if (!iVar2 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 26, iVar2);
	}
}

void func_799(struct<2> Param0, int iParam1, var uParam2, struct<3> Param3, var uParam4)//Position - 0x20B82
{
	struct<10> Var0;
	int iVar1;
	if (!__LIB_6__.func_489(Param3))
	{
		return;
	}
	Var0.f_2.f_1 = -1;
	Var0.f_6 = -1;
	Var0.f_6.f_1 = -1;
	Var0.f_6.f_2 = -1000;
	Var0.f_0 = -441166609;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = { Param0 };
	Var0.f_4 = iParam1;
	Var0.f_9 = uParam2;
	Var0.f_5 = uParam4;
	Var0.f_6 = { Param3 };
	iVar1 = __LIB_7__.func_213(1, 1);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 10, iVar1);
	}
}

void func_800(int iParam0)//Position - 0x2FED2
{
	__LIB_9__.func_932(0, iParam0);
	__LIB_13__.func_342(-1);
	__LIB_9__.func_931(0);
}

void func_801(int iParam0)//Position - 0x30478
{
	int iVar0;
	__LIB_1__.func_39(__LIB_9__.func_923(iParam0), 0, -1);
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		if (__LIB_9__.func_922(iParam0, iVar0) != 0)
		{
			__LIB_1__.func_39(__LIB_9__.func_922(iParam0, iVar0), 0, -1);
		}
		if (__LIB_9__.func_921(iParam0, iVar0) != 0)
		{
			__LIB_1__.func_39(__LIB_9__.func_921(iParam0, iVar0), 0, -1);
		}
		iVar0++;
	}
	__LIB_1__.func_39(__LIB_9__.func_920(iParam0), -1, -1);
}

int func_802(int iParam0, int iParam1, bool bParam2)//Position - 0x317F5
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Global_1058069.f_14[iParam0];
	if (__LIB_7__.func_63())
	{
		iVar2 = __LIB_13__.func_344(iParam1);
		if (!iVar2 == -1)
		{
			return __LIB_6__.func_890(iVar2);
		}
	}
	if (iVar1 > -1 && iVar1 < 17)
	{
		if (BitTest(Global_4718592.f_658[iParam0 /*22957*/].f_7911[iVar1], 24))
		{
			return 18;
		}
	}
	if (iParam0 > -1 && iParam1 != __LIB_0__.func_160())
	{
		if (Global_4718592.f_111249[iParam0] != -1 && Global_4718592.f_111249[iParam0] <= 4)
		{
			if (Global_4718592.f_111249[iParam0] == 0)
			{
				iVar0 = 15;
			}
			else if (Global_4718592.f_111249[iParam0] == 1)
			{
				iVar0 = 18;
			}
			else if (Global_4718592.f_111249[iParam0] == 2)
			{
				iVar0 = 24;
			}
			else if (Global_4718592.f_111249[iParam0] == 4)
			{
				if (BitTest(Global_4718592.f_15, 29))
				{
					iVar0 = 21;
				}
				else
				{
					iVar0 = 6;
				}
			}
			else
			{
				iVar0 = Global_4718592.f_111249[iParam0];
			}
		}
		else
		{
			iVar0 = __LIB_8__.func_837(iParam1, !bParam2, iParam0, 0);
		}
		if (BitTest(Global_4718592.f_21, 13))
		{
			iVar0 = __LIB_0__.func_726(iParam0);
		}
		if (BitTest(Global_4718592.f_24, 29))
		{
			iVar0 = 0;
		}
		if (BitTest(Global_4718592.f_15, 26) && !__LIB_0__.func_610(iParam0, PLAYER::GET_PLAYER_TEAM(iParam1), 0))
		{
			iVar0 = __LIB_0__.func_722(1);
		}
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

void func_803(int iParam0, var uParam1, bool bParam2, int iParam3)//Position - 0x382EB
{
	if (PLAYER::PLAYER_ID() == __LIB_1__.func_301())
	{
		if ((ENTITY::DOES_ENTITY_EXIST(iParam0) && !bParam2) && !__LIB_13__.func_355())
		{
			if (__LIB_2__.func_47(uParam1, 1000, 0))
			{
				__LIB_13__.func_286(ENTITY::GET_ENTITY_COORDS(iParam0, true), iParam3);
				__LIB_0__.func_579(uParam1);
			}
		}
		else
		{
			__LIB_20__.func_358(iParam3);
		}
	}
}

int func_804(int iParam0)//Position - 0x38F2E
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	var uVar3;
	bool bVar4;
	iVar0 = 2;
	bVar1 = ((__LIB_0__.func_738(iParam0) && !__LIB_2__.func_296(iParam0)) && !BitTest(Global_1892703[iParam0 /*599*/].f_1, 8));
	bVar2 = __LIB_0__.func_431(iParam0);
	uVar3 = __LIB_0__.func_674();
	bVar4 = __LIB_25__.func_938();
	if ((bVar1 && (__LIB_2__.func_193(iParam0) || __LIB_0__.func_740(iParam0))) || bVar4)
	{
		iVar0 = 0;
	}
	else if (uVar3 || ((!bVar2 && !__LIB_0__.func_286(iParam0)) && !__LIB_9__.func_280(iParam0)))
	{
		iVar0 = 2;
	}
	else
	{
		iVar0 = 3;
	}
	if (Global_2815059.f_5195.f_220 != iVar0)
	{
		Global_2815059.f_5195.f_220 = iVar0;
	}
	return iVar0;
}

int func_805(struct<3> Param0, float fParam1)//Position - 0xA27FE
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = iVar0;
		if ((__LIB_1__.func_264(iVar1, 1, 1) && __LIB_1__.func_426(iVar1)) && NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), iVar1))
		{
			if ((PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1 && PLAYER::GET_PLAYER_TEAM(iVar1) == -1) && !__LIB_7__.func_452(PLAYER::PLAYER_ID(), 1))
			{
				return 0;
			}
			else if ((PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1 && !PLAYER::PLAYER_ID() == iVar1) || !__LIB_0__.func_723(PLAYER::PLAYER_ID(), iVar1, -2, 0))
			{
				if (SYSTEM::VDIST(Param0, __LIB_1__.func_265(iVar1)) < fParam1)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_806(int iParam0)//Position - 0xABFFC
{
	if (((__LIB_7__.func_452(iParam0, 1) || __LIB_0__.func_738(iParam0)) || __LIB_0__.func_292(iParam0, 0)) || __LIB_5__.func_694(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_807(int iParam0, int iParam1, bool bParam2)//Position - 0xBD733
{
	if (iParam1 == 27)
	{
		if ((__LIB_2__.func_296(iParam0) || __LIB_9__.func_282(iParam0)) || __LIB_7__.func_275(iParam0))
		{
			return 0;
		}
	}
	if (!__LIB_1__.func_353(iParam0))
	{
		return 0;
	}
	if (!__LIB_21__.func_83(iParam0) && !__LIB_9__.func_283(iParam0, bParam2))
	{
		return 0;
	}
	return 1;
}

void func_808(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0xBDA7E
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (__LIB_1__.func_264(PLAYER::INT_TO_PLAYERINDEX(iVar0), 0, 1))
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (!__LIB_6__.func_978(iVar1, 0))
			{
				if (__LIB_21__.func_83(iVar1) || __LIB_9__.func_283(iVar1, bParam4))
				{
					if (__LIB_6__.func_941(iVar1, iParam1, 0))
					{
						(*iParam0)[iVar0] = *iParam2;
						*iParam2++;
						*iParam3++;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_809(struct<3> Param0)//Position - 0xC62B7
{
	if (Global_1952191.f_5470.f_3 != 0)
	{
		if (__LIB_10__.func_875(Param0, Global_1952191.f_5470))
		{
			__LIB_21__.func_86(Param0);
			__LIB_13__.func_285();
		}
	}
}

int func_810(int iParam0)//Position - 0xCA875
{
	if ((((((((iParam0 == 250 || iParam0 == 238) || iParam0 == 242) || iParam0 == 244) || iParam0 == 248) || iParam0 == 241) || iParam0 == 239) || iParam0 == 240) || iParam0 == 249)
	{
		return 1;
	}
	if (iParam0 == 237 && __LIB_3__.func_154(__LIB_19__.func_800(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if ((iParam0 == 299 || iParam0 == 300) || iParam0 == 301)
	{
		return 1;
	}
	return 0;
}

void func_811(int iParam0, int iParam1)//Position - 0xD37A4
{
	if ((__LIB_1__.func_145() || !__LIB_19__.func_760(1)) || __LIB_1__.func_297(iParam0) == 3)
	{
		if (!__LIB_6__.func_946(PLAYER::PLAYER_ID(), 0) && !__LIB_6__.func_946(PLAYER::PLAYER_ID(), 3))
		{
			__LIB_4__.func_830(iParam0);
			__LIB_4__.func_826(iParam0, __LIB_7__.func_213(1, 1), __LIB_4__.func_829(), __LIB_4__.func_828(), __LIB_4__.func_827(), iParam1);
		}
	}
}

void func_812(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xD42C0
{
	if (Global_2703735.f_1571.f_703.f_16 != __LIB_0__.func_160())
	{
		if (BitTest(Global_2689235[Global_2703735.f_1571.f_703.f_16 /*453*/].f_416, 0) && __LIB_21__.func_90())
		{
			iParam0 = 23;
		}
	}
	if (iParam0 != 18 && iParam0 != 17)
	{
		Global_2674954 = 0;
	}
	Global_2667225.f_490 = iParam0;
	Global_2667225.f_490.f_1 = SCRIPT::GET_ID_OF_THIS_THREAD();
	Global_2667225.f_490.f_2 = iParam1;
	Global_2667225.f_490.f_3 = iParam2;
	Global_2667225.f_490.f_4 = iParam3;
	Global_2667225.f_490.f_5 = iParam4;
}

int func_813(int iParam0)//Position - 0x1D64
{
	if (__LIB_6__.func_373(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	Global_2787505 = { __LIB_1__.func_267(iParam0) };
	if (NETWORK::NETWORK_IS_FRIEND(&Global_2787505))
	{
		return 1;
	}
	if (__LIB_2__.func_457(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	return 0;
}

int func_814()//Position - 0xD9D4
{
	if ((((Global_4718592.f_107227 == 6 || Global_4718592.f_107227 == 7) || Global_4718592.f_107227 == 18) || Global_4718592.f_107227 == 19) && Global_4718592.f_2 == 20)
	{
		return 0;
	}
	if (__LIB_13__.func_417(7))
	{
		if (__LIB_0__.func_286(Global_2703735.f_4.f_16) || __LIB_1__.func_385(Global_2703735.f_4.f_16))
		{
			return 0;
		}
	}
	return 1;
}

void func_815(struct<2> Param0, char* sParam1)//Position - 0x226C6
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	var uVar3;
	int iVar4;
	var uVar5;
	char cVar6[16];
	bVar0 = false;
	if (bVar0)
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
		{
			sParam1 = "FREEMODE_DELIVERY_DEBUG_PRINT_DELIVERABLE_ID";
		}
		bVar1 = __LIB_2__.func_467(Param0);
		bVar2 = __LIB_3__.func_809(Param0);
		uVar3 = __LIB_3__.func_810(Param0);
		iVar4 = __LIB_3__.func_811(Param0);
		uVar5 = __LIB_6__.func_491(Param0);
		if (iVar4 == 0)
		{
			StringCopy(&cVar6, "Initial", 16);
		}
		else if (iVar4 == 2)
		{
			StringCopy(&cVar6, "Delivered", 16);
		}
		else if (iVar4 == -1)
		{
			StringCopy(&cVar6, "Invalid", 16);
		}
		else
		{
			IntToString(&cVar6, iVar4, 16);
		}
	}
}

int func_816(int iParam0, int iParam1)//Position - 0x22996
{
	bool bVar0;
	if (Global_1952191.f_5484[iParam1] != -1)
	{
		return Global_1952191.f_5484[iParam1];
	}
	bVar0 = false;
	while (bVar0 < 31)
	{
		if (!BitTest(Global_1952191.f_5479.f_3, bVar0))
		{
			MISC::SET_BIT(&(Global_1952191.f_5479.f_3), bVar0);
			return __LIB_21__.func_101(iParam0, bVar0);
		}
		bVar0++;
	}
	return -1;
}

int func_817()//Position - 0xA7757
{
	if (Global_2667225.f_45.f_65 && !Global_2667225.f_45.f_304)
	{
		if (!__LIB_18__.func_460(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	return 0;
}

int func_818()//Position - 0xB268E
{
	int iVar0;
	if (__LIB_13__.func_359(Global_2703735.f_4.f_16))
	{
		iVar0 = __LIB_19__.func_939(Global_2703735.f_4.f_16);
	}
	else if (Global_2815059.f_6694.f_4 == 158)
	{
		iVar0 = Global_2815059.f_6694.f_3;
	}
	switch (iVar0)
	{
		case 41:
			return 13;
		case 42:
			return 17;
		case 25:
		case 26:
			return 21;
		case 38:
			return 25;
		case 34:
			return 65;
		default:
	}
	if (__LIB_0__.func_396(Global_2703735.f_4.f_16) == 271)
	{
		switch (__LIB_1__.func_337(Global_2703735.f_4.f_16))
		{
			case 6:
				return 17;
			case 13:
				return 25;
			case 7:
				return 45;
			case 5:
				return 53;
			}
		default:
	}
	return 2;
}

int func_819(int iParam0)//Position - 0xB922B
{
	if (iParam0 == 28)
	{
		if ((__LIB_0__.func_738(PLAYER::PLAYER_ID()) && !__LIB_0__.func_431(PLAYER::PLAYER_ID())) && !__LIB_2__.func_297(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
	}
	if (iParam0 == 27)
	{
		if (__LIB_0__.func_292(PLAYER::PLAYER_ID(), 0) && __LIB_0__.func_431(PLAYER::PLAYER_ID()))
		{
			return 1;
		}
		if (__LIB_26__.func_804(PLAYER::PLAYER_ID()) == 3)
		{
			return 1;
		}
	}
	return 0;
}

void func_820(bool bParam0)//Position - 0xC3095
{
	if (bParam0)
	{
		if (!__LIB_0__.func_163(PLAYER::PLAYER_ID(), 9))
		{
			if (__LIB_26__.func_804(PLAYER::PLAYER_ID()) != 0)
			{
				__LIB_1__.func_484(9);
			}
		}
	}
	else if (__LIB_0__.func_163(PLAYER::PLAYER_ID(), 9))
	{
		__LIB_1__.func_485(9);
	}
}

void func_821(int iParam0, int iParam1)//Position - 0xD0B90
{
	if (!__LIB_1__.func_145())
	{
		return;
	}
	if (!__LIB_2__.func_275(-1))
	{
		return;
	}
	if (iParam0 != -1)
	{
		__LIB_4__.func_831(iParam0);
	}
	__LIB_13__.func_413(iParam1);
	__LIB_26__.func_811(256, -1);
}

void func_822(int iParam0, struct<3> Param1)//Position - 0xD390E
{
	struct<4> Var0;
	int iVar1;
	Var0.f_3 = -1;
	Var0.f_3.f_1 = -1;
	Var0.f_3.f_2 = -1000;
	Var0.f_0 = 997339103;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam0;
	Var0.f_3 = { Param1 };
	iVar1 = __LIB_7__.func_213(1, 1);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 6, iVar1);
	}
}

int func_823(bool bParam0)//Position - 0xD633D
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = -1;
	iVar1 = -1;
	if (bParam0)
	{
		iVar0 = __LIB_1__.func_182(PLAYER::PLAYER_ID());
	}
	else
	{
		iVar0 = __LIB_0__.func_396(PLAYER::PLAYER_ID());
	}
	if (iVar0 != -1)
	{
	}
	switch (iVar0)
	{
		case 236:
			iVar2 = __LIB_7__.func_600(PLAYER::PLAYER_ID());
			iVar1 = iVar2;
			break;
		case 150:
			iVar2 = __LIB_11__.func_75(PLAYER::PLAYER_ID());
			iVar1 = iVar2;
			break;
		case 237:
			iVar2 = __LIB_13__.func_327(PLAYER::PLAYER_ID());
			if (__LIB_3__.func_154(__LIB_19__.func_800(PLAYER::PLAYER_ID())))
			{
				iVar1 = 100;
			}
			else
			{
				iVar1 = 200;
			}
			iVar1 = (iVar1 + iVar2);
			break;
		case 250:
			iVar2 = __LIB_13__.func_327(PLAYER::PLAYER_ID());
			iVar1 = 300;
			iVar1 = (iVar1 + iVar2);
			break;
		case 238:
			iVar2 = __LIB_13__.func_326(PLAYER::PLAYER_ID());
			iVar1 = 400;
			iVar1 = (iVar1 + iVar2);
			break;
		case 249:
			iVar2 = __LIB_13__.func_326(PLAYER::PLAYER_ID());
			iVar1 = 500;
			iVar1 = (iVar1 + iVar2);
			break;
		case 239:
			iVar1 = 600;
			break;
		case 240:
			iVar1 = 700;
			break;
		case 241:
			iVar1 = 800;
			break;
		case 242:
			iVar1 = 900;
			break;
		case 244:
			iVar1 = 1100;
			break;
		case 248:
			iVar1 = 1200;
			break;
		case 298:
			iVar1 = 1250;
			break;
		case 299:
			if (__LIB_21__.func_95(PLAYER::PLAYER_ID()) == 0)
			{
				iVar1 = 1300;
			}
			else if (__LIB_21__.func_95(PLAYER::PLAYER_ID()) == 1)
			{
				iVar1 = 1301;
			}
			break;
		case 300:
			if (__LIB_19__.func_772(PLAYER::PLAYER_ID()) == 0)
			{
				iVar1 = 1400;
			}
			break;
		case 301:
			if (__LIB_21__.func_94(PLAYER::PLAYER_ID(), 301) == 0)
			{
				iVar1 = 1500;
			}
			if (__LIB_21__.func_94(PLAYER::PLAYER_ID(), 301) == 1)
			{
				iVar1 = 1501;
			}
			break;
		case 302:
			iVar1 = 1700;
			break;
		case 303:
			iVar1 = 1800;
			break;
	}
	return iVar1;
}

void func_824(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x1B39
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (Local_196.f_38.f_1[iParam1 /*21*/].f_8 != -1)
		{
			if (bParam5)
			{
				Var0 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, -5f, 0f) };
				Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var0, Var1, 25, true, joaat("WEAPON_HEAVYSNIPER"), 0, true, true, -1f);
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var1, Var0, 25, true, joaat("WEAPON_ASSAULTSHOTGUN"), 0, true, true, -1f);
			}
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		else
		{
			Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
			__LIB_21__.func_98(Var2, &Var3, &Var4, 0);
			MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var3, Var4, 300, true, joaat("WEAPON_HEAVYSNIPER"), 0, false, false, 80f);
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		if (bParam4)
		{
			__LIB_21__.func_74(iParam0, -1, 0);
		}
	}
}

int func_825(bool bParam0)//Position - 0x22246
{
	if (bParam0)
	{
		return (iLocal_319 - __LIB_13__.func_472());
	}
	return iLocal_319;
}

int func_826(int iParam0)//Position - 0x228D1
{
	switch (iParam0)
	{
		case 0:
			if (__LIB_13__.func_482(69))
			{
				return 1;
			}
			break;
	}
	return 0;
}

void func_827()//Position - 0x2634D
{
	__LIB_9__.func_929(0);
	__LIB_13__.func_483(0);
}

void func_828()//Position - 0x2673D
{
	int iVar0;
	__LIB_1__.func_39(__LIB_9__.func_919(), 0, -1);
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		if (__LIB_9__.func_918(iVar0) != 0)
		{
			__LIB_1__.func_39(__LIB_9__.func_918(iVar0), 0, -1);
		}
		if (__LIB_9__.func_916(iVar0) != 0)
		{
			__LIB_1__.func_39(__LIB_9__.func_916(iVar0), 0, -1);
		}
		iVar0++;
	}
	__LIB_1__.func_39(__LIB_9__.func_915(), -1, -1);
}

bool func_829()//Position - 0x28EE8
{
	return !__LIB_13__.func_495();
}

Vector3 func_830(int iParam0)//Position - 0x2C972
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	if (iParam0 == __LIB_0__.func_160())
	{
	}
	if (__LIB_13__.func_261(iParam0))
	{
		iVar0 = __LIB_1__.func_236(iParam0);
		if (iVar0 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_251(iVar0))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_239[iVar0 /*3*/][1]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_239[iVar0 /*3*/][1], false);
				}
				else
				{
					return Global_2689235[__LIB_1__.func_236(iParam0) /*453*/].f_318.f_11;
				}
			}
			else
			{
				iVar1 = __LIB_2__.func_210(iVar0);
				if (!iVar1 == -1)
				{
					return Global_1946250.f_533[iVar1 /*3*/];
				}
			}
		}
	}
	else if (__LIB_4__.func_968(iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_307))
		{
			return ENTITY::GET_ENTITY_COORDS(Global_2815059.f_307, false);
		}
	}
	else if (__LIB_4__.func_972(iParam0) && !__LIB_8__.func_210(iParam0))
	{
		iVar2 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar2 != __LIB_0__.func_160())
		{
			iVar3 = __LIB_2__.func_210(iVar2);
			if (!iVar3 == -1)
			{
				return Global_1946250.f_533[iVar3 /*3*/];
			}
		}
	}
	else if (__LIB_4__.func_958(iParam0) && !__LIB_8__.func_209(iParam0))
	{
		if (__LIB_3__.func_859(iParam0) && __LIB_1__.func_291())
		{
			return Global_1946250.f_533[Global_2689235[iParam0 /*453*/].f_318.f_6 /*3*/];
		}
		iVar4 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar4 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_233(iVar4))
			{
				iVar5 = __LIB_6__.func_933(iVar4);
				if (iVar5 != -1)
				{
					return Global_1946250.f_533[iVar5 /*3*/];
				}
			}
		}
	}
	else if (__LIB_4__.func_27(iParam0))
	{
		iVar6 = __LIB_1__.func_236(iParam0);
		if (iVar6 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_237(iVar6))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_336[iVar6]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_336[iVar6], false);
				}
				else
				{
					return Global_2689235[__LIB_1__.func_236(iParam0) /*453*/].f_318.f_18;
				}
			}
			else
			{
				iVar7 = __LIB_6__.func_933(iVar6);
				if (!iVar7 == -1)
				{
					return Global_1946250.f_533[iVar7 /*3*/];
				}
			}
		}
	}
	else if (__LIB_4__.func_969(iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_309))
		{
			return ENTITY::GET_ENTITY_COORDS(Global_2815059.f_309, false);
		}
	}
	else if (__LIB_3__.func_903(iParam0) && !__LIB_5__.func_614(iParam0))
	{
		iVar8 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar8 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_186(iVar8))
			{
				iVar9 = __LIB_2__.func_209(iVar8);
				if (iVar9 != -1)
				{
					return __LIB_1__.func_290(iVar9);
				}
			}
		}
	}
	else if (__LIB_3__.func_903(iParam0) && !__LIB_5__.func_614(iParam0))
	{
		iVar10 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar10 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_235(iVar10))
			{
				iVar11 = __LIB_6__.func_932(iVar10);
				if (iVar11 != -1)
				{
					return Global_1946250.f_533[iVar11 /*3*/];
				}
			}
		}
	}
	else if (__LIB_3__.func_902(iParam0, 0))
	{
		iVar12 = __LIB_1__.func_236(iParam0);
		if (iVar12 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_229(iVar12))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_369[iVar12]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_369[iVar12], false);
				}
				else
				{
					return Global_1892703[__LIB_1__.func_236(iParam0) /*599*/].f_584;
				}
			}
			else
			{
				iVar13 = __LIB_6__.func_932(iVar12);
				if (!iVar13 == -1)
				{
					return Global_1946250.f_533[iVar13 /*3*/];
				}
			}
		}
	}
	else if (__LIB_3__.func_813(iParam0))
	{
		return -366.7f, -1909.6f, 20f;
	}
	else if (__LIB_3__.func_849(iParam0))
	{
		iVar14 = __LIB_21__.func_106(iParam0);
		if (iVar14 != __LIB_0__.func_160())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_402[iVar14]))
			{
				return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_402[iVar14], false);
			}
			else
			{
				return Global_1911933[iVar14 /*260*/].f_51;
			}
		}
		else
		{
			return 0f, 0f, 0f;
		}
	}
	if (__LIB_3__.func_903(iParam0))
	{
		return __LIB_1__.func_290(Global_2689235[iParam0 /*453*/].f_318.f_6);
	}
	if (__LIB_8__.func_458(iParam0))
	{
		return 965.8165f, 42.25042f, 122.1267f;
	}
	return Global_1946250.f_533[Global_2689235[iParam0 /*453*/].f_318.f_6 /*3*/];
}

void func_831(struct<2> Param0)//Position - 0x2E23E
{
	int iVar0;
	if (!__LIB_2__.func_467(Param0))
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (!__LIB_2__.func_467(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_556.f_1[iVar0 /*2*/]))
		{
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_556.f_1[iVar0 /*2*/] = { Param0 };
		}
		else
		{
			iVar0++;
		}
	}
	MISC::SET_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_556), 0);
	__LIB_26__.func_815(Param0, "FREEMODE_DELIVERY_SET_LOCAL_PLAYER_IN_POSSESSION_OF_DELIVERABLE");
}

char* func_832(int iParam0)//Position - 0xA47BA
{
	if (Local_213.f_473.f_16 != 0)
	{
		Stack.Push(iParam0);
		Call_Loc(Local_213.f_473.f_16);
		return StackVal;
	}
	if (__LIB_13__.func_508(iParam0, 0))
	{
		return "ILH_H_PORT2" /* GXT: Press ~INPUT_CONTEXT~ to exit. */;
	}
	return "ILH_H_PORT1" /* GXT: Press ~INPUT_CONTEXT~ to enter. */;
}

float func_833()//Position - 0xA494D
{
	if (Local_213.f_473.f_11 != 0)
	{
		Stack.Push(__LIB_13__.func_502());
		Call_Loc(Local_213.f_473.f_11);
		return StackVal;
	}
	return 2f;
}

int func_834()//Position - 0xA4A17
{
	if (Local_213.f_473.f_7 != 0)
	{
		Stack.Push(Local_196.f_143[__LIB_13__.func_511() /*8*/].f_4);
		Call_Loc(Local_213.f_473.f_7);
		return StackVal;
	}
	return 1;
}

float func_835()//Position - 0xA4A44
{
	return __LIB_13__.func_504(__LIB_13__.func_511());
}

Vector3 func_836()//Position - 0xA4B1D
{
	return __LIB_13__.func_506(__LIB_13__.func_511());
}

void func_837()//Position - 0xA4D86
{
	int iVar0;
	__LIB_21__.func_243(3000);
	Stack.Push(__LIB_13__.func_511());
	Call_Loc(Local_213.f_473.f_3);
	if (StackVal && PED::IS_PED_IN_ANY_VEHICLE(iLocal_326, false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(iLocal_326, false);
		if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_VISIBLE(iVar0, true, false);
		}
	}
	__LIB_13__.func_475(40);
}

int func_838()//Position - 0xAF40C
{
	if (bLocal_320)
	{
		if (iLocal_331 != 0)
		{
			if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iLocal_330, -1, false) == iLocal_326)
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_330, false))
				{
					if (!__LIB_13__.func_360(iLocal_326))
					{
						return __LIB_6__.func_762(iLocal_330, __LIB_13__.func_525(), __LIB_0__.func_109(), __LIB_13__.func_291(), 0, 0, 0);
					}
				}
			}
		}
	}
	return 0;
}

int func_839(int iParam0)//Position - 0xB5903
{
	int* iVar0;
	bool bVar1;
	int iVar2;
	__LIB_13__.func_534(iParam0, &iVar0);
	bVar1 = false;
	while (bVar1 < 7)
	{
		if (bVar1 != -1)
		{
			if (BitTest(iVar0, bVar1))
			{
				if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam0, bVar1))
				{
					iVar2++;
				}
			}
		}
		bVar1++;
	}
	return iVar2;
}

void func_840()//Position - 0xB825C
{
	if (__LIB_13__.func_922())
	{
		if (!__LIB_13__.func_482(18))
		{
			if (PLAYER::GET_PLAYER_FAKE_WANTED_LEVEL(bLocal_324) < __LIB_13__.func_921())
			{
				MISC::SET_FAKE_WANTED_LEVEL(__LIB_13__.func_921());
			}
			__LIB_13__.func_468(18);
			if (__LIB_13__.func_482(14))
			{
				__LIB_13__.func_468(72);
			}
			if (__LIB_13__.func_482(80))
			{
				__LIB_13__.func_468(81);
			}
		}
	}
	else
	{
		__LIB_13__.func_920();
	}
}

int func_841(int iParam0, int iParam1)//Position - 0xBB977
{
	Stack.Push(Local_213.f_352.f_32 != 0);
	Stack.Push(iParam0);
	Call_Loc(Local_213.f_352.f_32);
	if (StackVal && StackVal)
	{
		return 1;
	}
	if (__LIB_21__.func_119(iParam1))
	{
		return 1;
	}
	return 0;
}

void func_842()//Position - 0xC354C
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar2 = iVar2;
	__LIB_13__.func_339(iLocal_335, 5, "iNumModeStates", "MAX_NUM_STATES");
	__LIB_13__.func_339(iLocal_336, 7, "iNumClientModeStates", "MAX_NUM_CLIENT_STATES");
	iVar0 = 0;
	while (iVar0 < iLocal_335)
	{
		__LIB_13__.func_339(Local_217[iVar0 /*20*/].f_19, 5, "sModeStates[iLoop].iNumTransitions", "MAX_NUM_TRANSITIONS");
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < iLocal_336)
	{
		__LIB_13__.func_339(Local_218[iVar0 /*21*/].f_19, 5, "sClientModeStates[iLoop].iNumTransitions", "MAX_NUM_TRANSITIONS");
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 1)
	{
		__LIB_13__.func_339(Local_219.f_23[iVar0 /*67*/], 5, "sPedLocal.sBehaviour[iLoop].iNumTasks", "MAX_NUM_PED_TASKS");
		iVar1 = 0;
		while (iVar1 < Local_219.f_23[iVar0 /*67*/])
		{
			__LIB_13__.func_339(Local_219.f_23[iVar0 /*67*/].f_1[iVar1 /*13*/].f_12, 3, "sPedLocal.sBehaviour[iLoop].Task[iLoop2].iNumTransitions", "MAX_NUM_PED_TASK_TRANSITIONS");
			iVar1++;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Local_196.f_38)
	{
		__LIB_13__.func_339(Local_219[iVar0 /*19*/].f_16, 5, "sPedLocal.sPed[iLoop].iNumTriggers", "MAX_NUM_PED_TRIGGERS");
		iVar0++;
	}
	iVar2 = __LIB_13__.func_603();
	__LIB_13__.func_339(iVar2, 1, "GET_NUM_HELP_TEXTS()", "MAX_NUM_HELP_TEXTS");
}

int func_843()//Position - 0xC3E79
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < Local_196.f_85)
	{
		if (__LIB_21__.func_220(iVar0))
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

void func_844()//Position - 0xC430C
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	bVar3 = __LIB_13__.func_399();
	iVar2 = __LIB_2__.func_191(PLAYER::PLAYER_ID());
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar1))
		{
			if (__LIB_6__.func_941(iVar1, iVar2, 1) || __LIB_21__.func_139(iVar1, PLAYER::PLAYER_ID()))
			{
				PLAYER::SET_PLAYER_CAN_DAMAGE_PLAYER(PLAYER::PLAYER_ID(), iVar1, bVar3);
				PLAYER::SET_PLAYER_CAN_DAMAGE_PLAYER(iVar1, PLAYER::PLAYER_ID(), bVar3);
			}
		}
		iVar0++;
	}
}

void func_845(float fParam0)//Position - 0xC9979
{
	int iVar0;
	int iVar1;
	float fVar2;
	float fVar3;
	struct<3> Var4;
	iVar1 = -1;
	fVar2 = -1f;
	iVar0 = 0;
	while (iVar0 < 2)
	{
		if (!__LIB_13__.func_517(iVar0))
		{
		}
		else if (!__LIB_13__.func_500(iVar0))
		{
		}
		else
		{
			fVar3 = MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(iLocal_326, true), Local_196.f_143[iVar0 /*8*/], false);
			if (IntToFloat(iVar1) == -1f || fVar3 < fVar2)
			{
				fVar2 = fVar3;
				iVar1 = iVar0;
			}
		}
		iVar0++;
	}
	if (iVar1 != -1)
	{
		if (fVar2 > fParam0)
		{
			Var4 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Local_196.f_143[iVar1 /*8*/], Local_196.f_143[iVar1 /*8*/].f_3, -fParam0, 0f, 1f) };
		}
		else
		{
			Var4 = { Local_196.f_143[iVar1 /*8*/] };
		}
		__LIB_18__.func_391(Var4, Local_196.f_143[iVar1 /*8*/].f_3, 0, 1, 0, 0, 1, 0, 1, 0, 0);
	}
}

int func_846(int iParam0, int iParam1, var uParam2)//Position - 0xCD408
{
	switch (iParam0)
	{
		case 181:
			return 0;
		case 256:
			return __LIB_13__.func_312(iParam1, uParam2);
		case 258:
			return __LIB_0__.func_109(iParam1, uParam2);
		case 271:
			return __LIB_13__.func_311(iParam1, uParam2);
		case 264:
			return __LIB_13__.func_310(iParam1, uParam2);
		case 263:
			return __LIB_13__.func_309(iParam1, uParam2);
		case 294:
			return __LIB_13__.func_306(iParam1, uParam2);
		case 300:
			return __LIB_2__.func_318(iParam1, uParam2);
		case 301:
			return __LIB_13__.func_308(iParam1, uParam2);
		case 291:
			return __LIB_2__.func_318(iParam1, uParam2);
		case 299:
			return __LIB_13__.func_307(iParam1, uParam2);
		case 293:
			return __LIB_13__.func_306(iParam1, uParam2);
		case 298:
			return __LIB_2__.func_318(iParam1, uParam2);
		case 296:
			return __LIB_2__.func_318(iParam1, uParam2);
		case 297:
			return __LIB_13__.func_306(iParam1, uParam2);
		default:
	}
	return 0;
}

void func_847(bool bParam0)//Position - 0xCDB65
{
	if (bParam0)
	{
	}
	else
	{
		__LIB_13__.func_708();
	}
}

void func_848()//Position - 0xCDCCB
{
	if (__LIB_13__.func_482(41))
	{
		HUD::SET_RADAR_ZOOM_PRECISE(0f);
		__LIB_11__.func_35(0);
		if (__LIB_13__.func_544())
		{
			__LIB_21__.func_154(0);
		}
		__LIB_13__.func_475(41);
	}
}

int func_849(char* sParam0, char* sParam1, bool bParam2, var uParam3)//Position - 0x273B4
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(sParam0) > 23)
	{
		return 0;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_2__.func_9(sParam0, sParam1) && Global_1574757.f_56 == Global_1574757.f_58)
	{
		return 0;
	}
	__LIB_18__.func_388();
	Global_1574757 = 3;
	StringCopy(&(Global_1574757.f_1), SCRIPT::GET_THIS_SCRIPT_NAME(), 32);
	Global_1574757.f_9 = MISC::GET_HASH_KEY(&(Global_1574757.f_1));
	StringCopy(&(Global_1574757.f_12), sParam0, 16);
	StringCopy(&(Global_1574757.f_16), sParam1, 64);
	Global_1574757.f_58 = uParam3;
	Global_1574757.f_56 = uParam3;
	__LIB_1__.func_270();
	__LIB_1__.func_269(bParam2);
	__LIB_1__.func_268();
	return 1;
}

int func_850(int iParam0, int iParam1, bool bParam2)//Position - 0x28FBA
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Global_1058069.f_14[iParam0];
	if (__LIB_7__.func_63())
	{
		iVar2 = __LIB_13__.func_746(iParam1);
		if (!iVar2 == -1)
		{
			return __LIB_6__.func_890(iVar2);
		}
	}
	if (iVar1 > -1 && iVar1 < 17)
	{
		if (BitTest(Global_4718592.f_658[iParam0 /*22957*/].f_7911[iVar1], 24))
		{
			return 18;
		}
	}
	if (iParam0 > -1 && iParam1 != __LIB_0__.func_160())
	{
		if (Global_4718592.f_111249[iParam0] != -1 && Global_4718592.f_111249[iParam0] <= 4)
		{
			if (Global_4718592.f_111249[iParam0] == 0)
			{
				iVar0 = 15;
			}
			else if (Global_4718592.f_111249[iParam0] == 1)
			{
				iVar0 = 18;
			}
			else if (Global_4718592.f_111249[iParam0] == 2)
			{
				iVar0 = 24;
			}
			else if (Global_4718592.f_111249[iParam0] == 4)
			{
				if (BitTest(Global_4718592.f_15, 29))
				{
					iVar0 = 21;
				}
				else
				{
					iVar0 = 6;
				}
			}
			else
			{
				iVar0 = Global_4718592.f_111249[iParam0];
			}
		}
		else
		{
			iVar0 = __LIB_8__.func_837(iParam1, !bParam2, iParam0, 0);
		}
		if (BitTest(Global_4718592.f_21, 13))
		{
			iVar0 = __LIB_0__.func_726(iParam0);
		}
		if (BitTest(Global_4718592.f_24, 29))
		{
			iVar0 = 0;
		}
		if (BitTest(Global_4718592.f_15, 26) && !__LIB_0__.func_610(iParam0, PLAYER::GET_PLAYER_TEAM(iParam1), 0))
		{
			iVar0 = __LIB_0__.func_722(1);
		}
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

int func_851()//Position - 0x57243
{
	int iVar0;
	int iVar1[10];
	int iVar2;
	int iVar3;
	iVar0 = -1;
	iVar2 = 0;
	while (iVar2 < 10)
	{
		if (__LIB_6__.func_925())
		{
			if (Global_262145.f_25352[iVar2] != -1)
			{
				iVar1[iVar0 + 1] = iVar2;
				iVar0++;
			}
		}
		else if (Global_262145.f_25341[iVar2] != -1)
		{
			iVar1[iVar0 + 1] = iVar2;
			iVar0++;
		}
		iVar2++;
	}
	if (iVar0 == -1)
	{
		if (Global_262145.f_25778 /* Tunable: 667407153 */ != -1)
		{
			return 10;
		}
	}
	else if (Global_262145.f_25778 /* Tunable: 667407153 */ != -1)
	{
		iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar0 + 2);
		if (iVar3 == iVar0 + 1)
		{
			return 10;
		}
		else
		{
			return iVar1[iVar3];
		}
	}
	else
	{
		return iVar1[MISC::GET_RANDOM_INT_IN_RANGE(0, iVar0 + 1)];
	}
	return -1;
}

int func_852(int iParam0)//Position - 0xC4652
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (!__LIB_1__.func_235(iParam0))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 7)
	{
		iVar2 = iVar0;
		iVar3 = __LIB_10__.func_926(iParam0, iVar2);
		iVar1 = (iVar1 + __LIB_19__.func_28(iVar2, iVar3));
		iVar0++;
	}
	return iVar1;
}

struct<4> func_853(bool bParam0)//Position - 0xD853F
{
	char cVar0[32];
	if (__LIB_0__.func_154(bParam0, 0, 1))
	{
		Global_2787505 = { __LIB_1__.func_267(bParam0) };
		if (__LIB_0__.func_53())
		{
			if (__LIB_0__.func_585(Global_2787505))
			{
				if (!NETWORK::NETWORK_CAN_VIEW_GAMER_USER_CONTENT(&Global_2787505))
				{
					return cVar0;
				}
			}
		}
		else if (!NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
		{
			return cVar0;
		}
		if (__LIB_0__.func_797(&Global_2787505))
		{
			Global_2787435 = { __LIB_5__.func_104(bParam0) };
			__LIB_1__.func_380(&Global_2787435, &cVar0);
		}
	}
	return cVar0;
}

int func_854(bool bParam0)//Position - 0xD86F7
{
	int iVar0;
	if (bParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_6__.func_768(bParam0, 0))
	{
		return 0;
	}
	iVar0 = bParam0;
	if (iVar0 != -1)
	{
		if (BitTest(Global_1853348[iVar0 /*834*/].f_139, 2))
		{
			return 0;
		}
	}
	return 1;
}

int func_855()//Position - 0xD9E1F
{
	if (__LIB_0__.func_190())
	{
		return 0;
	}
	if (__LIB_0__.func_698())
	{
		return 0;
	}
	if (!__LIB_6__.func_965())
	{
		return 0;
	}
	if (!__LIB_4__.func_715())
	{
		return 0;
	}
	if (__LIB_0__.func_191(8, -1))
	{
		return 0;
	}
	if (__LIB_1__.func_523() == 2)
	{
		return 0;
	}
	if (Global_2815059.f_4612)
	{
		return 0;
	}
	if (__LIB_0__.func_706())
	{
		return 0;
	}
	else if (!__LIB_7__.func_268(PLAYER::PLAYER_ID(), 1, 0) && Global_1573860[0 /*4*/] > 0)
	{
		return 0;
	}
	if (((__LIB_0__.func_104(1) || __LIB_6__.func_964(1)) || Global_23011.f_124) || Global_23011)
	{
		return 0;
	}
	if (HUD::IS_PAUSE_MENU_ACTIVE())
	{
		return 0;
	}
	if (__LIB_0__.func_734() && Global_1965530 == 2)
	{
		return 0;
	}
	if (__LIB_6__.func_948(PLAYER::PLAYER_ID()) && !__LIB_0__.func_734())
	{
		return 0;
	}
	if (Global_1931426)
	{
		return 0;
	}
	if (Global_1931431)
	{
		return 0;
	}
	if (__LIB_1__.func_302(0))
	{
		return 0;
	}
	if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_30, 4))
	{
		return 0;
	}
	if (Global_1640732)
	{
		return 0;
	}
	if ((Global_1959720.f_718.f_5 || Global_1962546.f_718.f_5) || Global_1958748.f_718.f_5)
	{
		return 0;
	}
	if ((Global_1966534.f_724.f_5 || Global_1966534.f_744.f_724.f_5) || Global_1966534.f_1497.f_724.f_5)
	{
		return 0;
	}
	if (Global_1973321.f_726.f_5)
	{
		return 0;
	}
	if (__LIB_1__.func_522(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((Global_1640768 || Global_1640769) || Global_1640770)
	{
		return 0;
	}
	return 1;
}

int func_856(bool bParam0)//Position - 0x13D5
{
	var uVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_19__.func_760(1))
	{
		iVar1 = 0;
		while (iVar1 < 32)
		{
			iVar3 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
			if (__LIB_0__.func_154(iVar3, 0, 0))
			{
				if (__LIB_1__.func_145())
				{
					if (__LIB_6__.func_941(iVar3, PLAYER::PLAYER_ID(), bParam0))
					{
						MISC::SET_BIT(&uVar0, iVar3);
					}
				}
				else
				{
					iVar2 = __LIB_0__.func_582();
					if (iVar2 != __LIB_0__.func_160())
					{
						if (__LIB_6__.func_941(iVar3, iVar2, bParam0))
						{
							MISC::SET_BIT(&uVar0, iVar3);
						}
					}
				}
			}
			iVar1++;
		}
	}
	return uVar0;
}

int func_857(int iParam0)//Position - 0x1D9D
{
	if (__LIB_2__.func_199(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	Global_2787505 = { __LIB_1__.func_267(iParam0) };
	if (NETWORK::NETWORK_IS_FRIEND(&Global_2787505))
	{
		return 1;
	}
	if (__LIB_2__.func_145(PLAYER::PLAYER_ID(), iParam0))
	{
		return 1;
	}
	return 0;
}

void func_858(struct<2> Param0, int iParam1, var uParam2, struct<3> Param3, var uParam4)//Position - 0x22C0A
{
	struct<10> Var0;
	int iVar1;
	if (!__LIB_6__.func_489(Param3))
	{
		return;
	}
	Var0.f_2.f_1 = -1;
	Var0.f_6 = -1;
	Var0.f_6.f_1 = -1;
	Var0.f_6.f_2 = -1000;
	Var0.f_0 = -441166609;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = { Param0 };
	Var0.f_4 = iParam1;
	Var0.f_9 = uParam2;
	Var0.f_5 = uParam4;
	Var0.f_6 = { Param3 };
	iVar1 = __LIB_6__.func_900(1, 1);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 10, iVar1);
	}
}

int func_859()//Position - 0x32093
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	while (iVar1 <= 4)
	{
		iVar2 = __LIB_9__.func_632(iVar1);
		if (iVar2 != 0)
		{
			iVar0 = (iVar0 + __LIB_20__.func_404(iVar2));
		}
		iVar1++;
	}
	return iVar0;
}

int func_860(int iParam0, int iParam1, var uParam2)//Position - 0x324F6
{
	int iVar0;
	bool bVar1;
	var uVar2;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 2);
	if (__LIB_13__.func_750(__LIB_3__.func_974(iParam0), iParam1))
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
	}
	bVar1 = false;
	if ((iVar0 == 1 || iVar0 == 2) || iVar0 == 3)
	{
		bVar1 = true;
	}
	uVar2 = __LIB_13__.func_752(__LIB_3__.func_974(iParam0), iParam1);
	return __LIB_13__.func_751(uParam2, uVar2, bVar1);
}

int func_861(int iParam0, bool bParam1, int iParam2)//Position - 0x3D625
{
	if (Global_1853348[iParam0 /*834*/].f_267.f_32 > 0)
	{
		if (bParam1)
		{
			if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_30, 0))
			{
				return 1;
			}
		}
		else
		{
			return 1;
		}
	}
	if (Global_2689235[iParam0 /*453*/].f_318.f_6 != -1)
	{
		if (iParam2 == -1 || __LIB_0__.func_170(Global_2689235[iParam0 /*453*/].f_318.f_6) != iParam2)
		{
			if (bParam1)
			{
				return __LIB_21__.func_181(iParam0) == iParam0;
			}
			return 1;
		}
	}
	return 0;
}

int func_862()//Position - 0x413E6
{
	if (__LIB_18__.func_246(Global_2703735, 1))
	{
		return 50;
	}
	return 0;
}

void func_863(int iParam0, var uParam1, bool bParam2, int iParam3)//Position - 0x42EC5
{
	if (PLAYER::PLAYER_ID() == __LIB_1__.func_301())
	{
		if ((ENTITY::DOES_ENTITY_EXIST(iParam0) && !bParam2) && !__LIB_13__.func_763())
		{
			if (__LIB_2__.func_47(uParam1, 1000, 0))
			{
				__LIB_13__.func_286(ENTITY::GET_ENTITY_COORDS(iParam0, true), iParam3);
				__LIB_0__.func_579(uParam1);
			}
		}
		else
		{
			__LIB_20__.func_358(iParam3);
		}
	}
}

void func_864()//Position - 0x45819
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	bool bVar3;
	float fVar4;
	float fVar5;
	struct<3> Var6;
	struct<3> Var7;
	struct<3> Var8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	struct<3> Var12;
	struct<3> Var13;
	struct<3> Var14;
	struct<3> Var15;
	struct<3> Var16;
	struct<3> Var17;
	int iVar18;
	int iVar19;
	int iVar20;
	int iVar21;
	int iVar22;
	int iVar23;
	int iVar24;
	int iVar25;
	int iVar26;
	int iVar27;
	int iVar28;
	int iVar29;
	var uVar30;
	var uVar31;
	var uVar32;
	int iVar33;
	int iVar34;
	int iVar35;
	int iVar36;
	int iVar37;
	int iVar38;
	int iVar39;
	int iVar40;
	int iVar41;
	struct<3> Var42;
	float fVar43;
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false) };
		if ((!Global_2667225.f_45.f_52 && !Global_2667225.f_45.f_53) && !Global_2667225.f_2674)
		{
			if (PATHFIND::GET_CLOSEST_VEHICLE_NODE(Var1, &Var2, 1, 3f, 0f))
			{
				Var2.f_2 = (Var2.f_2 + 1f);
				bVar3 = true;
				if (!SYSTEM::VDIST(Var1, Var2) < 50f || Global_2667225.f_45.f_52)
				{
					bVar3 = false;
				}
			}
		}
		else if (Global_2667225.f_2674)
		{
			Global_2667225.f_2674 = 0;
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			fVar4 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
		}
		fVar5 = 3f;
		Var6 = { ENTITY::GET_ENTITY_FORWARD_VECTOR(PLAYER::PLAYER_PED_ID()) };
		Var6 = { Var6 / FtoV(SYSTEM::VMAG(Var6)) };
		Var6 = { Var6 * Vector(fVar5, fVar5, fVar5) };
		Var7 = { Var6 };
		__LIB_0__.func_602(&Var7, 0f, 0f, -45f);
		Var8 = { Var6 };
		__LIB_0__.func_602(&Var8, 0f, 0f, -90f);
		Var9 = { Var6 };
		__LIB_0__.func_602(&Var9, 0f, 0f, 45f);
		Var10 = { Var6 };
		__LIB_0__.func_602(&Var10, 0f, 0f, 90f);
		if (bVar3)
		{
			Var11 = { Var2 - Var1 };
			Var12 = { __LIB_0__.func_620(Var11, 0f, 0f, 1f) };
			Var12 = { Var12 / FtoV(SYSTEM::VMAG(Var12)) };
			Var12 = { Var12 * Vector(0.2f, 0.2f, 0.2f) };
		}
		Var13 = { Var1 + Var6 };
		Var14 = { Var1 + Var7 };
		Var15 = { Var1 + Var8 };
		Var16 = { Var1 + Var9 };
		Var17 = { Var1 + Var10 };
		iVar18 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var13, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		iVar19 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var14, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		iVar20 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var15, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		iVar21 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var16, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		iVar22 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var17, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		if (bVar3)
		{
			iVar23 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Var1, Var2, 0.2f, 257, PLAYER::PLAYER_PED_ID(), 7);
		}
		iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar18, &iVar24, &uVar30, &uVar31, &uVar32);
		iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar19, &iVar25, &uVar30, &uVar31, &uVar32);
		iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar20, &iVar26, &uVar30, &uVar31, &uVar32);
		iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar21, &iVar27, &uVar30, &uVar31, &uVar32);
		iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar22, &iVar28, &uVar30, &uVar31, &uVar32);
		if (bVar3)
		{
			iVar33 = SHAPETEST::GET_SHAPE_TEST_RESULT(iVar23, &iVar29, &uVar30, &uVar31, &uVar32);
		}
		if (iVar33 == 0)
		{
		}
		iVar34 = (iVar34 + iVar24);
		iVar35 = (iVar35 + iVar25);
		iVar36 = (iVar36 + iVar26);
		iVar37 = (iVar37 + iVar27);
		iVar38 = (iVar38 + iVar28);
		if (bVar3)
		{
			iVar39 = (iVar39 + iVar29);
		}
		iVar40 = 99;
		iVar41 = -1;
		if (iVar34 < iVar40)
		{
			iVar40 = iVar34;
			iVar41 = 0;
		}
		if (iVar35 < iVar40)
		{
			iVar40 = iVar35;
			iVar41 = 1;
		}
		if (iVar37 < iVar40)
		{
			iVar40 = iVar37;
			iVar41 = 2;
		}
		if (iVar36 < iVar40)
		{
			iVar40 = iVar36;
			iVar41 = 3;
		}
		if (iVar38 < iVar40)
		{
			iVar40 = iVar38;
			iVar41 = 4;
		}
		if (bVar3)
		{
			if (iVar39 < iVar40)
			{
				iVar40 = iVar39;
				iVar41 = 5;
			}
		}
		if (bVar3 && iVar39 == 0)
		{
			fVar4 = MISC::GET_HEADING_FROM_VECTOR_2D(Var11.f_0, Var11.f_1);
			__LIB_8__.func_881(fVar4);
			return;
		}
		else if (iVar34 == 0)
		{
			return;
		}
		else if (Global_2667225.f_45.f_52)
		{
			Var42 = { Global_2667225.f_45.f_49 - Var1 };
			fVar43 = __LIB_0__.func_156(Var42, Var15);
			if (fVar43 <= 0f)
			{
				if (iVar35 == 0)
				{
					fVar4 = (fVar4 + -45f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else if (iVar36 == 0)
				{
					fVar4 = (fVar4 + -90f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else if (iVar37 == 0)
				{
					fVar4 = (fVar4 + 45f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else if (iVar38 == 0)
				{
					fVar4 = (fVar4 + 90f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else
				{
					__LIB_21__.func_170(iVar41, fVar4, Var11);
				}
			}
			else if (iVar37 == 0)
			{
				fVar4 = (fVar4 + 45f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else if (iVar38 == 0)
			{
				fVar4 = (fVar4 + 90f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else if (iVar35 == 0)
			{
				fVar4 = (fVar4 + -45f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else if (iVar36 == 0)
			{
				fVar4 = (fVar4 + -90f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else
			{
				__LIB_21__.func_170(iVar41, fVar4, Var11);
			}
		}
		else
		{
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 2);
			if (iVar0 == 0)
			{
				if (iVar36 == 0)
				{
					fVar4 = (fVar4 + -90f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else if (iVar38 == 0)
				{
					fVar4 = (fVar4 + 90f);
					__LIB_8__.func_881(fVar4);
					return;
				}
				else
				{
					__LIB_21__.func_170(iVar41, fVar4, Var11);
				}
			}
			else if (iVar38 == 0)
			{
				fVar4 = (fVar4 + 90f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else if (iVar36 == 0)
			{
				fVar4 = (fVar4 + -90f);
				__LIB_8__.func_881(fVar4);
				return;
			}
			else
			{
				__LIB_21__.func_170(iVar41, fVar4, Var11);
			}
		}
	}
}

void func_865(int iParam0, int iParam1, int iParam2)//Position - 0xC75BC
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		__LIB_1__.func_199();
		if (iParam2 == -1)
		{
			iParam2 = __LIB_1__.func_556(2042, -1, 0);
		}
		PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(iParam0, 5, __LIB_18__.func_183(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_217(PLAYER::GET_PLAYER_PED(iParam0), iParam2), false);
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(iParam0, __LIB_0__.func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		PED::SET_PED_COMPONENT_VARIATION(PLAYER::GET_PLAYER_PED(iParam0), 5, __LIB_18__.func_183(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_217(PLAYER::GET_PLAYER_PED(iParam0), iParam2), __LIB_0__.func_114(PLAYER::GET_PLAYER_PED(iParam0), iParam2));
		if (iParam1 == -1)
		{
			iParam1 = __LIB_1__.func_556(586, -1, 0);
		}
		if (__LIB_19__.func_760(1) && __LIB_0__.func_357(iParam0))
		{
			__LIB_7__.func_243(iParam0, __LIB_1__.func_286(Global_2824753), 0);
		}
		else
		{
			__LIB_7__.func_243(iParam0, iParam1, 0);
		}
		if (BitTest(Global_4718592.f_28, 4))
		{
			__LIB_7__.func_243(iParam0, Global_1836612, 1);
		}
		__LIB_6__.func_782(iParam0, iParam2);
		PED::SET_PED_RESET_FLAG(PLAYER::GET_PLAYER_PED(iParam0), 177, true);
	}
}

int func_866(int iParam0)//Position - 0xD6FAA
{
	if (__LIB_16__.func_405())
	{
		if (__LIB_0__.func_154(iParam0, 0, 1))
		{
			return __LIB_0__.func_581(iParam0);
		}
	}
	if ((__LIB_0__.func_154(iParam0, 0, 1) && __LIB_19__.func_763()) && __LIB_0__.func_249(iParam0, 0))
	{
		return 1;
	}
	return 0;
}

int func_867(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, int iParam5)//Position - 0xED7F0
{
	switch (iParam1)
	{
		case 181:
			return 882;
		case 256:
			return __LIB_21__.func_89(iParam2, iParam3, iParam5, iParam0);
		case 258:
			return __LIB_13__.func_317(iParam2, iParam3, iParam5, iParam0);
		case 271:
			return __LIB_21__.func_138(iParam2, iParam3, iParam5, iParam0);
		case 264:
			return __LIB_13__.func_435(iParam2, iParam3, iParam5, iParam0);
		case 263:
			return __LIB_21__.func_137(iParam2, iParam3, iParam5, iParam0);
		case 294:
			*bParam4 = 0;
			return __LIB_13__.func_316(iParam2, iParam3, iParam5, iParam0);
		case 300:
			*bParam4 = 0;
			return __LIB_13__.func_315(iParam2, iParam3, iParam5, iParam0);
		case 301:
			*bParam4 = 0;
			return __LIB_21__.func_88(iParam2, iParam3, iParam5, iParam0);
		case 291:
			*bParam4 = 0;
			return __LIB_13__.func_434(iParam2, iParam3, iParam5, iParam0);
		case 299:
			return __LIB_21__.func_88(iParam2, iParam3, iParam5, iParam0);
		case 293:
			return __LIB_13__.func_434(iParam2, iParam3, iParam5, iParam0);
		case 298:
			*bParam4 = 0;
			return __LIB_21__.func_136(iParam2, iParam3, iParam5, iParam0);
		case 296:
			*bParam4 = 0;
			return __LIB_13__.func_313(iParam2, iParam3, iParam5, iParam0);
		case 297:
			return __LIB_21__.func_136(iParam2, iParam3, iParam5, iParam0);
		default:
	}
	return 0;
}

void func_868(int iParam0, int iParam1)//Position - 0xF5703
{
	if ((__LIB_1__.func_145() || !__LIB_19__.func_760(1)) || __LIB_1__.func_297(iParam0) == 3)
	{
		if (!__LIB_6__.func_946(PLAYER::PLAYER_ID(), 0) && !__LIB_6__.func_946(PLAYER::PLAYER_ID(), 3))
		{
			__LIB_4__.func_830(iParam0);
			__LIB_4__.func_826(iParam0, __LIB_6__.func_900(1, 1), __LIB_4__.func_829(), __LIB_4__.func_828(), __LIB_4__.func_827(), iParam1);
		}
	}
}

void func_869(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x1CF0
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (Local_197.f_38.f_1[iParam1 /*21*/].f_8 != -1)
		{
			if (bParam5)
			{
				Var0 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, -5f, 0f) };
				Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var0, Var1, 25, true, joaat("WEAPON_HEAVYSNIPER"), 0, true, true, -1f);
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var1, Var0, 25, true, joaat("WEAPON_ASSAULTSHOTGUN"), 0, true, true, -1f);
			}
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		else
		{
			Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
			__LIB_21__.func_98(Var2, &Var3, &Var4, 0);
			MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var3, Var4, 300, true, joaat("WEAPON_HEAVYSNIPER"), 0, false, false, 80f);
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		if (bParam4)
		{
			__LIB_21__.func_74(iParam0, -1, 0);
		}
	}
}

int func_870(int iParam0)//Position - 0xB5271
{
	if ((__LIB_1__.func_264(iParam0, 0, 1) && __LIB_19__.func_763()) && __LIB_18__.func_185(iParam0, 1))
	{
		return 1;
	}
	return 0;
}

int func_871(int iParam0)//Position - 0x2894B
{
	if (__LIB_21__.func_185(iParam0))
	{
		return 15;
	}
	if (__LIB_21__.func_184(iParam0))
	{
		return 28;
	}
	if (__LIB_21__.func_183(iParam0))
	{
		return 36;
	}
	if (__LIB_6__.func_308(iParam0))
	{
		return 23;
	}
	if (__LIB_6__.func_307(iParam0))
	{
		return 33;
	}
	return -1;
}

Vector3 func_872(int iParam0)//Position - 0x954D6
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	int iVar14;
	if (iParam0 == __LIB_0__.func_160())
	{
	}
	if (__LIB_0__.func_278(iParam0))
	{
		iVar0 = __LIB_1__.func_236(iParam0);
		if (iVar0 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_251(iVar0))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_239[iVar0 /*3*/][1]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_239[iVar0 /*3*/][1], false);
				}
				else
				{
					return Global_2689235[__LIB_1__.func_236(iParam0) /*453*/].f_318.f_11;
				}
			}
			else
			{
				iVar1 = __LIB_2__.func_210(iVar0);
				if (!iVar1 == -1)
				{
					return Global_1946250.f_533[iVar1 /*3*/];
				}
			}
		}
	}
	else if (__LIB_1__.func_348(iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_307))
		{
			return ENTITY::GET_ENTITY_COORDS(Global_2815059.f_307, false);
		}
	}
	else if (__LIB_1__.func_339(iParam0) && !__LIB_7__.func_156(iParam0))
	{
		iVar2 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar2 != __LIB_0__.func_160())
		{
			iVar3 = __LIB_2__.func_210(iVar2);
			if (!iVar3 == -1)
			{
				return Global_1946250.f_533[iVar3 /*3*/];
			}
		}
	}
	else if (__LIB_0__.func_280(iParam0) && !__LIB_7__.func_155(iParam0))
	{
		if (__LIB_0__.func_304(iParam0) && __LIB_1__.func_291())
		{
			return Global_1946250.f_533[Global_2689235[iParam0 /*453*/].f_318.f_6 /*3*/];
		}
		iVar4 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar4 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_233(iVar4))
			{
				iVar5 = __LIB_6__.func_933(iVar4);
				if (iVar5 != -1)
				{
					return Global_1946250.f_533[iVar5 /*3*/];
				}
			}
		}
	}
	else if (__LIB_0__.func_279(iParam0))
	{
		iVar6 = __LIB_1__.func_236(iParam0);
		if (iVar6 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_237(iVar6))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_336[iVar6]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_336[iVar6], false);
				}
				else
				{
					return Global_2689235[__LIB_1__.func_236(iParam0) /*453*/].f_318.f_18;
				}
			}
			else
			{
				iVar7 = __LIB_6__.func_933(iVar6);
				if (!iVar7 == -1)
				{
					return Global_1946250.f_533[iVar7 /*3*/];
				}
			}
		}
	}
	else if (__LIB_1__.func_349(iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_309))
		{
			return ENTITY::GET_ENTITY_COORDS(Global_2815059.f_309, false);
		}
	}
	else if (__LIB_1__.func_105(iParam0) && !__LIB_7__.func_147(iParam0))
	{
		iVar8 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar8 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_186(iVar8))
			{
				iVar9 = __LIB_2__.func_209(iVar8);
				if (iVar9 != -1)
				{
					return __LIB_1__.func_290(iVar9);
				}
			}
		}
	}
	else if (__LIB_1__.func_105(iParam0) && !__LIB_7__.func_147(iParam0))
	{
		iVar10 = Global_2689235[iParam0 /*453*/].f_318.f_9;
		if (iVar10 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_235(iVar10))
			{
				iVar11 = __LIB_6__.func_932(iVar10);
				if (iVar11 != -1)
				{
					return Global_1946250.f_533[iVar11 /*3*/];
				}
			}
		}
	}
	else if (__LIB_1__.func_335(iParam0, 0))
	{
		iVar12 = __LIB_1__.func_236(iParam0);
		if (iVar12 != __LIB_0__.func_160())
		{
			if (!__LIB_1__.func_229(iVar12))
			{
				if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_369[iVar12]))
				{
					return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_369[iVar12], false);
				}
				else
				{
					return Global_1892703[__LIB_1__.func_236(iParam0) /*599*/].f_584;
				}
			}
			else
			{
				iVar13 = __LIB_6__.func_932(iVar12);
				if (!iVar13 == -1)
				{
					return Global_1946250.f_533[iVar13 /*3*/];
				}
			}
		}
	}
	else if (__LIB_0__.func_267(iParam0))
	{
		return -366.7f, -1909.6f, 20f;
	}
	else if (__LIB_2__.func_85(iParam0))
	{
		iVar14 = __LIB_21__.func_181(iParam0);
		if (iVar14 != __LIB_0__.func_160())
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_402[iVar14]))
			{
				return ENTITY::GET_ENTITY_COORDS(Global_2703735.f_402[iVar14], false);
			}
			else
			{
				return Global_1911933[iVar14 /*260*/].f_51;
			}
		}
		else
		{
			return 0f, 0f, 0f;
		}
	}
	if (__LIB_1__.func_105(iParam0))
	{
		return __LIB_1__.func_290(Global_2689235[iParam0 /*453*/].f_318.f_6);
	}
	if (__LIB_8__.func_767(iParam0))
	{
		return 965.8165f, 42.25042f, 122.1267f;
	}
	return Global_1946250.f_533[Global_2689235[iParam0 /*453*/].f_318.f_6 /*3*/];
}

void func_873(int iParam0, bool bParam1, bool bParam2)//Position - 0x97091
{
	struct<14> Var0;
	int iVar1;
	Var0.f_2 = 107890679;
	Var0.f_10 = PLAYER::PLAYER_ID();
	Var0.f_11 = __LIB_0__.func_582();
	Var0.f_4 = iParam0;
	if (bParam1)
	{
		iVar1 = __LIB_0__.func_679(PLAYER::PLAYER_ID());
	}
	else if (bParam2)
	{
		iVar1 = __LIB_26__.func_856(1);
	}
	else
	{
		iVar1 = __LIB_6__.func_900(1, 1);
	}
	__LIB_1__.func_226(Var0, iVar1);
}

Vector3 func_874()//Position - 0xB5938
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3[32];
	int iVar4;
	iVar4 = 0;
	if (Global_1836588)
	{
		iVar0 = 0;
		iVar2 = 0;
	}
	else
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 32);
		iVar2 = iVar0;
	}
	while (iVar1 < 32)
	{
		if (SYSTEM::VMAG(Global_2667225.f_45.f_202[iVar2 /*3*/]) > 0f)
		{
			Var3[iVar4 /*3*/] = { Global_2667225.f_45.f_202[iVar2 /*3*/] };
			iVar4++;
			if (__LIB_13__.func_830(Global_2667225.f_45.f_202[iVar2 /*3*/]))
			{
				return Global_2667225.f_45.f_202[iVar2 /*3*/];
			}
		}
		iVar2++;
		if (iVar2 >= 32)
		{
			iVar2 = 0;
		}
		iVar1++;
	}
	if (iVar4 > 0)
	{
		iVar2 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar4);
		return Var3[iVar2 /*3*/];
	}
	return Global_2676213;
}

int func_875(int iParam0)//Position - 0xD07EE
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (iParam0 != __LIB_0__.func_160())
	{
		if (__LIB_13__.func_258(iParam0, 1))
		{
			if (__LIB_0__.func_357(iParam0))
			{
				if (__LIB_0__.func_581(iParam0))
				{
					iVar0 = Global_1892703[iParam0 /*599*/].f_10.f_76.f_1;
					if (iVar0 != 0)
					{
						return __LIB_2__.func_264(iVar0, iParam0);
					}
				}
				else
				{
					iVar1 = __LIB_0__.func_603(iParam0);
					if (iVar1 != __LIB_0__.func_160())
					{
						iVar2 = __LIB_21__.func_187(iVar1, iParam0);
						if (iVar2 != -1)
						{
							return Global_1892703[iVar1 /*599*/].f_10.f_76.f_3[iVar2];
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_876(int iParam0, int iParam1, bool bParam2)//Position - 0xD6DFA
{
	if (iParam1 == 27)
	{
		if ((__LIB_2__.func_296(iParam0) || __LIB_9__.func_282(iParam0)) || __LIB_7__.func_275(iParam0))
		{
			return 0;
		}
	}
	if (!__LIB_1__.func_353(iParam0))
	{
		return 0;
	}
	if (!__LIB_21__.func_189(iParam0) && !__LIB_9__.func_283(iParam0, bParam2))
	{
		return 0;
	}
	return 1;
}

void func_877(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0xD7145
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (__LIB_0__.func_154(PLAYER::INT_TO_PLAYERINDEX(iVar0), 0, 1))
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (!__LIB_6__.func_768(iVar1, 0))
			{
				if (__LIB_21__.func_189(iVar1) || __LIB_9__.func_283(iVar1, bParam4))
				{
					if (__LIB_6__.func_941(iVar1, iParam1, 0))
					{
						(*iParam0)[iVar0] = *iParam2;
						*iParam2++;
						*iParam3++;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_878(int iParam0, int iParam1)//Position - 0xF4F60
{
	if (!__LIB_1__.func_145())
	{
		return;
	}
	if (!__LIB_2__.func_275(-1))
	{
		return;
	}
	if (iParam0 != -1)
	{
		__LIB_4__.func_831(iParam0);
	}
	__LIB_13__.func_413(iParam1);
	__LIB_26__.func_868(256, -1);
}

void func_879(int iParam0, struct<3> Param1)//Position - 0xF7974
{
	struct<4> Var0;
	int iVar1;
	Var0.f_3 = -1;
	Var0.f_3.f_1 = -1;
	Var0.f_3.f_2 = -1000;
	Var0.f_0 = 997339103;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam0;
	Var0.f_3 = { Param1 };
	iVar1 = __LIB_6__.func_900(1, 1);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 6, iVar1);
	}
}

void func_880()//Position - 0xFB0B5
{
	int iVar0;
	if (__LIB_11__.func_76())
	{
		__LIB_10__.func_976(8);
		__LIB_10__.func_976(9);
		__LIB_10__.func_976(10);
		__LIB_10__.func_976(12);
		__LIB_10__.func_976(13);
		__LIB_10__.func_976(14);
		__LIB_10__.func_976(19);
		__LIB_10__.func_976(20);
		__LIB_10__.func_976(21);
		__LIB_10__.func_976(22);
		__LIB_10__.func_976(23);
		__LIB_10__.func_976(24);
		__LIB_10__.func_976(25);
		__LIB_10__.func_976(26);
		__LIB_10__.func_976(15);
		__LIB_10__.func_976(16);
		__LIB_10__.func_976(17);
		__LIB_10__.func_976(18);
		__LIB_10__.func_976(35);
		__LIB_10__.func_976(45);
		__LIB_10__.func_976(46);
		if (__LIB_10__.func_924(11))
		{
			__LIB_10__.func_976(11);
			iVar0 = __LIB_1__.func_556(7229, -1, 0);
			MISC::SET_BIT(&iVar0, 2);
			__LIB_1__.func_597(7229, iVar0, -1, 1, 0);
		}
	}
	if (__LIB_10__.func_924(48))
	{
		if (__LIB_3__.func_640(151, 3))
		{
			__LIB_6__.func_826(151, 3);
		}
		__LIB_10__.func_976(48);
	}
	if (__LIB_10__.func_924(49))
	{
		if (__LIB_3__.func_640(152, 3))
		{
			__LIB_6__.func_826(152, 3);
		}
		__LIB_10__.func_976(49);
	}
	if (__LIB_10__.func_924(50))
	{
		if (__LIB_3__.func_640(153, 3))
		{
			__LIB_6__.func_826(153, 3);
		}
		__LIB_10__.func_976(50);
	}
	if (__LIB_10__.func_924(51))
	{
		if (__LIB_3__.func_640(__LIB_21__.func_191(), 3))
		{
			__LIB_6__.func_826(__LIB_21__.func_191(), 3);
		}
		__LIB_10__.func_976(51);
	}
}

void func_881(int iParam0, struct<3> Param1, var uParam2)//Position - 0x22340
{
	struct<26> Var0;
	int iVar1;
	int iVar2;
	if (!__LIB_6__.func_489(Param1))
	{
		return;
	}
	if (*uParam2 > 18)
	{
		return;
	}
	if (*uParam2 <= 0)
	{
		return;
	}
	Var0.f_3 = -1;
	Var0.f_3.f_1 = -1;
	Var0.f_3.f_2 = -1000;
	Var0.f_6 = 18;
	Var0.f_0 = -1247260598;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam0;
	Var0.f_3 = { Param1 };
	Var0.f_25 = *uParam2;
	iVar1 = 0;
	while (iVar1 < *uParam2)
	{
		Var0.f_6[iVar1] = (*uParam2)[iVar1];
		iVar1++;
	}
	iVar2 = __LIB_6__.func_900(1, 1);
	if (!iVar2 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 26, iVar2);
	}
}

int func_882(int iParam0)//Position - 0xBBE14
{
	switch (iParam0)
	{
		case 13:
		case 23:
		case 42:
			__LIB_13__.func_774(0);
			return 1;
		case 18:
		case 46:
			__LIB_13__.func_774(1);
			return 1;
		case 9:
			__LIB_13__.func_774(15);
			return 1;
		case 5:
			__LIB_13__.func_774(9);
			return 1;
		case 8:
		case 38:
			__LIB_13__.func_774(2);
			return 1;
		case 12:
			__LIB_13__.func_774(8);
			__LIB_13__.func_774(9);
			return 1;
		case 7:
			__LIB_13__.func_774(7);
			return 1;
		case 32:
			__LIB_13__.func_774(11);
			return 1;
		case 55:
			__LIB_13__.func_774(22);
			return 1;
		case 11:
		case 6:
		case 29:
		case 27:
		case 26:
		case 28:
		case 30:
		case 36:
		case 44:
		case 51:
		case 54:
			__LIB_21__.func_195();
			return 1;
		case 33:
			__LIB_21__.func_195();
			__LIB_9__.func_81(13, 1);
			return 1;
		default:
	}
	return 0;
}

int func_883(int iParam0)//Position - 0xBC030
{
	switch (iParam0)
	{
		case 13:
		case 23:
		case 42:
			__LIB_21__.func_196(0);
			return 1;
		case 18:
		case 46:
			__LIB_21__.func_196(1);
			return 1;
		case 9:
			__LIB_21__.func_196(15);
			return 1;
		case 5:
			__LIB_21__.func_196(9);
			return 1;
		case 8:
		case 38:
			__LIB_21__.func_196(2);
			return 1;
		case 12:
			__LIB_21__.func_196(8);
			__LIB_21__.func_196(9);
			return 1;
		case 7:
			__LIB_21__.func_196(7);
			return 1;
		case 32:
			__LIB_21__.func_196(11);
			return 1;
		case 55:
			__LIB_21__.func_196(22);
			return 1;
		case 11:
		case 6:
		case 29:
		case 27:
		case 26:
		case 28:
		case 30:
		case 36:
		case 44:
		case 51:
		case 54:
			__LIB_13__.func_773(1);
			return 1;
		case 33:
			__LIB_13__.func_773(1);
			__LIB_9__.func_81(13, 0);
			return 1;
		default:
	}
	return 0;
}

void func_884(int iParam0)//Position - 0xF008D
{
	__LIB_8__.func_520(iParam0, 7231);
}

void func_885()//Position - 0x468
{
	if (__LIB_13__.func_439() == -1)
	{
		return;
	}
	if (Local_213.f_82 == 0)
	{
		return;
	}
	Call_Loc(Local_213.f_82);
	if (!StackVal)
	{
		return;
	}
	if (!__LIB_21__.func_205(5) && Local_213.f_82.f_1 != 0)
	{
		Call_Loc(Local_213.f_82.f_1);
		if (StackVal)
		{
			__LIB_0__.func_495(&(Local_367.f_106), 0, 0);
			__LIB_21__.func_207(5);
		}
	}
	if (!__LIB_0__.func_649(&(Local_367.f_106)))
	{
		__LIB_0__.func_580(&(Local_367.f_106), 0, 0);
	}
	else if (__LIB_0__.func_649(&(Local_367.f_106)))
	{
		if (__LIB_2__.func_47(&(Local_367.f_106), __LIB_13__.func_439(), 0))
		{
			if (Local_213.f_82.f_3 != 0)
			{
				Call_Loc(Local_213.f_82.f_3);
			}
			__LIB_13__.func_850(1);
		}
	}
}

void func_886(int iParam0, int iParam1, int iParam2)//Position - 0xE63
{
	if (__LIB_19__.func_760(1))
	{
		__LIB_13__.func_330(Local_334.f_0, func_45(1), iParam0, iParam1, iParam2);
	}
	else
	{
		__LIB_13__.func_330(Local_334.f_0, __LIB_0__.func_679(bLocal_324), iParam0, iParam1, iParam2);
	}
}

int func_887(int iParam0, int iParam1)//Position - 0x21FB
{
	if (__LIB_13__.func_441(iParam0, 9))
	{
		return 1;
	}
	if (__LIB_12__.func_626(iParam1))
	{
		return 1;
	}
	return 0;
}

void func_888(int iParam0, int iParam1)//Position - 0x2397
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<9> Var3;
	if (__LIB_13__.func_858(iParam0, 19))
	{
		return;
	}
	if (Local_196.f_38.f_1[iParam0 /*21*/].f_20 >= 0.75f)
	{
		PED::SET_PED_SPHERE_DEFENSIVE_AREA(iParam1, ENTITY::GET_ENTITY_COORDS(iParam1, false), Local_196.f_38.f_1[iParam0 /*21*/].f_20, false, false);
		return;
	}
	else if (Local_196.f_38.f_1[iParam0 /*21*/].f_20 < 0.75f && Local_196.f_38.f_1[iParam0 /*21*/].f_20 > -1f)
	{
	}
	iVar0 = Local_196.f_38.f_1[iParam0 /*21*/].f_14;
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = Local_196.f_38.f_23[iVar0 /*5*/].f_1[iVar1];
		if (iVar2 != -1)
		{
			if (__LIB_21__.func_213(iVar2, 4))
			{
				Var3 = { __LIB_13__.func_446(iVar2) };
				PED::SET_PED_ANGLED_DEFENSIVE_AREA(iParam1, Var3.f_2, Var3.f_5, Var3.f_8, false, false);
			}
		}
		iVar1++;
	}
}

void func_889(int iParam0, int iParam1)//Position - 0x26C0
{
	int iVar0;
	int iVar1;
	if (__LIB_13__.func_865(iParam0))
	{
		NETWORK::NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(NETWORK::NET_TO_ENT(Local_367.f_22[iParam0 /*24*/]), true);
	}
	if (!__LIB_10__.func_952(iParam1))
	{
		PED::SET_PED_CONFIG_FLAG(iParam1, 324, true);
	}
	if (Local_196.f_38.f_1[iParam0 /*21*/].f_2 == joaat("MP_G_M_Pros_01"))
	{
		switch (PED::GET_PED_DRAWABLE_VARIATION(iParam1, 0))
		{
			case 0:
				AUDIO::SET_PED_VOICE_GROUP(iParam1, joaat("mp_blackops_black_pvg"));
				break;
			case 1:
				AUDIO::SET_PED_VOICE_GROUP(iParam1, joaat("mp_blackops_white_pvg"));
				break;
			case 2:
				AUDIO::SET_PED_VOICE_GROUP(iParam1, joaat("mp_blackops_latino_pvg"));
				break;
			}
	}
	if (Local_196.f_38.f_1[iParam0 /*21*/].f_12 != -1)
	{
		__LIB_13__.func_857(iParam0, 2);
		PHYSICS::ACTIVATE_PHYSICS(iParam1);
		ENTITY::SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(iParam1, true);
		ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(iParam1, true, 1);
	}
	if (__LIB_13__.func_441(iParam0, 11))
	{
		NETWORK::NETWORK_FADE_IN_ENTITY(iParam1, true, 1);
	}
	Stack.Push(iParam0);
	Call_Loc(Local_213.f_156.f_179);
	iVar0 = StackVal;
	if (iVar0 != 0)
	{
		if (iVar0 == joaat("WEAPON_UNARMED"))
		{
			WEAPON::REMOVE_ALL_PED_WEAPONS(iParam1, true);
		}
		else
		{
			WEAPON::GIVE_WEAPON_TO_PED(iParam1, iVar0, 9999999, __LIB_21__.func_215(iParam0), true);
		}
	}
	PED::SET_PED_HIGHLY_PERCEPTIVE(iParam1, true);
	PED::SET_PED_TARGET_LOSS_RESPONSE(iParam1, 1);
	PED::SET_PED_SEEING_RANGE(iParam1, Local_196.f_38.f_1[iParam0 /*21*/].f_17);
	PED::SET_PED_VISUAL_FIELD_CENTER_ANGLE(iParam1, Local_196.f_38.f_1[iParam0 /*21*/].f_18);
	PED::SET_PED_HEARING_RANGE(iParam1, Local_196.f_38.f_1[iParam0 /*21*/].f_19);
	PED::SET_PED_CONFIG_FLAG(iParam1, 392, true);
	iVar1 = __LIB_13__.func_448(iParam0);
	if (iVar1 != joaat("COP"))
	{
		PED::SET_PED_RELATIONSHIP_GROUP_HASH(iParam1, iVar1);
	}
}

void func_890(int iParam0, int iParam1)//Position - 0x2D7D
{
	var uVar0;
	var uVar1;
	NETWORK::NETWORK_SET_OBJECT_SCOPE_DISTANCE(NETWORK::NET_TO_OBJ(Local_367.f_56[iParam0 /*5*/]), 4.2E-43f);
	ENTITY::SET_ENTITY_PROOFS(iParam1, __LIB_13__.func_450(iParam0, 17), __LIB_13__.func_450(iParam0, 18), __LIB_13__.func_450(iParam0, 19), __LIB_13__.func_450(iParam0, 20), __LIB_13__.func_450(iParam0, 21), false, false, false);
	__LIB_21__.func_221(iParam0, 0);
	if (__LIB_13__.func_450(iParam0, 32))
	{
		ENTITY::SET_ENTITY_INVINCIBLE(iParam1, true);
		ENTITY::SET_ENTITY_VISIBLE(iParam1, false, false);
		ENTITY::FREEZE_ENTITY_POSITION(iParam1, true);
		ENTITY::SET_ENTITY_COLLISION(iParam1, false, false);
	}
	if (!__LIB_13__.func_450(iParam0, 1))
	{
		OBJECT::PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY(NETWORK::NET_TO_OBJ(Local_367.f_56[iParam0 /*5*/]));
	}
	if (__LIB_13__.func_450(iParam0, 2))
	{
		NETWORK::SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(Local_367.f_56[iParam0 /*5*/], true, true);
		NETWORK::SET_NETWORK_ID_VISIBLE_IN_CUTSCENE_REMAIN_HACK(Local_367.f_56[iParam0 /*5*/], 1);
		NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(iParam1, true, true);
	}
	if (__LIB_13__.func_450(iParam0, 3))
	{
		ENTITY::SET_ENTITY_COLLISION(iParam1, false, false);
	}
	if (__LIB_13__.func_450(iParam0, 4))
	{
		ENTITY::SET_ENTITY_LIGHTS(iParam1, true);
	}
	if (__LIB_13__.func_450(iParam0, 5))
	{
		ENTITY::SET_CAN_CLIMB_ON_ENTITY(iParam1, false);
	}
	if (__LIB_13__.func_450(iParam0, 6))
	{
		ENTITY::SET_ENTITY_DYNAMIC(iParam1, true);
	}
	if (__LIB_13__.func_450(iParam0, 7))
	{
		ENTITY::APPLY_FORCE_TO_ENTITY(iParam1, 0, 0f, 0f, 1f, 0f, 0f, 0f, 0, false, false, false, false, true);
	}
	if (__LIB_13__.func_450(iParam0, 15))
	{
		ENTITY::SET_ENTITY_LOD_DIST(NETWORK::NET_TO_OBJ(Local_367.f_56[iParam0 /*5*/]), 1200);
	}
	if (__LIB_13__.func_450(iParam0, 8))
	{
		ENTITY::FREEZE_ENTITY_POSITION(iParam1, true);
	}
	if (__LIB_13__.func_450(iParam0, 9))
	{
		ENTITY::SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS(NETWORK::NET_TO_OBJ(Local_367.f_56[iParam0 /*5*/]), true);
	}
	if (__LIB_13__.func_450(iParam0, 34))
	{
		ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iParam1, __LIB_13__.func_452(iParam0), false, false, true);
	}
	else if (__LIB_13__.func_450(iParam0, 16))
	{
		ENTITY::SET_ENTITY_COORDS(iParam1, __LIB_13__.func_452(iParam0), true, false, false, true);
	}
	if (__LIB_13__.func_450(iParam0, 33))
	{
		ENTITY::SET_ENTITY_ROTATION(iParam1, __LIB_13__.func_451(iParam0), 2, true);
	}
	if (__LIB_13__.func_450(iParam0, 10))
	{
		ENTITY::SET_ENTITY_INVINCIBLE(iParam1, true);
	}
	if (__LIB_13__.func_450(iParam0, 11))
	{
		ENTITY::SET_PICK_UP_BY_CARGOBOB_DISABLED(iParam1, true);
	}
	if (__LIB_21__.func_220(iParam0))
	{
		NETWORK::NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(iParam1, true);
	}
	if (__LIB_13__.func_450(iParam0, 13))
	{
		ENTITY::SET_ENTITY_VISIBLE(iParam1, false, false);
	}
	if (__LIB_13__.func_450(iParam0, 14))
	{
		Stack.Push(Local_213.f_407.f_24 != 0);
		Stack.Push(iParam0);
		Stack.Push(&uVar0);
		Stack.Push(&uVar1);
		Call_Loc(Local_213.f_407.f_24);
		if (StackVal && StackVal)
		{
			AUDIO::LINK_STATIC_EMITTER_TO_ENTITY(&uVar0, iParam1);
			AUDIO::SET_STATIC_EMITTER_ENABLED(&uVar0, true);
			AUDIO::SET_EMITTER_RADIO_STATION(&uVar0, &uVar1);
		}
	}
	if (Local_213.f_407.f_33 != 0)
	{
		Stack.Push(iParam0);
		Stack.Push(iParam1);
		Call_Loc(Local_213.f_407.f_33);
	}
}

void func_891(int iParam0, int iParam1)//Position - 0x31E4
{
	if (Local_196.f_85.f_1[iParam0 /*12*/].f_11 == -1)
	{
		return;
	}
	if (__LIB_13__.func_874(iParam0) > 1 && __LIB_13__.func_874(iParam0) < 3)
	{
		if (__LIB_21__.func_222(iParam0, iParam1))
		{
			__LIB_13__.func_871(iParam0, 8);
		}
		else
		{
			__LIB_21__.func_221(iParam0, 8);
		}
	}
}

void func_892(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x1484F
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_21__.func_229(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_893(struct<3> Param0, int iParam1)//Position - 0x1724A
{
	int iVar0;
	int iVar1;
	int iVar2;
	*iParam1 = -1;
	iVar2 = __LIB_7__.func_135(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_21__.func_230(iVar1))
			{
				if (__LIB_7__.func_135(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*iParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_894(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1E2F5
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_21__.func_230(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

int func_895(struct<2> Param0, var uParam1, bool bParam2, float fParam3)//Position - 0x1F8BC
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	iVar3 = 0;
	iVar0 = 83;
	while (iVar0 <= 84 + 1)
	{
		if (bParam2)
		{
			if (__LIB_21__.func_230(iVar0))
			{
				fVar1 = fParam3;
			}
			else
			{
				fVar1 = 0f;
			}
		}
		else
		{
			fVar1 = fParam3;
		}
		fVar2 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
		if (fVar2 < fVar1)
		{
			iVar3++;
		}
		iVar0++;
	}
	if (iVar3 > 0)
	{
		return 1;
	}
	return 0;
}

void func_896()//Position - 0x20591
{
	if (Local_196.f_19 <= 0)
	{
		return;
	}
	if (!__LIB_21__.func_236())
	{
		return;
	}
	Stack.Push(Local_213.f_114.f_36 != 0);
	Call_Loc(Local_213.f_114.f_36);
	if (StackVal && StackVal)
	{
		return;
	}
	if (__LIB_13__.func_887())
	{
		if (__LIB_21__.func_235())
		{
			__LIB_13__.func_850(5);
		}
	}
	else if (__LIB_21__.func_234())
	{
		__LIB_13__.func_850(5);
	}
}

int func_897(int iParam0)//Position - 0x206E4
{
	int iVar0;
	if (__LIB_21__.func_237(iParam0))
	{
		iVar0 = __LIB_13__.func_884(iParam0);
		return (Local_367.f_47[iVar0 /*8*/].f_1 == 5 || __LIB_13__.func_886(iParam0, 0));
	}
	return 1;
}

void func_898(int iParam0, struct<3> Param1)//Position - 0x2116B
{
	if (__LIB_13__.func_889(iParam0))
	{
		__LIB_13__.func_890(iParam0, 29);
		if (iParam0 != __LIB_13__.func_892(__LIB_13__.func_884(iParam0)))
		{
			__LIB_13__.func_890(iParam0, 40);
		}
	}
	else if (!__LIB_13__.func_464(iParam0, 7))
	{
		__LIB_13__.func_890(iParam0, 39);
	}
	NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(Local_367.f_2[iParam0], true);
	ENTITY::SET_ENTITY_LOD_DIST(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), 1200);
	ENTITY::SET_ENTITY_HEALTH(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), 50, 0);
	ENTITY::SET_ENTITY_INVINCIBLE(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	ENTITY::SET_ENTITY_PROOFS(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true, true, false, true, true, true, true, false);
	ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(NETWORK::NET_TO_ENT(Local_367.f_2[iParam0]), true, 1);
	ENTITY::SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(NETWORK::NET_TO_ENT(Local_367.f_2[iParam0]), true);
	OBJECT::ALLOW_PORTABLE_PICKUP_TO_MIGRATE_TO_NON_PARTICIPANTS(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	OBJECT::SET_OBJECT_FORCE_VEHICLES_TO_AVOID(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	if (__LIB_0__.func_114())
	{
		OBJECT::FORCE_ACTIVATE_PHYSICS_ON_UNFIXED_PICKUP(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	}
	if (__LIB_21__.func_239(iParam0))
	{
		ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	}
	else
	{
		__LIB_13__.func_890(iParam0, 28);
	}
	if (!__LIB_13__.func_464(iParam0, 1))
	{
		OBJECT::PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]));
	}
	if (__LIB_13__.func_464(iParam0, 2))
	{
		ENTITY::SET_ENTITY_COORDS(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), Param1, true, false, false, true);
	}
	if (__LIB_13__.func_464(iParam0, 3))
	{
		PHYSICS::ACTIVATE_PHYSICS(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]));
		OBJECT::SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), true);
	}
	if (__LIB_13__.func_464(iParam0, 4))
	{
		ENTITY::SET_ENTITY_DYNAMIC(NETWORK::NET_TO_ENT(Local_367.f_2[iParam0]), true);
	}
	if ((__LIB_13__.func_464(iParam0, 6) || __LIB_13__.func_464(iParam0, 7)) || __LIB_13__.func_889(iParam0))
	{
		ENTITY::SET_ENTITY_VISIBLE(NETWORK::NET_TO_OBJ(Local_367.f_2[iParam0]), false, false);
	}
	if (Local_196.f_19.f_5[iParam0 /*13*/].f_12 != -1)
	{
		__LIB_13__.func_890(iParam0, 23);
	}
	if (__LIB_21__.func_238(iParam0))
	{
		NETWORK::NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(NETWORK::NET_TO_ENT(Local_367.f_2[iParam0]), true);
	}
	if (__LIB_13__.func_464(iParam0, 9) || Local_213.f_114.f_38 != 0)
	{
		__LIB_13__.func_891(iParam0, 1, 0);
	}
}

Vector3 func_899(int iParam0)//Position - 0x21488
{
	if (__LIB_13__.func_466(iParam0))
	{
		Stack.Push(iParam0);
		Call_Loc(Local_213.f_114.f_27);
		return StackVal, StackVal, StackVal;
	}
	else if (__LIB_21__.func_237(iParam0))
	{
		return Local_196.f_67.f_1[__LIB_13__.func_884(iParam0) /*15*/].f_4 + __LIB_13__.func_338(iParam0, Local_196.f_67.f_1[__LIB_13__.func_884(iParam0) /*15*/].f_3);
	}
	return Local_196.f_19.f_5[iParam0 /*13*/].f_3;
}

void func_900()//Position - 0x21961
{
	Local_367.f_92 = __LIB_19__.func_834() + 1;
	Global_1892703[bLocal_324 /*599*/].f_10.f_391 = Local_367.f_92;
}

Vector3 func_901(int iParam0)//Position - 0x21BFE
{
	struct<3> Var0;
	struct<3> Var1;
	if (bLocal_321 && PED::IS_PED_IN_ANY_VEHICLE(iLocal_326, false))
	{
		if (VEHICLE::IS_THIS_MODEL_A_HELI(iLocal_331))
		{
			Var0 = { __LIB_21__.func_107(iParam0) };
			if (!__LIB_0__.func_86(Var0))
			{
				return Var0;
			}
		}
		Var1 = { __LIB_13__.func_347(iParam0) };
		if (!__LIB_0__.func_86(Var1))
		{
			return Var1;
		}
	}
	return __LIB_13__.func_259(iParam0);
}

float func_902(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x23FF0
{
	var uVar0;
	var uVar1;
	if (!__LIB_21__.func_242(iParam0, iParam1, bParam3))
	{
		return 1f;
	}
	uVar0 = __LIB_13__.func_425(iParam0, iParam1);
	uVar1 = __LIB_13__.func_424(iParam0, iParam1);
	switch (iParam2)
	{
		case 0:
			return uVar0;
		case 1:
			return uVar1;
		default:
	}
	return 1f;
}

void func_903()//Position - 0x275E3
{
	if (!__LIB_13__.func_482(30))
	{
		if (Local_213.f_91 != 0)
		{
			Call_Loc(Local_213.f_91);
			__LIB_21__.func_130(StackVal);
		}
		__LIB_13__.func_468(30);
	}
}

void func_904(bool bParam0, int iParam1)//Position - 0x2FC76
{
	if (!__LIB_0__.func_114())
	{
		return;
	}
	if (bParam0)
	{
		if (__LIB_13__.func_886(iParam1, 32))
		{
			__LIB_21__.func_79(1);
		}
		__LIB_13__.func_349(Local_196.f_19.f_5[iParam1 /*13*/].f_2);
	}
	else
	{
		__LIB_21__.func_79(0);
		__LIB_13__.func_349(0);
	}
}

int func_905(int iParam0)//Position - 0x30061
{
	var uVar0;
	int iVar1;
	iVar1 = __LIB_21__.func_246(iParam0);
	if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(iVar1))
	{
		return NETWORK::NET_TO_VEH(iVar1);
	}
	return uVar0;
}

int func_906(int iParam0)//Position - 0x30085
{
	if (!__LIB_13__.func_889(iParam0))
	{
		return 0;
	}
	if (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(__LIB_21__.func_246(iParam0)))
	{
		return 0;
	}
	if ((__LIB_13__.func_886(iParam0, 35) || __LIB_13__.func_886(iParam0, 36)) || __LIB_13__.func_886(iParam0, 37))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(NETWORK::NET_TO_ENT(__LIB_21__.func_246(iParam0)), false))
	{
		return 0;
	}
	return 1;
}

float func_907(int iParam0)//Position - 0x320C0
{
	if (Local_213.f_114.f_24 != 0)
	{
		Stack.Push(iParam0);
		Call_Loc(Local_213.f_114.f_24);
		return StackVal;
	}
	if (__LIB_21__.func_237(iParam0))
	{
		return 50f;
	}
	return 15f;
}

void func_908(int iParam0, bool bParam1, bool bParam2)//Position - 0x3236A
{
	struct<14> Var0;
	int iVar1;
	Var0.f_2 = 107890679;
	Var0.f_10 = PLAYER::PLAYER_ID();
	Var0.f_11 = __LIB_0__.func_582();
	Var0.f_4 = iParam0;
	if (bParam1)
	{
		iVar1 = __LIB_0__.func_679(PLAYER::PLAYER_ID());
	}
	else if (bParam2)
	{
		iVar1 = __LIB_26__.func_795(1);
	}
	else
	{
		iVar1 = __LIB_7__.func_213(1, 1);
	}
	__LIB_1__.func_226(Var0, iVar1);
}

int func_909(int iParam0)//Position - 0x323F2
{
	if (!__LIB_14__.func_640(iParam0))
	{
		return 0;
	}
	Stack.Push(iParam0);
	Call_Loc(Local_213.f_114.f_39);
	if (!StackVal)
	{
		return 0;
	}
	if (__LIB_2__.func_47(&(Local_367.f_2.f_18), __LIB_21__.func_149(), 0))
	{
		return 1;
	}
	return 0;
}

int func_910()//Position - 0xB89F9
{
	int iVar0;
	iVar0 = __LIB_13__.func_914();
	if (iVar0 != -1)
	{
		__LIB_6__.func_834(NETWORK::NET_TO_PED(Local_367.f_22[iVar0 /*24*/]), __LIB_13__.func_364(iVar0), 35);
		return 1;
	}
	return 0;
}

void func_911()//Position - 0xBB199
{
	int iVar0;
	int iVar1;
	if (!__LIB_0__.func_114())
	{
		return;
	}
	if (__LIB_21__.func_205(12))
	{
		if (!__LIB_13__.func_355())
		{
			if (!__LIB_13__.func_482(54))
			{
				__LIB_11__.func_53();
				__LIB_13__.func_297(1, 2147483647, 1);
				__LIB_13__.func_468(54);
				__LIB_0__.func_151("BBH_VISWARN" /* GXT: WARNING: You are visible ~HUD_COLOUR_RED~~BLIP_SIGHTSEER~~s~ to all players in session. */, -1);
			}
		}
		else if (__LIB_13__.func_482(54))
		{
			__LIB_11__.func_54();
			__LIB_13__.func_297(0, -1, 0);
			__LIB_13__.func_475(54);
		}
	}
	if (__LIB_0__.func_649(&(Local_367.f_2.f_18)))
	{
		if (!__LIB_2__.func_47(&(Local_367.f_2.f_18), __LIB_21__.func_149(), 0))
		{
			iVar0 = (__LIB_21__.func_149() - __LIB_1__.func_295(&(Local_367.f_2.f_18), 0, 0));
			if (iVar0 <= 0)
			{
				return;
			}
			iVar1 = 6;
			if (iVar0 > 5000)
			{
				iVar1 = 1;
			}
			__LIB_6__.func_929(iVar0, "GR_GLBPNG" /* GXT: GLOBAL SIGNAL */, 0, 0, -1, 0, 6, 0, iVar1, 0, 0, 0, iVar1, 0, 0, 0, 0, -1);
		}
	}
}

void func_912()//Position - 0xBBFF4
{
	if (__LIB_13__.func_549())
	{
		if (PLAYER::GET_PLAYER_WANTED_LEVEL(bLocal_324) < __LIB_13__.func_444())
		{
			__LIB_13__.func_910(bLocal_324, __LIB_13__.func_444(), 0, 0);
		}
		PLAYER::SUPPRESS_LOSING_WANTED_LEVEL_IF_HIDDEN_THIS_FRAME(bLocal_324);
		PLAYER::UPDATE_WANTED_POSITION_THIS_FRAME(bLocal_324);
		__LIB_13__.func_468(17);
	}
	else if (__LIB_13__.func_482(17))
	{
		if (__LIB_13__.func_548())
		{
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(bLocal_324) > 0)
			{
				PLAYER::SET_PLAYER_WANTED_LEVEL(bLocal_324, 0, false);
			}
		}
		__LIB_13__.func_475(17);
	}
}

int func_913(int iParam0, bool bParam1)//Position - 0xBC371
{
	if (__LIB_13__.func_444() <= 0 && !bParam1)
	{
		return 0;
	}
	if (__LIB_21__.func_329(bLocal_324, 0, -1))
	{
		return 0;
	}
	if (PLAYER::GET_PLAYER_WANTED_LEVEL(bLocal_324) == iParam0)
	{
		return 0;
	}
	if (__LIB_13__.func_371() && !bParam1)
	{
		return 0;
	}
	Stack.Push(Local_213.f_64.f_3 != 0);
	Stack.Push(bParam1);
	Call_Loc(Local_213.f_64.f_3);
	if (StackVal && !StackVal)
	{
		return 0;
	}
	return 1;
}

int func_914(int iParam0, int iParam1)//Position - 0xBD714
{
	if (__LIB_13__.func_855(Local_196.f_38.f_1[iParam0 /*21*/].f_14))
	{
		if ((__LIB_2__.func_47(&(Local_367.f_22[iParam0 /*24*/].f_13), Local_367.f_22[iParam0 /*24*/].f_15, 0) || __LIB_14__.func_657(iParam0)) || iParam1)
		{
			return 1;
		}
	}
	return 0;
}

void func_915(int iParam0, int iParam1, int iParam2)//Position - 0xBE8B8
{
	switch (iParam0)
	{
		case 0:
			if (__LIB_13__.func_445(8))
			{
				__LIB_21__.func_271(iParam0, iParam1, iParam2, 6, 1056964608);
			}
			break;
		case 1:
			if (__LIB_13__.func_445(10))
			{
				__LIB_21__.func_271(iParam0, iParam1, iParam2, 6, 1056964608);
			}
			break;
		case 2:
			if (__LIB_13__.func_445(9))
			{
				__LIB_21__.func_271(iParam0, iParam1, iParam2, 6, 1056964608);
			}
			break;
	}
}

void func_916(int iParam0, int iParam1)//Position - 0xBF64D
{
	Stack.Push(!__LIB_13__.func_456(iParam0, 3));
	Stack.Push(iParam0);
	Stack.Push(iParam1);
	Call_Loc(Local_213.f_352.f_31);
	if (StackVal || !StackVal)
	{
		return;
	}
	if (__LIB_6__.func_924(Local_367.f_47[iParam0 /*8*/]))
	{
		__LIB_13__.func_928(iParam0, iParam1);
	}
}

void func_917(bool bParam0)//Position - 0xC6366
{
	int iVar0;
	if (bParam0)
	{
		iVar0 = 0;
		while (iVar0 < Local_196.f_111)
		{
			__LIB_13__.func_936(bParam0, iVar0);
			iVar0++;
		}
	}
	else
	{
		iVar0 = (Local_196.f_111 - 1);
		while (iVar0 >= 0)
		{
			__LIB_13__.func_936(bParam0, iVar0);
			iVar0 = (iVar0 + -1);
		}
	}
}

void func_918(int iParam0, int iParam1)//Position - 0xC89A4
{
	int iVar0;
	struct<3> Var1;
	iVar0 = __LIB_13__.func_937(iParam0, iParam1);
	if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(NETWORK::NET_TO_VEH(iVar0), false))
		{
			if (TASK::GET_ACTIVE_VEHICLE_MISSION_TYPE(NETWORK::NET_TO_VEH(iVar0)) != 21)
			{
				if (PED::IS_PED_IN_ANY_PLANE(iParam1))
				{
					if (__LIB_6__.func_924(Local_367.f_22[iParam0 /*24*/]))
					{
						if (Local_213.f_156.f_2.f_52.f_1 != 0)
						{
							Stack.Push(iParam0);
							Call_Loc(Local_213.f_156.f_2.f_52.f_1);
						}
						Var1 = { __LIB_13__.func_607(iParam0, iParam1) };
						TASK::TASK_PLANE_MISSION(iParam1, NETWORK::NET_TO_VEH(iVar0), 0, 0, Var1, 21, 50f, 0f, -1f, 0f, 0f, true);
					}
				}
			}
		}
	}
}

void func_919(int iParam0, int iParam1)//Position - 0xC941D
{
	__LIB_13__.func_938(iParam0, iParam1, 1);
}

void func_920(int iParam0, int iParam1)//Position - 0xC9924
{
	struct<3> Var0;
	if (__LIB_6__.func_924(Local_367.f_22[iParam0 /*24*/]))
	{
		if (__LIB_0__.func_583(iParam1, joaat("SCRIPT_TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED"), 1))
		{
			if (Local_367.f_22[iParam0 /*24*/].f_6 != Local_367.f_22[iParam0 /*24*/].f_5 && !PED::IS_PED_RUNNING_RAGDOLL_TASK(iParam1))
			{
				TASK::CLEAR_PED_TASKS(iParam1);
			}
		}
		else
		{
			if (Local_367.f_22[iParam0 /*24*/].f_6 == -1)
			{
				TASK::CLEAR_PED_TASKS(iParam1);
			}
			if (__LIB_13__.func_858(iParam0, 19))
			{
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam1, true);
			}
			Var0 = { __LIB_13__.func_939(iParam0, -1) };
			TASK::TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(iParam1, Var0, __LIB_13__.func_632(iParam0), __LIB_13__.func_940(iParam0), true, __LIB_13__.func_631(iParam0), 50f, __LIB_13__.func_630(iParam0), 10f, __LIB_13__.func_629(iParam0), __LIB_13__.func_628(iParam0), __LIB_13__.func_625(iParam0));
			if (Local_367.f_22[iParam0 /*24*/].f_6 != Local_367.f_22[iParam0 /*24*/].f_5)
			{
				__LIB_13__.func_627(Local_367.f_22[iParam0 /*24*/].f_5, iParam0);
			}
		}
	}
}

void func_921(int iParam0, int iParam1)//Position - 0xCA05F
{
	int iVar0;
	if (__LIB_6__.func_924(Local_367.f_22[iParam0 /*24*/]))
	{
		if (__LIB_13__.func_941(iParam0, &iVar0))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (PED::IS_PED_IN_VEHICLE(iParam1, iVar0, false))
				{
					if (TASK::GET_ACTIVE_VEHICLE_MISSION_TYPE(iVar0) != 1)
					{
						TASK::TASK_VEHICLE_MISSION(iParam1, iVar0, 0, 1, __LIB_13__.func_639(iParam0), __LIB_13__.func_638(iParam0), -1f, -1f, false);
					}
				}
				else if (TASK::GET_SCRIPT_TASK_STATUS(iParam1, joaat("SCRIPT_TASK_ENTER_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(iParam1, joaat("SCRIPT_TASK_ENTER_VEHICLE")) != 0)
				{
					TASK::TASK_ENTER_VEHICLE(iParam1, iVar0, -1, -1, 2f, 9, 0);
				}
			}
		}
	}
}

void func_922(int iParam0, int iParam1)//Position - 0xCA1B8
{
	struct<3> Var0;
	if (!__LIB_0__.func_583(iParam1, -251125078, 1) && __LIB_6__.func_924(Local_367.f_22[iParam0 /*24*/]))
	{
		__LIB_13__.func_642(iParam0, iParam1);
		Var0 = { __LIB_13__.func_942(iParam0) };
		TASK::TASK_SMART_FLEE_COORD(iParam1, Var0, __LIB_13__.func_641(iParam0), __LIB_13__.func_640(iParam0), false, false);
	}
}

bool func_923(int iParam0)//Position - 0xCAB46
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = Local_196.f_38.f_1[iParam0 /*21*/].f_14;
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = Local_196.f_38.f_23[iVar0 /*5*/].f_1[iVar1];
		if (iVar2 != -1 && __LIB_21__.func_213(iVar2, 4))
		{
			return 1;
		}
		iVar1++;
	}
	return Local_196.f_38.f_1[iParam0 /*21*/].f_20 >= 0.75f;
}

int func_924(int iParam0)//Position - 0xCADCA
{
	int iVar0;
	struct<3> Var1;
	iVar0 = NETWORK::NET_TO_PED(Local_367.f_22[iParam0 /*24*/]);
	Var1 = { __LIB_13__.func_943(iParam0, -1) };
	if (__LIB_0__.func_530(iVar0, Var1, __LIB_13__.func_662(iParam0), 1))
	{
		return 1;
	}
	return 0;
}

int func_925(int iParam0)//Position - 0xCD19B
{
	if (__LIB_21__.func_213(iParam0, 2))
	{
		return 3000;
	}
	if (__LIB_21__.func_213(iParam0, 6))
	{
		return 6500;
	}
	return 10000;
}

int func_926(int iParam0)//Position - 0xCD6BE
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = Local_196.f_38.f_1[iParam0 /*21*/].f_14;
	iVar0 = 0;
	while (iVar0 < 1)
	{
		iVar2 = Local_196.f_38.f_23[iVar1 /*5*/].f_1[iVar0];
		if (iVar2 != -1)
		{
			if (__LIB_21__.func_260(iVar2))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_927()//Position - 0xD11E8
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < Local_196.f_38)
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_367.f_22[iVar0 /*24*/]))
		{
			iVar1 = NETWORK::NET_TO_PED(Local_367.f_22[iVar0 /*24*/]);
			if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_367.f_22[iVar0 /*24*/]))
				{
					if (PED::GET_PED_TYPE(iVar1) == 6)
					{
						PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iVar1, false);
						if (PED::IS_PED_USING_ANY_SCENARIO(iVar1))
						{
							PED::SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(iVar1);
						}
						TASK::CLEAR_PED_TASKS(iVar1);
						PED::SET_PED_KEEP_TASK(iVar1, false);
					}
				}
				PED::REMOVE_PED_FROM_GROUP(iVar1);
			}
			if (Local_213.f_156.f_191 != 0)
			{
				Stack.Push(iVar0);
				Call_Loc(Local_213.f_156.f_191);
			}
			if (__LIB_21__.func_163(iVar0))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_367.f_22[iVar0 /*24*/]))
				{
					__LIB_4__.func_509(&(Local_367.f_22[iVar0 /*24*/]));
				}
			}
			else
			{
				__LIB_1__.func_162(&(Local_367.f_22[iVar0 /*24*/]));
			}
		}
		iVar0++;
	}
}

int func_928(int iParam0, int iParam1)//Position - 0x25FA
{
	if (__LIB_13__.func_966(iParam0, 9))
	{
		return 1;
	}
	if (__LIB_12__.func_626(iParam1))
	{
		return 1;
	}
	return 0;
}

void func_929(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x15BA0
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_21__.func_307(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_930(struct<3> Param0, int iParam1)//Position - 0x1859D
{
	int iVar0;
	int iVar1;
	int iVar2;
	*iParam1 = -1;
	iVar2 = __LIB_7__.func_135(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_21__.func_308(iVar1))
			{
				if (__LIB_7__.func_135(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*iParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_931(struct<3> Param0, float fParam1, int iParam2, int iParam3, float fParam4, bool bParam5, int iParam6, float fParam7, bool bParam8)//Position - 0x1759
{
	int iVar0;
	int iVar1;
	float fVar2;
	if (iParam2 && !bParam5)
	{
		if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!CAM::IS_SCREEN_FADED_OUT())
			{
				fVar2 = fParam4;
				if (fParam7 > 0f)
				{
					fVar2 = fParam7;
				}
				if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_5__.func_914(PLAYER::PLAYER_ID()), Param0, true) <= (fVar2 + fParam1))
				{
					if (CAM::IS_SPHERE_VISIBLE(Param0, fParam1))
					{
						return 1;
					}
				}
			}
		}
	}
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = iVar0;
		if (__LIB_1__.func_264(iVar1, 1, 1))
		{
			if (!__LIB_6__.func_978(iVar1, 0) && NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), iVar1))
			{
				if (iParam2 == 1 || (iParam2 == 0 && iVar1 != PLAYER::PLAYER_ID()))
				{
					if ((__LIB_1__.func_426(iVar1) || !bParam8) && !Global_2689235[iVar1 /*453*/].f_267)
					{
						fVar2 = fParam4;
						if (fParam7 > 0f)
						{
							if (!PLAYER::GET_PLAYER_TEAM(iVar1) == -1)
							{
								if (PLAYER::GET_PLAYER_TEAM(iVar1) == PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()))
								{
									fVar2 = fParam7;
								}
							}
						}
						if (!bParam5)
						{
							if ((iParam3 || (iParam3 == 0 && PLAYER::GET_PLAYER_TEAM(iVar1) != PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()))) || PLAYER::GET_PLAYER_TEAM(iVar1) == -1)
							{
								if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_5__.func_914(iVar1), Param0, true) <= (fVar2 + fParam1))
								{
									if (NETWORK::IS_SPHERE_VISIBLE_TO_PLAYER(iVar1, Param0, fParam1))
									{
										return 1;
									}
								}
							}
						}
						else if (PLAYER::GET_PLAYER_TEAM(iVar1) != iParam6 || PLAYER::GET_PLAYER_TEAM(iVar1) == -1)
						{
							if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_5__.func_914(iVar1), Param0, true) <= (fVar2 + fParam1))
							{
								if (NETWORK::IS_SPHERE_VISIBLE_TO_PLAYER(iVar1, Param0, fParam1))
								{
									return 1;
								}
							}
						}
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_932(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x14994
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_21__.func_315(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_933(struct<3> Param0, int iParam1)//Position - 0x1738F
{
	int iVar0;
	int iVar1;
	int iVar2;
	*iParam1 = -1;
	iVar2 = __LIB_7__.func_135(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_21__.func_316(iVar1))
			{
				if (__LIB_7__.func_135(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*iParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_934(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1E43C
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_21__.func_316(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

bool func_935()//Position - 0xC94EF
{
	return __LIB_14__.func_32();
}

int func_936(int iParam0)//Position - 0x175A8
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_0__.func_625(iParam0);
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_278 == iVar0)
	{
		return 1;
	}
	iVar1 = Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10;
	if (iVar1 != __LIB_0__.func_160())
	{
		if (Global_1853348[iVar1 /*834*/].f_267.f_278 == iVar0)
		{
			return 1;
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_6 == iParam0)
	{
		return 1;
	}
	if (__LIB_3__.func_902(PLAYER::PLAYER_ID(), 0) || (__LIB_21__.func_129(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_4__.func_721(PLAYER::PLAYER_ID())) == 12))
	{
		return 1;
	}
	if (__LIB_4__.func_27(PLAYER::PLAYER_ID()) || (__LIB_21__.func_129(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_4__.func_721(PLAYER::PLAYER_ID())) == 8))
	{
		return 1;
	}
	if (__LIB_13__.func_261(PLAYER::PLAYER_ID()) || (__LIB_21__.func_129(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_4__.func_721(PLAYER::PLAYER_ID())) == 5))
	{
		return 1;
	}
	if (__LIB_4__.func_969(PLAYER::PLAYER_ID()) || (__LIB_21__.func_129(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_4__.func_721(PLAYER::PLAYER_ID())) == 10))
	{
		return 1;
	}
	if (__LIB_4__.func_968(PLAYER::PLAYER_ID()) || (__LIB_21__.func_129(PLAYER::PLAYER_ID()) && __LIB_0__.func_170(__LIB_4__.func_721(PLAYER::PLAYER_ID())) == 6))
	{
		return 1;
	}
	return 0;
}

void func_937(int iParam0, int iParam1, int iParam2)//Position - 0xC9926
{
	if (iParam1 != -1)
	{
		__LIB_4__.func_831(iParam1);
	}
	if (iParam2 != -1)
	{
		__LIB_5__.func_746(iParam2);
	}
	__LIB_21__.func_319(iParam0, -1);
}

void func_938(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x1EEF
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (Local_195.f_38.f_1[iParam1 /*21*/].f_8 != -1)
		{
			if (bParam5)
			{
				Var0 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, -5f, 0f) };
				Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var0, Var1, 25, true, joaat("WEAPON_HEAVYSNIPER"), 0, true, true, -1f);
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var1, Var0, 25, true, joaat("WEAPON_ASSAULTSHOTGUN"), 0, true, true, -1f);
			}
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		else
		{
			Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
			__LIB_21__.func_98(Var2, &Var3, &Var4, 0);
			MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var3, Var4, 300, true, joaat("WEAPON_HEAVYSNIPER"), 0, false, false, 80f);
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		if (bParam4)
		{
			__LIB_21__.func_74(iParam0, -1, 0);
		}
	}
}

int func_939(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1F641
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_21__.func_308(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

void func_940(int iParam0, int iParam1, int iParam2)//Position - 0xD651F
{
	if (iParam1 != -1)
	{
		__LIB_4__.func_831(iParam1);
	}
	if (iParam2 != -1)
	{
		__LIB_5__.func_746(iParam2);
	}
	__LIB_21__.func_313(iParam0, -1);
}

void func_941(int iParam0, bool bParam1)//Position - 0xB6AB4
{
	if (bParam1)
	{
		if (!__LIB_21__.func_320(PLAYER::PLAYER_ID(), iParam0))
		{
			MISC::SET_BIT(&(Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_77.f_41), iParam0);
		}
	}
	else if (__LIB_21__.func_320(PLAYER::PLAYER_ID(), iParam0))
	{
		MISC::CLEAR_BIT(&(Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_77.f_41), iParam0);
	}
}

void func_942(int iParam0)//Position - 0xC6DBA
{
	__LIB_21__.func_322(iParam0, -1);
}

void func_943(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x16397
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_21__.func_332(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_944(struct<3> Param0, int iParam1)//Position - 0x18D97
{
	int iVar0;
	int iVar1;
	int iVar2;
	*iParam1 = -1;
	iVar2 = __LIB_7__.func_135(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_21__.func_333(iVar1))
			{
				if (__LIB_7__.func_135(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*iParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_945(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1FE3F
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_21__.func_333(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

int func_946(struct<2> Param0, var uParam1, bool bParam2, float fParam3)//Position - 0x2140A
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	iVar3 = 0;
	iVar0 = 83;
	while (iVar0 <= 84 + 1)
	{
		if (bParam2)
		{
			if (__LIB_21__.func_333(iVar0))
			{
				fVar1 = fParam3;
			}
			else
			{
				fVar1 = 0f;
			}
		}
		else
		{
			fVar1 = fParam3;
		}
		fVar2 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
		if (fVar2 < fVar1)
		{
			iVar3++;
		}
		iVar0++;
	}
	if (iVar3 > 0)
	{
		return 1;
	}
	return 0;
}

Vector3 func_947()//Position - 0xA6E64
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3[32];
	int iVar4;
	iVar4 = 0;
	if (Global_1836588)
	{
		iVar0 = 0;
		iVar2 = 0;
	}
	else
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 32);
		iVar2 = iVar0;
	}
	while (iVar1 < 32)
	{
		if (SYSTEM::VMAG(Global_2667225.f_45.f_202[iVar2 /*3*/]) > 0f)
		{
			Var3[iVar4 /*3*/] = { Global_2667225.f_45.f_202[iVar2 /*3*/] };
			iVar4++;
			if (__LIB_14__.func_79(Global_2667225.f_45.f_202[iVar2 /*3*/]))
			{
				return Global_2667225.f_45.f_202[iVar2 /*3*/];
			}
		}
		iVar2++;
		if (iVar2 >= 32)
		{
			iVar2 = 0;
		}
		iVar1++;
	}
	if (iVar4 > 0)
	{
		iVar2 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar4);
		return Var3[iVar2 /*3*/];
	}
	return Global_2676213;
}

void func_948()//Position - 0xE90AB
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	bVar3 = __LIB_13__.func_835();
	iVar2 = __LIB_0__.func_603(PLAYER::PLAYER_ID());
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar1))
		{
			if (__LIB_6__.func_941(iVar1, iVar2, 1) || __LIB_21__.func_200(iVar1, PLAYER::PLAYER_ID()))
			{
				PLAYER::SET_PLAYER_CAN_DAMAGE_PLAYER(PLAYER::PLAYER_ID(), iVar1, bVar3);
				PLAYER::SET_PLAYER_CAN_DAMAGE_PLAYER(iVar1, PLAYER::PLAYER_ID(), bVar3);
			}
		}
		iVar0++;
	}
}

int func_949(var uParam0)//Position - 0xFAD02
{
	int iVar0;
	iVar0 = uParam0;
	if (iVar0 >= 0 && iVar0 < 13)
	{
		if (__LIB_6__.func_925())
		{
			return Global_262145.f_31813[iVar0];
		}
		else
		{
			return Global_262145.f_31799[iVar0];
		}
	}
	return -1;
}

int func_950()//Position - 0x17D6
{
	int iVar0;
	iVar0 = __LIB_14__.func_84();
	if (iVar0 == 0)
	{
		iVar0 = 3;
	}
	return iVar0;
}

int func_951(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1EC47
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_26__.func_936(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

int func_952(struct<2> Param0, var uParam1, bool bParam2, float fParam3)//Position - 0x20212
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	iVar3 = 0;
	iVar0 = 83;
	while (iVar0 <= 84 + 1)
	{
		if (bParam2)
		{
			if (__LIB_26__.func_936(iVar0))
			{
				fVar1 = fParam3;
			}
			else
			{
				fVar1 = 0f;
			}
		}
		else
		{
			fVar1 = fParam3;
		}
		fVar2 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
		if (fVar2 < fVar1)
		{
			iVar3++;
		}
		iVar0++;
	}
	if (iVar3 > 0)
	{
		return 1;
	}
	return 0;
}

Vector3 func_953(struct<3> Param0)//Position - 0x2DB32
{
	int iVar0;
	int iVar1;
	if (__LIB_4__.func_973(0))
	{
		iVar0 = __LIB_8__.func_708(__LIB_0__.func_582());
		if (__LIB_0__.func_121(iVar0))
		{
			return ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar0, Param0);
		}
		else
		{
			return __LIB_13__.func_340(757, __LIB_0__.func_582(), 0);
		}
	}
	else
	{
		iVar1 = __LIB_8__.func_708(PLAYER::PLAYER_ID());
		if (__LIB_0__.func_121(iVar1))
		{
			return ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iVar1, Param0);
		}
	}
	return 0f, 0f, 0f;
}

void func_954(int iParam0, var uParam1)//Position - 0x2E640
{
	uParam1->f_4 = { __LIB_14__.func_119(iParam0) };
	if (__LIB_6__.func_492(iParam0, 0))
	{
		switch (iParam0)
		{
			case 714:
				*uParam1 = { -237.12f, 6228.7554f, 29.5005f };
				break;
			case 715:
				*uParam1 = { 1710.83f, 4760.13f, 40.0504f };
				break;
			case 716:
				*uParam1 = { -105.19f, -1778.3f, 27.51f };
				break;
			case 717:
				*uParam1 = { -617.7421f, 285.8363f, 79.6871f };
				break;
			case 718:
				*uParam1 = { -1287.1135f, -278.0045f, 36.5935f };
				break;
			case 719:
				*uParam1 = { 726.7626f, -822.4685f, 22.8603f };
				break;
		}
	}
	else
	{
		*uParam1 = { uParam1->f_4 };
	}
}

int func_955(int iParam0)//Position - 0x2EA54
{
	int iVar0;
	if ((((((iParam0 == 735 || iParam0 == 736) || iParam0 == 742) || iParam0 == 743) || iParam0 == 744) || iParam0 == 745) || iParam0 == 746)
	{
		return 0;
	}
	if (__LIB_6__.func_492(iParam0, 1))
	{
		if (__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()) && !__LIB_4__.func_1(PLAYER::PLAYER_ID()))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
				if (__LIB_0__.func_121(iVar0) && __LIB_14__.func_121(iParam0, iVar0, 1))
				{
					return 1;
				}
			}
			else
			{
				return 1;
			}
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

void func_956(int iParam0, var uParam1)//Position - 0x2ED76
{
	uParam1->f_4 = { __LIB_14__.func_123(iParam0) };
	*uParam1 = { uParam1->f_4 };
}

void func_957(int iParam0, var uParam1)//Position - 0x2EF90
{
	uParam1->f_4 = { __LIB_10__.func_920(iParam0) };
	*uParam1 = { uParam1->f_4 };
}

void func_958(int iParam0, var uParam1)//Position - 0x2F425
{
	uParam1->f_4 = { __LIB_14__.func_128(iParam0) };
	*uParam1 = { uParam1->f_4 };
	switch (iParam0)
	{
		case 675:
			uParam1->f_20 = { 1273.6775f, 2835.7322f, 44.847424f };
			uParam1->f_23 = { 1264.7654f, 2828.705f, 55.94585f };
			uParam1->f_26 = 12.4375f;
			break;
		case 676:
			uParam1->f_20 = { 32.718624f, 2620.0369f, 81.45343f };
			uParam1->f_23 = { 41.51775f, 2625.4204f, 91.57298f };
			uParam1->f_26 = 12.4375f;
			break;
		case 677:
			uParam1->f_20 = { 2757.3706f, 3908.7166f, 41.285427f };
			uParam1->f_23 = { 2750.301f, 3902.2896f, 52.101288f };
			uParam1->f_26 = 12.4375f;
			break;
		case 678:
			uParam1->f_20 = { 3392.2385f, 5508.4644f, 21.731428f };
			uParam1->f_23 = { 3382.523f, 5510.846f, 31.626408f };
			uParam1->f_26 = 12.4375f;
			break;
		case 679:
			uParam1->f_20 = { 17.183691f, 6826.0957f, 11.270427f };
			uParam1->f_23 = { 26.708874f, 6822.4604f, 22.733427f };
			uParam1->f_26 = 12.4375f;
			break;
		case 680:
			uParam1->f_20 = { -2229.6096f, 2401.256f, 7.634426f };
			uParam1->f_23 = { -2229.2456f, 2390.6938f, 20.956161f };
			uParam1->f_26 = 12.4375f;
			break;
		case 681:
			uParam1->f_20 = { -3.066728f, 3343.304f, 38.146927f };
			uParam1->f_23 = { -0.032484f, 3354.4387f, 45.363083f };
			uParam1->f_26 = 12.4375f;
			break;
		case 682:
			uParam1->f_20 = { 2084.432f, 1759.6304f, 99.96742f };
			uParam1->f_23 = { 2091.107f, 1765.9384f, 110.71361f };
			uParam1->f_26 = 12.4375f;
			break;
		case 683:
			uParam1->f_20 = { 1866.0016f, 271.21497f, 159.75842f };
			uParam1->f_23 = { 1860.5043f, 262.67712f, 170.92197f };
			uParam1->f_26 = 12.4375f;
			break;
	}
}

int func_959(int iParam0)//Position - 0x39F79
{
	int iVar0;
	int iVar1;
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_HELI(*iParam0))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(*iParam0, false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && __LIB_11__.func_33(&iVar0))
		{
			iVar1 = VEHICLE::GET_ENTITY_ATTACHED_TO_CARGOBOB(iVar0);
			if (ENTITY::DOES_ENTITY_EXIST(iVar1))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_960(var uParam0)//Position - 0x3AABA
{
	return __LIB_3__.func_499(__LIB_14__.func_150(&uParam0));
}

void func_961(int iParam0, int iParam1)//Position - 0x49144
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	if (ENTITY::IS_ENTITY_VISIBLE(iParam0))
	{
		fVar0 = __LIB_14__.func_162(iParam1);
		if (ENTITY::IS_ENTITY_IN_WATER(iParam0))
		{
			fVar1 = 0.5f;
			fVar0 = 1f;
		}
		HUD::GET_HUD_COLOUR(18, &iVar2, &iVar3, &iVar4, &uVar5);
		__LIB_10__.func_948(iParam0, iVar2, iVar3, iVar4, fVar0, fVar1, 0, 1, 0, 0);
	}
}

int func_962(int iParam0, int iParam1)//Position - 0xDA82F
{
	Stack.Push(Local_212.f_352.f_32 != 0);
	Stack.Push(iParam0);
	Call_Loc(Local_212.f_352.f_32);
	if (StackVal && StackVal)
	{
		return 1;
	}
	if (__LIB_21__.func_119(iParam1))
	{
		return 1;
	}
	return 0;
}

void func_963()//Position - 0x2B8DA
{
	if (__LIB_7__.func_212())
	{
		__LIB_18__.func_455();
	}
}

int func_964(var uParam0)//Position - 0xA4F4D
{
	int iVar0;
	int iVar1;
	iVar1 = uParam0;
	if (iVar1 < 0)
	{
		iVar0 = 1;
		__LIB_11__.func_949(&iVar1, -2147483648);
	}
	else
	{
		iVar0 = 0;
	}
	while (iVar1 > 0)
	{
		iVar1 = (iVar1 && (iVar1 - 1));
		iVar0++;
	}
	return iVar0;
}

void func_965(int iParam0, bool bParam1)//Position - 0xB1978
{
	int iVar0;
	iVar0 = iParam0;
	__LIB_8__.func_894(&(Global_2689235[iVar0 /*453*/].f_434), 1, bParam1);
}

bool func_966()//Position - 0xCBE0D
{
	return __LIB_14__.func_320(PLAYER::PLAYER_ID());
}

bool func_967(int iParam0)//Position - 0xD1B98
{
	return __LIB_14__.func_318(PLAYER::PLAYER_ID(), iParam0);
}

int func_968(int iParam0, float fParam1)//Position - 0x101AFD
{
	int iVar0;
	if (__LIB_1__.func_333(iParam0))
	{
		iVar0 = __LIB_1__.func_332(iParam0);
		if (__LIB_1__.func_330(iVar0))
		{
			return __LIB_25__.func_726(iParam0, iVar0, fParam1, 0);
		}
	}
	return 0;
}

int func_969(int iParam0)//Position - 0x117530
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (iParam0 != __LIB_0__.func_160())
	{
		if (__LIB_13__.func_258(iParam0, 1))
		{
			if (__LIB_0__.func_357(iParam0))
			{
				if (__LIB_0__.func_581(iParam0))
				{
					iVar0 = Global_1892703[iParam0 /*599*/].f_10.f_76.f_1;
					if (iVar0 != 0)
					{
						return __LIB_2__.func_264(iVar0, iParam0);
					}
				}
				else
				{
					iVar1 = __LIB_2__.func_191(iParam0);
					if (iVar1 != __LIB_0__.func_160())
					{
						iVar2 = __LIB_21__.func_187(iVar1, iParam0);
						if (iVar2 != -1)
						{
							return Global_1892703[iVar1 /*599*/].f_10.f_76.f_3[iVar2];
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_970(int iParam0)//Position - 0x122455
{
	switch (iParam0)
	{
		case joaat("PICKUP_AMMO_BULLET_MP"):
			return 549;
		default:
	}
	return __LIB_21__.func_362(iParam0, -1, -1);
}

void func_971(var uParam0, struct<3> Param1, var uParam2, int iParam3, bool bParam4, var uParam5, bool bParam6)//Position - 0x123F22
{
	int iVar0;
	if (uParam0->f_1 && CAM::IS_GAMEPLAY_HINT_ACTIVE())
	{
		if (MISC::GET_GAME_TIMER() >= (uParam0->f_8 + uParam0->f_9))
		{
			uParam0->f_1 = 0;
		}
	}
	iVar0 = uParam2;
	if (MISC::IS_STRING_NULL(iVar0))
	{
		if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			iVar0 = "CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */;
		}
		else
		{
			iVar0 = "FM_IHELP_HNT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus. */;
		}
	}
	if (__LIB_0__.func_1(iVar0))
	{
		__LIB_0__.func_184();
	}
	if (!CAM::IS_GAMEPLAY_HINT_ACTIVE())
	{
		if (__LIB_26__.func_362(uParam0, bParam4, bParam6, 0))
		{
			__LIB_9__.func_999(uParam0, Param1, iParam3);
		}
		if (*uParam0)
		{
			*uParam0 = 0;
		}
		else if (uParam0->f_6 == 2)
		{
			if (__LIB_26__.func_89(iVar0))
			{
				if ((MISC::IS_STRING_NULL(uParam0->f_3) && !MISC::IS_STRING_NULL(iVar0)) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					if ((CAM::IS_SPHERE_VISIBLE(Param1, 1f) && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED()) && uParam5)
					{
						if (!__LIB_0__.func_1(iVar0))
						{
							__LIB_0__.func_151(iVar0, -1);
							uParam0->f_3 = iVar0;
							if (MISC::ARE_STRINGS_EQUAL("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */, iVar0))
							{
								__LIB_0__.func_303(1);
							}
						}
					}
				}
			}
		}
		else if (__LIB_26__.func_89(iVar0))
		{
			if (MISC::IS_STRING_NULL(uParam0->f_3) && !MISC::IS_STRING_NULL(iVar0))
			{
				if ((CAM::IS_SPHERE_VISIBLE(Param1, 1f) && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED()) && uParam5)
				{
					if (!__LIB_0__.func_1(iVar0))
					{
						__LIB_0__.func_151(iVar0, -1);
						uParam0->f_3 = iVar0;
						if (MISC::ARE_STRINGS_EQUAL("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */, iVar0))
						{
							__LIB_0__.func_303(1);
						}
					}
				}
			}
		}
	}
	else
	{
		if (!MISC::IS_STRING_NULL(iVar0))
		{
			if (__LIB_0__.func_1(iVar0) && HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				HUD::CLEAR_HELP(true);
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (PED::IS_PED_IN_ANY_BOAT(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 4)
				{
					__LIB_9__.func_981(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 4)
				{
					__LIB_9__.func_981(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 4)
				{
					__LIB_9__.func_981(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_SUB(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 4)
				{
					__LIB_9__.func_981(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_ON_ANY_BIKE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 4)
				{
					__LIB_9__.func_981(uParam0, iVar0, 1);
				}
			}
			else if (CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 3 || CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 4)
			{
				__LIB_9__.func_981(uParam0, iVar0, 1);
			}
		}
		if (!__LIB_26__.func_362(uParam0, bParam4, bParam6, 0))
		{
			if ((!*uParam0 && !uParam0->f_1) && !__LIB_0__.func_302(uParam0))
			{
				__LIB_18__.func_200(uParam0);
			}
		}
	}
}

void func_972(var uParam0, bool bParam1)//Position - 0x132B9F
{
	if (__LIB_0__.func_516(&(uParam0->f_275)))
	{
		if (bParam1)
		{
			__LIB_6__.func_892(&(uParam0->f_275));
		}
		__LIB_21__.func_175(&(uParam0->f_275));
	}
}

void func_973(int* iParam0)//Position - 0x139333
{
	if (!__LIB_0__.func_516(iParam0))
	{
		__LIB_18__.func_364(iParam0);
	}
	else
	{
		__LIB_6__.func_892(iParam0);
	}
}

void func_974(int iParam0, int iParam1)//Position - 0x15C8CB
{
	struct<4> Var0;
	int iVar1;
	Var0.f_0 = -671989851;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam0;
	Var0.f_3 = iParam1;
	iVar1 = __LIB_6__.func_900(1, 1);
	if (!iVar1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 4, iVar1);
	}
}

void func_975(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x1EDA
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (Local_198.f_38.f_1[iParam1 /*21*/].f_8 != -1)
		{
			if (bParam5)
			{
				Var0 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, -5f, 0f) };
				Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var0, Var1, 25, true, joaat("WEAPON_HEAVYSNIPER"), 0, true, true, -1f);
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var1, Var0, 25, true, joaat("WEAPON_ASSAULTSHOTGUN"), 0, true, true, -1f);
			}
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		else
		{
			Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
			__LIB_21__.func_98(Var2, &Var3, &Var4, 0);
			MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var3, Var4, 300, true, joaat("WEAPON_HEAVYSNIPER"), 0, false, false, 80f);
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		if (bParam4)
		{
			__LIB_21__.func_74(iParam0, -1, 0);
		}
	}
}

int func_976(int iParam0, int iParam1)//Position - 0x23AE
{
	if (__LIB_14__.func_393(iParam0, 9))
	{
		return 1;
	}
	if (__LIB_12__.func_626(iParam1))
	{
		return 1;
	}
	return 0;
}

int func_977(int iParam0, int iParam1)//Position - 0x44B2B
{
	var uVar0;
	int iVar1;
	if (__LIB_14__.func_422(iParam0) == 13122)
	{
		return 0;
	}
	uVar0 = __LIB_21__.func_386(iParam0, iParam1);
	iVar1 = iParam0;
	return BitTest(uVar0, __LIB_0__.func_158(iVar1));
}

void func_978(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x241D
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (Local_199.f_38.f_1[iParam1 /*21*/].f_8 != -1)
		{
			if (bParam5)
			{
				Var0 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, -5f, 0f) };
				Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var0, Var1, 25, true, joaat("WEAPON_HEAVYSNIPER"), 0, true, true, -1f);
				MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var1, Var0, 25, true, joaat("WEAPON_ASSAULTSHOTGUN"), 0, true, true, -1f);
			}
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		else
		{
			Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
			__LIB_21__.func_98(Var2, &Var3, &Var4, 0);
			MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(Var3, Var4, 300, true, joaat("WEAPON_HEAVYSNIPER"), 0, false, false, 80f);
			if (bParam3)
			{
				PED::SET_PED_CONFIG_FLAG(iParam0, 227, bParam2);
			}
			PED::SET_PED_CONFIG_FLAG(iParam0, 115, bParam3);
		}
		if (bParam4)
		{
			__LIB_21__.func_74(iParam0, -1, 0);
		}
	}
}

void func_979(int iParam0)//Position - 0x10DFDB
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 >= 0 && iVar0 < 11)
	{
		__LIB_0__.func_521(__LIB_8__.func_923(__LIB_20__.func_348(iParam0)), 1, -1);
		__LIB_19__.func_765(12, __LIB_9__.func_284(__LIB_20__.func_348(iParam0)), "UNLOCK_DESC_SHIRT3", "FeedhitTshirt04", "MPTshirtAwards3", -1, 0, 0, 0, -1, 1);
	}
}

bool func_980(int iParam0, int iParam1)//Position - 0x1FFFD
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		iVar0 = __LIB_13__.func_334(iParam1);
		if (iVar0 != __LIB_0__.func_160() && NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar0))
		{
			iVar1 = NETWORK::NETWORK_GET_PARTICIPANT_INDEX(iVar0);
			return __LIB_14__.func_624(iVar1, 2);
		}
	}
	return __LIB_13__.func_876(iParam0, 2);
}

void func_981(var uParam0, var uParam1)//Position - 0x21BD8
{
	struct<2> Var0;
	int iVar1;
	int iVar2;
	var* uVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	var* uVar8[1];
	int iVar9[1];
	var* uVar10;
	bool bVar11;
	var* uVar12;
	bool bVar13;
	var* uVar14;
	bool bVar15;
	var* uVar16;
	bool bVar17;
	var* uVar18;
	bool bVar19;
	var* uVar20;
	bool bVar21;
	var* uVar22;
	bool bVar23;
	int iVar24;
	int iVar25;
	var* uVar26[1];
	int iVar27[1];
	var* uVar28;
	bool bVar29;
	var* uVar30;
	bool bVar31;
	var* uVar32;
	bool bVar33;
	var* uVar34;
	bool bVar35;
	var* uVar36;
	bool bVar37;
	var* uVar38;
	bool bVar39;
	var* uVar40;
	bool bVar41;
	var* uVar42;
	bool bVar43;
	var* uVar44;
	bool bVar45;
	var* uVar46;
	bool bVar47;
	var* uVar48;
	bool bVar49;
	var* uVar50;
	bool bVar51;
	var* uVar52;
	bool bVar53;
	var* uVar54;
	bool bVar55;
	var* uVar56;
	bool bVar57;
	var* uVar58;
	bool bVar59;
	var* uVar60;
	bool bVar61;
	int iVar62;
	var uVar63;
	int iVar64;
	var* uVar65[1];
	int iVar66[1];
	var* uVar67;
	bool bVar68;
	var* uVar69;
	bool bVar70;
	int iVar71;
	int iVar72;
	var* uVar73[2];
	int iVar74[2];
	var* uVar75;
	bool bVar76;
	var* uVar77;
	bool bVar78;
	var* uVar79;
	bool bVar80;
	var* uVar81;
	bool bVar82;
	var* uVar83;
	bool bVar84;
	var* uVar85;
	bool bVar86;
	int iVar87;
	var* uVar88;
	bool bVar89;
	var* uVar90;
	bool bVar91;
	var* uVar92;
	bool bVar93;
	var* uVar94;
	bool bVar95;
	int iVar96;
	int iVar97;
	var* uVar98[2];
	int iVar99[2];
	var* uVar100;
	bool bVar101;
	var* uVar102;
	bool bVar103;
	var* uVar104;
	bool bVar105;
	var* uVar106;
	bool bVar107;
	var* uVar108;
	bool bVar109;
	int iVar110;
	int iVar111;
	int iVar112;
	int iVar113;
	var* uVar114[1];
	int iVar115[1];
	var* uVar116;
	bool bVar117;
	var* uVar118;
	bool bVar119;
	var* uVar120;
	bool bVar121;
	int iVar122;
	int iVar123;
	var* uVar124;
	bool bVar125;
	int iVar126;
	var* uVar127[1];
	int iVar128[1];
	var* uVar129[1];
	int iVar130[1];
	var* uVar131[1];
	int iVar132[1];
	var* uVar133[1];
	int iVar134[1];
	int iVar135;
	var* uVar136;
	bool bVar137;
	var* uVar138;
	bool bVar139;
	var* uVar140;
	bool bVar141;
	var* uVar142[1];
	int iVar143[1];
	__LIB_5__.func_185(&iVar5, *uParam0, "me");
	__LIB_5__.func_185(&iVar6, iVar5, "blp");
	__LIB_5__.func_185(&iVar7, iVar5, "ents");
	__LIB_5__.func_185(&iVar24, *uParam0, "pd");
	__LIB_5__.func_185(&iVar25, iVar24, "pds");
	__LIB_5__.func_185(&iVar62, iVar24, "grp");
	__LIB_5__.func_185(&uVar63, iVar62, "rel");
	__LIB_5__.func_185(&iVar64, iVar62, "trg");
	__LIB_5__.func_185(&iVar71, *uParam0, "vh");
	__LIB_5__.func_185(&iVar72, iVar71, "veh");
	__LIB_5__.func_185(&iVar87, iVar72, "blp");
	__LIB_5__.func_185(&iVar96, *uParam0, "pp");
	__LIB_5__.func_185(&iVar97, iVar96, "prps");
	__LIB_5__.func_185(&iVar110, *uParam0, "want");
	__LIB_5__.func_185(&iVar111, *uParam0, "modt");
	__LIB_5__.func_185(&iVar112, *uParam0, "ta");
	__LIB_5__.func_185(&iVar113, iVar112, "ars");
	__LIB_5__.func_185(&iVar122, *uParam0, "ptrl");
	__LIB_5__.func_185(&iVar123, iVar122, "pat");
	__LIB_5__.func_185(&iVar126, iVar123, "nd");
	__LIB_5__.func_185(&iVar135, *uParam0, "port");
	if (__LIB_13__.func_276(*uParam0, "fmbs") == 7)
	{
		bVar4 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "bs", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar7, &Var0) == 7)
		{
			iVar9[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar7, "mn") == 7)
	{
		bVar11 = true;
	}
	if (__LIB_13__.func_276(iVar7, "pos") == 7)
	{
		bVar13 = true;
	}
	if (__LIB_13__.func_276(iVar7, "head") == 7)
	{
		bVar15 = true;
	}
	if (__LIB_13__.func_276(iVar7, "rot") == 7)
	{
		bVar17 = true;
	}
	if (__LIB_13__.func_276(iVar7, "cv") == 7)
	{
		bVar19 = true;
	}
	if (__LIB_13__.func_276(iVar7, "crt") == 7)
	{
		bVar21 = true;
	}
	if (__LIB_13__.func_276(iVar7, "int") == 7)
	{
		bVar23 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "bs", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar25, &Var0) == 7)
		{
			iVar27[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar25, "mn") == 7)
	{
		bVar29 = true;
	}
	if (__LIB_13__.func_276(iVar25, "pos") == 7)
	{
		bVar31 = true;
	}
	if (__LIB_13__.func_276(iVar25, "head") == 7)
	{
		bVar33 = true;
	}
	if (__LIB_13__.func_276(iVar25, "wpn") == 7)
	{
		bVar35 = true;
	}
	if (__LIB_13__.func_276(iVar25, "veh") == 7)
	{
		bVar37 = true;
	}
	if (__LIB_13__.func_276(iVar25, "st") == 7)
	{
		bVar39 = true;
	}
	if (__LIB_13__.func_276(iVar25, "scen") == 7)
	{
		bVar41 = true;
	}
	if (__LIB_13__.func_276(iVar25, "anim") == 7)
	{
		bVar43 = true;
	}
	if (__LIB_13__.func_276(iVar25, "int") == 7)
	{
		bVar45 = true;
	}
	if (__LIB_13__.func_276(iVar25, "asi") == 7)
	{
		bVar47 = true;
	}
	if (__LIB_13__.func_276(iVar25, "grp") == 7)
	{
		bVar49 = true;
	}
	if (__LIB_13__.func_276(iVar25, "mvmt") == 7)
	{
		bVar51 = true;
	}
	if (__LIB_13__.func_276(iVar25, "mrd") == 7)
	{
		bVar53 = true;
	}
	if (__LIB_13__.func_276(iVar25, "sr") == 7)
	{
		bVar55 = true;
	}
	if (__LIB_13__.func_276(iVar25, "sa") == 7)
	{
		bVar57 = true;
	}
	if (__LIB_13__.func_276(iVar25, "hr") == 7)
	{
		bVar59 = true;
	}
	if (__LIB_13__.func_276(iVar25, "dr") == 7)
	{
		bVar61 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "ar", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar64, &Var0) == 7)
		{
			iVar66[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar62, "ed") == 7)
	{
		bVar68 = true;
	}
	if (__LIB_13__.func_276(iVar62, "gt") == 7)
	{
		bVar70 = true;
	}
	iVar2 = 0;
	while (iVar2 < 2)
	{
		StringCopy(&Var0, "bsa", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar72, &Var0) == 7)
		{
			iVar74[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar72, "mn") == 7)
	{
		bVar76 = true;
	}
	if (__LIB_13__.func_276(iVar72, "pos") == 7)
	{
		bVar78 = true;
	}
	if (__LIB_13__.func_276(iVar72, "head") == 7)
	{
		bVar80 = true;
	}
	if (__LIB_13__.func_276(iVar72, "col") == 7)
	{
		bVar82 = true;
	}
	if (__LIB_13__.func_276(iVar72, "int") == 7)
	{
		bVar84 = true;
	}
	if (__LIB_13__.func_276(iVar72, "vds") == 7)
	{
		bVar86 = true;
	}
	if (__LIB_13__.func_276(iVar87, "sprt") == 7)
	{
		bVar89 = true;
	}
	if (__LIB_13__.func_276(iVar87, "hclr") == 7)
	{
		bVar91 = true;
	}
	if (__LIB_13__.func_276(iVar87, "scl") == 7)
	{
		bVar93 = true;
	}
	if (__LIB_13__.func_276(iVar87, "sh") == 7)
	{
		bVar95 = true;
	}
	iVar2 = 0;
	while (iVar2 < 2)
	{
		StringCopy(&Var0, "bsa", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar97, &Var0) == 7)
		{
			iVar99[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar97, "mn") == 7)
	{
		bVar101 = true;
	}
	if (__LIB_13__.func_276(iVar97, "pos") == 7)
	{
		bVar103 = true;
	}
	if (__LIB_13__.func_276(iVar97, "head") == 7)
	{
		bVar105 = true;
	}
	if (__LIB_13__.func_276(iVar97, "rot") == 7)
	{
		bVar107 = true;
	}
	if (__LIB_13__.func_276(iVar97, "int") == 7)
	{
		bVar109 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "ibs", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar113, &Var0) == 7)
		{
			iVar115[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar113, "vmn") == 7)
	{
		bVar117 = true;
	}
	if (__LIB_13__.func_276(iVar113, "vmx") == 7)
	{
		bVar119 = true;
	}
	if (__LIB_13__.func_276(iVar113, "fwd") == 7)
	{
		bVar121 = true;
	}
	if (__LIB_13__.func_276(iVar123, "pedi") == 7)
	{
		bVar125 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "scro", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar126, &Var0) == 7)
		{
			iVar128[iVar2] = 1;
		}
		StringCopy(&Var0, "pos", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar126, &Var0) == 7)
		{
			iVar130[iVar2] = 1;
		}
		StringCopy(&Var0, "look", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar126, &Var0) == 7)
		{
			iVar132[iVar2] = 1;
		}
		StringCopy(&Var0, "dur", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar126, &Var0) == 7)
		{
			iVar134[iVar2] = 1;
		}
		iVar2++;
	}
	if (__LIB_13__.func_276(iVar135, "pos") == 7)
	{
		bVar137 = true;
	}
	if (__LIB_13__.func_276(iVar135, "head") == 7)
	{
		bVar139 = true;
	}
	if (__LIB_13__.func_276(iVar135, "plnkp") == 7)
	{
		bVar141 = true;
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		StringCopy(&Var0, "ibs", 16);
		StringIntConCat(&Var0, iVar2, 16);
		if (__LIB_13__.func_276(iVar135, &Var0) == 7)
		{
			iVar143[iVar2] = 1;
		}
		iVar2++;
	}
	if (bVar4)
	{
		uVar3 = DATAFILE::DATADICT_GET_ARRAY(*uParam0, "fmbs");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar9[iVar2])
		{
			StringCopy(&Var0, "bs", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar8[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar7, &Var0);
		}
		iVar2++;
	}
	if (bVar11)
	{
		uVar10 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "mn");
	}
	if (bVar13)
	{
		uVar12 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "pos");
	}
	if (bVar15)
	{
		uVar14 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "head");
	}
	if (bVar17)
	{
		uVar16 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "rot");
	}
	if (bVar19)
	{
		uVar18 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "cv");
	}
	if (bVar21)
	{
		uVar20 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "crt");
	}
	if (bVar23)
	{
		uVar22 = DATAFILE::DATADICT_GET_ARRAY(iVar7, "int");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar27[iVar2])
		{
			StringCopy(&Var0, "bs", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar26[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar25, &Var0);
		}
		iVar2++;
	}
	if (bVar29)
	{
		uVar28 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "mn");
	}
	if (bVar31)
	{
		uVar30 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "pos");
	}
	if (bVar33)
	{
		uVar32 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "head");
	}
	if (bVar35)
	{
		uVar34 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "wpn");
	}
	if (bVar37)
	{
		uVar36 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "veh");
	}
	if (bVar39)
	{
		uVar38 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "st");
	}
	if (bVar41)
	{
		uVar40 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "scen");
	}
	if (bVar43)
	{
		uVar42 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "anim");
	}
	if (bVar45)
	{
		uVar44 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "int");
	}
	if (bVar47)
	{
		uVar46 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "asi");
	}
	if (bVar49)
	{
		uVar48 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "grp");
	}
	if (bVar51)
	{
		uVar50 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "mvmt");
	}
	if (bVar53)
	{
		uVar52 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "mrd");
	}
	if (bVar55)
	{
		uVar54 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "sr");
	}
	if (bVar57)
	{
		uVar56 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "sa");
	}
	if (bVar59)
	{
		uVar58 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "hr");
	}
	if (bVar61)
	{
		uVar60 = DATAFILE::DATADICT_GET_ARRAY(iVar25, "dr");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar66[iVar2])
		{
			StringCopy(&Var0, "ar", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar65[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar64, &Var0);
		}
		iVar2++;
	}
	if (bVar68)
	{
		uVar67 = DATAFILE::DATADICT_GET_ARRAY(iVar62, "ed");
	}
	if (bVar70)
	{
		uVar69 = DATAFILE::DATADICT_GET_ARRAY(iVar62, "gt");
	}
	iVar2 = 0;
	while (iVar2 < 2)
	{
		if (iVar74[iVar2])
		{
			StringCopy(&Var0, "bsa", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar73[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar72, &Var0);
		}
		iVar2++;
	}
	if (bVar76)
	{
		uVar75 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "mn");
	}
	if (bVar78)
	{
		uVar77 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "pos");
	}
	if (bVar80)
	{
		uVar79 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "head");
	}
	if (bVar82)
	{
		uVar81 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "col");
	}
	if (bVar84)
	{
		uVar83 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "int");
	}
	if (bVar86)
	{
		uVar85 = DATAFILE::DATADICT_GET_ARRAY(iVar72, "vds");
	}
	if (bVar89)
	{
		uVar88 = DATAFILE::DATADICT_GET_ARRAY(iVar87, "sprt");
	}
	if (bVar91)
	{
		uVar90 = DATAFILE::DATADICT_GET_ARRAY(iVar87, "hclr");
	}
	if (bVar93)
	{
		uVar92 = DATAFILE::DATADICT_GET_ARRAY(iVar87, "scl");
	}
	if (bVar95)
	{
		uVar94 = DATAFILE::DATADICT_GET_ARRAY(iVar87, "sh");
	}
	iVar2 = 0;
	while (iVar2 < 2)
	{
		if (iVar99[iVar2])
		{
			StringCopy(&Var0, "bsa", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar98[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar97, &Var0);
		}
		iVar2++;
	}
	if (bVar101)
	{
		uVar100 = DATAFILE::DATADICT_GET_ARRAY(iVar97, "mn");
	}
	if (bVar103)
	{
		uVar102 = DATAFILE::DATADICT_GET_ARRAY(iVar97, "pos");
	}
	if (bVar105)
	{
		uVar104 = DATAFILE::DATADICT_GET_ARRAY(iVar97, "head");
	}
	if (bVar107)
	{
		uVar106 = DATAFILE::DATADICT_GET_ARRAY(iVar97, "rot");
	}
	if (bVar109)
	{
		uVar108 = DATAFILE::DATADICT_GET_ARRAY(iVar97, "int");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar115[iVar2])
		{
			StringCopy(&Var0, "ibs", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar114[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar113, &Var0);
		}
		iVar2++;
	}
	if (bVar117)
	{
		uVar116 = DATAFILE::DATADICT_GET_ARRAY(iVar113, "vmn");
	}
	if (bVar119)
	{
		uVar118 = DATAFILE::DATADICT_GET_ARRAY(iVar113, "vmx");
	}
	if (bVar121)
	{
		uVar120 = DATAFILE::DATADICT_GET_ARRAY(iVar113, "fwd");
	}
	if (bVar125)
	{
		uVar124 = DATAFILE::DATADICT_GET_ARRAY(iVar123, "pedi");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar128[iVar2])
		{
			StringCopy(&Var0, "scro", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar127[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar126, &Var0);
		}
		if (iVar130[iVar2])
		{
			StringCopy(&Var0, "pos", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar129[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar126, &Var0);
		}
		if (iVar132[iVar2])
		{
			StringCopy(&Var0, "look", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar131[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar126, &Var0);
		}
		if (iVar134[iVar2])
		{
			StringCopy(&Var0, "dur", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar133[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar126, &Var0);
		}
		iVar2++;
	}
	if (bVar137)
	{
		uVar136 = DATAFILE::DATADICT_GET_ARRAY(iVar135, "pos");
	}
	if (bVar139)
	{
		uVar138 = DATAFILE::DATADICT_GET_ARRAY(iVar135, "head");
	}
	if (bVar141)
	{
		uVar140 = DATAFILE::DATADICT_GET_ARRAY(iVar135, "plnkp");
	}
	iVar2 = 0;
	while (iVar2 < 1)
	{
		if (iVar143[iVar2])
		{
			StringCopy(&Var0, "ibs", 16);
			StringIntConCat(&Var0, iVar2, 16);
			uVar142[iVar2] = DATAFILE::DATADICT_GET_ARRAY(iVar135, &Var0);
		}
		iVar2++;
	}
	*uParam1 = { __LIB_13__.func_275(*uParam0, "fmnm", "") };
	iVar1 = 0;
	while (iVar1 < 2)
	{
		uParam1->f_16[iVar1] = __LIB_13__.func_273(uVar3, iVar1, 0, bVar4);
		iVar1++;
	}
	uParam1->f_19 = __LIB_6__.func_597(iVar5, "num", 0);
	uParam1->f_19.f_1 = __LIB_6__.func_597(iVar6, "sprt", -1);
	uParam1->f_19.f_1.f_1 = __LIB_6__.func_597(iVar6, "hclr", 12);
	uParam1->f_19.f_1.f_2 = __LIB_13__.func_274(iVar6, "scl", 1f);
	uParam1->f_19.f_1.f_3 = __LIB_21__.func_75(iVar6, "sh", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_19.f_5[iVar1 /*13*/][iVar2] = __LIB_13__.func_273(uVar8[iVar2], iVar1, 0, iVar9[iVar2]);
			iVar2++;
		}
		uParam1->f_19.f_5[iVar1 /*13*/].f_2 = __LIB_13__.func_273(uVar10, iVar1, 0, bVar11);
		uParam1->f_19.f_5[iVar1 /*13*/].f_3 = { __LIB_13__.func_272(uVar12, iVar1, 0f, 0f, 0f, bVar13) };
		uParam1->f_19.f_5[iVar1 /*13*/].f_6 = __LIB_13__.func_271(uVar14, iVar1, 0f, bVar15);
		uParam1->f_19.f_5[iVar1 /*13*/].f_7 = { __LIB_13__.func_272(uVar16, iVar1, 0f, 0f, 0f, bVar17) };
		uParam1->f_19.f_5[iVar1 /*13*/].f_10 = __LIB_13__.func_273(uVar18, iVar1, -1, bVar19);
		uParam1->f_19.f_5[iVar1 /*13*/].f_11 = __LIB_13__.func_273(uVar20, iVar1, 2, bVar21);
		uParam1->f_19.f_5[iVar1 /*13*/].f_12 = __LIB_13__.func_273(uVar22, iVar1, -1, bVar23);
		iVar1++;
	}
	uParam1->f_38 = __LIB_6__.func_597(iVar24, "num", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_38.f_1[iVar1 /*21*/][iVar2] = __LIB_13__.func_273(uVar26[iVar2], iVar1, 0, iVar27[iVar2]);
			iVar2++;
		}
		uParam1->f_38.f_1[iVar1 /*21*/].f_2 = __LIB_13__.func_273(uVar28, iVar1, 0, bVar29);
		uParam1->f_38.f_1[iVar1 /*21*/].f_3 = { __LIB_13__.func_272(uVar30, iVar1, 0f, 0f, 0f, bVar31) };
		uParam1->f_38.f_1[iVar1 /*21*/].f_6 = __LIB_13__.func_271(uVar32, iVar1, 0f, bVar33);
		uParam1->f_38.f_1[iVar1 /*21*/].f_7 = __LIB_13__.func_273(uVar34, iVar1, 0, bVar35);
		uParam1->f_38.f_1[iVar1 /*21*/].f_8 = __LIB_13__.func_273(uVar36, iVar1, -1, bVar37);
		uParam1->f_38.f_1[iVar1 /*21*/].f_9 = __LIB_13__.func_273(uVar38, iVar1, 0, bVar39);
		uParam1->f_38.f_1[iVar1 /*21*/].f_10 = __LIB_13__.func_273(uVar40, iVar1, -1, bVar41);
		uParam1->f_38.f_1[iVar1 /*21*/].f_11 = __LIB_13__.func_273(uVar42, iVar1, -1, bVar43);
		uParam1->f_38.f_1[iVar1 /*21*/].f_12 = __LIB_13__.func_273(uVar44, iVar1, -1, bVar45);
		uParam1->f_38.f_1[iVar1 /*21*/].f_13 = __LIB_13__.func_273(uVar46, iVar1, -1, bVar47);
		uParam1->f_38.f_1[iVar1 /*21*/].f_14 = __LIB_13__.func_273(uVar48, iVar1, 0, bVar49);
		uParam1->f_38.f_1[iVar1 /*21*/].f_15 = __LIB_13__.func_273(uVar50, iVar1, 2, bVar51);
		uParam1->f_38.f_1[iVar1 /*21*/].f_16 = __LIB_13__.func_273(uVar52, iVar1, -1, bVar53);
		uParam1->f_38.f_1[iVar1 /*21*/].f_17 = __LIB_13__.func_271(uVar54, iVar1, 60f, bVar55);
		uParam1->f_38.f_1[iVar1 /*21*/].f_18 = __LIB_13__.func_271(uVar56, iVar1, 60f, bVar57);
		uParam1->f_38.f_1[iVar1 /*21*/].f_19 = __LIB_13__.func_271(uVar58, iVar1, 60f, bVar59);
		uParam1->f_38.f_1[iVar1 /*21*/].f_20 = __LIB_13__.func_271(uVar60, iVar1, -1f, bVar61);
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_38.f_23[iVar1 /*5*/].f_1[iVar2] = __LIB_13__.func_273(uVar65[iVar2], iVar1, -1, iVar66[iVar2]);
			iVar2++;
		}
		uParam1->f_38.f_23[iVar1 /*5*/].f_3 = __LIB_13__.func_273(uVar67, iVar1, 0, bVar68);
		uParam1->f_38.f_23[iVar1 /*5*/].f_4 = __LIB_13__.func_273(uVar69, iVar1, -1, bVar70);
		iVar1++;
	}
	uParam1->f_67 = __LIB_6__.func_597(iVar71, "num", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 2)
		{
			uParam1->f_67.f_1[iVar1 /*15*/][iVar2] = __LIB_13__.func_273(uVar73[iVar2], iVar1, 0, iVar74[iVar2]);
			iVar2++;
		}
		uParam1->f_67.f_1[iVar1 /*15*/].f_3 = __LIB_13__.func_273(uVar75, iVar1, 0, bVar76);
		uParam1->f_67.f_1[iVar1 /*15*/].f_4 = { __LIB_13__.func_272(uVar77, iVar1, 0f, 0f, 0f, bVar78) };
		uParam1->f_67.f_1[iVar1 /*15*/].f_7 = __LIB_13__.func_271(uVar79, iVar1, 0f, bVar80);
		uParam1->f_67.f_1[iVar1 /*15*/].f_8 = __LIB_13__.func_273(uVar81, iVar1, -1, bVar82);
		uParam1->f_67.f_1[iVar1 /*15*/].f_9 = __LIB_13__.func_273(uVar83, iVar1, -1, bVar84);
		uParam1->f_67.f_1[iVar1 /*15*/].f_10 = __LIB_13__.func_273(uVar85, iVar1, 0, bVar86);
		uParam1->f_67.f_1[iVar1 /*15*/].f_11 = __LIB_13__.func_273(uVar88, iVar1, -1, bVar89);
		uParam1->f_67.f_1[iVar1 /*15*/].f_11.f_1 = __LIB_13__.func_273(uVar90, iVar1, 12, bVar91);
		uParam1->f_67.f_1[iVar1 /*15*/].f_11.f_2 = __LIB_13__.func_271(uVar92, iVar1, 1f, bVar93);
		uParam1->f_67.f_1[iVar1 /*15*/].f_11.f_3 = __LIB_13__.func_270(uVar94, iVar1, 0, bVar95);
		iVar1++;
	}
	uParam1->f_67.f_17 = __LIB_6__.func_597(iVar71, "trv", -1);
	uParam1->f_85 = __LIB_6__.func_597(iVar96, "num", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 2)
		{
			uParam1->f_85.f_1[iVar1 /*12*/][iVar2] = __LIB_13__.func_273(uVar98[iVar2], iVar1, 0, iVar99[iVar2]);
			iVar2++;
		}
		uParam1->f_85.f_1[iVar1 /*12*/].f_3 = __LIB_13__.func_273(uVar100, iVar1, 0, bVar101);
		uParam1->f_85.f_1[iVar1 /*12*/].f_4 = { __LIB_13__.func_272(uVar102, iVar1, 0f, 0f, 0f, bVar103) };
		uParam1->f_85.f_1[iVar1 /*12*/].f_7 = __LIB_13__.func_271(uVar104, iVar1, 0f, bVar105);
		uParam1->f_85.f_1[iVar1 /*12*/].f_8 = { __LIB_13__.func_272(uVar106, iVar1, 0f, 0f, 0f, bVar107) };
		uParam1->f_85.f_1[iVar1 /*12*/].f_11 = __LIB_13__.func_273(uVar108, iVar1, -1, bVar109);
		iVar1++;
	}
	uParam1->f_99 = __LIB_6__.func_597(iVar110, "wnum", 0);
	uParam1->f_99.f_1 = __LIB_6__.func_597(iVar110, "wfak", -1);
	uParam1->f_99.f_2 = __LIB_13__.func_274(iVar110, "wblk", 250f);
	uParam1->f_102 = __LIB_6__.func_597(iVar111, "time", -1);
	uParam1->f_102.f_1 = __LIB_6__.func_597(iVar111, "disp", 0);
	uParam1->f_111 = __LIB_6__.func_597(iVar112, "num", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_111.f_1[iVar1 /*9*/][iVar2] = __LIB_13__.func_273(uVar114[iVar2], iVar1, 0, iVar115[iVar2]);
			iVar2++;
		}
		uParam1->f_111.f_1[iVar1 /*9*/].f_2 = { __LIB_13__.func_272(uVar116, iVar1, 0f, 0f, 0f, bVar117) };
		uParam1->f_111.f_1[iVar1 /*9*/].f_5 = { __LIB_13__.func_272(uVar118, iVar1, 0f, 0f, 0f, bVar119) };
		uParam1->f_111.f_1[iVar1 /*9*/].f_8 = __LIB_13__.func_271(uVar120, iVar1, 0f, bVar121);
		iVar1++;
	}
	uParam1->f_122 = __LIB_6__.func_597(iVar122, "num", 0);
	iVar1 = 0;
	while (iVar1 < 1)
	{
		uParam1->f_122.f_1[iVar1 /*10*/] = __LIB_13__.func_273(uVar124, iVar1, -1, bVar125);
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_122.f_1[iVar1 /*10*/].f_1[iVar2 /*8*/] = __LIB_13__.func_273(uVar127[iVar2], iVar1, -1, iVar128[iVar2]);
			uParam1->f_122.f_1[iVar1 /*10*/].f_1[iVar2 /*8*/].f_1 = { __LIB_13__.func_272(uVar129[iVar2], iVar1, 0f, 0f, 0f, iVar130[iVar2]) };
			uParam1->f_122.f_1[iVar1 /*10*/].f_1[iVar2 /*8*/].f_4 = { __LIB_13__.func_272(uVar131[iVar2], iVar1, 0f, 0f, 0f, iVar132[iVar2]) };
			uParam1->f_122.f_1[iVar1 /*10*/].f_1[iVar2 /*8*/].f_7 = __LIB_13__.func_273(uVar133[iVar2], iVar1, 2000, iVar134[iVar2]);
			iVar2++;
		}
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 2)
	{
		uParam1->f_141[iVar1 /*8*/] = { __LIB_13__.func_272(uVar136, iVar1, 0f, 0f, 0f, bVar137) };
		uParam1->f_141[iVar1 /*8*/].f_3 = __LIB_13__.func_271(uVar138, iVar1, 0f, bVar139);
		uParam1->f_141[iVar1 /*8*/].f_4 = __LIB_13__.func_273(uVar140, iVar1, -1, bVar141);
		iVar2 = 0;
		while (iVar2 < 1)
		{
			uParam1->f_141[iVar1 /*8*/].f_6[iVar2] = __LIB_13__.func_273(uVar142[iVar2], iVar1, 0, iVar143[iVar2]);
			iVar2++;
		}
		iVar1++;
	}
}

int func_982(int iParam0, int iParam1)//Position - 0xBAC3F
{
	Stack.Push(Local_214.f_352.f_32 != 0);
	Stack.Push(iParam0);
	Call_Loc(Local_214.f_352.f_32);
	if (StackVal && StackVal)
	{
		return 1;
	}
	if (__LIB_21__.func_119(iParam1))
	{
		return 1;
	}
	return 0;
}

void func_983(var uParam0)//Position - 0xBD3B7
{
	if (!__LIB_13__.func_381(&(Local_367.f_72), uParam0))
	{
		__LIB_14__.func_369(uParam0, &(Local_367.f_72));
	}
}

void func_984(int iParam0, int iParam1, int iParam2)//Position - 0xBD5A1
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 15)
	{
		iVar1 = iVar0;
		iVar2 = __LIB_13__.func_385(iVar1);
		if (iVar2 != 13)
		{
			if (__LIB_14__.func_661(iParam0, iParam2, iVar1))
			{
				__LIB_14__.func_667(iVar2, iParam0, iParam1);
			}
		}
		iVar0++;
	}
}

void func_985(int iParam0, int iParam1, int iParam2)//Position - 0xBD6CD
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 17)
	{
		iVar1 = iVar0;
		iVar2 = __LIB_13__.func_387(iVar1);
		if (iVar2 != 32)
		{
			if (__LIB_14__.func_654(iParam0, iParam2, iVar1))
			{
				__LIB_14__.func_668(iVar2, iParam0, iParam1);
			}
		}
		iVar0++;
	}
}

void func_986(int iParam0, int iParam1, int iParam2)//Position - 0xBD7D5
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 17)
	{
		iVar1 = iVar0;
		iVar2 = __LIB_13__.func_388(iVar1);
		if (iVar2 != 25)
		{
			if (__LIB_14__.func_663(iParam0, iParam2, iVar1))
			{
				__LIB_14__.func_669(iVar2, iParam0, iParam1);
			}
		}
		iVar0++;
	}
}

void func_987(int iParam0, int iParam1, int iParam2)//Position - 0xBD9D1
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 48)
	{
		iVar1 = iVar0;
		iVar2 = __LIB_13__.func_391(iVar1);
		if (iVar2 != 49)
		{
			if (__LIB_14__.func_637(iParam0, iParam2, iVar1))
			{
				if (iVar2 == 32)
				{
					__LIB_21__.func_207(12);
				}
				__LIB_14__.func_670(iVar2, iParam0, iParam1);
			}
		}
		iVar0++;
	}
}

void func_988(var uParam0, struct<3> Param1, var uParam2, int iParam3, bool bParam4, var uParam5, bool bParam6)//Position - 0xE5D7E
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
	{
		__LIB_9__.func_981(uParam0, 0, 0);
	}
	uParam0->f_6 = 1;
	__LIB_26__.func_971(uParam0, Param1, uParam2, iParam3, bParam4, uParam5, bParam6);
}

char* func_989(int iParam0)//Position - 0x25955
{
	__LIB_14__.func_719(&iParam0);
	switch (iParam0)
	{
		case 0:
			return "port";
		case 1:
			return "al";
		case 2:
			return "ry";
		case 3:
			return "n";
		case 4:
			return "WAR";
		case 5:
			return "bar";
		case 6:
			return "m";
		case 7:
			return "dset";
		case 8:
			return "lie";
		case 9:
			return "s";
		case 10:
			return "01";
		case 11:
			return "n_DEA";
		case 12:
			return "w";
		case 13:
			return "_1_tele";
		case 14:
			return "_aln";
		case 15:
			return "_R";
		case 16:
			return "_01_soun";
		case 17:
			return "IE";
		case 18:
			return "pa";
		case 19:
			return "t";
		case 20:
			return "scr";
		case 21:
			return "rc";
		case 22:
			return "th";
		case 23:
			return "a";
		case 24:
			return "p_in";
		case 25:
			return "_scene";
		case 26:
			return "_GR_";
		case 27:
			return "dlc_gr";
		case 28:
			return "_CS2_";
		case 29:
			return "oneshot";
		case 30:
			return "General";
		case 31:
			return "sounds";
		case 32:
			return "";
		default:
	}
	return "";
}

int func_990(int iParam0)//Position - 0xCDDD
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_3__.func_997(PLAYER::PLAYER_ID(), -1))
		{
			iParam0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		}
	}
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	if (__LIB_7__.func_133(PLAYER::PLAYER_ID()) == 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			if (__LIB_0__.func_291(iParam0) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_991(var uParam0, var uParam1, var uParam2, struct<3> Param3)//Position - 0x148A8
{
	float fVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	fVar0 = 1E+09f;
	iVar3 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		fVar1 = SYSTEM::VDIST(*(uParam0[iVar2 /*4*/]), Param3);
		if (fVar1 < fVar0)
		{
			if (!__LIB_21__.func_422(*(uParam0[iVar2 /*4*/]), 5f, PLAYER::PLAYER_ID(), 0, 0))
			{
				fVar0 = fVar1;
				iVar3 = iVar2;
			}
		}
		iVar2++;
	}
	if (!iVar3 == -1)
	{
		*uParam1 = { *(uParam0[iVar3 /*4*/]) };
		*uParam2 = (uParam0[iVar3 /*4*/])->f_3;
	}
}

int func_992(struct<3> Param0, int iParam1)//Position - 0x172A3
{
	int iVar0;
	int iVar1;
	int iVar2;
	*iParam1 = -1;
	iVar2 = __LIB_7__.func_135(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_21__.func_423(iVar1))
			{
				if (__LIB_7__.func_135(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*iParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_993(struct<2> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x1E34C
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	iVar2 = 0;
	fVar3 = 50f;
	iVar0 = 1;
	while (iVar0 <= 128)
	{
		if (iVar2 < *uParam2)
		{
			iVar1 = 0;
			iVar1 = 0;
			while (iVar1 < 2)
			{
				if (SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/], Global_1312193[iVar0 /*1951*/].f_3[iVar1 /*3*/].f_1, 0f) < fVar3)
				{
					(*uParam2)[iVar2] = iVar0;
					(*uParam3)[iVar2] = 0;
					iVar2++;
					iVar1 = 99;
				}
				iVar1++;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 159)
	{
		fVar3 = 50f;
		if (iVar0 >= 83 && iVar0 <= 87)
		{
			if (__LIB_21__.func_423(iVar0))
			{
				fVar3 = 300f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 89 && iVar0 <= 97)
		{
			if (__LIB_4__.func_315(iVar0))
			{
				fVar3 = 75f;
			}
			else
			{
				fVar3 = 0f;
			}
		}
		if (iVar0 >= 123 && iVar0 <= 125)
		{
			fVar3 = 150f;
		}
		if (iVar2 < *uParam2)
		{
			fVar4 = SYSTEM::VDIST(Param0.f_0, Param0.f_1, 0f, Global_1946250.f_533[iVar0 /*3*/], Global_1946250.f_533[iVar0 /*3*/].f_1, 0f);
			if (fVar4 < fVar3)
			{
				(*uParam2)[iVar2] = iVar0;
				(*uParam3)[iVar2] = 1;
				iVar2++;
			}
		}
		iVar0++;
	}
	if (iVar2 > 0)
	{
		return 1;
	}
	return 0;
}

void func_994(bool bParam0, bool bParam1, int iParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0xA9340
{
	if (bParam0)
	{
		PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID(), 0);
		PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), true);
		PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), true);
		__LIB_0__.func_83(1);
		HUD::THEFEED_FLUSH_QUEUE();
		HUD::THEFEED_PAUSE();
		if (Global_20266.f_1 > 3 && !bParam6)
		{
			if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING())
			{
				AUDIO::STOP_SCRIPTED_CONVERSATION(false);
			}
			if (!__LIB_0__.func_73())
			{
				Global_20266.f_1 = 3;
			}
			Global_21605 = 5;
		}
		__LIB_0__.func_82(1, bParam3, iParam2, 0);
		Global_63160 = 1;
		Global_75488 = 1;
		Global_78317 = 1;
	}
	else
	{
		__LIB_0__.func_83(0);
		HUD::THEFEED_RESUME();
		Global_63160 = 0;
		if (bParam1)
		{
			GRAPHICS::CASCADE_SHADOWS_INIT_SESSION();
		}
		PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), false);
		PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), false);
		__LIB_0__.func_82(0, bParam3, iParam2, 0);
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (((((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !__LIB_18__.func_460(PLAYER::PLAYER_ID())) && !__LIB_6__.func_978(PLAYER::PLAYER_ID(), 0)) && !__LIB_0__.func_80()) && !bParam4) && !bParam5)
			{
				ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
			}
		}
		else if (((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !__LIB_18__.func_460(PLAYER::PLAYER_ID())) && !bParam4) && !bParam5)
		{
			ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
		}
		Global_78317 = 0;
	}
}

void func_995(bool bParam0)//Position - 0x22541
{
	if (bParam0)
	{
		if (!__LIB_14__.func_734(PLAYER::PLAYER_ID()))
		{
			MISC::SET_BIT(&(Global_1911933[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*260*/].f_50), 0);
		}
	}
	else if (__LIB_14__.func_734(PLAYER::PLAYER_ID()))
	{
		MISC::CLEAR_BIT(&(Global_1911933[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*260*/].f_50), 0);
	}
}

int func_996(int iParam0)//Position - 0x319C
{
	if (__LIB_14__.func_739(iParam0, 12))
	{
		return 1;
	}
	if (__LIB_14__.func_737(22))
	{
		return 1;
	}
	return 0;
}

void func_997(int iParam0, int iParam1)//Position - 0x3E26
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 6)
	{
		if (VEHICLE::GET_IS_DOOR_VALID(iParam1, iVar0))
		{
			iVar1 = __LIB_14__.func_741(iParam0, iVar0);
			if (iVar1 != -1)
			{
				switch (iVar1)
				{
					case 0:
						VEHICLE::SET_VEHICLE_DOOR_CONTROL(iParam1, iVar0, 5, 0f);
						VEHICLE::SET_VEHICLE_DOOR_LATCHED(iParam1, iVar0, true, true, true);
						break;
					case 1:
						VEHICLE::SET_VEHICLE_DOOR_LATCHED(iParam1, iVar0, false, false, true);
						VEHICLE::SET_VEHICLE_DOOR_CONTROL(iParam1, iVar0, 5, 1f);
						break;
					case 2:
						VEHICLE::SET_VEHICLE_DOOR_LATCHED(iParam1, iVar0, false, false, true);
						VEHICLE::SET_VEHICLE_DOOR_CONTROL(iParam1, iVar0, 1, 0.3f);
						break;
					case 3:
						VEHICLE::SET_VEHICLE_DOOR_BROKEN(iParam1, iVar0, true);
						break;
					}
				}
		}
		iVar0++;
	}
}

int func_998(int iParam0)//Position - 0x211E3
{
	if (__LIB_14__.func_743(iParam0, 8))
	{
		return 1;
	}
	if (__LIB_14__.func_737(22))
	{
		return 1;
	}
	return 0;
}

int func_999(int iParam0, int iParam1)//Position - 0xAF6DC
{
	int iVar0;
	var uVar1;
	int iVar2;
	if (__LIB_6__.func_781() == 0)
	{
		return 0;
	}
	if (__LIB_0__.func_703())
	{
		return 0;
	}
	iVar0 = __LIB_6__.func_381(iParam0);
	if (iVar0 != 500 && __LIB_1__.func_563(iVar0, -1))
	{
		return 1;
	}
	else
	{
		return 0;
	}
	uVar1 = __LIB_21__.func_431(iParam0, iParam1);
	iVar2 = __LIB_7__.func_250(iParam0);
	return BitTest(uVar1, __LIB_0__.func_158(iVar2));
}

void func_0(int* iParam0)//Position - 0x10D783
{
	iParam0->f_270 = 416;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_AVA_PL_T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.37f;
	iParam0->f_546 = 3;
	__LIB_24__::func_916(iParam0, 0, 418, "MC_AVA_PL_INT", 0, 1);
}

void func_1(int* iParam0)//Position - 0x10D7DC
{
	struct<2> Var0;
	iParam0->f_270 = 3;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_AVA_MN_T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.37f;
	iParam0->f_546 = 5;
	StringCopy(&Var0, "", 16);
	__LIB_23__::func_494(0, "MC_AVA_SG_CON", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "MC_AVA_CON_", 16);
	StringIntConCat(&Var0, Global_4718592.f_175385, 16);
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	__LIB_24__::func_916(iParam0, 1, 417, "MC_AVA_PL", 0, 1);
	__LIB_24__::func_916(iParam0, 2, 419, "MC_AVA_MISC", 0, 1);
	__LIB_24__::func_916(iParam0, 3, 420, "MC_AVA_GC", 0, 1);
}

void func_2(int* iParam0, int iParam1)//Position - 0x10F3F2
{
	bool bVar0;
	bool bVar1;
	struct<2> Var2;
	iParam0->f_270 = 408;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_VAROPT_7T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.33f;
	bVar0 = __LIB_22__::func_896();
	if (__LIB_22__::func_607(iParam0) == 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	iParam0->f_2728 = iParam1;
	if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/))
	{
		iParam0->f_2728 = -1;
	}
	__LIB_23__::func_494(0, __LIB_22__::func_897(Global_4718592.f_174999), 0, 1, 0, 0, 0);
	if (bVar0)
	{
		__LIB_23__::func_494(0, "MC_VAROPT_ENA", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "MC_VAROPT_DIS", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	if (iParam0->f_2728 != -1)
	{
		__LIB_24__::func_915(1, iParam0->f_2734[iParam1], "FMMC_MCAT", "FMMC_OBJC_", 0, -1, bVar0, -1);
		iParam0->f_546++;
		StringCopy(&Var2, "MC_VAROPT_7_2", 16);
		__LIB_23__::func_494(2, &Var2, 1, bVar0, 0, 0, 0);
		__LIB_23__::func_517((1 + iParam0->f_2728), 0);
		__LIB_23__::func_494(2, iParam0->f_563[3], 0, bVar0, 0, 0, 0);
		iParam0->f_546++;
		__LIB_24__::func_915(3, Global_4718592.f_174999.f_118[iParam0->f_2728 /*3*/].f_1, "MC_VAROPT_7_3", "FMMC_LGMG_TY_", 1, -1, Global_4718592.f_174999.f_118[iParam1 /*3*/] != 0, -1);
		iParam0->f_546++;
		StringCopy(&Var2, "FMMC_MG_IWA", 16);
		bVar1 = Global_4718592.f_174999.f_118[iParam0->f_2728 /*3*/].f_1 == 15;
		__LIB_24__::func_915(4, Global_4718592.f_174999.f_118[iParam0->f_2728 /*3*/].f_2, "MC_VAROPT_7_4", &Var2, 1, -1, bVar1, -1);
		iParam0->f_546++;
	}
}

void func_3(int* iParam0)//Position - 0x1103A3
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	iParam0->f_270 = 390;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_VAROPT_0T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.29f;
	bVar0 = __LIB_22__::func_896();
	if (__LIB_22__::func_607(iParam0) == 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, __LIB_22__::func_897(Global_4718592.f_174999), 0, 1, 0, 0, 0);
	if (bVar0)
	{
		__LIB_23__::func_494(0, "MC_VAROPT_ENA", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "MC_VAROPT_DIS", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		StringCopy(&Var2, "MC_VAROPT_0_", 16);
		StringIntConCat(&Var2, (1 + iVar1), 16);
		__LIB_24__::func_913((1 + iVar1), Global_4718592.f_174999.f_2[iVar1], &Var2, "", "FMMC_PERCENT", 0, 0, bVar0, 0, -1);
		iParam0->f_546++;
		iVar1++;
	}
}

void func_4(int* iParam0)//Position - 0x110C75
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_UVEH_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 892;
	iParam0->f_546 = __LIB_19__::func_186(Global_4980736.f_202517.f_15);
	bVar0 = false;
	while (bVar0 <= (iParam0->f_546 - 1))
	{
		__LIB_24__::func_923(iParam0, bVar0, 894, "FMMC_UVEHS", bVar0, 1);
		__LIB_23__::func_420(iParam0, bVar0, "MC_H_UVEHS", 0);
		bVar0++;
	}
}

void func_5(int* iParam0)//Position - 0x110FBD
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_ZNE_BF_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 226;
	iParam0->f_546 = 3;
	Global_23149 = 0.275f;
	bVar0 = iParam0->f_1133.f_107 > 0;
	__LIB_24__::func_913(0, iParam0->f_1133.f_107, "FMMC_ZNE_BF_0", "", "FMMC_SEL_SEC", 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_ZNE_BF_0", 0);
	__LIB_24__::func_913(1, iParam0->f_1133.f_108, "FMMC_ZNE_BF_1", "", "FMMC_SEL_SEC", 0, 0, bVar0, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_ZNE_BF_1", 0);
	__LIB_24__::func_913(2, iParam0->f_1133.f_109, "FMMC_ZNE_BF_2", "", "FMMC_SEL_SEC", 0, 0, bVar0, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_ZNE_BF_2", 0);
}

void func_6(int* iParam0, int iParam1, int iParam2, var uParam3, char* sParam4, bool bParam5, int iParam6)//Position - 0x1131F9
{
	__LIB_24__::func_913(iParam1, *uParam3, sParam4, "FMMC_SEL_NON", "NUMBER", -1, 0, bParam5, 0, iParam6);
}

void func_7(int* iParam0, int iParam1, var uParam2, char* sParam3, bool bParam4)//Position - 0x1137A7
{
	__LIB_22__::func_913(0.275f);
	__LIB_24__::func_913(iParam1, *uParam2, sParam3, "FMMC_PREQS_NONE", "FMMC_PREQS_N", -1, 0, bParam4, 0, -1);
}

void func_8(int* iParam0, int iParam1, var uParam2, bool bParam3, int* iParam4, bool bParam5, bool bParam6)//Position - 0x1137E9
{
	__LIB_22__::func_913(0.365f);
	if (__LIB_22__::func_607(iParam0) == iParam1)
	{
		MISC::SET_BIT(iParam0, 17);
		if (BitTest(*iParam0, 18))
		{
			__LIB_19__::func_171(iParam4, bParam5);
			MISC::CLEAR_BIT(iParam0, 18);
		}
	}
	if (!BitTest(*iParam4, bParam5))
	{
		__LIB_24__::func_913(iParam1, *uParam2, bParam3, "FMMC_PREQS_NONE", "FMMC_PREQS_APN", -1, 0, bParam6, 0, -1);
	}
	else
	{
		__LIB_24__::func_913(iParam1, *uParam2, bParam3, "FMMC_PREQS_NONE", "FMMC_PREQS_LPN", -1, 0, bParam6, 0, -1);
	}
}

void func_9(int* iParam0)//Position - 0x113935
{
	if (!__LIB_24__::func_800(iParam0->f_1133.f_10))
	{
		return;
	}
	switch (iParam0->f_1133.f_10)
	{
		case default:
			__LIB_23__::func_494(2, __LIB_22__::func_914(iParam0->f_1133.f_10), 0, 1, 0, 0, 0);
			__LIB_23__::func_494(2, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_1133.f_26, 0);
			break;
		case 70:
			__LIB_24__::func_915(2, iParam0->f_1133.f_26, __LIB_22__::func_914(iParam0->f_1133.f_10), "FMMC_WKSTL_", 0, -1, 1, -1);
			break;
	}
}

void func_10(int* iParam0)//Position - 0x113A38
{
	if (!__LIB_24__::func_801(iParam0->f_1133.f_10))
	{
		return;
	}
	__LIB_23__::func_494(1, __LIB_22__::func_916(iParam0->f_1133.f_10), 0, 1, 0, 0, 0);
	switch (iParam0->f_1133.f_10)
	{
		case 9:
			__LIB_23__::func_494(1, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1133.f_25, 2, 0);
			break;
		default:
			__LIB_23__::func_494(1, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1133.f_25, 1, 0);
			break;
	}
}

void func_11(int* iParam0)//Position - 0x113B55
{
	if (!__LIB_24__::func_802(iParam0->f_1133.f_10))
	{
		return;
	}
	__LIB_23__::func_494(0, __LIB_22__::func_918(iParam0->f_1133.f_10), 0, 1, 0, 0, 0);
	switch (iParam0->f_1133.f_10)
	{
		case 19:
			if (iParam0->f_1133.f_24 == 0f)
			{
				__LIB_23__::func_494(0, "FMMCCMENU_T_19A", 0, 1, 0, 0, 0);
			}
			else if (iParam0->f_1133.f_24 == 1f)
			{
				__LIB_23__::func_494(0, "FMMCCMENU_T_19B", 0, 1, 0, 0, 0);
			}
			else
			{
				__LIB_23__::func_494(0, "FMMCCMENU_T_19C", 0, 1, 0, 0, 0);
			}
			break;
		case 20:
			__LIB_23__::func_494(0, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_497((iParam0->f_1133.f_24 + 1f), 0, 0);
			break;
		case 48:
			__LIB_23__::func_494(0, "FMMCCRKTS", 1, 1, 0, 0, 0);
			__LIB_23__::func_497((iParam0->f_1133.f_24 * 0.001f), 0, 0);
			break;
		default:
			__LIB_23__::func_494(0, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1133.f_24, 0, 0);
			break;
	}
}

void func_12(bool bParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, char* sParam5, char* sParam6, bool bParam7)//Position - 0x1155A0
{
	__LIB_23__::func_494(bParam0, bParam3, 1, bParam7, 0, 0, 0);
	__LIB_23__::func_517(bParam4, 0);
	__LIB_24__::func_911(bParam0, iParam1, bParam2, sParam5, sParam6, bParam7);
}

void func_13(int* iParam0)//Position - 0x1164A9
{
	struct<2> Var0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CLF_TIT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 588;
	Global_23149 = 0.27f;
	if (Global_4718592.f_163642.f_1625 == 0)
	{
		__LIB_23__::func_494(0, "FMMC_CLF_LFT", 0, 1, 0, 0, 0);
		if (BitTest(Global_4718592.f_163642.f_5, 13))
		{
			__LIB_23__::func_494(0, "FMMC_LFT_SRF", 0, 1, 0, 0, 0);
		}
		else if (BitTest(Global_4718592.f_163642.f_5, 14))
		{
			__LIB_23__::func_494(0, "FMMC_LFT_IAB", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(0, "FMMC_SEL_NON", 0, 1, 0, 0, 0);
		}
	}
	else
	{
		StringCopy(&Var0, "FMMC_LFT_", 16);
		StringIntConCat(&Var0, Global_4718592.f_163642.f_1625, 16);
		__LIB_23__::func_494(0, "FMMC_CLF_LFT", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
		__LIB_24__::func_803(iParam0, 0, Global_4718592.f_163642.f_1625, "MC_H_LFT_", 0);
	}
	if ((!BitTest(Global_4718592.f_163642.f_5, 13) && !BitTest(Global_4718592.f_163642.f_5, 14)) && Global_4718592.f_163642.f_1625 == 0)
	{
		iParam0->f_546 = 1;
		return;
	}
	__LIB_23__::func_494(1, "FMMC_CLF_SHT", 0, 1, 0, 0, 0);
	if (Global_4718592.f_163642.f_1551 != -1)
	{
		__LIB_23__::func_494(1, "NUMBER", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_163642.f_1551, 0);
	}
	else
	{
		__LIB_23__::func_494(1, "FMMC_SEL_NON", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(2, "FMMC_CLF_SPD", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(2, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_163642.f_1552, 1, 0);
	__LIB_23__::func_494(3, "FMMC_CLF_STO", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(3, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_163642.f_1553, 1, 0);
	__LIB_23__::func_494(4, "FMMC_CLF_ENO", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(4, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_163642.f_1554, 1, 0);
	iParam0->f_546 = 5;
}

void func_14(int* iParam0)//Position - 0x11A28E
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	int iVar3;
	__LIB_23__::func_384(iParam0);
	iVar1 = iParam0->f_885;
	if (__LIB_18__::func_654())
	{
		iParam0->f_270 = 3;
		iParam0->f_848 = 0;
		iVar1 = 25;
		__LIB_1__::func_767("FMMC_MENU_CLT");
	}
	else
	{
		iParam0->f_270 = 760;
		__LIB_1__::func_767("FMMC_TEM_AVTT");
	}
	__LIB_19__::func_185((iParam0->f_848 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)));
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iVar3 = __LIB_18__::func_612(iVar1);
	iParam0->f_546 = iVar3;
	bVar0 = false;
	while (bVar0 <= (iVar3 - 1))
	{
		StringCopy(&Var2, __LIB_22__::func_16(__LIB_13__::func_470(iVar1, bVar0)), 16);
		__LIB_23__::func_494(bVar0, &Var2, 0, 1, 0, 0, 0);
		if (!BitTest(Global_4718592.f_13, 6) || __LIB_18__::func_654())
		{
			if (BitTest(Global_4718592.f_107367[iParam0->f_848 /*137*/][iVar1 /*4*/][__LIB_13__::func_437(bVar0)], __LIB_18__::func_410(bVar0)))
			{
				__LIB_23__::func_496(bVar0, 5, 0);
			}
			else
			{
				__LIB_23__::func_496(bVar0, 7, 0);
			}
		}
		else if (BitTest(Global_4718592.f_107961[iParam0->f_848 /*549*/][iParam0->f_2860 /*137*/][iVar1 /*4*/][__LIB_13__::func_437(bVar0)], __LIB_18__::func_410(bVar0)))
		{
			__LIB_23__::func_496(bVar0, 5, 0);
		}
		else
		{
			__LIB_23__::func_496(bVar0, 7, 0);
		}
		bVar0++;
	}
}

void func_15(int* iParam0)//Position - 0x11CD32
{
	iParam0->f_270 = 3;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_T0_M37T");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_22__::func_913(0.27f);
	iParam0->f_546 = 5;
	if (!__LIB_22__::func_721())
	{
		__LIB_24__::func_946(0, Global_4718592.f_593, "LOB_CAT_18" /* GXT: Number of Teams */, 1, 0);
		__LIB_23__::func_420(iParam0, 0, "DMC_H_46", 0);
	}
	__LIB_24__::func_916(iParam0, 1, 257, "FMMC_CTF_TMNM", 0, 1);
	if (!__LIB_22__::func_721())
	{
		__LIB_24__::func_916(iParam0, 2, 68, "FMMC_TEA_BAL" /* GXT: Team Balancing */, 0, !__LIB_0__::func_625());
		__LIB_23__::func_420(iParam0, 2, "DM_H_TEA_BAL", 0);
		if (BitTest(iParam0->f_744, 29))
		{
			__LIB_23__::func_496(2, 28, 0);
		}
	}
	__LIB_24__::func_916(iParam0, 3, 258, "FMMC_CTF_TMWTD", 0, !__LIB_18__::func_654());
	__LIB_24__::func_916(iParam0, 4, 259, "FMMC_TFW", 0, !__LIB_0__::func_625());
}

void func_16(int* iParam0)//Position - 0x11EFDE
{
	bool bVar0;
	iParam0->f_270 = 244;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_DPOO_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) >= Global_4718592.f_593)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	iParam0->f_848 = __LIB_22__::func_607(iParam0);
	bVar0 = false;
	while (bVar0 <= 3)
	{
		__LIB_23__::func_494(bVar0, "FMMC_TEAM_NO", 1, bVar0 < Global_4718592.f_593, 0, 0, 0);
		__LIB_23__::func_517(bVar0, 0);
		__LIB_24__::func_911(bVar0, Global_4718592.f_658[bVar0 /*22957*/].f_12179, 6, "FMMC_SEL_YES", "FMMC_SEL_NO", bVar0 < Global_4718592.f_593);
		bVar0++;
	}
	iParam0->f_546 = 4;
}

void func_17(int* iParam0)//Position - 0x11FB5D
{
	bool bVar0;
	iParam0->f_270 = 244;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_TEM_FPNT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar0 = false;
	while (bVar0 <= (Global_4718592.f_593 - 1))
	{
		__LIB_23__::func_494(bVar0, "FMMC_TEAM_NO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(bVar0, 0);
		if (BitTest(Global_4718592.f_658[bVar0 /*22957*/].f_12179, 4))
		{
			__LIB_23__::func_494(bVar0, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(bVar0, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		__LIB_24__::func_911(bVar0, Global_4718592.f_658[bVar0 /*22957*/].f_12179, 4, "FMMC_SEL_YES", "FMMC_SEL_NO", 1);
		bVar0++;
	}
	iParam0->f_546 = Global_4718592.f_593;
}

void func_18(int* iParam0)//Position - 0x120E7E
{
	struct<2> Var0;
	bool bVar1;
	iParam0->f_270 = 244;
	__LIB_23__::func_384(iParam0);
	if (__LIB_0__::func_998())
	{
		__LIB_1__::func_767("KOTH_T0_TRV");
	}
	else
	{
		__LIB_1__::func_767("FMMC_T0_TRV");
	}
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_546 = 4;
	if (Global_4718592.f_2 == 6)
	{
		iParam0->f_270 = 249;
	}
	else if (__LIB_1__::func_126())
	{
		iParam0->f_270 = 3;
	}
	__LIB_22__::func_913((Global_23149 + 0.05f));
	iParam0->f_848 = __LIB_22__::func_607(iParam0);
	iParam0->f_929 = __LIB_22__::func_424(Global_4718592.f_110280[iParam0->f_848], 0);
	iParam0->f_930 = __LIB_22__::func_423(Global_4718592.f_110280[iParam0->f_848], 0);
	if (Global_4718592.f_110280[iParam0->f_848] == 0)
	{
		iParam0->f_930 = 0;
	}
	bVar1 = false;
	while (bVar1 < 4)
	{
		if (__LIB_0__::func_998() && Global_4718592.f_623 == 0)
		{
			__LIB_23__::func_494(bVar1, "KOTH_T0_TRV_1", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(bVar1, "FMMC_TEAM_NO", 1, bVar1 < Global_4718592.f_593, 0, 0, 0);
			__LIB_23__::func_517(bVar1, 0);
		}
		if (Global_4718592.f_110280[bVar1] != 0 && bVar1 < Global_4718592.f_593)
		{
			StringCopy(&Var0, __LIB_22__::func_16(Global_4718592.f_110280[bVar1]), 16);
			__LIB_23__::func_494(bVar1, &Var0, 0, bVar1 < Global_4718592.f_593, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(bVar1, "FMMC_T0_TRV_N", 0, bVar1 < Global_4718592.f_593, 0, 0, 0);
		}
		iParam0->f_14[bVar1] = 254;
		if (__LIB_0__::func_998() && Global_4718592.f_623 == 0)
		{
			iParam0->f_546 = 1;
		}
		else
		{
			bVar1++;
		}
	}
}

void func_19(bool bParam0, int* iParam1)//Position - 0x122B52
{
	struct<4> Var0;
	Var0 = { __LIB_24__::func_804(__LIB_22__::func_932(iParam1, iParam1->f_5417, iParam1->f_5418)) };
	__LIB_23__::func_494(bParam0, "FMMC_BSO_TYPE", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(bParam0, &Var0, 0, 1, 0, 0, 0);
}

void func_20(int* iParam0)//Position - 0x1234AF
{
	int iVar0;
	int iVar1;
	int iVar2;
	iParam0->f_270 = 764;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CVSM");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iVar0 = iParam0->f_848;
	iVar2 = 0;
	while (iVar2 <= 3)
	{
		__LIB_24__::func_947(iVar1, Global_4718592.f_182965[iVar0 /*5*/][iVar2], 1, "FMMC_CVP", iVar2, 1);
		iVar1++;
		iVar2++;
	}
	iVar2 = 0;
	while (iVar2 <= 3)
	{
		__LIB_24__::func_915(iVar1, Global_4718592.f_182986[iVar0 /*5*/][iVar2], "FMMC_SS_RL_RFE", "FMMC_SS_RL_RFE", 0, -1, 1, -1);
		iVar1++;
		iVar2++;
	}
	iParam0->f_546 = iVar1;
}

void func_21(int* iParam0)//Position - 0x1252B0
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_BLP_TOVRT");
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 45;
	iVar0 = 0;
	while (iVar0 <= (Global_4718592.f_593 - 1))
	{
		__LIB_24__::func_923(iParam0, iVar0, 687, "FMMC_BLP_TOVR", iVar0, 1);
		iVar0++;
	}
	iParam0->f_848 = __LIB_22__::func_607(iParam0);
	iParam0->f_546 = Global_4718592.f_593;
}

void func_22(int* iParam0)//Position - 0x125D40
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_OVR_POST");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) >= 1)
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	iParam0->f_270 = 690;
	__LIB_23__::func_494(0, "FMMC_OVR_LOK", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_168800.f_8, 24))
	{
		__LIB_23__::func_496(0, 5, 0);
	}
	else
	{
		__LIB_23__::func_496(0, 7, 0);
	}
	__LIB_23__::func_494(1, "FMMC_OVR_XVAL", 0, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_494(1, "NUMBER", 1, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168800.f_51, 3, 0);
	__LIB_22__::func_904(iParam0, 1, 2);
	__LIB_24__::func_625(iParam0, 1, 0.001f, 1f, 0.001f, 10f, 1092616192);
	__LIB_23__::func_494(2, "FMMC_OVR_YVAL", 0, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_494(2, "NUMBER", 1, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168800.f_51.f_1, 3, 0);
	__LIB_22__::func_904(iParam0, 2, 2);
	__LIB_24__::func_625(iParam0, 2, 0.001f, 1f, 0.001f, 10f, 1092616192);
	__LIB_23__::func_494(3, "FMMC_OVR_ZVAL", 0, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_494(3, "NUMBER", 1, BitTest(Global_4718592.f_168800.f_8, 24), 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168800.f_51.f_2, 3, 0);
	__LIB_22__::func_904(iParam0, 3, 2);
	__LIB_24__::func_625(iParam0, 3, 0.001f, 1f, 0.001f, 10f, 1092616192);
	iParam0->f_546 = 4;
}

void func_23(int* iParam0)//Position - 0x126A0C
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_OVR_POST");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 93;
	__LIB_23__::func_494(0, "FMMC_OVR_LOK", 0, 1, 0, 0, 0);
	if (__LIB_22__::func_942(iParam0))
	{
		__LIB_23__::func_494(0, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(2, "FMMC_OVR_XVAL", 0, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_494(2, "NUMBER", 1, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_497(iParam0->f_2597, 3, 0);
	__LIB_22__::func_904(iParam0, 2, 2);
	__LIB_24__::func_625(iParam0, 2, 0.001f, 1f, 0.001f, 30f, 2f);
	__LIB_23__::func_494(3, "FMMC_OVR_YVAL", 0, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_494(3, "NUMBER", 1, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_497(iParam0->f_2597.f_1, 3, 0);
	__LIB_22__::func_904(iParam0, 3, 2);
	__LIB_24__::func_625(iParam0, 3, 0.001f, 1f, 0.001f, 30f, 2f);
	__LIB_23__::func_494(4, "FMMC_OVR_ZVAL", 0, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_494(4, "NUMBER", 1, __LIB_22__::func_942(iParam0), 0, 0, 0);
	__LIB_23__::func_497(iParam0->f_2597.f_2, 3, 0);
	__LIB_22__::func_904(iParam0, 4, 2);
	__LIB_24__::func_625(iParam0, 4, 0.001f, 1f, 0.001f, 30f, 2f);
	iParam0->f_546 = 5;
}

void func_24(int* iParam0)//Position - 0x12AA7D
{
	struct<2> Var0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_PAB_T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	if (Global_4718592.f_170137.f_2727 == 0)
	{
		bVar1 = !__LIB_0__::func_86(Global_4718592.f_170137.f_2717[1 /*3*/]);
	}
	else
	{
		bVar1 = !__LIB_0__::func_86(Global_4718592.f_170137.f_2717[0 /*3*/]);
	}
	iParam0->f_270 = 2;
	if (iParam0->f_4701 > -1)
	{
		if (Global_4718592.f_170137.f_2727 == 0)
		{
			if (iParam0->f_4701 == 0)
			{
				__LIB_1__::func_767("SC_PLC_F_T");
				__LIB_23__::func_494(0, "SC_PLC_F", 0, 1, 0, 0, 0);
			}
			else
			{
				__LIB_1__::func_767("SC_PLC_B_T");
				__LIB_23__::func_494(0, "SC_PLC_B", 0, 1, 0, 0, 0);
			}
		}
		else
		{
			__LIB_1__::func_767("SC_PLC_CY_T");
			__LIB_23__::func_494(0, "SC_PLC_CY", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[0] = 19;
		iParam0->f_546++;
		iParam0->f_270 = 902;
		return;
	}
	if (__LIB_22__::func_607(iParam0) == 1 || __LIB_22__::func_607(iParam0) == 7)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "SC_PAT", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "SC_PA_TYP_", 16);
	StringIntConCat(&Var0, Global_4718592.f_170137.f_2727, 16);
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	if (!bVar1)
	{
		__LIB_23__::func_494(1, "SC_PAP", 0, 1, 0, 0, 0);
	}
	if (bVar1)
	{
		if (Global_4718592.f_170137.f_2727 == 0)
		{
			StringCopy(&Var0, "SC_ED_F", 16);
			__LIB_23__::func_494(2, &Var0, 0, 1, 0, 0, 0);
			iParam0->f_142[2] = 17;
			StringCopy(&Var0, "SC_ED_B", 16);
			__LIB_23__::func_494(3, &Var0, 0, 1, 0, 0, 0);
			iParam0->f_142[3] = 18;
		}
		else
		{
			__LIB_23__::func_494(2, "SC_ED_CN", 0, 1, 0, 0, 0);
			iParam0->f_142[2] = 17;
		}
	}
	if (Global_4718592.f_170137.f_2727 == 0)
	{
		__LIB_24__::func_945(4, Global_4718592.f_170137.f_2724, "SC_PAR", 1, 2);
	}
	else if (Global_4718592.f_170137.f_2727 == 1)
	{
		__LIB_24__::func_945(4, Global_4718592.f_170137.f_2724, "SC_RAD", 1, 2);
	}
	if (Global_4718592.f_170137.f_2725 != 0f)
	{
		__LIB_24__::func_945(5, Global_4718592.f_170137.f_2725, "SC_PLC_RBH", 1, 2);
	}
	else
	{
		__LIB_23__::func_494(5, "SC_PLC_RBH", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(5, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	if (Global_4718592.f_170137.f_2726 != 0f)
	{
		__LIB_24__::func_945(6, -Global_4718592.f_170137.f_2726, "SC_PLC_LBO", 1, 2);
	}
	else
	{
		__LIB_23__::func_494(6, "SC_PLC_LBO", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(6, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(7, "SC_PAC", 0, !__LIB_0__::func_86(Global_4718592.f_170137.f_2717[0 /*3*/]), 0, 0, 0);
	iParam0->f_546 = 8;
}

void func_25(int* iParam0, int iParam1, char* sParam2, var uParam3)//Position - 0x12D020
{
	__LIB_24__::func_913(iParam1, *uParam3, sParam2, "VFX_MNU_12b", "", -1, 0, 1, 1, -1);
	__LIB_23__::func_420(iParam0, iParam1, "VFX_MNH_12", 0);
}

void func_26(int* iParam0)//Position - 0x133656
{
	if (Global_4718592.f_168703 > 0)
	{
		__LIB_23__::func_494(1, "FMMC_MTYPE", 0, 1, 0, 0, 0);
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_166222[iParam0->f_894 /*248*/].f_244)))
		{
			__LIB_23__::func_494(1, "FMMC_PTMP_NUM", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_894, 0);
		}
		else
		{
			__LIB_23__::func_494(1, "FMMC_MN" /* GXT: ~a~ */, 1, 1, 0, 0, 0);
			__LIB_23__::func_495(&(Global_4718592.f_166222[iParam0->f_894 /*248*/].f_244), 0, 0, 0);
		}
	}
	else
	{
		__LIB_24__::func_916(iParam0, 1, 8, "FMMC_PTMP_NEW", 0, 1);
	}
	iParam0->f_546 = 2;
}

void func_27(int* iParam0)//Position - 0x133866
{
	int iVar0;
	bool bVar1;
	struct<2> Var2;
	bool bVar3;
	bool bVar4;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PCMP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 10;
	if (iParam0->f_2575 != joaat("WEAPON_CARBINERIFLE"))
	{
		iVar0 = __LIB_24__::func_809(iParam0->f_2575);
		bVar1 = false;
		while (bVar1 <= (iVar0 - 1))
		{
			StringCopy(&Var2, __LIB_19__::func_181(__LIB_0__::func_722(iParam0->f_2575, bVar1), iParam0->f_2575), 16);
			if (__LIB_22__::func_990(Var2))
			{
				bVar3 = __LIB_22__::func_989(iParam0, __LIB_0__::func_722(iParam0->f_2575, bVar1));
				bVar4 = !__LIB_24__::func_999(iParam0->f_2575, bVar1);
				__LIB_24__::func_986(bVar1, bVar3, &Var2, "FMMC_SEL_YES", "FMMC_SEL_NO", bVar4);
				__LIB_23__::func_420(iParam0, bVar1, "MC_H_IPCMP", 0);
			}
			bVar1++;
		}
	}
	else
	{
		iVar0 = __LIB_24__::func_629();
		bVar1 = false;
		while (bVar1 <= (iVar0 - 1))
		{
			StringCopy(&Var2, __LIB_19__::func_181(__LIB_22__::func_988(bVar1), iParam0->f_2575), 16);
			bVar3 = __LIB_22__::func_989(iParam0, __LIB_22__::func_988(bVar1));
			bVar4 = !__LIB_24__::func_808(bVar1);
			__LIB_24__::func_986(bVar1, bVar3, &Var2, "FMMC_SEL_YES", "FMMC_SEL_NO", bVar4);
			__LIB_23__::func_420(iParam0, bVar1, "MC_H_IPCMP", 0);
			bVar1++;
		}
	}
	iParam0->f_546 = iVar0;
}

void func_28(int* iParam0, var uParam1)//Position - 0x134719
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_OA_T");
	__LIB_19__::func_185(iParam0->f_552);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_546 = 6;
	switch (iParam0->f_550)
	{
		case 3:
			iParam0->f_270 = 130;
			break;
		case 76:
			iParam0->f_270 = 142;
			break;
	}
	__LIB_24__::func_943(0, "FMMC_OA_L", uParam1, 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_OA_L", 0);
	__LIB_24__::func_943(1, "FMMC_OA_LS", &(uParam1->f_1), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_OA_SS", 0);
	__LIB_24__::func_943(2, "FMMC_OA_POC", &(uParam1->f_2), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_OA_POC", 0);
	__LIB_24__::func_943(3, "FMMC_OA_POCS", &(uParam1->f_3), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_OA_SS", 0);
	__LIB_24__::func_943(4, "FMMC_OA_POD", &(uParam1->f_4), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 4, "MC_H_OA_POD", 0);
	__LIB_24__::func_943(5, "FMMC_OA_PODS", &(uParam1->f_5), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 5, "MC_H_OA_SS", 0);
}

void func_29(int* iParam0)//Position - 0x134B79
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMCT_IN_OBJT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 142;
	iParam0->f_546 = 3;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_24__::func_943(0, "FMMC_INOB_TXT", &(Global_4980736.f_34371.f_79), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_INOB_TXT", 0);
	__LIB_24__::func_943(1, "FMMC_INOB_TXTW", &(Global_4980736.f_34371.f_80), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_INOB_TXTW", 0);
	__LIB_24__::func_945(2, Global_4980736.f_34371.f_81, "FMMC_INOB_PRX", 1, 2);
	__LIB_23__::func_420(iParam0, 2, "MC_H_INOB_PRX", 0);
}

void func_30(int* iParam0)//Position - 0x134E7C
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("T_INCN_LKDR");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 143;
	iParam0->f_546 = 32;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar0 = false;
	while (bVar0 <= (Global_4980736.f_34610 - 1))
	{
		__LIB_25__::func_0(bVar0, Global_4980736.f_34371.f_61.f_10, bVar0, 9, "FMMC_INCN_DOORX", bVar0, 1);
		bVar0++;
	}
}

void func_31(int* iParam0)//Position - 0x134F00
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("T_INCN_UNDR");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 143;
	iParam0->f_546 = 32;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar0 = false;
	while (bVar0 <= (Global_4980736.f_34610 - 1))
	{
		__LIB_25__::func_0(bVar0, Global_4980736.f_34371.f_61.f_11, bVar0, 9, "FMMC_INCN_DOORX", bVar0, 1);
		bVar0++;
	}
}

void func_32(int* iParam0, int iParam1, var uParam2, bool bParam3)//Position - 0x135FA8
{
	__LIB_24__::func_915(iParam1, *uParam2, "FMMC_MG_IW_A", "FMMC_MG_IWA", 0, -1, bParam3, -1);
}

void func_33(int* iParam0, var uParam1)//Position - 0x137FCE
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_DRN_WT");
	__LIB_19__::func_185(iParam0->f_552);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 779;
	iParam0->f_546 = 5;
	__LIB_24__::func_915(0, uParam1->f_10[iParam0->f_552 /*5*/], "FMMC_DRN_WTY", "FMMC_DRN_WEP", 0, 0, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_DRN_WTY", 0);
	__LIB_24__::func_946(1, uParam1->f_10[iParam0->f_552 /*5*/].f_1, "FMMC_DRN_WSA", 1, 1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_DRN_WSA", 0);
	__LIB_24__::func_945(2, (SYSTEM::TO_FLOAT(uParam1->f_10[iParam0->f_552 /*5*/].f_2) / 1000f), "FMMC_DRN_WRT", 1, 2);
	__LIB_23__::func_420(iParam0, 2, "MC_H_DRN_WRT", 0);
	__LIB_24__::func_945(3, (SYSTEM::TO_FLOAT(uParam1->f_10[iParam0->f_552 /*5*/].f_3) / 1000f), "FMMC_DRN_WST", 1, 2);
	__LIB_23__::func_420(iParam0, 3, "MC_H_DRN_WST", 0);
	__LIB_24__::func_946(4, uParam1->f_10[iParam0->f_552 /*5*/].f_4, "FMMC_DRN_WAM", 1, 0);
	__LIB_23__::func_420(iParam0, 4, "MC_H_DRN_WAM", 0);
}

void func_34(int* iParam0)//Position - 0x1384E5
{
	iParam0->f_270 = 130;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("OBJ_DRPOF_TT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 3;
	if (__LIB_22__::func_607(iParam0) == 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_24__::func_941(iParam0, 0, &(Global_4980736.f_19887.f_138), "OBJ_DRPOF_0", 1, 1, 0, -1);
	__LIB_24__::func_939(1, Global_4980736.f_19887.f_141, "ENT_DRPOF_1", "", 0f, 1, 1, 0);
	__LIB_24__::func_939(2, Global_4980736.f_19887.f_142, "ENT_DRPOF_2", "", 0f, 1, 1, 0);
}

void func_35(int* iParam0)//Position - 0x13A09A
{
	__LIB_24__::func_915(0, iParam0->f_5570, "FMMC_MCAT", "FMMC_OBJC_", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_OBJC", 0);
	iParam0->f_546++;
	if (__LIB_10__::func_207() && iParam0->f_5570 == 13)
	{
	}
	else
	{
		__LIB_24__::func_930(1, "FMMC_MTYPE", iParam0->f_563[3], 1, 0, -1);
		__LIB_23__::func_420(iParam0, 1, "MC_H_OBJT", 0);
		iParam0->f_546++;
	}
}

void func_36(int* iParam0)//Position - 0x13B9C2
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_VEH_RTS_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 11;
	iParam0->f_546 = 4;
	__LIB_24__::func_916(iParam0, 0, 200, "FMMC_VEH_CAP", 0, 1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_VEH_CAP", 0);
	__LIB_24__::func_913(1, iParam0->f_1284, "FMMC_VEH_PHR", "FMMC_SEL_OFF", "FMMC_SEL_MET", 0, 0, 1, 0, -1);
	__LIB_24__::func_913(2, iParam0->f_2467, "FMMC_GOTOPROX", "LOB_PEDS_0" /* GXT: Off */, "FMMC_ASSRL20_1", 0, 0, 1, 0, -1);
	__LIB_24__::func_916(iParam0, 3, 711, "FMMC_IGN_PRO", 0, 1);
}

void func_37(int iParam0, int iParam1, var uParam2, int iParam3)//Position - 0x13CE36
{
	int iVar0;
	struct<2> Var1;
	iVar0 = VEHICLE::GET_NUM_VEHICLE_MODS(iParam1, iParam3);
	*uParam2 = __LIB_22__::func_500(*uParam2, -1, (iVar0 - 1));
	StringCopy(&Var1, "FMMC_VCM_", 16);
	StringIntConCat(&Var1, (iParam0 - 3), 16);
	__LIB_24__::func_913(iParam0, *uParam2, &Var1, "", "", -1, 0, iVar0 > 0, 0, -1);
}

void func_38(int* iParam0)//Position - 0x13DE7A
{
	float fVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_VEH_CHS_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) > 2)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	iParam0->f_270 = 189;
	iParam0->f_546 = 8;
	__LIB_24__::func_945(0, iParam0->f_2484[0], "FMMC_VEH_CHS_P2", 1, 2);
	__LIB_23__::func_420(iParam0, 0, "MC_H_VEH_CHS_P", 0);
	__LIB_24__::func_945(1, iParam0->f_2484[1], "FMMC_VEH_CHS_P3", 1, 2);
	__LIB_23__::func_420(iParam0, 1, "MC_H_VEH_CHS_P", 0);
	__LIB_24__::func_945(2, iParam0->f_2484[2], "FMMC_VEH_CHS_P4", 1, 2);
	__LIB_23__::func_420(iParam0, 2, "MC_H_VEH_CHS_P", 0);
	if (__LIB_22__::func_607(iParam0) < 3)
	{
		fVar0 = iParam0->f_2484[__LIB_22__::func_607(iParam0)];
	}
	__LIB_24__::func_945(3, (IntToFloat(iParam0->f_2480) * fVar0), "MC_T_VEHBH", 0, 2);
	__LIB_22__::func_904(iParam0, 3, 3);
	__LIB_24__::func_945(4, (IntToFloat(iParam0->f_2478) * fVar0), "MC_T_VEHEH", 0, 2);
	__LIB_22__::func_904(iParam0, 4, 3);
	__LIB_24__::func_945(5, (IntToFloat(iParam0->f_2479) * fVar0), "MC_T_VEHTH", 0, 2);
	__LIB_22__::func_904(iParam0, 5, 3);
	__LIB_24__::func_945(6, (IntToFloat(iParam0->f_2481) * fVar0), "MC_T_VEHHMRH", 0, 2);
	__LIB_22__::func_904(iParam0, 6, 3);
	__LIB_24__::func_945(7, (IntToFloat(iParam0->f_2482) * fVar0), "MC_T_VEHHTRH", 0, 2);
	__LIB_22__::func_904(iParam0, 7, 3);
}

void func_39(int* iParam0)//Position - 0x13F6FC
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_VEH_WBOT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 174;
	iParam0->f_546 = 3;
	__LIB_24__::func_913(0, Global_4980736.f_92979.f_292, "FMMC_WBO_WC", "FMMC_UNL_AMMO", "", 0, 0, 1, 0, -1);
	bVar0 = Global_4980736.f_92979.f_292 != false;
	__LIB_24__::func_946(1, Global_4980736.f_92979.f_293, "FMMC_WBO_SW", bVar0, 0);
	__LIB_24__::func_945(2, (IntToFloat(Global_4980736.f_92979.f_294) / 1000f), "FMMC_WBO_RR", bVar0, 2);
}

void func_40(int* iParam0)//Position - 0x1455D8
{
	struct<2> Var0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMCCMENU_GWRT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 7;
	iParam0->f_270 = 571;
	bVar1 = iParam0->f_1263 >= false;
	if (((__LIB_22__::func_607(iParam0) == 2 || __LIB_22__::func_607(iParam0) == 3) || __LIB_22__::func_607(iParam0) == 4) || __LIB_22__::func_607(iParam0) == 5)
	{
		__LIB_12__::func_593(0, bVar1, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "FMMC_GWR_WPN", 0, 1, 0, 0, 0);
	StringCopy(&Var0, __LIB_24__::func_728(iParam0->f_1265), 16);
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "FMMC_GWR_TEA", 0, 1, 0, 0, 0);
	if (iParam0->f_1263 < 0)
	{
		__LIB_23__::func_494(1, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(1, "FMMC_TEAM_NO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1263, 0);
	}
	__LIB_23__::func_494(2, "FMMC_GWR_RUL", 0, bVar1, 0, 0, 0);
	if (iParam0->f_1264 < 0)
	{
		__LIB_23__::func_494(2, "FMMC_SEL_OFF", 0, bVar1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(2, "FMMC_RULEVAR", 1, bVar1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1264, 0);
	}
	__LIB_23__::func_494(3, "FMMC_GWR_MDP", 0, bVar1, 0, 0, 0);
	if (BitTest(iParam0->f_975, 15))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(3, &Var0, 0, bVar1, 0, 0, 0);
	__LIB_23__::func_494(4, "FMMC_GWR_AGG", 0, bVar1, 0, 0, 0);
	if (BitTest(iParam0->f_975, 16))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(4, &Var0, 0, bVar1, 0, 0, 0);
	__LIB_23__::func_494(5, "FMMC_GWR_HOL", 0, bVar1, 0, 0, 0);
	if (BitTest(iParam0->f_975, 17))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(5, &Var0, 0, bVar1, 0, 0, 0);
}

void func_41(int* iParam0, var uParam1, var uParam2, int iParam3, char* sParam4, int iParam5, char* sParam6)//Position - 0x146AFC
{
	int iVar0;
	bool bVar1;
	if (*uParam1 == -1)
	{
		iVar0 = -1;
		__LIB_24__::func_816(*uParam2, uParam1, &iVar0);
	}
	__LIB_24__::func_915(iParam3, *uParam1, sParam4, "FMMC_PED_IDC_", 0, -1, 1, -1);
	bVar1 = (*uParam1 != 0 && *uParam1 != 1);
	__LIB_24__::func_915(iParam5, *uParam2, sParam6, "FMMCPD_ID_", 0, -1, bVar1, -1);
}

void func_42(int* iParam0)//Position - 0x14DE79
{
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_CGS_BOU_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 74;
	iParam0->f_546 = 1;
	__LIB_24__::func_913(0, Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_255, "DM_CGS_BOUI_0", "", "", -1, 1, 1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "DM_CGS_BOUI_H_0", 0);
}

void func_43(int* iParam0)//Position - 0x14E7C4
{
	int iVar0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_BLP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 74;
	iParam0->f_546 = 2;
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_33;
	__LIB_24__::func_915(0, iVar0, "DM_BLP_TP", "DM_BLP_TP_", 0, -1, 1, -1);
	__LIB_24__::func_803(iParam0, 0, iVar0, "DM_H_BLP_TP_", 0);
	if (iVar0 == 3 || iVar0 == 4)
	{
		iVar1 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_33.f_1;
		__LIB_24__::func_915(1, iVar1, "DM_BLP_CT", "DM_BLP_CT_", 0, -1, 1, -1);
		__LIB_23__::func_420(iParam0, 1, "DM_H_BLP_CT", 0);
	}
}

void func_44(int* iParam0)//Position - 0x14EAEF
{
	int iVar0;
	char* sVar1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_SCRSWG_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 77;
	iParam0->f_546 = 9;
	bVar2 = false;
	while (bVar2 <= 8)
	{
		if (bVar2 != 5)
		{
			iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_11[bVar2];
			sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
			__LIB_24__::func_913(bVar2, iVar0, __LIB_23__::func_34(bVar2, 1), "", sVar1, 0, 0, 1, 0, -1);
			__LIB_23__::func_420(iParam0, bVar2, "DM_H_SCRSWGG", 0);
		}
		bVar2++;
	}
}

void func_45(int* iParam0)//Position - 0x14ECE5
{
	int iVar0;
	char* sVar1;
	char cVar2[16];
	bool bVar3;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_SCRST_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 77;
	iParam0->f_546 = Global_4718592.f_593;
	bVar3 = false;
	while (bVar3 <= (Global_4718592.f_593 - 1))
	{
		iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_6[bVar3];
		sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
		StringCopy(&cVar2, "DM_TEAMBNS_", 16);
		StringIntConCat(&cVar2, bVar3, 16);
		__LIB_24__::func_913(bVar3, iVar0, __LIB_0__::func_965(&cVar2), "", sVar1, 0, 0, 1, 0, -1);
		__LIB_23__::func_420(iParam0, bVar3, "DM_H_SCRSTT", 0);
		bVar3++;
	}
}

void func_46(int* iParam0)//Position - 0x14EDBD
{
	int iVar0;
	char* sVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_SCRP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 77;
	iParam0->f_546 = 2;
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_4;
	sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
	__LIB_24__::func_913(0, iVar0, "DM_SCRPF" /* GXT: First Place */, "", sVar1, 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "DM_H_SCRPF", 0);
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_5;
	sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
	__LIB_24__::func_913(1, iVar0, "DM_SCRPL" /* GXT: Last Place */, "", sVar1, 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "DM_H_SCRPL", 0);
}

void func_47(int* iParam0)//Position - 0x14EEA3
{
	int iVar0;
	char* sVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_SCR_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 74;
	iParam0->f_546 = 10;
	__LIB_24__::func_946(0, Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9, "DM_SCRK", 1, 0);
	__LIB_23__::func_420(iParam0, 0, "DM_H_SCRK", 0);
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_1;
	sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
	__LIB_24__::func_913(1, iVar0, "DM_SCRH", "", sVar1, 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "DM_H_SCRG", 0);
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_2;
	sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
	__LIB_24__::func_913(2, iVar0, "DM_SCRM", "", sVar1, 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "DM_H_SCRG", 0);
	iVar0 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_3;
	sVar1 = __LIB_1__::func_295(iVar0 > 0, "DM_SCR_POS", "");
	__LIB_24__::func_913(3, iVar0, "DM_SCRV", "", sVar1, 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 3, "DM_H_SCRV", 0);
	__LIB_24__::func_916(iParam0, 4, 78, "DM_SCRP", 0, 1);
	__LIB_23__::func_420(iParam0, 4, "DM_H_SCRP", 0);
	__LIB_24__::func_916(iParam0, 5, 79, "DM_SCRST", 0, 1);
	__LIB_23__::func_420(iParam0, 5, "DM_H_SCRST", 0);
	__LIB_24__::func_916(iParam0, 6, 80, "DM_SCRSWG", 0, 1);
	__LIB_23__::func_420(iParam0, 6, "DM_H_SCRSWG", 0);
	__LIB_24__::func_946(7, Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_22, "DM_SCRS", 1, 0);
	__LIB_23__::func_420(iParam0, 7, "DM_H_SCRS", 0);
	__LIB_24__::func_946(8, Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_23, "DM_SCRB", 1, 0);
	__LIB_23__::func_420(iParam0, 8, "DM_H_SCRB", 0);
	__LIB_24__::func_946(9, Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_9.f_21, "DM_SCRF", 1, 0);
	__LIB_23__::func_420(iParam0, 9, "DM_H_SCRF", 0);
}

void func_48(int* iParam0)//Position - 0x14F0E9
{
	bool bVar0;
	int iVar1;
	float fVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_WEPS_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 81;
	iParam0->f_546 = 9;
	bVar0 = false;
	while (bVar0 <= 8)
	{
		iVar1 = Global_4718592.f_180134[iParam0->f_5702 /*256*/].f_238[bVar0];
		if (iVar1 == 0)
		{
			__LIB_24__::func_930(bVar0, __LIB_23__::func_34(bVar0, 0), "DM_WEP_OHK", 1, 0, -1);
		}
		else
		{
			fVar2 = (SYSTEM::TO_FLOAT(iVar1) / 100f);
			__LIB_24__::func_942(bVar0, fVar2, __LIB_23__::func_34(bVar0, 0), "DM_MULT", "", 1f, 1, 1, 0);
		}
		__LIB_23__::func_420(iParam0, bVar0, "DM_H_WEP", 0);
		bVar0++;
	}
}

void func_49(int* iParam0)//Position - 0x14F4A6
{
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 72;
	iParam0->f_546 = 11;
	__LIB_24__::func_916(iParam0, 0, 75, "DM_SUP", 0, iParam0->f_5702 != 0);
	if (iParam0->f_5702 != 0)
	{
		__LIB_23__::func_420(iParam0, 0, "DM_H_SUP", 0);
	}
	else
	{
		__LIB_23__::func_420(iParam0, 0, "DM_H_SUP_D", 0);
	}
	__LIB_24__::func_916(iParam0, 1, 77, "DM_SCR", 0, 1);
	__LIB_23__::func_420(iParam0, 1, "DM_H_SCR", 0);
	__LIB_24__::func_916(iParam0, 2, 827, "DM_INV", 0, 1);
	__LIB_23__::func_420(iParam0, 2, "DM_H_INV", 0);
	__LIB_24__::func_916(iParam0, 3, 81, "DM_CMBT", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 3, "DM_H_CMBT", 0);
	__LIB_24__::func_916(iParam0, 4, 82, "DM_BLP", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 4, "DM_H_BLP", 0);
	__LIB_24__::func_916(iParam0, 5, 88, "DM_CGS_BOU", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 5, "DM_H_CGS_BOU", 0);
	__LIB_24__::func_916(iParam0, 6, 83, "DM_MOV", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 6, "DM_H_MOV", 0);
	__LIB_24__::func_916(iParam0, 7, 84, "DM_ONK", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 7, "DM_H_ONK", 0);
	__LIB_24__::func_916(iParam0, 8, 85, "DM_ONH", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 8, "DM_H_ONH", 0);
	__LIB_24__::func_916(iParam0, 9, 86, "DM_SPVEH", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 9, "DM_H_SPVEH", 0);
	__LIB_24__::func_916(iParam0, 10, 87, "DM_DISACT", 0, !iParam0->f_5705);
	__LIB_23__::func_420(iParam0, 10, "DM_H_DISACT", 0);
}

void func_50(int* iParam0)//Position - 0x14F67A
{
	bool bVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_24__::func_634(iParam0, "DM_CGM_MT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.35f);
	iParam0->f_270 = 72;
	iParam0->f_546 = 3;
	if (__LIB_22__::func_607(iParam0) == 0 || __LIB_22__::func_607(iParam0) == 2)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	bVar0 = iParam0->f_5702 != false;
	__LIB_24__::func_930(0, "DM_CGM_D", "", bVar0, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "DM_H_CGM_D", 0);
	bVar1 = bVar0;
	if (iParam0->f_5702 == 0 && Global_4718592.f_180134.f_2817 > 1)
	{
		bVar1 = true;
	}
	if (iParam0->f_5703 == 0)
	{
		__LIB_24__::func_930(1, "DM_CGM_C", "DM_CGM_DF", bVar1, 0, -1);
	}
	else
	{
		__LIB_24__::func_946(1, iParam0->f_5703, "DM_CGM_C", bVar1, 0);
	}
	__LIB_23__::func_420(iParam0, 1, "DM_H_CGM_C", 0);
	__LIB_24__::func_930(2, "DM_CGM_CA", "", bVar1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "DM_H_CGM_CA", 0);
}

void func_51(int* iParam0)//Position - 0x15022F
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_DM_WDM_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 60;
	iParam0->f_546 = 1;
	__LIB_24__::func_939(0, Global_4718592.f_176800[0], "FMMC_DM_WDM_MTL", "", 1f, 1, 1, 0);
	__LIB_23__::func_420(iParam0, 0, "FMMC_DM_WDM_WH", 0);
}

void func_52(int* iParam0)//Position - 0x150451
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PWRU_BS_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 888;
	iParam0->f_546 = 6;
	__LIB_24__::func_945(0, Global_4718592.f_169922, "FMMC_SC_MINHP", 1, 2);
	__LIB_23__::func_420(iParam0, 0, "FMMC_H_SC_MINHP", 0);
	__LIB_24__::func_945(1, Global_4718592.f_169921, "FMMC_SC_MAXHP", 1, 2);
	__LIB_23__::func_420(iParam0, 1, "FMMC_H_SC_MAXHP", 0);
	__LIB_24__::func_945(2, Global_4718592.f_169924, "FMMC_SC_MINVP", 1, 2);
	__LIB_23__::func_420(iParam0, 2, "MC_H_SC_MINVP", 0);
	__LIB_24__::func_945(3, Global_4718592.f_169923, "FMMC_SC_MAXVP", 1, 2);
	__LIB_23__::func_420(iParam0, 3, "MC_H_SC_MAXVP", 0);
	__LIB_24__::func_946(4, Global_4718592.f_169926, "FMMC_SC_MINDMG", 1, 0);
	__LIB_23__::func_420(iParam0, 4, "MC_H_SC_MINDMG", 0);
	__LIB_24__::func_946(5, Global_4718592.f_169925, "FMMC_SC_DMG", 1, 0);
	__LIB_23__::func_420(iParam0, 5, "MC_H_SC_MAXDMG", 0);
}

void func_53(int* iParam0)//Position - 0x150563
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PWRU_R_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 888;
	iParam0->f_546 = 12;
	iVar0 = 0;
	while (iVar0 <= 11)
	{
		__LIB_24__::func_913(iVar0, Global_4718592.f_176701.f_2[iVar0], __LIB_21__::func_895(iVar0, 0, 0), "", "FMMC_PERCENT", 0, 0, 1, 0, -1);
		iParam0->f_142[iVar0] = 115;
		iVar0++;
	}
}

void func_54(int* iParam0)//Position - 0x150C6C
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_IPL_MENUT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 60;
	iParam0->f_546 = 1;
	__LIB_24__::func_916(iParam0, 0, 657, "FMMC_IPL_ISLD", 0, 1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_IPL_ISLD", 0);
}

void func_55(int* iParam0)//Position - 0x1516E7
{
	iParam0->f_270 = 3;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PAO");
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	__LIB_1__::func_765(1, 1, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_546 = 9;
	__LIB_24__::func_916(iParam0, 0, 879, "FMMC_PAASO", 0, 1);
	__LIB_24__::func_916(iParam0, 1, 881, "FMMC_PAHLO", 0, 1);
	__LIB_24__::func_916(iParam0, 2, 880, "FMMC_PAHBO", 0, 1);
	__LIB_24__::func_916(iParam0, 3, 877, "FMMC_PARDO", 0, 1);
	__LIB_24__::func_916(iParam0, 4, 878, "FMMC_PASSO", 0, 1);
	__LIB_24__::func_916(iParam0, 5, 882, "FMMC_PASVR", 0, 1);
	__LIB_24__::func_916(iParam0, 6, 883, "FMMC_PASRA", 0, 1);
	__LIB_24__::func_916(iParam0, 7, 884, "FMMC_PASAB", 0, 1);
	__LIB_24__::func_916(iParam0, 8, 885, "FMMC_PASDS", 0, 1);
}

void func_56(int* iParam0, var uParam1)//Position - 0x1517C0
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_WI_PARA_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 827;
	iParam0->f_546 = 3;
	bVar0 = uParam1->f_184 != false;
	__LIB_24__::func_915(0, uParam1->f_184, "FMMC_WI_PARA_N", "FMMC_WI_PARA_", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_WI_PARA_N", 0);
	__LIB_24__::func_915(1, uParam1->f_184.f_1, "FMMC_WI_PARA_C", "FMMC_PARA_", 1, -1, bVar0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_WI_PARA_C", 0);
	__LIB_24__::func_915(2, uParam1->f_184.f_2, "FMMC_WI_PARA_PC", "FMMC_PARAP_", 1, -1, bVar0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_WI_PARA_PC", 0);
}

void func_57(int* iParam0, var uParam1)//Position - 0x151883
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	struct<2> Var5;
	bool bVar6;
	bool bVar7;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_WI_COMP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 829;
	iVar1 = iParam0->f_5461;
	iVar2 = (*uParam1)[iVar1 /*12*/];
	iVar3 = __LIB_24__::func_809(iVar2);
	bVar0 = false;
	while (bVar0 <= (iVar3 - 1))
	{
		iVar4 = __LIB_0__::func_722(iVar2, bVar0);
		StringCopy(&Var5, __LIB_19__::func_181(iVar4, iVar2), 16);
		bVar6 = __LIB_23__::func_38(iParam0, uParam1, iVar4);
		if (bVar6)
		{
			bVar7 = true;
		}
		else
		{
			bVar7 = __LIB_23__::func_37(iParam0, uParam1) != 6;
		}
		if (__LIB_23__::func_36(iVar4, iVar2))
		{
			__LIB_24__::func_986(bVar0, bVar6, &Var5, "FMMC_SEL_YES", "FMMC_SEL_NO", bVar7);
			__LIB_23__::func_420(iParam0, bVar0, "MC_H_WI_COMP_S", 0);
		}
		iParam0->f_546++;
		bVar0++;
	}
}

void func_58(int* iParam0, var uParam1)//Position - 0x15296C
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	bVar0 = iParam0->f_545 == true;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_WI_WS_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 827;
	iParam0->f_546 = 15;
	iVar2 = 15;
	if (bVar0)
	{
		iVar2 = 5;
	}
	bVar1 = false;
	while (bVar1 <= (iVar2 - 1))
	{
		__LIB_24__::func_923(iParam0, bVar1, 829, "FMMC_WI_WEPS", __LIB_0__::func_138(bVar0, bVar1 + 1, bVar1), 1);
		if (BitTest(uParam1->f_183, bVar1))
		{
			__LIB_23__::func_494(bVar1, "FMMC_WI_RND", 0, 1, 0, 0, 0);
		}
		else if ((*uParam1)[bVar1 /*12*/] != 0)
		{
			__LIB_23__::func_494(bVar1, __LIB_24__::func_728((*uParam1)[bVar1 /*12*/]), 0, 1, 0, 0, 0);
		}
		__LIB_23__::func_420(iParam0, bVar1, "MC_H_WI_WEPS", 0);
		bVar1++;
	}
}

void func_59(int* iParam0)//Position - 0x152CD3
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_WI_INV_T");
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 824;
	iParam0->f_546 = 5;
	bVar0 = false;
	while (bVar0 <= 4)
	{
		__LIB_24__::func_923(iParam0, bVar0, 827, "FMMC_WI_INV", bVar0, 1);
		if (Global_4718592.f_175437[bVar0 /*189*/][0 /*12*/] != 0)
		{
			__LIB_23__::func_496(bVar0, 17, 0);
		}
		__LIB_23__::func_420(iParam0, bVar0, "MC_H_WI_INV_", 0);
		bVar0++;
	}
}

void func_60(int* iParam0)//Position - 0x1531BE
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_AVO_T");
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 482;
	bVar0 = __LIB_23__::func_42(0);
	bVar1 = __LIB_23__::func_42(1);
	bVar2 = Global_4718592.f_170137.f_2796 != 1200;
	__LIB_23__::func_494(0, "SC_SAVM", 0, 1, 0, 0, 0);
	iParam0->f_14[0] = 473;
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_VO_AV_EAW", 0, 1, 0, 0, 0);
	__LIB_24__::func_817(1, bVar0);
	iParam0->f_546++;
	__LIB_23__::func_494(2, "SC_VO_AV_DAW", 0, 1, 0, 0, 0);
	__LIB_24__::func_817(2, bVar1);
	iParam0->f_546++;
	__LIB_23__::func_494(3, "SC_VO_AV_RTD", 0, bVar2, 0, 0, 0);
	iParam0->f_546++;
}

void func_61(int* iParam0)//Position - 0x15329D
{
	bool bVar0;
	bool bVar1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_LVO_T");
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 482;
	bVar0 = __LIB_23__::func_43(0);
	bVar1 = __LIB_23__::func_43(1);
	bVar2 = Global_4718592.f_170137.f_2795 != 360;
	__LIB_23__::func_494(0, "SC_SLVM", 0, 1, 0, 0, 0);
	iParam0->f_14[0] = 467;
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_VO_LV_EAW", 0, 1, 0, 0, 0);
	__LIB_24__::func_817(1, bVar0);
	iParam0->f_546++;
	__LIB_23__::func_494(2, "SC_VO_LV_DAW", 0, 1, 0, 0, 0);
	__LIB_24__::func_817(2, bVar1);
	iParam0->f_546++;
	__LIB_23__::func_494(3, "SC_VO_LV_RTD", 0, bVar2, 0, 0, 0);
	iParam0->f_546++;
}

void func_62(int* iParam0)//Position - 0x15337C
{
	bool bVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_SEO_T");
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	bVar0 = __LIB_23__::func_44(0);
	bVar1 = __LIB_23__::func_44(1);
	iParam0->f_270 = 482;
	__LIB_23__::func_494(0, "SC_SPM", 0, 1, 0, 0, 0);
	iParam0->f_14[0] = 469;
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_SHM", 0, 1, 0, 0, 0);
	iParam0->f_14[1] = 463;
	iParam0->f_546++;
	__LIB_23__::func_494(2, "SC_HVY_EAW", 0, 1, 0, 0, 0);
	__LIB_24__::func_817(2, bVar0);
	iParam0->f_546++;
	__LIB_23__::func_494(3, "SC_HVY_RTD", 0, !bVar1, 0, 0, 0);
	iParam0->f_546++;
}

void func_63(int* iParam0)//Position - 0x1536AB
{
	bool bVar0;
	struct<2> Var1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_SPKU_SEL_T");
	__LIB_19__::func_185(iParam0->f_3379);
	if (iParam0->f_551 == -1)
	{
		__LIB_19__::func_185(Global_4980736.f_69352 + 1);
	}
	else
	{
		__LIB_19__::func_185(iParam0->f_551 + 1);
	}
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 478;
	bVar0 = iParam0->f_899 == 8;
	__LIB_24__::func_946(iParam0->f_546, iParam0->f_3379, "SC_ADV_CW", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(iParam0->f_546, "FMMC_MCAT", 0, 1, 0, 0, 0);
	if (!bVar0)
	{
		StringCopy(&Var1, "FMMC_WPL", 16);
		StringIntConCat(&Var1, iParam0->f_899, 16);
		__LIB_23__::func_494(iParam0->f_546, &Var1, 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(iParam0->f_546, "SC_NONE", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	if (!bVar0)
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_MTYPE", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, iParam0->f_563[2], 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_64(int* iParam0)//Position - 0x1538F5
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_SURV_OP_T");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) == 3)
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	iParam0->f_270 = 0;
	__LIB_23__::func_494(0, "SC_SEO_OP", 0, 1, 0, 0, 0);
	iParam0->f_14[0] = 486;
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_LVO_OP", 0, 1, 0, 0, 0);
	iParam0->f_14[1] = 487;
	iParam0->f_546++;
	__LIB_23__::func_494(2, "SC_AVO_OP", 0, 1, 0, 0, 0);
	iParam0->f_14[2] = 488;
	iParam0->f_546++;
	__LIB_24__::func_946(3, Global_4718592.f_170137, "SC_WAVES", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(4, "SC_WCM", 0, 1, 0, 0, 0);
	iParam0->f_14[4] = 458;
	iParam0->f_546++;
	if (BitTest(iParam0->f_744, 12) || BitTest(iParam0->f_744, 13))
	{
		__LIB_23__::func_496(4, 28, 0);
	}
	__LIB_23__::func_494(5, "SC_RSURV", 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_65(int* iParam0)//Position - 0x153B0E
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_PKU_T");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, __LIB_22__::func_607(iParam0) == 0, 0, 0, 0);
	iParam0->f_270 = iParam0->f_4694;
	Global_23149 = 0.28f;
	__LIB_24__::func_946(iParam0->f_546, iParam0->f_3379, "SC_ADV_CW", 1, 0);
	iParam0->f_546++;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		__LIB_23__::func_494(iParam0->f_546, "SC_SPKU", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0 + 1, 0);
		if (Global_4718592.f_170137.f_1954[iParam0->f_3379 /*11*/][iVar0] == 8)
		{
			__LIB_23__::func_494(iParam0->f_546, "SC_NONE", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, __LIB_24__::func_728(Global_4718592.f_170137.f_1722[iParam0->f_3379 /*11*/][iVar0]), 0, 1, 0, 0, 0);
		}
		iParam0->f_14[iParam0->f_546] = 477;
		iParam0->f_546++;
		iVar0++;
	}
}

void func_66(int* iParam0)//Position - 0x153CDB
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_WEP_T");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 460;
	Global_23149 = 0.3f;
	bVar0 = false;
	while (bVar0 <= 3)
	{
		if (bVar0 == 3)
		{
			__LIB_23__::func_494(bVar0, "SC_HVY_WEP", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(bVar0, "SC_SWEP", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_546 + 1, 0);
		}
		__LIB_23__::func_494(bVar0, __LIB_24__::func_728(Global_4718592.f_170137.f_1404[iParam0->f_3379 /*5*/][bVar0]), 0, 1, 0, 0, 0);
		iParam0->f_14[iParam0->f_546] = 481;
		iParam0->f_546++;
		bVar0++;
	}
}

void func_67(int* iParam0)//Position - 0x153F56
{
	struct<2> Var0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_AIR_SEL");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_19__::func_185(iParam0->f_3383 + 1);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 470;
	if (__LIB_22__::func_607(iParam0) == 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "SC_VEH_MOD", 0, 1, 0, 0, 0);
	if (Global_4718592.f_170137.f_2462[iParam0->f_3379 /*4*/][iParam0->f_3383] == 0)
	{
		StringCopy(&Var0, "SC_NONE", 16);
	}
	else
	{
		StringCopy(&Var0, __LIB_22__::func_16(Global_4718592.f_170137.f_2462[iParam0->f_3379 /*4*/][iParam0->f_3383]), 16);
	}
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_14[iParam0->f_546] = 472;
	iParam0->f_546++;
	__LIB_24__::func_946(1, Global_4718592.f_170137.f_2547[iParam0->f_3379 /*4*/][iParam0->f_3383], "SC_VEH_HP", 1, 0);
	iParam0->f_546++;
	bVar1 = __LIB_19__::func_125(Global_4718592.f_170137.f_2462[iParam0->f_3379 /*4*/][iParam0->f_3383]);
	__LIB_23__::func_494(2, "SC_VEH_COL", 0, bVar1, 0, 0, 0);
	__LIB_23__::func_494(2, __LIB_22__::func_878(Global_4718592.f_170137.f_2632[iParam0->f_3379 /*4*/][iParam0->f_3383]), 0, bVar1, 0, 0, 0);
	iParam0->f_546++;
}

void func_68(int* iParam0)//Position - 0x1542C7
{
	int iVar0;
	struct<2> Var1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_VEH_SEL");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_19__::func_185(iParam0->f_3382 + 1);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 464;
	iVar0 = 5;
	iVar0 = __LIB_22__::func_500(VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Global_4718592.f_170137.f_1086[iParam0->f_3379 /*5*/][iParam0->f_3382]), 1, 5);
	if (__LIB_22__::func_607(iParam0) == 0 || (__LIB_22__::func_607(iParam0) == 1 && iVar0 == 1))
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "SC_VEH_MOD", 0, 1, 0, 0, 0);
	if (Global_4718592.f_170137.f_1086[iParam0->f_3379 /*5*/][iParam0->f_3382] == 0)
	{
		StringCopy(&Var1, "SC_NONE", 16);
	}
	else
	{
		StringCopy(&Var1, __LIB_22__::func_16(Global_4718592.f_170137.f_1086[iParam0->f_3379 /*5*/][iParam0->f_3382]), 16);
	}
	__LIB_23__::func_494(0, &Var1, 0, 1, 0, 0, 0);
	iParam0->f_14[iParam0->f_546] = 466;
	iParam0->f_546++;
	__LIB_24__::func_946(1, Global_4718592.f_170137.f_980[iParam0->f_3379 /*5*/][iParam0->f_3382], "SC_VEH_NPIV", 1, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(2, Global_4718592.f_170137.f_1192[iParam0->f_3379 /*5*/][iParam0->f_3382], "SC_VEH_HP", 1, 0);
	iParam0->f_546++;
	bVar2 = __LIB_19__::func_125(Global_4718592.f_170137.f_1086[iParam0->f_3379 /*5*/][iParam0->f_3382]);
	__LIB_23__::func_494(3, "SC_VEH_COL", 0, bVar2, 0, 0, 0);
	__LIB_23__::func_494(3, __LIB_22__::func_878(Global_4718592.f_170137.f_1298[iParam0->f_3379 /*5*/][iParam0->f_3382]), 0, bVar2, 0, 0, 0);
	iParam0->f_546++;
}

void func_69(int* iParam0)//Position - 0x1544B3
{
	struct<2> Var0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	if (__LIB_23__::func_47(iParam0))
	{
		__LIB_1__::func_767("SC_HVY_MODS_T");
	}
	else if (__LIB_23__::func_46(iParam0))
	{
		__LIB_1__::func_767("SC_HVY_WMOD_T");
		__LIB_19__::func_185(iParam0->f_3379);
		StringCopy(&Var0, "SC_SQD_TIT_", 16);
		StringIntConCat(&Var0, iParam0->f_3381, 16);
		__LIB_22__::func_902(&Var0);
	}
	else
	{
		__LIB_1__::func_767("SC_HYV_MOD_T");
		__LIB_19__::func_185(iParam0->f_3379);
		StringCopy(&Var0, "SC_SQD_TIT_", 16);
		StringIntConCat(&Var0, iParam0->f_3381, 16);
		__LIB_22__::func_902(&Var0);
	}
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.25f;
	iVar1 = iParam0->f_3379;
	if (iVar1 == -1)
	{
		iVar1 = 0;
	}
	__LIB_23__::func_494(0, "SC_PED_CAT", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_PDL_", 16);
	StringIntConCat(&Var0, iParam0->f_898, 16);
	if (!__LIB_0__::func_261())
	{
		StringCopy(&Var0, __LIB_23__::func_45(iParam0->f_898), 16);
	}
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_PED_TYP", 0, 1, 0, 0, 0);
	StringCopy(&Var0, __LIB_24__::func_798(Global_4718592.f_170137.f_873[iVar1 /*4*/][iParam0->f_3381]), 16);
	__LIB_23__::func_494(1, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_70(int* iParam0)//Position - 0x15463E
{
	struct<2> Var0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_HVY_T");
	__LIB_19__::func_185(iParam0->f_3379);
	StringCopy(&Var0, "SC_SQD_TIT_", 16);
	StringIntConCat(&Var0, iParam0->f_3381, 16);
	__LIB_22__::func_902(&Var0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_270 = 461;
	Global_23149 = 0.25f;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) == 4)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	bVar1 = Global_4718592.f_170137.f_23[iParam0->f_3379 /*4*/][iParam0->f_3381] > 0;
	__LIB_23__::func_494(0, "SC_SQD_SS", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "SC_SQD_SUB_", 16);
	StringIntConCat(&Var0, iParam0->f_3381, 16);
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(1, Global_4718592.f_170137.f_618[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_HVY_NUM", bVar1, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(2, Global_4718592.f_170137.f_703[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_HVY_HLT", bVar1, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(3, Global_4718592.f_170137.f_788[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_HVY_ARM", bVar1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(4, "SC_HVY_MOD", 0, bVar1, 0, 0, 0);
	StringCopy(&Var0, __LIB_24__::func_798(Global_4718592.f_170137.f_873[iParam0->f_3379 /*4*/][iParam0->f_3381]), 16);
	__LIB_23__::func_494(4, &Var0, 0, bVar1, 0, 0, 0);
	iParam0->f_14[iParam0->f_546] = 463;
	iParam0->f_546++;
}

void func_71(int* iParam0)//Position - 0x1547FC
{
	struct<2> Var0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_SQD_M_TIT");
	__LIB_19__::func_185(iParam0->f_3379);
	StringCopy(&Var0, "SC_SQD_TIT_", 16);
	StringIntConCat(&Var0, iParam0->f_3381, 16);
	__LIB_22__::func_902(&Var0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 461;
	__LIB_23__::func_494(0, "SC_PED_CAT", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_PDL_", 16);
	StringIntConCat(&Var0, iParam0->f_898, 16);
	if (!__LIB_0__::func_261())
	{
		StringCopy(&Var0, __LIB_23__::func_45(iParam0->f_898), 16);
	}
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_PED_TYP", 0, 1, 0, 0, 0);
	StringCopy(&Var0, __LIB_24__::func_798(Global_4718592.f_170137.f_193[iParam0->f_3379 /*4*/][iParam0->f_3381]), 16);
	__LIB_23__::func_494(1, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_72(int* iParam0)//Position - 0x1548ED
{
	bool bVar0;
	struct<2> Var1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_SQD_TIT");
	__LIB_19__::func_185(iParam0->f_3379);
	StringCopy(&Var1, "SC_SQD_TIT_", 16);
	StringIntConCat(&Var1, iParam0->f_3381, 16);
	__LIB_22__::func_902(&Var1);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	bVar0 = Global_4718592.f_170137.f_23[iParam0->f_3379 /*4*/][iParam0->f_3381] > 0;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if ((__LIB_22__::func_607(iParam0) == 8 || (!bVar0 && __LIB_22__::func_607(iParam0) > 2)) || (__LIB_22__::func_607(iParam0) == 0 && Global_4718592.f_170137 == 1))
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	iParam0->f_270 = 460;
	__LIB_24__::func_946(0, iParam0->f_3379, "SC_ADV_CW", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_SQD_SS", 0, 1, 0, 0, 0);
	StringCopy(&Var1, "SC_SQD_SUB_", 16);
	StringIntConCat(&Var1, iParam0->f_3381, 16);
	__LIB_23__::func_494(1, &Var1, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(2, Global_4718592.f_170137.f_23[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_WCM_SQD", 1, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(3, Global_4718592.f_170137.f_108[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_WCM_PPS", bVar0, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(4, Global_4718592.f_170137.f_278[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_WCM_SH", bVar0, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(5, Global_4718592.f_170137.f_363[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_WCM_SA", bVar0, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(6, Global_4718592.f_170137.f_448[iParam0->f_3379 /*4*/][iParam0->f_3381], "SC_WCM_SAC", bVar0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(7, "SC_WCM_SCA", 0, bVar0, 0, 0, 0);
	StringCopy(&Var1, "SC_SCA_", 16);
	StringIntConCat(&Var1, Global_4718592.f_170137.f_533[iParam0->f_3379 /*4*/][iParam0->f_3381], 16);
	__LIB_23__::func_494(7, &Var1, 0, bVar0, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(8, "SC_WCM_SM", 0, bVar0, 0, 0, 0);
	StringCopy(&Var1, __LIB_24__::func_798(Global_4718592.f_170137.f_193[iParam0->f_3379 /*4*/][iParam0->f_3381]), 16);
	__LIB_23__::func_494(8, &Var1, 0, bVar0, 0, 0, 0);
	iParam0->f_14[iParam0->f_546] = 468;
	iParam0->f_546++;
	__LIB_23__::func_494(9, "SC_HVY", 0, bVar0, 0, 0, 0);
	iParam0->f_14[iParam0->f_546] = 462;
	iParam0->f_546++;
}

void func_73(int* iParam0)//Position - 0x154E6B
{
	bool bVar0;
	int iVar1;
	struct<2> Var2;
	__LIB_23__::func_384(iParam0);
	bVar0 = __LIB_23__::func_47(iParam0);
	if (bVar0)
	{
		__LIB_1__::func_767("SC_SPM_T");
	}
	else
	{
		__LIB_1__::func_767("SC_WVB_EMT");
	}
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iVar1 = iParam0->f_3379;
	if (iVar1 == -1)
	{
		iVar1 = 0;
	}
	__LIB_23__::func_494(0, "SC_PED_CAT", 0, 1, 0, 0, 0);
	StringCopy(&Var2, "FMMC_PDL_", 16);
	StringIntConCat(&Var2, iParam0->f_898, 16);
	if (!__LIB_0__::func_261())
	{
		StringCopy(&Var2, __LIB_23__::func_45(iParam0->f_898), 16);
	}
	__LIB_23__::func_494(0, &Var2, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_PED_TYP", 0, 1, 0, 0, 0);
	StringCopy(&Var2, __LIB_24__::func_798(Global_4718592.f_170137.f_193[iVar1 /*4*/][0]), 16);
	__LIB_23__::func_494(1, &Var2, 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_74(int* iParam0)//Position - 0x154F5E
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_ADV_WC_T");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	if (((__LIB_22__::func_607(iParam0) == 2 || __LIB_22__::func_607(iParam0) == 3) || __LIB_22__::func_607(iParam0) == 5) || (__LIB_22__::func_607(iParam0) == 0 && Global_4718592.f_170137 != 1))
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	iParam0->f_270 = 459;
	__LIB_24__::func_946(0, iParam0->f_3379, "SC_ADV_CW", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_SQDC", 0, 1, 0, 0, 0);
	iParam0->f_14[1] = 461;
	iParam0->f_546++;
	if (__LIB_24__::func_819(iParam0, iParam0->f_3379))
	{
		__LIB_23__::func_496(1, 28, 0);
	}
	__LIB_24__::func_946(2, Global_4718592.f_170137.f_1[iParam0->f_3379], "SC_WCM_SSK", 1, 0);
	iParam0->f_546++;
	__LIB_24__::func_946(3, Global_4718592.f_170137.f_958[iParam0->f_3379], "SC_WCM_VEH", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(4, "SC_VCM", 0, Global_4718592.f_170137.f_958[iParam0->f_3379] > 0, 0, 0, 0);
	iParam0->f_14[4] = 464;
	iParam0->f_546++;
	__LIB_24__::func_946(5, Global_4718592.f_170137.f_2440[iParam0->f_3379], "SC_WCM_HEL", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(6, "SC_ACM", 0, Global_4718592.f_170137.f_2440[iParam0->f_3379] > 0, 0, 0, 0);
	iParam0->f_14[6] = 470;
	iParam0->f_546++;
	__LIB_23__::func_494(7, "SC_WWEP", 0, 1, 0, 0, 0);
	iParam0->f_14[7] = 480;
	iParam0->f_546++;
}

void func_75(int* iParam0)//Position - 0x1551AD
{
	struct<2> Var0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	bool bVar4;
	bool bVar5;
	bool bVar6;
	bool bVar7;
	bool bVar8;
	bool bVar9;
	bool bVar10;
	bool bVar11;
	bool bVar12;
	bool bVar13;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_WVB_T");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	Global_23149 = 0.24f;
	iParam0->f_270 = 458;
	bVar1 = (BitTest(Global_4718592.f_170137.f_2798, iParam0->f_3379) || BitTest(Global_4718592.f_170137.f_2799, iParam0->f_3379));
	bVar2 = BitTest(Global_4718592.f_170137.f_2802, iParam0->f_3379);
	bVar3 = BitTest(Global_4718592.f_170137.f_2803, iParam0->f_3379);
	bVar4 = BitTest(Global_4718592.f_170137.f_2804, iParam0->f_3379);
	bVar5 = BitTest(Global_4718592.f_170137.f_2805, iParam0->f_3379);
	bVar6 = BitTest(Global_4718592.f_170137.f_2800, iParam0->f_3379);
	bVar7 = BitTest(Global_4718592.f_170137.f_2801, iParam0->f_3379);
	bVar8 = BitTest(Global_4718592.f_170137.f_2806, iParam0->f_3379);
	bVar9 = BitTest(Global_4718592.f_170137.f_2807, iParam0->f_3379);
	if (((__LIB_22__::func_607(iParam0) == 0 && Global_4718592.f_170137 != 1) || ((__LIB_22__::func_607(iParam0) == 1 || __LIB_22__::func_607(iParam0) == 2) && !bVar1)) || (__LIB_22__::func_607(iParam0) == 3 && !bVar6))
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	__LIB_24__::func_946(0, iParam0->f_3379, "SC_ADV_CW", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_WVB_INT", 0, !bVar1, 0, 0, 0);
	if (bVar1)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, "SC_INTEN_", 16);
		StringIntConCat(&Var0, Global_4718592.f_170137.f_2729[iParam0->f_3379], 16);
	}
	__LIB_23__::func_494(1, &Var0, 0, !bVar1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(2, "SC_WVB_SUB", 0, !bVar1, 0, 0, 0);
	if (bVar1)
	{
		__LIB_23__::func_494(2, "SC_WVB_CUST", 0, !bVar1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(2, "NUMBER", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_170137.f_2773[iParam0->f_3379] + 1, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(3, "SC_WVB_ED", 0, !bVar6, 0, 0, 0);
	if (bVar6)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, "SC_DIFF_", 16);
		StringIntConCat(&Var0, Global_4718592.f_170137.f_2751[iParam0->f_3379], 16);
	}
	__LIB_23__::func_494(3, &Var0, 0, !bVar6, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(4, "SC_WCV_EM", 0, !bVar7, 0, 0, 0);
	if (bVar7)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, __LIB_24__::func_798(Global_4718592.f_170137.f_193[iParam0->f_3379 /*4*/][0]), 16);
	}
	__LIB_23__::func_494(4, &Var0, 0, !bVar7, 0, 0, 0);
	iParam0->f_14[4] = 469;
	iParam0->f_546++;
	__LIB_23__::func_494(5, "SC_WVB_AHVY", 0, !bVar8, 0, 0, 0);
	if (!bVar8)
	{
		if (BitTest(Global_4718592.f_170137.f_2797, iParam0->f_3379))
		{
			__LIB_23__::func_496(5, 5, 0);
		}
		else
		{
			__LIB_23__::func_496(5, 7, 0);
		}
	}
	else
	{
		__LIB_23__::func_494(5, "SC_WVB_CUST", 0, !bVar8, 0, 0, 0);
	}
	iParam0->f_546++;
	bVar10 = !bVar9;
	if (!BitTest(Global_4718592.f_170137.f_2797, iParam0->f_3379) && __LIB_23__::func_49(iParam0->f_3379) == 0)
	{
		bVar10 = false;
	}
	__LIB_23__::func_494(6, "SC_WVB_HVYM", 0, bVar10, 0, 0, 0);
	if (bVar9)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, __LIB_24__::func_798(Global_4718592.f_170137.f_873[iParam0->f_3379 /*4*/][0]), 16);
	}
	__LIB_23__::func_494(6, &Var0, 0, bVar10, 0, 0, 0);
	iParam0->f_14[6] = 463;
	iParam0->f_546++;
	__LIB_23__::func_494(7, "SC_WVB_ALV", 0, !bVar2, 0, 0, 0);
	if (!bVar2)
	{
		if (BitTest(Global_4718592.f_170137.f_2795, iParam0->f_3379))
		{
			__LIB_23__::func_496(7, 5, 0);
		}
		else
		{
			__LIB_23__::func_496(7, 7, 0);
		}
	}
	else
	{
		__LIB_23__::func_494(7, "SC_WVB_CUST", 0, !bVar2, 0, 0, 0);
	}
	iParam0->f_546++;
	bVar11 = !bVar3;
	if (!BitTest(Global_4718592.f_170137.f_2795, iParam0->f_3379) && Global_4718592.f_170137.f_958[iParam0->f_3379] == 0)
	{
		bVar11 = false;
	}
	__LIB_23__::func_494(8, "SC_WVB_LVM", 0, bVar11, 0, 0, 0);
	if (bVar3)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, __LIB_22__::func_16(Global_4718592.f_170137.f_1086[iParam0->f_3379 /*5*/][0]), 16);
	}
	__LIB_23__::func_494(8, &Var0, 0, bVar11, 0, 0, 0);
	iParam0->f_14[8] = 467;
	iParam0->f_546++;
	__LIB_23__::func_494(9, "SC_WVB_AAV", 0, !bVar4, 0, 0, 0);
	if (!bVar4)
	{
		if (BitTest(Global_4718592.f_170137.f_2796, iParam0->f_3379))
		{
			__LIB_23__::func_496(9, 5, 0);
		}
		else
		{
			__LIB_23__::func_496(9, 7, 0);
		}
	}
	else
	{
		__LIB_23__::func_494(9, "SC_WVB_CUST", 0, !bVar4, 0, 0, 0);
	}
	iParam0->f_546++;
	bVar12 = !bVar5;
	if (!BitTest(Global_4718592.f_170137.f_2796, iParam0->f_3379) && Global_4718592.f_170137.f_2440[iParam0->f_3379] == 0)
	{
		bVar12 = false;
	}
	__LIB_23__::func_494(10, "SC_WVB_AAM", 0, bVar12, 0, 0, 0);
	if (bVar5)
	{
		StringCopy(&Var0, "SC_WVB_CUST", 16);
	}
	else
	{
		StringCopy(&Var0, __LIB_22__::func_16(Global_4718592.f_170137.f_2462[iParam0->f_3379 /*4*/][0]), 16);
	}
	__LIB_23__::func_494(10, &Var0, 0, bVar12, 0, 0, 0);
	iParam0->f_14[10] = 473;
	iParam0->f_546++;
	__LIB_23__::func_494(11, "SC_WPKU", 0, 1, 0, 0, 0);
	iParam0->f_14[11] = 476;
	iParam0->f_546++;
	bVar13 = true;
	if (Global_1922873 && !BitTest(*iParam0, 1))
	{
		bVar13 = false;
	}
	__LIB_23__::func_494(12, "SC_WVB_ADV", 0, bVar13, 0, 0, 0);
	iParam0->f_14[12] = 460;
	iParam0->f_546++;
	__LIB_23__::func_494(13, "SC_WVB_RES", 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_76(int* iParam0)//Position - 0x155821
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_COPY_W_T");
	__LIB_19__::func_185(iParam0->f_3379);
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) == 0)
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	iParam0->f_270 = 458;
	__LIB_24__::func_946(0, iParam0->f_3380, "SC_COPY_W", 1, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(1, "SC_COPY_A", 0, 1, 0, 0, 0);
	iParam0->f_546++;
}

void func_77(int* iParam0)//Position - 0x1558AF
{
	bool bVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("SC_WCM_T");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 482;
	bVar0 = true;
	bVar1 = false;
	while (bVar1 <= (Global_4718592.f_170137 - 1))
	{
		if (Global_1922873 && bVar1 != 0)
		{
			bVar0 = false;
		}
		__LIB_23__::func_494(bVar1, "SC_WAVE_NUM", 1, bVar0, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_546 + 1, 0);
		iParam0->f_14[iParam0->f_546] = 459;
		iParam0->f_546++;
		if (__LIB_24__::func_819(iParam0, bVar1 + 1))
		{
			__LIB_23__::func_496(bVar1, 28, 0);
		}
		bVar1++;
	}
}

void func_78(int* iParam0)//Position - 0x1562EC
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_DT_PCO_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.25f;
	iParam0->f_270 = 522;
	iParam0->f_546 = 3;
	__LIB_24__::func_915(0, iParam0->f_1727.f_51, "FMMC_DT_PCO_TY", "FMMC_DT_PCO_TY", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_DT_PCO_TY", 0);
	__LIB_24__::func_915(1, iParam0->f_1727.f_50, "FMMC_DT_PCO_C", "FMMC_DT_PCO_C", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_DT_PCO_C", 0);
	__LIB_24__::func_913(2, iParam0->f_1727.f_49, "FMMC_DT_PCO_N", "", "", 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_DT_PCO_N", 0);
}

void func_79(int* iParam0)//Position - 0x1579E6
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_DLT_HLSTT");
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 501;
	bVar0 = false;
	while (bVar0 < Global_4980736.f_78574)
	{
		__LIB_24__::func_957(bVar0, iParam0->f_1727.f_53, bVar0, 1, "FMMC_VEH_NUM", bVar0, 1);
		bVar0++;
	}
	iParam0->f_546 = Global_4980736.f_78574;
}

void func_80(int* iParam0, int iParam1, char* sParam2, var uParam3, bool bParam4)//Position - 0x15874B
{
	__LIB_24__::func_915(iParam1, *uParam3, sParam2, "FMMC_RBND_IN", 0, -1, bParam4, -1);
}

void func_81(int* iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x159681
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_T_DT_PRQCN");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = iParam3;
	iParam0->f_546 = 2;
	Global_23149 = 0.3f;
	__LIB_25__::func_3(0, uParam1, "FMMC_PREQCN_BS", 1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_PREQCN_BS", 0);
	__LIB_24__::func_810(iParam0, 0, "FMMC_PREQCN_BS", "MC_A_PREQCN_BS", uParam1, -1, 100, 0, 0);
	__LIB_24__::func_913(1, *uParam2, "FMMC_PREQCN_CNT", "", "", 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_PREQCN_CNT", 0);
}

struct<4> func_82(int iParam0)//Position - 0x15AE9A
{
	struct<4> Var0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_26__::func_419(iParam0);
	iVar2 = __LIB_24__::func_820(iParam0);
	Var0 = { __LIB_23__::func_52(iVar1, iVar2) };
	return Var0;
}

void func_83(int* iParam0)//Position - 0x15BF38
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_GGCC_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.4f;
	iParam0->f_270 = 3;
	iParam0->f_546 = 24;
	__LIB_24__::func_945(0, Global_4718592.f_176775, "FMMC_GGCC_0", 1, 2);
	__LIB_23__::func_420(iParam0, 0, "MC_H_GGCC_0", 0);
	__LIB_24__::func_945(1, Global_4718592.f_176776, "FMMC_GGCC_1", 1, 2);
	__LIB_23__::func_420(iParam0, 1, "MC_H_GGCC_1", 0);
	__LIB_24__::func_945(2, Global_4718592.f_176777, "FMMC_GGCC_2", 1, 2);
	__LIB_23__::func_420(iParam0, 2, "MC_H_GGCC_2", 0);
	__LIB_24__::func_945(3, Global_4718592.f_176778, "FMMC_GGCC_3", 1, 2);
	__LIB_23__::func_420(iParam0, 3, "MC_H_GGCC_3", 0);
	__LIB_24__::func_945(4, Global_4718592.f_176779, "FMMC_GGCC_4", 1, 2);
	__LIB_23__::func_420(iParam0, 4, "MC_H_GGCC_4", 0);
	__LIB_24__::func_945(5, Global_4718592.f_176780, "FMMC_GGCC_5", 1, 2);
	__LIB_23__::func_420(iParam0, 5, "MC_H_GGCC_5", 0);
	__LIB_24__::func_945(6, Global_4718592.f_176781, "FMMC_GGCC_6", 1, 2);
	__LIB_23__::func_420(iParam0, 6, "MC_H_GGCC_6", 0);
	__LIB_24__::func_945(7, Global_4718592.f_176782, "FMMC_GGCC_7", 1, 2);
	__LIB_23__::func_420(iParam0, 7, "MC_H_GGCC_7", 0);
	__LIB_24__::func_945(8, Global_4718592.f_176783, "FMMC_GGCC_8", 1, 2);
	__LIB_23__::func_420(iParam0, 8, "MC_H_GGCC_8", 0);
	__LIB_24__::func_945(9, Global_4718592.f_176784, "FMMC_GGCC_9", 1, 2);
	__LIB_23__::func_420(iParam0, 9, "MC_H_GGCC_9", 0);
	__LIB_24__::func_945(10, Global_4718592.f_176785, "FMMC_GGCC_10", 1, 2);
	__LIB_23__::func_420(iParam0, 10, "MC_H_GGCC_10", 0);
	__LIB_24__::func_945(11, Global_4718592.f_176786, "FMMC_GGCC_11", 1, 2);
	__LIB_23__::func_420(iParam0, 11, "MC_H_GGCC_11", 0);
	__LIB_24__::func_945(12, Global_4718592.f_176787, "FMMC_GGCC_12", 1, 2);
	__LIB_23__::func_420(iParam0, 12, "MC_H_GGCC_12", 0);
	__LIB_24__::func_945(13, Global_4718592.f_176788, "FMMC_GGCC_13", 1, 2);
	__LIB_23__::func_420(iParam0, 13, "MC_H_GGCC_13", 0);
	__LIB_24__::func_946(14, Global_4718592.f_176789, "FMMC_GGCC_14", 1, 0);
	__LIB_23__::func_420(iParam0, 14, "MC_H_GGCC_14", 0);
	__LIB_24__::func_946(15, Global_4718592.f_176790, "FMMC_GGCC_15", 1, 0);
	__LIB_23__::func_420(iParam0, 15, "MC_H_GGCC_15", 0);
	__LIB_24__::func_945(16, Global_4718592.f_176791, "FMMC_GGCC_16", 1, 2);
	__LIB_23__::func_420(iParam0, 16, "MC_H_GGCC_16", 0);
	__LIB_24__::func_945(17, Global_4718592.f_176792, "FMMC_GGCC_17", 1, 2);
	__LIB_23__::func_420(iParam0, 17, "MC_H_GGCC_17", 0);
	__LIB_24__::func_945(18, Global_4718592.f_176793, "FMMC_GGCC_18", 1, 2);
	__LIB_23__::func_420(iParam0, 18, "MC_H_GGCC_18", 0);
	__LIB_24__::func_945(19, Global_4718592.f_176794, "FMMC_GGCC_19", 1, 2);
	__LIB_23__::func_420(iParam0, 19, "MC_H_GGCC_19", 0);
	__LIB_24__::func_945(20, Global_4718592.f_176795, "FMMC_GGCC_20", 1, 2);
	__LIB_23__::func_420(iParam0, 20, "MC_H_GGCC_20", 0);
	__LIB_24__::func_945(21, Global_4718592.f_176796, "FMMC_GGCC_21", 1, 2);
	__LIB_23__::func_420(iParam0, 21, "MC_H_GGCC_21", 0);
	__LIB_24__::func_945(22, Global_4718592.f_176797, "FMMC_GGCC_22", 1, 2);
	__LIB_23__::func_420(iParam0, 22, "MC_H_GGCC_22", 0);
	__LIB_24__::func_945(23, Global_4718592.f_176798, "FMMC_GGCC_23", 1, 2);
	__LIB_23__::func_420(iParam0, 23, "MC_H_GGCC_23", 0);
}

void func_84(int* iParam0)//Position - 0x15CF6D
{
	iParam0->f_270 = 331;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_LOC_KAEPI");
	__LIB_19__::func_185((iParam0->f_848 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)));
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_546 = 11;
	__LIB_23__::func_494(0, "FMMC_SAS_ENB", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_18, 5))
	{
		__LIB_23__::func_494(0, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(1, "FMMC_SAS_RAD1", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168713, 1, 0);
	__LIB_24__::func_997(2, "FMMC_SAS_TGI", Global_4718592.f_168716, "", 0, 1);
}

void func_85(int* iParam0)//Position - 0x15D03C
{
	iParam0->f_270 = 331;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_LOC_SAST");
	__LIB_19__::func_185((iParam0->f_848 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)));
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, __LIB_22__::func_607(iParam0) != 5, 0, 0, 0);
	iParam0->f_546 = 11;
	__LIB_23__::func_494(0, "FMMC_SAS_ENB", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_15, 31))
	{
		__LIB_23__::func_494(0, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(1, "FMMC_SAS_RAD1", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168713, 1, 0);
	__LIB_23__::func_494(2, "FMMC_SAS_RAD2", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(2, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_168714, 1, 0);
	__LIB_24__::func_997(3, "FMMC_SAS_SHR", Global_4718592.f_168715, "", 0, 1);
	__LIB_24__::func_997(4, "FMMC_SAS_TGI", Global_4718592.f_168716, "", 0, 1);
	__LIB_23__::func_494(5, "FMMC_SAS_CLR", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(6, "FMMC_SAS_IGN", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_26, 15))
	{
		__LIB_23__::func_494(6, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(6, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(7, "FMMC_SAS_BTA", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_29, 4))
	{
		__LIB_23__::func_494(7, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(7, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(8, "FMMC_SAS_EBO", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_29, 8))
	{
		__LIB_23__::func_494(8, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(8, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(9, "FMMC_SAS_EBT", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_29, 9))
	{
		__LIB_23__::func_494(9, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(9, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(10, "FMMC_SAS_USDS", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_29, 15))
	{
		__LIB_23__::func_494(10, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(10, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
}

void func_86(int* iParam0)//Position - 0x16196B
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PAD_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 647;
	iParam0->f_546 = 4;
	bVar0 = Global_4718592.f_162539 != -1;
	__LIB_24__::func_915(0, Global_4718592.f_162539, "FMMC_PAD_TYP", "FMMC_AMOT_", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_PAD_TYP", 0);
	__LIB_24__::func_946(1, Global_4718592.f_162539.f_1, "FMMC_PAD_AMT", bVar0, 0);
	__LIB_23__::func_420(iParam0, 1, "MC_H_PAD_AMT", 0);
	__LIB_24__::func_946(2, Global_4718592.f_162539.f_2, "FMMC_PAD_CTD", bVar0, 1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_PAD_CTD", 0);
	__LIB_24__::func_913(3, Global_4718592.f_162539.f_3, "FMMC_PAD_LT", "FMMC_SEL_NON", "FMMC_SEL_SEC", 0, 0, bVar0, 0, -1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_PAD_LT", 0);
}

void func_87(int* iParam0)//Position - 0x163E40
{
	int iVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767(__LIB_23__::func_72(iParam0));
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_23__::func_71(iParam0);
	iParam0->f_546 = 4;
	iVar0 = __LIB_23__::func_70(iParam0);
	__LIB_24__::func_946(0, iParam0->f_5534, "FMMC_IPLC_CON", 1, 0);
	__LIB_23__::func_420(iParam0, 0, "MC_H_IPLC_CON", 0);
	__LIB_24__::func_930(1, "FMMC_IPLC_TYP", __LIB_23__::func_69(iParam0, Global_4718592.f_162525.f_1[iVar0 /*3*/][iParam0->f_5534]), 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_IPLC_TYP", 0);
	bVar1 = Global_4718592.f_162525.f_1[iVar0 /*3*/][iParam0->f_5534] != -1;
	__LIB_24__::func_915(2, Global_4718592.f_162525.f_5[iVar0 /*3*/][iParam0->f_5534], "FMMC_TRS_LCET", "FMMC_TRS_LCET", 1, -1, bVar1, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_TRS_LCET", 0);
	bVar1 = Global_4718592.f_162525.f_5[iVar0 /*3*/][iParam0->f_5534] != -1;
	__LIB_24__::func_913(3, Global_4718592.f_162525.f_9[iVar0 /*3*/][iParam0->f_5534], "FMMC_TRS_LCID", "", "", -1, 0, bVar1, 0, -1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_TRS_LCID", 0);
}

void func_88(int* iParam0, int iParam1, char* sParam2, var uParam3, struct<3> Param4, int iParam5)//Position - 0x165047
{
	__LIB_24__::func_945(iParam1, *uParam3, sParam2, 1, 2);
	if (__LIB_22__::func_607(iParam0) == iParam1 && iParam5)
	{
		MISC::SET_BIT(iParam0, 24);
		iParam0->f_4790 = *uParam3;
		iParam0->f_4791 = { Param4 };
	}
}

void func_89(int* iParam0)//Position - 0x16627D
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<2> Var3;
	struct<2> Var4;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_GCUS");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 2;
	iParam0->f_546 = 15;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iVar0 = iParam0->f_5538;
	if (iVar0 < 0 || iVar0 >= 4)
	{
		return;
	}
	iParam0->f_898 = __LIB_23__::func_76(Global_4718592.f_176717[iVar0 /*14*/], iParam0);
	iParam0->f_900 = __LIB_23__::func_75(Global_4718592.f_176717[iVar0 /*14*/], iParam0, iParam0->f_898);
	if (Global_4718592.f_176717[iVar0 /*14*/] == 0)
	{
		iParam0->f_900 = 0;
		iParam0->f_898 = 0;
	}
	iParam0->f_934 = __LIB_22__::func_424(Global_4718592.f_176717[iVar0 /*14*/].f_1, 0);
	iParam0->f_935 = __LIB_22__::func_423(Global_4718592.f_176717[iVar0 /*14*/].f_1, 0);
	if (Global_4718592.f_176717[iVar0 /*14*/].f_1 == 0)
	{
		iParam0->f_935 = 0;
		iParam0->f_934 = 0;
	}
	bVar1 = Global_4718592.f_176717[iVar0 /*14*/].f_6 != 3;
	if (__LIB_23__::func_74(iVar0, &iVar2))
	{
		StringCopy(&Var3, "FMMC_SS_GB_", 16);
		StringIntConCat(&Var3, iVar2, 16);
	}
	__LIB_23__::func_494(0, "FMMC_GCUS_UC", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(0, &Var3, 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 0, "MC_H_GCUS_UC", 0);
	__LIB_24__::func_915(1, iParam0->f_898, "FMMC_GCUS_PC", "FMMC_PDL_", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_GCUS_PC", 0);
	__LIB_23__::func_494(2, "FMMC_GCUS_PM", 0, 1, 0, 0, 0);
	StringCopy(&Var4, __LIB_24__::func_798(iParam0->f_1994[iParam0->f_898 /*51*/][iParam0->f_900]), 16);
	__LIB_23__::func_494(2, &Var4, 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 2, "MC_H_GCUS_PM", 0);
	__LIB_23__::func_494(3, "FMMC_GCUS_DW", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(3, __LIB_4__::func_960(Global_4718592.f_176717[iVar0 /*14*/].f_2, 0), 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 3, "MC_H_GCUS_DW", 0);
	__LIB_23__::func_494(4, "FMMC_GCUS_RW1", 0, 1, 0, 0, 0);
	if (Global_4718592.f_176717[iVar0 /*14*/].f_3 == 0)
	{
		StringCopy(&Var4, "FMMC_GCUS_N", 16);
	}
	else
	{
		StringCopy(&Var4, __LIB_4__::func_960(Global_4718592.f_176717[iVar0 /*14*/].f_3, 0), 16);
	}
	__LIB_23__::func_494(4, &Var4, 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 4, "MC_H_GCUS_RW", 0);
	__LIB_23__::func_494(5, "FMMC_GCUS_RW2", 0, 1, 0, 0, 0);
	if (Global_4718592.f_176717[iVar0 /*14*/].f_4 == 0)
	{
		StringCopy(&Var4, "FMMC_GCUS_N", 16);
	}
	else
	{
		StringCopy(&Var4, __LIB_4__::func_960(Global_4718592.f_176717[iVar0 /*14*/].f_4, 0), 16);
	}
	__LIB_23__::func_494(5, &Var4, 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 5, "MC_H_GCUS_RW", 0);
	Var4 = { __LIB_22__::func_895(&(iParam0->f_934)) };
	__LIB_23__::func_494(6, "FMMC_GCUS_VC", 0, bVar1, 0, 0, 0);
	__LIB_23__::func_494(6, &Var4, 0, bVar1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 6, "MC_H_GCUS_VC", 0);
	__LIB_23__::func_494(7, "FMMC_GCUS_VM", 0, bVar1, 0, 0, 0);
	StringCopy(&Var4, __LIB_22__::func_16(Global_4718592.f_176717[iVar0 /*14*/].f_1), 16);
	__LIB_23__::func_494(7, &Var4, 0, bVar1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 7, "MC_H_GCUS_VM", 0);
	__LIB_23__::func_494(8, "FMMC_GCUS_OVCL1", 0, 1, 0, 0, 0);
	if (Global_4718592.f_176717[iVar0 /*14*/].f_9 > -1)
	{
		__LIB_23__::func_494(8, __LIB_22__::func_878(Global_4718592.f_176717[iVar0 /*14*/].f_9), 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(8, "FMMC_GCUS_OVCLD", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_420(iParam0, 8, "MC_H_GCUS_OVCL1", 0);
	__LIB_23__::func_494(9, "FMMC_GCUS_OVCL2", 0, Global_4718592.f_176717[iVar0 /*14*/].f_9 > -1, 0, 0, 0);
	if (Global_4718592.f_176717[iVar0 /*14*/].f_10 > -1)
	{
		__LIB_23__::func_494(9, __LIB_22__::func_878(Global_4718592.f_176717[iVar0 /*14*/].f_10), 0, Global_4718592.f_176717[iVar0 /*14*/].f_9 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(9, "FMMC_GCUS_OVCLD", 0, Global_4718592.f_176717[iVar0 /*14*/].f_9 > -1, 0, 0, 0);
	}
	__LIB_23__::func_420(iParam0, 9, "MC_H_GCUS_OVCL2", 0);
	__LIB_24__::func_913(10, Global_4718592.f_176717[iVar0 /*14*/].f_11, "FMMC_GCUS_VMDP", "", "", -1, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 10, "MC_H_GCUS_VMDP", 0);
	__LIB_24__::func_913(11, Global_4718592.f_176717[iVar0 /*14*/].f_12, "FMMC_GCUS_VL", "", "", -1, 1, iParam0->f_5560 > 0, 0, -1);
	__LIB_23__::func_420(iParam0, 11, "MC_H_GCUS_VL", 0);
	__LIB_23__::func_494(12, "FMMC_GCUS_MP", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(12, "FMMC_NO" /* GXT: ~1~ */, 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_176717[iVar0 /*14*/].f_5, 0);
	__LIB_23__::func_420(iParam0, 12, "MC_H_GCUS_MP", 0);
	__LIB_23__::func_494(13, "FMMC_GCUS_ST", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(13, __LIB_23__::func_73(Global_4718592.f_176717[iVar0 /*14*/].f_6), 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 13, "MC_H_GCUS_ST", 0);
	__LIB_23__::func_494(14, "FMMC_GCUS_PA", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(14, "FMMC_NO" /* GXT: ~1~ */, 1, 1, 0, 0, 0);
	__LIB_23__::func_497(Global_4718592.f_176717[iVar0 /*14*/].f_7, 1, 0);
	__LIB_23__::func_420(iParam0, 14, "MC_H_GCUS_PA", 0);
}

void func_90(int* iParam0)//Position - 0x167E8A
{
	struct<4> Var0;
	int iVar1;
	int iVar2;
	int iVar3;
	__LIB_23__::func_384(iParam0);
	if (!CAM::IS_GAMEPLAY_CAM_RENDERING())
	{
		iParam0->f_546 = 3;
	}
	else
	{
		iParam0->f_546 = 2;
	}
	__LIB_1__::func_767("FMMC_PVPT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_550 = 63;
	iParam0->f_270 = 2;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	StringCopy(&Var0, "LOB_MYTEAM_", 16);
	StringIntConCat(&Var0, iParam0->f_848, 16);
	__LIB_23__::func_494(0, "LOB_CAT_20" /* GXT: Team */, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "FMMC_PVP_TYP", 0, 1, 0, 0, 0);
	Var0 = { __LIB_23__::func_79(iParam0->f_2763) };
	if (iParam0->f_2763 > 0)
	{
		__LIB_23__::func_494(1, &Var0, 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_2763, 0);
	}
	else
	{
		__LIB_23__::func_494(1, &Var0, 0, 1, 0, 0, 0);
	}
	if (iParam0->f_2764 == -1)
	{
		iParam0->f_2764 = 3;
		iVar1 = 0;
		while (iVar1 <= 3)
		{
			if (__LIB_0__::func_86(Global_4718592.f_165334[iParam0->f_848 /*66*/][iParam0->f_2763 /*13*/][iVar1 /*3*/]))
			{
				iParam0->f_2764 = iVar1;
			}
			else
			{
				iVar1++;
			}
		}
	}
	if (!CAM::IS_GAMEPLAY_CAM_RENDERING())
	{
		iVar2 = 0;
		while (iVar2 <= 3)
		{
			if (!__LIB_0__::func_86(Global_4718592.f_165334[iParam0->f_848 /*66*/][iParam0->f_2763 /*13*/][iVar2 /*3*/]))
			{
				iVar3++;
			}
			iVar2++;
		}
		__LIB_24__::func_990(iParam0, &(iParam0->f_1059), iVar3, 2, iVar3 > 0);
	}
}

void func_91(int* iParam0)//Position - 0x168186
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	struct<2> Var4;
	__LIB_23__::func_384(iParam0);
	iParam0->f_546 = 5;
	__LIB_1__::func_767("FMMC_TRPT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_550 = 62;
	iParam0->f_270 = 2;
	iVar0 = 0;
	iVar1 = 0;
	while (iVar1 <= 3)
	{
		iVar2 = 0;
		while (iVar2 <= 3)
		{
			iVar3 = 0;
			while (iVar3 <= 3)
			{
				if (!__LIB_0__::func_86(Global_4718592.f_115403[iVar1 /*53*/][iVar2 /*13*/][iVar3 /*3*/]))
				{
					iVar0++;
				}
				iVar3++;
			}
			iVar2++;
		}
		iVar1++;
	}
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	StringCopy(&Var4, "LOB_MYTEAM_", 16);
	StringIntConCat(&Var4, iParam0->f_848, 16);
	__LIB_23__::func_494(0, "LOB_CAT_20" /* GXT: Team */, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(0, &Var4, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "FMMC_TRPT_PNT", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(1, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(iParam0->f_2762, 0);
	__LIB_23__::func_494(2, "FMMC_TRS_SEL", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(2, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_166142[iParam0->f_848 /*5*/][iParam0->f_2762], 0);
	__LIB_23__::func_494(3, "FMMC_TRS_SIC", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_166163, (iParam0->f_848 * 4 + iParam0->f_2762)))
	{
		__LIB_23__::func_494(3, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(3, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(4, "FMMC_TRS_NIR", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_166164, (iParam0->f_848 * 4 + iParam0->f_2762)))
	{
		__LIB_23__::func_494(4, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(4, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	__LIB_24__::func_990(iParam0, &(iParam0->f_1059), iVar0, 3, iVar0 > 0);
}

void func_92(int* iParam0)//Position - 0x1690EE
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_STIT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.295f;
	iParam0->f_546 = 0;
	iParam0->f_270 = 234;
	__LIB_24__::func_915(0, Global_4718592.f_658[iParam0->f_1098 /*22957*/].f_893, "FMMC_PI_SEL", "FMMC_PI_PI", 1, -1, 1, -1);
	iParam0->f_546++;
	__LIB_24__::func_913(1, Global_4718592.f_658[iParam0->f_1098 /*22957*/].f_894, "FMMC_PI_VAR", "", "", -1, 0, Global_4718592.f_658[iParam0->f_1098 /*22957*/].f_893 != -1, 0, -1);
	iParam0->f_546++;
}

void func_93(int* iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5)//Position - 0x16924F
{
	struct<2> Var0;
	var uVar1;
	bool bVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_STIT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.295f;
	iVar6 = 2;
	iVar7 = 16;
	if (iVar7 != 0)
	{
		iVar6++;
	}
	if (iParam0->f_553 < (iVar6 - 1))
	{
		iVar4 = 55;
	}
	else
	{
		iVar4 = 15;
	}
	iParam0->f_546 = iVar4 + 2;
	bVar5 = false;
	iVar8 = iParam0->f_553 * 56;
	iVar3 = iVar8;
	while (iVar3 <= (iVar8 + iVar4))
	{
		StringCopy(&Var0, "FMMC_STR_WP_", 16);
		StringIntConCat(&Var0, iVar3, 16);
		__LIB_23__::func_494(bVar5, &Var0, 0, 1, 0, 0, 0);
		if (iVar3 < 32)
		{
			uVar1 = uParam1;
			bVar2 = iVar3;
		}
		else if (iVar3 >= 96)
		{
			uVar1 = uParam4;
			bVar2 = (iVar3 - 96);
		}
		else if (iVar3 >= 64)
		{
			uVar1 = uParam3;
			bVar2 = (iVar3 - 64);
		}
		else
		{
			uVar1 = uParam2;
			bVar2 = (iVar3 - 32);
		}
		if (BitTest(uVar1, bVar2))
		{
			if ((*uParam5)[iVar3] == 0)
			{
				__LIB_23__::func_494(bVar5, "FMMC_SEL_DEF", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] == 31)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_1", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] > 31 && (*uParam5)[iVar3] <= 60)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO", 1, 1, 0, 0, 0);
				__LIB_23__::func_517(((*uParam5)[iVar3] - 30), 0);
			}
			else if ((*uParam5)[iVar3] == 101)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_ONLY_1", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] > 101 && (*uParam5)[iVar3] <= 130)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_ONLY", 1, 1, 0, 0, 0);
				__LIB_23__::func_517(((*uParam5)[iVar3] - 100), 0);
			}
			else if ((*uParam5)[iVar3] == 1)
			{
				__LIB_23__::func_494(bVar5, "FMMC_CLIP_1", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] == -1)
			{
				__LIB_23__::func_494(bVar5, "FMMC_NO_AMMO", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] == -2)
			{
				__LIB_23__::func_494(bVar5, "FMMC_REM_WEP", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] > 1 && (*uParam5)[iVar3] <= 30)
			{
				__LIB_23__::func_494(bVar5, "FMMC_CLIP_NO", 1, 1, 0, 0, 0);
				__LIB_23__::func_517((*uParam5)[iVar3], 0);
			}
			else if ((*uParam5)[iVar3] == 100)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_ONLY_D", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] == 101)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_ONLY_1", 0, 1, 0, 0, 0);
			}
			else if ((*uParam5)[iVar3] > 101 && (*uParam5)[iVar3] <= 130)
			{
				__LIB_23__::func_494(bVar5, "MC_AMMO_ONLY", 1, 1, 0, 0, 0);
				__LIB_23__::func_517(((*uParam5)[iVar3] - 100), 0);
			}
			else if ((*uParam5)[iVar3] == -3)
			{
				__LIB_23__::func_494(bVar5, "FMMC_UNL_AMMO", 0, 1, 0, 0, 0);
			}
		}
		else
		{
			__LIB_23__::func_494(bVar5, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		bVar5++;
		iVar3++;
	}
	__LIB_24__::func_946(bVar5, iParam0->f_553, "FMMC_STR_WP_PG", 1, 0);
}

void func_94(int* iParam0)//Position - 0x169A42
{
	struct<2> Var0;
	bool bVar1;
	iParam0->f_270 = 323;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_MD_DT38");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar1 = false;
	while (bVar1 <= 18)
	{
		if (__LIB_24__::func_822(bVar1))
		{
		}
		else
		{
			StringCopy(&Var0, "FMMC_CS_D", 16);
			StringIntConCat(&Var0, bVar1, 16);
			__LIB_23__::func_494(bVar1, &Var0, 0, 1, 0, 0, 0);
			if (bVar1 > 10)
			{
				if (BitTest(Global_4718592.f_10, bVar1))
				{
					__LIB_23__::func_494(bVar1, "LOB_CAT_32_0" /* GXT: On */, 0, 1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(bVar1, "LOB_CAT_32_1" /* GXT: Off */, 0, 1, 0, 0, 0);
				}
			}
			else if (BitTest(Global_4718592.f_10, bVar1))
			{
				__LIB_23__::func_494(bVar1, "LOB_CAT_32_1" /* GXT: Off */, 0, 1, 0, 0, 0);
			}
			else
			{
				__LIB_23__::func_494(bVar1, "LOB_CAT_32_0" /* GXT: On */, 0, 1, 0, 0, 0);
			}
		}
		bVar1++;
	}
	iParam0->f_546 = bVar1;
}

void func_95(int* iParam0)//Position - 0x16AE7D
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_HUD_CRHT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 374;
	iParam0->f_546 = 2;
	iVar0 = 0;
	while (iVar0 <= 1)
	{
		__LIB_24__::func_923(iParam0, iVar0, 798, "FMMC_CRH_H", iVar0, 1);
		iVar0++;
	}
	iParam0->f_4758 = __LIB_22__::func_607(iParam0);
}

void func_96(int* iParam0)//Position - 0x16AEF6
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CRH_HT");
	__LIB_19__::func_185(iParam0->f_4758);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 797;
	iParam0->f_546 = 5;
	__LIB_24__::func_915(0, Global_4718592.f_174980[iParam0->f_4758 /*9*/], "FMMC_CRH_C", "FMMC_CRH_C", 0, -1, 1, -1);
	__LIB_24__::func_803(iParam0, 0, Global_4718592.f_174980[iParam0->f_4758 /*9*/], "MC_H_CRH_C", 0);
	if (Global_4718592.f_174980[iParam0->f_4758 /*9*/] == 4 || Global_4718592.f_174980[iParam0->f_4758 /*9*/] == 5)
	{
		__LIB_25__::func_3(1, &(Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_1), "FMMC_CRH_PR", 1);
		__LIB_24__::func_810(iParam0, 1, "FMMC_CRH_PR", "MC_H_CRH_PR", &(Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_1), -1, 100, 0, 0);
		__LIB_23__::func_420(iParam0, 1, "MC_H_CRH_PR", 0);
	}
	__LIB_24__::func_943(2, "FMMC_CRH_TL", &(Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_6), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_CRH_TL", 0);
	__LIB_24__::func_915(3, Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_7, "FMMC_CRH_CL", "FMMC_CRH_CL", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 3, "FMMC_CRH_CL", 0);
	__LIB_24__::func_915(4, Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_8, "FMMC_CRH_T", "FMMC_CRH_T", 0, -1, 1, -1);
	__LIB_24__::func_803(iParam0, 4, Global_4718592.f_174980[iParam0->f_4758 /*9*/].f_8, "MC_H_CRH_T", 0);
}

void func_97(int* iParam0)//Position - 0x16BD0B
{
	iParam0->f_270 = 248;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PEDOP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_24__::func_916(iParam0, 0, 804, "MC_STLTHP_MENU", 0, 1);
	__LIB_23__::func_420(iParam0, 0, "MCH_STLTHP_MENU", 0);
	iParam0->f_546++;
}

void func_98(int* iParam0)//Position - 0x16C3C7
{
	iParam0->f_270 = 369;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("MC_T_INTO_ICH");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 3;
	Global_23149 = 0.3f;
	__LIB_24__::func_946(0, iParam0->f_5571, "FMMC_INCH_IND", 1, 0);
	__LIB_23__::func_420(iParam0, 0, "MC_H_INCH_IND", 0);
	__LIB_24__::func_915(1, Global_4980736.f_34605[iParam0->f_5571 /*2*/], "FMMC_INCH_TY", "FMMC_INCN_IT", 1, 0, 1, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_INCH_TY", 0);
	__LIB_24__::func_943(2, "FMMC_INCH_TX", &(Global_4980736.f_34605[iParam0->f_5571 /*2*/].f_1), 1, 1, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_INCH_TX", 0);
}

void func_99(int* iParam0)//Position - 0x16C48B
{
	iParam0->f_270 = 248;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_INT_TTL");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 1;
	__LIB_24__::func_916(iParam0, 0, 370, "FMMC_INTO_ICH", 0, 1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_INTO_ICH", 0);
}

void func_100(int* iParam0)//Position - 0x16EB89
{
	iParam0->f_270 = 378;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_MSO_LDOT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_24__::func_997(0, "FMMC_LD_PUCD", Global_4718592.f_169005, "FMMC_SEL_NON", 0, 1);
	iParam0->f_546++;
}

void func_101(int* iParam0)//Position - 0x16F69F
{
	struct<2> Var0;
	iParam0->f_270 = 307;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_SM_VWOT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_23__::func_494(0, "FMMC_VWO_ENB", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_19, 5))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(0, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(1, "FMMC_VWO_VWD", 0, 1, 0, 0, 0);
		if (BitTest(Global_4718592.f_19, 17))
		{
			StringCopy(&Var0, "FMMC_SEL_YES", 16);
		}
		else
		{
			StringCopy(&Var0, "FMMC_SEL_NO", 16);
		}
		__LIB_23__::func_494(1, &Var0, 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(2, "FMMC_VWO_DVWD", 0, 1, 0, 0, 0);
		if (BitTest(Global_4718592.f_20, 16))
		{
			StringCopy(&Var0, "FMMC_SEL_YES", 16);
		}
		else
		{
			StringCopy(&Var0, "FMMC_SEL_NO", 16);
		}
		__LIB_23__::func_494(2, &Var0, 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(3, "FMMC_VWO_NDVW", 0, 1, 0, 0, 0);
		if (BitTest(Global_4718592.f_21, 29))
		{
			StringCopy(&Var0, "FMMC_SEL_YES", 16);
		}
		else
		{
			StringCopy(&Var0, "FMMC_SEL_NO", 16);
		}
		__LIB_23__::func_494(3, &Var0, 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(4, "FMMC_VWO_ENMG", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 17))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(4, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(5, "FMMC_MGOT", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(5, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_168998, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(6, "FMMC_MGDA", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(6, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_168999, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(7, "FMMC_VWO_MGNO", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_22, 2))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(7, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(8, "FMMC_VWO_MGNB", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(8, "NUMBER", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_169000, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(9, "FMMC_SPBIC", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 18))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(9, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(10, "FMMC_EVOZH", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 19))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(10, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	if (__LIB_1__::func_823())
	{
		__LIB_23__::func_494(11, "FMMC_BHID", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(11, "FMMC_BHIDM", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168971, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(12, "FMMC_PRON_DMT", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 12))
	{
		StringCopy(&Var0, "FMMC_SEL_ON", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_OFF", 16);
	}
	__LIB_23__::func_494(12, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(13, "FMMC_PRON_DMTD", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_19, 23))
	{
		StringCopy(&Var0, "FMMC_SEL_ON", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_OFF", 16);
	}
	__LIB_23__::func_494(13, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(14, "FMMC_VWPD0", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(14, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168965, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(15, "FMMC_VWPD1", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(15, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168966, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(16, "FMMC_VWPD2", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(16, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_168968, 0);
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(17, "FMMC_VWPD3", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(17, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168969, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(18, "FMMC_VWPD4", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(18, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168970, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(19, "FMMC_VWPD5", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(19, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(Global_4718592.f_168967, 0);
	}
	iParam0->f_546++;
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(20, "FMMC_VWPPM", 0, 1, 0, 0, 0);
		if (BitTest(Global_4718592.f_21, 11))
		{
			StringCopy(&Var0, "FMMC_SEL_YES", 16);
		}
		else
		{
			StringCopy(&Var0, "FMMC_SEL_NO", 16);
		}
		__LIB_23__::func_494(20, &Var0, 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(21, "FMMC_VWPRO", 0, 1, 0, 0, 0);
	iParam0->f_14[21] = 346;
	iParam0->f_546++;
	__LIB_23__::func_494(22, "FMMC_OHGT", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 20))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(22, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(23, "FMMC_OHVH", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 21))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(23, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(24, "FMMC_VHH", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_21, 22))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(24, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(25, "FMMC_EVOHEDL", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_31, 9))
	{
		StringCopy(&Var0, "FMMC_SEL_YES", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_SEL_NO", 16);
	}
	__LIB_23__::func_494(25, &Var0, 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(26, "FMMC_VWPD6", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(26, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_168972, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(27, "FMMC_VWPD7", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(27, "FMMC_CHASE_D", 1, 1, 0, 0, 0);
	__LIB_23__::func_517(Global_4718592.f_168973, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(28, "FMMC_VWO_MD", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(28, __LIB_4__::func_960(Global_4718592.f_168975, 0), 0, 1, 0, 0, 0);
	__LIB_23__::func_420(iParam0, 28, "MC_H_VWO_MD", 0);
	iParam0->f_546++;
	__LIB_24__::func_945(29, Global_4718592.f_168976, "FMMC_VWO_DM", 1, 2);
	__LIB_23__::func_420(iParam0, 29, "MC_H_VWO_DM", 0);
	iParam0->f_546++;
}

void func_102(int* iParam0)//Position - 0x1706AB
{
	iParam0->f_270 = 378;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_MJ_CT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_24__::func_997(0, "FMMC_MJ_01", Global_4718592.f_170132, "FMMC_SEL_NON", 0, 1);
	iParam0->f_546++;
}

void func_103(int* iParam0)//Position - 0x173D0E
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AVL_STYLE");
	__LIB_22__::func_902(__LIB_23__::func_85(iParam0->f_2935));
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 278;
	iVar0 = Global_4718592.f_593;
	if (BitTest(Global_4718592.f_607, 16))
	{
		iVar0 = 2;
	}
	bVar2 = __LIB_24__::func_823(iParam0->f_2935);
	bVar1 = false;
	while (bVar1 < bVar2)
	{
		bVar3 = __LIB_23__::func_500(iParam0->f_2935, bVar1, iVar0);
		__LIB_23__::func_494(bVar1, __LIB_23__::func_428(iParam0->f_2935, bVar1, iVar0), 0, bVar3, 0, 0, 0);
		if (BitTest(Global_4718592.f_142733[iParam0->f_2935 /*3*/][__LIB_13__::func_437(bVar1)], __LIB_18__::func_410(bVar1)))
		{
			__LIB_23__::func_496(bVar1, 5, 0);
		}
		else
		{
			__LIB_23__::func_496(bVar1, 7, 0);
		}
		bVar1++;
	}
	__LIB_23__::func_494(bVar2, "FMMC_ALL_AVLO", 0, 1, 0, 0, 0);
	if (BitTest(Global_4718592.f_142759, iParam0->f_2935))
	{
		__LIB_23__::func_496(bVar2, 5, 0);
	}
	else
	{
		__LIB_23__::func_496(bVar2, 7, 0);
	}
	iParam0->f_546 = bVar2 + 1;
}

void func_104(int* iParam0)//Position - 0x17528C
{
	int iVar0;
	int iVar1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_ASO_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 767;
	iParam0->f_546 = 5;
	iVar0 = iParam0->f_5706;
	__LIB_24__::func_946(0, iVar0, "FMMC_ASO_ASI", 1, 0);
	__LIB_23__::func_420(iParam0, 0, "MC_H_ASO_ASI", 0);
	iVar1 = Global_4718592.f_116955[iVar0];
	__LIB_24__::func_913(1, Global_4718592.f_116955[iVar0], "FMMC_ASO_AS", "", __LIB_23__::func_86(iVar1), -1, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_ASO_AS", 0);
	bVar2 = Global_4718592.f_116955[iVar0] > -1;
	__LIB_24__::func_913(2, Global_4718592.f_116960[iVar0], "FMMC_ASO_AST", "FMMC_ALLTMS", "", -1, 0, bVar2, 0, -1);
	__LIB_23__::func_420(iParam0, 2, "MC_H_ASO_AST", 0);
	__LIB_24__::func_913(3, Global_4718592.f_116965[iVar0], "FMMC_ASO_ASSR", "", "", -1, 0, bVar2, 0, -1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_ASO_ASSR", 0);
	__LIB_24__::func_913(4, Global_4718592.f_116970[iVar0], "FMMC_ASO_ASER", "", "", -1, 0, bVar2, 0, -1);
	__LIB_23__::func_420(iParam0, 4, "MC_H_ASO_ASER", 0);
}

void func_105(int* iParam0)//Position - 0x17882F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_RDT_TIT");
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	__LIB_1__::func_765(1, 1, 1, 1, 1);
	iParam0->f_549 = 30;
	iParam0->f_270 = 3;
	iParam0->f_546 = 0;
	iVar0 = 13;
	if (!__LIB_10__::func_207())
	{
		iVar0 = 11;
	}
	iParam0->f_1064 = __LIB_22__::func_607(iParam0) + 1;
	iVar1 = 0;
	if (iParam0->f_1064 < iVar0)
	{
		iVar1 = Global_4718592.f_94884[iParam0->f_1064];
	}
	iParam0->f_885 = __LIB_22__::func_424(iVar1, 0);
	if (iVar1 == 0)
	{
		iParam0->f_886 = 0;
	}
	else
	{
		iParam0->f_886 = __LIB_22__::func_423(iVar1, 0);
	}
	iVar2 = 1;
	while (iVar2 <= (iVar0 - 1))
	{
		if (Global_4718592.f_94884[iVar2] != 0)
		{
			__LIB_23__::func_494(iParam0->f_546, __LIB_22__::func_16(Global_4718592.f_94884[iVar2]), 0, 1, 0, 0, 0);
			iParam0->f_14[iParam0->f_546] = 128;
			iParam0->f_546++;
			iVar3++;
		}
		iVar2++;
	}
	if (iVar3 < (iVar0 - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDT_CUS", 0, 1, 0, 0, 0);
		iParam0->f_14[iParam0->f_546] = 128;
		iParam0->f_546++;
	}
}

void func_106(int* iParam0)//Position - 0x179A48
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_LBYO_T");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	if (__LIB_16__::func_698())
	{
		if ((__LIB_22__::func_607(iParam0) == 0 || __LIB_22__::func_607(iParam0) == 1) || __LIB_22__::func_607(iParam0) == 2)
		{
			__LIB_12__::func_593(0, 0, 0, 0, 0);
		}
	}
	iParam0->f_270 = 3;
	iParam0->f_546 = 4;
	__LIB_24__::func_913(0, Global_4718592.f_170127, "FMMC_PRL_MNL", "", "", 0, 1, !__LIB_16__::func_698(), 1, -1);
	__LIB_24__::func_913(1, Global_4718592.f_170128, "FMMC_PRL_MXL", "", "", 0, 1, !__LIB_16__::func_698(), 1, -1);
	if (__LIB_10__::func_207())
	{
		__LIB_24__::func_946(2, Global_4718592.f_170043, "FMMC_PRL_LI", !__LIB_16__::func_698(), 0);
	}
}

void func_107(int* iParam0)//Position - 0x17A123
{
	bool bVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_RDC_CRT");
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_549 = 28;
	iParam0->f_270 = 3;
	iParam0->f_546 = 0;
	bVar0 = true;
	if ((((__LIB_18__::func_700() && !__LIB_10__::func_365()) && !__LIB_19__::func_4()) && !__LIB_2__::func_629()) && !__LIB_18__::func_699())
	{
		bVar0 = false;
	}
	if (bVar0)
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_PSR", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 31;
		if (iParam0->f_546 == iParam0->f_547)
		{
			iParam0->f_3117 = 28;
			if (__LIB_10__::func_365())
			{
				iParam0->f_3116 = "FMMC_WAR_PSRT";
			}
			else if (__LIB_19__::func_4())
			{
				iParam0->f_3116 = "FMMC_WAR_PSRS";
			}
			else if (__LIB_2__::func_629())
			{
				iParam0->f_3116 = "FMMC_WAR_PSRA";
			}
			else if (__LIB_18__::func_699())
			{
				iParam0->f_3116 = "FMMC_WAR_SRO";
			}
			else
			{
				iParam0->f_3116 = "FMMC_WAR_PSRL";
			}
		}
		iParam0->f_546++;
	}
	if (__LIB_24__::func_824() && !__LIB_10__::func_365())
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_TFR", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 31;
		if (iParam0->f_546 == iParam0->f_547)
		{
			iParam0->f_3117 = 29;
			if (__LIB_2__::func_629())
			{
				iParam0->f_3116 = "FMMC_WAR_TFRA";
			}
			else if (__LIB_18__::func_699())
			{
				iParam0->f_3116 = "FMMC_WAR_TFRO";
			}
			else
			{
				iParam0->f_3116 = "FMMC_WAR_TFR";
			}
		}
		iParam0->f_546++;
	}
	if (!__LIB_19__::func_4())
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_SVR", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 31;
		if (iParam0->f_546 == iParam0->f_547)
		{
			iParam0->f_3117 = 30;
			if (__LIB_10__::func_365())
			{
				iParam0->f_3116 = "FMMC_WAR_SVRT";
			}
			else if (__LIB_2__::func_629())
			{
				iParam0->f_3116 = "FMMC_WAR_SVRA";
			}
			else if (__LIB_18__::func_699())
			{
				iParam0->f_3116 = "FMMC_WAR_SVRO";
			}
			else
			{
				iParam0->f_3116 = "FMMC_WAR_SVR";
			}
		}
		iParam0->f_546++;
	}
	if (__LIB_19__::func_200() && !__LIB_2__::func_629())
	{
		bVar1 = true;
		if (Global_4718592.f_588 < 2)
		{
			bVar1 = false;
		}
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_TRG", 0, bVar1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, bVar1, 0, 0, 0);
		if (bVar1)
		{
			iParam0->f_142[iParam0->f_546] = 31;
		}
		else
		{
			iParam0->f_142[iParam0->f_546] = 117;
		}
		if (iParam0->f_546 == iParam0->f_547)
		{
			iParam0->f_3117 = 32;
			if (__LIB_10__::func_365())
			{
				iParam0->f_3116 = "FMMC_WAR_TRGT";
			}
			else if (__LIB_18__::func_699())
			{
				iParam0->f_3116 = "FMMC_WAR_TARO";
			}
			else
			{
				iParam0->f_3116 = "FMMC_WAR_TRG";
			}
		}
		iParam0->f_546++;
	}
	if (__LIB_19__::func_199() && !__LIB_18__::func_699())
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_OWR", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 31;
		if (iParam0->f_546 == iParam0->f_547)
		{
			iParam0->f_3117 = 33;
			iParam0->f_3116 = "FMMC_WAR_OWR";
		}
		iParam0->f_546++;
	}
	if (__LIB_10__::func_207())
	{
		if (!__LIB_18__::func_739())
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_PR", 0, 1, 0, 0, 0);
			__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
			__LIB_23__::func_420(iParam0, iParam0->f_546, "MC_H_RDC_PR", 0);
			iParam0->f_142[iParam0->f_546] = 31;
			if (iParam0->f_546 == iParam0->f_547)
			{
				iParam0->f_3117 = 34;
				iParam0->f_3116 = "FMMC_WAR_PR";
			}
			iParam0->f_546++;
		}
		if (!__LIB_18__::func_740())
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_RDC_STRTR", 0, 1, 0, 0, 0);
			__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
			__LIB_23__::func_420(iParam0, iParam0->f_546, "MC_H_RDC_STRTR", 0);
			iParam0->f_142[iParam0->f_546] = 31;
			if (iParam0->f_546 == iParam0->f_547)
			{
				iParam0->f_3117 = 35;
				iParam0->f_3116 = "FMMC_WAR_STRTR";
			}
			iParam0->f_546++;
		}
	}
}

void func_108(int* iParam0)//Position - 0x17A614
{
	bool bVar0;
	bool bVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_MENU_BOOT");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_549 = 26;
	iParam0->f_270 = 3;
	bVar0 = BitTest(Global_4718592.f_17, 23);
	if (((__LIB_22__::func_607(iParam0) == 2 && (Global_4718592.f_107226 == 0 || __LIB_16__::func_698())) || (__LIB_22__::func_607(iParam0) == 1 && !bVar0)) || (__LIB_22__::func_607(iParam0) == 2 && !bVar0))
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_24__::func_986(0, bVar0, "FMMC_RSD_ALB" /* GXT: Allow Vehicle Speed Boosts */, "FMMC_SEL_YES", "FMMC_SEL_NO", 1);
	iParam0->f_546++;
	if (Global_4718592.f_169006 == 1)
	{
		__LIB_24__::func_915(1, Global_4718592.f_169006, "FMMC_MENU_BOOD", "FMMC_F_S_", 0, -1, bVar0, -1);
	}
	else
	{
		__LIB_24__::func_913(1, Global_4718592.f_169006, "FMMC_MENU_BOOD", "FMMC_F_S_0", "FMMC_CHASE_D", 0, 0, bVar0, 0, -1);
	}
	iParam0->f_546++;
	bVar1 = bVar0;
	if (Global_4718592.f_107226 == 0 || __LIB_16__::func_698())
	{
		bVar1 = false;
	}
	__LIB_24__::func_913(2, Global_4718592.f_169007, "FMMC_ACT_LAP", "FMMC_LAP", "FMMC_LAP", -1, 0, bVar1, 0, -1);
	iParam0->f_546++;
}

void func_109(int* iParam0)//Position - 0x17A78B
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("DM_BNDS_SHBO_T");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	iParam0->f_270 = 91;
	iParam0->f_546 = 3;
	iVar0 = Global_4718592.f_173158;
	__LIB_24__::func_913(0, Global_4718592.f_173049[iVar0 /*18*/].f_15, "DM_BNDS_SHB0", "", "FMMC_PERCENT", 100, 0, 1, 0, -1);
	__LIB_24__::func_913(1, Global_4718592.f_173049[iVar0 /*18*/].f_16, "DM_BNDS_SHB1", "", "FMMC_SEL_SEC", 0, 0, 1, 0, -1);
	__LIB_24__::func_913(2, Global_4718592.f_173049[iVar0 /*18*/].f_17, "DM_BNDS_SHB2", "", "FMMC_SEL_SEC", 0, 0, 1, 0, -1);
}

void func_110(int* iParam0)//Position - 0x17B21F
{
	struct<2> Var0;
	bool bVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	__LIB_23__::func_384(iParam0);
	if (!CAM::IS_GAMEPLAY_CAM_RENDERING())
	{
		iParam0->f_546 = 2;
	}
	else
	{
		iParam0->f_546 = 1;
	}
	__LIB_1__::func_767("FMMCCMENU_RST");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_550 = 8;
	iParam0->f_270 = 2;
	if (iParam0->f_848 >= 0 && iParam0->f_848 < 4)
	{
		if (Global_4980736.f_176055[iParam0->f_848] > 0 || __LIB_22__::func_607(iParam0) != 1)
		{
			__LIB_12__::func_593(0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_12__::func_593(0, 0, 0, 0, 0);
		}
	}
	StringCopy(&Var0, "LOB_MYTEAM_", 16);
	StringIntConCat(&Var0, iParam0->f_848, 16);
	__LIB_23__::func_494(bVar1, "LOB_CAT_20" /* GXT: Team */, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(bVar1, &Var0, 0, 1, 0, 0, 0);
	bVar1++;
	if (iParam0->f_848 > -1)
	{
		iVar2 = 0;
		while (iVar2 <= (Global_4980736.f_176055[iParam0->f_848] - 1))
		{
			if (BitTest(Global_4980736.f_179962[iParam0->f_848 /*3901*/][iVar2 /*65*/].f_5, 2))
			{
				if (iVar2 < iParam0->f_1059)
				{
					iVar4++;
				}
				iVar3++;
			}
			iVar2++;
		}
		__LIB_24__::func_990(iParam0, &iVar4, iVar3, bVar1, 1);
		bVar1++;
	}
	else
	{
		iParam0->f_848 = 0;
	}
	iParam0->f_546 = bVar1;
}

void func_111(bool bParam0, var uParam1, int iParam2, bool bParam3, bool bParam4, char* sParam5, char* sParam6, bool bParam7)//Position - 0x17B41A
{
	__LIB_23__::func_494(bParam0, bParam3, 1, bParam7, 0, 0, 0);
	__LIB_23__::func_517(bParam4, 0);
	__LIB_24__::func_912(bParam0, uParam1, iParam2, sParam5, sParam6, bParam7);
}

void func_112(int* iParam0)//Position - 0x17CB45
{
	bool bVar0;
	struct<2> Var1;
	int iVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMCCMENU_6T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_550 = 74;
	iParam0->f_546 = 0;
	iParam0->f_270 = 2;
	__LIB_23__::func_494(0, "FMMC_DM_07", 0, 1, 0, 0, 0);
	iParam0->f_546++;
	iVar2 = iParam0->f_546;
	bVar0 = false;
	while (bVar0 <= 3)
	{
		if ((__LIB_22__::func_607(iParam0) - iVar2) == bVar0 && bVar0 >= Global_4718592.f_593)
		{
			__LIB_12__::func_593(0, 1, 0, 0, 0);
		}
		__LIB_23__::func_494(iParam0->f_546, "FMMC_TEAM_NO", 1, bVar0 < Global_4718592.f_593, 0, 0, 0);
		__LIB_23__::func_517(bVar0 + 1, 0);
		if (BitTest(iParam0->f_2632, bVar0))
		{
			StringCopy(&Var1, "FMMC_VEH_RST1", 16);
		}
		else
		{
			StringCopy(&Var1, "FMMC_VEH_RST0", 16);
		}
		__LIB_23__::func_494(iParam0->f_546, &Var1, 0, bVar0 < Global_4718592.f_593, 0, 0, 0);
		iParam0->f_546++;
		bVar0++;
	}
	__LIB_24__::func_990(iParam0, &(iParam0->f_1059), Global_4980736.f_176054, 5, 1);
	iParam0->f_546++;
}

void func_113(int* iParam0)//Position - 0x17F168
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	__LIB_23__::func_384(iParam0);
	if (((Global_4980736.f_176055[0] > 0 || Global_4980736.f_176055[1] > 0) || Global_4980736.f_176055[2] > 0) || Global_4980736.f_176055[3] > 0)
	{
		bVar0 = true;
	}
	else
	{
		bVar0 = false;
	}
	if (__LIB_0__::func_86(Global_4718592.f_658[0 /*22957*/].f_2753[0 /*36*/].f_13) && __LIB_0__::func_86(Global_4718592.f_658[0 /*22957*/].f_2753[0 /*36*/].f_16))
	{
		bVar1 = false;
	}
	else
	{
		bVar1 = true;
	}
	__LIB_1__::func_767("FMMC_RESETT");
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	if (iParam0->f_545 == 0)
	{
		if (!__LIB_1__::func_308())
		{
			iParam0->f_546 = 14;
			iParam0->f_270 = 2;
			__LIB_23__::func_494(0, "FMMC_DLT_A", 0, 1, 0, 0, 0);
			iParam0->f_142[0] = 49;
			__LIB_23__::func_494(1, "FMMC_DLT_AI", 0, Global_4980736.f_94384 > 0, 0, 0, 0);
			iParam0->f_142[1] = 41;
			__LIB_23__::func_494(2, "FMMC_DLT_W", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
			iParam0->f_142[2] = 37;
			__LIB_23__::func_494(3, "FMMC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
			iParam0->f_142[3] = 38;
			__LIB_23__::func_494(4, "FMMC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
			iParam0->f_142[4] = 39;
			__LIB_23__::func_494(5, "FMMC_DLT_O", 0, Global_4980736.f_5739 > 0, 0, 0, 0);
			iParam0->f_142[5] = 43;
			__LIB_23__::func_494(6, "FMMC_DLT_IN", 0, Global_4980736.f_20329 > 0, 0, 0, 0);
			iParam0->f_142[6] = 51;
			__LIB_23__::func_494(7, "FMMC_DLT_V", 0, Global_4980736.f_78574 > 0, 0, 0, 0);
			iParam0->f_142[7] = 42;
			__LIB_23__::func_494(8, "FMMC_DLT_T", 0, bVar0, 0, 0, 0);
			iParam0->f_142[8] = 44;
			__LIB_23__::func_494(9, "FMMC_DLT_SJ", 0, Global_4718592.f_115311 > 0, 0, 0, 0);
			iParam0->f_142[9] = 45;
			__LIB_23__::func_494(10, "FMMC_DLT_DR", 0, Global_4980736.f_34610 > 0, 0, 0, 0);
			iParam0->f_142[10] = 46;
			__LIB_23__::func_494(11, "FMMC_DLT_DTR", 0, Global_4718592.f_142630 > 0, 0, 0, 0);
			iParam0->f_142[11] = 47;
			__LIB_23__::func_494(12, "FMMC_DLT_WP", 0, Global_4980736.f_201777 > 0, 0, 0, 0);
			iParam0->f_142[12] = 58;
			__LIB_23__::func_494(13, "FMMC_DLT_Z", 0, Global_4980736.f_195933 > 0, 0, 0, 0);
			iParam0->f_142[13] = 50;
		}
		else
		{
			__LIB_23__::func_494(0, "SC_DLT_A", 0, 1, 0, 0, 0);
			__LIB_23__::func_494(1, "SC_DLT_ESP", 0, Global_4980736.f_94384 > 0, 0, 0, 0);
			__LIB_23__::func_494(2, "SC_DLT_VSP", 0, Global_4980736.f_78574 > 0, 0, 0, 0);
			__LIB_23__::func_494(3, "SC_DLT_PSP", 0, Global_4980736.f_176055[0] > 0, 0, 0, 0);
			__LIB_23__::func_494(4, "SC_DLT_PUSP", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
			__LIB_23__::func_494(5, "SC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
			__LIB_23__::func_494(6, "SC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
			iParam0->f_546 = 7;
			iParam0->f_270 = 2;
			iParam0->f_142[0] = 49;
			iParam0->f_142[1] = 41;
			iParam0->f_142[2] = 42;
			iParam0->f_142[3] = 44;
			iParam0->f_142[4] = 37;
			iParam0->f_142[5] = 38;
			iParam0->f_142[6] = 39;
		}
	}
	else if (iParam0->f_545 == 3)
	{
		if (BitTest(Global_4718592.f_4, 21))
		{
			iVar2 = __LIB_24__::func_637();
			iVar3 = __LIB_23__::func_99();
			__LIB_23__::func_494(0, "FMMC_DLT_A", 0, 1, 0, 0, 0);
			__LIB_23__::func_494(1, "FMMC_DLT_W", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
			__LIB_23__::func_494(2, "FMMC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
			__LIB_23__::func_494(3, "FMMC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
			__LIB_23__::func_494(4, "FMMC_DLT_CV", 0, iVar3 > 0, 0, 0, 0);
			__LIB_23__::func_494(5, "FMMC_DLT_NCV", 0, iVar2 > 0, 0, 0, 0);
			__LIB_23__::func_494(6, "FMMC_DLT_T", 0, bVar0, 0, 0, 0);
			__LIB_23__::func_494(7, "FMMC_DLT_AI", 0, Global_4980736.f_94384 > 0, 0, 0, 0);
			__LIB_23__::func_494(8, "FMMC_DLT_Z", 0, Global_4980736.f_195933 > 0, 0, 0, 0);
			__LIB_23__::func_494(9, "FMMC_DLT_RS" /* GXT: Delete All Team Respawn Areas. */, 0, bVar1, 0, 0, 0);
			__LIB_23__::func_494(10, "FMMC_DLT_CAP", 0, __LIB_23__::func_432(), 0, 0, 0);
			iParam0->f_546 = 11;
			iParam0->f_270 = 2;
			iParam0->f_142[0] = 49;
			iParam0->f_142[1] = 37;
			iParam0->f_142[2] = 38;
			iParam0->f_142[3] = 39;
			iParam0->f_142[4] = 52;
			iParam0->f_142[5] = 53;
			iParam0->f_142[6] = 44;
			iParam0->f_142[7] = 41;
			iParam0->f_142[8] = 50;
			iParam0->f_142[9] = 55;
			iParam0->f_142[10] = 56;
		}
		else
		{
			iParam0->f_546 = 0;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_A", 0, 1, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 49;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_W", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 37;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 38;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 39;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_V", 0, Global_4980736.f_78574 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 42;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_O", 0, Global_4980736.f_5739 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 43;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_T", 0, bVar0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 44;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_AI", 0, Global_4980736.f_94384 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 41;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_Z", 0, Global_4980736.f_195933 > 0, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 50;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_RS" /* GXT: Delete All Team Respawn Areas. */, 0, bVar1, 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 55;
			iParam0->f_546++;
			__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_CAP", 0, __LIB_23__::func_432(), 0, 0, 0);
			iParam0->f_142[iParam0->f_546] = 56;
			iParam0->f_546++;
			iParam0->f_270 = 2;
		}
	}
	else if (iParam0->f_545 == 4)
	{
		iParam0->f_546 = 0;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_A", 0, 1, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 49;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_T", 0, bVar0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 44;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_W", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 37;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 38;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 39;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_V", 0, Global_4980736.f_78574 > 0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 42;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_Z", 0, Global_4980736.f_195933 > 0, 0, 0, 0);
		iParam0->f_142[iParam0->f_546] = 50;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_DLT_B" /* GXT: Delete the Play Area */, 0, !__LIB_0__::func_86(Global_4718592.f_658[0 /*22957*/].f_2753[0 /*36*/].f_16), 0, 0, 0);
		if (!__LIB_0__::func_86(Global_4718592.f_658[0 /*22957*/].f_2753[0 /*36*/].f_16))
		{
			iParam0->f_142[iParam0->f_546] = 54;
		}
		iParam0->f_546++;
		iParam0->f_270 = 2;
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_DLT_A", 0, __LIB_23__::func_98(bVar0), 0, 0, 0);
		__LIB_23__::func_494(1, "FMMC_DLT_S", 0, Global_4980736.f_176054 > 0, 0, 0, 0);
		__LIB_23__::func_494(2, "FMMC_DLT_T", 0, bVar0, 0, 0, 0);
		__LIB_23__::func_494(3, "FMMC_DLT_W", 0, Global_4980736.f_69352 > 0, 0, 0, 0);
		__LIB_23__::func_494(4, "FMMC_DLT_P", 0, Global_4980736.f_36355 > 0, 0, 0, 0);
		__LIB_23__::func_494(5, "FMMC_DLT_D", 0, Global_4980736.f_63310 > 0, 0, 0, 0);
		if (Global_4718592.f_625 == 0)
		{
			__LIB_23__::func_494(6, "FMMC_DLT_V", 0, Global_4980736.f_78574 > 0, 0, 0, 0);
			iParam0->f_546 = 7;
			if (__LIB_0__::func_998())
			{
				__LIB_23__::func_494(7, "FMMC_DLT_KH", 0, Global_4718592.f_172946.f_1 > 0, 0, 0, 0);
				if (Global_4718592.f_172946.f_1 > 0)
				{
					iParam0->f_142[7] = 57;
				}
				iParam0->f_546 = 8;
			}
		}
		else
		{
			iParam0->f_546 = 6;
		}
		iParam0->f_270 = 2;
		if (__LIB_23__::func_98(bVar0))
		{
			iParam0->f_142[0] = 49;
		}
		iParam0->f_142[1] = 41;
		iParam0->f_142[2] = 44;
		iParam0->f_142[3] = 37;
		iParam0->f_142[4] = 38;
		iParam0->f_142[5] = 39;
		if (Global_4718592.f_625 == 0)
		{
			iParam0->f_142[6] = 42;
		}
	}
}

void func_114(int* iParam0)//Position - 0x180087
{
	struct<2> Var0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CVAR_PNP_T");
	__LIB_19__::func_185(iParam0->f_554);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 439;
	iParam0->f_546 = 5;
	if (iParam0->f_554 <= -1 || iParam0->f_554 >= __LIB_23__::func_53(1))
	{
		return;
	}
	iVar1 = 0;
	while (iVar1 <= 4)
	{
		StringCopy(&Var0, "FMMC_CVAR_PNPP", 16);
		StringIntConCat(&Var0, iVar1 + 1, 16);
		__LIB_24__::func_946((0 + iVar1), Global_4718592.f_561[iParam0->f_554 /*6*/][iVar1], &Var0, 1, 0);
		__LIB_24__::func_803(iParam0, (0 + iVar1), iVar1 + 1, "MC_H_CVAR_PNPP", 0);
		iVar1++;
	}
}

void func_115(int* iParam0)//Position - 0x18014C
{
	struct<4> Var0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CVAR_PN_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 438;
	iParam0->f_546 = __LIB_23__::func_53(1);
	iParam0->f_554 = __LIB_22__::func_607(iParam0);
	iVar1 = 0;
	while (iVar1 <= (__LIB_23__::func_53(1) - 1))
	{
		Var0 = { __LIB_23__::func_52(iVar1, 1) };
		__LIB_24__::func_916(iParam0, iVar1, 440, &Var0, 0, 1);
		__LIB_23__::func_420(iParam0, iVar1, "MC_H_CVAR_PNP", 0);
		iVar1++;
	}
}

void func_116(int* iParam0)//Position - 0x1801E4
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CVAR_OP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 3;
	iParam0->f_546 = 1;
	__LIB_24__::func_916(iParam0, 0, 439, "FMMC_CVAR_PN", 0, 1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_CVAR_PN", 0);
}

void func_117(int* iParam0)//Position - 0x181097
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_ENTOP_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	iParam0->f_270 = 3;
	iParam0->f_546 = 9;
	__LIB_24__::func_916(iParam0, 0, 307, "FMMC_MD_D28", 0, 1);
	__LIB_24__::func_916(iParam0, 1, 367, "FMMC_VEHO", 0, 1);
	__LIB_24__::func_916(iParam0, 2, 368, "FMMC_OBJO", 0, 1);
	__LIB_24__::func_916(iParam0, 3, 369, "FMMC_INTO", 0, 1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_INTO", 0);
	__LIB_24__::func_916(iParam0, 4, 371, "FMMC_PRP", 0, 1);
	__LIB_24__::func_916(iParam0, 5, 372, "FMMC_LOCOP", 0, 1);
	if (__LIB_23__::func_399())
	{
		__LIB_23__::func_494(6, "FMMC_PED_PRI", 0, 1, 0, 0, 0);
		iParam0->f_14[6] = 309;
	}
	__LIB_24__::func_916(iParam0, 7, 310, "FMMC_PEDOP", 0, 1);
	__LIB_24__::func_916(iParam0, 8, 311, "FMMC_ECC_MN", 0, 1);
}

void func_118(int* iParam0)//Position - 0x185456
{
	struct<2> Var0;
	if (((__LIB_22__::func_607(iParam0) == 0 || __LIB_22__::func_607(iParam0) == 1) || __LIB_22__::func_607(iParam0) == 2) || __LIB_22__::func_607(iParam0) == 3)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	StringCopy(&Var0, "", 16);
	__LIB_23__::func_494(0, "FMMC_T0_M19", 0, 1, 0, 0, 0);
	__LIB_24__::func_825(0, &Var0);
	if (__LIB_23__::func_274(&(Global_4718592.f_116531)))
	{
		__LIB_23__::func_496(0, 28, 0);
	}
	else
	{
		__LIB_25__::func_22(0, &Var0);
	}
	iParam0->f_142[0] = 5;
	iParam0->f_546++;
	if (__LIB_22__::func_808())
	{
		__LIB_22__::func_904(iParam0, 1, 3);
	}
	else
	{
		__LIB_23__::func_494(1, "FMMC_T0_M20", 0, 1, 0, 0, 0);
		__LIB_24__::func_825(1, &Var0);
		if (__LIB_23__::func_274(&(Global_4718592.f_116553[0 /*16*/])))
		{
			__LIB_23__::func_496(1, 28, 0);
		}
		else
		{
			__LIB_25__::func_22(1, &Var0);
		}
		iParam0->f_142[1] = 6;
	}
	iParam0->f_546++;
	if (__LIB_22__::func_808())
	{
		__LIB_22__::func_904(iParam0, 2, 3);
	}
	else
	{
		__LIB_23__::func_494(2, "FMMC_T0_M31", 0, 1, 0, 0, 0);
		iParam0->f_14[2] = 15;
		if (!BitTest(Global_4718592.f_7, 0))
		{
			__LIB_23__::func_496(2, 28, 0);
		}
	}
	iParam0->f_546++;
	__LIB_23__::func_494(3, "FMMC_T0_M36", 0, 1, 0, 0, 0);
	__LIB_25__::func_22(3, &Var0);
	iParam0->f_142[3] = 8;
	iParam0->f_546++;
	__LIB_23__::func_494(4, "FMMC_MENU_RAD", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(4, __LIB_22__::func_966(1), 0, 1, 0, 0, 0);
	iParam0->f_546++;
	if (__LIB_22__::func_808())
	{
		__LIB_24__::func_916(iParam0, 5, 854, "FMC_INT_O", 0, 1);
		iParam0->f_546++;
		__LIB_24__::func_916(iParam0, 6, 855, "FMC_OPTIONS", 0, 1);
	}
	iParam0->f_546++;
}

void func_119(int* iParam0)//Position - 0x18562E
{
	struct<2> Var0;
	if (__LIB_22__::func_607(iParam0) == 6 || __LIB_22__::func_607(iParam0) == 3)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	if (iParam0->f_3379 != -1)
	{
		iParam0->f_3379 = -1;
	}
	StringCopy(&Var0, "", 16);
	__LIB_23__::func_494(0, "FMMC_T0_M19", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_MN" /* GXT: ~a~ */, 16);
	if (__LIB_23__::func_274(&(Global_4718592.f_116531)))
	{
		__LIB_23__::func_496(0, 28, 0);
	}
	else
	{
		__LIB_25__::func_22(0, &Var0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(1, "FMMC_T0_M20", 0, 1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_MN" /* GXT: ~a~ */, 16);
	if (__LIB_23__::func_274(&(Global_4718592.f_116553[0 /*16*/])))
	{
		__LIB_23__::func_496(1, 28, 0);
	}
	else
	{
		__LIB_25__::func_22(1, &Var0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(2, "FMMC_T0_M31", 0, 1, 0, 0, 0);
	iParam0->f_14[2] = 15;
	if (!BitTest(Global_4718592.f_7, 0))
	{
		__LIB_23__::func_496(2, 28, 0);
	}
	iParam0->f_546++;
	__LIB_23__::func_494(3, "FMMC_T0_M36", 0, 1, 0, 0, 0);
	__LIB_25__::func_22(3, &Var0);
	iParam0->f_142[3] = 8;
	iParam0->f_546++;
	__LIB_23__::func_494(4, "FMMC_MENU_RAD", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(4, __LIB_22__::func_966(1), 0, 1, 0, 0, 0);
	iParam0->f_546++;
	__LIB_23__::func_494(5, "SC_AMBO", 0, 1, 0, 0, 0);
	iParam0->f_14[5] = 475;
	iParam0->f_546++;
	__LIB_23__::func_494(6, "FMMC_RSD_BPT", 0, 1, 0, 0, 0);
	__LIB_25__::func_22(6, &Var0);
	iParam0->f_142[6] = 27;
	iParam0->f_546++;
	if (__LIB_0__::func_261())
	{
		__LIB_23__::func_494(7, "RC_DOOM", 0, 1, 0, 0, 0);
		iParam0->f_14[7] = 484;
		iParam0->f_546++;
	}
}

void func_120(int* iParam0)//Position - 0x1874D6
{
	__LIB_24__::func_916(iParam0, 0, 134, "FMMCCMENU_4", 0, 1);
	__LIB_24__::func_916(iParam0, 1, 11, "FMMCCMENU_2", 0, 1);
	__LIB_24__::func_916(iParam0, 2, 5, "FMMCCMENU_10", 0, 1);
	__LIB_24__::func_916(iParam0, 3, 10, "FMMCCMENU_1", 0, 1);
	__LIB_24__::func_916(iParam0, 4, 441, "FMMCCMENU_11", 0, 1);
	__LIB_24__::func_916(iParam0, 5, 153, "FMMCCMENU_12", 0, 1);
	__LIB_24__::func_916(iParam0, 6, 692, "FMMC_WRLD_PRP", 0, 1);
	__LIB_24__::func_916(iParam0, 7, 226, "FMMCCMENU_18", 0, 1);
	__LIB_24__::func_916(iParam0, 8, 690, "FMMC_DMY_BLP", 0, 1);
	__LIB_24__::func_916(iParam0, 9, 13, "FMMC_RESET", 0, 1);
	iParam0->f_546 = 10;
}

void func_121(int* iParam0)//Position - 0x18794F
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMCMENU_TTT");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	iParam0->f_546 = 0;
	iParam0->f_270 = 0;
	iParam0->f_546 = 3;
	if (__LIB_22__::func_607(iParam0) == 2)
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	if (__LIB_23__::func_305())
	{
		__LIB_23__::func_494(0, "RMC_ST_PRI", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "RMC_ST_TRK", 0, 1, 0, 0, 0);
	}
	if (BitTest(iParam0->f_743, 8))
	{
		__LIB_23__::func_496(0, 28, 0);
	}
	iParam0->f_142[0] = 0;
	if (__LIB_23__::func_305())
	{
		__LIB_23__::func_494(1, "RMC_ST_SEC", 0, 1, 0, 0, 0);
		if (BitTest(iParam0->f_743, 23))
		{
			__LIB_23__::func_496(1, 28, 0);
		}
		iParam0->f_142[1] = 1;
	}
	__LIB_24__::func_915(2, Global_1659914, "RMC_ST_TYR", "COR_TYRES_", 0, -1, 1, -1);
}

void func_122(int* iParam0)//Position - 0x188197
{
	char* sVar0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_766(1, 4, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	sVar0 = "FMMCC_MTITLE";
	iVar1 = "FMMCC_TOPMM0";
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("CommonMenu", false);
	__LIB_1__::func_767(sVar0);
	__LIB_24__::func_916(iParam0, 0, 3, iVar1, 0, BitTest(iParam0->f_738, 0));
	if (BitTest(iParam0->f_738, 0))
	{
		if (((BitTest(iParam0->f_743, 4) || BitTest(iParam0->f_743, 5)) || BitTest(iParam0->f_743, 7)) || BitTest(iParam0->f_743, 19))
		{
			__LIB_23__::func_496(0, 28, 0);
		}
	}
	__LIB_24__::func_916(iParam0, 1, 2, "FMMCC_TOPM1", 0, BitTest(iParam0->f_738, 1));
	if (BitTest(iParam0->f_738, 1))
	{
		if (__LIB_23__::func_109(iParam0))
		{
			__LIB_23__::func_496(1, 28, 0);
		}
	}
	__LIB_24__::func_916(iParam0, 2, 4, "FMMC_MENU_13", 0, BitTest(iParam0->f_738, 2));
	__LIB_24__::func_916(iParam0, 3, 447, "SC_PRTST", 0, BitTest(iParam0->f_738, 3));
	if (BitTest(iParam0->f_738, 3))
	{
		if (BitTest(iParam0->f_743, 8))
		{
			__LIB_23__::func_496(3, 28, 0);
		}
	}
	if (Global_4718592.f_117079)
	{
		__LIB_23__::func_494(5, "FMMCC_TOPM4B", 0, BitTest(iParam0->f_738, 5), 0, 0, 0);
		iParam0->f_142[5] = 68;
	}
	else
	{
		__LIB_23__::func_494(4, "FMMCC_TOPM2", 0, BitTest(iParam0->f_738, 4), 0, 0, 0);
		iParam0->f_142[4] = 67;
		__LIB_23__::func_494(5, "FMMCC_TOPM4", 0, BitTest(iParam0->f_738, 5), 0, 0, 0);
		iParam0->f_142[5] = 68;
	}
	__LIB_23__::func_494(6, "FMMCC_TOPM5", 0, BitTest(iParam0->f_738, 6), 0, 0, 0);
	iParam0->f_142[6] = 66;
	iParam0->f_546 = 7;
}

void func_123(int* iParam0, var uParam1)//Position - 0x188BDD
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_EMDSPG_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 21;
	Global_23149 = 0.42f;
	if (iParam0->f_550 == 5)
	{
		iParam0->f_270 = 6;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 19)
	{
		__LIB_24__::func_943((0 + iVar0), "FMMC_EMDSPG_O", uParam1[iVar0], 1, 1, 0, 1, iVar0 + 1);
		iVar0++;
	}
}

void func_124(int* iParam0)//Position - 0x188D1B
{
	int iVar0;
	bool bVar1;
	int iVar2;
	iVar2 = iParam0->f_551;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMCCMENU_JTO");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (__LIB_22__::func_607(iParam0) >= Global_4718592.f_593 * 2)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	iVar0 = 0;
	while (iVar0 <= (Global_4718592.f_593 - 1))
	{
		bVar1 = iVar0 < Global_4718592.f_593;
		iVar2 = iParam0->f_551;
		switch (iParam0->f_271)
		{
			case 582:
				if (iVar2 == -1 || iVar2 >= 17)
				{
					iVar2 = Global_4718592.f_95501[iVar0];
				}
				__LIB_23__::func_494(iVar0 * 2, "FMMC_JTO_P_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4718592.f_94922[iVar2 /*34*/].f_15[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4718592.f_94922[iVar2 /*34*/].f_15[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_JTO_F_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4718592.f_94922[iVar2 /*34*/].f_20[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4718592.f_94922[iVar2 /*34*/].f_20[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				break;
			case 583:
				if (iVar2 == -1)
				{
					iVar2 = Global_4980736[iVar0];
					if (iVar2 >= 20)
					{
						iVar2 = (Global_4980736[iVar0] - 1);
					}
				}
				__LIB_23__::func_494(iVar0 * 2, "FMMC_JTO_P_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_5[iVar2 /*273*/].f_122[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_5[iVar2 /*273*/].f_122[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_JTO_F_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_5[iVar2 /*273*/].f_127[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_5[iVar2 /*273*/].f_127[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				break;
			case 584:
				if (iVar2 == -1 || iVar2 >= 80)
				{
					iVar2 = Global_4980736.f_94384;
				}
				__LIB_23__::func_494(iVar0 * 2, "FMMC_JTO_P_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_94390[iVar2 /*1004*/].f_624[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_94390[iVar2 /*1004*/].f_624[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_JTO_F_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_94390[iVar2 /*1004*/].f_629[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_94390[iVar2 /*1004*/].f_629[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				break;
			case 585:
				if (iVar2 == -1 || iVar2 >= 32)
				{
					iVar2 = Global_4980736.f_78574;
				}
				iVar2 = __LIB_22__::func_500(iVar2, 0, 31);
				__LIB_23__::func_494(iVar0 * 2, "FMMC_JTO_P_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_78578[iVar2 /*450*/].f_206[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_78578[iVar2 /*450*/].f_206[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_JTO_F_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_78578[iVar2 /*450*/].f_211[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_78578[iVar2 /*450*/].f_211[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				break;
			case 586:
				if (iVar2 == -1 || iVar2 >= 32)
				{
					iVar2 = Global_4980736.f_5739;
				}
				__LIB_23__::func_494(iVar0 * 2, "FMMC_JTO_P_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_5742[iVar2 /*442*/].f_183[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_5742[iVar2 /*442*/].f_183[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_JTO_F_T", 1, bVar1, 0, 0, 0);
				__LIB_23__::func_517((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0);
				if (Global_4980736.f_5742[iVar2 /*442*/].f_188[iVar0] == 0)
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_OFF", 0, bVar1, 0, 0, 0);
				}
				else
				{
					__LIB_23__::func_494(iVar0 * 2 + 1, "FMMC_SS_JO_ON", 1, bVar1, 0, 0, 0);
					__LIB_23__::func_517(__LIB_22__::func_500((Global_4980736.f_5742[iVar2 /*442*/].f_188[iVar0] + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)), 0, 17), 0);
				}
				break;
		}
		iVar0++;
	}
	iParam0->f_546 = Global_4718592.f_593 * 2;
	iParam0->f_270 = 441;
	switch (iParam0->f_271)
	{
		case 582:
			iParam0->f_270 = 231;
			break;
		case 583:
			iParam0->f_270 = 441;
			break;
		case 584:
			iParam0->f_270 = 134;
			break;
		case 585:
			iParam0->f_270 = 11;
			break;
		case 586:
			iParam0->f_270 = 130;
			break;
	}
}

void func_125(int* iParam0)//Position - 0x189728
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_ASS_AFHD");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_ASS_AFHT", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 6))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_126(int* iParam0)//Position - 0x18984C
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_DSLT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_DSLA", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 19))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_127(int* iParam0)//Position - 0x18996B
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_PTMT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_PT", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 7))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_128(int* iParam0)//Position - 0x189A8F
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_SADD");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_SADT", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 5))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_NSD", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_NSDD", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_129(int* iParam0)//Position - 0x189BB3
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CST_5");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 556;
	iParam0->f_546 = 4;
	iParam0->f_5632 = (iParam0->f_2807[(iParam0->f_2852 - 1)] / 4);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] != 12)
	{
		__LIB_24__::func_915(0, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_5_0", "FMMC_LET_", 0, -1, 1, -1);
	}
	else
	{
		__LIB_24__::func_930(0, "FMMC_CSTO_5_0", "FMMC_CSTO_NP", 1, 0, -1);
	}
	__LIB_23__::func_420(iParam0, 0, "MC_H_CSTO_5_0", 0);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] < 12 && iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] > -1)
	{
		__LIB_24__::func_947(1, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[1], iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_5_1", -1, 1);
		__LIB_23__::func_420(iParam0, 1, "MC_H_CSTO_5_1", 0);
	}
	__LIB_24__::func_946(2, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[2], "FMMC_CSTO_5_2", 1, 0);
	__LIB_23__::func_420(iParam0, 2, "MC_H_CSTO_5_2", 0);
	__LIB_24__::func_915(3, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[3], "FMMC_CSTO_5_3", "FMMC_CSTO_5_3", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 3, "MC_H_CSTO_5_3", 0);
}

void func_130(int* iParam0)//Position - 0x189D39
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CST_4");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 556;
	iParam0->f_546 = 2;
	iParam0->f_5632 = (iParam0->f_2807[(iParam0->f_2852 - 1)] / 4);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] != 12)
	{
		__LIB_24__::func_915(0, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_4_0", "FMMC_LET_", 0, -1, 1, -1);
	}
	else
	{
		__LIB_24__::func_930(0, "FMMC_CSTO_4_0", "FMMC_CSTO_NP", 1, 0, -1);
	}
	__LIB_23__::func_420(iParam0, 0, "MC_H_CSTO_4_0", 0);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] < 12 && iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] > -1)
	{
		__LIB_24__::func_947(1, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[1], iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_4_1", -1, 1);
		__LIB_23__::func_420(iParam0, 1, "MC_H_CSTO_4_1", 0);
	}
}

void func_131(int* iParam0)//Position - 0x189E60
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CST_3");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 556;
	iParam0->f_546 = 4;
	iParam0->f_5632 = (iParam0->f_2807[(iParam0->f_2852 - 1)] / 4);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] != 12)
	{
		__LIB_24__::func_915(0, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_3_0", "FMMC_LET_", 0, -1, 1, -1);
	}
	else
	{
		__LIB_24__::func_930(0, "FMMC_CSTO_3_0", "FMMC_CSTO_NP", 1, 0, -1);
	}
	__LIB_23__::func_420(iParam0, 0, "MC_H_CSTO_3_0", 0);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] < 12 && iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] > -1)
	{
		__LIB_24__::func_947(1, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[1], iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_3_1", -1, 1);
		__LIB_23__::func_420(iParam0, 1, "MC_H_CSTO_3_1", 0);
	}
	__LIB_24__::func_946(2, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[2], "FMMC_CSTO_3_2", 1, 0);
	__LIB_23__::func_420(iParam0, 2, "MC_H_CSTO_3_2", 0);
	__LIB_24__::func_946(3, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[3], "FMMC_CSTO_3_3", 1, 0);
	__LIB_23__::func_420(iParam0, 3, "MC_H_CSTO_3_3", 0);
}

void func_132(int* iParam0)//Position - 0x189FDF
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_CST_1");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 556;
	iParam0->f_546 = 2;
	iParam0->f_5632 = (iParam0->f_2807[(iParam0->f_2852 - 1)] / 4);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] != 12)
	{
		__LIB_24__::func_915(0, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_1_0", "FMMC_LET_", 0, -1, 1, -1);
	}
	else
	{
		__LIB_24__::func_930(0, "FMMC_CSTO_1_0", "FMMC_CSTO_NP", 1, 0, -1);
	}
	__LIB_23__::func_420(iParam0, 0, "MC_H_CSTO_1_0", 0);
	if (iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] < 12 && iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0] > -1)
	{
		__LIB_24__::func_947(1, iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[1], iParam0->f_1395.f_7[iParam0->f_5632 /*27*/].f_20[0], "FMMC_CSTO_1_1", -1, 1);
		__LIB_23__::func_420(iParam0, 1, "MC_H_CSTO_1_1", 0);
	}
}

void func_133(int* iParam0)//Position - 0x18A106
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_CSST");
	Global_23149 = 0.33f;
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546 = 1;
		return;
	}
	iParam0->f_546 = __LIB_24__::func_778(-1, &(iParam0->f_1395), 1) * 4;
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_24__::func_915((0 + iVar0 * 4), iParam0->f_1395.f_7[iVar0 /*27*/].f_19, "FMMC_AOGT_CST", "FMMC_CST_", 0, -1, 1, iVar0);
		__LIB_23__::func_420(iParam0, (0 + iVar0 * 4), __LIB_23__::func_113(iParam0->f_1395.f_7[iVar0 /*27*/].f_19), 0);
		iParam0->f_142[(0 + iVar0 * 4)] = 62;
		if (__LIB_23__::func_112(iParam0->f_1395.f_7[iVar0 /*27*/].f_19) != 902)
		{
			__LIB_24__::func_916(iParam0, (1 + iVar0 * 4), __LIB_23__::func_112(iParam0->f_1395.f_7[iVar0 /*27*/].f_19), "FMMC_AOGT_CSO", 0, iParam0->f_1395.f_7[iVar0 /*27*/].f_19 != 0);
			__LIB_23__::func_420(iParam0, (1 + iVar0 * 4), "MC_H_AOGT_CSO", 0);
		}
		else
		{
			__LIB_23__::func_494((1 + iVar0 * 4), "FMMC_CSTO_I", 0, 0, 0, 0, 0);
		}
		__LIB_24__::func_915((2 + iVar0 * 4), iParam0->f_1395.f_7[iVar0 /*27*/].f_25, "FMMC_AOGT_CSC", "FMMC_AOGT_CSC", 0, -1, iParam0->f_1395.f_7[iVar0 /*27*/].f_19 != 0, iVar0);
		__LIB_23__::func_420(iParam0, 2, "MC_H_AOGT_CSC", 0);
		__LIB_24__::func_961((3 + iVar0 * 4), iParam0->f_1395.f_7[iVar0 /*27*/].f_26, "FMMC_AOGT_CSD", iVar0, iParam0->f_1395.f_7[iVar0 /*27*/].f_19 != 0, 0);
		__LIB_23__::func_420(iParam0, 3, "MC_H_AOGT_CSD", 0);
		iVar0++;
	}
}

void func_134(int* iParam0)//Position - 0x18A3AE
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_RAPP");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_RAPA", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 11))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_135(int* iParam0)//Position - 0x18A4CD
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_HOVV");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_HOVA", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 10))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_136(int* iParam0)//Position - 0x18A5EC
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_CLNB");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_CLNC", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 13))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_137(int* iParam0)//Position - 0x18A950
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_GOINV_CLNT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_GOINV_IENA", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 20))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_GOINV_IDIS", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 21))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_138(int* iParam0)//Position - 0x18AAF7
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_LNT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_LNO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 18))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_139(int* iParam0)//Position - 0x18AC16
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_SNT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_SNO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 9))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_140(int* iParam0)//Position - 0x18AD35
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_ACMT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iParam0->f_546 = 1;
	if (iParam0->f_1395.f_4 <= 0f)
	{
		__LIB_23__::func_494(0, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_AOGT_ACM", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(0, "FMMC_SEL_MPSS", 1, 1, 0, 0, 0);
		__LIB_23__::func_497(iParam0->f_1395.f_4, 1, 0);
		iVar0 = 0;
		while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_AC", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iVar0, 0);
			if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 8))
			{
				__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
			}
			else
			{
				__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
			}
			iParam0->f_142[iVar0] = 62;
			iParam0->f_546++;
			iVar0++;
		}
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_141(int* iParam0)//Position - 0x18AEA3
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AS_CRASH");
	__LIB_22__::func_902(__LIB_22__::func_903(iParam0->f_550));
	__LIB_19__::func_185(iParam0->f_551);
	__LIB_19__::func_185(iParam0->f_4809);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.32f;
	iParam0->f_546 = 3;
	iParam0->f_270 = 173;
	__LIB_24__::func_930(0, "FMMC_CRO_CROPT", __LIB_23__::func_114(iParam0), 1, 0, -1);
	if (iParam0->f_2779 != -1)
	{
		if (iParam0->f_2779 == 0)
		{
			__LIB_24__::func_946(1, iParam0->f_2779.f_1, "FMMC_CRO_VD_V", 1, 1);
		}
		else if (iParam0->f_2779 == 1)
		{
			__LIB_24__::func_946(1, iParam0->f_2779.f_1, "FMMC_CRO_RULE", 1, 0);
			__LIB_24__::func_913(2, iParam0->f_2779.f_2, "BET_ITEAM", "FMMC_RL_SHWA", "", -1, 0, 1, 0, -1);
		}
	}
}

void func_142(int* iParam0)//Position - 0x18C263
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_ROT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_ROO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_13 != 0f)
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1395.f_7[iVar0 /*27*/].f_13, 1, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_DEF", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_143(int* iParam0)//Position - 0x18C39C
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_SOT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	__LIB_23__::func_494(0, "FMMC_PED_SPSP", 0, 1, 0, 0, 0);
	if (BitTest(iParam0->f_1395[0], 5))
	{
		__LIB_23__::func_494(0, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_SOO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_14 != -1)
		{
			__LIB_23__::func_494(iParam0->f_546, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_1395.f_7[iVar0 /*27*/].f_14, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_DEF", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_144(int* iParam0)//Position - 0x18C51B
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_WTT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_W", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_6 != 0)
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_SEC", 1, 1, 0, 0, 0);
			__LIB_23__::func_517((iParam0->f_1395.f_7[iVar0 /*27*/].f_6 / 1000), 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_WAN", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 14))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_WAP", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 15))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_RAP", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 16))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_FRAP", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 17))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_ACWW", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 12))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_145(int* iParam0)//Position - 0x18C8CC
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_TAT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_TAP", 1, 1, 0, 0, 0);
		__LIB_23__::func_517((iParam0->f_546 / 2), 0);
		if (!__LIB_0__::func_86(iParam0->f_1395.f_7[(iParam0->f_546 / 2) /*27*/].f_8))
		{
			__LIB_23__::func_494(iParam0->f_546, "SPN_V", 3, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1395.f_7[(iParam0->f_546 / 2) /*27*/].f_8, 0, 0);
			__LIB_23__::func_497(iParam0->f_1395.f_7[(iParam0->f_546 / 2) /*27*/].f_8.f_1, 0, 0);
			__LIB_23__::func_497(iParam0->f_1395.f_7[(iParam0->f_546 / 2) /*27*/].f_8.f_2, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iParam0->f_546] = 62;
		iParam0->f_546++;
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_TAR", 1, 1, 0, 0, 0);
		__LIB_23__::func_517((iParam0->f_546 / 2), 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1395.f_7[(iParam0->f_546 / 2) /*27*/].f_11, 0);
		iParam0->f_142[iParam0->f_546] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_146(int* iParam0)//Position - 0x18CAB2
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_WRT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_WRO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_7 != -1)
		{
			__LIB_23__::func_494(iParam0->f_546, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_1395.f_7[iVar0 /*27*/].f_7, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_147(int* iParam0)//Position - 0x18CBE8
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_CGTT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_CG", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 2))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_148(int* iParam0)//Position - 0x18CD0C
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_VSDT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_VS", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_15 == 0f)
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
			__LIB_23__::func_497(iParam0->f_1395.f_7[iVar0 /*27*/].f_15, 1, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_149(int* iParam0)//Position - 0x18CE45
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_FNMT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_FN", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 3))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_150(int* iParam0)//Position - 0x18CF69
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_INMT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_IN", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 4))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_151(int* iParam0)//Position - 0x18D083
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_CVRT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_CR", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar0, 0);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar0, 1))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_152(int* iParam0)//Position - 0x18D1A7
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_ENT_VH_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar0 = 0;
	while (iVar0 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_ENT_VH_0", 0, 1, 0, 0, 0);
		if (iParam0->f_1395.f_7[iVar0 /*27*/].f_16 > -1)
		{
			__LIB_23__::func_494(iParam0->f_546, "NUMBER", 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_1395.f_7[iVar0 /*27*/].f_16, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_142[iVar0] = 62;
		iParam0->f_546++;
		iVar0++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_153(int* iParam0)//Position - 0x18D2D6
{
	struct<2> Var0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_AOGT_EVT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_546 = 0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 529;
	}
	else
	{
		iParam0->f_270 = 531;
	}
	iVar1 = 0;
	while (iVar1 <= (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) - 1))
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_AOGT_E", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iVar1, 0);
		StringCopy(&Var0, "FMMC_SS_TT_0", 16);
		if (__LIB_24__::func_593(-1, &(iParam0->f_1395), iVar1, 0))
		{
			StringCopy(&Var0, "FMMC_SS_TT_1", 16);
		}
		__LIB_23__::func_494(iParam0->f_546, &Var0, 0, 1, 0, 0, 0);
		iParam0->f_142[iVar1] = 62;
		iParam0->f_546++;
		iVar1++;
	}
	if (__LIB_24__::func_778(-1, &(iParam0->f_1395), 1) <= 0)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_NDTA", 0, 1, 0, 0, 0);
		__LIB_23__::func_494(iParam0->f_546, "", 0, 1, 0, 0, 0);
		iParam0->f_546++;
	}
}

void func_154(int* iParam0)//Position - 0x18D3F3
{
	struct<2> Var0;
	int iVar1;
	__LIB_23__::func_384(iParam0);
	iParam0->f_270 = 173;
	iParam0->f_546 = 16;
	__LIB_1__::func_767("FMMC_PED_GTIT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_1949 < 0 && (((((((__LIB_22__::func_607(iParam0) == 1 || __LIB_22__::func_607(iParam0) == 2) || __LIB_22__::func_607(iParam0) == 3) || __LIB_22__::func_607(iParam0) == 4) || __LIB_22__::func_607(iParam0) == 5) || __LIB_22__::func_607(iParam0) == 6) || __LIB_22__::func_607(iParam0) == 8) || __LIB_22__::func_607(iParam0) == 7))
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "FMMC_GTI_TRT", 0, 1, 0, 0, 0);
	if (iParam0->f_1949 == -1)
	{
		__LIB_23__::func_494(0, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_TEAM_NO", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1949, 0);
	}
	__LIB_23__::func_494(1, "FMMC_GTI_TRR", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (iParam0->f_1950 == -1)
	{
		__LIB_23__::func_494(1, "FMMC_SEL_OFF", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(1, "FMMC_RULEVAR", 1, iParam0->f_1949 > -1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1950, 0);
	}
	__LIB_23__::func_494(2, "FMMC_GTI_ASO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (iParam0->f_1951 == 0)
	{
		StringCopy(&Var0, "FMMC_ASSRL3_0", 16);
	}
	else if (iParam0->f_1951 == 1)
	{
		StringCopy(&Var0, "FMMC_ASSRL3_1", 16);
	}
	else if (iParam0->f_1951 == 2)
	{
		StringCopy(&Var0, "FMMC_ASSRL3_2", 16);
	}
	else if (iParam0->f_1951 == 3)
	{
		StringCopy(&Var0, "FMMC_ASSRL3_3", 16);
	}
	else if (iParam0->f_1951 == 4)
	{
		StringCopy(&Var0, "FMMC_ASSRL3_4", 16);
	}
	__LIB_23__::func_494(2, &Var0, 0, iParam0->f_1949 > -1, 0, 0, 0);
	__LIB_23__::func_494(3, "FMMC_ASSRL2S", 0, iParam0->f_1949 > -1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_ASSRL2_", 16);
	StringIntConCat(&Var0, iParam0->f_2756, 16);
	__LIB_23__::func_494(3, &Var0, 0, iParam0->f_1949 > -1, 0, 0, 0);
	__LIB_23__::func_494(4, "FMMC_GTI_TOT", 0, iParam0->f_1949 > -1, 0, 0, 0);
	StringCopy(&Var0, "FMMC_GTI_TOT_", 16);
	StringIntConCat(&Var0, iParam0->f_1955, 16);
	__LIB_23__::func_494(4, &Var0, 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (__LIB_22__::func_556(iParam0->f_1955) != -1)
	{
		__LIB_24__::func_947(5, iParam0->f_1956, __LIB_22__::func_556(iParam0->f_1955), "FMMC_GTI_TOID", -1, 1);
	}
	else
	{
		__LIB_23__::func_494(5, "FMMC_GTI_TOID", 0, iParam0->f_1949 > -1, 0, 0, 0);
		if (iParam0->f_1955 == 0)
		{
			__LIB_23__::func_494(5, "FMMC_SEL_NA", 0, iParam0->f_1949 > -1, 0, 0, 0);
		}
		else if (iParam0->f_1956 == -1)
		{
			__LIB_23__::func_494(5, "FMMC_SEL_OFF", 0, iParam0->f_1949 > -1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(5, "NUMBER", 1, iParam0->f_1949 > -1, 0, 0, 0);
			__LIB_23__::func_517(iParam0->f_1956, 0);
		}
	}
	__LIB_23__::func_494(6, "FMMC_GTI_TDFT", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (iParam0->f_1957 == -1)
	{
		__LIB_23__::func_494(6, "FMMC_SEL_OFF", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(6, "FMMC_SEL_MET", 1, iParam0->f_1949 > -1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_1957, 0);
	}
	__LIB_23__::func_494(7, "FMMC_GTI_DTTD", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_978, 21))
	{
		__LIB_23__::func_494(7, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(7, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(8, "FMMC_GTI_STPC", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_979, 15))
	{
		__LIB_23__::func_494(8, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(8, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(9, "FMMC_GTI_DTOC", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_980, 25))
	{
		__LIB_23__::func_494(9, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(9, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(10, "FMMC_GTI_DEV", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_981, 5))
	{
		__LIB_23__::func_494(10, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(10, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(11, "FMMC_GTI_COTC", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_981, 16))
	{
		__LIB_23__::func_494(11, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(11, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(12, "FMMC_GTI_PROTC", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_984, 22))
	{
		__LIB_23__::func_494(12, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(12, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(13, "FMMC_GTI_FOTC", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_984, 23))
	{
		__LIB_23__::func_494(13, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(13, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	__LIB_23__::func_494(14, "FMMC_GTI_SDS", 0, 1, 0, 0, 0);
	if (iParam0->f_3206 == 0)
	{
		__LIB_23__::func_494(14, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(14, "NUMBER", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(iParam0->f_3206, 0);
	}
	__LIB_23__::func_494(15, "FMMC_GTI_WEMP", 0, iParam0->f_1949 > -1, 0, 0, 0);
	if (BitTest(iParam0->f_986, 28))
	{
		__LIB_23__::func_494(15, "FMMC_SEL_YES", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(15, "FMMC_SEL_NO", 0, iParam0->f_1949 > -1, 0, 0, 0);
	}
	iVar1 = 0;
	while (iVar1 <= 15)
	{
		iParam0->f_142[iVar1] = 63;
		iVar1++;
	}
}

void func_155(int* iParam0)//Position - 0x18DCC4
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_POGT_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 2;
	iParam0->f_546 = 10;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		__LIB_24__::func_923(iParam0, (0 + iVar0), 531, "FMMC_POGT_A", iVar0, 1);
		__LIB_23__::func_420(iParam0, (0 + iVar0), "MCH_POGT_A", 0);
		iVar0++;
	}
}

void func_156(int* iParam0)//Position - 0x1900EC
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_MICO_SGT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 385;
	iParam0->f_546 = 0;
	bVar0 = false;
	while (bVar0 <= 19)
	{
		__LIB_24__::func_923(iParam0, iParam0->f_546, 387, "FMMC_MICO_SGG", bVar0, 1);
		if (BitTest(Global_4718592.f_116888, bVar0))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_MICO_SGO", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		bVar0++;
	}
}

void func_157(int* iParam0)//Position - 0x190B78
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PSO_MT");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 135;
	}
	else if (iParam0->f_550 == 5)
	{
		iParam0->f_270 = 6;
	}
	else if (iParam0->f_550 == 1)
	{
		iParam0->f_270 = 11;
	}
	iParam0->f_546 = 3;
	__LIB_24__::func_913(0, iParam0->f_1111, "FMMC_PSO_SR", "", "", 0, 0, 1, 0, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_PSO_SR", 0);
	bVar0 = iParam0->f_1111 != false;
	__LIB_24__::func_913(1, iParam0->f_1112, "FMMC_PSO_CR", "", "", 0, 0, bVar0, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_PSO_CR", 0);
	__LIB_24__::func_915(2, iParam0->f_1113, "FMMC_PSO_RP", "FMMC_PSO_RP", 0, -1, bVar0, -1);
	__LIB_23__::func_420(iParam0, 2, __LIB_23__::func_122(iParam0->f_1113), 0);
}

void func_158(int* iParam0)//Position - 0x190CA8
{
	var uVar0;
	bool bVar1;
	bool bVar2;
	struct<2> Var3;
	__LIB_23__::func_384(iParam0);
	iParam0->f_546 = 4;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 135;
		uVar0 = iParam0->f_977;
		bVar1 = 26;
	}
	else if (iParam0->f_550 == 1)
	{
		iParam0->f_270 = 198;
		uVar0 = iParam0->f_1014;
		bVar1 = 30;
	}
	else if (iParam0->f_550 == 3)
	{
		iParam0->f_270 = 130;
		uVar0 = iParam0->f_1005;
		bVar1 = 19;
	}
	__LIB_1__::func_767("FMMC_SNE_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar2 = iParam0->f_2594 > 0;
	if ((__LIB_22__::func_607(iParam0) == 1 || __LIB_22__::func_607(iParam0) == 2) && !bVar2)
	{
		__LIB_12__::func_593(0, 0, 0, 0, 0);
	}
	__LIB_23__::func_494(0, "FMMC_SNE_ETP", 0, 1, 0, 0, 0);
	StringCopy(&Var3, "FMMC_SNE_TP_", 16);
	StringIntConCat(&Var3, iParam0->f_2594, 16);
	__LIB_23__::func_494(0, &Var3, 0, 1, 0, 0, 0);
	if (iParam0->f_2594 != 6 && iParam0->f_2594 != 8)
	{
		if (iParam0->f_2594 == 5)
		{
			__LIB_23__::func_494(1, "FMMC_SNE_EID", 0, (bVar2 && iParam0->f_2594 != 10), 0, 0, 0);
			if (!(bVar2 && iParam0->f_2594 != 10))
			{
				__LIB_23__::func_494(1, "FMMC_SEL_NA", 0, 0, 0, 0, 0);
			}
			else if (iParam0->f_2595 < 0)
			{
				__LIB_23__::func_494(1, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
			}
			else
			{
				__LIB_23__::func_494(1, "NUMBER", 1, 1, 0, 0, 0);
				if (iParam0->f_2594 == 5)
				{
					__LIB_23__::func_517(iParam0->f_2595, 0);
				}
				else
				{
					__LIB_23__::func_517(iParam0->f_2595, 0);
				}
			}
		}
		else if (__LIB_22__::func_556(iParam0->f_2594) != -1)
		{
			__LIB_24__::func_947(1, iParam0->f_2595, __LIB_22__::func_556(iParam0->f_2594), "FMMC_SNE_EID", -1, bVar2);
		}
	}
	__LIB_23__::func_494(2, "FMMC_SNE_MNR", 0, bVar2, 0, 0, 0);
	if (!bVar2)
	{
		__LIB_23__::func_494(2, "FMMC_SEL_NA", 0, 0, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(2, "FMMC_SEL_MET", 1, 1, 0, 0, 0);
		__LIB_23__::func_497(iParam0->f_2596, 1, 0);
	}
	__LIB_23__::func_494(3, "FMMC_SNE_IOI", 0, bVar2, 0, 0, 0);
	if (!bVar2)
	{
		__LIB_23__::func_494(3, "FMMC_SEL_NA", 0, 0, 0, 0, 0);
	}
	else if (BitTest(uVar0, bVar1))
	{
		__LIB_23__::func_494(3, "FMMC_SEL_YES", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(3, "FMMC_SEL_NO", 0, 1, 0, 0, 0);
	}
}

void func_159(int* iParam0)//Position - 0x190F00
{
	struct<2> Var0;
	if (iParam0->f_550 == 0)
	{
		iParam0->f_270 = 134;
	}
	else if (iParam0->f_550 == 16)
	{
		iParam0->f_270 = 441;
	}
	else if (iParam0->f_550 == 1)
	{
		iParam0->f_270 = 11;
	}
	else if (iParam0->f_550 == 3)
	{
		iParam0->f_270 = 130;
	}
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_NXT_MIST");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_23__::func_494(0, "FMMC_NXT_PAS", 0, 1, 0, 0, 0);
	if (iParam0->f_2586 != -1)
	{
		__LIB_25__::func_106(0, iParam0->f_2586, 1);
	}
	else
	{
		__LIB_23__::func_494(0, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(1, "FMMC_PAS_MCP", 0, 1, 0, 0, 0);
	if (iParam0->f_2588 == -1)
	{
		StringCopy(&Var0, "FMMC_SECANM0", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_CUT", 16);
		StringIntConCat(&Var0, iParam0->f_2588, 16);
	}
	__LIB_23__::func_494(1, &Var0, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(2, "FMMC_NXT_FAL", 0, 1, 0, 0, 0);
	if (iParam0->f_2587 != -1)
	{
		__LIB_25__::func_106(2, iParam0->f_2587, 1);
	}
	else
	{
		__LIB_23__::func_494(2, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(3, "FMMC_FAI_MCP", 0, 1, 0, 0, 0);
	if (iParam0->f_2589 == -1)
	{
		StringCopy(&Var0, "FMMC_SECANM0", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_CUT", 16);
		StringIntConCat(&Var0, iParam0->f_2589, 16);
	}
	__LIB_23__::func_494(3, &Var0, 0, 1, 0, 0, 0);
	__LIB_23__::func_494(4, "FMMC_NXT_AGG", 0, 1, 0, 0, 0);
	if (iParam0->f_2585 != -1)
	{
		__LIB_25__::func_106(4, iParam0->f_2585, 1);
	}
	else
	{
		__LIB_23__::func_494(4, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(5, "FMMC_AGG_MCP", 0, 1, 0, 0, 0);
	if (iParam0->f_2590 == -1)
	{
		StringCopy(&Var0, "FMMC_SECANM0", 16);
	}
	else
	{
		StringCopy(&Var0, "FMMC_CUT", 16);
		StringIntConCat(&Var0, iParam0->f_2590, 16);
	}
	__LIB_23__::func_494(5, &Var0, 0, 1, 0, 0, 0);
	__LIB_24__::func_913(6, iParam0->f_2591, "FMMC_NXT_SCPR", "FMMC_SEL_OFF", "", -1, 0, 1, 1, -1);
	__LIB_23__::func_494(7, "FMMC_NXT_SCPS", 0, 1, 0, 0, 0);
	if (iParam0->f_2592 > -1)
	{
		__LIB_23__::func_494(7, "STRING", 1, 1, 0, 0, 0);
		__LIB_23__::func_495(&(Global_4718592.f_142828[iParam0->f_2592 /*1626*/]), 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(7, "FMMC_SEL_DEF", 0, 1, 0, 0, 0);
	}
	iParam0->f_546 = 8;
}

int func_160(int iParam0)//Position - 0x2153DF
{
	if (((!__LIB_0__::func_274() && (!__LIB_24__::func_861(iParam0) || __LIB_17__::func_996(iParam0))) && !__LIB_0__::func_261()) && !Global_262145.f_19319 /* Tunable: 1208494720 */)
	{
		return 1;
	}
	return 0;
}

void func_161(var uParam0, bool bParam1, bool bParam2)//Position - 0x23E5B5
{
	int iVar0;
	var uVar1;
	int iVar2;
	struct<3> Var3;
	var uVar4;
	int iVar5;
	if (!MISC::IS_PC_VERSION())
	{
		return;
	}
	iVar5 = 0;
	uParam0->f_2739 = 0;
	uParam0->f_2740 = 0;
	uParam0->f_733 = 0;
	Global_4539961 = -1;
	if (!PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		uParam0->f_2741 = 0;
		return;
	}
	PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 288 /*INPUT_REPLAY_START_STOP_RECORDING*/, true);
	PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 289 /*INPUT_REPLAY_START_STOP_RECORDING_SECONDARY*/, true);
	PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
	if (!uParam0->f_2742)
	{
		return;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADING_IN())
	{
		return;
	}
	__LIB_0__::func_121(PLAYER::PLAYER_PED_ID());
	if (uParam0->f_2748 == 0 || uParam0->f_2748 == 0)
	{
		uParam0->f_2748 = SHAPETEST::START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(&(uParam0->f_2750), &(uParam0->f_2753), 511, PLAYER::PLAYER_PED_ID(), 7);
	}
	else
	{
		iVar2 = SHAPETEST::GET_SHAPE_TEST_RESULT(uParam0->f_2748, &iVar0, &Var3, &uVar4, &iVar5);
		if (iVar2 == 2)
		{
			if (iVar0 > 0)
			{
				uParam0->f_2744 = { Var3 };
				if (WATER::TEST_PROBE_AGAINST_WATER(uParam0->f_2750, uParam0->f_2753, &Var3))
				{
					uParam0->f_2744 = { Var3 };
				}
				if ((ENTITY::DOES_ENTITY_EXIST(iVar5) && ((ENTITY::IS_ENTITY_A_PED(iVar5) || ENTITY::IS_ENTITY_AN_OBJECT(iVar5)) || ENTITY::IS_ENTITY_A_VEHICLE(iVar5))) && __LIB_0__::func_121(iVar5))
				{
					if (iVar5 != uParam0->f_2747)
					{
						SHAPETEST::RELEASE_SCRIPT_GUID_FROM_ENTITY(uParam0->f_2747);
						uParam0->f_2747 = iVar5;
						iVar5 = 0;
					}
				}
				else
				{
					SHAPETEST::RELEASE_SCRIPT_GUID_FROM_ENTITY(uParam0->f_2747);
					uParam0->f_2747 = 0;
				}
			}
			uParam0->f_2748 = SHAPETEST::START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(&(uParam0->f_2750), &(uParam0->f_2753), 511, PLAYER::PLAYER_PED_ID(), 7);
		}
		else if (iVar2 == 0)
		{
			uParam0->f_2748 = 0;
		}
		if (iVar5 != 0)
		{
			SHAPETEST::RELEASE_SCRIPT_GUID_FROM_ENTITY(iVar5);
			iVar5 = 0;
		}
	}
	if (__LIB_0__::func_121(uParam0->f_2747))
	{
		if (__LIB_23__::func_282(uParam0->f_2747))
		{
			if (MISC::GET_GROUND_Z_FOR_3D_COORD(uParam0->f_2744, &uVar1, false, false))
			{
				uParam0->f_2744.f_2 = uVar1;
			}
		}
	}
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 239 /*INPUT_CURSOR_X*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 240 /*INPUT_CURSOR_Y*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/, true);
	PAD::ENABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 238 /*INPUT_CURSOR_CANCEL*/, true);
	__LIB_3__::func_567(0, 0, 0, bParam2);
	HUD::SET_MOUSE_CURSOR_STYLE(1);
	if (CAM::IS_GAMEPLAY_CAM_RENDERING())
	{
		if (__LIB_23__::func_281() || bParam2 == 0)
		{
			HUD::SET_MOUSE_CURSOR_STYLE(2);
		}
	}
	if (__LIB_3__::func_528())
	{
		MISC::SET_BIT(&(uParam0->f_2739), 2);
	}
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
	{
		if (Global_4539961 > -1)
		{
			if (Global_4539961 == uParam0->f_547)
			{
				MISC::SET_BIT(&(uParam0->f_2739), 0);
				uParam0->f_2740 = __LIB_4__::func_848(0);
			}
			else
			{
				uParam0->f_547 = Global_4539961;
				MISC::SET_BIT(&(uParam0->f_2739), 7);
				__LIB_23__::func_171(uParam0->f_547, 1, 1);
			}
		}
		else if (Global_4539961 == -1 || Global_4539961 == -4)
		{
			MISC::SET_BIT(&(uParam0->f_2739), 1);
			uParam0->f_2741 = MISC::GET_GAME_TIMER();
		}
	}
	if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
	{
		uParam0->f_2741 = 0;
	}
	HUD::SET_MOUSE_CURSOR_THIS_FRAME();
	if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, __LIB_23__::func_172()))
	{
		if (bParam1)
		{
			HUD::SET_MOUSE_CURSOR_THIS_FRAME();
		}
	}
	else if (!CAM::IS_GAMEPLAY_CAM_RENDERING() && __LIB_23__::func_281())
	{
		if (Global_4539955 < 0.1f)
		{
			HUD::SET_MOUSE_CURSOR_STYLE(6);
		}
		else if (Global_4539955 > 0.9f)
		{
			HUD::SET_MOUSE_CURSOR_STYLE(7);
		}
		else if (Global_4539956 < 0.2f)
		{
			HUD::SET_MOUSE_CURSOR_STYLE(8);
		}
		else if (Global_4539956 > 0.8f)
		{
			HUD::SET_MOUSE_CURSOR_STYLE(9);
		}
	}
	if (!CAM::IS_GAMEPLAY_CAM_RENDERING() && !__LIB_23__::func_167(uParam0->f_271))
	{
		if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, __LIB_23__::func_172()))
		{
			PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 1 /*INPUT_LOOK_LR*/, true);
			PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 2 /*INPUT_LOOK_UD*/, true);
		}
	}
}

void func_162(var uParam0, var uParam1)//Position - 0x24C8EE
{
	int iVar0;
	int iVar1;
	if (__LIB_19__::func_214())
	{
		if (!*uParam0)
		{
			if (MISC::GET_RANDOM_INT_IN_RANGE(0, 2) == 0)
			{
				*uParam1 = 1;
			}
			else
			{
				*uParam1 = 0;
			}
			*uParam0 = 1;
		}
		iVar0 = joaat("MP_F_Freemode_01");
		if (*uParam1)
		{
			iVar0 = joaat("MP_M_Freemode_01");
		}
		if (__LIB_24__::func_876(iVar0))
		{
			iVar1 = PLAYER::GET_PLAYER_PED(PLAYER::PLAYER_ID());
			__LIB_23__::func_290(&iVar1, *uParam1);
		}
	}
}

void func_163(var uParam0, var uParam1, var uParam2, var uParam3, bool bParam4)//Position - 0x24D1BC
{
	int iVar0;
	if (bParam4)
	{
		__LIB_23__::func_295(uParam1);
	}
	else
	{
		__LIB_23__::func_294(uParam1);
	}
	__LIB_27__::func_728(&(uParam2->f_73), &(uParam2->f_88));
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 81)
	{
		uParam0->f_333[iVar0] = __LIB_22__::func_751(iVar0);
		iVar0++;
	}
	if (__LIB_1__::func_308() && !__LIB_0__::func_261())
	{
		__LIB_24__::func_664(uParam3);
	}
	else
	{
		__LIB_24__::func_877(uParam3);
	}
}

void func_164(int* iParam0, var uParam1, var uParam2, bool bParam3, int iParam4)//Position - 0xEDB
{
	int iVar0;
	PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
	if (iParam4 == 0)
	{
		HUD::REQUEST_ADDITIONAL_TEXT("FMMC", 2);
	}
	else
	{
		HUD::REQUEST_ADDITIONAL_TEXT("FMMC", 9);
	}
	STREAMING::REQUEST_MODEL(joaat("ninef2"));
	while (!__LIB_16__::func_728())
	{
		if (__LIB_19__::func_98())
		{
			__LIB_19__::func_97();
		}
		SYSTEM::WAIT(0);
	}
	if (!__LIB_19__::func_96())
	{
		__LIB_0__::func_130();
	}
	if (Global_20266.f_1 != 1)
	{
		__LIB_0__::func_671(1);
	}
	if ((!__LIB_1__::func_308() && !__LIB_22__::func_808()) && !__LIB_22__::func_971())
	{
		STREAMING::REQUEST_PTFX_ASSET();
	}
	else
	{
		STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
	}
	__LIB_23__::func_307();
	iVar0 = 0;
	while (iVar0 <= 7)
	{
		MISC::SET_BIT(&(iParam0->f_732), iVar0);
		iVar0++;
	}
	HUD::CLEAR_HELP(true);
	uParam1->f_5[2] = 18;
	uParam1->f_5[1] = 11;
	uParam1->f_5[74] = 23;
	uParam1->f_5[0] = 6;
	uParam1->f_5[4] = 21;
	uParam1->f_5[93] = 21;
	if (!bParam3)
	{
		__LIB_1__::func_895(1, -1);
		__LIB_27__::func_748();
	}
	MISC::SET_INSTANCE_PRIORITY_MODE(1);
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		PED::CLEAR_PED_WETNESS(PLAYER::PLAYER_PED_ID());
	}
	if (!ENTITY::DOES_ENTITY_EXIST(uParam2->f_797))
	{
		STREAMING::REQUEST_MODEL(joaat("stromberg"));
		if (STREAMING::HAS_MODEL_LOADED(joaat("stromberg")))
		{
			uParam2->f_797 = VEHICLE::CREATE_VEHICLE(joaat("stromberg"), 10f, 10f, 10f, 0f, false, false, false);
			ENTITY::SET_ENTITY_COLLISION(uParam2->f_797, false, false);
			ENTITY::SET_ENTITY_VISIBLE(uParam2->f_797, false, false);
			ENTITY::FREEZE_ENTITY_POSITION(uParam2->f_797, true);
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("stromberg"));
		}
	}
	STREAMING::REQUEST_IPL("hei_dlc_casino_door");
	STREAMING::REQUEST_IPL("hei_dlc_windows_casino");
	STREAMING::REQUEST_IPL("vw_dlc_casino_door");
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		iParam0->f_2533[iVar0] = -1;
		iParam0->f_2538[iVar0] = -1;
		iParam0->f_5420.f_13[iVar0 /*4*/].f_1 = -1;
		iParam0->f_5420.f_13[iVar0 /*4*/].f_2 = -1;
		iParam0->f_5420.f_13[iVar0 /*4*/].f_3 = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 16)
	{
		iParam0->f_3135[iVar0] = -2;
		iVar0++;
	}
	if (__LIB_0__::func_261())
	{
		MISC::SET_BIT(&(iParam0->f_2642), 5);
	}
	MISC::USING_MISSION_CREATOR(true);
	Global_1922025 = 1;
}

void func_165(var* uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10)//Position - 0x4DD87
{
	struct<6> Var0[30];
	int iVar1;
	int iVar2;
	struct<3> Var3;
	*uParam1 = DATAFILE::DATADICT_CREATE_DICT(*uParam0, "meta");
	*uParam2 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "loc");
	*uParam3 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "veh");
	*uParam4 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "vehcl");
	*uParam5 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "wp");
	*uParam6 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "wpcl");
	*uParam7 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "stinv");
	*uParam8 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "stia");
	*uParam9 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "mrule");
	*uParam10 = DATAFILE::DATADICT_CREATE_ARRAY(*uParam1, "stia2");
	StringCopy(&(Var0[iVar1 /*6*/]), ZONE::GET_NAME_OF_ZONE(Global_4718592.f_631), 24);
	iVar1++;
	if ((__LIB_16__::func_683(1) && !__LIB_16__::func_682()) && !__LIB_1__::func_308())
	{
		iVar2 = 0;
		while (iVar2 <= (Global_4718592.f_592 - 1))
		{
			__LIB_24__::func_701(uParam2, &Var0, &iVar1, Global_4718592.f_658[iVar2 /*22957*/].f_11);
			iVar2++;
		}
		iVar2 = 0;
		while (iVar2 <= (Global_4980736.f_94384 - 1))
		{
			__LIB_24__::func_701(uParam2, &Var0, &iVar1, Global_4980736.f_94390[iVar2 /*1004*/]);
			iVar2++;
		}
		iVar2 = 0;
		while (iVar2 <= (Global_4980736[0] - 1))
		{
			__LIB_24__::func_701(uParam2, &Var0, &iVar1, Global_4980736.f_5[iVar2 /*273*/].f_1[0 /*3*/]);
			iVar2++;
		}
		iVar2 = 0;
		while (iVar2 <= (Global_4980736.f_78574 - 1))
		{
			__LIB_24__::func_701(uParam2, &Var0, &iVar1, Global_4980736.f_78578[iVar2 /*450*/]);
			iVar2++;
		}
	}
	else if (__LIB_16__::func_682())
	{
		DATAFILE::DATAARRAY_ADD_STRING(*uParam2, ZONE::GET_NAME_OF_ZONE(Global_4718592.f_658[iVar2 /*22957*/].f_2753[0 /*36*/].f_13));
	}
	else if (__LIB_13__::func_432())
	{
		iVar2 = 0;
		while (iVar2 <= (Global_4718592.f_107224 - 1))
		{
			__LIB_24__::func_701(uParam2, &Var0, &iVar1, Global_4718592.f_95507[iVar2 /*58*/]);
			iVar2++;
		}
	}
	else if (Global_4718592 == 1)
	{
		iVar2 = 0;
		while (iVar2 <= (Global_4980736.f_176054 - 1))
		{
			Var3.f_0 = (Var3.f_0 + Global_4980736.f_176061[iVar2 /*65*/]);
			Var3.f_1 = (Var3.f_1 + Global_4980736.f_176061[iVar2 /*65*/].f_1);
			Var3.f_2 = (Var3.f_2 + Global_4980736.f_176061[iVar2 /*65*/].f_2);
			iVar2++;
		}
		Var3.f_0 = (Var3.f_0 / IntToFloat(Global_4980736.f_176054));
		Var3.f_1 = (Var3.f_1 / IntToFloat(Global_4980736.f_176054));
		Var3.f_2 = (Var3.f_2 / IntToFloat(Global_4980736.f_94384));
		StringCopy(&(Var0[0 /*6*/]), ZONE::GET_NAME_OF_ZONE(Var3), 24);
		iVar2 = 0;
		while (iVar2 <= 1)
		{
			DATAFILE::DATAARRAY_ADD_STRING(*uParam2, &(Var0[iVar2 /*6*/]));
			iVar2++;
		}
	}
	else if (__LIB_1__::func_308())
	{
		DATAFILE::DATAARRAY_ADD_STRING(*uParam2, &(Var0[0 /*6*/]));
	}
	__LIB_27__::func_746(uParam3);
	__LIB_24__::func_699(uParam4);
	__LIB_27__::func_745(uParam5);
	__LIB_27__::func_744(uParam6);
	if (__LIB_16__::func_683(1))
	{
		__LIB_24__::func_696(uParam9);
		__LIB_24__::func_695(uParam7, 0, 0);
		__LIB_24__::func_695(uParam8, 1, 0);
		__LIB_24__::func_695(uParam10, 0, 1);
	}
	if (BitTest(Global_4718592.f_11, 1))
	{
		DATAFILE::DATADICT_SET_BOOL(*uParam1, "ems", true);
	}
	else
	{
		DATAFILE::DATADICT_SET_BOOL(*uParam1, "ems", false);
	}
}

void func_166(int iParam0, bool bParam1, bool bParam2)//Position - 0x52809
{
	var uVar0;
	var uVar1;
	int iVar2;
	int iVar3;
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam1 >= 32)
	{
		iVar2 = (bParam1 / 32);
		iVar3 = (bParam1 % 32);
		__LIB_22__::func_557(iVar3, &uVar0, &uVar1);
	}
	else if (bParam1 != -1)
	{
		iVar2 = 0;
		iVar3 = bParam1;
		__LIB_22__::func_557(bParam1, &uVar0, &uVar1);
	}
	__LIB_24__::func_721(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_556(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_720(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_555(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_554(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_27__::func_299(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_0__::func_467(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_719(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_24__::func_718(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_0__::func_467(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_0__::func_467(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_0__::func_467(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_27__::func_599(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
	__LIB_27__::func_749(iParam0, bParam1, bParam2, uVar0, uVar1, iVar2, iVar3);
}

void func_167(var uParam0, int* iParam1, bool bParam2, int iParam3)//Position - 0x5A61C
{
	__LIB_19__::func_171(iParam1, bParam2);
	__LIB_27__::func_750(uParam0, iParam3, 0);
}

void func_168(int iParam0, int* iParam1, int iParam2, int iParam3, var uParam4, int iParam5, int iParam6)//Position - 0x65E63
{
	int iVar0;
	int iVar1;
	if (iParam0 == 2)
	{
		if (iParam1->f_1 != 0)
		{
			GRAPHICS::DELETE_CHECKPOINT(iParam1->f_1);
			iParam1->f_1 = 0;
		}
		iVar0 = 0;
		while (iVar0 <= (Global_4980736.f_69352 - 1))
		{
			if (uParam4->f_413[iVar0] != -1)
			{
				if (GRAPHICS::IS_DECAL_ALIVE(uParam4->f_352[uParam4->f_413[iVar0]]))
				{
					GRAPHICS::REMOVE_DECAL(uParam4->f_352[uParam4->f_413[iVar0]]);
				}
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= (Global_4980736.f_176054 - 1))
		{
			if (GRAPHICS::IS_DECAL_ALIVE(iParam2->f_496[iVar0]))
			{
				GRAPHICS::REMOVE_DECAL(iParam2->f_496[iVar0]);
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 3)
		{
			iVar1 = 0;
			while (iVar1 <= (Global_4980736.f_176055[iVar0] - 1))
			{
				if (GRAPHICS::IS_DECAL_ALIVE((iParam3[iVar0 /*313*/])->f_62[iVar1]))
				{
					GRAPHICS::REMOVE_DECAL((iParam3[iVar0 /*313*/])->f_62[iVar1]);
				}
				iVar1++;
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= (Global_4980736.f_5739 - 1))
		{
			if (iParam5->f_822[iVar0] != -1)
			{
				if (GRAPHICS::IS_DECAL_ALIVE(iParam5->f_789[iParam5->f_822[iVar0]]))
				{
					GRAPHICS::REMOVE_DECAL(iParam5->f_789[iParam5->f_822[iVar0]]);
				}
			}
			iVar0++;
		}
	}
	else if (iParam0 == 4)
	{
		__LIB_24__::func_705(iParam1, iParam6, &(iParam1->f_1));
	}
}

void func_169()//Position - 0x77009
{
	var uVar0;
	uVar0 = 4;
	Global_4980736.f_94385 = __LIB_27__::func_791(&uVar0);
	Global_4980736.f_94386 = Global_4980736.f_94385;
	if (Global_4980736.f_94387 != -1)
	{
		Global_4980736.f_94386 = Global_4980736.f_94387;
	}
	if (Global_4980736.f_94386 > Global_4980736.f_94384)
	{
		Global_4980736.f_94386 = Global_4980736.f_94384;
	}
	if (__LIB_23__::func_217())
	{
		Global_4980736.f_94386 = 50;
	}
}

void func_170(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x7AE0E
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	iVar0 = uParam1->f_3[iParam2];
	if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		return;
	}
	iVar1 = VEHICLE::GET_TRAIN_CARRIAGE(iVar0, uParam3->f_1);
	if (!ENTITY::DOES_ENTITY_EXIST(iVar1))
	{
		return;
	}
	Var2 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar1, ENTITY::GET_ENTITY_COORDS(iParam0, true)) };
	Var3 = { __LIB_26__::func_549(iVar1, iParam0) };
	uParam3->f_3 = { Var2 };
	uParam3->f_6 = { Var3 };
}

int func_171(int* iParam0, int iParam1, float fParam2, int iParam3, bool bParam4, int iParam5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10, int iParam11, float fParam12)//Position - 0x7BDCA
{
	float fVar0;
	float fVar1;
	if (!__LIB_0__::func_261())
	{
		if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(iParam1->f_3) && !__LIB_0__::func_625())
		{
			__LIB_24__::func_612(iParam1, 0);
			iParam1->f_20 = 1;
			__LIB_24__::func_739(iParam1, 11);
			return 0;
		}
	}
	if ((CAM::IS_GAMEPLAY_CAM_RENDERING() && iParam3 != 0) && !__LIB_0__::func_261())
	{
		if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), iParam3))
		{
			__LIB_24__::func_739(iParam1, 0);
			__LIB_24__::func_612(iParam1, 0);
			return 0;
		}
	}
	if (__LIB_23__::func_383(iParam1->f_3))
	{
		__LIB_24__::func_612(iParam1, 0);
		iParam1->f_20 = 1;
		__LIB_24__::func_739(iParam1, 11);
		return 0;
	}
	OBJECT::SET_FORCE_OBJECT_THIS_FRAME(iParam1->f_3, 10f);
	if (iParam1->f_18 == 0)
	{
		if (iParam1->f_27.f_2 == 0)
		{
			if ((bParam4 && !iParam1->f_765) && !bParam10)
			{
				__LIB_24__::func_739(iParam1, 4);
				__LIB_24__::func_612(iParam1, 0);
				iParam1->f_20 = 1;
			}
			else if (((!bParam4 || iParam1->f_765) || bParam9) || bParam10)
			{
				iParam1->f_27.f_2 = 1;
				iParam1->f_27.f_3 = { iParam1->f_3 };
				iParam1->f_27.f_9 = { iParam1->f_3 };
				__LIB_24__::func_898(&(iParam1->f_27), fParam2, &(iParam1->f_20), iParam3, iParam5, bParam6, bParam4, bParam7, bParam8, 0, bParam10, iParam11, fParam12);
			}
			else
			{
				__LIB_24__::func_739(iParam1, 3);
				__LIB_24__::func_612(iParam1, 0);
				iParam1->f_20 = 1;
			}
		}
		else if (__LIB_24__::func_898(&(iParam1->f_27), fParam2, &(iParam1->f_20), iParam3, iParam5, bParam6, bParam4, bParam7, (bParam8 || __LIB_24__::func_736(iParam0)), 0, bParam10, iParam11, fParam12))
		{
			if (iParam3 == 0)
			{
				fVar0 = (fParam2 / 2f);
				fVar1 = 25f;
			}
			else
			{
				fVar1 = 20f;
			}
			if (iParam1->f_750 == 1)
			{
				__LIB_24__::func_739(iParam1, 12);
				__LIB_24__::func_612(iParam1, 0);
			}
			else if (((!__LIB_23__::func_382(iParam1->f_3, iParam3, fVar1, fVar0, 1, 1069547520, 0) || bParam4) || bParam8) || __LIB_24__::func_736(iParam0))
			{
				iParam1->f_27.f_12 = { iParam1->f_27.f_9 };
				return 1;
			}
			else
			{
				__LIB_24__::func_739(iParam1, 1);
				__LIB_24__::func_612(iParam1, 0);
			}
		}
		else
		{
			__LIB_24__::func_739(iParam1, 0);
			__LIB_24__::func_612(iParam1, 0);
		}
	}
	else
	{
		if (iParam1->f_18 == 1)
		{
			__LIB_24__::func_739(iParam1, 5);
		}
		else
		{
			__LIB_24__::func_739(iParam1, 6);
		}
		__LIB_24__::func_612(iParam1, 0);
	}
	return 0;
}

int func_172(int iParam0, float fParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x9326A
{
	int iVar0;
	int iVar1;
	if (bParam4)
	{
		iVar1 = 0;
		while (iVar1 <= 3)
		{
			iVar0 = 0;
			while (iVar0 <= (Global_4980736.f_176055[iVar1] - 1))
			{
				if (iParam2 > -1 && (iVar0 == iParam2 && iVar1 == iParam3))
				{
				}
				else if (__LIB_24__::func_896(iParam0->f_3, iVar0, fParam1, iVar1, iParam3, bParam4, 0))
				{
					if (iParam3 == iVar1)
					{
						__LIB_24__::func_739(iParam0, 8);
					}
					else
					{
						__LIB_24__::func_739(iParam0, 9);
					}
					return 1;
				}
				iVar0++;
			}
			iVar1++;
		}
	}
	else
	{
		iVar0 = 0;
		while (iVar0 <= (Global_4980736.f_176054 - 1))
		{
			if (iParam2 > -1 && iVar0 == iParam2)
			{
			}
			else if (__LIB_24__::func_896(iParam0->f_3, iVar0, fParam1, Global_4980736.f_176061[iVar0 /*65*/].f_4, iParam3, bParam4, 0))
			{
				__LIB_24__::func_739(iParam0, 2);
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

void func_173(var uParam0, var uParam1, int iParam2)//Position - 0xE5F7D
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam1->f_33))
	{
		if (ENTITY::DOES_ENTITY_EXIST((*uParam1)[iParam2]))
		{
			OBJECT::DELETE_OBJECT(uParam1[iParam2]);
		}
		if (ENTITY::DOES_ENTITY_EXIST(uParam1->f_33))
		{
			OBJECT::DELETE_OBJECT(&(uParam1->f_33));
		}
		Global_4980736.f_63312[iParam2 /*183*/] = { uParam1->f_71 };
		(*uParam1)[iParam2] = OBJECT::CREATE_OBJECT(Global_4980736.f_63312[iParam2 /*183*/].f_7, Global_4980736.f_63312[iParam2 /*183*/], true, true, false);
		__LIB_27__::func_774((*uParam1)[iParam2], iParam2, 0);
		__LIB_23__::func_310(&(uParam1->f_35[iParam2]), ENTITY::GET_ENTITY_COORDS((*uParam1)[iParam2], true), 29, "FMMC_B_13", 1f, 0, 0, -1);
		STREAMING::ADD_MODEL_TO_CREATOR_BUDGET(Global_4980736.f_63312[iParam2 /*183*/].f_7);
		OBJECT::SET_OBJECT_TINT_INDEX((*uParam1)[iParam2], Global_4980736.f_63312[iParam2 /*183*/].f_10);
		PHYSICS::SET_DISABLE_FRAG_DAMAGE((*uParam1)[iParam2], true);
		if (__LIB_19__::func_102(Global_4980736.f_63312[iParam2 /*183*/].f_7) != 0)
		{
			__LIB_24__::func_750(iParam2, uParam1, uParam0);
		}
	}
}

void func_174(bool bParam0, int iParam1, bool bParam2, bool bParam3, char* sParam4, bool bParam5, bool bParam6)//Position - 0x10038C
{
	__LIB_23__::func_494(bParam0, bParam3, 0, bParam6, 0, 0, 0);
	__LIB_24__::func_911(bParam0, iParam1, bParam2, sParam4, bParam5, bParam6);
}

int func_175(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x1020F9
{
	bool bVar0;
	bVar0 = (Global_4980736.f_176054 - 1);
	while (bVar0 >= 0)
	{
		if (BitTest(uParam1->f_783[__LIB_13__::func_437(bVar0)], __LIB_18__::func_410(bVar0)))
		{
			if (uParam1->f_795 < 5)
			{
				if (__LIB_24__::func_851(bVar0, uParam3->f_3090, uParam3->f_3087, uParam1))
				{
					__LIB_22__::func_742(uParam2);
					GRAPHICS::REMOVE_DECAL(uParam0->f_496[bVar0]);
					__LIB_27__::func_816(uParam0, bVar0, uParam3->f_550);
					if (uParam3->f_550 == 74)
					{
						Global_4980736.f_176061[Global_4980736.f_176054 /*65*/].f_3 = uParam1->f_1;
					}
				}
				MISC::CLEAR_BIT(&(uParam1->f_783[__LIB_13__::func_437(bVar0)]), __LIB_18__::func_410(bVar0));
			}
			else
			{
				return 0;
			}
		}
		bVar0 = (bVar0 + -1);
	}
	return 1;
}

void func_176(var uParam0, var uParam1, var uParam2, int* iParam3)//Position - 0x102504
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	float fVar5;
	var uVar6;
	var uVar7;
	int iVar8;
	struct<3> Var9;
	struct<3> Var10;
	bool bVar11;
	struct<3> Var12;
	bool bVar13;
	char cVar14[64];
	bVar11 = (BitTest(iParam3->f_732, 6) || uParam0->f_429);
	iVar8 = 0;
	while (iVar8 < Global_4718592.f_593)
	{
		iVar0 = 0;
		while (iVar0 < uParam0->f_6[iVar8 /*104*/].f_103)
		{
			if (*uParam0 == iVar0)
			{
				if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/]))
				{
					HUD::GET_HUD_COLOUR(21, &iVar1, &iVar2, &iVar3, &uVar4);
					fVar5 = Global_4718592.f_658[iVar8 /*22957*/].f_6885[*uParam0];
					if (Global_4718592.f_658[iVar8 /*22957*/].f_6921[*uParam0] == 6)
					{
						if (bVar11)
						{
							if (BitTest(Global_4718592.f_658[iVar8 /*22957*/].f_2051, *uParam0))
							{
								if (GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									__LIB_22__::func_756(uParam1, 28, Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], 0f, 0f, 0f, 0f, 0f, 0f, fVar5, fVar5, fVar5, iVar1, iVar2, iVar3, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
								}
								if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/]) && GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									__LIB_22__::func_756(uParam1, 28, Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], 0f, 0f, 0f, 0f, 0f, 0f, fVar5, fVar5, fVar5, iVar1, iVar2, iVar3, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
								}
							}
							else
							{
								if (GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									__LIB_22__::func_756(uParam1, 28, Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], 0f, 0f, 0f, 0f, 0f, 0f, fVar5, fVar5, fVar5, iVar1, iVar2, iVar3, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 1, 0);
								}
								if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/]) && GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									__LIB_22__::func_756(uParam1, 28, Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], 0f, 0f, 0f, 0f, 0f, 0f, fVar5, fVar5, fVar5, iVar1, iVar2, iVar3, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 1, 0);
								}
							}
						}
						if (!HUD::DOES_BLIP_EXIST(uParam0->f_459[iVar0]))
						{
							uParam0->f_459[iVar0] = HUD::ADD_BLIP_FOR_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/]);
							__LIB_1__::func_540(&(uParam0->f_459[iVar0]), 21);
						}
						*uParam1++;
					}
					else if (Global_4718592.f_658[iVar8 /*22957*/].f_6921[*uParam0] == 0)
					{
						if (bVar11)
						{
							Var12 = { Vector(Global_4718592.f_658[iVar8 /*22957*/].f_6903[*uParam0], 0f, 0f) / Vector(2f, 2f, 2f) };
							if (Global_4718592.f_658[iVar8 /*22957*/].f_6903[*uParam0] <= 0.001f)
							{
								Var12.f_2 = 1000f;
							}
							if (BitTest(Global_4718592.f_658[iVar8 /*22957*/].f_2051, *uParam0))
							{
								if (GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									Var9 = { Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/] - Var12 };
									Var10 = { Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/] + Var12 };
									__LIB_26__::func_548(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 80);
									__LIB_27__::func_717(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 255);
								}
								if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/]) && GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									Var9 = { Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/] - Var12 };
									Var10 = { Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/] + Var12 };
									__LIB_26__::func_548(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 80);
									__LIB_27__::func_717(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 255);
								}
							}
							else
							{
								if (GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									Var9 = { Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/] - Var12 };
									Var10 = { Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/] + Var12 };
									__LIB_26__::func_548(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 80);
									__LIB_27__::func_717(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 255);
								}
								if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/]) && GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], &uVar6, &uVar7))
								{
									Var9 = { Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/] - Var12 };
									Var10 = { Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/] + Var12 };
									__LIB_26__::func_548(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 80);
									__LIB_27__::func_717(Var9, Var10, fVar5, iVar1, iVar2, iVar3, 255);
								}
							}
						}
					}
					else if (Global_4718592.f_658[iVar8 /*22957*/].f_6921[*uParam0] == 1)
					{
						if (bVar11)
						{
							if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/]))
							{
								if (!__LIB_0__::func_86(Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/]))
								{
									__LIB_24__::func_272(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], Global_4718592.f_658[iVar8 /*22957*/].f_6833[*uParam0 /*3*/], fVar5, iVar1, iVar2, iVar3, 50);
								}
								else
								{
									__LIB_24__::func_272(Global_4718592.f_658[iVar8 /*22957*/].f_6781[*uParam0 /*3*/], uParam2->f_3, fVar5, iVar1, iVar2, iVar3, 50);
								}
							}
						}
					}
					else if (Global_4718592.f_658[iVar8 /*22957*/].f_6921[*uParam0] == 7)
					{
						bVar13 = false;
						while (bVar13 <= (Global_4980736.f_195933 - 1))
						{
							if (__LIB_19__::func_221(&(Global_4718592.f_658[iVar8 /*22957*/].f_6939[*uParam0 /*3*/]), bVar13))
							{
								StringCopy(&cVar14, "Using Zone ", 64);
								StringIntConCat(&cVar14, bVar13, 64);
								StringConCat(&cVar14, " as Dropoff", 64);
								GRAPHICS::DRAW_DEBUG_TEXT_2D(&cVar14, __LIB_27__::func_712(bVar13), 255, 255, 255, 255);
							}
							bVar13++;
						}
					}
				}
			}
			else if (HUD::DOES_BLIP_EXIST(uParam0->f_459[iVar0]))
			{
				HUD::REMOVE_BLIP(&(uParam0->f_459[iVar0]));
			}
			iVar0++;
		}
		iVar8++;
	}
}

void func_177(float fParam0, var uParam1, var uParam2, var uParam3, var uParam4, int* iParam5, bool bParam6, int iParam7, bool bParam8, int iParam9, int iParam10, bool bParam11, int iParam12, bool bParam13, bool bParam14, int iParam15, bool bParam16, int iParam17, float fParam18)//Position - 0x107544
{
	float fVar0;
	var uVar1;
	struct<3> Var2;
	bool bVar3;
	float fVar4;
	struct<3> Var5;
	struct<3> Var6;
	struct<3> Var7;
	int iVar8;
	int iVar9;
	struct<3> Var10;
	int iVar11;
	int iVar12;
	struct<3> Var13;
	float fVar14;
	float fVar15;
	struct<3> Var16;
	var uVar17;
	var uVar18;
	var uVar19;
	var uVar20;
	var uVar21;
	var uVar22;
	var uVar23;
	var uVar24;
	fVar0 = 2400f;
	if (fParam0 >= -10f && !bParam11)
	{
		return;
	}
	Var2 = { CAM::GET_FINAL_RENDERED_CAM_COORD() };
	bVar3 = ((iParam5->f_271 == 692 && !bParam11) && !__LIB_0__::func_261());
	fVar4 = 1.75f;
	if (iParam9 && bParam6)
	{
		if (bParam11)
		{
			fVar0 = 700f;
		}
		else
		{
			fVar0 = ((Var2.f_2 - *bParam8) / SYSTEM::SIN(MISC::ABSF(fParam0)));
		}
		if (fVar0 <= 5f)
		{
			fVar0 = 5f;
		}
		if (Var2.f_2 < *bParam8 && uParam4->f_801 == 0)
		{
			*bParam8 = (Var2.f_2 - fVar0);
			return;
		}
	}
	Var5 = { __LIB_23__::func_456(Var2, fVar0) };
	iVar8 = PLAYER::PLAYER_PED_ID();
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar8 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	}
	if (bVar3)
	{
		uParam4->f_22 = SHAPETEST::START_SHAPE_TEST_SWEPT_SPHERE(Var2, Var5, fVar4, 211, iVar8, 4);
	}
	else if (bParam13)
	{
		uParam4->f_22 = SHAPETEST::START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(Var2, Var5, 209, iVar8, 4);
	}
	else if (bParam16)
	{
		uParam4->f_22 = SHAPETEST::START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(Var2, Var5, 195, iVar8, 7);
	}
	else
	{
		uParam4->f_22 = SHAPETEST::START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(Var2, Var5, 211, iVar8, 4);
	}
	if (SHAPETEST::GET_SHAPE_TEST_RESULT(uParam4->f_22, &uVar1, &Var6, &Var7, &iVar9) == 2)
	{
		uParam4->f_22 = 0;
	}
	else
	{
		return;
	}
	if (uParam4->f_6 != 0 && uParam4->f_6 != iVar9)
	{
		SHAPETEST::RELEASE_SCRIPT_GUID_FROM_ENTITY(uParam4->f_6);
	}
	if (ENTITY::IS_AN_ENTITY(iVar9))
	{
		if (((ENTITY::DOES_ENTITY_EXIST(iVar9) && ENTITY::IS_ENTITY_AN_OBJECT(iVar9)) && (iParam5->f_550 == 4 || iParam5->f_550 == 5)) && !(iParam5->f_893 == 54 || iParam5->f_271 == 7))
		{
			if (__LIB_25__::func_133(ENTITY::GET_ENTITY_MODEL(iVar9)) && !__LIB_24__::func_794(iParam5))
			{
				iVar9 = 0;
			}
			else if (!__LIB_25__::func_133(ENTITY::GET_ENTITY_MODEL(iVar9)) && __LIB_24__::func_794(iParam5))
			{
				iVar9 = 0;
			}
		}
	}
	uParam4->f_6 = iVar9;
	uParam4->f_7 = { Var7 };
	uParam4->f_18 = 0;
	uParam4->f_15 = 1;
	if (iParam9 && bParam6)
	{
		if (__LIB_0__::func_86(Var6))
		{
			Var6 = { Var5 };
		}
		else
		{
			*bParam8 = Var6.f_2;
		}
	}
	iVar11 = WATER::TEST_PROBE_AGAINST_ALL_WATER(Var2, Var5, 128, &Var10);
	if ((iVar11 == 1 && uParam4->f_801 != 2) && SYSTEM::VDIST2(Var10, Var2) < SYSTEM::VDIST2(Var6, Var2))
	{
		Var6 = { Var10 };
		uParam4->f_765 = 1;
		uParam4->f_13 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var2, Var6, true);
	}
	else
	{
		iVar12 = 0;
		while (iVar12 <= 4)
		{
			if (ENTITY::DOES_ENTITY_EXIST(uParam3->f_32[iVar12]))
			{
				if (__LIB_1__::func_601(uParam3->f_32[iVar12]) == iVar9)
				{
				}
			}
			iVar12++;
		}
		uParam4->f_13 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var2, Var6, true);
		uParam4->f_765 = 0;
	}
	if (!bParam11)
	{
		if (__LIB_0__::func_86(Var6))
		{
			Var13 = { Var5 };
			Var13.f_2 = PATHFIND::GET_APPROX_FLOOR_FOR_POINT(Var5.f_0, Var5.f_1);
			fVar14 = (90f - MISC::ABSF(fParam0));
			fVar15 = (fVar0 - ((Var13.f_2 - Var5.f_2) / SYSTEM::COS(fVar14)));
			Var16 = { __LIB_23__::func_456(Var2, fVar15) };
			Var13 = { Var16 };
			Var13.f_2 = PATHFIND::GET_APPROX_FLOOR_FOR_POINT(Var16.f_0, Var16.f_1);
			fVar15 = (fVar15 + ((Var16.f_2 - Var13.f_2) / SYSTEM::COS(fVar14)));
			Var16 = { __LIB_23__::func_456(Var2, fVar15) };
			Var13 = { Var16 };
			Var13.f_2 = PATHFIND::GET_APPROX_FLOOR_FOR_POINT(Var16.f_0, Var16.f_1);
			fVar15 = (fVar15 - ((Var13.f_2 - Var16.f_2) / SYSTEM::COS(fVar14)));
			if (fVar15 > fVar0)
			{
				fVar15 = fVar0;
			}
			Var16 = { __LIB_23__::func_456(Var2, fVar15) };
			Var6 = { Var16 };
			uParam4->f_13 = fVar15;
			uParam4->f_15 = 0;
			uParam4->f_18 = 1;
		}
		else if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var2, Var6, true) > IntToFloat(iParam17))
		{
			uParam4->f_18 = 1;
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var2, Var6, true) > 800f)
			{
				uParam4->f_15 = 0;
			}
		}
	}
	if (uParam4->f_765 == 0 || __LIB_22__::func_813())
	{
		uParam4->f_10 = { Var6 };
	}
	else if (WATER::GET_WATER_HEIGHT(Var6 + Vector(5f, 0f, 0f), &uVar17))
	{
		uParam4->f_10 = { Var6.f_0, Var6.f_1, uVar17 };
	}
	else
	{
		uParam4->f_10 = { Var6 };
	}
	if (bParam11)
	{
		if (uParam4->f_13 > fParam18)
		{
			uParam4->f_13 = fParam18;
		}
	}
	HUD::GET_HUD_COLOUR(iParam7, &uVar18, &uVar19, &uVar20, &uVar21);
	uParam4->f_3 = { __LIB_23__::func_456(Var2, uParam4->f_13) };
	if (bParam11)
	{
		if (uParam4->f_765 == 0 && iParam15)
		{
			MISC::GET_GROUND_Z_FOR_3D_COORD(uParam4->f_3 + Vector(0.1f, 0f, 0f), &uVar22, false, false);
			uParam4->f_3 = { uParam4->f_3, uParam4->f_3.f_1, uVar22 };
			if ((WATER::GET_WATER_HEIGHT(uParam4->f_3 + Vector(0.1f, 0f, 0f), &uVar23) && !bParam14) && !(__LIB_22__::func_813() && __LIB_23__::func_393(iParam5)))
			{
				uParam4->f_765 = 1;
				uParam4->f_3 = { uParam4->f_3, uParam4->f_3.f_1, uVar23 };
			}
			else
			{
				uParam4->f_765 = 0;
			}
		}
		uParam4->f_10 = { uParam4->f_3 };
	}
	if (!__LIB_22__::func_586(uParam4->f_3))
	{
		uParam4->f_18 = 2;
	}
	if (bParam6)
	{
		if (iParam12 && !bParam11)
		{
			iParam9 = 1;
		}
		if (iParam10 == 1 && *bParam8 == 0f)
		{
			if (WATER::GET_WATER_HEIGHT(uParam4->f_3 + Vector(5f, 0f, 0f), &uVar24) && !(__LIB_22__::func_813() && __LIB_23__::func_393(iParam5)))
			{
				uParam4->f_3 = { uParam4->f_3, uParam4->f_3.f_1, uVar24 };
			}
		}
	}
	iParam5->f_4784 = { uParam4->f_3 };
}

void func_178(bool bParam0, var uParam1, int iParam2, bool bParam3, char* sParam4, char* sParam5, bool bParam6)//Position - 0x10AC68
{
	__LIB_23__::func_494(bParam0, bParam3, 0, bParam6, 0, 0, 0);
	__LIB_24__::func_912(bParam0, uParam1, iParam2, sParam4, sParam5, bParam6);
}

void func_179(int* iParam0)//Position - 0x10CD0F
{
	iParam0->f_270 = 417;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("TMC_AVA_PL_INT");
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.37f;
	iParam0->f_546 = 50;
	__LIB_24__::func_913(0, Global_4718592.f_175385.f_1[0], "MC_AVA_INT_BNKSC_A", "", "", -1, 1, 1, 0, -1);
	__LIB_24__::func_913(1, Global_4718592.f_175385.f_1[1], "MC_AVA_INT_BNKSC_B", "", "", -1, 1, 1, 0, -1);
	__LIB_24__::func_913(2, Global_4718592.f_175385.f_1[2], "MC_AVA_INT_BNKSC_C", "", "", -1, 1, 1, 0, -1);
	__LIB_24__::func_913(3, Global_4718592.f_175385.f_1[3], "MC_AVA_INT_BNKSC_D", "", "", -1, 1, 1, 0, -1);
	__LIB_24__::func_914(4, "MC_AVA_INT_JMBNK", Global_4718592.f_175385.f_1[4]);
}

void func_180(int* iParam0)//Position - 0x10F958
{
	bool bVar0;
	int iVar1;
	iParam0->f_270 = 390;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_VJTO_T");
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.33f;
	bVar0 = Global_4718592.f_174999 != -1;
	if (__LIB_22__::func_607(iParam0) == 1)
	{
		__LIB_12__::func_593(0, 1, 0, 0, 0);
	}
	__LIB_23__::func_494(0, __LIB_22__::func_897(Global_4718592.f_174999), 0, 1, 0, 0, 0);
	if (bVar0)
	{
		__LIB_23__::func_494(0, "MC_VAROPT_ENA", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(0, "MC_VAROPT_DIS", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	__LIB_24__::func_915(1, Global_4718592.f_174999.f_131, "FMMC_VJTO_ET", "FMMC_VJTO_ET", 0, -1, bVar0, -1);
	iParam0->f_546++;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		__LIB_24__::func_923(iParam0, iParam0->f_546, 413, "FMMC_VJTO_OO", iVar1 + 1, 1);
		iParam0->f_546++;
		iVar1++;
	}
}

void func_181(int* iParam0)//Position - 0x1104ED
{
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_UPED_T");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	iParam0->f_270 = 892;
	iParam0->f_546 = 2;
	__LIB_24__::func_915(0, iParam0->f_898, "SC_PED_CAT", "FMMC_PDL_", 0, -1, 1, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_PED00", 0);
	__LIB_24__::func_930(1, "SC_PED_TYP", __LIB_24__::func_798(Global_4980736.f_202517.f_14), 1, 0, -1);
	__LIB_23__::func_420(iParam0, 1, "MC_H_PED0C", 0);
}

void func_182(int iParam0, int iParam1, int iParam2, int iParam3, char* sParam4, char* sParam5, int iParam6, int iParam7, bool bParam8)//Position - 0x114C78
{
	__LIB_24__::func_915(iParam0, iParam2, sParam4, "FMMC_LET_", 0, -1, bParam8, iParam6);
	__LIB_24__::func_947(iParam1, iParam3, iParam2, sParam5, iParam7, bParam8);
}

void func_183(int* iParam0)//Position - 0x117F2F
{
	int iVar0;
	bool bVar1;
	iVar0 = iParam0->f_848;
	iParam0->f_270 = 245;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_TLVL_TIT");
	__LIB_19__::func_185((iVar0 + __LIB_0__::func_138(__LIB_10__::func_207(), 0, 1)));
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	if (Global_4980736.f_78574 <= 0)
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_TLVL_NOV", 0, 1, 0, 0, 0);
		iParam0->f_546++;
		return;
	}
	bVar1 = false;
	while (bVar1 <= (Global_4980736.f_78574 - 1))
	{
		__LIB_24__::func_957(bVar1, Global_4718592.f_658[iVar0 /*22957*/].f_12409, bVar1, 1, "FMMC_VEH_NUM", bVar1, 1);
		iParam0->f_546++;
		bVar1++;
	}
}

void func_184(int* iParam0)//Position - 0x11CB2B
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_TEA_BALT" /* GXT: TEAM BALANCING */);
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	__LIB_22__::func_913(0.27f);
	iParam0->f_270 = 67;
	iParam0->f_546 = 10;
	__LIB_24__::func_915(0, Global_4718592.f_142646, "FMMC_TEA_BALR" /* GXT: Team Balance Ratio */, "FMMC_TB_", 0, -1, Global_4718592.f_593 == 2, -1);
	__LIB_23__::func_420(iParam0, 0, "MC_H_TEA_BALR" /* GXT: Set up the ratio for Team Balancing. For example, 40 / 60 gives fewer players to Team 1 and more to Team 2. This option only works with 2 Teams. */, 0);
	iVar0 = Global_4718592.f_588 + 2;
	bVar3 = true;
	iVar4 = 0;
	while (iVar4 <= 1)
	{
		__LIB_24__::func_961(bVar3, Global_4718592.f_595[iVar4], "FMMC_TEA_BALN" /* GXT: Team ~1~ Minimum Player Count */, iVar4 + 1, 1, 0);
		__LIB_23__::func_420(iParam0, bVar3, "MC_H_TEA_BALN" /* GXT: The minimum number of players that need to be on this team. The Deathmatch will not launch if this target cannot be met. */, 0);
		bVar3++;
		if (Global_4718592.f_600[iVar4] > 0)
		{
			__LIB_24__::func_961(bVar3, Global_4718592.f_600[iVar4], "FMMC_TEA_BALX" /* GXT: Team ~1~ Maximum Player Count */, iVar4 + 1, 1, 0);
		}
		else
		{
			__LIB_23__::func_494(bVar3, "FMMC_TEA_BALX" /* GXT: Team ~1~ Maximum Player Count */, 1, 1, 0, 0, 0);
			__LIB_23__::func_517(iVar4 + 1, 0);
			__LIB_23__::func_494(bVar3, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		__LIB_23__::func_420(iParam0, bVar3, "MC_H_TEA_BALX" /* GXT: The maximum number of players that can be on this team. */, 0);
		bVar3++;
		iVar1 = (iVar1 + Global_4718592.f_600[iVar4]);
		if (Global_4718592.f_600[iVar4] > 0)
		{
			iVar2++;
		}
		iVar4++;
	}
	if (iVar2 > 1)
	{
		iVar1 = (iVar1 - iVar0);
		__LIB_24__::func_913(9, MISC::ABSI(iVar1), "FMMC_TEA_BALXD" /* GXT: Unassigned Max Players */, "MC_H_TEA_BALXDB" /* GXT: ~b~ None ~s~ */, __LIB_1__::func_295(iVar1 > 0, "MC_H_TEA_BALXDM" /* GXT: ~r~ ~1~ too many~s~ */, "MC_H_TEA_BALXDF" /* GXT: ~r~ ~1~ too few~s~ */), 0, 0, 1, 0, -1);
		__LIB_23__::func_420(iParam0, 9, "MC_H_TEA_BALXD" /* GXT: The number of players on each team should match the Team Balance Ratio. Add or remove players until this says 'None'. */, 0);
	}
}

void func_185(int* iParam0)//Position - 0x12D27F
{
	int iVar0;
	struct<2> Var1;
	bool bVar2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_PRP_CBR");
	__LIB_1__::func_766(1, 1, 4, 0, 0);
	__LIB_1__::func_765(1, 2, 2, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 5;
	iVar0 = __LIB_22__::func_393(iParam0->f_893, iParam0->f_894);
	__LIB_23__::func_494(iParam0->f_546, "FMMC_PRP_CBR0", 0, 1, 0, 0, 0);
	if (iParam0->f_3196 > -1)
	{
		StringCopy(&Var1, __LIB_23__::func_550(iVar0, iParam0->f_3196), 16);
		__LIB_23__::func_494(iParam0->f_546, &Var1, 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
	}
	iParam0->f_546++;
	bVar2 = false;
	while (bVar2 <= 16)
	{
		__LIB_23__::func_494(iParam0->f_546, "FMMC_PRP_CBR1", 1, 1, 0, 0, 0);
		__LIB_23__::func_517(bVar2, 0);
		if (BitTest(iParam0->f_3195, bVar2))
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_ON", 0, 1, 0, 0, 0);
		}
		else
		{
			__LIB_23__::func_494(iParam0->f_546, "FMMC_SEL_OFF", 0, 1, 0, 0, 0);
		}
		iParam0->f_546++;
		bVar2++;
	}
}

void func_186(int* iParam0)//Position - 0x1327C9
{
	bool bVar0;
	struct<3> Var1;
	iParam0->f_546 = 10;
	__LIB_23__::func_494(2, "3DX_PRP_AEST", 0, 1, 0, 0, 0);
	__LIB_23__::func_494(2, __LIB_22__::func_987(iParam0->f_1312), 0, 1, 0, 0, 0);
	if (__LIB_22__::func_393(iParam0->f_893, iParam0->f_894) != 1281409573)
	{
		iParam0->f_546 = 3;
		return;
	}
	bVar0 = iParam0->f_2921;
	__LIB_23__::func_494(3, "3DX_PRP_DSTP", 0, 1, 0, 0, 0);
	if (iParam0->f_2921)
	{
		__LIB_23__::func_494(3, "3DX_PRP_SWTCH", 0, 1, 0, 0, 0);
	}
	else
	{
		__LIB_23__::func_494(3, "3DX_PRP_DOOR", 0, 1, 0, 0, 0);
	}
	__LIB_24__::func_946(4, iParam0->f_1314, "3DX_PRP_LSW", !bVar0, 0);
	__LIB_23__::func_494(5, "3DX_PRP_SWT", 0, bVar0, 0, 0, 0);
	__LIB_23__::func_494(5, __LIB_22__::func_986(iParam0->f_1311), 0, bVar0, 0, 0, 0);
	__LIB_23__::func_494(6, "3DX_PRP_SWK", 0, bVar0, 0, 0, 0);
	__LIB_23__::func_494(6, __LIB_22__::func_985(iParam0->f_1310), 0, bVar0, 0, 0, 0);
	StringCopy(&Var1, "3DX_PRP_TIMN", 24);
	if (iParam0->f_1311 == 1)
	{
		StringCopy(&Var1, "3DX_PRP_CNT", 24);
	}
	__LIB_24__::func_997(7, &Var1, iParam0->f_1309, "FMMC_SEL_NON", 0, (bVar0 && (iParam0->f_1311 == 2 || iParam0->f_1311 == 1)));
	__LIB_24__::func_997(8, "3DX_PRP_TIMF", iParam0->f_942, "FMMC_SEL_NON", 0, (bVar0 && iParam0->f_1311 == 2));
	__LIB_23__::func_494(9, "3DX_PRP_DIS", 0, (bVar0 && iParam0->f_1311 == 4), 0, 0, 0);
	__LIB_23__::func_494(9, "FMMC_ASSRL20_1", 1, (bVar0 && iParam0->f_1311 == 4), 0, 0, 0);
	__LIB_23__::func_497((iParam0->f_947 + 1f), 1, 0);
}

void func_187(int* iParam0)//Position - 0x134D90
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("T_INCN_SCDR");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 143;
	iParam0->f_546 = 32;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar0 = false;
	while (bVar0 <= (Global_4980736.f_34610 - 1))
	{
		__LIB_25__::func_0(bVar0, Global_4980736.f_34371.f_61.f_12, bVar0, 9, "FMMC_INCN_DOORX", bVar0, 1);
		bVar0++;
	}
}

void func_188(int* iParam0)//Position - 0x134F84
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("T_INCN_LNKI");
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	Global_23149 = 0.3f;
	iParam0->f_270 = 143;
	iParam0->f_546 = 60;
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	bVar0 = false;
	while (bVar0 <= (Global_4980736.f_20329 - 1))
	{
		__LIB_25__::func_1(bVar0, &(Global_4980736.f_34371.f_61.f_6), bVar0, 5, "FMMC_INCN_LNKIX", bVar0, 1);
		bVar0++;
	}
}

void func_189(int* iParam0)//Position - 0x165BD8
{
	bool bVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_LIFTS_PWT");
	__LIB_19__::func_185(iParam0->f_4779);
	__LIB_1__::func_766(1, 1, 0, 0, 0);
	__LIB_1__::func_765(1, 2, 1, 1, 1);
	__LIB_12__::func_593(0, 1, 0, 0, 0);
	Global_23149 = 0.3f;
	iParam0->f_270 = 629;
	iParam0->f_546 = 0;
	bVar0 = false;
	while (bVar0 <= 3)
	{
		__LIB_25__::func_59(iParam0, iParam0->f_546, &(Global_4718592.f_174140[iParam0->f_4779 /*42*/].f_12[bVar0 /*3*/]), "FMMC_LIFTPW_P", bVar0, 1, 1);
		iParam0->f_546++;
		__LIB_25__::func_58(iParam0->f_546, Global_4718592.f_174140[iParam0->f_4779 /*42*/].f_25[bVar0], "FMMC_LIFTPW_H", bVar0, 1, 2);
		iParam0->f_546++;
		bVar0++;
	}
}

void func_190(int* iParam0)//Position - 0x17860E
{
	int iVar0;
	iParam0->f_270 = 2;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_RESETT");
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	iVar0 = 0;
	__LIB_25__::func_86(iParam0, "FMMC_DLT_A", 1, 49, &iVar0);
	__LIB_25__::func_86(iParam0, "FMMC_DLT_C", Global_4718592.f_107224 > 0, 40, &iVar0);
	if (!__LIB_1__::func_188(Global_4718592.f_107227) && !__LIB_18__::func_699())
	{
		__LIB_25__::func_86(iParam0, "FMMC_DLT_W", Global_4980736.f_69352 > 0, 37, &iVar0);
	}
	__LIB_25__::func_86(iParam0, "FMMC_DLT_P", Global_4980736.f_36355 > 0, 38, &iVar0);
	__LIB_25__::func_86(iParam0, "FMMC_DLT_D", Global_4980736.f_63310 > 0, 39, &iVar0);
	__LIB_25__::func_86(iParam0, "FMMC_DLT_RF", Global_4980736.f_201777 > 0, 58, &iVar0);
	if (!__LIB_1__::func_188(Global_4718592.f_107227) && !__LIB_18__::func_699())
	{
		__LIB_25__::func_86(iParam0, "FMMC_DLT_SJ", Global_4718592.f_115311 > 0, 45, &iVar0);
	}
	if (__LIB_10__::func_207())
	{
		__LIB_25__::func_86(iParam0, "FMMC_DLT_Z", Global_4980736.f_195933 > 0, 50, &iVar0);
		__LIB_25__::func_86(iParam0, "FMMC_DLT_U", Global_4980736.f_202534 > 0, 61, &iVar0);
	}
	iParam0->f_546 = iVar0;
	iParam0->f_142[iVar0] = 48;
}

void func_191(int* iParam0)//Position - 0x190910
{
	int iVar0;
	__LIB_23__::func_384(iParam0);
	__LIB_1__::func_767("FMMC_NEXTT");
	__LIB_1__::func_766(1, 0, 0, 0, 0);
	__LIB_1__::func_765(1, 1, 1, 1, 1);
	__LIB_12__::func_593(0, 0, 0, 0, 0);
	iParam0->f_270 = 323;
	iParam0->f_546 = 0;
	iVar0 = 0;
	while (iVar0 <= 5)
	{
		__LIB_25__::func_106(iVar0, iVar0, 0);
		iParam0->f_14[iVar0] = 636;
		iParam0->f_546++;
		iVar0++;
	}
}

void func_192(int iParam0, int iParam1)//Position - 0x1B30F8
{
	struct<12> Var0;
	int iVar1;
	int iVar2;
	int iVar3;
	struct<7> Var4;
	int iVar5;
	int iVar6;
	struct<7> Var7;
	int iVar8;
	int iVar9;
	struct<7> Var10;
	int iVar11;
	int iVar12;
	struct<7> Var13;
	int iVar14;
	if (!PED::IS_PED_INJURED(iParam1))
	{
		iVar1 = __LIB_0__::func_276(iParam1);
		if (iParam0 != 0)
		{
			if (iVar1 == 3 || iVar1 == 4)
			{
				if (iParam0 == joaat("crewLogo"))
				{
					__LIB_24__::func_890(13, 0, Global_78127);
					__LIB_24__::func_890(14, 0, Global_78127);
					__LIB_24__::func_890(15, 0, Global_78127);
					__LIB_24__::func_890(16, 0, Global_78127);
					__LIB_24__::func_890(71, 0, Global_78127);
					__LIB_24__::func_890(72, 0, Global_78127);
					return;
				}
				else if (iParam0 == joaat("torsoDecal"))
				{
					if (iVar1 == 3)
					{
						__LIB_24__::func_890(73, 0, Global_78127);
						__LIB_24__::func_890(74, 0, Global_78127);
						__LIB_24__::func_890(75, 0, Global_78127);
						__LIB_24__::func_890(76, 0, Global_78127);
						__LIB_24__::func_890(77, 0, Global_78127);
						__LIB_24__::func_890(78, 0, Global_78127);
						__LIB_24__::func_890(79, 0, Global_78127);
						__LIB_24__::func_890(80, 0, Global_78127);
						__LIB_24__::func_890(81, 0, Global_78127);
						__LIB_24__::func_890(82, 0, Global_78127);
						__LIB_24__::func_890(83, 0, Global_78127);
						__LIB_24__::func_890(84, 0, Global_78127);
						__LIB_24__::func_890(85, 0, Global_78127);
						__LIB_24__::func_890(86, 0, Global_78127);
						__LIB_24__::func_890(90, 0, Global_78127);
						__LIB_24__::func_890(91, 0, Global_78127);
						__LIB_24__::func_890(124, 0, Global_78127);
						__LIB_24__::func_890(125, 0, Global_78127);
						__LIB_24__::func_890(87, 0, Global_78127);
						__LIB_24__::func_890(88, 0, Global_78127);
						__LIB_24__::func_890(89, 0, Global_78127);
						iVar3 = FILES::GET_NUM_TATTOO_SHOP_DLC_ITEMS(3);
						iVar2 = 0;
						while (iVar2 < iVar3)
						{
							if (FILES::GET_TATTOO_SHOP_DLC_ITEM_DATA(3, iVar2, &Var4))
							{
								if (Var4.f_6 == joaat("torsoDecal"))
								{
									__LIB_24__::func_890((129 + iVar2), 0, Global_78127);
								}
							}
							iVar2++;
						}
					}
					else
					{
						__LIB_24__::func_890(73, 0, Global_78127);
						__LIB_24__::func_890(74, 0, Global_78127);
						__LIB_24__::func_890(75, 0, Global_78127);
						__LIB_24__::func_890(76, 0, Global_78127);
						__LIB_24__::func_890(77, 0, Global_78127);
						__LIB_24__::func_890(78, 0, Global_78127);
						__LIB_24__::func_890(79, 0, Global_78127);
						__LIB_24__::func_890(80, 0, Global_78127);
						__LIB_24__::func_890(81, 0, Global_78127);
						__LIB_24__::func_890(82, 0, Global_78127);
						__LIB_24__::func_890(83, 0, Global_78127);
						__LIB_24__::func_890(84, 0, Global_78127);
						__LIB_24__::func_890(85, 0, Global_78127);
						__LIB_24__::func_890(92, 0, Global_78127);
						__LIB_24__::func_890(87, 0, Global_78127);
						__LIB_24__::func_890(88, 0, Global_78127);
						__LIB_24__::func_890(89, 0, Global_78127);
						iVar6 = FILES::GET_NUM_TATTOO_SHOP_DLC_ITEMS(4);
						iVar5 = 0;
						while (iVar5 < iVar6)
						{
							if (FILES::GET_TATTOO_SHOP_DLC_ITEM_DATA(4, iVar5, &Var7))
							{
								if (Var7.f_6 == joaat("torsoDecal"))
								{
									__LIB_24__::func_890((129 + iVar5), 0, Global_78127);
								}
							}
							iVar5++;
						}
					}
				}
				else if (iParam0 == joaat("hairOverlay"))
				{
					if (iVar1 == 3)
					{
						__LIB_24__::func_890(93, 0, Global_78127);
						__LIB_24__::func_890(94, 0, Global_78127);
						__LIB_24__::func_890(95, 0, Global_78127);
						__LIB_24__::func_890(96, 0, Global_78127);
						__LIB_24__::func_890(97, 0, Global_78127);
						__LIB_24__::func_890(98, 0, Global_78127);
						__LIB_24__::func_890(99, 0, Global_78127);
						__LIB_24__::func_890(100, 0, Global_78127);
						__LIB_24__::func_890(101, 0, Global_78127);
						__LIB_24__::func_890(102, 0, Global_78127);
						__LIB_24__::func_890(103, 0, Global_78127);
						__LIB_24__::func_890(104, 0, Global_78127);
						__LIB_24__::func_890(105, 0, Global_78127);
						__LIB_24__::func_890(106, 0, Global_78127);
						__LIB_24__::func_890(107, 0, Global_78127);
						__LIB_24__::func_890(108, 0, Global_78127);
						__LIB_24__::func_890(109, 0, Global_78127);
						__LIB_24__::func_890(110, 0, Global_78127);
						__LIB_24__::func_890(111, 0, Global_78127);
						__LIB_24__::func_890(112, 0, Global_78127);
						__LIB_24__::func_890(113, 0, Global_78127);
						__LIB_24__::func_890(114, 0, Global_78127);
						__LIB_24__::func_890(115, 0, Global_78127);
						__LIB_24__::func_890(116, 0, Global_78127);
						__LIB_24__::func_890(117, 0, Global_78127);
						__LIB_24__::func_890(123, 0, Global_78127);
						iVar9 = FILES::GET_NUM_TATTOO_SHOP_DLC_ITEMS(3);
						iVar8 = 0;
						while (iVar8 < iVar9)
						{
							if (FILES::GET_TATTOO_SHOP_DLC_ITEM_DATA(3, iVar8, &Var10))
							{
								if (Var10.f_6 == joaat("hairOverlay"))
								{
									__LIB_24__::func_890((129 + iVar8), 0, Global_78127);
								}
							}
							iVar8++;
						}
					}
					else
					{
						__LIB_24__::func_890(93, 0, Global_78127);
						__LIB_24__::func_890(94, 0, Global_78127);
						__LIB_24__::func_890(95, 0, Global_78127);
						__LIB_24__::func_890(96, 0, Global_78127);
						__LIB_24__::func_890(97, 0, Global_78127);
						__LIB_24__::func_890(98, 0, Global_78127);
						__LIB_24__::func_890(99, 0, Global_78127);
						__LIB_24__::func_890(100, 0, Global_78127);
						__LIB_24__::func_890(101, 0, Global_78127);
						__LIB_24__::func_890(102, 0, Global_78127);
						__LIB_24__::func_890(103, 0, Global_78127);
						__LIB_24__::func_890(104, 0, Global_78127);
						__LIB_24__::func_890(105, 0, Global_78127);
						__LIB_24__::func_890(106, 0, Global_78127);
						__LIB_24__::func_890(107, 0, Global_78127);
						__LIB_24__::func_890(108, 0, Global_78127);
						__LIB_24__::func_890(109, 0, Global_78127);
						__LIB_24__::func_890(110, 0, Global_78127);
						__LIB_24__::func_890(111, 0, Global_78127);
						__LIB_24__::func_890(112, 0, Global_78127);
						__LIB_24__::func_890(113, 0, Global_78127);
						__LIB_24__::func_890(114, 0, Global_78127);
						__LIB_24__::func_890(115, 0, Global_78127);
						__LIB_24__::func_890(116, 0, Global_78127);
						__LIB_24__::func_890(117, 0, Global_78127);
						__LIB_24__::func_890(118, 0, Global_78127);
						__LIB_24__::func_890(119, 0, Global_78127);
						__LIB_24__::func_890(120, 0, Global_78127);
						__LIB_24__::func_890(121, 0, Global_78127);
						__LIB_24__::func_890(122, 0, Global_78127);
						__LIB_24__::func_890(123, 0, Global_78127);
						iVar12 = FILES::GET_NUM_TATTOO_SHOP_DLC_ITEMS(4);
						iVar11 = 0;
						while (iVar11 < iVar12)
						{
							if (FILES::GET_TATTOO_SHOP_DLC_ITEM_DATA(4, iVar11, &Var13))
							{
								if (Var13.f_6 == joaat("hairOverlay"))
								{
									__LIB_24__::func_890((129 + iVar11), 0, Global_78127);
								}
							}
							iVar11++;
						}
					}
					return;
				}
			}
			iVar14 = 0;
			while (iVar14 < 127)
			{
				if (__LIB_0__::func_445(&Var0, iVar14, iVar1, iParam1, -1))
				{
					if (Var0.f_8 == iParam0)
					{
						__LIB_24__::func_890(Var0.f_11, 0, Global_78127);
					}
				}
				iVar14++;
			}
		}
	}
}

int func_193(int iParam0, int iParam1)//Position - 0x1B36F5
{
	int iVar0;
	iVar0 = __LIB_24__::func_891();
	if (iVar0 != -1)
	{
		if (!__LIB_5__::func_175(iParam0, iParam1, iVar0))
		{
			__LIB_24__::func_890(iVar0, 0, Global_78127);
			return 1;
		}
	}
	return 0;
}

void func_194(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x21D5D8
{
	int iVar0;
	char* sVar1;
	__LIB_18__::func_404("cgsMBS", iParam3, iParam1, iParam0, bParam4, 0, -2340845);
	iParam3->f_1 = __LIB_18__::func_608("cgsWT", iParam1, &(iParam0->f_1), bParam4, 0, 0);
	iParam3->f_1.f_2 = __LIB_18__::func_608("cgsPT", iParam1, &(iParam0->f_2), bParam4, 0, 0);
	__LIB_18__::func_404("cgsTBS", &(iParam3->f_1.f_1), iParam1, &(iParam0->f_3), bParam4, 0, -2340845);
	iParam3->f_1.f_3 = __LIB_18__::func_608("cgsCT", iParam1, &(iParam0->f_4), bParam4, 0, 0);
	iParam3->f_1.f_7 = __LIB_18__::func_608("cgsAT", iParam1, &(iParam0->f_5), bParam4, 0, 0);
	iParam3->f_1.f_4 = __LIB_18__::func_608("cgsSC", iParam1, &(iParam0->f_6), bParam4, 1, 1);
	__LIB_18__::func_404("cgsST", &(iParam3->f_1.f_5), iParam1, &(iParam0->f_7), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgsTCL", &(iParam3->f_1.f_6), iParam1, &(iParam0->f_8), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgscSK", &(iParam3->f_9), iParam1, &(iParam0->f_9), bParam4, 1, -2340845);
	__LIB_18__::func_404("cgscSH", &(iParam3->f_9.f_1), iParam1, &(iParam0->f_10), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgscSM", &(iParam3->f_9.f_2), iParam1, &(iParam0->f_11), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgscSV", &(iParam3->f_9.f_3), iParam1, &(iParam0->f_12), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgscPF", &(iParam3->f_9.f_4), iParam1, &(iParam0->f_13), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgscPL", &(iParam3->f_9.f_5), iParam1, &(iParam0->f_14), bParam4, 0, -2340845);
	iVar0 = 0;
	while (iVar0 <= (Global_4718592.f_593 - 1))
	{
		__LIB_22__::func_483(&sVar1, "cgscSST_", iVar0, -1);
		__LIB_18__::func_404(&sVar1, &(iParam3->f_9.f_6[iVar0]), iParam1, &(iParam0->f_15[iVar0]), bParam4, 0, -2340845);
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 <= 8)
	{
		if (iVar0 != 5)
		{
			__LIB_22__::func_483(&sVar1, "cgscSSWG_", iVar0, -1);
			__LIB_18__::func_404(&sVar1, &(iParam3->f_9.f_11[iVar0]), iParam1, &(iParam0->f_20[iVar0]), bParam4, 0, -2340845);
		}
		iVar0++;
	}
	__LIB_18__::func_404("cgscSF", &(iParam3->f_9.f_21), iParam1, &(iParam0->f_30), bParam4, -1, -2340845);
	__LIB_18__::func_404("cgscSS", &(iParam3->f_9.f_22), iParam1, &(iParam0->f_31), bParam4, -1, -2340845);
	__LIB_18__::func_404("cgscSB", &(iParam3->f_9.f_23), iParam1, &(iParam0->f_32), bParam4, -1, -2340845);
	iVar0 = 0;
	while (iVar0 <= 8)
	{
		__LIB_22__::func_483(&sVar1, "cgsWDM_", iVar0, -1);
		__LIB_18__::func_404(&sVar1, &(iParam3->f_238[iVar0]), iParam1, &(iParam0->f_33[iVar0]), bParam4, 100, -2340845);
		iVar0++;
	}
	iParam3->f_248 = __LIB_18__::func_608("cgswIA", iParam1, &(iParam0->f_43), bParam4, -1, -1);
	__LIB_27__::func_794(iParam2, iParam3, bParam4);
	__LIB_18__::func_404("cgsHS", &(iParam3->f_249), iParam1, &(iParam0->f_239), bParam4, 100, -2340845);
	__LIB_18__::func_404("cgsSH", &(iParam3->f_250), iParam1, &(iParam0->f_240), bParam4, 100, -2340845);
	iParam3->f_251 = __LIB_18__::func_608("cgsHMR", iParam1, &(iParam0->f_241), bParam4, 1, 1);
	iParam3->f_252 = __LIB_18__::func_608("cgsHRS", iParam1, &(iParam0->f_242), bParam4, 2, 2);
	iParam3->f_253 = __LIB_18__::func_608("cgsER", iParam1, &(iParam0->f_243), bParam4, 0, 0);
	iParam3->f_33 = __LIB_18__::func_608("cgsBT", iParam1, &(iParam0->f_244), bParam4, 0, 0);
	__LIB_18__::func_404("cgsBCT", &(iParam3->f_33.f_1), iParam1, &(iParam0->f_245), bParam4, 9, -2340845);
	iParam3->f_35 = __LIB_18__::func_608("cgsMR", iParam1, &(iParam0->f_246), bParam4, 0, 0);
	iParam3->f_35.f_1 = __LIB_18__::func_608("cgsMS", iParam1, &(iParam0->f_247), bParam4, 1, 1);
	__LIB_18__::func_404("cgsONGH", &(iParam3->f_37.f_1), iParam1, &(iParam0->f_248), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgsONGR", &(iParam3->f_37.f_2), iParam1, &(iParam0->f_249), bParam4, 0, -2340845);
	iParam3->f_37.f_4 = __LIB_18__::func_608("cgsONAT", iParam1, &(iParam0->f_250), bParam4, 1, 1);
	__LIB_18__::func_404("cgsONGA", &(iParam3->f_37.f_3), iParam1, &(iParam0->f_251), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgsONAQ", &(iParam3->f_37.f_5), iParam1, &(iParam0->f_252), bParam4, 1, -2340845);
	__LIB_18__::func_404("cgsONHGH", &(iParam3->f_43.f_1), iParam1, &(iParam0->f_253), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgsONHGR", &(iParam3->f_43.f_2), iParam1, &(iParam0->f_254), bParam4, 0, -2340845);
	iParam3->f_43.f_4 = __LIB_18__::func_608("cgsONHAT", iParam1, &(iParam0->f_255), bParam4, 1, 1);
	__LIB_18__::func_404("cgsONHGA", &(iParam3->f_43.f_3), iParam1, &(iParam0->f_256), bParam4, 0, -2340845);
	__LIB_18__::func_404("cgsONHAQ", &(iParam3->f_43.f_5), iParam1, &(iParam0->f_257), bParam4, 1, -2340845);
	iParam3->f_254 = __LIB_18__::func_608("cgsspv", iParam1, &(iParam0->f_258), bParam4, 0, 0);
	__LIB_18__::func_404("cgsBOI", &(iParam3->f_255), iParam1, &(iParam0->f_259), bParam4, -1, -2340845);
}

void func_195(int iParam0, bool bParam1, int iParam2)//Position - 0x246630
{
	if (bParam1)
	{
		if (!__LIB_25__::func_148(iParam0))
		{
			__LIB_25__::func_149(iParam0, 1, iParam2);
		}
	}
	else if (__LIB_25__::func_148(iParam0))
	{
		__LIB_25__::func_149(iParam0, 0, iParam2);
	}
}

int func_196()//Position - 0x16F6B
{
	if (__LIB_25__::func_115())
	{
		if (Global_2715699.f_2846.f_41)
		{
			return 1;
		}
	}
	return 0;
}

int func_197(var uParam0, bool bParam1, var uParam2, var uParam3, char* sParam4, char* sParam5, bool bParam6)//Position - 0x22B1D
{
	struct<3> Var0;
	if (Global_4718592 == 1)
	{
		if (__LIB_0__::func_998() || __LIB_18__::func_230(Global_4718592, Global_4718592.f_2))
		{
			StringCopy(&Var0, "FMMC_ENDMTYPEK" /* GXT: Your King of the Hill */, 24);
		}
		else
		{
			StringCopy(&Var0, "FMMC_ENDMTYPED" /* GXT: Your Deathmatch */, 24);
		}
	}
	else if (Global_4718592 == 2 || Global_4718592 == 32)
	{
		StringCopy(&Var0, "FMMC_ENDMTYPER" /* GXT: Your Race */, 24);
	}
	else if (Global_4718592 == 0 && Global_4718592.f_2 == 6)
	{
		StringCopy(&Var0, "FMMC_ENDMTYPEC" /* GXT: Your Capture */, 24);
	}
	else if (Global_4718592 == 0 && Global_4718592.f_2 == 5)
	{
		StringCopy(&Var0, "FMMC_ENDMTYPEL" /* GXT: Your Last Team Standing */, 24);
	}
	else if (__LIB_1__::func_308())
	{
		StringCopy(&Var0, "FMMC_ENDMTYPES" /* GXT: Your Survival */, 24);
	}
	else
	{
		StringCopy(&Var0, "FMMC_ENDMTYPEM" /* GXT: Your Mission */, 24);
	}
	switch (uParam0->f_9168)
	{
		case 0:
			__LIB_1__::func_289(&(uParam0->f_9168), 1);
			break;
		case 1:
			uParam0->f_9179 = 0;
			__LIB_1__::func_289(&(uParam0->f_9168), 2);
			break;
		case 9:
			HUD::SET_WARNING_MESSAGE("FMMC_ENDSUBMSG", 16384, 0, false, -1, 0, 0, true, 0);
			if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
			{
				return 1;
			}
			break;
		case 2:
			if (uParam3 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
			{
				if (__LIB_24__::func_886(uParam0, sParam4, sParam5, &Var0, bParam1, bParam6))
				{
					if (uParam0->f_9179 == 1)
					{
						return 1;
					}
					else
					{
						__LIB_2__::func_289();
						__LIB_1__::func_289(&(uParam0->f_9168), 3);
					}
				}
			}
			else if (uParam2 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
			{
				if (__LIB_27__::func_798(uParam0, sParam4, sParam5, &Var0))
				{
					if (uParam0->f_9179 == 1)
					{
						return 1;
					}
					else
					{
						__LIB_2__::func_289();
						__LIB_1__::func_289(&(uParam0->f_9168), 3);
					}
				}
			}
			else
			{
				if (uParam0->f_9166 != 5)
				{
					if (bParam1)
					{
						HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDPBWT" /* GXT: Publishing */, "FMMC_ENDVER2P" /* GXT: Publishing ~a~ '~a~'. */, 134217728, "", false, -1, 2, &Var0, sParam5, true, 0);
					}
					else
					{
						StringConCat(&Var0, "2", 24);
						HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDSVWT" /* GXT: Saving */, "FMMC_ENDVER2" /* GXT: Saving ~a~ '~a~'. */, 134217728, "", false, -1, 2, &Var0, sParam5, true, 0);
					}
				}
				if (__LIB_25__::func_118(uParam0, __LIB_22__::func_482(), bParam1))
				{
					__LIB_2__::func_289();
					__LIB_1__::func_289(&(uParam0->f_9168), 3);
				}
			}
			break;
		case 3:
			if (uParam0->f_20435)
			{
				if (uParam3 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
				{
					if (bParam1)
					{
						HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDPUB1" /* GXT: Published */, "FMMC_ENDPUB2" /* GXT: ~a~ '~a~' is available on the Rockstar Games Social Club website. */, 2, "", false, -1, 2, &Var0, &(Global_4718592.f_116531), true, 0);
					}
					else
					{
						HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDOVERC" /* GXT: OVERWRITTEN */, "FMMC_ENDOVERC1" /* GXT: ~a~ '~a~' has been overwritten. */, 2, "", false, -1, 2, &Var0, &(Global_4718592.f_116531), true, 0);
					}
				}
				else if (uParam2 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDVERC" /* GXT: VERSIONED */, "FMMC_ENDVERC1" /* GXT: A new version of '~a~' has been published. */, 2, "", false, -1, 1, &(Global_4718592.f_116531), 0, true, 0);
				}
				else if (bParam1)
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDPUB1" /* GXT: Published */, "FMMC_ENDPUB2" /* GXT: ~a~ '~a~' is available on the Rockstar Games Social Club website. */, 2, "", false, -1, 2, &Var0, &(Global_4718592.f_116531), true, 0);
				}
				else
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("FMMC_ENDPUBS" /* GXT: Saved */, "FMMC_ENDPUBS1" /* GXT: ~a~ '~a~' has been saved. */, 2, "", false, -1, 2, &Var0, &(Global_4718592.f_116531), true, 0);
				}
				if (PAD::IS_CONTROL_JUST_RELEASED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
				{
					if (!__LIB_17__::func_51(0) && !__LIB_17__::func_55(0))
					{
						__LIB_1__::func_289(&(uParam0->f_9168), 9);
					}
					else
					{
						return 1;
					}
				}
			}
			else
			{
				return 1;
			}
			break;
		case 4:
			return 1;
			break;
	}
	return 0;
}

void func_198(var uParam0, int iParam1, int iParam2)//Position - 0x546A0
{
	bool bVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	var uVar4;
	var uVar5;
	var uVar6;
	int iVar7;
	struct<450> Var8;
	float fVar9;
	bool bVar10;
	int iVar11;
	char* sVar12;
	Var8.f_4 = 1120403456;
	Var8.f_7 = -1;
	Var8.f_13 = 4;
	Var8.f_18 = 4;
	Var8.f_23 = -1;
	Var8.f_24 = -1;
	Var8.f_25 = -1;
	Var8.f_26 = -1;
	Var8.f_27 = -1;
	Var8.f_28 = -1;
	Var8.f_29 = -1;
	Var8.f_30 = -1082130432;
	Var8.f_32 = 100;
	Var8.f_33 = 1148862464;
	Var8.f_35 = -1;
	Var8.f_38 = -1;
	Var8.f_39 = 1148862464;
	Var8.f_40 = 1148862464;
	Var8.f_41 = 1148862464;
	Var8.f_42 = 1148862464;
	Var8.f_43 = 3;
	Var8.f_47 = 1069547520;
	Var8.f_49 = 5;
	Var8.f_51 = 3;
	Var8.f_55 = -1;
	Var8.f_56 = -1;
	Var8.f_63 = 20;
	Var8.f_85 = 20;
	Var8.f_117 = -1;
	Var8.f_118 = 10;
	Var8.f_119 = 17;
	Var8.f_137.f_5 = 255;
	Var8.f_137.f_6 = 1065353216;
	Var8.f_137.f_12 = -1;
	Var8.f_137.f_13 = 4;
	Var8.f_137.f_30 = -1;
	Var8.f_137.f_31 = -1;
	Var8.f_137.f_34 = 75;
	Var8.f_137.f_34.f_1 = 1120403456;
	Var8.f_137.f_34.f_2 = 1148846080;
	Var8.f_174 = -1;
	Var8.f_175 = -1;
	Var8.f_177 = -1;
	Var8.f_178 = 4;
	Var8.f_183 = -1;
	Var8.f_185 = -1;
	Var8.f_186 = -1;
	Var8.f_187 = -1;
	Var8.f_188 = -1;
	Var8.f_189 = -1;
	Var8.f_190 = -1;
	Var8.f_194 = -1;
	Var8.f_195 = -1;
	Var8.f_196 = -1;
	Var8.f_197 = -1;
	Var8.f_198 = -1;
	Var8.f_199 = -1;
	Var8.f_200 = -1;
	Var8.f_201 = -1;
	Var8.f_202 = -1;
	Var8.f_203 = -1;
	Var8.f_204 = -1;
	Var8.f_205 = 1;
	Var8.f_206 = 4;
	Var8.f_211 = 4;
	Var8.f_216.f_3 = -1;
	Var8.f_216.f_4 = -1;
	Var8.f_216.f_5 = -1;
	Var8.f_216.f_6 = -1;
	Var8.f_216.f_7 = -1;
	Var8.f_224 = -1;
	Var8.f_225 = -1;
	Var8.f_226 = -1;
	Var8.f_227 = 4;
	Var8.f_232 = 1120403456;
	Var8.f_233 = -1;
	Var8.f_234 = -1;
	Var8.f_237 = 4;
	Var8.f_250 = 4;
	Var8.f_255 = 4;
	Var8.f_265 = -1;
	Var8.f_271 = -1;
	Var8.f_272 = -1;
	Var8.f_273 = 3;
	Var8.f_277 = -1;
	Var8.f_279 = 4;
	Var8.f_284 = 2;
	Var8.f_285 = -1;
	Var8.f_292 = 3;
	Var8.f_293 = 3;
	Var8.f_294 = 3000;
	Var8.f_295 = -1;
	Var8.f_297 = 1065353216;
	Var8.f_298 = -1082130432;
	Var8.f_300 = -1;
	Var8.f_301 = -1;
	Var8.f_303 = -1;
	Var8.f_304 = 10;
	Var8.f_305 = -1;
	Var8.f_308 = -1;
	Var8.f_309 = -1;
	Var8.f_310 = -1;
	Var8.f_311 = -1;
	Var8.f_312 = 1;
	Var8.f_315 = 6000;
	Var8.f_316 = 1083179008;
	Var8.f_318 = -1;
	Var8.f_319 = -1;
	Var8.f_320 = -1;
	Var8.f_328 = -1;
	Var8.f_329 = -1;
	Var8.f_332 = -1;
	Var8.f_333 = -1;
	Var8.f_334 = 12;
	Var8.f_334.f_37 = 12;
	Var8.f_334.f_51 = -1;
	Var8.f_386 = -1;
	Var8.f_387 = -1;
	Var8.f_389 = -1;
	Var8.f_393 = -1;
	Var8.f_395 = -1;
	Var8.f_395.f_1 = -1;
	Var8.f_395.f_2 = -1;
	Var8.f_401 = 1;
	Var8.f_404 = -1;
	Var8.f_405 = -1;
	Var8.f_406.f_1 = -1;
	Var8.f_406.f_2 = -1;
	Var8.f_410 = -1;
	Var8.f_411 = -1;
	Var8.f_412 = -1;
	Var8.f_413 = -1;
	Var8.f_414 = -1;
	Var8.f_415 = -1;
	Var8.f_416 = 1065353216;
	Var8.f_418.f_2 = 1;
	Var8.f_422 = -1;
	Var8.f_423 = -1;
	Var8.f_424 = -1;
	Var8.f_424.f_1 = -1;
	Var8.f_424.f_2 = 1;
	Var8.f_429 = -1;
	Var8.f_430 = -1;
	Var8.f_431 = -1;
	Var8.f_432 = -1;
	Var8.f_433.f_3 = -1;
	Var8.f_439 = -1;
	Var8.f_440 = -1;
	Var8.f_441 = -1;
	Var8.f_442 = -1;
	Var8.f_443 = -1;
	Var8.f_444 = -1;
	Var8.f_445 = 4;
	HUD::GET_HUD_COLOUR(11, &uVar3, &uVar4, &uVar5, &uVar6);
	if (iParam2 == 1)
	{
		fVar9 = 1.25f;
		bVar10 = true;
	}
	else
	{
		fVar9 = 1f;
		bVar10 = false;
	}
	bVar0 = iParam1 + 1;
	while (bVar0 <= (Global_4980736.f_78574 - 1))
	{
		if (HUD::DOES_BLIP_EXIST(uParam0->f_35[bVar0]))
		{
			HUD::REMOVE_BLIP(&(uParam0->f_35[bVar0]));
		}
		if (HUD::DOES_BLIP_EXIST(uParam0->f_35[(bVar0 - 1)]))
		{
			HUD::REMOVE_BLIP(&(uParam0->f_35[(bVar0 - 1)]));
		}
		if (BitTest(Global_4980736.f_78577, bVar0))
		{
			MISC::SET_BIT(&(Global_4980736.f_78577), (bVar0 - 1));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_4980736.f_78577), (bVar0 - 1));
		}
		iVar7 = 0;
		while (iVar7 <= 3)
		{
			if (BitTest(Global_4718592.f_93371[iVar7], bVar0))
			{
				MISC::SET_BIT(&(Global_4718592.f_93371[iVar7]), (bVar0 - 1));
			}
			else
			{
				MISC::CLEAR_BIT(&(Global_4718592.f_93371[iVar7]), (bVar0 - 1));
			}
			iVar7++;
		}
		uParam0->f_462[(bVar0 - 1)] = uParam0->f_462[bVar0];
		uParam0->f_1[(bVar0 - 1)] = uParam0->f_1[bVar0];
		uParam0->f_35[(bVar0 - 1)] = uParam0->f_35[bVar0];
		Global_4980736.f_78578[(bVar0 - 1) /*450*/] = { Global_4980736.f_78578[bVar0 /*450*/] };
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_1[(bVar0 - 1)]))
		{
			iVar11 = -1;
			__LIB_25__::func_119((bVar0 - 1), &iVar11, &fVar9);
			sVar12 = "FMMC_B_10";
			if (__LIB_1__::func_308())
			{
				sVar12 = "SC_BLP_VSP";
				iVar11 = -1;
			}
			__LIB_23__::func_310(&(uParam0->f_35[(bVar0 - 1)]), ENTITY::GET_ENTITY_COORDS(uParam0->f_1[(bVar0 - 1)], false), 11, sVar12, fVar9, bVar10, 0, iVar11);
		}
		uParam0->f_1[bVar0] = 0;
		uParam0->f_35[bVar0] = 0;
		Global_4980736.f_78578[bVar0 /*450*/] = { Var8 };
		iVar7 = 0;
		while (iVar7 <= 3)
		{
			Global_4980736.f_78578[bVar0 /*450*/].f_13[iVar7] = 0;
			Global_4980736.f_78578[bVar0 /*450*/].f_18[iVar7] = 99999;
			MISC::CLEAR_BIT(&(Global_4718592.f_93371[iVar7]), bVar0);
			iVar7++;
		}
		iVar1 = 0;
		while (iVar1 <= (Global_4718592.f_593 - 1))
		{
			iVar2 = 0;
			while (iVar2 <= (Global_4718592.f_658[iVar1 /*22957*/].f_59 - 1))
			{
				Global_4718592.f_658[iVar1 /*22957*/].f_8177[iVar2 /*33*/][(bVar0 - 1)] = Global_4718592.f_658[iVar1 /*22957*/].f_8177[iVar2 /*33*/][bVar0];
				iVar2++;
			}
			iVar1++;
		}
		if (HUD::DOES_BLIP_EXIST(uParam0->f_35[bVar0]))
		{
			HUD::REMOVE_BLIP(&(uParam0->f_35[bVar0]));
		}
		MISC::CLEAR_BIT(&(Global_4980736.f_78577), bVar0);
		bVar0++;
	}
	__LIB_22__::func_562(iParam1, 2);
	__LIB_22__::func_561();
}

void func_199(int iParam0, bool bParam1)//Position - 0x5D445
{
	if (!INTERIOR::IS_VALID_INTERIOR(*iParam0))
	{
		return;
	}
	__LIB_18__::func_575(bParam1, iParam0);
	__LIB_19__::func_60(iParam0, bParam1);
	__LIB_24__::func_366(iParam0, bParam1);
	__LIB_25__::func_610(iParam0, bParam1, "Set_Pit_Fence_Closed", 4, 7);
	__LIB_25__::func_610(iParam0, bParam1, "Set_Pit_Fence_Demolition", 4, 8);
	__LIB_25__::func_610(iParam0, bParam1, "Set_Pit_Fence_Oval", 4, 9);
	__LIB_25__::func_610(iParam0, bParam1, "set_pit_fence_ovala", 4, 15);
	__LIB_25__::func_610(iParam0, bParam1, "set_pit_fence_ovalb", 4, 17);
	__LIB_25__::func_610(iParam0, bParam1, "Set_Pit_Fence_Wall", 4, 22);
	__LIB_25__::func_610(iParam0, bParam1, "set_wall_no_pit", 4, 13);
	__LIB_25__::func_610(iParam0, bParam1, "set_centreline_dystopian_05", 4, 23);
	__LIB_25__::func_610(iParam0, bParam1, "set_centreline_scifi_05", 4, 24);
	__LIB_25__::func_610(iParam0, bParam1, "Set_CentreLine_Wasteland_05", 4, 25);
	__LIB_18__::func_570(iParam0, "Set_Turrets", (bParam1 && Global_4718592.f_162543 == 1));
	__LIB_18__::func_570(iParam0, "set_turrets_scifi", (bParam1 && Global_4718592.f_162543 == 2));
	__LIB_18__::func_570(iParam0, "set_turrets_wasteland", (bParam1 && Global_4718592.f_162543 == 3));
	__LIB_18__::func_569(bParam1, iParam0);
	INTERIOR::REFRESH_INTERIOR(*iParam0);
}

char* func_200(int iParam0, bool bParam1)//Position - 0x6E4DE
{
	if (bParam1)
	{
		return __LIB_27__::func_776(iParam0 + 136);
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				return "FMMC_WPV0";
			case 1:
				return "FMMC_WPV1";
			case 2:
				return "FMMC_WPV2";
			case 3:
				return "FMMC_WPV3";
			case 4:
				return "FMMC_WPV4";
			case 7:
				return "FMMC_WPV5";
			case 8:
				return "FMMC_WPV6";
			case 9:
				return "FMMC_WPV7";
			case 10:
				return "FMMC_WPV8";
			case 11:
				return "FMMC_WPV9";
			case 12:
				return "FMMC_WPV10";
			case 13:
				return "FMMC_WPV11";
			case 14:
				return "FMMC_WPV12";
			case 5:
				return "FMMC_WPV13";
			case 6:
				return "FMMC_WPV14";
			case 15:
				return "FMMC_WPV16";
			case 16:
				return "FMMC_WPV17";
			case 17:
				return "FMMC_WPV18";
			}
		default:
	}
	return "";
}

void func_201(int iParam0, int iParam1, bool bParam2)//Position - 0xE641C
{
	int iVar0;
	int iVar1;
	ENTITY::SET_ENTITY_COORDS(iParam0, Global_4980736.f_36356[iParam1 /*134*/], true, false, false, true);
	if (!__LIB_0__::func_86(Global_4980736.f_36356[iParam1 /*134*/].f_3) || __LIB_23__::func_546(Global_4980736.f_36356[iParam1 /*134*/].f_7))
	{
		ENTITY::SET_ENTITY_ROTATION(iParam0, Global_4980736.f_36356[iParam1 /*134*/].f_3, 2, true);
	}
	else
	{
		ENTITY::SET_ENTITY_HEADING(iParam0, Global_4980736.f_36356[iParam1 /*134*/].f_6);
	}
	if (ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("prop_ld_alarm_01") || bParam2 == 1)
	{
		ENTITY::SET_ENTITY_VISIBLE(iParam0, true, false);
	}
	else
	{
		ENTITY::SET_ENTITY_VISIBLE(iParam0, false, false);
	}
	__LIB_23__::func_314(iParam1, iParam0);
	__LIB_19__::func_146(iParam1, iParam0, bParam2);
	MISC::CLEAR_BIT(&(Global_4980736.f_36356[iParam1 /*134*/].f_21), 25);
	if (!__LIB_22__::func_275(iParam1))
	{
		OBJECT::SET_OBJECT_TARGETTABLE(iParam0, false);
		ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
		if (!__LIB_19__::func_141(ENTITY::GET_ENTITY_MODEL(iParam0)) && !__LIB_19__::func_140(ENTITY::GET_ENTITY_MODEL(iParam0)))
		{
			if (__LIB_23__::func_721(iParam0))
			{
				ENTITY::SET_ENTITY_PROOFS(iParam0, true, true, true, true, true, false, false, false);
				ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
				OBJECT::SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(iParam0, true);
			}
		}
	}
	else
	{
		OBJECT::SET_PROJECTILES_SHOULD_EXPLODE_ON_CONTACT(iParam0, 1);
	}
	iVar0 = ENTITY::GET_ENTITY_LOD_DIST(iParam0);
	iVar1 = 150;
	if (__LIB_19__::func_139(Global_4980736.f_36356[iParam1 /*134*/].f_7) != -1 && __LIB_19__::func_139(Global_4980736.f_36356[iParam1 /*134*/].f_7) > 150)
	{
		iVar1 = __LIB_19__::func_139(Global_4980736.f_36356[iParam1 /*134*/].f_7);
	}
	if (iVar0 <= iVar1)
	{
		ENTITY::SET_ENTITY_LOD_DIST(iParam0, iVar1);
	}
	ENTITY::SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(iParam0, true);
	if (!bParam2)
	{
		if (Global_262145.f_3957 /* Tunable: ENABLE_AMERICAN_FLAG_STUNT_RACES */)
		{
			Global_4980736.f_36356[iParam1 /*134*/].f_27 = 0;
		}
		if ((Global_4718592.f_107227 == 6 || Global_4718592.f_107227 == 18) && !BitTest(Global_4718592.f_162497, 12))
		{
			INTERIOR::CLEAR_ROOM_FOR_ENTITY(iParam0);
			ENTITY::SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(iParam0, true);
			INTERIOR::SET_IS_EXTERIOR_ONLY(iParam0, true);
		}
	}
	if (__LIB_23__::func_720(Global_4980736.f_36356[iParam1 /*134*/].f_7) && __LIB_23__::func_728(Global_4980736.f_36356[iParam1 /*134*/].f_7, Global_4980736.f_36356[iParam1 /*134*/].f_27, 0))
	{
		OBJECT::SET_OBJECT_TINT_INDEX(iParam0, Global_4980736.f_36356[iParam1 /*134*/].f_27);
		if (!BitTest(Global_4718592.f_162497, 12))
		{
			INTERIOR::SET_IS_EXTERIOR_ONLY(iParam0, true);
		}
	}
	if (Global_4980736.f_36356[iParam1 /*134*/].f_59 > 0)
	{
		ENTITY::SET_ENTITY_LOD_DIST(iParam0, Global_4980736.f_36356[iParam1 /*134*/].f_59);
	}
	if (__LIB_0__::func_625())
	{
		ENTITY::SET_ENTITY_LOD_DIST(iParam0, 750);
	}
	if (__LIB_19__::func_137(iParam1))
	{
		ENTITY::SET_ENTITY_PROOFS(iParam0, true, true, false, true, true, true, false, false);
	}
	if (__LIB_19__::func_136(ENTITY::GET_ENTITY_MODEL(iParam0)) && BitTest(Global_4980736.f_36356[iParam1 /*134*/].f_22, 13))
	{
		if (NETWORK::NETWORK_IS_SESSION_ACTIVE())
		{
			__LIB_19__::func_135(iParam0, Global_4980736.f_36356[iParam1 /*134*/].f_87);
		}
	}
	if (__LIB_19__::func_134(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
		ENTITY::FREEZE_ENTITY_POSITION(iParam0, false);
		OBJECT::SET_OBJECT_IS_A_PRESSURE_PLATE(iParam0, true);
	}
	if (BitTest(Global_4980736.f_36356[iParam1 /*134*/].f_21, 9))
	{
		ENTITY::SET_ENTITY_VISIBLE(iParam0, false, false);
	}
}

void func_202(var uParam0, int* iParam1, var uParam2, var uParam3, var uParam4, int iParam5, int* iParam6)//Position - 0xF349F
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	struct<3> Var7;
	struct<3> Var8;
	bool bVar9;
	uParam3->f_534 = 6;
	if (!__LIB_19__::func_221(&(uParam3->f_551), 6))
	{
		if ((ENTITY::DOES_ENTITY_EXIST(uParam0->f_2) && !PED::IS_PED_INJURED(uParam0->f_2)) || iParam1->f_550 == 0)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[0];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
				*iParam5++;
				if (iParam1->f_551 == -1)
				{
					iVar0 = Global_4980736.f_94384;
				}
				else
				{
					iVar0 = iParam1->f_551;
				}
				if (iParam1->f_271 == 173)
				{
					if (__LIB_22__::func_607(iParam1) == 18 && Global_4980736.f_94390[iVar0 /*1004*/].f_524 != 0)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_524), IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_524), IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_524), 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
				}
				else if (iParam1->f_271 == 573)
				{
					if (__LIB_22__::func_607(iParam1) == 0 && iParam1->f_2550 != 0)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_2550), IntToFloat(iParam1->f_2550), IntToFloat(iParam1->f_2550), 255, 128, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
					else if ((__LIB_22__::func_607(iParam1) == 1 || __LIB_22__::func_607(iParam1) == 2) || __LIB_22__::func_607(iParam1) == 3)
					{
						__LIB_27__::func_789(uParam3, uParam2, &(iParam1->f_2558), &(iParam1->f_2561), &(iParam1->f_2564), &Global_1835476, &Global_1835477, __LIB_22__::func_607(iParam1), 0f, 1120403456, 1065353216);
					}
				}
				else if (iParam1->f_271 == 528)
				{
					if (iParam1->f_1958 != 0 && iParam1->f_1959 != -1)
					{
						Var2 = { __LIB_23__::func_212(iParam1->f_1958, iParam1->f_1959) };
						if (iParam1->f_1960 > 0)
						{
							Var3 = { Var2 };
							if (__LIB_0__::func_86(Var3))
							{
								Var3 = { uParam3->f_3 };
							}
							__LIB_22__::func_756(&(iParam1->f_733), 28, Var3, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1960), IntToFloat(iParam1->f_1960), IntToFloat(iParam1->f_1960), 229, 0, 255, 70, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
						}
						if (!__LIB_0__::func_86(Var2))
						{
							__LIB_22__::func_756(&(iParam1->f_733), 28, Var2, 0f, 0f, 0f, 0f, 0f, 0f, 2f, 2f, 2f, 147, 247, 17, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
						}
					}
				}
				else if (iParam1->f_271 == 529)
				{
				}
				else if (iParam1->f_271 == 533)
				{
				}
				else if (iParam1->f_271 == 539)
				{
				}
				else if (iParam1->f_271 == 540)
				{
				}
				else if (iParam1->f_271 == 542)
				{
				}
				else if (iParam1->f_271 == 543)
				{
				}
				else if (iParam1->f_271 == 541)
				{
				}
				else if (iParam1->f_271 == 535)
				{
				}
				else if (iParam1->f_271 == 534)
				{
				}
				else if (iParam1->f_271 == 544)
				{
				}
				else if (iParam1->f_271 == 545)
				{
				}
				else if (iParam1->f_271 == 546)
				{
				}
				else if (iParam1->f_271 == 547)
				{
				}
				else if (iParam1->f_271 == 548)
				{
				}
				else if (iParam1->f_271 == 549)
				{
				}
				else if (iParam1->f_271 == 538)
				{
				}
				else if (iParam1->f_271 == 536)
				{
				}
				else if (iParam1->f_271 == 557)
				{
				}
				else if (iParam1->f_271 == 553)
				{
				}
				else if (iParam1->f_271 == 554)
				{
				}
				else if (iParam1->f_271 == 555)
				{
				}
				else if (iParam1->f_271 == 556)
				{
				}
				else if (iParam1->f_271 == 531)
				{
				}
				else if (iParam1->f_271 == 530)
				{
				}
				else if (iParam1->f_271 == 550)
				{
				}
				else if (iParam1->f_271 == 551)
				{
				}
				else if (iParam1->f_271 == 552)
				{
				}
				else if (iParam1->f_271 == 559)
				{
				}
				else if (iParam1->f_271 == 176)
				{
					if (__LIB_22__::func_607(iParam1) == 4)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_590), IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_590), IntToFloat(Global_4980736.f_94390[iVar0 /*1004*/].f_590), 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
					else if ((__LIB_22__::func_607(iParam1) == 5 || __LIB_22__::func_607(iParam1) == 6) || __LIB_22__::func_607(iParam1) == 7)
					{
						if (Global_4980736.f_94390[iVar0 /*1004*/].f_588 == 3)
						{
							__LIB_27__::func_814(uParam3, uParam2, &(iParam1->f_2551), &(iParam1->f_2554), &(iParam1->f_2557), &Global_1835476, &Global_1835477, __LIB_22__::func_607(iParam1), 1065353216, 1120403456, 1065353216);
						}
					}
				}
				else if (iParam1->f_271 == 135 && __LIB_22__::func_607(iParam1) == 1)
				{
					Var4 = { uParam3->f_3 };
					if (!__LIB_0__::func_86(iParam1->f_2671))
					{
						Var4 = { iParam1->f_2671 };
					}
					__LIB_22__::func_756(&(iParam1->f_733), 28, Var4, 0f, 0f, 0f, 0f, 0f, 0f, iParam1->f_1073, iParam1->f_1073, iParam1->f_1073, 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
				}
				else if (iParam1->f_271 == 702)
				{
					Var5 = { uParam3->f_3 };
					if (!__LIB_0__::func_86(iParam1->f_2671))
					{
						Var5 = { iParam1->f_2671 };
					}
					if (__LIB_22__::func_607(iParam1) == 0)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, Var5, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
					else if (__LIB_22__::func_607(iParam1) == 1)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, Var5, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), 255, 0, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
				}
				else if (iParam1->f_271 == 134 && __LIB_22__::func_607(iParam1) == 32)
				{
					__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1395.f_3), IntToFloat(iParam1->f_1395.f_3), IntToFloat(iParam1->f_1395.f_3), 0, 0, 255, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
				}
				else if (iParam1->f_271 == 532)
				{
					if (iParam1->f_2756 != 8)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, 1f, 1f, 1f, 255, 255, 0, 150, 0, 0, 2, 0, 0, 0, 0, 0);
					}
				}
				else if (BitTest(*uParam4, 21))
				{
					if (Global_4718592.f_2 == 6)
					{
						if (iParam1->f_2861 <= 50f)
						{
							__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, iParam1->f_2861, iParam1->f_2861, iParam1->f_2861, 255, 0, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
						}
					}
					else
					{
						if (iParam1->f_2861 != 50f)
						{
							__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, iParam1->f_2861, iParam1->f_2861, iParam1->f_2861, 255, 0, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
						}
						if (iParam1->f_2862 <= 250f)
						{
							__LIB_22__::func_756(&(iParam1->f_733), 28, uParam3->f_3, 0f, 0f, 0f, 0f, 0f, 0f, iParam1->f_2862, iParam1->f_2862, iParam1->f_2862, 128, 0, 128, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
						}
					}
				}
				uParam3->f_534 = 4;
			}
		}
		if (iParam1->f_550 == 33)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_2;
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
				*iParam5++;
			}
			uParam3->f_534 = 1;
		}
		if (iParam1->f_550 == 1)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[1];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
			}
			if (iParam1->f_271 == 702)
			{
				Var6 = { uParam3->f_3 };
				if (!__LIB_0__::func_86(iParam1->f_2671))
				{
					Var6 = { iParam1->f_2671 };
				}
				if (__LIB_22__::func_607(iParam1) == 0)
				{
					__LIB_22__::func_756(&(iParam1->f_733), 28, Var6, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
				}
				else if (__LIB_22__::func_607(iParam1) == 1)
				{
					__LIB_22__::func_756(&(iParam1->f_733), 28, Var6, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), 255, 0, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
				}
			}
			if ((iParam1->f_271 == 185 && __LIB_22__::func_607(iParam1) == 1) && iParam1->f_3119 > 0f)
			{
				Var7 = { uParam3->f_3 };
				Var7.f_2 = 10f;
				__LIB_22__::func_756(&(iParam1->f_733), 1, Var7, 0f, 0f, 0f, 0f, 0f, 0f, (iParam1->f_3119 * 2f), (iParam1->f_3119 * 2f), 100f, 0, 255, 0, 80, 0, 0, 2, 0, 0, 0, 0, 0);
			}
			uParam3->f_534 = 4;
		}
		if (iParam1->f_550 == 93)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[93];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
			}
		}
		if (iParam1->f_550 == 55)
		{
			uParam3->f_534 = 2;
		}
		if (iParam1->f_550 == 2)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[2];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
			}
			uParam3->f_534 = 0;
		}
		if (iParam1->f_550 == 4)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[4];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
			}
			if (iParam1->f_2910 != -1)
			{
				uParam3->f_534 = 4;
			}
			else
			{
				uParam3->f_534 = -1;
			}
		}
		if (iParam1->f_550 == 5)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = uParam2->f_5[4];
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
				if (iParam1->f_271 == 702)
				{
					Var8 = { uParam3->f_3 };
					if (!__LIB_0__::func_86(iParam1->f_2671))
					{
						Var8 = { iParam1->f_2671 };
					}
					if (__LIB_22__::func_607(iParam1) == 0)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, Var8, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), IntToFloat(iParam1->f_1111), 0, 255, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
					else if (__LIB_22__::func_607(iParam1) == 1)
					{
						__LIB_22__::func_756(&(iParam1->f_733), 28, Var8, 0f, 0f, 0f, 0f, 0f, 0f, IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), IntToFloat(iParam1->f_1112), 255, 0, 0, 50, 0, 0, 0, 0, __LIB_0__::func_591(), __LIB_0__::func_591(), 0, 0);
					}
				}
			}
			uParam3->f_534 = 4;
		}
		if (iParam1->f_550 == 16)
		{
			iVar1 = uParam2->f_5[74];
			uParam3->f_534 = 2;
		}
		if (Global_4718592 == 0)
		{
			if (iParam1->f_550 == 3)
			{
				if (uParam3->f_20 == 1)
				{
					if (uParam3->f_19 || BitTest(*iParam6, 4))
					{
						iVar1 = uParam2->f_5[3];
					}
					else
					{
						iVar1 = uParam2->f_4;
					}
				}
				uParam3->f_534 = 4;
			}
		}
		else if (iParam1->f_550 == 74)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = 10;
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
				if (Global_4718592.f_625 == 0)
				{
					uParam3->f_534 = 2;
				}
				else
				{
					uParam3->f_534 = 3;
				}
			}
		}
		if (iParam1->f_550 == 8)
		{
			if (uParam3->f_20 == 1)
			{
				if (uParam3->f_19 || BitTest(*iParam6, 4))
				{
					iVar1 = __LIB_24__::func_648(iParam1->f_848);
				}
				else
				{
					iVar1 = uParam2->f_4;
				}
				uParam3->f_534 = 2;
			}
		}
		if (iParam1->f_550 == 49 || iParam1->f_550 == 50)
		{
			bVar9 = false;
			if (iParam1->f_550 == 49 && __LIB_19__::func_221(&(uParam3->f_551), 18))
			{
				bVar9 = true;
			}
			else if (iParam1->f_550 == 50 && __LIB_19__::func_221(&(uParam3->f_551), 19))
			{
				bVar9 = true;
			}
			if ((uParam3->f_19 || BitTest(*iParam6, 4)) && !bVar9)
			{
				iVar1 = __LIB_24__::func_648(iParam1->f_848);
			}
			else
			{
				iVar1 = uParam2->f_4;
			}
			uParam3->f_534 = 0;
		}
		if (iParam1->f_550 == 18)
		{
			uParam3->f_20 = 1;
			if (Global_4718592.f_115311 >= 10)
			{
				iVar1 = uParam2->f_4;
			}
			else if (__LIB_0__::func_86(Global_4718592.f_115312[Global_4718592.f_115311 /*9*/]))
			{
				iVar1 = 24;
				uParam3->f_534 = 2;
			}
			else
			{
				iVar1 = 12;
				uParam3->f_534 = 6;
			}
			*iParam5++;
		}
		if (iParam1->f_550 == 34)
		{
			iVar1 = uParam2->f_5[3];
			*iParam5++;
			uParam3->f_534 = 2;
		}
		if (iParam1->f_550 == 40)
		{
			uParam3->f_20 = 1;
			if (uParam3->f_19)
			{
				iVar1 = uParam2->f_1;
			}
			else
			{
				iVar1 = uParam2->f_4;
			}
		}
		if (iParam1->f_550 == 25 || iParam1->f_550 == 66)
		{
			uParam3->f_20 = 1;
			if (uParam3->f_19 || BitTest(*iParam6, 4))
			{
				iVar1 = 12;
			}
			else
			{
				iVar1 = uParam2->f_4;
			}
			*iParam5++;
			uParam3->f_534 = 3;
		}
	}
	else
	{
		if (iParam1->f_550 == 25 || iParam1->f_550 == 66)
		{
			uParam3->f_534 = 1;
		}
		else
		{
			uParam3->f_534 = 6;
		}
		iVar1 = uParam2->f_4;
	}
	if (uParam3->f_751 != 50 && !__LIB_16__::func_682())
	{
		if (uParam3->f_751 != -1)
		{
			iVar1 = __LIB_27__::func_582(uParam3->f_751, uParam3->f_628);
		}
	}
	if (HUD::DOES_BLIP_EXIST(uParam3->f_757))
	{
		if (iParam1->f_550 != -1)
		{
			if (HUD::GET_BLIP_COLOUR(uParam3->f_757) != __LIB_19__::func_216(iVar1))
			{
				if (uParam3->f_20 == 1)
				{
					__LIB_1__::func_540(&(uParam3->f_757), iVar1);
				}
			}
			if (HUD::DOES_BLIP_EXIST(uParam3->f_756))
			{
				iVar1 = 6;
				if (HUD::GET_BLIP_COLOUR(uParam3->f_757) == __LIB_19__::func_216(iVar1))
				{
					if (HUD::GET_BLIP_COLOUR(uParam3->f_756) != __LIB_19__::func_216(iVar1))
					{
						__LIB_1__::func_540(&(uParam3->f_756), iVar1);
					}
				}
				else if (HUD::GET_BLIP_COLOUR(uParam3->f_756) == __LIB_19__::func_216(iVar1))
				{
					iVar1 = uParam2->f_2;
					__LIB_1__::func_540(&(uParam3->f_756), iVar1);
				}
			}
		}
		else
		{
			if (uParam3->f_751 == -1)
			{
				iVar1 = *uParam2;
			}
			if (HUD::GET_BLIP_COLOUR(uParam3->f_757) != __LIB_19__::func_216(iVar1))
			{
				__LIB_1__::func_540(&(uParam3->f_757), iVar1);
			}
			if (HUD::DOES_BLIP_EXIST(uParam3->f_756))
			{
				iVar1 = 6;
				if (HUD::GET_BLIP_COLOUR(uParam3->f_757) == __LIB_19__::func_216(iVar1))
				{
					if (HUD::GET_BLIP_COLOUR(uParam3->f_756) != __LIB_19__::func_216(iVar1))
					{
						__LIB_1__::func_540(&(uParam3->f_756), iVar1);
					}
				}
				else if (HUD::GET_BLIP_COLOUR(uParam3->f_756) == __LIB_19__::func_216(iVar1))
				{
					iVar1 = uParam2->f_2;
					__LIB_1__::func_540(&(uParam3->f_756), iVar1);
				}
			}
		}
	}
}

void func_203(var* uParam0, int iParam1, bool bParam2)//Position - 0x2321EB
{
	int iVar0;
	int iVar1;
	bool bVar2;
	bool bVar3;
	int iVar4;
	char cVar5[16];
	int iVar6;
	char cVar7[24];
	int iVar8;
	char cVar9[24];
	char cVar10[24];
	int iVar11;
	struct<2> Var12;
	var uVar13;
	int iVar14;
	struct<2> Var15;
	int iVar16;
	struct<14> Var17;
	struct<2> Var18;
	int iVar19;
	char[] cVar20[8];
	var uVar21;
	int iVar22;
	char cVar23[16];
	struct<2> Var24;
	var uVar25;
	var uVar26;
	var uVar27;
	var uVar28;
	var uVar29;
	var uVar30;
	struct<2> Var31;
	var uVar32;
	var uVar33;
	var uVar34;
	struct<2> Var35;
	int iVar36;
	char cVar37[16];
	int iVar38;
	var uVar39;
	var uVar40[5];
	int iVar41;
	int iVar42;
	int iVar43;
	int iVar44;
	bool bVar45;
	int iVar46;
	int iVar47;
	var uVar48;
	var uVar49;
	int iVar50;
	var* uVar51;
	int iVar52;
	int iVar53;
	char* sVar54;
	int iVar55;
	int iVar56;
	float fVar57;
	int iVar58;
	int iVar59;
	var* uVar60;
	int iVar61;
	int iVar62;
	int iVar63;
	int iVar64;
	int iVar65;
	int iVar66;
	int iVar67;
	struct<2> Var68;
	var uVar69[5];
	var uVar70;
	var uVar71;
	int iVar72;
	int iVar73;
	iVar1 = DATAFILE::DATADICT_GET_DICT(uParam0, "gen");
	Global_4718592 = DATAFILE::DATADICT_GET_INT(iVar1, "type");
	Global_4718592.f_9 = DATAFILE::DATADICT_GET_BOOL(iVar1, "ngjob");
	BitTest(Global_4718592.f_7, 0);
	bVar2 = DATAFILE::DATADICT_GET_BOOL(iVar1, "photo");
	if (bVar2)
	{
		MISC::SET_BIT(&(Global_4718592.f_7), 0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_4718592.f_7), 0);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ivm") == 2)
	{
		Global_4718592.f_110279 = DATAFILE::DATADICT_GET_INT(iVar1, "ivm");
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fixcam") == 2)
	{
		Global_4718592.f_142645 = DATAFILE::DATADICT_GET_INT(iVar1, "fixcam");
	}
	else
	{
		Global_4718592.f_142645 = 0;
	}
	Global_4718592.f_4 = DATAFILE::DATADICT_GET_INT(iVar1, "optbs");
	Global_4718592.f_640 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "camo") };
	Global_4718592.f_643 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "camro") };
	Global_4718592.f_634 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "cam") };
	Global_4718592.f_653 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "camh");
	Global_4718592.f_646 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "camf") };
	Global_4718592.f_649 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "camfr") };
	Global_4718592.f_652 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "camfv");
	Global_4718592.f_116499 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "dmbds");
	Global_4718592.f_628 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "phpo") };
	StringCopy(&(Global_4718592.f_116682[0 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, "szTag"), 64);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "chksfx") == 1)
	{
		Global_4718592.f_94899 = 1;
	}
	else
	{
		Global_4718592.f_94899 = 0;
	}
	StringCopy(&cVar5, "nrcid", 16);
	if (bParam2)
	{
		bVar3 = false;
		while (bVar3 <= 5)
		{
			StringCopy(&cVar5, "nrcid", 16);
			StringIntConCat(&cVar5, bVar3, 16);
			StringCopy(&(Global_4718592.f_116841[bVar3 /*6*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar5), 24);
			StringCopy(&cVar5, "nrmtt", 16);
			StringIntConCat(&cVar5, bVar3, 16);
			Global_4718592.f_116878[bVar3] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar5);
			bVar3++;
		}
	}
	if (__LIB_16__::func_683(1))
	{
		Global_4718592.f_2 = DATAFILE::DATADICT_GET_INT(iVar1, "subtype");
		Global_4718592.f_142642 = DATAFILE::DATADICT_GET_INT(iVar1, "testcomplete");
		if (((Global_4718592.f_2 == 6 || Global_4718592.f_2 == 5) || Global_4718592.f_2 == 4) || Global_4718592.f_2 == 9)
		{
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, "teamBal") == 2)
			{
				Global_4718592.f_142644 = DATAFILE::DATADICT_GET_INT(iVar1, "numRounds");
			}
			else
			{
				Global_4718592.f_142644 = 1;
			}
			if (Global_4718592.f_142644 < 1)
			{
				Global_4718592.f_142644 = 1;
			}
		}
	}
	else if (__LIB_1__::func_126())
	{
		Global_4718592.f_2 = DATAFILE::DATADICT_GET_INT(iVar1, "subtype");
	}
	if (__LIB_1__::func_126() || __LIB_16__::func_683(1))
	{
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "teamBal") == 2)
		{
			Global_4718592.f_142646 = DATAFILE::DATADICT_GET_INT(iVar1, "teamBal");
		}
		else
		{
			Global_4718592.f_142646 = 5;
		}
	}
	Global_4718592.f_168757 = DATAFILE::DATADICT_GET_INT(iVar1, "adverm");
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "dlcrel") == 2)
	{
		Global_4718592.f_168758 = DATAFILE::DATADICT_GET_INT(iVar1, "dlcrel");
	}
	else
	{
		Global_4718592.f_168758 = -1;
	}
	Global_4718592.f_142643 = DATAFILE::DATADICT_GET_INT(iVar1, "testcomplete");
	Global_4718592.f_614 = DATAFILE::DATADICT_GET_INT(iVar1, "endtype");
	Global_4718592.f_11 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs");
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ovrpc") == 2)
	{
		Global_4980736.f_94387 = DATAFILE::DATADICT_GET_INT(iVar1, "ovrpc");
	}
	else
	{
		Global_4980736.f_94387 = -1;
	}
	Global_4718592.f_12 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs2");
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs3") == 2)
	{
		Global_4718592.f_13 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs3");
	}
	else
	{
		Global_4718592.f_13 = 0;
	}
	Global_4718592.f_14 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs4");
	Global_4718592.f_15 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs5");
	Global_4718592.f_16 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs6");
	Global_4718592.f_17 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs7");
	Global_4718592.f_18 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs8");
	Global_4718592.f_19 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs9");
	Global_4718592.f_20 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs10");
	Global_4718592.f_21 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs11");
	Global_4718592.f_22 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs12");
	Global_4718592.f_23 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs13");
	Global_4718592.f_24 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs14");
	Global_4718592.f_25 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs15");
	Global_4718592.f_26 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs16");
	Global_4718592.f_27 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs17");
	Global_4718592.f_169888 = DATAFILE::DATADICT_GET_BOOL(iVar1, "alrtLocal");
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs18") == 2)
	{
		Global_4718592.f_28 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs18");
	}
	else
	{
		Global_4718592.f_28 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs19") == 2)
	{
		Global_4718592.f_29 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs19");
	}
	else
	{
		Global_4718592.f_29 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs20") == 2)
	{
		Global_4718592.f_30 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs20");
	}
	else
	{
		Global_4718592.f_30 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs21") == 2)
	{
		Global_4718592.f_31 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs21");
	}
	else
	{
		Global_4718592.f_31 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs22") == 2)
	{
		Global_4718592.f_32 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs22");
	}
	else
	{
		Global_4718592.f_32 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs23") == 2)
	{
		Global_4718592.f_33 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs23");
	}
	else
	{
		Global_4718592.f_33 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs24") == 2)
	{
		Global_4718592.f_34 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs24");
	}
	else
	{
		Global_4718592.f_34 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "menubs25") == 2)
	{
		Global_4718592.f_35 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs25");
	}
	else
	{
		Global_4718592.f_35 = 0;
	}
	__LIB_18__::func_414("menubs26", &(Global_4718592.f_36), &iVar1, 0, -2340845);
	__LIB_18__::func_414("menubs27", &(Global_4718592.f_37), &iVar1, 0, -2340845);
	__LIB_18__::func_414("menubs28", &(Global_4718592.f_38), &iVar1, 0, -2340845);
	__LIB_18__::func_414("menubs29", &(Global_4718592.f_39), &iVar1, 0, -2340845);
	__LIB_18__::func_414("menubs30", &(Global_4718592.f_40), &iVar1, 0, -2340845);
	if (!__LIB_1__::func_823())
	{
		MISC::CLEAR_BIT(&(Global_4718592.f_14), 26);
		MISC::CLEAR_BIT(&(Global_4718592.f_28), 13);
	}
	__LIB_18__::func_414("extintt", &iVar0, &iVar1, 0, -2340845);
	Global_4718592.f_587 = iVar0;
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csittd") == 2)
	{
		Global_4718592.f_175362 = DATAFILE::DATADICT_GET_INT(iVar1, "csittd");
	}
	else
	{
		Global_4718592.f_175362 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fiispr") == 3)
	{
		Global_4718592.f_117093 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "fiispr");
	}
	else
	{
		Global_4718592.f_117093 = -0.1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cordmbs") == 2)
	{
		Global_4718592.f_170131 = DATAFILE::DATADICT_GET_INT(iVar1, "cordmbs");
	}
	else
	{
		Global_4718592.f_170131 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "iplyli") == 2)
	{
		Global_4718592.f_609 = DATAFILE::DATADICT_GET_INT(iVar1, "iplyli");
	}
	else
	{
		Global_4718592.f_609 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ptbNBL") == 2)
	{
		Global_4718592.f_170080 = DATAFILE::DATADICT_GET_INT(iVar1, "ptbNBL");
	}
	else
	{
		Global_4718592.f_170080 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ptbDrg") == 3)
	{
		Global_4718592.f_170081 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "ptbDrg");
	}
	else
	{
		Global_4718592.f_170081 = 2f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csts") == 3)
	{
		Global_4718592.f_170126 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "csts");
	}
	else
	{
		Global_4718592.f_170126 = 1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "rmlo") == 2)
	{
		Global_4718592.f_170127 = DATAFILE::DATADICT_GET_INT(iVar1, "rmlo");
	}
	else
	{
		Global_4718592.f_170127 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mxlap") == 2)
	{
		Global_4718592.f_170128 = DATAFILE::DATADICT_GET_INT(iVar1, "mxlap");
	}
	else
	{
		Global_4718592.f_170128 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "aghd") == 3)
	{
		Global_4718592.f_170129 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "aghd");
	}
	else
	{
		Global_4718592.f_170129 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "agt") == 2)
	{
		Global_4718592.f_170130 = DATAFILE::DATADICT_GET_INT(iVar1, "agt");
	}
	else
	{
		Global_4718592.f_170130 = 0;
	}
	__LIB_18__::func_652(&iVar1);
	__LIB_18__::func_651(&iVar1);
	__LIB_19__::func_261(&iVar1);
	__LIB_18__::func_649(&iVar1);
	iVar6 = 0;
	while (iVar6 <= 4)
	{
		StringCopy(&cVar7, "dmHTS", 24);
		StringIntConCat(&cVar7, iVar6, 24);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar7) == 4)
		{
			StringCopy(&(Global_4718592.f_169405[iVar6 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar7), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_169405[iVar6 /*16*/]), "", 64);
		}
		iVar8 = 0;
		while (iVar8 <= 3)
		{
			StringCopy(&cVar9, "dmHT", 24);
			StringIntConCat(&cVar9, iVar6, 24);
			StringIntConCat(&cVar9, iVar8, 24);
			if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar9) == 4)
			{
				StringCopy(&(Global_4718592.f_169486[iVar6 /*65*/][iVar8 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar9), 64);
			}
			else
			{
				StringCopy(&(Global_4718592.f_169486[iVar6 /*65*/][iVar8 /*16*/]), "", 64);
			}
			iVar8++;
		}
		StringCopy(&cVar10, "dmHTD", 24);
		StringIntConCat(&cVar10, iVar6, 24);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar10) == 2)
		{
			Global_4718592.f_169812[iVar6] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar10);
		}
		else
		{
			Global_4718592.f_169812[iVar6] = -1;
		}
		iVar6++;
	}
	if (BitTest(Global_4718592.f_22, 13))
	{
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "trstim") == 2)
		{
			Global_4718592.f_168925 = DATAFILE::DATADICT_GET_INT(iVar1, "trstim");
		}
		else
		{
			Global_4718592.f_168925 = 10;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "trerad") == 3)
		{
			Global_4718592.f_168926 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "trerad");
		}
		else
		{
			Global_4718592.f_168926 = 5f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "trsstim") == 2)
		{
			Global_4718592.f_168927 = DATAFILE::DATADICT_GET_INT(iVar1, "trsstim");
		}
		else
		{
			Global_4718592.f_168927 = 10;
		}
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "iopcd") == 2)
	{
		Global_4718592.f_168760 = DATAFILE::DATADICT_GET_INT(iVar1, "iopcd");
	}
	else
	{
		Global_4718592.f_168760 = -1;
	}
	if (BitTest(Global_4718592.f_15, 31))
	{
	}
	Global_4718592.f_16 = DATAFILE::DATADICT_GET_INT(iVar1, "menubs6");
	if (BitTest(Global_4718592.f_16, 16))
	{
	}
	iVar11 = 0;
	while (iVar11 <= 29)
	{
		StringCopy(&Var12, "missionString", 16);
		StringIntConCat(&Var12, iVar11, 16);
		StringCopy(&(Global_4718592.f_80[iVar11 /*16*/]), __LIB_18__::func_28(&Var12, &iVar1, "", ""), 64);
		iVar11++;
	}
	uVar13 = 5;
	__LIB_19__::func_260(&(Global_4718592.f_561), &uVar13, &iVar1);
	__LIB_18__::func_27(&iVar1);
	__LIB_24__::func_868(&iVar1);
	iVar14 = 0;
	while (iVar14 <= 1)
	{
		__LIB_18__::func_26(&iVar1, iVar14);
		iVar14++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "rcvs") == 2)
	{
		Global_4718592.f_93318 = DATAFILE::DATADICT_GET_INT(iVar1, "rcvs");
	}
	else
	{
		Global_4718592.f_93318 = 0;
	}
	if (BitTest(Global_4718592.f_18, 25))
	{
		Global_4718592.f_93318 = 1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hptfb") == 2)
	{
		Global_4718592.f_657 = DATAFILE::DATADICT_GET_INT(iVar1, "hptfb");
	}
	else
	{
		Global_4718592.f_657 = 0;
	}
	iVar16 = 0;
	while (iVar16 <= 4)
	{
		StringCopy(&Var15, "specobjt", 16);
		StringIntConCat(&Var15, iVar16, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 4)
		{
			StringCopy(&(Global_4718592.f_169946[iVar16 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &Var15), 64);
		}
		else
		{
			IntToString(&(Global_4718592.f_169946[iVar16 /*16*/]), 0, 64);
		}
		iVar16++;
	}
	Global_4718592.f_170135 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "turammo");
	Global_4718592.f_170136 = DATAFILE::DATADICT_GET_INT(iVar1, "turgudm");
	Global_4718592.f_110353 = DATAFILE::DATADICT_GET_INT(iVar1, "teamvbs");
	Global_4718592.f_586 = DATAFILE::DATADICT_GET_INT(iVar1, "cncmbs");
	Global_4718592.f_165269 = DATAFILE::DATADICT_GET_INT(iVar1, "todhr");
	Global_4718592.f_165270 = DATAFILE::DATADICT_GET_INT(iVar1, "todmn");
	Global_4718592.f_10 = DATAFILE::DATADICT_GET_INT(iVar1, "cmpts");
	Global_4718592.f_612 = DATAFILE::DATADICT_GET_INT(iVar1, "rank");
	Global_4718592.f_612 = DATAFILE::DATADICT_GET_INT(iVar1, "rank");
	Global_4718592.f_116984 = DATAFILE::DATADICT_GET_INT(iVar1, "charcon");
	Global_4718592.f_116984 = DATAFILE::DATADICT_GET_INT(iVar1, "char");
	Global_4718592.f_116985 = DATAFILE::DATADICT_GET_INT(iVar1, "xpr");
	Global_4718592.f_116986 = DATAFILE::DATADICT_GET_INT(iVar1, "cshr");
	Global_4718592.f_116990 = DATAFILE::DATADICT_GET_INT(iVar1, "ctsc");
	Var17 = 12;
	Var17.f_13 = 12;
	__LIB_18__::func_667(&Var17, &iVar1, &(Global_4718592.f_116991), 0, 6);
	__LIB_18__::func_414("ctspw", &(Global_4718592.f_117043), &iVar1, 0, -2340845);
	iVar4 = 0;
	while (iVar4 <= 19)
	{
		StringCopy(&Var18, "ctsspw", 16);
		StringIntConCat(&Var18, iVar4, 16);
		__LIB_18__::func_414(&Var18, &(Global_4718592.f_117044[iVar4]), &iVar1, 0, -2340845);
		iVar4++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "istngc") == 2)
	{
		Global_4718592.f_175365 = DATAFILE::DATADICT_GET_INT(iVar1, "istngc");
	}
	else
	{
		Global_4718592.f_175365 = -1;
	}
	__LIB_18__::func_407("fsbaoe", &(Global_4718592.f_175366), &iVar1, 1f, -904994889);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecsmn") == 4)
	{
		StringCopy(&(Global_4718592.f_161915), DATAFILE::DATADICT_GET_STRING(iVar1, "ecsmn"), 64);
	}
	else
	{
		StringCopy(&(Global_4718592.f_161915), "", 64);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecsbs") == 2)
	{
		Global_4718592.f_161915.f_16 = DATAFILE::DATADICT_GET_INT(iVar1, "ecsbs");
	}
	else
	{
		Global_4718592.f_161915.f_16 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecsbs2") == 2)
	{
		Global_4718592.f_161915.f_17 = DATAFILE::DATADICT_GET_INT(iVar1, "ecsbs2");
	}
	else
	{
		Global_4718592.f_161915.f_17 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecsbs3") == 2)
	{
		Global_4718592.f_161915.f_18 = DATAFILE::DATADICT_GET_INT(iVar1, "ecsbs3");
	}
	else
	{
		Global_4718592.f_161915.f_18 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecsrng") == 2)
	{
		Global_4718592.f_161915.f_89 = DATAFILE::DATADICT_GET_INT(iVar1, "ecsrng");
	}
	else
	{
		Global_4718592.f_161915.f_89 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecscp") == 5)
	{
		Global_4718592.f_161915.f_81 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "ecscp") };
	}
	else
	{
		Global_4718592.f_161915.f_81 = { 0f, 0f, 0f };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecscr") == 3)
	{
		Global_4718592.f_161915.f_87 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "ecscr");
	}
	else
	{
		Global_4718592.f_161915.f_87 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ecscs") == 5)
	{
		Global_4718592.f_161915.f_84 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "ecscs") };
	}
	else
	{
		Global_4718592.f_161915.f_84 = { 0f, 0f, 0f };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vhspx") == 3)
	{
		Global_4718592.f_161915.f_91 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "vhspx");
	}
	else
	{
		Global_4718592.f_161915.f_91 = 6f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vrbs") == 2)
	{
		Global_4718592.f_161915.f_92 = DATAFILE::DATADICT_GET_INT(iVar1, "vrbs");
	}
	else
	{
		Global_4718592.f_161915.f_92 = 0;
	}
	__LIB_18__::func_414("csbs4", &(Global_4718592.f_161915.f_19), &iVar1, 0, 0);
	__LIB_18__::func_414("csmme", &(Global_4718592.f_161915.f_93), &iVar1, 0, 0);
	__LIB_18__::func_408("enctpo", &(Global_4718592.f_161915.f_20), &iVar1, 0f, 0f, 0f, 0f, 0f, 0f);
	__LIB_18__::func_408("enctro", &(Global_4718592.f_161915.f_23), &iVar1, 0f, 0f, 0f, 0f, 0f, 0f);
	__LIB_18__::func_407("ectfo", &(Global_4718592.f_161915.f_94), &iVar1, 1f, -904994889);
	iVar19 = 0;
	while (iVar19 <= 29)
	{
		StringCopy(&cVar20, "ecein", 8);
		StringIntConCat(&cVar20, iVar19, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_161915.f_148[iVar19 /*10*/].f_1 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_161915.f_148[iVar19 /*10*/].f_1 = -1;
		}
		StringCopy(&cVar20, "ecetp", 8);
		StringIntConCat(&cVar20, iVar19, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_161915.f_148[iVar19 /*10*/] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_161915.f_148[iVar19 /*10*/] = -1;
		}
		StringCopy(&cVar20, "ecehn", 8);
		StringIntConCat(&cVar20, iVar19, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_161915.f_148[iVar19 /*10*/].f_2), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 32);
		}
		else
		{
			StringCopy(&(Global_4718592.f_161915.f_148[iVar19 /*10*/].f_2), "", 32);
		}
		iVar19++;
	}
	__LIB_18__::func_414("csmeir", &(Global_4718592.f_161915.f_90), &iVar1, 5000, 5000);
	bVar3 = false;
	while (bVar3 <= 4)
	{
		StringCopy(&(Global_4718592.f_161915.f_449[bVar3 /*8*/]), __LIB_18__::func_412("csehent", &iVar1, &uVar21, bVar3, "", ""), 32);
		bVar3++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "clbscr") == 2)
	{
		Global_4718592.f_162946 = DATAFILE::DATADICT_GET_INT(iVar1, "clbscr");
	}
	else
	{
		Global_4718592.f_162946 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "disar") == 2)
	{
		Global_4718592.f_162947 = DATAFILE::DATADICT_GET_INT(iVar1, "disar");
	}
	else
	{
		Global_4718592.f_162947 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "rlopt") == 2)
	{
		Global_4718592.f_162934 = DATAFILE::DATADICT_GET_INT(iVar1, "rlopt");
	}
	else
	{
		Global_4718592.f_162934 = 0;
	}
	iVar0 = DATAFILE::DATADICT_GET_INT(iVar1, "gpmn");
	Global_4718592.f_656 = iVar0;
	iVar22 = DATAFILE::DATADICT_GET_INT(iVar1, "musx");
	if (iVar22 != -1)
	{
		Global_4718592.f_116979 = iVar22;
	}
	else
	{
		Global_4718592.f_116979 = -1;
	}
	__LIB_18__::func_414("musmustr", &(Global_4718592.f_116977), &iVar1, -1, -2340845);
	__LIB_18__::func_414("musbocp", &(Global_4718592.f_116978), &iVar1, 0, -2340845);
	Global_4718592.f_116976 = DATAFILE::DATADICT_GET_INT(iVar1, "ausc");
	Global_4718592.f_589 = DATAFILE::DATADICT_GET_INT(iVar1, "minNu");
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "newausc") == 2)
	{
		Global_4718592.f_116975 = DATAFILE::DATADICT_GET_INT(iVar1, "newausc");
	}
	else
	{
		Global_4718592.f_116975 = -1;
	}
	Global_4718592.f_588 = DATAFILE::DATADICT_GET_INT(iVar1, "num");
	if (Global_4718592.f_588 == -1)
	{
		Global_4718592.f_588 = __LIB_2__::func_10();
	}
	Global_4718592.f_590 = DATAFILE::DATADICT_GET_INT(iVar1, "time");
	Global_4718592.f_631 = { __LIB_17__::func_939(iVar1) };
	StringCopy(&cVar23, "apart", 16);
	Global_4718592.f_162480 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar23) };
	bVar3 = false;
	while (bVar3 <= 4)
	{
		StringCopy(&Var24, "intDes_DWP", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_404(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/]), &iVar1, &uVar25, bVar3, -1, -2340845);
		if (!BitTest(Global_4718592.f_40, 2) && Global_4718592.f_173160[bVar3 /*10*/] > 0)
		{
			Global_4718592.f_173160[bVar3 /*10*/] *= 2;
		}
		StringCopy(&Var24, "intDes_TL", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_404(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/].f_1), &iVar1, &uVar26, bVar3, 0, -2340845);
		StringCopy(&Var24, "intDes_DesO", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_403(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/].f_2), &iVar1, &uVar27, bVar3, 0f, 0f, 0f, 0f, 0f, 0f);
		StringCopy(&Var24, "intDes_IntE", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_403(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/].f_5), &iVar1, &uVar28, bVar3, 0f, 0f, 0f, 0f, 0f, 0f);
		StringCopy(&Var24, "intDes_IntEh", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_402(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/].f_8), &iVar1, &uVar29, bVar3, 0f, -904994889);
		StringCopy(&Var24, "intDes_EsT", 16);
		StringIntConCat(&Var24, bVar3, 16);
		__LIB_18__::func_404(&Var24, &(Global_4718592.f_173160[bVar3 /*10*/].f_9), &iVar1, &uVar30, bVar3, -1, -2340845);
		bVar3++;
	}
	__LIB_18__::func_414("entCont_Num", &(Global_4980736.f_202554), &iVar1, 0, -2340845);
	bVar3 = false;
	while (bVar3 <= (Global_4980736.f_202554 - 1))
	{
		StringCopy(&Var31, "entCont_Typ", 16);
		StringIntConCat(&Var31, bVar3, 16);
		__LIB_18__::func_404(&Var31, &(Global_4980736.f_202538[bVar3 /*3*/]), &iVar1, &uVar32, bVar3, 0, -2340845);
		StringCopy(&Var31, "entCont_Ind", 16);
		StringIntConCat(&Var31, bVar3, 16);
		__LIB_18__::func_404(&Var31, &(Global_4980736.f_202538[bVar3 /*3*/].f_1), &iVar1, &uVar33, bVar3, -1, -2340845);
		StringCopy(&Var31, "entCont_IgBS", 16);
		StringIntConCat(&Var31, bVar3, 16);
		__LIB_18__::func_404(&Var31, &(Global_4980736.f_202538[bVar3 /*3*/].f_2), &iVar1, &uVar34, bVar3, 0, -2340845);
		bVar3++;
	}
	Global_4718592.f_162494 = DATAFILE::DATADICT_GET_INT(iVar1, "apwbs");
	Global_4718592.f_162483 = DATAFILE::DATADICT_GET_INT(iVar1, "wrploc");
	Global_4718592.f_162538 = DATAFILE::DATADICT_GET_INT(iVar1, "twrst");
	Global_4718592.f_162495 = DATAFILE::DATADICT_GET_INT(iVar1, "iplop");
	Global_4718592.f_162496 = DATAFILE::DATADICT_GET_INT(iVar1, "intop");
	Global_4718592.f_162497 = DATAFILE::DATADICT_GET_INT(iVar1, "intop2");
	Global_4718592.f_162498 = DATAFILE::DATADICT_GET_INT(iVar1, "intop3");
	bVar3 = false;
	while (bVar3 <= 3)
	{
		StringCopy(&Var35, "mthti", 16);
		StringIntConCat(&Var35, bVar3, 16);
		__LIB_18__::func_414(&Var35, &(Global_4718592.f_162505[bVar3]), &iVar1, -1, -2340845);
		bVar3++;
	}
	__LIB_24__::func_867(&iVar1);
	__LIB_18__::func_645(&iVar1);
	__LIB_18__::func_644(&iVar1);
	Global_4718592.f_162499 = DATAFILE::DATADICT_GET_INT(iVar1, "casCol");
	Global_4718592.f_162499.f_1 = DATAFILE::DATADICT_GET_INT(iVar1, "casPat");
	Global_4718592.f_162499.f_2 = DATAFILE::DATADICT_GET_INT(iVar1, "casArc");
	__LIB_18__::func_414("casPrt", &(Global_4718592.f_162499.f_3), &iVar1, -1, -2340845);
	__LIB_18__::func_414("casPR", &(Global_4718592.f_162499.f_4), &iVar1, -1, -2340845);
	__LIB_18__::func_414("casBS", &(Global_4718592.f_162499.f_5), &iVar1, 0, -2340845);
	Global_4718592.f_162543 = DATAFILE::DATADICT_GET_INT(iVar1, "arnTh");
	Global_4718592.f_162543.f_1 = DATAFILE::DATADICT_GET_INT(iVar1, "arnTy");
	Global_4718592.f_162543.f_2 = DATAFILE::DATADICT_GET_INT(iVar1, "arnLi");
	Global_4718592.f_162543.f_29[0] = DATAFILE::DATADICT_GET_INT(iVar1, "arnBnA");
	Global_4718592.f_162543.f_29[1] = DATAFILE::DATADICT_GET_INT(iVar1, "arnBnB");
	Global_4718592.f_162543.f_29[2] = DATAFILE::DATADICT_GET_INT(iVar1, "arnBnC");
	Global_4718592.f_162543.f_29[3] = DATAFILE::DATADICT_GET_INT(iVar1, "arnBnD");
	Global_4718592.f_162543.f_34[0] = DATAFILE::DATADICT_GET_INT(iVar1, "arnCrA");
	Global_4718592.f_162543.f_34[1] = DATAFILE::DATADICT_GET_INT(iVar1, "arnCrB");
	Global_4718592.f_162543.f_34[2] = DATAFILE::DATADICT_GET_INT(iVar1, "arnCrC");
	Global_4718592.f_162543.f_34[3] = DATAFILE::DATADICT_GET_INT(iVar1, "arnCrD");
	Global_4718592.f_162543.f_3 = DATAFILE::DATADICT_GET_INT(iVar1, "arnRnL");
	iVar36 = 0;
	while (iVar36 <= 3)
	{
		StringCopy(&cVar37, "anf1BS", 16);
		StringIntConCat(&cVar37, iVar36, 16);
		Global_4718592.f_162543.f_4[iVar36] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar37);
		StringCopy(&cVar37, "anf2BS", 16);
		StringIntConCat(&cVar37, iVar36, 16);
		Global_4718592.f_162543.f_9[iVar36] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar37);
		StringCopy(&cVar37, "anf3BS", 16);
		StringIntConCat(&cVar37, iVar36, 16);
		Global_4718592.f_162543.f_14[iVar36] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar37);
		StringCopy(&cVar37, "anf4BS", 16);
		StringIntConCat(&cVar37, iVar36, 16);
		Global_4718592.f_162543.f_19[iVar36] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar37);
		StringCopy(&cVar37, "anfMBS", 16);
		StringIntConCat(&cVar37, iVar36, 16);
		Global_4718592.f_162543.f_24[iVar36] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar37);
		iVar36++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "arnVMN") == 2)
	{
		Global_4718592.f_162582 = DATAFILE::DATADICT_GET_INT(iVar1, "arnVMN");
	}
	else
	{
		Global_4718592.f_162582 = 5;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "copteam") == 2)
	{
		Global_4718592.f_110360 = DATAFILE::DATADICT_GET_INT(iVar1, "copteam");
	}
	else
	{
		Global_4718592.f_110360 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "pttl") == 4)
	{
		StringCopy(&(Global_4718592.f_116819), DATAFILE::DATADICT_GET_STRING(iVar1, "pttl"), 64);
	}
	else
	{
		StringCopy(&(Global_4718592.f_116819), "", 64);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "blmpmsg") == 4)
	{
		StringCopy(&(Global_4718592.f_169373), DATAFILE::DATADICT_GET_STRING(iVar1, "blmpmsg"), 64);
	}
	else
	{
		StringCopy(&(Global_4718592.f_169373), "", 64);
	}
	iVar38 = 0;
	while (iVar38 <= 33)
	{
		StringCopy(&cVar20, "dmvft", 8);
		StringIntConCat(&cVar20, iVar38, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_107926[iVar38] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_107926[iVar38] = 0;
		}
		iVar38++;
	}
	iVar0 = -1;
	__LIB_18__::func_414("pmcsss", &iVar0, &iVar1, -1, -1);
	Global_4718592.f_162983 = iVar0;
	iVar0 = -1;
	__LIB_18__::func_414("pmcsssf", &iVar0, &iVar1, -1, -1);
	Global_4718592.f_162984 = iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		iVar41 = 0;
		while (iVar41 <= 1)
		{
			StringCopy(&cVar20, "t", 8);
			StringIntConCat(&cVar20, iVar0, 8);
			StringConCat(&cVar20, "fs", 8);
			StringIntConCat(&cVar20, iVar41, 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
			{
				StringCopy(&(Global_4718592.f_165874[iVar0 /*33*/][iVar41 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
			}
			else
			{
				StringCopy(&(Global_4718592.f_165874[iVar0 /*33*/][iVar41 /*16*/]), "", 64);
			}
			iVar41++;
		}
		iVar41 = 0;
		while (iVar41 <= 33)
		{
			iVar42 = 0;
			while (iVar42 <= __LIB_13__::func_437(__LIB_18__::func_612(iVar41)))
			{
				StringCopy(&cVar20, "t", 8);
				StringIntConCat(&cVar20, iVar0, 8);
				StringConCat(&cVar20, "vl", 8);
				StringIntConCat(&cVar20, iVar41, 8);
				if (iVar42 > 0)
				{
					StringIntConCat(&cVar20, iVar42, 8);
				}
				if (iVar42 < 3)
				{
					if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
					{
						Global_4718592.f_107367[iVar0 /*137*/][iVar41 /*4*/][iVar42] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
					}
					else
					{
						Global_4718592.f_107367[iVar0 /*137*/][iVar41 /*4*/][iVar42] = 0;
					}
				}
				iVar42++;
			}
			iVar41++;
		}
		StringCopy(&cVar20, "t", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		StringConCat(&cVar20, "dvl", 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_107916[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_107916[iVar0] = 0;
		}
		StringCopy(&cVar20, "t", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		StringConCat(&cVar20, "dv", 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_107921[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_107921[iVar0] = 0;
		}
		iVar42 = 0;
		while (iVar42 <= 3)
		{
			iVar41 = 0;
			while (iVar41 <= 33)
			{
				iVar43 = 0;
				while (iVar43 <= 2)
				{
					StringCopy(&Var15, "t", 16);
					StringIntConCat(&Var15, iVar0, 16);
					StringIntConCat(&Var15, iVar42, 16);
					StringConCat(&Var15, "rv", 16);
					StringIntConCat(&Var15, iVar41, 16);
					if (iVar43 > 0)
					{
						StringIntConCat(&Var15, iVar43, 16);
					}
					if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
					{
						Global_4718592.f_107961[iVar0 /*549*/][iVar42 /*137*/][iVar41 /*4*/][iVar43] = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
					}
					else
					{
						Global_4718592.f_107961[iVar0 /*549*/][iVar42 /*137*/][iVar41 /*4*/][iVar43] = 0;
					}
					iVar43++;
				}
				iVar41++;
			}
			StringCopy(&cVar20, "t", 8);
			StringIntConCat(&cVar20, iVar0, 8);
			StringIntConCat(&cVar20, iVar42, 8);
			StringConCat(&cVar20, "dvl", 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
			{
				Global_4718592.f_110158[iVar0 /*5*/][iVar42] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			else
			{
				Global_4718592.f_110158[iVar0 /*5*/][iVar42] = 0;
			}
			StringCopy(&cVar20, "t", 8);
			StringIntConCat(&cVar20, iVar0, 8);
			StringIntConCat(&cVar20, iVar42, 8);
			StringConCat(&cVar20, "dv", 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
			{
				Global_4718592.f_110179[iVar0 /*5*/][iVar42] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			else
			{
				Global_4718592.f_110179[iVar0 /*5*/][iVar42] = 0;
			}
			iVar42++;
		}
		iVar44 = 0;
		while (iVar44 < 34)
		{
			Global_1964160[iVar44] = -1;
			bVar45 = __LIB_18__::func_612(iVar44);
			while (bVar45 <= 31)
			{
				if (BitTest(Global_4718592.f_107367[iVar0 /*137*/][iVar44 /*4*/][__LIB_13__::func_437(bVar45)], bVar45))
				{
					MISC::CLEAR_BIT(&(Global_4718592.f_107367[iVar0 /*137*/][iVar44 /*4*/][__LIB_13__::func_437(bVar45)]), bVar45);
					if (Global_4718592.f_107916[iVar0] == iVar44 && Global_4718592.f_107921[iVar0] == bVar45)
					{
						Global_4718592.f_107916[iVar0] = 0;
						Global_4718592.f_107921[iVar0] = 0;
					}
				}
				iVar46 = 0;
				while (iVar46 < 4)
				{
					if (BitTest(Global_4718592.f_107961[iVar0 /*549*/][iVar46 /*137*/][iVar44 /*4*/][__LIB_13__::func_437(bVar45)], bVar45))
					{
						MISC::CLEAR_BIT(&(Global_4718592.f_107961[iVar0 /*549*/][iVar46 /*137*/][iVar44 /*4*/][__LIB_13__::func_437(bVar45)]), bVar45);
						if (Global_4718592.f_110158[iVar0 /*5*/][iVar46] == iVar44 && Global_4718592.f_110179[iVar0 /*5*/][iVar46] == bVar45)
						{
							Global_4718592.f_110158[iVar0 /*5*/][iVar46] = 0;
							Global_4718592.f_110179[iVar0 /*5*/][iVar46] = 0;
						}
					}
					iVar46++;
				}
				bVar45++;
			}
			iVar44++;
		}
		StringCopy(&cVar20, "dmaskg", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116947[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116947[iVar0] = 0;
		}
		StringCopy(&cVar20, "ofovr", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142823[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142823[iVar0] = -1;
		}
		StringCopy(&cVar20, "tmrfs", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_165809[iVar0 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_165809[iVar0 /*16*/]), "", 64);
		}
		StringCopy(&cVar20, "tmtss", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_166007[iVar0 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_166007[iVar0 /*16*/]), "", 64);
		}
		StringCopy(&cVar20, "tmrph", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_166072[iVar0 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_166072[iVar0 /*16*/]), "", 64);
		}
		StringCopy(&cVar20, "tmtsr", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_166137[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_166137[iVar0] = 0;
		}
		StringCopy(&cVar20, "pmscid", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_162948[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162948[iVar0] = -1;
		}
		__LIB_18__::func_404("pmssgo", &(Global_4718592.f_162953[iVar0]), &iVar1, &uVar39, iVar0, -1, -1);
		iVar47 = 0;
		while (iVar47 <= 4)
		{
			StringCopy(&cVar20, "pmcsgo", 8);
			StringIntConCat(&cVar20, iVar47, 8);
			__LIB_18__::func_404(&cVar20, &(Global_4718592.f_162958[iVar0 /*6*/][iVar47]), &iVar1, &(uVar40[iVar47]), iVar0, -1, -1);
			iVar47++;
		}
		StringCopy(&cVar20, "qran", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_117065[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_117065[iVar0] = -1;
		}
		StringCopy(&cVar20, "cwtit", 8);
		if (iVar0 > 0)
		{
			StringIntConCat(&cVar20, iVar0, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_168718[iVar0 /*4*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 16);
		}
		else
		{
			StringCopy(&(Global_4718592.f_168718[iVar0 /*4*/]), "", 16);
		}
		StringCopy(&cVar20, "cwstr", 8);
		if (iVar0 > 0)
		{
			StringIntConCat(&cVar20, iVar0, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_168735[iVar0 /*4*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 16);
		}
		else
		{
			StringCopy(&(Global_4718592.f_168735[iVar0 /*4*/]), "", 16);
		}
		StringCopy(&cVar20, "cwspre", 8);
		if (iVar0 > 0)
		{
			StringIntConCat(&cVar20, iVar0, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168752[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_168752[iVar0] = -1;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168913 = DATAFILE::DATADICT_GET_INT(iVar1, "twti");
		}
		else
		{
			Global_4718592.f_168913 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168912 = DATAFILE::DATADICT_GET_INT(iVar1, "twpta");
		}
		else
		{
			Global_4718592.f_168912 = 0;
		}
		Global_4718592.f_168914 = DATAFILE::DATADICT_GET_INT(iVar1, "twct1");
		Global_4718592.f_168915 = DATAFILE::DATADICT_GET_INT(iVar1, "twct2");
		Global_4718592.f_168916 = DATAFILE::DATADICT_GET_INT(iVar1, "twct3");
		Global_4718592.f_168917 = DATAFILE::DATADICT_GET_INT(iVar1, "twct4");
		Global_4718592.f_168918 = DATAFILE::DATADICT_GET_INT(iVar1, "twcon");
		Global_4718592.f_168919 = DATAFILE::DATADICT_GET_INT(iVar1, "twcto");
		Global_4718592.f_168920 = DATAFILE::DATADICT_GET_INT(iVar1, "twcun");
		Global_4718592.f_168921 = DATAFILE::DATADICT_GET_INT(iVar1, "twcdi");
		Global_4718592.f_168922 = DATAFILE::DATADICT_GET_INT(iVar1, "svmrcvbr");
		Global_4718592.f_168923 = DATAFILE::DATADICT_GET_INT(iVar1, "wvmarc");
		Global_4718592.f_169364 = DATAFILE::DATADICT_GET_INT(iVar1, "wvmsbet");
		Global_4718592.f_169365 = DATAFILE::DATADICT_GET_INT(iVar1, "wvmsber");
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "wvmdsr") == 2)
		{
			Global_4718592.f_169372 = DATAFILE::DATADICT_GET_INT(iVar1, "wvmdsr");
		}
		else
		{
			Global_4718592.f_169372 = -1;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "conbons") == 3)
		{
			Global_4718592.f_169819 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "conbons");
		}
		else
		{
			Global_4718592.f_169819 = 0f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "conspd") == 3)
		{
			Global_4718592.f_169818 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "conspd");
		}
		else
		{
			Global_4718592.f_169818 = 1f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "confot") == 2)
		{
			Global_4718592.f_169820 = DATAFILE::DATADICT_GET_INT(iVar1, "confot");
		}
		else
		{
			Global_4718592.f_169820 = 5000;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "confont") == 2)
		{
			Global_4718592.f_169821 = DATAFILE::DATADICT_GET_INT(iVar1, "confont");
		}
		else
		{
			Global_4718592.f_169821 = 1000;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "consd") == 2)
		{
			Global_4718592.f_169822 = DATAFILE::DATADICT_GET_INT(iVar1, "consd");
		}
		else
		{
			Global_4718592.f_169822 = 1000;
		}
		bVar3 = false;
		while (bVar3 <= 3)
		{
			StringCopy(&cVar20, "kspt", 8);
			StringIntConCat(&cVar20, bVar3, 8);
			Global_4718592.f_168981[bVar3] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			StringCopy(&cVar20, "kspr", 8);
			StringIntConCat(&cVar20, bVar3, 8);
			Global_4718592.f_168986[bVar3] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			bVar3++;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169828 = DATAFILE::DATADICT_GET_INT(iVar1, "hrdnt");
		}
		else
		{
			Global_4718592.f_169828 = 60000;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sdtick") == 3)
		{
			Global_4718592.f_169829 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sdtick");
		}
		else
		{
			Global_4718592.f_169829 = 0.5f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sddmg") == 3)
		{
			Global_4718592.f_169831 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sddmg");
		}
		else
		{
			Global_4718592.f_169831 = 1f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sdstp") == 3)
		{
			Global_4718592.f_169832 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sdstp");
		}
		else
		{
			Global_4718592.f_169832 = 50f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sdmxp") == 3)
		{
			Global_4718592.f_169833 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sdmxp");
		}
		else
		{
			Global_4718592.f_169833 = 100f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sddri") == 3)
		{
			Global_4718592.f_169830 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sddri");
		}
		else
		{
			Global_4718592.f_169830 = 1.5f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sdrsc") == 3)
		{
			Global_4718592.f_169834 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sdrsc");
		}
		else
		{
			Global_4718592.f_169834 = 25f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "sdidd") == 3)
		{
			Global_4718592.f_169835 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sdidd");
		}
		else
		{
			Global_4718592.f_169835 = 1f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMt1r1") == 2)
		{
			Global_4718592.f_169836 = DATAFILE::DATADICT_GET_INT(iVar1, "GMt1r1");
		}
		else
		{
			Global_4718592.f_169836 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMt2r1") == 2)
		{
			Global_4718592.f_169837 = DATAFILE::DATADICT_GET_INT(iVar1, "GMt2r1");
		}
		else
		{
			Global_4718592.f_169837 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMt1r2") == 2)
		{
			Global_4718592.f_169838 = DATAFILE::DATADICT_GET_INT(iVar1, "GMt1r2");
		}
		else
		{
			Global_4718592.f_169838 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMt2r2") == 2)
		{
			Global_4718592.f_169839 = DATAFILE::DATADICT_GET_INT(iVar1, "GMt2r2");
		}
		else
		{
			Global_4718592.f_169839 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMsttm") == 2)
		{
			Global_4718592.f_169840 = DATAFILE::DATADICT_GET_INT(iVar1, "GMsttm");
		}
		else
		{
			Global_4718592.f_169840 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "GMswrt") == 2)
		{
			Global_4718592.f_169841 = DATAFILE::DATADICT_GET_INT(iVar1, "GMswrt");
		}
		else
		{
			Global_4718592.f_169841 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "tgtmcd") == 2)
		{
			Global_4718592.f_170133 = DATAFILE::DATADICT_GET_INT(iVar1, "tgtmcd");
		}
		else
		{
			Global_4718592.f_170133 = 30;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "mjtr") == 2)
		{
			Global_4718592.f_170132 = DATAFILE::DATADICT_GET_INT(iVar1, "mjtr");
		}
		else
		{
			Global_4718592.f_170132 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "hhdmdp") == 3)
		{
			Global_4718592.f_169842 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "hhdmdp");
		}
		else
		{
			Global_4718592.f_169842 = 2.5f;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, "hhdmsp") == 2)
		{
			Global_4718592.f_169843 = DATAFILE::DATADICT_GET_INT(iVar1, "hhdmsp");
		}
		else
		{
			Global_4718592.f_169843 = 0;
		}
		__LIB_18__::func_414("artLtTm", &(Global_4718592.f_176774), &iVar1, 0, -2340845);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168929 = DATAFILE::DATADICT_GET_INT(iVar1, "pptl");
		}
		else
		{
			Global_4718592.f_168929 = 5;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168928 = DATAFILE::DATADICT_GET_INT(iVar1, "ptltl");
		}
		else
		{
			Global_4718592.f_168928 = 0;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169002 = DATAFILE::DATADICT_GET_INT(iVar1, "ptlem");
		}
		else
		{
			Global_4718592.f_169002 = -1;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168924 = DATAFILE::DATADICT_GET_INT(iVar1, "trrt");
		}
		else
		{
			Global_4718592.f_168924 = 3;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169003 = DATAFILE::DATADICT_GET_INT(iVar1, "tptb");
		}
		else
		{
			Global_4718592.f_169003 = 5000;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169004 = DATAFILE::DATADICT_GET_INT(iVar1, "tprt");
		}
		else
		{
			Global_4718592.f_169004 = 2500;
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169005 = DATAFILE::DATADICT_GET_INT(iVar1, "ldpucd");
		}
		else
		{
			Global_4718592.f_169005 = 3000;
		}
		StringCopy(&cVar20, "rtveft", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_168785[iVar0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_168785[iVar0] = 0;
		}
		StringCopy(&cVar20, "mrtr", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_169878[iVar0] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_169878[iVar0] = 0f;
		}
		StringCopy(&cVar20, "frtr", 8);
		StringIntConCat(&cVar20, iVar0, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_169883[iVar0] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_169883[iVar0] = 0f;
		}
		iVar0++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ctmrs") == 4)
	{
		Global_4718592.f_115999 = DATAFILE::DATADICT_GET_INT(iVar1, "nqrc");
	}
	else
	{
		Global_4718592.f_115999 = 0;
	}
	uVar49 = 20;
	iVar50 = 0;
	while (iVar50 <= 15)
	{
		StringCopy(&cVar20, "qrcps", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_116000[iVar50 /*30*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "qrchd", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_3 = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_3 = 0f;
		}
		StringCopy(&cVar20, "qrcbs", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_4 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_4 = 0;
		}
		StringCopy(&cVar20, "qrctm", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_5 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_5 = 0;
		}
		StringCopy(&cVar20, "qrcck", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_6 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_6 = 0;
		}
		StringCopy(&cVar20, "qrcsg", 8);
		StringIntConCat(&cVar20, iVar50, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_7 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116000[iVar50 /*30*/].f_7 = 0;
		}
		__LIB_18__::func_404("qrc_sgr", &(Global_4718592.f_116000[iVar50 /*30*/].f_8), &iVar1, &uVar48, iVar50, 0, 0);
		__LIB_18__::func_401("qrc_ssgr", &(Global_4718592.f_116000[iVar50 /*30*/].f_9), 20, &iVar1, &uVar49, iVar50, 0, 0);
		iVar50++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ctmrs") == 4)
	{
		StringCopy(&(Global_4718592.f_116835), DATAFILE::DATADICT_GET_STRING(iVar1, "ctmrs"), 24);
	}
	else
	{
		StringCopy(&(Global_4718592.f_116835), "", 24);
	}
	bVar3 = false;
	while (bVar3 < 6)
	{
		StringCopy(&cVar20, "avss", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		Global_4718592.f_142733[bVar3 /*3*/][__LIB_13__::func_437(bVar3)] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		iVar4 = __LIB_18__::func_25(bVar3);
		while (iVar4 <= 31)
		{
			MISC::CLEAR_BIT(&(Global_4718592.f_142733[bVar3 /*3*/][__LIB_13__::func_437(bVar3)]), iVar4);
			iVar4++;
		}
		bVar3++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vsclout") == 2)
	{
		Global_4718592.f_142752[0] = DATAFILE::DATADICT_GET_INT(iVar1, "vsclout");
	}
	else
	{
		Global_4718592.f_142752[0] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vsthout") == 2)
	{
		Global_4718592.f_142752[1] = DATAFILE::DATADICT_GET_INT(iVar1, "vsthout");
	}
	else
	{
		Global_4718592.f_142752[1] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vshwout") == 2)
	{
		Global_4718592.f_142752[3] = DATAFILE::DATADICT_GET_INT(iVar1, "vshwout");
	}
	else
	{
		Global_4718592.f_142752[3] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vsenout") == 2)
	{
		Global_4718592.f_142752[2] = DATAFILE::DATADICT_GET_INT(iVar1, "vsenout");
	}
	else
	{
		Global_4718592.f_142752[2] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vstgout") == 2)
	{
		Global_4718592.f_142752[4] = DATAFILE::DATADICT_GET_INT(iVar1, "vstgout");
	}
	else
	{
		Global_4718592.f_142752[4] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vsbsout") == 2)
	{
		Global_4718592.f_142752[5] = DATAFILE::DATADICT_GET_INT(iVar1, "vsbsout");
	}
	else
	{
		Global_4718592.f_142752[5] = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "alfutvs") == 2)
	{
		Global_4718592.f_142759 = DATAFILE::DATADICT_GET_INT(iVar1, "alfutvs");
	}
	else
	{
		Global_4718592.f_142759 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vsdfstc") == 2)
	{
		Global_4718592.f_142760 = DATAFILE::DATADICT_GET_INT(iVar1, "vsdfstc");
	}
	else if (((!BitTest(Global_4718592.f_12, 23) && !BitTest(Global_4718592.f_12, 24)) && !BitTest(Global_4718592.f_13, 31)) && !BitTest(Global_4718592.f_14, 8))
	{
		Global_4718592.f_142760 = -1;
	}
	else if (((!BitTest(Global_4718592.f_12, 23) && BitTest(Global_4718592.f_12, 24)) && !BitTest(Global_4718592.f_13, 31)) && !BitTest(Global_4718592.f_14, 8))
	{
		Global_4718592.f_142760 = 0;
	}
	else if (((BitTest(Global_4718592.f_12, 23) && !BitTest(Global_4718592.f_12, 24)) && !BitTest(Global_4718592.f_13, 31)) && !BitTest(Global_4718592.f_14, 8))
	{
		Global_4718592.f_142760 = 1;
	}
	else if (((!BitTest(Global_4718592.f_12, 23) && !BitTest(Global_4718592.f_12, 24)) && BitTest(Global_4718592.f_13, 31)) && !BitTest(Global_4718592.f_14, 8))
	{
		Global_4718592.f_142760 = 2;
	}
	else if (((!BitTest(Global_4718592.f_12, 23) && !BitTest(Global_4718592.f_12, 24)) && !BitTest(Global_4718592.f_13, 31)) && BitTest(Global_4718592.f_14, 8))
	{
		Global_4718592.f_142760 = 3;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "dspteam") == 2)
	{
		Global_4718592.f_163005 = DATAFILE::DATADICT_GET_INT(iVar1, "dspteam");
	}
	else
	{
		Global_4718592.f_163005 = -1;
	}
	if ((!__LIB_11__::func_730() && !__LIB_7__::func_170()) && !__LIB_18__::func_24(Global_4718592.f_116524))
	{
		if (NETWORK::UGC_IS_LANGUAGE_SUPPORTED(iParam1))
		{
			StringCopy(&(Global_4718592.f_116531), DATAFILE::DATADICT_GET_STRING(iVar1, "nm"), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_116531), __LIB_13__::func_438(), 64);
		}
		if (!__LIB_0__::func_157(0) && __LIB_0__::func_3() == 0)
		{
			if (__LIB_23__::func_520())
			{
				Global_4718592.f_116531 = { __LIB_18__::func_22() };
			}
			else if (__LIB_10__::func_584())
			{
				Global_4718592.f_116531 = { __LIB_18__::func_21() };
			}
		}
	}
	else if (__LIB_10__::func_584())
	{
		Global_4718592.f_116531 = { __LIB_18__::func_21() };
	}
	else
	{
		StringCopy(&(Global_4718592.f_116531), DATAFILE::DATADICT_GET_STRING(iVar1, "nm"), 64);
	}
	Global_4718592.f_117096 = DATAFILE::DATADICT_GET_INT(iVar1, "mgrk");
	Global_4718592.f_117097 = DATAFILE::DATADICT_GET_INT(iVar1, "mght");
	StringCopy(&(Global_4718592.f_116553[0 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[1 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[2 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[3 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[4 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[5 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[6 /*16*/]), "", 64);
	StringCopy(&(Global_4718592.f_116553[7 /*16*/]), "", 64);
	uVar51 = DATAFILE::DATADICT_GET_ARRAY(iVar1, "dec");
	iVar52 = HUD::GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(DATAFILE::DATAARRAY_GET_STRING(uVar51, 0));
	if (iParam1 == -1 || NETWORK::UGC_IS_LANGUAGE_SUPPORTED(iParam1))
	{
		if (iVar52 <= 63)
		{
			bVar3 = false;
			while (bVar3 <= (DATAFILE::DATAARRAY_GET_COUNT(uVar51) - 1))
			{
				StringCopy(&(Global_4718592.f_116553[bVar3 /*16*/]), DATAFILE::DATAARRAY_GET_STRING(uVar51, bVar3), 64);
				bVar3++;
			}
		}
		else
		{
			sVar54 = DATAFILE::DATAARRAY_GET_STRING(uVar51, 0);
			bVar3 = false;
			while (bVar3 <= 7)
			{
				if (iVar52 > (63 * bVar3))
				{
					if (iVar52 > (63 * bVar3) + 63)
					{
						iVar53 = (63 * bVar3) + 63;
					}
					else
					{
						iVar53 = iVar52;
					}
					StringCopy(&(Global_4718592.f_116553[bVar3 /*16*/]), HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES(sVar54, (63 * bVar3), iVar53), 64);
				}
				bVar3++;
			}
		}
	}
	else
	{
		StringCopy(&(Global_4718592.f_116553[0 /*16*/]), __LIB_13__::func_438(), 64);
	}
	if (DATAFILE::DATADICT_GET_TYPE(iVar1, "ricb") == 2)
	{
		Global_4718592.f_166163 = DATAFILE::DATADICT_GET_INT(iVar1, "ricb");
	}
	else
	{
		Global_4718592.f_166163 = 0;
	}
	if (DATAFILE::DATADICT_GET_TYPE(iVar1, "ripvh") == 2)
	{
		Global_4718592.f_166164 = DATAFILE::DATADICT_GET_INT(iVar1, "ripvh");
	}
	else
	{
		Global_4718592.f_166164 = 0;
	}
	Global_4718592.f_593 = DATAFILE::DATADICT_GET_INT(iVar1, "tnum");
	Global_4718592.f_594 = DATAFILE::DATADICT_GET_INT(iVar1, "mtnum");
	if (!__LIB_1__::func_200())
	{
		if (!BitTest(Global_4718592.f_15, 14))
		{
			Global_4718592.f_592 = Global_4718592.f_593;
		}
		else if (DATAFILE::DATADICT_GET_TYPE(iVar1, "dtn") == 2)
		{
			Global_4718592.f_592 = DATAFILE::DATADICT_GET_INT(iVar1, "dtn");
		}
		else
		{
			Global_4718592.f_592 = Global_4718592.f_593;
		}
	}
	else
	{
		Global_4718592.f_592 = Global_4718592.f_593;
	}
	if (Global_4718592 == 0)
	{
		if (Global_2714762.f_669.f_11 != 0 && Global_4718592.f_593 != Global_2714762.f_669.f_11)
		{
			if (!Global_262145.f_4735 /* Tunable: DISABLE_DEADLINE_TEAM_CHECK */ && __LIB_13__::func_435(Global_4718592.f_168757))
			{
				iVar55 = __LIB_19__::func_207();
				if (Global_2714762.f_669.f_11 < iVar55)
				{
					Global_2714762.f_669.f_11 = iVar55;
					if (PLAYER::PLAYER_ID() != -1)
					{
						Global_1888862[PLAYER::PLAYER_ID() /*120*/] = Global_2714762.f_669.f_11;
					}
				}
			}
			Global_4718592.f_593 = Global_2714762.f_669.f_11;
			Global_4718592.f_592 = Global_4718592.f_593;
		}
		else if ((__LIB_1__::func_675() || __LIB_1__::func_749()) && __LIB_1__::func_24())
		{
			iVar56 = __LIB_19__::func_207();
			fVar57 = (SYSTEM::TO_FLOAT(iVar56) / SYSTEM::TO_FLOAT(Global_4718592.f_588));
			iVar58 = 0;
			if (Global_4718592.f_593 == 3)
			{
				if (fVar57 <= 0.66f)
				{
					Global_4718592.f_593 = 2;
					iVar58 = 1;
				}
			}
			else if (Global_4718592.f_593 == 4)
			{
				if (fVar57 <= 0.5f)
				{
					Global_4718592.f_593 = 2;
					iVar58 = 1;
				}
				else if (fVar57 <= 0.75f)
				{
					Global_4718592.f_593 = 3;
					iVar58 = 1;
				}
			}
			if (iVar58 && Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_96.f_28 >= Global_4718592.f_593)
			{
				Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_96.f_28 = __LIB_19__::func_236(Global_4718592.f_593);
			}
			if (Global_4718592.f_592 > Global_4718592.f_593)
			{
				Global_4718592.f_592 = Global_4718592.f_593;
			}
		}
	}
	__LIB_18__::func_642(&iVar1);
	__LIB_18__::func_20(iVar1);
	if (Global_4718592 == 1)
	{
		if (Global_4718592.f_593 > 4)
		{
			Global_4718592.f_593 = 4;
		}
	}
	else if (Global_4718592.f_593 > 4)
	{
		Global_4718592.f_593 = 4;
	}
	Global_4980736.f_176060 = DATAFILE::DATADICT_GET_INT(iVar1, "atmdm");
	Global_4718592.f_607 = DATAFILE::DATADICT_GET_INT(iVar1, "trel");
	Global_4718592.f_169929 = DATAFILE::DATADICT_GET_INT(iVar1, "tpas");
	Global_4718592.f_116987 = DATAFILE::DATADICT_GET_INT(iVar1, "ltm");
	Global_4718592.f_637 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "vcpr") };
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hstat") == 2)
	{
		Global_4718592.f_116931 = DATAFILE::DATADICT_GET_INT(iVar1, "hstat");
	}
	else
	{
		Global_4718592.f_116931 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "micobs") == 2)
	{
		Global_4718592.f_116885 = DATAFILE::DATADICT_GET_INT(iVar1, "micobs");
	}
	else
	{
		Global_4718592.f_116885 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "micopt") == 2)
	{
		Global_4718592.f_116886 = DATAFILE::DATADICT_GET_INT(iVar1, "micopt");
	}
	else
	{
		Global_4718592.f_116886 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "micocs") == 2)
	{
		Global_4718592.f_116887 = DATAFILE::DATADICT_GET_INT(iVar1, "micocs");
	}
	else
	{
		Global_4718592.f_116887 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csgbs") == 2)
	{
		Global_4718592.f_116888 = DATAFILE::DATADICT_GET_INT(iVar1, "csgbs");
	}
	else
	{
		Global_4718592.f_116888 = 0;
	}
	iVar59 = 0;
	while (iVar59 <= 19)
	{
		StringCopy(&cVar20, "csgc", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116889[iVar59] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116889[iVar59] = 0;
		}
		StringCopy(&cVar20, "csgci", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_116910[iVar59] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_116910[iVar59] = -1;
		}
		iVar59++;
	}
	iVar59 = 0;
	while (iVar59 <= 19)
	{
		StringCopy(&cVar20, "rzpos", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4980736.f_199487[iVar59 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4980736.f_199487[iVar59 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "rzzon", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4980736.f_199548[iVar59] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4980736.f_199548[iVar59] = 0;
		}
		StringCopy(&cVar20, "rzobj", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4980736.f_199569[iVar59] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4980736.f_199569[iVar59] = -1;
		}
		StringCopy(&cVar20, "rzacc", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4980736.f_199590[iVar59] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4980736.f_199590[iVar59] = 100f;
		}
		StringCopy(&cVar20, "rzcav", 8);
		StringIntConCat(&cVar20, iVar59, 8);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4980736.f_199612[iVar59] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4980736.f_199612[iVar59] = -1;
		}
		iVar59++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "rzhmb") == 2)
	{
		Global_4980736.f_199611 = DATAFILE::DATADICT_GET_INT(iVar1, "rzhmb");
	}
	else
	{
		Global_4980736.f_199611 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "numzr") == 2)
	{
		Global_4980736.f_199633 = DATAFILE::DATADICT_GET_INT(iVar1, "numzr");
	}
	else
	{
		Global_4980736.f_199633 = 0;
	}
	uVar60 = DATAFILE::DATADICT_GET_DICT(uParam0, "ene");
	iVar61 = DATAFILE::DATADICT_GET_INT(uVar60, "no");
	bVar3 = false;
	while (bVar3 < 6)
	{
		StringCopy(&cVar20, "hpped", 8);
		if (bVar3 > 0)
		{
			StringIntConCat(&cVar20, bVar3 + 1, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2 && iVar61 > DATAFILE::DATADICT_GET_INT(iVar1, &cVar20))
		{
			Global_4718592.f_110384[bVar3] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110384[bVar3] = -1;
		}
		bVar3++;
	}
	__LIB_18__::func_19(iVar1, 0);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tshd") == 2)
	{
		Global_4718592.f_117084 = DATAFILE::DATADICT_GET_INT(iVar1, "tshd");
	}
	else
	{
		Global_4718592.f_117084 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mrd") == 2)
	{
		Global_4718592.f_117085 = DATAFILE::DATADICT_GET_INT(iVar1, "mrd");
	}
	else
	{
		Global_4718592.f_117085 = 15;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "etim") == 3)
	{
		Global_4718592.f_117087 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "etim");
	}
	else
	{
		Global_4718592.f_117087 = 2.5f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "evel") == 3)
	{
		Global_4718592.f_117088 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "evel");
	}
	else
	{
		Global_4718592.f_117088 = 8f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "etimb") == 3)
	{
		Global_4718592.f_117089 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "etimb");
	}
	else
	{
		Global_4718592.f_117089 = 2.5f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "evelb") == 3)
	{
		Global_4718592.f_117090 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "evelb");
	}
	else
	{
		Global_4718592.f_117090 = 8f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "srct") == 2)
	{
		Global_4718592.f_117086 = DATAFILE::DATADICT_GET_INT(iVar1, "srct");
	}
	else
	{
		Global_4718592.f_117086 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tptbd") == 2)
	{
		Global_4718592.f_117091 = DATAFILE::DATADICT_GET_INT(iVar1, "tptbd");
	}
	else
	{
		Global_4718592.f_117091 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tptba") == 2)
	{
		Global_4718592.f_117092 = DATAFILE::DATADICT_GET_INT(iVar1, "tptba");
	}
	else
	{
		Global_4718592.f_117092 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atspos") == 5)
	{
		Global_4718592.f_165327 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "atspos") };
	}
	else
	{
		Global_4718592.f_165327 = { 0f, 0f, 0f };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atscmp") == 5)
	{
		Global_4718592.f_165321 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "atscmp") };
	}
	else
	{
		Global_4718592.f_165321 = { 0f, 0f, 0f };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atscmr") == 5)
	{
		Global_4718592.f_165324 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "atscmr") };
	}
	else
	{
		Global_4718592.f_165324 = { 0f, 0f, 0f };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atsfov") == 3)
	{
		Global_4718592.f_165330 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "atsfov");
	}
	else
	{
		Global_4718592.f_165330 = 45f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atshed") == 3)
	{
		Global_4718592.f_165331 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "atshed");
	}
	else
	{
		Global_4718592.f_165331 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "atsveh") == 2)
	{
		Global_4718592.f_165332 = DATAFILE::DATADICT_GET_INT(iVar1, "atsveh");
	}
	else
	{
		Global_4718592.f_165332 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hpdt1") == 2)
	{
		Global_4718592.f_116932[0] = DATAFILE::DATADICT_GET_INT(iVar1, "hpdt1");
	}
	else
	{
		Global_4718592.f_116932[0] = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hpdt2") == 2)
	{
		Global_4718592.f_116932[1] = DATAFILE::DATADICT_GET_INT(iVar1, "hpdt2");
	}
	else
	{
		Global_4718592.f_116932[1] = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vdt") == 2)
	{
		Global_4718592.f_116936 = DATAFILE::DATADICT_GET_INT(iVar1, "vdt");
	}
	else
	{
		Global_4718592.f_116936 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrbs") == 2)
	{
		Global_4718592.f_162985 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrbs");
	}
	else
	{
		Global_4718592.f_162985 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrtt") == 2)
	{
		Global_4718592.f_162986 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrtt");
	}
	else
	{
		Global_4718592.f_162986 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrttm") == 2)
	{
		Global_4718592.f_162987 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrttm");
	}
	else
	{
		Global_4718592.f_162987 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrtrl") == 2)
	{
		Global_4718592.f_162988 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrtrl");
	}
	else
	{
		Global_4718592.f_162988 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrpdt") == 2)
	{
		Global_4718592.f_162990 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrpdt");
	}
	else
	{
		Global_4718592.f_162990 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrvdt") == 2)
	{
		Global_4718592.f_162992 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrvdt");
	}
	else
	{
		Global_4718592.f_162992 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrkt") == 2)
	{
		Global_4718592.f_162994 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrkt");
	}
	else
	{
		Global_4718592.f_162994 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbrph") == 2)
	{
		Global_4718592.f_162997 = DATAFILE::DATADICT_GET_INT(iVar1, "hbrph");
	}
	else
	{
		Global_4718592.f_162997 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hecam") == 2)
	{
		Global_4718592.f_163000 = DATAFILE::DATADICT_GET_INT(iVar1, "hecam");
	}
	else
	{
		Global_4718592.f_163000 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbhs") == 2)
	{
		Global_4718592.f_162998 = DATAFILE::DATADICT_GET_INT(iVar1, "hbhs");
	}
	else
	{
		Global_4718592.f_162998 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hbht") == 2)
	{
		Global_4718592.f_162999 = DATAFILE::DATADICT_GET_INT(iVar1, "hbht");
	}
	else
	{
		Global_4718592.f_162999 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "sdrvm") == 2)
	{
		Global_4718592.f_166165 = DATAFILE::DATADICT_GET_INT(iVar1, "sdrvm");
	}
	else
	{
		Global_4718592.f_166165 = 10000;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vstm") == 2)
	{
		Global_4718592.f_166166 = DATAFILE::DATADICT_GET_INT(iVar1, "vstm");
	}
	else
	{
		Global_4718592.f_166166 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "inumbnc") == 2)
	{
		Global_4718592.f_166180 = DATAFILE::DATADICT_GET_INT(iVar1, "inumbnc");
	}
	else
	{
		Global_4718592.f_166180 = 10000;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mdmgm") == 3)
	{
		Global_4718592.f_166167 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "mdmgm");
	}
	else
	{
		Global_4718592.f_166167 = 1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "itsms") == 2)
	{
		Global_4718592.f_168963 = DATAFILE::DATADICT_GET_INT(iVar1, "itsms");
	}
	else
	{
		Global_4718592.f_168963 = 1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "igls") == 2)
	{
		Global_4718592.f_168964 = DATAFILE::DATADICT_GET_INT(iVar1, "igls");
	}
	else
	{
		Global_4718592.f_168964 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "twdas") == 3)
	{
		Global_4718592.f_166168 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "twdas");
	}
	else
	{
		Global_4718592.f_166168 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vdt") == 2)
	{
		Global_4718592.f_168759 = DATAFILE::DATADICT_GET_INT(iVar1, "sphft");
	}
	else
	{
		Global_4718592.f_168759 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "sdsr") == 2)
	{
		Global_4718592.f_168717 = DATAFILE::DATADICT_GET_INT(iVar1, "sdsr");
	}
	else
	{
		Global_4718592.f_168717 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cmxdftms") == 2)
	{
		Global_4718592.f_168782 = DATAFILE::DATADICT_GET_INT(iVar1, "cmxdftms");
	}
	else
	{
		Global_4718592.f_168782 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "crlaa") == 2)
	{
		Global_4718592.f_168784 = DATAFILE::DATADICT_GET_INT(iVar1, "crlaa");
	}
	else
	{
		Global_4718592.f_168784 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cmxtliv") == 2)
	{
		Global_4718592.f_168796 = DATAFILE::DATADICT_GET_INT(iVar1, "cmxtliv");
	}
	else
	{
		Global_4718592.f_168796 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cmxdctl") == 2)
	{
		Global_4718592.f_168797 = DATAFILE::DATADICT_GET_INT(iVar1, "cmxdctl");
	}
	else
	{
		Global_4718592.f_168797 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cmxmctl") == 2)
	{
		Global_4718592.f_168798 = DATAFILE::DATADICT_GET_INT(iVar1, "cmxmctl");
	}
	else
	{
		Global_4718592.f_168798 = 0;
	}
	__LIB_18__::func_414("cmnctl", &(Global_4718592.f_168799), &iVar1, 1, -2340845);
	if ((((iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "hmmtt") == 2) && DATAFILE::DATADICT_GET_TYPE(iVar1, "hmmts") == 2) && DATAFILE::DATADICT_GET_TYPE(iVar1, "hmmte") == 2) && DATAFILE::DATADICT_GET_TYPE(iVar1, "hmmth") == 2)
	{
		Global_4718592.f_163001 = DATAFILE::DATADICT_GET_INT(iVar1, "hmmtt");
		Global_4718592.f_163002 = DATAFILE::DATADICT_GET_INT(iVar1, "hmmts");
		Global_4718592.f_163003 = DATAFILE::DATADICT_GET_INT(iVar1, "hmmte");
		Global_4718592.f_163004 = DATAFILE::DATADICT_GET_INT(iVar1, "hmmth");
	}
	else
	{
		Global_4718592.f_163001 = 0;
		Global_4718592.f_163002 = 0;
		Global_4718592.f_163003 = 0;
		Global_4718592.f_163004 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tstrm") == 2)
	{
		Global_4718592.f_165268 = DATAFILE::DATADICT_GET_INT(iVar1, "tstrm");
	}
	else
	{
		Global_4718592.f_165268 = 0;
	}
	bVar3 = false;
	while (bVar3 <= 35)
	{
		StringCopy(&cVar20, "dtspk", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_142299[bVar3 /*8*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 32);
		}
		else
		{
			StringCopy(&(Global_4718592.f_142299[bVar3 /*8*/]), "", 32);
		}
		StringCopy(&cVar20, "dtspP", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		__LIB_18__::func_414(&cVar20, &(Global_4718592.f_142588[bVar3]), &iVar1, -1, -1);
		bVar3++;
	}
	bVar3 = false;
	while (bVar3 <= 4)
	{
		StringCopy(&cVar20, "cspnm", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4980736.f_175715[bVar3 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4980736.f_175715[bVar3 /*16*/]), "", 64);
		}
		StringCopy(&cVar20, "csvnm", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4980736.f_175796[bVar3 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4980736.f_175796[bVar3 /*16*/]), "", 64);
		}
		StringCopy(&cVar20, "csonm", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4980736.f_175877[bVar3 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4980736.f_175877[bVar3 /*16*/]), "", 64);
		}
		bVar3++;
	}
	bVar3 = false;
	while (bVar3 <= 19)
	{
		StringCopy(&Var15, "otxsgo", 16);
		StringIntConCat(&Var15, bVar3, 16);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 4)
		{
			StringCopy(&(Global_4718592.f_110899[bVar3 /*16*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &Var15), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_110899[bVar3 /*16*/]), "", 64);
		}
		bVar3++;
	}
	iVar62 = 0;
	while (iVar62 <= 3)
	{
		iVar4 = 0;
		while (iVar4 <= 12)
		{
			StringCopy(&cVar20, "ofit", 8);
			StringIntConCat(&cVar20, iVar4 + 1, 8);
			StringIntConCat(&cVar20, iVar62, 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
			{
				Global_4718592.f_142671[iVar62 /*14*/][iVar4] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			iVar4++;
		}
		StringCopy(&cVar20, "ofs1", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142788[iVar62 /*4*/][0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142788[iVar62 /*4*/][0] = 0;
		}
		StringCopy(&cVar20, "ofs2", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142788[iVar62 /*4*/][1] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142788[iVar62 /*4*/][1] = 0;
		}
		StringCopy(&cVar20, "mask1", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142810[iVar62 /*3*/][0] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142810[iVar62 /*3*/][0] = 0;
		}
		StringCopy(&Var15, "gear", 16);
		StringIntConCat(&Var15, iVar62, 16);
		iVar4 = 0;
		while (iVar4 <= 2)
		{
			if (iVar4 > 0)
			{
				StringConCat(&Var15, "h", 16);
				StringIntConCat(&Var15, iVar4, 16);
			}
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
			{
				Global_4718592.f_142761[iVar62 /*4*/][iVar4] = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
			}
			else
			{
				Global_4718592.f_142761[iVar62 /*4*/][iVar4] = 0;
			}
			iVar4++;
		}
		StringCopy(&cVar20, "geard", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142778[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142778[iVar62] = -1;
		}
		StringCopy(&cVar20, "apwfr", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_162484[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162484[iVar62] = -1;
		}
		StringCopy(&cVar20, "apwlr", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_162489[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162489[iVar62] = -1;
		}
		StringCopy(&cVar20, "tcmin", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2 && !__LIB_16__::func_682())
		{
			Global_4718592.f_162908[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162908[iVar62] = 0;
		}
		iVar4 = 0;
		while (iVar4 <= 3)
		{
			StringCopy(&cVar20, "trcmn", 8);
			StringIntConCat(&cVar20, iVar4, 8);
			StringIntConCat(&cVar20, iVar62, 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2 && !__LIB_16__::func_682())
			{
				Global_4718592.f_162913[iVar62 /*5*/][iVar4] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			else
			{
				Global_4718592.f_162913[iVar62 /*5*/][iVar4] = 0;
			}
			iVar4++;
		}
		StringCopy(&cVar20, "tmrsp", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_162935[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162935[iVar62] = 0;
		}
		StringCopy(&cVar20, "vifcit", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_169823[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_169823[iVar62] = -1;
		}
		StringCopy(&cVar20, "tvpm", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_110354[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110354[iVar62] = -1;
		}
		StringCopy(&cVar20, "tvnc", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_110333[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110333[iVar62] = -1;
		}
		StringCopy(&cVar20, "tmrees", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_162940[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162940[iVar62] = 1f;
		}
		StringCopy(&cVar20, "tmvhp", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_110313[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110313[iVar62] = 100;
		}
		StringCopy(&cVar20, "tmvds", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_110318[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110318[iVar62] = 1f;
		}
		StringCopy(&cVar20, "tblty", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_110348[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_110348[iVar62] = 0;
		}
		StringCopy(&cVar20, "pmpos", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_115278[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_115278[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "pmpoi", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_115291[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_115291[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "pmrad", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_115304[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_115304[iVar62] = 0f;
		}
		StringCopy(&cVar20, "dfofit", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142728[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142728[iVar62] = -1;
		}
		StringCopy(&cVar20, "dfstyl", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_142805[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_142805[iVar62] = -1;
		}
		StringCopy(&cVar20, "clrovr", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_111249[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_111249[iVar62] = -1;
		}
		StringCopy(&cVar20, "tswpal", 8);
		StringIntConCat(&cVar20, iVar62, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4980736.f_69356[iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4980736.f_69356[iVar62] = -1;
		}
		iVar63 = 0;
		while (iVar63 <= 3)
		{
			StringCopy(&cVar20, "", 8);
			StringIntConCat(&cVar20, iVar63 + 1, 8);
			StringConCat(&cVar20, "cmrt", 8);
			StringIntConCat(&cVar20, iVar62, 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
			{
				Global_4718592.f_110363[iVar63 /*5*/][iVar62] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			else
			{
				Global_4718592.f_110363[iVar63 /*5*/][iVar62] = 0;
			}
			StringCopy(&Var15, "trstp", 16);
			StringIntConCat(&Var15, iVar62, 16);
			if (iVar63 > 0)
			{
				StringIntConCat(&Var15, iVar63, 16);
			}
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
			{
				Global_4718592.f_115403[iVar62 /*53*/][iVar63 /*13*/][0 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
			}
			else
			{
				Global_4718592.f_115403[iVar62 /*53*/][iVar63 /*13*/][0 /*3*/] = { 0f, 0f, 0f };
			}
			StringCopy(&Var15, "trstf", 16);
			StringIntConCat(&Var15, iVar62, 16);
			if (iVar63 > 0)
			{
				StringIntConCat(&Var15, iVar63, 16);
			}
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
			{
				Global_4718592.f_115701[iVar62 /*53*/][iVar63 /*13*/][0 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
			}
			else
			{
				Global_4718592.f_115701[iVar62 /*53*/][iVar63 /*13*/][0 /*3*/] = { 0f, 0f, 0f };
			}
			StringCopy(&Var15, "trsth", 16);
			StringIntConCat(&Var15, iVar62, 16);
			if (iVar63 > 0)
			{
				StringIntConCat(&Var15, iVar63, 16);
			}
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
			{
				Global_4718592.f_115616[iVar62 /*21*/][iVar63 /*5*/][0] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
			}
			else
			{
				Global_4718592.f_115616[iVar62 /*21*/][iVar63 /*5*/][0] = 0f;
			}
			iVar64 = 0;
			while (iVar64 <= 3)
			{
				StringCopy(&Var15, "trstp", 16);
				StringIntConCat(&Var15, iVar62, 16);
				StringIntConCat(&Var15, iVar63, 16);
				StringConCat(&Var15, "n", 16);
				StringIntConCat(&Var15, iVar64, 16);
				if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
				{
					Global_4718592.f_115403[iVar62 /*53*/][iVar63 /*13*/][iVar64 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
				}
				else
				{
					Global_4718592.f_115403[iVar62 /*53*/][iVar63 /*13*/][iVar64 /*3*/] = { 0f, 0f, 0f };
				}
				StringCopy(&Var15, "trsth", 16);
				StringIntConCat(&Var15, iVar62, 16);
				StringIntConCat(&Var15, iVar63, 16);
				StringConCat(&Var15, "n", 16);
				StringIntConCat(&Var15, iVar64, 16);
				if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
				{
					Global_4718592.f_115616[iVar62 /*21*/][iVar63 /*5*/][iVar64] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
				}
				else
				{
					Global_4718592.f_115616[iVar62 /*21*/][iVar63 /*5*/][iVar64] = 0f;
				}
				iVar64++;
			}
			StringCopy(&cVar20, "trsrl", 8);
			StringIntConCat(&cVar20, iVar62, 8);
			StringIntConCat(&cVar20, iVar63, 8);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
			{
				Global_4718592.f_166142[iVar62 /*5*/][iVar63] = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
			}
			else
			{
				Global_4718592.f_166142[iVar62 /*5*/][iVar63] = 0;
			}
			iVar63++;
		}
		iVar65 = 0;
		while (iVar65 <= 3)
		{
			StringCopy(&Var15, "iltt", 16);
			StringIntConCat(&Var15, iVar62, 16);
			StringIntConCat(&Var15, iVar65, 16);
			if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
			{
				Global_4718592.f_168761[iVar62 /*5*/][iVar65] = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
			}
			else
			{
				Global_4718592.f_168761[iVar62 /*5*/][iVar65] = 0;
			}
			iVar65++;
		}
		iVar66 = 0;
		while (iVar66 <= 4)
		{
			iVar67 = 0;
			while (iVar67 <= 3)
			{
				StringCopy(&Var15, "cpv", 16);
				StringIntConCat(&Var15, iVar62, 16);
				StringConCat(&Var15, "i", 16);
				StringIntConCat(&Var15, iVar66, 16);
				StringConCat(&Var15, "s", 16);
				StringIntConCat(&Var15, iVar67, 16);
				if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
				{
					Global_4718592.f_165334[iVar62 /*66*/][iVar66 /*13*/][iVar67 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
				}
				else
				{
					Global_4718592.f_165334[iVar62 /*66*/][iVar66 /*13*/][iVar67 /*3*/] = { 0f, 0f, 0f };
				}
				StringCopy(&Var15, "cph", 16);
				StringIntConCat(&Var15, iVar62, 16);
				StringConCat(&Var15, "i", 16);
				StringIntConCat(&Var15, iVar66, 16);
				StringConCat(&Var15, "s", 16);
				StringIntConCat(&Var15, iVar67, 16);
				if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
				{
					Global_4718592.f_165599[iVar62 /*26*/][iVar66 /*5*/][iVar67] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
				}
				else
				{
					Global_4718592.f_165599[iVar62 /*26*/][iVar66 /*5*/][iVar67] = -1f;
				}
				iVar67++;
			}
			iVar66++;
		}
		StringCopy(&cVar20, "tscpos", 8);
		if (iVar62 > 0)
		{
			StringIntConCat(&cVar20, iVar62, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_165272[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_165272[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "tscrot", 8);
		if (iVar62 > 0)
		{
			StringIntConCat(&cVar20, iVar62, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_165285[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_165285[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "tspos", 8);
		if (iVar62 > 0)
		{
			StringIntConCat(&cVar20, iVar62, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 5)
		{
			Global_4718592.f_165298[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &cVar20) };
		}
		else
		{
			Global_4718592.f_165298[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&cVar20, "tscfov", 8);
		if (iVar62 > 0)
		{
			StringIntConCat(&cVar20, iVar62, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_165311[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_165311[iVar62] = 45f;
		}
		StringCopy(&cVar20, "tshead", 8);
		if (iVar62 > 0)
		{
			StringIntConCat(&cVar20, iVar62, 8);
		}
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 3)
		{
			Global_4718592.f_165316[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_165316[iVar62] = 0f;
		}
		iVar62++;
	}
	bVar3 = false;
	while (bVar3 <= 17)
	{
		StringCopy(&cVar20, "pnid", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 4)
		{
			StringCopy(&(Global_4718592.f_162583[bVar3 /*18*/]), DATAFILE::DATADICT_GET_STRING(iVar1, &cVar20), 64);
		}
		else
		{
			StringCopy(&(Global_4718592.f_162583[bVar3 /*18*/]), "", 64);
		}
		StringCopy(&cVar20, "pnlv", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2)
		{
			Global_4718592.f_162583[bVar3 /*18*/].f_16 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162583[bVar3 /*18*/].f_16 = 0;
		}
		StringCopy(&cVar20, "pnvr", 8);
		StringIntConCat(&cVar20, bVar3, 8);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &cVar20) == 2 && !MISC::IS_STRING_NULL_OR_EMPTY(&(Global_4718592.f_162583[bVar3 /*18*/])))
		{
			Global_4718592.f_162583[bVar3 /*18*/].f_17 = DATAFILE::DATADICT_GET_INT(iVar1, &cVar20);
		}
		else
		{
			Global_4718592.f_162583[bVar3 /*18*/].f_17 = -1;
		}
		bVar3++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cposr") == 3)
	{
		Global_4718592.f_166181 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "cposr");
	}
	else
	{
		Global_4718592.f_166181 = 60f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cporv") == 3)
	{
		Global_4718592.f_166184 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "cporv");
	}
	else
	{
		Global_4718592.f_166184 = -1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmbbp") == 2)
	{
		Global_4718592.f_166170 = DATAFILE::DATADICT_GET_INT(iVar1, "bmbbp");
	}
	else
	{
		Global_4718592.f_166170 = 2;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmber") == 2)
	{
		Global_4718592.f_166171 = DATAFILE::DATADICT_GET_INT(iVar1, "bmber");
	}
	else
	{
		Global_4718592.f_166171 = 2;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmbet") == 2)
	{
		Global_4718592.f_166172 = DATAFILE::DATADICT_GET_INT(iVar1, "bmbet");
	}
	else
	{
		Global_4718592.f_166172 = 3000;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmbsi") == 2)
	{
		Global_4718592.f_166173 = DATAFILE::DATADICT_GET_INT(iVar1, "bmbsi");
	}
	else
	{
		Global_4718592.f_166173 = 150;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmbdi") == 3)
	{
		Global_4718592.f_166174 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "bmbdi");
	}
	else
	{
		Global_4718592.f_166174 = 3f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bmbio") == 3)
	{
		Global_4718592.f_166175 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "bmbio");
	}
	else
	{
		Global_4718592.f_166175 = 1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fvjhdt") == 2)
	{
		Global_4718592.f_166176 = DATAFILE::DATADICT_GET_INT(iVar1, "fvjhdt");
	}
	else
	{
		Global_4718592.f_166176 = 25;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fvjhmd") == 2)
	{
		Global_4718592.f_166177 = DATAFILE::DATADICT_GET_INT(iVar1, "fvjhmd");
	}
	else
	{
		Global_4718592.f_166177 = 5;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fvjfvd") == 2)
	{
		Global_4718592.f_166178 = DATAFILE::DATADICT_GET_INT(iVar1, "fvjfvd");
	}
	else
	{
		Global_4718592.f_166178 = 5;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "fvjfvc") == 2)
	{
		Global_4718592.f_166179 = DATAFILE::DATADICT_GET_INT(iVar1, "fvjfvc");
	}
	else
	{
		Global_4718592.f_166179 = 2;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cpopr") == 3)
	{
		Global_4718592.f_166182 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "cpopr");
	}
	else
	{
		Global_4718592.f_166182 = 5f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cpohr") == 3)
	{
		Global_4718592.f_166183 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "cpohr");
	}
	else
	{
		Global_4718592.f_166183 = 60f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bevhtd") == 3)
	{
		Global_4718592.f_110200 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "bevhtd");
	}
	else
	{
		Global_4718592.f_110200 = 0.075f;
	}
	bVar3 = false;
	while (bVar3 <= 9)
	{
		StringCopy(&Var15, "fsclv", 16);
		StringIntConCat(&Var15, bVar3, 16);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
		{
			Global_4718592.f_110203[bVar3 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
		}
		else
		{
			Global_4718592.f_110203[bVar3 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&Var15, "fsclr", 16);
		StringIntConCat(&Var15, bVar3, 16);
		if (DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
		{
			Global_4718592.f_110234[bVar3 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
		}
		else
		{
			Global_4718592.f_110234[bVar3 /*3*/] = { 0f, 0f, 0f };
		}
		bVar3++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "bevhdd") == 3)
	{
		Global_4718592.f_110201 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "bevhdd");
	}
	else
	{
		Global_4718592.f_110201 = 0.075f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc0") == 2)
	{
		Global_4718592.f_166185 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc0");
	}
	else
	{
		Global_4718592.f_166185 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc1") == 2)
	{
		Global_4718592.f_166186 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc1");
	}
	else
	{
		Global_4718592.f_166186 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc2") == 2)
	{
		Global_4718592.f_166187 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc2");
	}
	else
	{
		Global_4718592.f_166187 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc3") == 2)
	{
		Global_4718592.f_166188 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc3");
	}
	else
	{
		Global_4718592.f_166188 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc4") == 2)
	{
		Global_4718592.f_166189 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc4");
	}
	else
	{
		Global_4718592.f_166189 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc5") == 2)
	{
		Global_4718592.f_166190 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc5");
	}
	else
	{
		Global_4718592.f_166190 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc6") == 2)
	{
		Global_4718592.f_166191 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc6");
	}
	else
	{
		Global_4718592.f_166191 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc9") == 2)
	{
		Global_4718592.f_166195 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc9");
	}
	else
	{
		Global_4718592.f_166195 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc7") == 2)
	{
		Global_4718592.f_166193 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc7");
	}
	else
	{
		Global_4718592.f_166193 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratc8") == 2)
	{
		Global_4718592.f_166194 = DATAFILE::DATADICT_GET_INT(iVar1, "ratc8");
	}
	else
	{
		Global_4718592.f_166194 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ratcm") == 3)
	{
		Global_4718592.f_166192 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "ratcm");
	}
	else
	{
		Global_4718592.f_166192 = -1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cdrt") == 3)
	{
		Global_4718592.f_166197 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "cdrt");
	}
	else
	{
		Global_4718592.f_166197 = -1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csttl") == 4)
	{
		StringCopy(&(Global_4718592.f_166198), DATAFILE::DATADICT_GET_STRING(iVar1, "csttl"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166198), "", 16);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csstl") == 4)
	{
		StringCopy(&(Global_4718592.f_166202), DATAFILE::DATADICT_GET_STRING(iVar1, "csstl"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166202), "", 16);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csttl2") == 4)
	{
		StringCopy(&(Global_4718592.f_166206), DATAFILE::DATADICT_GET_STRING(iVar1, "csttl2"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166206), "", 16);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csstl2") == 4)
	{
		StringCopy(&(Global_4718592.f_166210), DATAFILE::DATADICT_GET_STRING(iVar1, "csstl2"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166210), "", 16);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csttl3") == 4)
	{
		StringCopy(&(Global_4718592.f_166214), DATAFILE::DATADICT_GET_STRING(iVar1, "csttl3"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166214), "", 16);
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csstl3") == 4)
	{
		StringCopy(&(Global_4718592.f_166218), DATAFILE::DATADICT_GET_STRING(iVar1, "csstl3"), 16);
	}
	else
	{
		StringCopy(&(Global_4718592.f_166218), "", 16);
	}
	__LIB_16__::func_667();
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ssdsp") == 5)
	{
		Global_4718592.f_168710 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "ssdsp") };
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ssdsr") == 3)
	{
		Global_4718592.f_168713 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "ssdsr");
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ssder") == 3)
	{
		Global_4718592.f_168714 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "ssder");
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ssdst") == 2)
	{
		Global_4718592.f_168715 = DATAFILE::DATADICT_GET_INT(iVar1, "ssdst");
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "ssdtg") == 2)
	{
		Global_4718592.f_168716 = DATAFILE::DATADICT_GET_INT(iVar1, "ssdtg");
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp0") == 2)
	{
		Global_4718592.f_168965 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp0");
	}
	else
	{
		Global_4718592.f_168965 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp1") == 2)
	{
		Global_4718592.f_168966 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp1");
	}
	else
	{
		Global_4718592.f_168966 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp2") == 2)
	{
		Global_4718592.f_168968 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp2");
	}
	else
	{
		Global_4718592.f_168968 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp3") == 2)
	{
		Global_4718592.f_168969 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp3");
	}
	else
	{
		Global_4718592.f_168969 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp4") == 2)
	{
		Global_4718592.f_168970 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp4");
	}
	else
	{
		Global_4718592.f_168970 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp5") == 2)
	{
		Global_4718592.f_168967 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp5");
	}
	else
	{
		Global_4718592.f_168967 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp15") == 2)
	{
		Global_4718592.f_168972 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp15");
	}
	else
	{
		Global_4718592.f_168972 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwp16") == 2)
	{
		Global_4718592.f_168973 = DATAFILE::DATADICT_GET_INT(iVar1, "vwp16");
	}
	else
	{
		Global_4718592.f_168973 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwpmdw") == 2)
	{
		Global_4718592.f_168975 = DATAFILE::DATADICT_GET_INT(iVar1, "vwpmdw");
	}
	else
	{
		Global_4718592.f_168975 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwpdm") == 3)
	{
		Global_4718592.f_168976 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "vwpdm");
	}
	else
	{
		Global_4718592.f_168976 = 1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwpbhd") == 2)
	{
		Global_4718592.f_168971 = DATAFILE::DATADICT_GET_INT(iVar1, "vwpbhd");
	}
	else
	{
		Global_4718592.f_168971 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwprbs") == 2)
	{
		Global_4718592.f_168980 = DATAFILE::DATADICT_GET_INT(iVar1, "vwprbs");
	}
	else
	{
		Global_4718592.f_168980 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwmgfr") == 2)
	{
		Global_4718592.f_168998 = DATAFILE::DATADICT_GET_INT(iVar1, "vwmgfr");
	}
	else
	{
		Global_4718592.f_168998 = 5;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwmgda") == 2)
	{
		Global_4718592.f_168999 = DATAFILE::DATADICT_GET_INT(iVar1, "vwmgda");
	}
	else
	{
		Global_4718592.f_168999 = 350;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwmgnb") == 2)
	{
		Global_4718592.f_169000 = DATAFILE::DATADICT_GET_INT(iVar1, "vwmgnb");
	}
	else
	{
		Global_4718592.f_169000 = 100;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "crttn") == 2)
	{
		Global_4718592.f_169001 = DATAFILE::DATADICT_GET_INT(iVar1, "crttn");
	}
	else
	{
		Global_4718592.f_169001 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "smoc") == 2)
	{
		Global_4718592.f_110202 = DATAFILE::DATADICT_GET_INT(iVar1, "smoc");
	}
	else
	{
		Global_4718592.f_110202 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vrsp") == 2)
	{
		Global_4718592.f_169371 = DATAFILE::DATADICT_GET_INT(iVar1, "vrsp");
	}
	else
	{
		Global_4718592.f_169371 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "otrds") == 2)
	{
		Global_4718592.f_169360 = DATAFILE::DATADICT_GET_INT(iVar1, "otrds");
	}
	else
	{
		Global_4718592.f_169360 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "otsdr") == 2)
	{
		Global_4718592.f_169362 = DATAFILE::DATADICT_GET_INT(iVar1, "otsdr");
	}
	else
	{
		Global_4718592.f_169362 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "otrsc") == 2)
	{
		Global_4718592.f_169363 = DATAFILE::DATADICT_GET_INT(iVar1, "otrsc");
	}
	else
	{
		Global_4718592.f_169363 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "otrpc") == 2)
	{
		Global_4718592.f_169361 = DATAFILE::DATADICT_GET_INT(iVar1, "otrpc");
	}
	else
	{
		Global_4718592.f_169361 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mocb1") == 2)
	{
		Global_4718592.f_169366 = DATAFILE::DATADICT_GET_INT(iVar1, "mocb1");
	}
	else
	{
		Global_4718592.f_169366 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mocb2") == 2)
	{
		Global_4718592.f_169366.f_1 = DATAFILE::DATADICT_GET_INT(iVar1, "mocb2");
	}
	else
	{
		Global_4718592.f_169366.f_1 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mocb3") == 2)
	{
		Global_4718592.f_169366.f_2 = DATAFILE::DATADICT_GET_INT(iVar1, "mocb3");
	}
	else
	{
		Global_4718592.f_169366.f_2 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "moccc") == 2)
	{
		Global_4718592.f_169366.f_3 = DATAFILE::DATADICT_GET_INT(iVar1, "moccc");
	}
	else
	{
		Global_4718592.f_169366.f_3 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "mocbs") == 2)
	{
		Global_4718592.f_169366.f_4 = DATAFILE::DATADICT_GET_INT(iVar1, "mocbs");
	}
	else
	{
		Global_4718592.f_169366.f_4 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwprbs") == 2)
	{
		Global_4718592.f_168980 = DATAFILE::DATADICT_GET_INT(iVar1, "vwprbs");
	}
	else
	{
		Global_4718592.f_168980 = 0;
	}
	Global_4718592.f_168991 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "vtwsp") };
	Global_4718592.f_168994 = { DATAFILE::DATADICT_GET_VECTOR(iVar1, "vtwsr") };
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tsc3") == 3)
	{
		Global_4718592.f_168977 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "tsc3");
	}
	else
	{
		Global_4718592.f_168977 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "tsc4") == 3)
	{
		Global_4718592.f_168978 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "tsc4");
	}
	else
	{
		Global_4718592.f_168978 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "csstd") == 2)
	{
		Global_4718592.f_168979 = DATAFILE::DATADICT_GET_INT(iVar1, "csstd");
	}
	else
	{
		Global_4718592.f_168979 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "prpccd") == 2)
	{
		Global_4718592.f_169876 = DATAFILE::DATADICT_GET_INT(iVar1, "prpccd");
	}
	else
	{
		Global_4718592.f_169876 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "spwnptd") == 2)
	{
		Global_4718592.f_169877 = DATAFILE::DATADICT_GET_INT(iVar1, "spwnptd");
	}
	else
	{
		Global_4718592.f_169877 = 20;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "objsctt") == 2)
	{
		Global_4718592.f_170045 = DATAFILE::DATADICT_GET_INT(iVar1, "objsctt");
	}
	else
	{
		Global_4718592.f_170045 = 20;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cctvde") == 2)
	{
		Global_4718592.f_110361 = DATAFILE::DATADICT_GET_INT(iVar1, "cctvde");
	}
	else
	{
		Global_4718592.f_110361 = 5000;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cctvag") == 2)
	{
		Global_4718592.f_110362 = DATAFILE::DATADICT_GET_INT(iVar1, "cctvag");
	}
	else
	{
		Global_4718592.f_110362 = -1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "spwnptd") == 2)
	{
		Global_4718592.f_169877 = DATAFILE::DATADICT_GET_INT(iVar1, "spwnptd");
	}
	else
	{
		Global_4718592.f_169877 = 20;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "sba") == 3)
	{
		Global_4718592.f_169928 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "sba");
	}
	else
	{
		Global_4718592.f_169928 = 0.5f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "sccd") == 2)
	{
		Global_4718592.f_169916 = DATAFILE::DATADICT_GET_INT(iVar1, "sccd");
	}
	else
	{
		Global_4718592.f_169916 = 500;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmsf") == 3)
	{
		Global_4718592.f_169927 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmsf");
	}
	else
	{
		Global_4718592.f_169927 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "schf") == 3)
	{
		Global_4718592.f_169917 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "schf");
	}
	else
	{
		Global_4718592.f_169917 = 10f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmnhfs") == 3)
	{
		Global_4718592.f_169919 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmnhfs");
	}
	else
	{
		Global_4718592.f_169919 = 1f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scvf") == 3)
	{
		Global_4718592.f_169918 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scvf");
	}
	else
	{
		Global_4718592.f_169918 = 0.5f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmnvfs") == 3)
	{
		Global_4718592.f_169920 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmnvfs");
	}
	else
	{
		Global_4718592.f_169920 = 0f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmxhf") == 3)
	{
		Global_4718592.f_169921 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmxhf");
	}
	else
	{
		Global_4718592.f_169921 = 25f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmnhf") == 3)
	{
		Global_4718592.f_169922 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmnhf");
	}
	else
	{
		Global_4718592.f_169922 = 15f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmxvf") == 3)
	{
		Global_4718592.f_169923 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmxvf");
	}
	else
	{
		Global_4718592.f_169923 = 6f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmnvf") == 3)
	{
		Global_4718592.f_169924 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "scmnvf");
	}
	else
	{
		Global_4718592.f_169924 = 4f;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scd") == 2)
	{
		Global_4718592.f_169925 = DATAFILE::DATADICT_GET_INT(iVar1, "scd");
	}
	else
	{
		Global_4718592.f_169925 = 10;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "scmind") == 2)
	{
		Global_4718592.f_169926 = DATAFILE::DATADICT_GET_INT(iVar1, "scmind");
	}
	else
	{
		Global_4718592.f_169926 = 1;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "awpsobm") == 2)
	{
		Global_4718592.f_170044 = DATAFILE::DATADICT_GET_INT(iVar1, "awpsobm");
	}
	else
	{
		Global_4718592.f_170044 = 0;
	}
	iVar62 = 0;
	while (iVar62 <= 4)
	{
		StringCopy(&Var15, "rmspco", 16);
		StringIntConCat(&Var15, iVar62, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
		{
			Global_4718592.f_170082[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
		}
		else
		{
			Global_4718592.f_170082[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&Var15, "rmspch", 16);
		StringIntConCat(&Var15, iVar62, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
		{
			Global_4718592.f_170098[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
		}
		else
		{
			Global_4718592.f_170098[iVar62] = 0f;
		}
		StringCopy(&Var15, "rmspcc", 16);
		StringIntConCat(&Var15, iVar62, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 5)
		{
			Global_4718592.f_170104[iVar62 /*3*/] = { DATAFILE::DATADICT_GET_VECTOR(iVar1, &Var15) };
		}
		else
		{
			Global_4718592.f_170104[iVar62 /*3*/] = { 0f, 0f, 0f };
		}
		StringCopy(&Var15, "rmspcr", 16);
		StringIntConCat(&Var15, iVar62, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
		{
			Global_4718592.f_170120[iVar62] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
		}
		else
		{
			Global_4718592.f_170120[iVar62] = 0f;
		}
		iVar62++;
	}
	bVar3 = false;
	while (bVar3 <= 2)
	{
		StringCopy(&Var15, "cgsd", 16);
		StringIntConCat(&Var15, bVar3, 16);
		StringConCat(&Var15, "a", 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 3)
		{
			Global_4718592.f_175367[bVar3] = DATAFILE::DATADICT_GET_FLOAT(iVar1, &Var15);
		}
		else if (bVar3 == 0)
		{
			Global_4718592.f_175367[bVar3] = 1.25f;
		}
		else if (bVar3 == 1)
		{
			Global_4718592.f_175367[bVar3] = 1f;
		}
		else if (bVar3 == 2)
		{
			Global_4718592.f_175367[bVar3] = 1.15f;
		}
		bVar3++;
	}
	StringCopy(&Var15, "cgslt", 16);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
	{
		Global_4718592.f_175371 = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
	}
	else
	{
		Global_4718592.f_175371 = 10;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cgmils") == 2)
	{
		Global_4718592.f_175372 = DATAFILE::DATADICT_GET_INT(iVar1, "cgmils");
	}
	else
	{
		Global_4718592.f_175372 = 6000;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "cgmals") == 2)
	{
		Global_4718592.f_175373 = DATAFILE::DATADICT_GET_INT(iVar1, "cgmals");
	}
	else
	{
		Global_4718592.f_175373 = 10000;
	}
	__LIB_18__::func_414("bgMC", &(Global_4718592.f_175374), &iVar1, 0, -2340845);
	__LIB_18__::func_414("bgCTL", &(Global_4718592.f_175375), &iVar1, -1, -2340845);
	__LIB_18__::func_414("bgFlTL", &(Global_4718592.f_175376), &iVar1, -1, -2340845);
	__LIB_18__::func_407("rdza", &(Global_4718592.f_175377), &iVar1, 0f, -904994889);
	StringCopy(&Var15, "pnEMPd", 16);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
	{
		Global_4718592.f_175363 = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
	}
	else
	{
		Global_4718592.f_175363 = 60000;
	}
	StringCopy(&Var15, "pnEMPp", 16);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
	{
		Global_4718592.f_175363.f_1 = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
	}
	else
	{
		Global_4718592.f_175363.f_1 = 35;
	}
	bVar3 = false;
	while (bVar3 <= 31)
	{
		StringCopy(&Var15, "awtt", 16);
		StringIntConCat(&Var15, bVar3, 16);
		if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, &Var15) == 2)
		{
			Global_4718592.f_170046[bVar3] = DATAFILE::DATADICT_GET_INT(iVar1, &Var15);
		}
		else
		{
			Global_4718592.f_170046[bVar3] = 6;
		}
		bVar3++;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "awtrc") == 2)
	{
		Global_4718592.f_170079 = DATAFILE::DATADICT_GET_INT(iVar1, "awtrc");
	}
	else
	{
		Global_4718592.f_170079 = 0;
	}
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "vwfdt") == 3)
	{
		Global_4718592.f_170134 = DATAFILE::DATADICT_GET_FLOAT(iVar1, "vwfdt");
	}
	else
	{
		Global_4718592.f_170134 = 2.5f;
	}
	__LIB_18__::func_18(iVar1);
	if (iVar1 != 0 && DATAFILE::DATADICT_GET_TYPE(iVar1, "pvsp") == 2)
	{
		Global_4718592.f_175378 = DATAFILE::DATADICT_GET_INT(iVar1, "pvsp");
	}
	else
	{
		Global_4718592.f_175378 = 0;
	}
	bVar3 = false;
	while (bVar3 <= 4)
	{
		StringCopy(&Var68, "saspid", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/]), &iVar1, -1, -2340845);
		StringCopy(&Var68, "gsasbs", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_1), &iVar1, 0, -2340845);
		StringCopy(&Var68, "g2sasbs", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_2), &iVar1, 0, -2340845);
		StringCopy(&Var68, "gsasrf", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_3), &iVar1, -1, -2340845);
		StringCopy(&Var68, "gsasrt", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_4), &iVar1, -1, -2340845);
		StringCopy(&Var68, "gsasdr", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_5), &iVar1, 20f, -904994889);
		StringCopy(&Var68, "gsasda", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_6), &iVar1, 45f, -904994889);
		StringCopy(&Var68, "gsasdhea", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_7), &iVar1, 60f, -904994889);
		StringCopy(&Var68, "gsasdhei", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_8), &iVar1, 75f, -904994889);
		StringCopy(&Var68, "gsasidr", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_9), &iVar1, 5f, -904994889);
		StringCopy(&Var68, "gsasida", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_10), &iVar1, 20f, -904994889);
		StringCopy(&Var68, "gsasihea", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_11), &iVar1, 60f, -904994889);
		StringCopy(&Var68, "gsasihei", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_12), &iVar1, 75f, -904994889);
		StringCopy(&Var68, "gsasag", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_13), &iVar1, 5, -2340845);
		StringCopy(&Var68, "gsasgr", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_407(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_14), &iVar1, 20f, -904994889);
		StringCopy(&Var68, "gsaspvpd", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_15), &iVar1, 0, -2340845);
		StringCopy(&Var68, "gsaspvfd", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &(Global_4980736.f_175958[bVar3 /*19*/].f_16), &iVar1, 0, -2340845);
		StringCopy(&Var68, "gsasvpmn", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &iVar0, &iVar1, -1, -2340845);
		Global_4980736.f_175958[bVar3 /*19*/].f_17 = iVar0;
		StringCopy(&Var68, "gsasvfmn", 16);
		StringIntConCat(&Var68, bVar3, 16);
		__LIB_18__::func_414(&Var68, &iVar0, &iVar1, -1, -2340845);
		Global_4980736.f_175958[bVar3 /*19*/].f_18 = iVar0;
		bVar3++;
	}
	__LIB_18__::func_414("runAs", &(Global_4718592.f_615), &iVar1, 3, -2340845);
	__LIB_18__::func_414("ldbS", &(Global_4718592.f_175379), &iVar1, 0, -2340845);
	__LIB_18__::func_414("owr", &(Global_4718592.f_116942), &iVar1, 100, -2340845);
	__LIB_18__::func_641(iVar1);
	__LIB_18__::func_640(iVar1);
	__LIB_18__::func_639(iVar1);
	__LIB_18__::func_414("agIDzz", &(Global_4718592.f_41), &iVar1, 0, 0);
	bVar3 = false;
	while (bVar3 <= 4)
	{
		iVar72 = 0;
		while (iVar72 <= 3)
		{
			StringCopy(&Var15, "agprq_a", 16);
			StringIntConCat(&Var15, bVar3, 16);
			__LIB_18__::func_404(&Var15, &(Global_4718592.f_42[bVar3 /*5*/][iVar72]), &iVar1, &(uVar69[bVar3]), iVar72, 0, -2340845);
			iVar72++;
		}
		__LIB_18__::func_404("agprq_b", &(Global_4718592.f_68[bVar3]), &iVar1, &uVar70, bVar3, 0, -2340845);
		__LIB_18__::func_404("agprq_c", &(Global_4718592.f_74[bVar3]), &iVar1, &uVar71, bVar3, 0, -2340845);
		bVar3++;
	}
	__LIB_18__::func_407("gcgc0", &(Global_4718592.f_176775), &iVar1, 300f, -904994889);
	__LIB_18__::func_407("gcgc1", &(Global_4718592.f_176776), &iVar1, 20f, -904994889);
	__LIB_18__::func_407("gcgc2", &(Global_4718592.f_176777), &iVar1, 50f, -904994889);
	__LIB_18__::func_407("gcgc3", &(Global_4718592.f_176778), &iVar1, 200f, -904994889);
	__LIB_18__::func_407("gcgc4", &(Global_4718592.f_176779), &iVar1, 30f, -904994889);
	__LIB_18__::func_407("gcgc5", &(Global_4718592.f_176780), &iVar1, 200f, -904994889);
	__LIB_18__::func_407("gcgc6", &(Global_4718592.f_176781), &iVar1, 340f, -904994889);
	__LIB_18__::func_407("gcgc7", &(Global_4718592.f_176782), &iVar1, 85f, -904994889);
	__LIB_18__::func_407("gcgc8", &(Global_4718592.f_176783), &iVar1, 190f, -904994889);
	__LIB_18__::func_407("gcgc9", &(Global_4718592.f_176784), &iVar1, 100f, -904994889);
	__LIB_18__::func_407("gcgc10", &(Global_4718592.f_176785), &iVar1, 15f, -904994889);
	__LIB_18__::func_407("gcgc11", &(Global_4718592.f_176786), &iVar1, 25f, -904994889);
	__LIB_18__::func_407("gcgc12", &(Global_4718592.f_176787), &iVar1, 50f, -904994889);
	__LIB_18__::func_407("gcgc13", &(Global_4718592.f_176788), &iVar1, 5f, -904994889);
	__LIB_18__::func_414("gcgc14", &(Global_4718592.f_176789), &iVar1, 200, -2340845);
	__LIB_18__::func_414("gcgc15", &(Global_4718592.f_176790), &iVar1, 50, -2340845);
	__LIB_18__::func_407("gcgc16", &(Global_4718592.f_176791), &iVar1, 300f, -904994889);
	__LIB_18__::func_407("gcgc17", &(Global_4718592.f_176792), &iVar1, 750f, -904994889);
	__LIB_18__::func_407("gcgc18", &(Global_4718592.f_176793), &iVar1, 750f, -904994889);
	__LIB_18__::func_407("gcgc19", &(Global_4718592.f_176794), &iVar1, 200f, -904994889);
	__LIB_18__::func_407("gcgc20", &(Global_4718592.f_176795), &iVar1, 250f, -904994889);
	__LIB_18__::func_407("gcgc21", &(Global_4718592.f_176796), &iVar1, 500f, -904994889);
	__LIB_18__::func_407("gcgc22", &(Global_4718592.f_176797), &iVar1, 500f, -904994889);
	__LIB_18__::func_407("gcgc23", &(Global_4718592.f_176798), &iVar1, 150f, -904994889);
	__LIB_18__::func_414("setft", &(Global_4718592.f_176802), &iVar1, 0, -2340845);
	iVar73 = 0;
	while (iVar73 <= 3)
	{
		__LIB_22__::func_483(&Var15, "asoAS", iVar73, -1);
		__LIB_18__::func_414(&Var15, &(Global_4718592.f_116955[iVar73]), &iVar1, -1, -1);
		__LIB_22__::func_483(&Var15, "asoAST", iVar73, -1);
		__LIB_18__::func_414(&Var15, &(Global_4718592.f_116960[iVar73]), &iVar1, -1, -1);
		__LIB_22__::func_483(&Var15, "asoASSR", iVar73, -1);
		__LIB_18__::func_414(&Var15, &(Global_4718592.f_116965[iVar73]), &iVar1, -1, -1);
		__LIB_22__::func_483(&Var15, "asoASER", iVar73, -1);
		__LIB_18__::func_414(&Var15, &(Global_4718592.f_116970[iVar73]), &iVar1, -1, -1);
		iVar73++;
	}
	iVar62 = 0;
	while (iVar62 <= 3)
	{
		bVar3 = false;
		while (bVar3 <= 3)
		{
			StringCopy(&Var15, "gCachedVeh", 16);
			StringIntConCat(&Var15, iVar62, 16);
			StringConCat(&Var15, "_", 16);
			StringIntConCat(&Var15, bVar3, 16);
			__LIB_18__::func_414(&Var15, &(Global_4718592.f_182965[iVar62 /*5*/][bVar3]), &iVar1, -1, -1);
			StringCopy(&Var15, "gRFE", 16);
			StringIntConCat(&Var15, iVar62, 16);
			StringConCat(&Var15, "_", 16);
			StringIntConCat(&Var15, bVar3, 16);
			__LIB_18__::func_414(&Var15, &(Global_4718592.f_182986[iVar62 /*5*/][bVar3]), &iVar1, 0, 0);
			bVar3++;
		}
		iVar62++;
	}
}

void func_204(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0xBC9D3
{
	switch (iParam2)
	{
		case joaat("primo2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "43SNR624", 16);
					uParam0->f_5 = 1;
					uParam0->f_6 = 1;
					uParam0->f_7 = 0;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 3;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 3;
					uParam0->f_9[6] = 5;
					uParam0->f_9[7] = 3;
					uParam0->f_9[23] = 1;
					uParam0->f_9[24] = 4;
					uParam0->f_9[27] = 3;
					uParam0->f_9[38] = 4;
					uParam0->f_9[48] = 5;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "43SNR624", 16);
					uParam0->f_5 = 8;
					uParam0->f_6 = 0;
					uParam0->f_7 = 5;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 4;
					uParam0->f_9[23] = 11;
					uParam0->f_9[24] = 2;
					uParam0->f_9[27] = 3;
					uParam0->f_9[38] = 2;
					uParam0->f_9[48] = 3;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 2:
					StringCopy(&(uParam0->f_1), "43SNR624", 16);
					uParam0->f_5 = 1;
					uParam0->f_6 = 0;
					uParam0->f_7 = 0;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 4;
					uParam0->f_9[23] = 12;
					uParam0->f_9[24] = 2;
					uParam0->f_9[27] = 3;
					uParam0->f_9[38] = 2;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 3:
					StringCopy(&(uParam0->f_1), "84RLR605", 16);
					uParam0->f_5 = 111;
					uParam0->f_6 = 88;
					uParam0->f_7 = 0;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[1] = 4;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[6] = 1;
					uParam0->f_9[23] = 12;
					uParam0->f_9[24] = 1;
					uParam0->f_9[38] = 1;
					uParam0->f_9[48] = 6;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 4:
					StringCopy(&(uParam0->f_1), "04HPD144", 16);
					uParam0->f_5 = 0;
					uParam0->f_6 = 10;
					uParam0->f_7 = 0;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 3;
					uParam0->f_9[2] = 1;
					uParam0->f_9[6] = 4;
					uParam0->f_9[7] = 3;
					uParam0->f_9[23] = 1;
					uParam0->f_9[24] = 1;
					uParam0->f_9[38] = 1;
					uParam0->f_9[48] = 2;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("baller3"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "82BJD682", 16);
					*uParam0 = 1;
					uParam0->f_5 = 0;
					uParam0->f_6 = 34;
					uParam0->f_7 = 145;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 12;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 35;
					uParam0->f_75 = 1;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 1;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[15] = 3;
					uParam0->f_9[16] = 3;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 18;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "27YTR728", 16);
					*uParam0 = 2;
					uParam0->f_5 = 49;
					uParam0->f_6 = 49;
					uParam0->f_7 = 52;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 222;
					uParam0->f_75 = 222;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 24);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[15] = 1;
					uParam0->f_9[16] = 3;
					uParam0->f_9[18] = 1;
					uParam0->f_9[23] = 14;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("dominator8"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "48HQW158", 16);
					*uParam0 = 1;
					uParam0->f_5 = 147;
					uParam0->f_6 = 0;
					uParam0->f_7 = 4;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 2;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 15;
					uParam0->f_9[8] = 1;
					uParam0->f_9[10] = 2;
					uParam0->f_9[11] = 2;
					uParam0->f_9[12] = 2;
					uParam0->f_9[13] = 1;
					uParam0->f_9[23] = 3;
					uParam0->f_9[26] = 5;
					uParam0->f_9[32] = 1;
					uParam0->f_9[39] = 6;
					uParam0->f_9[40] = 7;
					uParam0->f_9[41] = 5;
					uParam0->f_9[43] = 1;
					uParam0->f_9[45] = 2;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("champion"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "45CQM984", 16);
					*uParam0 = 1;
					uParam0->f_5 = 0;
					uParam0->f_6 = 0;
					uParam0->f_7 = 49;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 1;
					uParam0->f_9[11] = 2;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[15] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
	}
}

void func_205(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0xBD11A
{
	switch (iParam2)
	{
		case joaat("gauntlet4"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "MOODYMAN", 16);
					uParam0->f_5 = 111;
					uParam0->f_6 = 111;
					uParam0->f_7 = 0;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 11;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[1] = 1;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 4;
					uParam0->f_9[15] = 1;
					uParam0->f_9[23] = 15;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("jester3"):
			switch (iParam3)
			{
				case 0:
					uParam0->f_5 = 38;
					uParam0->f_6 = 12;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_75 = 62;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[0] = 8;
					uParam0->f_9[1] = 11;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 2;
					uParam0->f_9[4] = 4;
					uParam0->f_9[5] = 3;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 1;
					uParam0->f_9[15] = 5;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 26;
					uParam0->f_9[48] = 10;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("peyote2"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 1;
					uParam0->f_5 = 11;
					uParam0->f_6 = 39;
					uParam0->f_7 = 2;
					uParam0->f_8 = 30;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[4] = 8;
					uParam0->f_9[5] = 2;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 12;
					uParam0->f_9[14] = 1;
					uParam0->f_9[15] = 4;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 11;
					uParam0->f_9[48] = 10;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("elegy"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 3;
					uParam0->f_5 = 4;
					uParam0->f_6 = 6;
					uParam0->f_7 = 111;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 3;
					uParam0->f_75 = 83;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[0] = 16;
					uParam0->f_9[1] = 3;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 8;
					uParam0->f_9[5] = 5;
					uParam0->f_9[7] = 6;
					uParam0->f_9[8] = 4;
					uParam0->f_9[10] = 3;
					uParam0->f_9[15] = 4;
					uParam0->f_9[20] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 16;
					uParam0->f_9[25] = 1;
					uParam0->f_9[26] = 1;
					uParam0->f_9[27] = 1;
					uParam0->f_9[29] = 4;
					uParam0->f_9[30] = 11;
					uParam0->f_9[31] = 7;
					uParam0->f_9[32] = 12;
					uParam0->f_9[33] = 11;
					uParam0->f_9[39] = 4;
					uParam0->f_9[40] = 5;
					uParam0->f_9[41] = 7;
					uParam0->f_9[42] = 2;
					uParam0->f_9[43] = 3;
					uParam0->f_9[45] = 5;
					uParam0->f_9[46] = 1;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("hustler"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 1;
					uParam0->f_5 = 66;
					uParam0->f_6 = 66;
					uParam0->f_7 = 60;
					uParam0->f_8 = 30;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 11;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 3;
					uParam0->f_9[6] = 4;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 1;
					uParam0->f_9[15] = 4;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 24;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("faction3"):
			switch (iParam3)
			{
				case 0:
					uParam0->f_5 = 142;
					uParam0->f_6 = 159;
					uParam0->f_7 = 81;
					uParam0->f_8 = 142;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 9;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 15;
					uParam0->f_75 = 3;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					MISC::SET_BIT(&(uParam0->f_77), 2);
					uParam0->f_9[7] = 1;
					uParam0->f_9[23] = 216;
					uParam0->f_9[24] = 4;
					uParam0->f_9[27] = 2;
					uParam0->f_9[30] = 11;
					uParam0->f_9[33] = 10;
					uParam0->f_9[35] = 10;
					uParam0->f_9[36] = 1;
					uParam0->f_9[37] = 7;
					uParam0->f_9[39] = 2;
					uParam0->f_9[40] = 3;
					uParam0->f_9[48] = 8;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("italigto"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 1;
					uParam0->f_5 = 112;
					uParam0->f_6 = 112;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_9[0] = 7;
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 3;
					uParam0->f_9[3] = 6;
					uParam0->f_9[4] = 5;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 8;
					uParam0->f_9[8] = 3;
					uParam0->f_9[10] = 5;
					uParam0->f_9[15] = 3;
					uParam0->f_9[20] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 17;
					uParam0->f_9[48] = 4;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("hellion"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 1;
					uParam0->f_5 = 0;
					uParam0->f_6 = 53;
					uParam0->f_7 = 10;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 94;
					uParam0->f_75 = 255;
					uParam0->f_76 = 1;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 3;
					uParam0->f_9[6] = 1;
					uParam0->f_9[8] = 1;
					uParam0->f_9[15] = 3;
					uParam0->f_9[23] = 18;
					uParam0->f_9[48] = 10;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("manana2"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 3;
					uParam0->f_5 = 112;
					uParam0->f_6 = 0;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_75 = 5;
					uParam0->f_76 = 190;
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					MISC::SET_BIT(&(uParam0->f_77), 2);
					uParam0->f_9[23] = 26;
					uParam0->f_9[24] = 1;
					uParam0->f_9[26] = 12;
					uParam0->f_9[27] = 8;
					uParam0->f_9[30] = 12;
					uParam0->f_9[33] = 12;
					uParam0->f_9[34] = 12;
					uParam0->f_9[37] = 1;
					uParam0->f_9[38] = 1;
					uParam0->f_9[39] = 4;
					uParam0->f_9[40] = 1;
					uParam0->f_9[42] = 2;
					uParam0->f_9[45] = 2;
					uParam0->f_9[48] = 7;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("slamvan3"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 3;
					uParam0->f_5 = 82;
					uParam0->f_6 = 23;
					uParam0->f_7 = 0;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 3;
					uParam0->f_75 = 83;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 1;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 17;
					uParam0->f_9[24] = 4;
					uParam0->f_9[25] = 5;
					uParam0->f_9[26] = 1;
					uParam0->f_9[27] = 2;
					uParam0->f_9[28] = 19;
					uParam0->f_9[32] = 9;
					uParam0->f_9[33] = 9;
					uParam0->f_9[34] = 1;
					uParam0->f_9[35] = 22;
					uParam0->f_9[39] = 4;
					uParam0->f_9[40] = 4;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("flashgt"):
			switch (iParam3)
			{
				case 0:
					*uParam0 = 2;
					uParam0->f_5 = 73;
					uParam0->f_6 = 73;
					uParam0->f_7 = 73;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 11;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 3;
					uParam0->f_75 = 83;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[0] = 6;
					uParam0->f_9[1] = 3;
					uParam0->f_9[3] = 6;
					uParam0->f_9[4] = 1;
					uParam0->f_9[5] = 3;
					uParam0->f_9[7] = 5;
					uParam0->f_9[10] = 3;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 107;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("baller5"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "KP1", 16);
					uParam0->f_5 = 12;
					uParam0->f_6 = 0;
					uParam0->f_7 = 2;
					uParam0->f_8 = 7;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("tailgater2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "45PDD194", 16);
					*uParam0 = 3;
					uParam0->f_5 = 89;
					uParam0->f_6 = 89;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 24;
					uParam0->f_9[1] = 9;
					uParam0->f_9[2] = 6;
					uParam0->f_9[3] = 3;
					uParam0->f_9[4] = 6;
					uParam0->f_9[7] = 16;
					uParam0->f_9[8] = 1;
					uParam0->f_9[10] = 12;
					uParam0->f_9[11] = 2;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[18] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 17;
					uParam0->f_9[26] = 1;
					uParam0->f_9[39] = 4;
					uParam0->f_9[40] = 6;
					uParam0->f_9[41] = 18;
					uParam0->f_9[43] = 1;
					uParam0->f_9[47] = 2;
					uParam0->f_9[48] = 5;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 1:
					*uParam0 = 3;
					uParam0->f_5 = 5;
					uParam0->f_6 = 5;
					uParam0->f_7 = 5;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 12;
					uParam0->f_9[1] = 6;
					uParam0->f_9[2] = 3;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[7] = 4;
					uParam0->f_9[8] = 1;
					uParam0->f_9[10] = 8;
					uParam0->f_9[11] = 2;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[18] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 3;
					uParam0->f_9[39] = 1;
					uParam0->f_9[40] = 4;
					uParam0->f_9[41] = 14;
					uParam0->f_9[43] = 3;
					uParam0->f_9[47] = 1;
					uParam0->f_9[48] = 6;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("remus"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "LI1DEE", 16);
					uParam0->f_5 = 29;
					uParam0->f_6 = 29;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 12;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 11;
					uParam0->f_9[1] = 6;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 6;
					uParam0->f_9[7] = 8;
					uParam0->f_9[8] = 2;
					uParam0->f_9[10] = 1;
					uParam0->f_9[11] = 1;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[15] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 29;
					uParam0->f_9[29] = 1;
					uParam0->f_9[30] = 1;
					uParam0->f_9[31] = 2;
					uParam0->f_9[32] = 12;
					uParam0->f_9[33] = 2;
					uParam0->f_9[39] = 6;
					uParam0->f_9[40] = 1;
					uParam0->f_9[41] = 7;
					uParam0->f_9[43] = 3;
					uParam0->f_9[44] = 4;
					uParam0->f_9[47] = 1;
					uParam0->f_9[48] = 7;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("trailerlarge"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "25GXP027", 16);
					uParam0->f_5 = 19;
					uParam0->f_6 = 15;
					uParam0->f_7 = 19;
					uParam0->f_8 = 19;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("italigtb2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "92HWX276", 16);
					uParam0->f_5 = 27;
					uParam0->f_6 = 30;
					uParam0->f_7 = 36;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 20;
					uParam0->f_63 = 20;
					uParam0->f_64 = 20;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 4;
					uParam0->f_9[4] = 4;
					uParam0->f_9[7] = 6;
					uParam0->f_9[9] = 3;
					uParam0->f_9[10] = 1;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[16] = 5;
					uParam0->f_9[18] = 1;
					uParam0->f_9[20] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[30] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("superd"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), " L1T1G8 ", 16);
					uParam0->f_5 = 33;
					uParam0->f_6 = 0;
					uParam0->f_7 = 47;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 26);
					uParam0->f_9[11] = 1;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[14] = 27;
					uParam0->f_9[15] = 2;
					uParam0->f_9[16] = 2;
					uParam0->f_9[23] = 26;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("patriot2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "L1", 16);
					*uParam0 = 4;
					uParam0->f_5 = 0;
					uParam0->f_6 = 0;
					uParam0->f_7 = 10;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 2;
					uParam0->f_9[7] = 1;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[16] = 5;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 24;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "L2", 16);
					*uParam0 = 4;
					uParam0->f_5 = 112;
					uParam0->f_6 = 112;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[7] = 2;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[16] = 5;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 24;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("bagger"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "  FC88  ", 16);
					*uParam0 = 4;
					uParam0->f_5 = 53;
					uParam0->f_6 = 0;
					uParam0->f_7 = 59;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 2;
					uParam0->f_9[8] = 1;
					uParam0->f_9[16] = 5;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 3;
					uParam0->f_9[24] = 3;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("jubilee"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "FCP1", 16);
					*uParam0 = 4;
					uParam0->f_5 = 4;
					uParam0->f_6 = 0;
					uParam0->f_7 = 5;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 14;
					uParam0->f_9[2] = 8;
					uParam0->f_9[3] = 6;
					uParam0->f_9[4] = 6;
					uParam0->f_9[7] = 6;
					uParam0->f_9[11] = 2;
					uParam0->f_9[12] = 1;
					uParam0->f_9[13] = 1;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					if (((NETWORK::NETWORK_IS_ACTIVITY_SESSION() && __LIB_0__::func_797() != __LIB_0__::getMinusOneOrNull()) && __LIB_3__::func_692(__LIB_0__::func_797())) && BitTest(Global_1853348[__LIB_0__::func_797() /*834*/].f_267.f_480.f_1, 21))
					{
						uParam0->f_9[5] = 1;
					}
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
	}
}

void func_206(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0xBE621
{
	int iVar0;
	switch (iParam2)
	{
		case joaat("asbo"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "47BQT444", 16);
					uParam0->f_5 = 67;
					uParam0->f_6 = 67;
					uParam0->f_7 = 67;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 7;
					uParam0->f_9[1] = 3;
					uParam0->f_9[3] = 1;
					uParam0->f_9[5] = 3;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 1;
					uParam0->f_9[10] = 6;
					uParam0->f_9[23] = 5;
					uParam0->f_9[48] = 6;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "03QPK213", 16);
					uParam0->f_5 = 92;
					uParam0->f_6 = 92;
					uParam0->f_7 = 92;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 15;
					uParam0->f_9[1] = 5;
					uParam0->f_9[3] = 10;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 4;
					uParam0->f_9[23] = 46;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					*uParam0 = 4;
					uParam0->f_5 = 135;
					uParam0->f_6 = 111;
					uParam0->f_7 = 135;
					uParam0->f_8 = 81;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 2;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_75 = 255;
					uParam0->f_9[0] = 13;
					uParam0->f_9[1] = 5;
					uParam0->f_9[3] = 9;
					uParam0->f_9[4] = 8;
					uParam0->f_9[5] = 3;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 3;
					uParam0->f_9[10] = 4;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 5;
					uParam0->f_9[48] = 2;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("buccaneer"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 11, 1, 0);
					__LIB_18__::func_449(*uParam1, 12, 0, 0);
					__LIB_18__::func_449(*uParam1, 13, 0, 0);
					__LIB_18__::func_449(*uParam1, 15, 1, 0);
					__LIB_18__::func_449(*uParam1, 23, 6, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 11, 2, 0);
					__LIB_18__::func_449(*uParam1, 12, 1, 0);
					__LIB_18__::func_449(*uParam1, 13, 1, 0);
					__LIB_18__::func_449(*uParam1, 15, 2, 0);
					__LIB_18__::func_449(*uParam1, 23, 13, 0);
					break;
				case 2:
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 11, 3, 0);
					__LIB_18__::func_449(*uParam1, 12, 2, 0);
					__LIB_18__::func_449(*uParam1, 13, 2, 0);
					__LIB_18__::func_449(*uParam1, 15, 3, 0);
					__LIB_18__::func_449(*uParam1, 23, 9, 0);
					break;
			}
			break;
		case joaat("buccaneer2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 15, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 12, 0);
					__LIB_18__::func_449(*uParam1, 26, 13, 0);
					__LIB_18__::func_449(*uParam1, 28, 13, 0);
					__LIB_18__::func_449(*uParam1, 30, 2, 0);
					__LIB_18__::func_449(*uParam1, 33, 9, 0);
					__LIB_18__::func_449(*uParam1, 34, 9, 0);
					__LIB_18__::func_449(*uParam1, 35, 12, 0);
					__LIB_18__::func_449(*uParam1, 36, 3, 0);
					__LIB_18__::func_449(*uParam1, 37, 6, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 4, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 1:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 29, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 9, 0);
					__LIB_18__::func_449(*uParam1, 26, 2, 0);
					__LIB_18__::func_449(*uParam1, 28, 13, 0);
					__LIB_18__::func_449(*uParam1, 30, 13, 0);
					__LIB_18__::func_449(*uParam1, 33, 13, 0);
					__LIB_18__::func_449(*uParam1, 34, 8, 0);
					__LIB_18__::func_449(*uParam1, 35, 13, 0);
					__LIB_18__::func_449(*uParam1, 36, 3, 0);
					__LIB_18__::func_449(*uParam1, 37, 5, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 2:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 29, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 12, 0);
					__LIB_18__::func_449(*uParam1, 28, 2, 0);
					__LIB_18__::func_449(*uParam1, 30, 3, 0);
					__LIB_18__::func_449(*uParam1, 33, 13, 0);
					__LIB_18__::func_449(*uParam1, 34, 11, 0);
					__LIB_18__::func_449(*uParam1, 35, 11, 0);
					__LIB_18__::func_449(*uParam1, 36, 2, 0);
					__LIB_18__::func_449(*uParam1, 37, 3, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 1, 0);
					__LIB_18__::func_449(*uParam1, 40, 3, 0);
					break;
				case 3:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 4, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 9, 0);
					__LIB_18__::func_449(*uParam1, 26, 1, 0);
					__LIB_18__::func_449(*uParam1, 28, 10, 0);
					__LIB_18__::func_449(*uParam1, 30, 2, 0);
					__LIB_18__::func_449(*uParam1, 33, 10, 0);
					__LIB_18__::func_449(*uParam1, 34, 10, 0);
					__LIB_18__::func_449(*uParam1, 35, 1, 0);
					__LIB_18__::func_449(*uParam1, 36, 3, 0);
					__LIB_18__::func_449(*uParam1, 37, 4, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 1, 0);
					__LIB_18__::func_449(*uParam1, 40, 3, 0);
					break;
				case 4:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 13, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 28, 4, 0);
					__LIB_18__::func_449(*uParam1, 30, 3, 0);
					__LIB_18__::func_449(*uParam1, 33, 6, 0);
					__LIB_18__::func_449(*uParam1, 34, 13, 0);
					__LIB_18__::func_449(*uParam1, 35, 3, 0);
					__LIB_18__::func_449(*uParam1, 36, 0, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 5:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 10, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 5, 0);
					__LIB_18__::func_449(*uParam1, 26, 8, 0);
					__LIB_18__::func_449(*uParam1, 28, 6, 0);
					__LIB_18__::func_449(*uParam1, 30, 6, 0);
					__LIB_18__::func_449(*uParam1, 33, 8, 0);
					__LIB_18__::func_449(*uParam1, 34, 6, 0);
					__LIB_18__::func_449(*uParam1, 35, 8, 0);
					__LIB_18__::func_449(*uParam1, 36, 3, 0);
					__LIB_18__::func_449(*uParam1, 37, 1, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 1, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 6:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 1, 0);
					__LIB_18__::func_449(*uParam1, 23, 17, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 2, 0);
					__LIB_18__::func_449(*uParam1, 26, 13, 0);
					__LIB_18__::func_449(*uParam1, 28, 13, 0);
					__LIB_18__::func_449(*uParam1, 30, 12, 0);
					__LIB_18__::func_449(*uParam1, 33, 2, 0);
					__LIB_18__::func_449(*uParam1, 34, 9, 0);
					__LIB_18__::func_449(*uParam1, 35, 12, 0);
					__LIB_18__::func_449(*uParam1, 36, 0, 0);
					__LIB_18__::func_449(*uParam1, 37, 1, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 7:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 8, 0, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 11, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 3, 0);
					__LIB_18__::func_449(*uParam1, 26, 14, 0);
					__LIB_18__::func_449(*uParam1, 28, 1, 0);
					__LIB_18__::func_449(*uParam1, 30, 1, 0);
					__LIB_18__::func_449(*uParam1, 33, 3, 0);
					__LIB_18__::func_449(*uParam1, 34, 3, 0);
					__LIB_18__::func_449(*uParam1, 35, 10, 0);
					__LIB_18__::func_449(*uParam1, 36, 2, 0);
					__LIB_18__::func_449(*uParam1, 37, 6, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 3, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 8:
					StringCopy(&(uParam0->f_1), "12TCU014", 16);
					*uParam0 = 1;
					uParam0->f_5 = 88;
					uParam0->f_6 = 36;
					uParam0->f_7 = 88;
					uParam0->f_8 = 41;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 9;
					uParam0->f_62 = 255;
					uParam0->f_63 = 127;
					uParam0->f_74 = 255;
					uParam0->f_75 = 150;
					uParam0->f_76 = 5;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[7] = 1;
					uParam0->f_9[8] = 1;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[14] = 8;
					uParam0->f_9[20] = 1;
					uParam0->f_9[23] = 80;
					uParam0->f_9[24] = 3;
					uParam0->f_9[25] = 2;
					uParam0->f_9[26] = 3;
					uParam0->f_9[27] = 10;
					uParam0->f_9[28] = 1;
					uParam0->f_9[30] = 4;
					uParam0->f_9[33] = 12;
					uParam0->f_9[34] = 14;
					uParam0->f_9[35] = 18;
					uParam0->f_9[36] = 4;
					uParam0->f_9[37] = 7;
					uParam0->f_9[38] = 3;
					uParam0->f_9[39] = 3;
					uParam0->f_9[40] = 2;
					uParam0->f_9[45] = 1;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 9:
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					VEHICLE::SET_VEHICLE_EXTRA(*uParam1, 1, true);
					VEHICLE::SET_VEHICLE_EXTRA(*uParam1, 2, true);
					VEHICLE::SET_VEHICLE_EXTRA(*uParam1, 3, true);
					VEHICLE::SET_VEHICLE_EXTRA(*uParam1, 4, true);
					break;
			}
			break;
		case joaat("chino2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 23, 19, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					break;
				case 1:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 21, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					break;
				case 2:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 1, 0);
					__LIB_18__::func_449(*uParam1, 9, 1, 0);
					__LIB_18__::func_449(*uParam1, 23, 29, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					__LIB_18__::func_449(*uParam1, 25, 2, 0);
					__LIB_18__::func_449(*uParam1, 26, 1, 0);
					__LIB_18__::func_449(*uParam1, 27, 0, 0);
					__LIB_18__::func_449(*uParam1, 28, 17, 0);
					__LIB_18__::func_449(*uParam1, 30, 12, 0);
					__LIB_18__::func_449(*uParam1, 33, 11, 0);
					__LIB_18__::func_449(*uParam1, 34, 2, 0);
					__LIB_18__::func_449(*uParam1, 35, 13, 0);
					__LIB_18__::func_449(*uParam1, 37, 5, 0);
					__LIB_18__::func_449(*uParam1, 38, 4, 0);
					__LIB_18__::func_449(*uParam1, 39, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 3:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 9, 1, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 27, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					__LIB_18__::func_449(*uParam1, 25, 12, 0);
					__LIB_18__::func_449(*uParam1, 26, 12, 0);
					__LIB_18__::func_449(*uParam1, 27, 9, 0);
					__LIB_18__::func_449(*uParam1, 28, 15, 0);
					__LIB_18__::func_449(*uParam1, 30, 2, 0);
					__LIB_18__::func_449(*uParam1, 33, 2, 0);
					__LIB_18__::func_449(*uParam1, 34, 13, 0);
					__LIB_18__::func_449(*uParam1, 35, 14, 0);
					__LIB_18__::func_449(*uParam1, 37, 7, 0);
					__LIB_18__::func_449(*uParam1, 38, 4, 0);
					__LIB_18__::func_449(*uParam1, 39, 3, 0);
					__LIB_18__::func_449(*uParam1, 40, 1, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 4:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 9, 1, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 15, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					__LIB_18__::func_449(*uParam1, 27, 10, 0);
					__LIB_18__::func_449(*uParam1, 28, 11, 0);
					__LIB_18__::func_449(*uParam1, 30, 2, 0);
					__LIB_18__::func_449(*uParam1, 33, 7, 0);
					__LIB_18__::func_449(*uParam1, 34, 4, 0);
					__LIB_18__::func_449(*uParam1, 35, 8, 0);
					__LIB_18__::func_449(*uParam1, 37, 3, 0);
					__LIB_18__::func_449(*uParam1, 38, 4, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
			}
			break;
		case joaat("faction2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 23, 1);
					__LIB_18__::func_449(*uParam1, 25, 4, 0);
					__LIB_18__::func_449(*uParam1, 26, 9, 0);
					__LIB_18__::func_449(*uParam1, 27, 3, 0);
					__LIB_18__::func_449(*uParam1, 28, 15, 0);
					__LIB_18__::func_449(*uParam1, 30, 12, 0);
					__LIB_18__::func_449(*uParam1, 33, 3, 0);
					__LIB_18__::func_449(*uParam1, 34, 0, 0);
					__LIB_18__::func_449(*uParam1, 35, 11, 0);
					__LIB_18__::func_449(*uParam1, 36, 1, 0);
					__LIB_18__::func_449(*uParam1, 38, 0, 0);
					__LIB_18__::func_449(*uParam1, 39, 3, 0);
					__LIB_18__::func_449(*uParam1, 40, 4, 0);
					break;
				case 1:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 11, 1, 0);
					__LIB_18__::func_449(*uParam1, 16, 3, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 13, 1);
					__LIB_18__::func_449(*uParam1, 25, 2, 0);
					__LIB_18__::func_449(*uParam1, 26, 0, 0);
					__LIB_18__::func_449(*uParam1, 27, 0, 0);
					__LIB_18__::func_449(*uParam1, 28, 10, 0);
					__LIB_18__::func_449(*uParam1, 30, 4, 0);
					__LIB_18__::func_449(*uParam1, 33, 15, 0);
					__LIB_18__::func_449(*uParam1, 34, 2, 0);
					__LIB_18__::func_449(*uParam1, 35, 0, 0);
					__LIB_18__::func_449(*uParam1, 36, 1, 0);
					__LIB_18__::func_449(*uParam1, 37, 1, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 4, 0);
					break;
				case 2:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 21, 1);
					__LIB_18__::func_449(*uParam1, 24, 0, 0);
					__LIB_18__::func_449(*uParam1, 25, 0, 0);
					__LIB_18__::func_449(*uParam1, 26, 2, 0);
					__LIB_18__::func_449(*uParam1, 27, 4, 0);
					__LIB_18__::func_449(*uParam1, 28, 1, 0);
					__LIB_18__::func_449(*uParam1, 30, 4, 0);
					__LIB_18__::func_449(*uParam1, 33, 4, 0);
					__LIB_18__::func_449(*uParam1, 34, 14, 0);
					__LIB_18__::func_449(*uParam1, 35, 10, 0);
					__LIB_18__::func_449(*uParam1, 36, 0, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 0, 0);
					break;
				case 3:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 20, true);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 20, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 1, 0);
					__LIB_18__::func_449(*uParam1, 26, 8, 0);
					__LIB_18__::func_449(*uParam1, 28, 0, 0);
					__LIB_18__::func_449(*uParam1, 30, 10, 0);
					__LIB_18__::func_449(*uParam1, 33, 10, 0);
					__LIB_18__::func_449(*uParam1, 34, 1, 0);
					__LIB_18__::func_449(*uParam1, 35, 1, 0);
					__LIB_18__::func_449(*uParam1, 36, 1, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 4, 0);
					break;
				case 4:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 23, 29, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 12, 0);
					__LIB_18__::func_449(*uParam1, 26, 2, 0);
					__LIB_18__::func_449(*uParam1, 27, 2, 0);
					__LIB_18__::func_449(*uParam1, 28, 12, 0);
					__LIB_18__::func_449(*uParam1, 30, 4, 0);
					__LIB_18__::func_449(*uParam1, 33, 6, 0);
					__LIB_18__::func_449(*uParam1, 34, 12, 0);
					__LIB_18__::func_449(*uParam1, 35, 10, 0);
					__LIB_18__::func_449(*uParam1, 36, 1, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 3, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					break;
				case 5:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 23, 10, 1);
					__LIB_18__::func_449(*uParam1, 24, 0, 0);
					__LIB_18__::func_449(*uParam1, 25, 0, 0);
					__LIB_18__::func_449(*uParam1, 26, 9, 0);
					__LIB_18__::func_449(*uParam1, 27, 1, 0);
					__LIB_18__::func_449(*uParam1, 28, 5, 0);
					__LIB_18__::func_449(*uParam1, 30, 0, 0);
					__LIB_18__::func_449(*uParam1, 33, 0, 0);
					__LIB_18__::func_449(*uParam1, 34, 0, 0);
					__LIB_18__::func_449(*uParam1, 35, 0, 0);
					__LIB_18__::func_449(*uParam1, 36, 0, 0);
					__LIB_18__::func_449(*uParam1, 37, 0, 0);
					__LIB_18__::func_449(*uParam1, 38, 1, 0);
					__LIB_18__::func_449(*uParam1, 39, 1, 0);
					__LIB_18__::func_449(*uParam1, 40, 1, 0);
					break;
				case 6:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 23, 11, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 3, 0);
					__LIB_18__::func_449(*uParam1, 26, 12, 0);
					__LIB_18__::func_449(*uParam1, 27, 0, 0);
					__LIB_18__::func_449(*uParam1, 28, 14, 0);
					__LIB_18__::func_449(*uParam1, 30, 10, 0);
					__LIB_18__::func_449(*uParam1, 33, 4, 0);
					__LIB_18__::func_449(*uParam1, 34, 4, 0);
					__LIB_18__::func_449(*uParam1, 35, 7, 0);
					__LIB_18__::func_449(*uParam1, 36, 1, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					__LIB_18__::func_449(*uParam1, 39, 1, 0);
					__LIB_18__::func_449(*uParam1, 40, 3, 0);
					break;
				case 7:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 20, true);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 10, 1);
					__LIB_18__::func_449(*uParam1, 24, 1, 0);
					__LIB_18__::func_449(*uParam1, 25, 11, 0);
					__LIB_18__::func_449(*uParam1, 26, 11, 0);
					__LIB_18__::func_449(*uParam1, 27, 1, 0);
					__LIB_18__::func_449(*uParam1, 28, 11, 0);
					__LIB_18__::func_449(*uParam1, 30, 13, 0);
					__LIB_18__::func_449(*uParam1, 33, 15, 0);
					__LIB_18__::func_449(*uParam1, 34, 14, 0);
					__LIB_18__::func_449(*uParam1, 35, 14, 0);
					__LIB_18__::func_449(*uParam1, 36, 0, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 2, 0);
					__LIB_18__::func_449(*uParam1, 39, 3, 0);
					__LIB_18__::func_449(*uParam1, 40, 4, 0);
					break;
			}
			break;
		case joaat("moonbeam2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 5, 0, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 18, 1);
					__LIB_18__::func_449(*uParam1, 24, 2, 0);
					__LIB_18__::func_449(*uParam1, 25, 6, 0);
					__LIB_18__::func_449(*uParam1, 26, 3, 0);
					__LIB_18__::func_449(*uParam1, 27, 0, 0);
					__LIB_18__::func_449(*uParam1, 28, 2, 0);
					__LIB_18__::func_449(*uParam1, 31, 4, 0);
					__LIB_18__::func_449(*uParam1, 32, 0, 0);
					__LIB_18__::func_449(*uParam1, 33, 12, 0);
					__LIB_18__::func_449(*uParam1, 34, 12, 0);
					__LIB_18__::func_449(*uParam1, 35, 9, 0);
					__LIB_18__::func_449(*uParam1, 37, 3, 0);
					__LIB_18__::func_449(*uParam1, 38, 3, 0);
					break;
				case 1:
					uParam0->f_6 = 145;
					uParam0->f_7 = 137;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 9;
					uParam0->f_62 = 132;
					uParam0->f_63 = 102;
					uParam0->f_64 = 226;
					uParam0->f_74 = 255;
					uParam0->f_75 = 150;
					uParam0->f_76 = 5;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 1;
					uParam0->f_9[10] = 1;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[14] = 33;
					uParam0->f_9[16] = 5;
					uParam0->f_9[18] = 1;
					uParam0->f_9[20] = 1;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 206;
					uParam0->f_9[24] = 4;
					uParam0->f_9[25] = 5;
					uParam0->f_9[26] = 3;
					uParam0->f_9[27] = 1;
					uParam0->f_9[28] = 4;
					uParam0->f_9[30] = 7;
					uParam0->f_9[31] = 2;
					uParam0->f_9[32] = 1;
					uParam0->f_9[33] = 10;
					uParam0->f_9[34] = 4;
					uParam0->f_9[35] = 6;
					uParam0->f_9[37] = 2;
					uParam0->f_9[38] = 4;
					uParam0->f_9[39] = 2;
					uParam0->f_9[40] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("panto"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 4);
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 1, 0);
					__LIB_18__::func_449(*uParam1, 5, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 2, 0);
					__LIB_18__::func_449(*uParam1, 23, 1, 0);
					__LIB_18__::func_449(*uParam1, 26, 1, 0);
					__LIB_18__::func_449(*uParam1, 30, 1, 0);
					__LIB_18__::func_449(*uParam1, 34, 1, 0);
					iVar0 = 1;
					while (iVar0 <= 6)
					{
						if (VEHICLE::DOES_EXTRA_EXIST(*uParam1, iVar0))
						{
							VEHICLE::SET_VEHICLE_EXTRA(*uParam1, iVar0, false);
						}
						iVar0++;
					}
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 0, 0, 0);
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 2, 0);
					__LIB_18__::func_449(*uParam1, 5, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 0, 0);
					iVar0 = 1;
					while (iVar0 <= 6)
					{
						if (VEHICLE::DOES_EXTRA_EXIST(*uParam1, iVar0))
						{
							VEHICLE::SET_VEHICLE_EXTRA(*uParam1, iVar0, false);
						}
						iVar0++;
					}
					break;
			}
			break;
		case joaat("picador"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 11, 3, 0);
					__LIB_18__::func_449(*uParam1, 12, 2, 0);
					__LIB_18__::func_449(*uParam1, 13, 2, 0);
					__LIB_18__::func_449(*uParam1, 23, 34, 0);
					break;
			}
			break;
		case joaat("voodoo"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 1, 0);
					__LIB_18__::func_449(*uParam1, 2, 1, 0);
					__LIB_18__::func_449(*uParam1, 6, 2, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 25, 1);
					__LIB_18__::func_449(*uParam1, 24, 1, 0);
					__LIB_18__::func_449(*uParam1, 25, 7, 0);
					__LIB_18__::func_449(*uParam1, 26, 11, 0);
					__LIB_18__::func_449(*uParam1, 27, 9, 0);
					__LIB_18__::func_449(*uParam1, 28, 11, 0);
					__LIB_18__::func_449(*uParam1, 33, 4, 0);
					__LIB_18__::func_449(*uParam1, 34, 9, 0);
					__LIB_18__::func_449(*uParam1, 35, 12, 0);
					__LIB_18__::func_449(*uParam1, 37, 2, 0);
					__LIB_18__::func_449(*uParam1, 38, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 43, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, 2, 0);
					break;
				case 1:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 2);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 2, 0);
					__LIB_18__::func_449(*uParam1, 11, 3, 0);
					__LIB_18__::func_449(*uParam1, 12, 2, 0);
					__LIB_18__::func_449(*uParam1, 13, 2, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 18, true);
					__LIB_18__::func_449(*uParam1, 23, 18, 1);
					__LIB_18__::func_449(*uParam1, 24, 3, 0);
					__LIB_18__::func_449(*uParam1, 25, 7, 0);
					__LIB_18__::func_449(*uParam1, 26, 5, 0);
					__LIB_18__::func_449(*uParam1, 27, 9, 0);
					__LIB_18__::func_449(*uParam1, 28, 9, 0);
					__LIB_18__::func_449(*uParam1, 33, 11, 0);
					__LIB_18__::func_449(*uParam1, 34, 2, 0);
					__LIB_18__::func_449(*uParam1, 35, 3, 0);
					__LIB_18__::func_449(*uParam1, 37, 1, 0);
					__LIB_18__::func_449(*uParam1, 38, 4, 0);
					__LIB_18__::func_449(*uParam1, 39, 3, 0);
					__LIB_18__::func_449(*uParam1, 40, 1, 0);
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 43, 1, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
			}
			break;
		case joaat("banshee2"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 1, 0);
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 2, -1, 0);
					__LIB_18__::func_449(*uParam1, 3, 2, 0);
					__LIB_18__::func_449(*uParam1, 4, 4, 0);
					__LIB_18__::func_449(*uParam1, 5, -1, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 7, 0);
					__LIB_18__::func_449(*uParam1, 9, -1, 0);
					__LIB_18__::func_449(*uParam1, 10, -1, 0);
					__LIB_18__::func_449(*uParam1, 11, -1, 0);
					__LIB_18__::func_449(*uParam1, 12, -1, 0);
					__LIB_18__::func_449(*uParam1, 13, -1, 0);
					__LIB_18__::func_449(*uParam1, 14, -1, 0);
					__LIB_18__::func_449(*uParam1, 15, -1, 0);
					__LIB_18__::func_449(*uParam1, 16, -1, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					__LIB_18__::func_449(*uParam1, 23, 5, 0);
					__LIB_18__::func_449(*uParam1, 24, -1, 0);
					__LIB_18__::func_449(*uParam1, 25, -1, 0);
					__LIB_18__::func_449(*uParam1, 26, -1, 0);
					__LIB_18__::func_449(*uParam1, 27, -1, 0);
					__LIB_18__::func_449(*uParam1, 28, -1, 0);
					__LIB_18__::func_449(*uParam1, 29, -1, 0);
					__LIB_18__::func_449(*uParam1, 30, -1, 0);
					__LIB_18__::func_449(*uParam1, 31, 1, 0);
					__LIB_18__::func_449(*uParam1, 32, 2, 0);
					__LIB_18__::func_449(*uParam1, 33, 6, 0);
					__LIB_18__::func_449(*uParam1, 34, 1, 0);
					__LIB_18__::func_449(*uParam1, 35, -1, 0);
					__LIB_18__::func_449(*uParam1, 36, -1, 0);
					__LIB_18__::func_449(*uParam1, 37, -1, 0);
					__LIB_18__::func_449(*uParam1, 38, -1, 0);
					__LIB_18__::func_449(*uParam1, 39, -1, 0);
					__LIB_18__::func_449(*uParam1, 40, -1, 0);
					__LIB_18__::func_449(*uParam1, 41, -1, 0);
					__LIB_18__::func_449(*uParam1, 42, -1, 0);
					__LIB_18__::func_449(*uParam1, 43, -1, 0);
					__LIB_18__::func_449(*uParam1, 44, -1, 0);
					__LIB_18__::func_449(*uParam1, 45, -1, 0);
					__LIB_18__::func_449(*uParam1, 46, -1, 0);
					__LIB_18__::func_449(*uParam1, 47, -1, 0);
					__LIB_18__::func_449(*uParam1, 48, 1, 0);
					break;
				case 1:
					uParam0->f_66 = joaat("banshee2");
					StringCopy(&(uParam0->f_1), "65GRZ071", 16);
					uParam0->f_5 = 27;
					uParam0->f_6 = 27;
					uParam0->f_7 = 27;
					uParam0->f_8 = 2;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 1);
					uParam0->f_9[0] = 3;
					uParam0->f_9[3] = 2;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 3;
					uParam0->f_9[8] = 1;
					uParam0->f_9[11] = 3;
					uParam0->f_9[13] = 2;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 7;
					uParam0->f_9[29] = 1;
					uParam0->f_9[31] = 3;
					uParam0->f_9[32] = 5;
					uParam0->f_9[33] = 13;
					uParam0->f_9[39] = 4;
					uParam0->f_9[41] = 1;
					uParam0->f_9[48] = 3;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 2:
					uParam0->f_66 = joaat("banshee2");
					StringCopy(&(uParam0->f_1), "06NZQ185", 16);
					uParam0->f_5 = 38;
					uParam0->f_6 = 38;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 1);
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 3;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 2;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 4;
					uParam0->f_9[8] = 1;
					uParam0->f_9[11] = 3;
					uParam0->f_9[12] = 2;
					uParam0->f_9[13] = 2;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 26;
					uParam0->f_9[29] = 1;
					uParam0->f_9[31] = 3;
					uParam0->f_9[32] = 5;
					uParam0->f_9[33] = 13;
					uParam0->f_9[39] = 2;
					uParam0->f_9[41] = 6;
					uParam0->f_9[48] = 6;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 3:
					uParam0->f_66 = joaat("banshee2");
					StringCopy(&(uParam0->f_1), "68KWK927", 16);
					uParam0->f_5 = 64;
					uParam0->f_6 = 112;
					uParam0->f_7 = 70;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 2;
					uParam0->f_75 = 21;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 28);
					MISC::SET_BIT(&(uParam0->f_77), 29);
					MISC::SET_BIT(&(uParam0->f_77), 30);
					MISC::SET_BIT(&(uParam0->f_77), 31);
					MISC::SET_BIT(&(uParam0->f_77), 1);
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 4;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 4;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 8;
					uParam0->f_9[8] = 1;
					uParam0->f_9[15] = 3;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 36;
					uParam0->f_9[29] = 2;
					uParam0->f_9[31] = 3;
					uParam0->f_9[32] = 12;
					uParam0->f_9[33] = 6;
					uParam0->f_9[48] = 2;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("sultanrs"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 5);
					__LIB_18__::func_449(*uParam1, 0, 2, 0);
					__LIB_18__::func_449(*uParam1, 1, 6, 0);
					__LIB_18__::func_449(*uParam1, 2, 3, 0);
					__LIB_18__::func_449(*uParam1, 3, 3, 0);
					__LIB_18__::func_449(*uParam1, 4, 4, 0);
					__LIB_18__::func_449(*uParam1, 5, -1, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 8, 0);
					__LIB_18__::func_449(*uParam1, 8, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 1, 0);
					__LIB_18__::func_449(*uParam1, 11, -1, 0);
					__LIB_18__::func_449(*uParam1, 12, -1, 0);
					__LIB_18__::func_449(*uParam1, 13, -1, 0);
					__LIB_18__::func_449(*uParam1, 14, -1, 0);
					__LIB_18__::func_449(*uParam1, 15, -1, 0);
					__LIB_18__::func_449(*uParam1, 16, -1, 0);
					__LIB_18__::func_449(*uParam1, 23, 5, 0);
					__LIB_18__::func_449(*uParam1, 24, -1, 0);
					__LIB_18__::func_449(*uParam1, 25, -1, 0);
					__LIB_18__::func_449(*uParam1, 26, -1, 0);
					__LIB_18__::func_449(*uParam1, 27, -1, 0);
					__LIB_18__::func_449(*uParam1, 28, -1, 0);
					__LIB_18__::func_449(*uParam1, 29, -1, 0);
					__LIB_18__::func_449(*uParam1, 30, -1, 0);
					__LIB_18__::func_449(*uParam1, 31, -1, 0);
					__LIB_18__::func_449(*uParam1, 32, -1, 0);
					__LIB_18__::func_449(*uParam1, 33, -1, 0);
					__LIB_18__::func_449(*uParam1, 34, -1, 0);
					__LIB_18__::func_449(*uParam1, 35, -1, 0);
					__LIB_18__::func_449(*uParam1, 36, -1, 0);
					__LIB_18__::func_449(*uParam1, 37, -1, 0);
					__LIB_18__::func_449(*uParam1, 38, -1, 0);
					__LIB_18__::func_449(*uParam1, 39, -1, 0);
					__LIB_18__::func_449(*uParam1, 40, -1, 0);
					__LIB_18__::func_449(*uParam1, 41, -1, 0);
					__LIB_18__::func_449(*uParam1, 42, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, -1, 0);
					__LIB_18__::func_449(*uParam1, 47, -1, 0);
					__LIB_18__::func_449(*uParam1, 48, -1, 0);
					break;
				case 1:
					uParam0->f_66 = joaat("sultanrs");
					StringCopy(&(uParam0->f_1), "15HBW365", 16);
					uParam0->f_5 = 92;
					uParam0->f_6 = 92;
					uParam0->f_7 = 92;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 11;
					uParam0->f_9[1] = 9;
					uParam0->f_9[2] = 6;
					uParam0->f_9[3] = 2;
					uParam0->f_9[4] = 4;
					uParam0->f_9[5] = 1;
					uParam0->f_9[7] = 1;
					uParam0->f_9[8] = 1;
					uParam0->f_9[11] = 3;
					uParam0->f_9[12] = 2;
					uParam0->f_9[13] = 2;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 49;
					uParam0->f_9[29] = 3;
					uParam0->f_9[30] = 5;
					uParam0->f_9[31] = 4;
					uParam0->f_9[32] = 5;
					uParam0->f_9[33] = 6;
					uParam0->f_9[39] = 1;
					uParam0->f_9[40] = 4;
					uParam0->f_9[41] = 6;
					uParam0->f_9[44] = 1;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 2:
					uParam0->f_66 = joaat("sultanrs");
					StringCopy(&(uParam0->f_1), "86CVG072", 16);
					uParam0->f_5 = 28;
					uParam0->f_6 = 28;
					uParam0->f_7 = 28;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 3;
					uParam0->f_9[1] = 11;
					uParam0->f_9[2] = 2;
					uParam0->f_9[4] = 2;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 4;
					uParam0->f_9[7] = 8;
					uParam0->f_9[11] = 3;
					uParam0->f_9[12] = 2;
					uParam0->f_9[13] = 2;
					uParam0->f_9[15] = 2;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 2;
					uParam0->f_9[29] = 2;
					uParam0->f_9[30] = 1;
					uParam0->f_9[31] = 6;
					uParam0->f_9[32] = 3;
					uParam0->f_9[33] = 12;
					uParam0->f_9[39] = 3;
					uParam0->f_9[40] = 3;
					uParam0->f_9[41] = 1;
					uParam0->f_9[44] = 1;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 3:
					uParam0->f_66 = joaat("sultanrs");
					StringCopy(&(uParam0->f_1), "84TFX949", 16);
					*uParam0 = 2;
					uParam0->f_5 = 138;
					uParam0->f_6 = 138;
					uParam0->f_7 = 88;
					uParam0->f_8 = 88;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 10;
					uParam0->f_9[1] = 12;
					uParam0->f_9[2] = 5;
					uParam0->f_9[3] = 3;
					uParam0->f_9[4] = 5;
					uParam0->f_9[5] = 4;
					uParam0->f_9[6] = 4;
					uParam0->f_9[7] = 10;
					uParam0->f_9[8] = 2;
					uParam0->f_9[10] = 5;
					uParam0->f_9[15] = 4;
					uParam0->f_9[23] = 17;
					uParam0->f_9[27] = 1;
					uParam0->f_9[29] = 4;
					uParam0->f_9[30] = 5;
					uParam0->f_9[31] = 7;
					uParam0->f_9[32] = 6;
					uParam0->f_9[33] = 16;
					uParam0->f_9[48] = 3;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("dubsta3"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_COLOURS(*uParam1, 13, 148);
					VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam1, 148, 111);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 1);
					__LIB_18__::func_449(*uParam1, 1, 5, 0);
					__LIB_18__::func_449(*uParam1, 2, 1, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 10, 3, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 18, true);
					break;
			}
			break;
		case joaat("khanjali"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_COLOURS(*uParam1, 13, 148);
					VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam1, 148, 111);
					__LIB_18__::func_449(*uParam1, 26, 0, 0);
					break;
			}
			break;
		case joaat("barrage"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_COLOURS(*uParam1, 13, 148);
					VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam1, 148, 111);
					__LIB_18__::func_449(*uParam1, 26, 0, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 11, 4, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 18, true);
					__LIB_18__::func_449(*uParam1, 12, 3, 0);
					break;
			}
			break;
		case joaat("dukes2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 2, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 0, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 1, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 3, true);
					VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam1, 255, 5, 190);
					break;
				case 1:
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 2, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 0, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 1, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 3, true);
					VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam1, 3, 83, 255);
					break;
			}
			break;
		case joaat("nightshark"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 1, 0);
					__LIB_18__::func_449(*uParam1, 2, 3, 0);
					__LIB_18__::func_449(*uParam1, 5, 3, 0);
					__LIB_18__::func_449(*uParam1, 6, 9, 0);
					__LIB_18__::func_449(*uParam1, 7, 8, 0);
					__LIB_18__::func_449(*uParam1, 8, 1, 0);
					__LIB_18__::func_449(*uParam1, 23, 21, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 2, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 0, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 1, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 3, true);
					VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam1, 3, 83, 255);
					break;
			}
			break;
		case joaat("speedo4"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					break;
			}
			break;
		case joaat("pounder2"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 5, 1, 0);
					break;
			}
			break;
		case joaat("mule4"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 5, 1, 0);
					break;
			}
			break;
		case joaat("kuruma2"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 3, 3, 0);
					__LIB_18__::func_449(*uParam1, 4, 2, 0);
					VEHICLE::TOGGLE_VEHICLE_MOD(*uParam1, 22, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 2, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 0, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 1, true);
					VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam1, 3, true);
					VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam1, 255, 5, 190);
					break;
			}
			break;
		case joaat("tezeract"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 4, 0);
					__LIB_18__::func_449(*uParam1, 1, 6, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					break;
			}
			break;
		case joaat("pariah"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 5, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 7, 5, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("revolter"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("taipan"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 4, 4, 0);
					__LIB_18__::func_449(*uParam1, 7, 5, 0);
					__LIB_18__::func_449(*uParam1, 3, 4, 0);
					__LIB_18__::func_449(*uParam1, 0, 3, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("tyrant"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 3, 0, 0);
					__LIB_18__::func_449(*uParam1, 0, 2, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 3);
					break;
			}
			break;
		case joaat("sc1"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 0, 0);
					__LIB_18__::func_449(*uParam1, 0, 2, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("xa21"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 4, 0);
					__LIB_18__::func_449(*uParam1, 2, 5, 0);
					__LIB_18__::func_449(*uParam1, 6, 13, 0);
					__LIB_18__::func_449(*uParam1, 7, 9, 0);
					__LIB_18__::func_449(*uParam1, 3, 6, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("contender"):
			switch (iParam3)
			{
				case 0:
					break;
			}
			break;
		case joaat("turismo2"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 3, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					__LIB_18__::func_449(*uParam1, 0, 6, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("turismor"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 1, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					break;
			}
			break;
		case joaat("bruiser"):
		case joaat("bruiser2"):
		case joaat("bruiser3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 0, 0);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 2, 0);
					__LIB_18__::func_449(*uParam1, 7, 12, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 2, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("brutus"):
		case joaat("brutus2"):
		case joaat("brutus3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 4, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 2, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 8, 1, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 1, 0);
					__LIB_18__::func_449(*uParam1, 42, 5, 0);
					__LIB_18__::func_449(*uParam1, 44, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("cerberus"):
		case joaat("cerberus2"):
		case joaat("cerberus3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 4, 9, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 6, 0);
					__LIB_18__::func_449(*uParam1, 7, 4, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 5, 0);
					__LIB_18__::func_449(*uParam1, 43, 2, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("deathbike"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("dominator4"):
		case joaat("dominator5"):
		case joaat("dominator6"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 2, 0);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 3, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 3, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 5, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 43, 1, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("impaler2"):
		case joaat("impaler3"):
		case joaat("impaler4"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 1, 0);
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 2, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 0, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 2, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("imperator"):
		case joaat("imperator2"):
		case joaat("imperator3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 5, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 6, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 44, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("issi3"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "83OSX036", 16);
					*uParam0 = 4;
					uParam0->f_5 = 29;
					uParam0->f_6 = 111;
					uParam0->f_7 = 7;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 1;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 2;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 1;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "87LWG803", 16);
					*uParam0 = 4;
					uParam0->f_5 = 73;
					uParam0->f_6 = 111;
					uParam0->f_7 = 0;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 1;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 2;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 1;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("issi4"):
		case joaat("issi5"):
		case joaat("issi6"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 2, 0);
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 3, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 3, 0);
					__LIB_18__::func_449(*uParam1, 7, 9, 0);
					__LIB_18__::func_449(*uParam1, 8, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 2, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					if (iParam2 == joaat("issi6"))
					{
						__LIB_18__::func_449(*uParam1, 45, 0, 0);
					}
					else
					{
						__LIB_18__::func_449(*uParam1, 45, 1, 0);
					}
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("monster3"):
		case joaat("monster4"):
		case joaat("monster5"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 2, 1, 0);
					__LIB_18__::func_449(*uParam1, 4, 1, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 7, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
				case 2:
					uParam0->f_5 = 153;
					uParam0->f_6 = 12;
					uParam0->f_7 = 0;
					uParam0->f_8 = 160;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 2;
					uParam0->f_9[4] = 2;
					uParam0->f_9[5] = 2;
					uParam0->f_9[7] = 3;
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[16] = 4;
					uParam0->f_9[13] = 3;
					uParam0->f_9[35] = 1;
					uParam0->f_9[48] = 4;
					uParam0->f_9[22] = 10;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("scarab"):
		case joaat("scarab2"):
		case joaat("scarab3"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 5, 0);
					__LIB_18__::func_449(*uParam1, 1, 7, 0);
					__LIB_18__::func_449(*uParam1, 3, 10, 0);
					__LIB_18__::func_449(*uParam1, 4, 3, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 10, 6, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 5, 0);
					__LIB_18__::func_449(*uParam1, 43, 2, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("slamvan4"):
		case joaat("slamvan5"):
		case joaat("slamvan6"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 3, 0);
					__LIB_18__::func_449(*uParam1, 7, 4, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 5, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 44, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 0, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("zr380"):
		case joaat("zr3802"):
		case joaat("zr3803"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 5, 0);
					__LIB_18__::func_449(*uParam1, 1, 0, 0);
					__LIB_18__::func_449(*uParam1, 2, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 1, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 7, 3, 0);
					__LIB_18__::func_449(*uParam1, 8, 2, 0);
					__LIB_18__::func_449(*uParam1, 9, 2, 0);
					__LIB_18__::func_449(*uParam1, 40, 2, 0);
					__LIB_18__::func_449(*uParam1, 41, 2, 0);
					__LIB_18__::func_449(*uParam1, 42, 3, 0);
					__LIB_18__::func_449(*uParam1, 43, 0, 0);
					__LIB_18__::func_449(*uParam1, 44, 0, 0);
					__LIB_18__::func_449(*uParam1, 45, 1, 0);
					break;
				case 1:
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 0, 0);
					break;
			}
			break;
		case joaat("ratloader2"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 2, 0);
					__LIB_18__::func_449(*uParam1, 2, 2, 0);
					__LIB_18__::func_449(*uParam1, 3, 0, 0);
					__LIB_18__::func_449(*uParam1, 4, 5, 0);
					__LIB_18__::func_449(*uParam1, 5, 2, 0);
					__LIB_18__::func_449(*uParam1, 6, 5, 0);
					__LIB_18__::func_449(*uParam1, 8, 0, 0);
					__LIB_18__::func_449(*uParam1, 10, 0, 0);
					__LIB_18__::func_449(*uParam1, 42, 0, 0);
					__LIB_18__::func_449(*uParam1, 48, 2, 0);
					break;
			}
			break;
		case joaat("kamacho"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 0, 7, 0);
					__LIB_18__::func_449(*uParam1, 1, 5, 0);
					__LIB_18__::func_449(*uParam1, 2, 7, 0);
					__LIB_18__::func_449(*uParam1, 3, 3, 0);
					__LIB_18__::func_449(*uParam1, 4, 3, 0);
					__LIB_18__::func_449(*uParam1, 5, 0, 0);
					__LIB_18__::func_449(*uParam1, 6, 1, 0);
					__LIB_18__::func_449(*uParam1, 7, 4, 0);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "80WEG614", 16);
					uParam0->f_5 = 9;
					uParam0->f_8 = 112;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 6;
					uParam0->f_9[2] = 8;
					uParam0->f_9[7] = 3;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("menacer"):
			switch (iParam3)
			{
				case 0:
					__LIB_18__::func_449(*uParam1, 1, 12, 0);
					__LIB_18__::func_449(*uParam1, 2, 6, 0);
					__LIB_18__::func_449(*uParam1, 3, 6, 0);
					__LIB_18__::func_449(*uParam1, 6, 5, 0);
					__LIB_18__::func_449(*uParam1, 7, 16, 0);
					__LIB_18__::func_449(*uParam1, 10, 2, 0);
					break;
			}
			break;
		case joaat("thrax"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_COLOURS(*uParam1, 150, 150);
					VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam1, 89, 21);
					VEHICLE::SET_VEHICLE_EXTRA_COLOUR_5(*uParam1, 1);
					VEHICLE::SET_VEHICLE_EXTRA_COLOUR_6(*uParam1, 132);
					VEHICLE::SET_VEHICLE_LIVERY2(*uParam1, 0);
					break;
			}
			break;
		case joaat("schwarzer"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam1, "TAO1");
					VEHICLE::SET_VEHICLE_COLOURS(*uParam1, 147, 1);
					VEHICLE::SET_VEHICLE_EXTRA_COLOUR_5(*uParam1, 1);
					VEHICLE::SET_VEHICLE_EXTRA_COLOUR_6(*uParam1, 132);
					VEHICLE::SET_VEHICLE_LIVERY2(*uParam1, 0);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam1, 2);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam1, 7);
					__LIB_18__::func_449(*uParam1, 23, 6, 0);
					break;
			}
			break;
		case joaat("rancherxl"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "66SBX027", 16);
					*uParam0 = 2;
					uParam0->f_5 = 100;
					uParam0->f_6 = 100;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 4;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 25);
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("sultan"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "27CLR579", 16);
					uParam0->f_5 = 54;
					uParam0->f_6 = 1;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 24);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 1;
					uParam0->f_9[5] = 1;
					uParam0->f_9[7] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("asterope"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "48XTJ224", 16);
					*uParam0 = 3;
					uParam0->f_5 = 63;
					uParam0->f_6 = 3;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 24);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("kuruma"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "23IJE671", 16);
					uParam0->f_5 = 62;
					uParam0->f_6 = 1;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[1] = 1;
					uParam0->f_9[3] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("youga2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "08ICY997", 16);
					uParam0->f_6 = 2;
					uParam0->f_8 = 112;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[3] = 1;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("regina"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "20WUI734", 16);
					*uParam0 = 2;
					uParam0->f_5 = 61;
					uParam0->f_7 = 61;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					MISC::SET_BIT(&(uParam0->f_77), 1);
					MISC::SET_BIT(&(uParam0->f_77), 24);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("emperor"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "21VJM767", 16);
					uParam0->f_5 = 34;
					uParam0->f_6 = 112;
					uParam0->f_7 = 47;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "LAMAR G", 16);
					*uParam0 = 3;
					uParam0->f_5 = 53;
					uParam0->f_6 = 0;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 2;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 24);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					uParam0->f_9[23] = 18;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("taxi"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "86VME156", 16);
					uParam0->f_5 = 88;
					uParam0->f_6 = 77;
					uParam0->f_7 = 5;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 7);
					MISC::SET_BIT(&(uParam0->f_77), 8);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("dilettante"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "85JFW893", 16);
					uParam0->f_5 = 69;
					uParam0->f_7 = 74;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 24);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("mesa"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "87BYW202", 16);
					*uParam0 = 3;
					uParam0->f_5 = 9;
					uParam0->f_7 = 7;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 4;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					MISC::SET_BIT(&(uParam0->f_77), 25);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("rumpo"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "41KKV206", 16);
					uParam0->f_5 = 3;
					uParam0->f_7 = 5;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_67 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("tailgater"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "22SCY913", 16);
					uParam0->f_5 = 1;
					uParam0->f_6 = 1;
					uParam0->f_7 = 10;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 1);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[11] = 4;
					uParam0->f_9[12] = 3;
					uParam0->f_9[13] = 3;
					uParam0->f_9[18] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("furia"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "ANCESTOR", 16);
					*uParam0 = 4;
					uParam0->f_5 = 138;
					uParam0->f_6 = 138;
					uParam0->f_7 = 89;
					uParam0->f_8 = 21;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 6;
					uParam0->f_9[2] = 8;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 5;
					uParam0->f_9[7] = 8;
					uParam0->f_9[9] = 2;
					uParam0->f_9[22] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("kanjo"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "04DZM900", 16);
					*uParam0 = 4;
					uParam0->f_5 = 136;
					uParam0->f_6 = 136;
					uParam0->f_7 = 5;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 4;
					uParam0->f_9[2] = 3;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 9;
					uParam0->f_9[5] = 2;
					uParam0->f_9[6] = 5;
					uParam0->f_9[7] = 9;
					uParam0->f_9[9] = 1;
					uParam0->f_9[23] = 5;
					uParam0->f_9[27] = 1;
					uParam0->f_9[42] = 2;
					uParam0->f_9[46] = 1;
					uParam0->f_9[48] = 6;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "65LNN730", 16);
					uParam0->f_5 = 89;
					uParam0->f_6 = 89;
					uParam0->f_7 = 88;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 8;
					uParam0->f_9[1] = 7;
					uParam0->f_9[2] = 7;
					uParam0->f_9[3] = 1;
					uParam0->f_9[5] = 6;
					uParam0->f_9[6] = 2;
					uParam0->f_9[9] = 1;
					uParam0->f_9[23] = 14;
					uParam0->f_9[27] = 1;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("sentinel3"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "88WFR722", 16);
					uParam0->f_5 = 111;
					uParam0->f_6 = 29;
					uParam0->f_7 = 145;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 7;
					uParam0->f_9[1] = 6;
					uParam0->f_9[4] = 2;
					uParam0->f_9[5] = 5;
					uParam0->f_9[6] = 4;
					uParam0->f_9[7] = 8;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 2;
					uParam0->f_9[48] = 7;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "63CMS702", 16);
					*uParam0 = 1;
					uParam0->f_5 = 92;
					uParam0->f_6 = 92;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 14;
					uParam0->f_9[1] = 9;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 12;
					uParam0->f_9[10] = 13;
					uParam0->f_9[23] = 6;
					uParam0->f_9[48] = 6;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("retinue2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "23GVN817", 16);
					*uParam0 = 1;
					uParam0->f_5 = 29;
					uParam0->f_6 = 111;
					uParam0->f_7 = 138;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 5;
					uParam0->f_9[2] = 1;
					uParam0->f_9[5] = 2;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 7;
					uParam0->f_9[8] = 3;
					uParam0->f_9[9] = 2;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 22;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "86ACK549", 16);
					*uParam0 = 4;
					uParam0->f_5 = 12;
					uParam0->f_6 = 39;
					uParam0->f_7 = 0;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 5;
					uParam0->f_9[1] = 6;
					uParam0->f_9[2] = 1;
					uParam0->f_9[5] = 3;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 5;
					uParam0->f_9[10] = 2;
					uParam0->f_9[23] = 23;
					uParam0->f_9[48] = 3;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("yosemite2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "60UYD615", 16);
					uParam0->f_5 = 34;
					uParam0->f_6 = 1;
					uParam0->f_7 = 135;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 8;
					uParam0->f_9[1] = 11;
					uParam0->f_9[3] = 5;
					uParam0->f_9[5] = 3;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 4;
					uParam0->f_9[8] = 1;
					uParam0->f_9[48] = 3;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "05SKJ131", 16);
					*uParam0 = 1;
					uParam0->f_5 = 91;
					uParam0->f_6 = 1;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 4;
					uParam0->f_9[5] = 2;
					uParam0->f_9[6] = 4;
					uParam0->f_9[8] = 1;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("sugoi"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "01SRP848", 16);
					uParam0->f_5 = 112;
					uParam0->f_6 = 12;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 6;
					uParam0->f_9[1] = 9;
					uParam0->f_9[2] = 5;
					uParam0->f_9[3] = 2;
					uParam0->f_9[6] = 7;
					uParam0->f_9[7] = 8;
					uParam0->f_9[8] = 4;
					uParam0->f_9[10] = 3;
					uParam0->f_9[23] = 22;
					uParam0->f_9[48] = 4;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "28OKO870", 16);
					*uParam0 = 1;
					uParam0->f_5 = 74;
					uParam0->f_6 = 74;
					uParam0->f_7 = 74;
					uParam0->f_8 = 122;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 3;
					uParam0->f_9[1] = 9;
					uParam0->f_9[2] = 6;
					uParam0->f_9[3] = 7;
					uParam0->f_9[6] = 5;
					uParam0->f_9[7] = 11;
					uParam0->f_9[10] = 4;
					uParam0->f_9[22] = 1;
					uParam0->f_9[23] = 9;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					*uParam0 = 1;
					uParam0->f_5 = 149;
					uParam0->f_6 = 138;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 9;
					uParam0->f_9[1] = 13;
					uParam0->f_9[2] = 7;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[7] = 8;
					uParam0->f_9[8] = 2;
					uParam0->f_9[10] = 5;
					uParam0->f_9[13] = 2;
					uParam0->f_9[15] = 3;
					uParam0->f_9[18] = 1;
					uParam0->f_9[23] = 16;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("jugular"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "82ATK858", 16);
					uParam0->f_5 = 5;
					uParam0->f_6 = 0;
					uParam0->f_7 = 111;
					uParam0->f_8 = 111;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 8;
					uParam0->f_9[1] = 3;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 2;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 5;
					uParam0->f_9[23] = 24;
					uParam0->f_9[48] = 6;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "63LUV750", 16);
					*uParam0 = 1;
					uParam0->f_5 = 38;
					uParam0->f_6 = 38;
					uParam0->f_7 = 37;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 1;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 2;
					uParam0->f_9[10] = 1;
					uParam0->f_9[23] = 17;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("sultan2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "28AAK928", 16);
					uParam0->f_5 = 112;
					uParam0->f_6 = 112;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 5;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 15;
					uParam0->f_9[1] = 4;
					uParam0->f_9[2] = 4;
					uParam0->f_9[3] = 4;
					uParam0->f_9[4] = 9;
					uParam0->f_9[5] = 4;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 8;
					uParam0->f_9[9] = 2;
					uParam0->f_9[23] = 24;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "68BPK026", 16);
					uParam0->f_5 = 68;
					uParam0->f_6 = 68;
					uParam0->f_7 = 68;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 5;
					uParam0->f_9[2] = 4;
					uParam0->f_9[3] = 2;
					uParam0->f_9[4] = 9;
					uParam0->f_9[5] = 3;
					uParam0->f_9[7] = 5;
					uParam0->f_9[9] = 2;
					uParam0->f_9[23] = 22;
					uParam0->f_9[48] = 9;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					uParam0->f_5 = 53;
					uParam0->f_6 = 89;
					uParam0->f_7 = 59;
					uParam0->f_8 = 89;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 14;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 6;
					uParam0->f_9[5] = 8;
					uParam0->f_9[6] = 3;
					uParam0->f_9[7] = 5;
					uParam0->f_9[10] = 2;
					uParam0->f_9[15] = 3;
					uParam0->f_9[23] = 12;
					uParam0->f_9[48] = 10;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("gauntlet3"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "01JCP664", 16);
					uParam0->f_5 = 0;
					uParam0->f_6 = 13;
					uParam0->f_7 = 134;
					uParam0->f_8 = 13;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 4;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 3;
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 6;
					uParam0->f_9[6] = 5;
					uParam0->f_9[7] = 11;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 2;
					uParam0->f_9[10] = 7;
					uParam0->f_9[48] = 8;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "28OAE229", 16);
					uParam0->f_5 = 70;
					uParam0->f_6 = 13;
					uParam0->f_7 = 70;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 3;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 7;
					uParam0->f_9[4] = 5;
					uParam0->f_9[5] = 2;
					uParam0->f_9[6] = 2;
					uParam0->f_9[7] = 5;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 2;
					uParam0->f_9[10] = 4;
					uParam0->f_9[23] = 31;
					uParam0->f_9[48] = 2;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("ellie"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "43TBV742", 16);
					uParam0->f_5 = 69;
					uParam0->f_6 = 111;
					uParam0->f_7 = 74;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_65 = 2;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 2;
					uParam0->f_9[4] = 6;
					uParam0->f_9[10] = 4;
					uParam0->f_9[48] = 9;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "89FAZ643", 16);
					*uParam0 = 1;
					uParam0->f_5 = 28;
					uParam0->f_6 = 111;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[10] = 2;
					uParam0->f_9[23] = 4;
					uParam0->f_9[48] = 10;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("komoda"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "48OQX480", 16);
					uParam0->f_5 = 138;
					uParam0->f_6 = 111;
					uParam0->f_7 = 89;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 24;
					uParam0->f_9[1] = 12;
					uParam0->f_9[2] = 4;
					uParam0->f_9[3] = 12;
					uParam0->f_9[4] = 4;
					uParam0->f_9[7] = 15;
					uParam0->f_9[8] = 2;
					uParam0->f_9[9] = 2;
					uParam0->f_9[10] = 10;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "08PPT772", 16);
					*uParam0 = 1;
					uParam0->f_5 = 112;
					uParam0->f_6 = 111;
					uParam0->f_7 = 0;
					uParam0->f_8 = 89;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 21;
					uParam0->f_9[1] = 1;
					uParam0->f_9[4] = 2;
					uParam0->f_9[7] = 10;
					uParam0->f_9[8] = 3;
					uParam0->f_9[9] = 1;
					uParam0->f_9[10] = 3;
					uParam0->f_9[23] = 16;
					uParam0->f_9[48] = 8;
					uParam0->f_59[0] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("manchez"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "43HDN501", 16);
					uParam0->f_5 = 64;
					uParam0->f_6 = 111;
					uParam0->f_7 = 68;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 2;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 3;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "27TIB223", 16);
					uParam0->f_5 = 92;
					uParam0->f_6 = 50;
					uParam0->f_7 = 92;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 1;
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 1;
					uParam0->f_9[10] = 2;
					uParam0->f_9[48] = 2;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					StringCopy(&(uParam0->f_1), "42WKq996", 16);
					uParam0->f_5 = 29;
					uParam0->f_6 = 111;
					uParam0->f_7 = 28;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 3;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 2;
					uParam0->f_9[5] = 1;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 1;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 3:
					StringCopy(&(uParam0->f_1), "06THT542", 16);
					uParam0->f_5 = 145;
					uParam0->f_6 = 71;
					uParam0->f_7 = 74;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 2;
					uParam0->f_9[4] = 1;
					uParam0->f_9[5] = 2;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 3;
					uParam0->f_9[48] = 9;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("stryder"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "45YZY588", 16);
					uParam0->f_5 = 112;
					uParam0->f_6 = 89;
					uParam0->f_7 = 0;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 5;
					uParam0->f_9[4] = 5;
					uParam0->f_9[48] = 7;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "05VIC098", 16);
					uParam0->f_5 = 27;
					uParam0->f_6 = 73;
					uParam0->f_7 = 0;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 2;
					uParam0->f_9[4] = 4;
					uParam0->f_9[48] = 8;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					StringCopy(&(uParam0->f_1), "81BJX061", 16);
					uParam0->f_5 = 92;
					uParam0->f_6 = 111;
					uParam0->f_7 = 92;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 1;
					uParam0->f_9[48] = 9;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 3:
					StringCopy(&(uParam0->f_1), "61XWF939", 16);
					uParam0->f_5 = 135;
					uParam0->f_6 = 111;
					uParam0->f_7 = 135;
					uParam0->f_8 = 1;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 7;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 4;
					uParam0->f_9[4] = 5;
					uParam0->f_9[48] = 10;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("defiler"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "85PFY881", 16);
					uParam0->f_5 = 73;
					uParam0->f_6 = 70;
					uParam0->f_7 = 73;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 4;
					uParam0->f_9[5] = 2;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 2;
					uParam0->f_9[48] = 6;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "09QNN844", 16);
					uParam0->f_5 = 112;
					uParam0->f_6 = 145;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[4] = 1;
					uParam0->f_9[5] = 3;
					uParam0->f_9[10] = 3;
					uParam0->f_9[48] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					StringCopy(&(uParam0->f_1), "28BPV442", 16);
					uParam0->f_5 = 38;
					uParam0->f_6 = 111;
					uParam0->f_7 = 37;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[2] = 1;
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 1;
					uParam0->f_9[10] = 4;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 3:
					StringCopy(&(uParam0->f_1), "85LDY796", 16);
					uParam0->f_5 = 150;
					uParam0->f_6 = 111;
					uParam0->f_7 = 150;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 1;
					uParam0->f_9[4] = 2;
					uParam0->f_9[5] = 3;
					uParam0->f_9[7] = 1;
					uParam0->f_9[10] = 1;
					uParam0->f_9[48] = 12;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("lectro"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "89BVQ075", 16);
					*uParam0 = 3;
					uParam0->f_5 = 111;
					uParam0->f_6 = 64;
					uParam0->f_7 = 0;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "61KCQ803", 16);
					*uParam0 = 3;
					uParam0->f_5 = 135;
					uParam0->f_6 = 118;
					uParam0->f_7 = 135;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 2:
					StringCopy(&(uParam0->f_1), "28DJW797", 16);
					*uParam0 = 3;
					uParam0->f_5 = 89;
					uParam0->f_6 = 138;
					uParam0->f_7 = 88;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 3:
					StringCopy(&(uParam0->f_1), "63ASU750", 16);
					*uParam0 = 3;
					uParam0->f_5 = 53;
					uParam0->f_6 = 5;
					uParam0->f_7 = 59;
					uParam0->f_8 = 156;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 6;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("zhaba"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "88GCM611", 16);
					uParam0->f_5 = 154;
					uParam0->f_6 = 0;
					uParam0->f_7 = 0;
					uParam0->f_8 = 111;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					MISC::SET_BIT(&(uParam0->f_77), 1);
					MISC::SET_BIT(&(uParam0->f_77), 2);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 2;
					uParam0->f_9[1] = 2;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 2;
					uParam0->f_9[4] = 9;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 1;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 1;
					uParam0->f_9[10] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "46AOM725", 16);
					uParam0->f_5 = 5;
					uParam0->f_6 = 111;
					uParam0->f_7 = 5;
					uParam0->f_8 = 111;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 0);
					MISC::SET_BIT(&(uParam0->f_77), 1);
					MISC::SET_BIT(&(uParam0->f_77), 2);
					MISC::SET_BIT(&(uParam0->f_77), 9);
					uParam0->f_9[0] = 5;
					uParam0->f_9[1] = 3;
					uParam0->f_9[2] = 3;
					uParam0->f_9[3] = 5;
					uParam0->f_9[4] = 7;
					uParam0->f_9[5] = 3;
					uParam0->f_9[6] = 6;
					uParam0->f_9[9] = 1;
					uParam0->f_9[10] = 6;
					uParam0->f_9[48] = 17;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("vagrant"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "22IUD069", 16);
					uParam0->f_5 = 138;
					uParam0->f_6 = 138;
					uParam0->f_7 = 0;
					uParam0->f_8 = 112;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[4] = 3;
					uParam0->f_9[5] = 1;
					uParam0->f_9[6] = 1;
					uParam0->f_9[7] = 2;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 1;
					uParam0->f_9[48] = 23;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "84USA531", 16);
					uParam0->f_5 = 111;
					uParam0->f_6 = 106;
					uParam0->f_7 = 0;
					uParam0->f_8 = 112;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[4] = 4;
					uParam0->f_9[8] = 3;
					uParam0->f_9[9] = 1;
					uParam0->f_9[10] = 2;
					uParam0->f_9[48] = 2;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("outlaw"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "68ADW760", 16);
					uParam0->f_5 = 3;
					uParam0->f_6 = 0;
					uParam0->f_7 = 6;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 4;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[48] = 17;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "02AFC413", 16);
					uParam0->f_5 = 36;
					uParam0->f_6 = 111;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 4;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[48] = 1;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
			}
			break;
		case joaat("everon"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "46ZLJ093", 16);
					uParam0->f_5 = 29;
					uParam0->f_6 = 0;
					uParam0->f_7 = 35;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[1] = 4;
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 2;
					uParam0->f_9[7] = 14;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 5;
					uParam0->f_9[10] = 6;
					uParam0->f_9[48] = 4;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 1);
					break;
				case 1:
					StringCopy(&(uParam0->f_1), "82AKQ481", 16);
					uParam0->f_5 = 111;
					uParam0->f_6 = 0;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 3;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					uParam0->f_9[0] = 1;
					uParam0->f_9[1] = 7;
					uParam0->f_9[2] = 1;
					uParam0->f_9[3] = 1;
					uParam0->f_9[7] = 14;
					uParam0->f_9[8] = 1;
					uParam0->f_9[9] = 3;
					uParam0->f_9[10] = 3;
					uParam0->f_9[48] = 9;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
		case joaat("burrito2"):
			switch (iParam3)
			{
				case 0:
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam1, "82WUZ423");
					break;
			}
			break;
		case joaat("brioso2"):
			switch (iParam3)
			{
				case 0:
					StringCopy(&(uParam0->f_1), "RUB1O", 16);
					uParam0->f_5 = 112;
					uParam0->f_6 = 112;
					uParam0->f_7 = 0;
					uParam0->f_8 = 0;
					uParam0->f_97 = 1;
					uParam0->f_99 = 132;
					uParam0->f_98 = 0;
					uParam0->f_69 = 1;
					uParam0->f_62 = 255;
					uParam0->f_63 = 255;
					uParam0->f_64 = 255;
					uParam0->f_74 = 255;
					uParam0->f_76 = 255;
					MISC::SET_BIT(&(uParam0->f_77), 2);
					uParam0->f_9[2] = 2;
					uParam0->f_9[3] = 1;
					uParam0->f_9[4] = 2;
					uParam0->f_9[10] = 5;
					__LIB_25__::func_140(*uParam1, uParam0, 0, 1, 0);
					break;
			}
			break;
	}
}

int func_207(var uParam0, struct<3> Param1)//Position - 0xC8D47
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	int iVar3;
	int iVar4;
	struct<3> Var5;
	if (!__LIB_0__::func_261())
	{
		if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(Param1))
		{
			iVar0 = INTERIOR::GET_INTERIOR_FROM_COLLISION(Param1);
			if (INTERIOR::IS_VALID_INTERIOR(iVar0))
			{
				__LIB_24__::func_739(uParam0, 7);
				return 1;
			}
		}
	}
	if (__LIB_23__::func_126(Param1))
	{
		__LIB_24__::func_739(uParam0, 11);
		return 1;
	}
	iVar1 = 89;
	while (iVar1 <= 97)
	{
		__LIB_4__::func_508(iVar1, &Var2);
		if (SYSTEM::VDIST2(Param1, Var2) < 100f)
		{
			return 1;
		}
		iVar1++;
	}
	iVar3 = 0;
	while (iVar3 < 129)
	{
		iVar4 = 0;
		while (iVar4 < Global_1312193[iVar3 /*1951*/].f_36)
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param1, Global_1312193[iVar3 /*1951*/].f_38[iVar4 /*27*/].f_12, true) < 10f)
			{
				__LIB_24__::func_739(uParam0, 11);
				return 1;
			}
			iVar4++;
		}
		iVar3++;
	}
	iVar3 = 0;
	while (iVar3 < 58)
	{
		Var5 = { __LIB_0__::func_785(iVar3, 0) };
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param1, Var5, true) < 10f)
		{
			__LIB_24__::func_739(uParam0, 11);
			return 1;
		}
		iVar3++;
	}
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param1, -708.129f, -1417.6658f, 2.500515f, -761.21875f, -1482.8322f, 11.000515f, 70f, false, true))
	{
		__LIB_24__::func_739(uParam0, 11);
		return 1;
	}
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param1, -2233.327f, 2436.1338f, -14.65155f, -2229.5598f, 2399.5764f, 11.997612f, 24f, false, true))
	{
		__LIB_24__::func_739(uParam0, 11);
		return 1;
	}
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param1, 603.6218f, 5573.0464f, 694.484f, 594.23785f, 5542.7915f, 727.479f, 33.5f, false, true))
	{
		__LIB_24__::func_739(uParam0, 11);
		return 1;
	}
	return 0;
}

void func_208()//Position - 0xF51D8
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (Global_4718592 == 6)
	{
		if (!__LIB_0__::func_86(Global_4980736.f_78578[0 /*450*/]))
		{
			__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(0, 1, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
			iVar3 = 50;
			__LIB_27__::func_815(0, 1, 0);
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5742[0 /*442*/]))
		{
			__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(0, 0, 1)), &iVar0, &iVar1, &iVar2, &iVar3);
			iVar3 = 50;
			__LIB_27__::func_815(0, 0, 1);
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/]))
		{
			__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(2, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
			iVar3 = 50;
			__LIB_23__::func_450(Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[2 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[2 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
			__LIB_27__::func_815(2, 0, 0);
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/]))
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[2 /*273*/].f_1[0 /*3*/]))
			{
				__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(2, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
				iVar3 = 50;
				__LIB_23__::func_450(Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[2 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[2 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
				__LIB_27__::func_815(2, 0, 0);
			}
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[3 /*273*/].f_1[0 /*3*/]))
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[4 /*273*/].f_1[0 /*3*/]))
			{
				__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(4, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
				iVar3 = 50;
				__LIB_23__::func_450(Global_4980736.f_5[3 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[4 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[4 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
				__LIB_27__::func_815(4, 0, 0);
			}
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[5 /*273*/].f_1[0 /*3*/]))
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[6 /*273*/].f_1[0 /*3*/]))
			{
				__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(6, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
				iVar3 = 50;
				__LIB_23__::func_450(Global_4980736.f_5[5 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[6 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[6 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
				__LIB_27__::func_815(6, 0, 0);
			}
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[7 /*273*/].f_1[0 /*3*/]))
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[8 /*273*/].f_1[0 /*3*/]))
			{
				__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(8, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
				iVar3 = 50;
				__LIB_23__::func_450(Global_4980736.f_5[7 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[8 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[8 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
				__LIB_27__::func_815(8, 0, 0);
			}
		}
		if (!__LIB_0__::func_86(Global_4980736.f_5[9 /*273*/].f_1[0 /*3*/]))
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[10 /*273*/].f_1[0 /*3*/]))
			{
				__LIB_22__::func_581(__LIB_19__::func_216(__LIB_23__::func_214(10, 0, 0)), &iVar0, &iVar1, &iVar2, &iVar3);
				iVar3 = 50;
				__LIB_23__::func_450(Global_4980736.f_5[9 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[10 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[10 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
				__LIB_27__::func_815(10, 0, 0);
			}
		}
	}
	else if (Global_4718592 == 3 && __LIB_0__::func_261())
	{
		if (__LIB_1__::func_471(Global_4718592.f_168757))
		{
			if (!__LIB_0__::func_86(Global_4718592.f_170137.f_2717[0 /*3*/]))
			{
				__LIB_27__::func_819(3, Global_4718592.f_170137.f_2717[0 /*3*/]);
			}
			if (!__LIB_0__::func_86(Global_4718592.f_170137.f_2717[1 /*3*/]))
			{
				__LIB_27__::func_819(3, Global_4718592.f_170137.f_2717[1 /*3*/]);
			}
		}
		else
		{
			if (!__LIB_0__::func_86(Global_4980736.f_5[0 /*273*/].f_1[0 /*3*/]))
			{
				if (!__LIB_0__::func_86(Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/]))
				{
					__LIB_22__::func_581(__LIB_19__::func_216(12), &iVar0, &iVar1, &iVar2, &iVar3);
					iVar3 = 50;
					__LIB_23__::func_450(Global_4980736.f_5[0 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[1 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
					__LIB_27__::func_819(1, Global_4980736.f_5[1 /*273*/].f_1[0 /*3*/]);
				}
			}
			if (!__LIB_0__::func_86(Global_4980736.f_5[2 /*273*/].f_1[0 /*3*/]))
			{
				if (!__LIB_0__::func_86(Global_4980736.f_5[3 /*273*/].f_1[0 /*3*/]))
				{
					__LIB_22__::func_581(__LIB_19__::func_216(8), &iVar0, &iVar1, &iVar2, &iVar3);
					iVar3 = 50;
					__LIB_23__::func_450(Global_4980736.f_5[2 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[3 /*273*/].f_1[0 /*3*/], Global_4980736.f_5[3 /*273*/].f_14[0], iVar0, iVar1, iVar2, iVar3, 1, 1);
					__LIB_27__::func_819(3, Global_4980736.f_5[3 /*273*/].f_1[0 /*3*/]);
				}
			}
		}
	}
}

void func_209(var uParam0)//Position - 0x19A5D
{
	if (uParam0->f_1 == 1)
	{
		if (!BitTest(Global_2703735.f_2394.f_2, 2) || Global_1578935)
		{
			return;
		}
	}
	if (__LIB_1__::func_258(uParam0->f_1) && __LIB_22__::func_628())
	{
		__LIB_25__::func_137(-1);
	}
	else if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam0))
	{
		if ((((((((uParam0->f_1 == 40 || uParam0->f_1 == 41) || uParam0->f_1 == 42) || uParam0->f_1 == 13) || uParam0->f_1 == 51) || uParam0->f_1 == 52) || uParam0->f_1 == 53) || uParam0->f_1 == 58) || uParam0->f_1 == 59)
		{
			GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(true);
		}
		if (__LIB_24__::func_672(uParam0, 0))
		{
			GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
		}
		else
		{
			GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
		}
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(*uParam0, 255, 255, 255, 255, 0);
		GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(false);
		GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
	}
}

void func_210(char* sParam0)//Position - 0x20595
{
	__LIB_25__::func_139(sParam0);
}

int func_211(var uParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x62342
{
	struct<3> Var0;
	struct<3> Var1;
	int iVar2;
	float fVar3;
	__LIB_3__::func_93(1);
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	bParam2 = bParam2;
	switch (*uParam0)
	{
		case 0:
			Global_1836369 = 1;
			MISC::SET_BIT(&Global_1574942, 3);
			__LIB_0__::func_130();
			if ((Global_4718592 == 0 && iParam3 != -1) && Global_1574963 == 1)
			{
				Var0 = { Global_4718592.f_658[iParam3 /*22957*/].f_4 };
				Var1 = { Global_4718592.f_658[iParam3 /*22957*/].f_7 };
				if (__LIB_0__::func_86(Var0))
				{
					Var0 = { Global_4718592.f_634 };
					Var1 = { Global_4718592.f_637 };
				}
			}
			else
			{
				Var0 = { Global_4718592.f_634 };
				Var1 = { Global_4718592.f_637 };
			}
			if (__LIB_0__::func_86(Var0))
			{
				Var0 = { Global_4718592.f_94880 };
			}
			if (__LIB_0__::func_86(Var1))
			{
				Var1 = { 0f, 0f, Global_4718592.f_653 };
			}
			if (!CAM::DOES_CAM_EXIST(uParam0->f_3))
			{
				uParam0->f_3 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
			}
			if (CAM::DOES_CAM_EXIST(uParam0->f_8))
			{
				CAM::SET_CAM_ACTIVE(uParam0->f_8, false);
				CAM::DESTROY_CAM(uParam0->f_8, false);
			}
			if (__LIB_0__::func_3() != 2)
			{
				iVar2 = 15;
			}
			else
			{
				iVar2 = 0;
			}
			CAM::SET_CAM_ACTIVE(uParam0->f_3, true);
			CAM::SET_CAM_PARAMS(uParam0->f_3, Var0, Var1.f_0, Var1.f_1, (Var1.f_2 + IntToFloat(iVar2)), 40f, 0, 1, 1, 2);
			CAM::SET_CAM_PARAMS(uParam0->f_3, Var0, Var1.f_0, Var1.f_1, (Var1.f_2 - IntToFloat(iVar2)), 40f, 3600, 0, 0, 2);
			uParam0->f_24 = 1;
			CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
			__LIB_23__::func_493(0, 0);
			__LIB_2__::func_448(0, 0, 1);
			if (!__LIB_1__::func_728(PLAYER::PLAYER_ID()))
			{
				GRAPHICS::ANIMPOSTFX_PLAY("MinigameTransitionOut", 0, false);
			}
			if (__LIB_0__::func_3() != 2)
			{
				CAM::SHAKE_CAM(uParam0->f_3, "ROAD_VIBRATION_SHAKE", 0.1f);
			}
			__LIB_0__::clearF_1Prop(&(uParam0->f_10));
			__LIB_0__::func_795(&(uParam0->f_10), 0, 0);
			if (bParam2)
			{
				CAM::DO_SCREEN_FADE_IN(250);
			}
			__LIB_1__::func_289(uParam0, 1);
			break;
		case 1:
			if (!CAM::IS_CAM_INTERPOLATING(uParam0->f_3) || __LIB_0__::func_937(&(uParam0->f_10), 3600, 0))
			{
				if (__LIB_0__::func_3() == 2)
				{
					CAM::DO_SCREEN_FADE_OUT(250);
					__LIB_1__::func_289(uParam0, 4);
				}
				else if (!uParam0->f_20)
				{
					__LIB_19__::func_244(uParam0, bParam1, 0, 1);
					GRAPHICS::ANIMPOSTFX_PLAY("MinigameEndNeutral", 0, false);
					return 1;
				}
				else
				{
					if (uParam0->f_24 < 0)
					{
						fVar3 = (Global_4718592.f_653 - 15f);
						uParam0->f_24 = 1;
					}
					else
					{
						fVar3 = (Global_4718592.f_653 + 15f);
						uParam0->f_24 = -1;
					}
					uParam0->f_23++;
					CAM::SET_CAM_PARAMS(uParam0->f_3, CAM::GET_CAM_COORD(uParam0->f_3), 0f, 0f, fVar3, 40f, 3600, 0, 0, 2);
					__LIB_0__::clearF_1Prop(&(uParam0->f_10));
					__LIB_0__::func_795(&(uParam0->f_10), 0, 0);
					__LIB_24__::func_401(uParam0, -1, 0, 0, 0, 0, 0, 0, 0, 0);
				}
			}
			else if (__LIB_0__::func_3() != 2)
			{
				__LIB_24__::func_401(uParam0, -1, 0, 0, 0, 0, 0, 0, 0, 0);
			}
			break;
		case 4:
			if (CAM::IS_SCREEN_FADED_OUT())
			{
				__LIB_19__::func_244(uParam0, 0, 0, 1);
				GRAPHICS::ANIMPOSTFX_PLAY("MinigameEndNeutral", 0, false);
				return 1;
			}
			else if (__LIB_0__::func_3() != 2)
			{
				__LIB_24__::func_401(uParam0, -1, 0, 0, 0, 0, 0, 0, 0, 0);
			}
			break;
	}
	return 0;
}

void func_212(var uParam0, bool bParam1)//Position - 0x248A85
{
	var* uVar0;
	var* uVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	struct<88> Var5;
	int iVar6;
	bool bVar7;
	int iVar8;
	uVar0 = DATAFILE::DATAFILE_GET_FILE_DICT(0);
	uVar1 = DATAFILE::DATADICT_GET_DICT(uVar0, "mission");
	iVar2 = DATAFILE::DATADICT_GET_DICT(uVar1, "gen");
	if (__LIB_11__::func_730())
	{
		if (__LIB_18__::func_200(NETWORK::UGC_GET_CONTENT_ID(uParam0->f_7)))
		{
			if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
			{
				DATAFILE::DATAFILE_DELETE(0);
			}
			return;
		}
	}
	if ((DATAFILE::DATADICT_GET_INT(iVar2, "type") == 0 && DATAFILE::DATADICT_GET_INT(iVar2, "subtype") == 7) && uParam0->f_9 < 2000)
	{
		if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
		{
			DATAFILE::DATAFILE_DELETE(0);
		}
		return;
	}
	if (Global_262145.f_8185 /* Tunable: TOGGLE_HEISTS_OFF */)
	{
		if (DATAFILE::DATADICT_GET_INT(iVar2, "type") == 0)
		{
			if (DATAFILE::DATADICT_GET_INT(iVar2, "subtype") == 1 || DATAFILE::DATADICT_GET_INT(iVar2, "subtype") == 7)
			{
				if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
				{
					DATAFILE::DATAFILE_DELETE(0);
				}
				return;
			}
			iVar3 = DATAFILE::DATADICT_GET_INT(iVar2, "optbs");
			if (BitTest(iVar3, 4) || BitTest(iVar3, 12))
			{
				if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
				{
					DATAFILE::DATAFILE_DELETE(0);
				}
				return;
			}
		}
	}
	if (uParam0->f_9 == 0 && bParam1 == 0)
	{
		__LIB_18__::func_199();
		Global_794709.f_2 = 0;
		Global_794709.f_203868 = 0;
		__LIB_18__::func_198();
		iVar4 = 0;
		while (iVar4 < 13)
		{
			Global_794709.f_203883[iVar4] = 0;
			Global_794709.f_203869[iVar4] = 0;
			iVar4++;
		}
		if (__LIB_0__::func_438())
		{
			__LIB_18__::func_443(1);
			__LIB_18__::func_443(0);
			__LIB_18__::func_197(1);
		}
	}
	Var5.f_65 = -1;
	Var5.f_66 = -1;
	Var5.f_67 = 2;
	Global_794709.f_4[uParam0->f_9 /*88*/] = { Var5 };
	if (!__LIB_11__::func_730())
	{
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_5 = NETWORK::UGC_GET_CONTENT_FILE_VERSION(uParam0->f_7, 0);
		Global_794709.f_4[uParam0->f_9 /*88*/].f_67 = __LIB_16__::func_643(uParam0->f_7);
		Global_794709.f_4[uParam0->f_9 /*88*/].f_66 = NETWORK::UGC_GET_CONTENT_FILE_VERSION(uParam0->f_7, Global_794709.f_4[uParam0->f_9 /*88*/].f_67);
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_6 = NETWORK::UGC_GET_CONTENT_LANGUAGE(uParam0->f_7);
	}
	Global_794709.f_4[uParam0->f_9 /*88*/].f_56 = { __LIB_17__::func_939(iVar2) };
	if (DATAFILE::DATADICT_GET_TYPE(iVar2, "optbs") == 2)
	{
		Global_794709.f_4[uParam0->f_9 /*88*/].f_76 = DATAFILE::DATADICT_GET_INT(iVar2, "optbs");
	}
	MISC::CLEAR_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 15);
	MISC::CLEAR_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 18);
	MISC::CLEAR_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 19);
	MISC::CLEAR_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 29);
	MISC::CLEAR_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 28);
	Global_794709.f_4[uParam0->f_9 /*88*/].f_59 = { __LIB_16__::func_646(iVar2, "cam") };
	Global_794709.f_4[uParam0->f_9 /*88*/].f_62 = { __LIB_16__::func_645(iVar2) };
	if (!__LIB_11__::func_730())
	{
		if (NETWORK::UGC_IS_LANGUAGE_SUPPORTED(NETWORK::UGC_GET_CONTENT_LANGUAGE(uParam0->f_7)))
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_54 = NETWORK::UGC_GET_CONTENT_DESCRIPTION_HASH(uParam0->f_7);
		}
		else
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_54 = -1;
		}
	}
	if (DATAFILE::DATADICT_GET_TYPE(iVar2, "mgrk") == 2)
	{
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_8 = DATAFILE::DATADICT_GET_INT(iVar2, "mgrk");
	}
	if (DATAFILE::DATADICT_GET_TYPE(iVar2, "mght") == 2)
	{
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_9 = DATAFILE::DATADICT_GET_INT(iVar2, "mght");
	}
	Global_794709.f_177589[uParam0->f_9 /*13*/].f_11 = DATAFILE::DATADICT_GET_INT(iVar2, "cncmbs");
	Global_794709.f_4[uParam0->f_9 /*88*/].f_69 = DATAFILE::DATADICT_GET_INT(iVar2, "min");
	Global_794709.f_4[uParam0->f_9 /*88*/].f_71 = DATAFILE::DATADICT_GET_INT(iVar2, "num");
	if (Global_794709.f_4[uParam0->f_9 /*88*/].f_71 == -1)
	{
		Global_794709.f_4[uParam0->f_9 /*88*/].f_71 = __LIB_2__::func_10();
	}
	StringCopy(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_22), NETWORK::UGC_GET_CONTENT_NAME(uParam0->f_7), 64);
	Global_794709.f_4[uParam0->f_9 /*88*/].f_65 = DATAFILE::DATADICT_GET_INT(iVar2, "type");
	if (__LIB_11__::func_730())
	{
		StringCopy(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_6), __LIB_16__::func_651(), 64);
	}
	else
	{
		StringCopy(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_6), NETWORK::UGC_GET_CONTENT_USER_ID(uParam0->f_7), 64);
	}
	Global_794709.f_4[uParam0->f_9 /*88*/].f_70 = DATAFILE::DATADICT_GET_INT(iVar2, "rank");
	Global_794709.f_177589[uParam0->f_9 /*13*/] = DATAFILE::DATADICT_GET_INT(iVar2, "tnum");
	if (!__LIB_11__::func_730())
	{
		Global_794709.f_4[uParam0->f_9 /*88*/].f_73 = __LIB_16__::func_644(NETWORK::UGC_GET_CONTENT_RATING(uParam0->f_7, 0), NETWORK::UGC_GET_CONTENT_RATING_COUNT(uParam0->f_7, 0));
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_4 = NETWORK::UGC_GET_CONTENT_RATING_COUNT(uParam0->f_7, 0);
	}
	Global_794709.f_4[uParam0->f_9 /*88*/].f_75 = DATAFILE::DATADICT_GET_INT(iVar2, "charcon");
	Global_794709.f_4[uParam0->f_9 /*88*/].f_78 = DATAFILE::DATADICT_GET_INT(iVar2, "ltm");
	StringCopy(&(Global_794709.f_4[uParam0->f_9 /*88*/]), NETWORK::UGC_GET_CONTENT_ID(uParam0->f_7), 24);
	iVar6 = MISC::GET_HASH_KEY(&(Global_794709.f_4[uParam0->f_9 /*88*/]));
	Global_794709.f_177589[uParam0->f_9 /*13*/].f_3 = iVar6;
	if (Global_794709.f_4[uParam0->f_9 /*88*/].f_65 == 6 && !bParam1)
	{
		if (Global_1039641.f_684 < 85)
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_68 = Global_1039641.f_684;
			Global_1039641[Global_1039641.f_684 /*3*/] = { __LIB_16__::func_646(iVar2, "area") };
			if (DATAFILE::DATADICT_GET_TYPE(iVar2, "rad") == 2)
			{
				Global_1039641.f_512[Global_1039641.f_684] = SYSTEM::TO_FLOAT(DATAFILE::DATADICT_GET_INT(iVar2, "rad"));
			}
			else
			{
				Global_1039641.f_512[Global_1039641.f_684] = DATAFILE::DATADICT_GET_FLOAT(iVar2, "rad");
			}
			Global_1039641.f_256[Global_1039641.f_684 /*3*/] = { Global_794709.f_4[uParam0->f_9 /*88*/].f_56 };
			Global_1039641.f_598[Global_1039641.f_684] = iVar6;
			Global_794709.f_4[uParam0->f_9 /*88*/].f_56 = { Global_794709.f_4[uParam0->f_9 /*88*/].f_59 };
			Global_1039641.f_684++;
		}
	}
	else
	{
		Global_794709.f_4[uParam0->f_9 /*88*/].f_68 = DATAFILE::DATADICT_GET_INT(iVar2, "subtype");
		Global_794709.f_4[uParam0->f_9 /*88*/].f_80 = DATAFILE::DATADICT_GET_INT(iVar2, "adverm");
	}
	__LIB_16__::func_642(Global_794709.f_4[uParam0->f_9 /*88*/].f_65, &(Global_794709.f_4[uParam0->f_9 /*88*/].f_71), &(Global_794709.f_4[uParam0->f_9 /*88*/].f_69));
	if (__LIB_11__::func_730())
	{
		if (MISC::ARE_STRINGS_EQUAL(NETWORK::UGC_GET_CONTENT_ID(uParam0->f_7), "lUo6JFfliE-ZQ_8gd90ZxQ"))
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_56 = { 897.5109f, -2340.5986f, 29.4461f };
		}
	}
	MISC::SET_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 13);
	if (!__LIB_11__::func_730())
	{
		Global_794709.f_177589[uParam0->f_9 /*13*/].f_1 = MISC::GET_HASH_KEY(NETWORK::UGC_GET_ROOT_CONTENT_ID(uParam0->f_7));
		MISC::SET_CONTENT_ID_INDEX(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1, uParam0->f_9);
	}
	Global_794709.f_177589[uParam0->f_9 /*13*/].f_2 = __LIB_16__::func_656(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1, 1);
	if (__LIB_7__::func_165(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1) || __LIB_7__::func_162(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1))
	{
		if (Global_794709.f_4[uParam0->f_9 /*88*/].f_75 == 0)
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_75 = 1;
		}
	}
	bVar7 = __LIB_1__::func_157(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1);
	iVar8 = __LIB_18__::func_170(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1);
	if (iVar8 != -1)
	{
		Global_1963929[iVar8] = uParam0->f_9;
	}
	if ((Global_794709.f_4[uParam0->f_9 /*88*/].f_65 < 13 && !bParam1) && !bVar7)
	{
		if (Global_794709.f_4[uParam0->f_9 /*88*/].f_70 <= 1000)
		{
			Global_794709.f_203869[Global_794709.f_4[uParam0->f_9 /*88*/].f_65]++;
			if (__LIB_18__::func_196(uParam0->f_9))
			{
				Global_794709.f_203869[7]++;
			}
			else if (__LIB_18__::func_195(uParam0->f_9))
			{
				Global_794709.f_203869[4]++;
			}
			else if (__LIB_18__::func_194(uParam0->f_9))
			{
				Global_794709.f_203869[10]++;
			}
			else if (__LIB_18__::func_193(uParam0->f_9))
			{
				Global_794709.f_203869[12]++;
			}
		}
	}
	if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
	{
		DATAFILE::DATAFILE_DELETE(0);
	}
	if (!__LIB_11__::func_730())
	{
		if (bVar7)
		{
			Global_794709.f_4[uParam0->f_9 /*88*/].f_69 = Global_794709.f_4[uParam0->f_9 /*88*/].f_71;
		}
		if ((Global_794709.f_203868 < 5 && Global_794709.f_4[uParam0->f_9 /*88*/].f_65 == 0) && Global_794709.f_4[uParam0->f_9 /*88*/].f_68 == 1)
		{
			Global_794709.f_177589[uParam0->f_9 /*13*/].f_10 = Global_794709.f_203868;
			StringCopy(&(Global_794709.f_203837[Global_794709.f_203868 /*6*/]), NETWORK::UGC_GET_ROOT_CONTENT_ID(uParam0->f_7), 24);
			Global_794709.f_203868++;
		}
		__LIB_18__::func_182(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1, &(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), &(Global_794709.f_4[uParam0->f_9 /*88*/].f_77), Global_794709.f_4[uParam0->f_9 /*88*/].f_80);
		__LIB_18__::func_192(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1, uParam0->f_9);
		if (bParam1)
		{
			if (NETWORK::UGC_GET_CONTENT_HAS_PLAYER_RECORD(uParam0->f_7))
			{
				MISC::SET_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 14);
			}
		}
		else if (!bVar7)
		{
			if (__LIB_12__::func_668(Global_794709.f_177589[uParam0->f_9 /*13*/].f_1, Global_794709.f_4[uParam0->f_9 /*88*/].f_80))
			{
				Global_794709.f_203869[11]++;
			}
			if (NETWORK::UGC_GET_CONTENT_HAS_PLAYER_RECORD(uParam0->f_7))
			{
				MISC::SET_BIT(&(Global_794709.f_4[uParam0->f_9 /*88*/].f_76), 14);
				if (BitTest(Global_794709.f_4[uParam0->f_9 /*88*/].f_76, 1) || Global_794709.f_4[uParam0->f_9 /*88*/].f_68 == 2)
				{
					Global_794709.f_203869[9]++;
				}
				if (Global_794709.f_4[uParam0->f_9 /*88*/].f_70 <= 1000)
				{
					if (Global_794709.f_4[uParam0->f_9 /*88*/].f_65 < 13)
					{
						Global_794709.f_203883[Global_794709.f_4[uParam0->f_9 /*88*/].f_65]++;
					}
				}
				Global_794709.f_177589[uParam0->f_9 /*13*/].f_7 = NETWORK::UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(uParam0->f_7);
			}
		}
	}
	if (!bParam1 && !bVar7)
	{
		if (__LIB_0__::func_438())
		{
			__LIB_24__::func_874(Global_794709.f_4[uParam0->f_9 /*88*/].f_65, Global_794709.f_4[uParam0->f_9 /*88*/].f_68, BitTest(Global_794709.f_4[uParam0->f_9 /*88*/].f_76, 14), Global_794709.f_4[uParam0->f_9 /*88*/].f_70, 0);
			__LIB_25__::func_113(Global_794709.f_4[uParam0->f_9 /*88*/].f_65, Global_794709.f_4[uParam0->f_9 /*88*/].f_68, Global_794709.f_4[uParam0->f_9 /*88*/].f_70, 0);
			__LIB_25__::func_151(Global_794709.f_4[uParam0->f_9 /*88*/].f_65, Global_794709.f_4[uParam0->f_9 /*88*/].f_68, Global_794709.f_4[uParam0->f_9 /*88*/].f_75, Global_794709.f_4[uParam0->f_9 /*88*/].f_70, BitTest(Global_794709.f_4[uParam0->f_9 /*88*/].f_76, 14));
			__LIB_25__::func_152(Global_794709.f_4[uParam0->f_9 /*88*/].f_65, Global_794709.f_4[uParam0->f_9 /*88*/].f_68, Global_794709.f_4[uParam0->f_9 /*88*/].f_75, Global_794709.f_4[uParam0->f_9 /*88*/].f_70);
		}
	}
	if (Global_794709.f_4[uParam0->f_9 /*88*/].f_65 == 6)
	{
		Global_1040326[0 /*66*/]++;
	}
	uParam0->f_9++;
	Global_794709.f_2++;
	if (DATAFILE::DATAFILE_GET_FILE_DICT(0) != 0)
	{
		DATAFILE::DATAFILE_DELETE(0);
	}
}

int func_213(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10)//Position - 0x174C
{
	struct<14> Var0;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam4 < 0)
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 == 76)
	{
		return 0;
	}
	if (iParam7 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_764 < 8)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__::func_713(iParam1);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
		Var0.f_5 = iParam5;
		Var0.f_1 = iParam9;
		Var0.f_2 = iParam2;
		Var0.f_6 = bParam3;
		Var0.f_7 = iParam6;
		Var0.f_8 = iParam7;
		Var0.f_9 = iParam8;
		Var0.f_10 = -1;
		Var0.f_11 = -1;
		Var0.f_13 = iParam10;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_651[Global_113386.f_7688.f_764 /*14*/] = { Var0 };
		Global_113386.f_7688.f_764++;
		__LIB_0__::func_688(0);
		__LIB_0__::func_688(1);
		__LIB_0__::func_688(2);
		return 1;
	}
	return 0;
}

var func_214()//Position - 0x248
{
	return Global_113386.f_20118.f_254.f_4;
}

int func_215()//Position - 0x25B
{
	if (Global_113386.f_20118.f_263)
	{
		return 1;
	}
	return 0;
}

void func_216(var uParam0, int iParam1, int iParam2)//Position - 0x219B
{
	if (iParam1 != 4)
	{
		uParam0->f_34[iParam1] = iParam2;
		Global_23011.f_2 = 1;
	}
}

void func_217(var uParam0)//Position - 0x3046A
{
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		uParam0->f_6 = -0.15f;
		uParam0->f_7 = 0.05f;
		CAM::ATTACH_CAM_TO_PED_BONE(uParam0->f_4, uParam0->f_3, 31086, 0f, uParam0->f_6, uParam0->f_7, true);
		CAM::SET_CAM_NEAR_CLIP(uParam0->f_4, 0.101f);
		CAM::POINT_CAM_AT_ENTITY(uParam0->f_4, uParam0->f_3, 0f, 10f, uParam0->f_7, true);
		CAM::SET_CAM_FOV(uParam0->f_4, 96.76f);
		CAM::SET_CAM_DOF_PLANES(uParam0->f_4, 0f, 0f, 100000f, 100000f);
	}
}

int func_218(int* iParam0, struct<3> Param1, float fParam2, bool bParam3)//Position - 0x32312
{
	int iVar0;
	iVar0 = __LIB_17__::func_74();
	STREAMING::REQUEST_MODEL(iVar0);
	if (STREAMING::HAS_MODEL_LOADED(iVar0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			PED::DELETE_PED(iParam0);
		}
		*iParam0 = PED::CREATE_PED(26, iVar0, Param1, fParam2, false, false);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 0, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 1, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 2, 0, 0, 0);
		if (Global_113386.f_20118.f_263)
		{
			PED::SET_PED_COMPONENT_VARIATION(*iParam0, 3, 0, Global_113386.f_20118.f_254.f_4, 0);
		}
		else
		{
			PED::SET_PED_COMPONENT_VARIATION(*iParam0, 3, 0, 4, 0);
		}
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 4, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 5, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 6, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 7, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 8, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 9, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 10, 0, 0, 0);
		PED::SET_PED_COMPONENT_VARIATION(*iParam0, 11, 0, 0, 0);
		PED::CLEAR_ALL_PED_PROPS(*iParam0);
		if (bParam3)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
		}
		return 1;
	}
	return 0;
}

int func_219(int iParam0)//Position - 0x86721
{
	iParam0 = iParam0;
	return 1;
}

void func_220(int iParam0)//Position - 0x8A8C6
{
	if (*iParam0 == 2)
	{
		CAM::SET_USE_HI_DOF();
	}
}

void func_221(int iParam0)//Position - 0x8A8D9
{
	bool bVar0;
	switch (iParam0->f_10)
	{
		case 0:
			if (*iParam0 == 2)
			{
				iParam0->f_10 = 1;
			}
			break;
		case 1:
			bVar0 = false;
			switch (iParam0->f_11)
			{
				case 0:
					if (AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_A_01", false, -1) && AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_A_02", false, -1))
					{
						bVar0 = true;
					}
					break;
				case 1:
					if (AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_B_01", false, -1) && AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_B_02", false, -1))
					{
						bVar0 = true;
					}
					break;
				case 2:
					if (AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_C_01", false, -1) && AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CHOP_CAM_C_02", false, -1))
					{
						bVar0 = true;
					}
					break;
			}
			if (bVar0)
			{
				if (iParam0->f_12 != -1)
				{
					if (AUDIO::HAS_SOUND_FINISHED(iParam0->f_12))
					{
						switch (iParam0->f_11)
						{
							case 0:
								AUDIO::PLAY_SOUND_FRONTEND(iParam0->f_12, "CHOP_CAM_A", 0, true);
								break;
							case 1:
								AUDIO::PLAY_SOUND_FRONTEND(iParam0->f_12, "CHOP_CAM_B", 0, true);
								break;
							case 2:
								AUDIO::PLAY_SOUND_FRONTEND(iParam0->f_12, "CHOP_CAM_C", 0, true);
								break;
							}
						}
				}
				iParam0->f_11++;
				if (iParam0->f_11 > 2)
				{
					iParam0->f_11 = 0;
				}
				iParam0->f_10 = 2;
			}
			break;
		case 2:
			break;
	}
}

void func_222(float fParam0, float fParam1, float fParam2)//Position - 0x96B18
{
	*fParam0 = (*fParam0 + ((((fParam1 - *fParam0) * fParam2) * 30f) * SYSTEM::TIMESTEP()));
}

void func_223(float fParam0, var uParam1, int iParam2, float fParam3, float fParam4, float fParam5, float fParam6, float fParam7, float fParam8, float fParam9, float fParam10, float fParam11, bool bParam12, float fParam13, float fParam14, int iParam15)//Position - 0x96B3B
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	int iVar7;
	float fVar8;
	float fVar9;
	Var0 = { ENTITY::GET_ENTITY_COORDS(*uParam1, true) };
	Var1 = { ENTITY::GET_ENTITY_COORDS(iParam2, true) };
	Var2 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iParam2, Var0) };
	fVar3 = SYSTEM::VDIST(Var0, Var1);
	fVar4 = 0f;
	fVar5 = (fParam11 - 1f);
	fVar6 = (1f - fParam9);
	if (Var2.f_1 < 1f)
	{
		if (fVar3 > fParam5)
		{
			iVar7 = 0;
			if (fVar3 > fParam6)
			{
				if (fVar3 > (fParam6 * 2f))
				{
					iVar7 = 1;
				}
				fVar3 = fParam6;
			}
			fVar4 = ((fVar3 - fParam5) / (fParam6 - fParam5));
			if (!ENTITY::IS_ENTITY_ON_SCREEN(iParam2) || iVar7)
			{
				*fParam0 = (fParam9 - ((fParam9 - fParam10) * fVar4));
			}
			else
			{
				*fParam0 = fParam9;
			}
		}
		else if (fVar3 > fParam4)
		{
			fVar4 = ((fVar3 - fParam4) / (fParam5 - fParam4));
			*fParam0 = (1f - (fVar6 * fVar4));
		}
		else
		{
			if (fVar3 < fParam3)
			{
				fVar3 = fParam3;
			}
			fVar4 = ((fParam4 - fVar3) / (fParam4 - fParam3));
			if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0) && iParam15)
			{
				*fParam0 = (1f + ((fVar4 * fVar5) * 2f));
			}
			else
			{
				*fParam0 = (1f + (fVar4 * fVar5));
			}
		}
	}
	else
	{
		if (fVar3 > fParam7)
		{
			fVar3 = fParam7;
		}
		fVar4 = (fVar3 / fParam7);
		fVar8 = (ENTITY::GET_ENTITY_SPEED(iParam2) - ENTITY::GET_ENTITY_SPEED(*uParam1));
		if (fVar8 > 0f)
		{
			fVar4 = (fVar4 * 0.5f);
		}
		if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0) && iParam15)
		{
			*fParam0 = (2f + fVar4);
		}
		else if (ENTITY::GET_ENTITY_SPEED(*uParam1) < 5f && fVar8 > 0f)
		{
			*fParam0 = (0.6f + fVar4);
		}
		else
		{
			*fParam0 = (1f + fVar4);
		}
	}
	*fParam0 = (*fParam0 * fParam8);
	if (bParam12)
	{
		fVar9 = fParam13;
		if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0) && iParam15)
		{
			fParam14 = (fParam14 * 2f);
			fParam13 = (fParam13 * 2f);
		}
		if (*fParam0 > 1f)
		{
			fVar9 = (fParam13 + ((fParam14 - fParam13) * (*fParam0 - 1f)));
		}
		VEHICLE::MODIFY_VEHICLE_TOP_SPEED(*uParam1, -fVar9);
	}
}

void func_224(var uParam0)//Position - 0x86F30
{
	*uParam0 = GRAPHICS::REQUEST_SCALEFORM_MOVIE(__LIB_17__::func_62());
}

void func_225(var uParam0, struct<3> Param1, float fParam2)//Position - 0x87C90
{
	__LIB_17__::func_664(uParam0, Param1.f_0, fParam2);
	__LIB_17__::func_664(&(uParam0->f_1), Param1.f_1, fParam2);
	__LIB_17__::func_664(&(uParam0->f_2), Param1.f_2, fParam2);
}

void func_226(bool bParam0)//Position - 0x23CEA
{
	__LIB_13__::func_824(39, bParam0);
	__LIB_13__::func_824(40, bParam0);
	__LIB_13__::func_824(41, bParam0);
	__LIB_13__::func_824(42, bParam0);
	__LIB_13__::func_824(43, bParam0);
	__LIB_13__::func_824(44, bParam0);
}

void func_227(int iParam0, struct<3> Param1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x1AC3
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (iParam3 == 1)
		{
			PED::SET_PED_COORDS_KEEP_VEHICLE(iParam0, Param1);
		}
		else if (iParam3 == 0)
		{
			ENTITY::SET_ENTITY_COORDS(iParam0, Param1, true, false, false, true);
		}
		ENTITY::SET_ENTITY_HEADING(iParam0, fParam2);
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (iParam4 == 1)
			{
				CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
			}
			if (iParam5 == 1)
			{
				STREAMING::LOAD_SCENE(Param1);
			}
		}
	}
}

char* func_228()//Position - 0x954F1
{
	return "MISSCHOP_VEHICLE@BACK_OF_VAN";
}

void func_229()//Position - 0x955C2
{
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 76 /*INPUT_VEH_HANDBRAKE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 73 /*INPUT_VEH_DUCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 59 /*INPUT_VEH_MOVE_LR*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 60 /*INPUT_VEH_MOVE_UD*/, true);
}

int func_230(char* sParam0, var uParam1, var uParam2)//Position - 0xA0EF0
{
	int iVar0;
	iVar0 = 0;
	if (*uParam2 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam2 - 1))
		{
			if (!VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED((*uParam1)[iVar0], sParam0))
			{
				VEHICLE::REQUEST_VEHICLE_RECORDING((*uParam1)[iVar0], sParam0);
				return 0;
			}
			iVar0++;
		}
	}
	return 1;
}

void func_231(int iParam0, char* sParam1, var uParam2, int iParam3, var uParam4)//Position - 0xA136B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	if (*uParam4 >= 0)
	{
		if (*uParam4 <= (iParam3 - 1))
		{
			iVar0 = 0;
			while (iVar0 <= *uParam4)
			{
				if ((*uParam2)[iVar0] == iParam0)
				{
					iVar1 = 1;
				}
				iVar0++;
			}
			if (iVar1 == 0)
			{
				VEHICLE::REQUEST_VEHICLE_RECORDING(iParam0, sParam1);
				(*uParam2)[*uParam4] = iParam0;
				*uParam4++;
			}
		}
	}
}

void func_232(char* sParam0, var uParam1, var uParam2)//Position - 0xA158B
{
	int iVar0;
	iVar0 = 0;
	if (*uParam2 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam2 - 1))
		{
			if (VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED((*uParam1)[iVar0], sParam0))
			{
				VEHICLE::REMOVE_VEHICLE_RECORDING((*uParam1)[iVar0], sParam0);
				(*uParam1)[iVar0] = 0;
			}
			iVar0++;
		}
	}
	*uParam2 = 0;
}

int func_233(int iParam0, bool bParam1, struct<3> Param2, float fParam3)//Position - 0xA32B5
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (PED::IS_PED_SHOOTING(iParam0))
		{
			return MISC::IS_BULLET_IN_AREA(Param2, fParam3, bParam1);
		}
	}
	return 0;
}

int func_234(var uParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x13C67
{
	struct<98> Var0;
	int iVar1;
	int iVar2;
	if (!__LIB_0__::func_374(bParam1))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_17__::func_152(bParam1, &Var0, iParam5);
		if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*uParam0) != Var0.f_0)
			{
			}
			return 1;
		}
		if ((bParam1 == 17 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][0 /*98*/] == Var0.f_0) || (bParam1 == 15 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][1 /*98*/] == Var0.f_0))
		{
			if (bParam1 == 17)
			{
				iVar1 = 0;
			}
			else if (bParam1 == 15)
			{
				iVar1 = 1;
			}
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]))
			{
				*uParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*uParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*uParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*uParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*uParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*uParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*uParam0, 1250f);
				Var0.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_5, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_7, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Var0.f_2);
				iVar2 = 0;
				while (iVar2 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar2 + 1, !Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_11[iVar2]);
					iVar2++;
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
				{
					if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
					{
						if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
						{
							VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
						}
						else
						{
							VEHICLE::LOWER_CONVERTIBLE_ROOF(*uParam0, true);
						}
					}
				}
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_27));
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26);
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_84, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_85, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_93, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_94, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
						{
							if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_670(uParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Var0.f_96);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
				}
				__LIB_17__::func_153(*uParam0);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var0.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var0.f_0))
			{
				*uParam0 = VEHICLE::CREATE_VEHICLE(Var0.f_0, Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*uParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*uParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*uParam0, true);
				__LIB_17__::func_178(uParam0, Var0);
				if (bParam1 == 17 || bParam1 == 15)
				{
					__LIB_17__::func_153(*uParam0);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var0.f_0);
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_235(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, char* sParam5, char* sParam6, bool bParam7, bool bParam8, bool bParam9, int iParam10)//Position - 0x3DD6
{
	return __LIB_17__::func_654(iParam0, Param1, Param2, bParam3, iParam4, 0, 0, sParam5, sParam6, sParam6, sParam6, sParam6, bParam7, bParam8, bParam9, iParam10);
}

void func_236(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0xA723E
{
	int iVar0;
	if (iParam2 == 0)
	{
		iParam2 = PLAYER::PLAYER_PED_ID();
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam2))
	{
		uParam1->f_5 = __LIB_0__::func_650(iParam2);
	}
	if (__LIB_17__::func_182(iParam2, &iVar0, iParam3, iParam5))
	{
		__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("skylift")) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
			{
				__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
			}
		}
	}
}

void func_237(int iParam0)//Position - 0x99AE5
{
	if (iParam0 == 10)
	{
		return;
	}
	switch (iParam0)
	{
		case 0:
			MISC::SET_BIT(&(Global_38412[(38 / 32)]), (38 % 32));
			__LIB_17__::func_656(38, 0);
			MISC::SET_BIT(&(Global_38412[(41 / 32)]), (41 % 32));
			__LIB_17__::func_656(41, 0);
			MISC::SET_BIT(&(Global_38412[(43 / 32)]), (43 % 32));
			__LIB_17__::func_656(43, 0);
			MISC::SET_BIT(&(Global_38412[(42 / 32)]), (42 % 32));
			__LIB_17__::func_656(42, 0);
			MISC::SET_BIT(&(Global_38412[(44 / 32)]), (44 % 32));
			__LIB_17__::func_656(44, 0);
			break;
		case 1:
			MISC::SET_BIT(&(Global_38412[(51 / 32)]), (51 % 32));
			__LIB_17__::func_656(51, 0);
			break;
		case 2:
			MISC::SET_BIT(&(Global_38412[(51 / 32)]), (51 % 32));
			__LIB_17__::func_656(51, 0);
			break;
		case 3:
			MISC::SET_BIT(&(Global_38412[(53 / 32)]), (53 % 32));
			__LIB_17__::func_656(53, 0);
			break;
		case 4:
			MISC::SET_BIT(&(Global_38412[(81 / 32)]), (81 % 32));
			__LIB_17__::func_656(81, 0);
			MISC::SET_BIT(&(Global_38412[(82 / 32)]), (82 % 32));
			__LIB_17__::func_656(82, 0);
			break;
		case 5:
			MISC::SET_BIT(&(Global_38412[(47 / 32)]), (47 % 32));
			__LIB_17__::func_656(47, 0);
			MISC::SET_BIT(&(Global_38412[(50 / 32)]), (50 % 32));
			__LIB_17__::func_656(50, 0);
			break;
		case 6:
			MISC::SET_BIT(&(Global_38412[(50 / 32)]), (50 % 32));
			__LIB_17__::func_656(50, 0);
			break;
	}
}

void func_238(struct<3> Param0, float fParam1, int iParam2, int iParam3)//Position - 0x9B915
{
	struct<3> Var0;
	var uVar1;
	if (ENTITY::DOES_ENTITY_EXIST(Global_103950.f_4))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_103950.f_4, false))
		{
			if (__LIB_0__::func_343(24) != Global_103950.f_4)
			{
				if (iParam2 == 1)
				{
					if (__LIB_14__::func_665(ENTITY::GET_ENTITY_COORDS(Global_103950.f_4, true), iParam3, &Var0, &uVar1))
					{
						Param0 = { Var0 };
						fParam1 = uVar1;
					}
				}
				__LIB_17__::func_477(Global_103950.f_4, Param0, fParam1, 24, 0);
			}
		}
	}
}

void func_239(int* iParam0, bool bParam1)//Position - 0x1D57
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(*iParam0, false))
		{
			if (ENTITY::IS_ENTITY_ATTACHED(*iParam0))
			{
				ENTITY::DETACH_ENTITY(*iParam0, true, true);
			}
			ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(*iParam0, -8f, true);
		}
		if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(*iParam0, false))
		{
			if (bParam1)
			{
				VEHICLE::DELETE_VEHICLE(iParam0);
			}
			else
			{
				ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(iParam0);
			}
		}
	}
}

int func_240(int iParam0)//Position - 0x71C52
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	iVar1 = *iParam0;
	iVar2 = 0;
	if ((iParam0[0 /*21*/])->f_3)
	{
		iVar2 = 0;
		while (iVar2 < iVar1)
		{
			if (!PED::IS_PED_INJURED((*iParam0)[iVar2 /*21*/]))
			{
				iVar0++;
			}
			iVar2++;
		}
	}
	else
	{
		iVar0 = iVar1;
	}
	return iVar0;
}

void func_241(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x72310
{
	PED::SET_PED_COMBAT_MOVEMENT(*iParam0, iParam2);
	PED::SET_PED_COMBAT_ABILITY(*iParam0, iParam3);
	PED::SET_PED_COMBAT_RANGE(*iParam0, iParam4);
	PED::SET_PED_ACCURACY(*iParam0, iParam1);
	PED::SET_PED_TARGET_LOSS_RESPONSE(*iParam0, iParam5);
}

int func_242(int iParam0, int iParam1, struct<2> Param2, float fParam3)//Position - 0x738B3
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
	fVar2 = SYSTEM::VDIST2(Var0, Var1);
	fVar3 = MISC::GET_HEADING_FROM_VECTOR_2D((Param2.f_0 - Var1.f_0), (Param2.f_1 - Var1.f_1));
	fVar4 = MISC::GET_HEADING_FROM_VECTOR_2D((Var0.f_0 - Var1.f_0), (Var0.f_1 - Var1.f_1));
	fVar5 = MISC::ABSF((fVar4 - fVar3));
	if (fVar5 > 180f)
	{
		fVar5 = MISC::ABSF((fVar5 - 360f));
	}
	if (fVar2 < 9f)
	{
		if (fVar5 < 40f)
		{
			return 1;
		}
	}
	else if (fVar5 < 20f)
	{
		return 1;
	}
	return 0;
}

int func_243(int iParam0, int iParam1, int iParam2, struct<3> Param3, struct<3> Param4, float fParam5)//Position - 0x85842
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam0, Param3, Param4, fParam5, false, true, 0))
		{
			return 1;
		}
	}
	if (!PED::IS_PED_INJURED(iParam1))
	{
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam1, Param3, Param4, fParam5, false, true, 0))
		{
			return 1;
		}
	}
	if (!PED::IS_PED_INJURED(iParam2))
	{
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam2, Param3, Param4, fParam5, false, true, 0))
		{
			return 1;
		}
	}
	return 0;
}

void func_244(var uParam0, int iParam1, int iParam2)//Position - 0x9B935
{
	if (iParam1 != 4)
	{
		uParam0->f_13[iParam1] = iParam2;
	}
}

int func_245(var uParam0, bool bParam1)//Position - 0x9A4A5
{
	bool bVar0;
	bool bVar1;
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = uParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_682(__LIB_17__::func_341()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || uParam0->f_24[bParam1] != 0) || ((__LIB_15__::func_971(bParam1) && __LIB_15__::func_975(bParam1)) && !uParam0->f_18[bParam1]))
			{
				if (!uParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*uParam0)[bParam1]) || bVar0)
					{
						if (uParam0->f_34[bParam1] != 1 && uParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (uParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				uParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	uParam0->f_39 = 0;
	return 0;
}

void func_246(int iParam0)//Position - 0x2900B
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[iVar0] = __LIB_0__::func_464();
	}
}

int func_247(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, char* sParam4, bool bParam5, bool bParam6, int iParam7)//Position - 0x9FC5E
{
	return __LIB_17__::func_223(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 1, 0, 0, 0, 0, sParam4, __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), 0, bParam5, __LIB_0__::func_591(), 0, 0, bParam6, iParam7, 0, 0, 0, 1, 1065353216);
}

void func_248()//Position - 0x26D46
{
	struct<50> Var0;
	if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || !__LIB_0__::func_374(__LIB_17__::func_341())) || !__LIB_0__::func_438())
	{
		return;
	}
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_17__::func_665(PLAYER::PLAYER_PED_ID(), &Var0, 1, -1);
	__LIB_1__::func_379(1306, Var0[0], -1);
	__LIB_1__::func_379(1307, Var0[1], -1);
	__LIB_1__::func_379(1308, Var0[2], -1);
	__LIB_1__::func_379(1309, Var0[3], -1);
	__LIB_1__::func_379(1310, Var0[4], -1);
	__LIB_1__::func_379(1311, Var0[5], -1);
	__LIB_1__::func_379(1312, Var0[6], -1);
	__LIB_1__::func_379(1313, Var0[7], -1);
	__LIB_1__::func_379(1314, Var0[8], -1);
	__LIB_1__::func_379(1315, Var0[9], -1);
	__LIB_1__::func_379(1316, Var0[10], -1);
	__LIB_1__::func_379(1317, Var0[11], -1);
	__LIB_1__::func_379(1318, Var0.f_13[0], -1);
	__LIB_1__::func_379(1319, Var0.f_13[1], -1);
	__LIB_1__::func_379(1320, Var0.f_13[2], -1);
	__LIB_1__::func_379(1321, Var0.f_13[3], -1);
	__LIB_1__::func_379(1322, Var0.f_13[4], -1);
	__LIB_1__::func_379(1323, Var0.f_13[5], -1);
	__LIB_1__::func_379(1324, Var0.f_13[6], -1);
	__LIB_1__::func_379(1325, Var0.f_13[7], -1);
	__LIB_1__::func_379(1326, Var0.f_13[8], -1);
	__LIB_1__::func_379(1327, Var0.f_13[9], -1);
	__LIB_1__::func_379(1328, Var0.f_13[10], -1);
	__LIB_1__::func_379(1329, Var0.f_13[11], -1);
	__LIB_1__::func_379(1330, Var0.f_26[0], -1);
	__LIB_1__::func_379(1331, Var0.f_26[1], -1);
	__LIB_1__::func_379(1332, Var0.f_26[2], -1);
	__LIB_1__::func_379(1333, Var0.f_26[3], -1);
	__LIB_1__::func_379(1334, Var0.f_26[4], -1);
	__LIB_1__::func_379(1335, Var0.f_26[5], -1);
	__LIB_1__::func_379(1336, Var0.f_26[6], -1);
	__LIB_1__::func_379(1337, Var0.f_26[7], -1);
	__LIB_1__::func_379(1338, Var0.f_26[8], -1);
	__LIB_1__::func_379(1339, Var0.f_26[9], -1);
	__LIB_1__::func_379(1340, Var0.f_26[10], -1);
	__LIB_1__::func_379(1341, Var0.f_26[11], -1);
	__LIB_1__::func_379(1342, Var0.f_39[0], -1);
	__LIB_1__::func_379(1343, Var0.f_39[1], -1);
	__LIB_1__::func_379(1344, Var0.f_39[2], -1);
	__LIB_1__::func_379(1345, Var0.f_39[3], -1);
	__LIB_1__::func_379(1346, Var0.f_39[4], -1);
	__LIB_1__::func_379(1347, Var0.f_39[5], -1);
	__LIB_1__::func_379(1348, Var0.f_39[6], -1);
	__LIB_1__::func_379(1349, Var0.f_39[7], -1);
	__LIB_1__::func_379(1350, Var0.f_39[8], -1);
	__LIB_1__::func_379(1351, Var0.f_49[0], -1);
	__LIB_1__::func_379(1352, Var0.f_49[1], -1);
	__LIB_1__::func_379(1353, Var0.f_49[2], -1);
	__LIB_1__::func_379(1354, Var0.f_49[3], -1);
	__LIB_1__::func_379(1355, Var0.f_49[4], -1);
	__LIB_1__::func_379(1356, Var0.f_49[5], -1);
	__LIB_1__::func_379(1357, Var0.f_49[6], -1);
	__LIB_1__::func_379(1358, Var0.f_49[7], -1);
	__LIB_1__::func_379(1359, Var0.f_49[8], -1);
	__LIB_1__::func_379(1360, __LIB_17__::func_341(), -1);
	STATS::STAT_SET_BOOL(joaat("CLO_STORED_INITIAL"), true, true);
	Global_113386.f_2363.f_539.f_4315 = 1;
}

int func_249(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, int iParam5, int iParam6, char* sParam7, char* sParam8, char* sParam9, char* sParam10, char* sParam11, bool bParam12, bool bParam13, bool bParam14, int iParam15)//Position - 0x7556F
{
	return __LIB_17__::func_223(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 1, iParam4, iParam5, iParam6, 0, sParam7, sParam8, sParam9, sParam10, sParam11, __LIB_0__::func_591(), bParam12, bParam13, __LIB_0__::func_591(), 0, 0, bParam14, iParam15, 0, 0, 0, 1, 1065353216);
}

void func_250(int iParam0)//Position - 0x2283E
{
	struct<7> Var0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	float fVar4;
	int iVar5;
	int iVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	if (!__LIB_0__::func_346())
	{
		return;
	}
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	Var0 = { __LIB_0__::func_403(iParam0) };
	if (BitTest(Var0.f_4, 2))
	{
		__LIB_0__::func_726(iParam0, &Var0);
	}
	if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
	{
		if (CUTSCENE::IS_CUTSCENE_PLAYING())
		{
			return;
		}
	}
	bVar1 = false;
	bVar2 = false;
	fVar4 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true);
	if ((BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] == 2) && fVar4 > 210f)
	{
		MISC::CLEAR_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
		Global_38430[iParam0] = 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("startup_positioning")) == 0)
	{
		if (BitTest(Global_38657[(iParam0 / 32)], (iParam0 % 32)))
		{
			if (fVar4 < 25f)
			{
				if (Global_100493.f_373 == 0)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						Global_100493.f_373 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
					}
				}
				iVar5 = Global_100493.f_373;
				iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
				if (iVar5 == iVar6 && iVar5 != 0)
				{
					MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
					Global_38884[iParam0] = 3;
					MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
				}
			}
			MISC::CLEAR_BIT(&(Global_38657[(iParam0 / 32)]), (iParam0 % 32));
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)))
	{
		iVar3 = Global_38884[iParam0];
	}
	else if (BitTest(Var0.f_4, 0))
	{
		if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive)
		{
			iVar3 = __LIB_17__::func_376(iParam0);
		}
		else
		{
			iVar3 = 0;
		}
		if (__LIB_0__::func_39(14))
		{
			iVar3 = 0;
		}
	}
	else if (BitTest(Var0.f_4, 1) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("ambient_solomon")) == 0)
	{
		if (__LIB_17__::func_375())
		{
			iVar3 = 0;
		}
		else
		{
			iVar3 = 1;
		}
	}
	else
	{
		iVar3 = Global_113386.f_7261[iParam0];
	}
	if (Global_39111[iParam0] != iVar3)
	{
		bVar1 = true;
	}
	if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
	{
		if (!BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) || (Global_38430[iParam0] == 0 && Global_38884[iParam0] != 2))
		{
			bVar1 = true;
		}
	}
	if (bVar1)
	{
		if (!Global_38411)
		{
		}
		else
		{
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(Var0.f_5, Var0.f_3, Var0, false, false, false);
			}
			switch (iVar3)
			{
				case 1:
					if (BitTest(Var0.f_4, 3))
					{
						bVar7 = true;
					}
					else if (fVar4 > 3f || MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var0.f_5)) <= 0.015f)
					{
						iVar8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
						iVar9 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
						if (iVar8 != iVar9 || iVar8 == 0)
						{
							bVar7 = true;
						}
					}
					if (bVar7)
					{
						if (Var0.f_6 != 0f)
						{
							OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
						}
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
						bVar2 = true;
					}
					break;
				case 4:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 2:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 0:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, true);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 3:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, 0, false, true);
					bVar2 = true;
					break;
				case 5:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 6:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				default:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				}
		}
		if (bVar2)
		{
			MISC::CLEAR_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			Global_39111[iParam0] = iVar3;
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] != 2)
	{
		MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
		__LIB_0__::func_401(iParam0);
		if (Global_38430[iParam0] < 2)
		{
			Global_38430[iParam0]++;
		}
	}
}

void func_251(int iParam0, int iParam1, int iParam2)//Position - 0xA01B5
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (!__LIB_16__::func_841(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return;
	}
	if (!BitTest(Global_77137.f_555[0 /*21*/].f_9, 12) && !BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
	{
		if (Global_77137.f_555[0 /*21*/].f_4 != ENTITY::GET_ENTITY_MODEL(iParam1))
		{
			return;
		}
	}
	if (Global_78044 != -1 && Global_78044 != iParam0)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iParam1))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, true, true);
			}
			if (iParam0 == 24)
			{
				Global_113386.f_32749.f_4801 = __LIB_0__::func_464();
			}
			if (iParam1 != Global_77137.f_139[iParam0])
			{
				if (iParam0 == 24)
				{
					iVar0 = __LIB_0__::func_343(iParam0);
					if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false)) && iParam1 != iVar0)
					{
						__LIB_13__::func_828(iVar0, 145);
					}
				}
				Global_78043 = iParam1;
				Global_78044 = iParam0;
				Global_78045 = iParam2;
			}
		}
	}
}

void func_252(int iParam0)//Position - 0x1674
{
	switch (iParam0)
	{
		case 0:
			Global_1835502.f_395 = NETWORK::GET_NETWORK_TIME();
			break;
		case 1:
			Global_1835502.f_395.f_1 = NETWORK::GET_NETWORK_TIME();
			break;
		case 2:
			Global_1835502.f_395.f_2 = NETWORK::GET_NETWORK_TIME();
			break;
		case 3:
			Global_1835502.f_395.f_3 = NETWORK::GET_NETWORK_TIME();
			break;
	}
}

int func_253(int iParam0)//Position - 0x1711
{
	switch (iParam0)
	{
		case 0:
			return Global_1835502.f_395;
			break;
		case 1:
			return Global_1835502.f_395.f_1;
			break;
		case 2:
			return Global_1835502.f_395.f_2;
			break;
		case 3:
			return Global_1835502.f_395.f_3;
			break;
	}
	return NETWORK::GET_NETWORK_TIME();
}

int func_254(int iParam0)//Position - 0x17D0
{
	if (iParam0 < Global_2724918)
	{
		return 0;
	}
	else if (iParam0 < (Global_2724918 + Global_2724919))
	{
		return 1;
	}
	else if (iParam0 < ((Global_2724918 + Global_2724919) + Global_2724920))
	{
		return 2;
	}
	else if (iParam0 < (((Global_2724918 + Global_2724919) + Global_2724920) + Global_2724921))
	{
		return 3;
	}
	return 0;
}

bool func_255(int iParam0)//Position - 0x1F1B
{
	return Global_2689235[iParam0 /*453*/].f_269.f_5;
}

int func_256(int iParam0)//Position - 0x1F9B
{
	return Global_2683918[iParam0 /*3*/].f_1;
}

int func_257()//Position - 0x1FAD
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 42)
	{
		if (Global_2683918.f_97[iVar0 /*33*/].f_28 || Global_2683918.f_97[iVar0 /*33*/].f_29)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

bool func_258(bool bParam0)//Position - 0x2A9F
{
	return __LIB_1__::func_778(__LIB_12__::func_598(bParam0));
}

int func_259()//Position - 0x6F29
{
	if (Global_1835502.f_176[44] != 0 || Global_1835502.f_176[13] != 0)
	{
		return 0;
	}
	return 1;
}

void func_260(int iParam0, struct<3> Param1)//Position - 0x8D55
{
	Global_2688483[iParam0 /*10*/] = { Param1 };
}

bool func_261(bool bParam0)//Position - 0x8D9C
{
	return BitTest(Global_2688483[bParam0 /*10*/].f_6, 5);
}

void func_262(bool bParam0, var uParam1, var uParam2)//Position - 0x8FCA
{
	if (bParam0 == -1)
	{
		return;
	}
	*uParam1 = Global_2688483.f_324[bParam0 /*8*/].f_2;
	*uParam2 = Global_2688483.f_324[bParam0 /*8*/].f_3;
}

void func_263(bool bParam0, int iParam1, int iParam2)//Position - 0x8FFB
{
	Global_2688483.f_324[bParam0 /*8*/].f_2 = iParam1;
	Global_2688483.f_324[bParam0 /*8*/].f_3 = iParam2;
}

int func_264(int iParam0, int iParam1)//Position - 0x90C7
{
	int iVar0;
	while (iParam1 != 0)
	{
		iVar0 = iParam1;
		iParam1 = (iParam0 % iParam1);
		iParam0 = iVar0;
	}
	return iParam0;
}

void func_265(float fParam0, float fParam1)//Position - 0x91A6
{
	*fParam0 = ((100f / fParam1) - 1f);
	if (*fParam0 < 0f)
	{
		*fParam0 = 0.05f;
	}
}

bool func_266(bool bParam0)//Position - 0x91CB
{
	return Global_2688483.f_324[bParam0 /*8*/].f_4 > 0;
}

void func_267(int iParam0, var uParam1)//Position - 0x91E2
{
	Global_2688483[iParam0 /*10*/].f_3 = uParam1;
}

void func_268(int iParam0, bool bParam1, int iParam2)//Position - 0x91F6
{
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_2688483[iParam0 /*10*/].f_6), 0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_2688483[iParam0 /*10*/].f_6), 0);
	}
	Global_2688483[iParam0 /*10*/].f_7 = iParam2;
}

int func_269(bool bParam0)//Position - 0x9253
{
	return Global_2688483.f_324[bParam0 /*8*/].f_6;
}

void func_270(bool bParam0, var uParam1)//Position - 0x9268
{
	Global_2688483.f_324[bParam0 /*8*/].f_4 = uParam1;
}

int func_271(int iParam0)//Position - 0x92E8
{
	return Global_2688483.f_324[iParam0 /*8*/].f_1;
}

var func_272(int iParam0)//Position - 0x93E2
{
	return Global_2688483[iParam0 /*10*/].f_8;
}

Vector3 func_273(bool bParam0)//Position - 0x93F4
{
	return Global_2688483[bParam0 /*10*/];
}

bool func_274(int iParam0)//Position - 0x9406
{
	return Global_2688483.f_324[iParam0 /*8*/].f_7;
}

int func_275(bool bParam0)//Position - 0x941B
{
	return Global_1853348[bParam0 /*834*/].f_96.f_28;
}

int func_276(int iParam0)//Position - 0x964B
{
	return Global_2686568[iParam0 /*41*/].f_3.f_1;
}

int func_277(int iParam0)//Position - 0x965F
{
	int iVar0;
	iVar0 = iParam0;
	if (Global_2681762.f_4[iVar0 /*2*/] == 3)
	{
		return 0;
	}
	return 1;
}

void func_278(int iParam0)//Position - 0x9691
{
	int iVar0;
	int iVar1;
	iVar0 = Global_2681762.f_127[iParam0 /*2*/].f_1;
	iVar1 = Global_2681762.f_127[iParam0 /*2*/];
	if (iVar0 != -1 && iVar1 != -1)
	{
		MISC::CLEAR_BIT(&(Global_2681762.f_94[iVar0]), iVar1);
	}
	Global_2681762.f_127[iParam0 /*2*/].f_1 = -1;
	Global_2681762.f_127[iParam0 /*2*/] = -1;
}

bool func_279(int iParam0)//Position - 0x9BA8
{
	return Global_2686568[iParam0 /*41*/] == 1;
}

bool func_280(int iParam0)//Position - 0x9BBA
{
	return Global_2686568[iParam0 /*41*/] == 0;
}

bool func_281(int iParam0)//Position - 0x9F01
{
	return Global_2657492.f_291[iParam0 /*4*/].f_3 > 0;
}

bool func_282(int iParam0)//Position - 0x9F69
{
	return Global_2657492.f_2[iParam0 /*18*/];
}

Vector3 func_283(int iParam0)//Position - 0xA117
{
	return Global_2657492.f_291[iParam0 /*4*/];
}

struct<10> func_284(int iParam0)//Position - 0xA3B5
{
	struct<10> Var0;
	Var0.f_1 = -1;
	Var0.f_2 = -1;
	Var0.f_9 = -1;
	__LIB_13__::func_454(&Var0);
	if (__LIB_27__::func_451(iParam0))
	{
		Var0.f_0 = Global_2657492.f_356[iParam0 /*75*/].f_6;
		Var0.f_1 = Global_2657492.f_356[iParam0 /*75*/].f_7;
		Var0.f_2 = Global_2657492.f_356[iParam0 /*75*/].f_8;
		Var0.f_3 = { Global_2657492.f_356[iParam0 /*75*/].f_10 };
		Var0.f_9 = iParam0;
	}
	return Var0;
}

bool func_285(int iParam0)//Position - 0xA432
{
	return BitTest(Global_2657492.f_356[iParam0 /*75*/].f_5, 3);
}

void func_286(int iParam0, int iParam1, int iParam2)//Position - 0xA92A
{
	Global_2681762.f_4[iParam0 /*2*/] = iParam1;
	Global_2681762.f_4[iParam0 /*2*/].f_1 = iParam2;
}

bool func_287(int iParam0)//Position - 0xAB10
{
	return BitTest(Global_2686568[iParam0 /*41*/].f_40, 0);
}

bool func_288(int iParam0)//Position - 0xB6FE
{
	return Global_2686568[iParam0 /*41*/] == 3;
}

int func_289(int iParam0)//Position - 0xB710
{
	return Global_2686568[iParam0 /*41*/].f_1;
}

bool func_290(int iParam0, bool bParam1)//Position - 0xB81A
{
	var uVar0;
	uVar0 = bParam1;
	return BitTest(Global_2686568[iParam0 /*41*/].f_37, uVar0);
}

bool func_291(int iParam0, bool bParam1)//Position - 0xB833
{
	var uVar0;
	uVar0 = bParam1;
	return BitTest(Global_2686568[iParam0 /*41*/].f_34, uVar0);
}

var func_292(int iParam0)//Position - 0xB917
{
	return Global_2686568[iParam0 /*41*/].f_37;
}

int func_293(int iParam0, int iParam1, bool bParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0xB929
{
	bool bVar0;
	int iVar1;
	bVar0 = true;
	iVar1 = (iParam3 + iParam4);
	if (iVar1 >= iParam6)
	{
		bVar0 = false;
	}
	if (bVar0)
	{
		if (!bParam2)
		{
			if ((iVar1 + iParam5) >= iParam6)
			{
				bVar0 = false;
			}
		}
	}
	if (bVar0)
	{
		return 1;
	}
	iParam0 = iParam0;
	iParam1 = iParam1;
	return 0;
}

int func_294(int iParam0)//Position - 0xD73E
{
	if (iParam0 == 0)
	{
	}
	return 0;
}

int func_295(int iParam0)//Position - 0xD75C
{
	return Global_2686568[iParam0 /*41*/].f_29;
}

int func_296(int iParam0, int iParam1)//Position - 0xD76E
{
	int iVar0;
	iVar0 = __LIB_13__::func_467(iParam0, iParam1);
	if (iVar0 == -1)
	{
		return 1;
	}
	return Global_1641652[iVar0 /*6*/].f_3;
}

void func_297(int iParam0)//Position - 0xD7ED
{
	Global_2686568[iParam0 /*41*/].f_30 = 0;
}

var func_298(int iParam0)//Position - 0xED49
{
	return Global_2686568[iParam0 /*41*/].f_28;
}

void func_299(int iParam0)//Position - 0xEEF8
{
	struct<41> Var0;
	Var0 = 5;
	Var0.f_1 = 10;
	Var0.f_2 = 11;
	Var0.f_3.f_1 = -1;
	Var0.f_3.f_2 = -1;
	Var0.f_3.f_9 = -1;
	Var0.f_3.f_16 = -1;
	Var0.f_3.f_19 = -1;
	Var0.f_3.f_20 = -1;
	Var0.f_27 = -1;
	Global_2686568[iParam0 /*41*/] = { Var0 };
}

int func_300(int iParam0, int iParam1)//Position - 0xF05A
{
	switch (iParam0)
	{
		case 7:
		case 5:
			break;
		case 0:
		case 1:
		case 2:
		case 3:
		case 6:
		case 4:
		case 8:
		case 9:
		case 10:
			return 0;
		default:
			return 0;
	}
	if (iParam0 == 7 || iParam0 == 5)
	{
		switch (iParam1)
		{
			case 0:
			case 5:
			case 1:
			case 2:
			case 3:
			case 4:
				return 1;
			default:
		}
		return 0;
		return 0;
	}
	return 0;
}

int func_301(int iParam0)//Position - 0xF452
{
	if (iParam0 == -1)
	{
		return 0;
	}
	switch (iParam0)
	{
		case 9:
			if (Global_152058.f_3 == 2)
			{
				return 0;
			}
			break;
		case 8:
			if (Global_152138.f_3 == 2)
			{
				return 0;
			}
			break;
		default:
			break;
	}
	return 1;
}

bool func_302(int iParam0, var uParam1)//Position - 0xF524
{
	return BitTest(*uParam1, iParam0);
}

int func_303(bool bParam0)//Position - 0xF5A9
{
	bParam0 = bParam0;
	return 1;
}

void func_304(var uParam0)//Position - 0xF634
{
	*uParam0 = 0;
	uParam0->f_1 = 0;
	uParam0->f_2 = 0;
	uParam0->f_3 = 0;
	uParam0->f_4 = 0;
}

bool func_305(bool bParam0)//Position - 0x11723
{
	return Global_1853348[bParam0 /*834*/].f_267.f_465 != 0;
}

bool func_306(bool bParam0)//Position - 0x1179E
{
	return BitTest(Global_1853348[bParam0 /*834*/].f_267.f_366, 7);
}

int func_307(bool bParam0)//Position - 0x1196F
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[bParam0 /*834*/].f_267.f_114[iVar0 /*3*/] != 0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_308()//Position - 0x12021
{
	if (!Global_1958606 && Global_1958607)
	{
		return 1;
	}
	return 0;
}

int func_309(int iParam0)//Position - 0x139C1
{
	if (__LIB_1__::func_778(iParam0))
	{
		return (Global_2824571.f_2[iParam0] && Global_2824571.f_137[iParam0]);
	}
	return 0;
}

int func_310(int iParam0, int iParam1)//Position - 0x6EC34
{
	if (Global_1575046)
	{
		return 0;
	}
	if (iParam0 == 22)
	{
		return 1;
	}
	if ((((((((iParam1 || !Global_1575058) || iParam0 == 3) || iParam0 == 10) || iParam0 == 11) || iParam0 == 27) || iParam0 == 28) || iParam0 == 29) || iParam0 == 30)
	{
		return 1;
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_311(bool bParam0)//Position - 0x76FE5
{
	int iVar0;
	iVar0 = bParam0;
	if (iVar0 != -1)
	{
		return Global_1888862[iVar0 /*120*/].f_77.f_42 != 0;
	}
	return 0;
}

bool func_312(bool bParam0)//Position - 0x9810C
{
	return BitTest(Global_1853348[bParam0 /*834*/].f_267.f_366, 8);
}

int func_313()//Position - 0xA1118
{
	return __LIB_12__::func_598(PLAYER::PLAYER_ID());
}

void func_314(struct<3> Param0)//Position - 0xA1128
{
	int iVar0;
	if (SYSTEM::VMAG(Param0) < 0.01f)
	{
		Param0.f_2 = 1f;
	}
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_1 = { Param0 };
	iVar0 = NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID());
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_46 = iVar0;
}

void func_315(var uParam0)//Position - 0xA11D6
{
	if (*uParam0 < 0)
	{
		*uParam0 = 0;
	}
	if (*uParam0 > 2)
	{
		*uParam0 = 2;
	}
	if (uParam0->f_1 < 0)
	{
		uParam0->f_1 = 0;
	}
	if (uParam0->f_1 > 15)
	{
		uParam0->f_1 = 15;
	}
	if (uParam0->f_2 < 0)
	{
		uParam0->f_2 = 0;
	}
	if (uParam0->f_2 > 7)
	{
		uParam0->f_2 = 7;
	}
	if (uParam0->f_3 < 0)
	{
		uParam0->f_3 = 0;
	}
	if (uParam0->f_3 > 1)
	{
		uParam0->f_3 = 1;
	}
	if (uParam0->f_4 < 0)
	{
		uParam0->f_4 = 0;
	}
	if (uParam0->f_4 > 45)
	{
		uParam0->f_4 = 45;
	}
}

Vector3 func_316(int iParam0)//Position - 0xA1260
{
	return Global_4282900[iParam0 /*3*/];
}

int func_317(bool bParam0)//Position - 0xA207A
{
	return __LIB_3__::func_184(PLAYER::PLAYER_ID(), bParam0);
}

bool func_318(bool bParam0)//Position - 0xA208C
{
	return __LIB_3__::func_165(PLAYER::PLAYER_ID(), bParam0);
}

void func_319(int iParam0)//Position - 0xA3534
{
	Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1301 = (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1301 + iParam0);
	if (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1302 == -1)
	{
		Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1302 = NETWORK::GET_CLOUD_TIME_AS_INT();
	}
	if (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1301 >= Global_262145.f_7045 /* Tunable: CAP_MAX_AMOUNT_CASH_RECIEVED */)
	{
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833, 10) == 0)
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833), 10);
		}
	}
}

void func_320()//Position - 0xA3B83
{
	struct<35> Var0;
	Var0.f_2 = 32;
	Global_2725914 = { Var0 };
}

int func_321(bool bParam0)//Position - 0xA5DF0
{
	if (__LIB_1__::func_597(Global_1853348[bParam0 /*834*/].f_267.f_32))
	{
		return 1;
	}
	return 0;
}

void func_322(int iParam0, int iParam1, bool bParam2)//Position - 0xA6085
{
	if (bParam2)
	{
		if (!__LIB_1__::func_779(iParam0, iParam1))
		{
			Global_4282659[iParam0 /*10*/].f_6 = (Global_4282659[iParam0 /*10*/].f_6 + iParam1);
		}
	}
	else if (__LIB_1__::func_779(iParam0, iParam1))
	{
		Global_4282659[iParam0 /*10*/].f_6 = (Global_4282659[iParam0 /*10*/].f_6 - iParam1);
	}
}

void func_323(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0xA60E0
{
	int iVar0;
	iVar0 = uParam1;
	switch (iParam0)
	{
		case joaat("speeder2"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 77;
					*uParam3 = 11;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 78;
					break;
				case 1:
					*uParam2 = 63;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 67;
					*uParam6 = 65;
					*uParam7 = 74;
					break;
				case 2:
					*uParam2 = 73;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 73;
					*uParam6 = 111;
					*uParam7 = 73;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 23;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 23;
					*uParam7 = 8;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 9;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 9;
					*uParam7 = 6;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 45;
					*uParam6 = 2;
					*uParam7 = 45;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 2;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 0;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 0;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 138;
					*uParam6 = 111;
					*uParam7 = 138;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 18;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 2;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 59;
					*uParam6 = 111;
					*uParam7 = 59;
					break;
				case 11:
					*uParam2 = 30;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 30;
					*uParam7 = 111;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 121;
					*uParam4 = 7;
					*uParam5 = 77;
					*uParam6 = 121;
					*uParam7 = 77;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 33;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 33;
					*uParam6 = 111;
					*uParam7 = 33;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 1;
					*uParam4 = 7;
					*uParam5 = 99;
					*uParam6 = 158;
					*uParam7 = 1;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("dinghy4"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 77;
					*uParam4 = 8;
					*uParam5 = 77;
					*uParam6 = 77;
					*uParam7 = 111;
					break;
				case 1:
					*uParam2 = 111;
					*uParam3 = 63;
					*uParam4 = 8;
					*uParam5 = 63;
					*uParam6 = 63;
					*uParam7 = 63;
					break;
				case 2:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 73;
					*uParam6 = 73;
					*uParam7 = 111;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 23;
					*uParam4 = 8;
					*uParam5 = 8;
					*uParam6 = 8;
					*uParam7 = 23;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 9;
					*uParam4 = 8;
					*uParam5 = 9;
					*uParam6 = 8;
					*uParam7 = 6;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 2;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 45;
					*uParam7 = 2;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 111;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 0;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 111;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 138;
					*uParam6 = 138;
					*uParam7 = 111;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 18;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 18;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 59;
					*uParam7 = 132;
					break;
				case 11:
					*uParam2 = 31;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 2;
					*uParam6 = 111;
					*uParam7 = 31;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 121;
					*uParam4 = 8;
					*uParam5 = 77;
					*uParam6 = 77;
					*uParam7 = 121;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 8;
					*uParam5 = 33;
					*uParam6 = 33;
					*uParam7 = 111;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 1;
					*uParam4 = 0;
					*uParam5 = 1;
					*uParam6 = 158;
					*uParam7 = 1;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("seashark3"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 77;
					*uParam7 = 77;
					break;
				case 1:
					*uParam2 = 111;
					*uParam3 = 63;
					*uParam4 = 7;
					*uParam5 = 63;
					*uParam6 = 63;
					*uParam7 = 63;
					break;
				case 2:
					*uParam2 = 111;
					*uParam3 = 73;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 73;
					*uParam7 = 73;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 8;
					*uParam7 = 8;
					break;
				case 4:
					*uParam2 = 8;
					*uParam3 = 9;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 8;
					*uParam7 = 9;
					break;
				case 5:
					*uParam2 = 45;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 45;
					*uParam6 = 2;
					*uParam7 = 2;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 2;
					*uParam7 = 2;
					break;
				case 7:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 111;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 138;
					*uParam4 = 7;
					*uParam5 = 138;
					*uParam6 = 111;
					*uParam7 = 138;
					break;
				case 9:
					*uParam2 = 18;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 2;
					*uParam7 = 2;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 8;
					*uParam7 = 111;
					break;
				case 11:
					*uParam2 = 111;
					*uParam3 = 31;
					*uParam4 = 7;
					*uParam5 = 31;
					*uParam6 = 111;
					*uParam7 = 31;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 77;
					*uParam6 = 121;
					*uParam7 = 77;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 18;
					*uParam4 = 7;
					*uParam5 = 18;
					*uParam6 = 18;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 33;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 33;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 158;
					*uParam4 = 7;
					*uParam5 = 1;
					*uParam6 = 1;
					*uParam7 = 1;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("toro2"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 104;
					*uParam4 = 7;
					*uParam5 = 77;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 1:
					*uParam2 = 63;
					*uParam3 = 103;
					*uParam4 = 7;
					*uParam5 = 63;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 2:
					*uParam2 = 73;
					*uParam3 = 103;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 103;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 103;
					*uParam4 = 7;
					*uParam5 = 8;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 11;
					*uParam4 = 7;
					*uParam5 = 45;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 94;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 11;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 8:
					*uParam2 = 138;
					*uParam3 = 104;
					*uParam4 = 7;
					*uParam5 = 138;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 101;
					*uParam4 = 7;
					*uParam5 = 18;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 97;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 11:
					*uParam2 = 31;
					*uParam3 = 104;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 12:
					*uParam2 = 111;
					*uParam3 = 103;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 104;
					*uParam4 = 7;
					*uParam5 = 2;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 111;
					*uParam3 = 104;
					*uParam4 = 7;
					*uParam5 = 33;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 158;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("tropic2"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 1:
					*uParam2 = 111;
					*uParam3 = 63;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 2:
					*uParam2 = 111;
					*uParam3 = 73;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 45;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 138;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 18;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 11:
					*uParam2 = 111;
					*uParam3 = 31;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 111;
					*uParam3 = 33;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 158;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("swift2"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 1:
					*uParam2 = 111;
					*uParam3 = 63;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 2:
					*uParam2 = 111;
					*uParam3 = 73;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 45;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 138;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 18;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 11:
					*uParam2 = 111;
					*uParam3 = 31;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 111;
					*uParam3 = 33;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 158;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
		case joaat("supervolito2"):
			switch (iVar0)
			{
				case 0:
					*uParam2 = 111;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 1:
					*uParam2 = 111;
					*uParam3 = 63;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 2:
					*uParam2 = 111;
					*uParam3 = 73;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 3:
					*uParam2 = 23;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 4:
					*uParam2 = 9;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 5:
					*uParam2 = 2;
					*uParam3 = 45;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 6:
					*uParam2 = 2;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 7:
					*uParam2 = 111;
					*uParam3 = 2;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 8:
					*uParam2 = 111;
					*uParam3 = 138;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 9:
					*uParam2 = 2;
					*uParam3 = 18;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 10:
					*uParam2 = 111;
					*uParam3 = 8;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 11:
					*uParam2 = 111;
					*uParam3 = 31;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 12:
					*uParam2 = 121;
					*uParam3 = 77;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 13:
					*uParam2 = 111;
					*uParam3 = 111;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 14:
					*uParam2 = 111;
					*uParam3 = 33;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				case 15:
					*uParam2 = 1;
					*uParam3 = 158;
					*uParam4 = 7;
					*uParam5 = 111;
					*uParam6 = 111;
					*uParam7 = 111;
					break;
				default:
					*uParam2 = 0;
					*uParam3 = 0;
					*uParam4 = 0;
					*uParam5 = 0;
					*uParam6 = 0;
					*uParam7 = 0;
					break;
			}
			break;
	}
}

bool func_324()//Position - 0xAB81D
{
	return Global_262145.f_13108 /* Tunable: YACHT_DISABLE_DEFENSES */;
}

int func_325(bool bParam0, bool bParam1)//Position - 0xABF83
{
	if (BitTest(Global_2689235[bParam0 /*453*/].f_389, bParam1) || BitTest(Global_2689235[bParam1 /*453*/].f_389, bParam0))
	{
		return 1;
	}
	return 0;
}

void func_326(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5, bool bParam6)//Position - 0xABFB7
{
	struct<9> Var0;
	Var0.f_0 = -714268990;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_7 = bParam6;
	Var0.f_4 = iParam1;
	Var0.f_5 = iParam4;
	Var0.f_2 = fParam2;
	Var0.f_3 = iParam3;
	Var0.f_6 = iParam5;
	Var0.f_8 = MISC::GET_FRAME_COUNT();
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 9, iParam0);
	}
}

Vector3 func_327(int iParam0)//Position - 0xAD229
{
	return Global_4280768[iParam0 /*45*/].f_12;
}

void func_328(int iParam0, int iParam1)//Position - 0xAD282
{
	Global_2824571.f_2[iParam0] = iParam1;
}

int func_329(int iParam0)//Position - 0xAD5BB
{
	if (iParam0 == __LIB_12__::func_598(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_330(int iParam0)//Position - 0xAE6D4
{
	if (__LIB_1__::func_778(iParam0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			return PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(__LIB_2__::func_699(iParam0)), PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), false);
		}
	}
	return 0;
}

int func_331(int iParam0, int iParam1)//Position - 0xAF654
{
	if (!STREAMING::IS_MODEL_VALID(iParam1) || iParam1 == 0)
	{
		return 0;
	}
	if (VEHICLE::IS_THIS_MODEL_A_HELI(iParam1) && BitTest(Global_4718592.f_174915[iParam0 /*24*/].f_17, 2))
	{
		return 0;
	}
	if (VEHICLE::IS_THIS_MODEL_A_BOAT(iParam1) && BitTest(Global_4718592.f_174915[iParam0 /*24*/].f_17, 3))
	{
		return 0;
	}
	if (VEHICLE::IS_THIS_MODEL_A_JETSKI(iParam1) && BitTest(Global_4718592.f_174915[iParam0 /*24*/].f_17, 4))
	{
		return 0;
	}
	return 1;
}

int func_332(int iParam0)//Position - 0xAF6DE
{
	return Global_4282659[iParam0 /*10*/].f_5;
}

void func_333()//Position - 0xAFC15
{
	Global_4282659[0 /*10*/] = { -0.2508f, -32.3f, 0.8727f };
	Global_4282659[0 /*10*/].f_3 = 0f;
	Global_4282659[0 /*10*/].f_5 = joaat("supervolito2");
	Global_4282659[0 /*10*/].f_4 = 3.5f;
	Global_4282659[0 /*10*/].f_7 = 300000;
	Global_4282659[0 /*10*/].f_8 = -1;
	Global_4282659[0 /*10*/].f_9 = 400f;
	Global_4282659[0 /*10*/].f_6 = 64;
	Global_4282659[1 /*10*/] = { 11.25f, -55.8404f, -11f };
	Global_4282659[1 /*10*/].f_3 = 340.8939f;
	Global_4282659[1 /*10*/].f_5 = joaat("dinghy4");
	Global_4282659[1 /*10*/].f_4 = 2.4f;
	Global_4282659[1 /*10*/].f_9 = 300f;
	Global_4282659[1 /*10*/].f_6 = 1;
	Global_4282659[2 /*10*/] = { 6.75f, -63f, -11f };
	Global_4282659[2 /*10*/].f_3 = 206.26f;
	Global_4282659[2 /*10*/].f_5 = joaat("seashark3");
	Global_4282659[2 /*10*/].f_4 = 1.4f;
	Global_4282659[2 /*10*/].f_9 = 200f;
	Global_4282659[2 /*10*/].f_6 = 1;
	Global_4282659[3 /*10*/] = { 4.5f, -63f, -11f };
	Global_4282659[3 /*10*/].f_3 = 206.26f;
	Global_4282659[3 /*10*/].f_5 = joaat("seashark3");
	Global_4282659[3 /*10*/].f_4 = 1.4f;
	Global_4282659[3 /*10*/].f_9 = 200f;
	Global_4282659[3 /*10*/].f_6 = 1;
	Global_4282659[4 /*10*/] = { -11.25f, -55.8404f, -11f };
	Global_4282659[4 /*10*/].f_3 = 20f;
	Global_4282659[4 /*10*/].f_5 = joaat("toro2");
	Global_4282659[4 /*10*/].f_4 = 2.4f;
	Global_4282659[4 /*10*/].f_9 = 300f;
	Global_4282659[4 /*10*/].f_6 = 1;
	Global_4282659[5 /*10*/] = { -4.5f, -63f, -11f };
	Global_4282659[5 /*10*/].f_3 = 153.7463f;
	Global_4282659[5 /*10*/].f_5 = joaat("seashark3");
	Global_4282659[5 /*10*/].f_4 = 1.4f;
	Global_4282659[5 /*10*/].f_9 = 200f;
	Global_4282659[5 /*10*/].f_6 = 1;
	Global_4282659[6 /*10*/] = { -6.75f, -63f, -11f };
	Global_4282659[6 /*10*/].f_3 = 153.7463f;
	Global_4282659[6 /*10*/].f_5 = joaat("seashark3");
	Global_4282659[6 /*10*/].f_4 = 1.4f;
	Global_4282659[6 /*10*/].f_9 = 200f;
	Global_4282659[6 /*10*/].f_6 = 1;
	Global_4282730[0 /*5*/] = { Global_4282659[1 /*10*/] };
	Global_4282730[0 /*5*/].f_3 = Global_4282659[1 /*10*/].f_3;
	Global_4282730[0 /*5*/].f_4 = Global_4282659[1 /*10*/].f_4;
	Global_4282730[1 /*5*/] = { Global_4282659[2 /*10*/] };
	Global_4282730[1 /*5*/].f_3 = Global_4282659[2 /*10*/].f_3;
	Global_4282730[1 /*5*/].f_4 = Global_4282659[2 /*10*/].f_4;
	Global_4282730[2 /*5*/] = { Global_4282659[3 /*10*/] };
	Global_4282730[2 /*5*/].f_3 = Global_4282659[3 /*10*/].f_3;
	Global_4282730[2 /*5*/].f_4 = Global_4282659[3 /*10*/].f_4;
	Global_4282730[3 /*5*/] = { Global_4282659[4 /*10*/] };
	Global_4282730[3 /*5*/].f_3 = Global_4282659[4 /*10*/].f_3;
	Global_4282730[3 /*5*/].f_4 = Global_4282659[4 /*10*/].f_4;
	Global_4282730[4 /*5*/] = { Global_4282659[5 /*10*/] };
	Global_4282730[4 /*5*/].f_3 = Global_4282659[5 /*10*/].f_3;
	Global_4282730[4 /*5*/].f_4 = Global_4282659[5 /*10*/].f_4;
	Global_4282730[5 /*5*/] = { Global_4282659[6 /*10*/] };
	Global_4282730[5 /*5*/].f_3 = Global_4282659[6 /*10*/].f_3;
	Global_4282730[5 /*5*/].f_4 = Global_4282659[6 /*10*/].f_4;
	Global_4282730[6 /*5*/] = { 0f, -63f, -11.9254f };
	Global_4282730[6 /*5*/].f_3 = 180.2068f;
	Global_4282730[6 /*5*/].f_4 = 2.4f;
}

void func_334()//Position - 0xB0E72
{
	if (Global_2703735.f_3307.f_72 > 0)
	{
		STATS::PLAYSTATS_ROS_BET(Global_2703735.f_3307.f_72, Global_4718592, PLAYER::PLAYER_ID(), (Global_262145.f_105 /* Tunable: BOOKIE_RAKE */ * 0.01f));
	}
}

int func_335()//Position - 0xB3932
{
	return Global_2703735.f_3307;
}

int func_336(int iParam0)//Position - 0xB5F75
{
	switch (iParam0)
	{
		case 0:
			return __LIB_18__::func_95();
		case 1:
			return __LIB_18__::func_94();
		case 2:
			return __LIB_18__::func_93();
		case 3:
			return __LIB_18__::func_92();
		case 4:
			return __LIB_7__::func_241();
		default:
	}
	return 0;
}

int func_337(int iParam0)//Position - 0xB7AB1
{
	if (Global_1574632.f_9 == 0)
	{
		if (iParam0 > -1)
		{
			if (iParam0 == PLAYER::PLAYER_ID())
			{
				return Global_1659759[__LIB_1__::func_27(-1)];
			}
			else if (__LIB_27__::func_334(iParam0))
			{
				return Global_1853348[iParam0 /*834*/].f_205.f_1;
			}
		}
	}
	else
	{
		return Global_1659759[__LIB_1__::func_27(-1)];
	}
	return 0;
}

void func_338(int iParam0)//Position - 0xBAC06
{
	Global_2788199.f_499 = iParam0;
}

int func_339(int iParam0)//Position - 0xBACC2
{
	switch (iParam0)
	{
		case 0:
			return 26911;
		case 1:
			return 26912;
		case 2:
			return 26913;
		case 3:
			return 26914;
		case 4:
			return 26915;
		case 5:
			return 26916;
		case 6:
			return 26917;
		case 7:
			return 26918;
		case 8:
			return 26919;
		case 9:
			return 26920;
		case 10:
			return 26921;
		case 11:
			return 26922;
		case 12:
			return 26923;
		case 13:
			return 26924;
		case 14:
			return 26925;
		case 15:
			return 26926;
		case 16:
			return 26927;
		case 17:
			return 26928;
		case 18:
			return 26929;
		case 19:
			return 26930;
		case 20:
			return 26931;
		case 21:
			return 26932;
		case 22:
			return 26933;
		case 23:
			return 26934;
		case 24:
			return 26935;
		case 25:
			return 26936;
		case 26:
			return 26937;
		case 27:
			return 26938;
		case 28:
			return 26939;
		case 29:
			return 26940;
		case 30:
			return 26941;
		case 31:
			return 26942;
		case 32:
			return 26943;
		case 33:
			return 26944;
		case 34:
			return 26945;
		case 35:
			return 26946;
		case 36:
			return 26947;
		case 37:
			return 26948;
		case 38:
			return 26949;
		case 39:
			return 26950;
		case 40:
			return 26951;
		case 41:
			return 26952;
		case 42:
			return 26953;
		case 43:
			return 26954;
		case 44:
			return 26955;
		case 45:
			return 26956;
		case 46:
			return 26957;
		case 47:
			return 26958;
		case 48:
			return 26959;
		case 49:
			return 26960;
		case 50:
			return 26961;
		case 51:
			return 26962;
		case 52:
			return 26963;
		case 53:
			return 26964;
		default:
	}
	return 26964;
}

int func_340(int iParam0)//Position - 0xBAF9E
{
	switch (iParam0)
	{
		case 0:
			return 26811;
		case 1:
			return 26812;
		case 2:
			return 26813;
		case 3:
			return 26814;
		case 4:
			return 26815;
		case 5:
			return 26816;
		case 6:
			return 26817;
		case 7:
			return 26818;
		case 8:
			return 26819;
		case 9:
			return 26820;
		case 10:
			return 26821;
		case 11:
			return 26822;
		case 12:
			return 26823;
		case 13:
			return 26824;
		case 14:
			return 26825;
		case 15:
			return 26826;
		case 16:
			return 26827;
		case 17:
			return 26828;
		case 18:
			return 26829;
		case 19:
			return 26830;
		case 20:
			return 26831;
		case 21:
			return 26832;
		case 22:
			return 26833;
		case 23:
			return 26834;
		case 24:
			return 26835;
		case 25:
			return 26836;
		case 26:
			return 26837;
		case 27:
			return 26838;
		case 28:
			return 26839;
		case 29:
			return 26840;
		case 30:
			return 26841;
		case 31:
			return 26842;
		case 32:
			return 26843;
		case 33:
			return 26844;
		case 34:
			return 26845;
		case 35:
			return 26846;
		case 36:
			return 26847;
		case 37:
			return 26848;
		case 38:
			return 26849;
		case 39:
			return 26850;
		case 40:
			return 26851;
		case 41:
			return 26852;
		case 42:
			return 26853;
		case 43:
			return 26854;
		case 44:
			return 26855;
		case 45:
			return 26856;
		case 46:
			return 26857;
		case 47:
			return 26858;
		case 48:
			return 26859;
		case 49:
			return 26860;
		case 50:
			return 26861;
		case 51:
			return 26862;
		case 52:
			return 26863;
		case 53:
			return 26864;
		case 54:
			return 26865;
		case 55:
			return 26866;
		case 56:
			return 26867;
		case 57:
			return 26868;
		case 58:
			return 26869;
		case 59:
			return 26870;
		case 60:
			return 26871;
		case 61:
			return 26872;
		case 62:
			return 26873;
		case 63:
			return 26874;
		case 64:
			return 26875;
		case 65:
			return 26876;
		case 66:
			return 26877;
		case 67:
			return 26878;
		case 68:
			return 26879;
		case 69:
			return 26880;
		case 70:
			return 26881;
		case 71:
			return 26882;
		case 72:
			return 26883;
		case 73:
			return 26884;
		case 74:
			return 26885;
		case 75:
			return 26886;
		case 76:
			return 26887;
		case 77:
			return 26888;
		case 78:
			return 26889;
		case 79:
			return 26890;
		case 80:
			return 26891;
		case 81:
			return 26892;
		case 82:
			return 26893;
		case 83:
			return 26894;
		case 84:
			return 26895;
		case 85:
			return 26896;
		case 86:
			return 26897;
		case 87:
			return 26898;
		case 88:
			return 26899;
		case 89:
			return 26900;
		case 90:
			return 26901;
		case 91:
			return 26902;
		case 92:
			return 26903;
		case 93:
			return 26904;
		case 94:
			return 26905;
		case 95:
			return 26906;
		case 96:
			return 26907;
		case 97:
			return 26908;
		case 98:
			return 26909;
		case 99:
			return 26910;
		default:
	}
	return 26811;
}

char* func_341()//Position - 0xBCCB6
{
	return "digiscanner";
}

char* func_342()//Position - 0xBCCC2
{
	return "digiscanner_reh";
}

int func_343(bool bParam0, int iParam1)//Position - 0xF023D
{
	if (Global_1892703[bParam0 /*599*/].f_10.f_32 != -1 || (iParam1 && Global_1892703[bParam0 /*599*/].f_10.f_33 != -1))
	{
		return 1;
	}
	return 0;
}

int func_344()//Position - 0x11A9A5
{
	if (__LIB_27__::func_333(PLAYER::PLAYER_ID()) || __LIB_27__::func_332(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__::func_614() || __LIB_1__::func_24())
		{
			return 1;
		}
	}
	return 0;
}

void func_345(bool bParam0)//Position - 0x1E6694
{
	Global_2788199.f_500 = HUD::ADD_BLIP_FOR_COORD(-1007.973f, -487.1707f, 38.9745f);
	HUD::SET_BLIP_SPRITE(Global_2788199.f_500, 790);
	HUD::SET_BLIP_COLOUR(Global_2788199.f_500, 5);
	HUD::SET_BLIP_PRIORITY(Global_2788199.f_500, 11);
	if (bParam0)
	{
		HUD::SET_BLIP_FLASH_TIMER(Global_2788199.f_500, 10000);
	}
}

int func_346(bool bParam0)//Position - 0x1E9FB8
{
	if (__LIB_5__::func_185(bParam0) == 264)
	{
		return __LIB_3__::func_233(bParam0);
	}
	return -1;
}

int func_347(int iParam0, int iParam1)//Position - 0x20239C
{
	int iVar0;
	if (__LIB_0__::func_3() != 0)
	{
		return 0;
	}
	if (!__LIB_27__::func_334(iParam0))
	{
		return 0;
	}
	iVar0 = iParam0;
	if (Global_1853348[iVar0 /*834*/] == iParam1)
	{
		return 1;
	}
	return 0;
}

void func_348(int iParam0)//Position - 0x212A40
{
	Global_1931437 = iParam0;
}

Vector3 func_349(int iParam0)//Position - 0x22CC95
{
	switch (iParam0)
	{
		case 0:
			return 171.4769f, -1925.5862f, 20.156f;
		case 1:
			return -234.541f, -1516.663f, 31.296f;
		case 2:
			return -213.5869f, 6455.2397f, 30.329f;
		case 3:
			return 327.064f, 6430.808f, 30.097f;
		case 4:
			return 2268.018f, 4597.53f, 34.175f;
		case 5:
			return 3102.362f, 6034.412f, 122.219f;
		case 6:
			return -35.2434f, 2868.4004f, 58.4023f;
		case 7:
			return 1733.005f, 3850.126f, 33.874f;
		case 8:
			return 340.023f, 3565.621f, 32.491f;
		case 9:
			return -1858.733f, 4806.635f, 1.969f;
		case 10:
			return 490.588f, 5530.081f, 777.292f;
		case 11:
			return -2792.443f, 1432.48f, 99.968f;
		case 12:
			return -2999.09f, 769.195f, 26.167f;
		case 13:
			return -855.473f, 572.053f, 95.69f;
		case 14:
			return 1021.663f, 2910.82f, 39.645f;
		case 15:
			return -3078.123f, 3202.819f, 1.319f;
		case 16:
			return -1557.408f, 2581.642f, -0.078f;
		case 17:
			return 2578.658f, 5548.083f, 59.436f;
		case 18:
			return 2573.032f, 1250.679f, 42.545f;
		case 19:
			return -922.265f, 4583.207f, 230.673f;
		case 20:
			return 2820.144f, -759.318f, 1.471f;
		case 21:
			return 2385.41f, 3335.046f, 46.401f;
		case 22:
			return -1275.095f, 1895.234f, 101.362f;
		case 23:
			return 1545.851f, 1685.537f, 108.875f;
		case 24:
			return 727.608f, -235.347f, 65.276f;
		case 25:
			return -111.254f, -413.31f, 34.65f;
		case 26:
			return -1881.692f, -607.578f, 14.588f;
		case 27:
			return 1071.716f, -686.215f, 56.692f;
		case 28:
			return 2066.84f, 1940.29f, 81.791f;
		case 29:
			return 1614.594f, 6611.073f, 14.617f;
		case 30:
			return -1179.712f, 3854.412f, 488.493f;
		case 31:
			return 2940.191f, 2745.018f, 42.231f;
		case 32:
			return 1288.918f, -1059.638f, 38.242f;
		case 33:
			return -1678.225f, 357.721f, 83.711f;
		case 34:
			return -778.6017f, 117.243f, 55.456f;
		case 35:
			return -794.2935f, -727.5123f, 26.418f;
		case 36:
			return 330.147f, 440.902f, 144.37f;
		case 37:
			return -1314.857f, -424.843f, 34.462f;
		case 38:
			return 224.4638f, 49.089f, 83.1668f;
		case 39:
			return 1276.405f, -1720.52f, 53.795f;
		case 40:
			return -960.924f, -2034.23f, 8.524f;
		case 41:
			return -838.726f, -1216.943f, 5.902f;
		case 42:
			return 2029.5846f, 498.1133f, 163.1716f;
		case 43:
			return 2764.432f, -1600.286f, 0.865f;
		case 44:
			return 1498.68f, -2722.499f, 1.933f;
		case 45:
			return 217.1979f, -980.8727f, 28.7917f;
		case 46:
			return 686.64f, -1109.484f, 21.477f;
		case 47:
			return -220.848f, 1006.557f, 231.478f;
		case 48:
			return 493.725f, 1439.799f, 350.758f;
		case 49:
			return -995.688f, 6258.749f, 1.433f;
		case 50:
			return -2871.632f, 2605.2683f, -10.2517f;
		case 51:
			return 56.2666f, 7365.265f, -5.357f;
		case 52:
			return -2861.1204f, 3900.557f, -33.818f;
		case 53:
			return -1588.6914f, 5312.9844f, -5.1802f;
		case 54:
			return 475.3864f, 6946.059f, -7.333f;
		case 55:
			return 2453.2576f, 6692.051f, -14.2188f;
		case 56:
			return 4235.6206f, 4105.97f, -31.4225f;
		case 57:
			return -138.1969f, 4060.7036f, 26.1655f;
		case 58:
			return 3395.229f, 2252.5095f, -14.6511f;
		case 59:
			return 2946.109f, 812.0292f, -11.0387f;
		case 60:
			return 3194.6438f, -356.9405f, -33.105f;
		case 61:
			return -1745.945f, -1277.3726f, -19.8266f;
		case 62:
			return -3320.8806f, 1335.2634f, -17.2728f;
		case 63:
			return 2183.961f, -2714.1033f, -29.2357f;
		case 64:
			return -169.7448f, -2890.4065f, -24.8927f;
		case 65:
			return -164.6574f, -2309.2812f, -29.0637f;
		case 66:
			return 618.835f, -2192.5525f, -8.5744f;
		case 67:
			return 649.5286f, -3232.5737f, -16.81f;
		case 68:
			return -3078.0183f, -104.2799f, -18.3237f;
		case 69:
			return -2205.0056f, -681.4622f, -10.409f;
		case 70:
			return 825.2657f, -2790.5657f, -22.1959f;
		case 71:
			return 3415.271f, 5253.468f, -12.1134f;
		case 72:
			return 1219.1924f, 4119.4785f, 13.7925f;
		case 73:
			return -1014.5877f, -1707.1688f, -9.2745f;
		case 74:
			return 1674.9827f, 5141.8975f, 149.6046f;
		case 75:
			return -21.0273f, -1424.1678f, 29.7078f;
		default:
	}
	return 0f, 0f, 0f;
}

int func_350(int iParam0)//Position - 0x235B50
{
	switch (iParam0)
	{
		case 0:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 1:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 2:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 3:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 4:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 5:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 6:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 7:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 8:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_alien");
		case 9:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 10:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 11:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 12:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 13:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 14:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 15:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 16:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 17:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 18:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 19:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 20:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 21:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 22:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 23:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 24:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 25:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 26:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_imporage");
		case 27:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 28:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 29:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 30:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 31:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 32:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 33:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 34:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 35:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 36:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 37:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 38:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 39:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 40:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 41:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 42:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 43:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 44:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_prbubble");
		case 45:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 46:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 47:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 48:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 49:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 50:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 51:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 52:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 53:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 54:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 55:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 56:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 57:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 58:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 59:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 60:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 61:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_pogo");
		case 62:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 63:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 64:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 65:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 66:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 67:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 68:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 69:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 70:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 71:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 72:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 73:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 74:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 75:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 76:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 77:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 78:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 79:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrcomm");
		case 80:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 81:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 82:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 83:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 84:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 85:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 86:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 87:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 88:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 89:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 90:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 91:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 92:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 93:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 94:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 95:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 96:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 97:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_rsrgeneric");
		case 98:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_beast");
		case 99:
			return MISC::GET_HASH_KEY("vw_prop_vw_colle_sasquatch");
		default:
	}
	return joaat("bkr_prop_coke_boxeddoll");
}

int func_351(int iParam0)//Position - 0x242FF4
{
	if (__LIB_20__::func_555(iParam0))
	{
		if (*iParam0 >= 382 && *iParam0 <= 401)
		{
			return 23;
		}
		if (*iParam0 >= 402 && *iParam0 <= 431)
		{
			return 20;
		}
		if (*iParam0 >= 432 && *iParam0 <= 491)
		{
			return 15;
		}
		if (*iParam0 >= 492 && *iParam0 <= 521)
		{
			return 24;
		}
		if (*iParam0 >= 522 && *iParam0 <= 551)
		{
			return 21;
		}
		if (*iParam0 >= 552 && *iParam0 <= 584)
		{
			return 22;
		}
		if (*iParam0 >= 585 && *iParam0 <= 614)
		{
			return 16;
		}
		if (*iParam0 >= 615 && *iParam0 <= 644)
		{
			return 17;
		}
		if (*iParam0 >= 645 && *iParam0 <= 674)
		{
			return 25;
		}
	}
	return -1;
}

int func_352(int iParam0)//Position - 0x246FB2
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(*iParam0, false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iVar0))
			{
				iVar1 = ENTITY::GET_ENTITY_ATTACHED_TO(iVar0);
				if (ENTITY::DOES_ENTITY_EXIST(iVar1))
				{
					iVar2 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar1);
					if (ENTITY::DOES_ENTITY_EXIST(iVar2) && __LIB_15__::func_551(&iVar2))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_353(int iParam0)//Position - 0x247719
{
	if (__LIB_20__::func_557(iParam0))
	{
		if (*iParam0 >= 12 && *iParam0 <= 71)
		{
			return 17;
		}
		if (*iParam0 >= 72 && *iParam0 <= 91)
		{
			return 15;
		}
		if (*iParam0 >= 92 && *iParam0 <= 156)
		{
			return 14;
		}
		if (*iParam0 >= 157 && *iParam0 <= 256)
		{
			return 16;
		}
		if (*iParam0 >= 257 && *iParam0 <= 356)
		{
			return 19;
		}
		if (*iParam0 >= 357 && *iParam0 <= 376)
		{
			return 18;
		}
	}
	return -1;
}

int func_354(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x2491ED
{
	switch (iParam0)
	{
		case 409:
			*uParam1 = { -2267.0264f, 402.22568f, 183.66704f };
			*uParam2 = { -2257.7244f, 380.6196f, 267.60236f };
			*uParam3 = 20f;
			return 1;
		case 410:
			*uParam1 = { -757.32635f, -192.94748f, 43.208218f };
			*uParam2 = { -745.31683f, -213.00967f, 128.11855f };
			*uParam3 = 18f;
			return 1;
		case 413:
			*uParam1 = { -410.7763f, -319.03003f, 70.803314f };
			*uParam2 = { -380.264f, -340.9736f, 155.80331f };
			*uParam3 = 16f;
			return 1;
		case 421:
			*uParam1 = { 740.6537f, 1287.0071f, 353.29666f };
			*uParam2 = { 716.8173f, 1286.3627f, 439.296f };
			*uParam3 = 30f;
			return 1;
		case 430:
			*uParam1 = { -2595.0645f, 1927.0411f, 167.04633f };
			*uParam2 = { -2589.6262f, 1882.4998f, 250.49268f };
			*uParam3 = 22f;
			return 1;
		default:
	}
	return 0;
}

int func_355(int iParam0, var uParam1, var uParam2, var uParam3, bool bParam4)//Position - 0x24948A
{
	if (bParam4)
	{
		switch (iParam0)
		{
			case 675:
				*uParam1 = { 1297.2286f, 2854.6675f, 46.222424f };
				*uParam2 = { 1277.3792f, 2838.311f, 54.347424f };
				*uParam3 = 14.75f;
				return 1;
			case 676:
				*uParam1 = { 7.976243f, 2604.159f, 82.82843f };
				*uParam2 = { 30.077522f, 2618.2488f, 90.95343f };
				*uParam3 = 14.75f;
				return 1;
			case 677:
				*uParam1 = { 2777.815f, 3928.6045f, 42.660427f };
				*uParam2 = { 2759.6677f, 3910.7578f, 50.785427f };
				*uParam3 = 14.75f;
				return 1;
			case 678:
				*uParam1 = { 3419.642f, 5501.849f, 23.106426f };
				*uParam2 = { 3394.699f, 5507.827f, 31.231426f };
				*uParam3 = 14.75f;
				return 1;
			case 679:
				*uParam1 = { -9.453247f, 6836.3047f, 12.645426f };
				*uParam2 = { 14.476137f, 6827.5225f, 20.770426f };
				*uParam3 = 14.75f;
				return 1;
			case 680:
				*uParam1 = { -2232.3665f, 2430.4856f, 9.009426f };
				*uParam2 = { -2230.1323f, 2405.009f, 17.134426f };
				*uParam3 = 14.75f;
				return 1;
			case 681:
				*uParam1 = { -9.857053f, 3314.3345f, 38.459427f };
				*uParam2 = { -4.230778f, 3339.4604f, 46.584427f };
				*uParam3 = 14.75f;
				return 1;
			case 682:
				*uParam1 = { 2064.1958f, 1738.9713f, 101.34242f };
				*uParam2 = { 2082.4482f, 1757.6411f, 109.46743f };
				*uParam3 = 14.75f;
				return 1;
			case 683:
				*uParam1 = { 1881.3813f, 295.3014f, 161.13342f };
				*uParam2 = { 1867.7048f, 273.57565f, 169.25842f };
				*uParam3 = 14.75f;
				return 1;
			default:
		}
		return 0;
	}
	switch (iParam0)
	{
		case 675:
			*uParam1 = { 1273.6775f, 2835.7322f, 44.847424f };
			*uParam2 = { 1262.8866f, 2827.3574f, 55.80887f };
			*uParam3 = 17.125f;
			return 1;
		case 676:
			*uParam1 = { 32.718624f, 2620.0369f, 81.45343f };
			*uParam2 = { 43.606667f, 2626.6187f, 90.93901f };
			*uParam3 = 17.125f;
			return 1;
		case 677:
			*uParam1 = { 2757.3706f, 3908.7166f, 41.285427f };
			*uParam2 = { 2749.0642f, 3901.2454f, 51.935905f };
			*uParam3 = 17.125f;
			return 1;
		case 678:
			*uParam1 = { 3392.2385f, 5508.4644f, 21.731428f };
			*uParam2 = { 3380.6125f, 5511.0874f, 31.091427f };
			*uParam3 = 17.125f;
			return 1;
		case 679:
			*uParam1 = { 17.183691f, 6826.0957f, 11.270427f };
			*uParam2 = { 28.891647f, 6822.171f, 22.877625f };
			*uParam3 = 17.125f;
			return 1;
		case 680:
			*uParam1 = { -2229.6096f, 2401.256f, 7.634426f };
			*uParam2 = { -2229.282f, 2387.3977f, 21.650341f };
			*uParam3 = 17.125f;
			return 1;
		case 681:
			*uParam1 = { -3.066728f, 3343.304f, 37.084427f };
			*uParam2 = { 1.22503f, 3357.9656f, 47.80353f };
			*uParam3 = 17.125f;
			return 1;
		case 682:
			*uParam1 = { 2084.432f, 1759.6304f, 99.96742f };
			*uParam2 = { 2092.5952f, 1767.4336f, 110.46602f };
			*uParam3 = 17.125f;
			return 1;
		case 683:
			*uParam1 = { 1866.0016f, 271.21497f, 159.75842f };
			*uParam2 = { 1859.3286f, 260.6256f, 171.21489f };
			*uParam3 = 17.125f;
			return 1;
		default:
	}
	return 0;
}

Vector3 func_356(int iParam0)//Position - 0x24990C
{
	switch (iParam0)
	{
		case 747:
		case 748:
		case 749:
		case 750:
		case 751:
		case 752:
		case 753:
		case 754:
		case 882:
			if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				return 0.5f, 0.5f, 1f;
			}
			break;
		case 761:
		case 762:
			if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				return 3f, 3f, 4.5f;
			}
			break;
		case 763:
			return 100f, 100f, 200f;
			break;
		case 756:
			return 1f, 1f, 2f;
			break;
		case 771:
		case 772:
			return 1f, 1f, 2f;
			break;
		case 805:
		case 806:
		case 807:
		case 808:
		case 809:
		case 810:
		case 811:
		case 812:
		case 813:
		case 814:
			return 1f, 1f, 2f;
			break;
	}
	return 1f, 1f, 1f;
}

Vector3 func_357()//Position - 0x249A34
{
	if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		return 0.5f, 0.5f, 1f;
	}
	return 1f, 1f, 1f;
}

Vector3 func_358(int iParam0)//Position - 0x249A7C
{
	struct<3> Var0;
	Var0 = { 1f, 1f, 1f };
	return Var0;
}

Vector3 func_359(int iParam0)//Position - 0x249A8F
{
	struct<3> Var0;
	switch (iParam0)
	{
		case 8:
			Var0 = { 1f, 1f, 3f };
			break;
		case 14:
			Var0 = { 2.5f, 2.5f, 4f };
			break;
		case 18:
			Var0 = { 2f, 2f, 4f };
			break;
		case 15:
			Var0 = { 2.2f, 2.2f, 4f };
			break;
		case 17:
			Var0 = { 0.75f, 0.75f, 4f };
			break;
		case 19:
			Var0 = { 2f, 2f, 4f };
			break;
		case 16:
			Var0 = { 2f, 2f, 4f };
			break;
		default:
			Var0 = { 1f, 1f, 1f };
			break;
	}
	return Var0;
}

int func_360(bool bParam0)//Position - 0x24A500
{
	if (__LIB_3__::func_438(bParam0))
	{
		return 1;
	}
	return BitTest(Global_1892703[bParam0 /*599*/].f_1, 8);
}

int func_361(int iParam0)//Position - 0x24BD4D
{
	switch (iParam0)
	{
		case 36:
			return 1;
		case 37:
			return 2;
		case 38:
			return 3;
		case 39:
			return 4;
		case 40:
			return 5;
		case 41:
			return 6;
		case 42:
			return 7;
		case 43:
			return 8;
		case 44:
			return 9;
		case 45:
			return 10;
		default:
	}
	return 0;
}

int func_362(int iParam0)//Position - 0x24C402
{
	switch (iParam0)
	{
		case 46:
		case 47:
		case 48:
			return 1;
		default:
	}
	return 0;
}

int func_363(int iParam0)//Position - 0x24C428
{
	switch (iParam0)
	{
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
			return 1;
		default:
	}
	return 0;
}

bool func_364()//Position - 0x24C814
{
	return SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("gb_ie_delivery_cutscene")) > 0;
}

void func_365(int iParam0, var uParam1, var uParam2)//Position - 0x24DB65
{
	struct<4> Var0;
	Var0.f_0 = -1373106115;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = uParam1;
	Var0.f_3 = uParam2;
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 4, iParam0);
	}
}

void func_366(int iParam0)//Position - 0x24E562
{
	if (!__LIB_3__::func_967(iParam0))
	{
		return;
	}
	__LIB_12__::func_178(0, iParam0);
	__LIB_12__::func_178(1, iParam0);
	__LIB_12__::func_178(2, iParam0);
	__LIB_12__::func_178(3, iParam0);
	__LIB_12__::func_178(4, iParam0);
	__LIB_12__::func_178(10, iParam0);
	Global_1946250.f_2624[iParam0 /*3*/] = { 0f, 0f, 0f };
	Global_1946250.f_3102[iParam0] = 0f;
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_15 == iParam0)
	{
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_15 = -1;
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 2);
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 1);
	}
	if (BitTest(Global_1946250.f_1, 22))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_1), 22);
	}
	MISC::CLEAR_BIT(&(Global_1946250.f_6), 9);
}

bool func_367()//Position - 0x24EB58
{
	return BitTest(Global_1946250.f_2, 3);
}

bool func_368()//Position - 0x24EB68
{
	return BitTest(Global_1946250.f_2, 4);
}

bool func_369()//Position - 0x24EB78
{
	return BitTest(Global_1946250, 30);
}

bool func_370()//Position - 0x24EB87
{
	return BitTest(Global_1946250, 31);
}

float func_371(float fParam0)//Position - 0x24FDFF
{
	if (fParam0 > 180f)
	{
		return (fParam0 - 180f);
	}
	return (fParam0 + 180f);
}

bool func_372()//Position - 0x24FF24
{
	return BitTest(Global_1958711, 21);
}

int func_373(bool bParam0)//Position - 0x251C15
{
	int iVar0;
	iVar0 = bParam0;
	if (iVar0 > -1)
	{
		return Global_1946250.f_4596[iVar0 /*3*/].f_1 == MISC::GET_HASH_KEY(PLAYER::GET_PLAYER_NAME(bParam0));
	}
	return 0;
}

int func_374(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5)//Position - 0x2522DE
{
	switch (iParam0)
	{
		case 21:
			switch (iParam1)
			{
				case 0:
					*uParam2 = { 998.02893f, -3202.4429f, -38.86309f };
					*uParam3 = { 998.0486f, -3196.208f, -35.64316f };
					*uParam4 = 3.5f;
					*uParam5 = 0f;
					return 1;
					break;
			}
			break;
	}
	return 0;
}

int func_375(struct<3> Param0, float fParam1, var uParam2)//Position - 0x252380
{
	struct<3> Var0;
	int iVar1;
	Var0 = { Param0 + Vector(uParam2, 0f, 0f) };
	iVar1 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Param0, Var0, fParam1, 7, 0, 0);
	if (iVar1 != 0)
	{
	}
	return iVar1;
}

int func_376(struct<3> Param0, float fParam1, float fParam2)//Position - 0x2523B3
{
	int iVar0;
	bool bVar1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	float fVar5;
	Var4 = { Param0 };
	Var4.f_2 = 0f;
	fVar5 = (fParam1 * fParam1);
	iVar0 = 0;
	while (iVar0 < __LIB_2__::func_10())
	{
		bVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (__LIB_1__::func_693(bVar1, 1, 1))
		{
			Var2 = { __LIB_1__::func_694(bVar1) };
			Var3 = { Var2 };
			Var3.f_2 = 0f;
			if (SYSTEM::VDIST2(Var3, Var4) < fVar5)
			{
				if (Var2.f_2 >= (Param0.f_2 - fParam1) && Var2.f_2 < ((Param0.f_2 + fParam2) + fParam1))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

Vector3 func_377(var uParam0)//Position - 0x25267B
{
	return __LIB_3__::func_623(uParam0->f_7);
}

void func_378(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0x25287C
{
	var uVar0;
	var uVar1;
	uVar0 = (*uParam0)[iParam2];
	(*uParam0)[iParam2] = (*uParam0)[iParam3];
	(*uParam0)[iParam3] = uVar0;
	uVar1 = (*uParam1)[iParam2];
	(*uParam1)[iParam2] = (*uParam1)[iParam3];
	(*uParam1)[iParam3] = uVar1;
}

struct<24> func_379(int iParam0)//Position - 0x2528BC
{
	struct<24> Var0;
	Var0.f_10 = 8;
	Var0.f_20 = 1069547520;
	switch (iParam0)
	{
		case 0:
			Var0 = { 51.7513f, 6339.846f, 31.2258f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.81f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.71f;
			Var0.f_7 = 29.16f;
			Var0.f_8 = 13;
			Var0.f_9 = 9;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 11);
			MISC::SET_BIT(&(Var0.f_10[3]), 13);
			MISC::SET_BIT(&(Var0.f_10[3]), 15);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 2:
			Var0 = { 418.4608f, 6520.72f, 27.7201f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.81f;
			Var0.f_5 = 0.13f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 263.52f;
			Var0.f_8 = 15;
			Var0.f_9 = 7;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 13);
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 11);
			MISC::SET_BIT(&(Var0.f_10[2]), 13);
			MISC::SET_BIT(&(Var0.f_10[2]), 14);
			MISC::SET_BIT(&(Var0.f_10[2]), 15);
			MISC::SET_BIT(&(Var0.f_10[2]), 16);
			MISC::SET_BIT(&(Var0.f_10[2]), 26);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			MISC::SET_BIT(&(Var0.f_10[2]), 28);
			MISC::SET_BIT(&(Var0.f_10[2]), 30);
			MISC::SET_BIT(&(Var0.f_10[2]), 31);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 1);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 1:
			Var0 = { 52.7514f, 6487.154f, 31.4267f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.42f;
			Var0.f_5 = 0.13f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 314.9f;
			Var0.f_8 = 31;
			Var0.f_9 = 2;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			MISC::SET_BIT(&(Var0.f_10[0]), 20);
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 4:
			Var0 = { -408.6213f, 6168.991f, 31.4782f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.58f;
			Var0.f_5 = 0.13f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 314.9f;
			Var0.f_8 = 19;
			Var0.f_9 = 5;
			Var0.f_19 = 8;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 8);
			MISC::SET_BIT(&(Var0.f_10[2]), 10);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			MISC::SET_BIT(&(Var0.f_10[2]), 29);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 3:
			Var0 = { -160.5925f, 6333.8f, 31.5808f };
			Var0.f_3 = 1.47f;
			Var0.f_4 = 16.07f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 316.08f;
			Var0.f_8 = 27;
			Var0.f_9 = 2;
			Var0.f_19 = 4;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 22);
			MISC::SET_BIT(&(Var0.f_10[0]), 24);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 3);
			MISC::SET_BIT(&(Var0.f_10[1]), 5);
			MISC::SET_BIT(&(Var0.f_10[1]), 7);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 9);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 11);
			MISC::SET_BIT(&(Var0.f_10[1]), 13);
			MISC::SET_BIT(&(Var0.f_10[1]), 15);
			MISC::SET_BIT(&(Var0.f_10[1]), 17);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 5:
			Var0 = { 1443.526f, -1652.72f, 66.0608f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.83f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 20.88f;
			Var0.f_8 = 18;
			Var0.f_9 = 6;
			Var0.f_19 = 11;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 0);
			MISC::SET_BIT(&(Var0.f_10[0]), 1);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 16);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 20);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 4);
			MISC::SET_BIT(&(Var0.f_10[2]), 6);
			MISC::SET_BIT(&(Var0.f_10[2]), 15);
			MISC::SET_BIT(&(Var0.f_10[2]), 17);
			MISC::SET_BIT(&(Var0.f_10[2]), 19);
			MISC::SET_BIT(&(Var0.f_10[2]), 21);
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 31);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 1);
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 7);
			MISC::SET_BIT(&(Var0.f_10[3]), 9);
			MISC::SET_BIT(&(Var0.f_10[3]), 11);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 7:
			Var0 = { 101.7318f, 174.0827f, 104.5913f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.81f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 1f;
			Var0.f_7 = 160.92f;
			Var0.f_8 = 19;
			Var0.f_9 = 7;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 3);
			MISC::SET_BIT(&(Var0.f_10[0]), 4);
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 7);
			MISC::SET_BIT(&(Var0.f_10[0]), 8);
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 11);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 16);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 31);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 0);
			MISC::SET_BIT(&(Var0.f_10[3]), 1);
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 7);
			MISC::SET_BIT(&(Var0.f_10[3]), 9);
			MISC::SET_BIT(&(Var0.f_10[3]), 15);
			MISC::SET_BIT(&(Var0.f_10[3]), 17);
			MISC::SET_BIT(&(Var0.f_10[3]), 19);
			Var0.f_10[4] = 0;
			MISC::SET_BIT(&(Var0.f_10[4]), 2);
			MISC::SET_BIT(&(Var0.f_10[4]), 4);
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 6:
			Var0 = { -1461.5582f, -382.7768f, 38.7483f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.69f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 225.72f;
			Var0.f_8 = 20;
			Var0.f_9 = 5;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 16);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 26);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 11);
			MISC::SET_BIT(&(Var0.f_10[2]), 13);
			MISC::SET_BIT(&(Var0.f_10[2]), 15);
			MISC::SET_BIT(&(Var0.f_10[2]), 16);
			MISC::SET_BIT(&(Var0.f_10[2]), 17);
			MISC::SET_BIT(&(Var0.f_10[2]), 19);
			MISC::SET_BIT(&(Var0.f_10[2]), 21);
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			MISC::SET_BIT(&(Var0.f_10[2]), 29);
			MISC::SET_BIT(&(Var0.f_10[2]), 31);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 1);
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 9:
			Var0 = { -1176.414f, -1382.795f, 4.8572f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.83f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 35.64f;
			Var0.f_8 = 11;
			Var0.f_9 = 8;
			Var0.f_19 = 7;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 20);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 30);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 0);
			MISC::SET_BIT(&(Var0.f_10[2]), 2);
			MISC::SET_BIT(&(Var0.f_10[2]), 3);
			MISC::SET_BIT(&(Var0.f_10[2]), 5);
			MISC::SET_BIT(&(Var0.f_10[2]), 7);
			MISC::SET_BIT(&(Var0.f_10[2]), 9);
			MISC::SET_BIT(&(Var0.f_10[2]), 11);
			MISC::SET_BIT(&(Var0.f_10[2]), 12);
			MISC::SET_BIT(&(Var0.f_10[2]), 13);
			MISC::SET_BIT(&(Var0.f_10[2]), 14);
			MISC::SET_BIT(&(Var0.f_10[2]), 15);
			MISC::SET_BIT(&(Var0.f_10[2]), 16);
			MISC::SET_BIT(&(Var0.f_10[2]), 18);
			MISC::SET_BIT(&(Var0.f_10[2]), 20);
			MISC::SET_BIT(&(Var0.f_10[2]), 22);
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 8:
			Var0 = { 300.613f, -759.0207f, 29.3106f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 2.41f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 252.36f;
			Var0.f_8 = 25;
			Var0.f_9 = 2;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 2);
			MISC::SET_BIT(&(Var0.f_10[0]), 4);
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 7);
			MISC::SET_BIT(&(Var0.f_10[0]), 8);
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 11);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 13);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 15);
			MISC::SET_BIT(&(Var0.f_10[0]), 17);
			MISC::SET_BIT(&(Var0.f_10[0]), 28);
			MISC::SET_BIT(&(Var0.f_10[0]), 30);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 0);
			MISC::SET_BIT(&(Var0.f_10[1]), 11);
			MISC::SET_BIT(&(Var0.f_10[1]), 13);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 10:
			Var0 = { 202.4223f, 2460.433f, 55.7011f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.8f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 200.16f;
			Var0.f_8 = 18;
			Var0.f_9 = 6;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 3);
			MISC::SET_BIT(&(Var0.f_10[1]), 19);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			MISC::SET_BIT(&(Var0.f_10[1]), 29);
			MISC::SET_BIT(&(Var0.f_10[1]), 31);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 1);
			MISC::SET_BIT(&(Var0.f_10[2]), 3);
			MISC::SET_BIT(&(Var0.f_10[2]), 5);
			MISC::SET_BIT(&(Var0.f_10[2]), 7);
			MISC::SET_BIT(&(Var0.f_10[2]), 8);
			MISC::SET_BIT(&(Var0.f_10[2]), 9);
			MISC::SET_BIT(&(Var0.f_10[2]), 10);
			MISC::SET_BIT(&(Var0.f_10[2]), 11);
			MISC::SET_BIT(&(Var0.f_10[2]), 12);
			MISC::SET_BIT(&(Var0.f_10[2]), 13);
			MISC::SET_BIT(&(Var0.f_10[2]), 14);
			MISC::SET_BIT(&(Var0.f_10[2]), 15);
			MISC::SET_BIT(&(Var0.f_10[2]), 16);
			MISC::SET_BIT(&(Var0.f_10[2]), 17);
			MISC::SET_BIT(&(Var0.f_10[2]), 18);
			MISC::SET_BIT(&(Var0.f_10[2]), 19);
			MISC::SET_BIT(&(Var0.f_10[2]), 21);
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 26);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			MISC::SET_BIT(&(Var0.f_10[2]), 28);
			MISC::SET_BIT(&(Var0.f_10[2]), 29);
			MISC::SET_BIT(&(Var0.f_10[2]), 30);
			MISC::SET_BIT(&(Var0.f_10[2]), 31);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 0);
			MISC::SET_BIT(&(Var0.f_10[3]), 1);
			MISC::SET_BIT(&(Var0.f_10[3]), 2);
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			MISC::SET_BIT(&(Var0.f_10[3]), 4);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 6);
			MISC::SET_BIT(&(Var0.f_10[3]), 7);
			MISC::SET_BIT(&(Var0.f_10[3]), 8);
			MISC::SET_BIT(&(Var0.f_10[3]), 9);
			MISC::SET_BIT(&(Var0.f_10[3]), 11);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 12:
			Var0 = { 2846.742f, 4449.625f, 48.5186f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.56f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 106.92f;
			Var0.f_8 = 19;
			Var0.f_9 = 5;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			MISC::SET_BIT(&(Var0.f_10[2]), 27);
			MISC::SET_BIT(&(Var0.f_10[2]), 29);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 11:
			Var0 = { 387.8527f, 3586.863f, 33.2922f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.56f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 349.91f;
			Var0.f_8 = 19;
			Var0.f_9 = 5;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 17);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 14:
			Var0 = { 644.2907f, 2783.898f, 41.9584f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.62f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 183.96f;
			Var0.f_8 = 13;
			Var0.f_9 = 8;
			Var0.f_19 = 9;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 30);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 0);
			MISC::SET_BIT(&(Var0.f_10[3]), 2);
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			MISC::SET_BIT(&(Var0.f_10[3]), 4);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 6);
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 13:
			Var0 = { 1658.298f, 4851.931f, 41.9609f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 2.85f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 277.2f;
			Var0.f_8 = 27;
			Var0.f_9 = 2;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 24);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 13);
			MISC::SET_BIT(&(Var0.f_10[1]), 14);
			MISC::SET_BIT(&(Var0.f_10[1]), 15);
			MISC::SET_BIT(&(Var0.f_10[1]), 16);
			MISC::SET_BIT(&(Var0.f_10[1]), 17);
			MISC::SET_BIT(&(Var0.f_10[1]), 18);
			MISC::SET_BIT(&(Var0.f_10[1]), 19);
			MISC::SET_BIT(&(Var0.f_10[1]), 20);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 15:
			Var0 = { 1180.122f, -3116.589f, 6.028f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.41f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 90f;
			Var0.f_8 = 19;
			Var0.f_9 = 5;
			Var0.f_19 = 3;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 4);
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 8);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 29);
			MISC::SET_BIT(&(Var0.f_10[0]), 31);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 3);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 14);
			MISC::SET_BIT(&(Var0.f_10[1]), 16);
			MISC::SET_BIT(&(Var0.f_10[1]), 18);
			MISC::SET_BIT(&(Var0.f_10[1]), 20);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 11);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 17:
			Var0 = { 137.9712f, -2473.538f, 6f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.61f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 235.44f;
			Var0.f_8 = 15;
			Var0.f_9 = 9;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 8);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 21);
			MISC::SET_BIT(&(Var0.f_10[0]), 23);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 28);
			MISC::SET_BIT(&(Var0.f_10[0]), 29);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 7);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 9);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 11);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 17);
			MISC::SET_BIT(&(Var0.f_10[1]), 19);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			MISC::SET_BIT(&(Var0.f_10[1]), 22);
			MISC::SET_BIT(&(Var0.f_10[1]), 23);
			MISC::SET_BIT(&(Var0.f_10[1]), 24);
			MISC::SET_BIT(&(Var0.f_10[1]), 25);
			MISC::SET_BIT(&(Var0.f_10[1]), 26);
			MISC::SET_BIT(&(Var0.f_10[1]), 27);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 0);
			MISC::SET_BIT(&(Var0.f_10[2]), 2);
			MISC::SET_BIT(&(Var0.f_10[2]), 4);
			MISC::SET_BIT(&(Var0.f_10[2]), 5);
			MISC::SET_BIT(&(Var0.f_10[2]), 6);
			MISC::SET_BIT(&(Var0.f_10[2]), 7);
			MISC::SET_BIT(&(Var0.f_10[2]), 8);
			MISC::SET_BIT(&(Var0.f_10[2]), 9);
			MISC::SET_BIT(&(Var0.f_10[2]), 10);
			MISC::SET_BIT(&(Var0.f_10[2]), 18);
			MISC::SET_BIT(&(Var0.f_10[2]), 19);
			MISC::SET_BIT(&(Var0.f_10[2]), 20);
			MISC::SET_BIT(&(Var0.f_10[2]), 21);
			MISC::SET_BIT(&(Var0.f_10[2]), 22);
			MISC::SET_BIT(&(Var0.f_10[2]), 23);
			MISC::SET_BIT(&(Var0.f_10[2]), 24);
			MISC::SET_BIT(&(Var0.f_10[2]), 25);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 0);
			MISC::SET_BIT(&(Var0.f_10[3]), 2);
			MISC::SET_BIT(&(Var0.f_10[3]), 4);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 6);
			MISC::SET_BIT(&(Var0.f_10[3]), 7);
			MISC::SET_BIT(&(Var0.f_10[3]), 8);
			MISC::SET_BIT(&(Var0.f_10[3]), 9);
			MISC::SET_BIT(&(Var0.f_10[3]), 10);
			MISC::SET_BIT(&(Var0.f_10[3]), 11);
			MISC::SET_BIT(&(Var0.f_10[3]), 13);
			MISC::SET_BIT(&(Var0.f_10[3]), 15);
			MISC::SET_BIT(&(Var0.f_10[3]), 17);
			MISC::SET_BIT(&(Var0.f_10[3]), 19);
			MISC::SET_BIT(&(Var0.f_10[3]), 20);
			MISC::SET_BIT(&(Var0.f_10[3]), 21);
			MISC::SET_BIT(&(Var0.f_10[3]), 22);
			MISC::SET_BIT(&(Var0.f_10[3]), 23);
			MISC::SET_BIT(&(Var0.f_10[3]), 24);
			MISC::SET_BIT(&(Var0.f_10[3]), 26);
			MISC::SET_BIT(&(Var0.f_10[3]), 28);
			MISC::SET_BIT(&(Var0.f_10[3]), 30);
			Var0.f_10[4] = 0;
			MISC::SET_BIT(&(Var0.f_10[4]), 0);
			MISC::SET_BIT(&(Var0.f_10[4]), 1);
			MISC::SET_BIT(&(Var0.f_10[4]), 2);
			MISC::SET_BIT(&(Var0.f_10[4]), 3);
			MISC::SET_BIT(&(Var0.f_10[4]), 4);
			MISC::SET_BIT(&(Var0.f_10[4]), 5);
			MISC::SET_BIT(&(Var0.f_10[4]), 6);
			MISC::SET_BIT(&(Var0.f_10[4]), 7);
			MISC::SET_BIT(&(Var0.f_10[4]), 9);
			MISC::SET_BIT(&(Var0.f_10[4]), 11);
			MISC::SET_BIT(&(Var0.f_10[4]), 13);
			MISC::SET_BIT(&(Var0.f_10[4]), 14);
			MISC::SET_BIT(&(Var0.f_10[4]), 15);
			MISC::SET_BIT(&(Var0.f_10[4]), 16);
			MISC::SET_BIT(&(Var0.f_10[4]), 17);
			MISC::SET_BIT(&(Var0.f_10[4]), 18);
			MISC::SET_BIT(&(Var0.f_10[4]), 19);
			MISC::SET_BIT(&(Var0.f_10[4]), 20);
			MISC::SET_BIT(&(Var0.f_10[4]), 21);
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 16:
			Var0 = { -254.9883f, -2586.877f, 6.0006f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.61f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 90f;
			Var0.f_8 = 15;
			Var0.f_9 = 9;
			Var0.f_19 = 6;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 8);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 29);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			MISC::SET_BIT(&(Var0.f_10[1]), 23);
			MISC::SET_BIT(&(Var0.f_10[1]), 25);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 19:
			Var0 = { 669.6413f, -2667.506f, 6.0812f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.55f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 90f;
			Var0.f_8 = 15;
			Var0.f_9 = 9;
			Var0.f_19 = 0;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 7);
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 11);
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 18:
			Var0 = { -334.9665f, -2777.501f, 5.0002f };
			Var0.f_3 = 1.41f;
			Var0.f_4 = 1.55f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.8f;
			Var0.f_7 = 90f;
			Var0.f_8 = 15;
			Var0.f_9 = 9;
			Var0.f_19 = 2;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 27);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 10);
			Var0.f_10[3] = 0;
			MISC::SET_BIT(&(Var0.f_10[3]), 3);
			MISC::SET_BIT(&(Var0.f_10[3]), 5);
			MISC::SET_BIT(&(Var0.f_10[3]), 18);
			MISC::SET_BIT(&(Var0.f_10[3]), 20);
			MISC::SET_BIT(&(Var0.f_10[3]), 22);
			Var0.f_10[4] = 0;
			MISC::SET_BIT(&(Var0.f_10[4]), 3);
			MISC::SET_BIT(&(Var0.f_10[4]), 5);
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 20:
			Var0 = { 1088.728f, -3188.18f, -38.9935f };
			Var0.f_3 = 1.35f;
			Var0.f_4 = 1.45f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.64f;
			Var0.f_7 = 180f;
			Var0.f_8 = 7;
			Var0.f_9 = 8;
			Var0.f_19 = 0;
			Var0.f_20 = 1f;
			Var0.f_21 = 1;
			Var0.f_22 = 8.82f;
			Var0.f_23 = 0.58f;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 2);
			MISC::SET_BIT(&(Var0.f_10[0]), 3);
			MISC::SET_BIT(&(Var0.f_10[0]), 4);
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 13);
			MISC::SET_BIT(&(Var0.f_10[0]), 17);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			MISC::SET_BIT(&(Var0.f_10[0]), 19);
			MISC::SET_BIT(&(Var0.f_10[0]), 20);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 31);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			MISC::SET_BIT(&(Var0.f_10[1]), 5);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 7);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 9);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 13);
			MISC::SET_BIT(&(Var0.f_10[1]), 14);
			MISC::SET_BIT(&(Var0.f_10[1]), 15);
			MISC::SET_BIT(&(Var0.f_10[1]), 16);
			MISC::SET_BIT(&(Var0.f_10[1]), 20);
			MISC::SET_BIT(&(Var0.f_10[1]), 22);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 21:
			Var0 = { 997.294f, -3197.584f, -36.3937f };
			Var0.f_3 = 2.01f;
			Var0.f_4 = 0.58f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.6f;
			Var0.f_7 = 270f;
			Var0.f_8 = 6;
			Var0.f_9 = 12;
			Var0.f_19 = 7;
			Var0.f_20 = 1f;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 0);
			MISC::SET_BIT(&(Var0.f_10[0]), 4);
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 10);
			MISC::SET_BIT(&(Var0.f_10[0]), 11);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 16);
			MISC::SET_BIT(&(Var0.f_10[0]), 17);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			MISC::SET_BIT(&(Var0.f_10[0]), 19);
			MISC::SET_BIT(&(Var0.f_10[0]), 20);
			MISC::SET_BIT(&(Var0.f_10[0]), 22);
			MISC::SET_BIT(&(Var0.f_10[0]), 23);
			MISC::SET_BIT(&(Var0.f_10[0]), 24);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 28);
			MISC::SET_BIT(&(Var0.f_10[0]), 29);
			MISC::SET_BIT(&(Var0.f_10[0]), 30);
			MISC::SET_BIT(&(Var0.f_10[0]), 31);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 0);
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 3);
			MISC::SET_BIT(&(Var0.f_10[1]), 4);
			MISC::SET_BIT(&(Var0.f_10[1]), 5);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 7);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 9);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 14);
			MISC::SET_BIT(&(Var0.f_10[1]), 15);
			MISC::SET_BIT(&(Var0.f_10[1]), 20);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			MISC::SET_BIT(&(Var0.f_10[1]), 26);
			MISC::SET_BIT(&(Var0.f_10[1]), 27);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 0);
			MISC::SET_BIT(&(Var0.f_10[2]), 1);
			MISC::SET_BIT(&(Var0.f_10[2]), 4);
			MISC::SET_BIT(&(Var0.f_10[2]), 6);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 22:
			Var0 = { 1062.991f, -3182.502f, -39.1633f };
			Var0.f_3 = 1.35f;
			Var0.f_4 = 1.35f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.64f;
			Var0.f_7 = 180f;
			Var0.f_8 = 4;
			Var0.f_9 = 8;
			Var0.f_19 = 0;
			Var0.f_20 = 1f;
			Var0.f_21 = 1;
			Var0.f_22 = 10f;
			Var0.f_23 = 0.57f;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 7);
			MISC::SET_BIT(&(Var0.f_10[0]), 14);
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 24:
			Var0 = { 1138.451f, -3197.307f, -39.6657f };
			Var0.f_3 = 1.2f;
			Var0.f_4 = 1.2f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.64f;
			Var0.f_7 = 90f;
			Var0.f_8 = 4;
			Var0.f_9 = 10;
			Var0.f_19 = 0;
			Var0.f_20 = 1f;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 1);
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 7);
			MISC::SET_BIT(&(Var0.f_10[0]), 9);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 17);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			MISC::SET_BIT(&(Var0.f_10[0]), 21);
			MISC::SET_BIT(&(Var0.f_10[0]), 22);
			MISC::SET_BIT(&(Var0.f_10[0]), 24);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			MISC::SET_BIT(&(Var0.f_10[0]), 28);
			MISC::SET_BIT(&(Var0.f_10[0]), 30);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 0);
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 5);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 23:
			Var0 = { 1172.925f, -3196.603f, -39.008f };
			Var0.f_3 = 1.2f;
			Var0.f_4 = 1.2f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 0.64f;
			Var0.f_7 = 90f;
			Var0.f_8 = 7;
			Var0.f_9 = 10;
			Var0.f_19 = 0;
			Var0.f_20 = 1f;
			Var0.f_21 = 1;
			Var0.f_22 = 10.63f;
			Var0.f_23 = 0.5f;
			Var0.f_10[0] = 0;
			MISC::SET_BIT(&(Var0.f_10[0]), 5);
			MISC::SET_BIT(&(Var0.f_10[0]), 6);
			MISC::SET_BIT(&(Var0.f_10[0]), 12);
			MISC::SET_BIT(&(Var0.f_10[0]), 13);
			MISC::SET_BIT(&(Var0.f_10[0]), 18);
			MISC::SET_BIT(&(Var0.f_10[0]), 19);
			MISC::SET_BIT(&(Var0.f_10[0]), 20);
			MISC::SET_BIT(&(Var0.f_10[0]), 21);
			MISC::SET_BIT(&(Var0.f_10[0]), 22);
			MISC::SET_BIT(&(Var0.f_10[0]), 25);
			MISC::SET_BIT(&(Var0.f_10[0]), 26);
			MISC::SET_BIT(&(Var0.f_10[0]), 27);
			MISC::SET_BIT(&(Var0.f_10[0]), 28);
			MISC::SET_BIT(&(Var0.f_10[0]), 29);
			MISC::SET_BIT(&(Var0.f_10[0]), 30);
			Var0.f_10[1] = 0;
			MISC::SET_BIT(&(Var0.f_10[1]), 0);
			MISC::SET_BIT(&(Var0.f_10[1]), 1);
			MISC::SET_BIT(&(Var0.f_10[1]), 2);
			MISC::SET_BIT(&(Var0.f_10[1]), 6);
			MISC::SET_BIT(&(Var0.f_10[1]), 8);
			MISC::SET_BIT(&(Var0.f_10[1]), 9);
			MISC::SET_BIT(&(Var0.f_10[1]), 10);
			MISC::SET_BIT(&(Var0.f_10[1]), 12);
			MISC::SET_BIT(&(Var0.f_10[1]), 15);
			MISC::SET_BIT(&(Var0.f_10[1]), 16);
			MISC::SET_BIT(&(Var0.f_10[1]), 17);
			MISC::SET_BIT(&(Var0.f_10[1]), 18);
			MISC::SET_BIT(&(Var0.f_10[1]), 19);
			MISC::SET_BIT(&(Var0.f_10[1]), 21);
			MISC::SET_BIT(&(Var0.f_10[1]), 23);
			MISC::SET_BIT(&(Var0.f_10[1]), 24);
			MISC::SET_BIT(&(Var0.f_10[1]), 26);
			MISC::SET_BIT(&(Var0.f_10[1]), 30);
			Var0.f_10[2] = 0;
			MISC::SET_BIT(&(Var0.f_10[2]), 5);
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
		case 25:
			Var0 = { 972f, -2989f, -39.6471f };
			Var0.f_3 = 2f;
			Var0.f_4 = 2f;
			Var0.f_5 = 0.1f;
			Var0.f_6 = 1f;
			Var0.f_7 = 178.56f;
			Var0.f_8 = 4;
			Var0.f_9 = 4;
			Var0.f_19 = 0;
			Var0.f_20 = 1.5f;
			Var0.f_10[0] = 0;
			Var0.f_10[1] = 0;
			Var0.f_10[2] = 0;
			Var0.f_10[3] = 0;
			Var0.f_10[4] = 0;
			Var0.f_10[5] = 0;
			Var0.f_10[6] = 0;
			Var0.f_10[7] = 0;
			break;
	}
	return Var0;
}

int func_380(int iParam0)//Position - 0x25657B
{
	int iVar0;
	var uVar1;
	if (__LIB_3__::func_967(iParam0))
	{
		__LIB_3__::func_966(iParam0, &iVar0, &uVar1);
		return BitTest(Global_1946250.f_3554[iVar0], uVar1);
	}
	return 0;
}

void func_381(var uParam0)//Position - 0x257051
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_7 = uParam0;
}

void func_382(bool bParam0)//Position - 0x257EDA
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_2, 7))
		{
			MISC::SET_BIT(&(Global_1946250.f_2), 7);
		}
	}
	else if (BitTest(Global_1946250.f_2, 7))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_2), 7);
	}
}

bool func_383()//Position - 0x257F17
{
	return BitTest(Global_1946250.f_2, 7);
}

void func_384(bool bParam0)//Position - 0x25811A
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 23))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 23);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 23))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 23);
	}
}

void func_385(bool bParam0)//Position - 0x258272
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 30))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 30);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 30))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 30);
	}
}

void func_386(bool bParam0)//Position - 0x258343
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 25))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 25);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 25))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 25);
	}
}

bool func_387()//Position - 0x2589E4
{
	return BitTest(Global_1946250, 16);
}

int func_388(int iParam0)//Position - 0x2589F3
{
	if (Global_1946250.f_4698 == iParam0 && iParam0 != -1)
	{
		return 1;
	}
	return 0;
}

void func_389(var uParam0)//Position - 0x258D5D
{
	Global_1946250.f_3371 = uParam0;
}

bool func_390()//Position - 0x259663
{
	bool bVar0;
	bVar0 = true;
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		bVar0 = false;
	}
	if (__LIB_0__::func_983())
	{
		bVar0 = false;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() && !__LIB_3__::func_599())
	{
		bVar0 = false;
	}
	if (__LIB_0__::func_719())
	{
		bVar0 = false;
	}
	if (((!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()) && !BitTest(Global_1946250, 7)) && !__LIB_3__::func_599()) && !Global_2667225.f_2680)
	{
		if (!(Global_1946250.f_3615 != -1 && CAM::IS_SCREEN_FADED_OUT()))
		{
			if (!BitTest(Global_1946250, 21))
			{
				bVar0 = false;
			}
		}
	}
	if (!__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1) && !Global_2667225.f_2680)
	{
		bVar0 = false;
	}
	if (__LIB_0__::func_833())
	{
		if (BitTest(Global_1946250.f_2, 31) || Global_1946233)
		{
		}
		else
		{
			bVar0 = false;
		}
	}
	if (!__LIB_3__::func_967(Global_1946250.f_3606))
	{
		bVar0 = false;
	}
	if (bVar0)
	{
		if (BitTest(Global_1946250, 21))
		{
			MISC::CLEAR_BIT(&Global_1946250, 21);
		}
	}
	return bVar0;
}

bool func_391(var uParam0)//Position - 0x25A5F8
{
	return BitTest(uParam0->f_3, 5);
}

int func_392(int iParam0, int iParam1)//Position - 0x25AF6A
{
	switch (iParam0)
	{
		case 0:
			return Global_2724114[iParam1 /*4*/].f_3;
			break;
		case 1:
			return Global_2724155[iParam1 /*4*/].f_3;
			break;
		case 2:
			return Global_2724308[iParam1 /*4*/].f_3;
			break;
		case 3:
			return Global_2724557[iParam1 /*4*/].f_3;
			break;
	}
	return 123;
}

int func_393(int iParam0)//Position - 0x25B98D
{
	switch (iParam0)
	{
		case joaat("WEAPON_PETROLCAN"):
			return joaat("WP_WT_PETROL_t5_v1");
		case joaat("WEAPON_KNIFE"):
			return joaat("WP_WT_KNIFE_t1_v1");
		case joaat("WEAPON_NIGHTSTICK"):
			return joaat("WP_WT_NGTSTK_t1_v1");
		case joaat("WEAPON_HAMMER"):
			return joaat("WP_WT_HAMMER_t1_v1");
		case joaat("WEAPON_BAT"):
			return -1;
		case joaat("WEAPON_CROWBAR"):
			return -1;
		case joaat("WEAPON_GOLFCLUB"):
			return -1;
		case joaat("WEAPON_BOTTLE"):
			return joaat("WP_WT_BOTTLE_t1_v1");
		case joaat("WEAPON_DAGGER"):
			return joaat("WP_WT_DAGGER_t1_v1");
		case joaat("WEAPON_GRENADE"):
			return joaat("WP_WT_GNADE_t2_v2");
		case joaat("WEAPON_MOLOTOV"):
			return -1;
		case joaat("WEAPON_STICKYBOMB"):
			return joaat("WP_WT_GNADE_STK_t2_v2");
		case joaat("WEAPON_SMOKEGRENADE"):
			return joaat("WP_WT_GNADE_SMK_t2_v2");
		case joaat("WEAPON_PROXMINE"):
			return joaat("WP_WT_PRXMINE_t2_v2");
		case joaat("WEAPON_COMBATPISTOL"):
			return joaat("WP_WT_PIST_CBT_t0_v1");
		case joaat("WEAPON_MICROSMG"):
			return joaat("WP_WT_SMG_MCR_t0_v1");
		case joaat("WEAPON_ASSAULTRIFLE"):
			return joaat("WP_WT_RIFLE_ASL_t0_v1");
		case joaat("WEAPON_PUMPSHOTGUN"):
			return joaat("WP_WT_SG_PMP_t0_v1");
		case joaat("WEAPON_SNIPERRIFLE"):
			return joaat("WP_WT_SNIP_RIF_t0_v1");
		default:
	}
	return -1;
}

void func_394(int iParam0, int iParam1, bool bParam2)//Position - 0x25BB3A
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam1 / 32);
	iVar1 = (iParam1 % 32);
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_777[iVar0]), iVar1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_777[iVar0]), iVar1);
	}
}

void func_395(int iParam0)//Position - 0x25BB84
{
	if (iParam0 < 0 || iParam0 >= Global_2724923)
	{
		return;
	}
	if (OBJECT::DOES_PICKUP_EXIST(Global_2724923[iParam0]))
	{
		OBJECT::REMOVE_PICKUP(Global_2724923[iParam0]);
	}
	Global_2724923[iParam0] = 0;
	if (HUD::DOES_BLIP_EXIST(Global_2725112[iParam0]))
	{
		HUD::REMOVE_BLIP(&(Global_2725112[iParam0]));
	}
	Global_2725112[iParam0] = 0;
}

bool func_396()//Position - 0x25C27B
{
	return Global_1964883;
}

bool func_397()//Position - 0x25C2EF
{
	return Global_1964732;
}

bool func_398()//Position - 0x25C2FB
{
	return Global_1964731;
}

bool func_399()//Position - 0x25C307
{
	return Global_1964728;
}

bool func_400()//Position - 0x25C32F
{
	return Global_1964704;
}

bool func_401()//Position - 0x25C33B
{
	return Global_1964697;
}

bool func_402()//Position - 0x25C347
{
	return Global_1964696;
}

bool func_403()//Position - 0x25C353
{
	return Global_1958656;
}

bool func_404()//Position - 0x25C3A2
{
	return Global_1958642;
}

bool func_405()//Position - 0x25C3AE
{
	return Global_1958641;
}

void func_406(int iParam0, int iParam1)//Position - 0x25CB6C
{
	if (Global_1888617.f_1[iParam0 /*15*/] != iParam1)
	{
		Global_1888617.f_1[iParam0 /*15*/] = iParam1;
	}
}

char* func_407(var uParam0, int iParam1)//Position - 0x2604BD
{
	switch (iParam1)
	{
		case 0:
			return "RE_Parachuter_1";
		case 1:
			return "RE_Parachuter_2";
		case 2:
			return "RE_Parachuter_3";
		case 3:
			return "RE_Parachuter_4";
		case 4:
			return "RE_Parachuter_5";
		default:
	}
	return "";
}

char* func_408(var uParam0, int iParam1)//Position - 0x2607C1
{
	switch (iParam1)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
			return "";
		default:
	}
	return "";
}

void func_409(var uParam0)//Position - 0x26194F
{
	int iVar0;
	uParam0->f_20 = 0;
	uParam0->f_19 = 0;
	iVar0 = 0;
	while (iVar0 < 18)
	{
		(*uParam0)[iVar0] = 0;
		iVar0++;
	}
}

float func_410(int iParam0, int iParam1)//Position - 0x262803
{
	switch (iParam0)
	{
		case 181:
			switch (iParam1)
			{
				case 0:
					return 1f;
				default:
			}
			break;
		case 262:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_31736 /* Tunable: 757642932 */;
				case 1:
					return Global_262145.f_31737 /* Tunable: -678131595 */;
				case 2:
					return Global_262145.f_31738 /* Tunable: -369153977 */;
				case 3:
					return Global_262145.f_31739 /* Tunable: -2129051069 */;
				case 4:
					return Global_262145.f_31740 /* Tunable: 37939428 */;
				case 5:
					return Global_262145.f_31741 /* Tunable: -313349874 */;
				case 6:
					return Global_262145.f_31742 /* Tunable: 1820044260 */;
				case 7:
					return Global_262145.f_31743 /* Tunable: -61745963 */;
				default:
			}
			break;
		case 294:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_33138 /* Tunable: 289990589 */;
				case 1:
					return Global_262145.f_33139 /* Tunable: 662304577 */;
				default:
			}
			break;
		case 297:
			switch (iParam1)
			{
				case 1:
					return Global_262145.f_33140 /* Tunable: 230846628 */;
				case 0:
					return Global_262145.f_33141 /* Tunable: -841520834 */;
				default:
			}
			break;
		case 299:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_33142 /* Tunable: -1057231589 */;
				case 1:
					return Global_262145.f_33143 /* Tunable: 1854522283 */;
				default:
			}
			break;
	}
	return 1f;
}

int func_411(int iParam0)//Position - 0x26295F
{
	switch (iParam0)
	{
		case 150:
			return 3;
		case 24:
			return 1;
		case 26:
			return 3;
		case 256:
			return 25;
		case 258:
			return 7;
		case 259:
			return 1;
		case 271:
			return 17;
		case 273:
			return 1;
		case 276:
			return 4;
		case 277:
			return 2;
		case 263:
			return 6;
		case 262:
			return 8;
		case 264:
			return 7;
		case 268:
			return 1;
		case 269:
			return 1;
		case 270:
			return 1;
		case 275:
			return 1;
		case 286:
			return 1;
		case 267:
			return 1;
		case 266:
			return 1;
		case 289:
			return 1;
		case 147:
			return 1;
		case 287:
			return 1;
		case 291:
			return 1;
		case 292:
			return 1;
		case 293:
			return 2;
		case 294:
			return 2;
		case 295:
			return 1;
		case 296:
			return 1;
		case 297:
			return 2;
		case 298:
			return 1;
		case 299:
			return 2;
		case 300:
			return 1;
		case 301:
			return 2;
		default:
	}
	return 0;
}

float func_412(int iParam0, int iParam1)//Position - 0x262BF5
{
	switch (iParam0)
	{
		case 181:
			switch (iParam1)
			{
				case 0:
					return 1f;
				default:
			}
			break;
	}
	return 1f;
}

int func_413(int iParam0)//Position - 0x262C8F
{
	switch (iParam0)
	{
		case 70:
		case 71:
		case 72:
		case 74:
		case 75:
		case 78:
		case 80:
			return 11;
		case 73:
		case 76:
		case 77:
		case 79:
			return 8;
		default:
	}
	return 0;
}

int func_414(int iParam0, int iParam1)//Position - 0x262D21
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[iParam0 /*834*/].f_267.f_114[iVar0 /*3*/] == iParam1)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_415(var uParam0, int iParam1)//Position - 0x26431F
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_1594.f_14)
	{
		if (uParam0->f_1594[iVar0] == iParam1)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_416(int iParam0, int iParam1, int iParam2)//Position - 0x26441F
{
	switch (iParam0)
	{
		case 256:
			switch (iParam1)
			{
				case 0:
				case 2:
				case 4:
				case 3:
					return 0;
				default:
			}
			break;
		case 269:
			return 0;
	}
	return 1;
}

int func_417(int iParam0, int iParam1, int iParam2, struct<3> Param3)//Position - 0x264596
{
	int iVar0;
	int iVar1;
	int iVar2;
	NETWORK::GET_RESERVED_MISSION_ENTITIES_IN_AREA(Param3, 0, &iVar0, &iVar1, &iVar2);
	if ((iParam0 <= (__LIB_1__::func_385(0) - iVar0) && iParam1 <= (__LIB_1__::func_385(1) - iVar1)) && iParam2 <= (__LIB_1__::func_385(2) - iVar2))
	{
		return 1;
	}
	return 0;
}

float func_418(int iParam0, int iParam1)//Position - 0x26468E
{
	switch (iParam0)
	{
		case 262:
			return Global_262145.f_32512 /* Tunable: 523318704 */;
		default:
	}
	return -1f;
}

float func_419(int iParam0)//Position - 0x2648AA
{
	switch (iParam0)
	{
		case 0:
			return 500f;
		default:
	}
	return 500f;
}

int func_420(int iParam0, int iParam1)//Position - 0x2649A1
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 827;
				case 1:
					return 828;
				case 2:
					return 829;
				case 3:
					return 830;
				case 4:
					return 831;
				case 5:
					return 832;
				case 6:
					return 833;
				case 7:
					return 834;
				case 8:
					return 835;
				case 9:
					return 836;
				case 10:
					return 837;
				case 11:
					return 838;
				case 12:
					return 839;
				case 13:
					return 840;
				case 14:
					return 841;
				case 15:
					return 842;
				case 16:
					return 843;
				case 17:
					return 844;
				default:
			}
			break;
	}
	return 0;
}

int func_421(int iParam0, int iParam1)//Position - 0x264B49
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 773;
				case 1:
					return 774;
				case 2:
					return 775;
				case 3:
					return 776;
				case 4:
					return 777;
				case 5:
					return 778;
				case 6:
					return 779;
				case 7:
					return 780;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 8:
					return 781;
				case 9:
					return 782;
				case 10:
					return 783;
				case 11:
					return 784;
				case 12:
					return 785;
				case 13:
					return 786;
				case 14:
					return 787;
				case 15:
					return 788;
				default:
			}
			break;
	}
	return 0;
}

Vector3 func_422(var uParam0, int iParam1)//Position - 0x266090
{
	switch (iParam1)
	{
		case 181:
			return uParam0->f_129.f_1[0 /*21*/].f_3;
		default:
	}
	return 0f, 0f, 0f;
}

int func_423(int iParam0)//Position - 0x2660B8
{
	switch (iParam0)
	{
		case 181:
			return -1;
		default:
	}
	return -1;
}

int func_424(int iParam0, int iParam1)//Position - 0x266124
{
	if (iParam0 == Global_1920255.f_11.f_240[iParam1 /*2*/])
	{
		return Global_1920255.f_11.f_240[iParam1 /*2*/].f_1;
	}
	return -1;
}

int func_425(int iParam0, int iParam1)//Position - 0x26614F
{
	switch (iParam0)
	{
		case 256:
			switch (iParam1)
			{
				case 0:
				case 6:
				case 7:
				case 8:
				case 9:
				case 10:
					return 0;
				default:
			}
			break;
		case 276:
			switch (iParam1)
			{
				case 2:
				case 3:
				case 4:
				case 5:
				case 6:
				case 7:
				case 8:
				case 9:
				case 10:
					return 1;
				default:
			}
			return 0;
			break;
		case 264:
			switch (iParam1)
			{
				case 0:
					return 0;
				default:
			}
			break;
	}
	return 1;
}

int func_426(int iParam0)//Position - 0x2661FF
{
	switch (iParam0)
	{
		case 167:
		case 192:
		case 178:
		case 225:
		case 226:
		case 229:
		case 230:
		case 233:
		case 237:
		case 250:
		case 243:
		case 158:
		case 256:
		case 258:
		case 271:
		case 277:
		case 276:
		case 262:
		case 263:
		case 264:
		case 291:
		case 292:
		case 293:
		case 294:
		case 296:
		case 297:
		case 298:
		case 299:
		case 300:
		case 301:
		case 295:
			return 1;
		default:
	}
	return 0;
}

int func_427(int iParam0, int iParam1)//Position - 0x2662CD
{
	switch (iParam0)
	{
		case 181:
			switch (iParam1)
			{
				case 0:
					return 0;
				default:
			}
			break;
		case 150:
			switch (iParam1)
			{
				case 3:
					return 0;
					break;
			}
			break;
		case 263:
			switch (iParam1)
			{
				case 15:
				case 16:
					return 1;
				default:
			}
			break;
	}
	return 0;
}

int func_428(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x266334
{
	switch (iParam0)
	{
		case 276:
			switch (iParam1)
			{
				case 2:
				case 3:
					return MISC::GET_RANDOM_INT_IN_RANGE(iParam2, iParam3 + 1);
				default:
			}
			break;
	}
	return -1;
}

int func_429(int iParam0, int iParam1)//Position - 0x26636D
{
	switch (iParam0)
	{
		case 150:
			switch (iParam1)
			{
				case 0:
					return 1;
				case 1:
					return 3;
				case 2:
					return 1;
				default:
			}
			break;
		case 24:
			return 30;
		case 26:
			switch (iParam1)
			{
				case 0:
					return 3;
				case 1:
					return 3;
				case 2:
					return 3;
				default:
			}
			break;
		case 256:
			switch (iParam1)
			{
				case 12:
				case 13:
				case 5:
				case 8:
				case 9:
				case 15:
				case 16:
				case 17:
				case 18:
				case 19:
				case 20:
				case 21:
				case 22:
				case 23:
				case 24:
				case 11:
				case 4:
					return 3;
				case 10:
				case 14:
					return 2;
				case 1:
					return 5;
				default:
			}
			return 1;
			break;
		case 258:
			switch (iParam1)
			{
				case 0:
				case 1:
				case 2:
				case 3:
				case 4:
				case 5:
				case 6:
					return 1;
				default:
			}
			break;
		case 259:
			return 10;
		case 271:
			switch (iParam1)
			{
				case 0:
					return 4;
				case 15:
					return 4;
				default:
			}
			return 2;
			break;
		case 277:
			switch (iParam1)
			{
				case 0:
					return 8;
				case 1:
					return 8;
				default:
			}
			break;
		case 273:
			return 1;
		case 276:
			switch (iParam1)
			{
				case 2:
					return 2;
				case 3:
					return 7;
				default:
			}
			return 1;
			break;
		case 262:
			return 3;
		case 263:
			switch (iParam1)
			{
				case 0:
					return 2;
				case 1:
					return 3;
				default:
			}
			return 5;
		case 264:
			switch (iParam1)
			{
				case 0:
					return 1;
				default:
			}
			return 2;
		case 268:
			return 10;
		case 269:
			return 1;
		case 270:
			return 8;
		case 275:
			return 1;
		case 286:
			return 15;
		case 267:
			return 25;
		case 266:
			return 5;
		case 289:
			return 5;
		case 147:
			return 10;
		case 287:
			return 12;
		case 291:
			return 10;
		case 292:
			return 18;
		case 293:
			return 3;
		case 294:
			return 3;
		case 295:
			return 66;
		case 296:
			return 10;
		case 297:
			return 3;
		case 298:
			switch (iParam1)
			{
				case 0:
					return 5;
				default:
			}
			break;
		case 299:
			return 3;
		case 300:
			return 12;
		case 301:
			switch (iParam1)
			{
				case 1:
					return 5;
				case 0:
					return 5;
				default:
			}
			break;
	}
	return -1;
}

int func_430(int iParam0, int iParam1)//Position - 0x266696
{
	switch (iParam0)
	{
		case 150:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 4;
				default:
			}
			break;
		case 26:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				case 2:
					return 6;
				default:
			}
			break;
		case 24:
			return 0;
		case 256:
			switch (iParam1)
			{
				case 12:
					return 28;
				case 13:
					return 31;
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 6;
				case 3:
					return 7;
				case 4:
					return 8;
				case 5:
					return 11;
				case 6:
					return 14;
				case 7:
					return 15;
				case 8:
					return 16;
				case 9:
					return 19;
				case 10:
					return 22;
				case 11:
					return 25;
				case 14:
					return 34;
				case 15:
					return 36;
				case 16:
					return 39;
				case 17:
					return 42;
				case 18:
					return 45;
				case 19:
					return 48;
				case 20:
					return 51;
				case 21:
					return 54;
				case 22:
					return 57;
				case 23:
					return 60;
				case 24:
					return 63;
				default:
			}
			break;
		case 258:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 2;
				case 3:
					return 3;
				case 4:
					return 4;
				case 5:
					return 5;
				case 6:
					return 6;
				default:
			}
			break;
		case 259:
			return 0;
		case 271:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 4;
				case 2:
					return 6;
				case 3:
					return 8;
				case 4:
					return 10;
				case 5:
					return 12;
				case 6:
					return 14;
				case 7:
					return 16;
				case 8:
					return 18;
				case 9:
					return 20;
				case 10:
					return 22;
				case 11:
					return 24;
				case 12:
					return 26;
				case 13:
					return 28;
				case 14:
					return 30;
				case 15:
					return 32;
				case 16:
					return 36;
				default:
			}
			break;
		case 277:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 8;
				default:
			}
			break;
		case 273:
			return 0;
		case 276:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 2;
				case 3:
					return 4;
				default:
			}
			break;
		case 262:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				case 2:
					return 6;
				case 3:
					return 9;
				case 4:
					return 12;
				case 5:
					return 15;
				case 6:
					return 18;
				case 7:
					return 21;
				default:
			}
			break;
		case 263:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 2;
				case 2:
					return 5;
				case 3:
					return 10;
				case 4:
					return 15;
				case 5:
					return 20;
				default:
			}
			break;
		case 264:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 3;
				case 3:
					return 5;
				case 4:
					return 7;
				case 5:
					return 9;
				case 6:
					return 11;
				default:
			}
			break;
		case 268:
			return 0;
		case 269:
			return 0;
		case 270:
			return 0;
		case 275:
			return 0;
		case 267:
			return 0;
		case 286:
			return 0;
		case 266:
			return 0;
		case 289:
			return 0;
		case 147:
			return 0;
		case 287:
			return 0;
		case 291:
			return 0;
		case 292:
			return 0;
		case 293:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				default:
			}
			break;
		case 294:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				default:
			}
			break;
		case 295:
			return 0;
		case 296:
			return 0;
		case 297:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				default:
			}
			break;
		case 298:
			switch (iParam1)
			{
				case 0:
					return 0;
				default:
			}
			break;
		case 299:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 3;
				default:
			}
			break;
		case 300:
			switch (iParam1)
			{
				case 0:
					return 0;
				default:
			}
			break;
		case 301:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return 5;
				default:
			}
			break;
	}
	return -1;
}

var func_431(int iParam0)//Position - 0x267223
{
	return Global_1892703[iParam0 /*599*/].f_10.f_308;
}

int func_432(int iParam0, int iParam1)//Position - 0x267239
{
	switch (iParam0)
	{
		case 181:
			iParam1 = iParam1;
			break;
		case 150:
			switch (iParam1)
			{
				case 0:
					return !Global_262145.f_29648 /* Tunable: -1036423235 */;
				case 2:
					return !Global_262145.f_29656 /* Tunable: -1212739458 */;
				case 1:
					return !Global_262145.f_29652 /* Tunable: 1650434624 */;
				default:
			}
			break;
	}
	return 0;
}

int func_433(int iParam0)//Position - 0x2672D8
{
	return Global_1888617.f_1[iParam0 /*15*/];
}

int func_434()//Position - 0x26897D
{
	return Global_1888617.f_199;
}

Vector3 func_435(int iParam0, bool bParam1)//Position - 0x268E2E
{
	if (bParam1)
	{
		switch (iParam0)
		{
			case 0:
				return -1297.199f, 252.495f, 61.813f;
			case 1:
				return -1114.101f, 479.205f, 81.161f;
			case 2:
				return -345.267f, 662.299f, 168.587f;
			case 3:
				return -72.605f, 902.579f, 234.631f;
			case 4:
				return -161.232f, 274.911f, 92.534f;
			case 5:
				return -504.323f, 424.21f, 96.287f;
			case 6:
				return -1451.916f, 533.495f, 118.177f;
			case 7:
				return -1979.252f, 586.078f, 116.479f;
			case 8:
				return -1405.117f, 81.983f, 52.099f;
			case 9:
				return -1299.92f, -228.464f, 59.654f;
			case 10:
				return -1409.08f, -590.823f, 29.317f;
			case 11:
				return -1085.162f, -476.529f, 35.636f;
			case 12:
				return -817.325f, -1201.59f, 5.935f;
			case 13:
				return -1873.598f, -343.933f, 48.26f;
			case 14:
				return -1334.625f, -1008.972f, 6.867f;
			case 15:
				return -1043.008f, -1010.464f, 1.15f;
			case 16:
				return -489.189f, -596.899f, 30.174f;
			case 17:
				return -187.144f, -175.854f, 42.624f;
			case 18:
				return 871.548f, -75.386f, 77.764f;
			case 19:
				return 443.542f, 253.197f, 102.21f;
			case 20:
				return 185.595f, -1016.005f, 28.3f;
			case 21:
				return 110.261f, -714.605f, 32.133f;
			case 22:
				return -220.102f, -590.273f, 33.264f;
			case 23:
				return -74.575f, -619.874f, 35.173f;
			case 24:
				return 283.769f, -342.644f, 43.92f;
			case 25:
				return -237.521f, -2059.951f, 26.62f;
			case 26:
				return -1044.016f, -2608.022f, 19.775f;
			case 27:
				return -801.566f, -1313.922f, 4f;
			case 28:
				return -972.578f, -1464.273f, 4.013f;
			case 29:
				return 1309.942f, -530.154f, 70.312f;
			case 30:
				return 1566.097f, -1683.172f, 87.205f;
			case 31:
				return 339.481f, 159.143f, 102.146f;
			case 32:
				return -2316.493f, 280.86f, 168.467f;
			case 33:
				return -3036.574f, 105.31f, 10.593f;
			case 34:
				return -3071.87f, 658.171f, 9.918f;
			case 35:
				return -1534.826f, 889.731f, 180.803f;
			case 36:
				return 140.945f, 6606.513f, 30.845f;
			case 37:
				return 1362.672f, 1178.352f, 111.609f;
			case 38:
				return 1869.749f, 2622.154f, 44.672f;
			case 39:
				return 2673.478f, 1678.569f, 23.488f;
			case 40:
				return 2593.022f, 364.349f, 107.457f;
			case 41:
				return -1886.248f, 2016.572f, 139.951f;
			case 42:
				return 2537.084f, -390.048f, 91.993f;
			case 43:
				return 3511.653f, 3783.877f, 28.925f;
			case 44:
				return 2002.724f, 3769.429f, 31.181f;
			case 45:
				return -771.927f, 5566.46f, 32.486f;
			case 46:
				return 1697.817f, 6414.365f, 31.73f;
			case 47:
				return 386.663f, 2640.138f, 43.493f;
			case 48:
				return 231.935f, 1162.313f, 224.464f;
			case 49:
				return 1700.445f, 4937.267f, 41.078f;
			default:
		}
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				return -582.454f, -859.433f, 25.034f;
			case 1:
				return -604.458f, -1218.292f, 13.507f;
			case 2:
				return -229.587f, -1483.435f, 30.352f;
			case 3:
				return 28.385f, -1707.341f, 28.298f;
			case 4:
				return -22.296f, -1851.577f, 24.108f;
			case 5:
				return 321.798f, -1948.141f, 23.627f;
			case 6:
				return 455.602f, -1695.263f, 28.289f;
			case 7:
				return 934.148f, -1812.944f, 29.812f;
			case 8:
				return 1228.548f, -1605.649f, 50.736f;
			case 9:
				return -329.7f, -700.958f, 31.912f;
			case 10:
				return 238.339f, -35.01f, 68.728f;
			case 11:
				return 393.61f, -649.557f, 27.5f;
			case 12:
				return 246.847f, -1162.082f, 28.16f;
			case 13:
				return 124.231f, -1472.496f, 28.142f;
			case 14:
				return 1136.156f, -773.997f, 56.632f;
			case 15:
				return 1156.682f, -1474.145f, 33.693f;
			case 16:
				return 1028.898f, -2405.952f, 28.494f;
			case 17:
				return -936.334f, -2692.07f, 15.611f;
			case 18:
				return -532.351f, -2134.219f, 4.992f;
			case 19:
				return -1530.625f, -993.47f, 12.017f;
			case 20:
				return -1528.444f, -427.05f, 34.447f;
			case 21:
				return -1640.424f, -202.879f, 54.146f;
			case 22:
				return -552.673f, 309.154f, 82.191f;
			case 23:
				return 642.042f, 587.747f, 127.911f;
			case 24:
				return -1804.769f, 804.137f, 137.514f;
			case 25:
				return 839.097f, 2202.196f, 50.46f;
			case 26:
				return 756.539f, 2525.957f, 72.161f;
			case 27:
				return 1205.454f, 2658.357f, 36.824f;
			case 28:
				return 1991.707f, 3078.063f, 46.016f;
			case 29:
				return 1977.207f, 3837.1f, 30.997f;
			case 30:
				return 1350.173f, 3601.249f, 33.899f;
			case 31:
				return 1819.042f, 4592.234f, 35.316f;
			case 32:
				return 2905.354f, 4419.682f, 47.541f;
			case 33:
				return -472.038f, 6034.981f, 30.341f;
			case 34:
				return -165.839f, 6454.25f, 30.495f;
			case 35:
				return -2221.144f, 4232.757f, 46.132f;
			case 36:
				return -3138.864f, 1086.83f, 19.669f;
			case 37:
				return 1546.591f, 3781.791f, 33.06f;
			case 38:
				return 2717.772f, 1391.725f, 23.535f;
			case 39:
				return -1144.001f, 2666.28f, 17.094f;
			case 40:
				return -2555.512f, 2322.827f, 32.06f;
			case 41:
				return -2340.763f, 296.197f, 168.467f;
			case 42:
				return 1122.086f, 267.125f, 79.856f;
			case 43:
				return 629.014f, 196.173f, 96.128f;
			case 44:
				return 1150.161f, -991.569f, 44.528f;
			case 45:
				return 244.916f, -860.606f, 28.5f;
			case 46:
				return -340.099f, -876.452f, 30.071f;
			case 47:
				return 387.275f, -215.651f, 55.835f;
			case 48:
				return -1234.105f, -1646.832f, 3.129f;
			case 49:
				return -1062.018f, -226.736f, 37.155f;
			}
		default:
	}
	return 0f, 0f, 0f;
}

int func_436(int iParam0)//Position - 0x2698E0
{
	return Global_1945938[iParam0];
}

void func_437()//Position - 0x26A13F
{
	if (Global_1964873 != 0)
	{
		Global_1964873 = 0;
	}
}

var func_438()//Position - 0x26A160
{
	return Global_1964837;
}

void func_439(var uParam0, char* sParam1)//Position - 0x26AFC4
{
	uParam0->f_31 = 1;
	uParam0->f_32[0] = 1;
	StringCopy(&(uParam0->f_36[0 /*16*/]), sParam1, 64);
}

void func_440(var uParam0, int iParam1, char* sParam2, char* sParam3, var uParam4, int iParam5, int iParam6, int iParam7, int iParam8)//Position - 0x26B02F
{
	uParam0->f_549 = iParam1;
	StringCopy(&(uParam0->f_550), sParam2, 16);
	StringCopy(&(uParam0->f_554), sParam3, 16);
	uParam0->f_558 = uParam4;
	uParam0->f_559 = iParam5;
	uParam0->f_560 = iParam6;
	uParam0->f_561 = iParam7;
	uParam0->f_580 = iParam8;
}

void func_441(char* sParam0, int iParam1)//Position - 0x26B073
{
	__LIB_14__::func_551(&(Global_2703735.f_2724.f_1), 8, sParam0, "", iParam1, 0, 0, 0);
	Global_2703735.f_2724 = 1;
}

void func_442(char* sParam0, int iParam1)//Position - 0x26B0C2
{
	__LIB_14__::func_551(&(Global_2703735.f_2724.f_1), 0, sParam0, "", 0, 0, iParam1, 0);
	Global_2703735.f_2724 = 1;
}

void func_443(char* sParam0, int iParam1)//Position - 0x26B0EA
{
	__LIB_14__::func_551(&(Global_2703735.f_2724.f_1), 3, sParam0, "", iParam1, 0, 0, 1);
	Global_2703735.f_2724 = 1;
}

void func_444(char* sParam0, int iParam1)//Position - 0x26B112
{
	__LIB_14__::func_551(&(Global_2703735.f_2724.f_1), 3, sParam0, "", iParam1, 0, 0, 0);
	Global_2703735.f_2724 = 1;
}

void func_445(char* sParam0, char* sParam1)//Position - 0x26B13A
{
	__LIB_14__::func_551(&(Global_2703735.f_2724.f_1), 20, sParam0, sParam1, 0, 0, 0, 0);
	Global_2703735.f_2724 = 1;
}

void func_446(char* sParam0)//Position - 0x26B161
{
	Global_2703735.f_2724 = 1;
	__LIB_14__::func_520(&(Global_2703735.f_2724.f_1), "", sParam0, 0);
}

int func_447(int iParam0, int iParam1)//Position - 0x2747E0
{
	int iVar0;
	if ((DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("ContrabandDeliveryType", 3) && DECORATOR::DECOR_EXIST_ON(iParam1, "ContrabandDeliveryType")) && DECORATOR::DECOR_GET_INT(iParam1, "ContrabandDeliveryType") == -81613951)
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam1);
		if (__LIB_13__::func_166(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_448(bool bParam0)//Position - 0x27511D
{
	if (Global_1853348[bParam0 /*834*/].f_267.f_32 == 86)
	{
		return 1;
	}
	return 0;
}

int func_449(int iParam0)//Position - 0x27D7FD
{
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 19;
		case 2:
			return 20;
		case 5:
			return 17;
		case 3:
			return 18;
		case 4:
			return 16;
		case 27:
			return 7;
		case 34:
			return 22;
		case 33:
			return 11;
		case 35:
			return 14;
		case 49:
		case 50:
			return 30;
		case 47:
		case 48:
			return 13;
		case 28:
		case 29:
			return 8;
		case 23:
		case 24:
			return 5;
		case 25:
		case 26:
			return 6;
		case 45:
		case 46:
			return 15;
		case 21:
		case 22:
			return 4;
		case 43:
		case 44:
			return 29;
		case 38:
			return 24;
		case 39:
			return 25;
		case 36:
			return 23;
		case 37:
			return 21;
		case 40:
			return 26;
		case 41:
			return 27;
		case 42:
			return 28;
		case 30:
			return 9;
		case 31:
		case 32:
			return 10;
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 11:
			return 1;
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
			return 2;
		case 19:
		case 20:
			return 3;
		case 52:
			return 33;
		case 51:
			return 32;
		default:
	}
	return -1;
}

int func_450()//Position - 0x27DC09
{
	return 1000;
}

int func_451(bool bParam0, bool bParam1)//Position - 0x287769
{
	if (bParam0 != -1)
	{
		if (Global_1970897[bParam0 /*68*/].f_18.f_10 != 0 || !bParam1)
		{
			return Global_1970897[bParam0 /*68*/].f_18.f_10;
		}
	}
	if (bParam1)
	{
		return Global_1966500.f_13;
	}
	return 0;
}

int func_452(int iParam0)//Position - 0x2A6025
{
	switch (iParam0)
	{
		case 22:
		case 25:
			return 0;
		default:
	}
	return 1;
}

int func_453(int iParam0)//Position - 0x2A6108
{
	switch (iParam0)
	{
		case 24:
		case 21:
		case 25:
			return 1;
		default:
	}
	return 0;
}

Vector3 func_454(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x2A67C1
{
	float fVar0;
	switch (iParam1)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					switch (iParam0)
					{
						case 0:
							return -6.2026f, -85.8151f, 56.8303f;
						case 1:
							return -1570.7666f, -1129.0973f, 2.22f;
						case 2:
							return 494.933f, -1541.2828f, 28.2841f;
						case 3:
							return -1570.9714f, -1130.2518f, 2.2176f;
						case 4:
							return -1573.9377f, -1129.7382f, 2.0385f;
						case 5:
							return -1572.9698f, -1133.0565f, 1.9642f;
						case 6:
							return -1573.9762f, -1132.4882f, 1.9129f;
						case 7:
							return -1570.4154f, -1133.0519f, 2.1588f;
						case 8:
							return -1573.527f, -1130.5787f, 2.0322f;
						case 9:
							return -1571.9192f, -1129.7432f, 2.1919f;
						case 10:
							return -1571.2885f, -1133.2788f, 2.0822f;
						case 11:
							return 493.902f, -1542.9325f, 28.2806f;
						case 12:
							return 497.2683f, -1538.8578f, 28.2819f;
						case 13:
							return 497.7681f, -1537.8204f, 28.289f;
						case 14:
							return 496.5292f, -1539.6626f, 28.2817f;
						case 15:
							return 495.8922f, -1540.4862f, 28.2812f;
						case 16:
							return -6.5139f, -84.8662f, 56.7756f;
						case 17:
							return -6.1122f, -83.0137f, 57.263f;
						case 18:
							return -4.9508f, -82.7081f, 57.1712f;
						default:
					}
					break;
				case 1:
					switch (iParam0)
					{
						case 0:
							return 350.0906f, -186.9666f, 57.3458f;
						case 1:
							return -1514.7568f, -1232.7103f, 1.3284f;
						case 2:
							return 127.4534f, -1576.6377f, 28.4842f;
						case 3:
							return -1514.8845f, -1233.9757f, 1.3244f;
						case 4:
							return -1517.355f, -1232.163f, 1.322f;
						case 5:
							return -1518.0446f, -1235.5367f, 1.3363f;
						case 6:
							return -1518.8959f, -1234.7008f, 1.3351f;
						case 7:
							return -1518.708f, -1231.07f, 1.321f;
						case 8:
							return -1519.1528f, -1235.8257f, 1.3398f;
						case 9:
							return -1516.0153f, -1233.0913f, 1.3227f;
						case 10:
							return -1519.483f, -1231.49f, 1.325f;
						case 11:
							return 129.0774f, -1577.9974f, 28.4839f;
						case 12:
							return 131.4777f, -1580.1753f, 28.5083f;
						case 13:
							return 124.9785f, -1574.2247f, 28.434f;
						case 14:
							return 125.4729f, -1574.8843f, 28.4704f;
						case 15:
							return 126.535f, -1575.6726f, 28.4552f;
						case 16:
							return 349.33f, -187.6954f, 57.1358f;
						case 17:
							return 345.3698f, -187.4418f, 56.8825f;
						case 18:
							return 345.9389f, -186.2059f, 57.9988f;
						default:
					}
					break;
				case 2:
					switch (iParam0)
					{
						case 0:
							return -18.1067f, -1031.2568f, 27.9412f;
						case 1:
							return -1954.2444f, -656.6883f, 5.7589f;
						case 2:
							return -743.3499f, 244.975f, 76.3378f;
						case 3:
							return -1955.9114f, -658.6602f, 5.4343f;
						case 4:
							return -1955.9736f, -659.9794f, 5.3433f;
						case 5:
							return -1957.0974f, -659.4893f, 5.2423f;
						case 6:
							return -1953.76f, -660.2953f, 5.5836f;
						case 7:
							return -1952.704f, -660.6775f, 5.6835f;
						case 8:
							return -1953.5111f, -661.1762f, 5.557f;
						case 9:
							return -1952.1145f, -657.161f, 5.9838f;
						case 10:
							return -1954.9762f, -656.4246f, 5.6895f;
						case 11:
							return -740.4633f, 243.8979f, 75.5489f;
						case 12:
							return -739.4404f, 244.0474f, 75.666f;
						case 13:
							return -736.5172f, 245.4668f, 76.0777f;
						case 14:
							return -735.749f, 244.8191f, 76.1551f;
						case 15:
							return -744.3978f, 242.074f, 75.099f;
						case 16:
							return -17.8208f, -1034.8915f, 27.9331f;
						case 17:
							return -18.2395f, -1033.7844f, 27.9374f;
						case 18:
							return -19.8094f, -1031.6459f, 28.4126f;
						default:
					}
					break;
				case 3:
					switch (iParam0)
					{
						case 0:
							return 359.776f, -796.791f, 28.293f;
						case 1:
							return -1785.649f, -865.632f, 6.603f;
						case 2:
							return -430.948f, 261.05f, 82.008f;
						case 3:
							return -1789.681f, -866.724f, 6.382f;
						case 4:
							return -1789.094f, -867.805f, 6.35f;
						case 5:
							return -1788.75f, -864.634f, 6.52f;
						case 6:
							return -1787.185f, -867.474f, 6.461f;
						case 7:
							return -1786.204f, -867.254f, 6.522f;
						case 8:
							return -1786.785f, -868.209f, 6.457f;
						case 9:
							return -1789.42f, -865.131f, 6.483f;
						case 10:
							return -1786.382f, -864.809f, 6.595f;
						case 11:
							return -429.068f, 259.924f, 82.016f;
						case 12:
							return -427.837f, 259.692f, 82.044f;
						case 13:
							return -425.09f, 259.876f, 82.08f;
						case 14:
							return -424.614f, 259.042f, 82.114f;
						case 15:
							return -433.232f, 260.249f, 81.984f;
						case 16:
							return 358.013f, -793.843f, 28.293f;
						case 17:
							return 356.953f, -793.849f, 28.294f;
						case 18:
							return 359.151f, -797.838f, 29.261f;
						default:
					}
					break;
				case 4:
					switch (iParam0)
					{
						case 0:
							return 255.287f, -14.358f, 72.654f;
						case 1:
							return -1896.146f, -705.612f, 6.702f;
						case 2:
							return -581.586f, -1744.691f, 21.397f;
						case 3:
							return -1898.068f, -707.924f, 6.423f;
						case 4:
							return -1896.638f, -707.559f, 6.549f;
						case 5:
							return -1899.091f, -706.463f, 6.418f;
						case 6:
							return -1899.806f, -705.309f, 6.427f;
						case 7:
							return -1898.384f, -705.459f, 6.557f;
						case 8:
							return -1897.569f, -709.48f, 6.374f;
						case 9:
							return -1896.639f, -708.878f, 6.472f;
						case 10:
							return -1896.772f, -704.87f, 6.725f;
						case 11:
							return -583.261f, -1743.281f, 21.466f;
						case 12:
							return -584.368f, -1742.533f, 21.511f;
						case 13:
							return -587.173f, -1740.389f, 21.626f;
						case 14:
							return -587.003f, -1739.317f, 21.639f;
						case 15:
							return -579.824f, -1745.688f, 21.354f;
						case 16:
							return 259.315f, -13.976f, 72.709f;
						case 17:
							return 260.458f, -14.592f, 72.717f;
						case 18:
							return 256.119f, -13.268f, 73.683f;
						default:
					}
					break;
				case 5:
					switch (iParam0)
					{
						case 0:
							return -346.962f, 77.771f, 63.139f;
						case 1:
							return -1290.448f, -1710.782f, 1.615f;
						case 2:
							return 72.8f, -1028.47f, 28.475f;
						case 3:
							return -1296.12f, -1708.985f, 1.575f;
						case 4:
							return -1294.181f, -1709.082f, 1.602f;
						case 5:
							return -1294.705f, -1710.596f, 1.634f;
						case 6:
							return -1291.283f, -1707.813f, 1.608f;
						case 7:
							return -1292.18f, -1708.417f, 1.583f;
						case 8:
							return -1291.258f, -1708.949f, 1.582f;
						case 9:
							return -1293.115f, -1712.123f, 1.642f;
						case 10:
							return -1290.648f, -1711.904f, 1.607f;
						case 11:
							return 73.621f, -1026.908f, 28.476f;
						case 12:
							return 74.074f, -1025.744f, 28.477f;
						case 13:
							return 74.6f, -1023.616f, 28.478f;
						case 14:
							return 75.169f, -1022.99f, 28.478f;
						case 15:
							return 71.603f, -1031.054f, 28.472f;
						case 16:
							return -342.738f, 76.933f, 63.349f;
						case 17:
							return -341.892f, 78.028f, 63.505f;
						case 18:
							return -345.968f, 77.305f, 64.117f;
						default:
					}
					break;
				case 6:
					switch (iParam0)
					{
						case 0:
							return 200.404f, -1691.435f, 28.65f;
						case 1:
							return -1364.575f, -1597.641f, 1.608f;
						case 2:
							return -244.799f, -354.972f, 28.989f;
						case 3:
							return -1368.671f, -1600.198f, 1.586f;
						case 4:
							return -1366.856f, -1599.343f, 1.608f;
						case 5:
							return -1366.848f, -1600.843f, 1.595f;
						case 6:
							return -1363.859f, -1599.172f, 1.732f;
						case 7:
							return -1364.619f, -1600.963f, 1.685f;
						case 8:
							return -1363.518f, -1601.517f, 1.601f;
						case 9:
							return -1364.528f, -1602.055f, 1.64f;
						case 10:
							return -1365.285f, -1598.114f, 1.664f;
						case 11:
							return -245.272f, -352.48f, 28.988f;
						case 12:
							return -245.455f, -351.223f, 28.988f;
						case 13:
							return -245.127f, -347.21f, 28.993f;
						case 14:
							return -245.649f, -348.013f, 28.989f;
						case 15:
							return -244.101f, -349.922f, 29.002f;
						case 16:
							return 198.009f, -1694.654f, 28.524f;
						case 17:
							return 198.497f, -1693.529f, 28.572f;
						case 18:
							return 199.939f, -1690.036f, 29.558f;
						default:
					}
					break;
				case 7:
					switch (iParam0)
					{
						case 0:
							return 185.8f, -157.893f, 55.33f;
						case 1:
							return -1440.82f, -1448.238f, 1.564f;
						case 2:
							return 99.343f, -1316.014f, 28.29f;
						case 3:
							return -1443.399f, -1446.332f, 1.569f;
						case 4:
							return -1442.889f, -1444.519f, 1.566f;
						case 5:
							return -1441.892f, -1444.049f, 1.562f;
						case 6:
							return -1442.04f, -1445.111f, 1.564f;
						case 7:
							return -1442.828f, -1447.603f, 1.568f;
						case 8:
							return -1440.017f, -1445.782f, 1.559f;
						case 9:
							return -1440.105f, -1447.459f, 1.561f;
						case 10:
							return -1444.578f, -1444.74f, 1.572f;
						case 11:
							return 99.971f, -1317.683f, 28.292f;
						case 12:
							return 100.55f, -1318.659f, 28.292f;
						case 13:
							return 103.268f, -1318.166f, 28.262f;
						case 14:
							return 103.021f, -1318.955f, 28.269f;
						case 15:
							return 98.098f, -1313.414f, 28.287f;
						case 16:
							return 183.915f, -158.59f, 55.317f;
						case 17:
							return 182.828f, -158.899f, 55.317f;
						case 18:
							return 186.446f, -159.439f, 56.116f;
						default:
					}
					break;
				case 8:
					switch (iParam0)
					{
						case 0:
							return -784.682f, -197.407f, 36.284f;
						case 1:
							return -1459.442f, -1385.725f, 1.7f;
						case 2:
							return 504.921f, -1622.449f, 28.369f;
						case 3:
							return -1460.56f, -1390.569f, 1.595f;
						case 4:
							return -1459.601f, -1389.198f, 1.648f;
						case 5:
							return -1460.972f, -1387.428f, 1.611f;
						case 6:
							return -1462.778f, -1384.363f, 1.574f;
						case 7:
							return -1461.557f, -1384.691f, 1.618f;
						case 8:
							return -1461.759f, -1383.557f, 1.627f;
						case 9:
							return -1458.955f, -1390.577f, 1.684f;
						case 10:
							return -1459.68f, -1384.877f, 1.702f;
						case 11:
							return 503.581f, -1623.504f, 28.368f;
						case 12:
							return 503.01f, -1624.272f, 28.37f;
						case 13:
							return 500.704f, -1627.224f, 28.377f;
						case 14:
							return 499.787f, -1627.151f, 28.37f;
						case 15:
							return 506.831f, -1620.483f, 28.367f;
						case 16:
							return -787.412f, -194.994f, 36.284f;
						case 17:
							return -788.298f, -194.58f, 36.284f;
						case 18:
							return -786.023f, -198.155f, 36.915f;
						default:
					}
					break;
				case 9:
					switch (iParam0)
					{
						case 0:
							return -385.2935f, -150.6294f, 37.5323f;
						case 1:
							return -1850.9902f, -794.7486f, 5.0092f;
						case 2:
							return 255.1374f, -1014.089f, 28.2691f;
						case 3:
							return -1856.4802f, -794.0271f, 4.6744f;
						case 4:
							return -1856.3395f, -795.5011f, 4.5455f;
						case 5:
							return -1857.7661f, -794.902f, 4.4777f;
						case 6:
							return -1853.9391f, -794.8177f, 4.8217f;
						case 7:
							return -1853.9294f, -791.4667f, 5.0324f;
						case 8:
							return -1853.0151f, -791.9612f, 5.0499f;
						case 9:
							return -1853.115f, -791.0764f, 5.0895f;
						case 10:
							return -1851.2391f, -795.6143f, 4.953f;
						case 11:
							return 254.4998f, -1010.5359f, 28.2722f;
						case 12:
							return 254.7505f, -1009.376f, 28.2733f;
						case 13:
							return 256.3451f, -1005.7694f, 28.2705f;
						case 14:
							return 255.7505f, -1004.9838f, 28.2701f;
						case 15:
							return 252.9288f, -1015.3057f, 28.2668f;
						case 16:
							return -387.9428f, -150.7018f, 37.5323f;
						case 17:
							return -388.8581f, -150.3491f, 37.5323f;
						case 18:
							return -384.6611f, -152.1163f, 38.1768f;
						default:
					}
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					switch (iParam2)
					{
						case 50:
							return -720.153f, -1442.05f, 4.001f;
						case 51:
							return -722.215f, -1469.837f, 4.001f;
						case 52:
							return -760.067f, -1457.884f, 4.001f;
						case 53:
							return -744.003f, -1437.925f, 4.001f;
						case 54:
							return -717.525f, -1451.659f, 4.001f;
						case 55:
							return -736.89f, -1476.571f, 4.001f;
						case 56:
							return -751.053f, -1448.276f, 4.001f;
						case 57:
							return -732.202f, -1429.561f, 4.001f;
						case 58:
							return -759.796f, -1469.092f, 4.001f;
						case 59:
							return -720.978f, -1421.725f, 4.001f;
						default:
					}
					return -720.153f, -1442.05f, 4.001f;
				default:
			}
			switch (iParam2)
			{
				case 50:
					switch (iParam0)
					{
						case 1:
							return 1248.228f, -3103.985f, 6.053f;
						case 2:
							return 1246.7533f, -3099.5562f, 4.8541f;
						case 3:
							return 1248.316f, -3103.067f, 5.957f;
						case 4:
							return 1251.2728f, -3112.801f, 4.8281f;
						case 5:
							return 1249.0396f, -3108.78f, 5.0284f;
						case 6:
							return 1246.321f, -3111.958f, 5.028f;
						case 7:
							return 1244.37f, -3107.0342f, 5.0285f;
						case 8:
							return 1244.3179f, -3108.1096f, 5.0284f;
						case 9:
							return 1248.564f, -3107.6292f, 5.0284f;
						case 10:
							return 1247.88f, -3108.8892f, 5.0284f;
						case 11:
							return 1251.5623f, -3111.3445f, 4.8104f;
						case 12:
							return 1246.333f, -3113.187f, 5.028f;
						case 13:
							return 1245.453f, -3112.824f, 5.028f;
						case 14:
							return 1242.8461f, -3104.0857f, 5.0285f;
						case 15:
							return 1241.7498f, -3103.2852f, 5.0284f;
						default:
					}
					break;
				case 51:
					switch (iParam0)
					{
						case 1:
							return 1174.176f, -371.396f, 67.345f;
						case 2:
							return 1173.712f, -367.522f, 67.23f;
						case 3:
							return 1189.587f, -358.2611f, 67.9775f;
						case 4:
							return 1181.2357f, -355.95f, 67.6025f;
						case 5:
							return 1173.293f, -375.059f, 67.335f;
						case 6:
							return 1178.392f, -374.256f, 67.622f;
						case 7:
							return 1172.896f, -371.05f, 67.261f;
						case 8:
							return 1179.202f, -374.883f, 67.655f;
						case 9:
							return 1173.361f, -376.434f, 67.354f;
						case 10:
							return 1179.7737f, -356.0942f, 67.5162f;
						case 11:
							return 1172.422f, -375.927f, 67.294f;
						case 12:
							return 1180.2992f, -357.0907f, 67.5592f;
						case 13:
							return 1188.4607f, -358.2688f, 67.9678f;
						case 14:
							return 1168.6085f, -370.2458f, 66.9921f;
						case 15:
							return 1168.6378f, -371.5166f, 66.9892f;
						default:
					}
					break;
				case 52:
					switch (iParam0)
					{
						case 1:
							return 1009.901f, -2458.745f, 28.721f;
						case 2:
							return 1016.6006f, -2464.0935f, 27.4666f;
						case 3:
							return 1010.796f, -2458.979f, 28.638f;
						case 4:
							return 1007.4747f, -2457.9792f, 27.5962f;
						case 5:
							return 1010.495f, -2450.953f, 27.411f;
						case 6:
							return 1016.1119f, -2453.7908f, 27.4586f;
						case 7:
							return 1009.793f, -2454.135f, 27.49f;
						case 8:
							return 1006.3816f, -2458.6812f, 27.6202f;
						case 9:
							return 1011.117f, -2449.813f, 27.4f;
						case 10:
							return 1020.9005f, -2460.9956f, 27.5879f;
						case 11:
							return 1017.0186f, -2453.3716f, 27.444f;
						case 12:
							return 1007.4373f, -2459.3848f, 27.6377f;
						case 13:
							return 1011.919f, -2450.819f, 27.402f;
						case 14:
							return 1008.692f, -2453.74f, 27.484f;
						case 15:
							return 1021.0383f, -2462.532f, 27.5501f;
						default:
					}
					break;
				case 53:
					switch (iParam0)
					{
						case 1:
							return -1446.806f, -883.084f, 10.761f;
						case 2:
							return -1453.5231f, -885.1664f, 9.6752f;
						case 3:
							return -1434.1677f, -886.1555f, 9.8585f;
						case 4:
							return -1448.5143f, -878.5192f, 9.7318f;
						case 5:
							return -1442.625f, -876.709f, 9.931f;
						case 6:
							return -1442.7681f, -884.382f, 9.8096f;
						case 7:
							return -1445.469f, -883.662f, 10.767f;
						case 8:
							return -1447.3491f, -877.611f, 9.7926f;
						case 9:
							return -1442.1935f, -883.1953f, 9.8115f;
						case 10:
							return -1441.289f, -875.86f, 9.938f;
						case 11:
							return -1433.4895f, -887.1486f, 9.8522f;
						case 12:
							return -1441.099f, -883.9621f, 9.8127f;
						case 13:
							return -1442.871f, -875.403f, 9.916f;
						case 14:
							return -1455.706f, -877.9001f, 9.6575f;
						case 15:
							return -1454.3868f, -878.1523f, 9.6539f;
						default:
					}
					break;
				case 54:
					switch (iParam0)
					{
						case 1:
							return 368.5621f, -839.816f, 28.2917f;
						case 2:
							return 370.1738f, -842.9114f, 28.2274f;
						case 3:
							return 351.041f, -837.5028f, 28.2916f;
						case 4:
							return 362.2213f, -832.619f, 28.2916f;
						case 5:
							return 359.929f, -838.2189f, 28.2916f;
						case 6:
							return 365.9248f, -836.2479f, 28.2917f;
						case 7:
							return 369.5723f, -839.8442f, 28.2917f;
						case 8:
							return 358.4692f, -837.5182f, 28.2916f;
						case 9:
							return 365.6709f, -834.7831f, 28.2916f;
						case 10:
							return 362.1678f, -831.3858f, 28.2927f;
						case 11:
							return 349.8235f, -836.9639f, 28.2916f;
						case 12:
							return 366.9706f, -835.4464f, 28.2917f;
						case 13:
							return 359.2328f, -836.8672f, 28.3195f;
						case 14:
							return 372.3253f, -837.9888f, 28.2917f;
						case 15:
							return 372.8765f, -839.0621f, 28.2917f;
						default:
					}
					break;
				case 55:
					switch (iParam0)
					{
						case 1:
							return -435.986f, 137.22f, 64.786f;
						case 2:
							return -439.2877f, 121.8959f, 63.6416f;
						case 3:
							return -442.4803f, 115.4645f, 63.674f;
						case 4:
							return -442.914f, 143.11f, 63.695f;
						case 5:
							return -434.5463f, 139.9002f, 63.8221f;
						case 6:
							return -438.5113f, 136.9946f, 63.7637f;
						case 7:
							return -434.528f, 137.21f, 64.792f;
						case 8:
							return -444.129f, 143.843f, 63.696f;
						case 9:
							return -433.7332f, 141.016f, 63.841f;
						case 10:
							return -439.865f, 137.694f, 63.7354f;
						case 11:
							return -434.8772f, 114.4857f, 63.8206f;
						case 12:
							return -442.795f, 144.581f, 63.691f;
						case 13:
							return -435.0443f, 141.3033f, 63.8015f;
						case 14:
							return -443.5722f, 116.3928f, 63.6512f;
						case 15:
							return -434.2003f, 115.6764f, 63.8796f;
						default:
					}
					break;
				case 56:
					switch (iParam0)
					{
						case 1:
							return 1088.4926f, -1821.1558f, 35.8694f;
						case 2:
							return 1091.358f, -1819.0553f, 35.7914f;
						case 3:
							return 1079.766f, -1817.1373f, 36.3069f;
						case 4:
							return 1076.3862f, -1809.8352f, 36.3069f;
						case 5:
							return 1076.4457f, -1816.324f, 36.3069f;
						case 6:
							return 1083.4457f, -1809.2412f, 35.6032f;
						case 7:
							return 1088.079f, -1820.093f, 35.8455f;
						case 8:
							return 1075.4695f, -1817.1625f, 36.3069f;
						case 9:
							return 1082.7084f, -1808.058f, 35.5734f;
						case 10:
							return 1075.5198f, -1809.0327f, 36.3069f;
						case 11:
							return 1079.7203f, -1818.2275f, 36.3069f;
						case 12:
							return 1075.0901f, -1816.071f, 36.3069f;
						case 13:
							return 1082.1505f, -1808.9495f, 35.5871f;
						case 14:
							return 1086.1533f, -1825.257f, 35.9348f;
						case 15:
							return 1087.1957f, -1825.2506f, 35.9418f;
						default:
					}
					break;
				case 57:
					switch (iParam0)
					{
						case 1:
							return -1202.8943f, -408.9779f, 32.9742f;
						case 2:
							return -1201.2389f, -412.1422f, 32.9202f;
						case 3:
							return -1195.0145f, -395.3473f, 33.6803f;
						case 4:
							return -1208.1501f, -402.579f, 37.0992f;
						case 5:
							return -1192.8046f, -400.4597f, 33.3723f;
						case 6:
							return -1196.9203f, -403.671f, 33.1849f;
						case 7:
							return -1201.7772f, -408.6503f, 32.9981f;
						case 8:
							return -1191.6453f, -400.2199f, 33.4099f;
						case 9:
							return -1209.1704f, -401.7023f, 37.0994f;
						case 10:
							return -1197.9321f, -404.5459f, 33.1384f;
						case 11:
							return -1206.036f, -406.7897f, 32.947f;
						case 12:
							return -1194.9263f, -393.9713f, 33.8587f;
						case 13:
							return -1191.7603f, -401.5443f, 33.381f;
						case 14:
							return -1209.4547f, -402.9088f, 37.0991f;
						case 15:
							return -1207.4161f, -407.4379f, 32.9188f;
						default:
					}
					break;
				case 58:
					switch (iParam0)
					{
						case 1:
							return 1176.5388f, -3328.9229f, 5.0287f;
						case 2:
							return 1173.2058f, -3329.7676f, 4.9016f;
						case 3:
							return 1187.2859f, -3335.3223f, 4.8464f;
						case 4:
							return 1196.1084f, -3334.3784f, 4.8782f;
						case 5:
							return 1189.2931f, -3329.0999f, 4.5823f;
						case 6:
							return 1182.6711f, -3332.5813f, 5.0288f;
						case 7:
							return 1176.5209f, -3330.0916f, 5.0288f;
						case 8:
							return 1188.9441f, -3327.627f, 4.5288f;
						case 9:
							return 1195.4513f, -3335.619f, 4.8369f;
						case 10:
							return 1183.4407f, -3331.6465f, 5.0288f;
						case 11:
							return 1179.5781f, -3326.209f, 5.0287f;
						case 12:
							return 1190.3179f, -3327.8015f, 4.5288f;
						case 13:
							return 1194.7662f, -3334.613f, 4.8705f;
						case 14:
							return 1185.8978f, -3335.3752f, 4.8447f;
						case 15:
							return 1180.6918f, -3326.83f, 5.0287f;
						default:
					}
					break;
				case 59:
					switch (iParam0)
					{
						case 1:
							return -1557.64f, -483.142f, 34.488f;
						case 2:
							return -1555.301f, -485.808f, 34.478f;
						case 3:
							return -1554.292f, -477.991f, 34.455f;
						case 4:
							return -1548.797f, -476.663f, 34.467f;
						case 5:
							return -1554.271f, -472.687f, 34.598f;
						case 6:
							return -1547.77f, -472.022f, 34.446f;
						case 7:
							return -1556.611f, -482.503f, 34.493f;
						case 8:
							return -1547.151f, -470.806f, 34.442f;
						case 9:
							return -1555.416f, -472.966f, 34.626f;
						case 10:
							return -1548.438f, -475.702f, 34.463f;
						case 11:
							return -1555.241f, -477.518f, 34.448f;
						case 12:
							return -1546.503f, -471.662f, 34.447f;
						case 13:
							return -1555.227f, -471.799f, 34.661f;
						case 14:
							return -1562.623f, -482.133f, 34.422f;
						case 15:
							return -1562.566f, -483.155f, 34.432f;
						default:
					}
					break;
			}
			break;
		case 15:
			switch (iParam2)
			{
				case 89:
					switch (iParam3)
					{
						case 0:
							return 1270.766f, -372.455f, 68.026f;
						case 1:
							return 1105.152f, -778.851f, 57.263f;
						case 2:
							return 1387.088f, -580.673f, 73.339f;
						case 3:
							return 878.357f, -600.191f, 57.223f;
						case 4:
							return 1020.932f, -682.93f, 55.686f;
						case 5:
							return 1245.72f, -595.355f, 68.489f;
						case 6:
							return 1143.973f, -375.806f, 66.049f;
						case 7:
							return 1000.893f, -594.191f, 58.232f;
						case 8:
							return 1017.046f, -461.949f, 62.9f;
						case 9:
							return 1205.096f, -659.606f, 60.691f;
						default:
					}
					break;
				case 90:
					switch (iParam3)
					{
						case 0:
							return 1840.813f, 3902.574f, 32.261f;
						case 1:
							return 1734.763f, 3952.604f, 31.744f;
						case 2:
							return 1937.371f, 3903f, 31.606f;
						case 3:
							return 1843.956f, 3776.344f, 32.152f;
						case 4:
							return 1733.679f, 3791.078f, 33.564f;
						case 5:
							return 1583.706f, 3795.385f, 33.762f;
						case 6:
							return 1620.782f, 3706.165f, 33.361f;
						case 7:
							return 1712.676f, 3881.071f, 33.886f;
						case 8:
							return 1715.616f, 3675.015f, 33.839f;
						case 9:
							return 1944.577f, 3799.444f, 31.037f;
						default:
					}
					break;
				case 91:
					switch (iParam3)
					{
						case 0:
							return -358.474f, 6154.974f, 30.469f;
						case 1:
							return -140.69f, 6342.884f, 30.491f;
						case 2:
							return -235.701f, 6201.066f, 30.944f;
						case 3:
							return -49.858f, 6361.739f, 30.514f;
						case 4:
							return -110.094f, 6245.832f, 30.339f;
						case 5:
							return -111.305f, 6571.361f, 28.522f;
						case 6:
							return -61.585f, 6448.617f, 30.493f;
						case 7:
							return -367.345f, 6284.153f, 28.974f;
						case 8:
							return -274.748f, 6356.462f, 31.489f;
						case 9:
							return -196.179f, 6463.149f, 30.002f;
						default:
					}
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					return -1041.6207f, -225.9267f, 38.0126f;
				case 1:
					return -241.2316f, -771.1162f, 32.2386f;
				case 2:
					return 402.0372f, -215.0059f, 58.2583f;
				case 3:
					return 2618.8186f, 264.5169f, 99.9543f;
				default:
			}
			break;
		case 9:
			switch (iParam2)
			{
				case 71:
					switch (iParam0)
					{
						case 0:
							return -253.6976f, 6481.6675f, 10.3806f;
						case 1:
							return -256.5499f, 6488.5903f, 10.5612f;
						case 2:
							return -255.3678f, 6494.9155f, 10.43f;
						case 3:
							return -249.8232f, 6488.0303f, 10.3591f;
						case 4:
							return -261.2525f, 6493.056f, 10.0709f;
						case 5:
							return -246.8141f, 6482.183f, 10.4148f;
						case 6:
							return -255.5302f, 6476.581f, 10.4861f;
						case 7:
							return -252.8314f, 6492.959f, 10.5207f;
						case 8:
							return -253.2473f, 6486.5312f, 10.3549f;
						default:
					}
					break;
				case 72:
					switch (iParam0)
					{
						case 0:
							return -326.5845f, -2547.8499f, 5.0006f;
						case 1:
							return -319.808f, -2542.22f, 5.0006f;
						case 2:
							return -328.4217f, -2542.7156f, 5.0006f;
						case 3:
							return -334.6011f, -2550.5698f, 5.0006f;
						case 4:
							return -323.4081f, -2542.0752f, 5.0006f;
						case 5:
							return -331.026f, -2547.9722f, 5.0006f;
						case 6:
							return -334.4609f, -2545.2422f, 5.0007f;
						case 7:
							return -326.1193f, -2538.343f, 5.0006f;
						case 8:
							return -331.2742f, -2541.8801f, 5.0006f;
						default:
					}
					break;
				case 73:
					switch (iParam0)
					{
						case 0:
							return 2710.5747f, 4193.949f, 42.7753f;
						case 1:
							return 2704.04f, 4195.8164f, 42.8875f;
						case 2:
							return 2704.4983f, 4189.8774f, 42.7691f;
						case 3:
							return 2711.227f, 4189.3716f, 42.6762f;
						case 4:
							return 2715.475f, 4193.9907f, 42.6546f;
						case 5:
							return 2700.382f, 4191.9956f, 42.9431f;
						case 6:
							return 2708.751f, 4186.515f, 42.6663f;
						case 7:
							return 2701.233f, 4187.968f, 42.8911f;
						case 8:
							return 2716.3127f, 4189.121f, 42.5431f;
						default:
					}
					break;
			}
			break;
		case 11:
			switch (iParam2)
			{
				case 77:
					switch (iParam0)
					{
						case 0:
							return -742.4603f, -1311.6948f, 5.372f;
						case 1:
							return -778.9803f, -1326.4216f, 5.0472f;
						default:
					}
					break;
				case 78:
					switch (iParam0)
					{
						case 0:
							return 1020.779f, 2653.809f, 40.018f;
						case 1:
							return 1055.407f, 2658.265f, 39.901f;
						default:
					}
					break;
				case 79:
					switch (iParam0)
					{
						case 0:
							return 2506.521f, 4077.922f, 39.057f;
						case 1:
							return 2517.8186f, 4114.758f, 38.8289f;
						default:
					}
					break;
			}
			break;
		case 12:
			switch (iParam2)
			{
				case 80:
					switch (iParam0)
					{
						case 0:
							return 3218.791f, 1459.082f, 0.4543f;
						case 1:
							return 3218.636f, 1450.751f, 0.4543f;
						case 2:
							return 3246.8765f, 1457.9807f, 5.7267f;
						default:
					}
					break;
				case 81:
					switch (iParam0)
					{
						case 0:
							return -166.594f, 7389.195f, 0.4543f;
						case 1:
							return -157.359f, 7387.641f, 0.4543f;
						case 2:
							return -170.211f, 7416.21f, 5.7267f;
						default:
					}
					break;
				case 82:
					switch (iParam0)
					{
						case 0:
							return -2496.779f, 5058.658f, 0.4543f;
						case 1:
							return -2490.782f, 5050.8f, 0.4543f;
						case 2:
							return -2481.807f, 5079.953f, 5.7267f;
						default:
					}
					break;
			}
			break;
		case 17:
			switch (iParam2)
			{
				case 102:
					switch (iParam0)
					{
						case 0:
							return 33.721f, 3661.942f, 38.742f;
						case 1:
							return 35.989f, 3665.173f, 38.728f;
						case 2:
							return 35.392f, 3666.227f, 38.723f;
						case 3:
							return 40.277f, 3656.787f, 38.8f;
						case 4:
							return 33.264f, 3652.785f, 38.755f;
						case 5:
							return 48.033f, 3672.626f, 38.743f;
						case 6:
							return 46.176f, 3680.676f, 38.792f;
						case 7:
							return 44.939f, 3679.813f, 38.82f;
						case 8:
							return 56.145f, 3671.855f, 38.726f;
						default:
					}
					break;
				case 103:
					switch (iParam0)
					{
						case 0:
							return -604.777f, -1058.103f, 20.788f;
						case 1:
							return -608.604f, -1059.475f, 20.788f;
						case 2:
							return -613.675f, -1061.703f, 20.788f;
						case 3:
							return -612.355f, -1062.175f, 20.788f;
						case 4:
							return -614.521f, -1055.249f, 20.788f;
						case 5:
							return -618.207f, -1056.835f, 20.788f;
						case 6:
							return -618.59f, -1057.848f, 20.788f;
						case 7:
							return -621.598f, -1059.304f, 20.788f;
						case 8:
							return -615.487f, -1052.418f, 20.788f;
						default:
					}
					break;
				case 104:
					switch (iParam0)
					{
						case 0:
							return 210.8655f, -2007.3256f, 17.8615f;
						case 1:
							return 208.455f, -2015.494f, 17.584f;
						case 2:
							return 209.732f, -2015.179f, 17.601f;
						case 3:
							return 206.7269f, -2006.411f, 17.8615f;
						case 4:
							return 215.7208f, -2013.7445f, 17.8587f;
						case 5:
							return 203.39f, -2016.403f, 17.574f;
						case 6:
							return 214.292f, -2017.779f, 17.655f;
						case 7:
							return 214.496f, -2019.364f, 17.636f;
						case 8:
							return 219.028f, -2016.6f, 17.85f;
						default:
					}
					break;
			}
			break;
		case 1:
			fVar0 = 3.4f;
			switch (iParam2)
			{
				case 10:
					switch (iParam0)
					{
						case 0:
							return 2477.508f, 3384.677f, 48.727f;
						case 1:
							return 2472.729f, 3385.683f, 48.86f;
						case 2:
							return 2470f, 3382.201f, 49.054f;
						case 3:
							return 2475.757f, 3384.031f, 48.792f;
						case 4:
							return 2478.99f, 3385.99f, 48.674f;
						case 5:
							return 2467.675f, 3387.6235f, (49.0792f + fVar0);
						case 6:
							return 2468.935f, 3381.697f, 49.092f;
						case 7:
							return 2469.955f, 3381.02f, 49.109f;
						case 8:
							return 2473.734f, 3383.334f, 48.892f;
						case 9:
							return 2473.253f, 3388.081f, 48.819f;
						case 10:
							return 2477.334f, 3388.304f, 48.717f;
						case 11:
							return 2474.629f, 3389.6f, 48.778f;
						case 12:
							return 2473.109f, 3384.322f, 48.887f;
						case 13:
							return 2471.426f, 3384.647f, 48.918f;
						case 14:
							return 2469.1213f, 3389.6875f, (48.9759f + fVar0);
						case 15:
							return 2470.187f, 3384.196f, 48.964f;
						case 16:
							return 2471.667f, 3386.25f, 48.888f;
						case 17:
							return 2472.687f, 3383.073f, 48.929f;
						case 18:
							return 2476.572f, 3388.745f, 48.736f;
						case 19:
							return 2475.371f, 3385.567f, 48.786f;
						case 20:
							return 2473.36f, 3386.888f, 48.825f;
						case 21:
							return 2474.504f, 3388.472f, 48.787f;
						case 22:
							return 2477.434f, 3389.219f, 48.722f;
						case 23:
							return 2474.804f, 3390.958f, 48.772f;
						case 24:
							return 2474.74f, 3387.102f, 48.791f;
						case 25:
							return 2479.196f, 3386.865f, 48.662f;
						case 26:
							return 2471.735f, 3381.784f, 49.018f;
						case 27:
							return 2475.967f, 3383.282f, 48.809f;
						case 28:
							return 2476.227f, 3385.909f, 48.765f;
						case 29:
							return 2470.741f, 3391.6455f, (48.8858f + fVar0);
						default:
					}
					break;
				case 11:
					switch (iParam0)
					{
						case 0:
							return 1601.5536f, 3323.4097f, (39.3274f + fVar0);
						case 1:
							return 1603.7045f, 3322.1797f, (39.3904f + fVar0);
						case 2:
							return 1599.2756f, 3325.3694f, (39.183f + fVar0);
						case 3:
							return 1607.451f, 3324.5027f, 39.4025f;
						case 4:
							return 1606.0096f, 3325.9485f, 39.3474f;
						case 5:
							return 1604.1699f, 3327.2344f, 39.2807f;
						case 6:
							return 1602.0951f, 3328.5393f, 39.1738f;
						case 7:
							return 1604.878f, 3329.9666f, 39.2092f;
						case 8:
							return 1608.2194f, 3330.1562f, 39.2263f;
						case 9:
							return 1609.0939f, 3327.434f, 39.3174f;
						case 10:
							return 1612.0555f, 3324.878f, 39.312f;
						case 11:
							return 1607.1023f, 3327.8884f, 39.2895f;
						case 12:
							return 1600.6135f, 3329.321f, 39.1024f;
						case 13:
							return 1605.3391f, 3332.4329f, 38.9867f;
						case 14:
							return 1602.6942f, 3331.733f, 38.977f;
						case 15:
							return 1603.835f, 3329.8765f, 39.1854f;
						case 16:
							return 1607.3646f, 3325.7065f, 39.3623f;
						case 17:
							return 1603.4839f, 3328.2942f, 39.2251f;
						case 18:
							return 1611.8016f, 3323.6738f, 39.332f;
						case 19:
							return 1600.3038f, 3330.9033f, 38.9728f;
						case 20:
							return 1606.1342f, 3328.4438f, 39.2656f;
						case 21:
							return 1606.8829f, 3329.743f, 39.23f;
						case 22:
							return 1608.8301f, 3328.658f, 39.2774f;
						case 23:
							return 1609.9622f, 3328.436f, 39.2921f;
						case 24:
							return 1609.5461f, 3325.0833f, 39.3941f;
						case 25:
							return 1601.2494f, 3330.6743f, 39.028f;
						case 26:
							return 1605.5466f, 3326.9414f, 39.3122f;
						case 27:
							return 1606.3668f, 3331.718f, 39.073f;
						case 28:
							return 1610.7765f, 3326.4954f, 39.3208f;
						case 29:
							return 1604.3252f, 3330.8523f, 39.1187f;
						default:
					}
					break;
				case 12:
					switch (iParam0)
					{
						case 0:
							return 1346.389f, 2737.0356f, (51.3883f + fVar0);
						case 1:
							return 1348.5546f, 2738.477f, (51.2733f + fVar0);
						case 2:
							return 1343.9404f, 2735.8333f, (51.4263f + fVar0);
						case 3:
							return 1344.362f, 2740.778f, 51.062f;
						case 4:
							return 1341.932f, 2738.773f, 51.146f;
						case 5:
							return 1346.488f, 2745.202f, 50.818f;
						case 6:
							return 1340.606f, 2740.427f, 51.011f;
						case 7:
							return 1341.553f, 2741.453f, 50.991f;
						case 8:
							return 1343.61f, 2744.285f, 50.867f;
						case 9:
							return 1349.881f, 2746.691f, 50.675f;
						case 10:
							return 1339.334f, 2737.644f, 51.172f;
						case 11:
							return 1338.819f, 2735.386f, 51.344f;
						case 12:
							return 1341.359f, 2743.569f, 50.892f;
						case 13:
							return 1341.292f, 2744.681f, 50.848f;
						case 14:
							return 1349.349f, 2744.116f, 50.84f;
						case 15:
							return 1347.463f, 2745.01f, 50.823f;
						case 16:
							return 1338.252f, 2738.296f, 51.082f;
						case 17:
							return 1343.538f, 2743.416f, 50.91f;
						case 18:
							return 1348.968f, 2746.396f, 50.727f;
						case 19:
							return 1338.83f, 2741.571f, 50.933f;
						case 20:
							return 1340.277f, 2744.048f, 50.859f;
						case 21:
							return 1340.003f, 2735.451f, 51.361f;
						case 22:
							return 1344.511f, 2743.999f, 50.879f;
						case 23:
							return 1341.688f, 2740.367f, 51.045f;
						case 24:
							return 1347.51f, 2742.896f, 50.952f;
						case 25:
							return 1345.935f, 2741.989f, 51.006f;
						case 26:
							return 1343.186f, 2740.113f, 51.085f;
						case 27:
							return 1343.884f, 2741.962f, 50.994f;
						case 28:
							return 1337.991f, 2737.375f, 51.158f;
						case 29:
							return 1338.987f, 2740.588f, 50.963f;
						default:
					}
					break;
				case 13:
					switch (iParam0)
					{
						case 0:
							return 2261.04f, 2653.646f, (46.5532f + fVar0);
						case 1:
							return 2258.1453f, 2653.0874f, (46.8187f + fVar0);
						case 2:
							return 2263.1523f, 2654.688f, (46.4011f + fVar0);
						case 3:
							return 2253.4104f, 2660.5237f, 47.907f;
						case 4:
							return 2255.2493f, 2659.858f, 47.6394f;
						case 5:
							return 2260.2388f, 2662.4163f, 47.2459f;
						case 6:
							return 2258.3684f, 2660.6108f, 47.3568f;
						case 7:
							return 2263.1992f, 2658.794f, 46.6511f;
						case 8:
							return 2258.7888f, 2657.437f, 46.9861f;
						case 9:
							return 2265.7073f, 2660.9116f, 46.635f;
						case 10:
							return 2257.7112f, 2658.9849f, 47.2835f;
						case 11:
							return 2255.1013f, 2656.244f, 47.2343f;
						case 12:
							return 2255.9053f, 2661.7285f, 47.7294f;
						case 13:
							return 2267.1487f, 2660.8325f, 46.5453f;
						case 14:
							return 2263.1921f, 2661.2275f, 46.7892f;
						case 15:
							return 2261.5823f, 2658.7498f, 46.8524f;
						case 16:
							return 2260.0525f, 2658.3901f, 46.9735f;
						case 17:
							return 2266.688f, 2661.9875f, 46.6105f;
						case 18:
							return 2257.3655f, 2656.86f, 47.0643f;
						case 19:
							return 2259.393f, 2661.0217f, 47.2451f;
						case 20:
							return 2262.3623f, 2661.1401f, 46.8688f;
						case 21:
							return 2254.7961f, 2658.7427f, 47.5501f;
						case 22:
							return 2261.306f, 2663.28f, 47.202f;
						case 23:
							return 2256.9846f, 2662.1409f, 47.6351f;
						case 24:
							return 2253.9956f, 2655.7476f, 47.3089f;
						case 25:
							return 2256.079f, 2658.7144f, 47.4164f;
						case 26:
							return 2260.1167f, 2663.7458f, 47.4055f;
						case 27:
							return 2260.6235f, 2660.1472f, 47.044f;
						case 28:
							return 2264.0156f, 2662.5564f, 46.8326f;
						case 29:
							return 2252.62f, 2659.7466f, 47.9228f;
						default:
					}
					break;
				case 14:
					switch (iParam0)
					{
						case 0:
							return 2444.9734f, 3093.1526f, (46.3435f + fVar0);
						case 1:
							return 2446.8757f, 3095.443f, (46.3485f + fVar0);
						case 2:
							return 2443.7234f, 3090.9617f, (46.4066f + fVar0);
						case 3:
							return 2446.509f, 3087.341f, 46.313f;
						case 4:
							return 2450.367f, 3095.445f, 46.423f;
						case 5:
							return 2448.821f, 3091.266f, 46.274f;
						case 6:
							return 2450.694f, 3092.956f, 46.347f;
						case 7:
							return 2445.617f, 3084.537f, 46.337f;
						case 8:
							return 2452.254f, 3095.458f, 46.402f;
						case 9:
							return 2448.633f, 3084.863f, 46.262f;
						case 10:
							return 2453.874f, 3093.199f, 46.466f;
						case 11:
							return 2450.706f, 3089.04f, 46.312f;
						case 12:
							return 2449.769f, 3085.152f, 46.233f;
						case 13:
							return 2452.823f, 3092.765f, 46.313f;
						case 14:
							return 2450.913f, 3097.783f, 46.66f;
						case 15:
							return 2449.534f, 3092.456f, 46.313f;
						case 16:
							return 2447.221f, 3088.933f, 46.296f;
						case 17:
							return 2449.539f, 3093.85f, 46.32f;
						case 18:
							return 2449.177f, 3090.041f, 46.272f;
						case 19:
							return 2449.109f, 3086.885f, 46.249f;
						case 20:
							return 2449.508f, 3087.669f, 46.247f;
						case 21:
							return 2451.725f, 3088.414f, 46.311f;
						case 22:
							return 2452.704f, 3094.617f, 46.358f;
						case 23:
							return 2447.912f, 3087.941f, 46.279f;
						case 24:
							return 2446.233f, 3085.601f, 46.318f;
						case 25:
							return 2453.649f, 3092.135f, 46.411f;
						case 26:
							return 2450.361f, 3086.667f, 46.268f;
						case 27:
							return 2451.923f, 3097.327f, 46.575f;
						case 28:
							return 2450.99f, 3091.514f, 46.305f;
						case 29:
							return 2451.544f, 3090.735f, 46.29f;
						default:
					}
					break;
				case 15:
					switch (iParam0)
					{
						case 0:
							return 2095.6655f, 3498.8486f, (42.7607f + fVar0);
						case 1:
							return 2094.5645f, 3500.845f, (42.6921f + fVar0);
						case 2:
							return 2097.4143f, 3496.554f, (42.9458f + fVar0);
						case 3:
							return 2097.805f, 3507.279f, 42.171f;
						case 4:
							return 2105.035f, 3502.767f, 42.929f;
						case 5:
							return 2103.54f, 3495.921f, 43.262f;
						case 6:
							return 2100.772f, 3504.626f, 42.56f;
						case 7:
							return 2100.838f, 3501.483f, 42.839f;
						case 8:
							return 2103.095f, 3499.722f, 43.047f;
						case 9:
							return 2100.489f, 3499.955f, 42.925f;
						case 10:
							return 2101.506f, 3503.013f, 42.749f;
						case 11:
							return 2105.83f, 3495.149f, 43.422f;
						case 12:
							return 2105.798f, 3493.995f, 43.463f;
						case 13:
							return 2101.347f, 3497.099f, 43.128f;
						case 14:
							return 2099.189f, 3501.085f, 42.767f;
						case 15:
							return 2100.556f, 3498.351f, 43.023f;
						case 16:
							return 2098.657f, 3502.724f, 42.62f;
						case 17:
							return 2102.202f, 3500.095f, 42.994f;
						case 18:
							return 2097.937f, 3504.341f, 42.444f;
						case 19:
							return 2099.896f, 3503.747f, 42.596f;
						case 20:
							return 2099.603f, 3505.036f, 42.462f;
						case 21:
							return 2104.017f, 3503.013f, 42.88f;
						case 22:
							return 2102.039f, 3494.531f, 43.257f;
						case 23:
							return 2096.936f, 3507.79f, 42.11f;
						case 24:
							return 2103.456f, 3497.701f, 43.183f;
						case 25:
							return 2096.827f, 3506.176f, 42.221f;
						case 26:
							return 2104.394f, 3501.955f, 42.957f;
						case 27:
							return 2102.475f, 3499.011f, 43.068f;
						case 28:
							return 2103.365f, 3494.776f, 43.29f;
						case 29:
							return 2102.045f, 3502.099f, 42.853f;
						default:
					}
					break;
				case 16:
					switch (iParam0)
					{
						case 0:
							return 2613.6458f, 3531.9033f, (49.3837f + fVar0);
						case 1:
							return 2612.5818f, 3528.9666f, (49.4021f + fVar0);
						case 2:
							return 2614.4968f, 3534.0688f, (49.439f + fVar0);
						case 3:
							return 2617.1514f, 3523.5413f, 50.0514f;
						case 4:
							return 2618.6287f, 3525.5872f, 50.1291f;
						case 5:
							return 2620.2466f, 3531.5469f, 49.9724f;
						case 6:
							return 2621.813f, 3528.8474f, 50.3264f;
						case 7:
							return 2616.054f, 3523.881f, 49.9403f;
						case 8:
							return 2621.5566f, 3524.4084f, 50.6347f;
						case 9:
							return 2618.4695f, 3531.7424f, 49.7985f;
						case 10:
							return 2619.1436f, 3529.4087f, 49.9524f;
						case 11:
							return 2620.7986f, 3526.9485f, 50.3564f;
						case 12:
							return 2624.487f, 3530.5413f, 50.5476f;
						case 13:
							return 2624.542f, 3529.602f, 50.593f;
						case 14:
							return 2616.6638f, 3527.9858f, 49.8019f;
						case 15:
							return 2622.7273f, 3532.365f, 50.2513f;
						case 16:
							return 2621.3833f, 3525.5857f, 50.5318f;
						case 17:
							return 2619.4983f, 3530.9348f, 49.9106f;
						case 18:
							return 2620.2695f, 3533.5364f, 49.9424f;
						case 19:
							return 2617.5088f, 3526.6091f, 49.9394f;
						case 20:
							return 2620.898f, 3528.455f, 50.2598f;
						case 21:
							return 2620.3948f, 3530.487f, 50.0438f;
						case 22:
							return 2622.1433f, 3525.0308f, 50.6664f;
						case 23:
							return 2623.6597f, 3530.1497f, 50.4594f;
						case 24:
							return 2622.2417f, 3531.3577f, 50.2314f;
						case 25:
							return 2618.846f, 3526.6216f, 50.0927f;
						case 26:
							return 2617.0645f, 3524.6191f, 49.9936f;
						case 27:
							return 2617.7302f, 3530.4675f, 49.7789f;
						case 28:
							return 2617.563f, 3529.2112f, 49.8229f;
						case 29:
							return 2616.2876f, 3526.7302f, 49.8278f;
						default:
					}
					break;
				case 17:
					switch (iParam0)
					{
						case 0:
							return 2632.5703f, 4840.239f, (32.3643f + fVar0);
						case 1:
							return 2634.4077f, 4842.4106f, (32.4245f + fVar0);
						case 2:
							return 2630.4062f, 4838.5513f, (32.1941f + fVar0);
						case 3:
							return 2624.2615f, 4844.3315f, 32.7342f;
						case 4:
							return 2628.661f, 4843.699f, 32.5776f;
						case 5:
							return 2628.0454f, 4842.0225f, 32.4691f;
						case 6:
							return 2630.9663f, 4846.1304f, 32.647f;
						case 7:
							return 2632.9956f, 4848.9155f, 32.6972f;
						case 8:
							return 2632.011f, 4848.187f, 32.7018f;
						case 9:
							return 2626.2551f, 4843.0728f, 32.5684f;
						case 10:
							return 2628.929f, 4849.252f, 32.7753f;
						case 11:
							return 2624.4575f, 4842.1855f, 32.5294f;
						case 12:
							return 2628.9211f, 4846.5083f, 32.6845f;
						case 13:
							return 2624.3984f, 4845.5483f, 32.8289f;
						case 14:
							return 2627.7493f, 4845.104f, 32.6525f;
						case 15:
							return 2625.472f, 4845.1772f, 32.7613f;
						case 16:
							return 2626.5476f, 4847.173f, 32.8015f;
						case 17:
							return 2630.0928f, 4847.85f, 32.7212f;
						case 18:
							return 2626.7903f, 4843.869f, 32.6249f;
						case 19:
							return 2625.4197f, 4839.759f, 32.3135f;
						case 20:
							return 2630.7869f, 4850.3647f, 32.7659f;
						case 21:
							return 2632.6274f, 4846.062f, 32.6426f;
						case 22:
							return 2627.037f, 4841.261f, 32.4133f;
						case 23:
							return 2630.0916f, 4844.6187f, 32.5906f;
						case 24:
							return 2627.8872f, 4846.4185f, 32.692f;
						case 25:
							return 2624.491f, 4838.904f, 32.3028f;
						case 26:
							return 2631.9053f, 4849.2427f, 32.7238f;
						case 27:
							return 2625.7356f, 4846.68f, 32.8332f;
						case 28:
							return 2628.024f, 4848.5913f, 32.7629f;
						case 29:
							return 2623.0105f, 4842.5474f, 32.7167f;
						default:
					}
					break;
				case 18:
					switch (iParam0)
					{
						case 0:
							return 580.3698f, 2463.3237f, (58.6865f + fVar0);
						case 1:
							return 582.027f, 2461.0676f, (58.6088f + fVar0);
						case 2:
							return 579.0123f, 2465.524f, (58.7737f + fVar0);
						case 3:
							return 592.8286f, 2464.3774f, 59.6591f;
						case 4:
							return 589.2234f, 2470.9595f, 60.0692f;
						case 5:
							return 584.8365f, 2467.3845f, 59.5512f;
						case 6:
							return 585.1426f, 2465.5845f, 59.3939f;
						case 7:
							return 586.3008f, 2466.9973f, 59.722f;
						case 8:
							return 584.5764f, 2471.8047f, 59.9504f;
						case 9:
							return 587.6541f, 2465.3076f, 59.6232f;
						case 10:
							return 588.3805f, 2462.4758f, 59.4236f;
						case 11:
							return 586.484f, 2462.8064f, 59.2678f;
						case 12:
							return 588.9673f, 2461.0286f, 59.3256f;
						case 13:
							return 589.2358f, 2466.4495f, 59.7402f;
						case 14:
							return 591.9676f, 2465.071f, 59.6924f;
						case 15:
							return 587.4232f, 2466.2754f, 59.6918f;
						case 16:
							return 591.9243f, 2463.7368f, 59.5926f;
						case 17:
							return 586.4788f, 2464.5957f, 59.4723f;
						case 18:
							return 584.5439f, 2470.8164f, 59.8917f;
						case 19:
							return 585.4612f, 2471.2236f, 60.0039f;
						case 20:
							return 586.6047f, 2468.8936f, 59.8733f;
						case 21:
							return 583.3774f, 2468.3298f, 59.4397f;
						case 22:
							return 589.2119f, 2465.4177f, 59.6619f;
						case 23:
							return 589.649f, 2462.226f, 59.4304f;
						case 24:
							return 588.5356f, 2470.0195f, 59.9944f;
						case 25:
							return 592.2249f, 2460.2026f, 59.3359f;
						case 26:
							return 592.6932f, 2461.2205f, 59.4236f;
						case 27:
							return 588.1747f, 2471.1538f, 60.0569f;
						case 28:
							return 590.2761f, 2468.0054f, 59.8775f;
						case 29:
							return 587.4067f, 2468.0425f, 59.8242f;
						default:
					}
					break;
				case 19:
					switch (iParam0)
					{
						case 0:
							return 614.1548f, 3021.3477f, (41.3229f + fVar0);
						case 1:
							return 611.6553f, 3021.5957f, (41.2153f + fVar0);
						case 2:
							return 616.8113f, 3021.4468f, (41.3952f + fVar0);
						case 3:
							return 612.451f, 3013.539f, 41.121f;
						case 4:
							return 614.644f, 3015.942f, 41.22f;
						case 5:
							return 611.878f, 3014.544f, 41.102f;
						case 6:
							return 613.622f, 3015.684f, 41.177f;
						case 7:
							return 605.787f, 3017.614f, 40.995f;
						case 8:
							return 616.501f, 3017.061f, 41.29f;
						case 9:
							return 617.566f, 3013.943f, 41.097f;
						case 10:
							return 609.432f, 3015.622f, 41.035f;
						case 11:
							return 618.325f, 3015.924f, 41.2f;
						case 12:
							return 619.893f, 3018.769f, 41.275f;
						case 13:
							return 614.732f, 3013.101f, 41.13f;
						case 14:
							return 607.546f, 3013.551f, 40.956f;
						case 15:
							return 617.813f, 3016.39f, 41.24f;
						case 16:
							return 618.032f, 3018.054f, 41.29f;
						case 17:
							return 614.644f, 3017.635f, 41.27f;
						case 18:
							return 614.411f, 3014.756f, 41.193f;
						case 19:
							return 612.938f, 3017.198f, 41.175f;
						case 20:
							return 620.686f, 3019.394f, 41.276f;
						case 21:
							return 606.879f, 3016.901f, 40.992f;
						case 22:
							return 605.851f, 3016.521f, 40.965f;
						case 23:
							return 610.323f, 3015.396f, 41.057f;
						case 24:
							return 616.567f, 3013.862f, 41.123f;
						case 25:
							return 610.342f, 3013.184f, 41.046f;
						case 26:
							return 607.45f, 3014.65f, 40.964f;
						case 27:
							return 608.596f, 3014.089f, 40.992f;
						case 28:
							return 620.341f, 3016.659f, 41.169f;
						case 29:
							return 613.915f, 3012.076f, 41.081f;
						default:
					}
					break;
			}
			break;
		case 18:
			switch (iParam2)
			{
				case 105:
					switch (iParam0)
					{
						case 0:
							return 461.205f, -1678.6f, 28.291f;
						case 1:
							return 469.685f, -1681.316f, 28.291f;
						case 2:
							return 461.452f, -1677.536f, 28.291f;
						case 3:
							return 460.792f, -1673.705f, 28.295f;
						case 4:
							return 464.203f, -1679.442f, 29.338f;
						case 5:
							return 803.2545f, -758.0833f, 25.7871f;
						case 6:
							return 812.6336f, -750.6476f, 25.7278f;
						case 7:
							return 817.7614f, -754.9615f, 25.7277f;
						case 8:
							return 816.8469f, -755.6562f, 25.728f;
						case 9:
							return 814.4457f, -760.9552f, 25.7278f;
						case 10:
							return 724.4889f, -2097.6055f, 28.274f;
						case 11:
							return 726.412f, -2094.0012f, 28.2898f;
						case 12:
							return 723.5543f, -2097.9622f, 28.2694f;
						case 13:
							return 720.5225f, -2103.4028f, 28.2449f;
						case 14:
							return 732.8106f, -2095.891f, 28.2916f;
						case 15:
							return 1161.4125f, -1324.0576f, 33.7427f;
						case 16:
							return 1164.4922f, -1320.9836f, 33.7427f;
						case 17:
							return 1165.2279f, -1319.7627f, 33.7428f;
						case 18:
							return 1159.1001f, -1314.4896f, 33.7427f;
						case 19:
							return 1162.4241f, -1313.4474f, 33.7427f;
						default:
					}
					break;
				case 106:
					switch (iParam0)
					{
						case 0:
							return 466.796f, -577.996f, 27.5f;
						case 1:
							return 455.185f, -575.576f, 27.5f;
						case 2:
							return 465.792f, -578.183f, 27.5f;
						case 3:
							return 460.097f, -575.555f, 27.5f;
						case 4:
							return 461.111f, -575.208f, 27.5f;
						case 5:
							return 432.3498f, -1506.4327f, 28.2916f;
						case 6:
							return 430.8685f, -1519.4246f, 28.2829f;
						case 7:
							return 431.2669f, -1518.4004f, 28.2838f;
						case 8:
							return 427.3735f, -1515.6904f, 28.2898f;
						case 9:
							return 440.4802f, -1520.1023f, 28.2752f;
						case 10:
							return 714.487f, -904.373f, 22.894f;
						case 11:
							return 717.651f, -908.199f, 23.008f;
						case 12:
							return 718.315f, -909.201f, 23.035f;
						case 13:
							return 717.701f, -919.21f, 22.941f;
						case 14:
							return 713.884f, -913.051f, 22.806f;
						case 15:
							return 32.1993f, -902.8693f, 28.9644f;
						case 16:
							return 39.3274f, -898.26f, 28.9778f;
						case 17:
							return 38.8128f, -907.3989f, 29.7014f;
						case 18:
							return 31.9348f, -898.082f, 29.0039f;
						case 19:
							return 33.1034f, -897.5202f, 28.9979f;
						default:
					}
					break;
				case 107:
					switch (iParam0)
					{
						case 0:
							return -321.973f, -1546.307f, 30.025f;
						case 1:
							return -320.7279f, -1529.1217f, 26.5495f;
						case 2:
							return -318.274f, -1535.916f, 26.612f;
						case 3:
							return -318.929f, -1535.038f, 26.595f;
						case 4:
							return -333.0749f, -1529.3372f, 26.5389f;
						case 5:
							return 154.0475f, -1648.2014f, 28.2917f;
						case 6:
							return 153.8193f, -1646.763f, 28.2917f;
						case 7:
							return 152.5139f, -1640.63f, 28.2917f;
						case 8:
							return 166.4466f, -1649.5715f, 28.2917f;
						case 9:
							return 159.5389f, -1645.0374f, 28.2917f;
						case 10:
							return -585.867f, -869.005f, 24.693f;
						case 11:
							return -593.419f, -881.371f, 24.91f;
						case 12:
							return -598.049f, -876.126f, 25.254f;
						case 13:
							return -594.023f, -882.414f, 24.898f;
						case 14:
							return -586.598f, -868.194f, 24.713f;
						case 15:
							return 393.4899f, -902.3287f, 28.4185f;
						case 16:
							return 384.4513f, -906.701f, 28.4424f;
						case 17:
							return 383.0696f, -906.5172f, 28.437f;
						case 18:
							return 387.6588f, -900.842f, 28.4556f;
						case 19:
							return 391.4316f, -908.0316f, 28.4187f;
						default:
					}
					break;
				case 108:
					switch (iParam0)
					{
						case 0:
							return -44.492f, -220.774f, 44.445f;
						case 1:
							return -43.032f, -228.334f, 44.8f;
						case 2:
							return -39.331f, -218.82f, 44.799f;
						case 3:
							return -45.522f, -221.31f, 44.445f;
						case 4:
							return -47.866f, -217.383f, 44.445f;
						case 5:
							return -483.586f, 270.471f, 82.193f;
						case 6:
							return -487.827f, 273.47f, 82.236f;
						case 7:
							return -488.572f, 272.863f, 82.224f;
						case 8:
							return -495.288f, 276.509f, 82.292f;
						case 9:
							return -492.758f, 272.616f, 83.136f;
						case 10:
							return 285.844f, 313.234f, 104.545f;
						case 11:
							return 274.546f, 310.145f, 104.543f;
						case 12:
							return 277.91f, 312.424f, 104.468f;
						case 13:
							return 277.074f, 313.588f, 104.53f;
						case 14:
							return 274.47f, 317.501f, 104.486f;
						case 15:
							return 906.7725f, -177.7884f, 73.135f;
						case 16:
							return 902.279f, -183.5272f, 72.9013f;
						case 17:
							return 901.2993f, -184.6903f, 72.853f;
						case 18:
							return 895.9459f, -178.8585f, 73.7053f;
						case 19:
							return 889.4717f, -183.7448f, 72.5973f;
						default:
					}
					break;
				case 109:
					switch (iParam0)
					{
						case 0:
							return 1089.647f, -2392.977f, 29.516f;
						case 1:
							return 1092.776f, -2399.578f, 29.649f;
						case 2:
							return 1091.756f, -2400.594f, 29.623f;
						case 3:
							return 1087.923f, -2405.254f, 29.497f;
						case 4:
							return 1082.311f, -2386.719f, 29.38f;
						case 5:
							return 183.849f, -2029.537f, 17.251f;
						case 6:
							return 192.472f, -2031.042f, 17.261f;
						case 7:
							return 196.945f, -2028.746f, 18.562f;
						case 8:
							return 193.545f, -2031.919f, 17.253f;
						case 9:
							return 201.367f, -2030.124f, 17.295f;
						case 10:
							return 1144.773f, -1402.581f, 33.799f;
						case 11:
							return 1146.782f, -1408.547f, 33.607f;
						case 12:
							return 1147.738f, -1408.656f, 33.636f;
						case 13:
							return 1148.968f, -1404.703f, 33.822f;
						case 14:
							return 1148.739f, -1412.352f, 35.043f;
						case 15:
							return 332.8968f, -1283.8556f, 30.8638f;
						case 16:
							return 321.7992f, -1284.7815f, 29.5671f;
						case 17:
							return 325.9501f, -1287.2992f, 30.7033f;
						case 18:
							return 326.0643f, -1288.5577f, 30.7224f;
						case 19:
							return 316.6205f, -1291.8586f, 30.1717f;
						default:
					}
					break;
				case 110:
					switch (iParam0)
					{
						case 0:
							return -1652.325f, -974.582f, 6.557f;
						case 1:
							return -1657.757f, -977.206f, 6.368f;
						case 2:
							return -1658.636f, -977.921f, 6.363f;
						case 3:
							return -1668.026f, -976.1f, 6.443f;
						case 4:
							return -1669.105f, -976.28f, 6.424f;
						case 5:
							return -698.791f, -874.56f, 22.743f;
						case 6:
							return -704.598f, -873.911f, 24.03f;
						case 7:
							return -703.548f, -880.608f, 22.612f;
						case 8:
							return -704.6f, -880.023f, 22.604f;
						case 9:
							return -707.3458f, -877.1424f, 22.5544f;
						case 10:
							return -501.4088f, -54.6948f, 39.0549f;
						case 11:
							return -512.5459f, -48.8825f, 39.9111f;
						case 12:
							return -500.379f, -55.1191f, 39.0385f;
						case 13:
							return -496.5539f, -54.9949f, 38.9849f;
						case 14:
							return -510.1058f, -53.0148f, 41.1174f;
						case 15:
							return -2971.662f, 69.1195f, 10.6085f;
						case 16:
							return -2968.4077f, 70.614f, 10.557f;
						case 17:
							return -2967.1948f, 70.6424f, 10.5326f;
						case 18:
							return -2964.67f, 64.8283f, 10.6085f;
						case 19:
							return -2957.5696f, 61.7802f, 10.6085f;
						default:
					}
					break;
				case 111:
					switch (iParam0)
					{
						case 0:
							return -914.806f, -2041.563f, 8.405f;
						case 1:
							return -913.648f, -2041.805f, 8.405f;
						case 2:
							return -908.415f, -2043.687f, 8.299f;
						case 3:
							return -907.292f, -2043.486f, 8.299f;
						case 4:
							return -903.162f, -2046.016f, 8.299f;
						case 5:
							return 226.9219f, -1994.1321f, 18.5411f;
						case 6:
							return 209.6287f, -1989.6005f, 18.7165f;
						case 7:
							return 221.202f, -1996.7643f, 18.5865f;
						case 8:
							return 221.9354f, -1995.7008f, 18.59f;
						case 9:
							return 223.7177f, -1986.5846f, 18.7077f;
						case 10:
							return -1775.189f, -2792.181f, 12.945f;
						case 11:
							return -1779.876f, -2776.923f, 12.945f;
						case 12:
							return -1771.292f, -2774.826f, 12.945f;
						case 13:
							return -1772.365f, -2774.594f, 12.945f;
						case 14:
							return -1775.226f, -2769.304f, 12.945f;
						case 15:
							return -245.4949f, -2568.1023f, 5.0014f;
						case 16:
							return -239.407f, -2564.7039f, 5.0014f;
						case 17:
							return -238.3637f, -2565.5554f, 5.0014f;
						case 18:
							return -234.7951f, -2573.4348f, 4.2618f;
						case 19:
							return -240.4159f, -2571.2964f, 5.0014f;
						default:
					}
					break;
				case 112:
					switch (iParam0)
					{
						case 0:
							return 1104.8069f, -327.5913f, 66.1531f;
						case 1:
							return 1105.008f, -326.5695f, 66.1437f;
						case 2:
							return 1115.8748f, -321.0512f, 66.1471f;
						case 3:
							return 1112.8717f, -325.6644f, 66.0854f;
						case 4:
							return 1111.7f, -335.1138f, 66.1006f;
						case 5:
							return -242.806f, 277.761f, 91.034f;
						case 6:
							return -251.095f, 283.568f, 92.317f;
						case 7:
							return -253.944f, 285.706f, 90.649f;
						case 8:
							return -253.839f, 286.862f, 90.68f;
						case 9:
							return -248.475f, 291.145f, 90.942f;
						case 10:
							return 107.628f, -153.81f, 53.781f;
						case 11:
							return 105.248f, -148.075f, 53.749f;
						case 12:
							return 104.52f, -148.864f, 53.749f;
						case 13:
							return 106.88f, -154.904f, 53.825f;
						case 14:
							return 100.443f, -150.408f, 53.801f;
						case 15:
							return 454.151f, -947.8701f, 27.3998f;
						case 16:
							return 452.7656f, -940.3359f, 27.4364f;
						case 17:
							return 453.7471f, -939.1234f, 27.4608f;
						case 18:
							return 449.0954f, -934.515f, 27.5981f;
						case 19:
							return 445.7341f, -944.0082f, 27.7135f;
						default:
					}
					break;
				case 113:
					switch (iParam0)
					{
						case 0:
							return -40.953f, -2521.888f, 5.01f;
						case 1:
							return -49.928f, -2530.565f, 5.161f;
						case 2:
							return -40.921f, -2511.923f, 5.161f;
						case 3:
							return -39.869f, -2521.222f, 5.01f;
						case 4:
							return -43.555f, -2519.467f, 6.399f;
						case 5:
							return 737.1168f, -1917.2592f, 28.292f;
						case 6:
							return 736.2333f, -1908.9756f, 28.292f;
						case 7:
							return 736.8429f, -1908.0886f, 28.292f;
						case 8:
							return 742.0927f, -1899.8699f, 28.2119f;
						case 9:
							return 742.0724f, -1910.9559f, 28.292f;
						case 10:
							return 820.57f, -2401.148f, 22.658f;
						case 11:
							return 811.736f, -2405.353f, 22.657f;
						case 12:
							return 812.869f, -2405.856f, 22.657f;
						case 13:
							return 818.081f, -2407.192f, 22.657f;
						case 14:
							return 812.698f, -2398.999f, 22.658f;
						case 15:
							return 1203.354f, -3197.428f, 5.028f;
						case 16:
							return 1200.568f, -3193.279f, 5.028f;
						case 17:
							return 1200.236f, -3192.125f, 5.028f;
						case 18:
							return 1200.869f, -3179.85f, 4.627f;
						case 19:
							return 1213.381f, -3203.336f, 5.028f;
						default:
					}
					break;
				case 114:
					switch (iParam0)
					{
						case 0:
							return -1452.257f, -690.597f, 25.313f;
						case 1:
							return -1457.718f, -682.082f, 25.467f;
						case 2:
							return -1452.297f, -689.62f, 25.313f;
						case 3:
							return -1458.868f, -681.661f, 25.467f;
						case 4:
							return -1466.774f, -680.53f, 25.516f;
						case 5:
							return -335.4424f, -1298.5128f, 30.3979f;
						case 6:
							return -328.0673f, -1296.7026f, 30.3879f;
						case 7:
							return -334.2825f, -1299.2632f, 30.3736f;
						case 8:
							return -327.4905f, -1295.8391f, 30.3817f;
						case 9:
							return -332.425f, -1296.256f, 31.8307f;
						case 10:
							return -1015.8249f, -1514.7062f, 5.5174f;
						case 11:
							return -1020.2206f, -1519.4963f, 4.5923f;
						case 12:
							return -1020.9905f, -1522.8564f, 5.9137f;
						case 13:
							return -1021.4694f, -1519.465f, 4.5923f;
						case 14:
							return -1026.7477f, -1521.2545f, 4.5966f;
						case 15:
							return -436.7471f, -454.3198f, 31.5494f;
						case 16:
							return -432.6787f, -461.4581f, 31.3464f;
						case 17:
							return -431.625f, -461.843f, 31.2991f;
						case 18:
							return -428.5065f, -455.5374f, 31.5264f;
						case 19:
							return -425.0201f, -460.8574f, 31.0079f;
						default:
					}
					break;
			}
			break;
		case 19:
			switch (iParam2)
			{
				case 115:
					switch (iParam3)
					{
						case 0:
							return -1601.8597f, -1050.1019f, 12.0174f;
						case 1:
							return 291.3058f, 182.9298f, 103.3216f;
						case 2:
							return -414.5579f, 1167.2877f, 324.8539f;
						case 3:
							return -235.7755f, -2047.0153f, 26.7554f;
						case 4:
							return -3239.568f, 964.6418f, 11.7019f;
						case 5:
							return -1293.118f, 275.4119f, 63.6691f;
						case 6:
							return -512.8077f, -256.1715f, 34.6083f;
						case 7:
							return -151.9083f, -864.6563f, 28.7563f;
						case 8:
							return -2181.291f, -398.5341f, 12.3434f;
						case 9:
							return -820.828f, -1222.387f, 6.334f;
						default:
					}
					break;
				case 116:
					switch (iParam3)
					{
						case 0:
							return -1334.909f, -1086.681f, 5.931f;
						case 1:
							return -747.9713f, -2290.1782f, 12.0593f;
						case 2:
							return 721.519f, 1198.186f, 325.041f;
						case 3:
							return 238.7485f, -868.2595f, 29.2922f;
						case 4:
							return 434.384f, 215.884f, 102.166f;
						case 5:
							return -1209.2f, -138.5055f, 39.7994f;
						case 6:
							return 382.5704f, -2143.4807f, 15.3986f;
						case 7:
							return 1167.1014f, -741.3898f, 56.3944f;
						case 8:
							return -213.6051f, -1500.4496f, 30.4278f;
						case 9:
							return -568.8f, -391.359f, 33.985f;
						default:
					}
					break;
				case 117:
					switch (iParam3)
					{
						case 0:
							return -877.0343f, -843.8042f, 18.23f;
						case 1:
							return -1318.439f, -1480.193f, 3.909f;
						case 2:
							return 1042.708f, 189.265f, 80f;
						case 3:
							return 209.8813f, 1212.9432f, 224.5948f;
						case 4:
							return 610.956f, -1008.877f, 36.365f;
						case 5:
							return -766.823f, -31.813f, 38.508f;
						case 6:
							return -363.812f, 269.396f, 83.665f;
						case 7:
							return -1860.323f, -346.401f, 48.843f;
						case 8:
							return 397.6863f, -205.5966f, 57.7555f;
						case 9:
							return -1692.1765f, 480.7207f, 127.8763f;
						default:
					}
					break;
				case 118:
					switch (iParam3)
					{
						case 0:
							return -243.804f, -1867.788f, 27.694f;
						case 1:
							return -494.675f, -205.24f, 35.909f;
						case 2:
							return -2209.104f, -369.683f, 12.315f;
						case 3:
							return 690.113f, 1203.051f, 323.259f;
						case 4:
							return 993.09f, -669.94f, 56.268f;
						case 5:
							return 219.342f, -859.955f, 29.221f;
						case 6:
							return -1329.203f, -1419.214f, 3.313f;
						case 7:
							return -381.759f, 273.412f, 83.761f;
						case 8:
							return -1651.153f, 514.123f, 129.364f;
						case 9:
							return -890.35f, -877.746f, 14.465f;
						default:
					}
					break;
			}
			break;
		case 22:
			switch (iParam2)
			{
				case 130:
					switch (iParam0)
					{
						case 4:
							return 1214.0983f, -1071.4622f, 38.6097f;
						case 5:
							return 1211.6757f, -1071.6223f, 38.8522f;
						default:
					}
					break;
				case 131:
					switch (iParam0)
					{
						case 4:
							return 1214.0983f, -1071.4622f, 38.6097f;
						case 5:
							return 1211.6757f, -1071.6223f, 38.8522f;
						default:
					}
					break;
				case 132:
					switch (iParam0)
					{
						case 4:
							return 1214.0983f, -1071.4622f, 38.6097f;
						case 5:
							return 1211.6757f, -1071.6223f, 38.8522f;
						default:
					}
					break;
			}
			break;
		case 23:
			switch (iParam2)
			{
				case 133:
					switch (iParam0)
					{
						case 1:
							return -3013.7551f, 356.7191f, 13.6864f;
						case 2:
							return -3015.2349f, 359.3406f, 13.6786f;
						default:
					}
					break;
				case 134:
					switch (iParam0)
					{
						case 1:
							return -1237.8479f, 489.4335f, 92.359f;
						case 2:
							return -1238.0995f, 477.5735f, 91.7374f;
						default:
					}
					break;
				case 135:
					switch (iParam0)
					{
						case 1:
							return 361.1592f, -1965.0297f, 23.5014f;
						case 2:
							return 365.9861f, -1968.1619f, 23.3829f;
						default:
					}
					break;
				case 136:
					switch (iParam0)
					{
						case 1:
							return 699.534f, -299.403f, 58.182f;
						case 2:
							return 708.152f, -290.318f, 58.188f;
						default:
					}
					break;
			}
			break;
		case 20:
			switch (iParam2)
			{
				case 119:
					switch (iParam0)
					{
						case 0:
							return -377.8543f, 220.3137f, 82.988f;
						case 1:
							return 128.39f, -1303.754f, 28.233f;
						default:
					}
					break;
				case 120:
					switch (iParam0)
					{
						case 0:
							return -428.555f, -26.291f, 45.228f;
						case 1:
							return 230.68f, -1096.561f, 28.294f;
						default:
					}
					break;
				case 121:
					switch (iParam0)
					{
						case 0:
							return -2977.638f, 600.7917f, 19.0554f;
						case 1:
							return -1063.8602f, -501.4426f, 35.0386f;
						default:
					}
					break;
				case 122:
					switch (iParam0)
					{
						case 0:
							return -1366.5199f, 58.5907f, 53.1035f;
						case 1:
							return -883.3578f, -2180.8435f, 7.9374f;
						default:
					}
					break;
				case 123:
					switch (iParam0)
					{
						case 0:
							return -1024.631f, 360.1824f, 70.3614f;
						case 1:
							return -604.405f, -947.359f, 21.118f;
						case 2:
							return -1009.2708f, 348.2982f, 69.685f;
						case 3:
							return -1010.9621f, 372.8206f, 71.009f;
						case 4:
							return -1019.0314f, 345.5998f, 68.9121f;
						case 5:
							return -1011.0087f, 371.8035f, 71.0568f;
						case 6:
							return -1020.1595f, 356.3672f, 69.6348f;
						case 7:
							return -1023.086f, 360.7421f, 70.3615f;
						case 8:
							return -605.25f, -946.869f, 21.107f;
						case 9:
							return -611.681f, -945.547f, 20.947f;
						case 10:
							return -601.969f, -939.091f, 22.862f;
						case 11:
							return -600.827f, -938.549f, 22.863f;
						default:
					}
					break;
				case 124:
					switch (iParam0)
					{
						case 0:
							return -120.2677f, 374.6528f, 111.8858f;
						case 1:
							return -290.127f, -611.7f, 32.568f;
						case 2:
							return -123.3278f, 379.0442f, 111.6436f;
						case 3:
							return -124.3013f, 380.3278f, 111.7395f;
						case 4:
							return -124.9365f, 375.2323f, 111.6156f;
						case 5:
							return -126.1577f, 374.2529f, 111.6433f;
						case 6:
							return -122.4865f, 377.2514f, 111.8858f;
						case 7:
							return -289.539f, -610.519f, 32.566f;
						case 8:
							return -293.794f, -600.518f, 32.558f;
						case 9:
							return -294.934f, -606.011f, 32.56f;
						case 10:
							return -296.197f, -605.769f, 32.56f;
						case 11:
							return -296.585f, -614.445f, 32.562f;
						default:
					}
					break;
				case 125:
					switch (iParam0)
					{
						case 0:
							return -166.708f, 268.609f, 92.332f;
						case 1:
							return 266.2798f, -834.6835f, 28.3774f;
						case 2:
							return -167.413f, 270.904f, 92.292f;
						case 3:
							return -165.976f, 270.54f, 92.369f;
						case 4:
							return -168.753f, 269.466f, 92.223f;
						case 5:
							return -164.555f, 268.956f, 92.447f;
						case 6:
							return -164.097f, 269.667f, 92.471f;
						case 7:
							return -168.612f, 272.081f, 92.227f;
						case 8:
							return 265.982f, -833.684f, 28.391f;
						case 9:
							return 267.019f, -833.863f, 28.366f;
						case 10:
							return 259.4851f, -831.1522f, 28.5559f;
						case 11:
							return 259.3217f, -830.0856f, 28.5681f;
						default:
					}
					break;
				case 126:
					switch (iParam0)
					{
						case 0:
							return -733.3334f, -132.6494f, 36.4412f;
						case 1:
							return 943.662f, -653.37f, 57.434f;
						case 2:
							return -732.1006f, -130.8399f, 36.4002f;
						case 3:
							return -731.3292f, -132.6422f, 36.4137f;
						case 4:
							return -734.3561f, -130.318f, 36.443f;
						case 5:
							return -733.6005f, -129.5448f, 36.3992f;
						case 6:
							return -731.2173f, -134.3122f, 36.422f;
						case 7:
							return -728.7539f, -135.1498f, 36.4039f;
						case 8:
							return 945.02f, -646.0478f, 57.0311f;
						case 9:
							return 951.7865f, -657.0081f, 57.0206f;
						case 10:
							return 954.1982f, -644.5851f, 56.4371f;
						case 11:
							return 953.3594f, -644.1643f, 56.4415f;
						default:
					}
					break;
			}
			break;
		case 10:
			switch (iParam2)
			{
				case 74:
					switch (iParam0)
					{
						case 0:
							return -695.1247f, -988.6584f, 19.3898f;
						case 1:
							return -693.3476f, -990.0684f, 19.39f;
						case 2:
							return -696.6201f, -990.117f, 19.3896f;
						case 16:
							return -690.849f, -977.285f, 19.391f;
						default:
					}
					break;
				case 75:
					switch (iParam0)
					{
						case 0:
							return -753.2964f, 5535.0713f, 32.4857f;
						case 1:
							return -751.9077f, 5536.291f, 32.4857f;
						case 2:
							return -752.1079f, 5533.8633f, 32.4857f;
						case 16:
							return -768.944f, 5532.949f, 32.48f;
						default:
					}
					break;
				case 76:
					switch (iParam0)
					{
						case 0:
							return 179.9991f, 2711.1865f, 41.3048f;
						case 1:
							return 178.8075f, 2710.1357f, 41.242f;
						case 2:
							return 179.635f, 2715.7349f, 41.1498f;
						case 16:
							return 187.444f, 2699.3f, 41.799f;
						default:
					}
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

int func_455(int iParam0, int iParam1, int iParam2)//Position - 0x2AD2E6
{
	switch (iParam1)
	{
		case 12:
			switch (iParam0)
			{
				case 0:
					return joaat("cargobob2");
				default:
			}
			break;
		case 22:
			switch (iParam0)
			{
				case 0:
					return joaat("benson");
				case 1:
					return joaat("benson");
				case 2:
					return joaat("benson");
				case 3:
					return joaat("benson");
				default:
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					return joaat("police3");
				case 1:
					return joaat("cargobob2");
				case 2:
					return joaat("police3");
				default:
			}
			break;
		case 9:
			switch (iParam2)
			{
				case 71:
					switch (iParam0)
					{
						case 0:
							return joaat("gburrito");
						case 1:
							return joaat("gburrito");
						case 2:
							return joaat("slamvan2");
						default:
					}
					break;
				case 72:
					switch (iParam0)
					{
						case 0:
							return joaat("kuruma");
						case 1:
							return joaat("kuruma");
						case 2:
							return joaat("kuruma");
						default:
					}
					break;
				case 73:
					switch (iParam0)
					{
						case 0:
							return joaat("bodhi2");
						case 1:
							return joaat("rebel");
						case 2:
							return joaat("rebel");
						default:
					}
					break;
			}
			break;
		case 17:
			switch (iParam2)
			{
				case 102:
					switch (iParam0)
					{
						case 0:
							return joaat("gburrito");
						default:
					}
					break;
				case 103:
					switch (iParam0)
					{
						case 0:
							return joaat("kuruma");
						default:
					}
					break;
				case 104:
					switch (iParam0)
					{
						case 0:
							return joaat("manana");
						default:
					}
					break;
			}
			break;
		case 11:
			switch (iParam2)
			{
				case 77:
					switch (iParam0)
					{
						case 0:
							return joaat("police4");
						case 1:
							return joaat("police4");
						default:
					}
					break;
				case 78:
					switch (iParam0)
					{
						case 0:
							return joaat("police4");
						case 1:
							return joaat("police4");
						default:
					}
					break;
				case 79:
					switch (iParam0)
					{
						case 0:
							return joaat("police4");
						case 1:
							return joaat("police4");
						default:
					}
					break;
			}
			break;
		case 15:
			return joaat("kamacho");
			break;
		case 19:
			switch (iParam2)
			{
				case 115:
				case 117:
					return joaat("huntley");
				case 116:
				case 118:
					return joaat("cogcabrio");
				default:
			}
			break;
		case 18:
			return joaat("burrito");
		case 23:
			switch (iParam2)
			{
				case 133:
					switch (iParam0)
					{
						case 0:
							return joaat("f620");
						default:
					}
					break;
				case 134:
					switch (iParam0)
					{
						case 0:
							return joaat("surano");
						default:
					}
					break;
				case 135:
					switch (iParam0)
					{
						case 0:
							return joaat("f620");
						default:
					}
					break;
				case 136:
					switch (iParam0)
					{
						case 0:
							return joaat("surano");
						default:
					}
					break;
			}
			break;
		case 14:
			return joaat("frogger");
		case 10:
			switch (iParam0)
			{
				case 0:
					return joaat("nightshark");
				default:
			}
			return joaat("mesa3");
		case 24:
			switch (iParam0)
			{
				case 0:
					return joaat("buzzard");
				default:
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					return joaat("shamal");
				default:
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					return joaat("akuma");
				default:
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 10:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("sadler");
						case 4:
							return joaat("riata");
						default:
					}
					break;
				case 11:
					switch (iParam0)
					{
						case 0:
							return joaat("riata");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("sadler");
						case 3:
							return joaat("sadler");
						case 4:
							return joaat("riata");
						default:
					}
					break;
				case 12:
					switch (iParam0)
					{
						case 0:
							return joaat("riata");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("sadler");
						case 3:
							return joaat("riata");
						case 4:
							return joaat("sadler");
						default:
					}
					break;
				case 13:
					switch (iParam0)
					{
						case 0:
							return joaat("riata");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("sadler");
						case 3:
							return joaat("riata");
						case 4:
							return joaat("sadler");
						default:
					}
					break;
				case 14:
					switch (iParam0)
					{
						case 0:
							return joaat("riata");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("sadler");
						case 3:
							return joaat("sadler");
						case 4:
							return joaat("riata");
						default:
					}
					break;
				case 15:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("sadler");
						case 4:
							return joaat("riata");
						default:
					}
					break;
				case 16:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("riata");
						case 4:
							return joaat("sadler");
						default:
					}
					break;
				case 17:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("riata");
						case 4:
							return joaat("sadler");
						default:
					}
					break;
				case 18:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("sadler");
						case 4:
							return joaat("riata");
						default:
					}
					break;
				case 19:
					switch (iParam0)
					{
						case 0:
							return joaat("sadler");
						case 1:
							return joaat("riata");
						case 2:
							return joaat("riata");
						case 3:
							return joaat("riata");
						case 4:
							return joaat("sadler");
						default:
					}
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					return joaat("tr2");
				case 1:
					return joaat("phantom3");
				case 2:
					return joaat("coquette2");
				case 3:
					return joaat("cheburek");
				case 4:
					return joaat("flashgt");
				case 5:
					return joaat("coquette2");
				case 6:
					return joaat("flashgt");
				default:
			}
			break;
		case 0:
			return joaat("manchez");
		case 20:
			switch (iParam2)
			{
				case 123:
				case 124:
				case 125:
				case 126:
					return joaat("pcj");
				default:
			}
			break;
	}
	return 0;
}

Vector3 func_456(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x2ADAF2
{
	switch (iParam1)
	{
		case 12:
			switch (iParam2)
			{
				case 80:
					switch (iParam0)
					{
						case 0:
							return 2755.482f, 1345.014f, 23.524f;
						default:
					}
					break;
				case 81:
					switch (iParam0)
					{
						case 0:
							return 63.899f, 6542.757f, 30.4528f;
						default:
					}
					break;
				case 82:
					switch (iParam0)
					{
						case 0:
							return -2367.5f, 4341.537f, 3.499f;
						default:
					}
					break;
			}
			break;
		case 19:
			switch (iParam2)
			{
				case 115:
					switch (iParam3)
					{
						case 0:
							return -1597.3221f, -1049.9279f, 12.0176f;
						case 1:
							return 287.9971f, 177.8631f, 103.2051f;
						case 2:
							return -406.0031f, 1172.948f, 324.6416f;
						case 3:
							return -234.7199f, -2053.242f, 26.6204f;
						case 4:
							return -3233.7295f, 959.4883f, 12.1825f;
						case 5:
							return -1291.9424f, 269.0375f, 63.1593f;
						case 6:
							return -515.9047f, -263.3058f, 34.3882f;
						case 7:
							return -158.7342f, -856.8522f, 28.6873f;
						case 8:
							return -2179.9587f, -403.4071f, 12.137f;
						case 9:
							return -822.9429f, -1216.0824f, 5.9347f;
						default:
					}
					break;
				case 116:
					switch (iParam3)
					{
						case 0:
							return -1336.5739f, -1095.2684f, 5.95f;
						case 1:
							return -756.88f, -2289.2292f, 11.8583f;
						case 2:
							return 725.7341f, 1206.3375f, 325.0716f;
						case 3:
							return 245.0082f, -861.2943f, 28.4931f;
						case 4:
							return 441.2779f, 217.0452f, 102.1654f;
						case 5:
							return -1202.3429f, -133.4005f, 39.6662f;
						case 6:
							return 382.7753f, -2149.827f, 14.9877f;
						case 7:
							return 1166.7772f, -753.5115f, 56.8114f;
						case 8:
							return -208.3618f, -1493.0795f, 30.2676f;
						case 9:
							return -578.4795f, -384.0876f, 33.8646f;
						default:
					}
					break;
				case 117:
					switch (iParam3)
					{
						case 0:
							return -880.1486f, -837.3857f, 18.0595f;
						case 1:
							return -1318.6733f, -1488.8173f, 3.318f;
						case 2:
							return 1038.923f, 195.4291f, 79.9905f;
						case 3:
							return 201.843f, 1218.2628f, 224.4599f;
						case 4:
							return 606.1815f, -1013.0632f, 35.7852f;
						case 5:
							return -765.08f, -39.9258f, 36.6855f;
						case 6:
							return -359.0315f, 272.8986f, 83.7807f;
						case 7:
							return -1867.5345f, -347.1952f, 48.2512f;
						case 8:
							return 394.163f, -198.7987f, 58.2762f;
						case 9:
							return -1686.3047f, 480.5247f, 127.8763f;
						default:
					}
					break;
				case 118:
					switch (iParam3)
					{
						case 0:
							return -234.312f, -1867.0841f, 27.8307f;
						case 1:
							return -483.36f, -205.5759f, 35.7891f;
						case 2:
							return -2213.1406f, -365.1164f, 12.2639f;
						case 3:
							return 696.4f, 1207.1257f, 324.423f;
						case 4:
							return 991.4551f, -677.7005f, 56.4491f;
						case 5:
							return 228.8111f, -855.3818f, 28.8994f;
						case 6:
							return -1332.842f, -1424.0645f, 3.3134f;
						case 7:
							return -378.5029f, 281.9506f, 83.8362f;
						case 8:
							return -1655.3844f, 519.2047f, 129.7317f;
						case 9:
							return -898.6993f, -877.3289f, 14.5472f;
						default:
					}
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					switch (iParam2)
					{
						case 50:
							return 1251.243f, -3106.474f, 4.83f;
						case 51:
							return 1174.669f, -369.5071f, 67.2207f;
						case 52:
							return 1010.115f, -2461.952f, 27.44f;
						case 53:
							return -1448.478f, -885.599f, 9.634f;
						case 54:
							return 368.3157f, -841.6785f, 28.1594f;
						case 55:
							return -433.7393f, 134.1461f, 63.7221f;
						case 56:
							return 1090.4921f, -1820.6157f, 35.7475f;
						case 57:
							return -1202.7924f, -411.0688f, 32.8217f;
						case 58:
							return 1174.7003f, -3328.5557f, 4.9016f;
						case 59:
							return -1557.005f, -485.346f, 34.389f;
						default:
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 50:
							return -725.469f, -1444.936f, 4.001f;
						case 51:
							return -719.462f, -1475.001f, 4.001f;
						case 52:
							return -764.854f, -1451.526f, 4.001f;
						case 53:
							return -748.175f, -1431.519f, 4.001f;
						case 54:
							return -714.411f, -1457.23f, 4.001f;
						case 55:
							return -733.958f, -1481.654f, 4.001f;
						case 56:
							return -755.66f, -1442.068f, 4.001f;
						case 57:
							return -736.045f, -1423.286f, 4.001f;
						case 58:
							return -767.029f, -1466.405f, 4.001f;
						case 59:
							return -725.422f, -1415.377f, 4.001f;
						default:
					}
					break;
				case 2:
					switch (iParam2)
					{
						case 50:
							return 1251.6605f, -3118.4639f, 4.8043f;
						case 51:
							return 1185.8441f, -361.0499f, 67.7134f;
						case 52:
							return 1005.8588f, -2451.1904f, 27.4787f;
						case 53:
							return -1436.278f, -889.2004f, 9.751f;
						case 54:
							return 350.2902f, -841.9645f, 28.1662f;
						case 55:
							return -428.2279f, 139.0765f, 63.9359f;
						case 56:
							return 1069.922f, -1818.7148f, 36.3069f;
						case 57:
							return -1192.2769f, -393.1002f, 33.9566f;
						case 58:
							return 1197.8005f, -3332.8757f, 5.0288f;
						case 59:
							return -1555.404f, -466.657f, 34.806f;
						default:
					}
					break;
			}
			break;
		case 22:
			switch (iParam2)
			{
				case 130:
					switch (iParam0)
					{
						case 0:
							return 488.586f, -1685.345f, 28.187f;
						case 1:
							return 2606.3909f, 2506.8591f, 28.1067f;
						case 2:
							return -1474.9543f, 2020.8325f, 64.3418f;
						case 3:
							return -1768.242f, -645.3874f, 9.6474f;
						default:
					}
					break;
				case 131:
					switch (iParam0)
					{
						case 0:
							return 94.3984f, 3492.9204f, 38.7962f;
						case 1:
							return 684.2642f, 224.0924f, 92.1373f;
						case 2:
							return -2048.9934f, 1963.2402f, 188.0604f;
						case 3:
							return -862.634f, -2607.499f, 12.801f;
						default:
					}
					break;
				case 132:
					switch (iParam0)
					{
						case 0:
							return -711.597f, -854.114f, 22.083f;
						case 1:
							return 1491.998f, 2151.773f, 86.429f;
						case 2:
							return -2628.67f, 2836.943f, 15.6817f;
						case 3:
							return 2279.2246f, -420.7068f, 87.4597f;
						default:
					}
					break;
			}
			break;
		case 9:
			switch (iParam2)
			{
				case 71:
					switch (iParam0)
					{
						case 0:
							return -249.4805f, 6484.9893f, 10.2887f;
						case 1:
							return -259.6397f, 6494.89f, 10.1407f;
						case 2:
							return -253.7026f, 6490.204f, 10.4352f;
						default:
					}
					break;
				case 72:
					switch (iParam0)
					{
						case 0:
							return -325.2544f, -2540.5938f, 5.0006f;
						case 1:
							return -333.2641f, -2547.669f, 5.0006f;
						case 2:
							return -327.7825f, -2546.2695f, 5.0006f;
						default:
					}
					break;
				case 73:
					switch (iParam0)
					{
						case 0:
							return 2714.6946f, 4191.172f, 42.5929f;
						case 1:
							return 2707.848f, 4191.9307f, 42.7334f;
						case 2:
							return 2700.8657f, 4190.42f, 42.9373f;
						default:
					}
					break;
			}
			break;
		case 17:
			switch (iParam2)
			{
				case 102:
					switch (iParam0)
					{
						case 0:
							return 47.73f, 3676.175f, 38.81f;
						default:
					}
					break;
				case 103:
					switch (iParam0)
					{
						case 0:
							return -619.838f, -1061.679f, 20.788f;
						default:
					}
					break;
				case 104:
					switch (iParam0)
					{
						case 0:
							return 207.5303f, -2019.788f, 17.524f;
						default:
					}
					break;
			}
			break;
		case 11:
			switch (iParam2)
			{
				case 77:
					switch (iParam0)
					{
						case 0:
							return -743.6788f, -1311.017f, 4.0004f;
						case 1:
							return -777.8008f, -1326.3387f, 4.0004f;
						default:
					}
					break;
				case 78:
					switch (iParam0)
					{
						case 0:
							return 1020.679f, 2653.537f, 38.557f;
						case 1:
							return 1055.388f, 2657.644f, 38.552f;
						default:
					}
					break;
				case 79:
					switch (iParam0)
					{
						case 0:
							return 2506.923f, 4077.902f, 37.631f;
						case 1:
							return 2518.6182f, 4114.5156f, 37.6307f;
						default:
					}
					break;
			}
			break;
		case 15:
			switch (iParam2)
			{
				case 89:
					switch (iParam3)
					{
						case 0:
							return 1271.448f, -370.513f, 68.036f;
						case 1:
							return 1111.68f, -777.373f, 57.263f;
						case 2:
							return 1388.797f, -577.251f, 73.339f;
						case 3:
							return 875.354f, -597.039f, 57.152f;
						case 4:
							return 1021.487f, -686.351f, 55.731f;
						case 5:
							return 1240.78f, -585.891f, 68.31f;
						case 6:
							return 1143.521f, -378.116f, 66.049f;
						case 7:
							return 1007.512f, -588.964f, 58.101f;
						case 8:
							return 1020.205f, -461.712f, 62.904f;
						case 9:
							return 1207.443f, -660.841f, 60.907f;
						default:
					}
					break;
				case 90:
					switch (iParam3)
					{
						case 0:
							return 1837.211f, 3903.757f, 32.186f;
						case 1:
							return 1733.049f, 3954.123f, 31.577f;
						case 2:
							return 1936.729f, 3906.347f, 31.364f;
						case 3:
							return 1847.031f, 3773.829f, 32.148f;
						case 4:
							return 1734.021f, 3793.78f, 33.542f;
						case 5:
							return 1583.83f, 3799.811f, 33.662f;
						case 6:
							return 1621.443f, 3708.381f, 33.374f;
						case 7:
							return 1714.92f, 3884.811f, 33.904f;
						case 8:
							return 1723.715f, 3674.055f, 33.845f;
						case 9:
							return 1949.259f, 3799.854f, 31.061f;
						default:
					}
					break;
				case 91:
					switch (iParam3)
					{
						case 0:
							return -354.975f, 6153.438f, 30.481f;
						case 1:
							return -140.414f, 6345.692f, 30.491f;
						case 2:
							return -242.075f, 6197.691f, 30.489f;
						case 3:
							return -50.236f, 6356.161f, 30.315f;
						case 4:
							return -106.025f, 6250.811f, 30.352f;
						case 5:
							return -110.019f, 6572.976f, 28.522f;
						case 6:
							return -57.545f, 6452.511f, 30.507f;
						case 7:
							return -365.49f, 6280.021f, 29.217f;
						case 8:
							return -270.705f, 6358.026f, 31.287f;
						case 9:
							return -200.643f, 6460.745f, 30.101f;
						default:
					}
					break;
			}
			break;
		case 23:
			switch (iParam2)
			{
				case 133:
					switch (iParam0)
					{
						case 0:
							return -3015.3699f, 356.5794f, 13.6063f;
						default:
					}
					break;
				case 134:
					switch (iParam0)
					{
						case 0:
							return -1236.2244f, 488.4323f, 92.2327f;
						default:
					}
					break;
				case 135:
					switch (iParam0)
					{
						case 0:
							return 364.0974f, -1966.1995f, 23.4325f;
						default:
					}
					break;
				case 136:
					switch (iParam0)
					{
						case 0:
							return 699.028f, -296.572f, 58.185f;
						default:
					}
					break;
			}
			break;
		case 18:
			switch (iParam2)
			{
				case 105:
					switch (iParam0)
					{
						case 0:
							return 469.745f, -1683.583f, 28.291f;
						case 1:
							return 817.0272f, -758.7137f, 25.7274f;
						case 2:
							return 727.4249f, -2097.3281f, 28.2866f;
						case 3:
							return 1159.4985f, -1321.1633f, 33.7428f;
						default:
					}
					break;
				case 106:
					switch (iParam0)
					{
						case 0:
							return 454.321f, -572.23f, 27.5f;
						case 1:
							return 440.1198f, -1517.9878f, 28.278f;
						case 2:
							return 717.74f, -904.42f, 23.052f;
						case 3:
							return 42.1645f, -900.7593f, 28.9807f;
						default:
					}
					break;
				case 107:
					switch (iParam0)
					{
						case 0:
							return -323.6898f, -1530.5094f, 26.5426f;
						case 1:
							return 155.2826f, -1642.9125f, 28.2917f;
						case 2:
							return -597.05f, -885.92f, 24.513f;
						case 3:
							return 390.3208f, -904.3383f, 28.4187f;
						default:
					}
					break;
				case 108:
					switch (iParam0)
					{
						case 0:
							return -48.996f, -220.575f, 44.445f;
						case 1:
							return -484.358f, 269.188f, 82.17f;
						case 2:
							return 272.331f, 315.102f, 104.529f;
						case 3:
							return 906.052f, -181.3754f, 73.1346f;
						default:
					}
					break;
				case 109:
					switch (iParam0)
					{
						case 0:
							return 1089.371f, -2396.45f, 29.637f;
						case 1:
							return 202.911f, -2029.617f, 17.295f;
						case 2:
							return 1143.725f, -1405.727f, 33.58f;
						case 3:
							return 335.3341f, -1280.8303f, 30.8931f;
						default:
					}
					break;
				case 110:
					switch (iParam0)
					{
						case 0:
							return -1650.253f, -977.342f, 6.483f;
						case 1:
							return -706.6551f, -880.2819f, 22.6065f;
						case 2:
							return -497.6812f, -51.7973f, 38.9601f;
						case 3:
							return -2968.967f, 66.9994f, 10.6085f;
						default:
					}
					break;
				case 111:
					switch (iParam0)
					{
						case 0:
							return -904.673f, -2043.066f, 8.299f;
						case 1:
							return 219.6904f, -1993.9274f, 18.6654f;
						case 2:
							return -1775.76f, -2770.805f, 12.945f;
						case 3:
							return -244.2923f, -2571.5f, 5.0014f;
						default:
					}
					break;
				case 112:
					switch (iParam0)
					{
						case 0:
							return 1108.9271f, -332.8348f, 66.1295f;
						case 1:
							return -250.452f, 292.773f, 90.78f;
						case 2:
							return 100.196f, -146.932f, 53.782f;
						case 3:
							return 456.7384f, -945.0308f, 27.281f;
						default:
					}
					break;
				case 113:
					switch (iParam0)
					{
						case 0:
							return -37.584f, -2517.533f, 5.01f;
						case 1:
							return 735.886f, -1913.9359f, 28.292f;
						case 2:
							return 817.715f, -2404.01f, 22.657f;
						case 3:
							return 1206.183f, -3194.917f, 5.028f;
						default:
					}
					break;
				case 114:
					switch (iParam0)
					{
						case 0:
							return -1463.272f, -679.914f, 25.467f;
						case 1:
							return -337.2616f, -1295.658f, 30.3991f;
						case 2:
							return -1024.7257f, -1518.727f, 4.5942f;
						case 3:
							return -435.8633f, -457.8559f, 31.4974f;
						default:
					}
					break;
			}
			break;
		case 14:
			switch (iParam2)
			{
				case 86:
					switch (iParam0)
					{
						case 0:
							return -1682.0421f, 63.9532f, 117.0128f;
						default:
					}
					break;
				case 87:
					switch (iParam0)
					{
						case 0:
							return 1813.9673f, -1281.6213f, 147.0125f;
						default:
					}
					break;
				case 88:
					switch (iParam0)
					{
						case 0:
							return 904.7272f, -49.9625f, 132.5364f;
						default:
					}
					break;
			}
			break;
		case 10:
			switch (iParam2)
			{
				case 74:
					switch (iParam0)
					{
						case 0:
							return -699.099f, -988.335f, 19.389f;
						case 7:
							return -688.791f, -981.056f, 19.39f;
						default:
					}
					break;
				case 75:
					switch (iParam0)
					{
						case 0:
							return -753.118f, 5531.254f, 32.486f;
						case 7:
							return -770.402f, 5536.521f, 32.485f;
						default:
					}
					break;
				case 76:
					switch (iParam0)
					{
						case 0:
							return 177.046f, 2714.577f, 41.212f;
						case 7:
							return 191.675f, 2701.026f, 41.588f;
						default:
					}
					break;
			}
			break;
		case 24:
			switch (iParam2)
			{
				case 137:
					switch (iParam0)
					{
						case 0:
							return -1303.739f, -2274.059f, 12.9473f;
						default:
					}
					break;
				case 138:
					switch (iParam0)
					{
						case 0:
							return -1541.521f, -2682.9333f, 12.9445f;
						default:
					}
					break;
				case 139:
					switch (iParam0)
					{
						case 0:
							return -1123.2104f, -3009.3625f, 12.9451f;
						default:
					}
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					return -854.4843f, -2919.72f, 75.4389f;
				default:
			}
			break;
		case 2:
			switch (iParam2)
			{
				case 20:
					switch (iParam0)
					{
						case 0:
							return -1371.2589f, 219.1135f, 57.7171f;
						default:
					}
					break;
				case 21:
					switch (iParam0)
					{
						case 0:
							return -1221.695f, 228.181f, 65.559f;
						default:
					}
					break;
				case 22:
					switch (iParam0)
					{
						case 0:
							return -1216.2106f, 233.1658f, 66.0404f;
						default:
					}
					break;
				case 23:
					switch (iParam0)
					{
						case 0:
							return -1339.4564f, 226.0749f, 57.7433f;
						default:
					}
					break;
				case 24:
					switch (iParam0)
					{
						case 0:
							return -1342.3553f, 225.8615f, 57.7414f;
						default:
					}
					break;
				case 25:
					switch (iParam0)
					{
						case 0:
							return -1274.6355f, 215.1094f, 59.5056f;
						default:
					}
					break;
				case 26:
					switch (iParam0)
					{
						case 0:
							return -1242.3114f, 228.4301f, 63.3139f;
						default:
					}
					break;
				case 27:
					switch (iParam0)
					{
						case 0:
							return -1252.8394f, 215.3139f, 61.6552f;
						default:
					}
					break;
				case 28:
					switch (iParam0)
					{
						case 0:
							return -1320.7853f, 226.9186f, 57.7574f;
						default:
					}
					break;
				case 29:
					switch (iParam0)
					{
						case 0:
							return -1210.8944f, 234.1089f, 66.4545f;
						default:
					}
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 10:
					switch (iParam0)
					{
						case 0:
							return 2484.7427f, 3382.7786f, 48.5586f;
						case 1:
							return 2470.86f, 3372.6863f, 49.7472f;
						case 2:
							return 2466.6602f, 3373.04f, 49.5588f;
						case 3:
							return 2486.5916f, 3405.4338f, 49.0988f;
						case 4:
							return 2497.0022f, 3392.6584f, 48.6279f;
						default:
					}
					break;
				case 11:
					switch (iParam0)
					{
						case 0:
							return 1617.2933f, 3325.9814f, 38.9493f;
						case 1:
							return 1603.6903f, 3340.4004f, 38.4097f;
						case 2:
							return 1616.871f, 3331.4922f, 38.9299f;
						case 3:
							return 1589.8632f, 3334.1555f, 38.106f;
						case 4:
							return 1615.8789f, 3320.558f, 38.9793f;
						default:
					}
					break;
				case 12:
					switch (iParam0)
					{
						case 0:
							return 1350.479f, 2753.499f, 50.3878f;
						case 1:
							return 1334.4451f, 2748.7358f, 50.6153f;
						case 2:
							return 1354.7778f, 2751.8606f, 50.3648f;
						case 3:
							return 1365.5195f, 2745.1682f, 50.8089f;
						case 4:
							return 1337.215f, 2758.0752f, 50.4052f;
						default:
					}
					break;
				case 13:
					switch (iParam0)
					{
						case 0:
							return 2271.0186f, 2665.8508f, 46.5854f;
						case 1:
							return 2262.6235f, 2670.111f, 47.6765f;
						case 2:
							return 2246.2273f, 2662.7295f, 49.2182f;
						case 3:
							return 2242.3552f, 2658.645f, 49.1144f;
						case 4:
							return 2253.3586f, 2674.902f, 48.6738f;
						default:
					}
					break;
				case 14:
					switch (iParam0)
					{
						case 0:
							return 2452.5286f, 3078.3438f, 46.1789f;
						case 1:
							return 2459.3604f, 3099.8472f, 47.4006f;
						case 2:
							return 2462.9678f, 3094.5671f, 47.5579f;
						case 3:
							return 2454.6606f, 3102.829f, 46.7598f;
						case 4:
							return 2466.4707f, 3082.7825f, 47.0988f;
						default:
					}
					break;
				case 15:
					switch (iParam0)
					{
						case 0:
							return 2093.69f, 3513.132f, 41.674f;
						case 1:
							return 2115.111f, 3499.683f, 43.54f;
						case 2:
							return 2113.963f, 3503.543f, 43.342f;
						case 3:
							return 2110.2986f, 3490.9314f, 43.9358f;
						case 4:
							return 2083.438f, 3507.0674f, 41.9417f;
						default:
					}
					break;
				case 16:
					switch (iParam0)
					{
						case 0:
							return 2617.1226f, 3514.1494f, 50.7084f;
						case 1:
							return 2632.279f, 3535.5378f, 50.9178f;
						case 2:
							return 2632.683f, 3528.91f, 51.3635f;
						case 3:
							return 2611.439f, 3515.6157f, 50.228f;
						case 4:
							return 2623.0366f, 3543.4944f, 50.1509f;
						default:
					}
					break;
				case 17:
					switch (iParam0)
					{
						case 0:
							return 2631.111f, 4858.0645f, 32.8836f;
						case 1:
							return 2616.381f, 4845.351f, 33.2846f;
						case 2:
							return 2618.4353f, 4838.718f, 32.9008f;
						case 3:
							return 2639.277f, 4851.732f, 32.6325f;
						case 4:
							return 2613.5742f, 4840.779f, 33.2859f;
						default:
					}
					break;
				case 18:
					switch (iParam0)
					{
						case 0:
							return 586.8419f, 2478.1465f, 60.261f;
						case 1:
							return 598.1171f, 2459.2483f, 59.4126f;
						case 2:
							return 597.7141f, 2465.2761f, 59.8198f;
						case 3:
							return 589.8533f, 2454.355f, 58.6038f;
						case 4:
							return 575.4168f, 2475.7156f, 59.1821f;
						default:
					}
					break;
				case 19:
					switch (iParam0)
					{
						case 0:
							return 624.5857f, 3009.2258f, 40.9766f;
						case 1:
							return 607.38f, 3006.3223f, 40.8904f;
						case 2:
							return 612.3398f, 3006.0608f, 40.5836f;
						case 3:
							return 630.5665f, 3024.0396f, 41.4217f;
						case 4:
							return 594.3163f, 3011.2222f, 40.892f;
						default:
					}
					break;
			}
			break;
		case 3:
			switch (iParam2)
			{
				case 30:
					switch (iParam0)
					{
						case 0:
							return 2607.675f, 263.959f, 97.367f;
						case 1:
							return 2609.969f, 273.271f, 97.177f;
						default:
					}
					break;
				case 31:
					switch (iParam0)
					{
						case 0:
							return -1678.9957f, -689.9188f, 10.2883f;
						case 1:
							return -1685.3491f, -685.408f, 10.3004f;
						default:
					}
					break;
				case 32:
					switch (iParam0)
					{
						case 0:
							return 1355.714f, 650.3459f, 79.3869f;
						case 1:
							return 1350.0156f, 644.9999f, 79.4645f;
						default:
					}
					break;
				case 33:
					switch (iParam0)
					{
						case 0:
							return 633.4656f, -309.621f, 42.6194f;
						case 1:
							return 636.5789f, -302.4718f, 42.6585f;
						default:
					}
					break;
				case 34:
					switch (iParam0)
					{
						case 0:
							return -2366.3408f, -289.2394f, 13.17f;
						case 1:
							return -2360.0928f, -293.829f, 13.0415f;
						default:
					}
					break;
				case 35:
					switch (iParam0)
					{
						case 0:
							return -1988.9747f, -449.1148f, 10.7775f;
						case 1:
							return -1994.9723f, -444.1566f, 10.7436f;
						default:
					}
					break;
				case 36:
					switch (iParam0)
					{
						case 0:
							return 1452.358f, -1063.2943f, 54.0991f;
						case 1:
							return 1459.1989f, -1059.4629f, 54.339f;
						default:
					}
					break;
				case 37:
					switch (iParam0)
					{
						case 0:
							return -2442.418f, -220.1357f, 15.6274f;
						case 1:
							return -2449.4539f, -216.6807f, 15.8673f;
						default:
					}
					break;
				case 38:
					switch (iParam0)
					{
						case 0:
							return -1730.6062f, -679.282f, 9.8912f;
						case 1:
							return -1724.3989f, -684.0659f, 10.151f;
						default:
					}
					break;
				case 39:
					switch (iParam0)
					{
						case 0:
							return 1478.183f, -1019.8671f, 55.4095f;
						case 1:
							return 1471.4216f, -1023.597f, 55.1622f;
						default:
					}
					break;
			}
			break;
		case 0:
			switch (iParam2)
			{
				case 0:
					switch (iParam0)
					{
						case 0:
							return -8.169f, -84.8623f, 56.5074f;
						case 1:
							return -6.7639f, -82.4518f, 56.7987f;
						case 2:
							return -4.2651f, -83.8969f, 57.2672f;
						default:
					}
					break;
				case 1:
					switch (iParam0)
					{
						case 0:
							return 345.6744f, -186.2342f, 57.1566f;
						case 1:
							return 347.6142f, -186.9624f, 57.1554f;
						case 2:
							return 348.9586f, -189.2114f, 56.8058f;
						default:
					}
					break;
				case 2:
					switch (iParam0)
					{
						case 0:
							return -19.8287f, -1031.8419f, 27.9397f;
						case 1:
							return -20.0449f, -1033.5531f, 27.8801f;
						case 2:
							return -16.5509f, -1033.5632f, 27.929f;
						default:
					}
					break;
				case 3:
					switch (iParam0)
					{
						case 0:
							return 358.615f, -797.56f, 28.294f;
						case 1:
							return 358.027f, -795.364f, 28.295f;
						case 2:
							return 358f, -792.168f, 28.292f;
						default:
					}
					break;
				case 4:
					switch (iParam0)
					{
						case 0:
							return 256.351f, -13.115f, 72.697f;
						case 1:
							return 257.191f, -14.702f, 72.661f;
						case 2:
							return 259.617f, -16.512f, 72.64f;
						default:
					}
					break;
				case 5:
					switch (iParam0)
					{
						case 0:
							return -345.561f, 77.868f, 63.274f;
						case 1:
							return -344.042f, 77.529f, 63.302f;
						case 2:
							return -340.729f, 75.857f, 63.486f;
						default:
					}
					break;
				case 6:
					switch (iParam0)
					{
						case 0:
							return 199.41f, -1690.25f, 28.653f;
						case 1:
							return 198.018f, -1692.228f, 28.611f;
						case 2:
							return 199.354f, -1694.875f, 28.534f;
						default:
					}
					break;
				case 7:
					switch (iParam0)
					{
						case 0:
							return 186.426f, -159.329f, 55.319f;
						case 1:
							return 183.278f, -159.733f, 55.317f;
						case 2:
							return 181.53f, -158.373f, 55.317f;
						default:
					}
					break;
				case 8:
					switch (iParam0)
					{
						case 0:
							return -786.218f, -198.355f, 36.284f;
						case 1:
							return -787.212f, -196.828f, 36.284f;
						case 2:
							return -786.235f, -193.779f, 36.284f;
						default:
					}
					break;
				case 9:
					switch (iParam0)
					{
						case 0:
							return -384.7404f, -152.349f, 37.5323f;
						case 1:
							return -386.2783f, -153.2111f, 37.5323f;
						case 2:
							return -388.1436f, -148.5444f, 37.5323f;
						default:
					}
					break;
			}
			break;
		case 20:
			switch (iParam2)
			{
				case 123:
					switch (iParam0)
					{
						case 0:
							return -1020.6304f, 343.7216f, 68.5287f;
						case 1:
							return -1012.988f, 373.261f, 70.999f;
						case 2:
							return -1007.4553f, 348.8657f, 69.7952f;
						case 3:
							return -1014.7319f, 374.7997f, 70.8704f;
						default:
					}
					break;
				case 124:
					switch (iParam0)
					{
						case 0:
							return -124.9867f, 387.6605f, 111.8218f;
						case 1:
							return -123.3431f, 390.4512f, 111.7459f;
						case 2:
							return -131.0407f, 373.2224f, 111.6236f;
						case 3:
							return -132.2866f, 370.3068f, 111.5484f;
						default:
					}
					break;
				case 125:
					switch (iParam0)
					{
						case 0:
							return -164.7272f, 273.5452f, 92.4017f;
						case 1:
							return -166.8107f, 273.8469f, 92.306f;
						case 2:
							return -160.7095f, 265.9451f, 92.5231f;
						case 3:
							return -157.3334f, 265.6603f, 92.7294f;
						default:
					}
					break;
				case 126:
					switch (iParam0)
					{
						case 0:
							return -739.8737f, -125.3638f, 36.7048f;
						case 1:
							return -738.5381f, -126.6788f, 36.6286f;
						case 2:
							return -731.2865f, -140.0159f, 36.2787f;
						case 3:
							return -729.4428f, -142.9517f, 36.2278f;
						default:
					}
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

int func_457(int iParam0)//Position - 0x2B315C
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 <= 0 || iVar0 >= 10)
	{
		return 0;
	}
	return 1;
}

int func_458()//Position - 0x2BF7BE
{
	return 999999;
}

int func_459(int iParam0)//Position - 0x2C1634
{
	switch (iParam0)
	{
		case 83:
			return 377;
		case 84:
			return 378;
		case 85:
			return 379;
		case 86:
			return 380;
		case 87:
			return 381;
		default:
	}
	return 0;
}

int func_460(int iParam0)//Position - 0x2C17B2
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 <= 0 || iVar0 >= 6)
	{
		return 0;
	}
	return 1;
}

int func_461()//Position - 0x2D252B
{
	return joaat("trailers");
	return joaat("trailers4");
}

int func_462(int iParam0)//Position - 0x2F393A
{
	switch (iParam0)
	{
		case 167:
		case 178:
		case 192:
		case 225:
		case 226:
		case 229:
		case 230:
		case 233:
		case 237:
		case 250:
		case 243:
		case 158:
		case 256:
		case 258:
			return 1;
		default:
	}
	if (__LIB_0__::func_955(iParam0) == 0)
	{
		return 1;
	}
	return 0;
}

void func_463(var uParam0)//Position - 0x2F6F8E
{
	Global_1836068.f_14 = uParam0;
}

var func_464(int iParam0)//Position - 0x2F7083
{
	return Global_1892703[iParam0 /*599*/].f_10.f_58;
}

int func_465(bool bParam0)//Position - 0x2F71D9
{
	if (__LIB_0__::func_845(Global_1853348[bParam0 /*834*/].f_267.f_32, -1))
	{
		return 1;
	}
	return 0;
}

void func_466(int iParam0)//Position - 0x2F7ABC
{
	if (Global_2815059.f_5195.f_346 != iParam0)
	{
		Global_2815059.f_5195.f_346 = iParam0;
	}
}

void func_467(int iParam0)//Position - 0x2F9223
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(iParam0, true);
		VEHICLE::SET_VEHICLE_ENGINE_HEALTH(iParam0, -1000f);
	}
}

float func_468()//Position - 0x2F9439
{
	return 1.5f;
}

int func_469(bool bParam0)//Position - 0x2F9C7D
{
	if (bParam0 != -1)
	{
		return BitTest(Global_1970897[bParam0 /*68*/].f_18, 19);
	}
	return 0;
}

void func_470(struct<2> Param0)//Position - 0x2FB45C
{
	if (Global_2815059.f_6694.f_5.f_1 != Param0.f_1)
	{
		Global_2815059.f_6694.f_5 = { Param0 };
		if (__LIB_1__::func_693(Param0.f_0, 0, 1))
		{
			Global_2815059.f_6694.f_3 = __LIB_3__::func_233(Param0.f_0);
			Global_2815059.f_6694.f_4 = __LIB_5__::func_185(Param0.f_0);
			NETWORK::NETWORK_HANDLE_FROM_PLAYER(Param0.f_0, &(Global_2815059.f_6694.f_7), 13);
		}
	}
}

int func_471(int iParam0)//Position - 0x2FB6CF
{
	if (iParam0 != -1)
	{
		return Global_1975224[iParam0 /*53*/].f_5.f_35;
	}
	return 0;
}

int func_472(int iParam0)//Position - 0x2FC6CF
{
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("VehicleList", 2) && DECORATOR::DECOR_EXIST_ON(iParam0, "VehicleList"))
	{
		return 1;
	}
	return 0;
}

int func_473()//Position - 0x2FD4B5
{
	if (Global_2815059.f_6694.f_23)
	{
		return 0;
	}
	if (__LIB_2__::func_125(Global_2703735.f_4.f_16))
	{
		return 0;
	}
	if (__LIB_1__::func_958(Global_2703735.f_4.f_16))
	{
		return 0;
	}
	if (Global_1853348[Global_2703735.f_4.f_16 /*834*/] == 6)
	{
		return 0;
	}
	if (__LIB_6__::func_525(Global_2703735.f_4.f_16) || __LIB_0__::func_945())
	{
		return 0;
	}
	if (Global_1853348[Global_2703735.f_4.f_16 /*834*/].f_192 != 0)
	{
		return 0;
	}
	if (BitTest(Global_1853348[Global_2703735.f_4.f_16 /*834*/].f_833, 15) || BitTest(Global_1853348[Global_2703735.f_4.f_16 /*834*/].f_833, 14))
	{
		return 0;
	}
	if (__LIB_3__::func_728(Global_2703735.f_4.f_16, 0))
	{
		return 0;
	}
	if (__LIB_0__::func_987(Global_2703735.f_4.f_16) == joaat("WEAPON_MINIGUN"))
	{
		return 0;
	}
	if (__LIB_3__::func_598())
	{
		return 0;
	}
	if (Global_1853348[Global_2703735.f_4.f_16 /*834*/] == 5)
	{
		return 0;
	}
	if (BitTest(Global_2815059.f_428.f_5, 0))
	{
		return 0;
	}
	return 1;
}

int func_474(int iParam0)//Position - 0x301F25
{
	switch (iParam0)
	{
		case 2:
			return 11503;
		case 1:
			return 11504;
		default:
	}
	return -1;
}

bool func_475()//Position - 0x302C36
{
	return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_430 != 0;
}

void func_476(int iParam0)//Position - 0x302DC2
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_430 = iParam0;
}

int func_477(int iParam0)//Position - 0x302EA2
{
	int iVar0;
	int iVar1;
	iVar0 = PLAYER::GET_PLAYER_PED(iParam0);
	if (!PED::IS_PED_INJURED(iVar0))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iVar0))
		{
			iVar1 = PED::GET_VEHICLE_PED_IS_IN(iVar0, false);
			if (((((VEHICLE::GET_VEHICLE_CLASS(iVar1) == 8 || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("blazer")) || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("blazer3")) || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("blazer4")) || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("verus")) || (Global_262145.f_2418 /* Tunable: FORMATION_BIKE_MODEL */ != 0 && ENTITY::GET_ENTITY_MODEL(iVar1) == Global_262145.f_2418 /* Tunable: FORMATION_BIKE_MODEL */))
			{
				if (PED::IS_PED_SITTING_IN_VEHICLE(iVar0, iVar1))
				{
					if (__LIB_2__::func_837(iVar0, iVar1) == -1)
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_478(bool bParam0)//Position - 0x303025
{
	int iVar0;
	int iVar1;
	iVar0 = PLAYER::GET_PLAYER_PED(bParam0);
	if (!PED::IS_PED_INJURED(iVar0))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iVar0))
		{
			iVar1 = PED::GET_VEHICLE_PED_IS_IN(iVar0, false);
			if (VEHICLE::GET_VEHICLE_CLASS(iVar1) == 16 || (Global_262145.f_2418 /* Tunable: FORMATION_BIKE_MODEL */ != 0 && ENTITY::GET_ENTITY_MODEL(iVar1) == Global_262145.f_2418 /* Tunable: FORMATION_BIKE_MODEL */))
			{
				if (__LIB_2__::func_837(iVar0, iVar1) == -1)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_479(int iParam0, int iParam1)//Position - 0x364BE0
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iParam0))
		{
			iVar0 = ENTITY::GET_ENTITY_ATTACHED_TO(iParam0);
			if (ENTITY::DOES_ENTITY_EXIST(iVar0) && (!ENTITY::IS_ENTITY_DEAD(iVar0, false) || iParam1))
			{
				if (ENTITY::IS_ENTITY_A_VEHICLE(iVar0))
				{
					iVar1 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar0);
					if (__LIB_12__::func_381(iVar1))
					{
						VEHICLE::DETACH_VEHICLE_FROM_CARGOBOB(iVar1, iParam0);
					}
					else
					{
						VEHICLE::DETACH_VEHICLE_FROM_TRAILER(iVar1);
					}
				}
			}
		}
	}
}

float func_480(int iParam0)//Position - 0x365D6F
{
	switch (iParam0)
	{
		case -1905128202:
			return 800f;
		default:
	}
	return 400f;
}

float func_481(int iParam0)//Position - 0x365D91
{
	switch (iParam0)
	{
		case -1905128202:
			return 4500f;
		default:
	}
	return 1400f;
}

int func_482(int iParam0)//Position - 0x365DB3
{
	switch (iParam0)
	{
		case -1905128202:
			return 0;
		case 1160415507:
			return 255;
		case 1553945504:
			return 255;
		case 639967857:
			return 255;
		case -1396457166:
			return 255;
		case 303124754:
			return 255;
		case -956255885:
			return 255;
		default:
	}
	return 0;
}

void func_483(bool bParam0)//Position - 0x365F40
{
	switch (__LIB_5__::func_185(bParam0))
	{
		case 256:
			__LIB_1__::func_928(127);
			break;
		case 263:
			__LIB_1__::func_928(152);
			break;
	}
	if (__LIB_6__::func_65(bParam0, 15))
	{
		__LIB_1__::func_928(148);
	}
}

float func_484(bool bParam0)//Position - 0x365F82
{
	switch (__LIB_5__::func_185(bParam0))
	{
		case 256:
			return 1f;
		default:
	}
	return 1f;
}

int func_485(bool bParam0)//Position - 0x365FE7
{
	switch (__LIB_5__::func_185(bParam0))
	{
		case 256:
			return 765;
		case 263:
			return 813;
		case 300:
			return 326;
		default:
	}
	if (__LIB_6__::func_65(bParam0, 15))
	{
		return 794;
	}
	return 478;
}

int func_486(int iParam0)//Position - 0x36606F
{
	return 586;
}

int func_487(int iParam0)//Position - 0x36857D
{
	switch (iParam0)
	{
		case 3:
			return 1;
		default:
	}
	return 0;
}

int func_488()//Position - 0x36AAF3
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_262145.f_12838 /* Tunable: GB_NUMBER_OF_BOSSES_IN_SESSION */)
	{
		if (Global_1920255.f_11.f_132[iVar0] == -1)
		{
			return 0;
		}
		iVar0++;
	}
	return 1;
}

int func_489()//Position - 0x36C578
{
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		return __LIB_0__::func_843(PLAYER::PLAYER_PED_ID());
	}
	return 0;
}

int func_490()//Position - 0x36C597
{
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		return __LIB_0__::func_844(PLAYER::PLAYER_PED_ID());
	}
	return 0;
}

var func_491()//Position - 0x36CC86
{
	return Global_262145.f_12853 /* Tunable: GB_WAGES_AMOUNT */;
}

int func_492(int iParam0)//Position - 0x36D3C1
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 60)
	{
		if (Global_30[iVar0] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_493()//Position - 0x36D9D1
{
	Global_2815059.f_900 = 0;
	Global_2815059.f_900.f_1 = { 0f, 0f, 0f };
	Global_2815059.f_900.f_4 = 0f;
	Global_2815059.f_900.f_8 = 0;
	MISC::CLEAR_BIT(&(Global_2815059.f_900.f_7), 0);
}

bool func_494(var uParam0)//Position - 0x36E6D8
{
	return BitTest(Global_1888478.f_3, uParam0);
}

void func_495(int iParam0)//Position - 0x36F166
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_22 = iParam0;
}

int func_496()//Position - 0x3711B4
{
	return Global_1892703[__LIB_0__::func_797() /*599*/].f_10.f_76.f_2;
}

int func_497(int iParam0)//Position - 0x373CFC
{
	switch (iParam0)
	{
		case 714:
		case 718:
		case 722:
		case 726:
		case 730:
		case 734:
		case 738:
		case 918:
		case 926:
		case 934:
		case 942:
		case 1090:
		case 1060:
		case 1114:
		case 1122:
		case 1171:
		case 1185:
			return 0;
		case 715:
		case 719:
		case 723:
		case 727:
		case 731:
		case 735:
		case 739:
		case 919:
		case 927:
		case 935:
		case 943:
		case 1091:
		case 1061:
		case 1115:
		case 1123:
		case 1172:
		case 1186:
			return 1;
		case 716:
		case 720:
		case 724:
		case 728:
		case 732:
		case 736:
		case 740:
		case 920:
		case 928:
		case 936:
		case 944:
		case 1092:
		case 1062:
		case 1116:
		case 1124:
		case 1173:
		case 1187:
			return 2;
		case 717:
		case 721:
		case 725:
		case 729:
		case 733:
		case 737:
		case 741:
		case 921:
		case 929:
		case 937:
		case 945:
		case 1093:
		case 1063:
		case 1117:
		case 1125:
		case 1174:
		case 1188:
			return 3;
		case 870:
		case 874:
		case 878:
		case 882:
		case 886:
		case 890:
		case 894:
		case 922:
		case 930:
		case 938:
		case 946:
		case 1094:
		case 1064:
		case 1118:
		case 1126:
		case 1175:
		case 1189:
			return 4;
		case 871:
		case 875:
		case 879:
		case 883:
		case 887:
		case 891:
		case 895:
		case 923:
		case 931:
		case 939:
		case 947:
		case 1095:
		case 1065:
		case 1119:
		case 1127:
		case 1176:
		case 1190:
			return 5;
		case 872:
		case 876:
		case 880:
		case 884:
		case 888:
		case 892:
		case 896:
		case 924:
		case 932:
		case 940:
		case 948:
		case 1096:
		case 1066:
		case 1120:
		case 1128:
		case 1177:
		case 1191:
			return 6;
		case 873:
		case 877:
		case 881:
		case 885:
		case 889:
		case 893:
		case 897:
		case 925:
		case 933:
		case 941:
		case 949:
		case 1097:
		case 1067:
		case 1121:
		case 1129:
		case 1178:
		case 1192:
			return 7;
		default:
	}
	return -1;
}

void func_498()//Position - 0x374D3C
{
	Global_2815059.f_5195.f_2 = -1;
}

void func_499(bool bParam0)//Position - 0x375245
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 9))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 9);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 9))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 9);
	}
}

void func_500(bool bParam0)//Position - 0x3752AE
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_3, 0))
		{
			MISC::SET_BIT(&(Global_1946250.f_3), 0);
		}
	}
	else if (BitTest(Global_1946250.f_3, 0))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_3), 0);
	}
}

void func_501(bool bParam0)//Position - 0x3752EB
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 5))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 5);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 5))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 5);
	}
}

void func_502(bool bParam0)//Position - 0x375375
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_1, 31))
		{
			MISC::SET_BIT(&(Global_1946250.f_1), 31);
		}
	}
	else if (BitTest(Global_1946250.f_1, 31))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_1), 31);
	}
}

void func_503(bool bParam0)//Position - 0x3753B6
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 11))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 11);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 11))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 11);
	}
}

void func_504(bool bParam0)//Position - 0x37541F
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_1, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_1), 1);
		}
	}
	else if (BitTest(Global_1946250.f_1, 1))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_1), 1);
	}
}

void func_505(int iParam0)//Position - 0x3801F0
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_3 = iParam0;
}

int func_506()//Position - 0x380A29
{
	return Global_1892703[__LIB_0__::func_797() /*599*/].f_10.f_59;
}

void func_507()//Position - 0x3811F1
{
	Global_2815059.f_314 = 1;
	Global_2815059.f_288 = -1;
	Global_2815059.f_289 = -1;
	Global_2815059.f_292 = -1;
	Global_2815059.f_295 = -1;
}

bool func_508(var uParam0, int iParam1)//Position - 0x381D5E
{
	return BitTest(uParam0->f_1, iParam1);
}

var func_509()//Position - 0x381E26
{
	return Global_262145.f_12874 /* Tunable: GB_DISABLE_BOSS_AND_GOON */;
}

bool func_510(int iParam0)//Position - 0x381E7E
{
	return Global_262145.f_5023[3] == iParam0;
}

void func_511(int iParam0)//Position - 0x381FAA
{
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_429 != iParam0)
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_429 = iParam0;
	}
	if (Global_2715699.f_3076.f_171 != iParam0)
	{
		Global_2715699.f_3076.f_171 = iParam0;
	}
}

void func_512(int iParam0, int iParam1)//Position - 0x382C4E
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_3[iParam0] = __LIB_12__::func_629(iParam0, iParam1);
	Global_2824753.f_2[iParam0] = __LIB_12__::func_629(iParam0, iParam1);
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_11[iParam0] = __LIB_12__::func_629(iParam0, iParam1);
	Global_2824753.f_15[iParam0] = __LIB_12__::func_629(iParam0, iParam1);
}

int func_513(int iParam0)//Position - 0x3840DA
{
	switch (iParam0)
	{
		case 1:
		case 2:
			return 0;
		case 3:
			return 1;
		default:
	}
	return -1;
}

bool func_514()//Position - 0x38411E
{
	return BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_96.f_32, 3);
}

void func_515(int iParam0)//Position - 0x3856BE
{
	Global_1937088.f_427 = iParam0;
}

void func_516(int iParam0)//Position - 0x3857B3
{
	Global_1937088.f_422 = iParam0;
}

void func_517(int iParam0)//Position - 0x385B89
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_POSTITS"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_518(int iParam0)//Position - 0x385BA3
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_HIGHLIGHTS"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_519(int iParam0)//Position - 0x385BBD
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_AREAS"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_520(int iParam0)//Position - 0x385BD7
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_ARROWS"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_521(int iParam0)//Position - 0x385BF1
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_TEXT"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_522(int iParam0)//Position - 0x385C0B
{
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "REMOVE_ALL_PINS"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_523(int iParam0)//Position - 0x385C25
{
	Global_1937518.f_48 = iParam0;
}

bool func_524()//Position - 0x385C35
{
	return Global_1937518.f_48;
}

void func_525(int iParam0)//Position - 0x385C43
{
	Global_1931975.f_1717 = iParam0;
}

void func_526(int iParam0)//Position - 0x385C54
{
	Global_1931975.f_1786 = iParam0;
}

void func_527(int iParam0)//Position - 0x385C65
{
	Global_1931975.f_1784 = iParam0;
}

void func_528(int iParam0)//Position - 0x385C76
{
	Global_1931975.f_1781 = iParam0;
}

void func_529(int iParam0)//Position - 0x385C87
{
	Global_1931975.f_1780 = iParam0;
}

void func_530(int iParam0)//Position - 0x385C98
{
	Global_1931975.f_1779 = iParam0;
}

void func_531(int iParam0)//Position - 0x385CA9
{
	Global_1931975.f_1778 = iParam0;
}

void func_532()//Position - 0x385CBA
{
	Global_1931975.f_1 = 0;
}

void func_533(int iParam0)//Position - 0x385CC9
{
	Global_1931975.f_1776 = iParam0;
}

void func_534()//Position - 0x385CDA
{
	int iVar0;
	struct<17> Var1;
	iVar0 = 0;
	while (iVar0 <= 6)
	{
		Global_1931975.f_1793[iVar0 /*17*/] = { Var1 };
		iVar0++;
	}
}

void func_535()//Position - 0x385D17
{
	struct<3> Var0;
	Global_1931975.f_1693 = { Var0 };
}

void func_536(var uParam0)//Position - 0x385D2C
{
	struct<23> Var0;
	*uParam0 = { Var0 };
}

void func_537(var uParam0)//Position - 0x385D4E
{
	struct<53> Var0;
	*uParam0 = { Var0 };
}

void func_538()//Position - 0x385D60
{
	int iVar0;
	struct<5> Var1;
	iVar0 = 0;
	while (iVar0 <= 6)
	{
		Global_1931975.f_1574[iVar0 /*5*/] = { Var1 };
		iVar0++;
	}
}

void func_539()//Position - 0x385DC7
{
	struct<23> Var0;
	struct<3> Var1;
	struct<16> Var2;
	var uVar3;
	var uVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	var uVar8;
	var uVar9;
	struct<6> Var10;
	int iVar11;
	int iVar12;
	iVar11 = 0;
	while (iVar11 <= 6)
	{
		iVar12 = 0;
		while (iVar12 <= 0)
		{
			Global_1931975.f_111[iVar11 /*204*/][iVar12 /*23*/] = { Var0 };
			iVar12++;
		}
		Global_1931975.f_111[iVar11 /*204*/].f_24 = { Var1 };
		Global_1931975.f_111[iVar11 /*204*/].f_27 = { Var2 };
		Global_1931975.f_111[iVar11 /*204*/].f_43 = uVar3;
		Global_1931975.f_111[iVar11 /*204*/].f_173 = uVar4;
		Global_1931975.f_111[iVar11 /*204*/].f_174 = uVar5;
		Global_1931975.f_111[iVar11 /*204*/].f_175 = uVar6;
		Global_1931975.f_111[iVar11 /*204*/].f_176 = uVar7;
		Global_1931975.f_111[iVar11 /*204*/].f_177 = uVar8;
		Global_1931975.f_111[iVar11 /*204*/].f_178 = uVar9;
		iVar12 = 0;
		while (iVar12 <= 3)
		{
			Global_1931975.f_111[iVar11 /*204*/].f_179[iVar12 /*6*/] = { Var10 };
			iVar12++;
		}
		Global_1931975.f_1793[iVar11 /*17*/] = 0;
		iVar11++;
	}
}

void func_540(var uParam0)//Position - 0x385EC5
{
	struct<108> Var0;
	Var0 = 17;
	Var0.f_18 = 17;
	Var0.f_36 = 17;
	Var0.f_54 = 17;
	Var0.f_72 = 17;
	Var0.f_90 = 17;
	*uParam0 = { Var0 };
}

bool func_541()//Position - 0x385F13
{
	return Global_1931975.f_1775;
}

void func_542()//Position - 0x385F22
{
	Global_2715699.f_6328 = 0;
}

void func_543(int iParam0)//Position - 0x385F32
{
	Global_1937518.f_40 = iParam0;
}

void func_544()//Position - 0x385F42
{
	Global_1931975.f_1771 = 0;
}

void func_545()//Position - 0x38633F
{
	struct<141> Var0;
	Var0 = 4;
	Var0.f_63.f_2 = 5;
	Var0.f_77 = 2;
	Var0.f_82 = 4;
	Var0.f_82.f_5 = 4;
	Var0.f_82.f_10 = 5;
	Var0.f_82.f_16 = 4;
	Var0.f_82.f_21 = -1;
	Var0.f_82.f_22 = -1;
	Var0.f_109 = 4;
	Global_1933908.f_3033 = { Var0 };
}

void func_546()//Position - 0x38639B
{
	struct<5> Var0;
	Var0 = 4;
	Global_1933908.f_3014 = { Var0 };
}

void func_547()//Position - 0x3863B7
{
	struct<6> Var0;
	Var0 = 5;
	Global_1933908.f_3008 = { Var0 };
}

void func_548()//Position - 0x3863D3
{
	int iVar0;
	struct<4> Var1;
	struct<3> Var2;
	iVar0 = 0;
	while (iVar0 <= 16)
	{
		Global_1933908.f_237[iVar0 /*4*/] = { Var1 };
		Global_1933908.f_306[iVar0 /*3*/] = { Var2 };
		iVar0++;
	}
}

void func_549()//Position - 0x38640F
{
	struct<2> Var0;
	Global_1933908 = { Var0 };
}

void func_550()//Position - 0x386421
{
	int iVar0;
	struct<9> Var1;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_1933908.f_197[iVar0 /*9*/] = { Var1 };
		iVar0++;
	}
}

void func_551(int iParam0, int iParam1)//Position - 0x38644D
{
	int iVar0;
	if (iParam0 == iParam0)
	{
	}
	switch (iParam1)
	{
		case 0:
			iVar0 = 0;
			while (iVar0 <= 3)
			{
				Global_1933908.f_3033.f_82[iVar0] = -1;
				Global_1933908.f_3033.f_82.f_5[iVar0] = -1;
				iVar0++;
			}
			break;
		case 1:
			iVar0 = 0;
			while (iVar0 <= 4)
			{
				Global_1933908.f_3033.f_82.f_10[iVar0] = -1;
				iVar0++;
			}
			break;
		case 2:
			break;
	}
}

void func_552(int iParam0)//Position - 0x3864D0
{
	Global_1933908.f_2999 = iParam0;
}

void func_553(int iParam0)//Position - 0x3865D2
{
	Global_1933908.f_2768 = iParam0;
}

void func_554(int iParam0)//Position - 0x38674E
{
	Global_2727088 = iParam0;
}

bool func_555()//Position - 0x386C91
{
	return Global_2727088;
}

void func_556(int iParam0)//Position - 0x386C9D
{
	if (iParam0 == 1)
	{
		Global_1836593 = 1;
	}
	else
	{
		Global_1836593 = 0;
	}
}

var func_557()//Position - 0x392D3F
{
	return BitTest(Global_2714762, 29);
}

var func_558()//Position - 0x392F7F
{
	return Global_2714762.f_846;
}

void func_559(bool bParam0)//Position - 0x39356A
{
	if (bParam0)
	{
		Global_2714762.f_853 = 1;
	}
	else
	{
		Global_2714762.f_853 = 0;
	}
}

bool func_560()//Position - 0x3935C1
{
	return BitTest(Global_1922761, 30);
}

void func_561(int iParam0)//Position - 0x3935D0
{
	Global_2715699.f_6328 = iParam0;
}

void func_562(int iParam0)//Position - 0x3937C0
{
	if (iParam0 == 79)
	{
		if (!STREAMING::IS_IPL_ACTIVE("apa_stilt_ch2_09c_int"))
		{
			STREAMING::REQUEST_IPL("apa_stilt_ch2_09c_int");
		}
	}
}

int func_563(int iParam0)//Position - 0x3960CB
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
		switch (iVar0)
		{
			case joaat("bruiser"):
			case joaat("bruiser2"):
			case joaat("bruiser3"):
			case joaat("brutus"):
			case joaat("brutus2"):
			case joaat("brutus3"):
			case joaat("cerberus"):
			case joaat("cerberus2"):
			case joaat("cerberus3"):
			case joaat("deathbike"):
			case joaat("deathbike2"):
			case joaat("deathbike3"):
			case joaat("dominator4"):
			case joaat("dominator5"):
			case joaat("dominator6"):
			case joaat("impaler2"):
			case joaat("impaler3"):
			case joaat("impaler4"):
			case joaat("imperator"):
			case joaat("imperator2"):
			case joaat("imperator3"):
			case joaat("issi4"):
			case joaat("issi5"):
			case joaat("issi6"):
			case joaat("monster3"):
			case joaat("monster4"):
			case joaat("monster5"):
			case joaat("scarab"):
			case joaat("scarab2"):
			case joaat("scarab3"):
			case joaat("slamvan4"):
			case joaat("slamvan5"):
			case joaat("slamvan6"):
			case joaat("zr380"):
			case joaat("zr3802"):
			case joaat("zr3803"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 37) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 42) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 43) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 44) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 45) > -1)
				{
					return 1;
				}
				break;
			case joaat("mule4"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 1) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("pounder2"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 2) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("rcbandito"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 8) > -1)
				{
					return 1;
				}
				break;
			case joaat("revolter"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("savestra"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("speedo4"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("viseris"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("deluxo"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("comet4"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("cuban800"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				break;
			case joaat("havok"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("rogue"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 5) > -1)
				{
					return 1;
				}
				break;
			case joaat("seabreeze"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("thruster"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				break;
			case joaat("jb7002"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) > -1)
				{
					return 1;
				}
				break;
			case joaat("champion"):
			case joaat("deity"):
			case joaat("granger2"):
			case joaat("buffalo4"):
			case joaat("patriot3"):
			case joaat("jubilee"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 45) > -1)
				{
					return 1;
				}
				break;
			case joaat("greenwood"):
			case joaat("omnisegt"):
				if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
				{
					return 1;
				}
				break;
		}
	}
	return 0;
}

int func_564(bool bParam0)//Position - 0x398345
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_PED(bParam0);
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (!PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::GET_PLAYER_PED(bParam0), Global_2715699.f_6007.f_257))
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_565()//Position - 0x398386
{
	int iVar0;
	int iVar1[32];
	int iVar2;
	iVar0 = 0;
	while (iVar0 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(iVar0))
		{
			iVar1[iVar2] = iVar0;
			iVar2++;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < iVar2)
	{
		if (iVar1[iVar0] == NETWORK::PARTICIPANT_ID())
		{
			switch (iVar0)
			{
				case 0:
					return -1;
				case 1:
					return 0;
				case 2:
					return 1;
				case 3:
					return 2;
				case 4:
					return 3;
				case 5:
					return 4;
				case 6:
					return 5;
				case 7:
					return 6;
				case 8:
					return 7;
				case 9:
					return 8;
				}
			default:
		}
		iVar0++;
	}
	return -2;
}

int func_566(int iParam0)//Position - 0x3989AD
{
	switch (iParam0)
	{
		case 4:
		case 3:
			return 1;
		default:
	}
	return 0;
}

bool func_567()//Position - 0x398E02
{
	return Global_2714762.f_867;
}

bool func_568()//Position - 0x399689
{
	return Global_2714762.f_877;
}

void func_569()//Position - 0x399D3E
{
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_36.f_18), 16);
}

bool func_570()//Position - 0x399D5B
{
	return BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_36.f_18, 16);
}

void func_571()//Position - 0x399F93
{
	Global_2714762.f_877 = 0;
}

int func_572(int iParam0, int iParam1)//Position - 0x39A632
{
	int iVar0;
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 8:
					iVar0 = 4;
					break;
				default:
					if (__LIB_17__::func_932() || __LIB_25__::func_196())
					{
						iVar0 = 4;
					}
					else
					{
						iVar0 = 0;
					}
					break;
			}
			break;
	}
	return iVar0;
}

var func_573()//Position - 0x39BA17
{
	return Global_2714762.f_16;
}

Vector3 func_574(int iParam0, int iParam1)//Position - 0x39BD03
{
	switch (iParam0)
	{
		case 11:
			return -1370.3983f, 56.4489f, 52.5023f;
			break;
		case 122:
			return -1154.8163f, -2716.453f, 18.8923f;
			break;
		case 13:
			switch (iParam1)
			{
				case 0:
					return 16.3823f, -1099.9557f, 28.797f;
				case 1:
					return 817.6979f, -2161.9824f, 28.619f;
				default:
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					return -1162.5516f, -1628.3932f, 3.3739f;
				case 1:
					return 479.8226f, -234.8953f, 52.7934f;
				case 2:
					return -1237.3899f, 333.6207f, 78.9863f;
				case 3:
					return -2870.1614f, 9.0811f, 10.6081f;
				case 4:
					return -939.5128f, -1255.6967f, 6.9671f;
				case 5:
					return -1618.9148f, 249.326f, 58.5552f;
				case 6:
					return -1369.9988f, -117.22f, 49.7046f;
				default:
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 0:
					return 904.329f, -173.7431f, 73.0754f;
				case 1:
					return 1440.432f, -2215.5957f, 60.133f;
				case 2:
					return -83.8271f, -1330.8877f, 28.2913f;
				case 3:
					return 366.4715f, -2446.2266f, 5.1129f;
				case 4:
					return 1222.72f, 2721.2f, 37.0042f;
				case 5:
					return 1051.4794f, 2667.2903f, 38.5509f;
				case 6:
					return 273.371f, 2607.7676f, 43.7028f;
				case 7:
					return -193.7423f, 6277.6753f, 30.4892f;
				case 8:
					return 1687.1375f, 4966.838f, 42.0569f;
				case 9:
					return 2343.9714f, 3134.054f, 47.2088f;
				default:
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					return 1994.7828f, 3049.323f, 46.1123f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

bool func_575(bool bParam0)//Position - 0x39BFDF
{
	return Global_2689235[bParam0 /*453*/].f_119 == 3;
}

bool func_576(bool bParam0)//Position - 0x39BFF4
{
	return Global_2689235[bParam0 /*453*/].f_119 == 1;
}

int func_577()//Position - 0x3A60A2
{
	return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295;
}

int func_578(int iParam0)//Position - 0x3A869C
{
	if (iParam0 == -1)
	{
		return 0;
	}
	if (iParam0 >= 83 && iParam0 <= 87)
	{
		return 1;
	}
	return 0;
}

void func_579(bool bParam0)//Position - 0x3ABE8C
{
	if (bParam0 < 32)
	{
		if (!BitTest(Global_2703735.f_61.f_11, bParam0))
		{
			MISC::SET_BIT(&(Global_2703735.f_61.f_11), bParam0);
		}
	}
	else if (!BitTest(Global_2703735.f_61.f_12, (bParam0 - 32)))
	{
		MISC::SET_BIT(&(Global_2703735.f_61.f_12), (bParam0 - 32));
	}
}

int func_580()//Position - 0x3ABF9F
{
	if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) == __LIB_0__::func_878())
	{
		if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_53) && NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_53))
		{
			return NETWORK::NET_TO_VEH(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_53);
		}
	}
	return Global_2815059.f_325;
}

void func_581(bool bParam0)//Position - 0x3ACC13
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 11))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 11);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 11))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 11);
	}
}

void func_582(int iParam0)//Position - 0x3B09EB
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_173[iParam0]))
	{
		if (!ENTITY::IS_ENTITY_DEAD(Global_2703735.f_173[iParam0], false))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Global_2703735.f_173[iParam0]))
			{
				if (VEHICLE::HAS_VEHICLE_PETROLTANK_SET_ON_FIRE_BY_ENTITY(Global_2703735.f_173[iParam0], Global_2703735.f_172))
				{
					VEHICLE::CLEAR_VEHICLE_PETROLTANK_FIRE_CULPRIT(Global_2703735.f_173[iParam0]);
				}
			}
		}
	}
}

int func_583()//Position - 0x3B1DB3
{
	if (CAM::DOES_CAM_EXIST(Global_2725863) && CAM::IS_CAM_ACTIVE(Global_2725863))
	{
		return 1;
	}
	return 0;
}

int func_584(int iParam0, int iParam1)//Position - 0x3B3D26
{
	int iVar0;
	int iVar1;
	iVar0 = Global_2826809[iParam0 /*3*/][__LIB_1__::func_27(iParam1)];
	iVar1 = 0;
	iVar1 = (iVar1 + STATS::STAT_GET_NUMBER_OF_DAYS(iVar0) * 1440);
	iVar1 = (iVar1 + STATS::STAT_GET_NUMBER_OF_HOURS(iVar0) * 60);
	iVar1 = (iVar1 + STATS::STAT_GET_NUMBER_OF_MINUTES(iVar0));
	return iVar1;
}

void func_585(int iParam0, var uParam1, var uParam2)//Position - 0x3B42A0
{
	switch (iParam0)
	{
		case 87:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 8))
			{
				case 0:
					*uParam1 = { -1605.148f, -552.5016f, 33.4606f };
					*uParam2 = 309.4211f;
					break;
				case 1:
					*uParam1 = { -1616.306f, -561.6959f, 32.9867f };
					*uParam2 = 309.4369f;
					break;
				case 2:
					*uParam1 = { -1582.6805f, -534.1682f, 34.4171f };
					*uParam2 = 307.8589f;
					break;
				case 3:
					*uParam1 = { -1619.6575f, -531.5862f, 33.4254f };
					*uParam2 = 128.9132f;
					break;
				case 4:
					*uParam1 = { -1560.2571f, -532.3268f, 34.5436f };
					*uParam2 = 216.0882f;
					break;
				case 5:
					*uParam1 = { -1553.6981f, -541.3412f, 33.8662f };
					*uParam2 = 215.8465f;
					break;
				case 6:
					*uParam1 = { -1611.769f, -601.588f, 31.2908f };
					*uParam2 = 50.7362f;
					break;
				case 7:
					*uParam1 = { -1600.63f, -610.1141f, 30.5087f };
					*uParam2 = 51.7297f;
					break;
			}
			break;
		case 88:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 8))
			{
				case 0:
					*uParam1 = { -1390.6045f, -528.6405f, 29.8387f };
					*uParam2 = 35.4572f;
					break;
				case 1:
					*uParam1 = { -1357.0851f, -531.4611f, 29.7218f };
					*uParam2 = 125.0906f;
					break;
				case 2:
					*uParam1 = { -1346.2356f, -523.9114f, 30.6f };
					*uParam2 = 124.7302f;
					break;
				case 3:
					*uParam1 = { -1337.8523f, -518.1096f, 31.2329f };
					*uParam2 = 124.6998f;
					break;
				case 4:
					*uParam1 = { -1336.3901f, -556.0637f, 29.7514f };
					*uParam2 = 33.8088f;
					break;
				case 5:
					*uParam1 = { -1340.2145f, -508.9828f, 31.4089f };
					*uParam2 = 98.7714f;
					break;
				case 6:
					*uParam1 = { -1348.6066f, -510.3536f, 30.9263f };
					*uParam2 = 99.2425f;
					break;
				case 7:
					*uParam1 = { -1380.7642f, -536.3867f, 29.3128f };
					*uParam2 = 563.6203f;
					break;
			}
			break;
		case 89:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 8))
			{
				case 0:
					*uParam1 = { -108.2604f, -613.6386f, 35.055f };
					*uParam2 = 160.8063f;
					break;
				case 1:
					*uParam1 = { -103.0375f, -598.4797f, 35.0538f };
					*uParam2 = 161.1968f;
					break;
				case 2:
					*uParam1 = { -112.84f, -629.6357f, 35.0662f };
					*uParam2 = 174.9843f;
					break;
				case 3:
					*uParam1 = { -98.7403f, -590.3209f, 35.075f };
					*uParam2 = 139.7632f;
					break;
				case 4:
					*uParam1 = { -98.3748f, -612.642f, 35.137f };
					*uParam2 = 161.1124f;
					break;
				case 5:
					*uParam1 = { -92.595f, -595.4065f, 35.1888f };
					*uParam2 = 161.3083f;
					break;
				case 6:
					*uParam1 = { -104.4742f, -630.1472f, 35.1396f };
					*uParam2 = 161.184f;
					break;
				case 7:
					*uParam1 = { -74.1068f, -619.9417f, 35.1488f };
					*uParam2 = 340.9123f;
					break;
			}
			break;
		case 90:
			switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 8))
			{
				case 0:
					*uParam1 = { -59.684f, -779.4568f, 43.114f };
					*uParam2 = 228.7591f;
					break;
				case 1:
					*uParam1 = { -52.7425f, -784.7151f, 43.1134f };
					*uParam2 = 237.7756f;
					break;
				case 2:
					*uParam1 = { -45.2736f, -788.4313f, 43.1133f };
					*uParam2 = 250.2438f;
					break;
				case 3:
					*uParam1 = { -35.9308f, -789.8549f, 43.1167f };
					*uParam2 = 271.1923f;
					break;
				case 4:
					*uParam1 = { -64.6911f, -762.4548f, 43.1316f };
					*uParam2 = 35.6897f;
					break;
				case 5:
					*uParam1 = { -24.9853f, -786.8022f, 43.1163f };
					*uParam2 = 297.8276f;
					break;
				case 6:
					*uParam1 = { -86.2083f, -739.3044f, 43.0546f };
					*uParam2 = 204.9405f;
					break;
				case 7:
					*uParam1 = { -9.239f, -773.0505f, 43.0788f };
					*uParam2 = 318.0367f;
					break;
			}
			break;
	}
}

int func_586()//Position - 0x3B58D2
{
	return joaat("dinghy4");
}

int func_587(int iParam0)//Position - 0x3B5E23
{
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("UsingForTimeTrial", 2))
	{
		if (DECORATOR::DECOR_EXIST_ON(iParam0, "UsingForTimeTrial"))
		{
			return DECORATOR::DECOR_GET_BOOL(iParam0, "UsingForTimeTrial");
		}
	}
	return 0;
}

void func_588(int iParam0)//Position - 0x3B5EF7
{
	if ((ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) && VEHICLE::GET_NUM_MOD_KITS(iParam0) != 0)
	{
		if (!Global_262145.f_13160 /* Tunable: TOGGLE_XMAS2015_HORNS */ && Global_262145.f_2339 == 0)
		{
			switch (VEHICLE::GET_VEHICLE_MOD_IDENTIFIER_HASH(iParam0, 14, VEHICLE::GET_VEHICLE_MOD(iParam0, 14)))
			{
				case joaat("XM15_HORN_01"):
				case joaat("XM15_HORN_02"):
				case joaat("XM15_HORN_03"):
				case joaat("XM15_HORN_01_PREVIEW"):
				case joaat("XM15_HORN_02_PREVIEW"):
				case joaat("XM15_HORN_03_PREVIEW"):
					VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 14);
					break;
				}
			}
	}
}

void func_589(int iParam0, var uParam1, var uParam2)//Position - 0x3B668E
{
	if (iParam0 < 0 || iParam0 > 75)
	{
	}
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -2177.923f, 1107.9287f, -24.3563f };
			*uParam2 = 268.6074f;
			break;
		case 1:
			*uParam1 = { -2177.8303f, 1103.9323f, -24.3537f };
			*uParam2 = 274.427f;
			break;
		case 2:
			*uParam1 = { -2165.4531f, 1116.0776f, -24.358f };
			*uParam2 = 90.1466f;
			break;
		case 3:
			*uParam1 = { -2165.298f, 1112.5342f, -24.3572f };
			*uParam2 = 84.8473f;
			break;
		case 4:
			*uParam1 = { -2165.4578f, 1098.2908f, -24.3506f };
			*uParam2 = 108.7881f;
			break;
		case 5:
			*uParam1 = { -2165.422f, 1093.5231f, -24.3501f };
			*uParam2 = 76.1524f;
			break;
		case 6:
			*uParam1 = { -2165.4844f, 1119.5422f, -24.3574f };
			*uParam2 = 93.5614f;
			break;
		case 7:
			*uParam1 = { -2177.5957f, 1096.2678f, -24.3518f };
			*uParam2 = 271.8291f;
			break;
		case 8:
			*uParam1 = { -2200.1125f, 1126.0621f, -23.2453f };
			*uParam2 = 270.0032f;
			break;
		case 9:
			*uParam1 = { -2177.8289f, 1116.0764f, -24.3584f };
			*uParam2 = 269.9901f;
			break;
		case 10:
			*uParam1 = { -2177.5747f, 1112.5581f, -24.3582f };
			*uParam2 = 273.7864f;
			break;
		case 11:
			*uParam1 = { -2177.9053f, 1119.5828f, -24.3586f };
			*uParam2 = 264.7997f;
			break;
		case 12:
			*uParam1 = { -2158.2222f, 1116.0182f, -24.358f };
			*uParam2 = 270.0084f;
			break;
		case 13:
			*uParam1 = { -2158.2637f, 1119.523f, -24.3575f };
			*uParam2 = 265.0304f;
			break;
		case 14:
			*uParam1 = { -2158.0806f, 1112.5876f, -24.3572f };
			*uParam2 = 273.4794f;
			break;
		case 15:
			*uParam1 = { -2158.2239f, 1096.0312f, -24.3512f };
			*uParam2 = 270.0067f;
			break;
		case 16:
			*uParam1 = { -2158.1777f, 1092.5867f, -24.3501f };
			*uParam2 = 272.9506f;
			break;
		case 17:
			*uParam1 = { -2158.24f, 1099.5592f, -24.3512f };
			*uParam2 = 264.8289f;
			break;
		case 18:
			*uParam1 = { -2165.433f, 1086.0717f, -24.3499f };
			*uParam2 = 90.0032f;
			break;
		case 19:
			*uParam1 = { -2165.375f, 1089.5092f, -24.3498f };
			*uParam2 = 92.9855f;
			break;
		case 20:
			*uParam1 = { -2165.3408f, 1082.5454f, -24.3491f };
			*uParam2 = 84.9266f;
			break;
		case 21:
			*uParam1 = { -2158.156f, 1088.0164f, -24.3497f };
			*uParam2 = 275.9615f;
			break;
		case 22:
			*uParam1 = { -2158.2715f, 1084.2714f, -24.3493f };
			*uParam2 = 280.2039f;
			break;
		case 23:
			*uParam1 = { -2165.6335f, 1123.957f, -24.3583f };
			*uParam2 = 94.6246f;
			break;
		case 24:
			*uParam1 = { -2165.5767f, 1127.793f, -24.3584f };
			*uParam2 = 93.3687f;
			break;
		case 25:
			*uParam1 = { -2157.9446f, 1123.8267f, -24.3582f };
			*uParam2 = 284.7038f;
			break;
		case 26:
			*uParam1 = { -2157.9692f, 1128.2184f, -24.3584f };
			*uParam2 = 256.278f;
			break;
		case 27:
			*uParam1 = { -2177.767f, 1123.877f, -24.3588f };
			*uParam2 = 267.9635f;
			break;
		case 28:
			*uParam1 = { -2177.743f, 1128.0851f, -24.359f };
			*uParam2 = 267.4383f;
			break;
		case 29:
			*uParam1 = { -2144.9077f, 1094.907f, -24.3527f };
			*uParam2 = 88.7829f;
			break;
		case 30:
			*uParam1 = { -2145.0547f, 1091.4614f, -24.3521f };
			*uParam2 = 90.6067f;
			break;
		case 31:
			*uParam1 = { -2144.8313f, 1098.4993f, -24.3562f };
			*uParam2 = 90.1856f;
			break;
		case 32:
			*uParam1 = { -2144.9692f, 1087.9535f, -24.3517f };
			*uParam2 = 89.9745f;
			break;
		case 33:
			*uParam1 = { -2144.996f, 1084.4882f, -24.3513f };
			*uParam2 = 90.6556f;
			break;
		case 34:
			*uParam1 = { -2145.0771f, 1081.0107f, -24.3509f };
			*uParam2 = 88.6687f;
			break;
		case 35:
			*uParam1 = { -2145.183f, 1077.522f, -24.3505f };
			*uParam2 = 88.973f;
			break;
		case 36:
			*uParam1 = { -2145.0715f, 1133.0488f, -24.3584f };
			*uParam2 = 90.7486f;
			break;
		case 37:
			*uParam1 = { -2144.881f, 1136.5107f, -24.3584f };
			*uParam2 = 89.5743f;
			break;
		case 38:
			*uParam1 = { -2145.058f, 1139.9875f, -24.3584f };
			*uParam2 = 90.0032f;
			break;
		case 39:
			*uParam1 = { -2144.95f, 1129.4253f, -24.3584f };
			*uParam2 = 89.4755f;
			break;
		case 40:
			*uParam1 = { -2144.8835f, 1143.4878f, -24.3584f };
			*uParam2 = 90.7583f;
			break;
		case 41:
			*uParam1 = { -2145.039f, 1146.9966f, -24.3584f };
			*uParam2 = 92.1478f;
			break;
		case 42:
			*uParam1 = { -2177.7144f, 1134.1493f, -24.3593f };
			*uParam2 = 262.7999f;
			break;
		case 43:
			*uParam1 = { -2177.5146f, 1138.0248f, -24.3594f };
			*uParam2 = 259.8243f;
			break;
		case 44:
			*uParam1 = { -2177.5696f, 1088.3298f, -24.3522f };
			*uParam2 = 274.1133f;
			break;
		case 45:
			*uParam1 = { -2177.8508f, 1084.0895f, -24.3526f };
			*uParam2 = 282.4535f;
			break;
		case 46:
			*uParam1 = { -2187.4548f, 1103.331f, -23.2461f };
			*uParam2 = 92.336f;
			break;
		case 47:
			*uParam1 = { -2187.6548f, 1107.0391f, -23.2461f };
			*uParam2 = 92.2579f;
			break;
		case 48:
			*uParam1 = { -2187.6829f, 1110.595f, -23.2461f };
			*uParam2 = 93.1824f;
			break;
		case 49:
			*uParam1 = { -2187.5513f, 1114.069f, -23.2461f };
			*uParam2 = 89.229f;
			break;
		case 50:
			*uParam1 = { -2187.5925f, 1117.567f, -23.2461f };
			*uParam2 = 89.9956f;
			break;
		case 51:
			*uParam1 = { -2187.6853f, 1121.0276f, -23.2462f };
			*uParam2 = 90.0083f;
			break;
		case 52:
			*uParam1 = { -2187.3738f, 1124.541f, -23.2462f };
			*uParam2 = 91.5539f;
			break;
		case 53:
			*uParam1 = { -2187.5918f, 1128.0433f, -23.2463f };
			*uParam2 = 91.7091f;
			break;
		case 54:
			*uParam1 = { -2187.7708f, 1131.5052f, -23.2463f };
			*uParam2 = 93.1601f;
			break;
		case 55:
			*uParam1 = { -2187.567f, 1135.1608f, -23.2464f };
			*uParam2 = 94.9238f;
			break;
		case 56:
			*uParam1 = { -2187.6206f, 1138.7238f, -23.2464f };
			*uParam2 = 97.1151f;
			break;
		case 57:
			*uParam1 = { -2177.6123f, 1092.7548f, -24.3519f };
			*uParam2 = 272.2261f;
			break;
		case 58:
			*uParam1 = { -2200.002f, 1129.5577f, -23.2452f };
			*uParam2 = 265.2113f;
			break;
		case 59:
			*uParam1 = { -2199.9753f, 1122.6279f, -23.2451f };
			*uParam2 = 272.6231f;
			break;
		case 60:
			*uParam1 = { -2199.8738f, 1118.5548f, -23.2458f };
			*uParam2 = 259.0827f;
			break;
		case 61:
			*uParam1 = { -2199.789f, 1114.1665f, -23.2457f };
			*uParam2 = 289.0927f;
			break;
		case 62:
			*uParam1 = { -2187.3303f, 1094.161f, -23.246f };
			*uParam2 = 90.1848f;
			break;
		case 63:
			*uParam1 = { -2187.704f, 1090.5686f, -23.2459f };
			*uParam2 = 87.9952f;
			break;
		case 64:
			*uParam1 = { -2187.4436f, 1086.759f, -23.2459f };
			*uParam2 = 90.8072f;
			break;
		case 65:
			*uParam1 = { -2187.459f, 1083.1962f, -23.2459f };
			*uParam2 = 88.5089f;
			break;
		case 66:
			*uParam1 = { -2199.7505f, 1088.7549f, -23.2451f };
			*uParam2 = 263.4081f;
			break;
		case 67:
			*uParam1 = { -2199.968f, 1085.06f, -23.2449f };
			*uParam2 = 271.1517f;
			break;
		case 68:
			*uParam1 = { -2207.1748f, 1086.0065f, -23.2452f };
			*uParam2 = 90.0083f;
			break;
		case 69:
			*uParam1 = { -2207.0752f, 1089.484f, -23.2453f };
			*uParam2 = 92.8786f;
			break;
		case 70:
			*uParam1 = { -2206.9995f, 1082.4727f, -23.2451f };
			*uParam2 = 82.896f;
			break;
		case 71:
			*uParam1 = { -2207.2773f, 1117.6952f, -23.2459f };
			*uParam2 = 83.0709f;
			break;
		case 72:
			*uParam1 = { -2207.337f, 1114.0239f, -23.2459f };
			*uParam2 = 85.0167f;
			break;
		case 73:
			*uParam1 = { -2207.2214f, 1126.0583f, -23.2455f };
			*uParam2 = 90.0112f;
			break;
		case 74:
			*uParam1 = { -2207.2012f, 1129.4874f, -23.2452f };
			*uParam2 = 92.5523f;
			break;
		case 75:
			*uParam1 = { -2207.1748f, 1122.5454f, -23.2454f };
			*uParam2 = 85.2016f;
			break;
	}
}

void func_590(int iParam0, var uParam1, var uParam2)//Position - 0x3B774D
{
	if (iParam0 < 0 || iParam0 >= 32)
	{
	}
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -2207.205f, 1082.839f, -23.245f };
			*uParam2 = 89.8165f;
			break;
		case 1:
			*uParam1 = { -2207.2764f, 1119.3687f, -23.2458f };
			*uParam2 = 94.1574f;
			break;
		case 2:
			*uParam1 = { -2200.1663f, 1129.3817f, -23.2459f };
			*uParam2 = 266.2454f;
			break;
		case 3:
			*uParam1 = { -2200.1646f, 1122.7738f, -23.2458f };
			*uParam2 = 274.9218f;
			break;
		case 4:
			*uParam1 = { -2199.8408f, 1114.1814f, -23.2457f };
			*uParam2 = 289.5377f;
			break;
		case 5:
			*uParam1 = { -2199.968f, 1085.91f, -23.2449f };
			*uParam2 = 271.1524f;
			break;
		case 6:
			*uParam1 = { -2187.2437f, 1086.509f, -23.2459f };
			*uParam2 = 89.2808f;
			break;
		case 7:
			*uParam1 = { -2187.223f, 1096.2552f, -23.2459f };
			*uParam2 = 90.0973f;
			break;
		case 8:
			*uParam1 = { -2187.221f, 1109.4031f, -23.246f };
			*uParam2 = 90.0861f;
			break;
		case 9:
			*uParam1 = { -2187.2178f, 1113.3162f, -23.246f };
			*uParam2 = 89.9458f;
			break;
		case 10:
			*uParam1 = { -2187.2432f, 1123.498f, -23.2461f };
			*uParam2 = 87.9961f;
			break;
		case 11:
			*uParam1 = { -2187.2666f, 1133.658f, -23.2462f };
			*uParam2 = 92.7388f;
			break;
		case 12:
			*uParam1 = { -2187.3206f, 1137.5746f, -23.2463f };
			*uParam2 = 97.1167f;
			break;
		case 13:
			*uParam1 = { -2177.9417f, 1129.5597f, -24.3591f };
			*uParam2 = 263.7643f;
			break;
		case 14:
			*uParam1 = { -2178.0034f, 1122.8582f, -24.3587f };
			*uParam2 = 272.4356f;
			break;
		case 15:
			*uParam1 = { -2177.9775f, 1119.253f, -24.3585f };
			*uParam2 = 267.4824f;
			break;
		case 16:
			*uParam1 = { -2177.5938f, 1089.43f, -24.3521f };
			*uParam2 = 265.5634f;
			break;
		case 17:
			*uParam1 = { -2178.0244f, 1085.9397f, -24.3524f };
			*uParam2 = 269.9026f;
			break;
		case 18:
			*uParam1 = { -2165.5347f, 1086.2345f, -24.3499f };
			*uParam2 = 90.0032f;
			break;
		case 19:
			*uParam1 = { -2165.5386f, 1092.881f, -24.3507f };
			*uParam2 = 89.3829f;
			break;
		case 20:
			*uParam1 = { -2165.3418f, 1119.4221f, -24.358f };
			*uParam2 = 94.842f;
			break;
		case 21:
			*uParam1 = { -2158.2222f, 1116.167f, -24.3579f };
			*uParam2 = 270f;
			break;
		case 22:
			*uParam1 = { -2157.9243f, 1096.0303f, -24.3511f };
			*uParam2 = 271.1076f;
			break;
		case 23:
			*uParam1 = { -2158.1719f, 1082.7079f, -24.3496f };
			*uParam2 = 273.5204f;
			break;
		case 24:
			*uParam1 = { -2145.0786f, 1081.7378f, -24.3508f };
			*uParam2 = 90.1881f;
			break;
		case 25:
			*uParam1 = { -2144.8984f, 1085.2372f, -24.3513f };
			*uParam2 = 90.8336f;
			break;
		case 26:
			*uParam1 = { -2144.9094f, 1094.9059f, -24.3526f };
			*uParam2 = 88.7821f;
			break;
		case 27:
			*uParam1 = { -2144.8303f, 1098.4979f, -24.3613f };
			*uParam2 = 90.1619f;
			break;
		case 28:
			*uParam1 = { -2144.9502f, 1129.4254f, -24.3583f };
			*uParam2 = 89.4786f;
			break;
		case 29:
			*uParam1 = { -2145.0723f, 1133.0488f, -24.3583f };
			*uParam2 = 90.7479f;
			break;
		case 30:
			*uParam1 = { -2145.058f, 1139.9121f, -24.3584f };
			*uParam2 = 90.0032f;
			break;
		case 31:
			*uParam1 = { -2144.8838f, 1143.4117f, -24.3583f };
			*uParam2 = 90.7666f;
			break;
	}
}

void func_591(int iParam0, var uParam1, var uParam2)//Position - 0x3B80B2
{
	if (iParam0 < 0 || iParam0 > 31)
	{
	}
	switch (iParam0)
	{
		case 0:
			*uParam1 = { 1380.2461f, 221.1936f, -49.8f };
			*uParam2 = 268.1998f;
			break;
		case 1:
			*uParam1 = { 1380.4011f, 225.542f, -49.8f };
			*uParam2 = 90.5987f;
			break;
		case 2:
			*uParam1 = { 1394.024f, 204.5864f, -49.8f };
			*uParam2 = 92.1979f;
			break;
		case 3:
			*uParam1 = { 1394.2318f, 237.6428f, -49.8f };
			*uParam2 = 90.5988f;
			break;
		case 4:
			*uParam1 = { 1393.9592f, 229.3572f, -49.8f };
			*uParam2 = 93.5988f;
			break;
		case 5:
			*uParam1 = { 1366.3976f, 237.6949f, -49.8f };
			*uParam2 = 271.1988f;
			break;
		case 6:
			*uParam1 = { 1366.1423f, 229.3788f, -49.8f };
			*uParam2 = 268.5987f;
			break;
		case 7:
			*uParam1 = { 1380.4966f, 237.8432f, -49.9944f };
			*uParam2 = 88.3985f;
			break;
		case 8:
			*uParam1 = { 1380.3802f, 242.2101f, -49.9944f };
			*uParam2 = 270.9987f;
			break;
		case 9:
			*uParam1 = { 1380.273f, 208.8658f, -49.8f };
			*uParam2 = 272.3987f;
			break;
		case 10:
			*uParam1 = { 1366.0927f, 212.7634f, -49.8f };
			*uParam2 = 271.3987f;
			break;
		case 11:
			*uParam1 = { 1394.1305f, 225.191f, -49.8f };
			*uParam2 = 91.1988f;
			break;
		case 12:
			*uParam1 = { 1394.1263f, 221.2237f, -49.8f };
			*uParam2 = 90.3988f;
			break;
		case 13:
			*uParam1 = { 1366.1472f, 225.3195f, -49.8f };
			*uParam2 = 269.9988f;
			break;
		case 14:
			*uParam1 = { 1366.2468f, 221.0986f, -49.8f };
			*uParam2 = 270.1987f;
			break;
		case 15:
			*uParam1 = { 1366.4098f, 233.5972f, -49.8f };
			*uParam2 = 273.1988f;
			break;
		case 16:
			*uParam1 = { 1394.0109f, 233.4561f, -49.8f };
			*uParam2 = 88.3988f;
			break;
		case 17:
			*uParam1 = { 1394.0236f, 241.9537f, -49.8f };
			*uParam2 = 91.5988f;
			break;
		case 18:
			*uParam1 = { 1394.3064f, 246.0886f, -49.8f };
			*uParam2 = 93.9989f;
			break;
		case 19:
			*uParam1 = { 1366.3137f, 241.8321f, -49.8f };
			*uParam2 = 270.3987f;
			break;
		case 20:
			*uParam1 = { 1366.1464f, 246.3231f, -49.8f };
			*uParam2 = 265.3989f;
			break;
		case 21:
			*uParam1 = { 1366.4662f, 250.4494f, -49.8f };
			*uParam2 = 273.1988f;
			break;
		case 22:
			*uParam1 = { 1366.0286f, 254.7411f, -49.8f };
			*uParam2 = 266.9988f;
			break;
		case 23:
			*uParam1 = { 1394.0731f, 250.5416f, -49.8f };
			*uParam2 = 89.9988f;
			break;
		case 24:
			*uParam1 = { 1394.0795f, 254.6635f, -49.8f };
			*uParam2 = 93.7988f;
			break;
		case 25:
			*uParam1 = { 1394.1858f, 208.5477f, -49.8f };
			*uParam2 = 91.7988f;
			break;
		case 26:
			*uParam1 = { 1394.0452f, 216.6876f, -49.8f };
			*uParam2 = 88.3988f;
			break;
		case 27:
			*uParam1 = { 1366.27f, 217.0924f, -49.8f };
			*uParam2 = 271.9987f;
			break;
		case 28:
			*uParam1 = { 1366.0999f, 208.6777f, -49.8f };
			*uParam2 = 269.3986f;
			break;
		case 29:
			*uParam1 = { 1394.2329f, 212.5603f, -49.8f };
			*uParam2 = 91.5988f;
			break;
	}
}

void func_592()//Position - 0x3B8943
{
	Global_2703735.f_61.f_18 = 0;
	Global_2703735.f_61.f_21 = 0;
	Global_2703735.f_61.f_19 = 0;
	Global_2703735.f_61.f_20 = 0;
	if (Global_2703735.f_61.f_80)
	{
		MISC::SET_BIT(&(Global_2815059.f_4662), 2);
		Global_2703735.f_61.f_80 = 0;
	}
	Global_2703735.f_61.f_76 = { 0f, 0f, 0f };
	Global_2703735.f_61.f_79 = 0;
}

char* func_593(int iParam0, int iParam1)//Position - 0x3BD785
{
	switch (iParam0)
	{
		case 73:
			return "apa_stilt_ch2_05e_ext1";
			break;
		case 74:
			return "apa_stilt_ch2_04_ext1";
			break;
		case 75:
			return "apa_stilt_ch2_09b_ext3";
			break;
		case 76:
			return "apa_stilt_ch2_09c_ext2";
			break;
		case 77:
			return "apa_stilt_ch2_05c_ext1";
			break;
		case 78:
			return "apa_stilt_ch2_09c_ext3";
			break;
		case 79:
			return "apa_stilt_ch2_09c_ext1";
			break;
		case 80:
			return "apa_stilt_ch2_09b_ext2";
			break;
		case 81:
			return "apa_stilt_ch2_12b_ext1";
			break;
		case 82:
			return "apa_stilt_ch2_04_ext2";
			break;
		case 87:
			return "hei_sm_13_exshadowmesh";
			break;
		case 88:
			return "hei_sm_15_exshadowmesh";
			break;
		case 89:
			return "hei_dt1_02_exshadowmesh";
			break;
		case 90:
			return "hei_dt1_11_exshadowmesh";
			break;
		case 103:
			if (iParam1 == 0)
			{
				return "HEI_SM_13_ImpExpProxy_A";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_13_ImpExpProxy_ModShop";
			}
			break;
		case 104:
			if (iParam1 == 0)
			{
				return "HEI_SM_13_ImpExpProxy_B";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_13_ImpExpProxy_ModShop";
			}
			break;
		case 105:
			if (iParam1 == 0)
			{
				return "HEI_SM_13_ImpExpProxy_C";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_13_ImpExpProxy_ModShop";
			}
			break;
		case 106:
			if (iParam1 == 0)
			{
				return "HEI_SM_15_ImpExpProxy_A";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_15_ImpExpProxy_ModShops";
			}
			break;
		case 107:
			if (iParam1 == 0)
			{
				return "HEI_SM_15_ImpExpProxy_B";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_15_ImpExpProxy_ModShops";
			}
			break;
		case 108:
			if (iParam1 == 0)
			{
				return "HEI_SM_15_ImpExpProxy_C";
			}
			else if (iParam1 == 1)
			{
				return "HEI_SM_15_ImpExpProxy_ModShops";
			}
			break;
		case 109:
			if (iParam1 == 0)
			{
				return "HEI_DT1_02_ImpExpProxy_A";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_02_ImpExpEmProxy_A";
			}
			else if (iParam1 == 2)
			{
				return "HEI_DT1_02_ImpExpProxy_ModShop";
			}
			else if (iParam1 == 3)
			{
				return "HEI_DT1_02_ImpExpEmProxy_ModShop";
			}
			break;
		case 110:
			if (iParam1 == 0)
			{
				return "HEI_DT1_02_ImpExpProxy_B";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_02_ImpExpEmProxy_B";
			}
			else if (iParam1 == 2)
			{
				return "HEI_DT1_02_ImpExpProxy_ModShop";
			}
			else if (iParam1 == 3)
			{
				return "HEI_DT1_02_ImpExpEmProxy_ModShop";
			}
			break;
		case 111:
			if (iParam1 == 0)
			{
				return "HEI_DT1_02_ImpExpProxy_C";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_02_ImpExpEmProxy_C";
			}
			else if (iParam1 == 2)
			{
				return "HEI_DT1_02_ImpExpProxy_ModShop";
			}
			else if (iParam1 == 3)
			{
				return "HEI_DT1_02_ImpExpEmProxy_ModShop";
			}
			break;
		case 112:
			if (iParam1 == 0)
			{
				return "HEI_DT1_11_ImpExpProxy_A";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_11_ImpExpProxy_ModShop";
			}
			break;
		case 113:
			if (iParam1 == 0)
			{
				return "HEI_DT1_11_ImpExpProxy_B";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_11_ImpExpProxy_ModShop";
			}
			break;
		case 114:
			if (iParam1 == 0)
			{
				return "HEI_DT1_11_ImpExpProxy_C";
			}
			else if (iParam1 == 1)
			{
				return "HEI_DT1_11_ImpExpProxy_ModShop";
			}
			break;
	}
	return "";
}

bool func_594()//Position - 0x3BE219
{
	return Global_2714762.f_748;
}

Vector3 func_595(int iParam0)//Position - 0x3BE228
{
	struct<3> Var0;
	switch (iParam0)
	{
		case 2:
			Var0 = { 172.7787f, -1003.2102f, -99.9999f };
			break;
		case 6:
			Var0 = { 198.6071f, -1000.5364f, -100f };
			break;
		case 10:
			Var0 = { 227.8602f, -991.1093f, -99.9999f };
			break;
	}
	return Var0;
}

int func_596()//Position - 0x3BEB5F
{
	if (__LIB_2__::func_867(Global_1310720.f_1441))
	{
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_1__::func_694(PLAYER::PLAYER_ID()), Global_4196263[Global_1310720.f_1441 /*2012*/].f_146.f_47, true) <= 30f)
		{
			if (__LIB_3__::func_144(PLAYER::PLAYER_ID(), 0, 0))
			{
				if (!Global_2667225.f_2677 && !Global_2667225.f_2679)
				{
					return 0;
				}
			}
			if (__LIB_18__::func_362(&(Global_4196263[Global_1310720.f_1441 /*2012*/]), 1, 0))
			{
				if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833, 12))
				{
					return 1;
				}
			}
		}
	}
	Global_1310720.f_1441++;
	if (Global_1310720.f_1441 >= 42)
	{
		Global_1310720.f_1441 = -1;
	}
	return 0;
}

int func_597()//Position - 0x3BEC23
{
	if (Global_1310720.f_1441 == -1)
	{
		return 1;
	}
	return 0;
}

bool func_598()//Position - 0x3BEC3B
{
	return BitTest(Global_1310720.f_6, 11);
}

int func_599()//Position - 0x3BEC92
{
	if (Global_2715699.f_6321 && !Global_2725876)
	{
		return 1;
	}
	return 0;
}

bool func_600()//Position - 0x3BECC4
{
	return Global_2714762.f_750;
}

void func_601(var uParam0, int iParam1)//Position - 0x3C0908
{
	MISC::SET_BIT(uParam0[SYSTEM::FLOOR(SYSTEM::TO_FLOAT((iParam1 / 32)))], (iParam1 % 32));
}

void func_602(bool bParam0)//Position - 0x3C11F8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 9);
	}
}

int func_603()//Position - 0x3C2239
{
	var uVar0;
	uVar0 = Global_1659747[__LIB_1__::func_27(-1)];
	if (BitTest(uVar0, 1))
	{
		return 1;
	}
	return 0;
}

bool func_604()//Position - 0x3C2696
{
	return Global_262145.f_26900 /* Tunable: VC_PENTHOUSE_DISABLE_MEDIA */;
}

void func_605()//Position - 0x3C27DC
{
	struct<8> Var0;
	Var0 = -1;
	Var0.f_1 = -1;
	Var0.f_2 = -1;
	Var0.f_3 = -1;
	Var0.f_4 = -1;
	Var0.f_5 = -1;
	Var0.f_6 = -1;
	Var0.f_7 = -1;
	Global_4539876 = { Var0 };
}

int func_606()//Position - 0x3C2821
{
	var uVar0;
	uVar0 = Global_1659747[__LIB_1__::func_27(-1)];
	if (BitTest(uVar0, 13))
	{
		return 1;
	}
	return 0;
}

void func_607(var uParam0)//Position - 0x3C2AF1
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_4 = uParam0;
}

void func_608(var uParam0)//Position - 0x3C2B0D
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_3 = uParam0;
}

void func_609(var uParam0)//Position - 0x3C2B29
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_2 = uParam0;
}

void func_610(var uParam0)//Position - 0x3C2B45
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_1 = uParam0;
}

void func_611(int iParam0)//Position - 0x3C2B61
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23 = iParam0;
}

void func_612(char* sParam0)//Position - 0x3C2C30
{
	int iVar0;
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	StringCopy(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_5), sParam0, 64);
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_23.f_21 = iVar0;
}

bool func_613()//Position - 0x3C77C7
{
	return Global_2703735.f_51;
}

var func_614()//Position - 0x3C83B7
{
	return Global_262145.f_13070 /* Tunable: GB_SMASHANDGRAB_STORE_COOLDOWN */;
}

Vector3 func_615(int iParam0)//Position - 0x3C9269
{
	return Global_1946250.f_533[__LIB_1__::func_656(iParam0) /*3*/];
}

int func_616(int iParam0)//Position - 0x3CB4F4
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_31703[0];
		case 4:
			return Global_262145.f_31703[1];
		case 7:
			return Global_262145.f_31703[2];
		case 10:
			return Global_262145.f_31703[3];
		case 11:
			return Global_262145.f_31703[4];
		case 12:
			return Global_262145.f_31703[5];
		default:
	}
	return -1;
}

void func_617()//Position - 0x3CB5CF
{
	MISC::CLEAR_BIT(&(Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_29), 30);
}

bool func_618()//Position - 0x3CB6DB
{
	return BitTest(Global_1977048.f_3, 0);
}

void func_619(struct<3> Param0)//Position - 0x3CBA04
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	float fVar4;
	fVar4 = 0.75f;
	HUD::GET_HUD_COLOUR(12, &iVar0, &iVar1, &iVar2, &uVar3);
	Param0.f_2 = (Param0.f_2 - 0.7f);
	GRAPHICS::DRAW_MARKER(1, Param0, 0f, 0f, 0f, 0f, 0f, 0f, (fVar4 * 1.8f), (fVar4 * 1.8f), 2.5f, iVar0, iVar1, iVar2, 150, false, false, 2, false, 0, 0, false);
}

int func_620(int iParam0, int iParam1)//Position - 0x3CBDEC
{
	switch (iParam1)
	{
		case 0:
			if ((__LIB_3__::func_618(iParam0, 2) && __LIB_3__::func_618(iParam0, 3)) && __LIB_3__::func_618(iParam0, 4))
			{
				return 1;
			}
			break;
		case 1:
			if ((__LIB_3__::func_618(iParam0, 5) && __LIB_3__::func_618(iParam0, 6)) && __LIB_3__::func_618(iParam0, 7))
			{
				return 1;
			}
			break;
		case 2:
			if ((__LIB_3__::func_618(iParam0, 8) && __LIB_3__::func_618(iParam0, 9)) && __LIB_3__::func_618(iParam0, 10))
			{
				return 1;
			}
			break;
		case 3:
			if (__LIB_3__::func_618(iParam0, 11))
			{
				return 1;
			}
			break;
	}
	return 0;
}

void func_621(char* sParam0, char* sParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x3CC3A7
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam1);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, false, bParam4, iParam3);
}

bool func_622()//Position - 0x3CCEF2
{
	return Global_1977082 != -1;
}

int func_623(int iParam0)//Position - 0x3CCF00
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_27, 9);
	}
	return 0;
}

int func_624()//Position - 0x3CD53D
{
	if (__LIB_1__::func_907(PLAYER::PLAYER_ID(), 0) && __LIB_2__::func_125(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_625(int iParam0)//Position - 0x3CD6C0
{
	if (iParam0 != -1)
	{
		if (NETWORK::GET_CLOUD_TIME_AS_INT() < Global_1977138[iParam0 /*57*/].f_27.f_5)
		{
			return 1;
		}
	}
	return 0;
}

Vector3 func_626()//Position - 0x3CE2E5
{
	if (Global_262145.f_32663 /* Tunable: DISABLE_SIMEON_SHOWROOM */)
	{
		return -59.0544f, -1109.5034f, 25.4358f;
	}
	return -29.78f, -1104.24f, 25.42f;
}

void func_627(int iParam0)//Position - 0x3CE760
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(Global_2815059.f_5195.f_29[iVar0]), iVar1);
}

int func_628(int iParam0)//Position - 0x3D05C2
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_1, 1);
	}
	return 0;
}

bool func_629()//Position - 0x3D0BCA
{
	return __LIB_0__::func_137(25520, -1);
}

void func_630(var uParam0)//Position - 0x3D1B59
{
	if (HUD::DOES_BLIP_EXIST(uParam0->f_11))
	{
		HUD::REMOVE_BLIP(&(uParam0->f_11));
	}
}

int func_631(int iParam0, int iParam1)//Position - 0x3D24DA
{
	if (iParam0 != -1)
	{
		switch (iParam1)
		{
			case 0:
				if (Global_1975224[iParam0 /*53*/].f_5.f_10.f_1 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_5 && Global_1975224[iParam0 /*53*/].f_5.f_10.f_9 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_13)
				{
					return 1;
				}
				break;
			case 1:
				if (Global_1975224[iParam0 /*53*/].f_5.f_10.f_2 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_6 && Global_1975224[iParam0 /*53*/].f_5.f_10.f_10 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_14)
				{
					return 1;
				}
				break;
			case 2:
				if (Global_1975224[iParam0 /*53*/].f_5.f_10.f_3 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_7 && Global_1975224[iParam0 /*53*/].f_5.f_10.f_11 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_15)
				{
					return 1;
				}
				break;
			case 3:
				if (Global_1975224[iParam0 /*53*/].f_5.f_10.f_4 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_8 && Global_1975224[iParam0 /*53*/].f_5.f_10.f_12 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_16)
				{
					return 1;
				}
				break;
			case 4:
				if (Global_1975224[iParam0 /*53*/].f_5.f_10.f_17 == Global_1975224[iParam0 /*53*/].f_5.f_10.f_18)
				{
					return 1;
				}
				break;
			}
	}
	return 0;
}

int func_632(int iParam0, int iParam1)//Position - 0x3D2676
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1975224[iParam0 /*53*/].f_5.f_2, iParam1);
	}
	return 0;
}

void func_633(int iParam0)//Position - 0x3D3639
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(Global_2815059.f_5195.f_33[iVar0]), iVar1);
}

int func_634(int iParam0)//Position - 0x3D75EF
{
	switch (iParam0)
	{
		case 104:
			return 27;
			break;
		case 105:
			return 28;
			break;
		case 106:
			return 29;
			break;
		case 107:
			return 30;
			break;
		case 108:
			return 31;
			break;
		case 109:
			return 32;
			break;
		case 110:
			return 33;
			break;
		case 111:
			return 34;
			break;
	}
	return 27;
}

int func_635(int iParam0)//Position - 0x3D7685
{
	if (iParam0 >= 0 && iParam0 < 363)
	{
		if (BitTest(Global_1585857[iParam0 /*142*/].f_103, 1))
		{
			return BitTest(Global_1585857[iParam0 /*142*/].f_103, 2);
		}
	}
	return 0;
}

int func_636(bool bParam0)//Position - 0x3DDE96
{
	int iVar0;
	if (__LIB_1__::func_693(bParam0, 0, 1))
	{
		iVar0 = 0;
		while (iVar0 < 2)
		{
			if (!Global_2689235[bParam0 /*453*/].f_269.f_17[iVar0] == 0)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_637(bool bParam0, bool bParam1)//Position - 0x3DF96F
{
	int iVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		iVar0 = PLAYER::GET_PLAYER_PED(bParam0);
		if (PED::IS_PED_IN_ANY_VEHICLE(iVar0, bParam1))
		{
			iVar3 = PED::GET_VEHICLE_PED_IS_IN(iVar0, false);
			iVar1 = 0;
			while (iVar1 < 32)
			{
				bVar2 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
				if (__LIB_1__::func_693(bVar2, 1, 1))
				{
					if (PLAYER::GET_PLAYER_PED(bVar2) != iVar0)
					{
						if (PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(bVar2), iVar3, bParam1))
						{
							return 1;
						}
					}
				}
				iVar1++;
			}
		}
	}
	return 0;
}

char* func_638()//Position - 0x3E070C
{
	return "enter";
}

int func_639()//Position - 0x3E1E45
{
	if (((((((((((__LIB_13__::func_259(14) || __LIB_13__::func_259(15)) || __LIB_13__::func_259(16)) || __LIB_13__::func_259(17)) || __LIB_13__::func_259(18)) || __LIB_13__::func_259(19)) || __LIB_13__::func_259(20)) || __LIB_13__::func_259(21)) || __LIB_13__::func_259(22)) || __LIB_13__::func_259(23)) || __LIB_13__::func_259(24)) || __LIB_13__::func_259(25))
	{
		return 1;
	}
	return 0;
}

int func_640()//Position - 0x3E2269
{
	if (((((__LIB_13__::func_253(9) || __LIB_13__::func_253(10)) || __LIB_13__::func_253(11)) || __LIB_13__::func_253(12)) || __LIB_13__::func_253(13)) || __LIB_13__::func_253(14))
	{
		return 1;
	}
	return 0;
}

int func_641()//Position - 0x3E2A39
{
	if (((((((((((((((((((((((((__LIB_13__::func_251(6) || __LIB_13__::func_251(7)) || __LIB_13__::func_251(8)) || __LIB_13__::func_251(9)) || __LIB_13__::func_251(10)) || __LIB_13__::func_251(11)) || __LIB_13__::func_251(12)) || __LIB_13__::func_251(13)) || __LIB_13__::func_251(14)) || __LIB_13__::func_251(15)) || __LIB_13__::func_251(16)) || __LIB_13__::func_251(17)) || __LIB_13__::func_251(18)) || __LIB_13__::func_251(19)) || __LIB_13__::func_251(20)) || __LIB_13__::func_251(21)) || __LIB_13__::func_251(22)) || __LIB_13__::func_251(23)) || __LIB_13__::func_251(24)) || __LIB_13__::func_251(25)) || __LIB_13__::func_251(26)) || __LIB_13__::func_251(27)) || __LIB_13__::func_251(28)) || __LIB_13__::func_251(29)) || __LIB_13__::func_251(30)) || __LIB_13__::func_251(31))
	{
		return 1;
	}
	return 0;
}

int func_642()//Position - 0x3E392E
{
	if (((((((((((((((((((((((((__LIB_15__::func_375(0) || __LIB_15__::func_375(1)) || __LIB_15__::func_375(2)) || __LIB_15__::func_375(3)) || __LIB_15__::func_375(4)) || __LIB_15__::func_375(5)) || __LIB_15__::func_375(6)) || __LIB_15__::func_375(7)) || __LIB_15__::func_375(36)) || __LIB_15__::func_375(27)) || __LIB_15__::func_375(28)) || __LIB_15__::func_375(31)) || __LIB_15__::func_375(32)) || __LIB_15__::func_375(33)) || __LIB_15__::func_375(34)) || __LIB_15__::func_375(29)) || __LIB_15__::func_375(30)) || __LIB_15__::func_375(37)) || __LIB_15__::func_375(38)) || __LIB_15__::func_375(39)) || __LIB_15__::func_375(40)) || __LIB_15__::func_375(41)) || __LIB_15__::func_375(42)) || __LIB_15__::func_375(43)) || __LIB_15__::func_375(44)) || __LIB_15__::func_375(47))
	{
		return 1;
	}
	return 0;
}

void func_643(bool bParam0)//Position - 0x3E3FCB
{
	if (bParam0)
	{
		if (!BitTest(Global_2815059.f_1809, 1))
		{
			MISC::SET_BIT(&(Global_2815059.f_1809), 1);
		}
	}
	else if (BitTest(Global_2815059.f_1809, 1))
	{
		MISC::CLEAR_BIT(&(Global_2815059.f_1809), 1);
	}
}

int func_644()//Position - 0x3E4632
{
	if ((((((((((((((__LIB_15__::func_431(0) || __LIB_15__::func_431(1)) || __LIB_15__::func_431(2)) || __LIB_15__::func_431(3)) || __LIB_15__::func_431(8)) || __LIB_15__::func_431(9)) || __LIB_15__::func_431(10)) || __LIB_15__::func_431(11)) || __LIB_15__::func_431(12)) || __LIB_15__::func_431(13)) || __LIB_15__::func_431(14)) || __LIB_15__::func_431(15)) || __LIB_15__::func_431(16)) || __LIB_15__::func_431(17)) || __LIB_15__::func_431(18))
	{
		return 1;
	}
	return 0;
}

int func_645()//Position - 0x3E4C10
{
	if (((((((__LIB_15__::func_430(4) || __LIB_15__::func_430(5)) || __LIB_15__::func_430(6)) || __LIB_15__::func_430(7)) || __LIB_15__::func_430(8)) || __LIB_15__::func_430(9)) || __LIB_15__::func_430(10)) || __LIB_15__::func_430(11))
	{
		return 1;
	}
	return 0;
}

void func_646(char* sParam0, char* sParam1, int iParam2, int iParam3)//Position - 0x3E544C
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, false, true, iParam3);
}

char* func_647()//Position - 0x3ECFD8
{
	return "LESTER";
}

void func_648(int iParam0)//Position - 0x3F1717
{
	if (Global_1640631 == iParam0)
	{
		Global_1640631 = 0;
	}
	else if (Global_1640631 == 0)
	{
	}
}

void func_649(bool bParam0)//Position - 0x3F1886
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 29))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 29);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 29))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 29);
	}
}

void func_650(int iParam0, int iParam1, int iParam2)//Position - 0x3F1FAA
{
	Global_2815059.f_5997 = iParam0;
	Global_2815059.f_6002 = iParam1;
	Global_2815059.f_6007 = iParam2;
}

bool func_651(int iParam0, var uParam1, var uParam2)//Position - 0x3F6754
{
	*uParam1 = { 0f, 0f, 0f };
	*uParam2 = 0f;
	switch (iParam0)
	{
		case 0:
			*uParam1 = { 1284.7395f, -545.5959f, 68.6026f };
			*uParam2 = 80.5526f;
			break;
		case 1:
			*uParam1 = { -1467.9331f, -795.3086f, 22.7123f };
			*uParam2 = 319.5706f;
			break;
		case 2:
			*uParam1 = { -1096.3696f, -1715.5807f, 3.2635f };
			*uParam2 = 305.2817f;
			break;
		case 3:
			*uParam1 = { -770.2704f, -1303.4984f, 4.0004f };
			*uParam2 = 320.4224f;
			break;
		case 4:
			*uParam1 = { -224.9072f, -2042.7854f, 26.6204f };
			*uParam2 = 323.422f;
			break;
		case 5:
			*uParam1 = { -928.1251f, -2078.029f, 8.299f };
			*uParam2 = 134.4157f;
			break;
		case 6:
			*uParam1 = { 968.5782f, -3232.846f, 4.8981f };
			*uParam2 = 89.7001f;
			break;
		case 7:
			*uParam1 = { 1255.7095f, -2358.0815f, 48.9347f };
			*uParam2 = 353.8768f;
			break;
		case 8:
			*uParam1 = { 55.229f, -1724.0416f, 28.303f };
			*uParam2 = 319.5799f;
			break;
		case 9:
			*uParam1 = { 1150.178f, -1483.1593f, 33.6926f };
			*uParam2 = 359.6766f;
			break;
		case 10:
			*uParam1 = { 37.8095f, 52.0435f, 71.6005f };
			*uParam2 = 159.7696f;
			break;
		case 11:
			*uParam1 = { -33.978f, -98.8644f, 56.3819f };
			*uParam2 = 159.6577f;
			break;
		case 12:
			*uParam1 = { -306.806f, -979.8259f, 30.0806f };
			*uParam2 = 250.0748f;
			break;
		case 13:
			*uParam1 = { 315.2949f, -698.7788f, 28.3404f };
			*uParam2 = 250.2768f;
			break;
		case 14:
			*uParam1 = { 512.2047f, -1148.3099f, 28.3127f };
			*uParam2 = 1.766f;
			break;
		case 15:
			*uParam1 = { -562.7316f, 327.9078f, 83.4115f };
			*uParam2 = 265.3254f;
			break;
		case 16:
			*uParam1 = { -951.5113f, 171.5849f, 64.5215f };
			*uParam2 = 94.4913f;
			break;
		case 17:
			*uParam1 = { -836.8151f, 362.536f, 86.1082f };
			*uParam2 = 89.2988f;
			break;
		case 18:
			*uParam1 = { -2076.5588f, -229.3211f, 20.0404f };
			*uParam2 = 26.5634f;
			break;
		case 19:
			*uParam1 = { -2191.7969f, -378.2889f, 12.2412f };
			*uParam2 = 49.1378f;
			break;
		case 20:
			*uParam1 = { -3017.1223f, 357.6781f, 13.5654f };
			*uParam2 = 170.0936f;
			break;
		case 21:
			*uParam1 = { -3092.7588f, 1155.5844f, 19.359f };
			*uParam2 = 356.6831f;
			break;
		case 22:
			*uParam1 = { -1902.0404f, 764.0038f, 139.836f };
			*uParam2 = 133.0039f;
			break;
		case 23:
			*uParam1 = { -405.0357f, 1175.4813f, 324.6416f };
			*uParam2 = 253.2484f;
			break;
		case 24:
			*uParam1 = { 709.5561f, 648.7717f, 127.9112f };
			*uParam2 = 250.8219f;
			break;
		case 25:
			*uParam1 = { 960.2486f, 156.6699f, 79.8307f };
			*uParam2 = 140.1893f;
			break;
		case 26:
			*uParam1 = { 893.754f, -66.7553f, 77.7643f };
			*uParam2 = 148.1264f;
			break;
		case 27:
			*uParam1 = { 1700.5562f, -1444.7173f, 112.1386f };
			*uParam2 = 340.5691f;
			break;
		case 28:
			*uParam1 = { 2569.2188f, 401.6441f, 107.4593f };
			*uParam2 = 358.9408f;
			break;
		case 29:
			*uParam1 = { 1609.1687f, 1179.68f, 83.2313f };
			*uParam2 = 181.0576f;
			break;
		case 30:
			*uParam1 = { 2056.3582f, 5188.741f, 51.3049f };
			*uParam2 = 39.8946f;
			break;
		case 31:
			*uParam1 = { 274.6361f, 3129.055f, 40.9197f };
			*uParam2 = 88.016f;
			break;
		case 32:
			*uParam1 = { 922.5869f, 3084.8281f, 40.4309f };
			*uParam2 = 277.2226f;
			break;
		case 33:
			*uParam1 = { 1466.5073f, 2243.2249f, 75.09f };
			*uParam2 = 206.6338f;
			break;
		case 34:
			*uParam1 = { 529.882f, 2609.0593f, 41.2793f };
			*uParam2 = 8.4184f;
			break;
		case 35:
			*uParam1 = { -209.9119f, 4217.993f, 43.6867f };
			*uParam2 = 255.8171f;
			break;
		case 36:
			*uParam1 = { 2186.9873f, 3368.1038f, 44.4263f };
			*uParam2 = 297.6278f;
			break;
		case 37:
			*uParam1 = { 2552.0815f, 3250.3733f, 51.7113f };
			*uParam2 = 312.133f;
			break;
		case 38:
			*uParam1 = { 487.0461f, 6589.988f, 25.247f };
			*uParam2 = 216.8444f;
			break;
		case 39:
			*uParam1 = { -647.7258f, 5907.364f, 16.0567f };
			*uParam2 = 23.2491f;
			break;
		case 40:
			*uParam1 = { 1996.3438f, 2602.3235f, 53.3127f };
			*uParam2 = 133.0891f;
			break;
		case 41:
			*uParam1 = { 2168.1475f, 2869.9507f, 45.7404f };
			*uParam2 = 241.2353f;
			break;
		case 42:
			*uParam1 = { 2523.64f, 1603.348f, 29.0631f };
			*uParam2 = 299.8963f;
			break;
		case 43:
			*uParam1 = { 2204.4773f, 3709.9663f, 36.2608f };
			*uParam2 = 117.0373f;
			break;
		case 44:
			*uParam1 = { 2656.4993f, 4307.1104f, 43.5602f };
			*uParam2 = 35.6329f;
			break;
		case 45:
			*uParam1 = { 1418.761f, 3731.9033f, 31.852f };
			*uParam2 = 199.65f;
			break;
		case 46:
			*uParam1 = { 1803.8041f, 3277.6375f, 41.7935f };
			*uParam2 = 213.5281f;
			break;
		case 47:
			*uParam1 = { -192.9088f, 6206.8257f, 30.5037f };
			*uParam2 = 224.0903f;
			break;
		case 48:
			*uParam1 = { -824.098f, 5441.8135f, 32.7164f };
			*uParam2 = 50.8771f;
			break;
		case 49:
			*uParam1 = { -959.2971f, 5420.9688f, 37.9608f };
			*uParam2 = 110.5969f;
			break;
		case 50:
			*uParam1 = { -1527.4692f, 4995.7827f, 61.4537f };
			*uParam2 = 138.5709f;
			break;
		case 51:
			*uParam1 = { -2234.4683f, 4313.867f, 47.1469f };
			*uParam2 = 151.7738f;
			break;
		case 52:
			*uParam1 = { -2510.7588f, 3588.1436f, 13.5909f };
			*uParam2 = 169.5942f;
			break;
		case 53:
			*uParam1 = { -2734.8918f, 2301.7727f, 17.2203f };
			*uParam2 = 156.3156f;
			break;
		case 54:
			*uParam1 = { -2210.681f, 2309.3918f, 32.0001f };
			*uParam2 = 108.1975f;
			break;
		case 55:
			*uParam1 = { -1546.5492f, 2145.4927f, 54.477f };
			*uParam2 = 300.3906f;
			break;
		case 56:
			*uParam1 = { -78.0324f, 2007.609f, 179.0079f };
			*uParam2 = 135.3284f;
			break;
		case 57:
			*uParam1 = { -406.9017f, 2813.6167f, 44.5846f };
			*uParam2 = 323.1792f;
			break;
		case 58:
			*uParam1 = { 1074.645f, 2056.9958f, 51.6412f };
			*uParam2 = 94.7879f;
			break;
		case 59:
			*uParam1 = { 352.5322f, 4455.8276f, 61.6691f };
			*uParam2 = 20.8798f;
			break;
		case 60:
			return 0;
	}
	return !__LIB_0__::func_86(*uParam1);
}

int func_652(struct<3> Param0)//Position - 0x3F702D
{
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1061.0181f, -2540.235f, 18.669323f, -1023.33246f, -2562.1145f, 31.576157f, 250f, false, true))
	{
		return 1;
	}
	else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1061.0587f, -2540.2537f, 10.944668f, -1023.2968f, -2562.0525f, 18.516848f, 250f, false, true))
	{
		return 1;
	}
	else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1043.3641f, -2747.29f, 16.960567f, -991.5368f, -2657.6816f, 69.12349f, 200f, false, true))
	{
		return 1;
	}
	else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1047.6465f, -2754.947f, 2.941969f, -991.73145f, -2653.1533f, 16.892282f, 200f, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1116.8934f, -2675.6707f, 12.177572f, -1183.9326f, -2789.4507f, 38.951855f, 53f, false, true))
	{
		return 1;
	}
	return 0;
}

void func_653(int iParam0, int iParam1, int iParam2)//Position - 0x3F7CF0
{
	Global_2815059.f_6687 = iParam0;
	Global_2815059.f_6005 = iParam1;
}

void func_654(int iParam0, int iParam1, int iParam2)//Position - 0x3F812C
{
	Global_2815059.f_6686 = iParam0;
	Global_2815059.f_6004 = iParam1;
	Global_2815059.f_6007 = iParam2;
}

bool func_655()//Position - 0x3F81B4
{
	return Global_2815059.f_330 > 0;
}

void func_656(int iParam0, int iParam1, int iParam2)//Position - 0x3F8306
{
	Global_2815059.f_5998 = iParam0;
	Global_2815059.f_6003 = iParam1;
	Global_2815059.f_6007 = iParam2;
}

void func_657(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x3F8A2B
{
	Global_2815059.f_5994[0] = iParam0;
	Global_2815059.f_5994[1] = iParam1;
	Global_2815059.f_6001 = iParam2;
	Global_2815059.f_6007 = iParam3;
}

void func_658(int iParam0)//Position - 0x3F8F5E
{
	if (Global_1640631 == 0)
	{
		Global_1640631 = iParam0;
	}
	else if (Global_1640631 == iParam0)
	{
	}
}

Vector3 func_659(var uParam0)//Position - 0x3FD2CC
{
	struct<3> Var0;
	Var0.f_2 = -1;
	if (*uParam0 < 6)
	{
		return Var0;
	}
	Var0.f_2 = (*uParam0)[2];
	Var0.f_1 = (*uParam0)[3];
	Var0.f_0 = (*uParam0)[1];
	return Var0;
}

void func_660(int iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x3FD417
{
	int iVar0;
	int iVar1;
	iVar0 = iParam0;
	if (iVar0 < 0 || iVar0 >= Global_2680265.f_1399)
	{
		return;
	}
	iVar1 = uParam1;
	if (iVar1 < 0 || iVar1 > 2)
	{
		return;
	}
	if (iParam3 < 0 || iParam3 >= 6)
	{
		return;
	}
	Global_2680265.f_1399[iVar0 /*3*/].f_1 = uParam1;
	Global_2680265.f_1399[iVar0 /*3*/].f_2 = uParam2;
	Global_2680265.f_1399[iVar0 /*3*/] = iParam3;
}

var func_661(int iParam0)//Position - 0x3FD494
{
	if (iParam0 == PLAYER::PLAYER_ID() && !__LIB_10__::func_569())
	{
		return Global_2787940.f_2;
	}
	return Global_2680265.f_1399[iParam0 /*3*/].f_2;
}

int func_662(int iParam0)//Position - 0x3FD67F
{
	int iVar0;
	switch (iParam0)
	{
		case 1:
			iVar0 = 6;
			break;
		default:
			iVar0 = 1;
			break;
	}
	return iVar0;
}

var func_663(var uParam0)//Position - 0x3FE289
{
	return BitTest(uParam0->f_1, 6);
}

void func_664(var uParam0, int iParam1)//Position - 0x3FE297
{
	if (BitTest((*uParam0)[(iParam1 / 32)], (iParam1 % 32)))
	{
		MISC::CLEAR_BIT(uParam0[(iParam1 / 32)], (iParam1 % 32));
	}
}

bool func_665(var uParam0)//Position - 0x3FE364
{
	return BitTest(uParam0->f_1, 4);
}

void func_666(var uParam0, int iParam1)//Position - 0x3FE380
{
	if (!BitTest((*uParam0)[(iParam1 / 32)], (iParam1 % 32)))
	{
		MISC::SET_BIT(uParam0[(iParam1 / 32)], (iParam1 % 32));
	}
}

int func_667()//Position - 0x3FE3F7
{
	return 300000;
}

bool func_668(var uParam0)//Position - 0x3FE403
{
	return BitTest(uParam0->f_1, 3);
}

void func_669(char* sParam0)//Position - 0x3FE5E7
{
	StringCopy(sParam0, "", 64);
	sParam0->f_16 = -1;
	sParam0->f_17 = 0;
}

bool func_670(var uParam0)//Position - 0x3FE600
{
	return BitTest(uParam0->f_1, 10);
}

bool func_671(var uParam0)//Position - 0x3FE653
{
	return BitTest(uParam0->f_1, 9);
}

int func_672(bool bParam0)//Position - 0x3FE9EB
{
	switch (bParam0)
	{
		case 28:
			return 1;
			break;
		case 46:
			return 1;
			break;
		case 49:
			return 1;
			break;
		case 74:
			return 1;
			break;
		case 79:
			return 1;
			break;
		case 84:
			return 1;
			break;
		case 92:
			return 1;
			break;
		case 7:
			return 2;
			break;
		case 41:
			return 2;
			break;
		case 44:
			return 2;
			break;
		case 51:
			return 2;
			break;
		case 61:
			return 2;
			break;
		case 89:
			return 2;
			break;
		case 97:
			return 2;
			break;
		case 13:
			return 3;
			break;
		case 36:
			return 3;
			break;
		case 48:
			return 3;
			break;
		case 50:
			return 3;
			break;
		case 68:
			return 3;
			break;
		case 15:
			return 3;
			break;
		case 98:
			return 3;
			break;
		case 26:
			return 4;
			break;
		case 42:
			return 4;
			break;
		case 60:
			return 4;
			break;
		case 70:
			return 4;
			break;
		case 73:
			return 4;
			break;
		case 85:
			return 4;
			break;
		case 9:
			return 5;
			break;
		case 19:
			return 5;
			break;
		case 27:
			return 5;
			break;
		case 39:
			return 5;
			break;
		case 62:
			return 5;
			break;
		case 99:
			return 5;
			break;
		case 23:
			return 6;
			break;
		case 72:
			return 6;
			break;
		case 81:
			return 6;
			break;
		case 6:
			return 7;
			break;
		case 24:
			return 7;
			break;
		case 58:
			return 7;
			break;
		case 16:
			return 7;
			break;
		case 17:
			return 8;
			break;
		case 29:
			return 8;
			break;
		case 53:
			return 8;
			break;
		case 96:
			return 8;
			break;
		case 18:
			return 9;
			break;
		case 35:
			return 9;
			break;
		case 65:
			return 9;
			break;
		case 12:
			return 10;
			break;
		case 37:
			return 10;
			break;
		case 88:
			return 10;
			break;
		case 8:
			return 12;
			break;
		case 34:
			return 12;
			break;
		case 71:
			return 12;
			break;
		case 93:
			return 12;
			break;
		case 25:
			return 13;
			break;
		case 45:
			return 13;
			break;
		case 78:
			return 13;
			break;
		case 86:
			return 13;
			break;
		case 30:
			return 14;
			break;
		case 47:
			return 14;
			break;
		case 94:
			return 14;
			break;
		case 4:
			return 15;
			break;
		case 52:
			return 15;
			break;
		case 64:
			return 15;
			break;
		case 82:
			return 15;
			break;
		case 3:
			return 16;
			break;
		case 63:
			return 16;
			break;
		case 22:
			return 17;
			break;
		case 75:
			return 17;
			break;
		case 40:
			return 18;
			break;
		case 5:
			return 18;
			break;
		case 56:
			return 19;
			break;
		case 57:
			return 19;
			break;
		case 91:
			return 20;
			break;
		case 31:
			return 20;
			break;
		case 14:
			return 21;
			break;
		case 90:
			return 21;
			break;
		case 95:
			return 21;
			break;
		case 20:
			return 22;
			break;
		case 55:
			return 22;
			break;
		case 38:
			return 23;
			break;
		case 43:
			return 23;
			break;
		case 33:
			return 24;
			break;
		case 87:
			return 24;
			break;
		case 10:
			return 25;
			break;
		case 69:
			return 25;
			break;
		case 21:
			return 26;
			break;
		case 54:
			return 26;
			break;
		case 77:
			return 26;
			break;
		case 1:
			return 27;
			break;
		case 80:
			return 27;
			break;
		case 11:
			return 28;
			break;
		case 66:
			return 28;
			break;
		case 2:
			return 29;
			break;
		case 67:
			return 29;
			break;
		case 32:
			return 30;
			break;
		case 59:
			return 30;
			break;
		case 76:
			return 30;
			break;
		case 83:
			return 30;
			break;
	}
	return -1;
}

struct<6> func_673(int iParam0)//Position - 0x3FEF4D
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 1:
			StringCopy(&Var0, "ITH_NAME_000" /* GXT: A Tethered End */, 24);
			break;
		case 2:
			StringCopy(&Var0, "ITH_NAME_001" /* GXT: Bad Egg */, 24);
			break;
		case 3:
			StringCopy(&Var0, "ITH_NAME_002" /* GXT: Banana Hammock */, 24);
			break;
		case 4:
			StringCopy(&Var0, "ITH_NAME_003" /* GXT: Better Than Nothing */, 24);
			break;
		case 5:
			StringCopy(&Var0, "ITH_NAME_004" /* GXT: Black Rock Rooster */, 24);
			break;
		case 6:
			StringCopy(&Var0, "ITH_NAME_005" /* GXT: Bleet Me Baby */, 24);
			break;
		case 7:
			StringCopy(&Var0, "ITH_NAME_006" /* GXT: Blue Dream */, 24);
			break;
		case 8:
			StringCopy(&Var0, "ITH_NAME_007" /* GXT: Borrowed Sorrow */, 24);
			break;
		case 9:
			StringCopy(&Var0, "ITH_NAME_008" /* GXT: Bouncy Blessed */, 24);
			break;
		case 10:
			StringCopy(&Var0, "ITH_NAME_009" /* GXT: Cancelled Check */, 24);
			break;
		case 11:
			StringCopy(&Var0, "ITH_NAME_010" /* GXT: Can't Be Wronger */, 24);
			break;
		case 12:
			StringCopy(&Var0, "ITH_NAME_011" /* GXT: Clapback Charlie */, 24);
			break;
		case 13:
			StringCopy(&Var0, "ITH_NAME_012" /* GXT: Constant Brag */, 24);
			break;
		case 14:
			StringCopy(&Var0, "ITH_NAME_013" /* GXT: Country Stuck */, 24);
			break;
		case 15:
			StringCopy(&Var0, "ITH_NAME_014" /* GXT: Crackers and Please */, 24);
			break;
		case 16:
			StringCopy(&Var0, "ITH_NAME_015" /* GXT: Creepy Dentist */, 24);
			break;
		case 17:
			StringCopy(&Var0, "ITH_NAME_016" /* GXT: Crock Janley */, 24);
			break;
		case 18:
			StringCopy(&Var0, "ITH_NAME_017" /* GXT: Dancin' Pole */, 24);
			break;
		case 19:
			StringCopy(&Var0, "ITH_NAME_018" /* GXT: Dancin' Shoes */, 24);
			break;
		case 20:
			StringCopy(&Var0, "ITH_NAME_019" /* GXT: Darling Ricki */, 24);
			break;
		case 21:
			StringCopy(&Var0, "ITH_NAME_020" /* GXT: Dead Fam */, 24);
			break;
		case 22:
			StringCopy(&Var0, "ITH_NAME_021" /* GXT: Dead Heat Hattie */, 24);
			break;
		case 23:
			StringCopy(&Var0, "ITH_NAME_022" /* GXT: Dexie Runner */, 24);
			break;
		case 24:
			StringCopy(&Var0, "ITH_NAME_023" /* GXT: Divorced Doctor */, 24);
			break;
		case 25:
			StringCopy(&Var0, "ITH_NAME_024" /* GXT: Doozy Floozy */, 24);
			break;
		case 26:
			StringCopy(&Var0, "ITH_NAME_025" /* GXT: Downtown Renown */, 24);
			break;
		case 27:
			StringCopy(&Var0, "ITH_NAME_026" /* GXT: Dr. Deez Reins */, 24);
			break;
		case 28:
			StringCopy(&Var0, "ITH_NAME_027" /* GXT: Dream Shatterer */, 24);
			break;
		case 29:
			StringCopy(&Var0, "ITH_NAME_028" /* GXT: Drone Warning */, 24);
			break;
		case 30:
			StringCopy(&Var0, "ITH_NAME_029" /* GXT: Drunken Brandee */, 24);
			break;
		case 31:
			StringCopy(&Var0, "ITH_NAME_030" /* GXT: Durban Poison */, 24);
			break;
		case 32:
			StringCopy(&Var0, "ITH_NAME_031" /* GXT: Feed The Trolls */, 24);
			break;
		case 33:
			StringCopy(&Var0, "ITH_NAME_032" /* GXT: Fire Hazards */, 24);
			break;
		case 34:
			StringCopy(&Var0, "ITH_NAME_033" /* GXT: Flipped Wig */, 24);
			break;
		case 35:
			StringCopy(&Var0, "ITH_NAME_034" /* GXT: Friendly Fire */, 24);
			break;
		case 36:
			StringCopy(&Var0, "ITH_NAME_035" /* GXT: Getting Haughty */, 24);
			break;
		case 37:
			StringCopy(&Var0, "ITH_NAME_036" /* GXT: Ghost Dank */, 24);
			break;
		case 38:
			StringCopy(&Var0, "ITH_NAME_037" /* GXT: Glass or Tina */, 24);
			break;
		case 39:
			StringCopy(&Var0, "ITH_NAME_039" /* GXT: Los Santos Savior */, 24);
			break;
		case 40:
			StringCopy(&Var0, "ITH_NAME_040" /* GXT: Hard Time Done */, 24);
			break;
		case 41:
			StringCopy(&Var0, "ITH_NAME_041" /* GXT: Hell for Weather */, 24);
			break;
		case 42:
			StringCopy(&Var0, "ITH_NAME_042" /* GXT: Hennigan's Steed */, 24);
			break;
		case 43:
			StringCopy(&Var0, "ITH_NAME_043" /* GXT: Hippie Crack */, 24);
			break;
		case 44:
			StringCopy(&Var0, "ITH_NAME_044" /* GXT: Hot & Bothered */, 24);
			break;
		case 45:
			StringCopy(&Var0, "ITH_NAME_045" /* GXT: Invade Grenade */, 24);
			break;
		case 46:
			StringCopy(&Var0, "ITH_NAME_046" /* GXT: It's a Trap */, 24);
			break;
		case 47:
			StringCopy(&Var0, "ITH_NAME_047" /* GXT: Kraff Running */, 24);
			break;
		case 48:
			StringCopy(&Var0, "ITH_NAME_048" /* GXT: Lead is Out */, 24);
			break;
		case 49:
			StringCopy(&Var0, "ITH_NAME_049" /* GXT: Lit As Truck */, 24);
			break;
		case 50:
			StringCopy(&Var0, "ITH_NAME_050" /* GXT: Lonely Stepbrother */, 24);
			break;
		case 51:
			StringCopy(&Var0, "ITH_NAME_051" /* GXT: Lover's Speed */, 24);
			break;
		case 52:
			StringCopy(&Var0, "ITH_NAME_052" /* GXT: Measles Smeezles */, 24);
			break;
		case 53:
			StringCopy(&Var0, "ITH_NAME_053" /* GXT: Micro Aggression */, 24);
			break;
		case 54:
			StringCopy(&Var0, "ITH_NAME_054" /* GXT: Minimum Wager */, 24);
			break;
		case 55:
			StringCopy(&Var0, "ITH_NAME_055" /* GXT: Miss Mary John */, 24);
			break;
		case 56:
			StringCopy(&Var0, "ITH_NAME_056" /* GXT: Miss Triggered */, 24);
			break;
		case 57:
			StringCopy(&Var0, "ITH_NAME_057" /* GXT: Mister Redacted */, 24);
			break;
		case 58:
			StringCopy(&Var0, "ITH_NAME_058" /* GXT: Mister Scissors */, 24);
			break;
		case 59:
			StringCopy(&Var0, "ITH_NAME_059" /* GXT: Money to Burn */, 24);
			break;
		case 60:
			StringCopy(&Var0, "ITH_NAME_060" /* GXT: Moon Rocks */, 24);
			break;
		case 61:
			StringCopy(&Var0, "ITH_NAME_061" /* GXT: Mr. Worthwhile */, 24);
			break;
		case 62:
			StringCopy(&Var0, "ITH_NAME_062" /* GXT: Mud Dragon */, 24);
			break;
		case 63:
			StringCopy(&Var0, "ITH_NAME_063" /* GXT: Night-time Mare */, 24);
			break;
		case 64:
			StringCopy(&Var0, "ITH_NAME_064" /* GXT: Northern Lights */, 24);
			break;
		case 65:
			StringCopy(&Var0, "ITH_NAME_065" /* GXT: Nuns Orders */, 24);
			break;
		case 66:
			StringCopy(&Var0, "ITH_NAME_066" /* GXT: Ol' Skag */, 24);
			break;
		case 67:
			StringCopy(&Var0, "ITH_NAME_067" /* GXT: Old Ill Will */, 24);
			break;
		case 68:
			StringCopy(&Var0, "ITH_NAME_068" /* GXT: Omens and Ice */, 24);
			break;
		case 69:
			StringCopy(&Var0, "ITH_NAME_069" /* GXT: Pedestrian */, 24);
			break;
		case 70:
			StringCopy(&Var0, "ITH_NAME_070" /* GXT: Pretty as a Pistol */, 24);
			break;
		case 71:
			StringCopy(&Var0, "ITH_NAME_071" /* GXT: Questionable Dignity */, 24);
			break;
		case 72:
			StringCopy(&Var0, "ITH_NAME_072" /* GXT: Reach Around Town */, 24);
			break;
		case 73:
			StringCopy(&Var0, "ITH_NAME_073" /* GXT: Robocall */, 24);
			break;
		case 74:
			StringCopy(&Var0, "ITH_NAME_074" /* GXT: Salt 'N' Sauce */, 24);
			break;
		case 75:
			StringCopy(&Var0, "ITH_NAME_075" /* GXT: Salty and Woke */, 24);
			break;
		case 76:
			StringCopy(&Var0, "ITH_NAME_076" /* GXT: Scrawny Nag */, 24);
			break;
		case 77:
			StringCopy(&Var0, "ITH_NAME_077" /* GXT: Sir Scrambled */, 24);
			break;
		case 78:
			StringCopy(&Var0, "ITH_NAME_078" /* GXT: Sizzurp */, 24);
			break;
		case 79:
			StringCopy(&Var0, "ITH_NAME_079" /* GXT: Snatched Your Mama */, 24);
			break;
		case 80:
			StringCopy(&Var0, "ITH_NAME_080" /* GXT: Social Media Warrior */, 24);
			break;
		case 81:
			StringCopy(&Var0, "ITH_NAME_081" /* GXT: Square to Go */, 24);
			break;
		case 82:
			StringCopy(&Var0, "ITH_NAME_082" /* GXT: Study Buddy */, 24);
			break;
		case 83:
			StringCopy(&Var0, "ITH_NAME_083" /* GXT: Stupid Money */, 24);
			break;
		case 84:
			StringCopy(&Var0, "ITH_NAME_084" /* GXT: Sumptin Saucy */, 24);
			break;
		case 85:
			StringCopy(&Var0, "ITH_NAME_085" /* GXT: Sweet Releaf */, 24);
			break;
		case 86:
			StringCopy(&Var0, "ITH_NAME_086" /* GXT: Tax the Poor */, 24);
			break;
		case 87:
			StringCopy(&Var0, "ITH_NAME_087" /* GXT: Tea Ache Sea */, 24);
			break;
		case 88:
			StringCopy(&Var0, "ITH_NAME_088" /* GXT: Tenpenny */, 24);
			break;
		case 89:
			StringCopy(&Var0, "ITH_NAME_089" /* GXT: There She Blows */, 24);
			break;
		case 90:
			StringCopy(&Var0, "ITH_NAME_090" /* GXT: Throwing Shady */, 24);
			break;
		case 91:
			StringCopy(&Var0, "ITH_NAME_091" /* GXT: Thunder Skunk */, 24);
			break;
		case 92:
			StringCopy(&Var0, "ITH_NAME_092" /* GXT: Total Belter */, 24);
			break;
		case 93:
			StringCopy(&Var0, "ITH_NAME_093" /* GXT: Turnt Mood */, 24);
			break;
		case 94:
			StringCopy(&Var0, "ITH_NAME_094" /* GXT: Uptown Rider */, 24);
			break;
		case 95:
			StringCopy(&Var0, "ITH_NAME_095" /* GXT: Wage of Consent */, 24);
			break;
		case 96:
			StringCopy(&Var0, "ITH_NAME_096" /* GXT: Wee Scunner */, 24);
			break;
		case 97:
			StringCopy(&Var0, "ITH_NAME_097" /* GXT: Worth a Kingdom */, 24);
			break;
		case 98:
			StringCopy(&Var0, "ITH_NAME_098" /* GXT: Yay Yo Let's Go */, 24);
			break;
		case 99:
			StringCopy(&Var0, "ITH_NAME_099" /* GXT: Yellow Sunshine */, 24);
			break;
	}
	return Var0;
}

int func_674(var uParam0)//Position - 0x3FF96B
{
	int iVar0;
	iVar0 = uParam0->f_17;
	if (iVar0 == -1)
	{
		return 0;
	}
	return uParam0->f_3[iVar0];
}

bool func_675(var uParam0)//Position - 0x3FF9BA
{
	return BitTest(uParam0->f_1, 7);
}

Vector3 func_676()//Position - 0x3FFA0B
{
	return 1096.273f, 261.1804f, (-51.2418f - 1f);
}

void func_677(int* iParam0, bool bParam1)//Position - 0x3FFA3C
{
	if (BitTest(*iParam0, bParam1))
	{
		MISC::CLEAR_BIT(iParam0, bParam1);
	}
}

int func_678(var uParam0)//Position - 0x3FFDAA
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 2147483647;
	iVar1 = -1;
	iVar2 = 0;
	while (iVar2 < *uParam0)
	{
		if ((*uParam0)[iVar2] < iVar0)
		{
			iVar0 = (*uParam0)[iVar2];
			iVar1 = iVar2;
		}
		iVar2++;
	}
	return iVar1;
}

bool func_679(var uParam0)//Position - 0x3FFDE9
{
	return BitTest(uParam0->f_1, 8);
}

void func_680(int* iParam0, bool bParam1)//Position - 0x3FFEA9
{
	if (!BitTest(*iParam0, bParam1))
	{
		MISC::SET_BIT(iParam0, bParam1);
	}
}

bool func_681(int* iParam0)//Position - 0x401543
{
	return BitTest(iParam0->f_1, 18);
}

void func_682(int* iParam0, int iParam1, int iParam2, float fParam3, float fParam4, int iParam5, char* sParam6, int iParam7)//Position - 0x401552
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0->f_106, "SPIN_WHEEL");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam3);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam4);
	if (iParam5 != -1)
	{
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam5);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
	{
		GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(sParam6);
		if (iParam7 != -1)
		{
			HUD::ADD_TEXT_COMPONENT_INTEGER(iParam7);
		}
		GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
	}
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

int func_683(int iParam0)//Position - 0x4015B0
{
	switch (iParam0)
	{
		case -1:
			return -1;
		case 0:
			return 2;
		case 1:
			return 2;
		case 2:
			return 2;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 3;
		case 6:
			return 3;
		case 7:
			return 4;
		case 8:
			return 4;
		case 9:
			return 4;
		case 10:
			return 5;
		case 11:
			return 5;
		case 12:
			return 5;
		case 13:
			return 6;
		case 14:
			return 7;
		case 15:
			return -1;
		default:
	}
	return -1;
}

int func_684(int iParam0, bool bParam1)//Position - 0x40166A
{
	int iVar0;
	iVar0 = -1;
	if (bParam1)
	{
		switch (iParam0)
		{
			case 4:
				iVar0 = Global_262145.f_24095 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_LOW_WIN */;
				break;
			case 5:
				iVar0 = Global_262145.f_24096 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_MED_WIN */;
				break;
			case 6:
				iVar0 = Global_262145.f_24097 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_HIGH_WIN */;
				break;
			case 7:
				iVar0 = Global_262145.f_24092 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_LOW_WIN */;
				break;
			case 8:
				iVar0 = Global_262145.f_24093 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_MED_WIN */;
				break;
			case 9:
				iVar0 = Global_262145.f_24094 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_HIGH_WIN */;
				break;
			case 10:
				iVar0 = Global_262145.f_24089 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_LOW_WIN */;
				break;
			case 11:
				iVar0 = Global_262145.f_24090 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_MED_WIN */;
				break;
			case 12:
				iVar0 = Global_262145.f_24091 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_HIGH_WIN */;
				break;
		}
	}
	else
	{
		switch (iParam0)
		{
			case 4:
				iVar0 = Global_262145.f_24086 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_LOW_WIN */;
				break;
			case 5:
				iVar0 = Global_262145.f_24087 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_MED_WIN */;
				break;
			case 6:
				iVar0 = Global_262145.f_24088 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_HIGH_WIN */;
				break;
			case 7:
				iVar0 = Global_262145.f_24083 /* Tunable: AW_ARENA_WAR_WHEEL_RP_LOW_WIN */;
				break;
			case 8:
				iVar0 = Global_262145.f_24084 /* Tunable: AW_ARENA_WAR_WHEEL_RP_MED_WIN */;
				break;
			case 9:
				iVar0 = Global_262145.f_24085 /* Tunable: AW_ARENA_WAR_WHEEL_RP_HIGH_WIN */;
				break;
			case 10:
				iVar0 = Global_262145.f_24080 /* Tunable: AW_ARENA_WAR_WHEEL_AP_LOW_WIN */;
				break;
			case 11:
				iVar0 = Global_262145.f_24081 /* Tunable: AW_ARENA_WAR_WHEEL_AP_MED_WIN */;
				break;
			case 12:
				iVar0 = Global_262145.f_24082 /* Tunable: AW_ARENA_WAR_WHEEL_AP_HIGH_WIN */;
				break;
			}
	}
	return iVar0;
}

struct<6> func_685(int iParam0)//Position - 0x4017D1
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var0, "WS_DRONE" /* GXT: Drone */, 24);
			break;
		case 1:
			StringCopy(&Var0, "WS_TRAP" /* GXT: Trap */, 24);
			break;
		case 2:
			StringCopy(&Var0, "WS_RC_CAR" /* GXT: RC Car */, 24);
			break;
		case 3:
			StringCopy(&Var0, "WS_TURRETS" /* GXT: Turrets */, 24);
			break;
		case 4:
			StringCopy(&Var0, "WS_CASH" /* GXT: $~1~ */, 24);
			break;
		case 5:
			StringCopy(&Var0, "WS_CASH" /* GXT: $~1~ */, 24);
			break;
		case 6:
			StringCopy(&Var0, "WS_CASH" /* GXT: $~1~ */, 24);
			break;
		case 7:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 8:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 9:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 10:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 11:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 12:
			StringCopy(&Var0, "WS_RP" /* GXT: ~1~ */, 24);
			break;
		case 13:
			StringCopy(&Var0, "WS_FREE_SPIN" /* GXT: Free Spin */, 24);
			break;
	}
	return Var0;
}

void func_686(int* iParam0, bool bParam1)//Position - 0x4018E7
{
	if (bParam1)
	{
		GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
		GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(true);
		GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(iParam0->f_106, 255, 255, 255, 255, 0);
	}
	else
	{
		HUD::SET_TEXT_RENDER_ID(iParam0->f_11);
		GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);
		GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(true);
		GRAPHICS::DRAW_SCALEFORM_MOVIE(iParam0->f_106, 0.445f, 0.5f, 0.9f, 1f, 255, 255, 255, 255, 0);
	}
	HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
}

void func_687(int* iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x401949
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0->f_106, "SET_SEGMENT");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam3);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

int func_688(int iParam0, bool bParam1)//Position - 0x401975
{
	if (bParam1)
	{
		switch (iParam0)
		{
			case 0:
				return 1;
			case 1:
				return Global_262145.f_24089 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_LOW_WIN */;
			case 2:
				return 1;
			case 3:
				return Global_262145.f_24097 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_HIGH_WIN */;
			case 4:
				return 1;
			case 5:
				return Global_262145.f_24093 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_MED_WIN */;
			case 6:
				return Global_262145.f_24095 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_LOW_WIN */;
			case 7:
				return Global_262145.f_24091 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_HIGH_WIN */;
			case 8:
				return 1;
			case 9:
				return Global_262145.f_24092 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_LOW_WIN */;
			case 10:
				return 1;
			case 11:
				return Global_262145.f_24096 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_CASH_MED_WIN */;
			case 12:
				return 1;
			case 13:
				return Global_262145.f_24090 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_AP_MED_WIN */;
			case 14:
				return 1;
			case 15:
				return Global_262145.f_24094 /* Tunable: AW_FREE_ARENA_WAR_WHEEL_RP_HIGH_WIN */;
			default:
		}
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				return 1;
			case 1:
				return Global_262145.f_24080 /* Tunable: AW_ARENA_WAR_WHEEL_AP_LOW_WIN */;
			case 2:
				return 1;
			case 3:
				return Global_262145.f_24088 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_HIGH_WIN */;
			case 4:
				return 1;
			case 5:
				return Global_262145.f_24084 /* Tunable: AW_ARENA_WAR_WHEEL_RP_MED_WIN */;
			case 6:
				return Global_262145.f_24086 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_LOW_WIN */;
			case 7:
				return Global_262145.f_24082 /* Tunable: AW_ARENA_WAR_WHEEL_AP_HIGH_WIN */;
			case 8:
				return 1;
			case 9:
				return 1;
			case 10:
				return Global_262145.f_24083 /* Tunable: AW_ARENA_WAR_WHEEL_RP_LOW_WIN */;
			case 11:
				return Global_262145.f_24087 /* Tunable: AW_ARENA_WAR_WHEEL_CASH_MED_WIN */;
			case 12:
				return 1;
			case 13:
				return Global_262145.f_24081 /* Tunable: AW_ARENA_WAR_WHEEL_AP_MED_WIN */;
			case 14:
				return 1;
			case 15:
				return Global_262145.f_24085 /* Tunable: AW_ARENA_WAR_WHEEL_RP_HIGH_WIN */;
			}
		default:
	}
	return 0;
}

int func_689(int iParam0, bool bParam1)//Position - 0x401B40
{
	if (bParam1)
	{
		switch (iParam0)
		{
			case 0:
				return 1;
			case 1:
				return 4;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 1;
			case 5:
				return 3;
			case 6:
				return 2;
			case 7:
				return 4;
			case 8:
				return 1;
			case 9:
				return 3;
			case 10:
				return 1;
			case 11:
				return 2;
			case 12:
				return 1;
			case 13:
				return 4;
			case 14:
				return 6;
			case 15:
				return 3;
			default:
		}
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				return 1;
			case 1:
				return 4;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 1;
			case 5:
				return 3;
			case 6:
				return 2;
			case 7:
				return 4;
			case 8:
				return 1;
			case 9:
				return 5;
			case 10:
				return 3;
			case 11:
				return 2;
			case 12:
				return 1;
			case 13:
				return 4;
			case 14:
				return 6;
			case 15:
				return 3;
			}
		default:
	}
	return 0;
}

void func_690(int* iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x401C9F
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0->f_106, "SET_WHEEL_STYLE");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam3);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_691(int* iParam0, int iParam1)//Position - 0x401CCB
{
	iParam0->f_101 = iParam1;
}

int func_692(int* iParam0)//Position - 0x401CD9
{
	if (BitTest(*iParam0, 11) || BitTest(iParam0->f_1, 24))
	{
		return 1;
	}
	return 0;
}

int func_693()//Position - 0x401CFC
{
	if (((BitTest(Global_1965531, 2) || BitTest(Global_1965531, 3)) || BitTest(Global_1965531, 4)) || BitTest(Global_1965531, 5))
	{
		return 1;
	}
	return 0;
}

void func_694(int* iParam0, bool bParam1)//Position - 0x401DC2
{
	if (BitTest(*iParam0, 18))
	{
		MISC::SET_BIT(&Global_1965531, 6);
		MISC::CLEAR_BIT(iParam0, 18);
		if (!bParam1)
		{
			iParam0->f_20 = 1;
			iParam0->f_21 = 1;
		}
	}
	else if (BitTest(*iParam0, 19))
	{
		MISC::SET_BIT(&Global_1965531, 8);
		MISC::CLEAR_BIT(iParam0, 19);
		if (!bParam1)
		{
			iParam0->f_20 = 1;
			iParam0->f_21 = 1;
		}
	}
	else if (BitTest(*iParam0, 20))
	{
		MISC::SET_BIT(&Global_1965531, 7);
		MISC::CLEAR_BIT(iParam0, 20);
		if (!bParam1)
		{
			iParam0->f_20 = 1;
			iParam0->f_21 = 1;
		}
	}
	else if (BitTest(*iParam0, 21))
	{
		MISC::SET_BIT(&Global_1965531, 9);
		MISC::CLEAR_BIT(iParam0, 21);
		if (!bParam1)
		{
			iParam0->f_20 = 1;
			iParam0->f_21 = 1;
		}
	}
}

int func_695(bool bParam0)//Position - 0x401FC6
{
	int iVar0;
	iVar0 = 1;
	if (bParam0)
	{
		iVar0 = 0;
	}
	return iVar0;
}

int func_696(int iParam0)//Position - 0x402175
{
	switch (iParam0)
	{
		case 10:
			return 7;
		case 11:
			return 8;
		case 12:
			return 9;
		default:
	}
	return -1;
}

int func_697()//Position - 0x40743E
{
	return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_353;
}

Vector3 func_698()//Position - 0x407943
{
	return 2795.984f, -3930.3474f, 183.4774f;
}

int func_699(int iParam0, bool bParam1)//Position - 0x407A55
{
	if (bParam1)
	{
		switch (iParam0)
		{
			case 0:
				return 0;
			case 1:
				return 7;
			case 2:
				return 0;
			case 3:
				return 3;
			case 4:
				return 0;
			case 5:
				return 5;
			case 6:
				return 1;
			case 7:
				return 9;
			case 8:
				return 0;
			case 9:
				return 4;
			case 10:
				return 0;
			case 11:
				return 2;
			case 12:
				return 0;
			case 13:
				return 8;
			case 14:
				return 11;
			case 15:
				return 6;
			default:
		}
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				return 0;
			case 1:
				return 7;
			case 2:
				return 0;
			case 3:
				return 3;
			case 4:
				return 0;
			case 5:
				return 5;
			case 6:
				return 1;
			case 7:
				return 9;
			case 8:
				return 0;
			case 9:
				return 10;
			case 10:
				return 4;
			case 11:
				return 2;
			case 12:
				return 0;
			case 13:
				return 8;
			case 14:
				return 11;
			case 15:
				return 6;
			}
		default:
	}
	return -1;
}

int func_700(int iParam0, bool bParam1)//Position - 0x407BE4
{
	switch (iParam0)
	{
		case 0:
			if (bParam1)
			{
				return 6;
			}
			else
			{
				return 5;
			}
			break;
		case 1:
			return 1;
		case 2:
			return 1;
		case 3:
			return 1;
		case 4:
			return 1;
		case 5:
			return 1;
		case 6:
			return 1;
		case 7:
			return 1;
		case 8:
			return 1;
		case 9:
			return 1;
		case 10:
			if (bParam1)
			{
				return 0;
			}
			else
			{
				return 1;
			}
			break;
		case 11:
			return 1;
	}
	return 0;
}

int func_701(int iParam0)//Position - 0x407C8A
{
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 0;
		case 2:
			return 0;
		case 3:
			return 0;
		case 4:
			return 1;
		case 5:
			return 2;
		case 6:
			return 3;
		case 7:
			return 4;
		case 8:
			return 5;
		case 9:
			return 6;
		case 10:
			return 7;
		case 11:
			return 8;
		case 12:
			return 9;
		case 13:
			return 10;
		case 14:
			return 11;
		default:
	}
	return -1;
}

void func_702(var uParam0)//Position - 0x407E8A
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (*uParam0 - 1))
	{
		(*uParam0)[iVar0] = -1;
		iVar0++;
	}
}

int func_703()//Position - 0x407EAF
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (Global_262145.f_26638 /* Tunable: -486935470 */)
	{
		return 0;
	}
	bVar0 = false;
	iVar1 = PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID());
	if (iVar1 > 4 || iVar1 < 0)
	{
		iVar1 = 0;
	}
	iVar2 = Global_1058069.f_14[iVar1];
	if (iVar2 < 17)
	{
		if (BitTest(Global_4718592.f_658[iVar1 /*22957*/].f_7929[iVar2], 26))
		{
			bVar0 = true;
		}
	}
	if (BitTest(Global_4718592.f_32, 4) && !bVar0)
	{
		return 1;
	}
	return 0;
}

int func_704()//Position - 0x407F2D
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (Global_262145.f_26635 /* Tunable: 793083307 */)
	{
		return 0;
	}
	bVar0 = false;
	iVar1 = PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID());
	if (iVar1 > 4 || iVar1 < 0)
	{
		iVar1 = 0;
	}
	iVar2 = Global_1058069.f_14[iVar1];
	if (iVar2 < 17)
	{
		if (BitTest(Global_4718592.f_658[iVar1 /*22957*/].f_7929[iVar2], 24))
		{
			bVar0 = true;
		}
	}
	if (BitTest(Global_4718592.f_30, 14) && !bVar0)
	{
		return 1;
	}
	return 0;
}

int func_705()//Position - 0x408078
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (Global_262145.f_26636 /* Tunable: 1497794082 */)
	{
		return 0;
	}
	bVar0 = false;
	iVar1 = PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID());
	if (iVar1 > 4 || iVar1 < 0)
	{
		iVar1 = 0;
	}
	iVar2 = Global_1058069.f_14[iVar1];
	if (iVar2 < 17)
	{
		if (BitTest(Global_4718592.f_658[iVar1 /*22957*/].f_7929[iVar2], 23))
		{
			bVar0 = true;
		}
	}
	if (BitTest(Global_4718592.f_30, 13) && !bVar0)
	{
		return 1;
	}
	return 0;
}

void func_706(var uParam0)//Position - 0x40816C
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (*uParam0 - 1))
	{
		(*uParam0)[iVar0] = iVar0;
		iVar0++;
	}
}

void func_707(int iParam0)//Position - 0x408267
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_5 = iParam0;
}

void func_708(int iParam0)//Position - 0x40EC10
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_193 = iParam0;
}

void func_709()//Position - 0x40EF9B
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION() == 0)
	{
		return;
	}
}

int func_710(int iParam0)//Position - 0x40FD0D
{
	if (iParam0 >= 5 && iParam0 < 7)
	{
		return 1;
	}
	if (iParam0 >= 7 && iParam0 < 10)
	{
		return 2;
	}
	if (iParam0 >= 10 && iParam0 < 12)
	{
		return 3;
	}
	if (iParam0 >= 12 && iParam0 < 15)
	{
		return 4;
	}
	if (iParam0 >= 15 && iParam0 < 17)
	{
		return 5;
	}
	if (iParam0 >= 17 && iParam0 < 20)
	{
		return 6;
	}
	if (iParam0 >= 20 && iParam0 < 22)
	{
		return 7;
	}
	if (iParam0 >= 22 && iParam0 < 25)
	{
		return 8;
	}
	if (iParam0 >= 25 && iParam0 < 27)
	{
		return 9;
	}
	if (iParam0 >= 27 && iParam0 < 30)
	{
		return 10;
	}
	if (iParam0 >= 30 && iParam0 < 32)
	{
		return 11;
	}
	if (iParam0 >= 32 && iParam0 < 35)
	{
		return 12;
	}
	if (iParam0 >= 35 && iParam0 < 37)
	{
		return 13;
	}
	if (iParam0 >= 37 && iParam0 < 40)
	{
		return 14;
	}
	if (iParam0 >= 40 && iParam0 < 42)
	{
		return 15;
	}
	if (iParam0 >= 42 && iParam0 < 44)
	{
		return 16;
	}
	if (iParam0 >= 44 && iParam0 < 46)
	{
		return 17;
	}
	if (iParam0 >= 46 && iParam0 < 48)
	{
		return 18;
	}
	if (iParam0 >= 48 && iParam0 < 50)
	{
		return 19;
	}
	if (iParam0 >= 50)
	{
		return 20;
	}
	return 0;
}

int func_711()//Position - 0x4114BE
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (Global_2689235[iVar0 /*453*/].f_208 && iVar0 != PLAYER::NETWORK_PLAYER_ID_TO_INT())
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

char* func_712()//Position - 0x41270A
{
	switch (MISC::GET_RANDOM_INT_IN_RANGE(0, 2))
	{
		case 0:
			return "BBR_ADD_TEXT_1" /* GXT: Hey Pres. The bar's been standing room only lately. I gotta use my whole bodyweight to get that moneybag shut, even with a rear bumper like mine. Wanna pick up the cash sometime? */;
		case 1:
			return "BBR_ADD_TEXT_2" /* GXT: Hey Pres. We've made a ton of cash at the bar. You wanna ride by and get it? */;
		default:
	}
	return "";
}

int func_713(int iParam0)//Position - 0x413359
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_SPCONTOTALFORWHOUSE0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_SPCONTOTALFORWHOUSE1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_SPCONTOTALFORWHOUSE2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_SPCONTOTALFORWHOUSE3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_SPCONTOTALFORWHOUSE4_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_714(int iParam0)//Position - 0x4133D5
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_CONTOTALFORWHOUSE0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_CONTOTALFORWHOUSE1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_CONTOTALFORWHOUSE2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_CONTOTALFORWHOUSE3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_CONTOTALFORWHOUSE4_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_715(int iParam0)//Position - 0x41360C
{
	if (((((iParam0 == 2 || iParam0 == 4) || iParam0 == 6) || iParam0 == 7) || iParam0 == 8) || iParam0 == 9)
	{
		return 1;
	}
	return 0;
}

bool func_716()//Position - 0x413654
{
	return Global_2869985[__LIB_0__::getGlobal_1574918()] >= Global_262145.f_15615 /* Tunable: EXEC_CONTRABAND_SPECIAL_ITEM_THRESHOLD */;
}

void func_717(int iParam0)//Position - 0x413677
{
	Global_1640633[Global_1640632] = iParam0;
	Global_1640632++;
	if (Global_1640632 >= 7)
	{
		Global_1640632 = 0;
	}
}

int func_718(int iParam0)//Position - 0x413752
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		if (Global_1640633[iVar0] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_719()//Position - 0x41377E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		Global_1640633[iVar0] = -1;
		iVar0++;
	}
}

int func_720(int iParam0, int iParam1, int iParam2)//Position - 0x41393B
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (iVar0 != iParam2 && (*iParam0)[iVar0] == iParam1)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_721(int iParam0)//Position - 0x413EF1
{
	if (iParam0 == 0)
	{
		return 7648;
	}
	else if (iParam0 == 1)
	{
		return 7649;
	}
	else if (iParam0 == 2)
	{
		return 7650;
	}
	else if (iParam0 == 3)
	{
		return 7651;
	}
	else if (iParam0 == 4)
	{
		return 7652;
	}
	else if (iParam0 == 5)
	{
		return 7653;
	}
	return 7648;
}

int func_722(int iParam0)//Position - 0x413F53
{
	if (iParam0 == 0)
	{
		return 7642;
	}
	else if (iParam0 == 1)
	{
		return 7643;
	}
	else if (iParam0 == 2)
	{
		return 7644;
	}
	else if (iParam0 == 3)
	{
		return 7645;
	}
	else if (iParam0 == 4)
	{
		return 7646;
	}
	else if (iParam0 == 5)
	{
		return 7647;
	}
	return 7642;
}

int func_723(int iParam0)//Position - 0x41411C
{
	switch (iParam0)
	{
		case 0:
			return 3644;
		case 1:
			return 3645;
		case 2:
			return 3646;
		case 3:
			return 3647;
		case 4:
			return 3648;
		default:
	}
	return 13122;
}

int func_724(var uParam0)//Position - 0x415192
{
	int iVar0;
	iVar0 = uParam0;
	switch (iVar0)
	{
		case 2:
			return joaat("ex_prop_crate_oegg");
		case 4:
			return joaat("ex_prop_crate_minig");
		case 6:
			return joaat("ex_prop_crate_xldiam");
		case 7:
			return joaat("ex_prop_crate_shide");
		case 8:
			return joaat("ex_prop_crate_freel");
		case 9:
			return joaat("ex_prop_crate_watch");
		default:
	}
	return 0;
}

int func_725(int iParam0, int iParam1)//Position - 0x4151FA
{
	switch (iParam0)
	{
		case 0:
		case 1:
			return 1;
		case 2:
			if ((((((iParam1 < 7 || (iParam1 > 20 && iParam1 < 28)) || (iParam1 > 41 && iParam1 < 49)) || (iParam1 > 62 && iParam1 < 70)) || (iParam1 > 83 && iParam1 < 87)) || (iParam1 > 92 && iParam1 < 96)) || (iParam1 > 101 && iParam1 < 105))
			{
				return 1;
			}
			break;
	}
	return 0;
}

void func_726(int iParam0)//Position - 0x437224
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(Global_2815059.f_5195.f_17[iVar0]), iVar1);
}

int func_727(int iParam0, int iParam1)//Position - 0x4389D6
{
	switch (iParam0)
	{
		case 0:
			if (Global_262145.f_18711 /* Tunable: BIKER_DISABLE_BY_THE_POUND */)
			{
				return 1;
			}
			if (Global_262145.f_18712 /* Tunable: BIKER_DISABLE_BY_THE_POUND_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18713 /* Tunable: BIKER_DISABLE_BY_THE_POUND_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18714 /* Tunable: BIKER_DISABLE_BY_THE_POUND_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 1:
			if (Global_262145.f_18691 /* Tunable: BIKER_DISABLE_POW */)
			{
				return 1;
			}
			if (Global_262145.f_18692 /* Tunable: BIKER_DISABLE_POW_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18693 /* Tunable: BIKER_DISABLE_POW_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18694 /* Tunable: BIKER_DISABLE_POW_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 2:
			if (Global_262145.f_18702 /* Tunable: BIKER_DISABLE_GUNS_FOR_HIRE */)
			{
				return 1;
			}
			if (Global_262145.f_18703 /* Tunable: BIKER_DISABLE_GUNS_FOR_HIRE_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18704 /* Tunable: BIKER_DISABLE_GUNS_FOR_HIRE_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18705 /* Tunable: BIKER_DISABLE_GUNS_FOR_HIRE_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 3:
			if (Global_262145.f_18722 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE */)
			{
				return 1;
			}
			if (Global_262145.f_18723 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_YELLOW_JACK */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18724 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_BUS */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18725 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_ULSA */ && iParam1 == 2)
			{
				return 1;
			}
			else if (Global_262145.f_18726 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_GOLF */ && iParam1 == 3)
			{
				return 1;
			}
			else if (Global_262145.f_18727 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_CHICKEN */ && iParam1 == 4)
			{
				return 1;
			}
			else if (Global_262145.f_18728 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_LSIA */ && iParam1 == 5)
			{
				return 1;
			}
			else if (Global_262145.f_18729 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_DOWNTOWN */ && iParam1 == 6)
			{
				return 1;
			}
			else if (Global_262145.f_18730 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_VINEWOOD */ && iParam1 == 7)
			{
				return 1;
			}
			else if (Global_262145.f_18731 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_WILDERNESS */ && iParam1 == 8)
			{
				return 1;
			}
			else if (Global_262145.f_18732 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_MOVIE */ && iParam1 == 9)
			{
				return 1;
			}
			else if (Global_262145.f_18733 /* Tunable: BIKER_DISABLE_WEAPON_OF_CHOICE_ROAMING */ && iParam1 == 10)
			{
				return 1;
			}
			break;
		case 4:
			if (Global_262145.f_18683 /* Tunable: BIKER_DISABLE_GUNRUNNING */)
			{
				return 1;
			}
			if (Global_262145.f_18684 /* Tunable: BIKER_DISABLE_GUNRUNNING_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18685 /* Tunable: BIKER_DISABLE_GUNRUNNING_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18686 /* Tunable: BIKER_DISABLE_GUNRUNNING_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 5:
			if (Global_262145.f_18738 /* Tunable: BIKER_DISABLE_NINE_TENTHS */)
			{
				return 1;
			}
			if (Global_262145.f_18739 /* Tunable: BIKER_DISABLE_NINE_TENTHS_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18740 /* Tunable: BIKER_DISABLE_NINE_TENTHS_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18741 /* Tunable: BIKER_DISABLE_NINE_TENTHS_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 6:
			if (Global_262145.f_18760 /* Tunable: BIKER_DISABLE_JAILBREAK */)
			{
				return 1;
			}
			if (Global_262145.f_18761 /* Tunable: BIKER_DISABLE_JAILBREAK_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18762 /* Tunable: BIKER_DISABLE_JAILBREAK_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18763 /* Tunable: BIKER_DISABLE_JAILBREAK_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 7:
			if (Global_262145.f_18748 /* Tunable: BIKER_DISABLE_CRACKED */)
			{
				return 1;
			}
			if (Global_262145.f_18749 /* Tunable: BIKER_DISABLE_CRACKED_0 */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18750 /* Tunable: BIKER_DISABLE_CRACKED_1 */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18751 /* Tunable: BIKER_DISABLE_CRACKED_2 */ && iParam1 == 2)
			{
				return 1;
			}
			break;
		case 8:
			if (Global_262145.f_18768 /* Tunable: BIKER_DISABLE_FRAGILE_GOODS */)
			{
				return 1;
			}
			if (Global_262145.f_18769 /* Tunable: BIKER_DISABLE_FRAGILE_GOODS_NE */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18770 /* Tunable: BIKER_DISABLE_FRAGILE_GOODS_NW */ && iParam1 == 1)
			{
				return 1;
			}
			else if (Global_262145.f_18771 /* Tunable: BIKER_DISABLE_FRAGILE_GOODS_SE */ && iParam1 == 2)
			{
				return 1;
			}
			else if (Global_262145.f_18772 /* Tunable: BIKER_DISABLE_FRAGILE_GOODS_SW */ && iParam1 == 3)
			{
				return 1;
			}
			break;
		case 9:
			if (Global_262145.f_18789 /* Tunable: BIKER_DISABLE_TORCHED */)
			{
				return 1;
			}
			if (Global_262145.f_18790 /* Tunable: BIKER_DISABLE_TORCHED_CITY */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18791 /* Tunable: BIKER_DISABLE_TORCHED_COUNTRY */ && iParam1 == 1)
			{
				return 1;
			}
			break;
		case 10:
			if (Global_262145.f_18781 /* Tunable: BIKER_DISABLE_OUTRIDER */)
			{
				return 1;
			}
			if (Global_262145.f_18782 /* Tunable: BIKER_DISABLE_OUTRIDER_CITY */ && iParam1 == 0)
			{
				return 1;
			}
			else if (Global_262145.f_18783 /* Tunable: BIKER_DISABLE_OUTRIDER_COUNTRY */ && iParam1 == 1)
			{
				return 1;
			}
			break;
		case 11:
			if (Global_262145.f_32529 /* Tunable: -553806806 */)
			{
				return 1;
			}
			break;
		case 12:
			if (Global_262145.f_32530 /* Tunable: 910650986 */)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_728(int iParam0)//Position - 0x43909E
{
	switch (iParam0)
	{
		case joaat("chimera"):
			return 1;
		default:
	}
	return 0;
}

bool func_729()//Position - 0x439AA0
{
	return __LIB_2__::func_743(15);
}

int func_730(int iParam0)//Position - 0x43ACED
{
	int iVar0;
	if (iParam0 == 42)
	{
		return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (Global_2666179[iVar0 /*13*/] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_731(int iParam0)//Position - 0x43AE19
{
	if ((__LIB_4__::func_90(iParam0) || __LIB_1__::func_78(iParam0)) || __LIB_7__::func_163(iParam0))
	{
		return 0;
	}
	return 1;
}

int func_732(int iParam0)//Position - 0x43AE47
{
	switch (Global_2666788)
	{
		case 0:
		case 1:
		case 10:
		case 11:
		case 12:
			return 0;
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
			break;
		default:
			return 0;
	}
	switch (iParam0)
	{
		case 0:
		case 1:
		case 3:
		case 4:
		case 5:
			return 0;
		case 2:
		case 6:
		case 7:
			return 1;
		default:
	}
	return 0;
}

bool func_733(int iParam0)//Position - 0x43AEF1
{
	if (iParam0 == 42)
	{
		return 0;
	}
	return iParam0 == Global_2666223;
}

bool func_734(int iParam0)//Position - 0x43AF5C
{
	int iVar0;
	iVar0 = CLOCK::GET_CLOCK_HOURS();
	iVar0++;
	if (iVar0 >= 24)
	{
		iVar0 = 0;
	}
	return BitTest(iParam0, iVar0);
}

bool func_735(int iParam0)//Position - 0x43AF7F
{
	int iVar0;
	iVar0 = CLOCK::GET_CLOCK_HOURS();
	return BitTest(iParam0, iVar0);
}

int func_736(int iParam0)//Position - 0x43B040
{
	return Global_2661084[iParam0 /*10*/].f_1;
}

bool func_737(bool bParam0)//Position - 0x43C278
{
	return BitTest(Global_1853348[bParam0 /*834*/].f_11.f_1, 1);
}

void func_738(int iParam0, int iParam1)//Position - 0x43DD12
{
	int iVar0;
	iVar0 = __LIB_18__::func_119(iParam0);
	HUD::SET_BLIP_DISPLAY(iVar0, 0);
}

void func_739(int iParam0)//Position - 0x43DECB
{
	if (__LIB_18__::func_133(iParam0))
	{
		return;
	}
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 8);
}

void func_740(int iParam0)//Position - 0x43E196
{
	__LIB_18__::func_140(iParam0);
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 8);
}

int func_741(int iParam0, struct<3> Param1, struct<4> Param2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8)//Position - 0x43EFD9
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param2.f_3)))
	{
		iVar1 = MISC::GET_HASH_KEY(&(Param2.f_3));
	}
	if (iVar1 != 0)
	{
		iVar0 = 0;
		while (iVar0 < Global_1573885)
		{
			if (!__LIB_18__::func_125(iVar0))
			{
				if (Global_2621865[iVar0 /*26*/].f_25 == iVar1)
				{
					if (MISC::ARE_STRINGS_EQUAL(&(Global_2621865[iVar0 /*26*/].f_15.f_3), &(Param2.f_3)))
					{
						if (Param2.f_1 == 9999)
						{
							return iVar0;
						}
						else
						{
							if (Global_2621865[iVar0 /*26*/].f_15.f_1 == 9999)
							{
								return iVar0;
							}
							return iVar0;
						}
					}
				}
			}
			iVar0++;
		}
		return -1;
	}
	iVar0 = 0;
	while (iVar0 < Global_1573885)
	{
		if (!__LIB_18__::func_125(iVar0))
		{
			if ((Global_2621865[iVar0 /*26*/].f_2 == iParam0 && Global_2621865[iVar0 /*26*/].f_15 == Param2.f_0) && Global_2621865[iVar0 /*26*/].f_15.f_1 == Param2.f_1)
			{
				if (__LIB_0__::func_490(Global_2621865[iVar0 /*26*/].f_3, Param1, 1056964608, 0))
				{
					return iVar0;
				}
			}
		}
		iVar0++;
	}
	return -1;
}

void func_742(var uParam0)//Position - 0x43FE8D
{
	__LIB_18__::func_148(uParam0);
}

bool func_743()//Position - 0x44128C
{
	return __LIB_0__::func_137(28155, -1);
}

void func_744()//Position - 0x44339D
{
	Global_2714762.f_761 = 0;
}

int func_745(int iParam0)//Position - 0x444646
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_2347 /* Tunable: BOUNTY_AWARD_LEVEL_1_MODIFIER */;
			break;
		case 1:
			return Global_262145.f_2348 /* Tunable: BOUNTY_AWARD_LEVEL_2_MODIFIER */;
			break;
		case 2:
			return Global_262145.f_2349 /* Tunable: BOUNTY_AWARD_LEVEL_3_MODIFIER */;
			break;
		case 3:
			return Global_262145.f_2350 /* Tunable: BOUNTY_AWARD_LEVEL_4_MODIFIER */;
			break;
		case 4:
			return Global_262145.f_2351 /* Tunable: BOUNTY_AWARD_LEVEL_5_MODIFIER */;
			break;
	}
	return 0;
}

void func_746(int iParam0)//Position - 0x444C94
{
	Global_2727724 = iParam0;
}

void func_747()//Position - 0x444EB1
{
	if (!ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_61.f_57))
	{
		if (__LIB_0__::func_799(MISC::GET_HASH_KEY("tr_prop_tr_meet_coll_01")))
		{
			Global_2703735.f_61.f_57 = OBJECT::CREATE_OBJECT(MISC::GET_HASH_KEY("tr_prop_tr_meet_coll_01"), -2000f, 1113.2114f, -25.362434f, false, false, false);
			ENTITY::FREEZE_ENTITY_POSITION(Global_2703735.f_61.f_57, true);
			ENTITY::SET_ENTITY_CAN_BE_DAMAGED(Global_2703735.f_61.f_57, false);
			ENTITY::SET_ENTITY_VISIBLE(Global_2703735.f_61.f_57, false, false);
			ENTITY::SET_ENTITY_PROOFS(Global_2703735.f_61.f_57, true, true, true, false, true, true, true, true);
		}
	}
}

struct<7> func_748()//Position - 0x44B6D4
{
	struct<7> Var0;
	CLOCK::GET_POSIX_TIME(&Var0, &(Var0.f_1), &(Var0.f_2), &(Var0.f_3), &(Var0.f_4), &(Var0.f_5));
	return Var0;
}

bool func_749(bool bParam0)//Position - 0x44D711
{
	int iVar0;
	if (bParam0 == PLAYER::PLAYER_ID())
	{
		return Global_2727797;
	}
	else
	{
		iVar0 = bParam0;
		if (iVar0 > -1)
		{
			return Global_2689235[iVar0 /*453*/].f_266;
		}
	}
	return Global_2727797;
}

void func_750(int iParam0)//Position - 0x44EBF5
{
	Global_2727810 = iParam0;
}

bool func_751()//Position - 0x450961
{
	return Global_2826521.f_259;
}

bool func_752()//Position - 0x450970
{
	return Global_2826521.f_258;
}

bool func_753()//Position - 0x450D86
{
	return BitTest(Global_1836844.f_1, 8);
}

float func_754(int iParam0, bool bParam1)//Position - 0x452866
{
	switch (iParam0)
	{
		case joaat("halftrack"):
			return 0.7f;
		case joaat("tampa3"):
			switch (bParam1)
			{
				case 4:
					return 0.3f;
				default:
			}
			break;
		case joaat("cargobob"):
		case joaat("cargobob2"):
		case joaat("cargobob3"):
		case joaat("cargobob4"):
			return 0.75f;
			break;
		case joaat("speedo4"):
			switch (bParam1)
			{
				case 4:
					return 0.7f;
				default:
			}
			break;
	}
	return 0.8f;
}

void func_755(int iParam0)//Position - 0x453B9F
{
	Global_2683918.f_2452[iParam0 /*16*/].f_11 = 0;
}

void func_756(int iParam0)//Position - 0x453C03
{
	struct<15> Var0;
	Var0.f_13 = -1;
	Var0.f_14 = 1;
	MISC::COPY_SCRIPT_STRUCT(&(Global_2683918.f_2452[iParam0 /*16*/]), &Var0, 16);
}

void func_757(int iParam0, bool bParam1)//Position - 0x453E7B
{
	int iVar0;
	struct<14> Var1;
	if (bParam1)
	{
		iVar0 = Global_1911933[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*260*/].f_94.f_21[iParam0 /*14*/].f_4;
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, false))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, false, true);
			}
			OBJECT::DELETE_OBJECT(&iVar0);
		}
	}
	Var1.f_13 = -1;
	MISC::COPY_SCRIPT_STRUCT(&(Global_1911933[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*260*/].f_94.f_21[iParam0 /*14*/]), &Var1, 14);
}

void func_758(int iParam0, bool bParam1)//Position - 0x453F3A
{
	var uVar0;
	if (ENTITY::DOES_ENTITY_EXIST(Global_1911872[iParam0 /*6*/].f_5))
	{
		if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Global_1911872[iParam0 /*6*/].f_5, false))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_1911872[iParam0 /*6*/].f_5, false, true);
		}
		OBJECT::DELETE_OBJECT(&(Global_1911872[iParam0 /*6*/].f_5));
	}
	if (bParam1)
	{
		__LIB_8__::func_413(&(Global_1911933[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*260*/].f_94[iParam0 /*2*/]));
		MISC::COPY_SCRIPT_STRUCT(&(Global_1911872[iParam0 /*6*/]), &uVar0, 6);
	}
}

bool func_759(var uParam0, int iParam1)//Position - 0x458A61
{
	int iVar0;
	iVar0 = uParam0;
	return !__LIB_0__::func_624(&(Global_2689235[iVar0 /*453*/].f_435), iParam1);
}

int func_760(bool bParam0)//Position - 0x45EC5D
{
	struct<13> Var0;
	if (__LIB_1__::func_693(bParam0, 0, 0))
	{
		Var0 = { __LIB_1__::func_696(bParam0) };
		if (NETWORK::NETWORK_IS_FRIEND(&Var0))
		{
			return 1;
		}
	}
	return 0;
}

int func_761(bool bParam0, int iParam1)//Position - 0x46079C
{
	int iVar0;
	if (__LIB_1__::func_800())
	{
		return 0;
	}
	iVar0 = __LIB_27__::func_363(bParam0);
	if (iVar0 == -1)
	{
		return 0;
	}
	if (!iParam1 == Global_2656326[iVar0 /*46*/].f_8)
	{
		return 0;
	}
	return 1;
}

void func_762()//Position - 0x460D5B
{
	MISC::SET_BIT(&(Global_2714762.f_3), 7);
}

void func_763(int iParam0)//Position - 0x46255D
{
	Global_4535598 = iParam0;
}

int func_764()//Position - 0x4644C0
{
	return 600;
}

int func_765(int iParam0)//Position - 0x4653E1
{
	switch (iParam0)
	{
		case 32:
		case 33:
		case 8:
		case 49:
		case 144:
		case 145:
		case 146:
		case 147:
		case 148:
		case 149:
		case 150:
		case 151:
			return 1;
		default:
	}
	return 0;
}

int func_766(int iParam0)//Position - 0x46543D
{
	switch (iParam0)
	{
		case 48:
		case 47:
		case 49:
			return 1;
		default:
	}
	return 0;
}

int func_767(int iParam0)//Position - 0x465463
{
	switch (iParam0)
	{
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
		case 49:
		case 50:
			return 1;
			break;
	}
	return 0;
}

void func_768(int iParam0)//Position - 0x46589B
{
	Global_2870048 = 1;
	Global_2870049 = iParam0;
}

int func_769(int iParam0)//Position - 0x467F20
{
	switch (iParam0)
	{
		case 0:
			return 7856;
			break;
		case 1:
			return 7857;
			break;
		case 2:
			return 7858;
			break;
		case 3:
			return 7859;
			break;
		case 4:
			return 7860;
			break;
		case 5:
			return 7861;
			break;
		case 6:
			return 7862;
			break;
		case 7:
			return 7863;
			break;
	}
	return 13122;
}

int func_770(bool bParam0)//Position - 0x4699CE
{
	if (!bParam0 == PLAYER::PLAYER_ID())
	{
		if (__LIB_1__::func_693(bParam0, 1, 1))
		{
			if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(bParam0, PLAYER::PLAYER_ID()))
			{
				if (ENTITY::DOES_ENTITY_EXIST(PLAYER::GET_PLAYER_PED(bParam0)))
				{
					if (ENTITY::IS_ENTITY_VISIBLE(PLAYER::GET_PLAYER_PED(bParam0)))
					{
						if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(bParam0), true), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) < 625f)
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

void func_771(int iParam0)//Position - 0x469B52
{
	int iVar0;
	int iVar1;
	iVar1 = iParam0;
	iVar0 = 0;
	while (iVar0 <= 0)
	{
		Global_1648034.f_241.f_136[iVar0 /*33*/][iVar1] = 0;
		iVar0++;
	}
}

int func_772(bool bParam0, int iParam1)//Position - 0x46A866
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(iParam1) + 1;
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		iVar0 = 0;
		while (iVar0 < iVar1)
		{
			if (!VEHICLE::IS_VEHICLE_SEAT_FREE(iParam1, (iVar0 - 1), false))
			{
				iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam1, (iVar0 - 1), false);
				if (!PED::IS_PED_INJURED(iVar2))
				{
					if (PED::IS_PED_A_PLAYER(iVar2))
					{
						if (PLAYER::GET_PLAYER_PED(bParam0) == iVar2)
						{
							return 1;
						}
					}
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_773(bool bParam0, bool bParam1)//Position - 0x46AA01
{
	if (__LIB_3__::func_143(bParam0) && __LIB_3__::func_143(bParam1))
	{
		if (SYSTEM::VDIST(Global_2689235[bParam0 /*453*/].f_71.f_7, Global_2689235[bParam1 /*453*/].f_71.f_7) < 0.1f)
		{
			return 1;
		}
	}
	return 0;
}

int func_774(int iParam0)//Position - 0x46AAE6
{
	if (BitTest(Global_2689235[iParam0 /*453*/].f_71.f_2, 26) && !BitTest(Global_2689235[iParam0 /*453*/].f_71.f_2, 27))
	{
		return 1;
	}
	return 0;
}

int func_775(bool bParam0, bool bParam1)//Position - 0x46ABCA
{
	if (__LIB_3__::func_143(bParam0) && __LIB_3__::func_143(bParam1))
	{
		if (Global_2689235[bParam0 /*453*/].f_71.f_6 == Global_2689235[bParam1 /*453*/].f_71.f_6 && NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(bParam0, bParam1))
		{
			return 1;
		}
	}
	return 0;
}

bool func_776(bool bParam0)//Position - 0x46AD51
{
	return BitTest(Global_2689235[bParam0 /*453*/].f_71.f_2, 8);
}

int func_777(bool bParam0)//Position - 0x46BCD2
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_TEAM(Global_2703735);
	if (iVar0 > -1)
	{
		if (BitTest(Global_2689235[bParam0 /*453*/].f_71.f_2, (10 + iVar0)))
		{
			return 1;
		}
	}
	return 0;
}

int func_778(bool bParam0)//Position - 0x46BD66
{
	return __LIB_15__::func_303(Global_2678393.f_789[bParam0], &(Global_2678393.f_394), bParam0);
}

int func_779(int iParam0)//Position - 0x46BD86
{
	if (NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), Global_2678393.f_333[iParam0]) < 3500)
	{
		return 1;
	}
	return 0;
}

int func_780(int iParam0, bool bParam1)//Position - 0x46C7EB
{
	return BitTest(Global_1648034.f_241[__LIB_0__::func_161(iParam0) /*33*/][bParam1], __LIB_0__::func_160(iParam0));
	return 0;
}

bool func_781()//Position - 0x46E168
{
	return Global_1937518.f_40;
}

bool func_782(bool bParam0)//Position - 0x470271
{
	return HUD::DOES_BLIP_EXIST(Global_2678393[bParam0]);
}

void func_783()//Position - 0x4719AD
{
	Global_2667225.f_2881 = NETWORK::GET_NETWORK_TIME_ACCURATE();
}

int func_784(int iParam0)//Position - 0x474FB8
{
	int iVar0;
	iVar0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(iParam0);
	if (iVar0 != -1)
	{
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

void func_785(var uParam0, var uParam1)//Position - 0x4878C9
{
	*uParam0 = Global_4521801.f_913;
	*uParam1 = Global_4521801.f_914;
}

int func_786()//Position - 0x487F54
{
	if (Global_22640 == 6 || Global_22640 > 6)
	{
		return 0;
	}
	if (BitTest(Global_8138, 3))
	{
		if (PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 174 /*INPUT_CELLPHONE_LEFT*/))
		{
			if (HUD::IS_PAUSE_MENU_ACTIVE() || HUD::IS_WARNING_MESSAGE_ACTIVE())
			{
				return 0;
			}
			else
			{
				return 1;
			}
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

void func_787(int iParam0)//Position - 0x48CFAC
{
	Global_1574927 = iParam0;
}

var func_788()//Position - 0x48CFBA
{
	return Global_2727892;
}

void func_789(int iParam0)//Position - 0x48CFC6
{
	Global_1574925 = iParam0;
}

bool func_790()//Position - 0x48CFD4
{
	return Global_2725912;
}

void func_791(int iParam0)//Position - 0x48CFE0
{
	Global_2725403 = iParam0;
}

void func_792(int iParam0)//Position - 0x48CFEE
{
	Global_2727751 = iParam0;
}

void func_793(int iParam0)//Position - 0x48CFFC
{
	Global_1575050 = iParam0;
}

int func_794()//Position - 0x48D00A
{
	return Global_1575050;
}

void func_795(int iParam0)//Position - 0x48D016
{
	Global_1574533 = iParam0;
}

void func_796(int iParam0)//Position - 0x48D024
{
	Global_1574534 = iParam0;
}

void func_797(int iParam0)//Position - 0x48D032
{
	Global_1574922 = iParam0;
}

int func_798()//Position - 0x48DEA2
{
	return Global_1574922;
}

int func_799()//Position - 0x48DEAE
{
	return Global_1575070;
	return 0;
}

void func_800()//Position - 0x48DEBE
{
	Global_2727791 = 1;
	if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		if (STREAMING::IS_SWITCH_READY_FOR_DESCENT())
		{
			STREAMING::ALLOW_PLAYER_SWITCH_DESCENT();
		}
	}
}

void func_801(int iParam0)//Position - 0x48DEE3
{
	Global_1574923 = iParam0;
}

void func_802(int iParam0)//Position - 0x48DEF1
{
	Global_1575037 = iParam0;
}

void func_803(int iParam0)//Position - 0x48DEFF
{
	Global_2727070 = iParam0;
}

int func_804(var uParam0)//Position - 0x491D79
{
	if (uParam0->f_1 == 1)
	{
		if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_230 >= 2 && CAM::IS_SCREEN_FADED_OUT())
		{
			return 0;
		}
	}
	if (uParam0->f_1 == 23)
	{
		if (__LIB_1__::func_693(uParam0->f_17, 1, 1))
		{
			return 0;
		}
	}
	return 1;
}

int func_805()//Position - 0x495FFF
{
	if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833, 15))
	{
		return 1;
	}
	return 0;
}

int func_806()//Position - 0x496078
{
	if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833, 16))
	{
		return 1;
	}
	return 0;
}

int func_807(int iParam0)//Position - 0x497E46
{
	if (__LIB_12__::func_568(iParam0) == 133)
	{
		return Global_2815059.f_5116;
	}
	return -1;
}

int func_808(bool bParam0)//Position - 0x498988
{
	switch (__LIB_5__::func_185(bParam0))
	{
		case 256:
			return -1396457166;
		case 263:
			return -956255885;
		default:
	}
	if (__LIB_6__::func_65(bParam0, 15))
	{
		return 303124754;
	}
	return -1292453789;
}

int func_809(bool bParam0)//Position - 0x498A23
{
	if (PLAYER::GET_PLAYER_TEAM(bParam0) > -1)
	{
		if (BitTest(Global_4718592.f_95506, PLAYER::GET_PLAYER_TEAM(bParam0)))
		{
			return 1;
		}
	}
	return 0;
}

int func_810(bool bParam0)//Position - 0x498A4E
{
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		return BitTest(Global_2678393.f_368, bParam0);
	}
	return 0;
}

bool func_811(bool bParam0)//Position - 0x498AB7
{
	return __LIB_15__::func_303(Global_2678393.f_657[bParam0], &(Global_2678393.f_390), bParam0);
}

int func_812(bool bParam0)//Position - 0x498AD7
{
	if (BitTest(Global_2678393.f_366, bParam0) || BitTest(Global_2678393.f_376, bParam0))
	{
		return 1;
	}
	if (HUD::DOES_BLIP_EXIST(Global_2678393[bParam0]))
	{
		if (HUD::GET_BLIP_FADE_DIRECTION(Global_2678393[bParam0]) != 0)
		{
			return 1;
		}
	}
	return 0;
}

bool func_813(bool bParam0)//Position - 0x498D6F
{
	return __LIB_15__::func_303(Global_2678393.f_690[bParam0], &(Global_2678393.f_391), bParam0);
}

bool func_814(bool bParam0)//Position - 0x498DB6
{
	return __LIB_15__::func_303(Global_2678393.f_756[bParam0], &(Global_2678393.f_392), bParam0);
}

int func_815(int iParam0)//Position - 0x498EEE
{
	if ((Global_1836576 && Global_1853348[iParam0 /*834*/] == 1) || (Global_1836577 && Global_1853348[iParam0 /*834*/] == 0))
	{
		return 1;
	}
	return 0;
}

int func_816(int iParam0)//Position - 0x4999E6
{
	if (iParam0 == HUD::GET_STANDARD_BLIP_ENUM_ID())
	{
		return 1;
	}
	return 0;
}

var func_817(bool bParam0)//Position - 0x4999FC
{
	return Global_2678393.f_525[bParam0];
}

int func_818(float fParam0)//Position - 0x499A0F
{
	if (fParam0 < -47.2f)
	{
		return 0;
	}
	return 1;
}

int func_819(bool bParam0, int iParam1)//Position - 0x499A27
{
	struct<3> Var0;
	if (__LIB_1__::func_693(bParam0, 0, 1))
	{
		Var0 = { __LIB_1__::func_694(bParam0) };
		return __LIB_12__::func_823(Var0, iParam1);
	}
	return 0;
}

int func_820(bool bParam0)//Position - 0x49B432
{
	if (__LIB_18__::func_712())
	{
		if (Global_1836566 != -1)
		{
			if (Global_1836566 == bParam0)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_821()//Position - 0x49B781
{
	if (__LIB_26__::func_51(__LIB_6__::func_306(Global_2703735)))
	{
		return 225;
	}
	return 586;
}

void func_822(bool bParam0)//Position - 0x49B9C3
{
	MISC::SET_BIT(&(Global_2678393.f_397), bParam0);
}

bool func_823(bool bParam0)//Position - 0x49BB0E
{
	return BitTest(Global_2678393.f_379, bParam0);
}

void func_824(bool bParam0, bool bParam1)//Position - 0x49BE82
{
	if (HUD::DOES_BLIP_EXIST(Global_2678393[bParam0]))
	{
		if (bParam1)
		{
			if (!BitTest(Global_2678393.f_383, bParam0))
			{
				HUD::SHOW_HEADING_INDICATOR_ON_BLIP(Global_2678393[bParam0], true);
				MISC::SET_BIT(&(Global_2678393.f_383), bParam0);
			}
		}
		else if (BitTest(Global_2678393.f_383, bParam0))
		{
			HUD::SHOW_HEADING_INDICATOR_ON_BLIP(Global_2678393[bParam0], false);
			MISC::CLEAR_BIT(&(Global_2678393.f_383), bParam0);
		}
	}
	else if (BitTest(Global_2678393.f_383, bParam0))
	{
		MISC::CLEAR_BIT(&(Global_2678393.f_383), bParam0);
	}
}

bool func_825(bool bParam0)//Position - 0x49BFAB
{
	return BitTest(Global_2678393.f_382, bParam0);
}

void func_826(bool bParam0, var uParam1, var uParam2, var uParam3)//Position - 0x49C083
{
	Global_2678393.f_69[bParam0] = uParam1;
	Global_2678393.f_102[bParam0] = uParam2;
	Global_2678393.f_135[bParam0] = uParam3;
}

bool func_827(bool bParam0)//Position - 0x49C0AF
{
	return BitTest(Global_2678393.f_381, bParam0);
}

int func_828(bool bParam0, int iParam1, int iParam2, int iParam3)//Position - 0x49C0F7
{
	if ((Global_2678393.f_69[bParam0] == iParam1 && Global_2678393.f_102[bParam0] == iParam2) && Global_2678393.f_135[bParam0] == iParam3)
	{
		return 1;
	}
	return 0;
}

int func_829(bool bParam0)//Position - 0x49C199
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_TEAM(bParam0);
	if (iVar0 > -1 && iVar0 < 4)
	{
		if (Global_4718592.f_111249[iVar0] > -1)
		{
			return 1;
		}
	}
	return 0;
}

bool func_830(int iParam0)//Position - 0x49C653
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_71.f_2, 26);
}

int func_831(bool bParam0)//Position - 0x49CBAC
{
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		return BitTest(Global_2678393.f_369, bParam0);
	}
	return 0;
}

Vector3 func_832(int iParam0)//Position - 0x49CC4E
{
	switch (iParam0)
	{
		case 91:
			return 268.5567f, -1808.6705f, 26.1131f;
			break;
		case 92:
			return -1487.1534f, -926.2145f, 9.4102f;
			break;
		case 93:
			return 53.8106f, -1027.6407f, 29.4261f;
			break;
		case 94:
			return 54.1676f, 2793.9036f, 57.135f;
			break;
		case 95:
			return -360.0072f, 6051.0093f, 30.3827f;
			break;
		case 96:
			return 1731.2938f, 3698.5935f, 33.7762f;
			break;
		case 97:
			return 940.4277f, -1478.9342f, 30.0416f;
			break;
		case 98:
			return 181.3953f, 324.3145f, 104.5234f;
			break;
		case 99:
			return -16.8933f, -176.4705f, 51.6339f;
			break;
		case 100:
			return 2474.8977f, 4099.427f, 37.2816f;
			break;
		case 101:
			return -49.2044f, 6430.939f, 30.8569f;
			break;
		case 102:
			return -1141.6272f, -1558.1749f, 3.2943f;
			break;
	}
	return 0f, 0f, 0f;
}

int func_833(bool bParam0)//Position - 0x49CEB3
{
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		return 1;
	}
	return 0;
}

float func_834(int iParam0)//Position - 0x49D311
{
	float fVar0;
	fVar0 = (WEAPON::GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(iParam0) * 2.5f);
	if (fVar0 > 400f)
	{
		fVar0 = 400f;
	}
	return fVar0;
}

void func_835(bool bParam0)//Position - 0x49D3F0
{
	if (!SCRIPT::IS_THREAD_ACTIVE(Global_2678393.f_1575) || Global_2678393.f_1575 == SCRIPT::GET_ID_OF_THIS_THREAD())
	{
		if (bParam0)
		{
			Global_2678393.f_1575 = SCRIPT::GET_ID_OF_THIS_THREAD();
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2), 20);
		}
		else
		{
			Global_2678393.f_1575 = -1;
			MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_71.f_2), 20);
		}
	}
}

bool func_836()//Position - 0x49D6D1
{
	return __LIB_26__::func_281(PLAYER::PLAYER_ID());
}

int func_837(int iParam0, bool bParam1)//Position - 0x49E7A2
{
	if (Global_78319)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && (!bParam1 || VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)))
		{
			if (DECORATOR::DECOR_EXIST_ON(iParam0, "Player_Submarine"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_838()//Position - 0x4A13F4
{
	if (SCRIPT::IS_THREAD_ACTIVE(Global_2678393.f_1658))
	{
		return Global_2678393.f_1659;
	}
	return 0;
}

int func_839(bool bParam0)//Position - 0x4A391D
{
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		if (BitTest(Global_2689235[bParam0 /*453*/].f_416, 0))
		{
			return 1;
		}
	}
	return 0;
}

int func_840(int iParam0)//Position - 0x4A3E3F
{
	if (__LIB_1__::func_130())
	{
		if (iParam0 < 0)
		{
			return 0;
		}
		if (PLAYER::NETWORK_PLAYER_ID_TO_INT() < 0)
		{
			return 0;
		}
		return BitTest(Global_1659950[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*26*/].f_25, iParam0);
	}
	else if (Global_1836378)
	{
		return 1;
	}
	if (BitTest(Global_1659869[iParam0], 12) && BitTest(Global_4718592.f_30, 28))
	{
		return 1;
	}
	if (Global_1836379 && BitTest(Global_4718592.f_30, 28))
	{
		return 1;
	}
	return 0;
}

int func_841(int iParam0)//Position - 0x4A64B3
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1970897[iParam0 /*68*/].f_40, 7);
	}
	return 0;
}

void func_842(var uParam0)//Position - 0x4A8E44
{
	Global_2667225.f_45.f_305 = uParam0;
	PED::SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_2667225.f_45.f_305);
	if (Global_2667225.f_45.f_305 == 1)
	{
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 115, true);
	}
	else
	{
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 115, false);
	}
}

int func_843()//Position - 0x4AA90D
{
	switch (__LIB_12__::func_568(PLAYER::PLAYER_ID()))
	{
		case 131:
		case 138:
		case 139:
		case 140:
		case 141:
		case 129:
		case 144:
		case 236:
		case 150:
			return 1;
		default:
	}
	if (__LIB_0__::func_955(__LIB_12__::func_568(PLAYER::PLAYER_ID())) == 1)
	{
		return 1;
	}
	return 0;
}

bool func_844()//Position - 0x4AC07B
{
	return DLC::IS_DLC_PRESENT(joaat("mpsmuggler"));
}

bool func_845()//Position - 0x4AC0CB
{
	return DLC::IS_DLC_PRESENT(joaat("mpstunt"));
}

bool func_846()//Position - 0x4AC0ED
{
	return DLC::IS_DLC_PRESENT(joaat("mplts"));
}

bool func_847()//Position - 0x4AC0FE
{
	return DLC::IS_DLC_PRESENT(joaat("mppilot"));
}

void func_848(int iParam0)//Position - 0x4C2EE8
{
	Global_2725908 = iParam0;
}

var func_849()//Position - 0x4C3659
{
	return Global_2725908;
}

void func_850(int iParam0, bool bParam1)//Position - 0x4C369A
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_2826510[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_2826510[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_851(var uParam0)//Position - 0x4C3716
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return joaat("MPPLY_PLATINUM_BOOLPLY_0");
			break;
	}
	return 22;
}

void func_852(int iParam0, bool bParam1)//Position - 0x4C3778
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1657921.f_1061[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1657921.f_1061[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_853(var uParam0)//Position - 0x4C37FA
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return joaat("MPPLY_PLATINUM_INTPLY_0");
			break;
		case 1:
			return joaat("MPPLY_PLATINUM_INTPLY_1");
			break;
		case 2:
			return joaat("MPPLY_PLATINUM_INTPLY_2");
			break;
		case 3:
			return joaat("MPPLY_PLATINUM_INTPLY_3");
			break;
	}
	return 504;
}

void func_854(int iParam0, bool bParam1)//Position - 0x4C3919
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1656668.f_1093[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1656668.f_1093[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_855(var uParam0)//Position - 0x4C39FD
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return 765;
			break;
		case 1:
			return 766;
			break;
		case 2:
			return 767;
			break;
		case 3:
			return 8734;
			break;
		case 4:
			return 9538;
			break;
	}
	return 13122;
}

void func_856(int iParam0, bool bParam1)//Position - 0x4C3A9A
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1657921.f_1127[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1657921.f_1127[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_857(var uParam0)//Position - 0x4C3B1C
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return joaat("MPPLY_GOLD_INTPLY_0");
			break;
		case 1:
			return joaat("MPPLY_GOLD_INTPLY_1");
			break;
		case 2:
			return joaat("MPPLY_GOLD_INTPLY_2");
			break;
		case 3:
			return joaat("MPPLY_GOLD_INTPLY_3");
			break;
	}
	return 504;
}

void func_858(int iParam0, bool bParam1)//Position - 0x4C3D39
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1656668.f_1237[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1656668.f_1237[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_859(var uParam0)//Position - 0x4C3DBD
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return 775;
			break;
		case 1:
			return 776;
			break;
		case 2:
			return 777;
			break;
		case 3:
			return 8732;
			break;
		case 4:
			return 9537;
			break;
	}
	return 13122;
}

void func_860(int iParam0, bool bParam1)//Position - 0x4C3E5A
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1657921.f_1105[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1657921.f_1105[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_861(var uParam0)//Position - 0x4C3EDC
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return joaat("MPPLY_SILVER_INTPLY_0");
			break;
		case 1:
			return joaat("MPPLY_SILVER_INTPLY_1");
			break;
		case 2:
			return joaat("MPPLY_SILVER_INTPLY_2");
			break;
		case 3:
			return joaat("MPPLY_SILVER_INTPLY_3");
			break;
	}
	return 504;
}

void func_862(int iParam0, bool bParam1)//Position - 0x4C410D
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1656668.f_1189[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1656668.f_1189[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_863(var uParam0)//Position - 0x4C4191
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return 785;
			break;
		case 1:
			return 786;
			break;
		case 2:
			return 787;
			break;
		case 3:
			return 8730;
			break;
		case 4:
			return 9536;
			break;
	}
	return 13122;
}

void func_864(int iParam0, bool bParam1)//Position - 0x4C422E
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1657921.f_1083[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1657921.f_1083[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_865(var uParam0)//Position - 0x4C42B0
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return joaat("MPPLY_BRONZE_INTPLY_0");
			break;
		case 1:
			return joaat("MPPLY_BRONZE_INTPLY_1");
			break;
		case 2:
			return joaat("MPPLY_BRONZE_INTPLY_2");
			break;
		case 3:
			return joaat("MPPLY_BRONZE_INTPLY_3");
			break;
	}
	return 5;
}

void func_866(int iParam0, bool bParam1)//Position - 0x4C44CB
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_1656668.f_1141[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_1656668.f_1141[__LIB_0__::func_161(iParam0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

int func_867(var uParam0)//Position - 0x4C454F
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			return 795;
			break;
		case 1:
			return 796;
			break;
		case 2:
			return 797;
			break;
		case 3:
			return 8728;
			break;
		case 4:
			return 9535;
			break;
	}
	return 13122;
}

void func_868(int iParam0, bool bParam1)//Position - 0x4C45ED
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&(Global_2825435.f_1053[__LIB_0__::func_161(iVar0)]), __LIB_0__::func_160(iVar0));
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_2825435.f_1053[__LIB_0__::func_161(iVar0)]), __LIB_0__::func_160(iVar0));
		}
	}
}

void func_869(int iParam0)//Position - 0x4C48FA
{
	Global_1648034.f_107 = iParam0;
}

int func_870(int iParam0, int iParam1)//Position - 0x4C490A
{
	if (iParam1 == 0)
	{
	}
	switch (iParam0)
	{
		case joaat("MPGEN_AWD_TEMPAWARDFLOAT"):
			break;
	}
	return 0;
}

int func_871(int iParam0, int iParam1)//Position - 0x4C4929
{
	if (iParam1 == 0)
	{
	}
	switch (iParam0)
	{
		case joaat("MPGEN_AWD_TEMPAWARDINT"):
			break;
	}
	return 0;
}

int func_872(int iParam0, int iParam1)//Position - 0x4C4948
{
	if (iParam1 == 0)
	{
	}
	switch (iParam0)
	{
		case joaat("MPGEN_AWD_TEMPAWARDBOOL"):
			break;
	}
	return 0;
}

int func_873(int iParam0, int iParam1)//Position - 0x4C4967
{
	if (iParam1 == 9)
	{
	}
	switch (iParam0)
	{
		case 0:
			return 1;
		case 1:
			return 1;
		case 2:
			return 1;
		case 3:
			return 1;
		default:
	}
	return 0;
}

int func_874(int iParam0, int iParam1)//Position - 0x4C49A6
{
	if (iParam1 == 0)
	{
	}
	switch (iParam0)
	{
		case 12:
			return 1;
		case 13:
			return 1;
		case 14:
			return 1;
		case 15:
			return 1;
		case 16:
			return 1;
		case 17:
			return 1;
		case 18:
			return 1;
		case 19:
			return 1;
		case 20:
			return 1;
		case 21:
			return 1;
		case 1:
			return 1;
		case 2:
			return 1;
		case 6:
			return 1;
		case 3:
			return 1;
		case 4:
			return 1;
		case 5:
			return 1;
		case 7:
			return 1;
		case 8:
			return 1;
		case 9:
			return 1;
		case 10:
			return 1;
		case 11:
			return 1;
		default:
	}
	return 0;
}

int func_875(int iParam0, int iParam1)//Position - 0x4C4A8E
{
	if (iParam1 == 9)
	{
	}
	switch (iParam0)
	{
		case 53:
			return 1;
		case 39:
			return 1;
		case 51:
			return 1;
		case 52:
			return 1;
		case 60:
			return 1;
		case 61:
			return 1;
		case 62:
			return 1;
		case 63:
			return 1;
		case 16:
			return 1;
		case 0:
			return 1;
		case 12:
			return 1;
		case 11:
			return 1;
		case 19:
			return 1;
		case 20:
			return 1;
		case 15:
			return 1;
		case 17:
			return 1;
		case 21:
			return 1;
		case 14:
			return 1;
		case 22:
			return 1;
		case 1:
			return 1;
		case 2:
			return 1;
		case 3:
			return 1;
		case 4:
			return 1;
		case 5:
			return 1;
		case 6:
			return 1;
		case 7:
			return 1;
		case 8:
			return 1;
		case 9:
			return 1;
		case 10:
			return 1;
		case 23:
			return 1;
		case 24:
			return 1;
		case 25:
			return 1;
		case 26:
			return 1;
		case 27:
			return 1;
		case 28:
			return 1;
		case 29:
			return 1;
		case 30:
			return 1;
		case 31:
			return 1;
		case 32:
			return 1;
		case 33:
			return 1;
		case 34:
			return 1;
		case 35:
			return 1;
		case 36:
			return 1;
		case 37:
			return 1;
		case 38:
			return 1;
		case 40:
			return 1;
		case 41:
			return 1;
		case 42:
			return 1;
		case 43:
			return 1;
		case 44:
			return 1;
		case 45:
			return 1;
		case 46:
			return 1;
		case 47:
			return 1;
		case 48:
			return 1;
		case 49:
			return 1;
		case 54:
			return 1;
		case 55:
			return 1;
		case 56:
			return 1;
		case 57:
			return 1;
		case 58:
			return 1;
		case 59:
			return 1;
		case 126:
			return 1;
		case 127:
			return 1;
		case 128:
			return 1;
		case 129:
			return 1;
		case 130:
			return 1;
		case 67:
			return 1;
		case 120:
			return 1;
		case 121:
			return 1;
		case 122:
			return 1;
		case 123:
			return 1;
		case 124:
			return 1;
		case 125:
			return 1;
		case 131:
			return 1;
		case 132:
			return 1;
		case 133:
			return 1;
		case 134:
			return 1;
		case 135:
			return 1;
		case 136:
			return 1;
		case 137:
			return 1;
		case 138:
			return 1;
		case 139:
			return 1;
		case 140:
			return 1;
		case 141:
			return 1;
		case 142:
			return 1;
		case 143:
			return 1;
		case 70:
			return 1;
		case 71:
			return 1;
		case 72:
			return 1;
		case 73:
			return 1;
		case 74:
			return 1;
		case 75:
			return 1;
		case 76:
			return 1;
		case 77:
			return 1;
		case 78:
			return 1;
		case 79:
			return 1;
		case 80:
			return 1;
		case 81:
			return 1;
		case 82:
			return 1;
		case 83:
			return 1;
		case 84:
			return 1;
		case 85:
			return 1;
		case 86:
			return 1;
		case 87:
			return 1;
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 104:
		case 105:
		case 106:
		case 107:
		case 108:
		case 109:
		case 110:
		case 112:
		case 114:
		case 115:
		case 116:
		case 111:
		case 113:
		case 117:
		case 118:
		case 119:
			return 1;
			break;
	}
	return 0;
}

int func_876(int iParam0, int iParam1)//Position - 0x4C4F76
{
	if (iParam1 == 9)
	{
	}
	switch (iParam0)
	{
		case 0:
			return 1;
		case 2:
			return 1;
		case 3:
			return 1;
		case 4:
			return 1;
		case 5:
			return 1;
		case 6:
			return 1;
		case 7:
			return 1;
		case 8:
			return 1;
		case 10:
			return 1;
		case 11:
			return 1;
		case 12:
			return 1;
		case 13:
			return 1;
		case 14:
			return 1;
		case 15:
			return 1;
		case 16:
			return 1;
		case 17:
			return 1;
		case 18:
			return 1;
		case 20:
			return 1;
		case 21:
			return 1;
		case 22:
			return 1;
		case 23:
			return 1;
		case 25:
			return 1;
		case 26:
			return 1;
		case 27:
			return 1;
		case 144:
			return 1;
		case 143:
			return 1;
		case 146:
			return 1;
		case 148:
			return 1;
		case 147:
			return 1;
		case 149:
			return 1;
		case 150:
			return 1;
		case 151:
			return 1;
		case 30:
			return 1;
		case 31:
			return 1;
		case 32:
			return 1;
		case 33:
			return 1;
		case 34:
			return 1;
		case 35:
			return 1;
		case 36:
			return 1;
		case 37:
			return 1;
		case 38:
			return 1;
		case 39:
			return 1;
		case 40:
			return 1;
		case 41:
			return 1;
		case 42:
			return 1;
		case 43:
			return 1;
		case 44:
			return 1;
		case 45:
			return 1;
		case 46:
			return 1;
		case 47:
			return 1;
		case 48:
			return 1;
		case 49:
			return 1;
		case 50:
			return 1;
		case 51:
			return 1;
		case 52:
			return 1;
		case 53:
			return 1;
		case 54:
			return 1;
		case 55:
			return 1;
		case 56:
			return 1;
		case 57:
			return 1;
		case 58:
			return 1;
		case 59:
			return 1;
		case 62:
			return 1;
		case 60:
			return 1;
		case 61:
			return 1;
		case 63:
			return 1;
		case 64:
			return 1;
		case 65:
			return 1;
		case 66:
			return 1;
		case 67:
			return 1;
		case 68:
			return 1;
		case 69:
			return 1;
		case 70:
			return 1;
		case 71:
			return 1;
		case 72:
			return 1;
		case 73:
			return 1;
		case 74:
			return 1;
		case 75:
			return 1;
		case 76:
			return 1;
		case 77:
			return 1;
		case 78:
			return 1;
		case 79:
			return 1;
		case 80:
			return 1;
		case 81:
			return 1;
		case 82:
			return 1;
		case 83:
			return 1;
		case 84:
			return 1;
		case 85:
			return 1;
		case 86:
			return 1;
		case 87:
			return 1;
		case 88:
			return 1;
		case 89:
			return 1;
		case 90:
			return 1;
		case 93:
			return 1;
		case 92:
			return 1;
		case 91:
			return 1;
		case 94:
			return 1;
		case 95:
			return 1;
		case 96:
			return 1;
		case 97:
			return 1;
		case 98:
			return 1;
		case 99:
			return 1;
		case 100:
			return 1;
		case 101:
			return 1;
		case 102:
			return 1;
		case 103:
			return 1;
		case 104:
			return 1;
		case 105:
			return 1;
		case 106:
			return 1;
		case 107:
			return 1;
		case 108:
			return 1;
		case 109:
			return 1;
		case 110:
			return 1;
		case 111:
			return 1;
		case 112:
			return 1;
		case 113:
		case 114:
		case 115:
		case 116:
		case 117:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 125:
		case 126:
		case 127:
		case 128:
		case 129:
		case 130:
		case 131:
		case 132:
		case 133:
		case 134:
		case 135:
		case 136:
		case 137:
		case 138:
		case 139:
		case 140:
		case 141:
		case 142:
			return 1;
			break;
	}
	return 0;
}

int func_877()//Position - 0x4C54C6
{
	if (__LIB_0__::func_258())
	{
		return Global_2671449.f_57;
	}
	return 0;
}

bool func_878(int iParam0)//Position - 0x4C55B5
{
	return iParam0 == 39;
}

bool func_879()//Position - 0x4C55C2
{
	return Global_2715699.f_3479.f_21;
}

void func_880(var uParam0)//Position - 0x4C55D3
{
	while (*uParam0 < 0f)
	{
		*uParam0 = (*uParam0 + 360f);
	}
	while (*uParam0 > 360f)
	{
		*uParam0 = (*uParam0 + -360f);
	}
}

void func_881()//Position - 0x4C5711
{
	struct<5> Var0;
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_F_BERD_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 1, Var0.f_3, Var0.f_4, 0);
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_F_JBIB_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 11, Var0.f_3, Var0.f_4, 0);
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_F_TORSO_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 3, Var0.f_3, Var0.f_4, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 4, 4, 8, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 6, 2, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 7, 0, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 8, 3, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 9, 0, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 10, 0, 0, 0);
}

void func_882()//Position - 0x4C57BD
{
	struct<5> Var0;
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_M_BERD_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 1, Var0.f_3, Var0.f_4, 0);
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_M_JBIB_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 11, Var0.f_3, Var0.f_4, 0);
	FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_REPLAY_M_TORSO_0_0"), &Var0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 3, Var0.f_3, Var0.f_4, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 4, 1, 5, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 6, 0, 10, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 7, 0, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 8, 15, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 9, 0, 0, 0);
	PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 10, 0, 0, 0);
}

bool func_883()//Position - 0x4C91DA
{
	if (Global_262145.f_165 /* Tunable: PASSIVE_DONATE */ == 0)
	{
		return 1;
	}
	return MONEY::NETWORK_CAN_SPEND_MONEY(Global_262145.f_165 /* Tunable: PASSIVE_DONATE */, false, false, true, -1, 0);
}

void func_884()//Position - 0x4CB683
{
	if (!Global_1660946)
	{
		return;
	}
	if (!PED::IS_PEDHEADSHOT_VALID(Global_1660946.f_2))
	{
		return;
	}
	PED::UNREGISTER_PEDHEADSHOT(Global_1660946.f_2);
}

void func_885(int iParam0)//Position - 0x4CBC40
{
	Global_1659366[iParam0 /*11*/] = 0;
}

void func_886(int iParam0)//Position - 0x4CBC51
{
	int iVar0;
	iVar0 = PLAYER::PLAYER_ID();
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_1 = 0;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_2 = { 0f, 0f, 0f };
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/] = 0;
	StringCopy(&(Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_5), "", 24);
	StringCopy(&(Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_11), "", 64);
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_27 = 0;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_28 = 0;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_29 = 0;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_30 = -1;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_31 = -1;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_32 = -1;
	Global_1924338[iVar0 /*199*/].f_91[iParam0 /*34*/].f_33 = -1;
}

bool func_887(int iParam0)//Position - 0x4CBD35
{
	int iVar0;
	iVar0 = Global_1659366[iParam0 /*11*/].f_2;
	if (iVar0 == 0)
	{
		return 0;
	}
	return GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(iVar0);
}

int func_888(int iParam0)//Position - 0x4CBD6A
{
	return Global_1659366[iParam0 /*11*/];
}

void func_889(int iParam0)//Position - 0x4CC98E
{
	if (BitTest(Global_2621865[iParam0 /*26*/].f_13, 5))
	{
		return;
	}
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 5);
}

bool func_890(int iParam0, int iParam1)//Position - 0x4CCA75
{
	var uVar0;
	uVar0 = iParam1;
	return BitTest(Global_2657492.f_356[iParam0 /*75*/].f_3, uVar0);
}

void func_891()//Position - 0x4CE9D3
{
	MISC::CLEAR_BIT(&Global_2667185, 14);
	MISC::CLEAR_BIT(&Global_2667185, 15);
	MISC::CLEAR_BIT(&Global_2667185, 16);
	MISC::CLEAR_BIT(&Global_2667185, 17);
	MISC::CLEAR_BIT(&Global_2667185, 18);
}

void func_892()//Position - 0x4CEA0D
{
	Global_2667205 = 0;
	Global_2667205.f_1 = 0;
	Global_2667205.f_2 = 0;
	Global_2667205.f_3 = MISC::GET_GAME_TIMER();
}

void func_893()//Position - 0x4CEEFE
{
	struct<4> Var0;
	Var0 = 5;
	Global_2667191 = { Var0 };
}

void func_894(int iParam0)//Position - 0x4CEF17
{
	switch (iParam0)
	{
		case 0:
			MISC::CLEAR_BIT(&Global_2667185, 0);
			return;
		case 1:
			MISC::CLEAR_BIT(&Global_2667185, 3);
			return;
		case 2:
			MISC::CLEAR_BIT(&Global_2667185, 5);
			return;
		case 3:
			MISC::CLEAR_BIT(&Global_2667185, 7);
			return;
		case 4:
			MISC::CLEAR_BIT(&Global_2667185, 9);
			return;
		default:
	}
}

void func_895(int iParam0, bool bParam1)//Position - 0x4CFB4C
{
	switch (iParam0)
	{
		case 0:
			if (BitTest(Global_2667185, 0))
			{
				if (bParam1)
				{
					if (!BitTest(Global_2667185, 21))
					{
						MISC::SET_BIT(&Global_2667185, 21);
					}
				}
				else if (!BitTest(Global_2667185, 2))
				{
					MISC::SET_BIT(&Global_2667185, 2);
				}
			}
			return;
		case 1:
			if (BitTest(Global_2667185, 3))
			{
				if (bParam1)
				{
					if (!BitTest(Global_2667185, 22))
					{
						MISC::SET_BIT(&Global_2667185, 22);
					}
				}
				else if (!BitTest(Global_2667185, 4))
				{
					MISC::SET_BIT(&Global_2667185, 4);
				}
			}
			return;
		case 2:
			if (BitTest(Global_2667185, 5))
			{
				if (bParam1)
				{
					if (!BitTest(Global_2667185, 23))
					{
						MISC::SET_BIT(&Global_2667185, 23);
					}
				}
				else if (!BitTest(Global_2667185, 6))
				{
					MISC::SET_BIT(&Global_2667185, 6);
				}
			}
			return;
		case 3:
			if (BitTest(Global_2667185, 7))
			{
				if (bParam1)
				{
				}
				else if (!BitTest(Global_2667185, 8))
				{
					MISC::SET_BIT(&Global_2667185, 8);
				}
			}
			return;
		case 4:
			if (BitTest(Global_2667185, 9))
			{
				if (bParam1)
				{
				}
				else if (!BitTest(Global_2667185, 10))
				{
					MISC::SET_BIT(&Global_2667185, 10);
				}
			}
			return;
		default:
	}
}

float func_896(int iParam0)//Position - 0x4D0185
{
	return Global_2621865[iParam0 /*26*/].f_6.f_2;
}

void func_897(int iParam0)//Position - 0x4D0201
{
	struct<2> Var0;
	if (Global_2653177[iParam0 /*2*/].f_1 != 0)
	{
		PED::REMOVE_SCENARIO_BLOCKING_AREA(Global_2653177[iParam0 /*2*/].f_1, false);
	}
	Var0 = -1;
	Global_2653177[iParam0 /*2*/] = { Var0 };
	Global_2653177[iParam0 /*2*/].f_1 = 0;
}

void func_898(int iParam0)//Position - 0x4D028F
{
	struct<2> Var0;
	if (Global_1573164[iParam0 /*2*/].f_1 != -1)
	{
		if (VEHICLE::REMOVE_ROAD_NODE_SPEED_ZONE(Global_1573164[iParam0 /*2*/].f_1))
		{
		}
	}
	Var0 = -1;
	Var0.f_1 = -1;
	Global_1573164[iParam0 /*2*/] = { Var0 };
}

void func_899(int iParam0)//Position - 0x4D02D1
{
	Global_1573851 = Global_1573131.f_26.f_4;
	Global_2621865[iParam0 /*26*/].f_1 = 16;
}

int func_900(int iParam0)//Position - 0x4D043F
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 2)
	{
		if (Global_2653177[iVar0 /*2*/].f_1 != 0)
		{
			if (Global_2653177[iVar0 /*2*/] == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

bool func_901(int iParam0)//Position - 0x4D047C
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 13);
}

int func_902(int iParam0)//Position - 0x4D055A
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 2)
	{
		if (Global_1573164[iVar0 /*2*/].f_1 != -1)
		{
			if (Global_1573164[iVar0 /*2*/] == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

bool func_903(int iParam0)//Position - 0x4D0707
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_13, 13);
}

struct<6> func_904(int iParam0)//Position - 0x4D077A
{
	return Global_2621865[iParam0 /*26*/].f_15.f_3;
}

void func_905(int iParam0)//Position - 0x4D0790
{
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 1);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 2);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 3);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 17);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 18);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 19);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 20);
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 21);
}

void func_906(int iParam0)//Position - 0x4D0889
{
	Global_1937518.f_3 = iParam0;
}

void func_907()//Position - 0x4D08E4
{
	Global_2666811 = -1;
}

int func_908(struct<3> Param0, float fParam1)//Position - 0x4D08F1
{
	float fVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	fVar0 = 0f;
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < Global_1573885)
	{
		if (!BitTest(Global_2621865[iVar1 /*26*/].f_12, 11))
		{
			fVar0 = (Global_2621865[iVar1 /*26*/].f_6.f_2 + fParam1);
			if (__LIB_0__::func_490(Global_2621865[iVar1 /*26*/].f_3, Param0, fVar0, 0))
			{
				return 1;
			}
		}
		iVar1++;
	}
	Var2 = { 0f, 0f, 0f };
	Var3 = { 0f, 0f, 0f };
	fVar4 = 0f;
	iVar1 = 0;
	while (iVar1 < Global_1573850)
	{
		Var2 = { Global_1573169[iVar1 /*8*/].f_1 };
		Var3 = { Global_1573169[iVar1 /*8*/].f_4 };
		fVar4 = Global_1573169[iVar1 /*8*/].f_7;
		if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, Var2, Var3, fVar4, false, true))
		{
			return 1;
		}
		iVar1++;
	}
	return 0;
}

void func_909(int iParam0)//Position - 0x4D1A79
{
	Global_2715699.f_6320 = iParam0;
}

int func_910()//Position - 0x4D2121
{
	return Global_2666788.f_2;
}

void func_911(var uParam0)//Position - 0x4D315D
{
	float fVar0;
	bool bVar1;
	float fVar2;
	if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(uParam0->f_1))
	{
		fVar0 = PED::GET_SYNCHRONIZED_SCENE_PHASE(uParam0->f_1);
		bVar1 = false;
		while (bVar1 <= 4)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(uParam0->f_10[bVar1 /*13*/])))
			{
				if (!BitTest(uParam0->f_3, bVar1))
				{
					fVar2 = (IntToFloat(uParam0->f_10[bVar1 /*13*/].f_12) / 100f);
					if (fVar0 <= (uParam0->f_10[bVar1 /*13*/].f_8 + fVar2) && fVar0 > (uParam0->f_10[bVar1 /*13*/].f_8 - fVar2))
					{
						AUDIO::PLAY_SOUND_FROM_COORD(AUDIO::GET_SOUND_ID(), &(uParam0->f_10[bVar1 /*13*/]), uParam0->f_10[bVar1 /*13*/].f_9, &(uParam0->f_116), false, 0, false);
						MISC::SET_BIT(&(uParam0->f_3), bVar1);
					}
				}
			}
			bVar1++;
		}
	}
}

void func_912(int iParam0)//Position - 0x4D3AB8
{
	int iVar0;
	if (__LIB_18__::func_81(iParam0))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
		if (iVar0 == joaat("MP_M_Freemode_01"))
		{
			PED::SET_PED_COMPONENT_VARIATION(iParam0, 8, 15, 0, 0);
		}
		else if (iVar0 == joaat("MP_F_Freemode_01"))
		{
			PED::SET_PED_COMPONENT_VARIATION(iParam0, 8, 3, 0, 0);
		}
	}
}

void func_913(int iParam0)//Position - 0x4D3F55
{
	struct<5> Var0;
	int iVar1;
	int iVar2;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("MP_F_Freemode_01"))
		{
			iVar1 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 4);
			iVar2 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 4);
			FILES::GET_SHOP_PED_COMPONENT(joaat("DLC_MP_HEIST_F_LEGS_0_0"), &Var0);
			if (iVar1 != Var0.f_3 && iVar2 != Var0.f_4)
			{
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 6, 4, 0, 0);
			}
			else
			{
				PED::SET_PED_COMPONENT_VARIATION(iParam0, 6, 2, 1, 0);
			}
		}
	}
}

bool func_914(var uParam0)//Position - 0x4D3FCB
{
	return NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), uParam0->f_7);
}

void func_915(int iParam0, var uParam1)//Position - 0x4D3FDF
{
	uParam1->f_7 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), iParam0);
}

int func_916(var uParam0)//Position - 0x4D59D9
{
	if (uParam0->f_406)
	{
		return 1;
	}
	return 0;
}

void func_917(int iParam0)//Position - 0x4D59FE
{
	Global_1931975.f_1764 = iParam0;
}

bool func_918()//Position - 0x4D5AFE
{
	return Global_1931975.f_1764;
}

int func_919()//Position - 0x4D5C64
{
	if (Global_262145.f_10595 /* Tunable: TURN_OFF_SAVE_FAILING_HEIST_CORRECTION */)
	{
		return 0;
	}
	if (__LIB_1__::func_858())
	{
		return 1;
	}
	return 0;
}

int func_920(int iParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0x4D5EC6
{
	int iVar0;
	if (iParam0 == Global_262145.f_9050 /* Tunable: ROOT_ID_HASH_THE_FLECCA_JOB */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 11;
			}
			else
			{
				iVar0 = 14;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 11;
			}
			else
			{
				iVar0 = 14;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 5;
			}
			else
			{
				iVar0 = 8;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9055 /* Tunable: ROOT_ID_HASH_THE_PRISON_BREAK */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 33;
			}
			else
			{
				iVar0 = 36;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 21;
			}
			else
			{
				iVar0 = 24;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 27;
			}
			else
			{
				iVar0 = 30;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9062 /* Tunable: ROOT_ID_HASH_THE_HUMANE_LABS_RAID */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 11;
			}
			else
			{
				iVar0 = 14;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 33;
			}
			else
			{
				iVar0 = 36;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 5;
			}
			else
			{
				iVar0 = 8;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9068 /* Tunable: ROOT_ID_HASH_SERIES_A_FUNDING */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 21;
			}
			else
			{
				iVar0 = 24;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 11;
			}
			else
			{
				iVar0 = 14;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 27;
			}
			else
			{
				iVar0 = 30;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9074 /* Tunable: ROOT_ID_HASH_THE_PACIFIC_STANDARD_JOB */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 33;
			}
			else
			{
				iVar0 = 36;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 21;
			}
			else
			{
				iVar0 = 24;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 5;
			}
			else
			{
				iVar0 = 8;
			}
		}
	}
	else if (bParam2)
	{
		if (bParam1)
		{
			iVar0 = 11;
		}
		else
		{
			iVar0 = 14;
		}
	}
	else if (bParam3)
	{
		if (bParam1)
		{
			iVar0 = 11;
		}
		else
		{
			iVar0 = 14;
		}
	}
	else if (bParam4)
	{
		if (bParam1)
		{
			iVar0 = 5;
		}
		else
		{
			iVar0 = 8;
		}
	}
	if (iVar0 == 0)
	{
	}
	return iVar0;
}

int func_921(int iParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0x4D60BB
{
	int iVar0;
	if (iParam0 == Global_262145.f_9050 /* Tunable: ROOT_ID_HASH_THE_FLECCA_JOB */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 9;
			}
			else
			{
				iVar0 = 12;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 9;
			}
			else
			{
				iVar0 = 12;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 3;
			}
			else
			{
				iVar0 = 6;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9055 /* Tunable: ROOT_ID_HASH_THE_PRISON_BREAK */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 31;
			}
			else
			{
				iVar0 = 34;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 19;
			}
			else
			{
				iVar0 = 22;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 25;
			}
			else
			{
				iVar0 = 28;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9062 /* Tunable: ROOT_ID_HASH_THE_HUMANE_LABS_RAID */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 9;
			}
			else
			{
				iVar0 = 12;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 31;
			}
			else
			{
				iVar0 = 34;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 3;
			}
			else
			{
				iVar0 = 6;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9068 /* Tunable: ROOT_ID_HASH_SERIES_A_FUNDING */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 19;
			}
			else
			{
				iVar0 = 22;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 9;
			}
			else
			{
				iVar0 = 12;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 25;
			}
			else
			{
				iVar0 = 28;
			}
		}
	}
	else if (iParam0 == Global_262145.f_9074 /* Tunable: ROOT_ID_HASH_THE_PACIFIC_STANDARD_JOB */)
	{
		if (bParam2)
		{
			if (bParam1)
			{
				iVar0 = 31;
			}
			else
			{
				iVar0 = 34;
			}
		}
		else if (bParam3)
		{
			if (bParam1)
			{
				iVar0 = 19;
			}
			else
			{
				iVar0 = 22;
			}
		}
		else if (bParam4)
		{
			if (bParam1)
			{
				iVar0 = 3;
			}
			else
			{
				iVar0 = 6;
			}
		}
	}
	else if (bParam2)
	{
		if (bParam1)
		{
			iVar0 = 9;
		}
		else
		{
			iVar0 = 12;
		}
	}
	else if (bParam3)
	{
		if (bParam1)
		{
			iVar0 = 9;
		}
		else
		{
			iVar0 = 12;
		}
	}
	else if (bParam4)
	{
		if (bParam1)
		{
			iVar0 = 3;
		}
		else
		{
			iVar0 = 6;
		}
	}
	if (iVar0 == 0)
	{
	}
	return iVar0;
}

int func_922(var uParam0)//Position - 0x4D62C9
{
	if (uParam0->f_6 != 0)
	{
		return 1;
	}
	return 0;
}

void func_923(var uParam0)//Position - 0x4D6A30
{
	Global_2715699.f_6334 = uParam0;
}

int func_924()//Position - 0x4D6AD3
{
	if (MISC::GET_GAME_TIMER() > Global_2656953)
	{
		return 0;
	}
	return 1;
}

int func_925()//Position - 0x4D7662
{
	var uVar0;
	if (Global_2656982)
	{
		return 0;
	}
	uVar0 = Global_2656982.f_24;
	Global_2656982.f_24 = 0;
	return uVar0;
}

bool func_926()//Position - 0x4D77B0
{
	return Global_1573131.f_3;
}

bool func_927()//Position - 0x4D77BE
{
	return Global_2723612.f_2;
}

int func_928()//Position - 0x4D78B5
{
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("net_cloud_mission_loader")) > 0)
	{
		return 1;
	}
	SCRIPT::REQUEST_SCRIPT("net_cloud_mission_loader");
	if (SCRIPT::HAS_SCRIPT_LOADED("net_cloud_mission_loader"))
	{
		SYSTEM::START_NEW_SCRIPT("net_cloud_mission_loader", 2050);
		SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED("net_cloud_mission_loader");
		return 1;
	}
	return 0;
}

void func_929(int iParam0)//Position - 0x4D7A48
{
	Global_2666788.f_2 = iParam0;
}

void func_930(int iParam0)//Position - 0x4D7E79
{
	if (__LIB_18__::func_124(iParam0))
	{
		return;
	}
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 15);
}

int func_931(int iParam0)//Position - 0x4D8155
{
	return Global_2621865[iParam0 /*26*/].f_1;
}

int func_932(int iParam0)//Position - 0x4D824A
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573850)
	{
		if (iParam0 == Global_1573169[iVar0 /*8*/])
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

bool func_933()//Position - 0x4D84B8
{
	return Global_2653167.f_7 != 0;
}

void func_934()//Position - 0x4D84EF
{
	struct<2> Var0;
	Global_2653184 = { Var0 };
}

bool func_935()//Position - 0x4D8501
{
	return Global_2653184 != 0;
}

bool func_936()//Position - 0x4D8692
{
	int iVar0;
	iVar0 = PLAYER::PLAYER_ID();
	return ((Global_1853348[iVar0 /*834*/].f_267.f_32 > 0 || Global_2689235[iVar0 /*453*/].f_318.f_6 != -1) || BitTest(Global_1853348[iVar0 /*834*/].f_267.f_30, 14));
}

void func_937(int iParam0)//Position - 0x4D89DB
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 15)
	{
		if (Global_2653090.f_28[iVar0 /*2*/] == iParam0)
		{
			Global_2653090.f_28[iVar0 /*2*/].f_1 = 0;
			Global_2653090.f_28[iVar0 /*2*/] = -1;
			return;
		}
		iVar0++;
	}
}

void func_938(int iParam0)//Position - 0x4D8B6B
{
	int iVar0;
	float fVar1;
	iVar0 = 0;
	fVar1 = 0f;
	iVar0 = 0;
	while (iVar0 < 1)
	{
		if (Global_2653090[iParam0 /*5*/].f_1[iVar0 /*3*/].f_1 > fVar1)
		{
			fVar1 = Global_2653090[iParam0 /*5*/].f_1[iVar0 /*3*/].f_1;
		}
		iVar0++;
	}
	Global_2653090[iParam0 /*5*/] = fVar1;
}

void func_939(int iParam0, var uParam1)//Position - 0x4D8C47
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = -1;
	iVar0 = 0;
	while (iVar0 < 15)
	{
		if (Global_2653090.f_28[iVar0 /*2*/] == iParam0)
		{
			Global_2653090.f_28[iVar0 /*2*/].f_1 = uParam1;
			return;
		}
		if (iVar1 == -1)
		{
			if (Global_2653090.f_28[iVar0 /*2*/] == -1)
			{
				iVar1 = iVar0;
			}
		}
		iVar0++;
	}
	if (iVar1 == -1)
	{
		return;
	}
	Global_2653090.f_28[iVar1 /*2*/] = iParam0;
	Global_2653090.f_28[iVar1 /*2*/].f_1 = uParam1;
}

int func_940(int iParam0)//Position - 0x4D8F6D
{
	return Global_1573860[iParam0 /*4*/].f_2;
}

bool func_941(int iParam0)//Position - 0x4D925A
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 15);
}

void func_942(var uParam0)//Position - 0x4D9298
{
	if (__LIB_2__::func_707(uParam0->f_1))
	{
		return;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam0->f_3)))
	{
		return;
	}
	switch (uParam0->f_2)
	{
		case 63:
			if (uParam0->f_1 < 2018)
			{
				if (BitTest(Global_794709.f_4[uParam0->f_1 /*88*/].f_76, 13))
				{
					if (MISC::ARE_STRINGS_EQUAL(&(Global_794709.f_4[uParam0->f_1 /*88*/]), &(uParam0->f_3)))
					{
						if (!BitTest(Global_794709.f_4[uParam0->f_1 /*88*/].f_76, 14))
						{
							Global_2715699.f_3351.f_2 = Global_794709.f_4[uParam0->f_1 /*88*/].f_65;
							Global_2715699.f_3351.f_2.f_1 = Global_794709.f_4[uParam0->f_1 /*88*/].f_68;
							Global_2715699.f_3351.f_2.f_3 = Global_794709.f_4[uParam0->f_1 /*88*/].f_70;
							Global_2715699.f_3351.f_2.f_4 = Global_794709.f_4[uParam0->f_1 /*88*/].f_75;
							Global_2715699.f_3351.f_2.f_2 = 0;
						}
						MISC::SET_BIT(&(Global_794709.f_4[uParam0->f_1 /*88*/].f_76), 14);
						return;
					}
				}
			}
			return;
		case 62:
			if (uParam0->f_1 < 100)
			{
				if (BitTest(Global_998606.f_604[uParam0->f_1 /*88*/].f_76, 13))
				{
					if (MISC::ARE_STRINGS_EQUAL(&(Global_998606.f_604[uParam0->f_1 /*88*/]), &(uParam0->f_3)))
					{
						if (!BitTest(Global_998606.f_604[uParam0->f_1 /*88*/].f_76, 14))
						{
							Global_2715699.f_3351.f_2 = Global_998606.f_604[uParam0->f_1 /*88*/].f_65;
							Global_2715699.f_3351.f_2.f_1 = Global_998606.f_604[uParam0->f_1 /*88*/].f_68;
							Global_2715699.f_3351.f_2.f_3 = Global_998606.f_604[uParam0->f_1 /*88*/].f_70;
							Global_2715699.f_3351.f_2.f_4 = Global_998606.f_604[uParam0->f_1 /*88*/].f_75;
							Global_2715699.f_3351.f_2.f_2 = 1;
						}
						MISC::SET_BIT(&(Global_998606.f_604[uParam0->f_1 /*88*/].f_76), 14);
						return;
					}
				}
			}
			return;
		default:
	}
}

void func_943()//Position - 0x4D947C
{
	if (!BitTest(Global_2815059.f_1796, 4))
	{
		MISC::SET_BIT(&(Global_2815059.f_1796), 4);
	}
}

void func_944(int iParam0)//Position - 0x4D952B
{
	if (!BitTest(Global_2621865[iParam0 /*26*/].f_13, 5))
	{
		return;
	}
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 5);
}

void func_945(int iParam0)//Position - 0x4D962F
{
	struct<3> Var0;
	Var0 = 2;
	Var0.f_1 = -1;
	Global_1573886[iParam0 /*3*/] = { Var0 };
	Global_1573886[iParam0 /*3*/].f_2 = NETWORK::GET_NETWORK_TIME();
}

int func_946(int iParam0, int iParam1)//Position - 0x4D9660
{
	int iVar0;
	if (Global_1573911 == 0)
	{
		return 0;
	}
	switch (iParam1)
	{
		case 1:
		case 0:
			break;
		case 2:
			return 0;
		default:
			return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573911)
	{
		if (Global_1573886[iVar0 /*3*/].f_1 == iParam0)
		{
			if (Global_1573886[iVar0 /*3*/] == iParam1)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_947(bool bParam0)//Position - 0x4D96D1
{
	Global_2621837.f_1 = 0;
	Global_2621837.f_2 = 0;
	Global_2621837.f_3 = 0;
	Global_2621837.f_4 = 0;
	Global_2621837.f_5 = 0;
	Global_2621837.f_6 = 0;
	Global_2621837.f_7 = 0;
	Global_2621837.f_8 = 0;
	if (bParam0)
	{
	}
}

void func_948()//Position - 0x4D9716
{
	struct<9> Var0;
	var uVar1;
	Global_1573851 = { Var0 };
	Global_1573851.f_3 = NETWORK::GET_NETWORK_TIME();
	Global_1573851.f_6 = NETWORK::GET_NETWORK_TIME();
	Global_1573851.f_7 = NETWORK::GET_NETWORK_TIME();
	Global_1573851.f_8 = NETWORK::GET_NETWORK_TIME();
	Global_2653066 = uVar1;
	Global_1836751.f_74 = 0;
}

void func_949()//Position - 0x4D97D1
{
	struct<66> Var0;
	Var0.f_1.f_53 = -1;
	Var0.f_1.f_55 = -1;
	Var0.f_1.f_56 = -1;
	Var0.f_1.f_57 = -1;
	Var0.f_1.f_58 = -1;
	Var0.f_1.f_59 = -1;
	Var0.f_1.f_60 = -1;
	Var0.f_1.f_62 = 16777215;
	Var0.f_1.f_64 = 2;
	Global_2660249 = { Var0 };
	Global_2660249 = 0;
	StringCopy(&(Global_2660249.f_1), "", 24);
	StringCopy(&(Global_2660249.f_1.f_6), "", 24);
	StringCopy(&(Global_2660249.f_1.f_12), "", 64);
	StringCopy(&(Global_2660249.f_1.f_28), "", 64);
	Global_2660249.f_1.f_44 = { 0f, 0f, 0f };
	Global_2660249.f_1.f_47 = { 0f, 0f, 0f };
	Global_2660249.f_1.f_63 = 0;
}

bool func_950(int iParam0)//Position - 0x4D9908
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 7);
}

void func_951(int iParam0)//Position - 0x4D9945
{
	MISC::SET_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 9);
}

int func_952(int iParam0)//Position - 0x4D995D
{
	struct<10> Var0;
	Var0 = { __LIB_12__::func_467(iParam0) };
	if (Global_1573982 != 0)
	{
		return 0;
	}
	if (!MISC::ARE_STRINGS_EQUAL(&(Global_2660315.f_3), &(Var0.f_3)))
	{
		return 0;
	}
	return 1;
}

int func_953(int iParam0)//Position - 0x4D99B0
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573025)
	{
		if (Global_1572864[iVar0 /*5*/] == 1)
		{
			if (Global_1572864[iVar0 /*5*/].f_1 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_954()//Position - 0x4D9B1C
{
	Global_1573982 = 1;
	Global_1573983 = 0;
	StringCopy(&(Global_1573983.f_1), "", 24);
}

void func_955(int iParam0)//Position - 0x4D9B39
{
	MISC::CLEAR_BIT(&(Global_2621865[iParam0 /*26*/].f_13), 9);
}

void func_956()//Position - 0x4D9BE7
{
	Global_1573851.f_6 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 2000);
}

var func_957(int iParam0)//Position - 0x4D9CCE
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 24);
}

var func_958(int iParam0)//Position - 0x4D9CE3
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 23);
}

bool func_959(int iParam0)//Position - 0x4D9CF8
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 22);
}

void func_960()//Position - 0x4D9D1F
{
	if (!Global_2621837.f_1)
	{
		return;
	}
	Global_2621837.f_8 = 1;
}

bool func_961(int iParam0)//Position - 0x4D9E72
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 3);
}

int func_962(int iParam0)//Position - 0x4DA585
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573025)
	{
		if (Global_1572864[iVar0 /*5*/] == 2)
		{
			if (Global_1572864[iVar0 /*5*/].f_1 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_963(int iParam0)//Position - 0x4DA5EC
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573025)
	{
		if (Global_1572864[iVar0 /*5*/] == 0)
		{
			if (Global_1572864[iVar0 /*5*/].f_1 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_964(int iParam0)//Position - 0x4DA64F
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573025)
	{
		if (Global_1572864[iVar0 /*5*/] == 4)
		{
			if (Global_1572864[iVar0 /*5*/].f_1 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_965(int iParam0)//Position - 0x4DA699
{
	int iVar0;
	int iVar1;
	if (iParam0 == 0)
	{
		return 0;
	}
	iVar0 = iParam0;
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < Global_1573025)
	{
		if (Global_1572864[iVar1 /*5*/] == 3)
		{
			if (Global_1572864[iVar1 /*5*/].f_1 == iParam0)
			{
				return Global_1572864[iVar1 /*5*/].f_2;
			}
		}
		iVar1++;
	}
	return iVar0;
}

int func_966(int iParam0)//Position - 0x4DAB60
{
	return Global_2621865[iParam0 /*26*/].f_14;
}

bool func_967(int iParam0)//Position - 0x4DAC67
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 12);
}

bool func_968(int iParam0)//Position - 0x4DB1D0
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_13, 23);
}

int func_969(int iParam0)//Position - 0x4DB1E5
{
	if (!Global_1573131.f_26.f_1)
	{
		return 0;
	}
	if (!Global_1573131.f_26.f_2)
	{
		return 0;
	}
	if (!Global_1573131.f_26.f_4 == iParam0)
	{
		return 0;
	}
	return 1;
}

int func_970(bool bParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, int iParam7)//Position - 0x4DB597
{
	int iVar0;
	bool bVar1;
	if (!__LIB_1__::func_693(bParam0, 0, 1))
	{
		return 0;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&uParam1))
	{
		return 0;
	}
	if (iParam7 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	bVar1 = bParam0;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (__LIB_27__::func_451(iVar0))
		{
			if (iParam7 == Global_2657492.f_356[iVar0 /*75*/].f_2 && MISC::ARE_STRINGS_EQUAL(&uParam1, &(Global_2657492.f_356[iVar0 /*75*/].f_10)))
			{
				if (BitTest(Global_2657492.f_356[iVar0 /*75*/].f_3, bVar1))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

bool func_971()//Position - 0x4DB62C
{
	return NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), Global_1573851.f_6);
}

void func_972()//Position - 0x4DB662
{
	Global_1888234.f_71 = 1;
}

int func_973(int iParam0)//Position - 0x4DB6AB
{
	if (!Global_1573131.f_26.f_1)
	{
		return 0;
	}
	if (!Global_1573131.f_26.f_4 == iParam0)
	{
		return 0;
	}
	return 1;
}

void func_974()//Position - 0x4DB6D7
{
	Global_1573851.f_3 = NETWORK::GET_NETWORK_TIME();
	Global_2653066 = 0;
}

int func_975()//Position - 0x4DB6EE
{
	if (NETWORK::IS_TIME_LESS_THAN(NETWORK::GET_NETWORK_TIME(), Global_1573851.f_3))
	{
		return 0;
	}
	if (MISC::GET_FRAME_COUNT() < Global_2653066)
	{
		return 0;
	}
	return 1;
}

bool func_976()//Position - 0x4DB71B
{
	return Global_2621837.f_7;
}

var func_977()//Position - 0x4DB766
{
	return Global_2621837.f_6;
}

int func_978(int iParam0)//Position - 0x4DB774
{
	if (BitTest(Global_1888862[iParam0 /*120*/].f_14, 2))
	{
		return 1;
	}
	return 0;
}

void func_979(int iParam0)//Position - 0x4DB8CA
{
	Global_1573851.f_3 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), iParam0);
	Global_2653066 = MISC::GET_FRAME_COUNT() + 30;
}

void func_980()//Position - 0x4DB8EC
{
	Global_2621837.f_8 = 0;
}

void func_981()//Position - 0x4DB90C
{
	Global_1573851.f_8 = NETWORK::GET_NETWORK_TIME();
}

bool func_982()//Position - 0x4DB91E
{
	return NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), Global_1573851.f_8);
}

bool func_983()//Position - 0x4DB934
{
	return Global_2621837.f_5;
}

void func_984()//Position - 0x4DBB2C
{
	Global_1573851.f_8 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 180000);
}

void func_985()//Position - 0x4DBB46
{
	if (!Global_2621837.f_1)
	{
		return;
	}
	Global_2621837.f_3 = 0;
	Global_2621837.f_4 = 1;
}

void func_986()//Position - 0x4DBB96
{
	Global_1573851.f_7 = NETWORK::GET_NETWORK_TIME();
}

bool func_987()//Position - 0x4DBBA8
{
	return NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), Global_1573851.f_7);
}

int func_988(int iParam0, int iParam1, int iParam2)//Position - 0x4DBC04
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	*iParam1 = 0;
	*iParam2 = 0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1573025)
	{
		if (Global_1572864[iVar0 /*5*/] == 5)
		{
			if (Global_1572864[iVar0 /*5*/].f_1 == iParam0)
			{
				*iParam1 = Global_1572864[iVar0 /*5*/].f_2;
				*iParam2 = Global_1572864[iVar0 /*5*/].f_3;
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_989()//Position - 0x4DBEB7
{
	Global_1573851.f_7 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 50000);
}

var func_990()//Position - 0x4DC0CA
{
	return Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_22;
}

bool func_991(int iParam0)//Position - 0x4DC0DE
{
	return BitTest(Global_2621865[iParam0 /*26*/].f_12, 25);
}

int func_992(int iParam0)//Position - 0x4DC28D
{
	int iVar0;
	int iVar1;
	iVar0 = iParam0;
	if (Global_2681762.f_4[iVar0 /*2*/] == 3)
	{
		return 0;
	}
	iVar1 = Global_2681762.f_4[iVar0 /*2*/].f_1;
	if (iVar1 == -1)
	{
		return 0;
	}
	return __LIB_13__::func_451(iVar1);
}

void func_993(int iParam0, struct<3> Param1)//Position - 0x4DC2C9
{
	struct<3> Var0;
	int iVar1;
	int iVar2;
	int iVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	Var0 = { Param1 };
	Var0.f_2 = (Var0.f_2 + 1.7f);
	iVar1 = 36;
	iVar2 = 120;
	iVar3 = 255;
	fVar4 = 10f;
	fVar5 = 5f;
	fVar6 = 64f;
	if (iParam0 == 1 || iParam0 == 207)
	{
		GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
		return;
	}
	if (((iParam0 == 126 || iParam0 == 10) || iParam0 == 15) || iParam0 == 16)
	{
		iVar1 = 36;
		iVar2 = 120;
		iVar3 = 255;
		fVar4 = 10f;
		fVar5 = 5f;
		fVar6 = 64f;
		GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
		return;
	}
	if (iParam0 == 134)
	{
		iVar1 = 36;
		iVar2 = 120;
		iVar3 = 255;
		fVar4 = 10f;
		fVar5 = 5f;
		fVar6 = 64f;
		GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
		return;
	}
	if (iParam0 == 12)
	{
		GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
		return;
	}
	if (iParam0 == 21)
	{
		GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
		return;
	}
	iVar1 = 36;
	iVar2 = 120;
	iVar3 = 255;
	fVar4 = 10f;
	fVar5 = 5f;
	fVar6 = 64f;
	GRAPHICS::DRAW_LIGHT_WITH_RANGEEX(Var0, iVar1, iVar2, iVar3, fVar4, fVar5, fVar6);
}

int func_994(int iParam0)//Position - 0x4DC432
{
	return Global_2621865[iParam0 /*26*/].f_6;
}

int func_995(int iParam0)//Position - 0x4DC444
{
	if (BitTest(Global_2621865[iParam0 /*26*/].f_12, 9))
	{
		return 0;
	}
	return 1;
}

bool func_996()//Position - 0x4DC461
{
	return Global_2621837.f_3;
}

int func_997(int iParam0)//Position - 0x4DCA43
{
	if (BitTest(Global_2621865[iParam0 /*26*/].f_13, 1))
	{
		return 0;
	}
	if (BitTest(Global_2621865[iParam0 /*26*/].f_13, 2))
	{
		return 1;
	}
	if (BitTest(Global_2621865[iParam0 /*26*/].f_13, 3))
	{
		return 2;
	}
	return -1;
}

bool func_998()//Position - 0x4DCABF
{
	return Global_1573131.f_11;
}

var func_999()//Position - 0x4DCDA7
{
	return Global_2621837.f_8;
}

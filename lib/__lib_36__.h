int func_0(int iParam0)//Position - 0x21EA6B
{
	if (iParam0 != __LIB_0__::func_162())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318, 31);
	}
	return 0;
}

int func_1(int iParam0, bool bParam1, bool bParam2)//Position - 0x223E6B
{
	if (bParam2)
	{
		return 5;
	}
	switch (iParam0)
	{
		case 2:
			return 8;
		case 3:
			return 6;
		case 1:
			return 7;
		case 7:
			return 9;
		case 5:
		case 4:
		case 6:
			if (bParam1)
			{
				return 1;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 4;
}

void func_2(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x4FE09
{
	if ((iParam0 != __LIB_0__::func_162() && __LIB_7__::func_932(iParam1)) && iParam2 >= 0)
	{
		Global_1853348[iParam0 /*834*/].f_267.f_191[iParam1 /*13*/].f_4 = iParam2;
		if (bParam3)
		{
			__LIB_1__::func_379(__LIB_12__::func_991(iParam1), Global_1853348[iParam0 /*834*/].f_267.f_191[iParam1 /*13*/].f_4, -1);
		}
	}
}

void func_3(int iParam0, int iParam1)//Position - 0x7F938
{
	int iVar0;
	if (iParam1 != __LIB_0__::func_162())
	{
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iParam1))
		{
			if (iParam1 == PLAYER::PLAYER_ID())
			{
				iVar0 = 1;
			}
			else if (__LIB_3__::func_136(iParam1, PLAYER::PLAYER_ID()))
			{
				iVar0 = 1;
			}
		}
	}
	if (iParam0 || iVar0)
	{
		if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
			PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), false);
			Global_2815059.f_5195.f_388 = NETWORK::GET_CLOUD_TIME_AS_INT();
		}
	}
}

void func_4()//Position - 0x1F2920
{
	int iVar0;
	if (__LIB_3__::func_180(PLAYER::PLAYER_ID()))
	{
		iVar0 = __LIB_3__::func_141(PLAYER::PLAYER_ID());
		if (!__LIB_5__::func_247(3, iVar0))
		{
			__LIB_10__::func_402(3, iVar0);
		}
	}
}

void func_5(int iParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, var uParam23, var uParam24, var uParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36, int iParam37, bool bParam38, bool bParam39, bool bParam40, bool bParam41, bool bParam42, bool bParam43, bool bParam44, bool bParam45, int iParam46, int iParam47, var uParam48, var uParam49, var uParam50, var uParam51, var uParam52, var uParam53, var uParam54, var uParam55, bool bParam56)//Position - 0x200FB7
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(2, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(2, iVar0);
		Global_1649593.f_2120[iVar0] = iParam0;
		StringCopy(&(Global_1649593.f_2120.f_99[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_2120.f_260[iVar0] = iParam2;
		Global_1649593.f_2120.f_11[iVar0] = iParam3;
		Global_1649593.f_2120.f_22[iVar0] = iParam4;
		Global_1649593.f_2120.f_33[iVar0] = iParam5;
		Global_1649593.f_2120.f_44[iVar0] = iParam6;
		Global_1649593.f_2120.f_55[iVar0] = iParam7;
		Global_1649593.f_2120.f_66[iVar0] = iParam8;
		Global_1649593.f_2120.f_77[iVar0] = iParam9;
		Global_1649593.f_2120.f_88[iVar0] = iParam10;
		Global_1649593.f_2120.f_282[iVar0] = iParam11;
		Global_1649593.f_2120.f_293[iVar0] = iParam12;
		Global_1649593.f_2120.f_271[iVar0] = iParam13;
		Global_1649593.f_2120.f_315[iVar0] = iParam14;
		Global_1649593.f_2120.f_326[iVar0 /*3*/] = iParam15;
		Global_1649593.f_2120.f_326[iVar0 /*3*/].f_1 = iParam16;
		Global_1649593.f_2120.f_357[iVar0] = iParam17;
		Global_1649593.f_2120.f_368[iVar0] = uParam18;
		Global_1649593.f_2120.f_379[iVar0] = uParam19;
		Global_1649593.f_2120.f_390[iVar0] = uParam20;
		Global_1649593.f_2120.f_401[iVar0] = uParam21;
		Global_1649593.f_2120.f_412[iVar0] = uParam22;
		Global_1649593.f_2120.f_423[iVar0] = uParam23;
		Global_1649593.f_2120.f_434[iVar0] = uParam24;
		Global_1649593.f_2120.f_445[iVar0] = uParam25;
		Global_1649593.f_2120.f_456[iVar0] = iParam26;
		Global_1649593.f_2120.f_467[iVar0] = iParam27;
		Global_1649593.f_2120.f_478[iVar0] = iParam28;
		Global_1649593.f_2120.f_489[iVar0] = iParam29;
		Global_1649593.f_2120.f_500[iVar0] = iParam30;
		Global_1649593.f_2120.f_511[iVar0] = iParam31;
		Global_1649593.f_2120.f_522[iVar0] = iParam32;
		Global_1649593.f_2120.f_533[iVar0] = iParam33;
		Global_1649593.f_2120.f_544[iVar0] = iParam37;
		Global_2825033[iVar0] = bParam38;
		Global_2825044[iVar0] = bParam39;
		Global_2825055[iVar0] = bParam40;
		Global_2825066[iVar0] = bParam41;
		Global_2825077[iVar0] = bParam42;
		Global_2825088[iVar0] = bParam43;
		Global_2825099[iVar0] = bParam44;
		Global_2825110[iVar0] = bParam45;
		Global_1649593.f_2120.f_631[iVar0] = uParam48;
		Global_1649593.f_2120.f_642[iVar0] = uParam49;
		Global_1649593.f_2120.f_653[iVar0] = uParam50;
		Global_1649593.f_2120.f_664[iVar0] = uParam51;
		Global_1649593.f_2120.f_675[iVar0] = uParam52;
		Global_1649593.f_2120.f_686[iVar0] = uParam53;
		Global_1649593.f_2120.f_697[iVar0] = uParam54;
		Global_1649593.f_2120.f_708[iVar0] = uParam55;
		if (bParam56)
		{
			Global_1649593.f_1172 = 0;
		}
		else
		{
			Global_1649593.f_1172 = 1;
		}
		Global_1649593.f_2120.f_576[iVar0] = iParam34;
		if (iParam34 > -1)
		{
			__LIB_13__::func_932(2, iVar0);
		}
		else
		{
			__LIB_13__::func_931(2, iVar0);
		}
		Global_1649593.f_2120.f_587[iVar0] = iParam35;
		Global_1649593.f_2120.f_598[iVar0] = iParam36;
		Global_1649593.f_2120.f_609[iVar0] = iParam46;
		Global_1649593.f_2120.f_620[iVar0] = iParam47;
	}
}

int func_6(int iParam0, int iParam1, int iParam2)//Position - 0x21CDCD
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && PED::IS_PED_A_PLAYER(iParam1))
	{
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam2) && PED::IS_PED_A_PLAYER(iParam2))
	{
		return 0;
	}
	if (__LIB_35__::func_411(iParam1))
	{
		return 1;
	}
	if (__LIB_35__::func_411(iParam2))
	{
		return 1;
	}
	if (__LIB_15__::func_583(ENTITY::GET_ENTITY_MODEL(iParam0)))
	{
		return 1;
	}
	return 0;
}

int func_7(int iParam0)//Position - 0x89960
{
	if (__LIB_2__::func_75())
	{
		if (__LIB_1__::func_693(iParam0, 0, 1))
		{
			return __LIB_1__::func_744(iParam0);
		}
	}
	if ((__LIB_1__::func_693(iParam0, 0, 1) && __LIB_35__::func_98()) && __LIB_0__::func_275(iParam0, 0))
	{
		return 1;
	}
	return 0;
}

void func_8(int iParam0, int iParam1)//Position - 0x1C1139
{
	bool bVar0;
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = __LIB_0__::func_162();
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_8 = 0;
	Global_1946250.f_506 = 0;
	bVar0 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
	if (((__LIB_4__::func_649() && Global_1853186 != __LIB_0__::func_162()) && Global_1853186 != PLAYER::PLAYER_ID()) && !__LIB_3__::func_950(PLAYER::PLAYER_ID()))
	{
		if (Global_1946250.f_3280 != PLAYER::PLAYER_ID())
		{
			if (Global_1946250.f_3280 != -1)
			{
				MISC::SET_BIT(&(Global_1946250.f_506), 1);
				Global_1853185 = Global_1853186;
			}
			else
			{
				if (Global_1946250.f_3280 == -1)
				{
					__LIB_6__::func_69(Global_1853186);
				}
				Global_1853185 = Global_1853186;
			}
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
		}
	}
	else if ((Global_1946250.f_3280 != -1 && Global_1946250.f_3280 != PLAYER::PLAYER_ID()) && !__LIB_3__::func_950(PLAYER::PLAYER_ID()))
	{
		__LIB_6__::func_765(bVar0, 1);
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
		Global_1853185 = PLAYER::INT_TO_PLAYERINDEX(Global_1946250.f_3280);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
	}
	else if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 0) && !__LIB_3__::func_950(PLAYER::PLAYER_ID()))
	{
		__LIB_6__::func_765(bVar0, 0);
		if (bVar0 != __LIB_0__::func_162())
		{
			Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = bVar0;
		}
	}
	else if (__LIB_3__::func_950(PLAYER::PLAYER_ID()))
	{
		__LIB_6__::func_765(bVar0, 1);
		MISC::SET_BIT(&(Global_1946250.f_506), 1);
		Global_1853185 = Global_1946250.f_3630;
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1946250.f_3630;
	}
	else if ((__LIB_4__::func_673(PLAYER::PLAYER_ID()) && (__LIB_3__::func_185(PLAYER::PLAYER_ID(), -1) || !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))) && PLAYER::PLAYER_ID() == __LIB_6__::func_760())
	{
		Global_1853185 = PLAYER::PLAYER_ID();
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (__LIB_0__::func_541(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0))
			{
				__LIB_4__::func_553(PLAYER::PLAYER_ID(), 81, 2);
			}
			else if (__LIB_0__::func_872(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				__LIB_4__::func_956(PLAYER::PLAYER_ID(), 81, 2);
			}
		}
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 184, false);
		MISC::SET_BIT(&(Global_1946250.f_506), 0);
		Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = Global_1853185;
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 != __LIB_0__::func_162())
	{
		if (__LIB_1__::func_659(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9))
		{
			Global_1946250.f_3635 = __LIB_4__::func_566(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9);
		}
	}
	__LIB_6__::func_604();
}

void func_9()//Position - 0x1CAA87
{
	int iVar0;
	int iVar1;
	struct<4> Var2;
	int iVar3;
	char* sVar4;
	iVar1 = 70;
	while (iVar1 <= 80)
	{
		iVar0 = __LIB_4__::func_705(iVar1);
		if (BitTest(Global_2703735.f_3703, iVar0) && __LIB_35__::func_264())
		{
			if (!ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_3703.f_1[iVar0]))
			{
				if (__LIB_0__::func_799(joaat("gr_prop_gr_bunkeddoor_col")))
				{
					Var2 = { 0f, 0f, 0f };
					Var2.f_3 = { 0f, 0f, 0f };
					Var2 = { __LIB_4__::func_696(iVar1) };
					Global_2703735.f_3703.f_1[iVar0] = OBJECT::CREATE_OBJECT(joaat("gr_prop_gr_bunkeddoor_col"), Var2, false, true, false);
					ENTITY::SET_ENTITY_COORDS_NO_OFFSET(Global_2703735.f_3703.f_1[iVar0], Var2, false, false, true);
					ENTITY::SET_ENTITY_ROTATION(Global_2703735.f_3703.f_1[iVar0], Var2.f_3, 2, true);
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("gr_prop_gr_bunkeddoor_col"));
				}
			}
		}
		else
		{
			iVar3 = 0;
			if (ENTITY::DOES_ENTITY_EXIST(Global_2703735.f_3703.f_1[iVar0]))
			{
				sVar4 = ENTITY::GET_ENTITY_SCRIPT(Global_2703735.f_3703.f_1[iVar0], &iVar3);
				if (MISC::GET_HASH_KEY(sVar4) == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
				{
					ENTITY::DELETE_ENTITY(&(Global_2703735.f_3703.f_1[iVar0]));
				}
			}
		}
		iVar1++;
	}
}

int func_10(int iParam0)//Position - 0x89858
{
	if ((__LIB_1__::func_693(iParam0, 0, 1) && __LIB_35__::func_98()) && __LIB_6__::func_371(iParam0, 1))
	{
		return 1;
	}
	return 0;
}

int func_11(int* iParam0, int iParam1, var uParam2, var uParam3, bool bParam4, bool bParam5, char* sParam6)//Position - 0x8AA19
{
	struct<4> Var0;
	char* sVar1;
	bool bVar2;
	bool bVar3;
	float fVar4;
	int iVar5;
	char* sVar6;
	StringCopy(&Var0, "", 16);
	bVar2 = iParam1 == 20;
	bVar3 = __LIB_2__::func_8(iParam1);
	fVar4 = __LIB_2__::func_7();
	iVar5 = -1;
	if (iParam1 == 27 || iParam1 == 28)
	{
		if (__LIB_1__::func_828())
		{
			if (__LIB_2__::func_6() > 0 && Global_1836359)
			{
				HUD::THEFEED_HIDE_THIS_FRAME();
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
				if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					HUD::HIDE_HELP_TEXT_THIS_FRAME();
				}
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
			}
		}
	}
	if (!bParam5)
	{
		if (!__LIB_3__::func_288())
		{
			__LIB_2__::func_122(iParam0, uParam2, 1);
			return 0;
		}
	}
	if (BitTest(Global_2815059.f_4660, 26))
	{
		__LIB_2__::func_122(iParam0, uParam2, 1);
		return 0;
	}
	if (!__LIB_0__::func_864(&(uParam2->f_19)))
	{
		if (__LIB_2__::func_6() == 1)
		{
			__LIB_2__::func_4(bVar3, iParam0, 0);
			__LIB_0__::func_795(&(uParam2->f_19), 0, 0);
			__LIB_2__::func_122(iParam0, uParam2, 0);
			MISC::SET_BIT(&(Global_2815059.f_4662), 5);
		}
	}
	if (__LIB_0__::func_864(&(uParam2->f_19)) || bParam5)
	{
		if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
		{
			HUD::HIDE_HELP_TEXT_THIS_FRAME();
		}
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
		if (__LIB_0__::func_937(&(uParam2->f_19), 10000, 0) || (__LIB_2__::func_6() == 0 && !bParam5))
		{
			__LIB_2__::func_122(iParam0, uParam2, 1);
			return 0;
		}
		else
		{
			if (bVar2 == 0)
			{
				__LIB_2__::func_3();
				if (iParam1 == 27 || iParam1 == 28)
				{
					HUD::THEFEED_HIDE_THIS_FRAME();
				}
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
			}
			if (!BitTest(uParam2->f_33, 0))
			{
				if (bVar2 == 0)
				{
					__LIB_2__::func_3();
					if (iParam1 == 27 || iParam1 == 28)
					{
						HUD::THEFEED_HIDE_THIS_FRAME();
					}
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
				}
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				if (__LIB_2__::func_4(bVar3, iParam0, 0))
				{
					__LIB_1__::func_990(iParam0, 0, 0);
					sVar1 = __LIB_2__::func_166(iParam1, &(Global_4718592.f_116531), bParam4);
					Var0 = { __LIB_2__::func_165(iParam1) };
					if (bParam4)
					{
						__LIB_2__::func_147(iParam0, sVar1, "", 0, -1, -1, 1);
					}
					else if (iParam1 == 27)
					{
						__LIB_1__::func_998(iParam0, __LIB_2__::func_146(uParam2), __LIB_2__::func_145(uParam2), -1);
					}
					else if (iParam1 == 28)
					{
						sVar6 = __LIB_22__::func_387(uParam2);
						if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
						{
							sVar6 = sParam6;
						}
						__LIB_1__::func_997(iParam0, sVar6, __LIB_15__::func_581(), -1);
					}
					else if (__LIB_2__::func_75())
					{
						uParam2->f_34 = Global_1836358;
						__LIB_2__::func_147(iParam0, sVar1, &Var0, 1, -1, Global_1836358, 1);
					}
					else if (bVar2)
					{
						iVar5 = __LIB_2__::func_64(iParam1);
						uParam2->f_34 = Global_1836358;
						__LIB_2__::func_147(iParam0, sVar1, "", 0, iVar5, __LIB_1__::func_996(), 1);
					}
					else
					{
						iVar5 = __LIB_2__::func_64(iParam1);
						__LIB_2__::func_147(iParam0, sVar1, &Var0, 1, iVar5, -1, 1);
					}
					MISC::SET_BIT(&(uParam2->f_33), 0);
				}
			}
			if (BitTest(uParam2->f_33, 0))
			{
				Global_1836357 = uParam3;
				Global_1836356 = 1;
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				if (bVar2)
				{
					if (uParam2->f_34 != Global_1836358)
					{
						MISC::CLEAR_BIT(&(uParam2->f_33), 0);
					}
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_12(var uParam0, int iParam1, var uParam2)//Position - 0x1B3500
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_1__::func_583(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (__LIB_3__::func_185(PLAYER::PLAYER_ID(), -1))
	{
		if (__LIB_3__::func_100() || __LIB_0__::func_877())
		{
			return 0;
		}
		if (__LIB_4__::func_655(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	if (Global_1957730)
	{
		if (Global_1574632.f_18 != 0 || __LIB_5__::func_333())
		{
			Global_1957730 = 0;
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
			{
				if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
				{
					TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 576);
				}
			}
			return 0;
		}
	}
	if (__LIB_2__::func_77())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
			{
				TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 576);
			}
		}
		return 0;
	}
	if (__LIB_2__::func_715())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
			{
				TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 576);
			}
		}
		return 0;
	}
	if (Global_1853185 != __LIB_0__::func_162())
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 5))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (iParam1 == PLAYER::PLAYER_ID())
			{
				if (!VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(iVar0))
				{
					return 0;
				}
				if (PLAYER::IS_PLAYER_TELEPORT_ACTIVE())
				{
					return 0;
				}
				if (((((TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 1 || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 0) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 0) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_VEHICLE")) == 0)
				{
					return 0;
				}
				if (PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373))
				{
					return 0;
				}
				if (TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
				{
					return 0;
				}
				if (__LIB_5__::func_621())
				{
					return 0;
				}
				if (VEHICLE::GET_IS_VEHICLE_ENGINE_RUNNING(iVar0) && Global_1957730 == 1)
				{
					if (((((PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/) != 0f || PAD::GET_DISABLED_CONTROL_UNBOUND_NORMAL(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/) != 0f) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/)) || PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/))
					{
						__LIB_1__::func_33(1);
						__LIB_6__::func_410(PLAYER::PLAYER_ID(), 0, 0, 0);
						__LIB_3__::func_738(0);
						__LIB_4__::func_654(0);
						PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 104 /*INPUT_VEH_SHUFFLE*/, false);
						PED::SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(PLAYER::PLAYER_PED_ID(), 1);
						VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(iVar0, true);
						VEHICLE::SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER(iVar0, true);
						VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(iVar0, PLAYER::PLAYER_ID(), false);
						PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/, true);
						__LIB_4__::func_519(iVar0, 0);
						if (__LIB_3__::func_185(PLAYER::PLAYER_ID(), -1) && __LIB_0__::func_389(PLAYER::PLAYER_ID()))
						{
							if (__LIB_0__::func_541(iVar0, 0))
							{
								__LIB_4__::func_642(1);
							}
							else
							{
								if (__LIB_4__::func_633(PLAYER::PLAYER_ID()))
								{
									if (__LIB_0__::func_155() != -1)
									{
										if (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_2 != -1 && Global_2703735.f_61.f_49)
										{
											__LIB_1__::func_891(1, 0, 1, 0, 0, 0, 0);
										}
									}
									iVar1 = -1;
									__LIB_1__::func_775(156, &iVar1, 1);
									if (iVar1 >= 0)
									{
										__LIB_1__::func_821(iVar1);
									}
								}
								__LIB_5__::func_352(750);
								__LIB_8__::func_232(1);
							}
						}
						if (!__LIB_1__::func_659(Global_1853185))
						{
							if (__LIB_3__::func_185(PLAYER::PLAYER_ID(), -1) && !__LIB_0__::func_541(iVar0, 0))
							{
								if (__LIB_4__::func_633(PLAYER::PLAYER_ID()))
								{
									if (__LIB_0__::func_155() != -1)
									{
										if (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_2 != -1 && Global_2703735.f_61.f_49)
										{
											__LIB_1__::func_891(1, 0, 1, 0, 0, 0, 0);
										}
									}
									iVar2 = -1;
									__LIB_1__::func_775(156, &iVar2, 1);
									if (iVar2 >= 0)
									{
										__LIB_1__::func_821(iVar2);
									}
								}
								__LIB_5__::func_352(750);
								__LIB_8__::func_232(1);
							}
							__LIB_2__::func_976();
							return 1;
						}
						else if (__LIB_4__::func_653(PLAYER::PLAYER_ID()) && __LIB_1__::func_659(Global_1853185))
						{
							__LIB_2__::func_976();
							return 1;
						}
						else if (!__LIB_0__::func_389(PLAYER::PLAYER_ID()))
						{
							bLocal_115 = true;
						}
						else
						{
							__LIB_4__::func_652(0);
							__LIB_4__::func_651(1);
						}
					}
				}
				if (bLocal_115)
				{
					__LIB_1__::func_33(1);
					if (__LIB_0__::func_541(iVar0, 0))
					{
						__LIB_4__::func_553(PLAYER::PLAYER_ID(), __LIB_4__::func_566(PLAYER::PLAYER_ID()), 1);
						__LIB_4__::func_642(1);
					}
					else
					{
						if (__LIB_0__::func_155() != -1)
						{
							if (Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_2 != -1 && Global_2703735.f_61.f_49)
							{
								__LIB_1__::func_891(1, 0, 1, 0, 0, 0, 0);
							}
						}
						iVar3 = -1;
						__LIB_1__::func_775(156, &iVar3, 1);
						__LIB_4__::func_519(iVar0, 0);
						if (iVar3 >= 0)
						{
							MISC::SET_BIT(&(Global_1585857[iVar3 /*142*/].f_103), 0);
							__LIB_1__::func_821(iVar3);
							if (__LIB_1__::func_659(PLAYER::PLAYER_ID()))
							{
								__LIB_3__::func_602(0);
								__LIB_5__::func_411(1);
							}
							else
							{
								__LIB_5__::func_352(750);
							}
							__LIB_4__::func_956(PLAYER::PLAYER_ID(), __LIB_4__::func_566(PLAYER::PLAYER_ID()), 1);
							__LIB_8__::func_232(1);
						}
					}
					__LIB_4__::func_651(1);
					__LIB_4__::func_652(0);
				}
			}
			else if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) == PLAYER::GET_PLAYER_PED(iParam1) && uParam2)
			{
				__LIB_2__::func_976();
				return 1;
			}
		}
	}
	return 0;
}

void func_13(int iParam0, bool bParam1, int iParam2, int iParam3)//Position - 0x218934
{
	float fVar0;
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 != iParam0)
	{
		__LIB_7__::func_945(-1);
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 = iParam0;
		if (__LIB_7__::func_944() != -1)
		{
			__LIB_7__::func_946(-1);
		}
		if (__LIB_7__::func_943() != -1)
		{
			__LIB_9__::func_357(-1);
		}
		__LIB_15__::func_414(iParam2);
		__LIB_15__::func_620(iParam0);
		if (!__LIB_15__::func_413(iParam0))
		{
			fVar0 = __LIB_15__::func_412(iParam0);
			if (fVar0 != 1f)
			{
				__LIB_2__::func_74(fVar0);
				MISC::SET_BIT(&(Global_1943920.f_3), 1);
			}
		}
		if (!__LIB_15__::func_411(iParam0) || iParam3)
		{
			if (__LIB_15__::func_410(iParam0, iParam2) && iParam3 == 1)
			{
				PLAYER::SET_MAX_WANTED_LEVEL(0);
				if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
				{
					PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
					PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), false);
				}
				MISC::SET_BIT(&(Global_1943920.f_3), 0);
			}
			else if (PLAYER::GET_MAX_WANTED_LEVEL() < 5)
			{
				PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
				PLAYER::SET_MAX_WANTED_LEVEL(5);
			}
		}
		if (__LIB_0__::func_945())
		{
			__LIB_1__::func_966(27);
		}
		if (bParam1)
		{
			if (!__LIB_3__::func_290())
			{
				__LIB_2__::func_135(1);
			}
		}
		if ((((((iParam0 == 159 || iParam0 == 157) || iParam0 == 153) || iParam0 == 154) || iParam0 == 164) || iParam0 == 155) || iParam0 == 171)
		{
			if ((BitTest(Global_2815059.f_4624, 1) || BitTest(Global_2815059.f_4624, 4)) || BitTest(Global_2815059.f_4624, 0))
			{
				__LIB_1__::func_928(6);
			}
			__LIB_15__::func_302();
		}
		if (((iParam0 == 164 || iParam0 == 208) || iParam0 == 250) || iParam0 == 237)
		{
			MISC::ENABLE_DISPATCH_SERVICE(3, false);
			MISC::ENABLE_DISPATCH_SERVICE(5, false);
		}
		if (__LIB_2__::func_703(PLAYER::PLAYER_ID()) && __LIB_2__::func_106(PLAYER::PLAYER_ID()))
		{
			MISC::SET_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1), 8);
		}
		__LIB_30__::func_621();
		if (__LIB_15__::func_396(iParam0))
		{
			MISC::ENABLE_DISPATCH_SERVICE(3, false);
			MISC::ENABLE_DISPATCH_SERVICE(5, false);
			MISC::SET_BIT(&(Global_1943920.f_3), 6);
		}
		Global_2815059.f_6745 = 0;
	}
}

int func_14(struct<3> Param0, var uParam1)//Position - 0x19C0F
{
	int iVar0;
	int iVar1;
	int iVar2;
	*uParam1 = -1;
	iVar2 = __LIB_1__::func_557(Param0, 0);
	if (!iVar2 == -1)
	{
		iVar0 = 83;
		while (iVar0 <= 87)
		{
			iVar1 = iVar0;
			if (__LIB_15__::func_364(iVar1))
			{
				if (__LIB_1__::func_557(Global_1946250.f_533[iVar0 /*3*/], 0) == iVar2)
				{
					*uParam1 = iVar0 + 1000;
					return 1;
				}
			}
			iVar0++;
		}
	}
	return 0;
}

var func_15(int iParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7)//Position - 0x796B0
{
	var uVar0;
	uVar0 = __LIB_35__::func_429(iParam0, 0, sParam1, iParam4, iParam5, 0, iParam6, 1, iParam2, iParam3, bParam7);
	return uVar0;
}

void func_16()//Position - 0x98CCA
{
	int iVar0;
	iVar0 = __LIB_35__::func_871();
	__LIB_1__::func_354(5500, iVar0, -1, 1, 0);
}

void func_17(var uParam0, var uParam1)//Position - 0x19DFA3
{
	if (BitTest(uParam0->f_22, 7))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!ENTITY::IS_ENTITY_DEAD(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), false))
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false));
				if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
				{
					ENTITY::SET_ENTITY_INVINCIBLE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), false);
				}
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_22.f_256) && !ENTITY::IS_ENTITY_DEAD(uParam0->f_22.f_256, false))
		{
			NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(uParam0->f_22.f_256);
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(uParam0->f_22.f_256))
			{
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_22.f_256, false);
			}
		}
	}
	__LIB_12__::func_445(uParam0, 1);
	__LIB_4__::func_525(0);
	__LIB_3__::func_122(&(uParam0->f_22.f_94));
}

int func_18(int iParam0)//Position - 0x19F20D
{
	if (HUD::IS_WARNING_MESSAGE_ACTIVE() || __LIB_35__::func_321(iParam0))
	{
		return 1;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (!__LIB_3__::func_185(PLAYER::PLAYER_ID(), -1))
		{
			if (CAM::IS_SCREEN_FADED_OUT())
			{
				if (Global_1946250.f_3630 != __LIB_0__::func_162())
				{
					if (((!__LIB_3__::func_171(Global_1946250.f_3630) && !__LIB_2__::func_742(Global_1946250.f_3630)) && !BitTest(Global_2689235[Global_1946250.f_3630 /*453*/].f_318, 5)) && !__LIB_4__::func_529(Global_1946250.f_3630))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_19(var uParam0, var uParam1)//Position - 0x1B43B5
{
	__LIB_3__::func_122(&(uParam0->f_22.f_94));
	__LIB_4__::func_561(0);
	MISC::CLEAR_BIT(&Global_1946250, 10);
	if (BitTest(uParam0->f_22, 7))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!ENTITY::IS_ENTITY_DEAD(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), false))
			{
				ENTITY::SET_ENTITY_INVINCIBLE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), false);
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_22.f_256) && !ENTITY::IS_ENTITY_DEAD(uParam0->f_22.f_256, false))
		{
			ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_22.f_256, false);
		}
	}
	MISC::CLEAR_BIT(&Global_1946250, 15);
	__LIB_12__::func_447(uParam0, 1);
}

int func_20(int iParam0)//Position - 0x1E51ED
{
	if (__LIB_6__::func_631(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if (__LIB_3__::func_439(PLAYER::PLAYER_ID()) || ((__LIB_4__::func_78(__LIB_5__::func_185(PLAYER::PLAYER_ID())) && __LIB_1__::func_907(PLAYER::PLAYER_ID(), 0)) && __LIB_4__::func_77(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if (__LIB_8__::func_247(iParam0))
	{
		return 0;
	}
	return 1;
}

int func_21(bool bParam0)//Position - 0x21F1D6
{
	bool bVar0;
	if (!__LIB_2__::func_159(1) && __LIB_1__::func_730() != PLAYER::PLAYER_ID())
	{
		bVar0 = false;
		if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57 != __LIB_0__::func_162())
		{
			if (__LIB_1__::func_693(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57, 0, 1))
			{
				if ((Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_24 == 4 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_24 == 8) || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_24 == 6)
				{
					bVar0 = true;
				}
			}
		}
		else if (__LIB_1__::func_726(__LIB_5__::func_185(PLAYER::PLAYER_ID())) == 0 || __LIB_1__::func_726(__LIB_5__::func_185(PLAYER::PLAYER_ID())) == 3)
		{
			bVar0 = true;
		}
		if (bVar0)
		{
			if (bParam0)
			{
				__LIB_1__::func_928(31);
				if (__LIB_12__::func_654(__LIB_5__::func_185(PLAYER::PLAYER_ID())))
				{
					__LIB_1__::func_928(81);
				}
				if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57 != __LIB_0__::func_162() && NETWORK::NETWORK_IS_PLAYER_ACTIVE(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57))
				{
					Global_1888322 = __LIB_32__::func_173(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57, -2, 0, 0, 0);
					if (!__LIB_6__::func_71(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57))
					{
						__LIB_1__::func_928(88);
					}
				}
				else
				{
					Global_1888322 = 1;
				}
				Global_1888306 = { Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_105 };
			}
			return 1;
		}
	}
	return 0;
}

int func_22(char* sParam0, int iParam1, int iParam2, int iParam3, bool bParam4, int iParam5)//Position - 0x7AFC6
{
	int iVar0;
	struct<8> Var1;
	iVar0 = -1;
	if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), iParam1) || iParam5)
	{
		if (!bParam4)
		{
			StringCopy(&Var1, PLAYER::GET_PLAYER_NAME(iParam1), 64);
		}
		else
		{
			StringCopy(&Var1, PLAYER::GET_PLAYER_NAME(iParam1), 64);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Var1))
		{
		}
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(__LIB_32__::func_173(iParam1, -2, 1, 0, 0));
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(__LIB_2__::func_49(&Var1));
		if (!iParam3 == 0)
		{
			HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam3);
		}
		HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
		iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		__LIB_2__::func_158(27, sParam0, 1, &Var1, iParam2, 0, 0, 0, 1, 0, 0, 0);
	}
	return iVar0;
}

int func_23(var uParam0)//Position - 0x8535A
{
	int iVar0;
	if (uParam0->f_1 == 1)
	{
		if (Global_2703735.f_2722)
		{
			return 0;
		}
	}
	__LIB_35__::func_434(uParam0, uParam0->f_17);
	__LIB_1__::func_742(uParam0);
	if (__LIB_0__::func_177())
	{
		__LIB_1__::func_742(uParam0);
	}
	if (__LIB_1__::func_258(uParam0->f_1))
	{
		__LIB_2__::func_168();
		if (Global_2703735.f_2400[0 /*80*/].f_2 == 0)
		{
			Global_2703735.f_2400[0 /*80*/] = { *uParam0 };
			if (__LIB_0__::func_703(uParam0->f_69, 8192))
			{
				Global_1931432 = 1;
			}
			return 1;
		}
		if (((Global_2703735.f_2400[0 /*80*/].f_1 == 13 || Global_2703735.f_2400[0 /*80*/].f_1 == 53) || Global_2703735.f_2400[0 /*80*/].f_1 == 54) || Global_2703735.f_2400[0 /*80*/].f_1 == 58)
		{
			Global_2703735.f_2400[0 /*80*/].f_2 = 5;
		}
		iVar0 = 2;
		while (iVar0 >= 1)
		{
			Global_2703735.f_2400[iVar0 + 1 /*80*/] = { Global_2703735.f_2400[iVar0 /*80*/] };
			iVar0 = (iVar0 + -1);
		}
		Global_2703735.f_2400[1 /*80*/] = { *uParam0 };
		return 1;
	}
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (Global_2703735.f_2400[iVar0 /*80*/].f_2 == 0)
		{
			Global_2703735.f_2400[iVar0 /*80*/] = { *uParam0 };
			if (iVar0 == 0)
			{
				__LIB_2__::func_168();
			}
			return 1;
		}
		else
		{
			if (uParam0->f_1 == 1)
			{
				__LIB_1__::func_330(&(Global_2703735.f_2400[iVar0 /*80*/].f_69), 2);
				Global_2703735.f_2400[iVar0 /*80*/].f_2 = 5;
			}
			if (uParam0->f_1 == 86 && !__LIB_0__::func_703(uParam0->f_69, 128))
			{
				if (__LIB_1__::func_256(Global_2703735.f_2400[iVar0 /*80*/].f_1))
				{
					Global_2703735.f_2400[iVar0 /*80*/].f_2 = 5;
					__LIB_1__::func_330(&(Global_2703735.f_2400[iVar0 /*80*/].f_69), 1);
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_24(int iParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0xA5BA6
{
	int iVar0;
	float fVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0)) || !NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
			if (PLAYER::PLAYER_ID() != __LIB_0__::func_162())
			{
				uParam1->f_100 = PLAYER::PLAYER_ID();
			}
			if (uParam1->f_70 == 0)
			{
				uParam1->f_70 = 1;
			}
			__LIB_35__::func_430(iParam0, uParam1, bParam2, bParam3);
			if (uParam1->f_102 != 0)
			{
				if (uParam1->f_102 == 2)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, true);
					VEHICLE::SET_DRIFT_TYRES(iParam0, false);
				}
				else if (uParam1->f_102 == 1)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, false);
					VEHICLE::SET_DRIFT_TYRES(iParam0, false);
				}
				else if (uParam1->f_102 == 3)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, true);
					VEHICLE::SET_DRIFT_TYRES(iParam0, true);
				}
			}
			if (__LIB_0__::func_811(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				if (uParam1->f_9[44] == 2)
				{
					VEHICLE::SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(iParam0, false, true);
				}
				else
				{
					VEHICLE::SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(iParam0, true, true);
				}
			}
			if (!uParam1->f_78 == -1 && uParam1->f_9[14] == -1)
			{
				AUDIO::OVERRIDE_VEH_HORN(iParam0, true, uParam1->f_78);
			}
			if (!uParam1->f_79 == -1)
			{
				AUDIO::SET_VEHICLE_HORN_SOUND_INDEX(iParam0, uParam1->f_79);
			}
			if (__LIB_0__::func_810(uParam1->f_66, &fVar1) && uParam1->f_80 != fVar1)
			{
				uParam1->f_80 = fVar1;
			}
			VEHICLE::SET_VEHICLE_ENVEFF_SCALE(iParam0, uParam1->f_80);
			VEHICLE::SET_VEHICLE_EXTRA_COLOUR_5(iParam0, uParam1->f_97);
			if (uParam1->f_99 >= 0)
			{
				VEHICLE::SET_VEHICLE_EXTRA_COLOUR_6(iParam0, uParam1->f_99);
			}
			if (__LIB_0__::func_809(iParam0))
			{
				__LIB_1__::func_525(iParam0, __LIB_1__::func_562(uParam1->f_74, uParam1->f_75, uParam1->f_76));
			}
			if (VEHICLE::GET_VEHICLE_LIVERY2_COUNT(iParam0) > 1 && uParam1->f_98 >= 0)
			{
				VEHICLE::SET_VEHICLE_LIVERY2(iParam0, uParam1->f_98);
			}
			if (BitTest(uParam1->f_95, 0))
			{
				__LIB_10__::func_557(iParam0, &(uParam1->f_81));
			}
			if ((!__LIB_2__::func_969(4) && !bParam4) && !NETWORK::NETWORK_IS_ACTIVITY_SESSION())
			{
				__LIB_6__::func_821(iParam0);
			}
			if (__LIB_0__::func_801(iVar0))
			{
				switch (uParam1->f_9[5])
				{
					case 0:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						break;
					case 1:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 0, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
						}
						break;
					case 2:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 1, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 3, false);
						}
						break;
					case 3:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 4, false);
						}
						break;
					default:
						if (uParam1->f_9[5] != -1)
						{
							VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
							if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
							{
								VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
							}
							else
							{
								VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 4, false);
							}
						}
						break;
					}
			}
			if (__LIB_1__::func_522(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				switch (uParam1->f_9[5])
				{
					case 1:
						VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(iParam0, false);
						VEHICLE::SET_VEHICLE_STRONG(iParam0, true);
						if (uParam1->f_9[16] == 5)
						{
							VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, (Global_262145.f_21791 /* Tunable: -1001087518 */ + 0.05f));
						}
						else
						{
							VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, Global_262145.f_21791 /* Tunable: -1001087518 */);
						}
						VEHICLE::SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(iParam0, true);
						break;
					default:
						VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(iParam0, false);
						VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, 1f);
						VEHICLE::SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(iParam0, true);
						break;
					}
			}
			switch (uParam1->f_94)
			{
				case 0:
					break;
				case 1:
					if (BitTest(uParam1->f_95, 1) && BitTest(uParam1->f_95, 2))
					{
						if (BitTest(uParam1->f_95, 3))
						{
						}
					}
					else if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Vehicle", 3))
					{
						DECORATOR::DECOR_SET_INT(iParam0, "Player_Vehicle", -1);
					}
					break;
				case 2:
					if (BitTest(uParam1->f_95, 1) && BitTest(uParam1->f_95, 2))
					{
						if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()));
						}
					}
					else if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
					{
						if (__LIB_0__::func_800(uParam1->f_81) && NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(&(uParam1->f_81)))
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&(uParam1->f_81))));
						}
						else
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", -1);
						}
					}
					break;
				case 3:
					break;
				case 4:
					break;
				}
		}
	}
}

void func_25(int iParam0)//Position - 0x14E5F0
{
	int iVar0;
	struct<3> Var1;
	float fVar2;
	__LIB_2__::func_91();
	__LIB_12__::func_846(1, 1, 0, 1060320051, 1086324736, 1065353216, 1088421888, 1084227584, 0, 1066192077, 0, 0, 1, 0, 1109393408);
	iVar0 = 0;
	while (iVar0 < 32)
	{
		switch (__LIB_3__::func_616())
		{
			case 0:
				__LIB_3__::func_986(*iParam0, iVar0, &Var1, &fVar2);
				break;
			case 1:
				__LIB_4__::func_147(*iParam0, iVar0, &Var1, &fVar2);
				break;
			case 3:
			case 4:
				__LIB_4__::func_147(*iParam0, iVar0, &Var1, &fVar2);
				break;
		}
		__LIB_34__::func_804(Var1, fVar2, (1f - (0.1f * IntToFloat(iVar0))));
		iVar0++;
	}
}

void func_26(int iParam0)//Position - 0x125160
{
	int iVar0;
	int iVar1;
	bool bVar2;
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !__LIB_5__::func_195(PLAYER::PLAYER_ID()))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (__LIB_0__::func_695(iVar0))
			{
				iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
				if (!PED::IS_PED_INJURED(iVar1))
				{
					if (PED::IS_PED_A_PLAYER(iVar1))
					{
						bVar2 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar1);
						if (bVar2 != PLAYER::PLAYER_ID() && __LIB_1__::func_693(bVar2, 1, 1))
						{
							if (BitTest(Global_2689235[bVar2 /*453*/].f_318, 5) && __LIB_0__::func_172(__LIB_5__::func_196(bVar2)) == 20)
							{
								if (__LIB_35__::func_440(iParam0))
								{
									if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
									{
										TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
									}
									if (__LIB_3__::func_643(PLAYER::PLAYER_ID()))
									{
										__LIB_6__::func_410(PLAYER::PLAYER_ID(), 1, 0, 0);
									}
								}
								else
								{
									if (!BitTest(Global_2689235[bVar2 /*453*/].f_318.f_1, 31) && !BitTest(Global_2689235[bVar2 /*453*/].f_318.f_3, 2))
									{
										__LIB_6__::func_410(PLAYER::PLAYER_ID(), 0, 256, 0);
									}
									else
									{
										__LIB_6__::func_410(PLAYER::PLAYER_ID(), 1, 0, 0);
									}
									__LIB_3__::func_699();
									__LIB_3__::func_641(1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
	if (__LIB_3__::func_643(PLAYER::PLAYER_ID()))
	{
		__LIB_6__::func_410(PLAYER::PLAYER_ID(), 1, 0, 0);
		__LIB_3__::func_642();
		__LIB_3__::func_641(0);
	}
}

void func_27(var uParam0, int iParam1, char* sParam2, int iParam3, bool bParam4, int iParam5, bool bParam6)//Position - 0x21A92B
{
	__LIB_35__::func_879(uParam0, iParam1, sParam2, iParam3, bParam4, iParam5, bParam6);
}

void func_28(bool bParam0, int iParam1)//Position - 0x21FDE8
{
	int iVar0;
	int iVar1;
	if (Global_1637407.f_1.f_108 != 0)
	{
		Global_1637407.f_1.f_108 = 0;
	}
	Global_1637407.f_1.f_109 = -1;
	Global_1637407.f_1.f_110 = -1;
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 167 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 168)
	{
		__LIB_15__::func_423();
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 4);
	}
	if ((__LIB_6__::func_460() && iParam1 != 0) && Global_262145.f_17496 /* Tunable: 35628303 */)
	{
		if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 190 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 192)
		{
			__LIB_30__::func_603(PLAYER::PLAYER_ID(), iParam1, 1, 0);
		}
	}
	if (((Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 164 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 208) || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 250) || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 237)
	{
		MISC::ENABLE_DISPATCH_SERVICE(3, true);
		MISC::ENABLE_DISPATCH_SERVICE(5, true);
	}
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 != -1)
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 = -1;
		if (!BitTest(Global_1836844.f_1, 14) && !__LIB_2__::func_703(PLAYER::PLAYER_ID()))
		{
			__LIB_2__::func_135(0);
		}
	}
	else if (__LIB_6__::func_296(PLAYER::PLAYER_ID()) != -1)
	{
		__LIB_7__::func_945(-1);
	}
	__LIB_15__::func_587(__LIB_0__::func_162());
	if (__LIB_1__::func_731(16))
	{
		__LIB_11__::func_662(16);
	}
	__LIB_15__::func_624(0);
	__LIB_15__::func_414(-1);
	__LIB_15__::func_421();
	iVar0 = 0;
	while (iVar0 < 8)
	{
		__LIB_15__::func_455(iVar0);
		iVar0++;
	}
	if (BitTest(Global_1943920.f_3, 0))
	{
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
		PLAYER::SET_MAX_WANTED_LEVEL(5);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 0);
	}
	if (BitTest(Global_1943920.f_3, 5))
	{
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 5);
	}
	iVar1 = __LIB_12__::func_520();
	if ((__LIB_1__::func_877(iVar1) || iVar1 == 205) || iVar1 == 210)
	{
		__LIB_15__::func_623(-1);
	}
	else if (((iVar1 == 201 || iVar1 == 200) || iVar1 == 179) || __LIB_3__::func_709(iVar1))
	{
		__LIB_15__::func_622(-1, 1);
	}
	else if (((((__LIB_1__::func_378(iVar1) || __LIB_15__::func_419(iVar1)) || __LIB_4__::func_825(iVar1)) || __LIB_4__::func_740(iVar1)) || __LIB_1__::func_612(iVar1)) || __LIB_1__::func_77(iVar1))
	{
	}
	else
	{
		__LIB_15__::func_622(-1, 1);
	}
	__LIB_1__::func_967(19);
	__LIB_1__::func_967(20);
	__LIB_1__::func_967(21);
	__LIB_1__::func_967(22);
	__LIB_1__::func_967(27);
	__LIB_11__::func_662(3);
	__LIB_11__::func_662(4);
	__LIB_11__::func_662(7);
	__LIB_22__::func_181();
	if (__LIB_2__::func_106(PLAYER::PLAYER_ID()))
	{
		__LIB_35__::func_433(0);
	}
	__LIB_1__::func_967(29);
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57 = __LIB_0__::func_162();
	if (Global_2815059.f_5195.f_43 != 0)
	{
		Global_2815059.f_5195.f_43 = 0;
	}
	if (bParam0)
	{
		__LIB_30__::func_494();
	}
	if (!__LIB_2__::func_703(PLAYER::PLAYER_ID()))
	{
		__LIB_2__::func_16();
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 1);
	}
	if (BitTest(Global_1943920.f_3, 6))
	{
		MISC::ENABLE_DISPATCH_SERVICE(3, true);
		MISC::ENABLE_DISPATCH_SERVICE(5, true);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 6);
	}
	if (BitTest(Global_1943920.f_3, 7))
	{
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 7);
	}
	if (BitTest(Global_1943920.f_3, 8))
	{
		__LIB_12__::func_518("IMPEXP_SELFDES" /* GXT: The SecuroServ modified vehicle will now self-destruct. Please stand clear. */, 0);
		__LIB_12__::func_565("IMPEXP_SELFDES" /* GXT: The SecuroServ modified vehicle will now self-destruct. Please stand clear. */);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 8);
	}
	__LIB_15__::func_621(iVar1, 0);
}

void func_29(int iParam0)//Position - 0x3E1D1
{
	MISC::SET_BIT(&uLocal_202, iParam0);
}

bool func_30()//Position - 0x3E321
{
	return BitTest(Global_1958711, 4);
}

int func_31()//Position - 0x4BFDE
{
	return 154;
}

bool func_32()//Position - 0x4C2B7
{
	return BitTest(Global_1958711, 11);
}

bool func_33()//Position - 0x4FC82
{
	return BitTest(Global_1958711, 7);
}

bool func_34()//Position - 0x4FC90
{
	return BitTest(Global_1958711, 8);
}

int func_35()//Position - 0x54462
{
	return joaat("hei_prop_hst_usb_drive");
}

char* func_36()//Position - 0x5447C
{
	return "anim@GangOps@Morgue@Office@Laptop@";
}

bool func_37()//Position - 0x54D47
{
	return BitTest(Global_1958711, 10);
}

void func_38(float fParam0)//Position - 0x55E2F
{
	if (Global_1958711.f_9 != fParam0)
	{
		Global_1958711.f_9 = fParam0;
	}
}

int func_39()//Position - 0x564FD
{
	return Local_414.f_0;
}

int func_40()//Position - 0x4D5BE
{
	if ((((ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "enter", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "enter_left", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "exit", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "exit_left", 3)) || __LIB_6__::func_572(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_GO_STRAIGHT_TO_COORD")))
	{
		return 1;
	}
	if ((ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "base", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "computer_enter", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "computer_exit", 3))
	{
		return 1;
	}
	return 0;
}

int func_41(int iParam0, int iParam1)//Position - 0x55B73
{
	struct<3> Var0;
	float fVar1;
	float fVar2;
	if (__LIB_0__::func_121(iParam0))
	{
		Var0 = { __LIB_0__::func_79(ENTITY::GET_ENTITY_COORDS(iParam1, true) - ENTITY::GET_ENTITY_COORDS(iParam0, true)) };
		fVar1 = __LIB_0__::func_158(ENTITY::GET_ENTITY_FORWARD_VECTOR(iParam0), Var0);
		fVar2 = __LIB_12__::func_418(PED::GET_PED_VISUAL_FIELD_CENTER_ANGLE(iParam0));
		return fVar1 >= (1f - fVar2);
	}
	return 0;
}

void func_42(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0x137A66
{
	int iVar0;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	if (iParam1 == 2)
	{
		__LIB_5__::func_189(iParam3, 0, 0);
		__LIB_5__::func_189(iParam3, 1, 0);
		__LIB_5__::func_189(iParam3, 5, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_189(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_189(iParam3, 7, 1);
		__LIB_5__::func_426(iParam3, 7, __LIB_6__::func_887());
		iVar0 = 2;
		if (__LIB_3__::func_597())
		{
			if (__LIB_3__::func_596())
			{
				iVar0 = 4;
			}
			else
			{
				iVar0 = 5;
			}
			__LIB_5__::func_189(iParam3, 2, 0);
			__LIB_5__::func_189(iParam3, 3, 0);
			__LIB_5__::func_189(iParam3, 4, __LIB_3__::func_596());
			__LIB_5__::func_426(iParam3, 4, __LIB_3__::func_596());
		}
		else
		{
			__LIB_5__::func_189(iParam3, 2, 1);
			__LIB_5__::func_426(iParam3, 2, __LIB_4__::func_932(1));
			__LIB_5__::func_189(iParam3, 3, !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
			__LIB_5__::func_426(iParam3, 3, __LIB_4__::func_932(2));
			__LIB_5__::func_189(iParam3, 4, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
			__LIB_5__::func_426(iParam3, 4, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
		}
	}
	else
	{
		__LIB_5__::func_189(iParam3, 2, 0);
		__LIB_5__::func_189(iParam3, 3, 0);
		__LIB_5__::func_189(iParam3, 4, 0);
		__LIB_5__::func_189(iParam3, 6, 0);
		__LIB_5__::func_189(iParam3, 5, 0);
		__LIB_5__::func_189(iParam3, 7, 0);
		__LIB_5__::func_426(iParam3, 7, 0);
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam1 == 2)
		{
			if (iParam3->f_5 == 2)
			{
				if (__LIB_1__::func_124(PLAYER::PLAYER_ID()))
				{
					__LIB_1__::func_789("CASINO_ENT_F6_H" /* GXT: Go to your Penthouse. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CASINO_BUY_PROP" /* GXT: Purchase the Penthouse from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 3)
			{
				if (__LIB_4__::func_932(2))
				{
					__LIB_1__::func_789("CASINO_ENT_F7_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 5)
			{
				__LIB_1__::func_789("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else if (iParam3->f_5 == 6)
			{
				__LIB_1__::func_789("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
			}
			else if (iParam3->f_5 == 7)
			{
				if (__LIB_5__::func_503())
				{
					__LIB_1__::func_789("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
				}
				else if (BitTest(Global_1946250.f_4523.f_1, 7))
				{
					__LIB_1__::func_789("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
				}
				else if (__LIB_1__::func_124(PLAYER::PLAYER_ID()))
				{
					__LIB_1__::func_789("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("CASINO_ENT_F8_H" /* GXT: Go to the Parking Garage. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_3__::func_661(0, iParam3) || __LIB_3__::func_661(1, iParam3))
	{
		return;
	}
	else if (__LIB_3__::func_661(2, iParam3))
	{
		__LIB_3__::func_664(0);
		__LIB_3__::func_982(124);
		__LIB_5__::func_457(3);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(3, iParam3))
	{
		__LIB_3__::func_664(1);
		__LIB_3__::func_982(124);
		__LIB_5__::func_457(4);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(4, iParam3))
	{
		__LIB_3__::func_982(125);
		__LIB_5__::func_457(0);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(5, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
		if (__LIB_35__::func_555())
		{
			MISC::SET_BIT(&(Global_1946250.f_6), 20);
		}
	}
	else if (__LIB_3__::func_661(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_3__::func_661(7, iParam3))
	{
		__LIB_3__::func_982(146);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
	}
}

int func_43(int iParam0, int iParam1)//Position - 0x204C76
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	iVar0 = -1;
	iVar1 = 1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && ENTITY::IS_ENTITY_A_PED(iParam0))
	{
		iVar2 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam0);
		if (PED::IS_PED_A_PLAYER(iVar2))
		{
			iVar4 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar2);
		}
		else
		{
			iVar1 = 0;
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1) && ENTITY::IS_ENTITY_A_PED(iParam1))
	{
		iVar3 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam1);
		if (PED::IS_PED_A_PLAYER(iVar3))
		{
			iVar5 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar3);
		}
	}
	if (iVar1 == 0 || (__LIB_1__::func_693(iVar4, 0, 1) && __LIB_2__::func_759(iVar4, __LIB_1__::func_730(), 1)))
	{
		if (__LIB_1__::func_693(iVar5, 0, 1) && !__LIB_2__::func_759(iVar5, __LIB_1__::func_730(), 1))
		{
			if (__LIB_0__::func_449(iVar5, 1, 0))
			{
				iVar0 = 2;
			}
			else if (__LIB_0__::func_449(iVar5, 1, 1))
			{
				iVar0 = 1;
			}
			else
			{
				iVar0 = 0;
			}
		}
	}
	return iVar0;
}

void func_44(int iParam0)//Position - 0x20597B
{
	int iVar0;
	if (iParam0 == -1 || !__LIB_4__::func_284(iParam0))
	{
	}
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (Global_1958659[iVar0 /*5*/] == -1 || Global_1958659[iVar0 /*5*/] == iParam0)
		{
			__LIB_0__::func_627(&(Global_1958659[iVar0 /*5*/].f_3), 0, 0);
			Global_1958659[iVar0 /*5*/] = iParam0;
			Global_1958659[iVar0 /*5*/].f_1 = NETWORK::GET_CLOUD_TIME_AS_INT();
			Global_1958659[iVar0 /*5*/].f_2 = __LIB_35__::func_548(iParam0);
			Jump @141; //curOff = 120
		}
		else if (iVar0 == 2)
		{
		}
		iVar0++;
	}
	if (__LIB_0__::func_864(&(Global_1958659.f_24)))
	{
		__LIB_0__::func_627(&(Global_1958659.f_24), 0, 0);
	}
	else
	{
		__LIB_0__::func_795(&(Global_1958659.f_24), 0, 0);
	}
}

void func_45()//Position - 0xBA9E
{
	int iVar0;
	int iVar1;
	if (__LIB_2__::func_50() && __LIB_9__::func_704(PLAYER::PLAYER_ID()))
	{
		iVar0 = __LIB_1__::func_360(7284, -1, 0);
		iVar1 = NETWORK::GET_CLOUD_TIME_AS_INT();
		iVar0 = iVar1 + 18000;
		__LIB_1__::func_354(7284, iVar0, -1, 1, 0);
	}
}

void func_46(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x3AED7
{
	struct<2> Var0;
	float fVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	float fVar5;
	int iVar6;
	float fVar7;
	float fVar8;
	var uVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	struct<2> Var14;
	float fVar15;
	float fVar16;
	float fVar17;
	int iVar18;
	float fVar19;
	int iVar20;
	float fVar21;
	int iVar22;
	int iVar23;
	if (iParam0 == 192)
	{
	}
	else if (iParam0 == 190)
	{
		if (uParam1->f_10 > 0)
		{
			if (__LIB_5__::func_234())
			{
				Var0 = { __LIB_15__::func_382() };
				if (uParam1->f_10 == uParam1->f_11)
				{
					*uParam3 = (uParam1->f_15 + uParam1->f_8);
				}
				else
				{
					fVar1 = SYSTEM::TO_FLOAT(uParam1->f_10);
					fVar2 = SYSTEM::TO_FLOAT(uParam1->f_11);
					fVar3 = ((fVar1 / fVar2) * 100f);
					iVar4 = (uParam1->f_15 + uParam1->f_8);
					fVar5 = ((IntToFloat(iVar4) / 100f) * fVar3);
					*uParam3 = SYSTEM::CEIL(fVar5);
				}
				iVar6 = __LIB_15__::func_609(PLAYER::PLAYER_ID(), Var0.f_0, *uParam3, 0);
				if (Var0.f_1 == 1)
				{
					fVar7 = (SYSTEM::TO_FLOAT(iVar6) * Global_262145.f_19112 /* Tunable: 1763638426 */);
					iVar6 = SYSTEM::ROUND(fVar7);
				}
				else
				{
					fVar8 = (SYSTEM::TO_FLOAT(iVar6) * Global_262145.f_19111 /* Tunable: -823848572 */);
					iVar6 = SYSTEM::ROUND(fVar8);
				}
				*iParam2 = (*iParam2 + iVar6);
				iVar10 = __LIB_35__::func_560(&uVar9);
				iVar11 = SYSTEM::ROUND(Global_262145.f_19102 /* Tunable: -444616278 */);
				if (iVar10 > iVar11)
				{
					iVar10 = iVar11;
				}
				iVar12 = SYSTEM::CEIL((IntToFloat(iVar10) * Global_262145.f_19101 /* Tunable: -309450581 */));
				iVar13 = ((*iParam2 / 100) * iVar12);
				*iParam2 = (*iParam2 + iVar13);
				if (uParam1->f_6)
				{
					*iParam2 = (*iParam2 + *uParam1);
				}
				if (uParam1->f_6)
				{
					if (uParam1->f_12 == 11)
					{
						if (*uParam1 > 0)
						{
							*iParam2 = (*iParam2 + *uParam1);
						}
					}
					else if (uParam1->f_12 == 9)
					{
						if (*uParam1 > 0)
						{
							*iParam2 = (*iParam2 + *uParam1);
						}
					}
				}
				switch (__LIB_12__::func_501(Var0.f_0))
				{
					case 1:
						if (Global_262145.f_32964 /* Tunable: 648076385 */)
						{
							if (!__LIB_0__::func_137(32351, -1))
							{
								*iParam2 = (*iParam2 * Global_262145.f_32972 /* Tunable: -793049781 */);
								__LIB_0__::func_186(32351, 1, -1);
							}
						}
						break;
					case 3:
						if (Global_262145.f_32965 /* Tunable: 1057315128 */)
						{
							if (!__LIB_0__::func_137(32352, -1))
							{
								*iParam2 = (*iParam2 * Global_262145.f_32973 /* Tunable: -1035386051 */);
								__LIB_0__::func_186(32352, 1, -1);
							}
						}
						break;
					case 4:
						if (Global_262145.f_32966 /* Tunable: 2074826178 */)
						{
							if (!__LIB_0__::func_137(32353, -1))
							{
								*iParam2 = (*iParam2 * Global_262145.f_32974 /* Tunable: 1011759977 */);
								__LIB_0__::func_186(32353, 1, -1);
							}
						}
						break;
					case 0:
						if (Global_262145.f_32967 /* Tunable: 98893693 */)
						{
							if (!__LIB_0__::func_137(32354, -1))
							{
								*iParam2 = (*iParam2 * Global_262145.f_32975 /* Tunable: -1980822412 */);
								__LIB_0__::func_186(32354, 1, -1);
							}
						}
						break;
					case 2:
						if (Global_262145.f_32968 /* Tunable: 328208647 */)
						{
							if (!__LIB_0__::func_137(32355, -1))
							{
								*iParam2 = (*iParam2 * Global_262145.f_32976 /* Tunable: 667598560 */);
								__LIB_0__::func_186(32355, 1, -1);
							}
						}
						break;
				}
				if (iVar10 > 0)
				{
					__LIB_1__::func_928(86);
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else if (__LIB_1__::func_375(0))
			{
				Var14 = { __LIB_7__::func_928(__LIB_0__::func_797()) };
				if (uParam1->f_10 == uParam1->f_11)
				{
					*uParam3 = (uParam1->f_15 + uParam1->f_8);
				}
				else
				{
					fVar15 = SYSTEM::TO_FLOAT(uParam1->f_10);
					fVar16 = SYSTEM::TO_FLOAT(uParam1->f_11);
					fVar17 = ((fVar15 / fVar16) * 100f);
					iVar18 = (uParam1->f_15 + uParam1->f_8);
					fVar19 = ((IntToFloat(iVar18) / 100f) * fVar17);
					*uParam3 = SYSTEM::CEIL(fVar19);
				}
				iVar20 = __LIB_15__::func_609(__LIB_0__::func_797(), Var14.f_0, *uParam3, 0);
				if (Var14.f_1 == 1)
				{
					iVar20 = SYSTEM::CEIL((IntToFloat(iVar20) * Global_262145.f_19112 /* Tunable: 1763638426 */));
				}
				else if (Var14.f_1 == 0)
				{
					iVar20 = SYSTEM::CEIL((IntToFloat(iVar20) * Global_262145.f_19111 /* Tunable: -823848572 */));
				}
				*iParam2 = (*iParam2 + iVar20);
				fVar21 = Global_262145.f_19151 /* Tunable: -1680154074 */;
				iVar22 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar21));
				*iParam2 = iVar22;
				iVar23 = Global_262145.f_19152 /* Tunable: 997747887 */;
				if (*iParam2 > iVar23)
				{
					*iParam2 = iVar23;
				}
				if (uParam1->f_6)
				{
					if (uParam1->f_12 == 11)
					{
						if (*uParam1 > 0)
						{
							*iParam2 = (*iParam2 + *uParam1);
						}
					}
				}
			}
		}
	}
}

int func_47(int iParam0)//Position - 0x4816B
{
	if ((((((((iParam0 == 250 || iParam0 == 238) || iParam0 == 242) || iParam0 == 244) || iParam0 == 248) || iParam0 == 241) || iParam0 == 239) || iParam0 == 240) || iParam0 == 249)
	{
		return 1;
	}
	if (iParam0 == 237 && __LIB_4__::func_373(__LIB_35__::func_559(PLAYER::PLAYER_ID())))
	{
		return 1;
	}
	if ((iParam0 == 299 || iParam0 == 300) || iParam0 == 301)
	{
		return 1;
	}
	return 0;
}

int func_48(int iParam0)//Position - 0x4B26B
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	var uVar3;
	bool bVar4;
	iVar0 = 2;
	bVar1 = ((__LIB_1__::func_15(iParam0) && !__LIB_3__::func_438(iParam0)) && !BitTest(Global_1892703[iParam0 /*599*/].f_1, 8));
	bVar2 = __LIB_4__::func_77(iParam0);
	uVar3 = __LIB_0__::func_945();
	bVar4 = __LIB_3__::func_290();
	if ((bVar1 && (__LIB_3__::func_131(iParam0) || __LIB_1__::func_17(iParam0))) || bVar4)
	{
		iVar0 = 0;
	}
	else if (uVar3 || ((!bVar2 && !__LIB_4__::func_897(iParam0)) && !__LIB_15__::func_291(iParam0)))
	{
		iVar0 = 2;
	}
	else
	{
		iVar0 = 3;
	}
	if (Global_2815059.f_5195.f_220 != iVar0)
	{
		Global_2815059.f_5195.f_220 = iVar0;
	}
	return iVar0;
}

int func_49()//Position - 0x4D783
{
	if (!__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		return 0;
	}
	if ((CAM::IS_SCREEN_FADED_OUT() || CAM::IS_SCREEN_FADING_OUT()) || CAM::IS_SCREEN_FADING_IN())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_PLAYER_IN_MP_CUTSCENE(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (__LIB_15__::func_304() && !__LIB_4__::func_946(PLAYER::PLAYER_ID(), 0))
	{
		return 0;
	}
	if (__LIB_3__::func_171(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("am_mp_smpl_interior_int")) > 0 && Global_1946244 != 7)
	{
		return 0;
	}
	if (__LIB_4__::func_947(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	return 1;
}

void func_50(int* iParam0)//Position - 0x5065A
{
	__LIB_35__::func_883(iParam0, 1, 1, 0);
	*iParam0 = 0;
	iParam0->f_23 = 0;
	Local_151.f_0 = 0;
	Local_151.f_1 = 0;
	MISC::CLEAR_BIT(iParam0, 26);
	Local_152[0 /*4*/] = 0;
	Local_152[1 /*4*/] = 0;
	Local_152[2 /*4*/] = 0;
	Local_152[3 /*4*/] = 0;
	Local_152[4 /*4*/] = 0;
	Local_152[5 /*4*/] = 0;
	Local_152[6 /*4*/] = 0;
	Local_152[7 /*4*/] = 0;
}

int func_51(int iParam0)//Position - 0xD4B66
{
	int iVar0;
	if (iParam0 == __LIB_0__::func_162())
	{
		return 0;
	}
	iVar0 = __LIB_35__::func_559(iParam0);
	if (((((iVar0 == 0 || iVar0 == 1) || iVar0 == 2) || iVar0 == 3) || iVar0 == 4) || iVar0 == 5)
	{
		return 1;
	}
	return 0;
}

void func_52(var uParam0, int iParam1, var uParam2, int iParam3)//Position - 0x10E043
{
	int iVar0;
	iVar0 = 0;
	if (iParam1 == 1)
	{
		__LIB_5__::func_189(iParam3, 0, 1);
		__LIB_5__::func_189(iParam3, 1, 0);
		__LIB_5__::func_189(iParam3, 2, 0);
		__LIB_5__::func_189(iParam3, 3, 0);
		__LIB_5__::func_189(iParam3, 4, 0);
		__LIB_5__::func_189(iParam3, 5, 0);
		__LIB_5__::func_189(iParam3, 6, 0);
		__LIB_5__::func_189(iParam3, 7, 0);
	}
	else if (iParam1 == 2)
	{
		__LIB_5__::func_189(iParam3, 0, 0);
		__LIB_5__::func_189(iParam3, 1, 0);
		__LIB_5__::func_189(iParam3, 2, 1);
		__LIB_5__::func_189(iParam3, 3, 1);
		__LIB_5__::func_189(iParam3, 4, 1);
		__LIB_5__::func_426(iParam3, 4, __LIB_1__::func_123(PLAYER::PLAYER_ID()));
		__LIB_5__::func_189(iParam3, 5, 1);
		__LIB_5__::func_189(iParam3, 6, 1);
		__LIB_5__::func_189(iParam3, 7, 1);
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam1 == 2)
		{
			if (iParam3->f_5 == 3)
			{
				if (__LIB_1__::func_124(PLAYER::PLAYER_ID()))
				{
					__LIB_1__::func_789("CASINO_ENT_F6_H" /* GXT: Go to your Penthouse. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CASINO_BUY_PROP" /* GXT: Purchase the Penthouse from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 4)
			{
				if (__LIB_4__::func_932(2))
				{
					__LIB_1__::func_789("CASINO_ENT_F7_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
			}
			else if (iParam3->f_5 == 6)
			{
				__LIB_1__::func_789("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else if (iParam3->f_5 == 7)
			{
				__LIB_1__::func_789("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
			}
			else if (iParam3->f_5 == 2)
			{
				__LIB_1__::func_789("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("CASINO_ENT_F8_H" /* GXT: Go to the Parking Garage. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_3__::func_661(0, iParam3) || __LIB_3__::func_661(1, iParam3))
	{
		return;
	}
	else if (__LIB_3__::func_661(2, iParam3))
	{
		__LIB_3__::func_982(123);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(3, iParam3))
	{
		__LIB_3__::func_664(0);
		__LIB_3__::func_982(124);
		__LIB_5__::func_457(3);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(4, iParam3))
	{
		__LIB_3__::func_664(1);
		__LIB_3__::func_982(124);
		__LIB_5__::func_457(4);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(5, iParam3))
	{
		__LIB_3__::func_982(125);
		__LIB_5__::func_457(0);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
		if (__LIB_35__::func_555())
		{
			MISC::SET_BIT(&(Global_1946250.f_6), 20);
		}
	}
	else if (__LIB_3__::func_661(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
}

int func_53(int iParam0)//Position - 0x160B11
{
	if (__LIB_6__::func_902(iParam0))
	{
		return __LIB_5__::func_583(__LIB_35__::func_559(iParam0));
	}
	return 0;
}

char* func_54(int iParam0, char* sParam1, var uParam2)//Position - 0x1C66E4
{
	bool bVar0;
	struct<2> Var1;
	if (__LIB_5__::func_434())
	{
		switch (iParam0)
		{
			case 22:
			case 27:
			case 32:
			case 37:
				return "SI_ENTR_BLCK5A" /* GXT: You cannot enter the Meth Lab while on call. You can cancel this via the Quick Join app on the phone. */;
				break;
			case 23:
			case 28:
			case 33:
			case 38:
				return "SI_ENTR_BLCK6A" /* GXT: You cannot enter the Weed Farm while on call. You can cancel this via the Quick Join app on the phone. */;
				break;
			case 24:
			case 29:
			case 34:
			case 39:
				return "SI_ENTR_BLCK7A" /* GXT: You cannot enter the Cocaine Lockup while on call. You can cancel this via the Quick Join app on the phone. */;
				break;
			case 25:
			case 30:
			case 35:
			case 40:
				return "SI_ENTR_BLCK8A" /* GXT: You cannot enter the Counterfeit Cash Factory while on call. You can cancel this via the Quick Join app on the phone. */;
				break;
			case 26:
			case 31:
			case 36:
			case 41:
				return "SI_ENTR_BLCK9A" /* GXT: You cannot enter the Document Forgery Office while on call. You can cancel this via the Quick Join app on the phone. */;
				break;
			}
	}
	if (__LIB_5__::func_661(PLAYER::PLAYER_ID(), __LIB_4__::func_715(iParam0)))
	{
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			if (!__LIB_0__::func_536(PLAYER::PLAYER_ID(), 1))
			{
				if (__LIB_1__::func_744(PLAYER::PLAYER_ID()))
				{
					if (__LIB_3__::func_673(PLAYER::PLAYER_ID()))
					{
						return "BWH_MC_BLOCK_EXEb" /* GXT: Your Business is unavailable whilst you are a CEO. */;
					}
					else
					{
						return "BWH_MC_BLOCK_EXEa" /* GXT: Your Business is unavailable whilst you are a VIP. */;
					}
				}
				else if (__LIB_3__::func_673(__LIB_2__::func_39(PLAYER::PLAYER_ID())))
				{
					return "BWH_MC_BLOCK_EXEd" /* GXT: Your Business is unavailable whilst you are an Associate. */;
				}
				else
				{
					return "BWH_MC_BLOCK_EXEc" /* GXT: Your Business is unavailable whilst you are a Bodyguard. */;
				}
			}
			else if (!__LIB_1__::func_802(PLAYER::PLAYER_ID()) && !__LIB_5__::func_661(__LIB_2__::func_39(PLAYER::PLAYER_ID()), __LIB_4__::func_715(iParam0)))
			{
				StringCopy(sParam1, __LIB_7__::func_36(PLAYER::PLAYER_ID(), 0), 64);
				return "BWH_MC_BLOCK_BKRa" /* GXT: Your Business is unavailable whilst you are a Motorcycle Club ~a~. */;
			}
		}
	}
	if (__LIB_7__::func_38())
	{
		bVar0 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
		if (bVar0 != __LIB_0__::func_162())
		{
			Var1 = { Global_1892703[bVar0 /*599*/].f_10.f_194 };
			if (__LIB_4__::func_715(iParam0) != Var1.f_0)
			{
				if (__LIB_7__::func_965(bVar0, Var1.f_0))
				{
					return "BWH_MC_BLOCK_BKRc" /* GXT: You can't enter this business while resupplying another. */;
				}
				else
				{
					return "BWH_MC_BLOCK_BKRb" /* GXT: You can't enter this business while setting up another. */;
				}
			}
		}
	}
	if (__LIB_5__::func_661(PLAYER::PLAYER_ID(), __LIB_4__::func_715(iParam0)) || __LIB_5__::func_661(__LIB_0__::func_797(), __LIB_4__::func_715(iParam0)))
	{
		if (__LIB_1__::func_101(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_BUSI" /* GXT: You can't access this Business whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__::func_906())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_3__::func_693())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	return "";
}

int func_55(bool bParam0)//Position - 0x20A351
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = -1;
	iVar1 = -1;
	if (bParam0)
	{
		iVar0 = __LIB_1__::func_592(PLAYER::PLAYER_ID());
	}
	else
	{
		iVar0 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
	}
	if (iVar0 != -1)
	{
	}
	switch (iVar0)
	{
		case 236:
			iVar2 = __LIB_5__::func_664(PLAYER::PLAYER_ID());
			iVar1 = iVar2;
			break;
		case 150:
			iVar2 = __LIB_15__::func_353(PLAYER::PLAYER_ID());
			iVar1 = iVar2;
			break;
		case 237:
			iVar2 = __LIB_15__::func_336(PLAYER::PLAYER_ID());
			if (__LIB_4__::func_373(__LIB_35__::func_559(PLAYER::PLAYER_ID())))
			{
				iVar1 = 100;
			}
			else
			{
				iVar1 = 200;
			}
			iVar1 = (iVar1 + iVar2);
			break;
		case 250:
			iVar2 = __LIB_15__::func_336(PLAYER::PLAYER_ID());
			iVar1 = 300;
			iVar1 = (iVar1 + iVar2);
			break;
		case 238:
			iVar2 = __LIB_15__::func_424(PLAYER::PLAYER_ID());
			iVar1 = 400;
			iVar1 = (iVar1 + iVar2);
			break;
		case 249:
			iVar2 = __LIB_15__::func_424(PLAYER::PLAYER_ID());
			iVar1 = 500;
			iVar1 = (iVar1 + iVar2);
			break;
		case 239:
			iVar1 = 600;
			break;
		case 240:
			iVar1 = 700;
			break;
		case 241:
			iVar1 = 800;
			break;
		case 242:
			iVar1 = 900;
			break;
		case 244:
			iVar1 = 1100;
			break;
		case 248:
			iVar1 = 1200;
			break;
		case 298:
			iVar1 = 1250;
			break;
		case 299:
			if (__LIB_24__::func_59(PLAYER::PLAYER_ID()) == 0)
			{
				iVar1 = 1300;
			}
			else if (__LIB_24__::func_59(PLAYER::PLAYER_ID()) == 1)
			{
				iVar1 = 1301;
			}
			break;
		case 300:
			if (__LIB_24__::func_58(PLAYER::PLAYER_ID()) == 0)
			{
				iVar1 = 1400;
			}
			break;
		case 301:
			if (__LIB_24__::func_57(PLAYER::PLAYER_ID(), 301) == 0)
			{
				iVar1 = 1500;
			}
			if (__LIB_24__::func_57(PLAYER::PLAYER_ID(), 301) == 1)
			{
				iVar1 = 1501;
			}
			break;
		case 302:
			iVar1 = 1700;
			break;
		case 303:
			iVar1 = 1800;
			break;
	}
	return iVar1;
}

int func_56(int iParam0)//Position - 0x33172
{
	if (((((((((iParam0 == 250 || iParam0 == 238) || iParam0 == 242) || iParam0 == 244) || iParam0 == 248) || iParam0 == 241) || iParam0 == 239) || iParam0 == 240) || iParam0 == 249) || (iParam0 == 237 && __LIB_4__::func_373(__LIB_35__::func_559(PLAYER::PLAYER_ID()))))
	{
		return 1;
	}
	return 0;
}

void func_57(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x390D2
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	float fVar15;
	float fVar16;
	int iVar17;
	bool bVar18;
	bool bVar19;
	int iVar20;
	bVar18 = __LIB_1__::func_375(1);
	bVar19 = false;
	if (iParam0 == 237 && !uParam1->f_22)
	{
		if (__LIB_2__::func_50())
		{
			iVar17 = PLAYER::PLAYER_ID();
		}
		else
		{
			iVar17 = __LIB_0__::func_797();
		}
		iVar11 = iVar17;
		if (iVar11 != -1)
		{
			iVar0 = Global_1853348[iVar11 /*834*/].f_811.f_1;
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
				bVar19 = true;
			}
			else
			{
				fVar12 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar13 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar14 = ((fVar12 / fVar13) * 100f);
				fVar15 = ((IntToFloat(iVar0) / 100f) * fVar14);
				iVar1 = SYSTEM::CEIL(fVar15);
			}
			*uParam3 = iVar1;
			if (bVar19)
			{
				iVar2 = Global_1853348[iVar11 /*834*/].f_811.f_2;
			}
			else
			{
				iVar2 = __LIB_15__::func_384(Global_1853348[iVar11 /*834*/].f_811.f_4, Global_1853348[iVar11 /*834*/].f_811.f_1, *uParam3, Global_1853348[iVar11 /*834*/].f_811.f_2, Global_1853348[iVar11 /*834*/].f_811.f_3);
			}
			if (uParam1->f_17)
			{
				iVar20 = (iVar2 - SYSTEM::CEIL((IntToFloat(iVar2) * 0.9f)));
				if (iVar20 > 100000)
				{
					iVar20 = 100000;
				}
				iVar2 = (iVar2 - iVar20);
			}
			*iParam2 = (*iParam2 + iVar2);
			iVar10 = __LIB_15__::func_383(*iParam2);
			if (iVar10 > 0)
			{
				if (iVar17 == PLAYER::PLAYER_ID())
				{
					__LIB_8__::func_978("TICK_TCUT" /* GXT: Tony's laundering cut: $~1~. */, iVar10, 0);
				}
				*iParam2 = (*iParam2 - iVar10);
			}
			Global_1944249.f_49 = *uParam3;
			if (iVar17 == PLAYER::PLAYER_ID())
			{
				if (iVar2 > 0)
				{
					__LIB_15__::func_443(iVar2);
				}
				if (*uParam3 > 0)
				{
					__LIB_15__::func_474(*uParam3);
				}
				iVar6 = __LIB_35__::func_560(&uVar5);
				iVar7 = Global_262145.f_24523 /* Tunable: 249027540 */;
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar9 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_24522 /* Tunable: -540578960 */));
				iVar8 = ((*iParam2 / 100) * iVar9);
				*iParam2 = (*iParam2 + iVar8);
				if (Global_262145.f_32969 /* Tunable: 2010545334 */)
				{
					if (!__LIB_0__::func_137(32356, -1))
					{
						*iParam2 = (*iParam2 * Global_262145.f_32977 /* Tunable: -492941246 */);
						__LIB_0__::func_186(32356, 1, -1);
					}
				}
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(140);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar16 = Global_262145.f_24489 /* Tunable: -1073212210 */;
				if (!bVar18)
				{
					fVar16 = Global_262145.f_24490 /* Tunable: -787828473 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar16));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_24491 /* Tunable: 390735097 */;
				if (!bVar18)
				{
					iVar4 = Global_262145.f_24492 /* Tunable: -1911840744 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
	else if (uParam1->f_22)
	{
	}
}

void func_58(int iParam0, var uParam1, int iParam2, var uParam3, var uParam4)//Position - 0x394A9
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	int iVar15;
	bool bVar16;
	bool bVar17;
	*uParam4 = 0;
	bVar16 = __LIB_1__::func_375(1);
	bVar17 = false;
	if (iParam0 == 229)
	{
	}
	else if (iParam0 == 230)
	{
		if (__LIB_2__::func_50())
		{
			iVar15 = PLAYER::PLAYER_ID();
		}
		else
		{
			iVar15 = __LIB_0__::func_797();
		}
		if (iVar15 != -1)
		{
			iVar0 = (uParam1->f_15 + uParam1->f_8);
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
				bVar17 = true;
			}
			else
			{
				fVar10 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar11 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar12 = ((fVar10 / fVar11) * 100f);
				fVar13 = ((IntToFloat(iVar0) / 100f) * fVar12);
				iVar1 = SYSTEM::CEIL(fVar13);
			}
			*uParam3 = iVar1;
			iVar2 = __LIB_15__::func_442(uParam1->f_16, *uParam3);
			*iParam2 = (*iParam2 + iVar2);
			if (bVar17)
			{
				iVar9 = __LIB_15__::func_642(uParam1->f_16, *uParam3);
				if (iVar9 > 0)
				{
					*iParam2 = (*iParam2 + iVar9);
				}
			}
			if (__LIB_15__::func_385(*iParam2) > 0)
			{
				if (iVar15 == PLAYER::PLAYER_ID())
				{
					__LIB_8__::func_978("SMTICK_RONCUT" /* GXT: Ron's Cut: $~1~. */, __LIB_15__::func_385(*iParam2), 0);
				}
				*iParam2 = (*iParam2 - __LIB_15__::func_385(*iParam2));
			}
			if (iVar15 == PLAYER::PLAYER_ID())
			{
				__LIB_15__::func_444(iVar2, iVar9);
				iVar6 = __LIB_35__::func_560(&uVar5);
				iVar7 = Global_262145.f_22854 /* Tunable: 1245415334 */;
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar8 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_22853 /* Tunable: -2011721386 */));
				*uParam4 = ((*iParam2 / 100) * iVar8);
				*iParam2 = (*iParam2 + *uParam4);
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(44);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar14 = Global_262145.f_22785 /* Tunable: 1359115930 */;
				if (!bVar16)
				{
					fVar14 = Global_262145.f_22786 /* Tunable: 304396062 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar14));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_22787 /* Tunable: -1817764260 */;
				if (!bVar16)
				{
					iVar4 = Global_262145.f_22788 /* Tunable: -1446893415 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
}

int func_59()//Position - 0x4C344
{
	char* sVar0;
	if ((Global_1581350 != -1 || Global_1581356 != -1) || Global_1581359 != -1)
	{
		sVar0 = "anim@scripted@submarine@ig28_submarine_turret_control@male@";
		if (__LIB_1__::func_365(PLAYER::PLAYER_PED_ID()))
		{
			sVar0 = "anim@scripted@submarine@ig28_submarine_turret_control@heeled@";
		}
		if ((((((((ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "enter", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "enter_left", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "exit", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "exit_left", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "enter_left", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "enter", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "exit", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "exit_left", 3)) || __LIB_6__::func_572(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_GO_STRAIGHT_TO_COORD")))
		{
			return 0;
		}
		if (((((((((!ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "base", 3) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "computer_enter", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "computer_exit", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "COMPUTER_idle", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "COMPUTER_idle_control", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "ANIM@AMB@FACILITY@LAUNCH_CONTROLS@", "COMPUTER_enter_control", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "base", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "idle_a", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "idle_b", 3)) && !ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), sVar0, "idle_c", 3))
		{
			return 0;
		}
		if (__LIB_9__::func_731())
		{
			return 0;
		}
	}
	return 1;
}

void func_60(int iParam0, bool bParam1, bool bParam2)//Position - 0x4DE12
{
	struct<14> Var0;
	int iVar1;
	Var0.f_2 = 107890679;
	Var0.f_10 = PLAYER::PLAYER_ID();
	Var0.f_11 = __LIB_0__::func_797();
	Var0.f_4 = iParam0;
	if (bParam1)
	{
		iVar1 = __LIB_1__::func_705(PLAYER::PLAYER_ID());
	}
	else if (bParam2)
	{
		iVar1 = __LIB_5__::func_734(1);
	}
	else
	{
		iVar1 = __LIB_5__::func_410(1, 1);
	}
	__LIB_1__::func_634(Var0, iVar1);
}

void func_61(int* iParam0)//Position - 0x53E18
{
	WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(PLAYER::PLAYER_PED_ID(), true, true, true, false);
	if (MISC::IS_MINIGAME_IN_PROGRESS())
	{
		MISC::SET_MINIGAME_IN_PROGRESS(false);
	}
	HUD::CLEAR_HELP(true);
	PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
	CAM::DESTROY_CAM(iLocal_142, false);
	__LIB_0__::func_671(0);
	__LIB_4__::func_993();
	MISC::SET_BIT(iParam0, 1);
	GRAPHICS::FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD(false);
	__LIB_35__::func_883(iParam0, 1, 0, 0);
	__LIB_0__::func_963(0, 1, 1, 0);
}

void func_62(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x106F3D
{
	int iVar0;
	iVar0 = __LIB_5__::func_493();
	if (!__LIB_4__::func_903(PLAYER::PLAYER_ID()))
	{
		if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			__LIB_9__::func_266(uParam0, iVar0);
			__LIB_8__::func_923(iVar0, &(uParam0->f_413));
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (__LIB_0__::func_1("BB_TRUCK_SUTAR" /* GXT: You are unable to access the Nerve Center in this area. Move the Terrorbyte to a suitable area. */))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || __LIB_3__::func_684(PLAYER::PLAYER_PED_ID(), 1))
			{
				HUD::CLEAR_HELP(true);
			}
		}
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_422(&(uParam0->f_22.f_94));
			}
		}
	}
}

char* func_63(int iParam0, var uParam1, var uParam2)//Position - 0x1B1943
{
	bool bVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	bool bVar5;
	int iVar6;
	bool bVar7;
	struct<2> Var8;
	var uVar9;
	if (__LIB_5__::func_434())
	{
		return "SI_ENTR_BLCK10A" /* GXT: You cannot enter the Bunker while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	bVar0 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
	iVar2 = __LIB_4__::func_715(iParam0);
	bVar3 = false;
	iVar4 = -1;
	if ((bVar0 != __LIB_0__::func_162() && bVar0 != PLAYER::PLAYER_ID()) && __LIB_5__::func_661(bVar0, iVar2))
	{
		bVar3 = true;
	}
	if (__LIB_3__::func_695())
	{
		return "BUNK_MC_BLOCK_P" /* GXT: You cannot enter your Bunker with a prostitute. */;
	}
	if (__LIB_3__::func_693())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	if ((bVar0 != PLAYER::PLAYER_ID() && __LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2)) && !bVar3)
	{
		if (__LIB_0__::func_536(PLAYER::PLAYER_ID(), 0))
		{
			return "BUNK_MC_BLOCK_M" /* GXT: Your Bunker is unavailable when being a member of an MC. */;
		}
		else if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 0))
		{
			bVar5 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
			if (!__LIB_5__::func_661(bVar5, __LIB_4__::func_715(iParam0)))
			{
				if (__LIB_3__::func_673(__LIB_0__::func_797()))
				{
					return "BUNK_GOON_HLP1C" /* GXT: Your Bunker is unavailable when working as an Associate for a CEO. */;
				}
				else
				{
					return "BUNK_GOON_HLP1" /* GXT: Your Bunker is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
		if (!__LIB_5__::func_815(PLAYER::PLAYER_ID(), 1))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				if ((((((__LIB_1__::func_589(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) || __LIB_1__::func_819(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_1__::func_590(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_3__::func_712(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)), 1)) || __LIB_4__::func_738(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_4__::func_737(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_4__::func_736(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))))
				{
					return "BUNK_VEH_BLCK1" /* GXT: You cannot enter the Bunker with this vehicle. */;
				}
				else if (!__LIB_9__::func_309(iParam0, &iVar1, &iVar4, 1, 0) && __LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2))
				{
					if (iVar1 == PLAYER::PLAYER_ID())
					{
						if (iVar4 == 1)
						{
							return "BUNK_VEH_BLCK0" /* GXT: You cannot enter the Bunker with this vehicle. Only your Personal Vehicle can be driven in. */;
						}
						else if (iVar4 == 2)
						{
						}
						else if (iVar4 == 3)
						{
							return "BUNK_VEH_BLCK2" /* GXT: You cannot enter the Bunker with a vehicle while working for another player. */;
						}
						else if (iVar4 == 4)
						{
							return "BUNK_VEH_BLCK3" /* GXT: You cannot enter the Bunker with this vehicle. You do not own this Bunker. */;
						}
						else if (iVar4 == 5)
						{
							return "BUNK_VEH_BLCK4" /* GXT: You cannot enter the Bunker with this vehicle, without the Mobile Operations Center trailer attached. */;
						}
						else if (iVar4 == 7)
						{
							return "BUNK_VEH_BLCK4b" /* GXT: You cannot enter the Bunker with another player's Mobile Operations Center. */;
						}
						else if (iVar4 == 6)
						{
							return "BUNK_VEH_BLCK7" /* GXT: You cannot enter the Bunker with this vehicle. Please detach trailer to enter. */;
						}
						else if (iVar4 == 1)
						{
							return "BUNK_VEH_BLCK0b" /* GXT: You cannot enter the Bunker with this vehicle. Only the Bunker owner in their Personal Vehicle can drive in. */;
						}
						else if (iVar4 == -1)
						{
							return "BUNK_VEH_BLCK0" /* GXT: You cannot enter the Bunker with this vehicle. Only your Personal Vehicle can be driven in. */;
						}
					}
					else if (iVar4 == 1)
					{
						return "BUNK_VEH_BLCK0b" /* GXT: You cannot enter the Bunker with this vehicle. Only the Bunker owner in their Personal Vehicle can drive in. */;
					}
					else if (iVar4 == 2)
					{
					}
					else if (iVar4 == 3)
					{
						return "BUNK_VEH_BLCK2b" /* GXT: You cannot enter the Bunker with this vehicle. The driver is working for another player. */;
					}
					else if (iVar4 == 4 || iVar4 == 5)
					{
						return "BUNK_VEH_BLCK3b" /* GXT: You cannot enter the Bunker with this vehicle. The driver does not own this Bunker. */;
					}
					else if (iVar4 == -1)
					{
						return "BUNK_VEH_BLCK0b" /* GXT: You cannot enter the Bunker with this vehicle. Only the Bunker owner in their Personal Vehicle can drive in. */;
					}
				}
			}
		}
	}
	else if (__LIB_5__::func_815(PLAYER::PLAYER_ID(), 1))
	{
		iVar6 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
		bVar7 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
		if (bVar7 == __LIB_0__::func_162())
		{
			return "";
		}
		if (iVar6 == 192 || iVar6 == 190)
		{
			Var8 = { Global_1892703[bVar7 /*599*/].f_10.f_194 };
			if (__LIB_4__::func_715(iParam0) != Var8.f_0)
			{
				if (iVar6 == 190)
				{
					return "BUNK_BLOCK_BKRh" /* GXT: You can't enter this Bunker while selling goods from another business. */;
				}
				else if (__LIB_7__::func_965(bVar7, Var8.f_0))
				{
					return "BUNK_BLOCK_BKRc" /* GXT: You can't enter this Bunker while resupplying another business. */;
				}
				else
				{
					return "BUNK_BLOCK_BKRb" /* GXT: You can't enter this Bunker while setting up another business. */;
				}
			}
		}
		else if (iVar6 == 167)
		{
			return "BUNK_BLOCK_BKRd" /* GXT: You can't enter this Bunker while acquiring goods for a warehouse. */;
		}
		else if (iVar6 == 168)
		{
			return "BUNK_BLOCK_BKRe" /* GXT: You can't enter this Bunker while selling goods from a warehouse. */;
		}
		else if (iVar6 == 178)
		{
			return "BUNK_BLOCK_BKRf" /* GXT: You can't enter this Bunker while acquiring a vehicle for a warehouse. */;
		}
		else if (iVar6 == 188)
		{
			uVar9 = { Global_1892703[bVar7 /*599*/].f_10.f_187 };
			if (uVar9[1] == 0)
			{
				return "BUNK_BLOCK_BKRi" /* GXT: You can't enter this Bunker while selling a vehicle from a warehouse. */;
			}
			else
			{
				return "BUNK_BLOCK_BKRg" /* GXT: You can't enter this Bunker while selling vehicles from a warehouse. */;
			}
		}
	}
	else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && (__LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2) || bVar3))
	{
		if (((((__LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2) && ((__LIB_1__::func_589(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) || __LIB_1__::func_587(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_1__::func_819(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))))) || __LIB_3__::func_712(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)), 1)) || __LIB_4__::func_738(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_4__::func_737(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))) || __LIB_4__::func_736(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))))
		{
			return "BUNK_VEH_BLCK1" /* GXT: You cannot enter the Bunker with this vehicle. */;
		}
		else if (!__LIB_9__::func_309(iParam0, &iVar1, &iVar4, 1, 0))
		{
			if (iVar1 == PLAYER::PLAYER_ID())
			{
				if (iVar4 == 1)
				{
					return "BUNK_VEH_BLCK0" /* GXT: You cannot enter the Bunker with this vehicle. Only your Personal Vehicle can be driven in. */;
				}
				else if (iVar4 == 2)
				{
				}
				else if (iVar4 == 3)
				{
					return "BUNK_VEH_BLCK2" /* GXT: You cannot enter the Bunker with a vehicle while working for another player. */;
				}
				else if (iVar4 == 4)
				{
					return "BUNK_VEH_BLCK3" /* GXT: You cannot enter the Bunker with this vehicle. You do not own this Bunker. */;
				}
				else if (iVar4 == 5)
				{
					return "BUNK_VEH_BLCK4" /* GXT: You cannot enter the Bunker with this vehicle, without the Mobile Operations Center trailer attached. */;
				}
				else if (iVar4 == 7)
				{
					return "BUNK_VEH_BLCK4b" /* GXT: You cannot enter the Bunker with another player's Mobile Operations Center. */;
				}
				else if (iVar4 == 6)
				{
					return "BUNK_VEH_BLCK7" /* GXT: You cannot enter the Bunker with this vehicle. Please detach trailer to enter. */;
				}
				else if (iVar4 == -1)
				{
					return "BUNK_VEH_BLCK0" /* GXT: You cannot enter the Bunker with this vehicle. Only your Personal Vehicle can be driven in. */;
				}
			}
			else if (iVar4 == 1)
			{
				return "BUNK_VEH_BLCK0b" /* GXT: You cannot enter the Bunker with this vehicle. Only the Bunker owner in their Personal Vehicle can drive in. */;
			}
			else if (iVar4 == 2)
			{
			}
			else if (iVar4 == 3)
			{
				return "BUNK_VEH_BLCK2b" /* GXT: You cannot enter the Bunker with this vehicle. The driver is working for another player. */;
			}
			else if (iVar4 == 4 || iVar4 == 5)
			{
				return "BUNK_VEH_BLCK3b" /* GXT: You cannot enter the Bunker with this vehicle. The driver does not own this Bunker. */;
			}
			else if (iVar4 == -1)
			{
				return "BUNK_VEH_BLCK0b" /* GXT: You cannot enter the Bunker with this vehicle. Only the Bunker owner in their Personal Vehicle can drive in. */;
			}
		}
	}
	if (__LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2) || __LIB_5__::func_661(__LIB_0__::func_797(), iVar2))
	{
		if (__LIB_1__::func_101(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_BUNK" /* GXT: You can't access this Bunker whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__::func_906())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if ((__LIB_9__::func_309(iParam0, &iVar1, &iVar4, 1, 0) && __LIB_5__::func_661(PLAYER::PLAYER_ID(), iVar2)) && iVar1 == PLAYER::PLAYER_ID())
		{
			if (__LIB_4__::func_735(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
			{
				return "BUNK_VEH_BLCK1" /* GXT: You cannot enter the Bunker with this vehicle. */;
			}
			if (__LIB_0__::func_541(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1) && __LIB_4__::func_734(PLAYER::PLAYER_ID(), -1, 1))
			{
				return "BUNK_VEH_BLCK5" /* GXT: You can only have one vehicle in your Bunker at a time. Remove your Personal Vehicle from the Bunker to enter. */;
			}
			else if (__LIB_1__::func_461(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1) && __LIB_4__::func_733(PLAYER::PLAYER_ID(), -1, 1))
			{
				return "BUNK_VEH_BLCK6" /* GXT: You can only have one vehicle in your Bunker at a time. Remove your Pegasus vehicle from the Bunker to enter. */;
			}
		}
	}
	return "";
}

void func_64(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x396EB
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	int iVar15;
	int iVar16;
	bool bVar17;
	bVar17 = __LIB_1__::func_375(1);
	if (iParam0 == 225)
	{
	}
	else if (iParam0 == 226)
	{
		if (__LIB_2__::func_50())
		{
			iVar15 = PLAYER::PLAYER_ID();
		}
		else
		{
			iVar15 = __LIB_0__::func_797();
		}
		if (iVar15 != -1)
		{
			iVar16 = __LIB_4__::func_566(iVar15);
			iVar0 = (__LIB_6__::func_580(iVar15, iVar16) + uParam1->f_8);
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
			}
			else
			{
				fVar10 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar11 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar12 = ((fVar10 / fVar11) * 100f);
				fVar13 = ((IntToFloat(iVar0) / 100f) * fVar12);
				iVar1 = SYSTEM::CEIL(fVar13);
			}
			*uParam3 = iVar1;
			iVar2 = __LIB_15__::func_609(iVar15, iVar16, iVar1, 0);
			if (uParam1->f_14 == 0)
			{
				iVar2 = SYSTEM::CEIL((IntToFloat(iVar2) * Global_262145.f_21554 /* Tunable: 1021567941 */));
			}
			else
			{
				iVar2 = SYSTEM::CEIL((IntToFloat(iVar2) * Global_262145.f_21553 /* Tunable: 1865029244 */));
			}
			*iParam2 = (*iParam2 + iVar2);
			if (iVar15 == PLAYER::PLAYER_ID())
			{
				__LIB_15__::func_608(iVar16, iVar2);
				if (__LIB_15__::func_607(iVar16) >= Global_262145.f_21100 /* Tunable: -376544159 */ || iVar2 >= Global_262145.f_21100 /* Tunable: -376544159 */)
				{
					__LIB_30__::func_537(5);
				}
				iVar6 = __LIB_35__::func_560(&uVar5);
				iVar7 = SYSTEM::ROUND(Global_262145.f_21556 /* Tunable: -556480345 */);
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar8 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_21555 /* Tunable: 1413334331 */));
				iVar9 = ((*iParam2 / 100) * iVar8);
				*iParam2 = (*iParam2 + iVar9);
				if (Global_262145.f_32970 /* Tunable: 1598011694 */)
				{
					if (!__LIB_0__::func_137(32357, -1))
					{
						*iParam2 = (*iParam2 * Global_262145.f_32978 /* Tunable: -278088930 */);
						__LIB_0__::func_186(32357, 1, -1);
					}
				}
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(108);
					}
					else
					{
						__LIB_1__::func_928(110);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar14 = Global_262145.f_21557 /* Tunable: 426264033 */;
				if (!bVar17)
				{
					fVar14 = Global_262145.f_21558 /* Tunable: -1471492989 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar14));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_21559 /* Tunable: -165611423 */;
				if (!bVar17)
				{
					iVar4 = Global_262145.f_21560 /* Tunable: 301168766 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
	else if (iParam0 == 227)
	{
	}
}

void func_65(int iParam0, bool bParam1, var uParam2, int iParam3, var uParam4)//Position - 0x3B3DC
{
	bool bVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	float fVar8;
	int iVar9;
	int iVar10;
	bVar0 = __LIB_1__::func_744(PLAYER::PLAYER_ID());
	if (iParam0 == 167)
	{
		if (__LIB_1__::func_744(PLAYER::PLAYER_ID()))
		{
			if (bParam1)
			{
				__LIB_15__::func_391();
			}
			__LIB_15__::func_390();
		}
	}
	else if (iParam0 == 168)
	{
		if (bParam1)
		{
			if (uParam2->f_5)
			{
				*iParam3 = (*iParam3 + __LIB_15__::func_644(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183));
			}
			else
			{
				*uParam4 = uParam2->f_7;
				if (uParam2->f_8 > 0)
				{
					*uParam4 = (*uParam4 + uParam2->f_8);
				}
				iVar1 = __LIB_13__::func_509(*uParam4);
				iVar2 = (iVar1 * *uParam4);
				*iParam3 = (*iParam3 + iVar2);
				if (bVar0)
				{
					iVar4 = __LIB_35__::func_560(&uVar3);
					iVar5 = Global_262145.f_16656 /* Tunable: EXEC_CONTRABAND_HIGH_DEMAND_BONUS_CAP */;
					if (iVar4 > iVar5)
					{
						iVar4 = iVar5;
					}
					iVar6 = SYSTEM::CEIL((IntToFloat(iVar4) * Global_262145.f_15864 /* Tunable: EXEC_CONTRABAND_HIGH_DEMAND_BONUS_PERCENTAGE */));
					iVar7 = ((*iParam3 / 100) * iVar6);
					*iParam3 = (*iParam3 + iVar7);
					if (uParam2->f_6)
					{
						*iParam3 = (*iParam3 + *uParam2);
					}
					if (iVar4 > 0 && uParam2->f_9 != 4)
					{
						__LIB_1__::func_928(44);
					}
				}
			}
			if (bVar0)
			{
				if (Global_262145.f_32963 /* Tunable: -1292749091 */)
				{
					if (!__LIB_0__::func_137(32350, -1))
					{
						*iParam3 = (*iParam3 * Global_262145.f_32971 /* Tunable: -364133001 */);
						__LIB_0__::func_186(32350, 1, -1);
					}
				}
				__LIB_15__::func_610(*iParam3);
				__LIB_15__::func_388();
				Global_2815059.f_5195.f_386 = *iParam3;
			}
			else
			{
				fVar8 = Global_262145.f_24493 /* Tunable: -623310017 */;
				iVar9 = SYSTEM::CEIL((IntToFloat(*iParam3) * fVar8));
				*iParam3 = iVar9;
				iVar10 = Global_262145.f_24494 /* Tunable: -223487172 */;
				if (*iParam3 > iVar10)
				{
					*iParam3 = iVar10;
				}
			}
		}
		if (bVar0)
		{
			__LIB_15__::func_387();
		}
	}
}

void func_66(char* sParam0)//Position - 0x4E368
{
	if (__LIB_2__::func_755(sParam0))
	{
		__LIB_3__::func_286(sParam0);
	}
}

void func_67(char* sParam0, char* sParam1, var uParam2, bool bParam3)//Position - 0x4E48C
{
	if (__LIB_19__::func_503(sParam0, sParam1, bParam3, uParam2))
	{
		Global_1574757 = 16;
		Global_1574757.f_56 = uParam2;
	}
}

void func_68(int* iParam0, bool bParam1, bool bParam2)//Position - 0x507D8
{
	MISC::CLEAR_BIT(iParam0, 0);
	MISC::SET_BIT(iParam0, 12);
	GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(false);
	if (bParam2)
	{
		if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
		{
			WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(PLAYER::PLAYER_PED_ID(), true, true, true, false);
		}
	}
	if (MISC::IS_MINIGAME_IN_PROGRESS())
	{
		MISC::SET_MINIGAME_IN_PROGRESS(false);
	}
	HUD::CLEAR_HELP(true);
	if (bParam1)
	{
		PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
	}
	CAM::DESTROY_CAM(iLocal_142, false);
	__LIB_0__::func_671(0);
	__LIB_4__::func_993();
	GRAPHICS::FORCE_POSTFX_BULLET_IMPACTS_AFTER_HUD(false);
	__LIB_35__::func_883(iParam0, 1, 1, 0);
	__LIB_0__::func_963(0, 1, 1, 0);
}

int func_69(int iParam0, var* uParam1)//Position - 0xBAB14
{
	int iVar0;
	bool bVar1;
	if (NETWORK::NETWORK_IS_HANDLE_VALID(uParam1, 13) && NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(uParam1))
	{
		iVar0 = NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(uParam1);
	}
	else
	{
		iVar0 = __LIB_0__::func_162();
	}
	bVar1 = false;
	if (iVar0 == PLAYER::PLAYER_ID())
	{
		if (__LIB_6__::func_409(15, 0))
		{
			bVar1 = true;
		}
		else if (__LIB_1__::func_375(1))
		{
			bVar1 = true;
		}
	}
	else
	{
		bVar1 = true;
	}
	if (((((((!(ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false)) || !NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0)) || !NETWORK::NETWORK_CHECK_USER_CONTENT_PRIVILEGES(0, -1, true)) || !((NETWORK::NETWORK_IS_HANDLE_VALID(uParam1, 13) && NETWORK::NETWORK_CLAN_SERVICE_IS_VALID()) && NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(uParam1))) || iVar0 == __LIB_0__::func_162()) || !__LIB_1__::func_693(iVar0, 0, 0)) || !bVar1) || __LIB_32__::func_650(iParam0))
	{
		return 0;
	}
	return 1;
}

int func_70(int iParam0)//Position - 0x1D8E0F
{
	if ((__LIB_2__::func_155(iParam0, 0) || __LIB_5__::func_185(iParam0) == 191) || __LIB_5__::func_185(iParam0) == 238)
	{
		return 1;
	}
	if (__LIB_35__::func_569(iParam0))
	{
		return 1;
	}
	return 0;
}

void func_71(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x143DC0
{
	int iVar0;
	iVar0 = __LIB_7__::func_754();
	if (!__LIB_4__::func_946(PLAYER::PLAYER_ID(), 0))
	{
		if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!__LIB_1__::func_637(__LIB_6__::func_856(iVar0, 1, 0)))
			{
				__LIB_10__::func_148(uParam0, iVar0);
			}
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (__LIB_0__::func_1("BB_TRUCK_SUTAR" /* GXT: You are unable to access the Nerve Center in this area. Move the Terrorbyte to a suitable area. */))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || __LIB_3__::func_684(PLAYER::PLAYER_PED_ID(), 1))
			{
				HUD::CLEAR_HELP(true);
			}
		}
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_422(&(uParam0->f_22.f_94));
			}
		}
	}
}

void func_72(var uParam0, int iParam1, var uParam2, var uParam3)//Position - 0x183FF3
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	iVar0 = __LIB_7__::func_763();
	if ((__LIB_9__::func_759(iParam1) && !__LIB_4__::func_952(PLAYER::PLAYER_ID())) && PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
	{
		__LIB_7__::func_853(uParam0, 1);
		__LIB_4__::func_525(0);
	}
	if (__LIB_5__::func_623(iVar0))
	{
		if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && __LIB_8__::func_971(uParam0, PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), iVar0, 1)) && !__LIB_9__::func_759(iParam1))
		{
		}
		else if (!__LIB_3__::func_171(PLAYER::PLAYER_ID()) && PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
		{
			__LIB_7__::func_853(uParam0, 1);
			__LIB_4__::func_525(0);
		}
		if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
		{
			if (PLAYER::PLAYER_ID() == __LIB_6__::func_907(iVar0, 1, 0))
			{
				PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(PLAYER::PLAYER_ID()), false);
				if (ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("deluxo") || ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("oppressor2"))
				{
					VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(iVar1, 0f);
				}
			}
		}
	}
	if ((__LIB_4__::func_544(PLAYER::PLAYER_ID()) || __LIB_4__::func_543(PLAYER::PLAYER_ID())) && __LIB_9__::func_980(iParam1))
	{
		if (!__LIB_4__::func_953())
		{
			if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
			{
				TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
			}
			__LIB_4__::func_542(0);
			__LIB_4__::func_541(0);
			__LIB_4__::func_527(0);
			__LIB_4__::func_540(0);
			CAM::DO_SCREEN_FADE_IN(500);
			if (__LIB_3__::func_779())
			{
				__LIB_4__::func_539(1);
			}
			__LIB_4__::func_538(0);
			__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
			__LIB_4__::func_537(0);
			if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
			{
				NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
			}
			__LIB_4__::func_538(0);
		}
	}
	if (__LIB_0__::func_833())
	{
		if (Global_1946250.f_523)
		{
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/, true);
			PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 23 /*INPUT_ENTER*/, true);
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (Global_1853190 != __LIB_0__::func_162())
		{
			if (PLAYER::PLAYER_ID() == Global_1853190)
			{
				if (__LIB_1__::func_645(PLAYER::PLAYER_ID()))
				{
					if (((__LIB_4__::func_502(PLAYER::PLAYER_ID()) || __LIB_4__::func_452()) || __LIB_4__::func_451()) || Global_1957730)
					{
						__LIB_1__::func_33(1);
					}
				}
			}
		}
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_422(&(uParam0->f_22.f_94));
			}
		}
		if (!__LIB_4__::func_952(PLAYER::PLAYER_ID()))
		{
			if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
			{
				if (!__LIB_1__::func_645(__LIB_6__::func_907(iVar0, 1, 0)))
				{
					__LIB_9__::func_502(uParam0, iVar0);
				}
			}
		}
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (__LIB_0__::func_336(PLAYER::PLAYER_PED_ID(), 0) != -1 && __LIB_4__::func_543(PLAYER::PLAYER_ID()))
		{
			iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar2))
			{
				bVar3 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar2);
				if (__LIB_1__::func_693(bVar3, 1, 1))
				{
					if (__LIB_4__::func_529(bVar3))
					{
						if (__LIB_9__::func_759(iParam1) && !__LIB_4__::func_952(PLAYER::PLAYER_ID()))
						{
							TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
							__LIB_4__::func_537(0);
							__LIB_4__::func_538(0);
							__LIB_4__::func_539(1);
						}
					}
				}
			}
		}
	}
	if (__LIB_4__::func_529(PLAYER::PLAYER_ID()))
	{
		PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 199 /*INPUT_FRONTEND_PAUSE*/, true);
		HUD::DISABLE_FRONTEND_THIS_FRAME();
	}
	__LIB_5__::func_996();
	if (!__LIB_0__::func_893() || __LIB_0__::func_983())
	{
		__LIB_4__::func_491(0);
	}
}

int func_73(var uParam0, var uParam1, var uParam2)//Position - 0x186F42
{
	int iVar0;
	bool bVar1;
	char* sVar2;
	*uParam2 = 1;
	if (Global_262145.f_23133 /* Tunable: 200197103 */)
	{
		return 0;
	}
	iVar0 = __LIB_7__::func_763();
	if (__LIB_4__::func_452() || __LIB_4__::func_451())
	{
		return 0;
	}
	if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
	{
		if (__LIB_0__::func_1("HELP_APC_TUR" /* GXT: Hold ~INPUT_VEH_SHUFFLE~ to move between the passenger turret and the driver seat while stationary. */))
		{
			return 0;
		}
		if (__LIB_6__::func_907(iVar0, 1, 0) != PLAYER::PLAYER_ID())
		{
			return 0;
		}
	}
	if ((!__LIB_0__::func_893() || __LIB_3__::func_558()) || HUD::IS_PAUSE_MENU_ACTIVE())
	{
		__LIB_7__::func_853(uParam1, 1);
		__LIB_4__::func_525(0);
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_422(&(uParam1->f_22.f_94));
			}
			__LIB_7__::func_853(uParam1, 1);
			__LIB_4__::func_525(0);
		}
	}
	if (__LIB_3__::func_717(uParam0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
				{
					if (((__LIB_5__::func_623(iVar0) && __LIB_4__::func_680(OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -1f, 0f))) || __LIB_4__::func_955(PLAYER::PLAYER_ID())) || __LIB_4__::func_504())
					{
						if (!__LIB_9__::func_759(*uParam0) && __LIB_8__::func_971(uParam1, PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), iVar0, 0))
						{
							if (MISC::IS_PC_VERSION())
							{
								if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
								{
									if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("voltic2")) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor")))
									{
										if ((__LIB_3__::func_363(uParam1->f_22.f_94, 0) || __LIB_3__::func_56("GR_ENTERAOC" /* GXT: Press ~a~ to enter your Avenger with this vehicle. */, "STRING")) || __LIB_3__::func_56("BASE_MOD_ENTER" /* GXT: ~a~ Access the Facility Vehicle Workshop. ~n~ ~INPUT_CONTEXT_SECONDARY~ Enter your Avenger with this vehicle. */, "STRING"))
										{
											PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
										}
									}
								}
							}
							__LIB_4__::func_563(1);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
							if (!__LIB_4__::func_529(PLAYER::PLAYER_ID()))
							{
								if (__LIB_1__::func_587(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))))
								{
									if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
									{
										__LIB_0__::func_151("GAN_ETFE_AIR" /* GXT: You cannot modify this aircraft in your Avenger. */, -1);
									}
									return 0;
								}
								if (__LIB_4__::func_955(PLAYER::PLAYER_ID()))
								{
									bVar1 = true;
								}
								if (!bVar1)
								{
									sVar2 = "GR_ENTERAOC" /* GXT: Press ~a~ to enter your Avenger with this vehicle. */;
								}
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
								if (!bVar1)
								{
									if (uParam1->f_22.f_94 == -1 && __LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
									{
										__LIB_7__::func_954(&(uParam1->f_22.f_94), 5, sVar2, 0, 0, 0, 0);
									}
									if (__LIB_0__::func_77(0))
									{
										__LIB_3__::func_422(&(uParam1->f_22.f_94));
									}
								}
								if (((!bVar1 && __LIB_3__::func_113(uParam1->f_22.f_94, 1)) || ((bVar1 && PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 52 /*INPUT_CONTEXT_SECONDARY*/)) && !HUD::IS_WARNING_MESSAGE_ACTIVE())) || BitTest(uParam1->f_22, 1))
								{
									__LIB_7__::func_853(uParam1, 0);
									__LIB_4__::func_562(__LIB_1__::func_694(PLAYER::PLAYER_ID()), 25f, 0);
									__LIB_3__::func_422(&(uParam1->f_22.f_94));
									if (BitTest(uParam1->f_22, 1))
									{
										MISC::CLEAR_BIT(&(uParam1->f_22), 1);
									}
									if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 19))
									{
										__LIB_6__::func_844(1, 1);
										MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 19);
									}
									if (!__LIB_4__::func_955(PLAYER::PLAYER_ID()))
									{
										__LIB_4__::func_561(1);
									}
									__LIB_5__::func_435(1, 88);
									__LIB_4__::func_525(1);
								}
							}
							else
							{
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 104 /*INPUT_VEH_SHUFFLE*/, true);
								__LIB_1__::func_33(0);
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/, true);
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 23 /*INPUT_ENTER*/, true);
								PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/);
								PAD::SET_INPUT_EXCLUSIVE(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/);
								PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
								PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
								HUD::DISABLE_FRONTEND_THIS_FRAME();
								HUD::SUPPRESS_FRONTEND_RENDERING_THIS_FRAME();
								VEHICLE::BRING_VEHICLE_TO_HALT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1f, 1, false);
								if (__LIB_5__::func_338() && __LIB_5__::func_629())
								{
									if (__LIB_4__::func_955(PLAYER::PLAYER_ID()))
									{
										__LIB_4__::func_526(1);
									}
									if (__LIB_0__::func_541(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0))
									{
										__LIB_4__::func_553(PLAYER::PLAYER_ID(), 88, 3);
									}
									else if (__LIB_0__::func_872(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
									{
										__LIB_4__::func_956(PLAYER::PLAYER_ID(), 88, 3);
									}
									if (!__LIB_4__::func_504())
									{
										__LIB_5__::func_457(1);
										__LIB_5__::func_341(88, uParam1, 0, 0);
										__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 0, 0);
										__LIB_7__::func_4(1);
										__LIB_4__::func_562(__LIB_1__::func_694(PLAYER::PLAYER_ID()), 25f, 0);
										__LIB_4__::func_563(0);
										__LIB_5__::func_435(1, 88);
										return 1;
									}
									else if (!__LIB_3__::func_779())
									{
										__LIB_4__::func_542(1);
										__LIB_4__::func_541(1);
										__LIB_7__::func_4(1);
										__LIB_5__::func_435(1, 88);
										return 1;
									}
								}
								else
								{
									if (!__LIB_5__::func_338())
									{
									}
									if (!__LIB_5__::func_629())
									{
									}
								}
							}
						}
						else if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
						{
							HUD::CLEAR_HELP(true);
							__LIB_3__::func_422(&(uParam1->f_22.f_94));
						}
					}
					else
					{
						__LIB_4__::func_563(0);
						if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
						{
							HUD::CLEAR_HELP(true);
							__LIB_3__::func_422(&(uParam1->f_22.f_94));
						}
						__LIB_7__::func_853(uParam1, 1);
						__LIB_4__::func_525(0);
					}
				}
				else
				{
					if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
					{
						if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
						{
							HUD::CLEAR_HELP(true);
							__LIB_3__::func_422(&(uParam1->f_22.f_94));
						}
					}
					__LIB_7__::func_853(uParam1, 1);
					__LIB_4__::func_525(0);
				}
			}
			else
			{
				__LIB_10__::func_60(*uParam0);
				if (__LIB_4__::func_405(PLAYER::PLAYER_ID()))
				{
					if (!__LIB_0__::func_864(&(uParam1->f_22.f_101)))
					{
						__LIB_0__::func_795(&(uParam1->f_22.f_101), 0, 0);
					}
					if (__LIB_1__::func_693(Global_1946250.f_3630, 1, 1))
					{
					}
					if (!__LIB_5__::func_301(Global_1946250.f_3630) && __LIB_4__::func_952(Global_1946250.f_3630))
					{
						if (__LIB_0__::func_864(&(uParam1->f_22.f_101)))
						{
							if (__LIB_0__::func_937(&(uParam1->f_22.f_101), 15000, 0) && CAM::IS_SCREEN_FADING_OUT())
							{
								if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
								{
									TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
								}
								if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
								{
									NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
								}
								CAM::DO_SCREEN_FADE_IN(500);
								__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
								__LIB_4__::func_538(0);
								__LIB_4__::func_540(0);
								__LIB_4__::func_537(0);
								__LIB_0__::func_794(&(uParam1->f_22.f_101));
							}
						}
					}
					PED::SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(PLAYER::PLAYER_PED_ID(), 1);
					__LIB_1__::func_33(0);
					__LIB_3__::func_669(Global_1946250.f_3630);
					MISC::SET_BIT(&(Global_1946250.f_506), 5);
					Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = PLAYER::INT_TO_PLAYERINDEX(Global_1946250.f_3280);
					__LIB_4__::func_561(1);
					__LIB_5__::func_435(1, 88);
					__LIB_4__::func_525(1);
					PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 184, true);
					Global_1853190 = PLAYER::INT_TO_PLAYERINDEX(Global_1946250.f_3280);
					__LIB_0__::func_794(&(uParam1->f_22.f_101));
					return 1;
				}
			}
		}
		else
		{
			if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_422(&(uParam1->f_22.f_94));
			}
			__LIB_7__::func_853(uParam1, 1);
			__LIB_4__::func_525(0);
		}
	}
	else if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
	{
		HUD::CLEAR_HELP(true);
		__LIB_3__::func_422(&(uParam1->f_22.f_94));
	}
	if (((__LIB_0__::func_1("GR_ETFE_NOTV" /* GXT: You cannot modify this vehicle in your Mobile Operations Center. */) || __LIB_0__::func_1("GR_ETFE_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. */)) || __LIB_0__::func_1("GR_ETFS_TRAIL" /* GXT: You cannot store this vehicle while a trailer is attached. */)) || __LIB_0__::func_1("GR_ETFA_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. The Anti-Aircraft Trailer can only be modified in the Bunker. */))
	{
		HUD::CLEAR_HELP(true);
	}
	return 0;
}

int func_74(var uParam0, var uParam1)//Position - 0x1A8C1C
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	bool bVar4;
	int iVar5;
	int iVar6;
	iVar2 = -1;
	iVar6 = 18;
	iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Vehicle", 3))
	{
		if (DECORATOR::DECOR_EXIST_ON(iVar0, "Player_Vehicle"))
		{
			if (DECORATOR::DECOR_GET_INT(iVar0, "Player_Vehicle") == NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()))
			{
				bVar3 = true;
			}
			else
			{
				bVar4 = true;
			}
		}
	}
	if (bVar3 || (!bVar4 && ENTITY::DOES_ENTITY_EXIST(iVar0)))
	{
		__LIB_1__::func_775(156, &iVar2, 1);
		__LIB_1__::func_660(__LIB_1__::func_463(), &iVar1);
		if (iVar1 == 156 && bVar3)
		{
			MISC::SET_BIT(&(Global_1852994.f_22), 27);
			MISC::CLEAR_BIT(&(Global_1852994.f_22), 19);
			MISC::CLEAR_BIT(&(Global_1852994.f_22), 10);
			return 1;
		}
		else if (iVar2 < 0)
		{
			Global_1852994.f_189 = iVar0;
			MISC::CLEAR_BIT(&(Global_1852994.f_22), 19);
			if (!bVar3)
			{
				__LIB_9__::func_959(iVar0, &(Global_1852994.f_29), 1);
				Global_1852994.f_183 = 0;
				if (VEHICLE::GET_NUM_MOD_KITS(iVar0) > 0)
				{
					VEHICLE::SET_VEHICLE_MOD_KIT(iVar0, 0);
				}
				if (VEHICLE::GET_VEHICLE_MOD_KIT(iVar0) >= 0)
				{
					Global_1852994.f_173 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 11) + 1;
					Global_1852994.f_174 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 12) + 1;
					Global_1852994.f_175 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 4) + 1;
					Global_1852994.f_176 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 23) + 1;
					Global_1852994.f_177 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 14) + 1;
					Global_1852994.f_178 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 16) + 1;
					Global_1852994.f_179 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 15) + 1;
					Global_1852994.f_180 = VEHICLE::GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(iVar0);
					Global_1852994.f_181 = VEHICLE::GET_VEHICLE_MOD_KIT_TYPE(iVar0);
					Global_1852994.f_182 = __LIB_0__::func_294(iVar0);
					Global_1852994.f_183 = 1;
				}
				MISC::SET_BIT(&(Global_1852994.f_22), 19);
			}
			MISC::SET_BIT(&(Global_1852994.f_22), 27);
			return 1;
		}
		else
		{
			__LIB_1__::func_775(156, &iVar2, 1);
			if (bVar3 && !__LIB_5__::func_652(Global_1585857[iVar2 /*142*/].f_66, __LIB_5__::func_790(iVar1)))
			{
				iVar5 = 1;
			}
			if (bVar3 && iVar1 == 223)
			{
				if (Global_1585857[iVar2 /*142*/].f_66 != joaat("oppressor2"))
				{
					iVar5 = 1;
				}
			}
			if (bVar3 && iVar5 == 0)
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("MP_TRUCK_FULL" /* GXT: Personal Vehicle Storage Full */, "MP_TRUCK_FULL2" /* GXT: Adding this vehicle to your Mobile Operations Center will cause your currently stored Personal Vehicle to be transferred to a Garage. */, iVar6, 0, false, -1, 0, 0, true, 0);
			}
			else if (bVar3 && iVar5)
			{
				iVar6 = 16;
				if (iVar1 == 223)
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("MP_TRUCK_FULL" /* GXT: Personal Vehicle Storage Full */, "MP_TRUCK_FULLT" /* GXT: You cannot store this vehicle in your Mobile Operations Center. The vehicle in the Mobile Operations Center cannot be moved to your Terrorbyte. */, iVar6, 0, false, -1, 0, 0, true, 0);
				}
				else
				{
					HUD::SET_WARNING_MESSAGE_WITH_HEADER("MP_TRUCK_FULL" /* GXT: Personal Vehicle Storage Full */, "MP_TRUCK_FULLC" /* GXT: You cannot store this vehicle in your Mobile Operations Center. The vehicle in the Mobile Operations Center cannot be moved to your Clubhouse. */, iVar6, 0, false, -1, 0, 0, true, 0);
				}
			}
			else
			{
				HUD::SET_WARNING_MESSAGE_WITH_HEADER("MP_TRUCK_FULL" /* GXT: Personal Vehicle Storage Full */, "MP_TRUCK_FULL1" /* GXT: Adding this vehicle to your Mobile Operations Center will cause your currently stored Personal Vehicle (and any purchased upgrades) to be lost. */, iVar6, 0, false, -1, 0, 0, true, 0);
			}
			if (!BitTest(uParam1->f_3, 9) && !(bVar3 && iVar5))
			{
				if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/) || BitTest(uParam1->f_3, 11))
				{
					Global_1852994.f_189 = iVar0;
					AUDIO::PLAY_SOUND_FRONTEND(-1, "OK", "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
					__LIB_9__::func_959(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), &(Global_1852994.f_29), 1);
					Global_1852994.f_183 = 0;
					if (VEHICLE::GET_NUM_MOD_KITS(iVar0) > 0)
					{
						VEHICLE::SET_VEHICLE_MOD_KIT(iVar0, 0);
					}
					if (VEHICLE::GET_VEHICLE_MOD_KIT(iVar0) >= 0)
					{
						Global_1852994.f_173 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 11) + 1;
						Global_1852994.f_174 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 12) + 1;
						Global_1852994.f_175 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 4) + 1;
						Global_1852994.f_176 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 23) + 1;
						Global_1852994.f_177 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 14) + 1;
						Global_1852994.f_178 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 16) + 1;
						Global_1852994.f_179 = VEHICLE::GET_NUM_VEHICLE_MODS(iVar0, 15) + 1;
						Global_1852994.f_180 = VEHICLE::GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET(iVar0);
						Global_1852994.f_181 = VEHICLE::GET_VEHICLE_MOD_KIT_TYPE(iVar0);
						Global_1852994.f_182 = __LIB_0__::func_294(iVar0);
						Global_1852994.f_183 = 1;
					}
					MISC::SET_BIT(&(Global_1852994.f_22), 27);
					MISC::SET_BIT(&(uParam1->f_3), 11);
					if (bVar3 && iVar5 == 0)
					{
						MISC::SET_BIT(&(Global_1852994.f_22), 10);
						MISC::CLEAR_BIT(&(Global_1852994.f_22), 19);
					}
					else
					{
						MISC::SET_BIT(&(Global_1852994.f_22), 19);
						MISC::CLEAR_BIT(&(Global_1852994.f_22), 10);
						if (!bVar3)
						{
							__LIB_1__::func_891(1, 0, 1, 0, 0, 0, 0);
						}
						if (iVar5 || !bVar3)
						{
							MISC::SET_BIT(&(Global_1852994.f_22), 28);
						}
					}
					return 1;
				}
			}
			else if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/))
			{
				MISC::CLEAR_BIT(&(uParam1->f_3), 9);
			}
			if (!BitTest(uParam1->f_3, 10))
			{
				if ((PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/) || PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) || !PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					AUDIO::PLAY_SOUND_FRONTEND(-1, "CANCEL", "HUD_FRONTEND_DEFAULT_SOUNDSET", true);
					HUD::CLEAR_HELP(true);
					__LIB_3__::func_422(&(uParam0->f_22.f_94));
					__LIB_7__::func_854(uParam0, 1);
					if (__LIB_4__::func_954(PLAYER::PLAYER_ID()))
					{
						__LIB_4__::func_530(0);
					}
				}
			}
			else if (!PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/))
			{
				MISC::CLEAR_BIT(&(uParam1->f_3), 10);
			}
		}
	}
	else if (bVar4)
	{
		if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
		{
			HUD::CLEAR_HELP(true);
			__LIB_3__::func_422(&(uParam0->f_22.f_94));
			if (__LIB_4__::func_954(PLAYER::PLAYER_ID()))
			{
				__LIB_4__::func_530(0);
			}
		}
	}
	return 0;
}

void func_75(var uParam0, int iParam1)//Position - 0x20346E
{
	MISC::CLEAR_BIT(&(uParam0->f_1), 4);
	MISC::CLEAR_BIT(&Global_2621446, 3);
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 28))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 28);
	}
	NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(false);
	__LIB_11__::func_777();
	if (GRAPHICS::GET_USINGNIGHTVISION() && !__LIB_2__::func_311(Global_4718592.f_116524))
	{
		GRAPHICS::SET_NIGHTVISION(false);
		__LIB_10__::func_845(0);
	}
	if (((!__LIB_4__::func_976(PLAYER::PLAYER_ID(), 1) || uParam0->f_1.f_35 == 3) || uParam0->f_1.f_35 == 5) || uParam0->f_1.f_35 == 4)
	{
		__LIB_2__::func_346(PLAYER::PLAYER_ID(), 0);
	}
	uParam0->f_1.f_2 = iParam1;
	if (BitTest(uParam0->f_1.f_2, 6))
	{
		__LIB_2__::func_592(0, 0);
	}
	if (BitTest(uParam0->f_1.f_2, 4))
	{
		__LIB_10__::func_892(uParam0, 1);
	}
	__LIB_2__::func_329(0);
	if (!__LIB_10__::func_201())
	{
		__LIB_10__::func_200();
	}
	GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("GTAOlogo");
	__LIB_10__::func_199(0);
	if (__LIB_0__::func_628() == 65)
	{
		__LIB_35__::func_574(0, 0);
	}
}

int func_76(bool bParam0)//Position - 0x20560A
{
	if (!__LIB_2__::func_709(PLAYER::PLAYER_ID(), 3) && __LIB_35__::func_571(1))
	{
		return 1;
	}
	if (Global_2815059.f_5195.f_43)
	{
		Global_2815059.f_5195.f_43 = 0;
		return 1;
	}
	if (bParam0)
	{
		if (__LIB_1__::func_730() == __LIB_0__::func_162() || !__LIB_1__::func_693(__LIB_1__::func_730(), 0, 1))
		{
			return 1;
		}
	}
	if (__LIB_2__::func_709(PLAYER::PLAYER_ID(), 1) && !__LIB_9__::func_704(PLAYER::PLAYER_ID()))
	{
		if (__LIB_19__::func_356())
		{
			return 1;
		}
	}
	return 0;
}

void func_77(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0x34704
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	int iVar6;
	bool bVar7;
	bool bVar8;
	struct<2> Var9;
	char* sVar10;
	iVar6 = __LIB_0__::func_797();
	if (iVar6 != __LIB_0__::func_162())
	{
		__LIB_15__::func_312(iVar6, &iVar0, &iVar1);
	}
	bVar7 = !__LIB_2__::func_159(1);
	bVar8 = __LIB_2__::func_159(0);
	Var9.f_1 = -1;
	switch (iParam0)
	{
		case 168:
			if (!__LIB_0__::func_112())
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam3);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 190:
			if (__LIB_5__::func_234())
			{
				if (!__LIB_0__::func_112())
				{
					Var9 = { __LIB_15__::func_382() };
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(Var9.f_0)), __LIB_1__::func_794(Var9.f_0), iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 226:
			if (__LIB_2__::func_50())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(__LIB_4__::func_566(PLAYER::PLAYER_ID()))), 5, iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 230:
			if (__LIB_2__::func_50())
			{
				if (!__LIB_0__::func_112())
				{
					iVar2 = __LIB_15__::func_642(uParam5->f_16, iParam4);
					iVar3 = iParam1;
					if (iVar2 > 0)
					{
						iVar3 = (iVar3 - iVar2);
					}
					if (iParam2 > 0)
					{
						iVar3 = (iVar3 - iParam2);
					}
					MONEY::NETWORK_EARN_FROM_SMUGGLER_WORK(iVar3, iParam4, iParam2, iVar2, uParam5->f_16);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_982(joaat("SERVICE_EARN_SMUGGLER_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_SMUGGLER_AGENCY(iVar0, iVar1, iParam1, bVar7);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 233:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_GANGOPS_PREP_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(iParam1);
			}
			break;
		case 237:
			if (__LIB_2__::func_50())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_HUB_SELL(iParam1, uParam5->f_20, iParam4);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_982(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 250:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				Global_4534105[iVar4 /*85*/] = 1781827765;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(iParam1, 1781827765);
			}
			break;
		case 249:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_FROM_FMBB_PHONECALL_MISSION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(iParam1);
			}
			break;
		case 242:
		case 244:
		case 248:
		case 241:
		case 239:
		case 240:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_FROM_FMBB_BOSS_WORK"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_BOSS_WORK(iParam1);
			}
			break;
		case 243:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_CASINO_MISSION_REWARD"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_MISSION_REWARD(iParam1);
			}
			break;
		case 158:
			if (uParam5->f_22)
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_982(joaat("SERVICE_EARN_CASINO_HEIST_SETUP_MISSION"), iParam1, &iVar4, 0, 1, 0);
				}
				else
				{
					MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 0, 0, 1, iParam1, 0, 0);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_CASINO_HEIST_PREP_MISSION"), iParam1, &iVar4, 0, 1, 0);
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 1, iParam1, 0, 0, 0, 0);
			}
			break;
		default:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_982(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_AGENCY(iVar0, iVar1, iParam1, bVar7);
			}
			break;
	}
	if (bVar5)
	{
		sVar10 = "GBMR_SELLTICK0" /* GXT: You earned $~1~ for helping your VIP to complete a Sell mission. */;
		if (__LIB_1__::func_375(1))
		{
			sVar10 = "GBMR_SELLTICK2" /* GXT: You earned $~1~ for helping your MC President to complete a Sell mission. */;
		}
		else if (__LIB_3__::func_673(iVar6))
		{
			sVar10 = "GBMR_SELLTICK1" /* GXT: You earned $~1~ for helping your CEO to complete a Sell mission. */;
		}
		__LIB_8__::func_978(sVar10, iParam1, 0);
	}
}

void func_78(int iParam0, int iParam1)//Position - 0x380D0
{
	int iVar0;
	if (*iParam0 > 0)
	{
		if (!__LIB_2__::func_50())
		{
			if (__LIB_2__::func_159(0))
			{
				if (!__LIB_1__::func_375(0))
				{
					if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(__LIB_0__::func_797()))
					{
						if (__LIB_1__::func_930() == 100)
						{
							iVar0 = *iParam0;
							*iParam0 = 0;
						}
						else
						{
							iVar0 = ((*iParam0 / 100) * __LIB_1__::func_930());
							*iParam0 = (*iParam0 - iVar0);
						}
						__LIB_2__::func_98(&iVar0, 0);
						if (iParam1 == 1)
						{
							__LIB_35__::func_573("GB_BCUT_TICK1" /* GXT: You paid ~a~ ~s~a $~1~ ~s~cut. */, __LIB_0__::func_797(), iVar0, 0, 0, 1);
						}
						__LIB_1__::func_928(20);
						__LIB_15__::func_606(__LIB_0__::func_797(), iVar0, 1);
					}
				}
			}
		}
	}
}

int func_79(var uParam0, char* sParam1, char* sParam2, char* sParam3, var uParam4, int iParam5, int iParam6, int iParam7, char* sParam8, int iParam9, var uParam10, var uParam11, var uParam12, var uParam13, int iParam14)//Position - 0x3D18C
{
	struct<80> Var0;
	Var0.f_3 = -1;
	Var0.f_4 = -1;
	Var0.f_5 = -1;
	Var0.f_6 = -1;
	Var0.f_7 = -1082130432;
	Var0.f_16 = 1;
	Var0.f_71 = 1;
	Var0.f_72 = 2;
	Var0.f_79 = -1;
	__LIB_1__::func_264(uParam0, &Var0, iParam9, sParam2, sParam1);
	Var0.f_4 = uParam10;
	Var0.f_5 = uParam11;
	Var0.f_17 = iParam5;
	Var0.f_18 = iParam6;
	Var0.f_19 = iParam7;
	StringCopy(&(Var0.f_25), sParam3, 64);
	StringCopy(&(Var0.f_57), sParam8, 16);
	Var0.f_73 = uParam4;
	Var0.f_71 = uParam4;
	Var0.f_6 = uParam13;
	Var0.f_72 = uParam12;
	if (iParam14 != 2)
	{
		Var0.f_71 = iParam14;
	}
	__LIB_1__::func_330(&(Var0.f_69), 4);
	return __LIB_16__::func_285(&Var0);
}

void func_80(int iParam0, struct<3> Param1, var uParam2, float fParam3, float fParam4, int iParam5)//Position - 0x4A660
{
	float fVar0;
	float fVar1;
	if ((((__LIB_1__::func_15(PLAYER::PLAYER_ID()) && !__LIB_3__::func_438(PLAYER::PLAYER_ID())) && !BitTest(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1, 8)) && (__LIB_3__::func_131(PLAYER::PLAYER_ID()) || __LIB_1__::func_17(PLAYER::PLAYER_ID()))) || __LIB_0__::func_86(Param1))
	{
		return;
	}
	Global_1943920 = { Param1 };
	fVar0 = SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), Param1);
	__LIB_30__::func_561(iParam0, fVar0);
	if (HUD::IS_PAUSE_MENU_ACTIVE() && HUD::GET_PAUSE_MENU_STATE() == 15)
	{
		if (__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_5__::func_248(PLAYER::PLAYER_ID()))
		{
			if (!HUD::PAUSE_MENU_IS_CONTEXT_ACTIVE(joaat("DisableSpectateScript")))
			{
				HUD::PAUSE_MENU_ACTIVATE_CONTEXT(joaat("DisableSpectateScript"));
			}
		}
		else if (HUD::PAUSE_MENU_IS_CONTEXT_ACTIVE(joaat("DisableSpectateScript")))
		{
			HUD::PAUSE_MENU_DEACTIVATE_CONTEXT(joaat("DisableSpectateScript"));
		}
	}
	if (fVar0 < fParam3)
	{
		if (!(__LIB_0__::func_979(PLAYER::PLAYER_ID(), 21) || __LIB_0__::func_979(PLAYER::PLAYER_ID(), 25)))
		{
			__LIB_1__::func_959(Param1, 1, 0);
		}
		if (!*uParam2 && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			*uParam2 = 1;
			if (__LIB_15__::func_411(iParam0))
			{
				PLAYER::SET_WANTED_LEVEL_MULTIPLIER(__LIB_3__::func_102(iParam0));
				if (__LIB_15__::func_410(iParam0, -1))
				{
					PLAYER::SET_MAX_WANTED_LEVEL(0);
					if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
					{
						PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, true);
						PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), true);
					}
					MISC::SET_BIT(&(Global_1943920.f_3), 0);
				}
			}
			if (__LIB_15__::func_413(iParam0))
			{
				fVar1 = __LIB_15__::func_412(iParam0);
				if (fVar1 != 1f)
				{
					__LIB_2__::func_74(fVar1);
					MISC::SET_BIT(&(Global_1943920.f_3), 1);
				}
			}
			if (!Global_2653189)
			{
				if (__LIB_30__::func_408(iParam0) && __LIB_4__::func_897(PLAYER::PLAYER_ID()))
				{
					__LIB_2__::func_135(1);
					__LIB_11__::func_670(2);
				}
			}
			__LIB_1__::func_966(19);
		}
	}
	else
	{
		if (fVar0 > fParam4)
		{
			if (__LIB_1__::func_906(PLAYER::PLAYER_ID(), 19))
			{
				__LIB_1__::func_967(19);
			}
		}
		if (*uParam2 && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			*uParam2 = 0;
			if (__LIB_15__::func_411(iParam0))
			{
				if (BitTest(Global_1943920.f_3, 0))
				{
					PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
					PLAYER::SET_MAX_WANTED_LEVEL(5);
					MISC::CLEAR_BIT(&(Global_1943920.f_3), 0);
				}
			}
			if (__LIB_15__::func_413(iParam0))
			{
				__LIB_2__::func_16();
				MISC::CLEAR_BIT(&(Global_1943920.f_3), 1);
			}
			if (iParam5 && !__LIB_1__::func_15(PLAYER::PLAYER_ID()))
			{
				if (__LIB_5__::func_185(PLAYER::PLAYER_ID()) != 152)
				{
					__LIB_30__::func_494();
				}
			}
			if (__LIB_1__::func_731(2))
			{
				__LIB_2__::func_135(0);
				__LIB_11__::func_662(2);
			}
		}
	}
}

void func_81(int iParam0)//Position - 0x748D
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(uLocal_168[iVar0]), iVar1);
}

bool func_82(var uParam0)//Position - 0x39344
{
	return BitTest(uLocal_170, uParam0);
}

bool func_83(int iParam0)//Position - 0x39545
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(uLocal_168[iVar0], iVar1);
}

bool func_84()//Position - 0x3CDA4
{
	return BitTest(Global_1958711, 1);
}

void func_85(struct<3> Param0, float fParam1)//Position - 0x3CE06
{
	if (!__LIB_0__::func_78(Global_1958711.f_10, Param0, 0))
	{
		Global_1958711.f_10 = { Param0 };
		Global_1958711.f_7 = fParam1;
	}
}

bool func_86()//Position - 0x3CFBB
{
	return BitTest(Global_1958711, 14);
}

bool func_87(int iParam0, float fParam1)//Position - 0x3F379
{
	return SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(iParam0, false), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false)) <= (fParam1 * fParam1);
}

char* func_88(int iParam0)//Position - 0x4113C
{
	switch (iParam0)
	{
		case 1:
			return "BTL_IDLE_START";
		case 2:
			return "BTL_MED_INTENSITY_START";
		case 3:
			return "BTL_GUNFIGHT_START";
		case 4:
			return "BTL_SUSPENSE";
		case 5:
			return "BTL_MED_INTENSITY";
		case 6:
			return "BTL_DELIVERING";
		case 7:
			return "BTL_GUNFIGHT";
		case 8:
			return "BTL_VEHICLE_ACTION";
		case 9:
			return "BTL_DELIVERING_START";
		case 10:
			return "BTL_MUSIC_STOP";
		case 11:
			return "BTL_FAIL";
		default:
	}
	return "";
}

void func_89()//Position - 0x41E1C
{
	if (HUD::DOES_BLIP_EXIST(iLocal_349))
	{
		HUD::REMOVE_BLIP(&iLocal_349);
	}
}

void func_90()//Position - 0x41F8A
{
	if (HUD::DOES_BLIP_EXIST(iLocal_347))
	{
		HUD::REMOVE_BLIP(&iLocal_347);
	}
}

void func_91(bool bParam0)//Position - 0x3CFCA
{
	if (bParam0)
	{
		if (!__LIB_36__::func_32())
		{
			MISC::SET_BIT(&Global_1958711, 11);
		}
	}
	else if (__LIB_36__::func_32())
	{
		MISC::CLEAR_BIT(&Global_1958711, 11);
	}
}

int func_92(int iParam0, float fParam1)//Position - 0x40ED3
{
	int iVar0;
	bool bVar1;
	if (__LIB_1__::func_693(Global_1574681, 1, 1) && __LIB_1__::func_693(iParam0, 1, 1))
	{
		iVar0 = __LIB_0__::func_797();
		bVar1 = ((__LIB_2__::func_39(Global_1574681) != iVar0 || iVar0 == __LIB_0__::func_162()) && Global_1574681 != PLAYER::PLAYER_ID());
		if (bVar1)
		{
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(Global_1574681), true), ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(iParam0), true)) < (fParam1 * fParam1))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_93()//Position - 0x201BC8
{
	int iVar0;
	int iVar1;
	int iVar2;
	iLocal_174 = -1;
	if (BitTest(uLocal_171, PLAYER::PLAYER_ID()))
	{
		if (BitTest(uLocal_172, NETWORK::PARTICIPANT_ID_TO_INT()))
		{
			if (!__LIB_4__::func_972(PLAYER::PLAYER_ID()))
			{
				iLocal_174 = NETWORK::PARTICIPANT_ID_TO_INT();
			}
			else if (__LIB_1__::func_5() && !__LIB_3__::func_155())
			{
				iVar0 = __LIB_2__::func_51();
				if (PED::IS_PED_A_PLAYER(iVar0))
				{
					iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar0);
					if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar1))
					{
						iVar2 = NETWORK::NETWORK_GET_PARTICIPANT_INDEX(iVar1);
						iLocal_174 = iVar2;
					}
				}
			}
		}
	}
}

void func_94(bool bParam0)//Position - 0x3AF99
{
	if (Global_1640761)
	{
		Global_2815059.f_932 = __LIB_5__::func_706(PLAYER::PLAYER_ID());
		Global_1640761 = 0;
	}
	if (bParam0)
	{
		if (Global_1640762)
		{
			Global_1640762 = 0;
		}
	}
}

void func_95(bool bParam0)//Position - 0x3AFCD
{
	if (__LIB_9__::func_704(PLAYER::PLAYER_ID()))
	{
		Global_2815059.f_932 = 9;
		if (!Global_1640761)
		{
			Global_1640761 = 1;
		}
		if (bParam0)
		{
			if (!Global_1640762)
			{
				Global_1640762 = 1;
			}
		}
	}
}

void func_96(int iParam0)//Position - 0x3FC15
{
	if (!__LIB_4__::func_77(PLAYER::PLAYER_ID()))
	{
		if (iParam0 || __LIB_36__::func_48(PLAYER::PLAYER_ID()) != 0)
		{
			__LIB_1__::func_966(20);
			__LIB_1__::func_28(__LIB_24__::func_104());
			if (__LIB_1__::func_15(PLAYER::PLAYER_ID()))
			{
				if (!BitTest(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1, 8))
				{
					MISC::SET_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1), 8);
				}
			}
		}
	}
}

void func_97(bool bParam0)//Position - 0x4014E
{
	if (bParam0)
	{
		if (!__LIB_1__::func_906(PLAYER::PLAYER_ID(), 9))
		{
			if (__LIB_36__::func_48(PLAYER::PLAYER_ID()) != 0)
			{
				__LIB_1__::func_966(9);
			}
		}
	}
	else if (__LIB_1__::func_906(PLAYER::PLAYER_ID(), 9))
	{
		__LIB_1__::func_967(9);
	}
}

int func_98(int iParam0, var uParam1)//Position - 0x15C85F
{
	int iVar0;
	int iVar1;
	bool bVar2;
	iVar0 = PLAYER::PLAYER_ID();
	iVar1 = __LIB_0__::func_797();
	bVar2 = false;
	if (__LIB_3__::func_675())
	{
		return 0;
	}
	if (Global_1946250.f_506 == 0)
	{
		return 1;
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		iVar0 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9;
	}
	if (iVar0 != __LIB_0__::func_162())
	{
		if ((((__LIB_5__::func_185(iVar0) == 237 || __LIB_5__::func_185(iVar0) == 250) || __LIB_5__::func_185(iVar0) == 238) || __LIB_5__::func_185(iVar0) == 249) || __LIB_5__::func_185(iVar0) == 299)
		{
			if (__LIB_4__::func_897(iVar0))
			{
				bVar2 = true;
			}
		}
	}
	if (!BitTest(Global_1946250.f_506, 30))
	{
		if (!__LIB_1__::func_693(iVar0, 0, 1))
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 6);
			return 1;
		}
		if (__LIB_1__::func_753(iVar0) != iParam0)
		{
			MISC::SET_BIT(&Global_1946250, 18);
			return 1;
		}
		if (bVar2)
		{
			if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1) && __LIB_5__::func_297(PLAYER::PLAYER_ID(), iVar0))
			{
				if (!BitTest(Global_1946250.f_506, 9))
				{
					if (__LIB_5__::func_185(iVar0) == 237 && !__LIB_36__::func_51(iVar0))
					{
						Global_1946250.f_3377 = 5;
					}
					else if ((__LIB_5__::func_185(iVar0) == 238 || __LIB_5__::func_185(iVar0) == 250) || __LIB_36__::func_51(iVar0))
					{
						Global_1946250.f_3377 = 99;
					}
					return 1;
				}
			}
			else if (__LIB_5__::func_185(iVar0) == 237 && __LIB_0__::func_509() != 0)
			{
				MISC::SET_BIT(&(Global_1946250.f_506), 8);
				return !BitTest(Global_1946250.f_506, 9);
			}
		}
		else if ((__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1) && !__LIB_3__::func_360(PLAYER::PLAYER_ID(), iVar0)) && __LIB_0__::func_509() != 0)
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 10);
			return 1;
		}
		if ((Global_1578979 >= 10 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 0) && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_FOLLOW_NAV_MESH_TO_COORD")) != 1)
		{
			MISC::SET_BIT(&(Global_1946250.f_506), 13);
			__LIB_5__::func_582(iVar0, 1);
			return 1;
		}
	}
	else if (bVar2)
	{
		if (__LIB_5__::func_185(iVar0) == 238 && !BitTest(Global_1946250.f_506, 9))
		{
			Global_1946250.f_3377 = 99;
		}
		return !BitTest(Global_1946250.f_506, 9);
	}
	else if (__LIB_0__::func_509() != 0 && __LIB_2__::func_159(0))
	{
		MISC::SET_BIT(&(Global_1946250.f_506), 10);
		return 1;
	}
	if ((__LIB_5__::func_185(PLAYER::PLAYER_ID()) == 264 && __LIB_21__::func_826(PLAYER::PLAYER_ID()) == 1) || (iVar1 != __LIB_0__::func_162() && __LIB_1__::func_472(iVar1, 22)))
	{
		if (__LIB_0__::func_509() == 0)
		{
			return 1;
		}
	}
	if (BitTest(Global_1946250.f_506, 14))
	{
		return 1;
	}
	if ((BitTest(Global_1946250.f_506, 9) && !bVar2) && iVar0 != __LIB_0__::func_162())
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_506), 9);
	}
	return 0;
}

char* func_99(int iParam0, var uParam1, int iParam2)//Position - 0x15E159
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (__LIB_5__::func_434())
	{
		if (iParam2 == 0 || iParam2 == 1)
		{
			return "SI_ENTR_BLCK11A" /* GXT: You cannot enter the Nightclub Warehouse while on call. You can cancel this via the Quick Join app on the phone. */;
		}
		else
		{
			return "SI_ENTR_BLCK12A" /* GXT: You cannot enter the Nightclub while on call. You can cancel this via the Quick Join app on the phone. */;
		}
	}
	iVar0 = __LIB_4__::func_322(iParam0);
	iVar1 = __LIB_0__::func_797();
	if (__LIB_1__::func_907(PLAYER::PLAYER_ID(), 0))
	{
		iVar2 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
		if (PLAYER::PLAYER_ID() != __LIB_0__::func_162())
		{
			if (iParam2 == 2 || iParam2 == 3)
			{
				switch (iVar2)
				{
					case 192:
						return "CLUB_BLOCK_A" /* GXT: You can't enter this Nightclub while resupplying another business. */;
					case 190:
						return "CLUB_BLOCK_B" /* GXT: You can't enter this Nightclub while selling goods from another business. */;
					case 167:
						return "CLUB_BLOCK_C" /* GXT: You can't enter this Nightclub while acquiring goods for a warehouse. */;
					case 168:
						return "CLUB_BLOCK_D" /* GXT: You can't enter this Nightclub while selling goods from a warehouse. */;
					case 178:
						return "CLUB_BLOCK_E" /* GXT: You can't enter this Nightclub while acquiring a vehicle for a warehouse. */;
					case 188:
						return "CLUB_BLOCK_F" /* GXT: You can't enter this Nightclub while selling vehicles from a warehouse. */;
					case 225:
						return "CLUB_BLOCK_G" /* GXT: You can't enter this Nightclub while acquiring goods for a bunker. */;
					case 226:
						return "CLUB_BLOCK_H" /* GXT: You can't enter this Nightclub while selling goods from a bunker. */;
					case 229:
						return "CLUB_BLOCK_I" /* GXT: You can't enter this Nightclub while acquiring goods for a hangar. */;
					case 230:
						return "CLUB_BLOCK_J" /* GXT: You can't enter this Nightclub while selling goods from a hangar. */;
					default:
				}
			}
			else
			{
				switch (iVar2)
				{
					case 192:
						return "HUB_BLOCK_A" /* GXT: You can't enter this Nightclub Warehouse while resupplying another business. */;
					case 190:
						return "HUB_BLOCK_B" /* GXT: You can't enter this Nightclub Warehouse while selling goods from another business. */;
					case 167:
						return "HUB_BLOCK_C" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a warehouse. */;
					case 168:
						return "HUB_BLOCK_D" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a warehouse. */;
					case 178:
						return "HUB_BLOCK_E" /* GXT: You can't enter this Nightclub Warehouse while acquiring a vehicle for a warehouse. */;
					case 188:
						return "HUB_BLOCK_F" /* GXT: You can't enter this Nightclub Warehouse while selling vehicles from a warehouse. */;
					case 225:
						return "HUB_BLOCK_G" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a bunker. */;
					case 226:
						return "HUB_BLOCK_H" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a bunker. */;
					case 229:
						return "HUB_BLOCK_I" /* GXT: You can't enter this Nightclub Warehouse while acquiring goods for a hangar. */;
					case 230:
						return "HUB_BLOCK_J" /* GXT: You can't enter this Nightclub Warehouse while selling goods from a hangar. */;
					}
				}
			}
		default:
	}
	if (__LIB_3__::func_695())
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_K" /* GXT: You cannot enter your Nightclub with a prostitute. */;
		}
		else
		{
			return "HUB_BLOCK_K" /* GXT: You cannot enter your Nightclub Warehouse with a prostitute. */;
		}
	}
	if (__LIB_2__::func_906())
	{
		return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
	}
	if (__LIB_3__::func_694(PLAYER::PLAYER_ID()))
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_L" /* GXT: You can't access your Nightclub as the Beast. */;
		}
		else
		{
			return "HUB_BLOCK_L" /* GXT: You can't access your Nightclub Warehouse as the Beast. */;
		}
	}
	if ((__LIB_3__::func_693() && !__LIB_4__::func_381(__LIB_35__::func_559(PLAYER::PLAYER_ID()))) && !__LIB_3__::func_439(PLAYER::PLAYER_ID()))
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	iVar3 = 0;
	if ((iVar1 != __LIB_0__::func_162() && iVar1 != PLAYER::PLAYER_ID()) && __LIB_4__::func_337(iVar1, iVar0))
	{
		iVar3 = 1;
	}
	if (__LIB_1__::func_101(PLAYER::PLAYER_PED_ID()) && (__LIB_4__::func_337(PLAYER::PLAYER_ID(), iVar0) || iVar3))
	{
		if (iParam2 == 2 || iParam2 == 3)
		{
			return "CLUB_BLOCK_M" /* GXT: You can't access this Nightclub whilst wearing the Ballistic Equipment. */;
		}
		else
		{
			return "HUB_BLOCK_M" /* GXT: You can't access this Nightclub Warehouse whilst wearing the Ballistic Equipment. */;
		}
	}
	if (((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && iVar3) && !__LIB_4__::func_78(__LIB_5__::func_185(PLAYER::PLAYER_ID()))) && !__LIB_5__::func_192(PLAYER::PLAYER_ID()))
	{
		if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
		{
			if (iParam2 == 2 || iParam2 == 3)
			{
				return "CLUB_BLOCK_S" /* GXT: You cannot enter this Nightclub whilst in a vehicle. */;
			}
			else
			{
				return "HUB_BLOCK_S" /* GXT: You cannot enter this Nightclub Warehouse whilst in a vehicle. */;
			}
		}
	}
	if (__LIB_4__::func_337(PLAYER::PLAYER_ID(), iVar0) && !__LIB_5__::func_873(PLAYER::PLAYER_ID()))
	{
		if (__LIB_0__::func_536(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_1__::func_592(PLAYER::PLAYER_ID()) == 140)
			{
				if (iParam2 == 2 || iParam2 == 3)
				{
				}
				else
				{
					return "HUB_BLOCK_N" /* GXT: Your Nightclub Warehouse is unavailable whilst being a member of an MC. */;
				}
			}
		}
		else if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_4__::func_337(iVar1, iVar0))
			{
				if (__LIB_3__::func_673(iVar1))
				{
					if (iParam2 == 2 || iParam2 == 3)
					{
					}
					else
					{
						return "HUB_BLOCK_O" /* GXT: Your Nightclub Warehouse is unavailable when working as an Associate for a CEO. */;
					}
				}
				else if (iParam2 == 2 || iParam2 == 3)
				{
				}
				else
				{
					return "HUB_BLOCK_P" /* GXT: Your Nightclub Warehouse is unavailable when working as a Bodyguard for a VIP. */;
				}
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar6 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			iVar7 = __LIB_7__::func_772(iVar6, &uVar5, &uVar4);
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar6, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8))
			{
				iVar9 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar8);
				if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
				{
					if (!__LIB_5__::func_424(PLAYER::PLAYER_ID()))
					{
						if (__LIB_3__::func_690(iVar6))
						{
							return "CLUB_BLOCK_R" /* GXT: You cannot enter the Nightclub with the Mobile Operations Center. */;
						}
						else if ((((((__LIB_1__::func_589(iVar6) || __LIB_1__::func_819(ENTITY::GET_ENTITY_MODEL(iVar6))) || !__LIB_3__::func_561(ENTITY::GET_ENTITY_MODEL(iVar6), 15)) || __LIB_1__::func_590(ENTITY::GET_ENTITY_MODEL(iVar6))) || __LIB_1__::func_588(iVar6)) || __LIB_3__::func_689(iVar6)) || (__LIB_0__::func_872(iVar6, 1) && iVar7 != iVar9))
						{
							if (!__LIB_4__::func_379(__LIB_4__::func_380()))
							{
								return "CLUB_BLOCK_Q" /* GXT: You cannot enter the Nightclub with this vehicle. */;
							}
						}
					}
				}
			}
		}
	}
	return "";
}

int func_100(int iParam0)//Position - 0x163D36
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_4__::func_322(iParam0);
	if (iVar0 == 0)
	{
		return 0;
	}
	iVar1 = __LIB_2__::func_39(PLAYER::PLAYER_ID());
	if (iVar1 != __LIB_0__::func_162())
	{
		if (__LIB_4__::func_337(iVar1, iVar0))
		{
			if (__LIB_1__::func_907(iVar1, 0))
			{
				if ((((__LIB_5__::func_185(iVar1) == 237 && !__LIB_36__::func_51(iVar1)) && __LIB_4__::func_897(iVar1)) || (__LIB_5__::func_185(iVar1) == 238 && __LIB_4__::func_897(iVar1))) || (PLAYER::PLAYER_ID() != iVar1 && (!__LIB_4__::func_947(iVar1) || __LIB_0__::func_394(iVar1) == 0)))
				{
					return 1;
				}
			}
			return 0;
		}
		return 1;
	}
	if (__LIB_4__::func_337(PLAYER::PLAYER_ID(), iVar0))
	{
		return 0;
	}
	return 1;
}

int func_101(int iParam0)//Position - 0x393D1
{
	if (!__LIB_2__::func_50() && !__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
	{
		if (!__LIB_4__::func_897(PLAYER::PLAYER_ID()))
		{
			if (__LIB_3__::func_290())
			{
				return 1;
			}
		}
	}
	switch (iParam0)
	{
		case 148:
			break;
		case 151:
			break;
		case 152:
			break;
	}
	return 0;
}

int func_102(var uParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4, int iParam5)//Position - 0x3BBB3
{
	int iVar0;
	int iVar1;
	if (bParam3)
	{
		if (BitTest(Global_4541229, 28))
		{
			__LIB_15__::func_571();
			*bParam4 = 0;
		}
		return 0;
	}
	if (!__LIB_0__::func_864(uParam0))
	{
		if (bParam1)
		{
			__LIB_0__::func_795(uParam0, 0, 0);
			__LIB_11__::func_662(28);
		}
	}
	else if (__LIB_0__::func_937(uParam0, iParam5, 0))
	{
		if (bParam2)
		{
			if (!BitTest(Global_4541229, 28))
			{
				__LIB_15__::func_570();
				*bParam4 = 1;
			}
			if ((!__LIB_1__::func_731(28) && __LIB_9__::func_704(PLAYER::PLAYER_ID())) && __LIB_35__::func_553(0))
			{
				__LIB_0__::func_151("BBH_VISWARN" /* GXT: WARNING: You are visible ~HUD_COLOUR_RED~~BLIP_SIGHTSEER~~s~ to all players in session. */, -1);
				__LIB_36__::func_60(__LIB_5__::func_185(PLAYER::PLAYER_ID()), 0, 1);
				__LIB_11__::func_670(28);
			}
		}
		else if (BitTest(Global_4541229, 28))
		{
			__LIB_15__::func_571();
			*bParam4 = 0;
		}
		return 1;
	}
	else
	{
		iVar0 = (iParam5 - __LIB_1__::func_724(uParam0, 0, 0));
		if (iVar0 < 0)
		{
			iVar0 = 0;
		}
		iVar1 = 6;
		if (iVar0 > 5000)
		{
			iVar1 = 1;
		}
		__LIB_1__::func_350(iVar0, "GR_GLBPNG" /* GXT: GLOBAL SIGNAL */, 0, 0, -1, 0, 6, 0, iVar1, 0, 0, 0, iVar1, 0, 0, 0, 0, -1);
	}
	return 0;
}

char* func_103(int iParam0)//Position - 0x3CF17
{
	if (__LIB_2__::func_72(iParam0, 1))
	{
		return __LIB_13__::func_475(iParam0);
	}
	return PLAYER::GET_PLAYER_NAME(iParam0);
}

void func_104(int iParam0, var uParam1, bool bParam2, bool bParam3)//Position - 0xBB539
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (uParam1->f_66 != 0)
		{
		}
		if (!__LIB_32__::func_645(iParam0))
		{
			if (MISC::GET_HASH_KEY(&(uParam1->f_1)) != 0)
			{
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(iParam0, &(uParam1->f_1));
			}
			if (*uParam1 >= 0 && *uParam1 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
			{
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(iParam0, *uParam1);
			}
		}
		if (uParam1->f_66 == joaat("sovereign"))
		{
			uParam1->f_5 = 111;
			uParam1->f_6 = 111;
			uParam1->f_7 = 111;
		}
		else if (uParam1->f_66 == joaat("casco"))
		{
			iVar0 = 1;
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar0 + 1)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar0 + 1));
			}
		}
		else if (uParam1->f_66 == joaat("sandking") || uParam1->f_66 == joaat("sandking2"))
		{
			iVar1 = 1;
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar1 + 1)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar1 + 1));
			}
		}
		else if (uParam1->f_66 == joaat("formula") || uParam1->f_66 == joaat("formula2"))
		{
			iVar2 = 1;
			while (iVar2 <= 9)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar2)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar2));
				}
				iVar2++;
			}
		}
		else if (uParam1->f_66 == joaat("openwheel1"))
		{
			iVar3 = 1;
			while (iVar3 <= 6)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar3)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar3));
				}
				iVar3++;
			}
		}
		else if (uParam1->f_66 == joaat("openwheel2"))
		{
			iVar4 = 1;
			while (iVar4 <= 11)
			{
				if (iVar4 != 9 && iVar4 != 10)
				{
					if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar4)))
					{
					}
					else
					{
						MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar4));
					}
				}
				iVar4++;
			}
		}
		else if (uParam1->f_66 == joaat("dinghy5"))
		{
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(4)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(4));
			}
		}
		else if (uParam1->f_66 == joaat("coquette4"))
		{
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) != 0)
			{
				MISC::SET_BIT(&(uParam1->f_77), 0);
			}
		}
		else if (uParam1->f_66 == joaat("yosemite2"))
		{
			MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(1));
		}
		else if (uParam1->f_66 == joaat("hotknife"))
		{
			iVar5 = 1;
			while (iVar5 <= 2)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar5)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar5));
				}
				iVar5++;
			}
		}
		if (uParam1->f_66 == joaat("nightshark"))
		{
			VEHICLE::SET_DONT_PROCESS_VEHICLE_GLASS(iParam0, false);
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 5) != -1)
			{
				VEHICLE::SET_DONT_PROCESS_VEHICLE_GLASS(iParam0, true);
			}
		}
		if (BitTest(uParam1->f_77, 13))
		{
			VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(iParam0, uParam1->f_71, uParam1->f_72, uParam1->f_73);
		}
		else
		{
			VEHICLE::CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(iParam0);
		}
		if (BitTest(uParam1->f_77, 12))
		{
			VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(iParam0, uParam1->f_71, uParam1->f_72, uParam1->f_73);
		}
		else
		{
			VEHICLE::CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(iParam0);
		}
		if (uParam1->f_5 != -1 && uParam1->f_6 != -1)
		{
			if (__LIB_0__::func_524(uParam1->f_5) || __LIB_0__::func_524(uParam1->f_6))
			{
			}
			else
			{
				VEHICLE::SET_VEHICLE_COLOURS(iParam0, uParam1->f_5, uParam1->f_6);
			}
		}
		if (uParam1->f_7 < 0)
		{
			uParam1->f_7 = 0;
		}
		if (uParam1->f_8 < 0)
		{
			uParam1->f_8 = 0;
		}
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(iParam0, uParam1->f_7, uParam1->f_8);
		if (((BitTest(uParam1->f_77, 15) || __LIB_0__::func_318(iParam0)) || (((uParam1->f_62 == 0 && uParam1->f_63 == 0) && uParam1->f_64 == 0) && uParam1->f_9[20] > 0)) && __LIB_0__::func_291())
		{
			uParam1->f_62 = 0;
			uParam1->f_63 = 0;
			uParam1->f_64 = 0;
		}
		else if ((uParam1->f_62 == 0 && uParam1->f_63 == 0) && uParam1->f_64 == 0)
		{
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
		}
		VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(iParam0, uParam1->f_62, uParam1->f_63, uParam1->f_64);
		if (uParam1->f_65 == -1 && !__LIB_0__::func_111(uParam1->f_66))
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, 0);
		}
		else
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, 0);
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, uParam1->f_65);
		}
		if (BitTest(uParam1->f_77, 9))
		{
			VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, false);
			VEHICLE::SET_DRIFT_TYRES(iParam0, false);
		}
		if (bParam2)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, uParam1->f_70);
		}
		VEHICLE::SET_VEHICLE_NEON_COLOUR(iParam0, uParam1->f_74, uParam1->f_75, uParam1->f_76);
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 2, BitTest(uParam1->f_77, 28));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 3, BitTest(uParam1->f_77, 29));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 0, BitTest(uParam1->f_77, 30));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 1, BitTest(uParam1->f_77, 31));
		VEHICLE::SET_VEHICLE_IS_STOLEN(iParam0, BitTest(uParam1->f_77, 10));
		if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(iParam0) > 1 && uParam1->f_67 >= 0)
		{
			VEHICLE::SET_VEHICLE_LIVERY(iParam0, uParam1->f_67);
		}
		if (uParam1->f_69 > -1 && uParam1->f_69 < 255)
		{
			if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))
				{
					if (uParam1->f_69 == 6)
					{
						__LIB_0__::func_317(iParam0, uParam1->f_69);
					}
				}
				else
				{
					__LIB_0__::func_317(iParam0, uParam1->f_69);
				}
			}
		}
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(iParam0, false))
		{
			if ((uParam1->f_68 == 0 || uParam1->f_68 == 3) || uParam1->f_68 == 5)
			{
				VEHICLE::RAISE_CONVERTIBLE_ROOF(iParam0, true);
			}
			else
			{
				VEHICLE::LOWER_CONVERTIBLE_ROOF(iParam0, true);
			}
		}
		if (bParam3)
		{
			__LIB_0__::func_372(&iParam0, &(uParam1->f_9), &(uParam1->f_59));
		}
		if (!VEHICLE::IS_THIS_MODEL_A_HELI(uParam1->f_66) && !VEHICLE::IS_THIS_MODEL_A_BOAT(uParam1->f_66))
		{
			iVar6 = 0;
			while (iVar6 <= 11)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar6 + 1)))
				{
					if (!VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, iVar6 + 1))
					{
						VEHICLE::SET_VEHICLE_EXTRA(iParam0, iVar6 + 1, false);
					}
				}
				else if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, iVar6 + 1))
				{
					VEHICLE::SET_VEHICLE_EXTRA(iParam0, iVar6 + 1, true);
				}
				iVar6++;
			}
		}
		if ((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("sheava") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("omnis")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("le7b"))
		{
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 0) == -1)
			{
				VEHICLE::SET_VEHICLE_EXTRA(iParam0, 1, false);
			}
		}
		if (((__LIB_5__::func_705() && VEHICLE::IS_THIS_MODEL_A_PLANE(uParam1->f_66)) && VEHICLE::GET_VEHICLE_HAS_LANDING_GEAR(iParam0)) && !VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("avenger")))
		{
			if (!BitTest(uParam1->f_77, 23))
			{
				if (BitTest(uParam1->f_77, 22))
				{
					VEHICLE::CONTROL_LANDING_GEAR(iParam0, 2);
				}
				else
				{
					VEHICLE::CONTROL_LANDING_GEAR(iParam0, 3);
				}
			}
			else
			{
				VEHICLE::CONTROL_LANDING_GEAR(iParam0, 4);
			}
		}
		if (BitTest(uParam1->f_77, 27))
		{
			DECORATOR::DECOR_SET_BOOL(iParam0, "IgnoredByQuickSave", true);
		}
		else
		{
			DECORATOR::DECOR_SET_BOOL(iParam0, "IgnoredByQuickSave", false);
		}
	}
}

int func_105(int iParam0)//Position - 0xD0D36
{
	if (iParam0 != __LIB_0__::func_162())
	{
		if (__LIB_1__::func_907(iParam0, 0))
		{
			if ((__LIB_5__::func_185(iParam0) == 237 && !__LIB_36__::func_51(iParam0)) || __LIB_5__::func_185(iParam0) == 238)
			{
				return 0;
			}
		}
		return 1;
	}
	return 0;
}

void func_106(var uParam0, int iParam1, var uParam2)//Position - 0x15CC9B
{
	bool bVar0;
	bool bVar1;
	bVar0 = true;
	if (!__LIB_3__::func_595(PLAYER::PLAYER_ID(), 0) && !__LIB_3__::func_595(PLAYER::PLAYER_ID(), 1))
	{
		bVar0 = __LIB_4__::func_375();
	}
	bVar1 = false;
	while (bVar1 < __LIB_3__::func_778(iParam1->f_6, 9))
	{
		switch (bVar1)
		{
			case 0:
				if (!__LIB_4__::func_897(PLAYER::PLAYER_ID()))
				{
					__LIB_5__::func_426(iParam1, bVar1, 1);
				}
				else
				{
					__LIB_5__::func_426(iParam1, bVar1, 0);
				}
				break;
			case 1:
				if ((__LIB_4__::func_350(PLAYER::PLAYER_ID()) && !__LIB_36__::func_53(PLAYER::PLAYER_ID())) && bVar0)
				{
					__LIB_5__::func_426(iParam1, bVar1, 1);
				}
				else
				{
					__LIB_5__::func_426(iParam1, bVar1, 0);
				}
				break;
			case 2:
				if ((__LIB_4__::func_349(PLAYER::PLAYER_ID()) && !__LIB_36__::func_53(PLAYER::PLAYER_ID())) && bVar0)
				{
					__LIB_5__::func_426(iParam1, bVar1, 1);
				}
				else
				{
					__LIB_5__::func_426(iParam1, bVar1, 0);
				}
				break;
			case 3:
				if ((__LIB_4__::func_348(PLAYER::PLAYER_ID()) && !__LIB_36__::func_53(PLAYER::PLAYER_ID())) && bVar0)
				{
					__LIB_5__::func_426(iParam1, bVar1, 1);
				}
				else
				{
					__LIB_5__::func_426(iParam1, bVar1, 0);
				}
				break;
			case 4:
				if ((((__LIB_4__::func_280(PLAYER::PLAYER_ID()) && !__LIB_1__::func_847(PLAYER::PLAYER_ID())) && !__LIB_1__::func_848(PLAYER::PLAYER_ID())) && !__LIB_36__::func_53(PLAYER::PLAYER_ID())) && bVar0)
				{
					__LIB_5__::func_426(iParam1, bVar1, 1);
				}
				else
				{
					__LIB_5__::func_426(iParam1, bVar1, 0);
				}
				break;
		}
		bVar1++;
	}
	switch (iParam1->f_5)
	{
		case 0:
			if (__LIB_4__::func_897(PLAYER::PLAYER_ID()))
			{
				__LIB_1__::func_789("HUB_F0_BLCK" /* GXT: Unavailable whilst on a mission. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("HUB_ENT_F0_H" /* GXT: Go to Nightclub Service Entrance. */, 0, 0);
			}
			break;
		case 1:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (__LIB_36__::func_53(PLAYER::PLAYER_ID()) || !bVar0)
				{
					__LIB_1__::func_789("HUB_VEH_HELP_3" /* GXT: This floor is currently unavailable. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("HUB_VEH_HELP_2" /* GXT: Go to foreclosures.maze-bank.com to purchase this garage floor. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("HUB_ENT_F2_H" /* GXT: Go to Garage Level B2. */, 0, 0);
			}
			break;
		case 2:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (__LIB_36__::func_53(PLAYER::PLAYER_ID()) || !bVar0)
				{
					__LIB_1__::func_789("HUB_VEH_HELP_3" /* GXT: This floor is currently unavailable. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("HUB_VEH_HELP_2" /* GXT: Go to foreclosures.maze-bank.com to purchase this garage floor. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("HUB_ENT_F3_H" /* GXT: Go to Garage Level B3. */, 0, 0);
			}
			break;
		case 3:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (__LIB_36__::func_53(PLAYER::PLAYER_ID()) || !bVar0)
				{
					__LIB_1__::func_789("HUB_VEH_HELP_3" /* GXT: This floor is currently unavailable. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("HUB_VEH_HELP_2" /* GXT: Go to foreclosures.maze-bank.com to purchase this garage floor. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("HUB_ENT_F4_H" /* GXT: Go to Garage Level B4. */, 0, 0);
			}
			break;
		case 4:
			if (BitTest(iParam1->f_4, iParam1->f_5))
			{
				if (__LIB_36__::func_53(PLAYER::PLAYER_ID()) || !bVar0)
				{
					__LIB_1__::func_789("HUB_VEH_HELP_3" /* GXT: This floor is currently unavailable. */, 0, 0);
				}
				else if (__LIB_4__::func_280(PLAYER::PLAYER_ID()) && (__LIB_1__::func_847(PLAYER::PLAYER_ID()) || __LIB_1__::func_848(PLAYER::PLAYER_ID())))
				{
					__LIB_1__::func_789("HUB_VEH_HELP_4" /* GXT: Unavailable whilst the Terrorbyte is outside. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("PIM_HCKTRNO" /* GXT: You do not currently own a Terrorbyte. Purchase one at www.warstock-cache-and-carry.com. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("HUB_ENT_F5_H" /* GXT: Go to Terrorbyte Garage Level B5. */, 0, 0);
			}
			break;
	}
}

int func_107()//Position - 0x3D19E
{
	if ((__LIB_4__::func_946(PLAYER::PLAYER_ID(), 0) && Global_1581350 == 1) && __LIB_36__::func_59())
	{
		return 1;
	}
	return 0;
}

int func_108()//Position - 0x41A18
{
	if (__LIB_9__::func_704(PLAYER::PLAYER_ID()) && __LIB_1__::func_637(__LIB_0__::func_797()))
	{
		if (__LIB_0__::func_797() == PLAYER::PLAYER_ID())
		{
			__LIB_3__::func_198("MBOT_REQTERb" /* GXT: Request your Terrorbyte. */, 0);
			if (!__LIB_1__::func_731(27) && __LIB_35__::func_553(0))
			{
				__LIB_0__::func_151("MBH_REQTERb" /* GXT: The Terrorbyte is required for the initial stages of the Job. Request it again nearby via the Services section of the Interaction Menu. */, -1);
				__LIB_11__::func_670(27);
			}
		}
		else
		{
			__LIB_20__::func_112("MBOT_REQTERg" /* GXT: Wait for <C>~a~</C>~s~ to request their Terrorbyte. */, __LIB_0__::func_797(), 1, 0);
			if (!__LIB_1__::func_731(27) && __LIB_35__::func_553(0))
			{
				__LIB_9__::func_21("MBH_REQTERg" /* GXT: The Terrorbyte is required for the initial stages of the Job. Wait for ~a~~s~ to request it again nearby via the Services section of the Interaction Menu. */, PLAYER::GET_PLAYER_NAME(__LIB_0__::func_797()), 0, -1);
				__LIB_11__::func_670(27);
			}
		}
		return 1;
	}
	__LIB_11__::func_662(27);
	return 0;
}

int func_109(int iParam0, var* uParam1)//Position - 0xB4EA0
{
	int iVar0;
	int iVar1;
	if (!__LIB_36__::func_69(iParam0, uParam1))
	{
		return 1;
	}
	iVar0 = 0;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		iVar0 = GRAPHICS::GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(iParam0, 0);
	}
	if (iVar0 == 0)
	{
		if (!__LIB_1__::func_524(iParam0))
		{
			iVar1 = NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(uParam1);
			if (__LIB_1__::func_541(&iParam0, iVar1))
			{
			}
			else
			{
				return 1;
			}
		}
		else
		{
			return 1;
		}
	}
	else if (iVar0 >= 3)
	{
		return 1;
	}
	else if (__LIB_1__::func_523(iParam0))
	{
	}
	return 0;
}

void func_110(bool bParam0, var uParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, bool bParam9, int iParam10, bool bParam11)//Position - 0x204A6A
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4[3];
	int iVar5[3];
	int iVar6;
	int iVar7;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	if (bParam9)
	{
		iVar0 = __LIB_1__::func_592(PLAYER::PLAYER_ID());
		Global_1944213.f_4 = __LIB_2__::func_476();
		Global_1944213.f_5 = __LIB_2__::func_475();
		if (__LIB_1__::func_17(PLAYER::PLAYER_ID()) || __LIB_3__::func_131(PLAYER::PLAYER_ID()))
		{
			Global_1944213.f_6 = 1;
		}
		else
		{
			Global_1944213.f_6 = 0;
		}
		Global_1944213.f_1 = __LIB_36__::func_55(bParam9);
		Global_1944213.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944213.f_9 = __LIB_1__::func_137(bParam0);
		Global_1944213.f_10 = uParam1;
		Global_1944213.f_17 = Global_1944213.f_2;
		Global_1944213.f_18 = Global_1944213.f_2;
		Global_1944213.f_19 = __LIB_9__::func_294();
		Global_1944213.f_21 = (Global_1944213.f_8 - Global_1944213.f_7);
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944213.f_23 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		Global_1944213.f_24 = __LIB_12__::func_540(PLAYER::PLAYER_ID());
		Global_1944213.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		if (Global_1944213.f_24 > 2)
		{
			Global_1944213.f_24 = 2;
		}
		__LIB_15__::func_471(iVar0);
	}
	else if (bParam11)
	{
	}
	else
	{
		iVar0 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
	}
	if ((__LIB_12__::func_654(iVar0) || iVar0 == 293) || iVar0 == 291)
	{
		Global_1943947.f_2 = __LIB_2__::func_476();
		Global_1943947.f_3 = __LIB_2__::func_475();
		Global_1943947.f_50 = iParam4;
		Global_1943947.f_51 = iParam5;
		Global_1943947.f_10 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1943947.f_20 = (Global_1943947.f_10 - Global_1943947.f_9);
		Global_1943947.f_12 = uParam1;
		Global_1943947.f_19 = __LIB_15__::func_652(iVar0, bParam0, __LIB_15__::func_470(bParam3));
		if (bParam0)
		{
			Global_1943947.f_11 = 1;
		}
		else
		{
			Global_1943947.f_11 = 0;
		}
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1943947.f_8 = 1;
		}
		else
		{
			Global_1943947.f_8 = 0;
		}
		Global_1943947.f_54 = __LIB_9__::func_960(1);
		Global_1943947.f_55 = __LIB_9__::func_960(0);
		if (iParam2 != 0)
		{
			Global_1943947.f_43 = 0;
			Global_1943947.f_45 = __LIB_7__::func_930(__LIB_0__::func_797(), iParam2);
			Global_1943947.f_47 = iParam7;
			Global_1943947.f_46 = iParam6;
			Global_1943947.f_52 = __LIB_15__::func_628(__LIB_0__::func_797(), iParam2);
		}
		__LIB_15__::func_469(iVar0);
	}
	else if (__LIB_12__::func_499(iVar0))
	{
		Global_1944003.f_2 = __LIB_2__::func_476();
		Global_1944003.f_3 = __LIB_2__::func_475();
		Global_1944003.f_10 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944003.f_19 = (Global_1944003.f_10 - Global_1944003.f_9);
		Global_1944003.f_12 = uParam1;
		if (bParam0)
		{
			Global_1944003.f_11 = 1;
		}
		else
		{
			Global_1944003.f_11 = 0;
		}
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944003.f_8 = 1;
		}
		else
		{
			Global_1944003.f_8 = 0;
		}
		__LIB_15__::func_468(iVar0);
	}
	else if (((__LIB_4__::func_740(iVar0) || iVar0 == 297) || iVar0 == 296) || iVar0 == 298)
	{
		Global_1944066.f_2 = __LIB_2__::func_476();
		Global_1944066.f_3 = __LIB_2__::func_475();
		Global_1944066.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944066.f_18 = (Global_1944066.f_9 - Global_1944066.f_8);
		Global_1944066.f_11 = uParam1;
		Global_1944066.f_7 = __LIB_9__::func_294();
		Global_1944066.f_42 = __LIB_15__::func_347(__LIB_0__::func_5(), 5);
		iVar1 = PLAYER::PLAYER_ID();
		iVar2 = __LIB_4__::func_566(iVar1);
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944066.f_17 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		else
		{
			Global_1944066.f_17 = __LIB_1__::func_136(PLAYER::PLAYER_ID());
		}
		Global_1944066.f_28 = iVar2;
		Global_1944066.f_29 = __LIB_1__::func_137((__LIB_11__::func_981(iVar1) || __LIB_11__::func_980(iVar1)));
		Global_1944066.f_30 = __LIB_1__::func_137(__LIB_4__::func_719(iVar1));
		Global_1944066.f_32 = __LIB_1__::func_137(__LIB_4__::func_673(iVar1));
		Global_1944066.f_33 = __LIB_1__::func_137(__LIB_2__::func_678(iVar1));
		Global_1944066.f_34 = __LIB_1__::func_137(__LIB_10__::func_102(iVar1));
		Global_1944066.f_35 = __LIB_1__::func_137(__LIB_4__::func_634(0, iVar1) == 1);
		Global_1944066.f_36 = __LIB_1__::func_137(__LIB_3__::func_928(iVar1));
		Global_1944066.f_37 = __LIB_1__::func_137(__LIB_0__::func_389(iVar1));
		Global_1944066.f_38 = __LIB_1__::func_137(__LIB_4__::func_633(iVar1));
		Global_1944066.f_39 = __LIB_1__::func_137(__LIB_7__::func_967(iVar1, iVar2, 0));
		Global_1944066.f_40 = __LIB_1__::func_137(__LIB_7__::func_967(iVar1, iVar2, 2));
		Global_1944066.f_41 = __LIB_1__::func_137(__LIB_7__::func_967(iVar1, iVar2, 1));
		if (__LIB_12__::func_517(iVar1))
		{
			Global_1944066.f_31 = 2;
		}
		else if (__LIB_12__::func_516(iVar1))
		{
			Global_1944066.f_31 = 1;
		}
		if (bParam0)
		{
			Global_1944066.f_10 = 1;
		}
		else
		{
			Global_1944066.f_10 = 0;
		}
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944066.f_6 = 1;
		}
		else
		{
			Global_1944066.f_6 = 0;
		}
		Global_1944066.f_21 = -2;
		Global_1944066.f_22 = -2;
		__LIB_15__::func_467(iVar0);
	}
	else if (__LIB_1__::func_612(iVar0))
	{
		Global_1944113.f_2 = __LIB_2__::func_476();
		Global_1944113.f_3 = __LIB_2__::func_475();
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944113.f_6 = 1;
		}
		else
		{
			Global_1944113.f_6 = 0;
		}
		Global_1944113.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944113.f_10 = __LIB_1__::func_137(bParam0);
		Global_1944113.f_11 = uParam1;
		Global_1944113.f_17 = __LIB_5__::func_491(__LIB_1__::func_730());
		Global_1944113.f_18 = (Global_1944113.f_9 - Global_1944113.f_8);
		Global_1944113.f_20 = iParam8;
		Global_1944113.f_21 = -2;
		Global_1944113.f_22 = -2;
		Global_1944113.f_27 = __LIB_1__::func_888();
		Global_1944113.f_29 = __LIB_1__::func_360(6110, -1, 0);
		Global_1944113.f_30 = __LIB_1__::func_360(6106, -1, 0);
		Global_1944113.f_31 = __LIB_1__::func_360(6107, -1, 0);
		Global_1944113.f_32 = __LIB_1__::func_360(6109, -1, 0);
		Global_1944113.f_33 = __LIB_1__::func_360(6108, -1, 0);
		Global_1944113.f_34 = __LIB_1__::func_360(6111, -1, 0);
		Global_1944113.f_36 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944113.f_37 = __LIB_15__::func_651();
		__LIB_15__::func_369();
		__LIB_15__::func_465(iVar0);
	}
	else if (__LIB_1__::func_77(iVar0))
	{
		Global_1944167.f_2 = __LIB_2__::func_476();
		Global_1944167.f_3 = __LIB_2__::func_475();
		Global_1944167.f_1 = iParam10;
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944167.f_6 = 1;
		}
		else
		{
			Global_1944167.f_6 = 0;
		}
		Global_1944167.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944167.f_10 = __LIB_1__::func_137(bParam0);
		Global_1944167.f_11 = uParam1;
		Global_1944167.f_18 = (Global_1944167.f_9 - Global_1944167.f_8);
		Global_1944167.f_20 = iParam8;
		Global_1944167.f_23 = Global_786547;
		Global_1944167.f_36 = Global_786547.f_1;
		Global_1944167.f_24 = __LIB_1__::func_360(6160, -1, 0);
		Global_1944167.f_25 = __LIB_1__::func_360(6165, -1, 0);
		Global_1944167.f_26 = __LIB_1__::func_360(6166, -1, 0);
		Global_1944167.f_27 = __LIB_1__::func_137((((__LIB_2__::func_934() || __LIB_13__::func_355()) || __LIB_13__::func_354()) || __LIB_1__::func_641(PLAYER::PLAYER_ID())));
		Global_1944167.f_28 = __LIB_1__::func_360(6167, -1, 0);
		Global_1944167.f_29 = __LIB_1__::func_137(__LIB_9__::func_118());
		Global_1944167.f_35 = -1;
		Global_1944167.f_38 = -1;
		Global_1944167.f_39 = Global_1944167.f_4;
		Global_1944167.f_40 = Global_1944167.f_5;
		Global_1944167.f_41 = __LIB_2__::func_476();
		Global_1944167.f_42 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944167.f_44 = Global_1944167.f_18;
		__LIB_15__::func_464(iVar0);
	}
	else if (__LIB_36__::func_47(iVar0))
	{
		if (Global_1944303.f_2 == -1)
		{
			Global_1944303.f_2 = __LIB_2__::func_476();
		}
		if (Global_1944303.f_3 == -1)
		{
			Global_1944303.f_3 = __LIB_2__::func_475();
		}
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944303.f_6 = 1;
		}
		else
		{
			Global_1944303.f_6 = 0;
		}
		Global_1944303.f_1 = __LIB_36__::func_55(0);
		Global_1944303.f_7 = __LIB_9__::func_294();
		Global_1944303.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944303.f_10 = __LIB_1__::func_137(bParam0);
		Global_1944303.f_11 = uParam1;
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944303.f_17 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944303.f_18 = (Global_1944303.f_9 - Global_1944303.f_8);
		Global_1944303.f_19 = Global_2815059.f_6745;
		Global_1944303.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		Global_1944303.f_29 = __LIB_1__::func_137(__LIB_12__::func_515(PLAYER::PLAYER_ID()));
		Global_1944303.f_30 = __LIB_1__::func_137(__LIB_4__::func_333(PLAYER::PLAYER_ID()));
		Global_1944303.f_31 = __LIB_4__::func_280(PLAYER::PLAYER_ID());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944303.f_33 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (Global_1944303.f_34 > 2)
		{
			Global_1944303.f_34 = 2;
		}
		Global_1944303.f_41 = __LIB_15__::func_328(iVar0);
		__LIB_15__::func_463(iVar0);
	}
	else if (__LIB_15__::func_326(iVar0))
	{
		Global_1944249.f_2 = __LIB_2__::func_476();
		Global_1944249.f_3 = __LIB_2__::func_475();
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944249.f_6 = 1;
		}
		else
		{
			Global_1944249.f_6 = 0;
		}
		Global_1944249.f_1 = __LIB_36__::func_55(0);
		Global_1944249.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944249.f_10 = __LIB_1__::func_137(bParam0);
		Global_1944249.f_11 = uParam1;
		Global_1944249.f_18 = (Global_1944249.f_9 - Global_1944249.f_8);
		Global_1944249.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		if (Global_1944249.f_28)
		{
			Global_1944249.f_29 = __LIB_15__::func_475(PLAYER::PLAYER_ID());
		}
		else
		{
			Global_1944249.f_29 = 0;
		}
		Global_1944249.f_30 = __LIB_13__::func_383(PLAYER::PLAYER_ID(), 4, -1);
		Global_1944249.f_31 = __LIB_4__::func_280(PLAYER::PLAYER_ID());
		Global_1944249.f_32 = __LIB_1__::func_137(__LIB_4__::func_355(PLAYER::PLAYER_ID()));
		Global_1944249.f_33 = __LIB_1__::func_137(__LIB_4__::func_354(PLAYER::PLAYER_ID()));
		Global_1944249.f_34 = __LIB_1__::func_137(__LIB_4__::func_353(PLAYER::PLAYER_ID()));
		Global_1944249.f_35 = __LIB_1__::func_137(__LIB_4__::func_352(PLAYER::PLAYER_ID()));
		Global_1944249.f_36 = __LIB_12__::func_512(PLAYER::PLAYER_ID());
		Global_1944249.f_37 = __LIB_6__::func_552(PLAYER::PLAYER_ID());
		Global_1944249.f_39 = __LIB_12__::func_511(PLAYER::PLAYER_ID());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944249.f_41 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (Global_1944249.f_42 > 2)
		{
			Global_1944249.f_42 = 2;
		}
		__LIB_15__::func_462(iVar0);
	}
	else if (__LIB_12__::func_747(iVar0))
	{
		Global_1944390.f_2 = __LIB_2__::func_476();
		Global_1944390.f_3 = __LIB_2__::func_475();
		Global_1944390.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944390.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
		{
			Global_1944390.f_6 = 1;
		}
		else
		{
			Global_1944390.f_6 = 0;
		}
		Global_1944390.f_7 = __LIB_9__::func_294();
		Global_1944390.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944390.f_10 = __LIB_1__::func_137(bParam0);
		Global_1944390.f_11 = uParam1;
		if (__LIB_1__::func_730() != -1)
		{
			Global_1944390.f_17 = __LIB_1__::func_136(__LIB_1__::func_730());
		}
		Global_1944390.f_18 = (Global_1944390.f_9 - Global_1944390.f_8);
		Global_1944390.f_21 = 1;
		Global_1944390.f_22 = 1;
		Global_1944390.f_25 = __LIB_24__::func_56(PLAYER::PLAYER_ID());
		Global_1944390.f_27 = __LIB_1__::func_137(__LIB_1__::func_124(PLAYER::PLAYER_ID()));
		Global_1944390.f_28 = __LIB_2__::func_771(21, -1);
		Global_1944390.f_29 = __LIB_1__::func_137(__LIB_1__::func_341(PLAYER::PLAYER_ID()));
		__LIB_15__::func_351(iVar0);
	}
	else if (__LIB_4__::func_184(iVar0))
	{
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944465.f_6 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944465.f_7 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944465.f_8 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		Global_1944465.f_10 = __LIB_9__::func_294();
		Global_1944465.f_11 = 1;
		Global_1944465.f_13 = (NETWORK::GET_CLOUD_TIME_AS_INT() - Global_1973074);
		Global_1944465.f_14 = uParam1;
		Global_1944465.f_19 = 1;
		Global_1944465.f_20 = 1;
		__LIB_15__::func_461(iVar0);
	}
	else if (__LIB_11__::func_619(iVar0))
	{
		Global_1944552.f_2 = __LIB_2__::func_476();
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944552.f_6 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944552.f_7 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		Global_1944552.f_8 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944552.f_10 = __LIB_9__::func_294();
		Global_1944552.f_11 = 1;
		Global_1944552.f_14 = uParam1;
		__LIB_15__::func_460(iVar0);
	}
	else if (__LIB_12__::func_510(iVar0))
	{
		Global_1944664.f_2 = __LIB_2__::func_476();
		Global_1944664.f_9 = 1;
		Global_1944664.f_10 = bParam0;
		Global_1944664.f_11 = uParam1;
		__LIB_15__::func_459(iVar0);
	}
	else if (__LIB_3__::func_691(iVar0) || __LIB_15__::func_310(iVar0))
	{
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944685.f_5 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944685.f_6 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		Global_1944685.f_7 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944685.f_9 = __LIB_9__::func_294();
		Global_1944685.f_10 = 1;
		Global_1944685.f_13 = uParam1;
		Global_1944685.f_33 = bParam0;
		Global_1944685.f_32 = iVar0;
		__LIB_15__::func_458(iVar0);
	}
	else if (__LIB_15__::func_309(iVar0) || __LIB_15__::func_308(iVar0))
	{
		iVar3 = __LIB_0__::func_797();
		if (iVar3 != -1)
		{
			Global_1944754.f_7 = __LIB_2__::func_477(iVar3);
			Global_1944754.f_8 = __LIB_2__::func_552(iVar3);
		}
		Global_1944754.f_9 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944754.f_11 = __LIB_9__::func_294();
		Global_1944754.f_12 = 1;
		Global_1944754.f_15 = bParam0;
		Global_1944754.f_3 = __LIB_2__::func_476();
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944754.f_9 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		else
		{
			Global_1944754.f_9 = -1;
		}
		if (__LIB_15__::func_309(iVar0))
		{
			Global_1944754.f_4 = __LIB_15__::func_320(__LIB_24__::func_55(PLAYER::PLAYER_ID()));
		}
		else
		{
			Global_1944754.f_4 = __LIB_15__::func_319(__LIB_24__::func_54(PLAYER::PLAYER_ID()));
		}
		Global_1944754.f_1 = iVar0;
		Global_1944754.f_16 = uParam1;
		iVar7 = PLAYER::PLAYER_ID();
		if (iVar3 != -1)
		{
			iVar7 = iVar3;
		}
		iVar6 = 0;
		while (iVar6 < 3)
		{
			iVar4[iVar6] = __LIB_15__::func_318(__LIB_13__::func_128(iVar7, iVar6));
			iVar5[iVar6] = __LIB_15__::func_317(__LIB_13__::func_129(iVar7, iVar6));
			iVar6++;
		}
		__LIB_15__::func_457(iVar0, &iVar4, &iVar5);
	}
	else
	{
		Global_1943929.f_6 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (bParam0)
		{
			Global_1943929.f_7 = 1;
		}
		else
		{
			Global_1943929.f_7 = 0;
		}
		Global_1943929.f_8 = uParam1;
		if (Global_1943929.f_4 == 0)
		{
			if ((__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_15__::func_291(PLAYER::PLAYER_ID())) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
			{
				Global_1943929.f_4 = 1;
			}
		}
	}
}

int func_111(int iParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, char* sParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10)//Position - 0x38FB4
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__::func_162();
	iVar1 = __LIB_0__::func_162();
	iVar2 = __LIB_0__::func_162();
	return __LIB_36__::func_79(iParam0, sParam1, sParam2, sParam3, iParam4, iVar0, iVar1, iVar2, sParam5, iParam6, iParam7, iParam8, iParam9, iParam10, 2);
}

void func_112(var uParam0, int iParam1)//Position - 0x1D49B0
{
	int iVar0;
	struct<3> Var1;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (iParam1 <= 0 && iVar0 <= 0)
		{
			__LIB_11__::func_776(uParam0);
		}
		switch (iVar0)
		{
			case 0:
				if (__LIB_1__::func_693(PLAYER::INT_TO_PLAYERINDEX(iParam1), 0, 1))
				{
					if (__LIB_10__::func_332())
					{
						if (__LIB_36__::func_70(PLAYER::PLAYER_ID()))
						{
							if (__LIB_13__::func_558(PLAYER::INT_TO_PLAYERINDEX(iParam1)))
							{
								if (__LIB_2__::func_50())
								{
									if (__LIB_2__::func_759(PLAYER::INT_TO_PLAYERINDEX(iParam1), PLAYER::PLAYER_ID(), 0))
									{
										Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
										__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
									}
								}
								else if (__LIB_2__::func_759(PLAYER::INT_TO_PLAYERINDEX(iParam1), __LIB_0__::func_797(), 1))
								{
									if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
									{
										Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
										__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
									}
								}
							}
						}
						else if (__LIB_1__::func_17(PLAYER::PLAYER_ID()))
						{
							if (__LIB_1__::func_386(PLAYER::INT_TO_PLAYERINDEX(iParam1), __LIB_1__::func_592(PLAYER::PLAYER_ID())))
							{
								if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
								{
									Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
									__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
								}
							}
						}
						else if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
						{
							Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
							__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
						}
					}
					else
					{
						Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
						__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
					}
				}
				break;
			case 1:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1063[iParam1 /*3*/], iParam1);
				break;
			case 2:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1160[iParam1 /*3*/], iParam1);
				break;
			case 3:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1257[iParam1 /*3*/], iParam1);
				break;
			case 4:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1354[iParam1 /*3*/], iParam1);
				break;
		}
		if (iParam1 >= 31 && iVar0 >= 4)
		{
			__LIB_13__::func_565(uParam0);
		}
		iVar0++;
	}
}

void func_113(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4, bool bParam5)//Position - 0x4231A
{
	int iVar0;
	var uVar1;
	int iVar2;
	int iVar3;
	if (bParam5)
	{
		iVar0 = __LIB_1__::func_592(PLAYER::PLAYER_ID());
		Global_1944213 = iVar0;
		Global_1944213.f_1 = iParam0;
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944213.f_2 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944213.f_3 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944213.f_2), &(Global_1944213.f_3));
		}
		Global_1944213.f_7 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944213.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		Global_1944213.f_13 = 0;
		Global_1944213.f_14 = 0;
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944213.f_23 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
	}
	else
	{
		iVar0 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
	}
	if (((iParam2 || __LIB_12__::func_654(iVar0)) || iVar0 == 293) || iVar0 == 291)
	{
		if (iParam3 != -1 && iParam2)
		{
			iVar0 = iParam3;
		}
		Global_1943947 = iVar0;
		if (__LIB_3__::func_709(iVar0) || iVar0 == 293)
		{
			Global_1943947.f_1 = 4;
		}
		else if (__LIB_3__::func_710(iVar0))
		{
			Global_1943947.f_1 = 5;
		}
		else if (__LIB_1__::func_695(iVar0, 0))
		{
			Global_1943947.f_1 = 2;
			if (__LIB_15__::func_311(iVar0))
			{
				Global_1943947.f_1 = 3;
			}
		}
		else
		{
			Global_1943947.f_1 = 1;
		}
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1943947.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1943947.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1943947.f_6), &(Global_1943947.f_7));
		}
		Global_1943947.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (iVar0 == 148 || iVar0 == 179)
		{
			Global_1943947.f_27 = 1;
			Global_1943947.f_28 = 1;
		}
		if (iParam0 != -1)
		{
			Global_1943947.f_26 = iParam0;
		}
		if (iParam1 != 0)
		{
			Global_1943947.f_40 = __LIB_1__::func_794(iParam1);
			Global_1943947.f_41 = __LIB_15__::func_619();
			Global_1943947.f_42 = __LIB_6__::func_580(PLAYER::PLAYER_ID(), iParam1);
			Global_1943947.f_44 = __LIB_7__::func_930(PLAYER::PLAYER_ID(), iParam1);
		}
		if (!__LIB_2__::func_50() || iVar0 != 192)
		{
			Global_1943947.f_53 = 0;
		}
	}
	else if (((__LIB_4__::func_740(iVar0) || iVar0 == 297) || iVar0 == 296) || iVar0 == 298)
	{
		if ((((iVar0 == 225 || iVar0 == 226) || iVar0 == 297) || iVar0 == 296) || iVar0 == 298)
		{
			Global_1944066 = iParam0 + 1;
		}
		else if (iVar0 == 227)
		{
			Global_1944066 = iParam0 + 1;
		}
		else
		{
			Global_1944066 = __LIB_24__::func_105(PLAYER::PLAYER_ID());
		}
		Global_1944066.f_46 = iVar0;
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944066.f_17 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		else
		{
			Global_1944066.f_17 = __LIB_1__::func_136(PLAYER::PLAYER_ID());
		}
		switch (iVar0)
		{
			case 225:
				if (__LIB_21__::func_826(PLAYER::PLAYER_ID()) == 0)
				{
					Global_1944066.f_1 = 0;
				}
				else
				{
					Global_1944066.f_1 = 1;
				}
				break;
			case 226:
				Global_1944066.f_1 = 2;
				break;
			case 227:
				Global_1944066.f_1 = 3;
				break;
			case 297:
				Global_1944066.f_1 = 4;
				break;
			case 296:
				Global_1944066.f_1 = 5;
				break;
			case 298:
				Global_1944066.f_1 = 6;
				break;
		}
		Global_1944066.f_21 = 1;
		Global_1944066.f_22 = 1;
		Global_1944066.f_44 = __LIB_9__::func_960(1);
		Global_1944066.f_45 = __LIB_9__::func_960(0);
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944066.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944066.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944066.f_4), &(Global_1944066.f_5));
		}
		Global_1944066.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (iParam0 != -1)
		{
			Global_1944066.f_20 = iParam0;
		}
	}
	else if (__LIB_12__::func_499(iVar0))
	{
		if (iParam3 != -1 && iParam2)
		{
		}
		Global_1944003 = iVar0;
		Global_1943947.f_1 = 1;
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944003.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944003.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944003.f_6), &(Global_1944003.f_7));
		}
		Global_1944003.f_9 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (iParam0 != -1)
		{
			Global_1944003.f_21 = iParam0;
		}
	}
	else if (__LIB_1__::func_612(iVar0))
	{
		Global_1944113 = iVar0;
		Global_1944113.f_1 = iParam0;
		Global_1944113.f_21 = 1;
		Global_1944113.f_22 = 1;
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944113.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944113.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944113.f_4), &(Global_1944113.f_5));
		}
		Global_1944113.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (iParam0 != -1)
		{
			Global_1944113.f_20 = iParam0;
		}
		Global_1944113.f_27 = __LIB_15__::func_347(__LIB_0__::func_5(), 5);
		Global_1944113.f_28 = __LIB_1__::func_137(__LIB_1__::func_655(PLAYER::PLAYER_ID()));
		Global_1944113.f_29 = __LIB_1__::func_360(6110, -1, 0);
		Global_1944113.f_30 = __LIB_1__::func_360(6106, -1, 0);
		Global_1944113.f_31 = __LIB_1__::func_360(6107, -1, 0);
		Global_1944113.f_32 = __LIB_1__::func_360(6109, -1, 0);
		Global_1944113.f_33 = __LIB_1__::func_360(6108, -1, 0);
		Global_1944113.f_34 = __LIB_1__::func_360(6111, -1, 0);
		Global_1944113.f_7 = __LIB_9__::func_294();
		Global_1944113.f_51 = __LIB_1__::func_137(bParam4);
	}
	else if (__LIB_1__::func_77(iVar0))
	{
		Global_1944167 = iVar0;
		Global_1944167.f_1 = iParam0;
		Global_1944167.f_21 = 1;
		Global_1944167.f_22 = 1;
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944167.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944167.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944167.f_4), &(Global_1944167.f_5));
		}
		Global_1944167.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (iParam0 != -1)
		{
			Global_1944167.f_20 = iParam0;
		}
		Global_1944167.f_24 = __LIB_1__::func_360(6160, -1, 0);
		Global_1944167.f_25 = __LIB_1__::func_360(6165, -1, 0);
		Global_1944167.f_26 = __LIB_1__::func_360(6166, -1, 0);
		Global_1944167.f_27 = __LIB_1__::func_137((((__LIB_2__::func_934() || __LIB_13__::func_355()) || __LIB_13__::func_354()) || __LIB_1__::func_641(PLAYER::PLAYER_ID())));
		Global_1944167.f_28 = __LIB_1__::func_360(6167, -1, 0);
		Global_1944167.f_29 = __LIB_1__::func_137(__LIB_9__::func_118());
		Global_1944167.f_31 = 0;
		Global_1944167.f_30 = 0;
		Global_1944167.f_32 = 0;
		Global_1944167.f_33 = 0;
		Global_1944167.f_34 = 0;
		Global_1944167.f_16 = 0;
		Global_1944167.f_7 = __LIB_9__::func_294();
	}
	else if (__LIB_36__::func_47(iVar0))
	{
		Global_1944303 = iVar0;
		Global_1944303.f_1 = iParam0;
		Global_1944303.f_21 = 1;
		Global_1944303.f_22 = 1;
		Global_1944303.f_7 = __LIB_9__::func_294();
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944303.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944303.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944303.f_4), &(Global_1944303.f_5));
		}
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944303.f_17 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944303.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944303.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		Global_1944303.f_16 = 0;
		Global_1944303.f_24 = 0;
		Global_1944303.f_23 = 0;
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944303.f_33 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		Global_1944303.f_39 = __LIB_9__::func_960(1);
		Global_1944303.f_40 = __LIB_9__::func_960(0);
	}
	else if (iVar0 == 237)
	{
		Global_1944249 = iVar0;
		Global_1944249.f_1 = iParam0;
		Global_1944249.f_21 = 1;
		Global_1944249.f_22 = 1;
		Global_1944249.f_7 = __LIB_9__::func_294();
		Global_1944249.f_24 = 0;
		Global_1944249.f_23 = 0;
		Global_1944249.f_16 = 0;
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1944249.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1944249.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		Global_1944249.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
		if (Global_1944249.f_28)
		{
			Global_1944249.f_29 = __LIB_15__::func_475(PLAYER::PLAYER_ID());
		}
		else
		{
			Global_1944249.f_29 = 0;
		}
		Global_1944249.f_30 = __LIB_13__::func_383(PLAYER::PLAYER_ID(), 4, -1);
		Global_1944249.f_31 = __LIB_4__::func_280(PLAYER::PLAYER_ID());
		Global_1944249.f_32 = __LIB_1__::func_137(__LIB_4__::func_355(PLAYER::PLAYER_ID()));
		Global_1944249.f_33 = __LIB_1__::func_137(__LIB_4__::func_354(PLAYER::PLAYER_ID()));
		Global_1944249.f_34 = __LIB_1__::func_137(__LIB_4__::func_353(PLAYER::PLAYER_ID()));
		Global_1944249.f_35 = __LIB_1__::func_137(__LIB_4__::func_352(PLAYER::PLAYER_ID()));
		Global_1944249.f_36 = __LIB_12__::func_512(PLAYER::PLAYER_ID());
		Global_1944249.f_37 = __LIB_6__::func_552(PLAYER::PLAYER_ID());
		Global_1944249.f_39 = __LIB_12__::func_511(PLAYER::PLAYER_ID());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944249.f_41 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (__LIB_1__::func_730() != __LIB_0__::func_162())
		{
			__LIB_15__::func_312(__LIB_1__::func_730(), &(Global_1944249.f_4), &(Global_1944249.f_5));
		}
		Global_1944249.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1944249.f_28 = __LIB_1__::func_595(PLAYER::PLAYER_ID());
	}
	else if (__LIB_12__::func_747(iVar0))
	{
		Global_1944390 = iVar0;
		Global_1944390.f_1 = __LIB_21__::func_826(PLAYER::PLAYER_ID());
		Global_1944390.f_2 = __LIB_2__::func_476();
		Global_1944390.f_3 = __LIB_2__::func_475();
		Global_1944390.f_4 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944390.f_5 = __LIB_2__::func_552(__LIB_0__::func_797());
		Global_1944390.f_7 = __LIB_9__::func_294();
		Global_1944390.f_8 = NETWORK::GET_CLOUD_TIME_AS_INT();
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944390.f_17 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944390.f_21 = 1;
		Global_1944390.f_22 = 1;
		Global_1944390.f_25 = iParam0;
		Global_1944390.f_27 = __LIB_1__::func_137(__LIB_1__::func_124(PLAYER::PLAYER_ID()));
		Global_1944390.f_28 = __LIB_2__::func_771(21, -1);
	}
	else if (__LIB_4__::func_184(iVar0))
	{
		Global_1944465 = Global_786547.f_1;
		Global_1944465.f_2 = Global_786547;
		Global_1944465.f_6 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944465.f_7 = __LIB_2__::func_552(__LIB_0__::func_797());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944465.f_8 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944465.f_9 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944465.f_10 = __LIB_9__::func_294();
		Global_1944465.f_19 = 1;
		Global_1944465.f_20 = 1;
		Global_1944465.f_21 = 0;
		Global_1944465.f_22 = 0;
		Global_1944465.f_23 = 0;
		Global_1973074 = NETWORK::GET_CLOUD_TIME_AS_INT();
	}
	else if (__LIB_11__::func_619(iVar0))
	{
		Global_1944552 = Global_786547.f_1;
		Global_1944552.f_3 = Global_786547;
		Global_1944552.f_6 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944552.f_7 = __LIB_2__::func_552(__LIB_0__::func_797());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944552.f_8 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944552.f_9 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944552.f_10 = __LIB_9__::func_294();
		Global_1944552.f_21 = 0;
		Global_1944552.f_22 = 0;
		Global_1944552.f_23 = 0;
		Global_1944552.f_26 = __LIB_9__::func_960(1);
		Global_1944552.f_34 = __LIB_9__::func_960(0);
		Global_1944552.f_15 = !__LIB_2__::func_759(PLAYER::PLAYER_ID(), __LIB_1__::func_730(), 1);
	}
	else if (__LIB_12__::func_510(iVar0))
	{
		Global_1944664 = iParam0;
		Global_1944664.f_1 = iVar0;
		Global_1944664.f_3 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944664.f_4 = __LIB_2__::func_552(__LIB_0__::func_797());
		Global_1944664.f_5 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		Global_1944664.f_6 = __LIB_9__::func_294();
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944664.f_7 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		Global_1944664.f_8 = 0;
	}
	else if (__LIB_3__::func_691(iVar0) || __LIB_15__::func_310(iVar0))
	{
		Global_1944685 = Global_786547.f_1;
		Global_1944685.f_27 = Global_786547;
		Global_1944685.f_5 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944685.f_6 = __LIB_2__::func_552(__LIB_0__::func_797());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944685.f_7 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944685.f_8 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		else
		{
			Global_1944685.f_8 = __LIB_1__::func_136(PLAYER::PLAYER_ID());
		}
		Global_1944685.f_9 = __LIB_9__::func_294();
		Global_1944685.f_18 = 1;
		Global_1944685.f_19 = 1;
		Global_1944685.f_20 = 0;
		Global_1944685.f_21 = 0;
		Global_1944685.f_22 = 0;
		Global_1944685.f_23 = __LIB_9__::func_960(1);
		Global_1944685.f_24 = __LIB_9__::func_960(0);
		Global_1944685.f_14 = !__LIB_2__::func_759(PLAYER::PLAYER_ID(), __LIB_1__::func_730(), 1);
	}
	else if (__LIB_15__::func_309(iVar0) || __LIB_15__::func_308(iVar0))
	{
		Global_1944754.f_7 = __LIB_2__::func_477(__LIB_0__::func_797());
		Global_1944754.f_8 = __LIB_2__::func_552(__LIB_0__::func_797());
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
		{
			Global_1944754.f_9 = __LIB_1__::func_137(__LIB_1__::func_375(1));
		}
		else
		{
			Global_1944754.f_9 = -1;
		}
		if (__LIB_0__::func_797() != -1)
		{
			Global_1944754.f_10 = __LIB_1__::func_136(__LIB_0__::func_797());
		}
		else
		{
			Global_1944754.f_10 = __LIB_1__::func_136(PLAYER::PLAYER_ID());
		}
		Global_1944754.f_11 = __LIB_9__::func_294();
		Global_1944754.f_20 = 0;
		Global_1944754.f_21 = 0;
		Global_1944754.f_22 = 0;
		Global_1944754.f_23 = __LIB_9__::func_960(1);
		Global_1944754.f_24 = __LIB_9__::func_960(0);
		Global_1944754.f_17 = !__LIB_2__::func_759(PLAYER::PLAYER_ID(), __LIB_1__::func_730(), 1);
		Global_1944754.f_1 = iVar0;
	}
	else
	{
		if (__LIB_0__::func_797() != __LIB_0__::func_162())
		{
			Global_1943929 = __LIB_2__::func_477(__LIB_0__::func_797());
			Global_1943929.f_1 = __LIB_2__::func_552(__LIB_0__::func_797());
		}
		Global_1943929.f_5 = NETWORK::GET_CLOUD_TIME_AS_INT();
		Global_1943929.f_13 = __LIB_15__::func_346();
		Global_1943929.f_15 = 0;
		if (__LIB_2__::func_159(1))
		{
			if (__LIB_1__::func_730() == __LIB_0__::func_797())
			{
				Global_1943929.f_15 = 1;
			}
		}
		if (__LIB_12__::func_555())
		{
			Global_1944066.f_28 = 1;
		}
		if (((((__LIB_4__::func_931() || __LIB_4__::func_930()) || __LIB_4__::func_929()) || __LIB_4__::func_928()) || __LIB_4__::func_927()) || __LIB_3__::func_929(PLAYER::PLAYER_ID()))
		{
			Global_1944066.f_30 = 1;
		}
		if (__LIB_12__::func_720(__LIB_12__::func_636(joaat("trailersmall2"))))
		{
			Global_1944066.f_32 = 1;
		}
		if (__LIB_12__::func_739(__LIB_1__::func_810(joaat("caddy"))))
		{
			Global_1944066.f_31 = 1;
		}
		if (__LIB_11__::func_981(PLAYER::PLAYER_ID()) || __LIB_11__::func_980(PLAYER::PLAYER_ID()))
		{
			Global_1944066.f_29 = 1;
		}
		if (__LIB_2__::func_678(PLAYER::PLAYER_ID()))
		{
			Global_1944066.f_33 = 1;
			Global_1944066.f_34 = 1;
		}
		if (__LIB_4__::func_673(PLAYER::PLAYER_ID()))
		{
			Global_1944066.f_36 = 1;
		}
		if (__LIB_4__::func_634(0, PLAYER::PLAYER_ID()) == 1)
		{
			Global_1944066.f_35 = 1;
		}
		if (__LIB_12__::func_537(PLAYER::PLAYER_ID(), 3, &uVar1))
		{
			Global_1944066.f_37 = 1;
		}
		if (__LIB_12__::func_537(PLAYER::PLAYER_ID(), 7, &uVar1))
		{
			Global_1944066.f_38 = 1;
		}
		if (__LIB_12__::func_952(PLAYER::PLAYER_ID()))
		{
			iVar2 = 0;
			while (iVar2 < 6)
			{
				iVar3 = __LIB_7__::func_555(PLAYER::PLAYER_ID(), iVar2);
				if (__LIB_7__::func_967(PLAYER::PLAYER_ID(), iVar3, 0))
				{
					Global_1944066.f_39 = 1;
				}
				if (__LIB_7__::func_967(PLAYER::PLAYER_ID(), iVar3, 2))
				{
					Global_1944066.f_40 = 1;
				}
				if (__LIB_7__::func_967(PLAYER::PLAYER_ID(), iVar3, 1))
				{
					Global_1944066.f_41 = 1;
				}
				iVar2++;
			}
		}
	}
}

int func_114(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x208585
{
	if (bParam3)
	{
		return 5;
	}
	switch (iParam0)
	{
		case 2:
			return 8;
		case 3:
			return 6;
		case 1:
		case 4:
		case 5:
			if (bParam1)
			{
				return 1;
			}
			else if (bParam2)
			{
				return 7;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 4;
}

int func_115(bool bParam0, bool bParam1)//Position - 0x39B34
{
	int iVar0;
	int iVar1;
	iVar0 = 116;
	if ((!bParam1 && __LIB_1__::func_15(bParam0)) && !__LIB_0__::func_428(bParam0))
	{
		iVar0 = __LIB_1__::func_259();
	}
	iVar1 = __LIB_4__::func_909(bParam0);
	if (!iVar1 == -1)
	{
		return __LIB_1__::func_357(iVar1);
	}
	return iVar0;
}

void func_116()//Position - 0x3C09E
{
	if (!BitTest(Global_1943920.f_3, 7) && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::FLASH_MINIMAP_DISPLAY();
		__LIB_30__::func_416(1, 5000, 0);
		__LIB_1__::func_707("GB_BB_ALERT" /* GXT: Other players in session have been alerted to your activities. These players can now come after your Organization to earn cash and RP. */, -1);
		__LIB_24__::func_333(1);
		MISC::SET_BIT(&(Global_1943920.f_3), 7);
	}
}

void func_117(var uParam0, int iParam1)//Position - 0x1D5F56
{
	switch (iParam1)
	{
		case 96:
			uParam0->f_1 = 1925408/*__LIB_0__::func_114*/;
			break;
		case 97:
			uParam0->f_1 = 1925399/*__LIB_0__::func_109*/;
			break;
		case 98:
			uParam0->f_1 = 1925390/*__LIB_0__::func_109*/;
			break;
		case 99:
			uParam0->f_1 = 1925230/*__LIB_5__::func_390*/;
			break;
		case 100:
			uParam0->f_22 = 1925222/*__LIB_0__::func_467*/;
			break;
		case 101:
			uParam0->f_22 = 1925067/*__LIB_12__::func_162*/;
			break;
	}
}

void func_118(var uParam0, int iParam1)//Position - 0x1D6129
{
	switch (iParam1)
	{
		case 90:
			uParam0->f_1 = 1925625/*__LIB_0__::func_114*/;
			break;
		case 91:
			uParam0->f_1 = 1925616/*__LIB_0__::func_109*/;
			break;
		case 92:
			uParam0->f_1 = 1925607/*__LIB_0__::func_109*/;
			break;
		case 93:
			uParam0->f_1 = 1925230/*__LIB_5__::func_390*/;
			break;
		case 94:
			uParam0->f_1 = 1925598/*__LIB_0__::func_109*/;
			break;
		case 95:
			uParam0->f_22 = 1925534/*__LIB_12__::func_162*/;
			break;
	}
}

void func_119(var uParam0, int iParam1)//Position - 0x1D6202
{
	switch (iParam1)
	{
		case 84:
			uParam0->f_1 = 1925852/*__LIB_0__::func_109*/;
			break;
		case 85:
			uParam0->f_1 = 1925843/*__LIB_0__::func_109*/;
			break;
		case 86:
			uParam0->f_1 = 1925230/*__LIB_5__::func_390*/;
			break;
		case 87:
			uParam0->f_1 = 1925834/*__LIB_0__::func_109*/;
			break;
		case 89:
			uParam0->f_54 = 1925734/*__LIB_12__::func_163*/;
			break;
	}
}

void func_120(int iParam0)//Position - 0xABBD
{
	Local_134.f_0 = iParam0;
}

void func_121(char* sParam0, int iParam1, var uParam2)//Position - 0xA76C
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam1 - __LIB_1__::func_724(uParam2, 0, 0));
	if (iVar0 > 30000)
	{
		iVar1 = 1;
	}
	else
	{
		iVar1 = 6;
	}
	__LIB_1__::func_910();
	if (iVar0 > 0)
	{
		__LIB_1__::func_350(iVar0, sParam0, 0, 0, -1, 0, 3, 0, iVar1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
	}
	else
	{
		__LIB_1__::func_350(0, sParam0, 0, 0, -1, 0, 3, 0, iVar1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
	}
}

int func_122(var uParam0, int iParam1, struct<3> Param2, float fParam3, int iParam4, bool bParam5, bool bParam6, bool bParam7, bool bParam8)//Position - 0x87C
{
	if (!NETWORK::CAN_REGISTER_MISSION_OBJECTS(1))
	{
		return 0;
	}
	*uParam0 = NETWORK::OBJ_TO_NET(OBJECT::CREATE_PORTABLE_PICKUP(iParam4, Param2, bParam6, iParam1));
	if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(*uParam0))
	{
		NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(*uParam0, bParam5);
		ENTITY::SET_ENTITY_HEADING(NETWORK::NET_TO_OBJ(*uParam0), fParam3);
		OBJECT::SET_OBJECT_FORCE_VEHICLES_TO_AVOID(NETWORK::NET_TO_OBJ(*uParam0), bParam7);
		ENTITY::SET_ENTITY_CAN_BE_DAMAGED(NETWORK::NET_TO_OBJ(*uParam0), !bParam8);
		ENTITY::SET_ENTITY_INVINCIBLE(NETWORK::NET_TO_OBJ(*uParam0), bParam8);
		return 1;
	}
	return 0;
}

void func_123(int iParam0)//Position - 0x38034
{
	MISC::CLEAR_BIT(&uLocal_172, iParam0);
}

bool func_124(int iParam0)//Position - 0x4AA81
{
	return BitTest(uLocal_172, iParam0);
}

void func_125(int iParam0)//Position - 0x4ACB7
{
	struct<3> Var0;
	int iVar1;
	struct<3> Var2;
	int iVar3;
	int iVar4;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
		iVar1 = __LIB_34__::func_716(Var0, 6, -1, 0, 1, -1);
		Var2 = { __LIB_30__::func_731(iVar1, 0) };
		iVar3 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Var2, __LIB_22__::func_352(iVar1));
		iVar4 = INTERIOR::GET_INTERIOR_FROM_ENTITY(iParam0);
		if (iVar3 != 0 && iVar3 == iVar4)
		{
			if (!Global_2815059.f_5117)
			{
				Global_2815059.f_5117 = 1;
			}
			return;
		}
	}
	if (Global_2815059.f_5117)
	{
		Global_2815059.f_5117 = 0;
	}
}

int func_126()//Position - 0x3C559
{
	return Global_262145.f_13069 /* Tunable: GB_SMASHANDGRAB_WANTED_CAP */;
}

void func_127(struct<14> Param0, int iParam1, int iParam2, var uParam3, var uParam4)//Position - 0x202F79
{
	char* sVar0;
	struct<15> Var1;
	struct<19> Var2;
	struct<19> Var3;
	struct<16> Var4;
	struct<17> Var5;
	struct<15> Var6;
	struct<17> Var7;
	struct<17> Var8;
	sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CARJACKING"))
		{
			Var1 = { Param0 };
			Var1.f_14 = iParam1;
			STATS::PLAYSTATS_BC_CAR_JACKING(&Var1);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_ROB_SHOP"))
		{
			Var2 = { Param0 };
			Var2.f_14 = Global_1943929.f_14;
			Var2.f_15 = iParam1;
			Var2.f_16 = iParam2;
			Var2.f_17 = uParam3;
			Var2.f_18 = uParam4;
			STATS::PLAYSTATS_BC_SMASH_AND_GRAB(&Var2);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_COLLECT_MONEY"))
		{
			Var3 = { Param0 };
			Var3.f_14 = Global_1943929.f_14;
			Var3.f_15 = iParam1;
			Var3.f_16 = iParam2;
			Var3.f_17 = uParam3;
			Var3.f_18 = uParam4;
			STATS::PLAYSTATS_BC_PROTECTION_RACKET(&Var3);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FIVESTAR"))
		{
			Var4 = { Param0 };
			Var4.f_14 = Global_1943929.f_14;
			Var4.f_15 = iParam1;
			STATS::PLAYSTATS_BC_MOST_WANTED(&Var4);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FINDERSKEEPERS"))
		{
			Var5 = { Param0 };
			Var5.f_14 = Global_1943929.f_14;
			Var5.f_15 = iParam1;
			Var5.f_16 = iParam2;
			STATS::PLAYSTATS_BC_FINDERS_KEEPERS(&Var5);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_POINT_TO_POINT"))
		{
			Var6 = { Param0 };
			Var6.f_14 = Global_1943929.f_14;
			STATS::PLAYSTATS_BC_POINT_TO_POINT(&Var6);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CASHING_OUT"))
		{
			Var7 = { Param0 };
			Var7.f_14 = iParam1;
			Var7.f_15 = (SYSTEM::TO_FLOAT(iParam1) / SYSTEM::TO_FLOAT(iParam2));
			Var7.f_16 = uParam3;
			STATS::PLAYSTATS_BC_CASHING(&Var7);
		}
		else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_SALVAGE"))
		{
			Var8 = { Param0 };
			Var8.f_14 = iParam1;
			Var8.f_15 = iParam2;
			Var8.f_16 = Global_1943929.f_14;
			STATS::PLAYSTATS_BC_SALVAGE(&Var8);
		}
	}
	__LIB_15__::func_588();
}

void func_128(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, char* sParam13, char* sParam14, char* sParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22)//Position - 0x3B6E7
{
	char* sVar0;
	int iVar1;
	char* sVar2;
	if (__LIB_2__::func_132(0) == 0)
	{
		return;
	}
	__LIB_1__::func_933();
	iVar1 = 0;
	if ((((Global_2726607[0] != iParam0 || Global_2726607[1] != iParam1) || Global_2726607[2] != iParam2) || Global_2726607[3] != iParam3) || *iParam11)
	{
		iVar1 = 1;
	}
	Global_2726607[0] = iParam0;
	Global_2726607[1] = iParam1;
	Global_2726607[2] = iParam2;
	Global_2726607[3] = iParam3;
	Global_2726607[4] = 0;
	if (((((iParam4 > 99999 || iParam5 > 99999) || iParam6 > 99999) || iParam7 > 99999) || iParam8 > 99999) || iParam9 > 99999)
	{
		__LIB_1__::func_910();
	}
	else if (((((iParam4 > 999 || iParam5 > 999) || iParam6 > 999) || iParam7 > 999) || iParam8 > 999) || iParam9 > 999)
	{
		__LIB_3__::func_238();
	}
	if (Global_2726607[0] != __LIB_0__::func_162())
	{
		if (iVar1 == 1)
		{
			sVar0 = PLAYER::GET_PLAYER_NAME(Global_2726607[0]);
			Global_2726613[0 /*16*/] = { __LIB_1__::func_932(1, sVar0) };
		}
		if (iParam4 > 0 || (iParam4 == 0 && iParam20))
		{
			__LIB_2__::func_131(iParam4, &(Global_2726613[0 /*16*/]), -1, 109, 9, 1, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, iParam16, 255, 0, 0, 0, 0, 1, -1);
		}
	}
	if (Global_2726607[1] != __LIB_0__::func_162())
	{
		if (iVar1 == 1)
		{
			sVar0 = PLAYER::GET_PLAYER_NAME(Global_2726607[1]);
			Global_2726613[1 /*16*/] = { __LIB_1__::func_932(2, sVar0) };
		}
		if (iParam5 > 0 || (iParam5 == 0 && iParam20))
		{
			__LIB_2__::func_131(iParam5, &(Global_2726613[1 /*16*/]), -1, 108, 8, 1, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, iParam17, 255, 0, 0, 0, 0, 1, -1);
		}
	}
	if (Global_2726607[2] != __LIB_0__::func_162())
	{
		if (iVar1 == 1)
		{
			sVar0 = PLAYER::GET_PLAYER_NAME(Global_2726607[2]);
			Global_2726613[2 /*16*/] = { __LIB_1__::func_932(3, sVar0) };
		}
		if (iParam6 > 0 || (iParam6 == 0 && iParam20))
		{
			__LIB_2__::func_131(iParam6, &(Global_2726613[2 /*16*/]), -1, 107, 7, 1, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, iParam18, 255, 0, 0, 0, 0, 1, -1);
		}
	}
	if (Global_2726607[3] != __LIB_0__::func_162())
	{
		if (iVar1 == 1)
		{
			sVar0 = PLAYER::GET_PLAYER_NAME(Global_2726607[3]);
			Global_2726613[3 /*16*/] = { __LIB_1__::func_932(4, sVar0) };
		}
		if (iParam7 > 0 || (iParam7 == 0 && iParam20))
		{
			__LIB_2__::func_131(iParam7, &(Global_2726613[3 /*16*/]), -1, 4, 6, 1, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, iParam19, 255, 0, 0, 0, 0, 1, -1);
		}
	}
	sVar2 = "GB_SNG_HT1" /* GXT: YOUR SCORE */;
	if (!__LIB_1__::func_76(sParam14))
	{
		sVar2 = sParam14;
	}
	if (iParam8 > -1)
	{
		__LIB_2__::func_131(iParam8, sVar2, -1, iParam21, 5, 0, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 1, -1);
	}
	sVar2 = "GB_SNG_HT0" /* GXT: CASH HELD */;
	if (!__LIB_1__::func_76(sParam15))
	{
		sVar2 = sParam15;
	}
	if (iParam9 > -1)
	{
		__LIB_2__::func_131(iParam9, sVar2, -1, iParam22, 4, 0, "HUD_CASH" /* GXT: $~1~ */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 1, -1);
	}
	sVar2 = "GB_SNG_TM0" /* GXT: CHALLENGE END */;
	if (!__LIB_1__::func_76(sParam13))
	{
		sVar2 = sParam13;
	}
	__LIB_30__::func_839(iParam10, sVar2, 0, 0, -1, 0, 3, 0, iParam12, 0, 0, 0, iParam12, 0, 0, 0, 0, -1);
	*iParam11 = 0;
}

int func_129(var uParam0, var uParam1)//Position - 0x111A6
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	if (*uParam1 < 175)
	{
		*uParam1 += 10;
		HUD::GET_HUD_COLOUR(12, &iVar0, &iVar1, &iVar2, &uVar3);
		GRAPHICS::SET_CHECKPOINT_RGBA(*uParam0, iVar0, iVar1, iVar2, *uParam1);
		GRAPHICS::SET_CHECKPOINT_RGBA2(*uParam0, iVar0, iVar1, iVar2, *uParam1);
		return 0;
	}
	else
	{
		return 1;
	}
	return 1;
}

var func_130(int iParam0, int iParam1, int iParam2)//Position - 0x2008DB
{
	Global_78130[1 /*14*/] = { __LIB_6__::func_38(iParam0, iParam1, iParam2, -1) };
	return BitTest(Global_78130[1 /*14*/].f_6, 2);
}

void func_131(int iParam0)//Position - 0x3FCB1
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(uLocal_201[iVar0]), iVar1);
}

bool func_132(int iParam0)//Position - 0x3FD35
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(uLocal_201[iVar0], iVar1);
}

int func_133(int iParam0, int iParam1)//Position - 0x40CB7
{
	if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) != 1 && TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) != 0)
	{
		return 0;
	}
	return 1;
}

void func_134(int iParam0, int iParam1, int iParam2)//Position - 0x201CC1
{
	if (__LIB_2__::func_159(1))
	{
		__LIB_30__::func_506(__LIB_5__::func_734(1), iParam0, iParam1, iParam2);
	}
	else
	{
		__LIB_30__::func_506(__LIB_1__::func_705(PLAYER::PLAYER_ID()), iParam0, iParam1, iParam2);
	}
}

int func_135()//Position - 0xD2D27
{
	return __LIB_36__::func_105(PLAYER::PLAYER_ID());
}

int func_136(int iParam0)//Position - 0x1611D7
{
	if (__LIB_1__::func_693(iParam0, 1, 1))
	{
		if (__LIB_5__::func_424(iParam0) && !__LIB_36__::func_105(iParam0))
		{
			return 0;
		}
	}
	return 1;
}

void func_137(int iParam0, int iParam1, var uParam2)//Position - 0x165199
{
	switch (iParam1)
	{
		case 0:
			if ((Global_262145.f_24391 /* Tunable: 1595462041 */ || __LIB_36__::func_100(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_4__::func_389(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_4__::func_1(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 1:
			if (Global_262145.f_24391 /* Tunable: 1595462041 */ && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_4__::func_382(iParam0, &(uParam2->f_4), &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				uParam2->f_2 = 1;
				if (!BitTest(uParam2->f_3, 6))
				{
					MISC::SET_BIT(&(uParam2->f_3), 6);
				}
				MISC::SET_BIT(&(uParam2->f_3), 0);
				MISC::SET_BIT(&(uParam2->f_3), 2);
				__LIB_4__::func_1(iParam0, &(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 2:
			if (__LIB_9__::func_281(iParam0) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_4__::func_388(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14), &(uParam2->f_4));
				MISC::SET_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
				__LIB_4__::func_387(&(uParam2->f_15), &(uParam2->f_16), &(uParam2->f_17), &(uParam2->f_18));
			}
			break;
		case 3:
			if ((__LIB_5__::func_317(iParam0) || __LIB_9__::func_281(iParam0)) && !BitTest(uParam2->f_3, 15))
			{
				MISC::CLEAR_BIT(&(uParam2->f_3), 4);
				MISC::SET_BIT(&(uParam2->f_3), 1);
				uParam2->f_7 = { 1f, 1f, 0.1f };
				uParam2->f_4 = { 1f, 1f, 1f };
			}
			else
			{
				__LIB_4__::func_386(iParam0, &(uParam2->f_7), &(uParam2->f_10), &(uParam2->f_13), &(uParam2->f_14));
				MISC::SET_BIT(&(uParam2->f_3), 1);
				MISC::SET_BIT(&(uParam2->f_3), 16);
				MISC::SET_BIT(&(uParam2->f_3), 0);
			}
			break;
	}
}

void func_138(char* sParam0)//Position - 0x3F497
{
	if (!__LIB_2__::func_755(sParam0))
	{
		__LIB_3__::func_0();
		__LIB_3__::func_198(sParam0, 0);
	}
}

void func_139(var uParam0)//Position - 0x200996
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		__LIB_36__::func_112(uParam0, iVar0);
		iVar0++;
	}
	uParam0->f_1.f_29 = 0;
}

void func_140(int iParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0xB5F77
{
	int iVar0;
	float fVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iParam0)) || !NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
			if (PLAYER::PLAYER_ID() != __LIB_0__::func_162())
			{
				uParam1->f_100 = PLAYER::PLAYER_ID();
			}
			if (uParam1->f_70 == 0)
			{
				uParam1->f_70 = 1;
			}
			__LIB_36__::func_104(iParam0, uParam1, bParam2, bParam3);
			if (uParam1->f_102 != 0)
			{
				if (uParam1->f_102 == 2)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, true);
					VEHICLE::SET_DRIFT_TYRES(iParam0, false);
				}
				else if (uParam1->f_102 == 1)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, false);
					VEHICLE::SET_DRIFT_TYRES(iParam0, false);
				}
				else if (uParam1->f_102 == 3)
				{
					VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, true);
					VEHICLE::SET_DRIFT_TYRES(iParam0, true);
				}
			}
			if (__LIB_0__::func_811(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				if (uParam1->f_9[44] == 2)
				{
					VEHICLE::SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(iParam0, false, true);
				}
				else
				{
					VEHICLE::SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(iParam0, true, true);
				}
			}
			if (!uParam1->f_78 == -1 && uParam1->f_9[14] == -1)
			{
				AUDIO::OVERRIDE_VEH_HORN(iParam0, true, uParam1->f_78);
			}
			if (!uParam1->f_79 == -1)
			{
				AUDIO::SET_VEHICLE_HORN_SOUND_INDEX(iParam0, uParam1->f_79);
			}
			if (__LIB_0__::func_810(uParam1->f_66, &fVar1) && uParam1->f_80 != fVar1)
			{
				uParam1->f_80 = fVar1;
			}
			VEHICLE::SET_VEHICLE_ENVEFF_SCALE(iParam0, uParam1->f_80);
			VEHICLE::SET_VEHICLE_EXTRA_COLOUR_5(iParam0, uParam1->f_97);
			if (uParam1->f_99 >= 0)
			{
				VEHICLE::SET_VEHICLE_EXTRA_COLOUR_6(iParam0, uParam1->f_99);
			}
			if (__LIB_0__::func_809(iParam0))
			{
				__LIB_1__::func_525(iParam0, __LIB_1__::func_562(uParam1->f_74, uParam1->f_75, uParam1->f_76));
			}
			if (VEHICLE::GET_VEHICLE_LIVERY2_COUNT(iParam0) > 1 && uParam1->f_98 >= 0)
			{
				VEHICLE::SET_VEHICLE_LIVERY2(iParam0, uParam1->f_98);
			}
			if (BitTest(uParam1->f_95, 0))
			{
				__LIB_36__::func_109(iParam0, &(uParam1->f_81));
			}
			if ((!__LIB_2__::func_969(4) && !bParam4) && !NETWORK::NETWORK_IS_ACTIVITY_SESSION())
			{
				__LIB_7__::func_865(iParam0);
			}
			if (__LIB_0__::func_801(iVar0))
			{
				switch (uParam1->f_9[5])
				{
					case 0:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						break;
					case 1:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 0, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
						}
						break;
					case 2:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 1, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 3, false);
						}
						break;
					case 3:
						VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
						if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
						}
						else
						{
							VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 4, false);
						}
						break;
					default:
						if (uParam1->f_9[5] != -1)
						{
							VEHICLE::REMOVE_VEHICLE_MOD(iParam0, 16);
							if ((VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab")) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab2"))) || VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("scarab3")))
							{
								VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 2, false);
							}
							else
							{
								VEHICLE::SET_VEHICLE_MOD(iParam0, 16, 4, false);
							}
						}
						break;
					}
			}
			if (__LIB_1__::func_522(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				switch (uParam1->f_9[5])
				{
					case 1:
						VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(iParam0, false);
						VEHICLE::SET_VEHICLE_STRONG(iParam0, true);
						if (uParam1->f_9[16] == 5)
						{
							VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, (Global_262145.f_21791 /* Tunable: -1001087518 */ + 0.05f));
						}
						else
						{
							VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, Global_262145.f_21791 /* Tunable: -1001087518 */);
						}
						VEHICLE::SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(iParam0, true);
						break;
					default:
						VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(iParam0, false);
						VEHICLE::SET_VEHICLE_DAMAGE_SCALE(iParam0, 1f);
						VEHICLE::SET_VEHICLE_EXPLODES_ON_EXPLOSION_DAMAGE_AT_ZERO_BODY_HEALTH(iParam0, true);
						break;
					}
			}
			switch (uParam1->f_94)
			{
				case 0:
					break;
				case 1:
					if (BitTest(uParam1->f_95, 1) && BitTest(uParam1->f_95, 2))
					{
						if (BitTest(uParam1->f_95, 3))
						{
						}
					}
					else if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Vehicle", 3))
					{
						DECORATOR::DECOR_SET_INT(iParam0, "Player_Vehicle", -1);
					}
					break;
				case 2:
					if (BitTest(uParam1->f_95, 1) && BitTest(uParam1->f_95, 2))
					{
						if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()));
						}
					}
					else if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
					{
						if (__LIB_0__::func_800(uParam1->f_81) && NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(&(uParam1->f_81)))
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&(uParam1->f_81))));
						}
						else
						{
							DECORATOR::DECOR_SET_INT(iParam0, "Veh_Modded_By_Player", -1);
						}
					}
					break;
				case 3:
					break;
				case 4:
					break;
				}
		}
	}
}

void func_141(int iParam0, bool bParam1, var uParam2, bool bParam3)//Position - 0xB9B9
{
	int iVar0;
	int iVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	__LIB_15__::func_611(iParam0, &fVar2, &fVar3);
	if (uParam2->f_6 == 0)
	{
		iVar1 = (iVar1 + uParam2->f_1);
		iVar0 = (iVar0 + *uParam2);
	}
	if (bParam1)
	{
		iVar1 = (iVar1 + __LIB_35__::func_549(iParam0, uParam2->f_13, bParam3));
		if (iParam0 == 233)
		{
			iVar6 = (uParam2->f_10 / uParam2->f_11) * 100;
			iVar1 = ((iVar1 / 100) * iVar6);
		}
		if ((iParam0 == 158 && uParam2->f_21 == 1) && !uParam2->f_22)
		{
			iVar1 = 200;
		}
		iVar1 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) / SYSTEM::TO_FLOAT(uParam2->f_4)));
		iVar1 = SYSTEM::ROUND((IntToFloat(iVar1) * fVar3));
		iVar1 = SYSTEM::ROUND((IntToFloat(iVar1) * uParam2->f_3));
		iVar0 = (iVar0 + __LIB_15__::func_393(iParam0, bParam3));
		iVar0 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar0) / SYSTEM::TO_FLOAT(uParam2->f_4)));
		iVar0 = SYSTEM::ROUND((IntToFloat(iVar0) * fVar2));
		iVar0 = SYSTEM::ROUND((IntToFloat(iVar0) * uParam2->f_2));
	}
	else if ((iParam0 == 185 || iParam0 == 220) || iParam0 == 221)
	{
		iVar1 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) / SYSTEM::TO_FLOAT(uParam2->f_4)));
		iVar1 = SYSTEM::ROUND((IntToFloat(iVar1) * fVar3));
		iVar1 = SYSTEM::ROUND((IntToFloat(iVar1) * uParam2->f_3));
		iVar0 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar0) / SYSTEM::TO_FLOAT(uParam2->f_4)));
		iVar0 = SYSTEM::ROUND((IntToFloat(iVar0) * fVar2));
		iVar0 = SYSTEM::ROUND((IntToFloat(iVar0) * uParam2->f_2));
	}
	if (uParam2->f_18 > -1)
	{
		iVar0 = (iVar0 + uParam2->f_18);
	}
	if (uParam2->f_19 > -1)
	{
		iVar1 = (iVar1 + uParam2->f_19);
	}
	if (__LIB_35__::func_561(iParam0))
	{
		if (bParam1)
		{
			if (Global_262145.f_24496 /* Tunable: -76964080 */)
			{
				if (__LIB_15__::func_392(PLAYER::PLAYER_ID()) <= 0)
				{
					__LIB_15__::func_547();
				}
			}
			else if (__LIB_15__::func_392(PLAYER::PLAYER_ID()) > 0)
			{
				__LIB_15__::func_546();
			}
			else
			{
				__LIB_15__::func_547();
			}
		}
		else
		{
			__LIB_12__::func_585();
		}
	}
	__LIB_36__::func_65(iParam0, bParam1, uParam2, &iVar0, &iVar4);
	__LIB_36__::func_46(iParam0, uParam2, &iVar0, &iVar5);
	__LIB_36__::func_64(iParam0, uParam2, &iVar0, &iVar5);
	__LIB_36__::func_58(iParam0, uParam2, &iVar0, &iVar5, &iVar7);
	__LIB_36__::func_57(iParam0, uParam2, &iVar0, &iVar5);
	if (iParam0 == 168)
	{
		Global_2815059.f_5195.f_387 = iVar4;
	}
	else
	{
		Global_2815059.f_5195.f_387 = iVar5;
	}
	iVar8 = __LIB_1__::func_730();
	if (iVar8 != __LIB_0__::func_162() && iParam0 != 148)
	{
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_2__::func_759(PLAYER::PLAYER_ID(), iVar8, 1))
			{
				__LIB_36__::func_78(&iVar0, 1);
			}
		}
	}
	__LIB_35__::func_565(iParam0, &iVar9, &iVar10);
	iVar1 = (iVar1 + iVar9);
	iVar0 = (iVar0 + iVar10);
	if (iVar1 > 0)
	{
		Global_1943929.f_10 = iVar1;
		__LIB_1__::func_925();
		__LIB_15__::func_502(0, PLAYER::PLAYER_PED_ID(), "", joaat("XPTYPE_SKILL"), joaat("XPCATEGORY_COLLECT_CHECKPOINT"), iVar1, 1, -1, 0, 0, 0);
	}
	if (iVar0 > 0)
	{
		Global_1943929.f_9 = iVar0;
		__LIB_36__::func_77(iParam0, iVar0, iVar7, iVar4, iVar5, uParam2);
		__LIB_15__::func_441(iParam0, iVar0);
		if (__LIB_15__::func_381(iParam0))
		{
			if (__LIB_15__::func_380(iParam0) > -1)
			{
				__LIB_1__::func_926(__LIB_15__::func_380(iParam0), iVar0);
			}
		}
		Global_2727753 = iVar0;
		__LIB_0__::func_627(&Global_2725869, 0, 0);
	}
	if (__LIB_4__::func_897(PLAYER::PLAYER_ID()) || __LIB_4__::func_77(PLAYER::PLAYER_ID()))
	{
		__LIB_30__::func_415(iParam0);
	}
	if ((__LIB_12__::func_654(iParam0) || iParam0 == 293) || iParam0 == 291)
	{
		Global_1943947.f_13 = iVar0;
		Global_1943947.f_14 = iVar1;
	}
	if (__LIB_12__::func_499(iParam0))
	{
		Global_1944003.f_13 = iVar0;
		Global_1944003.f_14 = iVar1;
	}
	if (((__LIB_4__::func_740(iParam0) || iParam0 == 297) || iParam0 == 296) || iParam0 == 298)
	{
		Global_1944066.f_12 = iVar0;
		Global_1944066.f_13 = iVar1;
	}
	if (__LIB_1__::func_612(iParam0))
	{
		Global_1944113.f_12 = iVar0;
		Global_1944113.f_13 = iVar1;
	}
	if (__LIB_1__::func_77(iParam0))
	{
		Global_1944167.f_12 = iVar0;
		Global_1944167.f_13 = iVar1;
	}
	if (__LIB_4__::func_78(iParam0))
	{
		if (__LIB_15__::func_326(iParam0))
		{
			Global_1944249.f_12 = iVar0;
			Global_1944249.f_13 = iVar1;
		}
		else if (((__LIB_36__::func_56(iParam0) || iParam0 == 299) || iParam0 == 300) || iParam0 == 301)
		{
			Global_1944303.f_12 = iVar0;
			Global_1944303.f_13 = iVar1;
		}
	}
	if (__LIB_12__::func_747(iParam0))
	{
		Global_1944390.f_12 = iVar0;
		Global_1944390.f_13 = iVar1;
	}
	if (__LIB_4__::func_184(iParam0))
	{
		Global_1944465.f_16 = iVar0;
		Global_1944465.f_17 = iVar1;
	}
	if (__LIB_11__::func_619(iParam0))
	{
		Global_1944552.f_16 = iVar0;
		Global_1944552.f_17 = iVar1;
	}
	if (__LIB_3__::func_691(iParam0) || __LIB_15__::func_310(iParam0))
	{
		Global_1944685.f_15 = iVar0;
		Global_1944685.f_16 = iVar1;
	}
	__LIB_24__::func_406(bParam1, iParam0);
}

int func_142(bool bParam0, bool bParam1)//Position - 0x5D19
{
	int iVar0;
	if (bParam0 != __LIB_0__::func_162() && bParam1 != __LIB_0__::func_162())
	{
		iVar0 = __LIB_0__::func_818(bParam0);
		if (iVar0 != __LIB_0__::func_162())
		{
			return iVar0 == __LIB_0__::func_818(bParam1);
		}
	}
	return 0;
}

bool func_143(char* sParam0, char* sParam1, int iParam2, char* sParam3, int iParam4)//Position - 0x4F58F
{
	HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(sParam0);
	if (!iParam2 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam2);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam1);
	if (!iParam4 == 0)
	{
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam4);
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam3);
	return HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
}

int func_144()//Position - 0x5A95F
{
	return Local_124.f_0;
}

int func_145(bool bParam0)//Position - 0x7346
{
	if (((__LIB_4__::func_934(bParam0, 1) || __LIB_1__::func_15(bParam0)) || __LIB_0__::func_321(bParam0, 0)) || __LIB_1__::func_948(bParam0))
	{
		return 1;
	}
	return 0;
}

int func_146(var uParam0)//Position - 0x3E6F8
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(PLAYER::INT_TO_PLAYERINDEX(iVar0)))
		{
			iVar2 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (!__LIB_2__::func_40(iVar2, 0) && !__LIB_1__::func_876(iVar2, PLAYER::PLAYER_ID(), 1))
			{
				iVar1++;
			}
			else if (__LIB_2__::func_40(iVar2, 0))
			{
				*uParam0++;
			}
		}
		iVar0++;
	}
	return iVar1;
}

int func_147(struct<3> Param0, float fParam1, int iParam2, int iParam3, int iParam4)//Position - 0x8C55
{
	int iVar0;
	bool bVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (!iParam3 == iVar0 || iParam4 == 1)
		{
			bVar1 = iVar0;
			if (__LIB_1__::func_693(bVar1, 0, 1) && __LIB_1__::func_693(iParam3, 0, 1))
			{
				if (Global_2680265.f_261[iVar0])
				{
					if (__LIB_2__::func_779(Global_2680265.f_131[iVar0 /*3*/], Param0, fParam1, iParam2, 1036831949))
					{
						return 1;
					}
				}
				else if (__LIB_2__::func_779(__LIB_1__::func_694(bVar1), Param0, fParam1, iParam2, 1036831949))
				{
					return 1;
				}
			}
			else if (Global_2680265.f_261[iVar0])
			{
				if (__LIB_2__::func_779(Global_2680265.f_131[iVar0 /*3*/], Param0, fParam1, iParam2, 1036831949))
				{
					return 1;
				}
			}
			else if (__LIB_1__::func_693(bVar1, 0, 0))
			{
				if (ENTITY::DOES_ENTITY_EXIST(PLAYER::GET_PLAYER_PED(bVar1)))
				{
					if (__LIB_2__::func_779(__LIB_1__::func_694(bVar1), Param0, fParam1, iParam2, 1036831949))
					{
						return 1;
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_148(int iParam0)//Position - 0x10065
{
	if (!__LIB_0__::func_428(PLAYER::PLAYER_ID()))
	{
		if (iParam0 || __LIB_20__::func_435(PLAYER::PLAYER_ID()) != 0)
		{
			__LIB_1__::func_966(20);
			__LIB_1__::func_28(__LIB_19__::func_469());
			if (__LIB_1__::func_15(PLAYER::PLAYER_ID()))
			{
				if (!BitTest(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1, 8))
				{
					MISC::SET_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1), 8);
				}
			}
		}
	}
}

void func_149(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0x3AB0E
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	int iVar6;
	bool bVar7;
	bool bVar8;
	struct<2> Var9;
	char* sVar10;
	iVar6 = __LIB_0__::func_797();
	if (iVar6 != __LIB_0__::func_162())
	{
		__LIB_15__::func_312(iVar6, &iVar0, &iVar1);
	}
	bVar7 = !__LIB_12__::func_548(1);
	bVar8 = __LIB_12__::func_548(0);
	Var9.f_1 = -1;
	switch (iParam0)
	{
		case 168:
			if (!__LIB_0__::func_112())
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam3);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 190:
			if (__LIB_5__::func_234())
			{
				if (!__LIB_0__::func_112())
				{
					Var9 = { __LIB_15__::func_382() };
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(Var9.f_0)), __LIB_1__::func_794(Var9.f_0), iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 226:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(__LIB_1__::func_721(PLAYER::PLAYER_ID()))), 5, iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 230:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					iVar2 = __LIB_15__::func_642(uParam5->f_16, iParam4);
					iVar3 = iParam1;
					if (iVar2 > 0)
					{
						iVar3 = (iVar3 - iVar2);
					}
					if (iParam2 > 0)
					{
						iVar3 = (iVar3 - iParam2);
					}
					MONEY::NETWORK_EARN_FROM_SMUGGLER_WORK(iVar3, iParam4, iParam2, iVar2, uParam5->f_16);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_2__::func_604(joaat("SERVICE_EARN_SMUGGLER_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_SMUGGLER_AGENCY(iVar0, iVar1, iParam1, bVar7);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 233:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_GANGOPS_PREP_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(iParam1);
			}
			break;
		case 237:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_HUB_SELL(iParam1, uParam5->f_20, iParam4);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_2__::func_604(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 250:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				Global_4534105[iVar4 /*85*/] = 1781827765;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(iParam1, 1781827765);
			}
			break;
		case 249:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_FROM_FMBB_PHONECALL_MISSION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(iParam1);
			}
			break;
		case 242:
		case 244:
		case 248:
		case 241:
		case 239:
		case 240:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_FROM_FMBB_BOSS_WORK"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_BOSS_WORK(iParam1);
			}
			break;
		case 243:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_CASINO_MISSION_REWARD"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_MISSION_REWARD(iParam1);
			}
			break;
		case 158:
			if (uParam5->f_22)
			{
				if (__LIB_0__::func_112())
				{
					__LIB_2__::func_604(joaat("SERVICE_EARN_CASINO_HEIST_SETUP_MISSION"), iParam1, &iVar4, 0, 1, 0);
				}
				else
				{
					MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 0, 0, 1, iParam1, 0, 0);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_CASINO_HEIST_PREP_MISSION"), iParam1, &iVar4, 0, 1, 0);
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 1, iParam1, 0, 0, 0, 0);
			}
			break;
		default:
			if (__LIB_0__::func_112())
			{
				__LIB_2__::func_604(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_AGENCY(iVar0, iVar1, iParam1, bVar7);
			}
			break;
	}
	if (bVar5)
	{
		sVar10 = "GBMR_SELLTICK0" /* GXT: You earned $~1~ for helping your VIP to complete a Sell mission. */;
		if (__LIB_1__::func_375(1))
		{
			sVar10 = "GBMR_SELLTICK2" /* GXT: You earned $~1~ for helping your MC President to complete a Sell mission. */;
		}
		else if (__LIB_3__::func_39(iVar6))
		{
			sVar10 = "GBMR_SELLTICK1" /* GXT: You earned $~1~ for helping your CEO to complete a Sell mission. */;
		}
		__LIB_11__::func_817(sVar10, iParam1, 0);
	}
}

int func_150(int iParam0)//Position - 0x133C
{
	switch (iParam0)
	{
		case 23:
			return 1;
		case 20:
			return 5;
		case 15:
			return 2;
		case 24:
			return 2;
		case 21:
			return 3;
		case 22:
			return 5;
		case 16:
			return 5;
		case 17:
			return 5;
		case 25:
			return 5;
		default:
	}
	return 1;
}

float func_151()//Position - 0x1834
{
	return 600f;
}

int func_152(int iParam0)//Position - 0x7DA5
{
	switch (iParam0)
	{
		case 0:
			return 18086;
		case 1:
			return 18087;
		case 2:
			return 18088;
		case 3:
			return 18089;
		default:
	}
	return 18086;
}

struct<23> func_153()//Position - 0xAA6F
{
	return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_234;
}

int func_154(int iParam0)//Position - 0xFE42
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("pyro"):
		case joaat("rogue"):
		case joaat("seabreeze"):
		case joaat("tula"):
		case joaat("mogul"):
		case joaat("starling"):
		case joaat("nokota"):
		case joaat("molotok"):
		case joaat("alphaz1"):
		case joaat("microlight"):
		case joaat("howard"):
		case joaat("bombushka"):
		case joaat("hunter"):
		case joaat("havok"):
		case joaat("avenger"):
		case joaat("thruster"):
		case joaat("volatol"):
		case joaat("oppressor2"):
		case joaat("strikeforce"):
		case joaat("alkonost"):
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
			return 1;
			break;
	}
	return 0;
}

Vector3 func_155(int iParam0, int iParam1, bool bParam2)//Position - 0x2A42D
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 1733.5162f, 3320.3188f, 40.2235f;
				case 1:
					return 1733.5162f, 3320.3188f, 40.2235f;
				case 2:
					return 1725.2155f, 3312.6453f, 40.2235f;
				case 3:
					return 1725.2155f, 3312.6453f, 40.2235f;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 2133.585f, 4778.6807f, 39.9703f;
				case 1:
					return 2133.585f, 4778.6807f, 39.9703f;
				case 2:
					return 2131.6846f, 4793.2812f, 40.1269f;
				case 3:
					return 2131.6846f, 4793.2812f, 40.1269f;
				default:
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return -680.2657f, 74.655f, 68.6856f;
				case 1:
					return -680.2657f, 74.655f, 68.6856f;
				case 2:
					return -676.298f, 101.511f, 54.855f;
				case 3:
					return -676.298f, 101.511f, 54.855f;
				default:
			}
			break;
		case 24:
			switch (iParam1)
			{
				case 0:
					return 744.2346f, -3176.6636f, 4.9005f;
				case 1:
					return 744.2346f, -3176.6636f, 4.9005f;
				case 2:
					return 735.2852f, -3166.1895f, 4.9005f;
				case 3:
					return 735.2852f, -3166.1895f, 4.9005f;
				default:
			}
			break;
		case 25:
			switch (iParam1)
			{
				case 0:
					return 2002.1001f, 4712.492f, 40.6149f;
				case 1:
					return 2002.1001f, 4712.492f, 40.6149f;
				case 2:
					return 1988.9009f, 4705.6772f, 40.5671f;
				case 3:
					return 1988.9009f, 4705.6772f, 40.5671f;
				default:
			}
			break;
		case 26:
			switch (iParam1)
			{
				case 0:
					return 2408.4583f, 3324.275f, 46.6277f;
				case 1:
					return 2408.4583f, 3324.275f, 46.6277f;
				case 2:
					return 2411.6665f, 3336.4106f, 45.9022f;
				case 3:
					return 2411.6665f, 3336.4106f, 45.9022f;
				default:
			}
			break;
		case 27:
			switch (iParam1)
			{
				case 0:
					return -3181.753f, 3012.095f, -41.03f;
				case 1:
					return -3176.1108f, 3038.2063f, -36.0347f;
				case 2:
					return -3185.6123f, 3056.5857f, -41.0703f;
				case 3:
					return -3199.9934f, 3034.8774f, -37.7143f;
				default:
			}
			break;
		case 28:
			switch (iParam1)
			{
				case 0:
					return 3901.1228f, 3055.8547f, -26.333f;
				case 1:
					return 3891.9363f, 3045.58f, -22.121f;
				case 2:
					return 3933.637f, 3015.319f, -40.221f;
				case 3:
					return 3916.321f, 3052.385f, -30.754f;
				default:
			}
			break;
		case 29:
			switch (iParam1)
			{
				case 0:
					return 3401.1912f, 6334.494f, -59.0909f;
				case 1:
					return 3398.5493f, 6316.635f, -52.3259f;
				case 2:
					return 3424.207f, 6320.563f, -64.44f;
				case 3:
					return 3390.3345f, 6333.845f, -56.731f;
				default:
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					return 1091.1672f, 2307.5627f, 44.513f;
				case 1:
					return 1091.1672f, 2307.5627f, 44.513f;
				case 2:
					return 1081.6643f, 2300.5225f, 44.5138f;
				case 3:
					return 1081.6643f, 2300.5225f, 44.5138f;
				default:
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					return 2736.5688f, 1416.5463f, 23.471f;
				case 1:
					return 2736.5688f, 1416.5463f, 23.471f;
				case 2:
					return 2723.47f, 1420.855f, 23.481f;
				case 3:
					return 2723.47f, 1420.855f, 23.481f;
				default:
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 0:
					return -1567.784f, 100.107f, 56.924f;
				case 1:
					return -1567.784f, 100.107f, 56.924f;
				case 2:
					return -1473.618f, 151.295f, 53.857f;
				case 3:
					return -1473.618f, 151.295f, 53.857f;
				default:
			}
			break;
		case 30:
			switch (iParam1)
			{
				case 0:
					return 2578.2488f, 6182.8936f, 162.8385f;
				case 1:
					return 2541.9963f, 6146.477f, 157.9084f;
				case 2:
					return 2604.1382f, 6159.505f, 170.5552f;
				case 3:
					return 2514.8909f, 6139.322f, 158.3921f;
				case 4:
					return 2575.6704f, 6204.9824f, 155.3048f;
				case 5:
					return 2584.5884f, 6142.282f, 160.7758f;
				case 6:
					return 2492.0808f, 6106.285f, 173.9649f;
				case 7:
					return 2576.01f, 6133.0854f, 169.4876f;
				default:
			}
			break;
		case 31:
			switch (iParam1)
			{
				case 0:
					return -401.8941f, 5843.5874f, 45.45f;
				case 1:
					return -456.1789f, 5750.731f, 66.1382f;
				case 2:
					return -469.9607f, 5810.1777f, 44.3801f;
				case 3:
					return -437.234f, 5861.1865f, 36.8436f;
				case 4:
					return -448.1917f, 5807.2085f, 49.988f;
				case 5:
					return -422.1481f, 5770.3457f, 57.1516f;
				case 6:
					return -460.2819f, 5780.0073f, 52.7017f;
				case 7:
					return -428.5784f, 5843.096f, 44.3902f;
				default:
			}
			break;
		case 32:
			switch (iParam1)
			{
				case 0:
					return 2815.339f, -1462.8577f, 8.9045f;
				case 1:
					return 2837.545f, -1557.0084f, -1.7513f;
				case 2:
					return 2765.393f, -1587.7749f, 1.2766f;
				case 3:
					return 2754.6213f, -1465.6897f, 0.8046f;
				case 4:
					return 2842.061f, -1513.066f, 1.2421f;
				case 5:
					return 2762.3472f, -1548.3162f, 0.3614f;
				case 6:
					return 2747.598f, -1593.2408f, 3.5502f;
				case 7:
					return 2809.7202f, -1491.854f, 9.8297f;
				default:
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 0:
					return 3576.591f, 3656.36f, 32.899f;
				case 1:
					return 3576.591f, 3656.36f, 32.899f;
				case 2:
					return 3573.451f, 3667.0017f, 32.8886f;
				case 3:
					return 3573.451f, 3667.0017f, 32.8886f;
				default:
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					return 1673.2805f, 2607.976f, 44.5649f;
				case 1:
					return 1673.2805f, 2607.976f, 44.5649f;
				case 2:
					return 1673.4609f, 2601.0017f, 44.5649f;
				case 3:
					return 1673.4609f, 2601.0017f, 44.5649f;
				default:
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 0:
					return -1951.61f, 3335.502f, 31.96f;
				case 1:
					return -1951.61f, 3335.502f, 31.96f;
				case 2:
					return -1955.774f, 3324.837f, 31.96f;
				case 3:
					return -1955.774f, 3324.837f, 31.96f;
				default:
			}
			break;
		case 48:
			switch (iParam1)
			{
				case 0:
					return -1937.031f, 479.904f, 101.691f;
				case 1:
					return -1937.031f, 479.904f, 101.691f;
				case 2:
					return -1952.552f, 477.158f, 101.691f;
				case 3:
					return -1952.552f, 477.158f, 101.691f;
				default:
			}
			break;
		case 49:
			switch (iParam1)
			{
				case 0:
					return -786.114f, 866.828f, 202.172f;
				case 1:
					return -786.114f, 866.828f, 202.172f;
				case 2:
					return -787.961f, 866.511f, 202.171f;
				case 3:
					return -787.961f, 866.511f, 202.171f;
				default:
			}
			break;
		case 50:
			switch (iParam1)
			{
				case 0:
					return 198.883f, 108.968f, 105.07f;
				case 1:
					return 198.883f, 108.968f, 105.07f;
				case 2:
					return 210.382f, 107.157f, 105.07f;
				case 3:
					return 210.382f, 107.157f, 105.07f;
				default:
			}
			break;
		case 33:
		case 34:
		case 35:
			return 0f, 0f, 0f;
		case 42:
		case 43:
		case 44:
			return 0f, 0f, 0f;
		case 39:
		case 40:
		case 41:
			return 0f, 0f, 0f;
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
			return 0f, 0f, 0f;
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
			return 0f, 0f, 0f;
		case 45:
		case 46:
		case 47:
			return 0f, 0f, 0f;
		case 51:
			switch (iParam1)
			{
				case 0:
					return -1788.0525f, -842.3671f, 6.8088f;
				default:
			}
			break;
		case 52:
			switch (iParam1)
			{
				case 0:
					return 607.5912f, -545.4429f, 14.2422f;
				default:
			}
			break;
		case 53:
			switch (iParam1)
			{
				case 0:
					return 1750.3967f, -1551.8258f, 111.6305f;
				default:
			}
			break;
		case 54:
			switch (iParam1)
			{
				case 0:
					return -3283.8772f, 998.4238f, 2.6219f;
				default:
			}
			break;
		case 55:
			switch (iParam1)
			{
				case 0:
					return 2517.474f, 1030.263f, 76.854f;
				default:
			}
			break;
		case 56:
			switch (iParam1)
			{
				case 0:
					return 2437.9949f, 1461.5397f, 36.8019f;
				default:
			}
			break;
		case 57:
			switch (iParam1)
			{
				case 0:
					return 1369.4f, 1412.809f, 102.5004f;
				default:
			}
			break;
		case 58:
			switch (iParam1)
			{
				case 0:
					return 321.9248f, 2423.0657f, 47.4936f;
				default:
			}
			break;
		case 59:
			switch (iParam1)
			{
				case 0:
					return 1182.1031f, 3078.3088f, 39.9078f;
				default:
			}
			break;
		case 60:
			switch (iParam1)
			{
				case 0:
					return 107.2016f, 3651.5603f, 38.5678f;
				default:
			}
			break;
		case 61:
			switch (iParam1)
			{
				case 0:
					return 1005.6583f, 4346.605f, 42.8017f;
				default:
			}
			break;
		case 62:
			switch (iParam1)
			{
				case 0:
					return 2017.981f, 4789.238f, 40.8519f;
				default:
			}
			break;
		case 63:
			switch (iParam1)
			{
				case 0:
					return 2650.9424f, 4225.5522f, 42.4054f;
				default:
			}
			break;
		case 64:
			switch (iParam1)
			{
				case 0:
					return 758.5976f, 6591.7734f, 1.3513f;
				default:
			}
			break;
		case 65:
			switch (iParam1)
			{
				case 0:
					return -341.3064f, 6469.665f, 1.3353f;
				default:
			}
			break;
	}
	if (!bParam2)
	{
	}
	return 0f, 0f, 0f;
}

Vector3 func_156(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x2CDFE
{
	switch (iParam2)
	{
		case 12:
			switch (iParam1)
			{
				case 0:
					switch (iParam0)
					{
						case 0:
							return 1743.856f, 3296.61f, 40.117f;
						case 1:
							return 1721.797f, 3304.43f, 40.223f;
						case 2:
							return 1721.607f, 3320.017f, 40.223f;
						case 3:
							return 1739.903f, 3310.823f, 40.223f;
						case 4:
							return 1739.029f, 3311.913f, 40.223f;
						case 5:
							return 1728.027f, 3313.413f, 40.223f;
						case 6:
							return 1728.622f, 3314.655f, 40.223f;
						case 7:
							return 1728.319f, 3296.102f, 40.223f;
						case 8:
							return 1728.999f, 3297.426f, 40.223f;
						case 9:
							return 1716.8959f, 3317.1418f, 40.2235f;
						case 10:
							return 1724.4331f, 3287.9612f, 40.1522f;
						case 11:
							return 1724.5315f, 3289.6213f, 40.1871f;
						case 12:
							return 1756.3555f, 3297.5012f, 40.154f;
						case 13:
							return 1757.8159f, 3297.6514f, 40.1514f;
						case 14:
							return 1727.0168f, 3326.0593f, 40.2235f;
						case 15:
							return 1736.5751f, 3328.026f, 40.2235f;
						default:
					}
					break;
				case 1:
					switch (iParam0)
					{
						case 0:
							return 2138.027f, 4795.798f, 40.111f;
						case 1:
							return 2124.896f, 4785.83f, 39.97f;
						case 2:
							return 2125.711f, 4786.782f, 39.97f;
						case 3:
							return 2136.816f, 4785.323f, 39.97f;
						case 4:
							return 2135.83f, 4786.41f, 39.97f;
						case 5:
							return 2126f, 4775.52f, 39.97f;
						case 6:
							return 2137.563f, 4775.1f, 39.97f;
						case 7:
							return 2138.546f, 4776.208f, 39.97f;
						case 8:
							return 2145.823f, 4775.587f, 39.998f;
						case 9:
							return 2142.65f, 4786.065f, 39.97f;
						case 10:
							return 2145.5415f, 4793.8145f, 40.1418f;
						case 11:
							return 2146.8486f, 4794.527f, 40.1416f;
						case 12:
							return 2116.4878f, 4784.138f, 40.0225f;
						case 13:
							return 2143.0986f, 4777.269f, 39.9703f;
						case 14:
							return 2128.042f, 4769.7456f, 39.9703f;
						case 15:
							return 2137.144f, 4770.1353f, 40.0288f;
						default:
					}
					break;
				case 2:
					switch (iParam0)
					{
						case 0:
							return -681.991f, 72.33f, 68.686f;
						case 1:
							return -701.956f, 65.44f, 68.686f;
						case 2:
							return -685.388f, 59.906f, 68.686f;
						case 3:
							return -680.096f, 101.055f, 54.855f;
						case 4:
							return -683.356f, 72.042f, 68.686f;
						case 5:
							return -680.307f, 102.354f, 54.855f;
						case 6:
							return -681.42f, 82.988f, 68.686f;
						case 7:
							return -697.754f, 57.821f, 68.686f;
						case 8:
							return -708.57f, 73.349f, 68.686f;
						case 9:
							return -708.576f, 72.288f, 68.686f;
						case 10:
							return -690.4533f, 76.3671f, 54.8554f;
						case 11:
							return -697.0634f, 71.039f, 58.8734f;
						case 12:
							return -666.7314f, 98.2226f, 54.8554f;
						case 13:
							return -670.3982f, 92.1167f, 54.8554f;
						case 14:
							return -711.2704f, 56.4375f, 68.6856f;
						case 15:
							return -696.6024f, 56.8736f, 68.6856f;
						default:
					}
					break;
			}
			break;
		case 0:
			switch (iParam1)
			{
				case 6:
					switch (iParam0)
					{
						case 0:
							return 0f, 0f, 0f;
						default:
					}
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 27:
					switch (iParam0)
					{
						case 6:
							return -3244.1345f, 3020.2588f, 1f;
						case 7:
							return -3244.7468f, 3018.8955f, 1f;
						case 11:
							return -2.5f, -14.2f, 1.2f;
						case 12:
							return 3.2f, -10.45f, 0.7f;
						case 13:
							return -2.4f, -6.7f, 3.1f;
						case 14:
							return -1.6f, 11.5f, 1.3f;
						case 15:
							return 2.2f, 7.15f, 3.1f;
						case 16:
							return -2.5f, -14.2f, 1.2f;
						case 17:
							return 3.2f, -10.45f, 0.7f;
						case 18:
							return -2.4f, -6.7f, 3.1f;
						case 19:
							return -1.6f, 11.5f, 1.3f;
						case 20:
							return 2.2f, 7.15f, 3.1f;
						default:
					}
					break;
				case 28:
					switch (iParam0)
					{
						case 6:
							return 3853.1433f, 3044.2876f, 1f;
						case 7:
							return 3852.5837f, 3042.889f, 1f;
						case 11:
							return -2.5f, -14.2f, 1.2f;
						case 12:
							return 3.2f, -10.45f, 0.7f;
						case 13:
							return -2.4f, -6.7f, 3.1f;
						case 14:
							return -1.6f, 11.5f, 1.3f;
						case 15:
							return 2.2f, 7.15f, 3.1f;
						case 16:
							return -2.5f, -14.2f, 1.2f;
						case 17:
							return 3.2f, -10.45f, 0.7f;
						case 18:
							return -2.4f, -6.7f, 3.1f;
						case 19:
							return -1.6f, 11.5f, 1.3f;
						case 20:
							return 2.2f, 7.15f, 3.1f;
						default:
					}
					break;
				case 29:
					switch (iParam0)
					{
						case 6:
							return 3363.8655f, 6295.7754f, 1f;
						case 7:
							return 3365.067f, 6296.5205f, 1f;
						case 11:
							return -2.5f, -14.2f, 1.2f;
						case 12:
							return 3.2f, -10.45f, 0.7f;
						case 13:
							return -2.4f, -6.7f, 3.1f;
						case 14:
							return -1.6f, 11.5f, 1.3f;
						case 15:
							return 2.2f, 7.15f, 3.1f;
						case 16:
							return -2.5f, -14.2f, 1.2f;
						case 17:
							return 3.2f, -10.45f, 0.7f;
						case 18:
							return -2.4f, -6.7f, 3.1f;
						case 19:
							return -1.6f, 11.5f, 1.3f;
						case 20:
							return 2.2f, 7.15f, 3.1f;
						default:
					}
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 30:
					switch (iParam0)
					{
						case 0:
							return 2573.1538f, 6181.2007f, 162.424f;
						case 1:
							return 2572.915f, 6175.194f, 162.9417f;
						case 2:
							return 2579.1562f, 6174.752f, 163.3838f;
						case 3:
							return 2562.8848f, 6177.633f, 162.5126f;
						default:
					}
					break;
				case 31:
					switch (iParam0)
					{
						case 0:
							return -399.4203f, 5842.636f, 45.4566f;
						case 1:
							return -408.8625f, 5813.502f, 53.2642f;
						case 2:
							return -401.2626f, 5811.197f, 53.2378f;
						case 3:
							return -407.1889f, 5802.803f, 54.5755f;
						default:
					}
					break;
				case 32:
					switch (iParam0)
					{
						case 0:
							return 2817.8054f, -1461.092f, 9.0637f;
						case 1:
							return 2786.5566f, -1505.1354f, 7.6518f;
						case 2:
							return 2799.5942f, -1517.7476f, 6.9735f;
						case 3:
							return 2805.5874f, -1510.6223f, 8.2916f;
						default:
					}
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 3:
					switch (iParam0)
					{
						case 0:
							return 1093.78f, 2140.327f, 56.695f;
						case 1:
							return 1130.813f, 2124.792f, 54.556f;
						case 2:
							return 1127.52f, 2101.5f, 54.772f;
						case 3:
							return 1113.373f, 2182.493f, 44.535f;
						case 4:
							return 1112.533f, 2183.417f, 44.568f;
						case 5:
							return 1075.16f, 2193.236f, 47.259f;
						case 6:
							return 1135.335f, 2191.693f, 78.33f;
						case 7:
							return 1123.011f, 2126.863f, 78.272f;
						case 8:
							return 1145.076f, 2102.481f, 54.8f;
						case 9:
							return 1108.083f, 2209.375f, 47.907f;
						case 10:
							return 1100.402f, 2161.894f, 52.415f;
						case 11:
							return 1131.636f, 2179.651f, 47.966f;
						case 12:
							return 1101.571f, 2096.392f, 53.158f;
						case 13:
							return 1126.184f, 2100.957f, 54.772f;
						case 14:
							return 1163.853f, 2129.017f, 54.211f;
						default:
					}
					break;
				case 4:
					switch (iParam0)
					{
						case 0:
							return 2715.271f, 1480.323f, 43.561f;
						case 1:
							return 2733.868f, 1424.111f, 23.489f;
						case 2:
							return 2732.957f, 1424.497f, 23.489f;
						case 3:
							return 2716.831f, 1502.566f, 41.253f;
						case 4:
							return 2715.288f, 1462.307f, 23.501f;
						case 5:
							return 2716.252f, 1462.303f, 23.501f;
						case 6:
							return 2722.413f, 1510.587f, 43.561f;
						case 7:
							return 2741.34f, 1556.582f, 39.338f;
						case 8:
							return 2719.455f, 1539.602f, 49.536f;
						case 9:
							return 2729.297f, 1529.243f, 39.337f;
						case 10:
							return 2733.219f, 1580.919f, 65.543f;
						case 11:
							return 2729.475f, 1574.6906f, 49.5362f;
						case 12:
							return 2740.005f, 1543.623f, 49.692f;
						case 13:
							return 2749.464f, 1445.561f, 23.489f;
						case 14:
							return 2764.94f, 1441.234f, 23.449f;
						default:
					}
					break;
				case 5:
					switch (iParam0)
					{
						case 0:
							return -1558.803f, 108.016f, 55.78f;
						case 1:
							return -1560.034f, 108.345f, 55.78f;
						case 2:
							return -1547.337f, 115.781f, 55.78f;
						case 3:
							return -1584.318f, 81.096f, 58.21f;
						case 4:
							return -1538.719f, 126.825f, 55.78f;
						case 5:
							return -1537.634f, 122.583f, 63.544f;
						case 6:
							return -1525.2184f, 75.4085f, 60.314f;
						case 7:
							return -1570.808f, 114.973f, 58.179f;
						case 8:
							return -1541.0206f, 66.5022f, 56.5391f;
						case 9:
							return -1570.878f, 126.969f, 57.281f;
						case 10:
							return -1541.314f, 65.5921f, 56.5391f;
						case 11:
							return -1583.789f, 82.004f, 58.21f;
						case 12:
							return -1552.523f, 84.412f, 60.313f;
						case 13:
							return -1575.14f, 94.819f, 57.568f;
						case 14:
							return -1499.468f, 102.278f, 54.574f;
						default:
					}
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 24:
					switch (iParam0)
					{
						case 0:
							return 1292.865f, -3333.497f, 4.904f;
						case 1:
							return 1292.024f, -3335.079f, 4.903f;
						case 2:
							return 1269.8988f, -3327.7295f, 4.9016f;
						case 3:
							return 1245.584f, -3332.266f, 5.029f;
						case 4:
							return 1274.381f, -3245.824f, 7.712f;
						case 5:
							return 1289.874f, -3301.747f, 23.393f;
						case 6:
							return 1277.907f, -3258.96f, 7.712f;
						case 7:
							return 1296.452f, -3266.749f, 4.907f;
						case 8:
							return 1295.1f, -3267.391f, 4.907f;
						case 9:
							return 1288.6592f, -3234.7737f, 4.9046f;
						case 10:
							return 1286.9646f, -3234.1013f, 4.9039f;
						case 11:
							return 1244.97f, -3267.945f, 4.684f;
						case 12:
							return 1246.036f, -3284.022f, 5.029f;
						case 13:
							return 1277.752f, -3270.18f, 4.902f;
						case 14:
							return 1271.685f, -3316.92f, 4.902f;
						default:
					}
					break;
				case 25:
					switch (iParam0)
					{
						case 0:
							return 2334.589f, 4860.638f, 51.164f;
						case 1:
							return 2311.195f, 4884.191f, 51.17f;
						case 2:
							return 2333.878f, 4890.064f, 40.811f;
						case 3:
							return 2333.304f, 4891.508f, 40.813f;
						case 4:
							return 2253.415f, 4941.463f, 40.216f;
						case 5:
							return 2279.546f, 4914.087f, 40.034f;
						case 6:
							return 2270.767f, 4966.59f, 40.729f;
						case 7:
							return 2293.625f, 4933.867f, 40.421f;
						case 8:
							return 2280.246f, 4947.119f, 40.331f;
						case 9:
							return 2267.735f, 4853.688f, 39.671f;
						case 10:
							return 2266.428f, 4853.894f, 39.669f;
						case 11:
							return 2324.546f, 4928.312f, 40.512f;
						case 12:
							return 2305.976f, 4863.044f, 40.808f;
						case 13:
							return 2305.573f, 4864.413f, 40.808f;
						case 14:
							return 2256.129f, 4957.866f, 43.373f;
						default:
					}
					break;
				case 26:
					switch (iParam0)
					{
						case 0:
							return 2357.072f, 3072.47f, 47.166f;
						case 1:
							return 2400.932f, 3127.196f, 51.046f;
						case 2:
							return 2372.066f, 3061.218f, 49.938f;
						case 3:
							return 2375.476f, 3030.531f, 52.678f;
						case 4:
							return 2403.087f, 3101.762f, 47.153f;
						case 5:
							return 2427.642f, 3112.139f, 47.176f;
						case 6:
							return 2366.285f, 3115.281f, 47.326f;
						case 7:
							return 2366.598f, 3116.801f, 47.389f;
						case 8:
							return 2440.723f, 3106.481f, 46.569f;
						case 9:
							return 2439.382f, 3107.084f, 46.77f;
						case 10:
							return 2415.866f, 3133.103f, 47.174f;
						case 11:
							return 2414.316f, 3131.963f, 47.166f;
						case 12:
							return 2411.899f, 3043.151f, 47.152f;
						case 13:
							return 2380.094f, 3040.832f, 47.153f;
						case 14:
							return 2356.214f, 3043.366f, 47.152f;
						default:
					}
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 39:
					switch (iParam0)
					{
						case 0:
							return -180.8231f, -992.3263f, 253.357f;
						case 1:
							return -160.3267f, -989.1707f, 253.1315f;
						case 2:
							return -171.43f, -963.765f, 253.357f;
						case 3:
							return -162.1393f, -993.4059f, 253.1315f;
						case 4:
							return -161.374f, -994.5391f, 253.1315f;
						case 5:
							return -176.8964f, -1005.3085f, 253.1315f;
						case 6:
							return -159.4269f, -1014.7977f, 253.1315f;
						case 7:
							return -160.9709f, -1015.3647f, 253.1315f;
						case 8:
							return -142.074f, -966.156f, 253.131f;
						case 9:
							return -142.934f, -964.597f, 253.131f;
						case 10:
							return -151.773f, -942.141f, 253.131f;
						case 11:
							return -152.801f, -960.127f, 253.131f;
						case 12:
							return -143.803f, -974.004f, 253.131f;
						case 13:
							return -152.268f, -1004.254f, 253.131f;
						case 14:
							return -147.1f, -994.49f, 260.852f;
						case 15:
							return -152.819f, -985.958f, 253.131f;
						case 16:
							return -148.619f, -951.681f, 253.131f;
						case 17:
							return -147.133f, -951.752f, 253.131f;
						case 18:
							return -170.741f, -980.019f, 253.131f;
						case 19:
							return -154.076f, -984.87f, 253.131f;
						default:
					}
					break;
				case 40:
					switch (iParam0)
					{
						case 0:
							return 449.462f, -262.52f, 70.238f;
						case 1:
							return 442.651f, -261.782f, 70.247f;
						case 2:
							return 423.16f, -259.255f, 70.25f;
						case 3:
							return 422.516f, -258.425f, 70.251f;
						case 4:
							return 414.287f, -236.019f, 73.251f;
						case 5:
							return 442.547f, -260.569f, 70.247f;
						case 6:
							return 453.584f, -259.089f, 73.807f;
						case 7:
							return 401.521f, -242.696f, 73.252f;
						case 8:
							return 439.391f, -268.246f, 70.245f;
						case 9:
							return 431.611f, -266.863f, 70.249f;
						case 10:
							return 407.7993f, -248.8011f, 71.4987f;
						case 11:
							return 446.305f, -267.281f, 70.238f;
						case 12:
							return 447.542f, -266.996f, 70.238f;
						case 13:
							return 412.912f, -236.345f, 73.251f;
						case 14:
							return 446.86f, -272.326f, 73.807f;
						case 15:
							return 402.363f, -243.797f, 73.252f;
						case 16:
							return 421.379f, -249.522f, 73.251f;
						case 17:
							return 406.669f, -258.085f, 70.24f;
						case 18:
							return 430.744f, -253.762f, 70.253f;
						case 19:
							return 399.449f, -248.934f, 73.252f;
						default:
					}
					break;
				case 41:
					switch (iParam0)
					{
						case 0:
							return 273.69f, 218.698f, 136.757f;
						case 1:
							return 275.351f, 219.248f, 136.757f;
						case 2:
							return 306.293f, 294.227f, 131.091f;
						case 3:
							return 300.332f, 268.405f, 131.091f;
						case 4:
							return 284.686f, 283.326f, 131.091f;
						case 5:
							return 283.728f, 284.528f, 131.091f;
						case 6:
							return 254.6654f, 265.5165f, 136.7574f;
						case 7:
							return 282.549f, 294.187f, 131.091f;
						case 8:
							return 260.601f, 256.865f, 136.757f;
						case 9:
							return 258.817f, 256.414f, 136.757f;
						case 10:
							return 261.207f, 212.967f, 136.757f;
						case 11:
							return 275.37f, 265.657f, 136.757f;
						case 12:
							return 290.703f, 247.523f, 122.819f;
						case 13:
							return 289.878f, 249.024f, 122.819f;
						case 14:
							return 283.138f, 240.139f, 127.398f;
						case 15:
							return 277.176f, 201.076f, 136.757f;
						case 16:
							return 261.957f, 251.711f, 136.757f;
						case 17:
							return 286.243f, 228.271f, 136.757f;
						case 18:
							return 296.809f, 305.152f, 131.091f;
						case 19:
							return 304.936f, 293.503f, 131.091f;
						default:
					}
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 48:
					switch (iParam4)
					{
						case 0:
							switch (iParam0)
							{
								case 0:
									return 993.839f, 63.433f, 103.018f;
								case 1:
									return 995.801f, 54.904f, 103.018f;
								case 2:
									return 988.85f, 68.939f, 106.768f;
								case 3:
									return 998.417f, 62.456f, 103.018f;
								case 4:
									return 982.644f, 66.508f, 106.768f;
								case 5:
									return 986.096f, 61.713f, 106.768f;
								case 6:
									return 988.643f, 70.51f, 106.768f;
								case 7:
									return 986.19f, 54.502f, 103.018f;
								case 8:
									return 996.02f, 56.262f, 103.018f;
								case 9:
									return 990.249f, 50.845f, 103.018f;
								default:
							}
							break;
						case 1:
							switch (iParam0)
							{
								case 0:
									return -1002.324f, -760.707f, 78.858f;
								case 1:
									return -1001.445f, -759.305f, 78.858f;
								case 2:
									return -1008.288f, -757.25f, 78.858f;
								case 3:
									return -1014.908f, -754.371f, 78.857f;
								case 4:
									return -1013.581f, -753.655f, 78.857f;
								case 5:
									return -1005.01f, -741.265f, 75.537f;
								case 6:
									return -1013.19f, -738.327f, 75.537f;
								case 7:
									return -1000.486f, -733.255f, 75.537f;
								case 8:
									return -998.99f, -734.27f, 75.537f;
								case 9:
									return -993.651f, -748.135f, 75.537f;
								default:
							}
							break;
						case 2:
							switch (iParam0)
							{
								case 0:
									return -773.1f, 780.86f, 212.963f;
								case 1:
									return -759.681f, 788.601f, 213.576f;
								case 2:
									return -758.178f, 788.205f, 213.576f;
								case 3:
									return -771.967f, 769.721f, 212.199f;
								case 4:
									return -735.372f, 786.294f, 212.199f;
								case 5:
									return -735.52f, 784.694f, 212.199f;
								case 6:
									return -752.624f, 797.015f, 219.145f;
								case 7:
									return -751.734f, 770.025f, 212.199f;
								case 8:
									return -778.527f, 783.835f, 212.962f;
								case 9:
									return -762.157f, 769.609f, 212.199f;
								default:
							}
							break;
						case 3:
							switch (iParam0)
							{
								case 0:
									return 768.73f, -1703.733f, 43.147f;
								case 1:
									return 769.303f, -1705.188f, 43.147f;
								case 2:
									return 781.62f, -1718.228f, 43.147f;
								case 3:
									return 782.896f, -1717.428f, 43.147f;
								case 4:
									return 784.584f, -1693.391f, 43.147f;
								case 5:
									return 782.455f, -1703.404f, 43.147f;
								case 6:
									return 787.975f, -1708.351f, 43.147f;
								case 7:
									return 765.399f, -1709.103f, 43.147f;
								case 8:
									return 779.672f, -1711.359f, 43.147f;
								case 9:
									return 784.57f, -1694.791f, 43.147f;
								default:
							}
							break;
						case 4:
							switch (iParam0)
							{
								case 0:
									return -2210.406f, 269.121f, 197.109f;
								case 1:
									return -2211.011f, 267.504f, 197.109f;
								case 2:
									return -2213.194f, 255.374f, 197.109f;
								case 3:
									return -2212.134f, 254.583f, 197.109f;
								case 4:
									return -2205.039f, 268.154f, 197.109f;
								case 5:
									return -2203.703f, 260.786f, 197.109f;
								case 6:
									return -2216.626f, 270.564f, 197.109f;
								case 7:
									return -2211.247f, 277.544f, 197.109f;
								case 8:
									return -2218.306f, 262.595f, 197.109f;
								case 9:
									return -2209.449f, 258.3f, 197.109f;
								default:
							}
							break;
					}
					break;
				case 49:
					switch (iParam4)
					{
						case 0:
							switch (iParam0)
							{
								case 0:
									return 36.335f, 160.14f, 125.216f;
								case 1:
									return 36.81f, 161.489f, 125.216f;
								case 2:
									return 40.953f, 178.207f, 125.216f;
								case 3:
									return 42.204f, 178.419f, 125.216f;
								case 4:
									return 32.215f, 173.353f, 125.216f;
								case 5:
									return 43.557f, 160.005f, 125.216f;
								case 6:
									return 44.03f, 169.237f, 125.216f;
								case 7:
									return 51.268f, 163.151f, 125.297f;
								case 8:
									return 33.452f, 172.868f, 125.216f;
								case 9:
									return 35.957f, 167.011f, 125.216f;
								default:
							}
							break;
						case 1:
							switch (iParam0)
							{
								case 0:
									return 61.077f, -1019.272f, 78.78f;
								case 1:
									return 52.406f, -1016.374f, 82.406f;
								case 2:
									return 61.914f, -1017.994f, 78.787f;
								case 3:
									return 59.311f, -1010.107f, 78.82f;
								case 4:
									return 68.599f, -1023.203f, 78.769f;
								case 5:
									return 61.914f, -1029.657f, 78.748f;
								case 6:
									return 63.109f, -1029.76f, 78.75f;
								case 7:
									return 53.874f, -1023.26f, 78.746f;
								case 8:
									return 55.604f, -1017.201f, 78.771f;
								case 9:
									return 53.067f, -1022.341f, 78.745f;
								default:
							}
							break;
						case 2:
							switch (iParam0)
							{
								case 0:
									return -1660.653f, -525.339f, 74.057f;
								case 1:
									return -1659.457f, -524.319f, 74.057f;
								case 2:
									return -1653.834f, -521.179f, 74.058f;
								case 3:
									return -1649.052f, -517.647f, 77.507f;
								case 4:
									return -1647.756f, -509.018f, 77.507f;
								case 5:
									return -1636.601f, -516.388f, 74.058f;
								case 6:
									return -1637.474f, -517.626f, 74.058f;
								case 7:
									return -1647.528f, -525.36f, 74.058f;
								case 8:
									return -1633.922f, -506.23f, 74.059f;
								case 9:
									return -1633.56f, -508.089f, 74.059f;
								default:
							}
							break;
						case 3:
							switch (iParam0)
							{
								case 0:
									return -28.885f, -608.424f, 111.004f;
								case 1:
									return -27.785f, -607.235f, 111.004f;
								case 2:
									return -39.118f, -605.699f, 111.004f;
								case 3:
									return -37.083f, -589.025f, 105.328f;
								case 4:
									return -29.833f, -595.688f, 105.328f;
								case 5:
									return -23.787f, -593.053f, 105.328f;
								case 6:
									return -23.517f, -594.444f, 105.328f;
								case 7:
									return -31.017f, -582.113f, 105.328f;
								case 8:
									return -29.931f, -581.349f, 105.328f;
								case 9:
									return -20.856f, -585.15f, 105.328f;
								default:
							}
							break;
						case 4:
							switch (iParam0)
							{
								case 0:
									return -712.716f, 699.536f, 169.036f;
								case 1:
									return -711.212f, 700.331f, 169.036f;
								case 2:
									return -703.363f, 692.511f, 169.036f;
								case 3:
									return -704.323f, 683.645f, 157.587f;
								case 4:
									return -704.507f, 682.016f, 157.587f;
								case 5:
									return -713.181f, 679.291f, 157.587f;
								case 6:
									return -708.112f, 672.476f, 157.587f;
								case 7:
									return -712.499f, 690.301f, 157.636f;
								case 8:
									return -713.866f, 691.405f, 157.636f;
								case 9:
									return -696.879f, 679.535f, 157.587f;
								default:
							}
							break;
					}
					break;
				case 50:
					switch (iParam4)
					{
						case 0:
							switch (iParam0)
							{
								case 0:
									return -640.537f, 322.246f, 139.152f;
								case 1:
									return -639.763f, 320.936f, 139.152f;
								case 2:
									return -653.326f, 317.202f, 139.152f;
								case 3:
									return -652.302f, 318.385f, 139.152f;
								case 4:
									return -661.12f, 312.304f, 139.152f;
								case 5:
									return -642.867f, 309.892f, 139.152f;
								case 6:
									return -645.223f, 316.689f, 139.152f;
								case 7:
									return -661.157f, 320.958f, 139.152f;
								case 8:
									return -661.545f, 322.142f, 139.152f;
								case 9:
									return -648.312f, 324.596f, 139.152f;
								default:
							}
							break;
						case 1:
							switch (iParam0)
							{
								case 0:
									return -235.761f, -836.681f, 124.257f;
								case 1:
									return -235.048f, -837.794f, 124.257f;
								case 2:
									return -218.439f, -837.915f, 124.257f;
								case 3:
									return -228.814f, -843.418f, 127.891f;
								case 4:
									return -229.3f, -844.788f, 127.891f;
								case 5:
									return -225.591f, -841.045f, 124.257f;
								case 6:
									return -219.375f, -830.123f, 125.793f;
								case 7:
									return -226.836f, -824.629f, 125.793f;
								case 8:
									return -226.003f, -835.978f, 124.257f;
								case 9:
									return -227.487f, -835.91f, 124.257f;
								default:
							}
							break;
						case 2:
							switch (iParam0)
							{
								case 0:
									return 767.098f, -1778.02f, 52.292f;
								case 1:
									return 767.94f, -1776.889f, 52.292f;
								case 2:
									return 753.899f, -1778.207f, 48.292f;
								case 3:
									return 753.349f, -1785.912f, 48.292f;
								case 4:
									return 765.624f, -1785.842f, 48.292f;
								case 5:
									return 762.323f, -1789.169f, 48.292f;
								case 6:
									return 761.597f, -1787.714f, 48.292f;
								case 7:
									return 764.846f, -1772.592f, 52.292f;
								case 8:
									return 757.193f, -1797.583f, 48.292f;
								case 9:
									return 757.355f, -1795.989f, 48.292f;
								default:
							}
							break;
						case 3:
							switch (iParam0)
							{
								case 0:
									return -817.849f, -716.638f, 123.238f;
								case 1:
									return -817.143f, -715.266f, 123.238f;
								case 2:
									return -818.986f, -709.256f, 123.238f;
								case 3:
									return -823.145f, -701.355f, 120.273f;
								case 4:
									return -820.585f, -722.424f, 120.273f;
								case 5:
									return -826.581f, -727.254f, 120.273f;
								case 6:
									return -836.386f, -720.485f, 120.273f;
								case 7:
									return -830.627f, -717.602f, 120.272f;
								case 8:
									return -829.2f, -717.849f, 120.272f;
								case 9:
									return -829.929f, -722.261f, 120.273f;
								default:
							}
							break;
						case 4:
							switch (iParam0)
							{
								case 0:
									return 304.545f, 121.992f, 144.169f;
								case 1:
									return 307.53f, 118.299f, 144.169f;
								case 2:
									return 303.579f, 112.923f, 144.169f;
								case 3:
									return 311.11f, 111.17f, 144.169f;
								case 4:
									return 312.107f, 112.245f, 144.169f;
								case 5:
									return 318.931f, 107.032f, 144.169f;
								case 6:
									return 306.023f, 130.031f, 144.169f;
								case 7:
									return 307.452f, 129.553f, 144.169f;
								case 8:
									return 312.966f, 123.354f, 144.169f;
								case 9:
									return 326.782f, 104.762f, 144.169f;
								default:
							}
							break;
					}
					break;
			}
			break;
		case 20:
			switch (iParam3)
			{
				case 402:
					switch (iParam0)
					{
						case 0:
							return -1241.245f, -860.886f, 64.331f;
						case 1:
							return -1247.167f, -852.088f, 67.858f;
						case 2:
							return -1243.597f, -847.413f, 76.72f;
						case 3:
							return -1234.752f, -844.044f, 76.537f;
						case 4:
							return -1238.958f, -849.562f, 84.096f;
						case 5:
							return -1253.948f, -840.236f, 64.331f;
						case 6:
							return -1253.731f, -841.355f, 64.331f;
						case 7:
							return -1259.925f, -828.494f, 64.331f;
						case 8:
							return -1248.383f, -831.564f, 64.331f;
						case 9:
							return -1259.494f, -842.032f, 64.331f;
						default:
					}
					break;
				case 403:
					switch (iParam0)
					{
						case 0:
							return 221.5159f, -3177.2446f, 39.5351f;
						case 1:
							return 229.0691f, -3159.9866f, 49.0724f;
						case 2:
							return 257.9539f, -3167.6272f, 43.7787f;
						case 3:
							return 238.3749f, -3193.6406f, 39.5346f;
						case 4:
							return 195.9496f, -3165.034f, 42.2666f;
						case 5:
							return 193.1859f, -3187.7744f, 42.3897f;
						case 6:
							return 224.9519f, -3155.6655f, 64.0225f;
						case 7:
							return 263.1786f, -3176.3186f, 42.2673f;
						case 8:
							return 225.5325f, -3193.258f, 39.5357f;
						case 9:
							return 224.0226f, -3191.8992f, 39.5358f;
						default:
					}
					break;
				case 404:
					switch (iParam0)
					{
						case 0:
							return -148.012f, -1291.253f, 49.298f;
						case 1:
							return -143.001f, -1286.551f, 46.898f;
						case 2:
							return -135.593f, -1256.901f, 47.884f;
						case 3:
							return -138.819f, -1270.81f, 46.898f;
						case 4:
							return -151.248f, -1270.13f, 46.898f;
						case 5:
							return -153.862f, -1278.051f, 46.898f;
						case 6:
							return -153.746f, -1279.399f, 46.898f;
						case 7:
							return -122.897f, -1259.813f, 49.632f;
						case 8:
							return -142.455f, -1291.391f, 51.208f;
						case 9:
							return -130.425f, -1283.501f, 46.898f;
						default:
					}
					break;
				case 405:
					switch (iParam0)
					{
						case 0:
							return 911.642f, -1703.261f, 56.134f;
						case 1:
							return 904.0347f, -1698.9255f, 50.135f;
						case 2:
							return 918.6627f, -1681.3534f, 50.1266f;
						case 3:
							return 919.484f, -1667.931f, 50.128f;
						case 4:
							return 909.869f, -1688.646f, 50.131f;
						case 5:
							return 911.682f, -1688.183f, 50.134f;
						case 6:
							return 905.2239f, -1667.8531f, 50.1239f;
						case 7:
							return 902.225f, -1688.5007f, 50.128f;
						case 8:
							return 917.1311f, -1698.5657f, 50.1266f;
						case 9:
							return 902.419f, -1679.301f, 50.127f;
						default:
					}
					break;
				case 406:
					switch (iParam0)
					{
						case 0:
							return 919.419f, -936.738f, 58.092f;
						case 1:
							return 921.712f, -922.279f, 58.091f;
						case 2:
							return 931.61f, -915.985f, 67.983f;
						case 3:
							return 941.124f, -923.67f, 67.983f;
						case 4:
							return 945.923f, -939.461f, 58.092f;
						case 5:
							return 945.552f, -938.02f, 58.092f;
						case 6:
							return 953.141f, -915.568f, 58.089f;
						case 7:
							return 960.675f, -942.48f, 58.092f;
						case 8:
							return 943.229f, -948.066f, 58.093f;
						case 9:
							return 932.96f, -948.169f, 58.093f;
						default:
					}
					break;
				case 407:
					switch (iParam0)
					{
						case 0:
							return 86.375f, -356.298f, 66.202f;
						case 1:
							return 87.344f, -355.182f, 66.202f;
						case 2:
							return 77.099f, -344.416f, 66.202f;
						case 3:
							return 78.125f, -344.341f, 66.202f;
						case 4:
							return 91.412f, -344.504f, 74.567f;
						case 5:
							return 84.404f, -342.019f, 74.567f;
						case 6:
							return 95.296f, -332.612f, 74.567f;
						case 7:
							return 70.619f, -353.066f, 66.202f;
						case 8:
							return 91.625f, -350.223f, 66.202f;
						case 9:
							return 86.585f, -328.404f, 74.566f;
						default:
					}
					break;
				case 408:
					switch (iParam0)
					{
						case 0:
							return -1554.797f, 206.311f, 74.501f;
						case 1:
							return -1571.788f, 232.051f, 74.501f;
						case 2:
							return -1602.064f, 208.697f, 74.501f;
						case 3:
							return -1580.378f, 185.462f, 74.501f;
						case 4:
							return -1557.9297f, 220.2588f, 73.3379f;
						case 5:
							return -1592.2454f, 191.2693f, 73.3379f;
						case 6:
							return -1570.87f, 209.645f, 73.338f;
						case 7:
							return -1569.802f, 210.321f, 73.338f;
						case 8:
							return -1569.4164f, 195.1552f, 74.5253f;
						case 9:
							return -1587.017f, 223.812f, 73.338f;
						default:
					}
					break;
				case 409:
					switch (iParam0)
					{
						case 0:
							return -2257.5444f, 404.0342f, 187.6023f;
						case 1:
							return -2274.2856f, 388.3651f, 187.6023f;
						case 2:
							return -2249.034f, 359.261f, 187.602f;
						case 3:
							return -2269.908f, 369.777f, 187.602f;
						case 4:
							return -2269.989f, 371.03f, 187.602f;
						case 5:
							return -2260.069f, 347.714f, 191.602f;
						case 6:
							return -2267.69f, 359.853f, 191.601f;
						case 7:
							return -2280.99f, 364.928f, 191.601f;
						case 8:
							return -2249.967f, 385.757f, 187.602f;
						case 9:
							return -2263.6326f, 380.5144f, 187.6023f;
						default:
					}
					break;
				case 410:
					switch (iParam0)
					{
						case 0:
							return -729.534f, -225.252f, 47.519f;
						case 1:
							return -737.255f, -228.409f, 47.519f;
						case 2:
							return -760.615f, -222.628f, 52.093f;
						case 3:
							return -753.98f, -233.379f, 50.103f;
						case 4:
							return -746.828f, -227.364f, 50.719f;
						case 5:
							return -751.093f, -217.187f, 52.093f;
						case 6:
							return -748.817f, -217.257f, 47.519f;
						case 7:
							return -736.502f, -213.17f, 47.519f;
						case 8:
							return -743.071f, -227.339f, 47.519f;
						case 9:
							return -741.929f, -227f, 47.519f;
						default:
					}
					break;
				case 411:
					switch (iParam0)
					{
						case 0:
							return 43.438f, -1770.503f, 46.7003f;
						case 1:
							return 41.8568f, -1770.1423f, 46.7003f;
						case 2:
							return 57.698f, -1756.6964f, 46.7003f;
						case 3:
							return 55.3729f, -1781.2354f, 46.7003f;
						case 4:
							return 44.882f, -1794.009f, 46.7f;
						case 5:
							return 38.2896f, -1762.8362f, 46.7003f;
						case 6:
							return 43.1372f, -1755.6052f, 46.7003f;
						case 7:
							return 66.513f, -1766.5549f, 46.7003f;
						case 8:
							return 25.3873f, -1778.477f, 46.7003f;
						case 9:
							return 35.9339f, -1788.0292f, 46.7003f;
						default:
					}
					break;
				case 412:
					switch (iParam0)
					{
						case 0:
							return 807.3306f, -2506.7488f, 43.5287f;
						case 1:
							return 805.1691f, -2530.161f, 43.6459f;
						case 2:
							return 852.704f, -2527.866f, 39.525f;
						case 3:
							return 853.969f, -2527.156f, 39.525f;
						case 4:
							return 829.8645f, -2530.7913f, 39.5252f;
						case 5:
							return 815.3445f, -2511.8596f, 39.5252f;
						case 6:
							return 858.334f, -2535.013f, 51.304f;
						case 7:
							return 859.411f, -2512.627f, 51.302f;
						case 8:
							return 842.6375f, -2525.0676f, 39.5252f;
						case 9:
							return 845.27f, -2506.093f, 45.629f;
						default:
					}
					break;
				case 413:
					switch (iParam0)
					{
						case 0:
							return -415.953f, -351.547f, 75.803f;
						case 1:
							return -412.4012f, -331.443f, 74.5519f;
						case 2:
							return -378.2829f, -362.256f, 75.8033f;
						case 3:
							return -369.0065f, -352.5716f, 75.8033f;
						case 4:
							return -410.68f, -318.127f, 75.803f;
						case 5:
							return -394.736f, -327.926f, 74.552f;
						case 6:
							return -398.1195f, -358.1539f, 74.5519f;
						case 7:
							return -371.8193f, -342.3575f, 75.8033f;
						case 8:
							return -393.98f, -347.8469f, 69.9677f;
						case 9:
							return -392.8957f, -346.4381f, 69.9677f;
						default:
					}
					break;
				case 414:
					switch (iParam0)
					{
						case 0:
							return 84.682f, -926.144f, 84.289f;
						case 1:
							return 84.475f, -924.801f, 84.289f;
						case 2:
							return 68.6492f, -933.1027f, 86.6149f;
						case 3:
							return 70.033f, -913.386f, 90.224f;
						case 4:
							return 59.523f, -909.808f, 90.224f;
						case 5:
							return 73.2373f, -882.8674f, 87.2874f;
						case 6:
							return 40.3994f, -953.5738f, 86.6149f;
						case 7:
							return 114.4019f, -910.8043f, 86.6149f;
						case 8:
							return 84.1356f, -964.3251f, 87.2874f;
						case 9:
							return 55.887f, -922.111f, 90.224f;
						default:
					}
					break;
				case 415:
					switch (iParam0)
					{
						case 0:
							return 200.262f, 249.817f, 140.478f;
						case 1:
							return 193.757f, 256.771f, 140.478f;
						case 2:
							return 192.993f, 257.908f, 140.478f;
						case 3:
							return 178.7133f, 241.7415f, 140.478f;
						case 4:
							return 195.7806f, 265.6559f, 140.478f;
						case 5:
							return 210.8017f, 280.0156f, 140.478f;
						case 6:
							return 196.6735f, 278.4822f, 144.2149f;
						case 7:
							return 193.1881f, 218.8174f, 142.9514f;
						case 8:
							return 167.5761f, 232.6193f, 140.478f;
						case 9:
							return 178.8973f, 264.8475f, 140.6698f;
						default:
					}
					break;
				case 416:
					switch (iParam0)
					{
						case 0:
							return 1233.3771f, -2992.5781f, 11.1643f;
						case 1:
							return 1234.2971f, -2991.5215f, 11.1643f;
						case 2:
							return 1252.4178f, -2976.916f, 14.0164f;
						case 3:
							return 1229.1168f, -2973.5205f, 14.0068f;
						case 4:
							return 1228.2269f, -2999.2625f, 11.1892f;
						case 5:
							return 1252.7341f, -2989.4634f, 11.1892f;
						case 6:
							return 1220.3927f, -2950.7197f, 23.3933f;
						case 7:
							return 1220.5634f, -2943.979f, 19.2356f;
						case 8:
							return 1242.5059f, -2972.609f, 13.985f;
						case 9:
							return 1249.1902f, -2999.9133f, 11.1643f;
						default:
					}
					break;
				case 417:
					switch (iParam0)
					{
						case 0:
							return -150.046f, 6181.678f, 39.164f;
						case 1:
							return -136.614f, 6196.408f, 41.745f;
						case 2:
							return -133.296f, 6182.882f, 39.165f;
						case 3:
							return -134.872f, 6183.476f, 39.165f;
						case 4:
							return -132.998f, 6157.5f, 39.165f;
						case 5:
							return -118.243f, 6172.255f, 39.166f;
						case 6:
							return -117.977f, 6186.227f, 41.745f;
						case 7:
							return -150.263f, 6159.284f, 45.033f;
						case 8:
							return -169.051f, 6179.5f, 42.015f;
						case 9:
							return -126.2756f, 6206.033f, 39.1642f;
						default:
					}
					break;
				case 418:
					switch (iParam0)
					{
						case 0:
							return 2752.159f, 3480.292f, 72.704f;
						case 1:
							return 2740.582f, 3453.213f, 72.704f;
						case 2:
							return 2734.345f, 3439.861f, 72.704f;
						case 3:
							return 2722.463f, 3476.89f, 72.704f;
						case 4:
							return 2736.82f, 3506.878f, 72.704f;
						case 5:
							return 2758.378f, 3498.612f, 72.704f;
						case 6:
							return 2736.846f, 3468.056f, 72.704f;
						case 7:
							return 2738.566f, 3468.158f, 72.704f;
						case 8:
							return 2720.782f, 3444.382f, 72.704f;
						case 9:
							return 2750.839f, 3510.972f, 72.704f;
						default:
					}
					break;
				case 419:
					switch (iParam0)
					{
						case 0:
							return 1717.582f, 4779.564f, 46.58f;
						case 1:
							return 1718.059f, 4778.125f, 46.58f;
						case 2:
							return 1715.728f, 4817.185f, 57.53f;
						case 3:
							return 1697.657f, 4774.696f, 46.592f;
						case 4:
							return 1699.47f, 4788.449f, 46.591f;
						case 5:
							return 1724.283f, 4787.652f, 46.576f;
						case 6:
							return 1722.795f, 4762.071f, 46.577f;
						case 7:
							return 1724.246f, 4777.154f, 46.576f;
						case 8:
							return 1713.765f, 4788.574f, 46.583f;
						case 9:
							return 1710.54f, 4762.273f, 46.585f;
						default:
					}
					break;
				case 420:
					switch (iParam0)
					{
						case 0:
							return 594.778f, 2759.065f, 50.145f;
						case 1:
							return 593.665f, 2757.867f, 50.145f;
						case 2:
							return 615.973f, 2746.374f, 47.529f;
						case 3:
							return 599.403f, 2768.54f, 50.145f;
						case 4:
							return 609.388f, 2782.184f, 47.529f;
						case 5:
							return 587.214f, 2775.984f, 50.145f;
						case 6:
							return 574.057f, 2788.009f, 47.529f;
						case 7:
							return 581.445f, 2765.342f, 50.145f;
						case 8:
							return 576.375f, 2744.06f, 47.529f;
						case 9:
							return 593.983f, 2745.489f, 50.145f;
						default:
					}
					break;
				case 421:
					switch (iParam0)
					{
						case 0:
							return 740.717f, 1272.862f, 382.171f;
						case 1:
							return 717.544f, 1294.909f, 362.335f;
						case 2:
							return 742.716f, 1269.462f, 382.171f;
						case 3:
							return 756.13f, 1315.819f, 361.897f;
						case 4:
							return 739.411f, 1286.967f, 359.297f;
						case 5:
							return 738.328f, 1286.427f, 359.297f;
						case 6:
							return 755.07f, 1286.479f, 359.297f;
						case 7:
							return 733.575f, 1270.793f, 359.296f;
						case 8:
							return 721.345f, 1280.248f, 359.296f;
						case 9:
							return 756.485f, 1295.423f, 365.642f;
						default:
					}
					break;
				case 422:
					switch (iParam0)
					{
						case 0:
							return -1121.49f, 2709.752f, 22.841f;
						case 1:
							return -1129.793f, 2702.539f, 21.727f;
						case 2:
							return -1105.192f, 2702.184f, 22.841f;
						case 3:
							return -1104.785f, 2703.869f, 22.841f;
						case 4:
							return -1123.891f, 2683.237f, 22.862f;
						case 5:
							return -1108.987f, 2695.732f, 22.841f;
						case 6:
							return -1108.028f, 2720.478f, 21.987f;
						case 7:
							return -1094.767f, 2714.759f, 22.892f;
						case 8:
							return -1110.711f, 2711.278f, 22.841f;
						case 9:
							return -1133.49f, 2683.898f, 22.862f;
						default:
					}
					break;
				case 423:
					switch (iParam0)
					{
						case 0:
							return 1512.0715f, 3578.0125f, 41.1119f;
						case 1:
							return 1520.8658f, 3569.8887f, 41.1119f;
						case 2:
							return 1536.5065f, 3579.2239f, 40.9293f;
						case 3:
							return 1505.981f, 3589.0903f, 37.9928f;
						case 4:
							return 1495.3202f, 3591.0564f, 37.9223f;
						case 5:
							return 1502.4833f, 3577.8499f, 41.1119f;
						case 6:
							return 1527.5436f, 3582.1616f, 41.0019f;
						case 7:
							return 1512.2028f, 3579.5725f, 41.105f;
						case 8:
							return 1523.7448f, 3589.833f, 41.1119f;
						case 9:
							return 1509.0139f, 3566.4512f, 41.1167f;
						default:
					}
					break;
				case 424:
					switch (iParam0)
					{
						case 0:
							return -1584.4879f, 767.3894f, 193.7737f;
						case 1:
							return -1594.2323f, 754.8381f, 188.1942f;
						case 2:
							return -1596.0197f, 755.4628f, 188.2431f;
						case 3:
							return -1606.0719f, 778.0377f, 188.2431f;
						case 4:
							return -1617.6896f, 769.1016f, 188.2431f;
						case 5:
							return -1591.1614f, 784.3525f, 188.1931f;
						case 6:
							return -1610.7322f, 746.0071f, 188.1942f;
						case 7:
							return -1568.5365f, 792.207f, 192.723f;
						case 8:
							return -1612.5568f, 775.4239f, 188.2431f;
						case 9:
							return -1615.63f, 756.1089f, 188.2431f;
						default:
					}
					break;
				case 425:
					switch (iParam0)
					{
						case 0:
							return 256.222f, 3614.633f, 32.806f;
						case 1:
							return 257.008f, 3613.408f, 32.875f;
						case 2:
							return 242.458f, 3579.493f, 32.951f;
						case 3:
							return 272.806f, 3595.479f, 33.478f;
						case 4:
							return 276.335f, 3614.891f, 32.353f;
						case 5:
							return 264.696f, 3629.104f, 32.694f;
						case 6:
							return 242.277f, 3627.259f, 32.267f;
						case 7:
							return 230.278f, 3608.565f, 31.984f;
						case 8:
							return 246.411f, 3600.292f, 33.157f;
						case 9:
							return 254.944f, 3587.252f, 33.367f;
						default:
					}
					break;
				case 426:
					switch (iParam0)
					{
						case 0:
							return 163.163f, 7351.401f, 10.181f;
						case 1:
							return 163.161f, 7352.593f, 10.372f;
						case 2:
							return 139.341f, 7364.27f, 10.984f;
						case 3:
							return 124.156f, 7344.552f, 7.191f;
						case 4:
							return 150.251f, 7345.709f, 9.436f;
						case 5:
							return 161.094f, 7362.242f, 11.316f;
						case 6:
							return 180.912f, 7349.258f, 9.38f;
						case 7:
							return 165.447f, 7394.631f, 12.233f;
						case 8:
							return 179.553f, 7370.326f, 10.257f;
						case 9:
							return 151.678f, 7323.988f, 7.247f;
						default:
					}
					break;
				case 427:
					switch (iParam0)
					{
						case 0:
							return 2942.871f, 781.635f, 25.272f;
						case 1:
							return 2940.356f, 781.629f, 25.387f;
						case 2:
							return 2933.516f, 750.95f, 20.379f;
						case 3:
							return 2955.591f, 775.511f, 22.517f;
						case 4:
							return 2969.784f, 802.148f, 22.618f;
						case 5:
							return 2950.667f, 817.028f, 21.971f;
						case 6:
							return 2934.556f, 802.034f, 23.771f;
						case 7:
							return 2912.823f, 790.946f, 24.669f;
						case 8:
							return 2911.894f, 767.518f, 21.263f;
						case 9:
							return 2974.739f, 818.787f, 19.359f;
						default:
					}
					break;
				case 428:
					switch (iParam0)
					{
						case 0:
							return 3630.813f, 5684.452f, 6.813f;
						case 1:
							return 3664.851f, 5640.506f, 10.001f;
						case 2:
							return 3673.71f, 5654.524f, 9.056f;
						case 3:
							return 3610.174f, 5693.59f, 4.565f;
						case 4:
							return 3658.0098f, 5659.6875f, 9.5492f;
						case 5:
							return 3632.1897f, 5662.7036f, 7.2817f;
						case 6:
							return 3633.7815f, 5662.2163f, 7.4439f;
						case 7:
							return 3618.0222f, 5671.42f, 5.7899f;
						case 8:
							return 3597.4146f, 5685.089f, 2.8724f;
						case 9:
							return 3605.3198f, 5668.0527f, 3.215f;
						default:
					}
					break;
				case 429:
					switch (iParam0)
					{
						case 0:
							return 2372.771f, 6623.114f, 2.038f;
						case 1:
							return 2371.609f, 6621.93f, 2.098f;
						case 2:
							return 2366.833f, 6597.827f, 0.581f;
						case 3:
							return 2342.019f, 6615.392f, 15.928f;
						case 4:
							return 2424.178f, 6599.494f, 30.803f;
						case 5:
							return 2365.531f, 6660.948f, 0.821f;
						case 6:
							return 2399.299f, 6634.823f, 7.39f;
						case 7:
							return 2421.907f, 6631.215f, 6.78f;
						case 8:
							return 2382.496f, 6635.962f, 1.441f;
						case 9:
							return 2345.318f, 6641.109f, 4.503f;
						default:
					}
					break;
				case 430:
					switch (iParam0)
					{
						case 0:
							return -2583.97f, 1884.84f, 170.491f;
						case 1:
							return -2584.697f, 1886.401f, 170.491f;
						case 2:
							return -2602.462f, 1880.01f, 170.493f;
						case 3:
							return -2591.284f, 1868.077f, 170.493f;
						case 4:
							return -2572.898f, 1883.877f, 170.493f;
						case 5:
							return -2604.554f, 1923.368f, 171.597f;
						case 6:
							return -2585.322f, 1927.504f, 170.493f;
						case 7:
							return -2581.819f, 1897.202f, 170.492f;
						case 8:
							return -2601.19f, 1895.46f, 170.493f;
						case 9:
							return -2597.702f, 1933.286f, 169.724f;
						default:
					}
					break;
				case 431:
					switch (iParam0)
					{
						case 0:
							return -498.231f, 5258.766f, 91.663f;
						case 1:
							return -521.255f, 5258.972f, 79.6f;
						case 2:
							return -510.748f, 5261.952f, 79.61f;
						case 3:
							return -489.685f, 5264.702f, 85.886f;
						case 4:
							return -496.121f, 5248.5f, 85.786f;
						case 5:
							return -484.816f, 5278.177f, 85.864f;
						case 6:
							return -488.331f, 5308.872f, 88.648f;
						case 7:
							return -512.604f, 5303.447f, 79.245f;
						case 8:
							return -537.641f, 5289.355f, 89.651f;
						case 9:
							return -504.673f, 5292.419f, 81.735f;
						default:
					}
					break;
			}
			break;
		case 22:
			switch (iParam3)
			{
				case 552:
					return -230.146f, -2452.379f, 5.001f;
				case 553:
					return 612.522f, -846.216f, 9.914f;
				case 554:
					return 2910.9844f, 764.6005f, 20.4908f;
				case 555:
					return -175.19f, 2859.292f, 31.094f;
				case 556:
					return -1407.526f, 2630.187f, 0.668f;
				case 557:
					return -2663.942f, 2604.504f, 0.522f;
				case 558:
					return -1949.003f, 4581.405f, 1.629f;
				case 559:
					return -508.959f, 4411.951f, 30.783f;
				case 560:
					return 798.803f, -2640.987f, 0.473f;
				case 561:
					return 2267.064f, 2042.688f, 127.747f;
				case 562:
					return 1665.6f, -1632.792f, 111.354f;
				case 563:
					return -1855.706f, -333.456f, 56.077f;
				case 564:
					return 1981.771f, 712.412f, 164.102f;
				case 565:
					return -26.196f, 657.567f, 197.29f;
				case 566:
					return -211.495f, -1807.962f, 0.462f;
				case 567:
					return 320.958f, 2209.022f, 74.752f;
				case 568:
					return 1969.188f, 5042.96f, 40.054f;
				case 569:
					return 2031.294f, 2938.945f, 46.798f;
				case 570:
					return 80.408f, 7078.622f, 0.972f;
				case 571:
					return 3855.785f, 4366.424f, 5.576f;
				case 572:
					return 2916.943f, 5310.497f, 95.144f;
				case 573:
					return 202.0375f, -733.0214f, 46.077f;
				case 574:
					return 709.681f, 4110.024f, 30.527f;
				case 575:
					return 1090.697f, 62.845f, 79.891f;
				case 576:
					return -2829.169f, 1420.082f, 99.907f;
				case 577:
					return -1376.045f, 5351.492f, 1.917f;
				case 578:
					return -1342.771f, -1431.628f, 3.315f;
				case 579:
					return 2468.307f, 3769.068f, 40.429f;
				case 580:
					return -965.251f, -974.511f, 2.857f;
				case 581:
					return 630.514f, 630.29f, 127.911f;
				case 582:
					return -1045.175f, 924.075f, 168.55f;
				case 583:
					return -1185.334f, 45.454f, 52.047f;
				case 584:
					return 1450.326f, 6347.386f, 22.783f;
				default:
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 11:
					switch (iParam0)
					{
						case 0:
							return 3554.969f, 3656.62f, 32.889f;
						case 1:
							return 3554.421f, 3658.565f, 32.889f;
						case 2:
							return 3546.928f, 3673.249f, 35.177f;
						case 3:
							return 3570.44f, 3677.338f, 40.007f;
						case 4:
							return 3564.608f, 3668.072f, 32.927f;
						case 5:
							return 3584.5146f, 3696.2656f, 35.6428f;
						case 6:
							return 3541.938f, 3670.831f, 32.889f;
						case 7:
							return 3555.623f, 3649.024f, 45.033f;
						case 8:
							return 3615.5022f, 3705.7405f, 42.4911f;
						case 9:
							return 3537.7185f, 3714.2944f, 35.6426f;
						case 10:
							return 3527.66f, 3737.2776f, 35.7308f;
						case 11:
							return 3577.148f, 3658.646f, 32.899f;
						case 12:
							return 3559.525f, 3646.379f, 40.34f;
						case 13:
							return 3540.801f, 3658.951f, 32.889f;
						case 14:
							return 3584.188f, 3681.268f, 40.007f;
						default:
					}
					break;
				case 12:
					switch (iParam0)
					{
						case 0:
							return 1803.6864f, 2610.1611f, 44.5703f;
						case 1:
							return 1803.02f, 2610.914f, 44.572f;
						case 2:
							return 1816.4915f, 2602.6572f, 44.5967f;
						case 3:
							return 1703.291f, 2610.092f, 44.565f;
						case 4:
							return 1678.1202f, 2607.7178f, 44.5649f;
						case 5:
							return 1718.6387f, 2615.9607f, 44.5649f;
						case 6:
							return 1721.7976f, 2595.4514f, 54.448f;
						case 7:
							return 1748.209f, 2613.931f, 54.448f;
						case 8:
							return 1758.906f, 2615.033f, 44.565f;
						case 9:
							return 1757.887f, 2614.084f, 44.565f;
						case 10:
							return 1776.056f, 2600.167f, 44.565f;
						case 11:
							return 1758.8451f, 2599.0312f, 54.4479f;
						case 12:
							return 1732.3331f, 2603.1353f, 44.5649f;
						case 13:
							return 1732.5511f, 2604.1782f, 44.5649f;
						case 14:
							return 1656.778f, 2601.661f, 44.565f;
						case 15:
							return 1655.2925f, 2601.1982f, 44.5649f;
						default:
					}
					break;
				case 13:
					switch (iParam0)
					{
						case 0:
							return -1977.756f, 3295.155f, 39.216f;
						case 1:
							return -1932.189f, 3343.387f, 39.227f;
						case 2:
							return -1936.34f, 3332.095f, 34.416f;
						case 3:
							return -1956.428f, 3298.485f, 31.96f;
						case 4:
							return -1952.4753f, 3331.7998f, 31.9602f;
						case 5:
							return -1953.7706f, 3333.0857f, 31.9602f;
						case 6:
							return -1970.2975f, 3319.267f, 31.9603f;
						case 7:
							return -1970.1691f, 3321.631f, 31.9603f;
						case 8:
							return -1960.415f, 3356.9502f, 31.9603f;
						case 9:
							return -1962.6656f, 3312.2817f, 31.9602f;
						case 10:
							return -1946.528f, 3313.016f, 31.96f;
						case 11:
							return -1921.968f, 3346.394f, 39.161f;
						case 12:
							return -1946.1185f, 3357.3948f, 31.9371f;
						case 13:
							return -1975.679f, 3343.3333f, 32.0184f;
						case 14:
							return -1981.7f, 3304.792f, 39.161f;
						default:
					}
					break;
			}
			break;
		case 26:
			switch (iParam1)
			{
				case 51:
					switch (iParam0)
					{
						case 0:
							return -1790.93f, -850.3152f, 6.7606f;
						case 1:
							return -1789.3066f, -851.5523f, 6.8008f;
						default:
					}
					break;
				case 52:
					switch (iParam0)
					{
						case 0:
							return 612.6701f, -542.7713f, 14.2353f;
						case 1:
							return 614.1082f, -542.3696f, 14.2096f;
						default:
					}
					break;
				case 53:
					switch (iParam0)
					{
						case 0:
							return 1744.527f, -1552.651f, 111.641f;
						case 1:
							return 1744.609f, -1553.903f, 111.645f;
						default:
					}
					break;
				case 54:
					switch (iParam0)
					{
						case 0:
							return -3286.9302f, 994.4673f, 2.4803f;
						case 1:
							return -3288.4001f, 994.0409f, 2.3186f;
						default:
					}
					break;
				case 55:
					switch (iParam0)
					{
						case 0:
							return 2525.7617f, 1027.0326f, 76.432f;
						case 1:
							return 2526.5225f, 1025.3094f, 76.4609f;
						default:
					}
					break;
				case 56:
					switch (iParam0)
					{
						case 0:
							return 2432.6914f, 1466.1274f, 37.3969f;
						case 1:
							return 2432.2397f, 1464.6962f, 37.513f;
						default:
					}
					break;
				case 57:
					switch (iParam0)
					{
						case 0:
							return 1362.6135f, 1411.7999f, 102.3359f;
						case 1:
							return 1363.9839f, 1411.3595f, 102.3687f;
						default:
					}
					break;
				case 58:
					switch (iParam0)
					{
						case 0:
							return 315.1063f, 2424.0776f, 47.2845f;
						case 1:
							return 316.2569f, 2424.4243f, 47.3108f;
						default:
					}
					break;
				case 59:
					switch (iParam0)
					{
						case 0:
							return 1191.4181f, 3078.1978f, 39.9078f;
						case 1:
							return 1192.7694f, 3078.74f, 39.9078f;
						default:
					}
					break;
				case 60:
					switch (iParam0)
					{
						case 0:
							return 107.5576f, 3655.8435f, 38.7549f;
						case 1:
							return 108.8687f, 3656.7449f, 38.7072f;
						default:
					}
					break;
				case 61:
					switch (iParam0)
					{
						case 0:
							return 1006.0247f, 4355.015f, 42.917f;
						case 1:
							return 1006.497f, 4356.051f, 42.8266f;
						default:
					}
					break;
				case 62:
					switch (iParam0)
					{
						case 0:
							return 2025.517f, 4787.821f, 40.7012f;
						case 1:
							return 2026.6233f, 4788.78f, 40.7303f;
						default:
					}
					break;
				case 63:
					switch (iParam0)
					{
						case 0:
							return 2653.9087f, 4232.7793f, 42.3191f;
						case 1:
							return 2655.4548f, 4232.901f, 42.2673f;
						default:
					}
					break;
				case 64:
					switch (iParam0)
					{
						case 0:
							return 758.6412f, 6588.3745f, 1.3421f;
						case 1:
							return 759.8186f, 6587.423f, 1.3243f;
						default:
					}
					break;
				case 65:
					switch (iParam0)
					{
						case 0:
							return -335.4713f, 6464.469f, 1.0265f;
						case 1:
							return -336.8973f, 6464.6035f, 1.0551f;
						default:
					}
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_157(int iParam0, int iParam1)//Position - 0x44757
{
	switch (iParam1)
	{
		case joaat("insurgent2"):
			switch (iParam0)
			{
				case joaat("hei_prop_heist_transponder"):
					return 0.45f, -2.7f, 1.62f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

int func_158(int iParam0)//Position - 0x44791
{
	switch (iParam0)
	{
		case joaat("insurgent2"):
			return joaat("hei_prop_heist_transponder");
		default:
	}
	return 0;
}

int func_159(int iParam0)//Position - 0x447AF
{
	switch (iParam0)
	{
		case joaat("insurgent2"):
			return 1;
		default:
	}
	return 0;
}

var func_160()//Position - 0x4C20E
{
	return Global_4535597;
}

int func_161(int iParam0)//Position - 0x7DE77
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_22754 /* Tunable: 1563114472 */;
		case 1:
			return Global_262145.f_22755 /* Tunable: SMUG_STEAL_COLLECTION_BONUS */;
		case 2:
			return Global_262145.f_22756 /* Tunable: SMUG_STEAL_NO_RESPAWN_BONUS */;
		case 3:
			return Global_262145.f_22757 /* Tunable: SMUG_STEAL_RECOVERY_BONUS */;
		case 4:
			return Global_262145.f_22758 /* Tunable: SMUG_STEAL_CARRIER_DELIVERY_BONUS */;
		case 5:
			return Global_262145.f_22759 /* Tunable: SMUG_STEAL_SUPPORTER_BONUS */;
		case 6:
			return Global_262145.f_22760 /* Tunable: -1252391406 */;
		default:
	}
	return 0;
}

struct<4> func_162()//Position - 0x7F076
{
	struct<4> Var0;
	StringCopy(&Var0, "SMTXT_RV_", 16);
	StringIntConCat(&Var0, MISC::GET_RANDOM_INT_IN_RANGE(0, 3), 16);
	return Var0;
}

int func_163(bool bParam0)//Position - 0x8FA71
{
	return 568;
}

void func_164(struct<3> Param0)//Position - 0x90BCE
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	HUD::GET_HUD_COLOUR(12, &iVar0, &iVar1, &iVar2, &uVar3);
	Param0.f_2 = (Param0.f_2 - 0.2f);
	GRAPHICS::DRAW_MARKER(1, Param0, 0f, 0f, 0f, 0f, 0f, 0f, 1f, 1f, 1f, iVar0, iVar1, iVar2, 150, false, false, 2, false, 0, 0, false);
}

bool func_165()//Position - 0x9A91B
{
	return PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 86 /*INPUT_VEH_HORN*/);
}

int func_166()//Position - 0xFADD6
{
	return 2359332;
}

int func_167(int iParam0)//Position - 0xFE6A5
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("rogue"):
		case joaat("seabreeze"):
		case joaat("cuban800"):
		case joaat("volatol"):
			return 1;
			break;
	}
	return 0;
}

int func_168(int iParam0)//Position - 0xFE6D8
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("cuban800"):
		case joaat("mogul"):
		case joaat("rogue"):
		case joaat("starling"):
		case joaat("seabreeze"):
		case joaat("tula"):
		case joaat("bombushka"):
		case joaat("hunter"):
		case joaat("avenger"):
		case joaat("akula"):
		case joaat("volatol"):
		case joaat("strikeforce"):
		case joaat("alkonost"):
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 9) > -1)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_169()//Position - 0x133444
{
	return Global_262145.f_22823 /* Tunable: SMUG_SELL_HISTORY_LIST */;
}

int func_170()//Position - 0x133453
{
	return Global_262145.f_22733 /* Tunable: -1676961419 */;
}

void func_171(int iParam0)//Position - 0x1351A9
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(uLocal_179[iVar0]), iVar1);
}

bool func_172(int iParam0)//Position - 0x13526A
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(uLocal_179[iVar0], iVar1);
}

int func_173(int iParam0)//Position - 0x137525
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("cuban800"):
		case joaat("mogul"):
		case joaat("rogue"):
		case joaat("starling"):
		case joaat("seabreeze"):
		case joaat("tula"):
		case joaat("bombushka"):
		case joaat("hunter"):
		case joaat("nokota"):
		case joaat("pyro"):
		case joaat("molotok"):
		case joaat("havok"):
		case joaat("alphaz1"):
		case joaat("microlight"):
		case joaat("howard"):
		case joaat("avenger"):
		case joaat("thruster"):
		case joaat("volatol"):
		case joaat("oppressor2"):
		case joaat("strikeforce"):
		case joaat("alkonost"):
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
			return 1;
			break;
	}
	return 0;
}

int func_174(int iParam0)//Position - 0x1375CA
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("cuban800"):
		case joaat("mogul"):
		case joaat("rogue"):
		case joaat("starling"):
		case joaat("seabreeze"):
		case joaat("tula"):
		case joaat("bombushka"):
		case joaat("hunter"):
		case joaat("nokota"):
		case joaat("pyro"):
		case joaat("molotok"):
		case joaat("havok"):
		case joaat("alphaz1"):
		case joaat("microlight"):
		case joaat("howard"):
		case joaat("avenger"):
		case joaat("thruster"):
		case joaat("volatol"):
		case joaat("oppressor2"):
		case joaat("strikeforce"):
		case joaat("blimp3"):
		case joaat("alkonost"):
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
			return 1;
			break;
	}
	return 0;
}

int func_175(int iParam0)//Position - 0x1377E4
{
	switch (iParam0)
	{
		case joaat("seasparrow2"):
		case joaat("seasparrow3"):
			return 1;
			break;
	}
	return 0;
}

var func_176()//Position - 0x137807
{
	return Global_2815059.f_4656;
}

int func_177(int iParam0)//Position - 0x137816
{
	switch (ENTITY::GET_ENTITY_MODEL(iParam0))
	{
		case joaat("rogue"):
		case joaat("seabreeze"):
		case joaat("tula"):
		case joaat("mogul"):
		case joaat("pyro"):
		case joaat("avenger"):
			return 1;
			break;
	}
	return 0;
}

int func_178(int iParam0)//Position - 0x13C94C
{
	switch (iParam0)
	{
		case 0:
			return joaat("sm_prop_smug_crate_s_bones");
		case 1:
			return joaat("sm_prop_smug_crate_s_antiques");
		case 2:
			return joaat("sm_prop_smug_crate_s_hazard");
		case 3:
			return joaat("sm_prop_smug_crate_s_fake");
		case 4:
			return joaat("sm_prop_smug_crate_s_jewellery");
		case 5:
			return joaat("sm_prop_smug_crate_s_medical");
		case 6:
			return joaat("sm_prop_smug_crate_s_narc");
		case 7:
			return joaat("sm_prop_smug_crate_s_tobacco");
		default:
	}
	return joaat("ex_prop_adv_case_sm");
}

void func_179()//Position - 0x13CED6
{
	Global_2815059.f_4636 = 0;
	Global_2815059.f_4637 = 0;
	Global_2815059.f_4638 = 0;
	Global_2815059.f_4639 = 0;
	Global_2815059.f_4640 = 0;
}

int func_180(int iParam0, bool bParam1, bool bParam2)//Position - 0x144D63
{
	if (bParam2)
	{
		return 5;
	}
	switch (iParam0)
	{
		case 2:
			return 8;
		case 1:
			return 7;
		case 4:
		case 3:
		case 5:
		case 6:
		case 7:
		case 8:
			if (bParam1)
			{
				return 1;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 4;
}

float func_181(int iParam0, int iParam1)//Position - 0x18587
{
	return __LIB_0__::func_932(__LIB_35__::func_705(iParam0, iParam1, 0), __LIB_35__::func_705(iParam0, iParam1, 1));
}

int func_182()//Position - 0x4B1E5
{
	int iVar0;
	int iVar1;
	if (!__LIB_8__::func_894())
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 50)
	{
		if (__LIB_0__::func_253(__LIB_13__::func_542(iVar0), -1) != 0)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

int func_183()//Position - 0x7E561
{
	if (!Global_262145.f_28866 /* Tunable: 1028571554 */)
	{
		return 0;
	}
	if (!Global_78319)
	{
		return 0;
	}
	if (PLAYER::PLAYER_ID() == __LIB_0__::func_162())
	{
		return 0;
	}
	if (__LIB_3__::func_362(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (BitTest(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_1, 7))
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return 0;
	}
	return 1;
}

int func_184(int iParam0)//Position - 0x8EBB5
{
	if (iParam0 != __LIB_0__::func_162() && __LIB_1__::func_693(iParam0, 0, 1))
	{
		return BitTest(Global_1892703[iParam0 /*599*/].f_556, 0);
	}
	return 0;
}

int func_185(bool bParam0, int* iParam1)//Position - 0x9A6F6
{
	bool bVar0;
	bVar0 = bParam0;
	if (__LIB_1__::func_693(bParam0, 1, 1))
	{
		if (BitTest(*iParam1, bVar0))
		{
			MISC::CLEAR_BIT(iParam1, bVar0);
		}
	}
	else if (!BitTest(*iParam1, bVar0))
	{
		MISC::SET_BIT(iParam1, bVar0);
		return 1;
	}
	return 0;
}

void func_186()//Position - 0xD13DD
{
	int iVar0;
	int iVar1;
	if (__LIB_0__::func_86(__LIB_3__::func_554(0)))
	{
		return;
	}
	if (!Global_2815059.f_4570)
	{
		return;
	}
	while (!__LIB_0__::func_86(__LIB_3__::func_554(iVar1)))
	{
		if (OBJECT::DOOR_SYSTEM_FIND_EXISTING_DOOR(__LIB_3__::func_554(iVar1), __LIB_0__::func_114(iVar1), &iVar0))
		{
			if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar0))
			{
				if (NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(iVar0))
				{
					if (OBJECT::DOOR_SYSTEM_GET_DOOR_STATE(iVar0) != __LIB_0__::func_114(iVar1))
					{
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iVar0, __LIB_0__::func_114(iVar1), true, true);
					}
				}
			}
		}
		else
		{
			OBJECT::ADD_DOOR_TO_SYSTEM(__LIB_0__::func_162(iVar1), __LIB_0__::func_114(iVar1), __LIB_3__::func_554(iVar1), true, true, false);
		}
		iVar1++;
	}
}

int func_187(int iParam0)//Position - 0xEB940
{
	if (__LIB_3__::func_131(iParam0))
	{
		return 1;
	}
	if (__LIB_3__::func_362(iParam0))
	{
		return 1;
	}
	return 0;
}

void func_188(int iParam0, int iParam1, int iParam2, int iParam3, char* sParam4, bool bParam5, bool bParam6, bool bParam7, bool bParam8)//Position - 0xF935B
{
	*iParam0 = HUD::ADD_BLIP_FOR_ENTITY(iParam1);
	if (iParam2 != -1)
	{
		HUD::SET_BLIP_SPRITE(*iParam0, iParam2);
	}
	__LIB_1__::func_540(iParam0, iParam3);
	HUD::SET_BLIP_ROUTE(*iParam0, bParam5);
	HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, sParam4);
	HUD::SET_BLIP_AS_SHORT_RANGE(*iParam0, bParam6);
	if (bParam8)
	{
		HUD::SHOW_HEIGHT_ON_BLIP(*iParam0, true);
		HUD::SET_BLIP_USE_HEIGHT_INDICATOR_ON_EDGE(*iParam0, 0);
	}
	if (bParam7)
	{
		__LIB_15__::func_552(iParam0, 0);
	}
}

int func_189(bool bParam0)//Position - 0x10225D
{
	int iVar0;
	iVar0 = __LIB_2__::func_39(bParam0);
	if (iVar0 != __LIB_0__::func_162())
	{
		return Global_2689235[iVar0 /*453*/].f_210;
	}
	return 0;
}

int func_190()//Position - 0x14272A
{
	if (__LIB_0__::func_864(&(Global_2789376.f_26)) && __LIB_0__::func_937(&(Global_2789376.f_26), Global_2789376.f_28, 0))
	{
		__LIB_0__::func_794(&(Global_2789376.f_26));
		return 0;
	}
	return __LIB_0__::func_864(&(Global_2789376.f_26));
}

int func_191(bool bParam0)//Position - 0x14493D
{
	if (bParam0)
	{
		return 0;
	}
	if (__LIB_0__::func_315(PLAYER::PLAYER_ID()) || __LIB_3__::func_362(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

Vector3 func_192(int iParam0, int iParam1, bool bParam2)//Position - 0xEF1E
{
	switch (iParam0)
	{
		case 3:
			return __LIB_35__::func_705(0, iParam1, bParam2) + Vector(75f, -75f, -100f);
		case 4:
			return __LIB_35__::func_705(0, iParam1, bParam2) + Vector(75f, -75f, 100f);
		case 5:
			return __LIB_35__::func_705(1, iParam1, bParam2) + Vector(75f, -75f, -100f);
		case 6:
			return __LIB_35__::func_705(1, iParam1, bParam2) + Vector(75f, -75f, 100f);
		case 7:
			return __LIB_35__::func_705(2, iParam1, bParam2) + Vector(75f, -75f, -100f);
		case 8:
			return __LIB_35__::func_705(2, iParam1, bParam2) + Vector(75f, -75f, 100f);
		default:
	}
	return 0f, 0f, 0f;
}

int func_193(var uParam0, int iParam1)//Position - 0x4AF9B
{
	int iVar0;
	int iVar1;
	struct<2> Var2;
	iVar1 = 0;
	iVar0 = iParam1;
	while (iVar0 >= (iParam1 - 2))
	{
		if (iVar0 >= 0)
		{
			__LIB_34__::func_613(&Var2, iParam1);
			if (*uParam0 == Var2.f_0 && uParam0->f_1 == Var2.f_1)
			{
				iVar1++;
			}
		}
		iVar0 = (iVar0 + -1);
	}
	return iVar1;
}

int func_194()//Position - 0x4C5B1
{
	return __LIB_13__::func_545(PLAYER::PLAYER_ID());
}

void func_195(int iParam0, var uParam1, var uParam2)//Position - 0x7B04C
{
	bool bVar0;
	if (iParam0 == 157)
	{
		*uParam1 = 1f;
		*uParam2 = 1f;
		return;
	}
	if (__LIB_15__::func_394(iParam0))
	{
		if (!__LIB_1__::func_501())
		{
			*uParam1 = 1f;
			*uParam2 = Global_262145.f_12872 /* Tunable: GB_CHALLENGE_GOON_RP_REWARD_PERCENTAGE */;
		}
		else
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
		return;
	}
	if (__LIB_12__::func_486(PLAYER::PLAYER_ID(), 1))
	{
		if (__LIB_12__::func_654(iParam0))
		{
			*uParam1 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
			*uParam2 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
		}
		else if (iParam0 == 242)
		{
			*uParam1 = Global_262145.f_24650 /* Tunable: 1063368282 */;
			*uParam2 = Global_262145.f_24650 /* Tunable: 1063368282 */;
		}
		else if (iParam0 == 244)
		{
			*uParam1 = Global_262145.f_24651 /* Tunable: 1249038613 */;
			*uParam2 = Global_262145.f_24651 /* Tunable: 1249038613 */;
		}
		else if (iParam0 == 248)
		{
			*uParam1 = Global_262145.f_24653 /* Tunable: -488524036 */;
			*uParam2 = Global_262145.f_24653 /* Tunable: -488524036 */;
		}
		else if (iParam0 == 241)
		{
			*uParam1 = Global_262145.f_24654 /* Tunable: 787287514 */;
			*uParam2 = Global_262145.f_24654 /* Tunable: 787287514 */;
		}
		else if (iParam0 == 239)
		{
			*uParam1 = Global_262145.f_24655 /* Tunable: 1624617753 */;
			*uParam2 = Global_262145.f_24655 /* Tunable: 1624617753 */;
		}
		else if (iParam0 == 240)
		{
			*uParam1 = Global_262145.f_24656 /* Tunable: 987927512 */;
			*uParam2 = Global_262145.f_24656 /* Tunable: 987927512 */;
		}
		else
		{
			*uParam1 = Global_262145.f_12869 /* Tunable: GB_RIVAL_ORG_CASH_REWARD_PERCENTAGE */;
			*uParam2 = Global_262145.f_12868 /* Tunable: GB_RIVAL_ORG_RP_REWARD_PERCENTAGE */;
		}
	}
	else if (__LIB_12__::func_654(iParam0))
	{
		*uParam1 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
		*uParam2 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
	}
	else if (iParam0 == 242)
	{
		*uParam1 = Global_262145.f_24657 /* Tunable: -1262379258 */;
		*uParam2 = Global_262145.f_24657 /* Tunable: -1262379258 */;
	}
	else if (iParam0 == 244)
	{
		*uParam1 = Global_262145.f_24658 /* Tunable: 1108489437 */;
		*uParam2 = Global_262145.f_24658 /* Tunable: 1108489437 */;
	}
	else if (iParam0 == 248)
	{
		*uParam1 = Global_262145.f_24660 /* Tunable: -989876675 */;
		*uParam2 = Global_262145.f_24660 /* Tunable: -989876675 */;
	}
	else if (iParam0 == 241)
	{
		*uParam1 = Global_262145.f_24661 /* Tunable: -1361915386 */;
		*uParam2 = Global_262145.f_24661 /* Tunable: -1361915386 */;
	}
	else if (iParam0 == 239)
	{
		*uParam1 = Global_262145.f_24662 /* Tunable: -1419284063 */;
		*uParam2 = Global_262145.f_24662 /* Tunable: -1419284063 */;
	}
	else if (iParam0 == 240)
	{
		*uParam1 = Global_262145.f_24663 /* Tunable: 2112977251 */;
		*uParam2 = Global_262145.f_24663 /* Tunable: 2112977251 */;
	}
	else
	{
		*uParam1 = Global_262145.f_12871 /* Tunable: GB_SOLO_CASH_REWARD_PERCENTAGE */;
		*uParam2 = Global_262145.f_12870 /* Tunable: GB_SOLO_RP_REWARD_PERCENTAGE */;
	}
	bVar0 = __LIB_1__::func_730();
	if (bVar0 != __LIB_0__::func_162())
	{
		if (__LIB_2__::func_759(PLAYER::PLAYER_ID(), bVar0, 1))
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
	}
}

int func_196(int iParam0, bool bParam1)//Position - 0x8E5FC
{
	int iVar0;
	var uVar1;
	bool bVar2;
	iVar0 = PLAYER::PLAYER_ID();
	if (!__LIB_12__::func_486(PLAYER::PLAYER_ID(), 1))
	{
		if (bParam1 != __LIB_0__::func_162())
		{
			iVar0 = bParam1;
		}
		else
		{
			return 0;
		}
	}
	if (__LIB_0__::func_121(iParam0))
	{
		uVar1 = __LIB_5__::func_190(iParam0, 1, 0, 1);
		bVar2 = false;
		while (bVar2 < 32)
		{
			if (BitTest(uVar1, bVar2))
			{
				if (__LIB_1__::func_693(PLAYER::INT_TO_PLAYERINDEX(bVar2), 0, 1))
				{
					if (__LIB_12__::func_486(PLAYER::INT_TO_PLAYERINDEX(bVar2), 1) && !__LIB_3__::func_360(iVar0, PLAYER::INT_TO_PLAYERINDEX(bVar2)))
					{
						return 1;
					}
				}
			}
			bVar2++;
		}
	}
	return 0;
}

int func_197(int iParam0, bool bParam1)//Position - 0xE7039
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (bParam1 != __LIB_0__::func_162() && __LIB_1__::func_693(bParam1, 0, 1))
	{
		if (Global_1952191.f_5470.f_3 != 0)
		{
			return 1;
		}
		if (iParam0 != 0)
		{
			bVar0 = bParam1;
			if (__LIB_12__::func_486(bParam1, 1))
			{
				bVar0 = __LIB_2__::func_39(bParam1);
			}
			iVar1 = 0;
			while (iVar1 < 10)
			{
				if (Global_2681762.f_199.f_962[iVar1 /*75*/] == bVar0)
				{
					iVar2 = 0;
					while (iVar2 < 18)
					{
						if (Global_2681762.f_199.f_962[iVar1 /*75*/].f_1[iVar2] == iParam0)
						{
							return 1;
						}
						iVar2++;
					}
				}
				iVar1++;
			}
		}
	}
	return 0;
}

int func_198()//Position - 0x11B418
{
	if ((((Global_4718592.f_107227 == 6 || Global_4718592.f_107227 == 7) || Global_4718592.f_107227 == 18) || Global_4718592.f_107227 == 19) && Global_4718592.f_2 == 20)
	{
		return 0;
	}
	if (__LIB_0__::func_523(7))
	{
		if (__LIB_0__::func_315(Global_2703735.f_4.f_16) || __LIB_28__::func_311(Global_2703735.f_4.f_16))
		{
			return 0;
		}
	}
	return 1;
}

int func_199(int iParam0)//Position - 0x133236
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(PLAYER::INT_TO_PLAYERINDEX(iVar0)))
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (__LIB_2__::func_759(iVar1, iParam0, 1) && __LIB_19__::func_314(iVar1) == 1)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_200(struct<3> Param0, float fParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, int iParam6, int iParam7, int iParam8)//Position - 0x39C5
{
	int iVar0;
	bool bVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		bVar1 = iVar0;
		if ((iParam6 == 1 && PLAYER::PLAYER_ID() != bVar1) || iParam6 == 0)
		{
			if (__LIB_1__::func_693(bVar1, bParam2, bParam3))
			{
				if (iParam8 || NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), bVar1))
				{
					if (!bParam5 || (!PED::IS_PED_INJURED(PLAYER::GET_PLAYER_PED(bVar1)) && __LIB_1__::func_908(bVar1)))
					{
						if ((!bParam4 || (bParam4 == 1 && PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) != PLAYER::GET_PLAYER_TEAM(bVar1))) || PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1)
						{
							if (((PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1 && iParam7) && bParam4) && __LIB_35__::func_773(bVar1))
							{
							}
							else if (ENTITY::DOES_ENTITY_EXIST(PLAYER::GET_PLAYER_PED(bVar1)))
							{
								if (MISC::GET_DISTANCE_BETWEEN_COORDS(__LIB_1__::func_694(bVar1), Param0, true) < fParam1)
								{
									return 1;
								}
							}
						}
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_201(int iParam0)//Position - 0xA704
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_8__::func_894())
	{
		return 0;
	}
	if (iParam0 == 8)
	{
		return __LIB_13__::func_545(PLAYER::PLAYER_ID());
	}
	iVar0 = 0;
	while (iVar0 < 50)
	{
		iVar2 = __LIB_13__::func_541(__LIB_0__::func_253(__LIB_13__::func_542(iVar0), -1));
		if (__LIB_27__::func_479(iVar2) == iParam0)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

int func_202(bool bParam0)//Position - 0x1AEB6
{
	if (__LIB_1__::func_693(bParam0, 0, 1))
	{
		if (!__LIB_2__::func_154(bParam0))
		{
			if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), bParam0))
			{
				if (!PLAYER::GET_PLAYER_TEAM(bParam0) == PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()))
				{
					if (__LIB_1__::func_29(PLAYER::PLAYER_ID(), 1, 0))
					{
						if (!__LIB_0__::func_825(PLAYER::GET_PLAYER_TEAM(bParam0), PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()), 0))
						{
							return 1;
						}
					}
					else
					{
						return 1;
					}
				}
				else if (PLAYER::GET_PLAYER_TEAM(bParam0) == -1 && PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1)
				{
					if (!__LIB_1__::func_29(PLAYER::PLAYER_ID(), 1, 0))
					{
						if (!__LIB_35__::func_773(bParam0))
						{
							return 1;
						}
					}
					else
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_203(int iParam0)//Position - 0x1D46A
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_0__::func_840(iParam0);
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_278 == iVar0)
	{
		return 1;
	}
	iVar1 = Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10;
	if (iVar1 != __LIB_0__::func_162())
	{
		if (Global_1853348[iVar1 /*834*/].f_267.f_278 == iVar0)
		{
			return 1;
		}
	}
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_6 == iParam0)
	{
		return 1;
	}
	if (__LIB_2__::func_732(PLAYER::PLAYER_ID(), 0) || (__LIB_3__::func_280(PLAYER::PLAYER_ID()) && __LIB_0__::func_172(__LIB_1__::func_935(PLAYER::PLAYER_ID())) == 12))
	{
		return 1;
	}
	if (__LIB_2__::func_731(PLAYER::PLAYER_ID()) || (__LIB_3__::func_280(PLAYER::PLAYER_ID()) && __LIB_0__::func_172(__LIB_1__::func_935(PLAYER::PLAYER_ID())) == 8))
	{
		return 1;
	}
	if (__LIB_12__::func_483(PLAYER::PLAYER_ID()) || (__LIB_3__::func_280(PLAYER::PLAYER_ID()) && __LIB_0__::func_172(__LIB_1__::func_935(PLAYER::PLAYER_ID())) == 5))
	{
		return 1;
	}
	if (__LIB_2__::func_729(PLAYER::PLAYER_ID()) || (__LIB_3__::func_280(PLAYER::PLAYER_ID()) && __LIB_0__::func_172(__LIB_1__::func_935(PLAYER::PLAYER_ID())) == 10))
	{
		return 1;
	}
	if (__LIB_4__::func_967(PLAYER::PLAYER_ID()) || (__LIB_3__::func_280(PLAYER::PLAYER_ID()) && __LIB_0__::func_172(__LIB_1__::func_935(PLAYER::PLAYER_ID())) == 6))
	{
		return 1;
	}
	return 0;
}

void func_204(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x7855E
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	bool bVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	float fVar15;
	float fVar16;
	bool bVar17;
	bool bVar18;
	bool bVar19;
	int iVar20;
	bVar18 = __LIB_1__::func_375(1);
	bVar19 = false;
	if (iParam0 == 237 && !uParam1->f_22)
	{
		if (__LIB_1__::func_501())
		{
			bVar17 = PLAYER::PLAYER_ID();
		}
		else
		{
			bVar17 = __LIB_0__::func_797();
		}
		bVar11 = bVar17;
		if (bVar11 != -1)
		{
			iVar0 = Global_1853348[bVar11 /*834*/].f_811.f_1;
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
				bVar19 = true;
			}
			else
			{
				fVar12 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar13 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar14 = ((fVar12 / fVar13) * 100f);
				fVar15 = ((IntToFloat(iVar0) / 100f) * fVar14);
				iVar1 = SYSTEM::CEIL(fVar15);
			}
			*uParam3 = iVar1;
			if (bVar19)
			{
				iVar2 = Global_1853348[bVar11 /*834*/].f_811.f_2;
			}
			else
			{
				iVar2 = __LIB_15__::func_384(Global_1853348[bVar11 /*834*/].f_811.f_4, Global_1853348[bVar11 /*834*/].f_811.f_1, *uParam3, Global_1853348[bVar11 /*834*/].f_811.f_2, Global_1853348[bVar11 /*834*/].f_811.f_3);
			}
			if (uParam1->f_17)
			{
				iVar20 = (iVar2 - SYSTEM::CEIL((IntToFloat(iVar2) * 0.9f)));
				if (iVar20 > 100000)
				{
					iVar20 = 100000;
				}
				iVar2 = (iVar2 - iVar20);
			}
			*iParam2 = (*iParam2 + iVar2);
			iVar10 = __LIB_15__::func_383(*iParam2);
			if (iVar10 > 0)
			{
				if (bVar17 == PLAYER::PLAYER_ID())
				{
					__LIB_11__::func_817("TICK_TCUT" /* GXT: Tony's laundering cut: $~1~. */, iVar10, 0);
				}
				*iParam2 = (*iParam2 - iVar10);
			}
			Global_1944249.f_49 = *uParam3;
			if (bVar17 == PLAYER::PLAYER_ID())
			{
				if (iVar2 > 0)
				{
					__LIB_15__::func_443(iVar2);
				}
				if (*uParam3 > 0)
				{
					__LIB_15__::func_474(*uParam3);
				}
				iVar6 = __LIB_34__::func_877(&uVar5);
				iVar7 = Global_262145.f_24523 /* Tunable: 249027540 */;
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar9 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_24522 /* Tunable: -540578960 */));
				iVar8 = ((*iParam2 / 100) * iVar9);
				*iParam2 = (*iParam2 + iVar8);
				if (Global_262145.f_32969 /* Tunable: 2010545334 */)
				{
					if (!__LIB_0__::func_137(32356, -1))
					{
						*iParam2 = (*iParam2 * Global_262145.f_32977 /* Tunable: -492941246 */);
						__LIB_0__::func_186(32356, 1, -1);
					}
				}
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(140);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar16 = Global_262145.f_24489 /* Tunable: -1073212210 */;
				if (!bVar18)
				{
					fVar16 = Global_262145.f_24490 /* Tunable: -787828473 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar16));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_24491 /* Tunable: 390735097 */;
				if (!bVar18)
				{
					iVar4 = Global_262145.f_24492 /* Tunable: -1911840744 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
	else if (uParam1->f_22)
	{
	}
}

void func_205(int iParam0, var uParam1, int iParam2, var uParam3, var uParam4)//Position - 0x7890B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	bool bVar15;
	bool bVar16;
	bool bVar17;
	*uParam4 = 0;
	bVar16 = __LIB_1__::func_375(1);
	bVar17 = false;
	if (iParam0 == 229)
	{
	}
	else if (iParam0 == 230)
	{
		if (__LIB_1__::func_501())
		{
			bVar15 = PLAYER::PLAYER_ID();
		}
		else
		{
			bVar15 = __LIB_0__::func_797();
		}
		if (bVar15 != -1)
		{
			iVar0 = (uParam1->f_15 + uParam1->f_8);
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
				bVar17 = true;
			}
			else
			{
				fVar10 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar11 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar12 = ((fVar10 / fVar11) * 100f);
				fVar13 = ((IntToFloat(iVar0) / 100f) * fVar12);
				iVar1 = SYSTEM::CEIL(fVar13);
			}
			*uParam3 = iVar1;
			iVar2 = __LIB_15__::func_442(uParam1->f_16, *uParam3);
			*iParam2 = (*iParam2 + iVar2);
			if (bVar17)
			{
				iVar9 = __LIB_15__::func_642(uParam1->f_16, *uParam3);
				if (iVar9 > 0)
				{
					*iParam2 = (*iParam2 + iVar9);
				}
			}
			if (__LIB_15__::func_385(*iParam2) > 0)
			{
				if (bVar15 == PLAYER::PLAYER_ID())
				{
					__LIB_11__::func_817("SMTICK_RONCUT" /* GXT: Ron's Cut: $~1~. */, __LIB_15__::func_385(*iParam2), 0);
				}
				*iParam2 = (*iParam2 - __LIB_15__::func_385(*iParam2));
			}
			if (bVar15 == PLAYER::PLAYER_ID())
			{
				__LIB_15__::func_444(iVar2, iVar9);
				iVar6 = __LIB_34__::func_877(&uVar5);
				iVar7 = Global_262145.f_22854 /* Tunable: 1245415334 */;
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar8 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_22853 /* Tunable: -2011721386 */));
				*uParam4 = ((*iParam2 / 100) * iVar8);
				*iParam2 = (*iParam2 + *uParam4);
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(44);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar14 = Global_262145.f_22785 /* Tunable: 1359115930 */;
				if (!bVar16)
				{
					fVar14 = Global_262145.f_22786 /* Tunable: 304396062 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar14));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_22787 /* Tunable: -1817764260 */;
				if (!bVar16)
				{
					iVar4 = Global_262145.f_22788 /* Tunable: -1446893415 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
}

bool func_206(bool bParam0, int iParam1, bool bParam2)//Position - 0xD76C3
{
	return __LIB_30__::func_779(bParam0, iParam1, bParam2, 1);
}

int func_207(int iParam0, int iParam1, bool bParam2, int iParam3)//Position - 0xF6B5E
{
	int iVar0;
	iVar0 = __LIB_8__::func_93(iParam0, iParam1, iParam3);
	iVar0 = (iVar0 + __LIB_35__::func_868(iParam0, bParam2));
	return iVar0;
}

int func_208(bool bParam0, bool bParam1)//Position - 0x133B40
{
	if (__LIB_12__::func_486(bParam0, 1) && __LIB_12__::func_486(bParam1, 1))
	{
		return (__LIB_35__::func_869(bParam0) == __LIB_2__::func_39(bParam1) || __LIB_35__::func_869(bParam1) == __LIB_2__::func_39(bParam0));
	}
	return 0;
}

void func_209(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x78B0C
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	var uVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	bool bVar15;
	int iVar16;
	bool bVar17;
	bVar17 = __LIB_1__::func_375(1);
	if (iParam0 == 225)
	{
	}
	else if (iParam0 == 226)
	{
		if (__LIB_1__::func_501())
		{
			bVar15 = PLAYER::PLAYER_ID();
		}
		else
		{
			bVar15 = __LIB_0__::func_797();
		}
		if (bVar15 != -1)
		{
			iVar16 = __LIB_4__::func_566(bVar15);
			iVar0 = (__LIB_35__::func_75(bVar15, iVar16) + uParam1->f_8);
			if (uParam1->f_10 == uParam1->f_11)
			{
				iVar1 = iVar0;
			}
			else
			{
				fVar10 = SYSTEM::TO_FLOAT(uParam1->f_10);
				fVar11 = SYSTEM::TO_FLOAT(uParam1->f_11);
				fVar12 = ((fVar10 / fVar11) * 100f);
				fVar13 = ((IntToFloat(iVar0) / 100f) * fVar12);
				iVar1 = SYSTEM::CEIL(fVar13);
			}
			*uParam3 = iVar1;
			iVar2 = __LIB_35__::func_782(bVar15, iVar16, iVar1, 0);
			if (uParam1->f_14 == 0)
			{
				iVar2 = SYSTEM::CEIL((IntToFloat(iVar2) * Global_262145.f_21554 /* Tunable: 1021567941 */));
			}
			else
			{
				iVar2 = SYSTEM::CEIL((IntToFloat(iVar2) * Global_262145.f_21553 /* Tunable: 1865029244 */));
			}
			*iParam2 = (*iParam2 + iVar2);
			if (bVar15 == PLAYER::PLAYER_ID())
			{
				__LIB_15__::func_608(iVar16, iVar2);
				if (__LIB_15__::func_607(iVar16) >= Global_262145.f_21100 /* Tunable: -376544159 */ || iVar2 >= Global_262145.f_21100 /* Tunable: -376544159 */)
				{
					__LIB_22__::func_436(5);
				}
				iVar6 = __LIB_34__::func_877(&uVar5);
				iVar7 = SYSTEM::ROUND(Global_262145.f_21556 /* Tunable: -556480345 */);
				if (iVar6 > iVar7)
				{
					iVar6 = iVar7;
				}
				iVar8 = SYSTEM::CEIL((IntToFloat(iVar6) * Global_262145.f_21555 /* Tunable: 1413334331 */));
				iVar9 = ((*iParam2 / 100) * iVar8);
				*iParam2 = (*iParam2 + iVar9);
				if (Global_262145.f_32970 /* Tunable: 1598011694 */)
				{
					if (!__LIB_0__::func_137(32357, -1))
					{
						*iParam2 = (*iParam2 * Global_262145.f_32978 /* Tunable: -278088930 */);
						__LIB_0__::func_186(32357, 1, -1);
					}
				}
				if (*iParam2 > 0)
				{
					if (iVar6 > 0)
					{
						__LIB_1__::func_928(108);
					}
					else
					{
						__LIB_1__::func_928(110);
					}
				}
				Global_2815059.f_5195.f_386 = *iParam2;
			}
			else
			{
				fVar14 = Global_262145.f_21557 /* Tunable: 426264033 */;
				if (!bVar17)
				{
					fVar14 = Global_262145.f_21558 /* Tunable: -1471492989 */;
				}
				iVar3 = SYSTEM::CEIL((IntToFloat(*iParam2) * fVar14));
				*iParam2 = iVar3;
				iVar4 = Global_262145.f_21559 /* Tunable: -165611423 */;
				if (!bVar17)
				{
					iVar4 = Global_262145.f_21560 /* Tunable: 301168766 */;
				}
				if (*iParam2 > iVar4)
				{
					*iParam2 = iVar4;
				}
			}
		}
	}
	else if (iParam0 == 227)
	{
	}
}

void func_210(int iParam0, bool bParam1, var uParam2, int iParam3, var uParam4)//Position - 0x7984D
{
	bool bVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	float fVar8;
	int iVar9;
	int iVar10;
	bVar0 = __LIB_0__::func_796(PLAYER::PLAYER_ID());
	if (iParam0 == 167)
	{
		if (__LIB_0__::func_796(PLAYER::PLAYER_ID()))
		{
			if (bParam1)
			{
				__LIB_15__::func_391();
			}
			__LIB_15__::func_390();
		}
	}
	else if (iParam0 == 168)
	{
		if (bParam1)
		{
			if (uParam2->f_5)
			{
				*iParam3 = (*iParam3 + __LIB_15__::func_644(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183));
			}
			else
			{
				*uParam4 = uParam2->f_7;
				if (uParam2->f_8 > 0)
				{
					*uParam4 = (*uParam4 + uParam2->f_8);
				}
				iVar1 = __LIB_13__::func_509(*uParam4);
				iVar2 = (iVar1 * *uParam4);
				*iParam3 = (*iParam3 + iVar2);
				if (bVar0)
				{
					iVar4 = __LIB_34__::func_877(&uVar3);
					iVar5 = Global_262145.f_16656 /* Tunable: EXEC_CONTRABAND_HIGH_DEMAND_BONUS_CAP */;
					if (iVar4 > iVar5)
					{
						iVar4 = iVar5;
					}
					iVar6 = SYSTEM::CEIL((IntToFloat(iVar4) * Global_262145.f_15864 /* Tunable: EXEC_CONTRABAND_HIGH_DEMAND_BONUS_PERCENTAGE */));
					iVar7 = ((*iParam3 / 100) * iVar6);
					*iParam3 = (*iParam3 + iVar7);
					if (uParam2->f_6)
					{
						*iParam3 = (*iParam3 + *uParam2);
					}
					if (iVar4 > 0 && uParam2->f_9 != 4)
					{
						__LIB_1__::func_928(44);
					}
				}
			}
			if (bVar0)
			{
				if (Global_262145.f_32963 /* Tunable: -1292749091 */)
				{
					if (!__LIB_0__::func_137(32350, -1))
					{
						*iParam3 = (*iParam3 * Global_262145.f_32971 /* Tunable: -364133001 */);
						__LIB_0__::func_186(32350, 1, -1);
					}
				}
				__LIB_15__::func_610(*iParam3);
				__LIB_15__::func_388();
				Global_2815059.f_5195.f_386 = *iParam3;
			}
			else
			{
				fVar8 = Global_262145.f_24493 /* Tunable: -623310017 */;
				iVar9 = SYSTEM::CEIL((IntToFloat(*iParam3) * fVar8));
				*iParam3 = iVar9;
				iVar10 = Global_262145.f_24494 /* Tunable: -223487172 */;
				if (*iParam3 > iVar10)
				{
					*iParam3 = iVar10;
				}
			}
		}
		if (bVar0)
		{
			__LIB_15__::func_387();
		}
	}
}

void func_211(var uParam0, bool bParam1)//Position - 0x7CA65
{
	if (__LIB_1__::func_260(uParam0->f_1))
	{
		uParam0->f_73 = 1;
	}
	if (bParam1 == __LIB_0__::func_162() || !__LIB_1__::func_693(bParam1, 0, 1))
	{
		return;
	}
	if (__LIB_1__::func_256(uParam0->f_1))
	{
		if (uParam0->f_71 == 1)
		{
			uParam0->f_73 = __LIB_35__::func_874(bParam1, -2, 0, 0, 0);
		}
	}
}

int func_212(bool bParam0)//Position - 0x9173A
{
	if (__LIB_2__::func_782(Global_1853348[bParam0 /*834*/].f_267.f_32, 0, 0))
	{
		return 1;
	}
	return 0;
}

float func_213(int iParam0, float fParam1, float fParam2)//Position - 0x92198
{
	bool bVar0;
	float fVar1;
	struct<3> Var2;
	struct<3> Var3;
	bVar0 = Global_2703735;
	Var2 = { __LIB_1__::func_722(iParam0) };
	Var2.f_2 = 0f;
	if (Global_1581351 || __LIB_15__::func_360())
	{
		if (__LIB_2__::func_742(bVar0))
		{
			Var3 = { __LIB_35__::func_784(bVar0) };
		}
		else if (__LIB_15__::func_344(bVar0))
		{
			Var3 = { __LIB_15__::func_646(bVar0) };
		}
	}
	else
	{
		Var3 = { ENTITY::GET_ENTITY_COORDS(PLAYER::GET_PLAYER_PED(bVar0), false) };
	}
	Var3.f_2 = 0f;
	fVar1 = SYSTEM::VMAG(Var3 - Var2);
	if (fVar1 < fParam1)
	{
		fVar1 = fParam1;
	}
	if (fVar1 > fParam2)
	{
		fVar1 = fParam2;
	}
	fVar1 = ((fVar1 - fParam1) / (fParam2 - fParam1));
	fVar1 = (fVar1 - 1f);
	fVar1 = (fVar1 * -1f);
	return fVar1;
}

int func_214(char* sParam0, bool bParam1, bool bParam2, int iParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x960A8
{
	int iVar0;
	int iVar1;
	struct<16> Var2;
	bool bVar3;
	bool bVar4;
	iVar0 = -1;
	iVar1 = PLAYER::GET_PLAYER_TEAM(bParam1);
	if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), bParam1) || iParam3)
	{
		if (!bParam2)
		{
			StringCopy(&Var2, PLAYER::GET_PLAYER_NAME(bParam1), 64);
		}
		else
		{
			StringCopy(&Var2, PLAYER::GET_PLAYER_NAME(bParam1), 64);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Var2))
		{
		}
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
		if ((iVar1 != -1 && NETWORK::NETWORK_IS_ACTIVITY_SESSION()) && iVar1 < 4)
		{
			if (Global_4718592.f_111249[iVar1] != -1)
			{
				HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(__LIB_19__::func_494(iVar1, bParam1, 0));
			}
			else
			{
				HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(__LIB_35__::func_874(bParam1, -2, 1, 0, 0));
			}
		}
		else
		{
			HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(__LIB_35__::func_874(bParam1, -2, 1, 0, 0));
		}
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(__LIB_2__::func_49(&Var2));
		if (!bParam4)
		{
			iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		}
		else
		{
			Global_2787505 = { __LIB_1__::func_696(bParam1) };
			if (NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(&Global_2787435, 35, &Global_2787505))
			{
				bVar3 = false;
				if (MISC::ARE_STRINGS_EQUAL(&(Global_2787435.f_22), "Leader") && Global_2787435.f_30 == 0)
				{
					bVar3 = true;
				}
				if (Global_2787435.f_21 > 0)
				{
					bVar4 = false;
				}
				else
				{
					bVar4 = true;
				}
				if (bParam5)
				{
					if (bParam6)
					{
						Var2 = { __LIB_2__::func_828(&Var2) };
					}
					iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(bVar4, NETWORK::NETWORK_CLAN_IS_ROCKSTAR_CLAN(&Global_2787435, 35), &(Global_2787435.f_17), Global_2787435.f_30, bVar3, false, Global_2787435, &Var2, Global_1576215, Global_1576216, Global_1576217);
				}
				else
				{
					iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_CREWTAG(bVar4, NETWORK::NETWORK_CLAN_IS_ROCKSTAR_CLAN(&Global_2787435, 35), &(Global_2787435.f_17), Global_2787435.f_30, bVar3, false, Global_2787435, Global_1576215, Global_1576216, Global_1576217);
				}
			}
			else
			{
				iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
			}
		}
		__LIB_2__::func_158(14, sParam0, 1, &Var2, 0, 0, 0, 0, 1, 0, 0, 0);
	}
	return iVar0;
}

void func_215(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0xD4115
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (__LIB_1__::func_693(PLAYER::INT_TO_PLAYERINDEX(iVar0), 0, 1))
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (!__LIB_2__::func_40(iVar1, 0))
			{
				if (__LIB_12__::func_558(iVar1) || __LIB_12__::func_485(iVar1, bParam4))
				{
					if (__LIB_2__::func_759(iVar1, iParam1, 0))
					{
						(*iParam0)[iVar0] = *iParam2;
						*iParam2++;
						*iParam3++;
					}
				}
			}
		}
		iVar0++;
	}
}

void func_216(int* iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, bool bParam8, bool bParam9, bool bParam10, bool bParam11, bool bParam12, bool bParam13, int iParam14, bool bParam15, bool bParam16, bool bParam17, bool bParam18, bool bParam19, bool bParam20, bool bParam21)//Position - 0xD8A9A
{
	if (BitTest(*iParam0, 0))
	{
		__LIB_35__::func_875(iParam0, iParam1, iParam2, iParam3, iParam4, iParam5, iParam6, iParam7, bParam8, bParam9, bParam10, bParam11, bParam12, bParam13, 0, iParam14, bParam15, bParam16, bParam17, bParam18, bParam19, bParam20, bParam21);
	}
}

void func_217(int iParam0, int iParam1, bool bParam2)//Position - 0x1456BB
{
	__LIB_15__::func_436();
	if (__LIB_9__::func_704(PLAYER::PLAYER_ID()))
	{
		__LIB_19__::func_512(1);
	}
	if ((iParam0 != 0 && NETWORK::NETWORK_IS_PLAYER_ACTIVE(iParam1)) && __LIB_15__::func_631(iParam1, 1))
	{
		switch (iParam0)
		{
			case 157:
				MISC::SET_BIT(&Global_1943915, 0);
				break;
			}
	}
	if (!__LIB_1__::func_501() && !__LIB_12__::func_486(PLAYER::PLAYER_ID(), 1))
	{
		if (__LIB_2__::func_58())
		{
			__LIB_11__::func_670(3);
		}
	}
	__LIB_11__::func_670(4);
	if (__LIB_12__::func_548(0))
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57 = __LIB_0__::func_797();
	}
	if ((__LIB_12__::func_654(iParam0) || iParam0 == 293) || iParam0 == 291)
	{
		__LIB_15__::func_333();
		Global_1943947.f_18 = __LIB_19__::func_314(__LIB_1__::func_730());
	}
	else if (__LIB_12__::func_499(__LIB_4__::func_921(PLAYER::PLAYER_ID())))
	{
		__LIB_15__::func_332();
		Global_1944003.f_18 = __LIB_19__::func_314(__LIB_1__::func_730());
	}
	if (bParam2)
	{
		if (!__LIB_12__::func_495())
		{
			__LIB_2__::func_135(1);
		}
	}
	__LIB_15__::func_425();
}

int func_218(struct<3> Param0, float fParam1, int iParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6, int iParam7, int iParam8)//Position - 0x1938C
{
	int iVar0;
	bool bVar1;
	float fVar2;
	int iVar3;
	int iVar4;
	struct<3> Var5;
	float fVar6;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		bVar1 = iVar0;
		if ((iParam7 == 1 && PLAYER::PLAYER_ID() != bVar1) || iParam7 == 0)
		{
			if (__LIB_1__::func_693(bVar1, bParam3, bParam4))
			{
				if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), bVar1))
				{
					if (!bParam6 || (!PED::IS_PED_INJURED(PLAYER::GET_PLAYER_PED(bVar1)) && __LIB_1__::func_908(bVar1)))
					{
						if ((!bParam5 || (bParam5 == 1 && PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) != PLAYER::GET_PLAYER_TEAM(bVar1))) || PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1)
						{
							if (((PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()) == -1 && iParam8) && bParam5) && __LIB_35__::func_773(bVar1))
							{
							}
							else if (ENTITY::DOES_ENTITY_EXIST(PLAYER::GET_PLAYER_PED(bVar1)))
							{
								fVar2 = 0.1f;
								if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::GET_PLAYER_PED(bVar1), false))
								{
									iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::GET_PLAYER_PED(bVar1), false);
									if (ENTITY::DOES_ENTITY_EXIST(iVar3) && !ENTITY::IS_ENTITY_DEAD(iVar3, false))
									{
										iVar4 = ENTITY::GET_ENTITY_MODEL(iVar3);
										Var5 = { ENTITY::GET_ENTITY_COORDS(iVar3, false) };
										fVar6 = ENTITY::GET_ENTITY_HEADING(iVar3);
										if (__LIB_2__::func_857(Param0, fParam1, iParam2, Var5, fVar6, iVar4, 0))
										{
											return 1;
										}
									}
									else
									{
										fVar2 = 5f;
									}
								}
								if (__LIB_2__::func_779(__LIB_1__::func_694(bVar1), Param0, fParam1, iParam2, fVar2))
								{
									return 1;
								}
							}
						}
					}
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_219(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, var uParam5)//Position - 0x74666
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	bool bVar5;
	bool bVar6;
	bool bVar7;
	bool bVar8;
	struct<2> Var9;
	char* sVar10;
	bVar6 = __LIB_0__::func_797();
	if (bVar6 != __LIB_0__::func_162())
	{
		__LIB_30__::func_542(bVar6, &iVar0, &iVar1);
	}
	bVar7 = !__LIB_12__::func_548(1);
	bVar8 = __LIB_12__::func_548(0);
	Var9.f_1 = -1;
	switch (iParam0)
	{
		case 168:
			if (!__LIB_0__::func_112())
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam3);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 190:
			if (__LIB_5__::func_234())
			{
				if (!__LIB_0__::func_112())
				{
					Var9 = { __LIB_15__::func_382() };
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(Var9.f_0)), __LIB_1__::func_794(Var9.f_0), iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 226:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_PRODUCT(iParam1, MISC::GET_HASH_KEY(__LIB_12__::func_642(__LIB_4__::func_566(PLAYER::PLAYER_ID()))), 5, iParam4);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
			}
			if (bVar8)
			{
				bVar5 = true;
			}
			break;
		case 230:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					iVar2 = __LIB_15__::func_642(uParam5->f_16, iParam4);
					iVar3 = iParam1;
					if (iVar2 > 0)
					{
						iVar3 = (iVar3 - iVar2);
					}
					if (iParam2 > 0)
					{
						iVar3 = (iVar3 - iParam2);
					}
					MONEY::NETWORK_EARN_FROM_SMUGGLER_WORK(iVar3, iParam4, iParam2, iVar2, uParam5->f_16);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_512(joaat("SERVICE_EARN_SMUGGLER_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_SMUGGLER_AGENCY(iVar0, iVar1, iParam1, bVar7);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 233:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_GANGOPS_PREP_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_GANGOPS_PREP_PARTICIPATION(iParam1);
			}
			break;
		case 237:
			if (__LIB_1__::func_501())
			{
				if (!__LIB_0__::func_112())
				{
					MONEY::NETWORK_EARN_FROM_BUSINESS_HUB_SELL(iParam1, uParam5->f_20, iParam4);
				}
			}
			else
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_512(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
					Global_4534105[iVar4 /*85*/].f_6 = iVar0;
					Global_4534105[iVar4 /*85*/].f_7 = iVar1;
					Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				}
				else
				{
					MONEY::NETWORK_EARN_FROM_CONTRABAND(iParam1, iParam4);
				}
				if (bVar8)
				{
					bVar5 = true;
				}
			}
			break;
		case 250:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
				Global_4534105[iVar4 /*85*/] = 1781827765;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(iParam1, 1781827765);
			}
			break;
		case 249:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_FROM_FMBB_PHONECALL_MISSION"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(iParam1);
			}
			break;
		case 242:
		case 244:
		case 248:
		case 241:
		case 239:
		case 240:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_FROM_FMBB_BOSS_WORK"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_FROM_FMBB_BOSS_WORK(iParam1);
			}
			break;
		case 243:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_CASINO_MISSION_REWARD"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_MISSION_REWARD(iParam1);
			}
			break;
		case 158:
			if (uParam5->f_22)
			{
				if (__LIB_0__::func_112())
				{
					__LIB_9__::func_512(joaat("SERVICE_EARN_CASINO_HEIST_SETUP_MISSION"), iParam1, &iVar4, 0, 1, 0);
				}
				else
				{
					MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 0, 0, 1, iParam1, 0, 0);
				}
			}
			else if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_CASINO_HEIST_PREP_MISSION"), iParam1, &iVar4, 0, 1, 0);
			}
			else
			{
				MONEY::NETWORK_EARN_CASINO_HEIST(iParam1, 1, iParam1, 0, 0, 0, 0);
			}
			break;
		default:
			if (__LIB_0__::func_112())
			{
				__LIB_9__::func_512(joaat("SERVICE_EARN_BOSS_AGENCY"), iParam1, &iVar4, 0, 1, 0);
				Global_4534105[iVar4 /*85*/].f_6 = iVar0;
				Global_4534105[iVar4 /*85*/].f_7 = iVar1;
				Global_4534105[iVar4 /*85*/].f_8 = bVar7;
			}
			else
			{
				MONEY::NETWORK_EARN_AGENCY(iVar0, iVar1, iParam1, bVar7);
			}
			break;
	}
	if (bVar5)
	{
		sVar10 = "GBMR_SELLTICK0" /* GXT: You earned $~1~ for helping your VIP to complete a Sell mission. */;
		if (__LIB_1__::func_375(1))
		{
			sVar10 = "GBMR_SELLTICK2" /* GXT: You earned $~1~ for helping your MC President to complete a Sell mission. */;
		}
		else if (__LIB_3__::func_673(bVar6))
		{
			sVar10 = "GBMR_SELLTICK1" /* GXT: You earned $~1~ for helping your CEO to complete a Sell mission. */;
		}
		__LIB_11__::func_817(sVar10, iParam1, 0);
	}
}

int func_220(char* sParam0, bool bParam1, int iParam2, int iParam3, bool bParam4, int iParam5)//Position - 0x77823
{
	int iVar0;
	struct<8> Var1;
	iVar0 = -1;
	if (NETWORK::NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(PLAYER::PLAYER_ID(), bParam1) || iParam5)
	{
		if (!bParam4)
		{
			StringCopy(&Var1, PLAYER::GET_PLAYER_NAME(bParam1), 64);
		}
		else
		{
			StringCopy(&Var1, PLAYER::GET_PLAYER_NAME(bParam1), 64);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Var1))
		{
		}
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(sParam0);
		HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(__LIB_35__::func_874(bParam1, -2, 1, 0, 0));
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(__LIB_2__::func_49(&Var1));
		if (!iParam3 == 0)
		{
			HUD::SET_COLOUR_OF_NEXT_TEXT_COMPONENT(iParam3);
		}
		HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
		iVar0 = HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		__LIB_2__::func_158(27, sParam0, 1, &Var1, iParam2, 0, 0, 0, 1, 0, 0, 0);
	}
	return iVar0;
}

void func_221(int iParam0, var uParam1)//Position - 0x80824
{
	uParam1->f_4 = { __LIB_32__::func_218(iParam0) };
	*uParam1 = { __LIB_35__::func_876(iParam0) };
}

void func_222(int iParam0)//Position - 0x28F
{
	MISC::CLEAR_BIT(&(Local_184.f_1), iParam0);
}

void func_223(int iParam0)//Position - 0x2A1
{
	if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		return;
	}
	MISC::SET_BIT(&(Local_184.f_1), iParam0);
}

bool func_224(int iParam0)//Position - 0x2BE
{
	return BitTest(Local_184.f_1, iParam0);
}

int func_225()//Position - 0x2F0
{
	return Local_184.f_10;
}

void func_226(int iParam0)//Position - 0x34FB
{
	Local_184.f_0 = iParam0;
}

bool func_227(var uParam0)//Position - 0x35C7D
{
	return BitTest(uLocal_174, uParam0);
}

void func_228(bool bParam0, int iParam1)//Position - 0x3B5D3
{
	struct<3> Var0;
	Var0.f_0 = -523459633;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = bParam0;
	if (!iParam1 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iParam1);
	}
}

void func_229(int iParam0, int iParam1)//Position - 0x3D1E8
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	var uVar6;
	float fVar7;
	float fVar8;
	fVar2 = 0.5f;
	MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(iParam0), &Var0, &Var1);
	fVar7 = ((Var1.f_2 - Var0.f_2) / 2f);
	fVar8 = (Var1.f_2 - fVar7);
	if (fVar2 <= (fVar8 + 0.1f))
	{
		fVar2 = (fVar8 + 0.4f);
	}
	HUD::GET_HUD_COLOUR(iParam1, &iVar3, &iVar4, &iVar5, &uVar6);
	GRAPHICS::DRAW_MARKER(2, ENTITY::GET_ENTITY_COORDS(iParam0, true) + Vector((((Var1.f_2 - Var0.f_2) / 2f) + fVar2), 0f, 0f), 0f, 0f, 0f, 180f, 0f, 0f, 0.5f, 0.5f, 0.5f, iVar3, iVar4, iVar5, 100, true, true, 2, false, 0, 0, false);
}

int func_230()//Position - 0x4CEFE
{
	return Local_184.f_0;
}

void func_231()//Position - 0x20401B
{
	iLocal_175 = -1;
}

void func_232(var uParam0)//Position - 0x203FF5
{
	struct<14> Var0;
	Var0.f_2 = 585200513;
	Var0.f_10 = uParam0;
	__LIB_1__::func_634(Var0, __LIB_4__::func_970(1));
}

void func_233(int iParam0, int iParam1, struct<3> Param2)//Position - 0x2107
{
	switch (iParam0)
	{
		case 0:
			PED::SET_PED_SPHERE_DEFENSIVE_AREA(iParam1, Param2, 3f, false, false);
			break;
		case 1:
			PED::SET_PED_SPHERE_DEFENSIVE_AREA(iParam1, Param2, 3f, false, false);
			break;
		case 2:
			PED::SET_PED_SPHERE_DEFENSIVE_AREA(iParam1, Param2, 5f, false, false);
			break;
	}
}

int func_234()//Position - 0x53EB
{
	return Local_342.f_6;
}

void func_235(int iParam0)//Position - 0x53F8
{
	if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		return;
	}
	Local_342.f_5 = iParam0;
}

int func_236()//Position - 0x5412
{
	return Local_342.f_5;
}

void func_237(int iParam0)//Position - 0x828B
{
	Local_342.f_0 = iParam0;
}

void func_238(int iParam0)//Position - 0x3B504
{
	MISC::SET_BIT(&uLocal_150, iParam0);
}

int func_239()//Position - 0x4ACFD
{
	return Local_342.f_0;
}

int func_240(int iParam0)//Position - 0x201B3E
{
	switch (iParam0)
	{
		case 239:
			return Global_262145.f_24670 /* Tunable: -1203647122 */;
			break;
		case 240:
			return Global_262145.f_24671 /* Tunable: -1963126951 */;
			break;
	}
	return 0;
}

int func_241(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x2067C5
{
	if (bParam3)
	{
		return 5;
	}
	switch (iParam0)
	{
		case 2:
			return 8;
		case 3:
			return 6;
		case 1:
		case 5:
			if (bParam1)
			{
				return 1;
			}
			else if (bParam2)
			{
				return 7;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 4;
}

int func_242()//Position - 0x3DA0F
{
	if (!__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		return 0;
	}
	if ((CAM::IS_SCREEN_FADED_OUT() || CAM::IS_SCREEN_FADING_OUT()) || CAM::IS_SCREEN_FADING_IN())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_PLAYER_IN_MP_CUTSCENE(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (!__LIB_4__::func_946(PLAYER::PLAYER_ID(), 0))
	{
		if (__LIB_15__::func_304())
		{
			return 0;
		}
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("am_mp_smpl_interior_int")) > 0 && Global_1946244 != 7)
		{
			return 0;
		}
	}
	if (__LIB_3__::func_171(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (__LIB_4__::func_947(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	return 1;
}

bool func_243(var uParam0)//Position - 0x94A
{
	int iVar0;
	iVar0 = __LIB_1__::func_360(2483, -1, 0);
	return BitTest(iVar0, uParam0);
}

void func_244(int iParam0)//Position - 0x1609B0
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < 32)
	{
		iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
		if (__LIB_1__::func_693(iVar0, 0, 1) && iVar0 != PLAYER::PLAYER_ID())
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::GET_PLAYER_PED(iVar0), iParam0, false) && !__LIB_36__::func_136(iVar0))
			{
				__LIB_1__::func_473(__LIB_1__::func_705(iVar0), 0, 0f, 0, 0, 0, -1);
				VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(iParam0, iVar0, true);
			}
		}
		iVar1++;
	}
}

void func_245(var uParam0)//Position - 0x4B67E
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	bool bVar5;
	bool bVar6;
	int iVar7;
	bVar0 = false;
	if (!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || __LIB_10__::func_388() == 1)
	{
		if (!BitTest(uParam0->f_1, 6))
		{
			if (!uParam0->f_1.f_34)
			{
				if (!__LIB_15__::func_488(uParam0, __LIB_1__::func_4(), 1))
				{
					if (!__LIB_10__::func_224(PLAYER::PLAYER_ID()))
					{
						if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_4()) && !__LIB_10__::func_224(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4())))
						{
							if (!__LIB_0__::func_983())
							{
								bVar0 = true;
							}
						}
					}
				}
			}
		}
	}
	if (bVar0)
	{
		if (!__LIB_15__::func_169(uParam0, 0))
		{
			bVar0 = false;
		}
		else
		{
			bVar1 = true;
		}
	}
	if (!bVar0)
	{
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_4()))
		{
			if (!__LIB_10__::func_220())
			{
				if (PED::IS_PED_A_PLAYER(__LIB_1__::func_4()) && __LIB_10__::func_219(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4())))
				{
					bVar0 = true;
				}
			}
			if (!__LIB_10__::func_218())
			{
				if (ENTITY::IS_ENTITY_DEAD(__LIB_1__::func_4(), false))
				{
					bVar0 = true;
				}
			}
		}
	}
	if (bVar0)
	{
		MISC::SET_BIT(&(uParam0->f_47), 1);
		__LIB_36__::func_139(uParam0);
		bVar4 = false;
		if (bVar1)
		{
			if (__LIB_1__::func_711() != __LIB_1__::func_4() && __LIB_15__::func_488(uParam0, __LIB_1__::func_711(), 1))
			{
				bVar4 = true;
			}
			if (!bVar4)
			{
				if (__LIB_1__::func_693(Global_2815059.f_299, 0, 1))
				{
					bVar5 = __LIB_11__::func_680(Global_2815059.f_299, 9);
					bVar6 = __LIB_10__::func_224(Global_2815059.f_299);
				}
				if (((((((((((((((uParam0->f_47.f_2181 == 0 && __LIB_10__::func_217()) && !__LIB_10__::func_216(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_775)) && !__LIB_10__::func_215()) && !__LIB_11__::func_679(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4()))) && !__LIB_10__::func_216(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(__LIB_1__::func_4()))) && Global_1574964 == 0) && Global_1836598 == 0) && bVar5 == 0) && bVar6 == 0) && !__LIB_10__::func_214()) && !__LIB_10__::func_224(PLAYER::PLAYER_ID())) && !__LIB_6__::func_239()) && !BitTest(Global_2815059.f_4660, 31)) && !__LIB_8__::func_875(Global_4718592.f_168757)) && !__LIB_10__::func_213(Global_4718592.f_168757))
				{
					iVar7 = __LIB_13__::func_575();
					if (iVar7 == 1)
					{
						uParam0->f_47.f_2181 = 1;
					}
					else
					{
						__LIB_10__::func_209(&(uParam0->f_47));
						return;
					}
				}
				else
				{
					__LIB_10__::func_209(&(uParam0->f_47));
					if (__LIB_17__::func_848(uParam0, &iVar2, &iVar3, 1, 0, 1))
					{
						__LIB_15__::func_492(uParam0, iVar2, iVar3);
						bVar4 = true;
						uParam0->f_47.f_2181 = 0;
					}
				}
			}
		}
		if (!bVar4)
		{
			if (!__LIB_10__::func_208())
			{
				if (!BitTest(uParam0->f_47, 20))
				{
					MISC::SET_BIT(&(uParam0->f_47), 20);
				}
			}
			else if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
			{
				if (__LIB_13__::func_569())
				{
					if (!__LIB_0__::func_864(&(uParam0->f_2247)))
					{
						__LIB_0__::func_795(&(uParam0->f_2247), 0, 0);
					}
					else if (__LIB_0__::func_937(&(uParam0->f_2247), 5000, 0))
					{
						__LIB_11__::func_780(0);
						Global_2621446.f_81 = 3;
					}
				}
				else if (__LIB_4__::func_934(PLAYER::PLAYER_ID(), 0))
				{
					if (!BitTest(uParam0->f_47, 13))
					{
						MISC::SET_BIT(&(uParam0->f_47), 13);
					}
				}
			}
		}
		else if (BitTest(uParam0->f_47, 13))
		{
			MISC::SET_BIT(&(uParam0->f_47), 14);
		}
	}
	else if (!__LIB_10__::func_208())
	{
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_4()))
		{
			if (BitTest(uParam0->f_47, 20))
			{
				MISC::CLEAR_BIT(&(uParam0->f_47), 20);
			}
		}
	}
	__LIB_10__::func_209(&(uParam0->f_47));
	__LIB_15__::func_168(uParam0);
	__LIB_15__::func_190();
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || (__LIB_10__::func_206(&(uParam0->f_1)) && __LIB_7__::func_700(&(uParam0->f_1))))
	{
		CAM::DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE();
		CAM::DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE();
		__LIB_0__::func_646();
		__LIB_11__::func_828(uParam0);
	}
}

void func_246(var uParam0, bool bParam1, int iParam2)//Position - 0x5728B
{
	int iVar0;
	int iVar1;
	if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || (__LIB_10__::func_206(&(uParam0->f_1)) && __LIB_7__::func_700(&(uParam0->f_1))))
	{
		if (bParam1)
		{
			__LIB_36__::func_139(uParam0);
		}
		if (__LIB_15__::func_169(uParam0, 0) && __LIB_17__::func_848(uParam0, &iVar0, &iVar1, 0, 0, 0))
		{
			__LIB_10__::func_909(uParam0, __LIB_10__::func_925(&(uParam0->f_47), iVar0, iVar1));
			__LIB_11__::func_781(&(uParam0->f_1), CAM::GET_FINAL_RENDERED_CAM_COORD(), CAM::GET_FINAL_RENDERED_CAM_ROT(2), CAM::GET_FINAL_RENDERED_CAM_FOV(), 1);
			if ((iParam2 && !__LIB_5__::func_133()) && __LIB_10__::func_388() != 2)
			{
				CAM::DO_SCREEN_FADE_OUT(0);
			}
		}
	}
	else
	{
		__LIB_11__::func_781(&(uParam0->f_1), CAM::GET_FINAL_RENDERED_CAM_COORD(), CAM::GET_FINAL_RENDERED_CAM_ROT(2), CAM::GET_FINAL_RENDERED_CAM_FOV(), 1);
	}
}

void func_247(var uParam0)//Position - 0xAA610
{
	uParam0->f_47.f_1467 = 0;
	if (BitTest(uParam0->f_1.f_2, 3))
	{
		MISC::CLEAR_BIT(&(uParam0->f_1), 11);
		__LIB_7__::func_694(&(uParam0->f_1), 5);
	}
	else if (BitTest(uParam0->f_1.f_2, 0))
	{
		__LIB_36__::func_139(uParam0);
		__LIB_9__::func_819(&(uParam0->f_1), 0);
		__LIB_10__::func_327(&(uParam0->f_1), 1);
		__LIB_7__::func_694(&(uParam0->f_1), 4);
	}
	else
	{
		__LIB_7__::func_694(&(uParam0->f_1), 6);
	}
}

int func_248(var uParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, bool bParam5)//Position - 0xBB0CD
{
	int iVar0;
	int iVar1;
	__LIB_0__::func_873(&Global_1966234);
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam1);
		__LIB_9__::func_494(iParam1, &Global_1966234);
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
	{
		*uParam0 = VEHICLE::CREATE_VEHICLE(iVar0, Param2, fParam3, bParam4, bParam5, false);
		__LIB_36__::func_140(*uParam0, &Global_1966234, 1, 1, 0);
		if (((!VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0) && !VEHICLE::IS_THIS_MODEL_A_BOAT(iVar0)) && iVar0 != joaat("kosatka")) && iVar0 != joaat("avisa"))
		{
			iVar1 = 0;
			while (iVar1 <= 5)
			{
				if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam1, iVar1))
				{
					VEHICLE::SET_VEHICLE_DOOR_BROKEN(*uParam0, iVar1, true);
				}
				iVar1++;
			}
			iVar1 = 0;
			while (iVar1 <= 3)
			{
				if (!VEHICLE::IS_VEHICLE_WINDOW_INTACT(iParam1, iVar1))
				{
					VEHICLE::REMOVE_VEHICLE_WINDOW(*uParam0, iVar1);
				}
				iVar1++;
			}
		}
		if ((!VEHICLE::IS_THIS_MODEL_A_BOAT(iVar0) && iVar0 != joaat("kosatka")) && iVar0 != joaat("avisa"))
		{
			iVar1 = 0;
			while (iVar1 <= 7)
			{
				if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam1, iVar1, true))
				{
					VEHICLE::SET_VEHICLE_TYRE_BURST(*uParam0, iVar1, true, 1000f);
				}
				else if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam1, iVar1, false))
				{
					VEHICLE::SET_VEHICLE_TYRE_BURST(*uParam0, iVar1, false, 1000f);
				}
				iVar1++;
			}
		}
		VEHICLE::COPY_VEHICLE_DAMAGES(iParam1, *uParam0);
		if ((iVar0 == joaat("dominator4") || iVar0 == joaat("dominator5")) || iVar0 == joaat("dominator6"))
		{
			if (!VEHICLE::GET_DOES_VEHICLE_HAVE_TOMBSTONE(iParam1))
			{
				VEHICLE::HIDE_TOMBSTONE(*uParam0, true);
			}
		}
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
	{
		return 1;
	}
	return 0;
}

int func_249(int iParam0, var uParam1, int iParam2, struct<3> Param3)//Position - 0x16D1C6
{
	struct<101> Var0;
	int iVar1;
	int iVar2;
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0) || ENTITY::IS_ENTITY_DEAD(*iParam0, false))
	{
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
	{
		if (__LIB_0__::func_703(iParam2, 1))
		{
			ENTITY::FREEZE_ENTITY_POSITION(*uParam1, true);
		}
		if (!ENTITY::IS_ENTITY_DEAD(*uParam1, false))
		{
			ENTITY::SET_ENTITY_COORDS_NO_OFFSET(*uParam1, ENTITY::GET_ENTITY_COORDS(*iParam0, true), false, false, true);
			ENTITY::SET_ENTITY_ROTATION(*uParam1, ENTITY::GET_ENTITY_ROTATION(*iParam0, 2), 2, true);
		}
		if (__LIB_0__::func_703(iParam2, 2))
		{
			VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam1, 5f);
		}
		return 1;
	}
	else
	{
		*uParam1 = VEHICLE::CREATE_VEHICLE(__LIB_4__::func_445(), Param3, ENTITY::GET_ENTITY_HEADING(*iParam0), false, false, false);
		if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
		{
			Var0.f_9 = 49;
			Var0.f_59 = 2;
			Var0.f_78 = -1;
			Var0.f_79 = -1;
			Var0.f_96 = -1;
			Var0.f_97 = 1;
			Var0.f_99 = 132;
			Var0.f_100 = -1;
			__LIB_9__::func_494(*iParam0, &Var0);
			__LIB_36__::func_140(*uParam1, &Var0, 1, 1, 0);
			ENTITY::SET_ENTITY_COLLISION(*uParam1, false, false);
			ENTITY::SET_ENTITY_VISIBLE(*uParam1, false, false);
			ENTITY::SET_ENTITY_INVINCIBLE(*uParam1, true);
			VEHICLE::SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(*uParam1, false);
			ENTITY::SET_ENTITY_PROOFS(*uParam1, true, true, true, true, true, true, true, true);
			VEHICLE::SET_VEHICLE_CAN_BREAK(*uParam1, false);
			VEHICLE::GET_VEHICLE_LIGHTS_STATE(*iParam0, &iVar1, &iVar2);
			if (iVar1 != 0)
			{
				VEHICLE::SET_VEHICLE_LIGHTS(*uParam1, 2);
			}
			if (iVar2 != 0)
			{
				VEHICLE::SET_VEHICLE_FULLBEAM(*uParam1, true);
			}
		}
	}
	return 0;
}

int func_250(int iParam0, var uParam1)//Position - 0x196292
{
	int iVar0;
	int iVar1;
	struct<101> Var2;
	int iVar3;
	struct<3> Var4;
	float fVar5;
	float fVar6;
	if (!__LIB_0__::func_799(joaat("trailerlarge")))
	{
		return 0;
	}
	if (!__LIB_0__::func_799(__LIB_4__::func_650(PLAYER::PLAYER_ID())))
	{
		return 0;
	}
	if (!__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
	{
		return 0;
	}
	iVar0 = Global_2815059.f_304[1];
	if (!ENTITY::IS_ENTITY_DEAD(iVar0, false) && !__LIB_0__::func_86(uParam1->f_22.f_250))
	{
		STREAMING::SET_FOCUS_POS_AND_VEL(uParam1->f_22.f_250, 0f, 0f, 0f);
	}
	PATHFIND::REQUEST_PATH_NODES_IN_AREA_THIS_FRAME((uParam1->f_22.f_250 - 100f), (uParam1->f_22.f_250.f_1 - 100f), (uParam1->f_22.f_250 + 100f), (uParam1->f_22.f_250.f_1 + 100f));
	if ((__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1) && ENTITY::DOES_ENTITY_EXIST(iVar0)) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (ENTITY::DOES_ENTITY_EXIST(iVar1) && !ENTITY::IS_ENTITY_DEAD(iVar1, false))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(iVar0))
			{
				Var2.f_9 = 49;
				Var2.f_59 = 2;
				Var2.f_78 = -1;
				Var2.f_79 = -1;
				Var2.f_96 = -1;
				Var2.f_97 = 1;
				Var2.f_99 = 132;
				Var2.f_100 = -1;
				iVar3 = PLAYER::PLAYER_PED_ID();
				__LIB_4__::func_562(uParam1->f_22.f_250, 25f, 0);
				if (ENTITY::DOES_ENTITY_EXIST(uParam1->f_22.f_105) && !ENTITY::IS_ENTITY_DEAD(uParam1->f_22.f_105, false))
				{
					VEHICLE::SET_TRAILER_LEGS_LOWERED(uParam1->f_22.f_105);
				}
				switch (uParam1->f_22.f_217)
				{
					case 0:
						if (!ENTITY::DOES_ENTITY_EXIST(uParam1->f_22.f_105))
						{
							if (__LIB_4__::func_649())
							{
								uParam1->f_22.f_250 = { 842.616f, -3239.21f, -96.8731f };
								uParam1->f_22.f_253 = 62.260525f;
								uParam1->f_22.f_189[0 /*3*/] = { 1.47961f, 0.00453185f, 62.2534f };
							}
							else if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
							{
								uParam1->f_22.f_250 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
								uParam1->f_22.f_253 = ENTITY::GET_ENTITY_HEADING(iVar0);
								uParam1->f_22.f_189[0 /*3*/] = { ENTITY::GET_ENTITY_ROTATION(iVar0, 2) };
							}
							uParam1->f_22.f_105 = VEHICLE::CREATE_VEHICLE(joaat("trailerlarge"), uParam1->f_22.f_250, uParam1->f_22.f_250.f_1, (uParam1->f_22.f_250.f_2 - 70f), uParam1->f_22.f_253, false, false, false);
							ENTITY::FREEZE_ENTITY_POSITION(uParam1->f_22.f_105, true);
							ENTITY::SET_ENTITY_COLLISION(uParam1->f_22.f_105, false, false);
							__LIB_9__::func_494(iVar0, &Var2);
							__LIB_36__::func_140(uParam1->f_22.f_105, &Var2, 1, 1, 0);
						}
						else
						{
							uParam1->f_22.f_217 = 1;
						}
						break;
					case 1:
						if (ENTITY::DOES_ENTITY_EXIST(uParam1->f_22.f_105))
						{
							if (!NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
							{
								NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(iVar1, true, false);
								NETWORK::SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(true, false);
								NETWORK::NETWORK_SET_IN_MP_CUTSCENE(true, false);
								if (!AUDIO::IS_AUDIO_SCENE_ACTIVE("DLC_GR_MOC_Drive_Up_Ramp_Scene"))
								{
									AUDIO::START_AUDIO_SCENE("DLC_GR_MOC_Drive_Up_Ramp_Scene");
								}
							}
							if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
							{
								if (!ENTITY::IS_ENTITY_DEAD(uParam1->f_22.f_105, false))
								{
									ENTITY::SET_ENTITY_COORDS_NO_OFFSET(uParam1->f_22.f_105, uParam1->f_22.f_250, false, false, true);
									ENTITY::SET_ENTITY_HEADING(uParam1->f_22.f_105, uParam1->f_22.f_253);
									ENTITY::SET_ENTITY_ROTATION(uParam1->f_22.f_105, uParam1->f_22.f_189[0 /*3*/], 2, true);
									ENTITY::FREEZE_ENTITY_POSITION(uParam1->f_22.f_105, false);
									ENTITY::SET_ENTITY_COLLISION(uParam1->f_22.f_105, true, false);
									ENTITY::SET_ENTITY_INVINCIBLE(uParam1->f_22.f_105, true);
									AUDIO::PLAY_SOUND_FROM_ENTITY(-1, "Enter_Car_Ramp_Deploy", uParam1->f_22.f_105, "DLC_GR_MOC_Enter_Exit_Sounds", false, 0);
									VEHICLE::SET_VEHICLE_DOOR_OPEN(uParam1->f_22.f_105, 5, false, false);
									VEHICLE::SET_TRAILER_LEGS_LOWERED(uParam1->f_22.f_105);
									ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(uParam1->f_22.f_105);
									__LIB_8__::func_869(iParam0, uParam1, 0, 0);
									uParam1->f_22.f_11 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), true);
									CAM::SET_CAM_PARAMS(uParam1->f_22.f_11, uParam1->f_22.f_13, uParam1->f_22.f_16, uParam1->f_22.f_19, 0, 1, 1, 2);
									CAM::SET_CAM_FAR_CLIP(uParam1->f_22.f_11, 1000f);
									CAM::SHAKE_CAM(uParam1->f_22.f_11, "HAND_SHAKE", uParam1->f_22.f_40);
									CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
									Var4 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(uParam1->f_22.f_250, uParam1->f_22.f_253, 0f, -16.5f, 0f) };
									MISC::GET_GROUND_Z_FOR_3D_COORD(Var4, &fVar5, false, false);
									MISC::CLEAR_AREA(Var4.f_0, Var4.f_1, fVar5, 5f, false, false, false, false);
									GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(Var4.f_0, Var4.f_1, fVar5, 5f);
									ENTITY::SET_ENTITY_COORDS_NO_OFFSET(uParam1->f_22.f_105, uParam1->f_22.f_250, false, false, true);
									if (__LIB_4__::func_649())
									{
										ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iVar1, Var4, false, false, true);
									}
									else
									{
										ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iVar1, Var4.f_0, Var4.f_1, fVar5, false, false, true);
									}
									ENTITY::SET_ENTITY_HEADING(iVar1, uParam1->f_22.f_253);
									VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar1, 0f);
									__LIB_4__::func_648();
									ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(iVar1);
									uParam1->f_22.f_217 = 2;
								}
							}
						}
						break;
					case 2:
						if (!ENTITY::IS_ENTITY_DEAD(uParam1->f_22.f_105, false) && NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
						{
							VEHICLE::MODIFY_VEHICLE_TOP_SPEED(iVar1, 0f);
							VEHICLE::SET_VEHICLE_MAX_SPEED(iVar1, -1f);
							VEHICLE::STOP_BRINGING_VEHICLE_TO_HALT(iVar1);
							__LIB_5__::func_648(iVar1, &fVar6);
							AUDIO::PLAY_SOUND_FROM_ENTITY(-1, "Enter_Car_Ramp_Hits_Ground", uParam1->f_22.f_105, "DLC_GR_MOC_Enter_Exit_Sounds", false, 0);
							__LIB_4__::func_647(&iVar3, &iVar1, 3000, fVar6, 32);
							uParam1->f_22.f_217 = 0;
							__LIB_4__::func_646(0);
							__LIB_4__::func_645(0);
							return 1;
						}
						break;
				}
			}
			else
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(iVar0);
			}
		}
	}
	return 0;
}

void func_251(var uParam0)//Position - 0x1D6072
{
	if (BitTest(Global_2621446, 2))
	{
		__LIB_36__::func_139(uParam0);
		MISC::CLEAR_BIT(&Global_2621446, 2);
	}
	else
	{
		if (uParam0->f_1.f_29 < 0 || uParam0->f_1.f_29 >= 32)
		{
			uParam0->f_1.f_29 = 0;
		}
		__LIB_36__::func_112(uParam0, uParam0->f_1.f_29);
		uParam0->f_1.f_29++;
	}
}

void func_252(int iParam0, bool bParam1)//Position - 0x1EB033
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		__LIB_36__::func_140(iParam0, &(Global_2667225.f_45.f_69), bParam1, 1, 0);
	}
}

void func_253(int iParam0, int iParam1)//Position - 0x1DDE05
{
	__LIB_36__::func_140(*iParam0, &(Global_1585857[iParam1 /*142*/]), 1, 1, 0);
	__LIB_3__::func_3(iParam0, iParam1);
}

void func_254(bool bParam0, int iParam1)//Position - 0x201C86
{
	int iVar0;
	int iVar1;
	if (Global_1637407.f_1.f_108 != 0)
	{
		Global_1637407.f_1.f_108 = 0;
	}
	Global_1637407.f_1.f_109 = -1;
	Global_1637407.f_1.f_110 = -1;
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 167 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 168)
	{
		__LIB_15__::func_423();
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 4);
	}
	if ((__LIB_5__::func_234() && iParam1 != 0) && Global_262145.f_17496 /* Tunable: 35628303 */)
	{
		if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 190 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 192)
		{
			__LIB_30__::func_603(PLAYER::PLAYER_ID(), iParam1, 1, 0);
		}
	}
	if (((Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 164 || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 208) || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 250) || Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 237)
	{
		MISC::ENABLE_DISPATCH_SERVICE(3, true);
		MISC::ENABLE_DISPATCH_SERVICE(5, true);
	}
	if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 != -1)
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 = -1;
		if (!BitTest(Global_1836844.f_1, 14) && !__LIB_1__::func_15(PLAYER::PLAYER_ID()))
		{
			__LIB_2__::func_135(0);
		}
	}
	else if (__LIB_4__::func_921(PLAYER::PLAYER_ID()) != -1)
	{
		__LIB_7__::func_945(-1);
	}
	__LIB_15__::func_587(__LIB_0__::func_162());
	if (__LIB_1__::func_731(16))
	{
		__LIB_11__::func_662(16);
	}
	__LIB_15__::func_624(0);
	__LIB_15__::func_414(-1);
	__LIB_15__::func_421();
	iVar0 = 0;
	while (iVar0 < 8)
	{
		__LIB_15__::func_455(iVar0);
		iVar0++;
	}
	if (BitTest(Global_1943920.f_3, 0))
	{
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
		PLAYER::SET_MAX_WANTED_LEVEL(5);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 0);
	}
	if (BitTest(Global_1943920.f_3, 5))
	{
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 5);
	}
	iVar1 = __LIB_12__::func_520();
	if ((__LIB_1__::func_877(iVar1) || iVar1 == 205) || iVar1 == 210)
	{
		__LIB_15__::func_623(-1);
	}
	else if (((iVar1 == 201 || iVar1 == 200) || iVar1 == 179) || __LIB_3__::func_709(iVar1))
	{
		__LIB_15__::func_622(-1, 1);
	}
	else if (((((__LIB_1__::func_378(iVar1) || __LIB_15__::func_419(iVar1)) || __LIB_4__::func_825(iVar1)) || __LIB_4__::func_740(iVar1)) || __LIB_1__::func_612(iVar1)) || __LIB_1__::func_77(iVar1))
	{
	}
	else
	{
		__LIB_15__::func_622(-1, 1);
	}
	__LIB_1__::func_967(19);
	__LIB_1__::func_967(20);
	__LIB_1__::func_967(21);
	__LIB_1__::func_967(22);
	__LIB_1__::func_967(27);
	__LIB_11__::func_662(3);
	__LIB_11__::func_662(4);
	__LIB_11__::func_662(7);
	__LIB_22__::func_181();
	if (__LIB_4__::func_897(PLAYER::PLAYER_ID()))
	{
		__LIB_36__::func_97(0);
	}
	__LIB_1__::func_967(29);
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_57 = __LIB_0__::func_162();
	if (Global_2815059.f_5195.f_43 != 0)
	{
		Global_2815059.f_5195.f_43 = 0;
	}
	if (bParam0)
	{
		__LIB_30__::func_494();
	}
	if (!__LIB_1__::func_15(PLAYER::PLAYER_ID()))
	{
		__LIB_2__::func_16();
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 1);
	}
	if (BitTest(Global_1943920.f_3, 6))
	{
		MISC::ENABLE_DISPATCH_SERVICE(3, true);
		MISC::ENABLE_DISPATCH_SERVICE(5, true);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 6);
	}
	if (BitTest(Global_1943920.f_3, 7))
	{
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 7);
	}
	if (BitTest(Global_1943920.f_3, 8))
	{
		__LIB_12__::func_518("IMPEXP_SELFDES" /* GXT: The SecuroServ modified vehicle will now self-destruct. Please stand clear. */, 0);
		__LIB_12__::func_565("IMPEXP_SELFDES" /* GXT: The SecuroServ modified vehicle will now self-destruct. Please stand clear. */);
		MISC::CLEAR_BIT(&(Global_1943920.f_3), 8);
	}
	__LIB_15__::func_621(iVar1, 0);
}

void func_255(int iParam0, int iParam1)//Position - 0xADE
{
	struct<3> Var0;
	Var0.f_0 = 65268844;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam1;
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iParam0);
	}
}

void func_256(int iParam0)//Position - 0xBE9
{
	Local_93.f_0 = iParam0;
}

int func_257(int iParam0, int iParam1)//Position - 0x32CA2
{
	int iVar0;
	if (iParam0 != __LIB_0__::func_162() && iParam1 != __LIB_0__::func_162())
	{
		iVar0 = __LIB_2__::func_39(iParam0);
		if (iVar0 != __LIB_0__::func_162())
		{
			return iVar0 == __LIB_2__::func_39(iParam1);
		}
	}
	return 0;
}

int func_258()//Position - 0x39077
{
	return Local_93.f_0;
}

int func_259(bool bParam0, int iParam1)//Position - 0x570
{
	int iVar0;
	if (__LIB_0__::func_3() != 0)
	{
		return 0;
	}
	if (!__LIB_0__::func_855(bParam0))
	{
		return 0;
	}
	iVar0 = bParam0;
	if (Global_1853348[iVar0 /*834*/] == iParam1)
	{
		return 1;
	}
	return 0;
}

void func_260(int iParam0, int iParam1)//Position - 0x2A139
{
	if (__LIB_8__::func_842(PLAYER::PLAYER_ID()) && __LIB_15__::func_361())
	{
		if (__LIB_3__::func_709(iParam0) && iParam1 > 0)
		{
			__LIB_1__::func_354(11522, (__LIB_1__::func_360(11522, -1, 0) + iParam1), -1, 1, 0);
		}
	}
}

void func_261(int iParam0, var uParam1, var uParam2)//Position - 0x31683
{
	int iVar0;
	if (iParam0 == 157)
	{
		*uParam1 = 1f;
		*uParam2 = 1f;
		return;
	}
	if (__LIB_15__::func_394(iParam0))
	{
		if (!__LIB_2__::func_50())
		{
			*uParam1 = 1f;
			*uParam2 = Global_262145.f_12872 /* Tunable: GB_CHALLENGE_GOON_RP_REWARD_PERCENTAGE */;
		}
		else
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
		return;
	}
	if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 1))
	{
		if (__LIB_29__::func_860(iParam0))
		{
			*uParam1 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
			*uParam2 = (Global_262145.f_18658 /* Tunable: -1082665723 */ / 100f);
		}
		else if (iParam0 == 242)
		{
			*uParam1 = Global_262145.f_24650 /* Tunable: 1063368282 */;
			*uParam2 = Global_262145.f_24650 /* Tunable: 1063368282 */;
		}
		else if (iParam0 == 244)
		{
			*uParam1 = Global_262145.f_24651 /* Tunable: 1249038613 */;
			*uParam2 = Global_262145.f_24651 /* Tunable: 1249038613 */;
		}
		else if (iParam0 == 248)
		{
			*uParam1 = Global_262145.f_24653 /* Tunable: -488524036 */;
			*uParam2 = Global_262145.f_24653 /* Tunable: -488524036 */;
		}
		else if (iParam0 == 241)
		{
			*uParam1 = Global_262145.f_24654 /* Tunable: 787287514 */;
			*uParam2 = Global_262145.f_24654 /* Tunable: 787287514 */;
		}
		else if (iParam0 == 239)
		{
			*uParam1 = Global_262145.f_24655 /* Tunable: 1624617753 */;
			*uParam2 = Global_262145.f_24655 /* Tunable: 1624617753 */;
		}
		else if (iParam0 == 240)
		{
			*uParam1 = Global_262145.f_24656 /* Tunable: 987927512 */;
			*uParam2 = Global_262145.f_24656 /* Tunable: 987927512 */;
		}
		else
		{
			*uParam1 = Global_262145.f_12869 /* Tunable: GB_RIVAL_ORG_CASH_REWARD_PERCENTAGE */;
			*uParam2 = Global_262145.f_12868 /* Tunable: GB_RIVAL_ORG_RP_REWARD_PERCENTAGE */;
		}
	}
	else if (__LIB_29__::func_860(iParam0))
	{
		*uParam1 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
		*uParam2 = (Global_262145.f_18659 /* Tunable: -1704843668 */ / 100f);
	}
	else if (iParam0 == 242)
	{
		*uParam1 = Global_262145.f_24657 /* Tunable: -1262379258 */;
		*uParam2 = Global_262145.f_24657 /* Tunable: -1262379258 */;
	}
	else if (iParam0 == 244)
	{
		*uParam1 = Global_262145.f_24658 /* Tunable: 1108489437 */;
		*uParam2 = Global_262145.f_24658 /* Tunable: 1108489437 */;
	}
	else if (iParam0 == 248)
	{
		*uParam1 = Global_262145.f_24660 /* Tunable: -989876675 */;
		*uParam2 = Global_262145.f_24660 /* Tunable: -989876675 */;
	}
	else if (iParam0 == 241)
	{
		*uParam1 = Global_262145.f_24661 /* Tunable: -1361915386 */;
		*uParam2 = Global_262145.f_24661 /* Tunable: -1361915386 */;
	}
	else if (iParam0 == 239)
	{
		*uParam1 = Global_262145.f_24662 /* Tunable: -1419284063 */;
		*uParam2 = Global_262145.f_24662 /* Tunable: -1419284063 */;
	}
	else if (iParam0 == 240)
	{
		*uParam1 = Global_262145.f_24663 /* Tunable: 2112977251 */;
		*uParam2 = Global_262145.f_24663 /* Tunable: 2112977251 */;
	}
	else
	{
		*uParam1 = Global_262145.f_12871 /* Tunable: GB_SOLO_CASH_REWARD_PERCENTAGE */;
		*uParam2 = Global_262145.f_12870 /* Tunable: GB_SOLO_RP_REWARD_PERCENTAGE */;
	}
	iVar0 = __LIB_1__::func_730();
	if (iVar0 != __LIB_0__::func_162())
	{
		if (__LIB_2__::func_61(PLAYER::PLAYER_ID(), iVar0, 1))
		{
			*uParam1 = 1f;
			*uParam2 = 1f;
		}
	}
}

int func_262()//Position - 0x345C1
{
	switch (__LIB_30__::func_495(PLAYER::PLAYER_ID()))
	{
		case 179:
		case 180:
		case 182:
		case 183:
		case 184:
		case 185:
		case 186:
		case 189:
		case 190:
		case 191:
		case 192:
		case 195:
		case 197:
		case 198:
		case 200:
		case 201:
		case 202:
		case 203:
		case 204:
		case 206:
		case 207:
		case 208:
		case 209:
		case 211:
			return 1;
		default:
	}
	switch (__LIB_1__::func_592(PLAYER::PLAYER_ID()))
	{
		case 131:
		case 140:
		case 138:
		case 146:
			return 1;
			break;
	}
	if (__LIB_0__::func_428(PLAYER::PLAYER_ID()))
	{
		switch (__LIB_30__::func_495(PLAYER::PLAYER_ID()))
		{
			case 148:
			case 151:
			case 152:
			case 153:
			case 157:
			case 159:
			case 162:
			case 164:
			case 142:
				return 1;
				break;
			}
	}
	if (__LIB_3__::func_439(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	return 0;
}

int func_263()//Position - 0x36B01
{
	if ((((((__LIB_30__::func_495(PLAYER::PLAYER_ID()) == 229 || __LIB_30__::func_495(PLAYER::PLAYER_ID()) == 191) || __LIB_1__::func_718()) || __LIB_1__::func_632()) || __LIB_1__::func_717()) || Global_2788199.f_227 == 1) || (Global_2667225.f_1753 && __LIB_12__::func_487(PLAYER::PLAYER_ID())))
	{
		return 0;
	}
	return 1;
}

int func_264(int iParam0)//Position - 0x884
{
	if (__LIB_1__::func_744(iParam0))
	{
		if (__LIB_0__::func_315(iParam0))
		{
			return 1;
		}
	}
	return 0;
}

void func_265(int iParam0)//Position - 0x28F3B
{
	if (__LIB_8__::func_842(PLAYER::PLAYER_ID()) && __LIB_15__::func_361())
	{
		if (__LIB_3__::func_709(iParam0))
		{
			__LIB_2__::func_69(11521, -1);
		}
		else if (__LIB_15__::func_379(iParam0))
		{
			__LIB_2__::func_69(11523, -1);
		}
		else if (__LIB_1__::func_695(iParam0, 1))
		{
			__LIB_2__::func_69(11524, -1);
		}
		else if (__LIB_15__::func_311(iParam0))
		{
			__LIB_2__::func_69(11525, -1);
		}
	}
}

int func_266()//Position - 0x3391B
{
	if (__LIB_1__::func_15(PLAYER::PLAYER_ID()) || __LIB_34__::func_695())
	{
		if (!__LIB_3__::func_439(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	return 1;
}

int func_267(int* iParam0, int iParam1, var uParam2, var uParam3, bool bParam4, bool bParam5, char* sParam6)//Position - 0x34A60
{
	struct<4> Var0;
	char* sVar1;
	bool bVar2;
	bool bVar3;
	float fVar4;
	int iVar5;
	char* sVar6;
	StringCopy(&Var0, "", 16);
	bVar2 = iParam1 == 20;
	bVar3 = __LIB_2__::func_8(iParam1);
	fVar4 = __LIB_2__::func_7();
	iVar5 = -1;
	if (iParam1 == 27 || iParam1 == 28)
	{
		if (__LIB_1__::func_828())
		{
			if (__LIB_2__::func_6() > 0 && Global_1836359)
			{
				HUD::THEFEED_HIDE_THIS_FRAME();
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
				if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					HUD::HIDE_HELP_TEXT_THIS_FRAME();
				}
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
			}
		}
	}
	if (!bParam5)
	{
		if (!__LIB_12__::func_494())
		{
			__LIB_2__::func_122(iParam0, uParam2, 1);
			return 0;
		}
	}
	if (BitTest(Global_2815059.f_4660, 26))
	{
		__LIB_2__::func_122(iParam0, uParam2, 1);
		return 0;
	}
	if (!__LIB_0__::func_864(&(uParam2->f_19)))
	{
		if (__LIB_2__::func_6() == 1)
		{
			__LIB_2__::func_4(bVar3, iParam0, 0);
			__LIB_0__::func_795(&(uParam2->f_19), 0, 0);
			__LIB_2__::func_122(iParam0, uParam2, 0);
			MISC::SET_BIT(&(Global_2815059.f_4662), 5);
		}
	}
	if (__LIB_0__::func_864(&(uParam2->f_19)) || bParam5)
	{
		if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
		{
			HUD::HIDE_HELP_TEXT_THIS_FRAME();
		}
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
		if (__LIB_0__::func_937(&(uParam2->f_19), 10000, 0) || (__LIB_2__::func_6() == 0 && !bParam5))
		{
			__LIB_2__::func_122(iParam0, uParam2, 1);
			return 0;
		}
		else
		{
			if (bVar2 == 0)
			{
				__LIB_2__::func_3();
				if (iParam1 == 27 || iParam1 == 28)
				{
					HUD::THEFEED_HIDE_THIS_FRAME();
				}
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
			}
			if (!BitTest(uParam2->f_33, 0))
			{
				if (bVar2 == 0)
				{
					__LIB_2__::func_3();
					if (iParam1 == 27 || iParam1 == 28)
					{
						HUD::THEFEED_HIDE_THIS_FRAME();
					}
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(18);
				}
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				if (__LIB_2__::func_4(bVar3, iParam0, 0))
				{
					__LIB_1__::func_990(iParam0, 0, 0);
					sVar1 = __LIB_2__::func_166(iParam1, &(Global_4718592.f_116531), bParam4);
					Var0 = { __LIB_2__::func_165(iParam1) };
					if (bParam4)
					{
						__LIB_2__::func_147(iParam0, sVar1, "", 0, -1, -1, 1);
					}
					else if (iParam1 == 27)
					{
						__LIB_1__::func_998(iParam0, __LIB_2__::func_146(uParam2), __LIB_2__::func_145(uParam2), -1);
					}
					else if (iParam1 == 28)
					{
						sVar6 = __LIB_34__::func_699(uParam2);
						if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
						{
							sVar6 = sParam6;
						}
						__LIB_1__::func_997(iParam0, sVar6, __LIB_34__::func_698(), -1);
					}
					else if (__LIB_2__::func_75())
					{
						uParam2->f_34 = Global_1836358;
						__LIB_2__::func_147(iParam0, sVar1, &Var0, 1, -1, Global_1836358, 1);
					}
					else if (bVar2)
					{
						iVar5 = __LIB_2__::func_64(iParam1);
						uParam2->f_34 = Global_1836358;
						__LIB_2__::func_147(iParam0, sVar1, "", 0, iVar5, __LIB_1__::func_996(), 1);
					}
					else
					{
						iVar5 = __LIB_2__::func_64(iParam1);
						__LIB_2__::func_147(iParam0, sVar1, &Var0, 1, iVar5, -1, 1);
					}
					MISC::SET_BIT(&(uParam2->f_33), 0);
				}
			}
			if (BitTest(uParam2->f_33, 0))
			{
				Global_1836357 = uParam3;
				Global_1836356 = 1;
				HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(fVar4);
				if (bVar2)
				{
					if (uParam2->f_34 != Global_1836358)
					{
						MISC::CLEAR_BIT(&(uParam2->f_33), 0);
					}
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_268(int iParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7)//Position - 0x31C8E
{
	struct<80> Var0;
	Var0.f_3 = -1;
	Var0.f_4 = -1;
	Var0.f_5 = -1;
	Var0.f_6 = -1;
	Var0.f_7 = -1082130432;
	Var0.f_16 = 1;
	Var0.f_71 = 1;
	Var0.f_72 = 2;
	Var0.f_79 = -1;
	__LIB_1__::func_264(iParam0, &Var0, -1, sParam2, sParam1);
	Var0.f_71 = iParam3;
	Var0.f_6 = iParam4;
	Var0.f_72 = iParam5;
	Var0.f_16 = iParam6;
	if (iParam7 != 0)
	{
		__LIB_1__::func_330(&(Var0.f_69), iParam7);
	}
	return __LIB_36__::func_23(&Var0);
}

void func_269(int iParam0)//Position - 0x338
{
	MISC::CLEAR_BIT(&(Local_301.f_1), iParam0);
}

void func_270(int iParam0)//Position - 0x34B
{
	if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		return;
	}
	MISC::SET_BIT(&(Local_301.f_1), iParam0);
}

bool func_271(int iParam0)//Position - 0x369
{
	return BitTest(Local_301.f_1, iParam0);
}

bool func_272(int iParam0, int iParam1)//Position - 0x39A
{
	return BitTest(Local_302[iParam0 /*3*/].f_1, iParam1);
}

var func_273(var uParam0, int iParam1)//Position - 0x14B2C
{
	return uParam0->f_262[iParam1];
}

void func_274(int iParam0)//Position - 0x14F3A
{
	Local_301.f_0 = iParam0;
}

void func_275(int iParam0)//Position - 0x151E8
{
	MISC::SET_BIT(&(Local_302[NETWORK::PARTICIPANT_ID_TO_INT() /*3*/].f_1), iParam0);
}

void func_276(int iParam0)//Position - 0x46ADF
{
	if (HUD::DOES_BLIP_EXIST(Local_174[iParam0]))
	{
		HUD::REMOVE_BLIP(&(Local_174[iParam0]));
	}
}

void func_277(int iParam0)//Position - 0x49AC5
{
	MISC::SET_BIT(&uLocal_294, iParam0);
}

bool func_278(var uParam0)//Position - 0x49D3F
{
	return BitTest(uLocal_294, uParam0);
}

void func_279(int iParam0, int iParam1)//Position - 0x49DCD
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	var uVar6;
	float fVar7;
	float fVar8;
	HUD::GET_HUD_COLOUR(iParam1, &iVar3, &iVar4, &iVar5, &uVar6);
	fVar2 = 0.5f;
	MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(iParam0), &Var0, &Var1);
	fVar7 = ((Var1.f_2 - Var0.f_2) / 2f);
	fVar8 = (Var1.f_2 - fVar7);
	if (fVar2 <= (fVar8 + 0.1f))
	{
		fVar2 = (fVar8 + 0.4f);
	}
	GRAPHICS::DRAW_MARKER(2, ENTITY::GET_ENTITY_COORDS(iParam0, true) + Vector((((Var1.f_2 - Var0.f_2) / 2f) + fVar2), 0f, 0f), 0f, 0f, 0f, 180f, 0f, 0f, 0.5f, 0.5f, 0.5f, iVar3, iVar4, iVar5, 100, true, true, 2, false, 0, 0, false);
}

void func_280(int iParam0)//Position - 0x4EC63
{
	MISC::SET_BIT(&uLocal_293, iParam0);
}

bool func_281(int iParam0)//Position - 0x59D20
{
	return BitTest(uLocal_293, iParam0);
}

void func_282(int iParam0, int iParam1)//Position - 0x5A83B
{
	Local_302[iParam0 /*3*/] = iParam1;
}

int func_283()//Position - 0x5A8A7
{
	return Local_301.f_0;
}

int func_284(int iParam0)//Position - 0x5A8B2
{
	return Local_302[iParam0 /*3*/];
}

int func_285(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x20B1C1
{
	if (bParam3)
	{
		return 5;
	}
	switch (iParam0)
	{
		case 2:
			return 8;
		case 3:
			return 6;
		case 4:
			return 2;
		case 1:
		case 5:
			if (bParam1)
			{
				return 1;
			}
			else if (bParam2)
			{
				return 7;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 4;
}

void func_286()//Position - 0x5A895
{
	PLAYER::SET_MAX_WANTED_LEVEL(0);
	__LIB_2__::func_74(0f);
}

void func_287()//Position - 0x2066AF
{
	int iVar0;
	int iVar1;
	int iVar2;
	iLocal_298 = -1;
	if (BitTest(uLocal_295, PLAYER::PLAYER_ID()))
	{
		if (BitTest(uLocal_296, NETWORK::PARTICIPANT_ID_TO_INT()))
		{
			if (!__LIB_2__::func_154(PLAYER::PLAYER_ID()))
			{
				iLocal_298 = NETWORK::PARTICIPANT_ID_TO_INT();
			}
			else if (__LIB_1__::func_5() && !__LIB_3__::func_155())
			{
				iVar0 = __LIB_2__::func_51();
				if (PED::IS_PED_A_PLAYER(iVar0))
				{
					iVar1 = NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(iVar0);
					if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(iVar1))
					{
						iVar2 = NETWORK::NETWORK_GET_PARTICIPANT_INDEX(iVar1);
						iLocal_298 = iVar2;
					}
				}
			}
		}
	}
}

void func_288(var* uParam0, var uParam1, bool bParam2)//Position - 0x47346
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3;
	bool bVar4;
	bool bVar5;
	int iVar6;
	int iVar7;
	if (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID((uParam1[bParam2 /*52*/])->f_5))
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 < 4)
	{
		iVar1 = __LIB_15__::func_510(uParam1, bParam2, iVar0);
		switch (iVar1)
		{
			case 0:
				break;
			case 1:
				__LIB_35__::func_725(uParam1, bParam2);
				if (!PED::IS_PED_INJURED(__LIB_30__::func_547(uParam1, bParam2, iVar0)))
				{
					iVar2 = TASK::GET_SCRIPT_TASK_STATUS(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("SCRIPT_TASK_COMBAT_HATED_TARGETS_IN_AREA"));
					if (iVar2 != 1 && iVar2 != 0)
					{
						if (__LIB_15__::func_446(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
							{
								PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(__LIB_30__::func_547(uParam1, bParam2, iVar0), false);
								TASK::TASK_COMBAT_HATED_TARGETS_IN_AREA(__LIB_30__::func_547(uParam1, bParam2, iVar0), ENTITY::GET_ENTITY_COORDS(__LIB_30__::func_547(uParam1, bParam2, iVar0), true), 299.9f, 0);
							}
						}
					}
				}
				bVar5 = __LIB_15__::func_555(__LIB_30__::func_547(uParam1, bParam2, iVar0));
				if (bVar5)
				{
					bVar4 = true;
				}
				break;
			case 3:
				__LIB_35__::func_725(uParam1, bParam2);
				if (!PED::IS_PED_INJURED(__LIB_30__::func_547(uParam1, bParam2, iVar0)))
				{
					iVar2 = TASK::GET_SCRIPT_TASK_STATUS(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("SCRIPT_TASK_COMBAT"));
					if (iVar2 != 1 && iVar2 != 0)
					{
						if (__LIB_15__::func_446(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
							{
								if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(uParam1->f_273))
								{
									iVar6 = __LIB_30__::func_547(uParam1, bParam2, iVar0);
									PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iVar6, false);
									TASK::TASK_COMBAT_PED(iVar6, NETWORK::NET_TO_PED(uParam1->f_273), 0, 16);
								}
							}
						}
					}
				}
				bVar5 = __LIB_15__::func_555(__LIB_30__::func_547(uParam1, bParam2, iVar0));
				if (bVar5)
				{
					bVar4 = true;
				}
				break;
			case 4:
				__LIB_35__::func_725(uParam1, bParam2);
				if (!PED::IS_PED_INJURED(__LIB_30__::func_547(uParam1, bParam2, iVar0)))
				{
					iVar2 = TASK::GET_SCRIPT_TASK_STATUS(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("SCRIPT_TASK_VEHICLE_MISSION"));
					if (iVar2 != 1 && iVar2 != 0)
					{
						if (__LIB_15__::func_446(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
							{
								if (!__LIB_0__::func_78((uParam1[bParam2 /*52*/])->f_14, 0f, 0f, 0f, 0))
								{
									iVar6 = __LIB_30__::func_547(uParam1, bParam2, iVar0);
									if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iVar6))
									{
										iVar7 = PED::GET_VEHICLE_PED_IS_IN(iVar6, false);
										TASK::TASK_VEHICLE_MISSION_COORS_TARGET(iVar6, iVar7, (uParam1[bParam2 /*52*/])->f_14, 4, 25f, 786469, 3f, 10f, true);
									}
								}
							}
						}
					}
				}
				bVar5 = __LIB_15__::func_555(__LIB_30__::func_547(uParam1, bParam2, iVar0));
				if (bVar5)
				{
					bVar4 = true;
				}
				break;
			case 5:
				iVar6 = __LIB_30__::func_547(uParam1, bParam2, iVar0);
				iVar7 = __LIB_30__::func_546(uParam1, bParam2);
				if (!PED::IS_PED_INJURED(__LIB_30__::func_547(uParam1, bParam2, iVar0)))
				{
					iVar2 = TASK::GET_SCRIPT_TASK_STATUS(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("SCRIPT_TASK_COMBAT_HATED_TARGETS_IN_AREA"));
					if (iVar2 != 1 && iVar2 != 0)
					{
						if (__LIB_15__::func_446(__LIB_15__::func_509(uParam1, -bParam2, iVar0)))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
							{
								if (WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("VEHICLE_WEAPON_PLAYER_BUZZARD")))
								{
									PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(__LIB_30__::func_547(uParam1, bParam2, iVar0), false);
									PED::SET_PED_COMBAT_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 52, true);
									PED::SET_PED_COMBAT_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 53, true);
									PED::SET_PED_FIRING_PATTERN(__LIB_30__::func_547(uParam1, bParam2, iVar0), joaat("FIRING_PATTERN_BURST_FIRE_HELI"));
									TASK::TASK_COMBAT_HATED_TARGETS_IN_AREA(__LIB_30__::func_547(uParam1, bParam2, iVar0), ENTITY::GET_ENTITY_COORDS(__LIB_30__::func_547(uParam1, bParam2, iVar0), true), 299.9f, 0);
								}
							}
						}
					}
				}
				__LIB_35__::func_725(uParam1, bParam2);
				bVar5 = __LIB_15__::func_555(__LIB_30__::func_547(uParam1, bParam2, iVar0));
				if (bVar5)
				{
					bVar4 = true;
				}
				break;
			case 2:
				if (!PED::IS_PED_INJURED(__LIB_30__::func_547(uParam1, bParam2, iVar0)))
				{
					iVar2 = TASK::GET_SCRIPT_TASK_STATUS(__LIB_30__::func_547(uParam1, bParam2, iVar0), -251125078);
					if (iVar2 != 1 && iVar2 != 0)
					{
						if (__LIB_15__::func_446(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
						{
							if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(__LIB_15__::func_509(uParam1, bParam2, iVar0)))
							{
								Var3 = { uParam1->f_278 };
								if (!__LIB_0__::func_78(Var3, 0f, 0f, 0f, 0))
								{
									PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(__LIB_30__::func_547(uParam1, bParam2, iVar0), true);
									PED::SET_PED_COMBAT_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 5, false);
									PED::SET_PED_COMBAT_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 17, true);
									PED::SET_PED_FLEE_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 1024, true);
									PED::SET_PED_FLEE_ATTRIBUTES(__LIB_30__::func_547(uParam1, bParam2, iVar0), 32768, false);
									TASK::TASK_SMART_FLEE_COORD(__LIB_30__::func_547(uParam1, bParam2, iVar0), Var3, 10000f, 999999, false, false);
								}
							}
						}
					}
				}
				bVar5 = __LIB_15__::func_555(__LIB_30__::func_547(uParam1, bParam2, iVar0));
				bVar4 = false;
				break;
		}
		if (bVar5)
		{
			__LIB_2__::func_848(__LIB_15__::func_509(uParam1, bParam2, iVar0), &((uParam1[bParam2 /*52*/])->f_17[iVar0 /*8*/]), -1082130432, 0, bVar4, 0, 0, -1, -1, 1, 0);
			if (!__LIB_4__::func_77(PLAYER::PLAYER_ID()))
			{
				if (HUD::DOES_BLIP_EXIST((uParam1[bParam2 /*52*/])->f_17[iVar0 /*8*/]))
				{
					HUD::SET_BLIP_AS_SHORT_RANGE((uParam1[bParam2 /*52*/])->f_17[iVar0 /*8*/], true);
				}
				if (HUD::DOES_BLIP_EXIST((uParam1[bParam2 /*52*/])->f_17[iVar0 /*8*/].f_1))
				{
					HUD::SET_BLIP_AS_SHORT_RANGE((uParam1[bParam2 /*52*/])->f_17[iVar0 /*8*/].f_1, true);
				}
			}
		}
		iVar0++;
	}
}

Vector3 func_289(int iParam0, int iParam1, bool bParam2)//Position - 0x18A3
{
	switch (iParam1)
	{
		case 0:
			return -1238.8511f, -1400.535f, 3.2165f;
		case 1:
			return -1014.2174f, -533.1254f, 35.2295f;
		case 2:
			return -20.5298f, -1271.142f, 28.273f;
		case 3:
			return 1284.595f, -2562.1226f, 43.0983f;
		case 4:
			return 450.3504f, -1230.4711f, 29.034f;
		case 5:
			return 96.6945f, 63.2934f, 72.4168f;
		case 11:
			return 1121.2118f, 239.838f, 79.8556f;
		case 12:
			return -3054.2773f, 608.0347f, 6.2058f;
		case 13:
			return -2955.04f, 402.565f, 14.059f;
		case 14:
			return 1220.405f, 1870.591f, 77.908f;
		case 15:
			return 1110.4274f, -1262.8817f, 19.3388f;
		case 16:
			return -1307.914f, -1258.692f, 3.536f;
		case 17:
			return -172.4439f, -41.4259f, 51.3666f;
		case 18:
			return -500.5161f, -64.1044f, 38.8799f;
		case 19:
			return 1141.1024f, -1319.1995f, 33.6567f;
		case 20:
			return -1567.8386f, -239.2559f, 48.4769f;
		case 21:
			return -1033.6527f, -2216.249f, 7.9812f;
		case 22:
			return 491.1942f, -2136.7896f, 4.9175f;
		case 23:
			return 2548.7385f, 341.2728f, 107.4612f;
		case 24:
			return -480.7506f, -450.5746f, 33.2013f;
		case 45:
			return 187.2586f, 1246.9894f, 224.4599f;
		case 46:
			return 1881.0984f, -1032.1796f, 77.8668f;
		case 47:
			return -803.2568f, 884.084f, 202.1938f;
		case 48:
			return -2334.7673f, 263.5585f, 168.6021f;
		case 49:
			return 822.6735f, -2979.9612f, 5.0207f;
		case 6:
			return 1511.7168f, -2098.7117f, 75.777f;
		case 7:
			return 777.491f, 1287.714f, 359.297f;
		case 8:
			return -1715.441f, -1134.02f, 12.075f;
		case 9:
			return -1832.078f, -2805.618f, 12.944f;
		case 10:
			return 848.653f, -3209.231f, 4.901f;
		case 30:
			return 979.195f, -127.704f, 72.938f;
		case 31:
			return 977.524f, -1824.118f, 30.159f;
		case 32:
			return -680.7855f, -879.4637f, 23.4991f;
		case 33:
			return -1578.277f, -85.852f, 53.134f;
		case 34:
			return -145.437f, -956.396f, 20.277f;
		case 40:
			return -53.0294f, -1418.961f, 28.328f;
		case 41:
			return 85.7264f, -824.765f, 30.0518f;
		case 42:
			return -892.1681f, 132.276f, 58.3107f;
		case 43:
			return 192.946f, 61.563f, 82.601f;
		case 44:
			return -703.855f, -1137.8f, 9.613f;
		case 50:
			return 370.895f, 793.555f, 186.567f;
		case 51:
			return 348.939f, -1098.917f, 28.413f;
		case 52:
			return -138.215f, 984.602f, 235.012f;
		case 53:
			return -3188.038f, 1209.957f, 8.607f;
		case 54:
			return 1220.717f, -3000.777f, 4.865f;
		case 25:
			return -575.8843f, -133.6788f, 34.8194f;
		case 26:
			return 385.3026f, -1633.9333f, 28.2919f;
		case 27:
			return -1079.7545f, -883.9249f, 3.6029f;
		case 28:
			return 851.1126f, -1403.54f, 25.1226f;
		case 29:
			return -1307.5834f, -1527.4987f, 3.3451f;
		case 55:
			return -690.8977f, -611.4503f, 31.1423f;
		case 56:
			return -1776.953f, -252.487f, 48.395f;
		case 57:
			return -1327.994f, 350.675f, 62.719f;
		case 58:
			return -523.9545f, -249.077f, 34.7553f;
		case 59:
			return 291.944f, 195.6205f, 103.3726f;
		case 60:
			return 717.497f, -3858.922f, 0f;
		case 61:
			return 1983.776f, -3537.736f, -0.187f;
		case 62:
			return -2529.737f, -3526.052f, 0.375f;
		case 63:
			return 58.069f, -4048.858f, 0f;
		case 64:
			return -2531.218f, -1086.706f, 0.937f;
		case 65:
			return -1941.622f, 552.935f, 113.828f;
		case 66:
			return -1906.07f, 407.094f, 95.296f;
		case 67:
			return -927.281f, 15.811f, 46.715f;
		case 68:
			return -912.7903f, 197.7262f, 68.5015f;
		case 69:
			return 174.7607f, 470.654f, 140.9125f;
		case 70:
			return 1359.9131f, -616.0952f, 73.3379f;
		case 71:
			return -57.7033f, 350.6998f, 111.3981f;
		case 72:
			return -1861.5164f, -352.017f, 48.2682f;
		case 73:
			return -3016.0696f, 84.5069f, 10.6081f;
		case 74:
			return -2987.9639f, 724.8108f, 27.4969f;
		case 75:
			return -771.3334f, 670.0757f, 144.2118f;
		case 76:
			return -454.1442f, 372.409f, 103.7792f;
		case 77:
			return 135.73f, -1050.535f, 28.153f;
		case 78:
			return 2574.989f, 312.4306f, 107.4582f;
		case 79:
			return -934.2631f, -1302.4857f, 4.0192f;
		case 80:
			return 2392.2463f, 3336.2092f, 46.4009f;
		case 81:
			return 1924.4525f, 587.054f, 174.5436f;
		case 82:
			return -58.1016f, 1957.1812f, 189.1861f;
		case 83:
			return 846.9136f, -193.0723f, 71.5706f;
		case 84:
			return 258.8692f, 2591.7092f, 43.9541f;
		case 85:
			return 894.5007f, 3610.7263f, 31.8242f;
		case 86:
			return 652.677f, 3004.282f, 42.29f;
		case 87:
			return -1717.4796f, -1010.28f, 4.5209f;
		case 88:
			return 2151.2249f, 2119.6667f, 125.7974f;
		case 112:
			switch (iParam0)
			{
				case 0:
					return -273.9349f, 312.7653f, 92.2546f;
				default:
			}
			break;
		case 113:
			switch (iParam0)
			{
				case 0:
					return 706.1184f, 609.7703f, 127.9112f;
				default:
			}
			break;
		case 114:
			switch (iParam0)
			{
				case 0:
					return 2671.682f, 1714.2489f, 23.4882f;
				default:
			}
			break;
		case 89:
			return -1578.4532f, -1003.0469f, 12.0174f;
		case 90:
			return -574.5117f, 5377.569f, 69.2431f;
		case 91:
			return -397.6673f, 1235.4918f, 324.6416f;
		case 92:
			return 3330.9995f, 5171.1807f, 17.3451f;
		case 93:
			return -933.4341f, -2432.767f, 12.8374f;
		case 94:
			return -685.5545f, 5833.894f, 16.3313f;
		case 95:
			return -14.3309f, 6327.4673f, 30.2302f;
		case 96:
			return 2547.2905f, 2613.1821f, 36.9449f;
		case 97:
			return 2018.8721f, 3066.882f, 46.0579f;
		case 98:
			return 2499.774f, 3728.104f, 42.0005f;
		case 99:
			return 287.3807f, -901.2227f, 27.9538f;
		case 100:
			return -1344.614f, 131.7328f, 55.2393f;
		case 101:
			return -1285.7777f, -1400.9987f, 3.412f;
		case 102:
			return -1587.9679f, 2096.3389f, 68.0351f;
		case 103:
			switch (iParam0)
			{
				case 0:
					return -1143.732f, -1167.793f, 1.622f;
				default:
			}
			break;
		case 104:
			switch (iParam0)
			{
				case 0:
					return 952.6328f, -205.477f, 72.0406f;
				default:
			}
			break;
		case 105:
			switch (iParam0)
			{
				case 0:
					return 558.0351f, 2655.6926f, 41.1754f;
				default:
			}
			break;
		case 106:
			switch (iParam0)
			{
				case 0:
					return -675.5007f, 902.179f, 229.5803f;
				case 1:
					return -675.5007f, 902.179f, 229.5803f;
				case 2:
					return -675.5007f, 902.179f, 229.5803f;
				case 3:
					return -675.5007f, 902.179f, 229.5803f;
				default:
			}
			break;
		case 107:
			switch (iParam0)
			{
				case 0:
					return -169.475f, 919.922f, 234.656f;
				case 1:
					return -169.475f, 919.922f, 234.656f;
				case 2:
					return -169.475f, 919.922f, 234.656f;
				case 3:
					return -169.475f, 919.922f, 234.656f;
				default:
			}
			break;
		case 108:
			switch (iParam0)
			{
				case 0:
					return -1461.9225f, -39.8372f, 53.6671f;
				case 1:
					return -1461.9225f, -39.8372f, 53.6671f;
				case 2:
					return -1461.9225f, -39.8372f, 53.6671f;
				case 3:
					return -1461.9225f, -39.8372f, 53.6671f;
				default:
			}
			break;
		case 109:
			switch (iParam0)
			{
				case 0:
					return -1516.1827f, 1704.2878f, 94.8559f;
				case 1:
					return -1516.1827f, 1704.2878f, 94.8559f;
				case 2:
					return -1516.1827f, 1704.2878f, 94.8559f;
				case 3:
					return -1516.1827f, 1704.2878f, 94.8559f;
				default:
			}
			break;
		case 110:
			switch (iParam0)
			{
				case 0:
					return 660.2618f, 1738.9916f, 188.4902f;
				case 1:
					return 660.2618f, 1738.9916f, 188.4902f;
				case 2:
					return 660.2618f, 1738.9916f, 188.4902f;
				case 3:
					return 660.2618f, 1738.9916f, 188.4902f;
				default:
			}
			break;
		case 111:
			switch (iParam0)
			{
				case 0:
					return 382.0968f, 4404.0654f, 61.3883f;
				case 1:
					return 382.0968f, 4404.0654f, 61.3883f;
				case 2:
					return 382.0968f, 4404.0654f, 61.3883f;
				case 3:
					return 382.0968f, 4404.0654f, 61.3883f;
				default:
			}
			break;
		case 115:
			switch (iParam0)
			{
				case 0:
					return -1952.044f, 331.519f, 89.091f;
				case 1:
					return -1952.044f, 331.519f, 89.091f;
				case 2:
					return -1952.044f, 331.519f, 89.091f;
				case 3:
					return -1952.044f, 331.519f, 89.091f;
				default:
			}
			break;
		case 116:
			switch (iParam0)
			{
				case 0:
					return 208.102f, 3103.524f, 41.157f;
				case 1:
					return 208.102f, 3103.524f, 41.157f;
				case 2:
					return 208.102f, 3103.524f, 41.157f;
				case 3:
					return 208.102f, 3103.524f, 41.157f;
				default:
			}
			break;
		case 117:
			switch (iParam0)
			{
				case 0:
					return 2675.721f, 3133.303f, 49.904f;
				case 1:
					return 2675.721f, 3133.303f, 49.904f;
				case 2:
					return 2675.721f, 3133.303f, 49.904f;
				case 3:
					return 2675.721f, 3133.303f, 49.904f;
				default:
			}
			break;
		case 118:
			switch (iParam0)
			{
				case 0:
					return 1129.2769f, 203.8488f, 80.9764f;
				case 1:
					return 1129.2769f, 203.8488f, 80.9764f;
				case 2:
					return 1129.2769f, 203.8488f, 80.9764f;
				case 3:
					return 1129.2769f, 203.8488f, 80.9764f;
				default:
			}
			break;
		case 119:
			switch (iParam0)
			{
				case 0:
					return 1376.6208f, 3087.8835f, 39.5342f;
				case 1:
					return 1376.6208f, 3087.8835f, 39.5342f;
				case 2:
					return 1376.6208f, 3087.8835f, 39.5342f;
				case 3:
					return 1376.6208f, 3087.8835f, 39.5342f;
				default:
			}
			break;
		case 120:
			switch (iParam0)
			{
				case 0:
					return -1189.2511f, -2302.3809f, 12.9446f;
				case 1:
					return -1189.2511f, -2302.3809f, 12.9446f;
				case 2:
					return -1189.2511f, -2302.3809f, 12.9446f;
				case 3:
					return -1189.2511f, -2302.3809f, 12.9446f;
				default:
			}
			break;
		case 121:
			switch (iParam0)
			{
				case 0:
					return 3628.521f, 2592.892f, 4.37f;
				case 1:
					return 3628.521f, 2592.892f, 4.37f;
				case 2:
					return 3628.521f, 2592.892f, 4.37f;
				case 3:
					return 3628.521f, 2592.892f, 4.37f;
				default:
			}
			break;
		case 122:
			switch (iParam0)
			{
				case 0:
					return -2313.283f, 5172.768f, 4.37f;
				case 1:
					return -2313.283f, 5172.768f, 4.37f;
				case 2:
					return -2313.283f, 5172.768f, 4.37f;
				case 3:
					return -2313.283f, 5172.768f, 4.37f;
				default:
			}
			break;
		case 123:
			switch (iParam0)
			{
				case 0:
					return -3464.7856f, 2609.2112f, 4.3704f;
				case 1:
					return -3464.7856f, 2609.2112f, 4.3704f;
				case 2:
					return -3464.7856f, 2609.2112f, 4.3704f;
				case 3:
					return -3464.7856f, 2609.2112f, 4.3704f;
				default:
			}
			break;
		case 124:
			switch (iParam0)
			{
				case 0:
					return 845.264f, -565.879f, 56.713f;
				case 1:
					return 845.264f, -565.879f, 56.713f;
				case 2:
					return 845.264f, -565.879f, 56.713f;
				case 3:
					return 845.264f, -565.879f, 56.713f;
				default:
			}
			break;
		case 125:
			switch (iParam0)
			{
				case 0:
					return -920.1111f, 808.8036f, 183.3184f;
				case 1:
					return -920.1111f, 808.8036f, 183.3184f;
				case 2:
					return -920.1111f, 808.8036f, 183.3184f;
				case 3:
					return -920.1111f, 808.8036f, 183.3184f;
				default:
			}
			break;
		case 126:
			switch (iParam0)
			{
				case 0:
					return -3184.4739f, 1290.4387f, 13.4301f;
				case 1:
					return -3184.4739f, 1290.4387f, 13.4301f;
				case 2:
					return -3184.4739f, 1290.4387f, 13.4301f;
				case 3:
					return -3184.4739f, 1290.4387f, 13.4301f;
				default:
			}
			break;
		case 130:
			return -1574.4799f, 406.5338f, 106.7498f;
		case 131:
			return -2759.151f, 2712.18f, 1.384f;
		case 132:
			return 795.6692f, 1208.8247f, 338.848f;
		case 133:
			return -1581.985f, 5159.334f, 18.618f;
		case 134:
			return 3266.2703f, 5154.4863f, 18.7962f;
		case 135:
			return 1628.3256f, 3875.377f, 32.5581f;
	}
	if (!bParam2)
	{
	}
	return 0f, 0f, 0f;
}

bool func_290()//Position - 0x49FC
{
	return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_331 != 2000;
}

Vector3 func_291(int iParam0, int iParam1)//Position - 0x4BF7
{
	switch (iParam0)
	{
		case 133:
			switch (iParam1)
			{
				case 0:
					return -1570.384f, 5155.501f, 18.843f;
				case 1:
					return -705.2631f, -979.1364f, 19.3897f;
				default:
			}
			break;
		case 134:
			switch (iParam1)
			{
				case 0:
					return 3264.253f, 5142.5405f, 18.5579f;
				case 1:
					return 1037.3019f, 196.3292f, 79.8559f;
				default:
			}
			break;
		case 135:
			switch (iParam1)
			{
				case 0:
					return 1638.313f, 3881.0283f, 32.776f;
				case 1:
					return -1676.6682f, 71.1611f, 62.9372f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_292(int iParam0, int iParam1, int iParam2)//Position - 0x4CC9
{
	switch (iParam0)
	{
		case 124:
			switch (iParam1)
			{
				case 0:
					return 849.4644f, -568.0468f, 56.7129f;
				case 1:
					switch (iParam2)
					{
						case 0:
							return -1026.6382f, -1135.9514f, 1.1783f;
						case 1:
							return 491.0109f, -1455.8951f, 28.2348f;
						case 2:
							return -576.7303f, -998.832f, 21.1781f;
						default:
					}
					break;
			}
			break;
		case 125:
			switch (iParam1)
			{
				case 0:
					return -916.8128f, 808.9061f, 183.336f;
				case 1:
					switch (iParam2)
					{
						case 0:
							return 404.3431f, -1501.8109f, 28.2858f;
						case 1:
							return -573.2288f, -1111.9377f, 21.1782f;
						case 2:
							return -1045.5194f, -1015.9152f, 1.1504f;
						default:
					}
					break;
			}
			break;
		case 126:
			switch (iParam1)
			{
				case 0:
					return -3176.3044f, 1299.434f, 13.5443f;
				case 1:
					switch (iParam2)
					{
						case 0:
							return -608.0881f, -1000.5045f, 20.7864f;
						case 1:
							return -977.3376f, -1201.6111f, 3.6606f;
						case 2:
							return 474.3288f, -1571.5452f, 28.1238f;
						default:
					}
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_293(int iParam0, int iParam1)//Position - 0x4E5B
{
	switch (iParam0)
	{
		case 127:
			switch (iParam1)
			{
				case 0:
					return 477.252f, -1106.339f, 42.076f;
				case 1:
					return 1055.842f, -385.995f, 66.858f;
				case 2:
					return 299.319f, -196.988f, 60.57f;
				case 3:
					return 2556.863f, -371.281f, 91.993f;
				case 4:
					return 2583.172f, 428.004f, 107.456f;
				case 5:
					return 1402.675f, 2162.313f, 97.024f;
				case 6:
					return 2550.847f, 1613.197f, 28.791f;
				case 7:
					return 1224.952f, 1267.985f, 142.678f;
				case 8:
					return 1962.797f, -913.826f, 78.071f;
				case 9:
					return 1569.648f, 933.153f, 76.855f;
				case 10:
					return 2458.562f, 882.542f, 89.742f;
				default:
			}
			break;
		case 128:
			switch (iParam1)
			{
				case 0:
					return 533.174f, -24.249f, 90.173f;
				case 1:
					return 95f, -218.977f, 53.491f;
				case 2:
					return 1869.691f, 2667.626f, 44.672f;
				case 3:
					return 2703.095f, 1355.012f, 23.524f;
				case 4:
					return 808.684f, 2180.528f, 51.308f;
				case 5:
					return 236.413f, 1141.542f, 224.485f;
				case 6:
					return 1806.653f, 2324.512f, 55.792f;
				case 7:
					return 1644.74f, -960.112f, 62.465f;
				case 8:
					return 191.566f, 2564.816f, 48.709f;
				case 9:
					return 1283.956f, 1543.227f, 95.213f;
				case 10:
					return 1106.165f, -250.748f, 68.193f;
				default:
			}
			break;
		case 129:
			switch (iParam1)
			{
				case 0:
					return -1128.25f, -841.543f, 18.316f;
				case 1:
					return -835.698f, 107.16f, 53.664f;
				case 2:
					return -3030.981f, 548.948f, 6.503f;
				case 3:
					return -1906.358f, 2004.431f, 140.838f;
				case 4:
					return -1156.587f, 2675.232f, 17.0939f;
				case 5:
					return 226.793f, 680.934f, 188.488f;
				case 6:
					return -553.514f, 1870.459f, 209.911f;
				case 7:
					return -1498.919f, 1488.2f, 115.697f;
				case 8:
					return -2003.024f, -464.548f, 10.515f;
				case 9:
					return -1093.791f, 678.953f, 141.976f;
				case 10:
					return -2164.349f, 1019.391f, 188.544f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_294(int iParam0, int iParam1)//Position - 0x51B5
{
	switch (iParam0)
	{
		case 86:
			switch (iParam1)
			{
				case 0:
					return 635.533f, 3000.991f, 41.762f;
				case 1:
					return 645.075f, 2991.293f, 40.95f;
				default:
			}
			break;
		case 87:
			switch (iParam1)
			{
				case 0:
					return -1706.3119f, -1010.5488f, 4.6804f;
				case 1:
					return -1702.3584f, -999.7464f, 5.3206f;
				default:
			}
			break;
		case 88:
			switch (iParam1)
			{
				case 0:
					return 2170.647f, 2113.055f, 124.4414f;
				case 1:
					return 2166.9226f, 2119.1636f, 124.4554f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_295(int iParam0, int iParam1)//Position - 0x5287
{
	switch (iParam0)
	{
		case 121:
			switch (iParam1)
			{
				case 0:
					return 2444.009f, -382.5055f, 91.9927f;
				case 1:
					return 3660.417f, 2593.988f, -0.375f;
				case 2:
					return 3625.326f, 2556.492f, 4.37f;
				case 3:
					return 3631.033f, 2598.103f, 4.37f;
				default:
			}
			break;
		case 122:
			switch (iParam1)
			{
				case 0:
					return -2281.5413f, 3424.4717f, 31.0013f;
				case 1:
					return -2313.651f, 5168.825f, 4.37f;
				case 2:
					return -2297.258f, 5195.212f, 4.37f;
				case 3:
					return -2320.4019f, 5208.223f, 0.1875f;
				default:
			}
			break;
		case 123:
			switch (iParam1)
			{
				case 0:
					return 3631.675f, 3761.38f, 27.516f;
				case 1:
					return -3474.1826f, 2646.8777f, 0.5624f;
				case 2:
					return -3463.4565f, 2604.418f, 4.3703f;
				case 3:
					return -3467.829f, 2620.6748f, 4.3704f;
				case 4:
					return -3433.4885f, 2612.7568f, 4.3704f;
				case 5:
					return -3429.2192f, 2609.003f, 4.3704f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_296(int iParam0, int iParam1)//Position - 0x5419
{
	switch (iParam0)
	{
		case 118:
			switch (iParam1)
			{
				case 0:
					return 1130.6866f, 223.0034f, 80.9439f;
				case 1:
					return 1146.3226f, 232.7237f, 80.9346f;
				case 2:
					return 1114.3075f, 196.9373f, 80.9486f;
				case 3:
					return 1113.9285f, 179.9008f, 80.9568f;
				case 4:
					return 1099.2928f, 172.1731f, 80.9344f;
				case 5:
					return 1156.3878f, 260.556f, 80.8966f;
				case 6:
					return 1167.6595f, 266.7008f, 80.9102f;
				default:
			}
			break;
		case 119:
			switch (iParam1)
			{
				case 0:
					return 1389.6643f, 3101.4478f, 39.4464f;
				case 1:
					return 1409.1249f, 3096.472f, 39.4387f;
				case 2:
					return 1417.8676f, 3108.893f, 39.5279f;
				case 3:
					return 1358.4791f, 3093.0447f, 39.5342f;
				case 4:
					return 1342.7312f, 3080.17f, 39.5342f;
				case 5:
					return 1442.6552f, 3108.1177f, 39.5342f;
				case 6:
					return 1453.9589f, 3118.6282f, 39.5341f;
				default:
			}
			break;
		case 120:
			switch (iParam1)
			{
				case 0:
					return -1188.0989f, -2314.389f, 12.9446f;
				case 1:
					return -1195.6813f, -2339.4863f, 12.9446f;
				case 2:
					return -1181.4142f, -2339.9421f, 12.9445f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_297(int iParam0, int iParam1)//Position - 0x55F3
{
	switch (iParam0)
	{
		case 115:
			switch (iParam1)
			{
				case 0:
					return -1943.501f, 334.375f, 88.807f;
				case 1:
					return -1937.971f, 331.371f, 88.491f;
				case 2:
					return -1935.074f, 334.821f, 124.912f;
				default:
			}
			break;
		case 116:
			switch (iParam1)
			{
				case 0:
					return 199.552f, 3107.217f, 41.128f;
				case 1:
					return 203.944f, 3111.003f, 41.141f;
				case 2:
					return 198.784f, 3107.195f, 73.166f;
				default:
			}
			break;
		case 117:
			switch (iParam1)
			{
				case 0:
					return 2675.4634f, 3121.0852f, 48.9864f;
				case 1:
					return 2670.341f, 3121.404f, 49.265f;
				case 2:
					return 2675.895f, 3123.923f, 82.307f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_298(int iParam0, int iParam1)//Position - 0x570D
{
	switch (iParam0)
	{
		case 112:
			switch (iParam1)
			{
				case 0:
					return -270.289f, 316.387f, 92.255f;
				case 1:
					return -283.972f, 312.927f, 92.255f;
				case 2:
					return -279.297f, 312.713f, 92.276f;
				case 3:
					return -284.427f, 322.459f, 92.255f;
				case 4:
					return -276.055f, 322.5f, 92.255f;
				case 5:
					return -271.185f, 321.929f, 92.255f;
				case 6:
					return -280.462f, 322.706f, 92.255f;
				default:
			}
			break;
		case 113:
			switch (iParam1)
			{
				case 0:
					return 709.7698f, 604.7242f, 127.9112f;
				case 1:
					return 697.4459f, 601.9264f, 127.9112f;
				case 2:
					return 701.5485f, 600.1556f, 127.9112f;
				case 3:
					return 697.3605f, 612.7161f, 127.9112f;
				case 4:
					return 706.6976f, 599.9281f, 127.9112f;
				case 5:
					return 693.1447f, 603.339f, 127.9112f;
				case 6:
					return 701.2253f, 611.4911f, 127.9112f;
				default:
			}
			break;
		case 114:
			switch (iParam1)
			{
				case 0:
					return 2664.4246f, 1716.635f, 23.4882f;
				case 1:
					return 2672.219f, 1699.4161f, 23.4882f;
				case 2:
					return 2672.5408f, 1708.6907f, 23.4882f;
				case 3:
					return 2661.954f, 1701.2286f, 23.4882f;
				case 4:
					return 2661.3533f, 1711.1208f, 23.4882f;
				case 5:
					return 2672.2634f, 1704.5321f, 23.4882f;
				case 6:
					return 2661.5522f, 1705.764f, 23.4883f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_299(int iParam0, int iParam1)//Position - 0x5947
{
	switch (iParam0)
	{
		case 109:
			switch (iParam1)
			{
				case 0:
					return -1514.4651f, 1710.3467f, 94.0213f;
				case 1:
					return -1515.442f, 1712.8978f, 93.7086f;
				default:
			}
			break;
		case 110:
			switch (iParam1)
			{
				case 0:
					return 665.7558f, 1733.6609f, 187.5157f;
				case 1:
					return 654.3006f, 1744.2687f, 189.3546f;
				default:
			}
			break;
		case 111:
			switch (iParam1)
			{
				case 0:
					return 386.0512f, 4397.2065f, 61.445f;
				case 1:
					return 378.5578f, 4411.2725f, 61.4051f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_300(int iParam0, int iParam1)//Position - 0x5A19
{
	switch (iParam0)
	{
		case 103:
			switch (iParam1)
			{
				case 0:
					return -1136.0717f, -1182.7775f, 1.2826f;
				case 1:
					return -1148.773f, -1155.9648f, 1.7916f;
				default:
			}
			break;
		case 104:
			switch (iParam1)
			{
				case 0:
					return 965.515f, -200.6211f, 72.2084f;
				case 1:
					return 974.691f, -187.968f, 71.57f;
				default:
			}
			break;
		case 105:
			switch (iParam1)
			{
				case 0:
					return 540.905f, 2653.172f, 41.238f;
				case 1:
					return 565.684f, 2661.919f, 41.087f;
				default:
			}
			break;
	}
	return 0f, 0f, 0f;
}

int func_301(int iParam0)//Position - 0x8175
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (Global_1892703[iParam0 /*599*/].f_10.f_187[iVar0] != 0)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

int func_302(int iParam0)//Position - 0x848F
{
	switch (iParam0)
	{
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
			return 1;
		default:
	}
	return 0;
}

struct<6> func_303(int iParam0)//Position - 0x9095
{
	return Global_1892703[iParam0 /*599*/].f_10.f_187;
}

int func_304(int iParam0)//Position - 0x2E27D
{
	switch (iParam0)
	{
		case 22:
			return joaat("police3");
		case 23:
			return joaat("police3");
		case 24:
			return joaat("police3");
		case 25:
			return joaat("hexer");
		case 26:
			return joaat("frogger");
		case 29:
			return joaat("mule");
		case 30:
			return joaat("benson");
		case 27:
			return joaat("valkyrie");
		case 34:
			return joaat("marquis");
		case 6:
			return joaat("sheriff2");
		case 3:
			return joaat("policeb");
		case 10:
			return joaat("buccaneer2");
		case 11:
			return joaat("police3");
		case 14:
			return joaat("sultanrs");
		case 4:
			return joaat("sadler");
		case 15:
			return joaat("sadler");
		default:
	}
	return joaat("huntley");
}

Vector3 func_305(int iParam0, int iParam1, bool bParam2)//Position - 0x3CDC9
{
	switch (iParam1)
	{
		case 65:
			switch (iParam0)
			{
				case 0:
					return -1937.753f, 551.177f, 113.828f;
				case 1:
					return -1947.278f, 535.341f, 113.822f;
				case 2:
					return -1940.821f, 541.269f, 118.451f;
				case 3:
					return -1942.039f, 557.905f, 113.828f;
				case 4:
					return -1941.307f, 557.041f, 113.828f;
				case 5:
					return -1942.057f, 569.721f, 115.601f;
				default:
			}
			break;
		case 66:
			switch (iParam0)
			{
				case 0:
					return -1941.134f, 404.374f, 95.507f;
				case 1:
					return -1931.321f, 398.51f, 95.507f;
				case 2:
					return -1929.48f, 409.056f, 95.507f;
				case 3:
					return -1928.726f, 410.175f, 95.507f;
				case 4:
					return -1910.113f, 408.732f, 95.296f;
				case 5:
					return -1923.162f, 385.092f, 95.508f;
				default:
			}
			break;
		case 67:
			switch (iParam0)
			{
				case 0:
					return -925.648f, 25.985f, 47.01f;
				case 1:
					return -917.608f, 14.746f, 46.719f;
				case 2:
					return -925.342f, 14.412f, 46.714f;
				case 3:
					return -926.01f, 13.269f, 46.719f;
				case 4:
					return -922.111f, 10.618f, 46.719f;
				case 5:
					return -927.49f, 19.514f, 46.815f;
				default:
			}
			break;
		case 68:
			switch (iParam0)
			{
				case 0:
					return -905.8419f, 168.4072f, 68.4464f;
				case 1:
					return -902.696f, 191.0429f, 68.446f;
				case 2:
					return -910.0559f, 194.771f, 68.4516f;
				case 3:
					return -910.5085f, 194.1056f, 68.4492f;
				case 4:
					return -915.1824f, 183.4144f, 68.337f;
				case 5:
					return -913.1318f, 178.6038f, 68.4454f;
				default:
			}
			break;
		case 69:
			switch (iParam0)
			{
				case 0:
					return 163.0051f, 480.4974f, 141.2676f;
				case 1:
					return 169.1441f, 479.9424f, 140.9772f;
				case 2:
					return 170.0896f, 480.7967f, 141.0864f;
				case 3:
					return 174.2643f, 466.4623f, 140.9125f;
				case 4:
					return 173.3651f, 472.6208f, 140.9125f;
				case 5:
					return 172.5974f, 473.1866f, 140.9125f;
				default:
			}
			break;
		case 70:
			switch (iParam0)
			{
				case 0:
					return 1367.2983f, -605.0978f, 73.716f;
				case 1:
					return 1359.65f, -607.9451f, 73.3379f;
				case 2:
					return 1360.589f, -608.9462f, 73.3379f;
				case 3:
					return 1367.7709f, -603.6301f, 73.3388f;
				case 4:
					return 1366.6538f, -602.7924f, 73.3388f;
				case 5:
					return 1358.1904f, -616.1752f, 73.3379f;
				default:
			}
			break;
		case 71:
			switch (iParam0)
			{
				case 0:
					return -50.186f, 346.2866f, 111.3375f;
				case 1:
					return -52.3969f, 355.4828f, 112.0614f;
				case 2:
					return -52.0328f, 354.2775f, 112.0614f;
				case 3:
					return -54.6724f, 349.5933f, 111.4165f;
				case 4:
					return -56.976f, 354.0209f, 111.4439f;
				case 5:
					return -58.1797f, 347.5182f, 111.2426f;
				default:
			}
			break;
		case 72:
			switch (iParam0)
			{
				case 0:
					return -1860.2074f, -345.498f, 48.8427f;
				case 1:
					return -1855.9523f, -348.9401f, 48.8427f;
				case 2:
					return -1865.2953f, -361.8818f, 48.2938f;
				case 3:
					return -1865.5106f, -360.8017f, 48.2958f;
				case 4:
					return -1867.8228f, -345.9092f, 48.2585f;
				case 5:
					return -1851.8743f, -356.2866f, 48.3874f;
				default:
			}
			break;
		case 73:
			switch (iParam0)
			{
				case 0:
					return -3022.7227f, 79.6407f, 10.6081f;
				case 1:
					return -3022.6292f, 80.7372f, 10.6081f;
				case 2:
					return -3009.4268f, 85.0974f, 10.6881f;
				case 3:
					return -3010.6377f, 80.1638f, 10.6732f;
				case 4:
					return -3025.2341f, 90.0366f, 11.3462f;
				case 5:
					return -3011.6956f, 80.6578f, 10.672f;
				default:
			}
			break;
		case 74:
			switch (iParam0)
			{
				case 0:
					return -2997.1216f, 722.0356f, 27.4969f;
				case 1:
					return -2996.5737f, 720.4412f, 27.4969f;
				case 2:
					return -2987.689f, 721.772f, 27.4969f;
				case 3:
					return -2991.6362f, 731.0148f, 27.4969f;
				case 4:
					return -2977.492f, 709.1384f, 27.2086f;
				case 5:
					return -2977.5671f, 735.1654f, 28.3781f;
				default:
			}
			break;
		case 75:
			switch (iParam0)
			{
				case 0:
					return -767.9756f, 668.0202f, 143.8194f;
				case 1:
					return -759.2245f, 658.6893f, 142.0476f;
				case 2:
					return -761.7543f, 671.8568f, 142.4674f;
				case 3:
					return -758.093f, 640.5367f, 144.5014f;
				case 4:
					return -766.9224f, 668.2573f, 143.5983f;
				case 5:
					return -767.5164f, 656.9524f, 144.5017f;
				default:
			}
			break;
		case 76:
			switch (iParam0)
			{
				case 0:
					return -452.1916f, 398.3782f, 103.7791f;
				case 1:
					return -456.3979f, 392.1273f, 107.8636f;
				case 2:
					return -451.6456f, 375.2693f, 107.8737f;
				case 3:
					return -456.7192f, 375.1091f, 103.7792f;
				case 4:
					return -457.8808f, 374.5711f, 103.7792f;
				case 5:
					return -452.1367f, 366.3934f, 103.7797f;
				default:
			}
			break;
		case 77:
			switch (iParam0)
			{
				case 0:
					return 145.969f, -1058.883f, 29.191f;
				case 1:
					return 132.474f, -1051.78f, 28.152f;
				case 2:
					return 130.672f, -1056.355f, 28.192f;
				case 3:
					return 130.736f, -1055.362f, 28.192f;
				case 4:
					return 132.946f, -1052.886f, 28.158f;
				case 5:
					return 138.694f, -1048.543f, 28.152f;
				default:
			}
			break;
		case 78:
			switch (iParam0)
			{
				case 0:
					return 2578.3928f, 313.5237f, 107.6038f;
				case 1:
					return 2571.405f, 304.1512f, 107.6078f;
				case 2:
					return 2574.9912f, 308.5529f, 107.6082f;
				case 3:
					return 2573.9783f, 308.3747f, 107.6083f;
				case 4:
					return 2579.2075f, 313.9954f, 107.5982f;
				case 5:
					return 2573.4233f, 315.4253f, 107.4599f;
				default:
			}
			break;
		case 79:
			switch (iParam0)
			{
				case 0:
					return -935.1989f, -1298.4917f, 4.0217f;
				case 1:
					return -936.5215f, -1299.1008f, 4.0216f;
				case 2:
					return -932.613f, -1301.8048f, 4.0192f;
				case 3:
					return -936.2961f, -1310.5758f, 5.2001f;
				case 4:
					return -931.6871f, -1306.8516f, 4.2007f;
				case 5:
					return -931.5938f, -1301.2942f, 4.0193f;
				default:
			}
			break;
		case 80:
			switch (iParam0)
			{
				case 0:
					return 2395.0496f, 3332.6309f, 46.5624f;
				case 1:
					return 2392.0405f, 3330.1296f, 46.5812f;
				case 2:
					return 2392.3176f, 3342.391f, 46.3341f;
				case 3:
					return 2393.4114f, 3342.0474f, 46.3468f;
				case 4:
					return 2393.5134f, 3320.9802f, 46.8053f;
				case 5:
					return 2394.4563f, 3321.3728f, 46.7164f;
				default:
			}
			break;
		case 81:
			switch (iParam0)
			{
				case 0:
					return 1927.6028f, 591.11f, 177.8691f;
				case 1:
					return 1918.8696f, 585.3329f, 175.3723f;
				case 2:
					return 1919.3514f, 586.2944f, 175.3723f;
				case 3:
					return 1919.7319f, 585.2935f, 175.3723f;
				case 4:
					return 1927.6736f, 588.7889f, 174.581f;
				case 5:
					return 1928.7024f, 588.8447f, 174.6432f;
				default:
			}
			break;
		case 82:
			switch (iParam0)
			{
				case 0:
					return -68.2331f, 1958.4916f, 189.1861f;
				case 1:
					return -67.5748f, 1956.8214f, 189.1696f;
				case 2:
					return -55.1604f, 1951.2144f, 189.1861f;
				case 3:
					return -55.4533f, 1949.794f, 189.1861f;
				case 4:
					return -52.4073f, 1957.2297f, 189.1958f;
				case 5:
					return -53.3596f, 1943.5465f, 189.1861f;
				default:
			}
			break;
		case 83:
			switch (iParam0)
			{
				case 0:
					return 848.0658f, -195.0777f, 71.4405f;
				case 1:
					return 840.7052f, -191.0631f, 71.6683f;
				case 2:
					return 851.2209f, -195.6778f, 71.4783f;
				case 3:
					return 844.9911f, -192.0527f, 71.6333f;
				case 4:
					return 846.0248f, -191.3392f, 71.6795f;
				case 5:
					return 845.1398f, -191.1621f, 71.6726f;
				default:
			}
			break;
		case 84:
			switch (iParam0)
			{
				case 0:
					return 255.4052f, 2582.999f, 44.0523f;
				case 1:
					return 252.4516f, 2596.109f, 43.8833f;
				case 2:
					return 252.9127f, 2596.996f, 43.8075f;
				case 3:
					return 258.4397f, 2585.0662f, 43.9541f;
				case 4:
					return 259.911f, 2585.0923f, 43.9541f;
				case 5:
					return 256.5538f, 2579.478f, 44.2158f;
				default:
			}
			break;
		case 85:
			switch (iParam0)
			{
				case 0:
					return 893.3776f, 3607.7708f, 31.8242f;
				case 1:
					return 894.0109f, 3607.0056f, 31.8242f;
				case 2:
					return 898.5522f, 3606.865f, 31.8242f;
				case 3:
					return 899.1494f, 3610.439f, 31.8231f;
				case 4:
					return 899.8152f, 3611.3281f, 31.8202f;
				case 5:
					return 899.2398f, 3602.449f, 31.8167f;
				default:
			}
			break;
		case 112:
			switch (iParam0)
			{
				case 0:
					return -273.0223f, 319.8844f, 92.2546f;
				case 1:
					return -278.181f, 316.107f, 92.255f;
				case 2:
					return -282.446f, 321.895f, 92.255f;
				case 3:
					return -277.717f, 321.213f, 92.255f;
				case 4:
					return -271.31f, 316.973f, 93.116f;
				case 5:
					return -284.527f, 312.828f, 93.002f;
				case 6:
					return -275.772f, 316.677f, 92.255f;
				case 7:
					return -273.8383f, 320.8651f, 92.2546f;
				case 8:
					return -279.2325f, 316.2921f, 92.2546f;
				case 9:
					return -285.5069f, 313.722f, 92.2546f;
				default:
			}
			break;
		case 113:
			switch (iParam0)
			{
				case 0:
					return 709.11f, 604.569f, 128.72f;
				case 1:
					return 697.2184f, 612.5048f, 129.1056f;
				case 2:
					return 698.79f, 604.449f, 127.911f;
				case 3:
					return 706.6071f, 606.7073f, 127.9112f;
				case 4:
					return 703.8287f, 600.837f, 127.9112f;
				case 5:
					return 695.034f, 606.272f, 127.911f;
				case 6:
					return 697.507f, 609.524f, 127.911f;
				case 7:
					return 703.8964f, 601.8752f, 127.9112f;
				case 8:
					return 695.8278f, 605.2343f, 127.9112f;
				case 9:
					return 708.8119f, 603.1491f, 127.9112f;
				default:
			}
			break;
		case 114:
			switch (iParam0)
			{
				case 0:
					return 2662.155f, 1700.49f, 24.607f;
				case 1:
					return 2669.702f, 1708.377f, 23.488f;
				case 2:
					return 2665.087f, 1715.547f, 24.285f;
				case 3:
					return 2669.029f, 1702.4f, 23.488f;
				case 4:
					return 2662.154f, 1707.615f, 23.488f;
				case 5:
					return 2668.958f, 1701.063f, 23.488f;
				case 6:
					return 2666.891f, 1711.055f, 23.488f;
				case 7:
					return 2673.557f, 1711.971f, 23.488f;
				case 8:
					return 2666.0269f, 1710.0361f, 23.4882f;
				case 9:
					return 2666.5776f, 1715.792f, 23.4882f;
				default:
			}
			break;
		case 86:
			switch (iParam0)
			{
				case 0:
					return 649.336f, 2998.342f, 41.804f;
				case 1:
					return 642.158f, 2995.145f, 41.361f;
				case 2:
					return 636.292f, 2994.764f, 41.268f;
				case 3:
					return 646.082f, 2993.847f, 41.235f;
				case 4:
					return 650.889f, 3001.284f, 42.085f;
				case 5:
					return 635.496f, 2994.866f, 41.279f;
				case 6:
					return 647.772f, 3000.114f, 41.93f;
				case 7:
					return 637.251f, 3000.727f, 41.814f;
				case 8:
					return 650.789f, 2997.169f, 41.747f;
				case 9:
					return 642.81f, 3001.113f, 41.989f;
				case 10:
					return 640.308f, 3004.128f, 42.161f;
				case 11:
					return 642.337f, 3002.467f, 42.087f;
				default:
			}
			break;
		case 87:
			switch (iParam0)
			{
				case 0:
					return -1715.2268f, -1007.8721f, 4.7011f;
				case 1:
					return -1711.8479f, -1005.6998f, 4.9643f;
				case 2:
					return -1711.5662f, -1008.014f, 4.8219f;
				case 3:
					return -1710.6838f, -1006.2499f, 5.0235f;
				case 4:
					return -1712.0555f, -1003.9462f, 5.0386f;
				case 5:
					return -1710.3049f, -1001.8951f, 5.0695f;
				case 6:
					return -1700.6848f, -1003.8896f, 5.6862f;
				case 7:
					return -1704.7749f, -1000.4743f, 5.2683f;
				case 8:
					return -1710.8077f, -1004.6555f, 5.1099f;
				case 9:
					return -1704.025f, -1001.078f, 5.3036f;
				case 10:
					return -1705.883f, -1007.6612f, 4.9986f;
				case 11:
					return -1700.49f, -1005.283f, 5.6771f;
				default:
			}
			break;
		case 88:
			switch (iParam0)
			{
				case 0:
					return 2152.9763f, 2117.2468f, 125.8856f;
				case 1:
					return 2155.396f, 2114.26f, 125.8098f;
				case 2:
					return 2155.212f, 2112.9321f, 125.6696f;
				case 3:
					return 2157.1377f, 2115.2134f, 125.6957f;
				case 4:
					return 2159.64f, 2112.2153f, 125.417f;
				case 5:
					return 2160.632f, 2121.5532f, 124.9161f;
				case 6:
					return 2161.7124f, 2122.1987f, 124.8315f;
				case 7:
					return 2165.2515f, 2118.4382f, 124.5598f;
				case 8:
					return 2155.6025f, 2124.8281f, 125.0547f;
				case 9:
					return 2166.9382f, 2110.2139f, 124.9367f;
				case 10:
					return 2167.9333f, 2110.397f, 124.9073f;
				case 11:
					return 2164.1453f, 2112.987f, 125.02f;
				default:
			}
			break;
		case 103:
			switch (iParam0)
			{
				case 0:
					return -1146.3749f, -1172.9014f, 1.4893f;
				case 1:
					return -1144.069f, -1169.709f, 3.533f;
				case 2:
					return -1140.2251f, -1172.0139f, 1.5784f;
				case 3:
					return -1147.1654f, -1161.5409f, 1.6569f;
				case 4:
					return -1140.9022f, -1183.7977f, 1.385f;
				case 5:
					return -1141.132f, -1167.443f, 1.711f;
				case 6:
					return -1145.2642f, -1173.3601f, 1.4786f;
				case 7:
					return -1139.2373f, -1176.9977f, 1.3917f;
				default:
			}
			break;
		case 104:
			switch (iParam0)
			{
				case 0:
					return 953.6479f, -204.1889f, 74.166f;
				case 1:
					return 956.6158f, -196.902f, 72.2033f;
				case 2:
					return 958.9997f, -204.0573f, 72.0818f;
				case 3:
					return 969.122f, -189.37f, 71.927f;
				case 4:
					return 954.3331f, -206.8696f, 72.1801f;
				case 5:
					return 958.4577f, -208.1497f, 72.1518f;
				case 6:
					return 964.1173f, -200.7398f, 72.2084f;
				case 7:
					return 957.685f, -196.56f, 72.197f;
				default:
			}
			break;
		case 105:
			switch (iParam0)
			{
				case 0:
					return 558.2379f, 2655.9038f, 43.664f;
				case 1:
					return 555.849f, 2662.947f, 41.1946f;
				case 2:
					return 551.1808f, 2655.7087f, 41.2224f;
				case 3:
					return 545.8378f, 2653.0283f, 41.2635f;
				case 4:
					return 561.2404f, 2662.077f, 41.1515f;
				case 5:
					return 557.0541f, 2663.604f, 41.1861f;
				case 6:
					return 551.2675f, 2654.5774f, 41.2248f;
				case 7:
					return 559.0604f, 2653.3938f, 41.1704f;
				default:
			}
			break;
		case 106:
			switch (iParam0)
			{
				case 0:
					return -652.3525f, 852.2115f, 228.349f;
				case 1:
					return -666.2363f, 878.6399f, 224.1475f;
				case 2:
					return -652.7689f, 854.5261f, 224.1475f;
				case 3:
					return -681.291f, 851.5529f, 224.2427f;
				case 4:
					return -637.4902f, 867.1923f, 219.257f;
				case 5:
					return -673.9535f, 887.7119f, 228.349f;
				case 6:
					return -661.5499f, 869.4652f, 228.349f;
				case 7:
					return -668.4638f, 845.9899f, 224.0524f;
				case 8:
					return -666.5537f, 865.3787f, 224.0524f;
				case 9:
					return -667.1071f, 861.8423f, 224.0524f;
				case 10:
					return -668.0854f, 862.51f, 224.0524f;
				case 11:
					return -668.0035f, 865.0509f, 224.0524f;
				case 12:
					return -668.6204f, 864.0488f, 224.0524f;
				case 13:
					return -670.1268f, 862.7797f, 224.0524f;
				default:
			}
			break;
		case 107:
			switch (iParam0)
			{
				case 0:
					return -157.5752f, 878.0969f, 236.7738f;
				case 1:
					return -143.2587f, 885.2622f, 238.0254f;
				case 2:
					return -138.5931f, 856.5801f, 231.2324f;
				case 3:
					return -178.1631f, 897.2595f, 232.4649f;
				case 4:
					return -179.6147f, 896.8501f, 232.4649f;
				case 5:
					return -172.6176f, 864.907f, 231.6994f;
				case 6:
					return -176.5998f, 857.8193f, 231.2334f;
				case 7:
					return -138.7957f, 907.7676f, 234.8072f;
				case 8:
					return -138.4215f, 867.0332f, 231.696f;
				case 9:
					return -135.3767f, 871.2449f, 231.6916f;
				case 10:
					return -134.3853f, 870.9055f, 231.691f;
				case 11:
					return -135.2301f, 870.128f, 231.692f;
				case 12:
					return -138.6867f, 871.3361f, 231.6941f;
				case 13:
					return -136.1752f, 870.6535f, 231.6926f;
				default:
			}
			break;
		case 108:
			switch (iParam0)
			{
				case 0:
					return -1499.5693f, -66.2991f, 53.6118f;
				case 1:
					return -1504.042f, -39.432f, 53.548f;
				case 2:
					return -1475.1829f, -51.7118f, 53.6389f;
				case 3:
					return -1490.7317f, -34.2899f, 55.8493f;
				case 4:
					return -1479.0262f, -68.1041f, 53.6347f;
				case 5:
					return -1487.0321f, -21.5549f, 53.6533f;
				case 6:
					return -1501.6232f, -29.3779f, 53.6389f;
				case 7:
					return -1485.8009f, -77.3903f, 53.615f;
				case 8:
					return -1508.5519f, -74.4106f, 53.6967f;
				case 9:
					return -1508.7714f, -72.8027f, 53.6967f;
				case 10:
					return -1496.9905f, -81.6826f, 53.6967f;
				case 11:
					return -1495.8994f, -81.8681f, 53.6967f;
				case 12:
					return -1496.1489f, -80.6441f, 53.6967f;
				case 13:
					return -1493.7054f, -80.9586f, 53.6967f;
				default:
			}
			break;
		case 109:
			switch (iParam0)
			{
				case 0:
					return -1515.9043f, 1709.6113f, 94.1469f;
				case 1:
					return -1515.1783f, 1699.3124f, 95.5635f;
				case 2:
					return -1516.4375f, 1699.9996f, 95.467f;
				default:
			}
			break;
		case 110:
			switch (iParam0)
			{
				case 0:
					return 657.392f, 1742.371f, 188.9226f;
				case 1:
					return 663.9827f, 1735.2357f, 187.7759f;
				case 2:
					return 663.7692f, 1736.2721f, 187.8712f;
				default:
			}
			break;
		case 111:
			switch (iParam0)
			{
				case 0:
					return 384.4076f, 4400.721f, 61.4022f;
				case 1:
					return 383.7181f, 4407.873f, 61.4224f;
				case 2:
					return 384.0899f, 4406.87f, 61.4048f;
				default:
			}
			break;
		case 115:
			switch (iParam0)
			{
				case 0:
					return -1948.444f, 330.5879f, 91.004f;
				case 1:
					return -1930.0577f, 335.685f, 89.5551f;
				case 2:
					return -1929.403f, 335.973f, 89.7664f;
				case 3:
					return -1919.1111f, 333.1223f, 88.9749f;
				case 4:
					return -1919.0419f, 333.8403f, 89.4121f;
				case 5:
					return -1921.4275f, 336.6141f, 144.3722f;
				default:
			}
			break;
		case 116:
			switch (iParam0)
			{
				case 0:
					return 209.1499f, 3103.3015f, 43.636f;
				case 1:
					return 193.4484f, 3109.709f, 42.3494f;
				case 2:
					return 193.5149f, 3109.1873f, 42.4815f;
				case 3:
					return 180.7627f, 3109.7964f, 42.6833f;
				case 4:
					return 180.7839f, 3109.7512f, 42.6842f;
				case 5:
					return 189.7674f, 3111.568f, 83.5649f;
				default:
			}
			break;
		case 117:
			switch (iParam0)
			{
				case 0:
					return 2590.4714f, 5333.4077f, 46.0219f;
				case 1:
					return 2598.506f, 5315.853f, 45.2228f;
				case 2:
					return 2598.3342f, 5315.689f, 45.217f;
				case 3:
					return 2600.379f, 5303.7705f, 44.874f;
				case 4:
					return 2600.658f, 5302.944f, 45.2206f;
				case 5:
					return 2596.1995f, 5315.0835f, 98.3255f;
				default:
			}
			break;
		case 118:
			switch (iParam0)
			{
				case 0:
					return 1129.4047f, 203.2016f, 83.497f;
				case 1:
					return 1114.5917f, 196.0163f, 83.416f;
				case 2:
					return 1146.5887f, 233.552f, 82.9602f;
				case 3:
					return 1131.1482f, 223.7259f, 82.6778f;
				case 4:
					return 1145.815f, 256.34f, 81.191f;
				case 5:
					return 1145.323f, 255.105f, 81.191f;
				case 6:
					return 1161.202f, 245.634f, 81.191f;
				case 7:
					return 1163.045f, 247.16f, 81.191f;
				case 8:
					return 1142.5405f, 250.8695f, 81.191f;
				case 9:
					return 1158.3647f, 240.6051f, 81.191f;
				case 10:
					return 1156.573f, 276.8043f, 81.0575f;
				case 11:
					return 1169.6179f, 286.4265f, 81.1904f;
				case 12:
					return 1163.513f, 284.054f, 80.991f;
				case 13:
					return 1162.618f, 283.404f, 80.993f;
				default:
			}
			break;
		case 119:
			switch (iParam0)
			{
				case 0:
					return 1377.2712f, 3088.7673f, 41.4123f;
				case 1:
					return 1390.4034f, 3101.6807f, 41.8812f;
				case 2:
					return 1409.8611f, 3096.8057f, 41.6465f;
				case 3:
					return 1418.2019f, 3109.041f, 42.0101f;
				case 4:
					return 1439.5632f, 3129.325f, 40.0567f;
				case 5:
					return 1438.6034f, 3130.1777f, 40.1091f;
				case 6:
					return 1437.8088f, 3099.3909f, 39.5341f;
				case 7:
					return 1439.3616f, 3099.3804f, 39.5341f;
				case 8:
					return 1435.9419f, 3122.1748f, 39.5341f;
				case 9:
					return 1423.3105f, 3118.3477f, 39.5341f;
				case 10:
					return 1434.121f, 3120.602f, 39.5342f;
				case 11:
					return 1431.453f, 3097.452f, 39.5342f;
				case 12:
					return 1443.6392f, 3126.1047f, 39.5341f;
				case 13:
					return 1445.8448f, 3127.4656f, 39.5341f;
				default:
			}
			break;
		case 120:
			switch (iParam0)
			{
				case 0:
					return -1190.2097f, -2302.6123f, 15.4232f;
				case 1:
					return -1189.4902f, -2314.9548f, 15.1438f;
				case 2:
					return -1195.4885f, -2338.8743f, 15.4339f;
				case 3:
					return -1181.721f, -2339.91f, 15.4339f;
				case 4:
					return -1173.2019f, -2307.5757f, 12.9814f;
				case 5:
					return -1172.5616f, -2308.923f, 12.9814f;
				case 6:
					return -1168.2205f, -2290.3833f, 12.9445f;
				case 7:
					return -1175.0223f, -2301.6514f, 12.9446f;
				case 8:
					return -1185.5951f, -2285.3464f, 12.9445f;
				case 9:
					return -1176.019f, -2303.624f, 12.9446f;
				case 10:
					return -1191.3301f, -2295.4846f, 12.9446f;
				case 11:
					return -1184.8862f, -2284.3281f, 12.9446f;
				case 12:
					return -1171.1827f, -2295.2053f, 12.9446f;
				case 13:
					return -1192.1475f, -2297.691f, 12.9446f;
				default:
			}
			break;
		case 121:
			switch (iParam0)
			{
				case 0:
					return 3639.433f, 2561.794f, 7.031f;
				case 1:
					return 3623.955f, 2560.391f, 4.37f;
				case 2:
					return 3625.291f, 2560.628f, 4.37f;
				case 3:
					return 3623.212f, 2583.869f, 7.001f;
				case 4:
					return 3627.112f, 2591.18f, 4.37f;
				case 5:
					return 3635.2f, 2598.042f, 4.37f;
				case 6:
					return 2443.8213f, -372.8282f, 91.9927f;
				case 7:
					return 2456.8228f, -383.4849f, 92.3256f;
				case 8:
					return 2446.5713f, -393.9896f, 91.9927f;
				case 9:
					return 2456.9443f, -384.7035f, 92.3256f;
				default:
			}
			break;
		case 122:
			switch (iParam0)
			{
				case 0:
					return -2307.87f, 5167.681f, 4.37f;
				case 1:
					return -2308.978f, 5169.157f, 4.37f;
				case 2:
					return -2296.067f, 5191.929f, 4.37f;
				case 3:
					return -2298.104f, 5197.071f, 4.37f;
				case 4:
					return -2284.741f, 5188.896f, 7.168f;
				case 5:
					return -2316.0654f, 5179.5664f, 4.3704f;
				case 6:
					return -2272.941f, 3433.512f, 31.141f;
				case 7:
					return -2272.39f, 3434.778f, 31.163f;
				case 8:
					return -2274.525f, 3435.617f, 31.121f;
				case 9:
					return -2283.286f, 3429.337f, 30.852f;
				default:
			}
			break;
		case 123:
			switch (iParam0)
			{
				case 0:
					return -3464.976f, 2615.378f, 4.371f;
				case 1:
					return -3465.908f, 2614.281f, 4.37f;
				case 2:
					return -3435.258f, 2614.985f, 4.37f;
				case 3:
					return -3444.4385f, 2615.9172f, 4.3704f;
				case 4:
					return -3444.2583f, 2617.3022f, 4.3706f;
				case 5:
					return -3464.169f, 2606.2524f, 4.3703f;
				case 6:
					return 3640.027f, 3748.171f, 27.516f;
				case 7:
					return 3639.825f, 3749.372f, 27.516f;
				case 8:
					return 3644.634f, 3753.456f, 27.516f;
				case 9:
					return 3636.038f, 3758.385f, 27.526f;
				default:
			}
			break;
		case 124:
			switch (iParam0)
			{
				case 0:
					return 843.7468f, -569.6199f, 56.7129f;
				case 1:
					return 844.7662f, -569.5567f, 56.7129f;
				case 2:
					return 844.551f, -570.6559f, 56.7205f;
				case 3:
					return 840.2903f, -576.6917f, 56.1228f;
				case 4:
					return 849.1538f, -564.7379f, 56.7129f;
				case 5:
					return 852.2469f, -566.6097f, 56.7129f;
				case 6:
					return 853.2767f, -567.3681f, 56.7278f;
				case 7:
					return 850.9171f, -557.7505f, 56.7129f;
				case 8:
					return 844.3807f, -563.3856f, 56.8389f;
				case 9:
					return -1026.0924f, -1135.1073f, 2.196f;
				default:
			}
			break;
		case 125:
			switch (iParam0)
			{
				case 0:
					return -929.0416f, 809.9677f, 186.8587f;
				case 1:
					return -940.8338f, 803.926f, 183.781f;
				case 2:
					return -941.0332f, 802.8611f, 183.781f;
				case 3:
					return -916.307f, 806.2703f, 183.3381f;
				case 4:
					return -915.8615f, 805.3514f, 183.4227f;
				case 5:
					return -931.3373f, 803.9482f, 183.781f;
				case 6:
					return -944.587f, 798.567f, 180.5586f;
				case 7:
					return -930.9679f, 812.939f, 186.8587f;
				case 8:
					return -920.0079f, 804.9675f, 183.1238f;
				case 9:
					return 403.3865f, -1501.7374f, 29.3046f;
				default:
			}
			break;
		case 126:
			switch (iParam0)
			{
				case 0:
					return -3190.7773f, 1297.712f, 18.0724f;
				case 1:
					return -3183.0183f, 1292.2537f, 13.5283f;
				case 2:
					return -3176.7725f, 1308.8727f, 13.5913f;
				case 3:
					return -3173.6243f, 1298.4901f, 13.5519f;
				case 4:
					return -3176.256f, 1303.451f, 13.5873f;
				case 5:
					return -3181.9182f, 1292.7751f, 13.5497f;
				case 6:
					return -3174.6392f, 1297.3826f, 13.5167f;
				case 7:
					return -3180.7327f, 1288.7812f, 13.1484f;
				case 8:
					return -3174.2898f, 1303.4716f, 13.5879f;
				case 9:
					return -608.6822f, -1000.8253f, 21.9848f;
				default:
			}
			break;
		case 127:
			switch (iParam0)
			{
				case 0:
					return 470.748f, -1105.223f, 42.076f;
				case 1:
					return 469.981f, -1106.353f, 42.076f;
				case 2:
					return 476.6097f, -1104.0577f, 42.0756f;
				case 3:
					return 475.6701f, -1114.3582f, 42.0757f;
				case 4:
					return 480.5066f, -1111.5201f, 42.0757f;
				case 5:
					return 479.4904f, -1110.5442f, 42.0757f;
				default:
			}
			break;
		case 128:
			switch (iParam0)
			{
				case 0:
					return 527.218f, -21.8702f, 90.1718f;
				case 1:
					return 537.5334f, -15.5713f, 90.1733f;
				case 2:
					return 535.7245f, -15.7051f, 90.173f;
				case 3:
					return 527.244f, -23.3675f, 90.1718f;
				case 4:
					return 530.6858f, -26.2264f, 90.1724f;
				case 5:
					return 531.0799f, -35.0518f, 90.1722f;
				default:
			}
			break;
		case 129:
			switch (iParam0)
			{
				case 0:
					return -1126.5211f, -835.8417f, 18.316f;
				case 1:
					return -1129.8866f, -844.9564f, 18.317f;
				case 2:
					return -1127.8405f, -835.6296f, 18.3159f;
				case 3:
					return -1129.8502f, -846.3411f, 18.3171f;
				case 4:
					return -1129.7075f, -839.9291f, 18.3165f;
				case 5:
					return -1124.6447f, -842.7184f, 18.3161f;
				default:
			}
			break;
		case 130:
			switch (iParam0)
			{
				case 0:
					return -1570.8353f, 426.5624f, 107.5416f;
				case 1:
					return -1578.6234f, 428.1209f, 107.1952f;
				case 2:
					return -1581.8245f, 420.5602f, 106.8435f;
				case 3:
					return -1580.8724f, 420.3125f, 106.7728f;
				case 4:
					return -1579.1565f, 412.5116f, 106.4982f;
				case 5:
					return -1572.7946f, 414.0094f, 106.3319f;
				case 6:
					return -1575.7792f, 413.9764f, 106.2674f;
				case 7:
					return -1578.2765f, 413.6248f, 106.5239f;
				case 8:
					return -1571.7692f, 415.2841f, 106.5546f;
				case 9:
					return -1577.1085f, 414.0846f, 106.4759f;
				case 10:
					return -1574.6554f, 414.2418f, 106.2825f;
				case 11:
					return -1570.8925f, 413.1858f, 106.5285f;
				case 12:
					return -1580.2716f, 412.2874f, 106.5173f;
				case 13:
					return -1579.726f, 413.6505f, 106.5118f;
				case 14:
					return -1576.6023f, 415.2334f, 106.4178f;
				case 15:
					return -1575.3254f, 415.4455f, 106.3253f;
				case 16:
					return -1583.8422f, 411.6516f, 106.035f;
				default:
			}
			break;
		case 131:
			switch (iParam0)
			{
				case 0:
					return -2761.3271f, 2739.279f, 1.3103f;
				case 1:
					return -2753.1057f, 2732.4314f, 1.2814f;
				case 2:
					return -2764.0151f, 2726.823f, 1.2677f;
				case 3:
					return -2763.1082f, 2726.3586f, 1.3101f;
				case 4:
					return -2755.719f, 2719.701f, 1.272f;
				case 5:
					return -2757.12f, 2720.708f, 1.271f;
				case 6:
					return -2759.494f, 2721.084f, 1.283f;
				case 7:
					return -2763.68f, 2719.085f, 1.234f;
				case 8:
					return -2763.448f, 2720.102f, 1.273f;
				case 9:
					return -2757.458f, 2721.813f, 1.295f;
				case 10:
					return -2754.094f, 2718.606f, 1.187f;
				case 11:
					return -2758.316f, 2721.178f, 1.275f;
				case 12:
					return -2761.531f, 2720.028f, 1.255f;
				case 13:
					return -2760.61f, 2721.282f, 1.303f;
				case 14:
					return -2762.06f, 2721.104f, 1.309f;
				case 15:
					return -2756.017f, 2721.175f, 1.283f;
				case 16:
					return -2766.6536f, 2719.6777f, 1.2529f;
				default:
			}
			break;
		case 132:
			switch (iParam0)
			{
				case 0:
					return 808.367f, 1235.1537f, 343.4774f;
				case 1:
					return 809.7645f, 1226.0165f, 342.7602f;
				case 2:
					return 798.105f, 1224.8517f, 340.398f;
				case 3:
					return 798.9963f, 1224.3533f, 340.348f;
				case 4:
					return 800.566f, 1215.8699f, 339.3655f;
				case 5:
					return 798.4499f, 1217.2655f, 339.2225f;
				case 6:
					return 798.3521f, 1218.4226f, 339.3551f;
				case 7:
					return 801.1094f, 1214.1862f, 339.324f;
				case 8:
					return 799.4929f, 1217.3119f, 339.4055f;
				case 9:
					return 794.9962f, 1216.3479f, 338.5134f;
				case 10:
					return 800.5606f, 1217.0945f, 339.5327f;
				case 11:
					return 795.7781f, 1218.1464f, 338.8055f;
				case 12:
					return 801.6625f, 1215.4916f, 339.528f;
				case 13:
					return 797.196f, 1217.863f, 339.0759f;
				case 14:
					return 796.83f, 1219.1575f, 339.1925f;
				case 15:
					return 802.0162f, 1217.3898f, 339.8019f;
				case 16:
					return 805.5632f, 1218.6964f, 340.4825f;
				default:
			}
			break;
		case 133:
			switch (iParam0)
			{
				case 0:
					return -1579.848f, 5156.63f, 18.698f;
				case 1:
					return -1580.473f, 5149.196f, 18.851f;
				case 2:
					return -1570.4631f, 5147.3276f, 18.9809f;
				case 3:
					return -1571.21f, 5150.264f, 18.894f;
				case 4:
					return -1582.9f, 5149.682f, 18.781f;
				case 5:
					return -1580.557f, 5144.498f, 19.059f;
				case 6:
					return -1580.487f, 5145.7646f, 18.9271f;
				case 7:
					return -1569.5951f, 5146.312f, 19.0663f;
				case 8:
					return -1569.455f, 5148.33f, 18.845f;
				case 9:
					return -1581.692f, 5149.672f, 18.809f;
				case 10:
					return -1570.087f, 5149.997f, 18.885f;
				default:
			}
			break;
		case 134:
			switch (iParam0)
			{
				case 0:
					return 3264.3713f, 5154.2915f, 18.6431f;
				case 1:
					return 3259.7173f, 5142.7104f, 18.5584f;
				case 2:
					return 3256.3757f, 5140.7427f, 18.5626f;
				case 3:
					return 3253.7559f, 5151.797f, 18.593f;
				case 4:
					return 3252.531f, 5153.392f, 18.6108f;
				case 5:
					return 3247.6157f, 5149.175f, 18.9621f;
				case 6:
					return 3258.7405f, 5140.369f, 18.5697f;
				case 7:
					return 3254.7952f, 5139.7017f, 18.6135f;
				case 8:
					return 3258.6396f, 5141.7837f, 18.5421f;
				case 9:
					return 3251.9573f, 5151.324f, 18.58f;
				case 10:
					return 3249.5676f, 5149.0444f, 18.6121f;
				default:
			}
			break;
		case 135:
			switch (iParam0)
			{
				case 0:
					return 1630.2219f, 3874.0671f, 32.6957f;
				case 1:
					return 1640.0736f, 3878.6194f, 32.9978f;
				case 2:
					return 1645.1693f, 3879.4268f, 33.0693f;
				case 3:
					return 1636.574f, 3867.9668f, 33.2132f;
				case 4:
					return 1637.8336f, 3869.2866f, 33.216f;
				case 5:
					return 1640.7179f, 3867.3726f, 33.3973f;
				case 6:
					return 1646.1235f, 3877.7485f, 33.2124f;
				case 7:
					return 1641.8341f, 3879.3367f, 33.0034f;
				case 8:
					return 1643.5634f, 3878.9148f, 33.0718f;
				case 9:
					return 1638.99f, 3867.8728f, 33.3116f;
				case 10:
					return 1636.0823f, 3869.9177f, 33.1247f;
				default:
			}
			break;
	}
	if (!bParam2)
	{
	}
	return 0f, 0f, 0f;
}

void func_306(int iParam0)//Position - 0x45FFC
{
	struct<3> Var0;
	Var0.f_0 = 936492486;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = NETWORK::GET_CLOUD_TIME_AS_INT();
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iParam0);
	}
}

int func_307(int iParam0)//Position - 0x48319
{
	switch (iParam0)
	{
		case 45:
			return 0;
		case 46:
			return 1;
		case 47:
			return 2;
		default:
	}
	return -1;
}

var func_308()//Position - 0x49708
{
	return Global_1957718;
}

char* func_309(int iParam0)//Position - 0x7CFCB
{
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
			return "VEX_DPO_B_BUYER" /* GXT: Buyer */;
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
			return "VEX_DPO_B_POLIC" /* GXT: Police Station */;
		case 36:
		case 37:
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
			return "VEX_DPO_B_WHOUS" /* GXT: Warehouse */;
		case 46:
		case 47:
		case 48:
			return "VEX_DPO_B_SCRAP" /* GXT: Scrapyard */;
		default:
	}
	return "INVALID";
}

int func_310(bool bParam0)//Position - 0x1CE7FB
{
	if (bParam0)
	{
		return 523;
	}
	return 523;
}

void func_311()//Position - 0x1CF9A3
{
	if (HUD::DOES_BLIP_EXIST(iLocal_216))
	{
		HUD::REMOVE_BLIP(&iLocal_216);
	}
}

void func_312()//Position - 0x1D04AC
{
	if (HUD::DOES_BLIP_EXIST(iLocal_218))
	{
		HUD::REMOVE_BLIP(&iLocal_218);
	}
}

int func_313(int iParam0)//Position - 0x1D068B
{
	switch (iParam0)
	{
		case 6:
			return 1;
		default:
	}
	return 0;
}

void func_314(int iParam0)//Position - 0x1E0B66
{
	if (__LIB_0__::func_864(&(iParam0->f_35)))
	{
		__LIB_0__::func_794(&(iParam0->f_35));
	}
	if (__LIB_0__::func_864(&(iParam0->f_37)))
	{
		__LIB_0__::func_794(&(iParam0->f_37));
	}
	if (__LIB_0__::func_864(&(iParam0->f_39)))
	{
		__LIB_0__::func_794(&(iParam0->f_39));
	}
}

int func_315(var uParam0, bool bParam1)//Position - 0x1E0BEE
{
	if (!__LIB_0__::func_864(&(uParam0->f_39)))
	{
		__LIB_0__::func_795(&(uParam0->f_39), 0, 0);
	}
	else if (__LIB_1__::func_724(&(uParam0->f_39), 0, 0) >= __LIB_0__::func_138(bParam1, 4000, 2000))
	{
		return 1;
	}
	return 0;
}

bool func_316(var uParam0, int iParam1)//Position - 0x1E0C79
{
	return BitTest(uParam0->f_17[iParam1], 0);
}

void func_317()//Position - 0x1E1396
{
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 66 /*INPUT_VEH_GUN_LR*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 67 /*INPUT_VEH_GUN_UD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 91 /*INPUT_VEH_PASSENGER_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 92 /*INPUT_VEH_PASSENGER_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(1);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(4);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
}

int func_318(var uParam0)//Position - 0x1E1413
{
	if (!Global_2825429)
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()))
	{
		if (ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID())) != joaat("polmav"))
		{
			return 0;
		}
	}
	if (!uParam0->f_45)
	{
		GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("helicopterhud", false);
		if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("helicopterhud"))
		{
			uParam0->f_45 = 1;
		}
	}
	return uParam0->f_45;
}

void func_319(int iParam0, int iParam1)//Position - 0x1E14CA
{
	if (!BitTest(iParam0->f_17[iParam1], 1))
	{
		MISC::SET_BIT(&(iParam0->f_17[iParam1]), 1);
	}
}

bool func_320(int iParam0, int iParam1)//Position - 0x1E14ED
{
	return BitTest(iParam0->f_17[iParam1], 1);
}

float func_321()//Position - 0x207023
{
	return Global_262145.f_19709 /* Tunable: 796142052 */;
}

int func_322(int iParam0, int iParam1)//Position - 0x2071EF
{
	if (__LIB_13__::func_493(iParam0))
	{
		switch (__LIB_13__::func_497(iParam1))
		{
			case 1:
				return Global_262145.f_19456 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER3_EASY */;
			case 2:
				return Global_262145.f_19455 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER3_MEDIUM */;
			case 3:
				return Global_262145.f_19454 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER3_HARD */;
			default:
		}
	}
	else if (__LIB_13__::func_496(iParam0))
	{
		switch (__LIB_13__::func_497(iParam1))
		{
			case 1:
				return Global_262145.f_19453 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER2_EASY */;
			case 2:
				return Global_262145.f_19452 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER2_MEDIUM */;
			case 3:
				return Global_262145.f_19451 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER2_HARD */;
			default:
		}
	}
	else
	{
		switch (__LIB_13__::func_497(iParam1))
		{
			case 1:
				return Global_262145.f_19450 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER1_EASY */;
			case 2:
				return Global_262145.f_19449 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER1_MEDIUM */;
			case 3:
				return Global_262145.f_19448 /* Tunable: IMPEXP_SELL_REDUCTION_BUYER1_HARD */;
			}
		default:
	}
	return 1000;
}

float func_323()//Position - 0x2072C3
{
	return Global_262145.f_19447 /* Tunable: IMPEXP_SELL_DAMAGE_PERCENTAGE */;
}

int func_324(int iParam0)//Position - 0x2075CF
{
	switch (__LIB_13__::func_497(iParam0))
	{
		case 3:
			return Global_262145.f_19706 /* Tunable: IMPEXP_STEAL_REDUCTION_CAP_HARD */;
		case 2:
			return Global_262145.f_19707 /* Tunable: IMPEXP_STEAL_REDUCTION_CAP_MEDIUM */;
		case 1:
			return Global_262145.f_19708 /* Tunable: IMPEXP_STEAL_REDUCTION_CAP_EASY */;
		default:
	}
	return Global_262145.f_19708 /* Tunable: IMPEXP_STEAL_REDUCTION_CAP_EASY */;
}

int func_325(int iParam0, int iParam1)//Position - 0x207619
{
	int iVar0;
	switch (__LIB_13__::func_497(iParam0))
	{
		case 1:
			if (iParam1 >= 1)
			{
				iVar0 = (iVar0 + Global_262145.f_19716 /* Tunable: -1010391742 */);
			}
			if (iParam1 >= 2)
			{
				iVar0 = (iVar0 + Global_262145.f_19717 /* Tunable: 204633964 */);
			}
			if (iParam1 >= 3)
			{
				iVar0 = (iVar0 + Global_262145.f_19718 /* Tunable: 846319261 */);
			}
			break;
		case 2:
			if (iParam1 >= 1)
			{
				iVar0 = (iVar0 + Global_262145.f_19713 /* Tunable: 2141591294 */);
			}
			if (iParam1 >= 2)
			{
				iVar0 = (iVar0 + Global_262145.f_19714 /* Tunable: 215477152 */);
			}
			if (iParam1 >= 3)
			{
				iVar0 = (iVar0 + Global_262145.f_19715 /* Tunable: -2075995707 */);
			}
			break;
		case 3:
			if (iParam1 >= 1)
			{
				iVar0 = (iVar0 + Global_262145.f_19710 /* Tunable: -1996333876 */);
			}
			if (iParam1 >= 2)
			{
				iVar0 = (iVar0 + Global_262145.f_19711 /* Tunable: 195700460 */);
			}
			if (iParam1 >= 3)
			{
				iVar0 = (iVar0 + Global_262145.f_19712 /* Tunable: -2001539927 */);
			}
			break;
	}
	return iVar0;
}

int func_326(int iParam0)//Position - 0x2076EB
{
	switch (__LIB_13__::func_497(iParam0))
	{
		case 1:
			return Global_262145.f_19705 /* Tunable: IMPEXP_STEAL_REDUCTION_EASY */;
		case 2:
			return Global_262145.f_19704 /* Tunable: IMPEXP_STEAL_REDUCTION_MEDIUM */;
		case 3:
			return Global_262145.f_19703 /* Tunable: IMPEXP_STEAL_REDUCTION_HARD */;
		default:
	}
	return Global_262145.f_19705 /* Tunable: IMPEXP_STEAL_REDUCTION_EASY */;
}

float func_327()//Position - 0x207735
{
	return Global_262145.f_19702 /* Tunable: IMPEXP_STEAL_DAMAGE_PERCENTAGE */;
}

Vector3 func_328(struct<3> Param0, float fParam1, float fParam2)//Position - 0x47032
{
	struct<3> Var0;
	Var0 = { 0f, 1f, 0f };
	__LIB_0__::func_817(&Var0, 0f, 0f, fParam1);
	Var0.f_0 = (Var0.f_0 * fParam2);
	Var0.f_1 = (Var0.f_1 * fParam2);
	Var0.f_2 = (Var0.f_2 * fParam2);
	Var0 = { Var0 + Param0 };
	return Var0;
}

void func_329(struct<3> Param0, var uParam1, int iParam2)//Position - 0x128D25
{
	__LIB_3__::func_454(Param0, uParam1, iParam2);
}

bool func_330(int iParam0)//Position - 0x1C62F7
{
	return __LIB_4__::func_825(__LIB_5__::func_185(iParam0));
}

int func_331()//Position - 0x209276
{
	return __LIB_1__::func_360(5332, -1, 0);
}

int func_332(int iParam0, int iParam1)//Position - 0x210A55
{
	int iVar0;
	if (__LIB_5__::func_675(iParam0))
	{
		iVar0 = 0;
		while (iVar0 < 40)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == iParam1 || Global_1853348[iParam0 /*834*/].f_267.f_142.f_2[iVar0] == (1000 + iParam1))
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

void func_333(int iParam0, int iParam1, bool bParam2, int iParam3)//Position - 0x1219BA
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	int iVar4;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	if (bParam2 == PLAYER::PLAYER_ID())
	{
		__LIB_5__::func_189(iParam3, 3, !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		__LIB_5__::func_426(iParam3, 3, __LIB_1__::func_123(bParam2));
		bVar1 = (__LIB_1__::func_123(bParam2) && !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		if (bVar1)
		{
			bVar1 = __LIB_12__::func_250(iParam0, PLAYER::PLAYER_ID(), __LIB_6__::func_598()) != false;
		}
		__LIB_5__::func_189(iParam3, 4, bVar1);
		__LIB_5__::func_426(iParam3, 4, bVar1);
	}
	else
	{
		bVar2 = (__LIB_6__::func_310(bParam2) && !Global_262145.f_26912 /* Tunable: VC_PENTHOUSE_DISABLE_PARKING */);
		if (bVar2)
		{
			bVar2 = __LIB_6__::func_41(bParam2) == true;
		}
		__LIB_5__::func_189(iParam3, 3, bVar2);
		__LIB_5__::func_426(iParam3, 3, bVar2);
		__LIB_5__::func_189(iParam3, 4, 0);
		__LIB_5__::func_426(iParam3, 4, 0);
	}
	__LIB_5__::func_189(iParam3, 2, !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */);
	__LIB_5__::func_426(iParam3, 2, !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */);
	__LIB_5__::func_189(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_5__::func_426(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_5__::func_189(iParam3, 6, 0);
	__LIB_5__::func_426(iParam3, 6, 0);
	__LIB_5__::func_189(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
	__LIB_5__::func_426(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
	__LIB_5__::func_189(iParam3, 8, 1);
	__LIB_5__::func_426(iParam3, 8, __LIB_6__::func_646());
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam3->f_5 == 3)
		{
			if (bParam2 == PLAYER::PLAYER_ID())
			{
				if (!__LIB_1__::func_123(PLAYER::PLAYER_ID()))
				{
					__LIB_1__::func_789("CSNAPT_EXT_F1HC" /* GXT: Purchase the Penthouse Garage from www.thediamondcasinoandresort.com. */, 0, 0);
				}
				else
				{
					__LIB_1__::func_789("CSNAPT_EXT_F1_H" /* GXT: Go to your Penthouse Garage. */, 0, 0);
				}
			}
			else
			{
				__LIB_1__::func_789("CSNAPT_EXT_F1HB" /* GXT: Go to the Penthouse Garage. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 0)
		{
			if (iParam1 == 2)
			{
				__LIB_1__::func_789("CSNAPT_EXT_H2" /* GXT: Exit to the Roof Terrace. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("CSNAPT_EXT_H" /* GXT: Exit the Penthouse. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 1)
		{
			__LIB_1__::func_789("CSNAPT_EXT_A_H" /* GXT: All Exit the Penthouse. */, 0, 0);
		}
		else if (iParam3->f_5 == 2)
		{
			__LIB_1__::func_789("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
		}
		else if (iParam3->f_5 == 5)
		{
			__LIB_1__::func_789("CSNAPT_EXT_C_I" /* GXT: Go to the Parking Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 6)
		{
			__LIB_1__::func_789("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
		}
		else if (iParam3->f_5 == 7)
		{
			__LIB_1__::func_789("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
		}
		else if (iParam3->f_5 == 4)
		{
			__LIB_1__::func_789("CAS_APT_EXT_F4" /* GXT: All Exit to the Penthouse Garage */, 0, 0);
		}
		else if (iParam3->f_5 == 8)
		{
			if (__LIB_5__::func_503())
			{
				__LIB_1__::func_789("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
			}
			else if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				__LIB_1__::func_789("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
			}
			else if (__LIB_6__::func_91(PLAYER::PLAYER_ID()))
			{
				__LIB_1__::func_789("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_3__::func_661(0, iParam3) || __LIB_3__::func_661(1, iParam3))
	{
		return;
	}
	else if (__LIB_3__::func_661(2, iParam3))
	{
		__LIB_3__::func_982(123);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
		__LIB_4__::func_143();
	}
	else if (__LIB_3__::func_661(3, iParam3))
	{
		__LIB_3__::func_664(1);
		__LIB_3__::func_768(iParam0, -1);
		__LIB_5__::func_457(4);
		__LIB_3__::func_767(1);
		__LIB_4__::func_143();
	}
	else if (__LIB_3__::func_661(5, iParam3))
	{
		__LIB_3__::func_982(125);
		__LIB_5__::func_457(0);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_4), 30);
	}
	else if (__LIB_3__::func_661(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_3__::func_661(8, iParam3))
	{
		__LIB_3__::func_982(146);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(4, iParam3))
	{
		__LIB_4__::func_143();
		iVar3 = __LIB_12__::func_250(iParam0, PLAYER::PLAYER_ID(), 0);
		iVar4 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_7;
		__LIB_3__::func_660(iVar3, iParam0, iVar4, 1, 0, 1, 4);
		__LIB_3__::func_664(1);
		__LIB_3__::func_768(iParam0, -1);
		__LIB_5__::func_457(4);
		__LIB_3__::func_767(1);
	}
}

int func_334(int* iParam0, bool bParam1, int iParam2, bool bParam3, int iParam4, bool bParam5, bool bParam6, bool bParam7)//Position - 0x1CFDF3
{
	char* sVar0;
	char* sVar1;
	char* sVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	var uVar8;
	int iVar9;
	bool bVar10;
	int iVar11;
	int iVar12;
	int iVar13;
	var uVar14;
	if (bParam7)
	{
		__LIB_1__::func_266(&(iParam0->f_2), 1);
	}
	if (!__LIB_0__::func_702(&(iParam0->f_2)))
	{
		__LIB_1__::func_31(&(iParam0->f_2));
	}
	GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
	GRAPHICS::DRAW_SCALEFORM_MOVIE(*iParam0, 0.5f, 0.5f, 1f, 1f, 255, 255, 255, 100, 0);
	if (iParam4 > 3)
	{
		iParam4 = 3;
	}
	else if (iParam4 < 0)
	{
		iParam4 = 0;
	}
	if (bParam5)
	{
		sVar0 = "3_2_1";
		sVar1 = "GO";
		sVar2 = "HUD_MINI_GAME_SOUNDSET";
	}
	else
	{
		sVar0 = "3_2_1";
		sVar1 = "GO";
		sVar2 = "321_GO_LOW_VOL_SOUNDSET";
	}
	if (bParam7)
	{
		if (__LIB_0__::func_702(&(iParam0->f_2)))
		{
			if (__LIB_0__::func_701(&(iParam0->f_2)))
			{
				fVar3 = iParam0->f_2.f_2;
			}
			else
			{
				fVar3 = (__LIB_0__::func_616(1) - iParam0->f_2.f_1);
				if (fVar3 < 0f)
				{
					fVar3 = 0f;
					__LIB_1__::func_377(&(iParam0->f_2));
					if (__LIB_0__::func_703(iParam0->f_1, 1))
					{
						__LIB_1__::func_330(&(iParam0->f_1), 8);
						HUD::GET_HUD_COLOUR(18, &iVar5, &iVar6, &iVar7, &uVar8);
						GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_MESSAGE");
						__LIB_0__::func_610("CNTDWN_GO" /* GXT: Go! */);
						GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar5);
						GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar6);
						GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar7);
						GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
						GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
						return 1;
					}
					__LIB_1__::func_31(&(iParam0->f_2));
				}
			}
		}
		else
		{
			fVar3 = iParam0->f_2.f_1;
		}
		iVar4 = SYSTEM::FLOOR(fVar3);
	}
	else
	{
		iVar4 = SYSTEM::FLOOR(__LIB_3__::func_108(&(iParam0->f_2)));
	}
	iVar9 = (iVar4 - iParam4);
	bVar10 = false;
	if (!__LIB_0__::func_703(iParam0->f_1, 8))
	{
		if (iVar9 >= -3 && !__LIB_0__::func_703(iParam0->f_1, 1))
		{
			__LIB_1__::func_330(&(iParam0->f_1), 1);
			AUDIO::PLAY_SOUND_FRONTEND(-1, sVar0, sVar2, true);
			__LIB_1__::func_265(iParam0, iVar9);
		}
		else if (iVar9 >= -2 && !__LIB_0__::func_703(iParam0->f_1, 2))
		{
			__LIB_1__::func_330(&(iParam0->f_1), 2);
			AUDIO::PLAY_SOUND_FRONTEND(-1, sVar0, sVar2, true);
			__LIB_1__::func_265(iParam0, iVar9);
		}
		else if (iVar9 >= -1 && !__LIB_0__::func_703(iParam0->f_1, 4))
		{
			__LIB_1__::func_330(&(iParam0->f_1), 4);
			AUDIO::PLAY_SOUND_FRONTEND(-1, sVar0, sVar2, true);
			__LIB_1__::func_265(iParam0, iVar9);
		}
		else if (iVar9 >= -1 && !__LIB_0__::func_703(iParam0->f_1, 16))
		{
			if (MISC::ABSF((__LIB_3__::func_108(&(iParam0->f_2)) - IntToFloat(iParam4))) < 0.65f)
			{
				if (bParam5 || bParam6)
				{
					__LIB_1__::func_330(&(iParam0->f_1), 16);
					AUDIO::PLAY_SOUND_FRONTEND(-1, sVar1, sVar2, true);
				}
			}
		}
		else if (iVar9 >= 0 && !__LIB_0__::func_703(iParam0->f_1, 8))
		{
			if (!bParam5 && !bParam6)
			{
				AUDIO::PLAY_SOUND_FRONTEND(-1, sVar1, sVar2, true);
			}
			__LIB_1__::func_330(&(iParam0->f_1), 8);
			HUD::GET_HUD_COLOUR(18, &iVar11, &iVar12, &iVar13, &uVar14);
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_MESSAGE");
			__LIB_0__::func_610("CNTDWN_GO" /* GXT: Go! */);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar11);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar12);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar13);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			if (!bParam1)
			{
				bVar10 = true;
			}
		}
	}
	else if (iVar9 == 1)
	{
		bVar10 = true;
	}
	if ((iParam2 && __LIB_1__::func_254()) || iVar4 > 5)
	{
		bVar10 = true;
	}
	if (bVar10)
	{
		if (bParam3)
		{
			iParam0->f_1 = 0;
			__LIB_1__::func_377(&(iParam0->f_2));
		}
		return 1;
	}
	return 0;
}

int func_335(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0x1D59B4
{
	var uVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_13__::func_166(iParam0))
	{
		if (bParam3)
		{
			if (__LIB_3__::func_563(&uVar0, iParam0, 0, -1))
			{
				return uVar0;
			}
		}
		else
		{
			iVar1 = __LIB_13__::func_497(iParam0);
			iVar2 = 0;
			iVar3 = 0;
			if (__LIB_13__::func_496(iParam1) && !bParam4)
			{
				iVar3 = __LIB_13__::func_494(__LIB_13__::func_495(iVar1));
				iVar2 = __LIB_27__::func_651(iVar1, bParam4);
			}
			else if (__LIB_13__::func_493(iParam1) || bParam4)
			{
				iVar3 = __LIB_13__::func_492(__LIB_13__::func_495(iVar1));
				iVar2 = __LIB_27__::func_650(iVar1, bParam4);
			}
			else
			{
				iVar3 = Global_262145.f_19460 /* Tunable: IMPEXP_SELL_BUYER1_MOD_COST */;
				iVar2 = __LIB_13__::func_495(iVar1);
			}
			if (bParam2)
			{
				iVar2 = iVar3;
			}
			return iVar2;
		}
	}
	return 0;
}

void func_336(int iParam0, var uParam1, bool bParam2, bool bParam3)//Position - 0x139FB
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (uParam1->f_66 != 0)
		{
		}
		if (!__LIB_6__::func_599(iParam0))
		{
			if (MISC::GET_HASH_KEY(&(uParam1->f_1)) != 0)
			{
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(iParam0, &(uParam1->f_1));
			}
			if (*uParam1 >= 0 && *uParam1 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
			{
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(iParam0, *uParam1);
			}
		}
		if (uParam1->f_66 == joaat("sovereign"))
		{
			uParam1->f_5 = 111;
			uParam1->f_6 = 111;
			uParam1->f_7 = 111;
		}
		else if (uParam1->f_66 == joaat("casco"))
		{
			iVar0 = 1;
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar0 + 1)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar0 + 1));
			}
		}
		else if (uParam1->f_66 == joaat("sandking") || uParam1->f_66 == joaat("sandking2"))
		{
			iVar1 = 1;
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar1 + 1)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar1 + 1));
			}
		}
		else if (uParam1->f_66 == joaat("formula") || uParam1->f_66 == joaat("formula2"))
		{
			iVar2 = 1;
			while (iVar2 <= 9)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar2)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar2));
				}
				iVar2++;
			}
		}
		else if (uParam1->f_66 == joaat("openwheel1"))
		{
			iVar3 = 1;
			while (iVar3 <= 6)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar3)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar3));
				}
				iVar3++;
			}
		}
		else if (uParam1->f_66 == joaat("openwheel2"))
		{
			iVar4 = 1;
			while (iVar4 <= 11)
			{
				if (iVar4 != 9 && iVar4 != 10)
				{
					if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar4)))
					{
					}
					else
					{
						MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar4));
					}
				}
				iVar4++;
			}
		}
		else if (uParam1->f_66 == joaat("dinghy5"))
		{
			if (BitTest(uParam1->f_77, __LIB_0__::func_110(4)))
			{
			}
			else
			{
				MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(4));
			}
		}
		else if (uParam1->f_66 == joaat("coquette4"))
		{
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 10) != 0)
			{
				MISC::SET_BIT(&(uParam1->f_77), 0);
			}
		}
		else if (uParam1->f_66 == joaat("yosemite2"))
		{
			MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(1));
		}
		else if (uParam1->f_66 == joaat("hotknife"))
		{
			iVar5 = 1;
			while (iVar5 <= 2)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar5)))
				{
				}
				else
				{
					MISC::SET_BIT(&(uParam1->f_77), __LIB_0__::func_110(iVar5));
				}
				iVar5++;
			}
		}
		if (uParam1->f_66 == joaat("nightshark"))
		{
			VEHICLE::SET_DONT_PROCESS_VEHICLE_GLASS(iParam0, false);
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 5) != -1)
			{
				VEHICLE::SET_DONT_PROCESS_VEHICLE_GLASS(iParam0, true);
			}
		}
		if (BitTest(uParam1->f_77, 13))
		{
			VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(iParam0, uParam1->f_71, uParam1->f_72, uParam1->f_73);
		}
		else
		{
			VEHICLE::CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(iParam0);
		}
		if (BitTest(uParam1->f_77, 12))
		{
			VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(iParam0, uParam1->f_71, uParam1->f_72, uParam1->f_73);
		}
		else
		{
			VEHICLE::CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(iParam0);
		}
		if (uParam1->f_5 != -1 && uParam1->f_6 != -1)
		{
			if (__LIB_0__::func_524(uParam1->f_5) || __LIB_0__::func_524(uParam1->f_6))
			{
			}
			else
			{
				VEHICLE::SET_VEHICLE_COLOURS(iParam0, uParam1->f_5, uParam1->f_6);
			}
		}
		if (uParam1->f_7 < 0)
		{
			uParam1->f_7 = 0;
		}
		if (uParam1->f_8 < 0)
		{
			uParam1->f_8 = 0;
		}
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(iParam0, uParam1->f_7, uParam1->f_8);
		if (((BitTest(uParam1->f_77, 15) || __LIB_0__::func_318(iParam0)) || (((uParam1->f_62 == 0 && uParam1->f_63 == 0) && uParam1->f_64 == 0) && uParam1->f_9[20] > 0)) && __LIB_0__::func_291())
		{
			uParam1->f_62 = 0;
			uParam1->f_63 = 0;
			uParam1->f_64 = 0;
		}
		else if ((uParam1->f_62 == 0 && uParam1->f_63 == 0) && uParam1->f_64 == 0)
		{
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
		}
		VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(iParam0, uParam1->f_62, uParam1->f_63, uParam1->f_64);
		if (uParam1->f_65 == -1 && !__LIB_0__::func_111(uParam1->f_66))
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, 0);
		}
		else
		{
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, 0);
			VEHICLE::SET_VEHICLE_WINDOW_TINT(iParam0, uParam1->f_65);
		}
		if (BitTest(uParam1->f_77, 9))
		{
			VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(iParam0, false);
			VEHICLE::SET_DRIFT_TYRES(iParam0, false);
		}
		if (bParam2)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, uParam1->f_70);
		}
		VEHICLE::SET_VEHICLE_NEON_COLOUR(iParam0, uParam1->f_74, uParam1->f_75, uParam1->f_76);
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 2, BitTest(uParam1->f_77, 28));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 3, BitTest(uParam1->f_77, 29));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 0, BitTest(uParam1->f_77, 30));
		VEHICLE::SET_VEHICLE_NEON_ENABLED(iParam0, 1, BitTest(uParam1->f_77, 31));
		VEHICLE::SET_VEHICLE_IS_STOLEN(iParam0, BitTest(uParam1->f_77, 10));
		if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(iParam0) > 1 && uParam1->f_67 >= 0)
		{
			VEHICLE::SET_VEHICLE_LIVERY(iParam0, uParam1->f_67);
		}
		if (uParam1->f_69 > -1 && uParam1->f_69 < 255)
		{
			if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iParam0)))
				{
					if (uParam1->f_69 == 6)
					{
						__LIB_0__::func_317(iParam0, uParam1->f_69);
					}
				}
				else
				{
					__LIB_0__::func_317(iParam0, uParam1->f_69);
				}
			}
		}
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(iParam0, false))
		{
			if ((uParam1->f_68 == 0 || uParam1->f_68 == 3) || uParam1->f_68 == 5)
			{
				VEHICLE::RAISE_CONVERTIBLE_ROOF(iParam0, true);
			}
			else
			{
				VEHICLE::LOWER_CONVERTIBLE_ROOF(iParam0, true);
			}
		}
		if (bParam3)
		{
			__LIB_0__::func_372(&iParam0, &(uParam1->f_9), &(uParam1->f_59));
		}
		if (!VEHICLE::IS_THIS_MODEL_A_HELI(uParam1->f_66) && !VEHICLE::IS_THIS_MODEL_A_BOAT(uParam1->f_66))
		{
			iVar6 = 0;
			while (iVar6 <= 11)
			{
				if (BitTest(uParam1->f_77, __LIB_0__::func_110(iVar6 + 1)))
				{
					if (!VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, iVar6 + 1))
					{
						VEHICLE::SET_VEHICLE_EXTRA(iParam0, iVar6 + 1, false);
					}
				}
				else if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, iVar6 + 1))
				{
					VEHICLE::SET_VEHICLE_EXTRA(iParam0, iVar6 + 1, true);
				}
				iVar6++;
			}
		}
		if ((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("sheava") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("omnis")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("le7b"))
		{
			if (VEHICLE::GET_VEHICLE_MOD(iParam0, 0) == -1)
			{
				VEHICLE::SET_VEHICLE_EXTRA(iParam0, 1, false);
			}
		}
		if (((__LIB_3__::func_279() && VEHICLE::IS_THIS_MODEL_A_PLANE(uParam1->f_66)) && VEHICLE::GET_VEHICLE_HAS_LANDING_GEAR(iParam0)) && !VEHICLE::IS_VEHICLE_MODEL(iParam0, joaat("avenger")))
		{
			if (!BitTest(uParam1->f_77, 23))
			{
				if (BitTest(uParam1->f_77, 22))
				{
					VEHICLE::CONTROL_LANDING_GEAR(iParam0, 2);
				}
				else
				{
					VEHICLE::CONTROL_LANDING_GEAR(iParam0, 3);
				}
			}
			else
			{
				VEHICLE::CONTROL_LANDING_GEAR(iParam0, 4);
			}
		}
		if (BitTest(uParam1->f_77, 27))
		{
			DECORATOR::DECOR_SET_BOOL(iParam0, "IgnoredByQuickSave", true);
		}
		else
		{
			DECORATOR::DECOR_SET_BOOL(iParam0, "IgnoredByQuickSave", false);
		}
	}
}

void func_337(int iParam0, int iParam1, bool bParam2, int iParam3)//Position - 0x121547
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	bool bVar3;
	if (BitTest(Global_1946250.f_4, 26))
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	iVar0 = 0;
	bVar1 = (iParam1 == 1 || iParam1 == 2);
	if (bParam2 == PLAYER::PLAYER_ID())
	{
		__LIB_5__::func_189(iParam3, 3, bVar1);
		__LIB_5__::func_426(iParam3, 3, bVar1);
		bVar2 = bVar1;
		if (bVar2)
		{
			bVar2 = __LIB_12__::func_250(iParam0, PLAYER::PLAYER_ID(), __LIB_6__::func_598()) != false;
		}
		__LIB_5__::func_189(iParam3, 4, bVar2);
		__LIB_5__::func_426(iParam3, 4, bVar2);
	}
	else
	{
		bVar3 = (bVar1 && __LIB_6__::func_310(bParam2));
		if (bVar3)
		{
			bVar3 = __LIB_6__::func_41(bParam2) == false;
		}
		__LIB_5__::func_189(iParam3, 3, bVar3);
		__LIB_5__::func_426(iParam3, 3, bVar3);
		__LIB_5__::func_189(iParam3, 4, 0);
		__LIB_5__::func_426(iParam3, 4, 0);
	}
	__LIB_5__::func_189(iParam3, 2, (bVar1 && !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */));
	__LIB_5__::func_426(iParam3, 2, (bVar1 && !Global_262145.f_26911 /* Tunable: VC_PENTHOUSE_DISABLE_CASINO */));
	__LIB_5__::func_189(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	__LIB_5__::func_426(iParam3, 5, !Global_262145.f_26910 /* Tunable: VC_PENTHOUSE_DISABLE_GARAGE */);
	if (iParam1 == 3)
	{
		__LIB_5__::func_189(iParam3, 6, 0);
		__LIB_5__::func_426(iParam3, 6, 0);
		__LIB_5__::func_189(iParam3, 7, 0);
		__LIB_5__::func_426(iParam3, 7, 0);
		__LIB_5__::func_189(iParam3, 8, 0);
		__LIB_5__::func_426(iParam3, 8, 0);
	}
	else
	{
		__LIB_5__::func_189(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_426(iParam3, 6, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_189(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_426(iParam3, 7, !Global_262145.f_26913 /* Tunable: VC_PENTHOUSE_DISABLE_TERRACE */);
		__LIB_5__::func_189(iParam3, 8, 1);
		__LIB_5__::func_426(iParam3, 8, __LIB_6__::func_646());
	}
	if (iParam3->f_3 != 0 && (iParam3->f_5 < iVar0 || iParam3->f_1 != 1))
	{
		return;
	}
	if (iParam3->f_3 != 0)
	{
		if (iParam3->f_5 == 3)
		{
			if (bParam2 == PLAYER::PLAYER_ID())
			{
				__LIB_1__::func_789("CSNAPT_EXT_F0_H" /* GXT: Go to your Penthouse. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("CSNAPT_EXT_F0HB" /* GXT: Go to the Penthouse. */, 0, 0);
			}
		}
		else if (iParam3->f_5 == 0)
		{
			__LIB_1__::func_789("CSNAPT_EXT_H3" /* GXT: Exit the Penthouse Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 1)
		{
			__LIB_1__::func_789("CSNAPT_EXT_AHB" /* GXT: All Exit the Penthouse Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 2)
		{
			__LIB_1__::func_789("CSNAPT_EXT_C_H" /* GXT: Go to the Casino. */, 0, 0);
		}
		else if (iParam3->f_5 == 5)
		{
			__LIB_1__::func_789("CSNAPT_EXT_C_I" /* GXT: Go to the Parking Garage. */, 0, 0);
		}
		else if (iParam3->f_5 == 6)
		{
			__LIB_1__::func_789("CASINO_ENT_F5_H" /* GXT: Exit to the Roof Terrace. */, 0, 0);
		}
		else if (iParam3->f_5 == 7)
		{
			__LIB_1__::func_789("CASINO_ENT_F9_H" /* GXT: Exit to the Roof. */, 0, 0);
		}
		else if (iParam3->f_5 == 4)
		{
			__LIB_1__::func_789("CAS_APT_EXT_F5" /* GXT: All Exit to the Penthouse */, 0, 0);
		}
		else if (iParam3->f_5 == 8)
		{
			if (__LIB_5__::func_503())
			{
				__LIB_1__::func_789("CAS_CLUB_KICK2" /* GXT: You are temporarily banned from entering The Music Locker due to being thrown out. */, 0, 0);
			}
			else if (BitTest(Global_1946250.f_4523.f_1, 7))
			{
				__LIB_1__::func_789("CAS_CLUB_TMP" /* GXT: The Music Locker is currently full. Please come back later. */, 0, 0);
			}
			else if (__LIB_6__::func_91(PLAYER::PLAYER_ID()))
			{
				__LIB_1__::func_789("CASINO_ENT_F10H" /* GXT: Go to The Music Locker. */, 0, 0);
			}
			else
			{
				__LIB_1__::func_789("CASINO_ENT_F10D" /* GXT: You must own the Penthouse to access The Music Locker from here. */, 0, 0);
			}
		}
	}
	else
	{
		Global_1946250.f_4693 = 1;
		return;
	}
	if (__LIB_3__::func_661(0, iParam3) || __LIB_3__::func_661(1, iParam3))
	{
		return;
	}
	else if (__LIB_3__::func_661(2, iParam3))
	{
		__LIB_3__::func_982(123);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(3, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 9);
	}
	else if (__LIB_3__::func_661(5, iParam3))
	{
		__LIB_3__::func_982(125);
		if (iParam1 == 3)
		{
			__LIB_5__::func_457(1);
		}
		else
		{
			__LIB_5__::func_457(0);
		}
		Global_1946250.f_3377 = iParam1;
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(6, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 8);
		MISC::SET_BIT(&(Global_1946250.f_5), 26);
	}
	else if (__LIB_3__::func_661(7, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 14);
	}
	else if (__LIB_3__::func_661(8, iParam3))
	{
		__LIB_3__::func_982(146);
		__LIB_5__::func_457(1);
		__LIB_3__::func_767(1);
	}
	else if (__LIB_3__::func_661(4, iParam3))
	{
		MISC::SET_BIT(&(Global_1946250.f_5), 9);
		MISC::SET_BIT(&(Global_1946250.f_5), 13);
	}
}

int func_338()//Position - 0x1E3F00
{
	int iVar0;
	iVar0 = __LIB_5__::func_185(PLAYER::PLAYER_ID());
	if (__LIB_19__::func_380(PLAYER::PLAYER_ID()))
	{
		if (((((iVar0 == 167 || iVar0 == 168) || iVar0 == 178) || iVar0 == 188) || iVar0 == 294) || iVar0 == 295)
		{
			return 1;
		}
	}
	if (__LIB_2__::func_574(PLAYER::PLAYER_ID()))
	{
		if ((__LIB_3__::func_709(iVar0) || __LIB_3__::func_710(iVar0)) || iVar0 == 293)
		{
			return 1;
		}
	}
	if (__LIB_8__::func_259(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__::func_710(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_4__::func_954(PLAYER::PLAYER_ID()))
	{
		if (__LIB_4__::func_740(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_6__::func_846(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__::func_612(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_4__::func_955(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__::func_77(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_4__::func_947(PLAYER::PLAYER_ID()))
	{
		if (__LIB_4__::func_374(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_2__::func_732(PLAYER::PLAYER_ID(), 0))
	{
		if (__LIB_12__::func_509(iVar0))
		{
			if (__LIB_9__::func_704(PLAYER::PLAYER_ID()))
			{
				return 1;
			}
		}
	}
	if (__LIB_2__::func_748(PLAYER::PLAYER_ID()))
	{
		if (__LIB_4__::func_184(iVar0))
		{
			return 1;
		}
		if (__LIB_11__::func_619(iVar0))
		{
			return 1;
		}
		if (__LIB_3__::func_597())
		{
			return 1;
		}
	}
	if (__LIB_4__::func_969(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__::func_596())
		{
			return 1;
		}
	}
	if (__LIB_7__::func_690(PLAYER::PLAYER_ID()))
	{
		if (__LIB_11__::func_619(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_5__::func_186(PLAYER::PLAYER_ID()))
	{
		if (__LIB_3__::func_691(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_5__::func_203(PLAYER::PLAYER_ID()))
	{
		if (__LIB_19__::func_285(iVar0))
		{
			return 1;
		}
	}
	if (__LIB_5__::func_188(PLAYER::PLAYER_ID()))
	{
		if (__LIB_15__::func_310(iVar0) || __LIB_15__::func_309(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_339()//Position - 0x1E4620
{
	int iVar0;
	if ((((((__LIB_0__::func_193() || HUD::IS_PAUSE_MENU_ACTIVE()) || CAM::IS_SCREEN_FADED_OUT()) || !__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1)) || __LIB_1__::func_515()) || HUD::IS_HELP_MESSAGE_BEING_DISPLAYED()) || __LIB_35__::func_412(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((!BitTest(Global_2815059.f_1801, 24) || !BitTest(Global_2815059.f_1801, 25)) && __LIB_4__::func_862(24))
	{
		if (__LIB_5__::func_185(PLAYER::PLAYER_ID()) == 168 || __LIB_5__::func_185(PLAYER::PLAYER_ID()) == 167)
		{
			if (!__LIB_35__::func_412(PLAYER::PLAYER_ID()))
			{
				if (Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_33 == 167)
				{
					__LIB_4__::func_861(24);
					if (BitTest(Global_2815059.f_1801, 24))
					{
						return 0;
					}
					else
					{
						MISC::SET_BIT(&(Global_2815059.f_1801), 24);
					}
				}
				else
				{
					__LIB_4__::func_861(24);
					if (BitTest(Global_2815059.f_1801, 25))
					{
						return 0;
					}
					else
					{
						MISC::SET_BIT(&(Global_2815059.f_1801), 25);
					}
				}
				__LIB_1__::func_707("SCONTRA_HLP2" /* GXT: WARNING: The tracker has pinged a signal map wide. Your Special Cargo shipment is now visible to all players who can destroy it to earn cash, ammo and RP. */, -1);
				if (__LIB_6__::func_788(1))
				{
					AUDIO::PLAY_SOUND_FRONTEND(-1, "Crates_Blipped", "GTAO_Biker_Modes_Soundset", false);
				}
				else
				{
					AUDIO::PLAY_SOUND_FRONTEND(-1, "Crates_Blipped", "GTAO_Magnate_Boss_Modes_Soundset", false);
				}
				__LIB_24__::func_333(1);
				__LIB_30__::func_416(1, 7000, 1);
				return 0;
			}
		}
	}
	else
	{
		iVar0 = __LIB_1__::func_360(11390, -1, 0);
		if ((!BitTest(iVar0, 20) || !BitTest(iVar0, 21)) || !BitTest(iVar0, 22))
		{
			if (!BitTest(iVar0, 20))
			{
				MISC::SET_BIT(&iVar0, 20);
			}
			else if (!BitTest(iVar0, 21))
			{
				MISC::SET_BIT(&iVar0, 21);
			}
			else
			{
				BitTest(iVar0, 22);
				MISC::SET_BIT(&iVar0, 22);
			}
			__LIB_1__::func_354(11390, iVar0, -1, 1, 0);
			__LIB_0__::func_151("SCONT_GOHP" /* GXT: The Ghost Organization VIP Ability can be used to temporarily hide Special Cargo shipments from other players in session. */, -1);
			return 1;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

void func_340(struct<3> Param0, int iParam1)//Position - 0x24207
{
	int iVar0;
	int iVar1;
	int iVar2[3];
	int iVar3[3];
	if (Global_2667225.f_45.f_319)
	{
		return;
	}
	if (!__LIB_0__::func_850())
	{
		if (iParam1 == 0)
		{
		}
		iVar1 = __LIB_1__::func_478(Param0);
		if (iVar1 > -1)
		{
			__LIB_0__::func_814();
			switch (iVar1)
			{
				case 0:
					__LIB_0__::func_849(-1139.6785f, -2694.1648f, 12.949f, 283.4298f);
					__LIB_0__::func_849(-1137.4546f, -2690.167f, 12.9448f, 283.0835f);
					__LIB_0__::func_849(-1135.02f, -2685.912f, 12.9412f, 283.8219f);
					__LIB_0__::func_849(-1099.8976f, -2688.6108f, 12.9473f, 295.3925f);
					__LIB_0__::func_849(-1110.5096f, -2693.2358f, 12.9595f, 298.84f);
					__LIB_0__::func_849(-1081.8075f, -2690.0146f, 12.7567f, 219.1729f);
					__LIB_0__::func_849(-1075.5862f, -2697.0898f, 12.7567f, 224.8977f);
					__LIB_0__::func_849(-1095.1333f, -2659.9954f, 12.7567f, 190.9326f);
					__LIB_0__::func_849(-1096.5112f, -2649.4827f, 12.6066f, 182.7913f);
					break;
				case 1:
					__LIB_0__::func_849(-1411.7308f, -533.6462f, 30.2703f, 215.116f);
					__LIB_0__::func_849(-1416.4075f, -527.0309f, 30.6453f, 215.2683f);
					__LIB_0__::func_849(-1432.1458f, -580.9922f, 29.5263f, 118.3858f);
					__LIB_0__::func_849(-1438.8004f, -584.4678f, 29.595f, 118.1207f);
					break;
				case 2:
					__LIB_0__::func_849(-780.5905f, 292.8159f, 84.673f, 97.2697f);
					__LIB_0__::func_849(-788.6147f, 291.8073f, 84.72f, 97.7348f);
					__LIB_0__::func_849(-765.572f, 294.4459f, 84.5182f, 93.9327f);
					__LIB_0__::func_849(-756.9962f, 294.8176f, 84.4061f, 93.9545f);
					break;
				case 3:
					__LIB_0__::func_849(-647.9388f, 40.9257f, 38.9494f, 356.4108f);
					__LIB_0__::func_849(-647.239f, 49.2068f, 40.7135f, 355.9723f);
					__LIB_0__::func_849(-620.1517f, 3.6633f, 40.5904f, 98.3813f);
					__LIB_0__::func_849(-610.5603f, 5.1258f, 41.2404f, 98.696f);
					break;
				case 4:
					__LIB_0__::func_849(-943.2437f, -487.8443f, 35.7504f, 208.6441f);
					__LIB_0__::func_849(-949.2938f, -476.3759f, 36.0878f, 208.1432f);
					__LIB_0__::func_849(-955.3208f, -465.3984f, 36.3328f, 206.9198f);
					__LIB_0__::func_849(-959.5925f, -457.0372f, 36.5226f, 207.7534f);
					break;
				case 5:
					__LIB_0__::func_849(-966.1365f, -401.5364f, 36.6824f, 27.6587f);
					__LIB_0__::func_849(-934.9108f, -413.4091f, 36.5161f, 118.0149f);
					__LIB_0__::func_849(-920.2501f, -405.6656f, 36.5869f, 117.2407f);
					__LIB_0__::func_849(-971.7031f, -390.5213f, 36.7118f, 26.8016f);
					break;
				case 6:
					__LIB_0__::func_849(-58.1347f, -573.486f, 36.5789f, 341.8442f);
					__LIB_0__::func_849(-64.227f, -590.2214f, 35.1654f, 338.972f);
					__LIB_0__::func_849(-67.0332f, -599.2827f, 35.1787f, 341.5854f);
					__LIB_0__::func_849(-71.8651f, -612.8891f, 35.1574f, 339.8537f);
					break;
				case 7:
					__LIB_0__::func_849(-232.1917f, -978.1431f, 28.166f, 160.2115f);
					__LIB_0__::func_849(-229.6225f, -970.9731f, 28.1636f, 160.2397f);
					__LIB_0__::func_849(-251.993f, -998.3963f, 28.3747f, 249.3297f);
					__LIB_0__::func_849(-262.222f, -994.5226f, 29.23f, 249.4673f);
					break;
				case 8:
					__LIB_0__::func_849(151.624f, -1309.343f, 28.2023f, 243.201f);
					__LIB_0__::func_849(152.7886f, -1305.608f, 28.2023f, 243.9973f);
					__LIB_0__::func_849(145.8017f, -1287.1896f, 28.312f, 120.6275f);
					__LIB_0__::func_849(142.8935f, -1282.2864f, 28.3156f, 120.3024f);
					break;
				case 9:
					__LIB_0__::func_849(-2333.5747f, 272.6518f, 168.4671f, 23.0287f);
					__LIB_0__::func_849(-2322.187f, 277.638f, 168.4671f, 23.4249f);
					__LIB_0__::func_849(-2316.2224f, 279.9105f, 168.4671f, 23.0175f);
					__LIB_0__::func_849(-2314.3955f, 290.9f, 168.4671f, 114.3983f);
					__LIB_0__::func_849(-2316.8096f, 296.424f, 168.4671f, 113.6228f);
					__LIB_0__::func_849(-2318.572f, 299.2423f, 168.4671f, 293.83f);
					__LIB_0__::func_849(-2327.902f, 291.6653f, 168.4671f, 294.1158f);
					__LIB_0__::func_849(-2330.711f, 274.0757f, 168.4671f, 205.2184f);
					__LIB_0__::func_849(-2345.0815f, 277.3852f, 168.4671f, 113.4219f);
					__LIB_0__::func_849(-2347.7766f, 282.6038f, 168.4671f, 292.7772f);
					__LIB_0__::func_849(-2339.33f, 293.4399f, 168.4671f, 114.2739f);
					__LIB_0__::func_849(-2352.6807f, 294.4205f, 168.4671f, 115.5597f);
					break;
				case 10:
					__LIB_1__::func_532(78);
					break;
				case 11:
					__LIB_1__::func_532(79);
					break;
				case 12:
					__LIB_1__::func_532(82);
					break;
				case 13:
					__LIB_1__::func_532(81);
					break;
				case 14:
					__LIB_1__::func_532(73);
					break;
				case 15:
					__LIB_0__::func_849(382.9244f, 443.8122f, 142.9934f, 78.3408f);
					__LIB_0__::func_849(391.2023f, 442.4812f, 142.5089f, 82.2125f);
					__LIB_0__::func_849(400.1477f, 441.0816f, 142.0776f, 83.4259f);
					__LIB_0__::func_849(414.2964f, 439.2628f, 141.5056f, 80.8689f);
					break;
				case 16:
					__LIB_1__::func_532(75);
					break;
				case 17:
					__LIB_1__::func_532(76);
					break;
				case 18:
					__LIB_1__::func_532(77);
					break;
				case 19:
					__LIB_0__::func_849(-921.9734f, 704.0754f, 150.8142f, 96.5139f);
					__LIB_0__::func_849(-904.7881f, 708.9782f, 149.8261f, 108.2109f);
					__LIB_0__::func_849(-931.6637f, 703.693f, 151.369f, 87.7447f);
					__LIB_0__::func_849(-943.8763f, 704.2332f, 152.0993f, 87.6764f);
					break;
				case 20:
					__LIB_1__::func_532(80);
					break;
				case 21:
				case 25:
					__LIB_1__::func_532(87);
					break;
				case 22:
				case 26:
					__LIB_1__::func_532(88);
					break;
				case 23:
				case 27:
					__LIB_1__::func_532(89);
					break;
				case 24:
				case 28:
					__LIB_1__::func_532(90);
					break;
				case 29:
				case 30:
					if (__LIB_0__::func_847(iParam1))
					{
						__LIB_1__::func_532(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_32);
					}
					break;
				case 31:
					__LIB_0__::func_849(-352.53f, -1836.742f, 21.924f, 274.8f);
					__LIB_0__::func_849(-336.412f, -1837.341f, 22.497f, 264.6f);
					__LIB_0__::func_849(-320.707f, -1840.342f, 23.195f, 257.4f);
					__LIB_0__::func_849(-304.646f, -1843.295f, 24.219f, 261.599f);
					__LIB_0__::func_849(-288.991f, -1844.123f, 25.228f, 269.599f);
					__LIB_0__::func_849(-273.031f, -1842.69f, 26.27f, 278.199f);
					__LIB_0__::func_849(-361.271f, -1814.526f, 21.63f, 96.399f);
					__LIB_0__::func_849(-343.939f, -1813.331f, 22.368f, 87.999f);
					__LIB_0__::func_849(-326.881f, -1814.914f, 23.106f, 78.799f);
					__LIB_0__::func_849(-310.941f, -1818.223f, 23.957f, 78.799f);
					__LIB_0__::func_849(-294.16f, -1820.207f, 25.092f, 89.199f);
					__LIB_0__::func_849(-277.392f, -1819.237f, 26.283f, 100.199f);
					__LIB_0__::func_849(-257.213f, -1838.977f, 27.318f, 285.799f);
					__LIB_0__::func_849(-261.286f, -1815.615f, 27.439f, 110.399f);
					__LIB_0__::func_849(-246.086f, -1808.691f, 28.576f, 117.398f);
					__LIB_0__::func_849(-231.901f, -1800.767f, 28.619f, 119.398f);
					__LIB_0__::func_849(-199.77f, -1989.34f, 26.62f, 180.997f);
					__LIB_0__::func_849(-201.159f, -1971.41f, 26.62f, 190.798f);
					__LIB_0__::func_849(-205.571f, -1954.537f, 26.62f, 199.998f);
					__LIB_0__::func_849(-197.879f, -1940.822f, 26.62f, 114.998f);
					__LIB_0__::func_849(-141.311f, -1967.41f, 21.805f, 91.997f);
					__LIB_0__::func_849(-141.145f, -1977.861f, 21.813f, 91.997f);
					__LIB_0__::func_849(-140.565f, -1988.289f, 21.815f, 91.997f);
					__LIB_0__::func_849(-145.045f, -2032.168f, 21.956f, 73.597f);
					__LIB_0__::func_849(-147.923f, -2041.781f, 21.956f, 73.597f);
					__LIB_0__::func_849(-185.791f, -1948.005f, 26.62f, 18.596f);
					__LIB_0__::func_849(-181.155f, -1965.422f, 26.62f, 8.196f);
					__LIB_0__::func_849(-179.172f, -1984.332f, 26.62f, 1.396f);
					__LIB_0__::func_849(-225.88f, -1824.637f, 28.897f, 299.596f);
					__LIB_0__::func_849(-211.722f, -1816.401f, 28.859f, 300.796f);
					__LIB_0__::func_849(-217.99f, -1792.624f, 28.649f, 119.196f);
					__LIB_0__::func_849(-203.828f, -1784.264f, 28.678f, 119.996f);
					__LIB_0__::func_849(-194.254f, -2018.756f, 26.62f, 75f);
					__LIB_0__::func_849(-186.956f, -2031.369f, 26.62f, 338f);
					__LIB_0__::func_849(-194.916f, -2047.94f, 26.62f, 329.8f);
					__LIB_0__::func_849(-205.565f, -2064.553f, 26.62f, 320.2f);
					__LIB_0__::func_849(-218.606f, -2077.97f, 26.62f, 311.2f);
					__LIB_0__::func_849(-233.372f, -2089.601f, 26.62f, 304f);
					__LIB_0__::func_849(-207.822f, -2002.11f, 26.62f, 173.799f);
					__LIB_0__::func_849(-207.567f, -2027.579f, 26.62f, 158.599f);
					__LIB_0__::func_849(-215.235f, -2042.272f, 26.62f, 148.999f);
					__LIB_0__::func_849(-227.643f, -2058.498f, 26.62f, 138.799f);
					__LIB_0__::func_849(-242.977f, -2071.452f, 26.62f, 125.798f);
					__LIB_0__::func_849(-256.624f, -2087.982f, 26.62f, 204.198f);
					__LIB_0__::func_849(-249.549f, -2098.767f, 26.62f, 294.198f);
					__LIB_0__::func_849(-228.998f, -2048.889f, 26.62f, 141.198f);
					__LIB_0__::func_849(-176.963f, -2009.239f, 24.519f, 261.597f);
					__LIB_0__::func_849(-195.128f, -1806.447f, 28.814f, 299.997f);
					__LIB_0__::func_849(-180.02f, -1797.414f, 28.797f, 299.997f);
					__LIB_0__::func_849(-165.796f, -1787.672f, 28.788f, 304.597f);
					__LIB_0__::func_849(-188.124f, -1774.765f, 28.711f, 123.197f);
					__LIB_0__::func_849(-417.428f, -1836.374f, 19.238f, 121.797f);
					__LIB_0__::func_849(-430.967f, -1844.844f, 18.468f, 121.797f);
					__LIB_0__::func_849(-444.94f, -1853.739f, 17.786f, 121.797f);
					break;
			}
		}
		else if (__LIB_22__::func_437(Param0, &iVar2, &iVar3) || (__LIB_35__::func_460(Param0, &(iVar2[0])) && (VEHICLE::IS_THIS_MODEL_A_PLANE(iParam1) || VEHICLE::IS_THIS_MODEL_A_HELI(iParam1))))
		{
			__LIB_0__::func_814();
			iVar0 = 0;
			while (iVar0 < iVar2)
			{
				if (iVar2[iVar0] > 1000)
				{
					iVar2[iVar0] = (iVar2[iVar0] - 1000);
					iVar3[iVar0] = 1;
				}
				if (iVar2[iVar0] >= 83 && iVar2[iVar0] <= 87)
				{
					Global_2667225.f_516 = 1;
				}
				if (!iVar3[iVar0] && __LIB_0__::func_845(iVar2[iVar0], -1))
				{
					if (__LIB_0__::func_847(iParam1))
					{
						__LIB_1__::func_532(iVar2[iVar0]);
					}
				}
				else if (iVar3[iVar0])
				{
					if (((__LIB_0__::func_844(PLAYER::PLAYER_PED_ID()) || __LIB_0__::func_843(PLAYER::PLAYER_PED_ID())) && VEHICLE::IS_THIS_MODEL_A_PLANE(iParam1)) || VEHICLE::IS_THIS_MODEL_A_HELI(iParam1))
					{
						if (__LIB_0__::func_842(iParam1))
						{
							__LIB_1__::func_530(iVar2[iVar0]);
						}
						else if (__LIB_0__::func_841(iParam1))
						{
							__LIB_1__::func_529(iVar2[iVar0]);
							__LIB_1__::func_530(iVar2[iVar0]);
						}
						else
						{
							__LIB_1__::func_529(iVar2[iVar0]);
							__LIB_1__::func_530(iVar2[iVar0]);
						}
					}
					else
					{
						__LIB_2__::func_785(iVar2[iVar0], iParam1);
					}
				}
				else
				{
					__LIB_1__::func_532(iVar2[iVar0]);
				}
				iVar0++;
			}
		}
	}
}

char* func_341(var uParam0, var uParam1, var uParam2)//Position - 0x19D0C9
{
	int iVar0;
	bool bVar1;
	if (__LIB_5__::func_434())
	{
		return "SI_ENTR_BLCK4A" /* GXT: You cannot enter the Mobile Operations Center while on call. You can cancel this via the Quick Join app on the phone. */;
	}
	if (__LIB_1__::func_717())
	{
		return "";
	}
	if ((PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !NETWORK::NETWORK_IS_IN_MP_CUTSCENE()) && PLAYER::PLAYER_ID() == __LIB_8__::func_937())
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if ((!__LIB_0__::func_871(iVar0, 1) && !VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("caddy2"))) && !VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("caddy3")))
		{
			if (!__LIB_4__::func_633(PLAYER::PLAYER_ID()) && !__LIB_0__::func_389(PLAYER::PLAYER_ID()))
			{
				if (__LIB_0__::func_872(iVar0, 1))
				{
					return "GR_TRUCK_STOR_P" /* GXT: You do not currently own the Mobile Operations Center Personal Vehicle Storage bay. Purchase one at www.warstock-cache-and-carry.com. */;
				}
				else if (__LIB_7__::func_483(iVar0))
				{
					return "GR_TRUCK_MOD_P" /* GXT: You do not currently own the Mobile Operations Center Weapon & Vehicle Workshop bay. Purchase one at www.warstock-cache-and-carry.com. */;
				}
				else
				{
					return "GR_TRUCK_BUY_A" /* GXT: You do not currently own the Mobile Operations Center Personal Vehicle Storage bay or the Mobile Operations Center Weapon & Vehicle Workshop bay. Purchase one at www.warstock-cache-and-carry.com. */;
				}
			}
		}
	}
	if (BitTest(Global_1946250.f_506, 0))
	{
		if (__LIB_2__::func_72(PLAYER::PLAYER_ID(), 0))
		{
			bVar1 = __LIB_0__::func_797();
			if (__LIB_6__::func_371(PLAYER::PLAYER_ID(), 0))
			{
				return "MP_TRUCK_KICKd" /* GXT: You no longer have access to the Mobile Operations Center as you became a Prospect. */;
			}
			else if (bVar1 != __LIB_0__::func_162() && __LIB_3__::func_673(bVar1))
			{
				return "MP_TRUCK_KICKa" /* GXT: You no longer have access to the Mobile Operations Center as you became an Associate. */;
			}
			else
			{
				return "MP_TRUCK_KICKb" /* GXT: You no longer have access to the Mobile Operations Center as you became a Bodyguard. */;
			}
		}
	}
	if (PLAYER::PLAYER_ID() == __LIB_8__::func_937() || __LIB_0__::func_797() == __LIB_8__::func_937())
	{
		if (__LIB_1__::func_101(PLAYER::PLAYER_PED_ID()))
		{
			return "JUG_BLOCK_MOC" /* GXT: You can't access this Mobile Operations Center whilst wearing the Ballistic Equipment. */;
		}
		if (__LIB_2__::func_906())
		{
			return "BOUNTY_PROP_BLCK" /* GXT: You cannot enter whilst delivering a bounty. */;
		}
	}
	if (__LIB_3__::func_695())
	{
		return "TRUC_MC_BLOCK_P" /* GXT: You cannot enter your Mobile Operations Center with a prostitute. */;
	}
	if (__LIB_3__::func_693())
	{
		return "NPC_BLOCK" /* GXT: You cannot enter with non-player characters in the vehicle. */;
	}
	if (__LIB_1__::func_17(PLAYER::PLAYER_ID()) || __LIB_1__::func_29(PLAYER::PLAYER_ID(), 1, 0))
	{
		return "TRUC_MC_BLOCK_E" /* GXT: You cannot enter your Mobile Operations Center while active in a mission. */;
	}
	if (__LIB_1__::func_613(PLAYER::PLAYER_ID()) == 3)
	{
		return "SUP_BLOCK_MOC" /* GXT: You can't access this Mobile Operations Center whilst carrying Supplies. */;
	}
	if (Global_1835493 != 0)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!__LIB_0__::func_872(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
			{
				return "TRUC_MC_BLOCK_V" /* GXT: You cannot enter your Mobile Operations Center while in a mission vehicle. */;
			}
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (BitTest(Global_1946250.f_1, 3))
		{
			if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1) || PED::GET_SEAT_PED_IS_TRYING_TO_ENTER(PLAYER::PLAYER_PED_ID()) == -1)
			{
				if (PLAYER::PLAYER_ID() != __LIB_8__::func_937())
				{
					MISC::CLEAR_BIT(&(Global_1946250.f_1), 3);
				}
			}
		}
	}
	if (BitTest(Global_1946250.f_1, 3))
	{
		return "GR_TRUCK_SUTAR" /* GXT: You are unable to access the Mobile Operations Center in this area. Move the Mobile Operations Center to a suitable area. */;
	}
	return "";
}

int func_342(struct<3> Param0)//Position - 0x23CC9
{
	var uVar0;
	if (Global_2815059.f_924 && __LIB_35__::func_460(Param0, &uVar0))
	{
		return 1;
	}
	return 0;
}

int func_343(int iParam0, int iParam1, var uParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6, int iParam7)//Position - 0x93D39
{
	int iVar0;
	int iVar1;
	bool bVar2;
	bool bVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Player_Vehicle", 3))
	{
		if (DECORATOR::DECOR_EXIST_ON(iParam0, "Player_Vehicle"))
		{
			if (DECORATOR::DECOR_GET_INT(iParam0, "Player_Vehicle") == NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()))
			{
				iVar1 = 1;
			}
			else
			{
				bVar2 = true;
			}
		}
	}
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("Veh_Modded_By_Player", 3))
	{
		if (DECORATOR::DECOR_EXIST_ON(iParam0, "Veh_Modded_By_Player"))
		{
			if (DECORATOR::DECOR_GET_INT(iParam0, "Veh_Modded_By_Player") != NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()))
			{
				bVar2 = true;
			}
		}
	}
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("MPBitset", 3))
	{
		if (DECORATOR::DECOR_EXIST_ON(iParam0, "MPBitset"))
		{
			iVar5 = DECORATOR::DECOR_GET_INT(iParam0, "MPBitset");
		}
		if (BitTest(iVar5, 19))
		{
			bVar3 = true;
		}
	}
	if (Global_262145.f_19173 /* Tunable: -475525840 */)
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_1__::func_461(iParam0, 1))
					{
						__LIB_5__::func_441("PROP_BLOCK_1" /* GXT: Unable to enter garage. Please enter property on foot. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("PROP_BLOCK_2" /* GXT: Unable to enter garage. Please take this vehicle to mod shop to apply a tracker. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if ((((iParam1 != 1234 && iParam1 != 1235) && iParam1 != 117) && Global_262145.f_21136 /* Tunable: -1119737689 */) && __LIB_5__::func_440(iParam0))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_1__::func_461(iParam0, 1))
					{
						__LIB_5__::func_441("PROP_BLOCK_1" /* GXT: Unable to enter garage. Please enter property on foot. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("PROP_BLOCK_2" /* GXT: Unable to enter garage. Please take this vehicle to mod shop to apply a tracker. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if (iParam1 == 1234)
	{
		if (PLAYER::PLAYER_ID() == __LIB_6__::func_857(iParam7, 1, 0))
		{
			if (bParam5 == 0 && bParam6 == 0)
			{
				if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
				{
					if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
					{
						if (!bParam4)
						{
							__LIB_5__::func_441("PROP_NO_PVMOD", iParam1, 0);
							bParam4 = true;
						}
					}
				}
				return 0;
			}
			else if (bParam6 == 1 && bParam5 == 0)
			{
				if (!__LIB_7__::func_483(iParam0))
				{
					if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
					{
						if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
						{
							if (!bParam4)
							{
								__LIB_5__::func_441("PROP_NO_WORK", iParam1, 0);
								bParam4 = true;
							}
						}
					}
					return 0;
				}
			}
			else if (bParam6 == 0 && bParam5 == 1)
			{
				if (!__LIB_3__::func_713(iParam0))
				{
					if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
					{
						if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
						{
							if (!bParam4)
							{
								__LIB_5__::func_441("MP_PROP_IVD_VEHT" /* GXT: This vehicle cannot be stored in your Vehicle Storage. */, iParam1, 0);
								bParam4 = true;
							}
						}
					}
					return 0;
				}
			}
		}
		else
		{
			bParam4 = false;
		}
	}
	if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(iParam0))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if ((((ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("phantom3") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("hauler2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("sadler2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("trailersmall2")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("sadler"))
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("PROP_BLOCK_TRAIL" /* GXT: Unable to enter garage. Please detach trailer. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if (__LIB_0__::func_845(iParam1, -1))
	{
		if ((VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0) || VEHICLE::IS_THIS_MODEL_A_QUADBIKE(iVar0)) && !__LIB_1__::func_819(iVar0))
		{
		}
		else
		{
			if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
			{
				if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					if (!bParam4)
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH4" /* GXT: This vehicle cannot be stored in your Clubhouse. */, iParam1, 0);
						bParam4 = true;
					}
				}
			}
			return 0;
		}
	}
	if (((iParam1 != 122 && iParam1 != 123) && iParam1 != 124) && __LIB_3__::func_532(iVar0))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_0__::func_845(iParam1, -1))
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH4" /* GXT: This vehicle cannot be stored in your Clubhouse. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if (iVar0 == joaat("rcbandito") || iVar0 == joaat("minitank"))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_0__::func_845(iParam1, -1))
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH4" /* GXT: This vehicle cannot be stored in your Clubhouse. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if ((__LIB_1__::func_589(iParam0) || __LIB_1__::func_590(iVar0)) || ((((((((__LIB_3__::func_712(iVar0, 0) && iParam1 != 117) && iParam1 != 118) && iParam1 != 119) && iParam1 != 120) && iParam1 != 121) && iParam1 != 122) && iParam1 != 123) && iParam1 != 124))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_0__::func_845(iParam1, -1))
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH4" /* GXT: This vehicle cannot be stored in your Clubhouse. */, iParam1, 0);
					}
					else
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if ((((((__LIB_2__::func_782(iParam1, 0, 0) || __LIB_1__::func_597(iParam1)) || iParam1 == 1234) || iParam1 == 1235) || iParam1 == 117) || iParam1 == 127) || iParam1 == 128)
	{
		if (__LIB_1__::func_819(iVar0))
		{
			if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
			{
				if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					if (!bParam4)
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
						bParam4 = true;
					}
				}
			}
			return 0;
		}
	}
	if (__LIB_1__::func_587(iVar0))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
					bParam4 = true;
				}
			}
		}
		return 0;
	}
	if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(iParam0))
	{
		iVar6 = ENTITY::GET_ENTITY_ATTACHED_TO(iParam0);
		if (ENTITY::IS_ENTITY_A_VEHICLE(iVar6))
		{
			iVar7 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar6);
			if (ENTITY::DOES_ENTITY_EXIST(iVar7))
			{
				if (((ENTITY::GET_ENTITY_MODEL(iVar7) == joaat("cargobob") || ENTITY::GET_ENTITY_MODEL(iVar7) == joaat("cargobob2")) || ENTITY::GET_ENTITY_MODEL(iVar7) == joaat("cargobob3")) || ENTITY::GET_ENTITY_MODEL(iVar7) == joaat("cargobob4"))
				{
					if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
					{
						if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
						{
							if (!bParam4)
							{
								__LIB_5__::func_441("MP_PROP_CARBOB" /* GXT: Please detach the vehicle from the Cargobob to proceed. */, 0, 0);
								bParam4 = true;
							}
						}
					}
					return 0;
				}
			}
		}
	}
	if (bParam3)
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			return 1;
		}
	}
	else if (__LIB_2__::func_606() || __LIB_15__::func_667(0, __LIB_5__::func_438(iParam1)))
	{
		if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				if (!bParam4)
				{
					if (__LIB_15__::func_667(1, __LIB_5__::func_438(iParam1)))
					{
						if (iParam1 == 1234)
						{
							__LIB_6__::func_822(0, iParam1, uParam2);
						}
						else if (iParam1 == 1235)
						{
						}
						else if (iParam1 == 117)
						{
							__LIB_6__::func_822(0, iParam1, uParam2);
						}
						else
						{
							__LIB_6__::func_822(1, iParam1, uParam2);
						}
					}
					else
					{
						__LIB_5__::func_441("CUST_GAR_MISO" /* GXT: You can't access your Garage with a mission objective. */, iParam1, 0);
					}
					bParam4 = true;
				}
			}
		}
	}
	else if ((((!__LIB_3__::func_689(iParam0) && !bVar2) && !bVar3) && (__LIB_1__::func_814(ENTITY::GET_ENTITY_MODEL(iParam0)) || (__LIB_0__::func_541(iParam0, 0) && iParam1 == 1234))) && NETWORK::NETWORK_GET_ENTITY_IS_NETWORKED(iParam0))
	{
		iVar4 = __LIB_3__::func_704(iVar0);
		if (!__LIB_0__::func_371(iVar0, 1))
		{
			if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
			{
				if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					if (!bParam4)
					{
						if (iVar4 != -1 && !__LIB_1__::func_822(iVar4))
						{
							__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
						}
						else
						{
							__LIB_5__::func_441("MP_PROP_IVD_4" /* GXT: This vehicle cannot be stored in your Garage unless you purchase the corresponding Downloadable Content. */, iParam1, 0);
							if (iVar4 != -1)
							{
							}
							bParam4 = true;
						}
					}
				}
			}
		}
		else if (iVar4 != -1 && !__LIB_1__::func_822(iVar4))
		{
			if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
			{
				if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					if (!bParam4)
					{
						__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
						bParam4 = true;
					}
				}
			}
		}
		else if ((!__LIB_1__::func_594(iVar0) || (__LIB_1__::func_594(iVar0) && iVar1)) || (__LIB_0__::func_541(iParam0, 0) && iParam1 == 1234))
		{
			return 1;
		}
		else if (__LIB_1__::func_594(iVar0))
		{
			if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
			{
				if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
				{
					if (!bParam4)
					{
						__LIB_5__::func_441(__LIB_6__::func_31(iVar0), iParam1, 0);
						bParam4 = true;
					}
				}
			}
		}
	}
	else if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
	{
		if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
		{
			if (!bParam4)
			{
				if (__LIB_0__::func_845(iParam1, -1) && bVar2)
				{
					__LIB_5__::func_441("MP_PROP_IVD_VEH3" /* GXT: You cannot enter the Clubhouse with another player's Personal Vehicle. */, iParam1, 0);
				}
				else if (iParam1 == 117)
				{
					__LIB_5__::func_441("MP_PROP_IVD_VEH5", iParam1, 0);
				}
				else
				{
					__LIB_5__::func_441("MP_PROP_IVD_VEH" /* GXT: This vehicle cannot be stored in your Garage. */, iParam1, 0);
				}
				bParam4 = true;
			}
		}
	}
	return 0;
}

void func_344(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x138EB5
{
	int iVar0;
	iVar0 = __LIB_12__::func_127();
	if (!__LIB_2__::func_732(PLAYER::PLAYER_ID(), 0))
	{
		if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false)) && __LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
		{
			if (!__LIB_6__::func_58(__LIB_6__::func_856(iVar0, 1, 0)))
			{
				__LIB_34__::func_736(uParam0, iVar0);
			}
		}
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (__LIB_0__::func_1("BB_TRUCK_SUTAR" /* GXT: You are unable to access the Nerve Center in this area. Move the Terrorbyte to a suitable area. */))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || __LIB_3__::func_684(PLAYER::PLAYER_PED_ID(), 1))
			{
				HUD::CLEAR_HELP(true);
			}
		}
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam0->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_122(&(uParam0->f_22.f_94));
			}
		}
	}
}

int func_345(int iParam0, int iParam1, char* sParam2, char* sParam3, char* sParam4, int iParam5, int iParam6, int iParam7)//Position - 0x2058E5
{
	struct<80> Var0;
	Var0.f_3 = -1;
	Var0.f_4 = -1;
	Var0.f_5 = -1;
	Var0.f_6 = -1;
	Var0.f_7 = -1082130432;
	Var0.f_16 = 1;
	Var0.f_71 = 1;
	Var0.f_72 = 2;
	Var0.f_79 = -1;
	__LIB_1__::func_264(iParam0, &Var0, iParam1, sParam2, sParam4);
	StringCopy(&(Var0.f_25), sParam3, 64);
	Var0.f_71 = iParam5;
	Var0.f_6 = iParam6;
	Var0.f_72 = iParam7;
	return __LIB_30__::func_598(&Var0);
}

int func_346(int iParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6, char* sParam7, int iParam8, int iParam9, int iParam10)//Position - 0x7A008
{
	struct<80> Var0;
	Var0.f_3 = -1;
	Var0.f_4 = -1;
	Var0.f_5 = -1;
	Var0.f_6 = -1;
	Var0.f_7 = -1082130432;
	Var0.f_16 = 1;
	Var0.f_71 = 1;
	Var0.f_72 = 2;
	Var0.f_79 = -1;
	__LIB_1__::func_264(iParam0, &Var0, iParam5, sParam2, sParam3);
	StringCopy(&(Var0.f_57), sParam1, 16);
	StringCopy(&(Var0.f_61), sParam7, 16);
	Var0.f_6 = iParam4;
	Var0.f_7 = iParam6;
	Var0.f_71 = iParam8;
	Var0.f_72 = iParam9;
	if (iParam10 != 0)
	{
		__LIB_1__::func_330(&(Var0.f_69), iParam10);
	}
	return __LIB_30__::func_598(&Var0);
}

bool func_347(var uParam0, var uParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6, bool bParam7)//Position - 0x1F6C35
{
	__LIB_0__::func_770(uParam0, uParam1, sParam2, iParam5, iParam6, 0);
	Global_21653 = 1;
	Global_21612 = 1;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_21610 = 0;
	Global_21657 = 0;
	Global_21659 = 0;
	Global_2883585 = 0;
	return __LIB_9__::func_808(sParam3, iParam4, bParam7);
}

void func_348(int iParam0)//Position - 0x3504F
{
	MISC::CLEAR_BIT(&uLocal_169, iParam0);
}

bool func_349(int iParam0)//Position - 0x3506E
{
	return BitTest(uLocal_169, iParam0);
}

void func_350(int iParam0)//Position - 0x38D83
{
	MISC::CLEAR_BIT(&uLocal_168, iParam0);
}

bool func_351(char* sParam0, int iParam1)//Position - 0x3A737
{
	if (!__LIB_1__::func_702())
	{
		return 0;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (!MISC::GET_HASH_KEY(sParam0) == MISC::GET_HASH_KEY(&(Global_1574757.f_12)))
	{
		return 0;
	}
	return iParam1 == Global_1574757.f_52;
}

bool func_352(int iParam0)//Position - 0x46057
{
	return BitTest(uLocal_168, iParam0);
}

int func_353(var uParam0, int iParam1)//Position - 0x48861
{
	if (iParam1 == 0)
	{
		if (!MISC::SHOULD_USE_METRIC_MEASUREMENTS())
		{
			return uParam0->f_10;
		}
	}
	return uParam0->f_11;
}

float func_354(var uParam0)//Position - 0x48B1C
{
	float fVar0;
	float fVar1;
	float fVar2;
	fVar0 = SYSTEM::TO_FLOAT(__LIB_1__::func_724(&(uParam0->f_4), 0, 0));
	fVar1 = SYSTEM::TO_FLOAT(uParam0->f_7);
	fVar2 = (fVar0 / fVar1);
	return fVar2;
}

void func_355(var uParam0)//Position - 0x48B83
{
	if (uParam0->f_15 != -1)
	{
		AUDIO::STOP_SOUND(uParam0->f_15);
		AUDIO::RELEASE_SOUND_ID(uParam0->f_15);
		uParam0->f_15 = -1;
	}
	if (uParam0->f_18 != -1)
	{
		AUDIO::STOP_SOUND(uParam0->f_18);
		AUDIO::RELEASE_SOUND_ID(uParam0->f_18);
		uParam0->f_18 = -1;
	}
	if (uParam0->f_19 != -1)
	{
		AUDIO::STOP_SOUND(uParam0->f_19);
		AUDIO::RELEASE_SOUND_ID(uParam0->f_19);
		uParam0->f_19 = -1;
	}
	if (uParam0->f_20 != -1)
	{
		AUDIO::STOP_SOUND(uParam0->f_20);
		AUDIO::RELEASE_SOUND_ID(uParam0->f_20);
		uParam0->f_20 = -1;
	}
}

void func_356(var uParam0)//Position - 0x48C77
{
	if (!__LIB_22__::func_741(uParam0))
	{
		MISC::SET_BIT(&(uParam0->f_1), 0);
	}
}

bool func_357(var uParam0)//Position - 0x4922D
{
	return NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(*uParam0);
}

bool func_358(var uParam0)//Position - 0x4924A
{
	return BitTest(uParam0->f_1, 2);
}

int func_359()//Position - 0x34AE6
{
	if (((__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1) && !HUD::IS_RADAR_HIDDEN()) && __LIB_15__::func_299()) && __LIB_30__::func_777())
	{
		return 1;
	}
	return 0;
}

char* func_360()//Position - 0x48B47
{
	if (__LIB_5__::func_185(PLAYER::PLAYER_ID()) == 219)
	{
		return "GTAO_DLC_IE_Velocity_Sounds";
	}
	return "GTAO_DLC_IE_Bomb_Defuse_Sounds";
}

void func_361(var uParam0)//Position - 0x48C5C
{
	if (!__LIB_28__::func_665(uParam0))
	{
		MISC::SET_BIT(&(uParam0->f_1), 4);
	}
}

int func_362(int iParam0)//Position - 0x4D724
{
	if (__LIB_1__::func_778(iParam0))
	{
		if (SCRIPT::IS_THREAD_ACTIVE(Global_2824571.f_88))
		{
			return Global_2824571.f_45[iParam0];
		}
	}
	return 0;
}

int func_363()//Position - 0x40EAD
{
	if ((__LIB_0__::func_156(PLAYER::PLAYER_ID(), 1, 1) && !HUD::IS_RADAR_HIDDEN()) && __LIB_15__::func_299())
	{
		return 1;
	}
	return 0;
}

void func_364(int iParam0)//Position - 0x8393
{
	if (BitTest(Global_2815059.f_4657, 0))
	{
		if (((((((((((!HUD::IS_RADAR_HIDDEN() && !BitTest(Global_2815059.f_836, 2)) && __LIB_0__::func_156(PLAYER::PLAYER_ID(), 1, 1)) && !Global_75485) && !Global_60335) && !CAM::IS_SCREEN_FADED_OUT()) && !__LIB_0__::func_165(PLAYER::PLAYER_ID(), 22)) && __LIB_19__::func_495(PLAYER::PLAYER_ID()) != 0) && !__LIB_1__::func_378(__LIB_12__::func_520())) && !__LIB_23__::func_356(PLAYER::PLAYER_ID())) && !__LIB_12__::func_499(__LIB_0__::func_492(PLAYER::PLAYER_ID()))) && !__LIB_4__::func_78(__LIB_0__::func_492(PLAYER::PLAYER_ID())))
		{
			MISC::SET_BIT(&(Global_2815059.f_4657), 1);
			__LIB_1__::func_707(__LIB_30__::func_781(iParam0), -1);
			__LIB_16__::func_612(1);
			MISC::CLEAR_BIT(&(Global_2815059.f_4657), 0);
		}
	}
}

int func_365(int iParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, char* sParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10)//Position - 0x41920
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__::func_162();
	iVar1 = __LIB_0__::func_162();
	iVar2 = __LIB_0__::func_162();
	return __LIB_35__::func_932(iParam0, sParam1, sParam2, sParam3, iParam4, iVar0, iVar1, iVar2, sParam5, iParam6, iParam7, iParam8, iParam9, iParam10, 2);
}

void func_366(int iParam0)//Position - 0x4E6E6
{
	if (iParam0 == iParam0)
	{
	}
	if (Global_1943915 != 0)
	{
		if (BitTest(Global_1943915, 1))
		{
			if (__LIB_1__::func_501())
			{
				if (__LIB_3__::func_589(82, "GB_INTTXT_YA" /* GXT: As requested, your Yacht is about to undergo a full "piracy prevention" safety check. Please stand by for attack. */, 2, 0, 0, 0, 0, 1, 0, 1))
				{
					MISC::CLEAR_BIT(&Global_1943915, 1);
				}
			}
			else if (__LIB_3__::func_589(82, "GB_INTTXT_YA_2" /* GXT: Your VIP has requested a full "piracy prevention" safety check. Please stand by for attack. */, 2, 0, 0, 0, 0, 1, 0, 1))
			{
				MISC::CLEAR_BIT(&Global_1943915, 1);
			}
		}
	}
}

void func_367(char* sParam0)//Position - 0x407
{
	AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(sParam0);
}

char* func_368(int iParam0)//Position - 0x4A4
{
	switch (iParam0)
	{
		case 0:
			return "dlc_ch_arcade_machine_in_use_scene";
		case 1:
			return "dlc_ch_am_dg_in_menus_scene";
		case 2:
			return "dlc_ch_am_dg_in_gameplay_scene";
		default:
	}
	switch (iParam0)
	{
		case 3:
			return "dlc_ch_arcade_machine_in_use_scene";
		case 4:
			return "dlc_ch_am_rc_in_menus_scene";
		case 5:
			return "dlc_ch_am_rc_in_gameplay_scene";
		case 6:
			return "dlc_ch_am_ws_level_up_scene";
		case 7:
			return "dlc_ch_am_ws_in_menus_scene";
		case 8:
			return "dlc_ch_am_ws_in_gameplay_scene";
		default:
	}
	switch (iParam0)
	{
		case 6:
			return "dlc_ch_am_ws_level_up_scene";
		default:
	}
	switch (iParam0)
	{
		case 9:
			return "dlc_sum20_am_qub3d_in_menus_scene";
		case 10:
			return "dlc_sum20_am_qub3d_in_gameplay_scene";
		default:
	}
	return "";
}

bool func_369(var uParam0, var uParam1)//Position - 0x563
{
	return BitTest(*uParam0, uParam1);
}

void func_370(int iParam0)//Position - 0x5BB
{
	if (Local_134.f_19[iParam0] != -1)
	{
		AUDIO::STOP_SOUND(Local_134.f_19[iParam0]);
	}
}

void func_371(char* sParam0)//Position - 0x646
{
	if (AUDIO::IS_AUDIO_SCENE_ACTIVE(sParam0))
	{
		AUDIO::STOP_AUDIO_SCENE(sParam0);
	}
}

bool func_372(int iParam0)//Position - 0x448A
{
	return AUDIO::HAS_SOUND_FINISHED(Local_134.f_19[iParam0]);
}

void func_373(int iParam0, char* sParam1, float fParam2)//Position - 0x44C8
{
	AUDIO::SET_VARIABLE_ON_SOUND(Local_134.f_19[iParam0], sParam1, fParam2);
}

char* func_374(int iParam0)//Position - 0x4519
{
	switch (Local_134.f_0)
	{
		case 2:
			return "DLC_H3_Arc_Mac_Degen_DotF_Sounds";
		case 3:
			return "DLC_H3_Arc_Mac_Degen_MP_Sounds";
		case 4:
			return "DLC_H3_Arc_Mac_Degen_Pen_Sounds";
		case 6:
			return "DLC_H3_ArcMac_BR2_Frontend_Sounds";
		case 7:
			switch (iParam0)
			{
				case 29:
				case 30:
				case 31:
				case 32:
				case 33:
				case 34:
				case 35:
				case 441:
					return "DLC_H3_ArcMac_Wiz_Boss_Amazon_Sounds";
				case 36:
				case 37:
				case 38:
				case 39:
				case 40:
				case 41:
				case 42:
				case 43:
				case 44:
				case 45:
					return "DLC_H3_ArcMac_Wiz_Boss_Dark_Knight_Sounds";
				case 46:
				case 47:
				case 48:
				case 49:
				case 460:
				case 50:
				case 51:
				case 52:
				case 53:
				case 54:
				case 55:
					return "DLC_H3_ArcMac_Wiz_Boss_Spider_Sounds";
				case 56:
				case 57:
				case 58:
				case 59:
				case 60:
				case 61:
				case 62:
				case 63:
				case 64:
					return "DLC_H3_ArcMac_Wiz_Boss_Wizard_Sounds";
				case 65:
				case 66:
				case 67:
				case 68:
				case 69:
					return "DLC_H3_ArcMac_Wiz_Boss_Wizard_Vocals_Sounds";
				case 70:
				case 71:
				case 72:
				case 73:
				case 74:
				case 75:
					return "DLC_H3_ArcMac_Wiz_Enemy_Bat_Sounds";
				case 76:
					return "DLC_H3_ArcMac_Wiz_Enemy_Boulder_Sounds";
				case 77:
				case 78:
				case 79:
				case 80:
				case 81:
				case 82:
					return "DLC_H3_ArcMac_Wiz_Enemy_Fairy_Sounds";
				case 83:
				case 84:
				case 85:
				case 86:
				case 87:
					return "DLC_H3_ArcMac_Wiz_Enemy_Goblin_Crossbow_Sounds";
				case 88:
				case 89:
				case 90:
				case 91:
				case 92:
					return "DLC_H3_ArcMac_Wiz_Enemy_Goblin_Spear_Sounds";
				case 93:
				case 94:
				case 95:
				case 96:
				case 97:
					return "DLC_H3_ArcMac_Wiz_Enemy_Goblin_Sword_Sounds";
				case 98:
				case 99:
				case 100:
				case 101:
				case 102:
				case 103:
				case 104:
					return "DLC_H3_ArcMac_Wiz_Enemy_Leprechaun_Sounds";
				case 105:
				case 106:
				case 107:
				case 108:
				case 109:
					return "DLC_H3_ArcMac_Wiz_Enemy_Ogre_Axe_Sounds";
				case 110:
				case 111:
				case 112:
				case 113:
				case 114:
					return "DLC_H3_ArcMac_Wiz_Enemy_Ogre_Sounds";
				case 115:
				case 116:
				case 117:
				case 118:
				case 119:
					return "DLC_H3_ArcMac_Wiz_Enemy_Skeleton_Caster_Sounds";
				case 120:
				case 121:
				case 122:
				case 123:
				case 124:
					return "DLC_H3_ArcMac_Wiz_Enemy_Skeleton_Spear_Sounds";
				case 125:
				case 126:
				case 127:
				case 128:
				case 129:
					return "DLC_H3_ArcMac_Wiz_Enemy_Skeleton_Sword_Sounds";
				case 130:
				case 131:
				case 132:
				case 133:
					return "DLC_H3_ArcMac_Wiz_Enemy_Slime_Sounds";
				case 134:
				case 135:
					return "DLC_H3_ArcMac_Wiz_Enemy_Snake_Sounds";
				case 136:
				case 137:
				case 138:
				case 139:
				case 140:
					return "DLC_H3_ArcMac_Wiz_Enemy_Spider_Sounds";
				case 141:
				case 142:
				case 143:
				case 144:
				case 145:
					return "DLC_H3_ArcMac_Wiz_Enemy_Unicorn_Sounds";
				case 146:
				case 147:
				case 148:
				case 149:
				case 442:
				case 443:
				case 444:
				case 445:
					return "DLC_H3_ArcMac_Wiz_Environment_Sounds";
				case 150:
				case 440:
				case 151:
				case 152:
				case 153:
				case 154:
				case 155:
				case 156:
				case 157:
				case 158:
				case 159:
				case 160:
				case 161:
					return "DLC_H3_ArcMac_Wiz_Frontend_Sounds";
				case 162:
				case 163:
				case 164:
				case 165:
				case 166:
				case 167:
				case 168:
				case 169:
				case 170:
				case 171:
				case 172:
				case 173:
				case 174:
				case 175:
				case 176:
				case 177:
				case 178:
				case 179:
				case 180:
				case 181:
				case 182:
				case 183:
				case 184:
					return "DLC_H3_ArcMac_Wiz_Player_Level_1_Sounds";
				default:
			}
			switch (iParam0)
			{
				case 200:
				case 201:
				case 202:
				case 203:
				case 204:
				case 205:
				case 206:
				case 207:
				case 208:
				case 209:
				case 210:
				case 211:
				case 212:
				case 213:
				case 214:
				case 215:
				case 216:
				case 217:
				case 218:
				case 219:
				case 220:
				case 221:
				case 222:
					return "DLC_H3_ArcMac_Wiz_Player_Level_2_Sounds";
				case 223:
				case 224:
				case 225:
				case 226:
				case 227:
				case 228:
				case 229:
				case 230:
				case 231:
				case 232:
				case 233:
				case 234:
				case 235:
				case 236:
				case 237:
				case 238:
				case 239:
				case 240:
				case 241:
				case 242:
				case 243:
				case 244:
				case 245:
					return "DLC_H3_ArcMac_Wiz_Player_Level_3_Sounds";
				case 185:
				case 186:
				case 187:
				case 188:
				case 189:
				case 190:
				case 191:
				case 192:
				case 193:
				case 194:
				case 195:
				case 196:
				case 197:
				case 198:
				case 199:
					return "DLC_H3_ArcMac_Wiz_Player_Vocals_Level_1_Sounds";
				case 424:
				case 425:
				case 426:
				case 427:
				case 428:
				case 429:
				case 430:
				case 431:
					return "DLC_H3_ArcMac_Wiz_Player_Vocals_Level_2_Sounds";
				case 432:
				case 433:
				case 434:
				case 435:
				case 436:
				case 437:
				case 438:
				case 439:
					return "DLC_H3_ArcMac_Wiz_Player_Vocals_Level_3_Sounds";
				case 246:
				case 247:
				case 248:
				case 249:
				case 250:
				case 251:
				case 252:
				case 253:
				case 254:
					return "DLC_H3_ArcMac_Wiz_Speech_Bubble_Sounds";
				case 470:
				case 471:
				case 472:
				case 473:
				case 474:
				case 475:
				case 476:
					return "DLC_H3_ArcMac_Wiz_Slideshow";
				case 477:
				case 478:
				case 479:
				case 480:
				case 481:
				case 486:
				case 487:
					return "DLC_H3_ArcMac_Wiz_Frontend_Sounds";
				case 482:
				case 483:
				case 484:
				case 485:
					return "DLC_H3_ArcMac_Wiz_Slideshow_End";
				default:
			}
			break;
		case 8:
		case 9:
		case 10:
			switch (iParam0)
			{
				case 356:
				case 357:
				case 360:
				case 361:
				case 362:
				case 363:
				case 364:
				case 365:
				case 366:
				case 367:
				case 368:
				case 369:
				case 370:
				case 371:
				case 355:
				case 372:
				case 373:
				case 374:
				case 375:
				case 376:
				case 377:
					return "DLC_H3_RaceNChase_Frontend_Sounds";
				case 378:
				case 379:
				case 380:
				case 381:
				case 382:
				case 383:
				case 384:
				case 385:
				case 386:
					return "DLC_H3_RaceNChase_RadioPreview";
				case 387:
				case 388:
				case 389:
				case 390:
				case 391:
				case 392:
				case 393:
					return "DLC_H3_RaceNChase_Collision_Sounds";
				case 394:
				case 395:
				case 396:
				case 397:
				case 398:
				case 399:
				case 400:
					return "DLC_H3_RaceNChase_Car_Sounds";
				case 401:
				case 402:
				case 403:
				case 404:
				case 405:
				case 406:
				case 407:
					return "DLC_H3_RaceNChase_Bike_Sounds";
				case 408:
				case 409:
				case 410:
				case 411:
				case 412:
				case 413:
				case 414:
					return "DLC_H3_RaceNChase_Truck_Sounds";
				case 358:
				case 359:
					return "DLC_H3_RaceNChase_Vehicles_Sounds";
				case 415:
				case 416:
				case 417:
				case 418:
				case 419:
				case 420:
				case 421:
				case 422:
				case 423:
					return "DLC_H3_RaceNChase_Ambience_Sounds";
				default:
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 255:
				case 256:
				case 257:
				case 258:
				case 259:
				case 260:
				case 261:
				case 262:
				case 263:
				case 264:
				case 265:
				case 266:
				case 267:
				case 268:
					return "DLC_H3_SpaceMonkey3_FrontEnd_Sounds";
				case 269:
				case 270:
				case 271:
				case 272:
				case 273:
				case 274:
				case 281:
				case 275:
				case 276:
				case 277:
				case 278:
				case 280:
				case 279:
				case 282:
				case 446:
				case 447:
				case 448:
					return "DLC_H3_SpaceMonkey3_Player_Weapons_Sounds";
				case 283:
				case 284:
				case 285:
				case 286:
					return "DLC_H3_SpaceMonkey3_Enemy_Weapons_Sounds";
				case 287:
				case 291:
				case 288:
				case 289:
				case 290:
				case 292:
				case 293:
				case 294:
				case 295:
				case 296:
				case 297:
				case 298:
				case 449:
					return "DLC_H3_SpaceMonkey3_Damage_Sounds";
				case 299:
				case 300:
				case 301:
				case 302:
				case 303:
				case 304:
				case 305:
				case 306:
				case 307:
				case 308:
				case 309:
				case 310:
				case 311:
				case 312:
				case 313:
				case 314:
				case 315:
				case 316:
				case 450:
					return "DLC_H3_SpaceMonkey3_Pickup_Sounds";
				case 317:
				case 318:
				case 319:
				case 320:
				case 321:
				case 322:
				case 451:
				case 452:
				case 453:
					return "DLC_H3_SpaceMonkey3_Boss_BananaBread_Sounds";
				case 323:
				case 324:
				case 325:
				case 326:
				case 327:
				case 328:
				case 329:
				case 330:
				case 454:
				case 455:
					return "DLC_H3_SpaceMonkey3_Boss_DrDank_Sounds";
				case 331:
				case 332:
				case 333:
				case 334:
				case 335:
				case 336:
				case 337:
				case 338:
				case 339:
				case 340:
				case 341:
				case 456:
					return "DLC_H3_SpaceMonkey3_Boss_Gran_Sounds";
				case 342:
				case 343:
				case 344:
				case 345:
				case 346:
				case 457:
				case 458:
					return "DLC_H3_SpaceMonkey3_Boss_MajorBanana_Sounds";
				case 347:
				case 348:
				case 349:
				case 350:
				case 351:
				case 352:
				case 459:
					return "DLC_H3_SpaceMonkey3_Boss_MistaSmoothie_Sounds";
				case 353:
				case 354:
					return "DLC_H3_SpaceMonkey3_Enemy_Actions_Sounds";
				case 461:
				case 462:
				case 463:
				case 464:
				case 465:
				case 466:
				case 467:
				case 468:
					return "DLC_H3_SpaceMonkey3_Monkey_Vocal_Sounds";
				default:
			}
			break;
		case 11:
			switch (iParam0)
			{
				case 488:
				case 489:
				case 490:
					return "sum20_am_Qub3d_sounds";
				default:
			}
			break;
		case 12:
			switch (iParam0)
			{
				case 491:
				case 492:
				case 493:
					return "DLC_TUNER_AM_CH_Frontend_Sounds";
				default:
			}
			break;
	}
	return "";
}

char* func_375(int iParam0)//Position - 0x5224
{
	switch (iParam0)
	{
		case 0:
			return "BOOT_SCREEN";
		case 1:
			return "BOOT_SCREEN_STAR";
		case 2:
			return "EXPLODE";
		case 3:
			return "ARP1";
		case 4:
			return "BUZZER";
		case 5:
			return "1POINT";
		case 6:
			return "MUSIC_MAIN_LOOP";
		case 469:
			return "MUSIC_MAIN_LOOP_UW";
		case 7:
			return "MUSIC_FAIL";
		case 8:
			return "ATTRACT_LOOP";
		case 9:
			return "ZAP1";
		case 10:
			return "THRUST" /* GXT: Thrust */;
		case 11:
			return "ZAP2";
		case 12:
			return "WARN";
		case 13:
			return "HIGH_SCORE_LETTER_CHANGE";
		case 14:
			return "HIGH_SCORE_LETTER_SET";
		case 15:
			return "HIGH_SCORE_STORE";
		case 16:
			return "KICK_MACHINE";
		case 17:
			return "JUMP";
		case 18:
			return "SWING";
		case 20:
			return "TICKY_FLY_LOOP";
		case 21:
			return "GENERATE";
		case 22:
			return "MUSIC_MENU_LOOP";
		case 23:
			return "MENU_NAV";
		case 24:
			return "MENU_SELECT";
		case 25:
			return "MENU_BACK";
		case 19:
			return "SWING_B";
		case 26:
			return "Score_Letter_Change";
		case 27:
			return "Score_Letter_Select";
		case 28:
			return "Score_Entered";
		default:
	}
	switch (iParam0)
	{
		case 29:
			return "Aggro";
		case 30:
			return "Attack_Thrust";
		case 31:
			return "Attack_Stab";
		case 32:
			return "Attck_Jump";
		case 33:
			return "Death";
		case 34:
			return "Pain";
		case 35:
			return "Bodyfall";
		case 441:
			return "Jump_Land";
		case 36:
			return "Aggro";
		case 37:
			return "Knockback";
		case 38:
			return "Attack_Vocal";
		case 39:
			return "Attack_Slash";
		case 40:
			return "Attack_Slam";
		case 41:
			return "Death";
		case 42:
			return "Pain";
		case 43:
			return "Draw_Sword";
		case 44:
			return "Stand_Up";
		case 45:
			return "Bodyfall";
		case 46:
			return "Aggro";
		case 47:
			return "Attack_Hit";
		case 48:
			return "Attack_Spit";
		case 49:
			return "Death";
		case 460:
			return "Death_Final";
		case 50:
			return "Pain";
		case 51:
			return "Ceiling_Climb_Loop";
		case 52:
			return "Attack_Drop";
		case 53:
			return "Attack_Drop_Land";
		case 54:
			return "Climb_Up";
		case 55:
			return "Climb_Down";
		case 56:
			return "Death_Blasts";
		case 57:
			return "Death_Final";
		case 58:
			return "Magic_Cast_Spell";
		case 59:
			return "Magic_Fire_First";
		case 60:
			return "Magic_Fire_Flames";
		case 61:
			return "Magic_Flame_Pillar";
		case 62:
			return "Magic_Flame_Pillar_Short";
		case 63:
			return "Magic_Teleport_In";
		case 64:
			return "Magic_Teleport_Out";
		case 65:
			return "Dialog";
		case 66:
			return "Game_Over";
		case 67:
			return "Hurt";
		case 68:
			return "Killed";
		case 69:
			return "Pain";
		case 70:
			return "Aggro";
		case 71:
			return "Attack";
		case 72:
			return "Death";
		case 73:
			return "Pain";
		case 74:
			return "Dash";
		case 75:
			return "Bodyfall";
		case 76:
			return "Bouncing";
		case 77:
			return "Aggro";
		case 78:
			return "Attack";
		case 79:
			return "Death";
		case 80:
			return "Pain";
		case 81:
			return "Dash";
		case 82:
			return "Bodyfall";
		case 83:
			return "Aggro";
		case 84:
			return "Attack";
		case 85:
			return "Death";
		case 86:
			return "Pain";
		case 87:
			return "Bodyfall";
		case 88:
			return "Aggro";
		case 89:
			return "Attack";
		case 90:
			return "Death";
		case 91:
			return "Pain";
		case 92:
			return "Bodyfall";
		case 93:
			return "Aggro";
		case 94:
			return "Attack";
		case 95:
			return "Death";
		case 96:
			return "Pain";
		case 97:
			return "Bodyfall";
		case 98:
			return "Aggro";
		case 99:
			return "Attack";
		case 100:
			return "Coin_Attack";
		case 101:
			return "Death";
		case 102:
			return "Jump_Land";
		case 103:
			return "Pain";
		case 104:
			return "Bodyfall";
		case 105:
			return "Aggro";
		case 106:
			return "Attack";
		case 107:
			return "Death";
		case 108:
			return "Pain";
		case 109:
			return "Bodyfall";
		case 110:
			return "Aggro";
		case 111:
			return "Attack";
		case 112:
			return "Death";
		case 113:
			return "Pain";
		case 114:
			return "Bodyfall";
		case 115:
			return "Aggro";
		case 116:
			return "Attack";
		case 117:
			return "Death";
		case 118:
			return "Pain";
		case 119:
			return "Bodyfall";
		case 120:
			return "Aggro";
		case 121:
			return "Attack";
		case 122:
			return "Death";
		case 123:
			return "Pain";
		case 124:
			return "Bodyfall";
		case 125:
			return "Aggro";
		case 126:
			return "Attack";
		case 127:
			return "Death";
		case 128:
			return "Pain";
		case 129:
			return "Bodyfall";
		case 130:
			return "Attack";
		case 131:
			return "Death";
		case 132:
			return "Pain";
		case 133:
			return "Aggro";
		case 134:
			return "Death";
		case 135:
			return "Aggro";
		case 136:
			return "Aggro";
		case 137:
			return "Attack";
		case 138:
			return "Death";
		case 139:
			return "Pain";
		case 140:
			return "Bodyfall";
		case 141:
			return "Aggro";
		case 142:
			return "Attack";
		case 143:
			return "Jump";
		case 144:
			return "Death";
		case 145:
			return "Pain";
		case 146:
			return "Spike_Up";
		case 147:
			return "Spike_Down";
		case 148:
			return "Stalagtite_Crack";
		case 149:
			return "Stalagtite_Land";
		case 150:
			return "Intro_Thunder";
		case 440:
			return "Intro_Thunder_Double";
		case 151:
			return "Pickup_HP";
		case 152:
			return "Pickup_MP";
		case 153:
			return "Pickup_Treasure";
		case 154:
			return "Stage_Continue";
		case 155:
			return "Stage_Start_Sword_Hit";
		case 156:
			return "Stage_Start_Sword_Shing";
		case 157:
			return "Frontend_Select";
		case 158:
			return "Frontend_Nav";
		case 159:
			return "Highscore_Letter_Change";
		case 160:
			return "Highscore_Letter_Lock";
		case 161:
			return "Highscore_Done";
		case 162:
			return "Walk_Loop";
		case 163:
			return "Attack_Boss_Final_Hit";
		case 164:
			return "Attack_Dash_Swipe";
		case 165:
			return "Attack_Dash_Hit";
		case 166:
			return "Attack_Long_Swipe";
		case 167:
			return "Attack_Long_Hit";
		case 168:
			return "Attack_Short_Swipe";
		case 169:
			return "Attack_Short_Hit";
		case 170:
			return "Attack_Kick_Swipe";
		case 171:
			return "Attack_Kick_Hit";
		case 172:
			return "Attack_Jump_Kick_Swipe";
		case 173:
			return "Attack_Jump_Kick_Hit";
		case 174:
			return "Jump_Land";
		case 175:
			return "Body_Fall";
		case 176:
			return "Level_Up_Fullscreen";
		case 177:
			return "Level_Up_IG";
		case 178:
			return "Level_Up_Sword";
		case 179:
			return "Magic_Draw_Sword";
		case 180:
			return "Magic_Nuke_Cast";
		case 181:
			return "Magic_Nuke_Small_Blast";
		case 182:
			return "Weapon_Deflect_Arrow";
		case 183:
			return "Weapon_Deflect_Fireball";
		case 184:
			return "Hit_By_Enemy";
		case 185:
			return "Melee";
		case 186:
			return "Hurt";
		case 187:
			return "Jump";
		case 188:
			return "Knocked_Down";
		case 189:
			return "Death";
		case 190:
			return "Fall_To_Death";
		case 191:
			return "Magic_Screen_Nuke";
		case 192:
			return "Level_Up";
		case 193:
			return "Generic_Looking_At_Map";
		case 194:
			return "Level_Begin";
		case 195:
			return "Naming_Location_On_Map_Village";
		case 196:
			return "Naming_Location_On_Map_Forest";
		case 197:
			return "Naming_Location_On_Map_Swamp";
		case 198:
			return "Naming_Location_On_Map_Cave";
		case 199:
			return "Naming_Location_On_Map_Wizard_Tower";
		default:
	}
	switch (iParam0)
	{
		case 200:
			return "Walk_Loop";
		case 201:
			return "Attack_Boss_Final_Hit";
		case 202:
			return "Attack_Dash_Swipe";
		case 203:
			return "Attack_Dash_Hit";
		case 204:
			return "Attack_Long_Swipe";
		case 205:
			return "Attack_Long_Hit";
		case 206:
			return "Attack_Short_Swipe";
		case 207:
			return "Attack_Short_Hit";
		case 208:
			return "Attack_Kick_Swipe";
		case 209:
			return "Attack_Kick_Hit";
		case 210:
			return "Attack_Jump_Kick_Swipe";
		case 211:
			return "Attack_Jump_Kick_Hit";
		case 212:
			return "Jump_Land";
		case 213:
			return "Body_Fall";
		case 214:
			return "Level_Up_Fullscreen";
		case 215:
			return "Level_Up_IG";
		case 216:
			return "Level_Up_Sword";
		case 217:
			return "Magic_Draw_Sword";
		case 218:
			return "Magic_Nuke_Cast";
		case 219:
			return "Magic_Nuke_Small_Blast";
		case 220:
			return "Weapon_Deflect_Arrow";
		case 221:
			return "Weapon_Deflect_Fireball";
		case 222:
			return "Hit_By_Enemy";
		case 223:
			return "Walk_Loop";
		case 224:
			return "Attack_Boss_Final_Hit";
		case 225:
			return "Attack_Dash_Swipe";
		case 226:
			return "Attack_Dash_Hit";
		case 227:
			return "Attack_Long_Swipe";
		case 228:
			return "Attack_Long_Hit";
		case 229:
			return "Attack_Short_Swipe";
		case 230:
			return "Attack_Short_Hit";
		case 231:
			return "Attack_Kick_Swipe";
		case 232:
			return "Attack_Kick_Hit";
		case 233:
			return "Attack_Jump_Kick_Swipe";
		case 234:
			return "Attack_Jump_Kick_Hit";
		case 235:
			return "Jump_Land";
		case 236:
			return "Body_Fall";
		case 237:
			return "Level_Up_Fullscreen";
		case 238:
			return "Level_Up_IG";
		case 239:
			return "Level_Up_Sword";
		case 240:
			return "Magic_Draw_Sword";
		case 241:
			return "Magic_Nuke_Cast";
		case 242:
			return "Magic_Nuke_Small_Blast";
		case 243:
			return "Weapon_Deflect_Arrow";
		case 244:
			return "Weapon_Deflect_Fireball";
		case 245:
			return "Hit_By_Enemy";
		case 246:
			return "Thog";
		case 247:
			return "Grog";
		case 248:
			return "Wizard";
		case 249:
			return "Man_01";
		case 250:
			return "Man_02";
		case 251:
			return "Woman_01";
		case 252:
			return "Woman_02";
		case 253:
			return "Woman_03";
		case 254:
			return "Woman_04";
		case 424:
			return "Melee";
		case 425:
			return "Hurt";
		case 426:
			return "Jump";
		case 427:
			return "Knocked_Down";
		case 428:
			return "Death";
		case 429:
			return "Fall_To_Death";
		case 430:
			return "Magic_Screen_Nuke";
		case 431:
			return "Level_Up";
		case 432:
			return "Melee";
		case 433:
			return "Hurt";
		case 434:
			return "Jump";
		case 435:
			return "Knocked_Down";
		case 436:
			return "Death";
		case 437:
			return "Fall_To_Death";
		case 438:
			return "Magic_Screen_Nuke";
		case 439:
			return "Level_Up";
		case 442:
			return "Ambience_Loop_Forest";
		case 443:
			return "Ambience_Loop_Swamp";
		case 444:
			return "Ambience_Loop_Caves";
		case 445:
			return "Ambience_Loop_Castle";
		case 470:
			return "01";
		case 471:
			return "02";
		case 472:
			return "03";
		case 473:
			return "04";
		case 474:
			return "05";
		case 475:
			return "06";
		case 476:
			return "07";
		case 477:
			return "Pickup_HP_Big";
		case 478:
			return "Pickup_MP_Big";
		case 479:
			return "Mana_Full";
		case 480:
			return "Mana_Empty";
		case 481:
			return "Extra_Life";
		case 482:
			return "01";
		case 483:
			return "02";
		case 484:
			return "03";
		case 485:
			return "04";
		case 486:
			return "Score_Count";
		case 487:
			return "Score_Count_Complete";
		default:
	}
	switch (iParam0)
	{
		case 255:
			return "FE_SpeechBubble_Appear_Synth";
		case 256:
			return "FE_SpeechBubble_Disappear_Synth";
		case 257:
			return "FE_SpeechBubble_Appear_Sweep";
		case 258:
			return "FE_SpeechBubble_Disappear_Sweep";
		case 259:
			return "FE_Scorecount_Loop";
		case 260:
			return "FE_Scorecount_Final";
		case 261:
			return "FE_Score_Letter_Change_L";
		case 262:
			return "FE_Score_Letter_Change_R";
		case 263:
			return "FE_Score_Letter_Select";
		case 264:
			return "FE_Score_Entered";
		case 265:
			return "FE_Score_Change_Page";
		case 266:
			return "FE_Pressed_Start";
		case 267:
			return "FE_Navigate_Menu";
		case 268:
			return "FE_GameOver";
		case 269:
			return "Weap_Player_Default";
		case 270:
			return "Weap_Player_Double";
		case 271:
			return "Weap_Player_Triple";
		case 272:
			return "Weap_Player_Rocket";
		case 273:
			return "Weap_Player_Scatter";
		case 274:
			return "Weap_Player_Beam";
		case 281:
			return "Weap_Player_Rocket_Explode";
		case 275:
			return "Ability_Player_Activate_Nuke";
		case 276:
			return "Ability_Player_Activate_Stun";
		case 277:
			return "Ability_Player_Activate_Decoy";
		case 278:
			return "Ability_Player_Decoy_Loop";
		case 280:
			return "Abilty_Player_Activate_Repulse";
		case 279:
			return "Ability_Player_Deactivate_Decoy";
		case 282:
			return "Ability_Player_Deactivate_Stun";
		case 283:
			return "Weap_Enemy_Default";
		case 284:
			return "Weap_Enemy_Triple";
		case 285:
			return "Weap_Enemy_Scatter";
		case 286:
			return "Weap_Enemy_UFO_Scatter";
		case 287:
			return "Exp_Enemy_Destroyed_Default";
		case 288:
			return "Enemy_Damaged_Default";
		case 289:
			return "Player_Damaged_Default";
		case 290:
			return "Repulse_Reflect";
		case 291:
			return "Exp_Player_Destroyed";
		case 292:
			return "Player_Defeated";
		case 293:
			return "Damage_Banana_Astronaut";
		case 294:
			return "Damage_UFO";
		case 295:
			return "Damage_Spaceship";
		case 296:
			return "Exp_Banana_Astronaut";
		case 297:
			return "Exp_UFO";
		case 298:
			return "Exp_Spaceship";
		case 299:
			return "Pickup_Repulse";
		case 300:
			return "Pickup_Explosion";
		case 301:
			return "Pickup_Stun";
		case 302:
			return "Pickup_Nuke";
		case 303:
			return "Pickup_Decoy";
		case 304:
			return "Pickup_Shard";
		case 305:
			return "Pickup_Extra_Life";
		case 306:
			return "Pickup_Health";
		case 307:
			return "Pickup_Invincibility";
		case 308:
			return "Pickup_Unavailable";
		case 309:
			return "Pickup_Weap_Double";
		case 310:
			return "Pickup_Weap_Triple";
		case 311:
			return "Pickup_Weap_Rocket";
		case 312:
			return "Pickup_Weap_Scatter";
		case 313:
			return "Pickup_Weap_Bolt";
		case 314:
			return "Pickup_Weap_Beam";
		case 315:
			return "Pickup_Weap_DuelArchBeam";
		case 316:
			return "Pickup_Weap_Wave";
		case 317:
			return "Attack_Default";
		case 318:
			return "Attack_Special";
		case 319:
			return "Damage_BananaChip";
		case 320:
			return "Damage_Default";
		case 321:
			return "Speak";
		case 322:
			return "Died";
		case 323:
			return "Attack_Default";
		case 324:
			return "Attack_Special";
		case 325:
			return "Attack_Rockets_Charge";
		case 326:
			return "Attack_Rockets";
		case 327:
			return "Damage_CrackWindow";
		case 328:
			return "Damage_Default";
		case 329:
			return "Speak";
		case 330:
			return "Died";
		case 331:
			return "Attack_EyeLaser";
		case 332:
			return "Attack_EyeLaser_Charge_Loop";
		case 333:
			return "Attack_Scatter";
		case 334:
			return "Attack_Wig_Scatter";
		case 335:
			return "Attack_Wig_Beam";
		case 336:
			return "Damage_BreakGlasses";
		case 337:
			return "Damage_LostGlasses";
		case 338:
			return "Damage_LoseWig";
		case 339:
			return "Damage_Default";
		case 340:
			return "Speak";
		case 341:
			return "Died";
		case 342:
			return "Attack_Default";
		case 343:
			return "Attack_Special";
		case 344:
			return "Damage_Default";
		case 345:
			return "Speak";
		case 346:
			return "Died";
		case 347:
			return "Attack_Default";
		case 348:
			return "Attack_Special";
		case 349:
			return "Damage_Default";
		case 350:
			return "Speak";
		case 351:
			return "Died";
		case 352:
			return "Exp_Apple";
		case 353:
			return "Flyby_UFO";
		case 354:
			return "Flyby_Kamikaze";
		default:
	}
	switch (iParam0)
	{
		case 378:
			return "Afterburn";
		case 379:
			return "Hot_pursuit";
		case 380:
			return "Ls_Nights";
		case 381:
			return "Overdrive";
		case 382:
			return "Red_velvet";
		case 383:
			return "Renegade";
		case 384:
			return "Turbo_BOOST";
		case 385:
			return "Undercover";
		case 386:
			return "Vice_Lights";
		case 356:
			return "fe_checkpoint_reached";
		case 357:
			return "fe_begin_race_go";
		case 360:
			return "fe_begin_race_countdown_3";
		case 361:
			return "fe_begin_race_countdown_2";
		case 362:
			return "fe_time_countdown";
		case 363:
			return "fe_time_10_secs_remaining";
		case 364:
			return "fe_took_lead";
		case 365:
			return "fe_lost_lead";
		case 366:
			return "fe_win_game";
		case 367:
			return "fe_lose_game";
		case 368:
			return "fe_enter_character_select_character_L";
		case 369:
			return "fe_enter_character_select_character_R";
		case 370:
			return "fe_enter_character_letter_entered";
		case 371:
			return "fe_enter_character_score";
		case 355:
			return "fe_navigate_menu";
		case 372:
			return "fe_change_station";
		case 373:
			return "fe_pressed_select";
		case 374:
			return "fe_pressed_start";
		case 375:
			return "fe_title_waves";
		case 376:
			return "fe_title_seagulls";
		case 377:
			return "fe_title_dog_bark";
		case 358:
			return "veh_roadnoise_dirt_loop";
		case 387:
			return "crash_generic";
		case 359:
			return "veh_shift_gear";
		case 388:
			return "crash_land";
		case 389:
			return "collision_dogbark_swtnr";
		case 390:
			return "collision_meow_swtnr";
		case 391:
			return "collision_generic";
		case 392:
			return "collision_ped";
		case 393:
			return "collision_bigfoot";
		case 415:
			return "ambience_horn_by";
		case 416:
			return "ambience_crowd_loop";
		case 417:
			return "ambience_flyby_doppler_loop";
		case 418:
			return "ambience_ufo_loop_by";
		case 419:
			return "ambience_bigfoot_by";
		case 420:
			return "ambience_cougar_by";
		case 421:
			return "ambience_ghost_by_loop";
		case 422:
			return "ambience_bicycle_by";
		case 394:
			return "car_engine_loop";
		case 395:
			return "car_engine_start";
		case 396:
			return "car_skid_01_loop";
		case 397:
			return "car_skid_02_loop";
		case 398:
			return "car_boost_start";
		case 399:
			return "car_boost_loop";
		case 400:
			return "car_brake_loop";
		case 401:
			return "bike_engine_loop";
		case 402:
			return "bike_engine_start";
		case 403:
			return "bike_skid_01_loop";
		case 404:
			return "bike_skid_02_loop";
		case 405:
			return "bike_boost_start";
		case 406:
			return "bike_boost_loop";
		case 407:
			return "bike_brake_loop";
		case 408:
			return "truck_engine_loop";
		case 409:
			return "truck_engine_start";
		case 410:
			return "truck_skid_01_loop";
		case 411:
			return "truck_skid_02_loop";
		case 412:
			return "truck_boost_start";
		case 413:
			return "truck_boost_loop";
		case 414:
			return "truck_brake_loop";
		case 423:
			return "ambience_wind_loop";
		default:
	}
	switch (iParam0)
	{
		case 446:
			return "Ability_Player_Deactivate_Repulse";
		case 447:
			return "Ability_Player_Activate_Shield";
		case 448:
			return "Ability_Player_Deactivate_Shield";
		case 449:
			return "Player_Damaged_Shield";
		case 450:
			return "Pickup_Shield";
		case 451:
			return "Split";
		case 452:
			return "Assemble";
		case 453:
			return "Speak_Defeat";
		case 454:
			return "Speak_Defeat";
		case 455:
			return "Attack_Minigun";
		case 456:
			return "Speak_Defeat";
		case 457:
			return "Speak_Defeat";
		case 458:
			return "ChestBurst";
		case 459:
			return "Speak_Defeat";
		case 461:
			return "Fire";
		case 462:
			return "Kill_Streak";
		case 463:
			return "Stage_Select";
		case 464:
			return "Collect_Powerup";
		case 465:
			return "Extra_Life";
		case 466:
			return "Screech_High";
		case 467:
			return "Screech_Med";
		case 468:
			return "Screech_Low";
		default:
	}
	switch (iParam0)
	{
		case 490:
			return "USE_POWERUP";
		case 489:
			return "Menu_Select";
		case 488:
			return "Menu_Navigate";
		default:
	}
	switch (iParam0)
	{
		case 491:
			return "Score_Letter_Change";
		case 492:
			return "Score_Letter_Select";
		case 493:
			return "Score_Entered";
		default:
	}
	switch (iParam0)
	{
		case 494:
			return "";
		default:
	}
	return "";
}

void func_376(var uParam0, int iParam1, int iParam2)//Position - 0x93BF
{
	struct<3> Var0;
	Var0.f_1 = -1;
	Var0.f_0 = (*uParam0)[iParam1 /*3*/];
	Var0.f_2 = (uParam0[iParam1 /*3*/])->f_2;
	Var0.f_1 = (uParam0[iParam1 /*3*/])->f_1;
	(*uParam0)[iParam1 /*3*/] = (*uParam0)[iParam2 /*3*/];
	(uParam0[iParam1 /*3*/])->f_2 = (uParam0[iParam2 /*3*/])->f_2;
	(uParam0[iParam1 /*3*/])->f_1 = (uParam0[iParam2 /*3*/])->f_1;
	(*uParam0)[iParam2 /*3*/] = Var0.f_0;
	(uParam0[iParam2 /*3*/])->f_2 = Var0.f_2;
	(uParam0[iParam2 /*3*/])->f_1 = Var0.f_1;
}

int func_377(var uParam0, int iParam1)//Position - 0xA13C
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam1 / 5);
	iVar1 = (iParam1 % 5) * 6;
	if (iVar0 >= *uParam0)
	{
		return 0;
	}
	return MISC::GET_BITS_IN_RANGE((*uParam0)[iVar0], iVar1, iVar1 + 5);
}

void func_378(var uParam0, int iParam1)//Position - 0x10647
{
	uParam0->f_45 = iParam1;
}

int func_379(var uParam0)//Position - 0x10707
{
	return uParam0->f_45;
}

void func_380(var uParam0, int iParam1)//Position - 0x10713
{
	uParam0->f_46 = iParam1;
}

int func_381(var uParam0)//Position - 0x129FA
{
	return uParam0->f_46;
}

void func_382(int iParam0, int iParam1, int iParam2)//Position - 0x12DAB
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam1 / 5);
	if (iVar0 >= *iParam2)
	{
		return;
	}
	iVar1 = (iParam1 % 5) * 6;
	MISC::SET_BITS_IN_RANGE(iParam2[iVar0], iVar1, iVar1 + 5, (2 + iParam0));
}

var func_383(int iParam0)//Position - 0x12DE0
{
	return SYSTEM::FLOOR(SYSTEM::LOG10(SYSTEM::TO_FLOAT(iParam0))) + 1;
}

void func_384(int iParam0)//Position - 0x223D4
{
	int iVar0;
	Local_134.f_0 = iParam0;
	iVar0 = 0;
	while (iVar0 < 494)
	{
		Local_134.f_19[iVar0] = -1;
		iVar0++;
	}
}

void func_385(int iParam0, int iParam1)//Position - 0x232D2
{
	struct<3> Var0;
	int iVar1;
	Var0.f_0 = 1086643333;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = iParam1;
	iVar1 = __LIB_0__::func_950(iParam0);
	if (!iVar1 == 0 && __LIB_0__::func_156(iParam0, 0, 1))
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iVar1);
	}
}

void func_386(struct<21> Param0)//Position - 0x832AD
{
	Param0 = { Param0 };
	MISC::NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME();
}

void func_387(int iParam0)//Position - 0x571
{
	__LIB_16__::func_758(&(Local_134.f_2), iParam0);
}

void func_388(struct<2> Param0, struct<2> Param1, struct<4> Param2)//Position - 0x281E
{
	Param0 = { __LIB_31__::func_954(Param0) };
	Param1.f_0 = (Param1.f_0 * fLocal_131);
	GRAPHICS::DRAW_RECT(Param0.f_0, Param0.f_1, Param1.f_0, Param1.f_1, Param2.f_0, Param2.f_1, Param2.f_2, Param2.f_3, false);
}

bool func_389()//Position - 0x22181
{
	return ((((((__LIB_31__::func_955(0) && __LIB_31__::func_955(6)) && __LIB_31__::func_955(1)) && __LIB_31__::func_955(3)) && __LIB_31__::func_955(4)) && __LIB_31__::func_955(5)) && __LIB_31__::func_955(7));
}

void func_390(char* sParam0, char* sParam1, struct<2> Param2, struct<2> Param3, float fParam4, struct<4> Param5)//Position - 0x2275
{
	Param2 = { __LIB_16__::func_775(Param2) };
	Param3 = { __LIB_16__::func_775(Param3) };
	__LIB_31__::func_953(sParam0, sParam1, Param2.f_0, Param2.f_1, Param3.f_0, Param3.f_1, fParam4, Param5);
}

void func_391(bool bParam0)//Position - 0x22F3B
{
	__LIB_31__::func_956();
	PAD::ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(0 /*PLAYER_CONTROL*/);
	PAD::ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(2 /*FRONTEND_CONTROL*/);
	if (MISC::IS_PC_VERSION())
	{
		PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
	}
	PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 199 /*INPUT_FRONTEND_PAUSE*/, true);
	GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(false);
	__LIB_0__::func_876(1);
	__LIB_0__::func_612(4, -1);
	HUD::HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(19);
	__LIB_0__::func_866();
	__LIB_0__::func_189();
	HUD::THEFEED_HIDE_THIS_FRAME();
	if (bParam0)
	{
		__LIB_1__::func_33(0);
		if (!HUD::IS_PAUSE_MENU_ACTIVE())
		{
			HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
			GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
		}
	}
	__LIB_0__::func_502();
	RECORDING::REPLAY_PREVENT_RECORDING_THIS_FRAME();
}

int func_392()//Position - 0x75411
{
	if (LOCALIZATION::GET_CURRENT_LANGUAGE() == 0)
	{
		return 0;
	}
	return 1;
}

float func_393(var uParam0)//Position - 0x82BA6
{
	return uParam0->f_14;
}

char* func_394()//Position - 0x873E1
{
	return "MINI@GOLF";
}

char* func_395()//Position - 0x873EE
{
	return "MINI@GOLFAI";
}

void func_396(var uParam0, int iParam1, int iParam2)//Position - 0x9569A
{
	if (__LIB_0__::func_702(&(uParam0->f_1)))
	{
		__LIB_1__::func_377(&(uParam0->f_1));
	}
	if (__LIB_0__::func_702(&(uParam0->f_4)))
	{
		__LIB_1__::func_377(&(uParam0->f_4));
	}
	__LIB_2__::func_540(&(uParam0->f_10));
	uParam0->f_134 = iParam1;
	uParam0->f_135 = iParam2;
	uParam0->f_137 = 1;
	uParam0->f_136 = 0;
	*uParam0 = 0;
}

void func_397(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x9EB47
{
	Global_23150.f_8778 = iParam4;
	Global_23150.f_8774 = uParam0;
	Global_23150.f_8775 = uParam1;
	Global_23150.f_8776 = uParam2;
	Global_23150.f_8777 = uParam3;
}

void func_398(var uParam0, int iParam1)//Position - 0x9F884
{
	uParam0->f_29 = iParam1;
}

void func_399(int iParam0, int iParam1, bool bParam2)//Position - 0x9E910
{
	int iVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	var uVar4;
	if (Global_23150.f_5609 > iParam0)
	{
		return;
	}
	if (Global_23150.f_5609 >= 128)
	{
		return;
	}
	if (Global_23150.f_5615 >= 256)
	{
		return;
	}
	if (Global_23150.f_6134 < Global_23150.f_6132)
	{
		return;
	}
	if (Global_23150.f_5609 != iParam0)
	{
		Global_23150.f_5609 = iParam0;
		Global_23150.f_5610 = 0;
	}
	iVar0 = Global_23150.f_5447[Global_23150.f_5610];
	if (iVar0 != 4)
	{
		while (Global_23150.f_5610 < 4 && iVar0 != 4)
		{
			Global_23150.f_5610++;
			iVar0 = Global_23150.f_5447[Global_23150.f_5610];
		}
		if (iVar0 != 4)
		{
			return;
		}
	}
	Global_23150.f_4824[Global_23150.f_5615] = iParam1;
	Global_23150.f_5615++;
	if (iParam1 != 0)
	{
		__LIB_3__::func_124(iParam1, 1, 0, &fVar1, &fVar2, 0);
		if (Global_23150.f_5466[Global_23150.f_5610])
		{
			__LIB_3__::func_124(26, 1, 0, &fVar3, &uVar4, 0);
			fVar1 = (fVar1 + (fVar3 * 2f));
		}
		if (fVar1 > Global_23150.f_5459[Global_23150.f_5610])
		{
			Global_23150.f_5459[Global_23150.f_5610] = fVar1;
		}
		if (bParam2)
		{
			if (fVar2 > Global_23150.f_6136[iParam0])
			{
				Global_23150.f_6136[iParam0] = fVar2;
			}
		}
	}
	MISC::SET_BIT(&(Global_23150.f_5480[iParam0]), Global_23150.f_5610);
	Global_23150.f_5610++;
	Global_23150.f_6135 = 4;
}

int func_400(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x76A55
{
	Global_78130[1 /*14*/] = { __LIB_13__::func_735(iParam0, iParam1, iParam2, -1) };
	if (BitTest(Global_78130[1 /*14*/].f_6, 0) && !BitTest(Global_78130[1 /*14*/].f_6, 6))
	{
		if (bParam3)
		{
			__LIB_0__::func_31(iParam1, Global_78130[1 /*14*/].f_5, Global_78130[1 /*14*/].f_2, 0, Global_78130[1 /*14*/].f_1, 1, 0);
		}
		else
		{
			__LIB_0__::func_31(iParam1, Global_78130[1 /*14*/].f_5, Global_78130[1 /*14*/].f_2, 0, Global_78130[1 /*14*/].f_1, 0, 1);
		}
		return 1;
	}
	return 0;
}

int func_401(bool bParam0)//Position - 0xB1454
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (!__LIB_0__::func_438())
	{
		return 0;
	}
	if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(45))
	{
		return 0;
	}
	if (!Global_78319)
	{
		return 0;
	}
	uVar2 = __LIB_1__::func_360(757, -1, 0);
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (__LIB_1__::func_205(uVar2, iVar0, bParam0))
		{
			iVar1++;
		}
		iVar0++;
	}
	if (iVar1 == 9)
	{
		__LIB_0__::func_746(45, 1);
		return 1;
	}
	return 0;
}

int func_402(var uParam0)//Position - 0x5922
{
	if (!Global_2097532)
	{
		if (!__LIB_0__::func_864(&(Global_2097536.f_2827)))
		{
			__LIB_0__::func_795(&(Global_2097536.f_2827), 1, 0);
			return 0;
		}
		else if (!__LIB_0__::func_937(&(Global_2097536.f_2827), 1000, 1))
		{
			return 0;
		}
	}
	if (((!NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS() || !PLAYER::IS_PLAYER_ONLINE()) || (!NETWORK::NETWORK_HAVE_ONLINE_PRIVILEGES() && NETWORK::NETWORK_HAS_AGE_RESTRICTIONS())) || Global_2097536.f_2832 != 0)
	{
		MISC::CLEAR_BIT(&(uParam0->f_42), 4);
		return 1;
	}
	if (!BitTest(uParam0->f_42, 4))
	{
		__LIB_12__::func_657(uParam0);
		MISC::SET_BIT(&(uParam0->f_42), 4);
		return 0;
	}
	else if (BitTest(uParam0->f_42, 5))
	{
		(*uParam0)[0] = 2;
		(*uParam0)[1] = 1;
		(*uParam0)[2] = 3;
		return 1;
	}
	if (!__LIB_31__::func_950(uParam0))
	{
		return 0;
	}
	if (!__LIB_31__::func_949(uParam0))
	{
		return 0;
	}
	if (!__LIB_31__::func_948(uParam0))
	{
		return 0;
	}
	if (!BitTest(uParam0->f_42, 6))
	{
		__LIB_2__::func_544(&Global_2101867);
		__LIB_31__::func_947(uParam0, &Global_2101867);
		__LIB_8__::func_291(uParam0, &Global_2101867);
		MISC::SET_BIT(&(uParam0->f_42), 6);
	}
	if (!BitTest(uParam0->f_42, 7))
	{
		if (!__LIB_0__::func_864(&(Global_2097536.f_2830)))
		{
			__LIB_0__::func_795(&(Global_2097536.f_2830), 1, 0);
		}
		else if (__LIB_0__::func_937(&(Global_2097536.f_2830), 30000, 1))
		{
			MISC::SET_BIT(&(uParam0->f_42), 7);
		}
		if (__LIB_12__::func_692(&Global_2101867))
		{
		}
		else
		{
			return 0;
		}
		if (__LIB_12__::func_691(&Global_2101867))
		{
		}
		else
		{
			return 0;
		}
		if (__LIB_12__::func_724(&Global_2101867))
		{
			__LIB_16__::func_748(&Global_2101867);
			MISC::SET_BIT(&(uParam0->f_42), 7);
			__LIB_16__::func_748(&Global_2101867);
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

int func_403()//Position - 0xA897D
{
	if (__LIB_1__::func_188(Global_4718592.f_107227) || __LIB_1__::func_187(Global_4718592.f_107227))
	{
		if (__LIB_33__::func_175())
		{
			return __LIB_33__::func_176(__LIB_30__::func_953(__LIB_1__::func_186(Global_1659902), 0));
		}
	}
	return 0;
}

float func_404(int iParam0)//Position - 0x157A
{
	switch (iParam0)
	{
		case 0:
			return 11.26f;
			break;
		case 1:
			return 10.38f;
			break;
		case 2:
			return 13.4f;
			break;
		case 3:
			return 8.94f;
			break;
		case 4:
			return 12.8f;
			break;
		case 5:
			return 9.42f;
			break;
		case 6:
			return 9.42f;
			break;
		case 7:
			return 15f;
			break;
		case 8:
			return 11.69f;
			break;
	}
	return 0f;
}

Vector3 func_405(int iParam0)//Position - 0x1623
{
	switch (iParam0)
	{
		case 0:
			return -1370.93f, 173.98f, 57.01f;
			break;
		case 1:
			return -1107.26f, 157.15f, 62.04f;
			break;
		case 2:
			return -1312.97f, 125.64f, 56.39f;
			break;
		case 3:
			return -1218.56f, 107.48f, 57.04f;
			break;
		case 4:
			return -1098.15f, 69.5f, 53.09f;
			break;
		case 5:
			return -987.7f, -105.42f, 39.59f;
			break;
		case 6:
			return -1117.793f, -104.069f, 40.8406f;
			break;
		case 7:
			return -1272.63f, 38.4f, 48.75f;
			break;
		case 8:
			return -1138.3812f, 0.60467f, 47.98225f;
			break;
	}
	return 0f, 0f, 0f;
}

int func_406(var uParam0, int iParam1)//Position - 0x1BE5
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0;
	}
	return (uParam0[iParam1 /*3*/])->f_1;
}

int func_407(var uParam0)//Position - 0x1C39
{
	return uParam0->f_18;
}

float func_408(var uParam0)//Position - 0x1C93
{
	return uParam0->f_13;
}

void func_409(var uParam0)//Position - 0x1C9F
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_4))
	{
		ENTITY::DETACH_ENTITY(uParam0->f_4, true, true);
		OBJECT::DELETE_OBJECT(&(uParam0->f_4));
	}
}

bool func_410(var uParam0, int iParam1)//Position - 0x1CFD
{
	return (uParam0->f_22 && iParam1) != 0;
}

Vector3 func_411(var uParam0, int iParam1)//Position - 0x1D0E
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f, 0f, 0f;
	}
	switch (iParam1)
	{
		case 0:
			return -1114.121f, 220.789f, 63.78f;
			break;
		case 1:
			return -1322.07f, 158.77f, 56.69f;
			break;
		case 2:
			return -1237.419f, 112.988f, 56.086f;
			break;
		case 3:
			return -1096.541f, 7.848f, 49.63f;
			break;
		case 4:
			return -957.386f, -90.412f, 39.161f;
			break;
		case 5:
			return -1103.516f, -115.163f, 40.444f;
			break;
		case 6:
			return -1290.633f, 2.771f, 49.219f;
			break;
		case 7:
			return -1034.944f, -83.144f, 42.919f;
			break;
		case 8:
			return -1294.775f, 83.51f, 53.804f;
			break;
	}
	return 0f, 0f, 0f;
}

void func_412(var uParam0, int iParam1)//Position - 0x2025
{
	uParam0->f_18 = iParam1;
}

void func_413(var uParam0, var uParam1)//Position - 0x2033
{
	uParam0->f_13 = uParam1;
}

float func_414(var uParam0, int iParam1)//Position - 0x2041
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f;
	}
	return (*uParam0)[iParam1 /*3*/];
}

void func_415(var uParam0, struct<3> Param1)//Position - 0x2067
{
	uParam0->f_7 = { Param1 };
}

void func_416(var uParam0, struct<3> Param1)//Position - 0x2079
{
	uParam0->f_10 = { Param1 };
}

void func_417(var uParam0, struct<3> Param1)//Position - 0x208B
{
	uParam0->f_25 = { Param1 };
}

int func_418(var uParam0)//Position - 0x2122
{
	return uParam0->f_28;
}

void func_419(int iParam0)//Position - 0x213C
{
	Global_112414 = iParam0;
}

void func_420(var uParam0, int iParam1)//Position - 0x2177
{
	uParam0->f_22 = (uParam0->f_22 || iParam1);
}

int func_421(int iParam0)//Position - 0x2D6C
{
	if (iParam0 == 0 || iParam0 == 2)
	{
		return -1;
	}
	return 0;
}

var func_422(var uParam0)//Position - 0x2DDC
{
	return uParam0->f_24;
}

void func_423(var uParam0, var uParam1)//Position - 0x2F12
{
	uParam0->f_16 = uParam1;
}

void func_424(var uParam0)//Position - 0x2F36
{
	uParam0->f_25 = { uParam0->f_28 };
}

void func_425(int iParam0, struct<2> Param1, Vector3 vParam2, struct<2> Param3, var uParam4)//Position - 0x333B
{
	struct<3> Var0;
	Var0 = { __LIB_0__::func_79(Vector(0f, Param3.f_1, Param3.f_0) - Vector(0f, Param1.f_1, Param1.f_0)) * Vector(9f, 9f, 9f) };
	ENTITY::APPLY_FORCE_TO_ENTITY(iParam0, 0, Var0, 0f, 0f, 0f, 0, false, false, true, false, true);
}

var func_426(var uParam0)//Position - 0x3418
{
	return uParam0->f_33;
}

int func_427(int iParam0)//Position - 0x34DE
{
	switch (iParam0)
	{
		case -461750719:
		case 930824497:
			return 4;
		case 581794674:
		case -2041329971:
		case -309121453:
		case 555004797:
		case -1885547121:
		case -1915425863:
			return 9;
			break;
		case -2073312001:
		case 627123000:
			return 8;
			break;
		case 1187676648:
		case 282940568:
		case 951832588:
		case -840216541:
		case 510490462:
			return 1;
			break;
		case 1333033863:
			return 2;
			break;
		case -1286696947:
			return 3;
			break;
		case -1595148316:
			return 0;
			break;
		case 435688960:
			return 7;
			break;
	}
	return -1;
}

int func_428(var uParam0, int iParam1)//Position - 0x3636
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0;
	}
	return (uParam0[iParam1 /*3*/])->f_2;
}

void func_429(var uParam0)//Position - 0x365E
{
	*uParam0 = 0;
	uParam0->f_2 = 0f;
	uParam0->f_3 = 0f;
	uParam0->f_4 = 0f;
	uParam0->f_5 = 0f;
	uParam0->f_6 = 0f;
	uParam0->f_7 = 0;
	uParam0->f_8 = 0;
	uParam0->f_9 = 0;
	uParam0->f_10 = 0;
	uParam0->f_11 = 0;
	uParam0->f_12 = 0;
	uParam0->f_13 = 0;
}

bool func_430(int iParam0)//Position - 0x3F70
{
	return ENTITY::GET_ENTITY_SPEED(iParam0) < 6f;
}

void func_431(var uParam0)//Position - 0x3F80
{
	struct<3> Var0;
	struct<3> Var1;
	if (uParam0->f_5 == 0f && uParam0->f_6 == 0f)
	{
		return;
	}
	Var0 = { __LIB_0__::func_79(uParam0->f_5, uParam0->f_6, 0f) * Vector(25f, 25f, 25f) * FtoV(MISC::GET_FRAME_TIME()) };
	Var1 = { -Var0 };
	if (MISC::ABSF(uParam0->f_5) < MISC::ABSF(Var0.f_0))
	{
		uParam0->f_5 = 0f;
	}
	else
	{
		uParam0->f_5 = (uParam0->f_5 + Var1.f_0);
	}
	if (MISC::ABSF(uParam0->f_6) < MISC::ABSF(Var0.f_1))
	{
		uParam0->f_6 = 0f;
	}
	else
	{
		uParam0->f_6 = (uParam0->f_6 + Var1.f_1);
	}
}

int func_432(var uParam0, int iParam1)//Position - 0x4251
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 1;
	}
	return (*uParam0)[iParam1];
}

int func_433(var uParam0, int iParam1)//Position - 0x4E2E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_15)
	{
		if ((*uParam0)[iVar0] == iParam1)
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

float func_434(var uParam0, int iParam1)//Position - 0x4E7E
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0f;
	}
	switch ((*uParam0)[iParam1])
	{
		case 1:
			return 0.25f;
			break;
		case 2:
			return 0.25f;
			break;
		case 3:
			return 0.25f;
			break;
		case 4:
			return 0.25f;
			break;
		case 5:
			return 0.25f;
			break;
		case 6:
			return 0.5f;
			break;
		case 7:
			return 0.5f;
			break;
		case 8:
			return 0.5f;
			break;
		case 9:
			return 0.6f;
			break;
		case 10:
			return 0.6f;
			break;
		case 11:
			return 0.7f;
			break;
		case 12:
			return 0.7f;
			break;
		case 13:
			return 0.8f;
			break;
		case 14:
			return 1f;
			break;
		case 15:
			return 1f;
			break;
		case 16:
			return 1f;
			break;
		case 17:
			return 1f;
			break;
		case 18:
			return 1f;
			break;
		case 19:
			return 0.1f;
			break;
	}
	return 0f;
}

float func_435(var uParam0, int iParam1)//Position - 0x4FD9
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0f;
	}
	switch ((*uParam0)[iParam1])
	{
		case 1:
			return 13.5f;
			break;
		case 2:
			return 13.75f;
			break;
		case 3:
			return 16f;
			break;
		case 4:
			return 18f;
			break;
		case 5:
			return 21f;
			break;
		case 6:
			return 17f;
			break;
		case 7:
			return 20f;
			break;
		case 8:
			return 23f;
			break;
		case 9:
			return 26f;
			break;
		case 10:
			return 29f;
			break;
		case 11:
			return 30f;
			break;
		case 12:
			return 37f;
			break;
		case 13:
			return 41f;
			break;
		case 14:
			return 45f;
			break;
		case 15:
			return 50f;
			break;
		case 16:
			return 55f;
			break;
		case 17:
			return 60f;
			break;
		case 18:
			return 64f;
			break;
		case 19:
			return 5f;
			break;
	}
	return 0f;
}

float func_436(float fParam0, float fParam1)//Position - 0x515A
{
	float fVar0;
	fVar0 = SYSTEM::SIN(MISC::GET_RANDOM_FLOAT_IN_RANGE(-180f, 180f));
	if (fVar0 < 0f)
	{
		fVar0 = (fVar0 + 1f);
	}
	else
	{
		fVar0 = (fVar0 - 1f);
	}
	return (fParam0 + (fVar0 * fParam1));
}

float func_437(int iParam0)//Position - 0x54C3
{
	switch (iParam0)
	{
		case 2:
		case 5:
			return 1f;
			break;
		case 4:
		case 1:
			return 0.95f;
			break;
		case 0:
		case 7:
		case -1:
			return 0.75f;
			break;
		case 3:
			return 1f;
			break;
		default:
			return 1f;
			break;
	}
	return 1f;
}

float func_438(var uParam0, int iParam1)//Position - 0x552E
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0f;
	}
	switch ((*uParam0)[iParam1])
	{
		case 1:
			return (220f / 1.85f);
			break;
		case 2:
			return (210f / 1.85f);
			break;
		case 3:
			return (200f / 1.85f);
			break;
		case 4:
			return (190f / 1.85f);
			break;
		case 5:
			return (180f / 1.85f);
			break;
		case 6:
			return (180f / 1.85f);
			break;
		case 7:
			return (170f / 1.85f);
			break;
		case 8:
			return (160f / 1.85f);
			break;
		case 9:
			return (150f / 1.85f);
			break;
		case 10:
			return (140f / 1.85f);
			break;
		case 11:
			return (130f / 1.85f);
			break;
		case 12:
			return (120f / 1.85f);
			break;
		case 13:
			return (110f / 1.85f);
			break;
		case 14:
			return (100f / 1.85f);
			break;
		case 15:
			return (85f / 1.85f);
			break;
		case 16:
			return (75f / 1.85f);
			break;
		case 17:
			return (65f / 1.85f);
			break;
		case 18:
			return (40f / 1.85f);
			break;
		case 19:
			return (30f / 1.85f);
			break;
	}
	return 0f;
}

void func_439(var uParam0, float fParam1)//Position - 0x5E47
{
	uParam0->f_14 = (uParam0->f_14 + fParam1);
}

void func_440(var uParam0, float fParam1)//Position - 0x5E91
{
	uParam0->f_15 = fParam1;
}

Vector3 func_441(struct<3> Param0, struct<3> Param1)//Position - 0x66C9
{
	struct<3> Var0;
	Var0 = { Param1 * FtoV(__LIB_0__::func_158(Param0, Param1)) };
	return Var0;
}

int func_442(var uParam0)//Position - 0x6B4F
{
	int iVar0;
	iVar0 = __LIB_1__::func_44(uParam0);
	if (((iVar0 == 5 || iVar0 == 4) || iVar0 == 6) || iVar0 == 7)
	{
		return 1;
	}
	return 0;
}

float func_443(int iParam0)//Position - 0x6EA7
{
	switch (iParam0)
	{
		case 0:
			return 1f;
			break;
		case 3:
			return (0.5075f / 0.5575f);
			break;
		case 2:
			return (0.558f / 0.5575f);
			break;
		case 5:
			return (0.53f / 0.5575f);
			break;
		case 7:
		case 4:
			return (0.36f / 0.5575f);
			break;
		case 6:
			return (0.79f / 0.5575f);
			break;
		case 1:
			return (0.575f / 0.5575f);
			break;
	}
	return 1f;
}

float func_444(var uParam0, int iParam1)//Position - 0x70F9
{
	switch ((*uParam0)[iParam1])
	{
		case 1:
			return 105.8f;
			break;
		case 3:
			return 100.5f;
			break;
		case 5:
			return 97.3f;
			break;
		case 7:
			return 90.2f;
			break;
		case 8:
			return 87f;
			break;
		case 9:
			return 83f;
			break;
		case 10:
			return 79.9f;
			break;
		case 11:
			return 73.5f;
			break;
		case 12:
			return 68f;
			break;
		case 13:
			return 59.1f;
			break;
		case 14:
			return 52.5f;
			break;
		case 16:
			return 30.9f;
			break;
		case 17:
			return 21.8f;
			break;
		default:
			break;
	}
	return 0f;
}

void func_445(int iParam0, bool bParam1)//Position - 0x71ED
{
	ENTITY::FREEZE_ENTITY_POSITION(iParam0, bParam1);
}

Vector3 func_446(int iParam0, int iParam1)//Position - 0x7532
{
	iParam0 = iParam0;
	iParam1 = iParam1;
	return 0f, 0f, 0f;
}

void func_447(var uParam0, int iParam1)//Position - 0x7550
{
	if (uParam0->f_4 == iParam1)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_4))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_4));
	}
	uParam0->f_4 = iParam1;
}

int func_448(var uParam0, int iParam1)//Position - 0x76F0
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return joaat("prop_golf_driver");
	}
	switch ((*uParam0)[iParam1])
	{
		case 1:
			return joaat("prop_golf_wood_01");
			break;
		case 2:
			return joaat("prop_golf_wood_01");
			break;
		case 3:
			return joaat("prop_golf_wood_01");
			break;
		case 4:
			return joaat("prop_golf_wood_01");
			break;
		case 5:
			return joaat("prop_golf_wood_01");
			break;
		case 6:
			return joaat("prop_golf_iron_01");
			break;
		case 7:
			return joaat("prop_golf_iron_01");
			break;
		case 8:
			return joaat("prop_golf_iron_01");
			break;
		case 9:
			return joaat("prop_golf_iron_01");
			break;
		case 10:
			return joaat("prop_golf_iron_01");
			break;
		case 11:
			return joaat("prop_golf_iron_01");
			break;
		case 12:
			return joaat("prop_golf_iron_01");
			break;
		case 13:
			return joaat("prop_golf_iron_01");
			break;
		case 14:
			return joaat("prop_golf_pitcher_01");
			break;
		case 15:
			return joaat("prop_golf_pitcher_01");
			break;
		case 16:
			return joaat("prop_golf_pitcher_01");
			break;
		case 17:
			return joaat("prop_golf_pitcher_01");
			break;
		case 18:
			return joaat("prop_golf_pitcher_01");
			break;
		case 19:
			return joaat("prop_golf_putter_01");
			break;
	}
	return joaat("prop_golf_driver");
}

Vector3 func_449(int iParam0)//Position - 0x82A9
{
	if (iParam0 <= 5)
	{
		return 0.11f, -1.08f, 0f;
	}
	if (iParam0 <= 13)
	{
		return 0.11f, -0.81f, 0f;
	}
	if (iParam0 != 19)
	{
		return 0.03f, -0.75f, 0f;
	}
	return 0.1f, -0.55f, 0f;
}

void func_450(var uParam0, var uParam1)//Position - 0x8303
{
	uParam0->f_14 = uParam1;
}

float func_451()//Position - 0x852E
{
	return 0.935f;
}

void func_452(var uParam0, var uParam1)//Position - 0x86B1
{
	uParam0->f_17 = uParam1;
}

void func_453(var uParam0, var uParam1)//Position - 0x86D7
{
	uParam0->f_19 = uParam1;
}

Vector3 func_454(var uParam0, int iParam1)//Position - 0x8802
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f, 0f, 0f;
	}
	switch (iParam1)
	{
		case 0:
			return -1252.9742f, 182.4325f, 61.3071f;
			break;
		case 1:
			return -1222.2045f, 150.2919f, 58.7062f;
			break;
		case 2:
			return -1240.0823f, 105.7823f, 55.6871f;
			break;
		case 3:
			return -1132.4873f, 74.15947f, 55.23262f;
			break;
		case 4:
			return -1022.11084f, -34.77494f, 44.37743f;
			break;
		case 5:
			return -1100.057f, -114.27702f, 40.5368f;
			break;
		case 6:
			return -1225.2073f, -54.2714f, 44.1932f;
			break;
		case 7:
			return -1159.322f, -26.5465f, 44.7971f;
			break;
		case 8:
			return -1177.1937f, 34.219f, 50.8363f;
			break;
	}
	return 0f, 0f, 0f;
}

void func_455(var uParam0, int iParam1)//Position - 0x8DB7
{
	uParam0->f_22 = (uParam0->f_22 - (uParam0->f_22 && iParam1));
}

Vector3 func_456(var uParam0, int iParam1, int iParam2)//Position - 0x8EDD
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f, 0f, 0f;
	}
	switch (iParam1)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return -1369.2075f, 166.1965f, 57.013f;
					break;
				case 1:
					return -1367.2594f, 166.6778f, 57.013f;
					break;
				case 2:
					return -1370.8029f, 167.6664f, 57.013f;
					break;
				case 3:
					return -1371.5073f, 169.5609f, 57.013f;
					break;
				case 4:
					return -1370.8456f, 164.1834f, 56.89f;
					break;
				case 5:
					return -1367.9016f, 164.2965f, 56.869f;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return -1101.0491f, 156.1904f, 62.0401f;
					break;
				case 1:
					return -1100.905f, 159.2561f, 62.0415f;
					break;
				case 2:
					return -1102.7826f, 161.6288f, 62.0412f;
					break;
				case 3:
					return -1105.9637f, 161.2863f, 62.0406f;
					break;
				case 4:
					return -1104.4509f, 163.5161f, 62.0095f;
					break;
				case 5:
					return -1099.934f, 161.6773f, 62.0185f;
					break;
			}
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return -1317.0281f, 128.0565f, 56.4377f;
					break;
				case 1:
					return -1315.4363f, 129.9425f, 56.6243f;
					break;
				case 2:
					return -1313.4515f, 131.9924f, 56.8265f;
					break;
				case 3:
					return -1317.2489f, 133.3213f, 56.705f;
					break;
				case 4:
					return -1318.786f, 131.5965f, 56.4503f;
					break;
				case 5:
					return -1320.1383f, 129.2562f, 56.324f;
					break;
			}
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return -1218.8939f, 110.6482f, 57.08f;
					break;
				case 1:
					return -1222.2432f, 110.2088f, 57.08f;
					break;
				case 2:
					return -1220f, 111.91f, 58.0703f;
					break;
				case 3:
					return -1221.2565f, 101.3278f, 57.08f;
					break;
				case 4:
					return -1223.2966f, 103.1185f, 56.813f;
					break;
				case 5:
					return -1216.3892f, 115.3967f, 57.1354f;
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return -1104.6074f, 70.6124f, 53.212f;
					break;
				case 1:
					return -1101.698f, 73.7137f, 53.1993f;
					break;
				case 2:
					return -1103.9f, 72.917f, 54.3f;
					break;
				case 3:
					return -1100.4252f, 75.0875f, 54.3712f;
					break;
				case 4:
					return -1108.5879f, 72.7163f, 53.4783f;
					break;
				case 5:
					return -1107.1752f, 68.8603f, 53.2257f;
					break;
			}
			break;
		case 5:
			switch (iParam2)
			{
				case 0:
					return -984.8632f, -108.5439f, 39.5642f;
					break;
				case 1:
					return -982.4098f, -106.4736f, 39.5732f;
					break;
				case 2:
					return -981.2261f, -103.0422f, 39.5779f;
					break;
				case 3:
					return -981.8594f, -100.6231f, 39.5813f;
					break;
				case 4:
					return -978.5359f, -100.5075f, 39.5193f;
					break;
				case 5:
					return -981.4874f, -109.4747f, 39.2195f;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return -1113.8646f, -100.3123f, 40.905f;
					break;
				case 1:
					return -1111.5592f, -104.7822f, 40.8405f;
					break;
				case 2:
					return -1113.2805f, -107.0443f, 40.8405f;
					break;
				case 3:
					return -1116.9398f, -109.7583f, 40.8608f;
					break;
				case 4:
					return -1110.02f, -108.1524f, 40.7427f;
					break;
				case 5:
					return -1112.815f, -103.1259f, 40.8406f;
					break;
			}
			break;
		case 7:
			switch (iParam2)
			{
				case 0:
					return -1277.2773f, 36.1405f, 48.9194f;
					break;
				case 1:
					return -1277.3438f, 39.2424f, 49.1028f;
					break;
				case 2:
					return -1275.5933f, 41.3619f, 49.0876f;
					break;
				case 3:
					return -1271.2444f, 43.9149f, 48.9679f;
					break;
				case 4:
					return -1279.0214f, 42.0418f, 49.3157f;
					break;
				case 5:
					return -1281.1838f, 37.6356f, 49.3165f;
					break;
			}
			break;
		case 8:
			switch (iParam2)
			{
				case 0:
					return -1138.5895f, -5.6756f, 47.9822f;
					break;
				case 1:
					return -1136.4796f, -5.8462f, 47.9822f;
					break;
				case 2:
					return -1134.6447f, -4.3631f, 47.9822f;
					break;
				case 3:
					return -1133.712f, -2.4897f, 47.9822f;
					break;
				case 4:
					return -1133.8031f, -7.843f, 47.9822f;
					break;
				case 5:
					return -1137.6029f, -9.0347f, 47.8107f;
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

Vector3 func_457(var uParam0, int iParam1, int iParam2)//Position - 0x95A2
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f, 0f, 0f;
	}
	switch (iParam1)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return -1121.4823f, 210.4423f, 63.9292f;
					break;
				case 1:
					return -1111.8832f, 211.2035f, 63.844f;
					break;
				case 2:
					return -1109.5812f, 220.781f, 63.9314f;
					break;
				case 3:
					return -1117.7329f, 231.4756f, 64.5959f;
					break;
				case 4:
					return -1124.8193f, 232.4564f, 65.106f;
					break;
				case 5:
					return -1114.6022f, 228.6924f, 64.1294f;
					break;
				case 6:
					return -1124.3363f, 220.1641f, 64.0189f;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return -1324.6469f, 150.2405f, 56.9512f;
					break;
				case 1:
					return -1332.147f, 152.7218f, 56.9449f;
					break;
				case 2:
					return -1340.3395f, 165.985f, 57.0015f;
					break;
				case 3:
					return -1330.3406f, 172.5728f, 57.0822f;
					break;
				case 4:
					return -1325.275f, 173.1006f, 57.1633f;
					break;
				case 5:
					return -1337.177f, 158.5159f, 56.9107f;
					break;
				case 6:
					return -1320.5304f, 169.4781f, 56.8531f;
					break;
			}
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return -1230.481f, 103.0481f, 55.7491f;
					break;
				case 1:
					return -1234.8417f, 95.7965f, 55.6671f;
					break;
				case 2:
					return -1243.4578f, 95.5196f, 55.5717f;
					break;
				case 3:
					return -1245.1464f, 112.5895f, 55.9974f;
					break;
				case 4:
					return -1239.073f, 119.9953f, 56.4275f;
					break;
				case 5:
					return -1232.4279f, 116.2665f, 56.6504f;
					break;
				case 6:
					return -1235.9989f, 119.75f, 56.425f;
					break;
			}
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return -1101.0415f, 27.2703f, 50.1697f;
					break;
				case 1:
					return -1094.1313f, 23.785f, 50.087f;
					break;
				case 2:
					return -1087.6356f, 20.9966f, 50.0321f;
					break;
				case 3:
					return -1080.5242f, 13.8964f, 49.734f;
					break;
				case 4:
					return -1086.1053f, 4.0804f, 49.7967f;
					break;
				case 5:
					return -1097.654f, -1.5694f, 50.0125f;
					break;
				case 6:
					return -1108.6144f, -4.9012f, 49.6852f;
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return -949.3773f, -93.7449f, 39.525f;
					break;
				case 1:
					return -965.4772f, -92.9853f, 39.3605f;
					break;
				case 2:
					return -965.3192f, -101.431f, 39.4042f;
					break;
				case 3:
					return -952.4808f, -99.1808f, 39.5487f;
					break;
				case 4:
					return -958.345f, -103.7673f, 39.334f;
					break;
				case 5:
					return -949.268f, -87.9874f, 39.3694f;
					break;
				case 6:
					return -951.558f, -85.9542f, 39.2469f;
					break;
			}
			break;
		case 5:
			switch (iParam2)
			{
				case 0:
					return -1098.2764f, -107.6579f, 40.5369f;
					break;
				case 1:
					return -1106.573f, -106.9375f, 40.696f;
					break;
				case 2:
					return -1111.6543f, -121.3032f, 40.7039f;
					break;
				case 3:
					return -1102.0128f, -127.7622f, 40.69f;
					break;
				case 4:
					return -1092.9447f, -115.8245f, 40.5376f;
					break;
				case 5:
					return -1094.2567f, -122.7798f, 40.552f;
					break;
				case 6:
					return -1092.9913f, -118.4603f, 40.5422f;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return -1294.8875f, 10.1593f, 50.3758f;
					break;
				case 1:
					return -1288.8715f, 14.8418f, 49.8751f;
					break;
				case 2:
					return -1276.2704f, 11.8301f, 48.5562f;
					break;
				case 3:
					return -1283.1622f, -6.8256f, 48.6238f;
					break;
				case 4:
					return -1275.6063f, -2.029f, 48.0408f;
					break;
				case 5:
					return -1273.712f, 5.2094f, 48.184f;
					break;
				case 6:
					return -1293.3835f, 0.3131f, 49.4842f;
					break;
			}
			break;
		case 7:
			switch (iParam2)
			{
				case 0:
					return -1041.6849f, -75.4766f, 43.0439f;
					break;
				case 1:
					return -1030.3097f, -76.6724f, 43.2806f;
					break;
				case 2:
					return -1029.7913f, -88.4011f, 43.1511f;
					break;
				case 3:
					return -1041.5754f, -92.4546f, 42.8253f;
					break;
				case 4:
					return -1050.466f, -93.7612f, 42.5099f;
					break;
				case 5:
					return -1050.863f, -84.3568f, 42.5056f;
					break;
				case 6:
					return -1048.343f, -82.4877f, 42.5625f;
					break;
			}
			break;
		case 8:
			switch (iParam2)
			{
				case 0:
					return -1284.5513f, 76.0288f, 53.9062f;
					break;
				case 1:
					return -1282.6757f, 86.4323f, 53.9098f;
					break;
				case 2:
					return -1299.27f, 80.8423f, 53.911f;
					break;
				case 3:
					return -1299.1049f, 87.1486f, 53.9145f;
					break;
				case 4:
					return -1290.0995f, 74.7491f, 53.9426f;
					break;
				case 5:
					return -1292.3124f, 90.6955f, 53.9123f;
					break;
				case 6:
					return -1291.1971f, 89.2305f, 53.9061f;
					break;
			}
			break;
	}
	return 0f, 0f, 0f;
}

void func_458(var uParam0)//Position - 0xA6D3
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_5))
	{
		ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&(uParam0->f_5));
	}
}

void func_459(int iParam0)//Position - 0xAE79
{
	Global_112414.f_1 = (Global_112414.f_1 || iParam0);
}

void func_460(int iParam0)//Position - 0xB584
{
	Global_112414.f_1 = (Global_112414.f_1 - (Global_112414.f_1 && iParam0));
}

int func_461(struct<3> Param0)//Position - 0xECE
{
	struct<3> Var0;
	float fVar1;
	Var0 = { __LIB_0__::func_79(Vector(51.66f, 61.69f, -1405.69f) - Vector(51.76f, 61.61f, -1403.44f)) };
	fVar1 = __LIB_0__::func_158(Var0, -1405.69f, 61.69f, 51.66f);
	if (__LIB_0__::func_158(Param0, Var0) > fVar1)
	{
		return 1;
	}
	Var0 = { __LIB_0__::func_79(Vector(0f, -85.86f, -1167.9f) - Vector(0f, -89.1f, -1162.01f)) };
	fVar1 = __LIB_0__::func_158(Var0, Vector(0f, -89.1f, -1162.01f) - Vector(9.92f, 9.92f, 9.92f) * Var0);
	if (__LIB_0__::func_158(Param0, Var0) > fVar1)
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, -89.76f, -1193.7f) - Vector(0f, -87.41f, -1192.45f)) };
		fVar1 = __LIB_0__::func_158(Var0, Vector(39.97f, -89.76f, -1193.7f) - Vector(2.778f, 2.778f, 2.778f) * Var0);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
		if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1227.9087f, -68.76888f, 43.06714f, -1260.5995f, -50.60131f, 44.63058f, 2.74f, false, false))
		{
			return 1;
		}
	}
	else
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, -89.76f, -1193.7f) - Vector(0f, -87.41f, -1192.45f)) };
		fVar1 = __LIB_0__::func_158(Var0, Vector(39.97f, -89.76f, -1193.7f) - Vector(1.03f, 1.03f, 1.03f) * Var0);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
	}
	Var0 = { __LIB_0__::func_79(Vector(0f, -113.24f, -970.31f) - Vector(0f, -115.19f, -973.91f)) };
	fVar1 = __LIB_0__::func_158(Var0, -970.31f, -113.24f, 38.28f);
	if (__LIB_0__::func_158(Param0, Var0) > fVar1)
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, -106.46f, -948.52f) - Vector(0f, -102.2f, -951.06f)) };
		fVar1 = __LIB_0__::func_158(Var0, -948.52f, -106.46f, 42.39f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
	}
	else
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, -127.38f, -1028.62f) - Vector(0f, -129.55f, -1034.37f)) };
		fVar1 = __LIB_0__::func_158(Var0, -1028.62f, -127.38f, 39.51f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			Var0 = { __LIB_0__::func_79(Vector(0f, -125.95f, -994.29f) - Vector(0f, -94.44f, -1001.81f)) };
			fVar1 = __LIB_0__::func_158(Var0, -994.29f, -125.95f, 40.12f);
			if (__LIB_0__::func_158(Param0, Var0) > fVar1)
			{
				return 1;
			}
		}
		else
		{
			Var0 = { __LIB_0__::func_79(Vector(0f, -140.83f, -1037.99f) - Vector(0f, -131.81f, -1043.54f)) };
			fVar1 = __LIB_0__::func_158(Var0, -1037.99f, -140.83f, 42.99f);
			if (__LIB_0__::func_158(Param0, Var0) > fVar1)
			{
				return 1;
			}
		}
	}
	Var0 = { __LIB_0__::func_79(Vector(0f, 96.74f, -1047.59f) - Vector(0f, 87.45f, -1041.82f)) };
	fVar1 = __LIB_0__::func_158(Var0, -1047.59f, 96.74f, 52.25f);
	if (__LIB_0__::func_158(Param0, Var0) > fVar1)
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, 180.44f, -1094.08f) - Vector(0f, 167.17f, -1086.17f)) };
		fVar1 = __LIB_0__::func_158(Var0, -1094.08f, 180.44f, 61.49f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			Var0 = { __LIB_0__::func_79(Vector(0f, 196.78f, -1092f) - Vector(0f, 179.38f, -1163.07f)) };
			fVar1 = __LIB_0__::func_158(Var0, Vector(60.09f, 196.78f, -1092f) - Vector(3.75f, 3.75f, 3.75f) * Var0);
			if (__LIB_0__::func_158(Param0, Var0) > fVar1)
			{
				return 1;
			}
		}
		else
		{
			Var0 = { __LIB_0__::func_79(Vector(0f, 145.22f, -1069.28f) - Vector(0f, 98.02f, -1152.37f)) };
			fVar1 = __LIB_0__::func_158(Var0, -1069.28f, 145.22f, 61.6f);
			if (__LIB_0__::func_158(Param0, Var0) > fVar1)
			{
				return 1;
			}
		}
	}
	else
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, -19.35f, -967.03f) - Vector(0f, -63.01f, -1035.28f)) };
		fVar1 = __LIB_0__::func_158(Var0, -967.03f, -19.35f, 48.28f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
	}
	Var0 = { __LIB_0__::func_79(Vector(0f, 186.79f, -1274.15f) - Vector(0f, 185.87f, -1255.38f)) };
	fVar1 = __LIB_0__::func_158(Var0, -1274.15f, 186.79f, 61.97f);
	if (__LIB_0__::func_158(Param0, Var0) > fVar1)
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, 192.648f, -1326.063f) - Vector(0f, 183.78f, -1325.44f)) };
		fVar1 = __LIB_0__::func_158(Var0, -1326.063f, 192.648f, 61.76f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
	}
	else
	{
		Var0 = { __LIB_0__::func_79(Vector(0f, 226.63f, -1159.35f) - Vector(0f, 203.93f, -1152.92f)) };
		fVar1 = __LIB_0__::func_158(Var0, -1159.35f, 226.63f, 70f);
		if (__LIB_0__::func_158(Param0, Var0) > fVar1)
		{
			return 1;
		}
	}
	return 0;
}

bool func_462(struct<3> Param0)//Position - 0x14FD
{
	return __LIB_12__::func_770(Param0, -1215.93f, -15.72f, 45.21f, 2.5f, 1);
}

void func_463(int iParam0, float fParam1, var uParam2, var uParam3)//Position - 0x6745
{
	if (__LIB_0__::func_114())
	{
		if (iParam0 <= 5)
		{
			*fParam1 = 47.24f;
			*uParam2 = 0.2f;
			*uParam3 = 0.09f;
		}
		else if (iParam0 > 5 && iParam0 <= 13)
		{
			*fParam1 = 53.367f;
			*uParam2 = 0.2f;
			*uParam3 = 0f;
		}
		else if (iParam0 > 13 && iParam0 <= 18)
		{
			*fParam1 = 52.199f;
			*uParam2 = 0.2f;
			*uParam3 = -0.07f;
		}
		else
		{
			*fParam1 = 70.53f;
			*uParam2 = 0.35f;
			*uParam3 = 0.5f;
		}
	}
	else if (iParam0 <= 5)
	{
		*fParam1 = 46.23f;
		*uParam2 = 0.2f;
		*uParam3 = 0.09f;
	}
	else if (iParam0 > 5 && iParam0 <= 13)
	{
		*fParam1 = 52.25f;
		*uParam2 = 0.2f;
		*uParam3 = 0f;
	}
	else if (iParam0 > 13 && iParam0 <= 18)
	{
		*fParam1 = 51.91f;
		*uParam2 = 0.15f;
		*uParam3 = -0.07f;
	}
	else
	{
		*fParam1 = 70.53f;
		*uParam2 = 0.35f;
		*uParam3 = 0.5f;
	}
}

int func_464(var uParam0, int iParam1)//Position - 0xB225
{
	int iVar0;
	int iVar1;
	iVar1 = *uParam0;
	iVar0 = 0;
	while (iVar0 < iVar1)
	{
		if ((*uParam0)[iVar0] == 0)
		{
			__LIB_18__::func_968(uParam0[iVar0], iParam1);
			uParam0->f_15++;
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_465(var uParam0, float fParam1)//Position - 0x6076
{
	if (__LIB_14__::func_803(uParam0, fParam1))
	{
		__LIB_1__::func_377(uParam0);
		return 1;
	}
	return 0;
}

float func_466()//Position - 0x575B
{
	int iVar0;
	float fVar1;
	STATS::STAT_GET_INT(__LIB_16__::func_751(__LIB_0__::func_683(), 2), &iVar0, -1);
	fVar1 = (IntToFloat(iVar0) / 100f);
	fVar1 = (1f - fVar1);
	return fVar1;
}

void func_467(var uParam0, int iParam1)//Position - 0x953
{
	uParam0->f_157 = iParam1;
}

void func_468(var uParam0, int iParam1)//Position - 0x961
{
	uParam0->f_158 = iParam1;
}

void func_469(var uParam0, struct<3> Param1)//Position - 0x96F
{
	__LIB_36__::func_417(&(uParam0->f_15[uParam0->f_157 /*34*/]), Param1);
}

void func_470(var uParam0, int iParam1, bool bParam2)//Position - 0x9BF
{
	if (bParam2)
	{
	}
	*uParam0 = iParam1;
}

int func_471(var uParam0, int iParam1, int iParam2)//Position - 0xA48
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_36__::func_410(&(uParam0->f_15[iParam1 /*34*/]), iParam2);
}

int func_472(var uParam0)//Position - 0xA82
{
	if (uParam0->f_157 < 0)
	{
		return -1;
	}
	return __LIB_0__::func_404(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

var func_473(var uParam0, int iParam1)//Position - 0x14ED
{
	return uParam0->f_152[iParam1];
}

int func_474(var uParam0, int iParam1)//Position - 0x14FD
{
	return uParam0->f_15[iParam1 /*34*/].f_31;
}

void func_475(var uParam0, int iParam1)//Position - 0x2490
{
	__LIB_36__::func_412(&(uParam0->f_15[uParam0->f_157 /*34*/]), (__LIB_36__::func_407(&(uParam0->f_15[uParam0->f_157 /*34*/])) + iParam1));
}

void func_476(var uParam0)//Position - 0x25C4
{
	uParam0->f_23 = uParam0->f_24;
}

void func_477(var uParam0, float fParam1)//Position - 0x25D4
{
	__LIB_36__::func_413(&(uParam0->f_15[uParam0->f_157 /*34*/]), fParam1);
}

int func_478(var uParam0)//Position - 0x25EC
{
	return __LIB_0__::func_864(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_479(var uParam0)//Position - 0x4E57
{
	return __LIB_22__::func_687(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

bool func_480(var uParam0, int iParam1)//Position - 0x59A1
{
	return __LIB_36__::func_410(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

float func_481(int iParam0, int iParam1, bool bParam2)//Position - 0x5D32
{
	struct<3> Var0;
	struct<3> Var1;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	}
	else
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
	}
	else
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, false) };
	}
	if (bParam2)
	{
		return SYSTEM::VDIST2(Var0, Var1);
	}
	return (SYSTEM::POW((Var0.f_0 - Var1.f_0), 2f) + SYSTEM::POW((Var0.f_1 - Var1.f_1), 2f));
}

int func_482(var uParam0, int iParam1)//Position - 0x5E09
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return -1;
	}
	return __LIB_0__::func_404(&(uParam0->f_15[iParam1 /*34*/]));
}

Vector3 func_483(struct<3> Param0, struct<3> Param1)//Position - 0x64E3
{
	struct<3> Var0;
	Var0 = { Param0 - __LIB_36__::func_441(Param0, Param1) };
	return Var0;
}

void func_484(var uParam0, int iParam1)//Position - 0x6962
{
	__LIB_11__::func_573(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

int func_485(struct<3> Param0, struct<2> Param1, var uParam2, var* uParam3, float* fParam4)//Position - 0x6C01
{
	if (!PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(Param0, uParam3, fParam4, 1, 3f, 0f))
	{
		return 0;
	}
	if (MISC::ABSF((MISC::GET_HEADING_FROM_VECTOR_2D((Param1.f_0 - Param0.f_0), (Param1.f_1 - Param0.f_1)) - *fParam4)) > 90f)
	{
		*fParam4 = (*fParam4 + 180f);
	}
	return 1;
}

int func_486(var uParam0, int iParam1)//Position - 0x6C54
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_9__::func_550(&(uParam0->f_15[iParam1 /*34*/]));
}

Vector3 func_487(var uParam0, int iParam1)//Position - 0x6C80
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0f, 0f, 0f;
	}
	return __LIB_7__::func_147(&(uParam0->f_15[iParam1 /*34*/]));
}

void func_488(var uParam0, struct<3> Param1)//Position - 0x6D72
{
	__LIB_36__::func_416(&(uParam0->f_15[uParam0->f_157 /*34*/]), Param1);
}

float func_489(var uParam0)//Position - 0x8801
{
	return __LIB_36__::func_408(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_490(struct<3> Param0, float fParam1)//Position - 0x8877
{
	int iVar0;
	if (__LIB_0__::func_490(Param0, 0f, 0f, 0f, 1056964608, 0))
	{
		return 0;
	}
	iVar0 = OBJECT::CREATE_OBJECT(joaat("prop_golf_ball"), Param0, true, true, false);
	OBJECT::SET_OBJECT_IS_SPECIAL_GOLFBALL(iVar0, true);
	ENTITY::SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(iVar0, false);
	ENTITY::SET_ENTITY_HEADING(iVar0, fParam1);
	if (bLocal_0)
	{
	}
	return iVar0;
}

Vector3 func_491(var uParam0)//Position - 0x88E0
{
	return __LIB_7__::func_147(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_492(var* uParam0, float fParam1, float fParam2)//Position - 0x89C4
{
	float fVar0;
	if (MISC::GET_GROUND_Z_FOR_3D_COORD(*uParam0 + Vector(fParam2, 0f, 0f), &fVar0, false, false))
	{
		if (MISC::ABSF((uParam0->f_2 - fVar0)) < fParam1)
		{
			uParam0->f_2 = fVar0;
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

int func_493(var uParam0, int iParam1)//Position - 0x8E05
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_0__::func_864(&(uParam0->f_15[iParam1 /*34*/]));
}

int func_494(var uParam0, int iParam1)//Position - 0x9041
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_36__::func_407(&(uParam0->f_15[iParam1 /*34*/]));
}

int func_495(var uParam0)//Position - 0x943E
{
	return uParam0->f_157;
}

void func_496(var uParam0)//Position - 0x9B53
{
	if (__LIB_36__::func_410(uParam0, 128))
	{
		STREAMING::CLEAR_FOCUS();
		__LIB_36__::func_455(uParam0, 128);
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_3))
	{
		if (STREAMING::IS_ENTITY_FOCUS(uParam0->f_3))
		{
			STREAMING::CLEAR_FOCUS();
		}
		if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(uParam0->f_3))
		{
			OBJECT::DELETE_OBJECT(&(uParam0->f_3));
		}
	}
	uParam0->f_3 = 0;
}

int func_497(var uParam0)//Position - 0x9BC6
{
	if (uParam0->f_157 < 0)
	{
		return 0;
	}
	return __LIB_9__::func_550(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

void func_498(var uParam0, int iParam1, int iParam2)//Position - 0x9C54
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return;
	}
	__LIB_36__::func_420(&(uParam0->f_15[iParam1 /*34*/]), iParam2);
}

int func_499(var uParam0)//Position - 0x9C81
{
	return uParam0->f_156;
}

void func_500(var uParam0, int iParam1, int iParam2)//Position - 0x9D7E
{
	uParam0->f_152[iParam2] = iParam1;
}

int func_501(int iParam0, float fParam1)//Position - 0x9E82
{
	if (MISC::GET_RANDOM_FLOAT_IN_RANGE(0f, 1f) < fParam1)
	{
		*iParam0 = 4;
		return joaat("A_M_Y_Golfer_01");
	}
	*iParam0 = 5;
	return joaat("A_F_Y_Golfer_01");
}

void func_502(var uParam0, int iParam1)//Position - 0x9F2F
{
	uParam0->f_165 = iParam1;
}

void func_503(var uParam0, int iParam1, int iParam2)//Position - 0x9F3D
{
	uParam0->f_167[iParam2] = iParam1;
}

void func_504(var uParam0, var uParam1)//Position - 0x9F4F
{
	uParam0->f_156 = uParam1;
}

bool func_505(int iParam0)//Position - 0x9F5D
{
	return (Global_112414.f_1 && iParam0) != 0;
}

int func_506(var uParam0)//Position - 0x9F98
{
	return uParam0->f_158;
}

bool func_507(int iParam0)//Position - 0x9FA4
{
	return (iParam0 > 6 && iParam0 < 18);
}

void func_508(var uParam0)//Position - 0xA3C8
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		iVar1 = __LIB_36__::func_428(uParam0, iVar0);
		if (ENTITY::DOES_ENTITY_EXIST(iVar1) && ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar1))
		{
			ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&iVar1);
			OBJECT::DELETE_OBJECT(&iVar1);
		}
		iVar0++;
	}
}

int func_509(var uParam0)//Position - 0x59B
{
	if ((__LIB_0__::func_404(uParam0) == 9 || __LIB_0__::func_404(uParam0) == 10) || __LIB_36__::func_410(uParam0, 16777216))
	{
		return 1;
	}
	return 0;
}

void func_510(var uParam0, struct<3> Param1)//Position - 0x5F0
{
	__LIB_36__::func_415(&(uParam0->f_15[uParam0->f_157 /*34*/]), Param1);
}

int func_511(var uParam0)//Position - 0x147E
{
	return __LIB_10__::func_268(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_512(var uParam0)//Position - 0x1BB6
{
	return __LIB_36__::func_422(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

void func_513(var uParam0, int iParam1)//Position - 0x2413
{
	__LIB_36__::func_455(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

void func_514(var uParam0, int iParam1)//Position - 0x2443
{
	__LIB_36__::func_420(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

int func_515(var uParam0)//Position - 0x246E
{
	return __LIB_36__::func_407(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

void func_516(var uParam0, float fParam1)//Position - 0x255E
{
	__LIB_36__::func_423(&(uParam0->f_15[uParam0->f_157 /*34*/]), fParam1);
}

void func_517(var uParam0)//Position - 0x2584
{
	__LIB_36__::func_424(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

Vector3 func_518(var uParam0)//Position - 0x2F74
{
	return __LIB_7__::func_85(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_519(var uParam0)//Position - 0x305F
{
	return __LIB_36__::func_426(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

float func_520(var uParam0)//Position - 0x3D92
{
	return __LIB_36__::func_393(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

var func_521(bool bParam0)//Position - 0x3EAB
{
	return __LIB_36__::func_395();
	if (!bParam0)
	{
		return __LIB_36__::func_395();
	}
	return __LIB_36__::func_394();
}

char* func_522(var uParam0, var uParam1, bool bParam2, int iParam3)//Position - 0x3EDA
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_22__::func_687(uParam1);
	iVar1 = __LIB_36__::func_432(uParam0, iVar0);
	if (iVar1 <= 5 && !bParam2)
	{
		return "Wood_";
	}
	else if ((iVar1 > 5 && iVar1 <= 13) && !bParam2)
	{
		return "Iron_";
	}
	else if ((iVar1 > 13 && iVar1 <= 18) && iParam3)
	{
		return "Wedge_";
	}
	else if (iVar1 == 19)
	{
		return "Putt_";
	}
	if (bParam2)
	{
		return "Swing_";
	}
	return "";
}

Vector3 func_523(var uParam0)//Position - 0x4B4B
{
	return __LIB_1__::func_215(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_524(var uParam0)//Position - 0x4B6F
{
	return __LIB_1__::func_44(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

void func_525(var uParam0, float fParam1)//Position - 0x5B6B
{
	__LIB_36__::func_439(&(uParam0->f_15[uParam0->f_157 /*34*/]), fParam1);
}

void func_526(var uParam0, float fParam1)//Position - 0x5B96
{
	if (fParam1 > 100f)
	{
		fParam1 = 100f;
	}
	else if (fParam1 < 5f)
	{
		fParam1 = 5f;
	}
	__LIB_36__::func_440(&(uParam0->f_15[uParam0->f_157 /*34*/]), fParam1);
}

var func_527(var uParam0)//Position - 0x5C3E
{
	return __LIB_15__::func_243(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_528(var uParam0)//Position - 0x5CFA
{
	return __LIB_11__::func_576(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

var func_529(var uParam0)//Position - 0x5EFA
{
	return __LIB_1__::func_285(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

int func_530(var uParam0, var uParam1)//Position - 0x75F5
{
	int iVar0;
	__LIB_36__::func_409(uParam0);
	iVar0 = OBJECT::CREATE_OBJECT_NO_OFFSET(__LIB_36__::func_448(uParam1, __LIB_22__::func_687(uParam0)), __LIB_7__::func_147(uParam0), false, true, false);
	return iVar0;
}

void func_531(var uParam0, int iParam1)//Position - 0x8770
{
	__LIB_36__::func_453(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

void func_532(var uParam0, var uParam1)//Position - 0x8851
{
	__LIB_1__::func_273(&(uParam0->f_15[uParam0->f_157 /*34*/]), uParam1);
}

int func_533(var uParam0)//Position - 0x9BA4
{
	return __LIB_1__::func_286(&(uParam0->f_15[uParam0->f_157 /*34*/]));
}

void func_534(var uParam0, int iParam1)//Position - 0x9C00
{
	__LIB_36__::func_452(&(uParam0->f_15[uParam0->f_157 /*34*/]), iParam1);
}

void func_535(var uParam0, int iParam1, int iParam2)//Position - 0x9E47
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return;
	}
	__LIB_11__::func_357(&(uParam0->f_15[iParam1 /*34*/]), iParam2);
}

void func_536(var uParam0, int iParam1, int iParam2)//Position - 0x9EAF
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return;
	}
	__LIB_15__::func_244(&(uParam0->f_15[iParam1 /*34*/]), iParam2);
}

int func_537(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x9581
{
	int iVar0;
	int iVar1;
	if (bParam3)
	{
		if (!bLocal_236)
		{
			iLocal_237 = ENTITY::GET_ENTITY_HEALTH(iParam0);
			bLocal_236 = true;
		}
		iLocal_238 = ENTITY::GET_ENTITY_HEALTH(iParam0);
		iLocal_239 = (iLocal_237 - iLocal_238);
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, iVar0, true))
			{
				if (IntToFloat(iLocal_239) > 100f)
				{
					return 1;
				}
			}
		}
		if (bLocal_236)
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
			{
				if (IntToFloat(iLocal_239) > 100f)
				{
					return 1;
				}
			}
		}
	}
	else if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
	{
		return 1;
	}
	if (!bParam3)
	{
		iVar1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (!ENTITY::IS_ENTITY_DEAD(iVar1, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, iVar1, true))
			{
				return 1;
			}
		}
	}
	if (bParam4)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (PED::IS_PED_BEING_JACKED(iParam0))
			{
				if (PED::GET_PEDS_JACKER(iParam0) == PLAYER::PLAYER_PED_ID())
				{
					return 1;
				}
			}
		}
	}
	if (bParam5)
	{
		if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()))
		{
			if (ENTITY::IS_ENTITY_AT_COORD(iParam0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 10f, 10f, 10f, false, true, 0))
			{
				if (PLAYER::HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(PLAYER::PLAYER_ID()))
				{
					return 1;
				}
			}
		}
	}
	if (PED::IS_PED_PERFORMING_STEALTH_KILL(PLAYER::PLAYER_PED_ID()))
	{
		if (PED::WAS_PED_KILLED_BY_STEALTH(iParam0))
		{
			return 1;
		}
	}
	if (__LIB_14__::func_536(PLAYER::PLAYER_PED_ID(), iParam0))
	{
		return 1;
	}
	if (bParam2)
	{
		if (PED::IS_PED_RAGDOLL(iParam0) && __LIB_14__::func_556(iParam0, 1) < 1.5f)
		{
			return 1;
		}
		else if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
		{
			if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), PED::GET_VEHICLE_PED_IS_IN(iParam0, false)))
			{
				return 1;
			}
		}
		else if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), iParam0))
		{
			return 1;
		}
		if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
		{
			if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam1, PLAYER::PLAYER_PED_ID(), true))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_538(var uParam0)//Position - 0x9FBA
{
	__LIB_36__::func_464(uParam0, 1);
	__LIB_36__::func_464(uParam0, 3);
	__LIB_36__::func_464(uParam0, 5);
	__LIB_36__::func_464(uParam0, 7);
	__LIB_36__::func_464(uParam0, 8);
	__LIB_36__::func_464(uParam0, 9);
	__LIB_36__::func_464(uParam0, 10);
	__LIB_36__::func_464(uParam0, 11);
	__LIB_36__::func_464(uParam0, 12);
	__LIB_36__::func_464(uParam0, 13);
	__LIB_36__::func_464(uParam0, 14);
	__LIB_36__::func_464(uParam0, 16);
	__LIB_36__::func_464(uParam0, 17);
	__LIB_36__::func_464(uParam0, 19);
}

float func_539(var uParam0, int iParam1)//Position - 0x5422
{
	float fVar0;
	fVar0 = uParam0->f_15;
	if (iParam1 && (__LIB_0__::func_864(uParam0) == 1 || __LIB_0__::func_864(uParam0) == 2))
	{
		fVar0 = (fVar0 - (__LIB_36__::func_466() * 10f));
		fVar0 = __LIB_0__::func_373(fVar0 < 5f, 5f, fVar0);
	}
	return fVar0;
}

int func_540(var uParam0, int iParam1)//Position - 0x2310
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return 0;
	}
	return uParam0->f_1[iParam1 /*4*/];
}

void func_541(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4)//Position - 0x2F09
{
	if (iParam3 < 0)
	{
		return;
	}
	if (HUD::GET_LENGTH_OF_LITERAL_STRING(sParam1) == 0)
	{
		return;
	}
	uParam0->f_2[iParam3] = sParam1;
	switch (iParam3)
	{
		case 0:
			uParam0->f_11[0] = sParam2;
			uParam0->f_11[1] = 0;
			uParam0->f_11[2] = 0;
			uParam0->f_11[3] = 0;
			uParam0->f_44[0] = iParam4;
			uParam0->f_44[1] = 363;
			uParam0->f_44[2] = 363;
			uParam0->f_44[3] = 363;
			break;
		case 1:
			uParam0->f_11[4] = sParam2;
			uParam0->f_11[5] = 0;
			uParam0->f_11[6] = 0;
			uParam0->f_11[7] = 0;
			uParam0->f_44[4] = iParam4;
			uParam0->f_44[5] = 363;
			uParam0->f_44[6] = 363;
			uParam0->f_44[7] = 363;
			break;
		case 2:
			uParam0->f_11[8] = sParam2;
			uParam0->f_11[9] = 0;
			uParam0->f_11[10] = 0;
			uParam0->f_11[11] = 0;
			uParam0->f_44[8] = iParam4;
			uParam0->f_44[9] = 363;
			uParam0->f_44[10] = 363;
			uParam0->f_44[11] = 363;
			break;
		case 3:
			uParam0->f_11[12] = sParam2;
			uParam0->f_11[13] = 0;
			uParam0->f_11[14] = 0;
			uParam0->f_11[15] = 0;
			uParam0->f_44[12] = iParam4;
			uParam0->f_44[13] = 363;
			uParam0->f_44[14] = 363;
			uParam0->f_44[15] = 363;
			break;
		case 4:
			uParam0->f_11[16] = sParam2;
			uParam0->f_11[17] = 0;
			uParam0->f_11[18] = 0;
			uParam0->f_11[19] = 0;
			uParam0->f_44[16] = iParam4;
			uParam0->f_44[17] = 363;
			uParam0->f_44[18] = 363;
			uParam0->f_44[19] = 363;
			break;
		case 5:
			uParam0->f_11[20] = sParam2;
			uParam0->f_11[21] = 0;
			uParam0->f_11[22] = 0;
			uParam0->f_11[23] = 0;
			uParam0->f_44[20] = iParam4;
			uParam0->f_44[21] = 363;
			uParam0->f_44[22] = 363;
			uParam0->f_44[23] = 363;
			break;
		case 6:
			uParam0->f_11[24] = sParam2;
			uParam0->f_11[25] = 0;
			uParam0->f_11[26] = 0;
			uParam0->f_11[27] = 0;
			uParam0->f_44[24] = iParam4;
			uParam0->f_44[25] = 363;
			uParam0->f_44[26] = 363;
			uParam0->f_44[27] = 363;
			break;
		case 7:
			uParam0->f_11[28] = sParam2;
			uParam0->f_11[29] = 0;
			uParam0->f_11[30] = 0;
			uParam0->f_11[31] = 0;
			uParam0->f_44[28] = iParam4;
			uParam0->f_44[29] = 363;
			uParam0->f_44[30] = 363;
			uParam0->f_44[31] = 363;
			break;
	}
}

void func_542(var uParam0, char* sParam1, char* sParam2, bool bParam3, bool bParam4, int iParam5, int iParam6)//Position - 0x3211
{
	int iVar0;
	if (*uParam0 == 0)
	{
		*uParam0 = GRAPHICS::REQUEST_SCALEFORM_MOVIE_INSTANCE("instructional_buttons");
	}
	iVar0 = 0;
	while (iVar0 < 32)
	{
		uParam0->f_11[iVar0] = 0;
		uParam0->f_77[iVar0] = "";
		uParam0->f_44[iVar0] = 363;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 8)
	{
		uParam0->f_2[iVar0] = "";
		iVar0++;
	}
	uParam0->f_2[0] = sParam1;
	uParam0->f_11[0] = sParam2;
	uParam0->f_44[0] = iParam6;
	uParam0->f_1 = 0;
	if (bParam3)
	{
		__LIB_0__::func_989(&(uParam0->f_1), 32);
	}
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam0))
	{
		__LIB_0__::func_989(&(uParam0->f_1), 1);
		if (bParam4)
		{
			GRAPHICS::SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(*uParam0, true);
		}
	}
	if (MISC::IS_PC_VERSION())
	{
		uParam0->f_111 = iParam5;
	}
}

bool func_543(int* iParam0, int iParam1)//Position - 0x6D967
{
	return (iParam0->f_531 && iParam1) != 0;
}

void func_544(int* iParam0, int iParam1)//Position - 0x6E2A6
{
	iParam0->f_531 = (iParam0->f_531 - (iParam0->f_531 && iParam1));
}

struct<8> func_545(struct<3> Param0)//Position - 0x6E330
{
	struct<8> Var0;
	StringCopy(&Var0, "<< ", 32);
	StringIntConCat(&Var0, SYSTEM::CEIL(Param0.f_0), 32);
	StringConCat(&Var0, ", ", 32);
	StringIntConCat(&Var0, SYSTEM::CEIL(Param0.f_1), 32);
	StringConCat(&Var0, ", ", 32);
	StringIntConCat(&Var0, SYSTEM::CEIL(Param0.f_2), 32);
	StringConCat(&Var0, " >>", 32);
	return Var0;
}

Vector3 func_546(int iParam0, int iParam1, var uParam2, float fParam3)//Position - 0x6E3C7
{
	switch (iParam0)
	{
		case 0:
			if (iParam1 == 0)
			{
				*uParam2 = { 4.6807f, 0f, 98.5813f };
				*fParam3 = 40.5269f;
				return -1094.3793f, 158.8722f, 63.4781f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { 3.2454f, 0f, 98.5813f };
				*fParam3 = 40.5269f;
				return -1095.311f, 158.7316f, 63.5552f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { -3.3433f, 0f, 78.1312f };
				*fParam3 = 37.5666f;
				return -1165.5881f, 136.7941f, 71.5705f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { -3.4177f, 0f, 89.8306f };
				*fParam3 = 37.5666f;
				return -1168.8252f, 147.0191f, 71.3499f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { 3.7196f, 0f, -113.3335f };
				*fParam3 = 35.4314f;
				return -1335.8735f, 169.6272f, 59.6483f;
			}
			else
			{
				*uParam2 = { 3.7196f, 0f, -113.3335f };
				*fParam3 = 35.4314f;
				return -1333.84f, 168.8565f, 59.7896f;
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				*uParam2 = { 4.4568f, 0f, -87.8237f };
				*fParam3 = 45.9116f;
				return -1322.8126f, 126.5154f, 57.9224f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { 4.4568f, 0f, -87.8237f };
				*fParam3 = 45.9116f;
				return -1321.8717f, 126.5511f, 57.9958f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { 5.1447f, 0f, 33.2004f };
				*fParam3 = 45.9116f;
				return -1251.6779f, 94.2465f, 57.9286f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { 5.1447f, 0f, 33.2004f };
				*fParam3 = 45.9116f;
				return -1249.621f, 95.5924f, 57.9286f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { -0.4914f, 0f, -174.7261f };
				*fParam3 = 45.9116f;
				return -1241.1838f, 120.3595f, 58.2548f;
			}
			else
			{
				*uParam2 = { -0.4914f, 0f, -174.7261f };
				*fParam3 = 45.9116f;
				return -1241.0734f, 119.1704f, 58.2447f;
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				*uParam2 = { -0.7562f, 0f, -124.5854f };
				*fParam3 = 38.4834f;
				return -1228.7203f, 114.3806f, 58.9171f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { -0.7562f, 0f, -124.5854f };
				*fParam3 = 38.4834f;
				return -1227.9462f, 113.8469f, 58.9047f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { -0.02f, 0f, 64.9655f };
				*fParam3 = 34.9358f;
				return -1097.9763f, 46.7093f, 59.8762f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { 0.3494f, 0f, 73.9477f };
				*fParam3 = 34.9358f;
				return -1097.326f, 52.7992f, 59.8767f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { -0.8136f, 0f, -81.5381f };
				*fParam3 = 34.9358f;
				return -1104.9528f, 4.2624f, 51.5391f;
			}
			else
			{
				*uParam2 = { -0.8136f, 0f, -81.5381f };
				*fParam3 = 34.9358f;
				return -1103.7354f, 4.4436f, 51.5216f;
			}
			break;
		case 3:
			if (iParam1 == 0)
			{
				*uParam2 = { -0.6096f, 0f, -170.001f };
				*fParam3 = 44.7168f;
				return -1095.6362f, 80.3156f, 55.6221f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { -0.6096f, 0f, -170.001f };
				*fParam3 = 44.7168f;
				return -1095.5004f, 79.5601f, 55.6139f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { -3.0396f, 0f, -138.2854f };
				*fParam3 = 39.9005f;
				return -1082.9509f, 28.7458f, 55.7276f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { -3.0396f, 0f, -138.2854f };
				*fParam3 = 39.9005f;
				return -1081.2046f, 26.7871f, 55.5883f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { 4.9468f, 0f, 30.4095f };
				*fParam3 = 39.9005f;
				return -952.7022f, -109.9683f, 42.3249f;
			}
			else
			{
				*uParam2 = { 4.9468f, 0f, 30.4095f };
				*fParam3 = 39.9005f;
				return -951.5651f, -109.3009f, 42.3249f;
			}
			break;
		case 4:
			if (iParam1 == 0)
			{
				*uParam2 = { 2.4594f, 0f, 87.7383f };
				*fParam3 = 50.8481f;
				return -977.3425f, -103.2089f, 40.9894f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { 2.4594f, 0f, 87.7383f };
				*fParam3 = 50.8481f;
				return -978.0359f, -103.1816f, 41.0192f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { -2.1647f, 0f, -65.6143f };
				*fParam3 = 41.7968f;
				return -1078.7642f, -131.8416f, 45.7591f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { -2.1647f, 0f, -65.6143f };
				*fParam3 = 41.7968f;
				return -1079.3359f, -130.5815f, 45.7591f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { 1.3729f, 0f, -119.3426f };
				*fParam3 = 41.7968f;
				return -1108.5283f, -109.6968f, 42.3521f;
			}
			else
			{
				*uParam2 = { 1.3729f, 0f, -119.3426f };
				*fParam3 = 41.7968f;
				return -1107.8715f, -110.0659f, 42.3702f;
			}
			break;
		case 5:
			if (iParam1 == 0)
			{
				*uParam2 = { 1.8288f, 0f, 55.9156f };
				*fParam3 = 49.0568f;
				return -1107.509f, -109.7506f, 43.3216f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { 1.8288f, 0f, 55.9156f };
				*fParam3 = 49.0568f;
				return -1108.1251f, -109.3343f, 43.3453f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { 2.7417f, 0f, 64.1222f };
				*fParam3 = 49.0568f;
				return -1154.3723f, -73.2358f, 48.3704f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { 2.7417f, 0f, 64.1222f };
				*fParam3 = 49.0568f;
				return -1155.0842f, -74.7036f, 48.3704f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { -2.1787f, 0f, -142.5463f };
				*fParam3 = 43.7116f;
				return -1297.5459f, 19.3382f, 52.594f;
			}
			else
			{
				*uParam2 = { -2.1787f, 0f, -142.5463f };
				*fParam3 = 43.7116f;
				return -1296.7295f, 18.2717f, 52.5428f;
			}
			break;
		case 6:
			if (iParam1 == 0)
			{
				*uParam2 = { -3.8509f, 0f, -129.3497f };
				*fParam3 = 48.3305f;
				return -1281.2493f, 45.1062f, 52.0434f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { -3.8509f, 0f, -129.3497f };
				*fParam3 = 48.3305f;
				return -1280.5311f, 44.5174f, 51.9809f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { 4.4008f, 0f, 67.0328f };
				*fParam3 = 39.9305f;
				return -1085.599f, -62.8286f, 48.9953f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { 4.4008f, 0f, 63.0801f };
				*fParam3 = 39.9305f;
				return -1087.0726f, -66.1035f, 48.9953f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { 1.5572f, 0f, 47.0931f };
				*fParam3 = 39.9305f;
				return -1032.4058f, -86.9101f, 43.9735f;
			}
			else
			{
				*uParam2 = { 1.5572f, 0f, 47.0931f };
				*fParam3 = 39.9305f;
				return -1032.9202f, -86.4627f, 43.9919f;
			}
			break;
		case 7:
			if (iParam1 == 0)
			{
				*uParam2 = { -0.9458f, 0f, 63.0482f };
				*fParam3 = 43.6572f;
				return -1125.9897f, -5.9281f, 50.1341f;
			}
			else if (iParam1 == 1)
			{
				*uParam2 = { -0.9458f, 0f, 63.0482f };
				*fParam3 = 43.6572f;
				return -1126.6157f, -5.6096f, 50.1225f;
			}
			else if (iParam1 == 2)
			{
				*uParam2 = { -0.6997f, 0f, -117.3206f };
				*fParam3 = 46.3961f;
				return -1268.4615f, 86.2135f, 60.3628f;
			}
			else if (iParam1 == 3)
			{
				*uParam2 = { -0.6997f, 0f, -117.3206f };
				*fParam3 = 46.3961f;
				return -1264.1373f, 83.9794f, 60.3033f;
			}
			else if (iParam1 == 4)
			{
				*uParam2 = { 0.561f, 0f, 110.863f };
				*fParam3 = 37.8122f;
				return -1274.6261f, 85.7493f, 55.9815f;
			}
			else
			{
				*uParam2 = { 0.561f, 0f, 110.863f };
				*fParam3 = 37.8122f;
				return -1276.2941f, 85.1135f, 55.999f;
			}
			break;
		default:
			break;
	}
	return 0f, 0f, 0f;
}

int func_547(var uParam0)//Position - 0x6ED3C
{
	if (CAM::DOES_CAM_EXIST(*uParam0))
	{
		if (CAM::IS_CAM_ACTIVE(*uParam0))
		{
			return 1;
		}
	}
	return 0;
}

void func_548(var uParam0, var uParam1, bool bParam2)//Position - 0x6EDC7
{
	if (bParam2)
	{
	}
	*uParam0 = uParam1;
}

void func_549(int* iParam0, int iParam1)//Position - 0x6EDD9
{
	iParam0->f_115 = (iParam0->f_115 - (iParam0->f_115 && iParam1));
}

void func_550(int iParam0)//Position - 0x6EF58
{
	if (iParam0 == 1)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "GOLF_HUD_HOLE_IN_ONE_MASTER", 0, true);
	}
	else if (iParam0 == 2 || iParam0 == 3)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "GOLF_EAGLE", "HUD_AWARDS", true);
	}
	else if (iParam0 == 4)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "GOLF_BIRDIE", "HUD_AWARDS", true);
	}
	else if ((iParam0 == 15 || iParam0 == 13) || iParam0 == 14)
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "GOLF_NEW_RECORD", "HUD_AWARDS", true);
	}
	else
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "OTHER_TEXT", "HUD_AWARDS", true);
	}
}

void func_551(bool bParam0, int iParam1)//Position - 0x6F576
{
	if (MISC::IS_PC_VERSION())
	{
		if (bParam0)
		{
			if (iParam1 != 363)
			{
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
			}
			else
			{
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
			}
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
		}
	}
}

void func_552(int* iParam0, int iParam1)//Position - 0x6F82F
{
	iParam0->f_115 = (iParam0->f_115 || iParam1);
}

void func_553(int* iParam0, int iParam1)//Position - 0x6F9CE
{
	iParam0->f_120 = (iParam0->f_120 || iParam1);
}

bool func_554(int* iParam0, int iParam1)//Position - 0x6F9E1
{
	return (iParam0->f_120 && iParam1) != 0;
}

int func_555(var uParam0, int iParam1)//Position - 0x6F9F2
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return 0;
	}
	return uParam0->f_1[iParam1 /*4*/].f_3;
}

Vector3 func_556(int iParam0)//Position - 0x701CA
{
	switch (iParam0)
	{
		case 0:
			return -1114.121f, 220.789f, 63.78f;
			break;
		case 1:
			return -1322.07f, 158.77f, 56.69f;
			break;
		case 2:
			return -1237.419f, 112.988f, 56.086f;
			break;
		case 3:
			return -1096.541f, 7.848f, 49.63f;
			break;
		case 4:
			return -957.386f, -90.412f, 39.161f;
			break;
		case 5:
			return -1103.516f, -115.163f, 40.444f;
			break;
		case 6:
			return -1290.632f, 2.754f, 49.217f;
			break;
		case 7:
			return -1034.944f, -83.144f, 42.919f;
			break;
		case 8:
			return -1294.775f, 83.51f, 53.804f;
			break;
	}
	return 0f, 0f, 0f;
}

void func_557(int iParam0, float fParam1, float fParam2)//Position - 0x704CE
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "SWING_METER_SET_FILL");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

struct<4> func_558(int iParam0, int iParam1, var uParam2)//Position - 0x71B13
{
	struct<4> Var0;
	if (iParam0 != iParam1)
	{
		if (iParam0 < iParam1)
		{
			*uParam2 = 18;
			StringCopy(&Var0, "-", 16);
		}
		else
		{
			*uParam2 = 6;
			StringCopy(&Var0, "+", 16);
		}
		StringIntConCat(&Var0, MISC::ABSI((iParam0 - iParam1)), 16);
	}
	else
	{
		*uParam2 = 2;
		StringCopy(&Var0, "E", 16);
	}
	return Var0;
}

int func_559(int iParam0, int iParam1, int iParam2)//Position - 0x71B68
{
	int iVar0;
	if (iParam2 == iParam1)
	{
		return 0;
	}
	iVar0 = 64;
	iVar0 = SYSTEM::SHIFT_LEFT(iVar0, iParam0 * 2);
	if (iParam1 == 1)
	{
	}
	else if (iParam1 < iParam2)
	{
		iVar0 = SYSTEM::SHIFT_LEFT(iVar0, 1);
	}
	else
	{
		iVar0 = (iVar0 || SYSTEM::SHIFT_LEFT(iVar0, 1));
	}
	return iVar0;
}

bool func_560(var uParam0, int iParam1)//Position - 0x71BB5
{
	return (uParam0->f_640 <= iParam1 && iParam1 <= uParam0->f_641);
}

int func_561(var uParam0, int iParam1)//Position - 0x71FA6
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_1__::func_286(&(uParam0->f_15[iParam1 /*74*/]));
}

Vector3 func_562(var uParam0, int iParam1)//Position - 0x72B8D
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0f, 0f, 0f;
	}
	return __LIB_7__::func_147(&(uParam0->f_15[iParam1 /*74*/]));
}

void func_563(var uParam0, int iParam1)//Position - 0x7303A
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST((uParam0[iParam1 /*3*/])->f_2))
	{
		OBJECT::DELETE_OBJECT(&((uParam0[iParam1 /*3*/])->f_2));
	}
}

void func_564(var uParam0)//Position - 0x731B6
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_6));
	}
}

void func_565(int iParam0)//Position - 0x731D1
{
	float fVar0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	float fVar5;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		if (MISC::GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(Var1 + Vector(1f, 0f, 0f), &fVar0, &Var2))
		{
			Var1.f_2 = (fVar0 + 0.005f);
			ENTITY::SET_ENTITY_COORDS(iParam0, Var1, true, false, false, true);
			fVar4 = SYSTEM::SQRT(((Var2.f_0 * Var2.f_0) + (Var2.f_2 * Var2.f_2)));
			fVar5 = SYSTEM::SQRT(((Var2.f_1 * Var2.f_1) + (Var2.f_2 * Var2.f_2)));
			Var3.f_0 = (90f - MISC::ASIN((Var2.f_2 / fVar4)));
			Var3.f_1 = (90f - MISC::ASIN((Var2.f_2 / fVar5)));
			ENTITY::SET_ENTITY_ROTATION(iParam0, Var3, 2, true);
		}
	}
}

int func_566(var uParam0, int iParam1)//Position - 0x73334
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_15__::func_243(&(uParam0->f_15[iParam1 /*74*/]));
}

int func_567(var uParam0, int iParam1)//Position - 0x73360
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return -1;
	}
	return __LIB_10__::func_268(&(uParam0->f_15[iParam1 /*74*/]));
}

int func_568(int iParam0, int iParam1)//Position - 0x73991
{
	if (CAM::DOES_CAM_EXIST(iParam0))
	{
		if (CAM::IS_CAM_INTERPOLATING(iParam0))
		{
			return 1;
		}
		if (iParam1 && CAM::IS_CAM_RENDERING(iParam0))
		{
			return 1;
		}
	}
	return 0;
}

float func_569(int iParam0, int iParam1)//Position - 0x75DCD
{
	var uVar0;
	if (iParam1 != 0)
	{
		uVar0 = Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1286[iParam0];
	}
	else
	{
		uVar0 = Global_113386.f_18979[0 /*19*/][iParam0 /*2*/].f_1;
	}
	return uVar0;
}

float func_570(int iParam0, int iParam1)//Position - 0x75E09
{
	var uVar0;
	if (iParam1 != 0)
	{
		uVar0 = Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1276[iParam0];
	}
	else
	{
		uVar0 = Global_113386.f_18979[0 /*19*/][iParam0 /*2*/];
	}
	return uVar0;
}

float func_571(int iParam0)//Position - 0x75E4E
{
	var uVar0;
	if (iParam0 != 0)
	{
		uVar0 = Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1298;
	}
	else
	{
		uVar0 = Global_113386.f_18979.f_34;
	}
	return uVar0;
}

float func_572(int iParam0)//Position - 0x75E7F
{
	var uVar0;
	if (iParam0 != 0)
	{
		uVar0 = Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1297;
	}
	else
	{
		uVar0 = Global_113386.f_18979.f_33;
	}
	return uVar0;
}

bool func_573(int* iParam0)//Position - 0x7649C
{
	return (iParam0->f_640 == 0 && iParam0->f_641 == 8);
}

int func_574(int iParam0)//Position - 0x764B8
{
	var uVar0;
	if (iParam0 != 0)
	{
		uVar0 = Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_1296;
	}
	else
	{
		uVar0 = Global_113386.f_18979.f_28;
	}
	return uVar0;
}

void func_575(int* iParam0, int iParam1)//Position - 0x7674D
{
	iParam0->f_119 = (iParam0->f_119 - (iParam0->f_119 && iParam1));
}

void func_576(int* iParam0, int iParam1)//Position - 0x76765
{
	iParam0->f_123 = (iParam0->f_123 - (iParam0->f_123 && iParam1));
}

void func_577(int* iParam0, int iParam1)//Position - 0x769A8
{
	iParam0->f_637 = iParam1;
}

bool func_578(int* iParam0)//Position - 0x769B7
{
	return iParam0->f_637;
}

void func_579()//Position - 0x76C01
{
	int iVar0;
	iVar0 = __LIB_0__::func_993(88);
	Global_2676732[iVar0 /*83*/] = 88;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "", 64);
}

void func_580(int* iParam0, int iParam1)//Position - 0x76C2D
{
	iParam0->f_123 = (iParam0->f_123 || iParam1);
}

bool func_581(int* iParam0, int iParam1)//Position - 0x76C40
{
	return (iParam0->f_123 && iParam1) != 0;
}

int func_582(int iParam0)//Position - 0x76FE8
{
	switch (iParam0)
	{
		case 0:
			return 5;
			break;
		case 1:
			return 4;
			break;
		case 2:
			return 3;
			break;
		case 3:
			return 4;
			break;
		case 4:
			return 4;
			break;
		case 5:
			return 3;
			break;
		case 6:
			return 4;
			break;
		case 7:
			return 5;
			break;
		case 8:
			return 4;
			break;
	}
	return 0;
}

int func_583(var uParam0, int iParam1)//Position - 0x77289
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_0__::func_864(&(uParam0->f_15[iParam1 /*74*/]));
}

Vector3 func_584(var uParam0, int iParam1)//Position - 0x776FE
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_43)
	{
		return 0f, 0f, 0f;
	}
	return uParam0->f_43[iParam1 /*3*/];
}

Vector3 func_585(var uParam0, int iParam1)//Position - 0x7772A
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_30)
	{
		return 0f, 0f, 0f;
	}
	return uParam0->f_30[iParam1 /*3*/];
}

int func_586(var uParam0, int iParam1)//Position - 0x777AA
{
	return uParam0->f_15[iParam1 /*74*/].f_31;
}

int func_587(var uParam0)//Position - 0x778FB
{
	return uParam0->f_29;
}

void func_588(var uParam0, int iParam1)//Position - 0x79B46
{
	uParam0->f_38 = (uParam0->f_38 + iParam1);
}

float func_589(float fParam0)//Position - 0x79BDC
{
	return (fParam0 * 1.0936133f);
}

void func_590(int iParam0, bool bParam1, float fParam2, float fParam3, char* sParam4, char* sParam5, char* sParam6)//Position - 0x79C70
{
	if (MISC::IS_STRING_NULL(sParam4))
	{
		sParam4 = "";
	}
	if (MISC::IS_STRING_NULL(sParam5))
	{
		sParam5 = "";
	}
	if (MISC::IS_STRING_NULL(sParam6))
	{
		sParam6 = "";
	}
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "SET_DISTANCE");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam3);
	__LIB_0__::func_610(sParam4);
	__LIB_0__::func_610(sParam5);
	__LIB_0__::func_610(sParam6);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

char* func_591(char* sParam0, char* sParam1)//Position - 0x7A8CA
{
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@michael@putter"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_01_michael"))
		{
			return "react_lose_putter_01_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_02_michael"))
		{
			return "react_lose_putter_02_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_03_michael"))
		{
			return "react_lose_putter_03_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_01_michael"))
		{
			return "react_win_putter_01_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_02_michael"))
		{
			return "react_win_putter_02_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_03_michael"))
		{
			return "react_win_putter_03_michael_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@michael@clubs"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_01_michael"))
		{
			return "react_lose_club_01_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_02_michael"))
		{
			return "react_lose_club_02_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_03_michael"))
		{
			return "react_lose_club_03_michael_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_01_michael"))
		{
			return "react_win_club_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_02_michael"))
		{
			return "react_win_club_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_03_michael"))
		{
			return "react_win_club_03_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@franklin@putter"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_01_franklin_frank"))
		{
			return "react_lose_putter_01_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_02_franklin_frank"))
		{
			return "react_lose_putter_02_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_03_franklin_frank"))
		{
			return "react_lose_putter_03_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_01_franklin_frank"))
		{
			return "react_win_putter_01_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_02_franklin_frank"))
		{
			return "react_win_putter_02_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_03_franklin_frank"))
		{
			return "react_win_putter_03_franklin_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@franklin@clubs"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_01_franklin"))
		{
			return "react_lose_club_01_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_02_franklin"))
		{
			return "react_lose_club_02_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_03_franklin"))
		{
			return "react_lose_club_03_franklin_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_01_franklin"))
		{
			return "react_win_club_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_02_franklin"))
		{
			return "react_win_club_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_03_franklin"))
		{
			return "react_win_club_03_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@trevor@clubs"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_01_trevor"))
		{
			return "react_lose_putter_01_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_02_trevor"))
		{
			return "react_lose_putter_02_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_putter_03_trevor"))
		{
			return "react_lose_putter_03_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_01_trevor"))
		{
			return "react_win_putter_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_02_trevor"))
		{
			return "react_win_putter_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_putter_03_trevor"))
		{
			return "react_win_putter_03_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@trevor@clubs"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_01_trevor"))
		{
			return "react_lose_club_01_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_02_trevor"))
		{
			return "react_lose_club_02_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_lose_club_03_trevor"))
		{
			return "react_lose_club_03_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_01_trevor"))
		{
			return "react_win_club_01_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_02_trevor"))
		{
			return "react_win_club_02_trevor_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "react_win_club_03_trevor"))
		{
			return "react_win_club_03_trevor_cam";
		}
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "mini@golfreactions@generic@"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_bad_01"))
		{
			return "putt_react_bad_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_bad_02"))
		{
			return "putt_react_bad_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_bad_03"))
		{
			return "putt_react_bad_03_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_good_01"))
		{
			return "putt_react_good_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_good_02"))
		{
			return "putt_react_good_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "putt_react_good_03"))
		{
			return "putt_react_good_03_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "swing_react_bad_01"))
		{
			return "swing_react_bad_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "swing_react_bad_02"))
		{
			return "swing_react_bad_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "swing_react_good_01"))
		{
			return "swing_react_good_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "swing_react_good_02"))
		{
			return "swing_react_good_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "wedge_react_bad_01"))
		{
			return "wedge_react_bad_01_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "wedge_react_bad_02"))
		{
			return "wedge_react_bad_02_cam";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam1, "wedge_swing_good_01"))
		{
			return "wedge_react_good_01_cam";
		}
	}
	return "";
}

void func_592(var uParam0)//Position - 0x7AFEC
{
	if (uParam0->f_24 == 3)
	{
	}
	else if (uParam0->f_24 == -1)
	{
	}
	else if (uParam0->f_24 == 7)
	{
	}
	else if (uParam0->f_24 == 8)
	{
	}
	else if (uParam0->f_24 == 0)
	{
	}
	else if (uParam0->f_24 == 1)
	{
	}
	else if (uParam0->f_24 == 4)
	{
	}
	else if (uParam0->f_24 == 2)
	{
	}
	else if (uParam0->f_24 == 5)
	{
	}
	else if (uParam0->f_24 == 9)
	{
	}
	uParam0->f_23 = uParam0->f_24;
}

bool func_593(struct<2> Param0, var uParam1, int iParam2)//Position - 0x7B5FB
{
	struct<3> Var0;
	struct<3> Var1;
	switch (iParam2)
	{
		case 0:
			Var0 = { -1368.5212f, 172.21158f, 57.01312f };
			Var1 = { -1125.1455f, 199.77325f, 63.89479f };
			break;
		case 1:
			Var0 = { -1134.1769f, 149.05234f, 62.00032f };
			Var1 = { -1319.2616f, 166.3851f, 56.82042f };
			break;
		case 2:
			Var0 = { -1307.9255f, 127.87812f, 56.64053f };
			Var1 = { -1247.8582f, 102.13271f, 55.64892f };
			break;
		case 3:
			Var0 = { -1207.6172f, 104.42262f, 57.04683f };
			Var1 = { -1103.428f, 36.12697f, 50.59733f };
			break;
		case 4:
			Var0 = { -1093.3787f, 62.70148f, 52.66673f };
			Var1 = { -959.64417f, -101.13708f, 39.40543f };
			break;
		case 5:
			Var0 = { -989.712f, -110.51187f, 39.60591f };
			Var1 = { -1092.8246f, -116.18317f, 40.53841f };
			break;
		case 6:
			Var0 = { -1126.4089f, -101.06005f, 40.8463f };
			Var1 = { -1283.5859f, -21.47935f, 47.85569f };
			break;
		case 7:
			Var0 = { -1266.4098f, 35.08315f, 48.37233f };
			Var1 = { -1047.605f, -93.48099f, 42.56837f };
			break;
		case 8:
			Var0 = { -1137.1295f, 7.77768f, 48.13606f };
			Var1 = { -1276.8528f, 94.2132f, 53.7703f };
			break;
	}
	return (((Var1.f_0 - Var0.f_0) * (Param0.f_1 - Var0.f_1)) - ((Var1.f_1 - Var0.f_1) * (Param0.f_0 - Var0.f_0))) < 0f;
}

int func_594(struct<3> Param0)//Position - 0x7B8E1
{
	if (((((((SYSTEM::VDIST2(Param0, -1283.3811f, 80.55217f, 53.905674f) < (30.5f * 30.5f) || SYSTEM::VDIST2(Param0, -1252.5955f, 70.568245f, 51.245884f) < (31f * 31f)) || SYSTEM::VDIST2(Param0, -1229.6606f, 60.067318f, 51.890144f) < (31f * 31f)) || SYSTEM::VDIST2(Param0, -1215.0654f, 50.102516f, 51.799274f) < (33f * 33f)) || SYSTEM::VDIST2(Param0, -1181.4375f, 28.372972f, 50.825546f) < (37.5f * 37.5f)) || SYSTEM::VDIST2(Param0, -1167.5991f, 15.932876f, 49.16326f) < (37.5f * 37.5f)) || SYSTEM::VDIST2(Param0, -1151.0776f, 9.428267f, 48.30155f) < (35f * 35f)) || SYSTEM::VDIST2(Param0, -1187.1747f, 60.732788f, 53.639885f) < (9f * 9f))
	{
		return 0;
	}
	return 1;
}

int func_595(struct<3> Param0)//Position - 0x7BA33
{
	if (((((((((((((((SYSTEM::VDIST2(Param0, -1262.2653f, 30.905869f, 47.800354f) < (23.5f * 23.5f) || SYSTEM::VDIST2(Param0, -1238.0144f, 20.013653f, 46.685284f) < (31.5f * 31.5f)) || SYSTEM::VDIST2(Param0, -1207.6115f, -1.210448f, 46.65575f) < (36.25f * 36.25f)) || SYSTEM::VDIST2(Param0, -1176.8757f, -18.25381f, 45.277035f) < (36.25f * 36.25f)) || SYSTEM::VDIST2(Param0, -1159.9237f, -21.481136f, 45.18527f) < (25.25f * 25.25f)) || SYSTEM::VDIST2(Param0, -1150.8055f, -33.96546f, 44.683826f) < (26.75f * 26.75f)) || SYSTEM::VDIST2(Param0, -1137.1497f, -43.70882f, 44.634342f) < (26.75f * 26.75f)) || SYSTEM::VDIST2(Param0, -1142.3267f, -47.365517f, 44.363075f) < (30f * 30f)) || SYSTEM::VDIST2(Param0, -1139.1334f, -47.338657f, 44.39388f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1123.0103f, -54.36808f, 43.90327f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1105.071f, -64.81659f, 43.047184f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1088.1053f, -68.64159f, 42.17559f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1077.9634f, -71.280106f, 42.958477f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1067.0763f, -77.985f, 42.574677f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1053.7423f, -83.321754f, 42.58896f) < (32f * 32f)) || SYSTEM::VDIST2(Param0, -1041.1979f, -87.2557f, 42.836494f) < (30f * 30f))
	{
		return 0;
	}
	return 1;
}

int func_596(struct<3> Param0)//Position - 0x7BCCD
{
	if (((((((SYSTEM::VDIST2(Param0, -1136.2417f, -95.06858f, 41.302517f) < (28.25f * 28.25f) || SYSTEM::VDIST2(Param0, -1165.4347f, -81.74862f, 44.06945f) < (37f * 37f)) || SYSTEM::VDIST2(Param0, -1191.7983f, -60.593716f, 43.36213f) < (37f * 37f)) || SYSTEM::VDIST2(Param0, -1209.493f, -45.690117f, 43.19042f) < (37f * 37f)) || SYSTEM::VDIST2(Param0, -1222.7806f, -37.27245f, 44.954025f) < (37f * 37f)) || SYSTEM::VDIST2(Param0, -1233.6812f, -29.527641f, 42.59613f) < (40f * 40f)) || SYSTEM::VDIST2(Param0, -1254.5319f, -18.875807f, 46.362934f) < (40f * 40f)) || SYSTEM::VDIST2(Param0, -1291.9644f, -1.428747f, 49.29616f) < (40f * 40f))
	{
		return 0;
	}
	return 1;
}

int func_597(struct<3> Param0)//Position - 0x7BE1F
{
	if ((((SYSTEM::VDIST2(Param0, -989.4491f, -122.88058f, 39.029953f) < (25.25f * 25.25f) || SYSTEM::VDIST2(Param0, -1018.1705f, -117.23991f, 40.538963f) < (25.25f * 25.25f)) || SYSTEM::VDIST2(Param0, -1045.5242f, -123.05896f, 40.773052f) < (28f * 28f)) || SYSTEM::VDIST2(Param0, -1072.8293f, -123.25536f, 40.2801f) < (42f * 42f)) || SYSTEM::VDIST2(Param0, -1094.7015f, -125.87067f, 40.66322f) < (42f * 42f))
	{
		return 0;
	}
	return 1;
}

int func_598(struct<3> Param0)//Position - 0x7BEF6
{
	if (((((((((((SYSTEM::VDIST2(Param0, -946.038f, -84.43751f, 39.088943f) < (29.75f * 29.75f) || SYSTEM::VDIST2(Param0, -969.9369f, -67.45364f, 40.620064f) < (29.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -990.43317f, -51.773438f, 41.65581f) < (35.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -1006.6395f, -20.229515f, 45.67778f) < (48f * 48f)) || SYSTEM::VDIST2(Param0, -1030.7417f, 10.294682f, 49.258698f) < (48f * 48f)) || SYSTEM::VDIST2(Param0, -1074.0447f, 49.566372f, 50.12212f) < (29.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -1081.7299f, 57.717678f, 50.813744f) < (29.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -1059.0913f, 48.760387f, 49.809143f) < (29.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -1037.4043f, 37.183304f, 45.01267f) < (29.75f * 29.75f)) || SYSTEM::VDIST2(Param0, -987.92706f, 12.216481f, 51.47941f) < (58.25f * 58.25f)) || SYSTEM::VDIST2(Param0, -923.3143f, -55.92058f, 38.37607f) < (58.25f * 58.25f)) || SYSTEM::VDIST2(Param0, -939.21606f, -106.79802f, 41.728218f) < (30.75f * 30.75f))
	{
		return 0;
	}
	return 1;
}

int func_599(struct<3> Param0)//Position - 0x7C0EE
{
	if (((((((((((((SYSTEM::VDIST2(Param0, -1221.06f, 98.5996f, 57.8836f) < (20.9f * 20.9f) || SYSTEM::VDIST2(Param0, -1200.08f, 92.5423f, 57.6517f) < (27.65f * 27.65f)) || SYSTEM::VDIST2(Param0, -1178.72f, 83.8707f, 60.6101f) < (32.525f * 32.525f)) || SYSTEM::VDIST2(Param0, -1149.67f, 68.5744f, 57.3165f) < (36.62f * 36.62f)) || SYSTEM::VDIST2(Param0, -1138.01f, 55.2482f, 54.4325f) < (33.52f * 33.52f)) || SYSTEM::VDIST2(Param0, -1125.44f, 41.863f, 51.9212f) < (29.825f * 29.825f)) || SYSTEM::VDIST2(Param0, -1121.19f, 35.1585f, 51.5821f) < (30.425f * 30.425f)) || SYSTEM::VDIST2(Param0, -1101.69f, 12.5718f, 50.1535f) < (34.025f * 34.025f)) || SYSTEM::VDIST2(Param0, -1116.93f, 0.466945f, 49.0627f) < (18.575f * 18.575f)) || SYSTEM::VDIST2(Param0, -1155.4375f, 92.815f, 56.99f) < (14.5f * 14.5f)) || SYSTEM::VDIST2(Param0, -1095.9377f, 42.5799f, 50.345f) < (11.12f * 11.12f)) || SYSTEM::VDIST2(Param0, -1105.0049f, 50.75577f, 51.6625f) < (14.7f * 14.7f)) || SYSTEM::VDIST2(Param0, -1093.2511f, 36.75171f, 49.51097f) < (11.49f * 11.49f)) || SYSTEM::VDIST2(Param0, -1112.3789f, 61.12305f, 52.97316f) < (10.85f * 10.85f))
	{
		return 0;
	}
	return 1;
}

int func_600(struct<3> Param0)//Position - 0x7C336
{
	if ((((((SYSTEM::VDIST2(Param0, -1304.9606f, 167.75325f, 57.58253f) < (6.25f * 6.25f) || SYSTEM::VDIST2(Param0, -1234.8796f, 162.84953f, 59.07859f) < (11f * 11f)) || SYSTEM::VDIST2(Param0, -1241.9308f, 103.196625f, 55.61257f) < (36f * 36f)) || SYSTEM::VDIST2(Param0, -1255.2334f, 110.28992f, 55.627853f) < (36f * 36f)) || SYSTEM::VDIST2(Param0, -1274.2787f, 119.10796f, 56.414837f) < (28f * 28f)) || SYSTEM::VDIST2(Param0, -1293.0032f, 121.77718f, 56.083878f) < (23f * 23f)) || SYSTEM::VDIST2(Param0, -1302.7052f, 124.26931f, 56.271282f) < (23f * 23f))
	{
		return 0;
	}
	return 1;
}

int func_601(struct<3> Param0)//Position - 0x7C45F
{
	if ((((((((((((((SYSTEM::VDIST2(Param0, -1327.7368f, 159.32567f, 56.804813f) < (20f * 20f) || SYSTEM::VDIST2(Param0, -1313.003f, 151.44281f, 57.082485f) < (20f * 20f)) || SYSTEM::VDIST2(Param0, -1300.2255f, 150.73505f, 57.934685f) < (18.75f * 18.75f)) || SYSTEM::VDIST2(Param0, -1314.3357f, 159.9026f, 56.821346f) < (18.75f * 18.75f)) || SYSTEM::VDIST2(Param0, -1291.734f, 162.25293f, 57.521557f) < (18.75f * 18.75f)) || SYSTEM::VDIST2(Param0, -1273.5385f, 163.71556f, 57.99153f) < (18.75f * 18.75f)) || SYSTEM::VDIST2(Param0, -1255.3575f, 159.83023f, 57.953476f) < (22.75f * 22.75f)) || SYSTEM::VDIST2(Param0, -1260.9087f, 144.87056f, 57.691547f) < (22.75f * 22.75f)) || SYSTEM::VDIST2(Param0, -1244.6907f, 145.63866f, 57.71403f) < (22.75f * 22.75f)) || SYSTEM::VDIST2(Param0, -1222.357f, 145.15588f, 58.442333f) < (33.5f * 33.5f)) || SYSTEM::VDIST2(Param0, -1195.7145f, 138.88812f, 59.483425f) < (38.5f * 38.5f)) || SYSTEM::VDIST2(Param0, -1161.0116f, 149.754f, 61.720253f) < (38.5f * 38.5f)) || SYSTEM::VDIST2(Param0, -1118.562f, 155.97157f, 61.498318f) < (38.5f * 38.5f)) || SYSTEM::VDIST2(Param0, -1234.8796f, 162.84953f, 59.07859f) < (15f * 15f)) || SYSTEM::VDIST2(Param0, -1304.9606f, 167.75325f, 57.58253f) < (10.25f * 10.25f))
	{
		return 0;
	}
	return 1;
}

bool func_602(int iParam0)//Position - 0x7C6D0
{
	return (iParam0 == 9 || iParam0 == 1);
}

void func_603(var uParam0, int iParam1, int iParam2)//Position - 0x7C7EA
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return;
	}
	uParam0->f_1[iParam1 /*4*/] = (uParam0->f_1[iParam1 /*4*/] + iParam2);
}

int func_604(float fParam0, float fParam1, float fParam2)//Position - 0x7DF32
{
	float fVar0;
	if (MISC::GET_GROUND_Z_FOR_3D_COORD(*fParam0 + Vector(fParam2, 0f, 0f), &fVar0, false, false))
	{
		if (MISC::ABSF((fParam0->f_2 - fVar0)) < fParam1)
		{
			fParam0->f_2 = fVar0;
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

bool func_605(int iParam0, var uParam1)//Position - 0x7DF71
{
	float fVar0;
	bool bVar1;
	struct<3> Var2;
	fVar0 = 0f;
	bVar1 = false;
	if (!MISC::GET_GROUND_Z_FOR_3D_COORD(ENTITY::GET_ENTITY_COORDS(iParam0, true), &fVar0, false, false))
	{
		Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		uParam1->f_561++;
		if (uParam1->f_561 > 1)
		{
			bVar1 = true;
			if (MISC::GET_GROUND_Z_FOR_3D_COORD(Var2 + Vector(0f, 0.1f, 0.1f), &fVar0, false, false))
			{
				if ((Var2.f_2 - fVar0) > 1f)
				{
					bVar1 = false;
				}
			}
			if (MISC::GET_GROUND_Z_FOR_3D_COORD(Var2 + Vector(0.05f, 0f, 0f), &(Var2.f_2), false, false) && bVar1)
			{
				ENTITY::SET_ENTITY_COORDS(iParam0, Var2, true, false, false, true);
				bVar1 = false;
			}
			else if (bVar1)
			{
			}
		}
	}
	else
	{
		uParam1->f_561 = 0;
		uParam1->f_562 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	}
	return bVar1;
}

float func_606(float fParam0)//Position - 0x7E187
{
	return (fParam0 * 0.3048f);
}

float func_607(float fParam0)//Position - 0x7E197
{
	return (fParam0 / 1.0936133f);
}

void func_608(struct<3> Param0, struct<3> Param1, var uParam2)//Position - 0x7E746
{
	struct<3> Var0;
	Var0 = { Param1 - Param0 };
	*uParam2 = MISC::ATAN((Var0.f_2 / SYSTEM::SQRT(((Var0.f_0 * Var0.f_0) + (Var0.f_1 * Var0.f_1)))));
	uParam2->f_2 = -MISC::ATAN((Var0.f_0 / Var0.f_1));
	if (Var0.f_1 < 0f)
	{
		if (Var0.f_0 < 0f)
		{
			uParam2->f_2 = (uParam2->f_2 + 180f);
		}
		else
		{
			uParam2->f_2 = (uParam2->f_2 - 180f);
		}
	}
}

void func_609(int iParam0, var uParam1, var uParam2)//Position - 0x7E8D9
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1127.2665f, -20.2238f, 65.8451f };
			*uParam2 = { -21.5872f, 0f, 34.5271f };
			break;
		case 1:
			*uParam1 = { -1172.8208f, 33.7858f, 62.5583f };
			*uParam2 = { -6.6738f, 0f, 56.489f };
			break;
		case 2:
			*uParam1 = { -1212.7775f, 62.3151f, 72.1999f };
			*uParam2 = { -26.5597f, 0f, 70.598f };
			break;
		case 3:
			*uParam1 = { -1258.053f, 92.951f, 71.2632f };
			*uParam2 = { -22.4006f, 0f, 100.3488f };
			break;
	}
}

void func_610(int iParam0, var uParam1, var uParam2)//Position - 0x7E994
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1241.226f, 18.3065f, 60.5586f };
			*uParam2 = { -11.2652f, 0f, -117.0898f };
			break;
		case 1:
			*uParam1 = { -1202.9443f, -15.993f, 55.8415f };
			*uParam2 = { -8.8412f, 0f, -107.6249f };
			break;
		case 2:
			*uParam1 = { -1156.3354f, -28.2037f, 57.1487f };
			*uParam2 = { -20.3684f, -0.007f, -127.7787f };
			break;
		case 3:
			*uParam1 = { -1113.6414f, -82.6089f, 56.207f };
			*uParam2 = { -19.9821f, 0f, -99.4635f };
			break;
		case 4:
			*uParam1 = { -1057.5558f, -98.8819f, 62.697f };
			*uParam2 = { -43.862f, 0f, -53.494f };
			break;
	}
}

void func_611(int iParam0, var uParam1, var uParam2)//Position - 0x7EA7E
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1136.5591f, -94.7377f, 45.8988f };
			*uParam2 = { -3.2122f, 0f, 63.8833f };
			break;
		case 1:
			*uParam1 = { -1171.7223f, -79.062f, 52.6703f };
			*uParam2 = { -15.8985f, 0f, 53.0819f };
			break;
		case 2:
			*uParam1 = { -1201.0748f, -73.5546f, 56.2329f };
			*uParam2 = { -12.3795f, 0f, 33.9216f };
			break;
		case 3:
			*uParam1 = { -1227.6796f, -47.7722f, 61.0299f };
			*uParam2 = { -25.4619f, 0f, 51.7201f };
			break;
		case 4:
			*uParam1 = { -1261.487f, -21.2802f, 60.1234f };
			*uParam2 = { -20.4131f, 0f, 38.349f };
			break;
	}
}

void func_612(int iParam0, var uParam1, var uParam2)//Position - 0x7EB64
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1018.8165f, -117.0517f, 52.8287f };
			*uParam2 = { -29.9027f, 0f, 86.7974f };
			break;
		case 1:
			*uParam1 = { -1069.7557f, -113.5879f, 60.8817f };
			*uParam2 = { -36.7612f, 0f, 82.3421f };
			break;
	}
}

void func_613(int iParam0, var uParam1, var uParam2)//Position - 0x7EBC9
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1054.8104f, 41.1086f, 69.7104f };
			*uParam2 = { -24.8931f, 0f, -157.7285f };
			break;
		case 1:
			*uParam1 = { -1025.4761f, 7.3602f, 65.0285f };
			*uParam2 = { -22.638f, 0f, 179.0858f };
			break;
		case 2:
			*uParam1 = { -1041.0343f, -45.9046f, 62.6625f };
			*uParam2 = { -27.741f, 0f, -103.5129f };
			break;
		case 3:
			*uParam1 = { -999.8635f, -66.2741f, 65.9639f };
			*uParam2 = { -38.8941f, 0f, -110.9679f };
			break;
	}
}

void func_614(int iParam0, var uParam1, var uParam2)//Position - 0x7EC84
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1174.7363f, 103.7762f, 65.5594f };
			*uParam2 = { -8.6982f, 0f, -137.054f };
			break;
		case 1:
			*uParam1 = { -1119.5093f, 42.8915f, 65.5874f };
			*uParam2 = { -23.2281f, 0f, -148.3643f };
			break;
	}
}

void func_615(int iParam0, var uParam1, var uParam2)//Position - 0x7ECE9
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1291.3287f, 106.4161f, 63.9952f };
			*uParam2 = { -16.606f, 0f, -74.3135f };
			break;
		case 1:
			*uParam1 = { -1264.4171f, 94.7818f, 68.7728f };
			*uParam2 = { -25.2876f, 0f, -67.0479f };
			break;
	}
}

void func_616(int iParam0, var uParam1, var uParam2)//Position - 0x7ED4E
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1151.7957f, 140.7695f, 72.0727f };
			*uParam2 = { -20.6667f, 0f, 72.5055f };
			break;
		case 1:
			*uParam1 = { -1214.8385f, 154.1587f, 65.2884f };
			*uParam2 = { -4.3005f, 0f, 77.3166f };
			break;
		case 2:
			*uParam1 = { -1247.2153f, 161.2281f, 67.377f };
			*uParam2 = { -12.6665f, 0f, 78.4986f };
			break;
		case 3:
			*uParam1 = { -1301.7051f, 167.4967f, 70.6909f };
			*uParam2 = { -34.7268f, 0f, 101.4268f };
			break;
	}
}

void func_617(int iParam0, var uParam1, var uParam2)//Position - 0x7EE09
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1320.7644f, 183.6616f, 67.9775f };
			*uParam2 = { -23.3201f, 0f, -89.2365f };
			break;
		case 1:
			*uParam1 = { -1260.757f, 181.4989f, 73.9749f };
			*uParam2 = { -18.9391f, 0f, -83.2668f };
			break;
		case 2:
			*uParam1 = { -1197.6821f, 177.2393f, 72.5978f };
			*uParam2 = { -11.556f, 0f, -55.3467f };
			break;
		case 3:
			*uParam1 = { -1134.2712f, 212.966f, 73.2606f };
			*uParam2 = { -37.0222f, 0f, -55.6838f };
			break;
	}
}

int func_618(int iParam0)//Position - 0x7EEC4
{
	switch (iParam0)
	{
		case 0:
			return 4;
			break;
		case 1:
			return 4;
			break;
		case 2:
			return 2;
			break;
		case 3:
			return 2;
			break;
		case 4:
			return 4;
			break;
		case 5:
			return 2;
			break;
		case 6:
			return 5;
			break;
		case 7:
			return 5;
			break;
		case 8:
			return 4;
			break;
	}
	return 0;
}

int func_619(struct<3> Param0)//Position - 0x7EF49
{
	float fVar0;
	if (!MISC::GET_GROUND_Z_FOR_3D_COORD(Param0, &fVar0, false, false))
	{
		return 1;
	}
	if (WATER::GET_WATER_HEIGHT(Param0 + Vector(50f, 0f, 0f), &fVar0))
	{
		return fVar0 > Param0.f_2;
	}
	return 0;
}

void func_620(var uParam0, int iParam1, char* sParam2, int iParam3, float fParam4, int iParam5, char* sParam6, int iParam7, char* sParam8, int iParam9, float fParam10, int iParam11, bool bParam12)//Position - 0x7F25B
{
	int iVar0;
	iVar0 = iParam7;
	if (iParam3 == -1)
	{
		iParam3 = 6;
	}
	iParam3 += 2;
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*uParam0, "SET_SWING_DISPLAY");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	__LIB_0__::func_610(sParam2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam3);
	GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("GOLF_WIND_PLUS");
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam5);
	GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam4);
	__LIB_0__::func_610(sParam6);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar0);
	__LIB_0__::func_610(sParam8);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bParam12);
	__LIB_0__::func_610("GOLF_SPIN");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam9);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(fParam10);
	GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("SHOT_NUM");
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam11);
	GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

struct<6> func_621(int iParam0)//Position - 0x7F309
{
	struct<6> Var0;
	StringCopy(&Var0, "SWING_", 24);
	switch (iParam0)
	{
		case 0:
			StringConCat(&Var0, "NORMAL", 24);
			break;
		case 1:
			StringConCat(&Var0, "POWER", 24);
			break;
		case 3:
			StringConCat(&Var0, "APPROACH", 24);
			break;
		case 2:
			StringConCat(&Var0, "PUNCH", 24);
			break;
		case 5:
		case 7:
			StringConCat(&Var0, "GREEN" /* GXT: Green */, 24);
			break;
		case 4:
			StringConCat(&Var0, "GREEN_S", 24);
			break;
		case 6:
			StringConCat(&Var0, "GREEN_L", 24);
			break;
	}
	return Var0;
}

struct<6> func_622(int iParam0)//Position - 0x7F3A9
{
	struct<6> Var0;
	StringCopy(&Var0, "CLUB_", 24);
	StringIntConCat(&Var0, iParam0, 24);
	return Var0;
}

struct<6> func_623(int iParam0)//Position - 0x7F3C4
{
	struct<6> Var0;
	StringCopy(&Var0, "LIE_", 24);
	switch (iParam0)
	{
		case 5:
			StringConCat(&Var0, "TEE", 24);
			break;
		case 2:
			StringConCat(&Var0, "FAIRWAY", 24);
			break;
		case 4:
			StringConCat(&Var0, "ROUGH", 24);
			break;
		case 0:
			StringConCat(&Var0, "BUNKER", 24);
			break;
		case 3:
			StringConCat(&Var0, "GREEN" /* GXT: Green */, 24);
			break;
		case 1:
			StringConCat(&Var0, "PATH", 24);
			break;
		case 7:
			StringConCat(&Var0, "WATER", 24);
			break;
		default:
			StringConCat(&Var0, "UNKNOWN", 24);
			break;
	}
	return Var0;
}

var func_624(var uParam0)//Position - 0x7F4A5
{
	return uParam0->f_16;
}

void func_625(int iParam0, char* sParam1, float fParam2, float fParam3)//Position - 0x7F4F2
{
	if (MISC::IS_STRING_NULL(sParam1))
	{
		sParam1 = "";
	}
	if (fParam2 > 100f)
	{
		fParam2 = 100f;
	}
	else if (fParam2 < 0f)
	{
		fParam2 = 0f;
	}
	fParam2 = (fParam2 * fParam3);
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "SET_STRENGTH");
	__LIB_0__::func_610(sParam1);
	GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRENGTH_PER");
	HUD::ADD_TEXT_COMPONENT_INTEGER(SYSTEM::CEIL(fParam2));
	GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_626(var uParam0, int iParam1, int iParam2)//Position - 0x7FA74
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return;
	}
	uParam0->f_1[iParam1 /*4*/].f_3 = (uParam0->f_1[iParam1 /*4*/].f_3 + iParam2);
}

void func_627(var uParam0, int iParam1)//Position - 0x7FAAA
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return;
	}
	uParam0->f_1[iParam1 /*4*/].f_2 = 1;
}

int func_628(var uParam0, int iParam1)//Position - 0x7FAD4
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return 0;
	}
	return uParam0->f_1[iParam1 /*4*/].f_2;
}

void func_629(var uParam0, int iParam1)//Position - 0x7FAFE
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return;
	}
	uParam0->f_1[iParam1 /*4*/].f_1 = 1;
}

int func_630(struct<3> Param0, int iParam1)//Position - 0x7FB28
{
	switch (iParam1)
	{
		case 0:
			return (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1343.4147f, 181.18239f, 57.333588f, -1251.2761f, 187.56505f, 63.27087f, 20.5f, false, false) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1250.1304f, 183.4166f, 61.826935f, -1135.7305f, 210.23721f, 65.00552f, 34.25f, false, false));
			break;
		case 1:
			return (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1158.626f, 148.44534f, 61.671444f, -1252.3062f, 148.07011f, 58.765175f, 43.75f, false, false) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1252.3429f, 162.8867f, 66.23121f, -1312.435f, 159.27255f, 57.93302f, 27.25f, false, false));
			break;
		case 2:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1306.3007f, 126.59515f, 64.51172f, -1248.8966f, 105.22775f, 56.55264f, 27.25f, false, false);
			break;
		case 3:
			return (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1228.7952f, 98.25659f, 64.04681f, -1127.4048f, 70.77743f, 55.55414f, 33.25f, false, false) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1139.1938f, 78.43003f, 55.897522f, -1089.5217f, -8.462549f, 47.662827f, 50f, false, false));
			break;
		case 4:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1056.7611f, 4.600485f, 56.479935f, -972.46234f, -79.60284f, 40.800972f, 33.25f, false, false);
			break;
		case 5:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1001.10693f, -113.40902f, 48.136395f, -1082.2203f, -116.03849f, 41.546932f, 33.25f, false, false);
			break;
		case 6:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1123.556f, -97.21224f, 48.86689f, -1283.7896f, -21.737469f, 48.840378f, 33.25f, false, false);
			break;
		case 7:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1272.0272f, 36.36215f, 56.68197f, -1059.0072f, -81.266525f, 43.529655f, 39.5f, false, false);
			break;
		case 8:
			return OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1128.409f, -3.124314f, 56.171017f, -1252.3439f, 79.264534f, 52.995228f, 37f, false, false);
			break;
	}
	return 0;
}

int func_631(var uParam0, int iParam1)//Position - 0x7FDD2
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_1)
	{
		return 0;
	}
	return uParam0->f_1[iParam1 /*4*/].f_1;
}

void func_632(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x7FF2F
{
	*uParam0 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 218 /*INPUT_SCRIPT_LEFT_AXIS_X*/) * 128f));
	*uParam1 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 219 /*INPUT_SCRIPT_LEFT_AXIS_Y*/) * 128f));
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		*uParam2 = SYSTEM::FLOOR((PAD::GET_CONTROL_UNBOUND_NORMAL(2 /*FRONTEND_CONTROL*/, 220 /*INPUT_SCRIPT_RIGHT_AXIS_X*/) * 400f));
		*uParam3 = SYSTEM::FLOOR((PAD::GET_CONTROL_UNBOUND_NORMAL(2 /*FRONTEND_CONTROL*/, 221 /*INPUT_SCRIPT_RIGHT_AXIS_Y*/) * 400f));
		if (PAD::IS_MOUSE_LOOK_INVERTED())
		{
			*uParam3 = (*uParam3 * -1);
		}
		if (PAD::IS_LOOK_INVERTED())
		{
			*uParam3 = (*uParam3 * -1);
		}
	}
	else
	{
		*uParam2 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 220 /*INPUT_SCRIPT_RIGHT_AXIS_X*/) * 128f));
		*uParam3 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 221 /*INPUT_SCRIPT_RIGHT_AXIS_Y*/) * 128f));
	}
}

int func_633(int iParam0)//Position - 0x807A1
{
	int iVar0;
	int iVar1;
	var uVar2;
	var uVar3;
	var uVar4;
	iVar0 = SHAPETEST::START_SHAPE_TEST_BOUND(iParam0, 256, 4);
	if (SHAPETEST::GET_SHAPE_TEST_RESULT(iVar0, &iVar1, &uVar2, &uVar3, &uVar4) != 2)
	{
	}
	if (iVar1 != 0)
	{
		return 1;
	}
	return 0;
}

float func_634(int iParam0)//Position - 0x8204C
{
	switch (iParam0)
	{
		case 0:
			return 0.75f;
			break;
		case 3:
			return 1f;
			break;
		case 2:
			return 1f;
			break;
		case 5:
		case 4:
		case 6:
		case 7:
			return 1f;
			break;
		case 1:
			return 0.5f;
			break;
	}
	return 1f;
}

void func_635(var uParam0, int iParam1, char* sParam2, int iParam3)//Position - 0x825B7
{
	uParam0->f_77[iParam1] = iParam3;
	uParam0->f_11[iParam1] = sParam2;
}

void func_636(int* iParam0, var uParam1)//Position - 0x82820
{
	iParam0->f_636 = uParam1;
}

int func_637(int iParam0)//Position - 0x82869
{
	if ((iParam0 == 2 || iParam0 == 4) || iParam0 == 3)
	{
		return 1;
	}
	return 0;
}

void func_638(int* iParam0)//Position - 0x828BA
{
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 236 /*INPUT_SCRIPT_SELECT*/) && !HUD::IS_PAUSE_MENU_ACTIVE())
	{
		AUDIO::PLAY_SOUND(-1, "SELECT" /* GXT: Filter List */, "HUD_FRONTEND_DEFAULT_SOUNDSET", false, 0, true);
		iParam0->f_571++;
		iParam0->f_575 = 1;
		if (iParam0->f_571 == 2 && !iParam0->f_584)
		{
			iParam0->f_571++;
		}
		if (iParam0->f_571 >= 3)
		{
			iParam0->f_571 = 0;
		}
	}
}

int func_639(int* iParam0)//Position - 0x82A50
{
	return iParam0->f_636;
}

void func_640(struct<3> Param0, int iParam1)//Position - 0x82A5D
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	float fVar3;
	float fVar4;
	float fVar5;
	fVar4 = 20f;
	fVar5 = 0.08f;
	switch (iParam1)
	{
		case 0:
			Var0 = { -1120.569f, 222.185f, 64.814f };
			Var1 = { -0.712f, 0.7f, 0f };
			Var2 = { 14.92f, 24.48f, -0.63f };
			fVar3 = 42f;
			break;
		case 1:
			Var0 = { -1326.193f, 162.31f, 56.974f };
			Var1 = { -0.771f, 0.636f, 0.003f };
			Var2 = { 19.48f, 24.34f, -0.63f };
			fVar3 = 42f;
			break;
		case 2:
			Var0 = { -1238.702f, 106.882f, 56.462f };
			Var1 = { 0.177f, 0.982f, 0.06f };
			Var2 = { 15.72f, 27.98f, 0.1f };
			fVar3 = 42f;
			break;
		case 3:
			Var0 = { -1099.278f, 10.541f, 50.81f };
			Var1 = { -0.993f, 0.11f, -0.046f };
			Var2 = { 33.05f, 36.35f, -0.63f };
			fVar3 = 65f;
			break;
		case 4:
			Var0 = { -965.273f, -82.437f, 41.041f };
			Var1 = { 0.549f, -0.835f, -0.031f };
			Var2 = { 20.47f, 42.54f, -0.63f };
			fVar3 = 42f;
			break;
		case 5:
			Var0 = { -1102.084f, -116.732f, 40.891f };
			Var1 = { -0.485f, -0.875f, -0.006f };
			Var2 = { 18.56f, 20f, -0.63f };
			fVar3 = 42f;
			break;
		case 6:
			Var0 = { -1284.205f, 4.114f, 49.654f };
			Var1 = { -0.997f, -0.018f, 0.076f };
			Var2 = { 19.01f, 20f, 0.7f };
			fVar3 = 42f;
			break;
		case 7:
			Var0 = { -1041.863f, -84.943f, 43.14f };
			Var1 = { 0.799f, 0.6f, 0.033f };
			Var2 = { 18.69f, 24.09f, 0.68f };
			fVar3 = 42f;
			break;
		case 8:
			Var0 = { -1289.969f, 83.574f, 54.183f };
			Var1 = { -1f, 0.004f, 0.005f };
			Var2 = { 19.01f, 20f, -0.63f };
			fVar3 = 42f;
			break;
	}
	Var0.f_2 = (Param0.f_2 + 0.5f);
	GRAPHICS::TERRAINGRID_ACTIVATE(true);
	GRAPHICS::TERRAINGRID_SET_PARAMS(Var0, Var1, Var2.f_0, Var2.f_1, Var2.f_2, fVar3, fVar4, Param0.f_2, fVar5);
	GRAPHICS::TERRAINGRID_SET_COLOURS(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
}

char* func_641()//Position - 0x82E1E
{
	return "GolfPutting";
}

void func_642(int* iParam0, int iParam1)//Position - 0x854C6
{
	iParam0->f_121 = (iParam0->f_121 || iParam1);
}

int func_643(int iParam0)//Position - 0x854D9
{
	if (0 == iParam0 & 2)
	{
		if (__LIB_0__::func_1("CLUB_WOOD"))
		{
			return 1;
		}
	}
	if (0 == iParam0 & 4)
	{
		if (__LIB_0__::func_1("CLUB_IRON"))
		{
			return 1;
		}
	}
	if (0 == iParam0 & 8)
	{
		if (__LIB_0__::func_1("CLUB_WEDGE"))
		{
			return 1;
		}
	}
	if (0 == iParam0 & 16)
	{
		if (__LIB_0__::func_1("CLUB_PUTTER"))
		{
			return 1;
		}
	}
	return 0;
}

int func_644(int iParam0)//Position - 0x85544
{
	if (0 == iParam0 & 32)
	{
		if (__LIB_0__::func_1("STYLE_POWER"))
		{
			return 1;
		}
	}
	if (0 == iParam0 & 64)
	{
		if (__LIB_0__::func_1("STYLE_APPROACH"))
		{
			return 1;
		}
	}
	if (0 == iParam0 & 128)
	{
		if (__LIB_0__::func_1("STYLE_PUNCH"))
		{
			return 1;
		}
	}
	return 0;
}

void func_645(var uParam0, int iParam1)//Position - 0x855B1
{
	uParam0->f_19 = (uParam0->f_19 + iParam1);
}

char* func_646(int iParam0)//Position - 0x8568B
{
	if (iParam0 <= 5)
	{
		return "Wood";
	}
	else if (iParam0 > 5 && iParam0 <= 13)
	{
		return "Iron";
	}
	else if (iParam0 > 13 && iParam0 <= 18)
	{
		return "Wedge";
	}
	else if (iParam0 == 19)
	{
		return "Putt";
	}
	return "";
}

void func_647(var uParam0, int iParam1)//Position - 0x8587D
{
	uParam0->f_17 = (uParam0->f_17 + iParam1);
}

int func_648(struct<3> Param0, float fParam1, struct<3> Param2)//Position - 0x864C0
{
	struct<3> Var0;
	struct<3> Var1;
	int iVar2;
	int iVar3;
	var uVar4;
	var uVar5;
	var uVar6;
	var uVar7;
	Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Param0, fParam1, Param2) };
	Var1 = { 0.5f, 0.5f, 1f };
	GRAPHICS::DRAW_DEBUG_BOX(Var0 - Var1 * Vector(0.5f, 0.5f, 0.5f), Var0 + Var1 * Vector(0.5f, 0.5f, 0.5f), 0, 255, 10, 255);
	iVar2 = SHAPETEST::START_SHAPE_TEST_BOX(Var0, Var1, 0f, 0f, 0f, 2, 21, PLAYER::PLAYER_PED_ID(), 4);
	if (SHAPETEST::GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(iVar2, &iVar3, &uVar4, &uVar5, &uVar7, &uVar6) != 2)
	{
	}
	if (iVar3 != 0)
	{
		return 1;
	}
	return 0;
}

int func_649(int iParam0)//Position - 0x8676B
{
	switch (iParam0)
	{
		case 9:
			return 1000;
			break;
		case 1:
			return 1300;
			break;
		case 2:
			return 2500;
			break;
		case 3:
			return 1200;
			break;
		case 4:
			return 2000;
			break;
		case 5:
			return 1800;
			break;
		case 6:
			return 2000;
			break;
		case 7:
			return 1800;
			break;
		case 8:
			return 2100;
			break;
	}
	return 1000;
}

char* func_650(int iParam0)//Position - 0x86804
{
	switch (iParam0)
	{
		case 0:
			return "hole_01_cam";
			break;
		case 1:
			return "hole_02_cam";
			break;
		case 2:
			return "hole_03_cam";
			break;
		case 3:
			return "hole_04_cam";
			break;
		case 4:
			return "hole_05_cam";
			break;
		case 5:
			return "hole_06_cam";
			break;
		case 6:
			return "hole_07_cam";
			break;
		case 7:
			return "hole_08_cam";
			break;
		case 8:
			return "hole_09_cam";
			break;
	}
	return "";
}

char* func_651()//Position - 0x868AF
{
	return "mini@golfhole_preview";
}

void func_652(int iParam0, var uParam1, var uParam2)//Position - 0x868BC
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { -1374f, 172.6f, 0f };
			*uParam2 = { -1141.4f, 208.2f, 0f };
			break;
		case 1:
			*uParam1 = { -1102.9f, 157.2f, 0f };
			*uParam2 = { -1304.2f, 168.9f, 0f };
			break;
		case 2:
			*uParam1 = { -1313.6f, 128.3f, 0f };
			*uParam2 = { -1238.7f, 83.6f, 0f };
			break;
		case 3:
			*uParam1 = { -1219.8f, 107.9f, 0f };
			*uParam2 = { -1109.8f, 28.7f, 0f };
			break;
		case 4:
			*uParam1 = { -1101.3f, 70.3f, 0f };
			*uParam2 = { -974.4f, -73.3f, 0f };
			break;
		case 5:
			*uParam1 = { -983.8f, -103.7f, 0f };
			*uParam2 = { -1075.9f, -109.8f, 0f };
			break;
		case 6:
			*uParam1 = { -1115.6f, -104.6f, 0f };
			*uParam2 = { -1268.7f, -7.2f, 0f };
			break;
		case 7:
			*uParam1 = { -1275.3f, 41.2f, 0f };
			*uParam2 = { -1059f, -88.8f, 0f };
			break;
		case 8:
			*uParam1 = { -1137f, -1.5f, 0f };
			*uParam2 = { -1276.7f, 91.8f, 0f };
			break;
	}
}

float func_653(float fParam0)//Position - 0x87355
{
	return (fParam0 * 2.54f);
}

void func_654(int* iParam0)//Position - 0x8749B
{
	if (HUD::DOES_BLIP_EXIST(iParam0->f_636))
	{
		HUD::REMOVE_BLIP(&(iParam0->f_636));
	}
}

char* func_655(bool bParam0)//Position - 0x876D4
{
	if (bParam0)
	{
		return "amb@world_human_golf_player@male@base";
	}
	return "amb@world_human_golf_player@male@idle_a";
}

bool func_656(var uParam0, int iParam1)//Position - 0x87A54
{
	return (uParam0->f_121 && iParam1) != 0;
}

int func_657()//Position - 0x87E0F
{
	if ((((__LIB_0__::func_1("HAZARD_UNPLAYABLE") || __LIB_0__::func_1("NEAR_LIMIT")) || __LIB_0__::func_1("HAZARD_ROUGH")) || __LIB_0__::func_1("HAZARD_SAND")) || __LIB_0__::func_1("GOLF_KICK"))
	{
		return 1;
	}
	return 0;
}

int func_658(int iParam0)//Position - 0x88222
{
	if (((iParam0 == 2 || iParam0 == 4) || iParam0 == 3) || iParam0 == 1)
	{
		return 1;
	}
	return 0;
}

float func_659(int iParam0)//Position - 0x88254
{
	if (iParam0 == 0)
	{
		return 15f;
	}
	else if (iParam0 == 1)
	{
		return -15f;
	}
	else if (iParam0 == 2)
	{
		return 30f;
	}
	else if (iParam0 == 3)
	{
		return -30f;
	}
	return 0f;
}

bool func_660(struct<3> Param0, int iParam1, var uParam2, int iParam3)//Position - 0x8829E
{
	*uParam2 = { 0f, 0f, 0f };
	switch (iParam1)
	{
		case 4:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1025.0541f, 35.63463f, 49.51666f, -1063.491f, -0.983391f, 49.58419f, 14f, false, false))
			{
				switch (iParam3)
				{
					case 0:
						*uParam2 = { -1053.8479f, 6.4804f, 50.0762f };
						break;
					case 1:
						*uParam2 = { -1013.1949f, 34.3117f, 49.6766f };
						break;
					case 2:
						*uParam2 = { -1010.7953f, 30.7865f, 49.542f };
						break;
					case 3:
						*uParam2 = { -1009.6174f, 28.4031f, 49.4536f };
						break;
					case 4:
						*uParam2 = { -1007.7808f, 31.3775f, 49.5029f };
						break;
					case 5:
						*uParam2 = { -1008.8806f, 33.5182f, 49.5793f };
						break;
					}
			}
	}
	return !__LIB_0__::func_86(*uParam2);
}

bool func_661(struct<3> Param0, int iParam1, var uParam2, int iParam3)//Position - 0x883A2
{
	*uParam2 = { 0f, 0f, 0f };
	switch (iParam1)
	{
		case 0:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1249.8282f, 188.86685f, 63.771088f, -1234.0035f, 191.45448f, 63.60073f, 15.5f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1245.3962f, 177.212f, 60.7943f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1248.5626f, 177.2773f, 60.755f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1241.0245f, 174.8023f, 60.7391f };
				}
				else
				{
					*uParam2 = { -1244.9492f, 174.9718f, 60.4628f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1218.8427f, 195.19624f, 65.02537f, -1236.062f, 192.20045f, 63.54957f, 15.5f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1226.7131f, 180.4805f, 62.4568f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1229.9747f, 180.3678f, 62.409f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1228.1005f, 178.8995f, 62.2322f };
				}
				else
				{
					*uParam2 = { -1224.812f, 179.1062f, 62.3527f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1128.3456f, 200.67926f, 63.879005f, -1124.4639f, 218.24174f, 64.95401f, 8.5f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1133.4523f, 214.3222f, 63.9877f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1133.9468f, 212.6187f, 63.9865f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1135.0956f, 214.6792f, 64.0555f };
				}
				else
				{
					*uParam2 = { -1134.0245f, 216.451f, 64.0271f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1124.2286f, 206.0065f, 63.737614f, -1112.9108f, 205.86542f, 64.8558f, 13f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1117.0522f, 197.3494f, 63.5884f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1119.303f, 197.49f, 63.5835f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1118.4226f, 195.8079f, 63.553f };
				}
				else
				{
					*uParam2 = { -1116.7025f, 195.9991f, 63.6064f };
				}
			}
			break;
		case 1:
			if (__LIB_12__::func_770(Param0, -1221.4803f, 136.97223f, 57.883053f, 12.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1210.6311f, 145.2679f, 58.9165f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1209.8438f, 143.8164f, 58.8644f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1208.9712f, 142.6966f, 58.8439f };
				}
				else
				{
					*uParam2 = { -1208.7344f, 144.429f, 58.9932f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1307.9944f, 148.2658f, 57.013622f, 12.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1298.0403f, 158.6725f, 57.49f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1296.9418f, 160.0557f, 57.4344f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1300.7107f, 161.1427f, 57.3667f };
				}
				else
				{
					*uParam2 = { -1299.6464f, 163.088f, 57.4339f };
				}
			}
			break;
		case 2:
			if (__LIB_12__::func_770(Param0, -1249.7972f, 120.94847f, 55.954487f, 10.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1261.0046f, 112.5053f, 55.7922f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1259.0416f, 111.0428f, 55.7076f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1261.3955f, 110.6866f, 55.7104f };
				}
				else
				{
					*uParam2 = { -1262.2742f, 114.0666f, 55.8884f };
				}
			}
			break;
		case 3:
			if (__LIB_12__::func_770(Param0, -1148.605f, 90.54533f, 56.79255f, 9f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1160.4265f, 89.4942f, 57.1402f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1160.5393f, 91.2892f, 57.1851f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1160.3037f, 93.5336f, 57.3266f };
				}
				else
				{
					*uParam2 = { -1159.3896f, 95.3945f, 57.3836f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1123.9172f, 62.398174f, 54.09763f, 12.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1128.726f, 74.4978f, 55.1694f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1132.3936f, 74.8003f, 55.3063f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1135.1388f, 73.6844f, 55.33f };
				}
				else
				{
					*uParam2 = { -1135.5647f, 71.0212f, 55.0845f };
				}
			}
			break;
		case 4:
			if (__LIB_12__::func_770(Param0, -1022.97314f, 9.365685f, 48.729454f, 10f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1029.7274f, 20.6269f, 49.6834f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1027.7196f, 21.4991f, 49.6488f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1031.913f, 18.7379f, 49.6796f };
				}
				else
				{
					*uParam2 = { -1033.0242f, 16.8601f, 49.6274f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -990.9769f, -12.22463f, 45.47527f, -1014.5606f, -2.282516f, 48.512466f, 18.25f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -992.1171f, -0.4806f, 47.2586f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -990.9562f, -3.1426f, 46.9676f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -990.7891f, -4.6779f, 46.7283f };
				}
				else
				{
					*uParam2 = { -990.6757f, -1.6019f, 47.218f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1002.7027f, -19.814455f, 45.336033f, -1013.57263f, -35.536903f, 45.56096f, 16.25f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1014.7323f, -16.9885f, 46.0129f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1016.0983f, -18.4531f, 45.9076f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1017.3691f, -20.0257f, 45.7855f };
				}
				else
				{
					*uParam2 = { -1018.2857f, -21.7339f, 45.6093f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1014.0701f, -38.88825f, 44.127777f, 3.75f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1019.7245f, -32.4241f, 44.6345f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1021.8109f, -34.9325f, 44.3734f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1022.8051f, -37.8995f, 44.0943f };
				}
				else
				{
					*uParam2 = { -1023.685f, -36.2095f, 44.2471f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -974.33545f, -87.08588f, 39.36538f, 12.5f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -986.5154f, -79.0639f, 40.3237f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -987.26f, -81.1786f, 40.4433f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -987.3561f, -83.2422f, 40.5134f };
				}
				else
				{
					*uParam2 = { -987.2036f, -85.4018f, 40.5124f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -956.215f, -73.61868f, 39.467106f, 11.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -965.3108f, -62.4259f, 40.834f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -966.5059f, -63.5912f, 40.8414f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -967.5871f, -64.9728f, 40.7888f };
				}
				else
				{
					*uParam2 = { -968.6852f, -62.253f, 41.0284f };
				}
			}
			break;
		case 5:
			if (__LIB_12__::func_770(Param0, -1047.7039f, -99.8536f, 41.880566f, 7.5f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1037.8843f, -103.3558f, 41.6942f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1037.339f, -101.2052f, 41.9289f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1037.392f, -98.659f, 42.1714f };
				}
				else
				{
					*uParam2 = { -1038.0197f, -105.0445f, 41.4403f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1088.4696f, -108.75059f, 40.327614f, 10f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1077.0906f, -102.678f, 40.9184f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1076.3594f, -105.3632f, 40.8033f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1075.4891f, -107.4368f, 40.7636f };
				}
				else
				{
					*uParam2 = { -1075.1426f, -109.1178f, 40.7142f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1087.139f, -125.95556f, 39.887203f, 9.5f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1075.6034f, -127.5685f, 40.1276f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1076.0428f, -128.7151f, 40.09f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1076.6813f, -130.3401f, 40.0376f };
				}
				else
				{
					*uParam2 = { -1077.3766f, -132.3562f, 39.9749f };
				}
			}
			break;
		case 6:
			if (__LIB_12__::func_770(Param0, -1275.2303f, -13.947482f, 47.105656f, 13f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1265.8893f, -27.2585f, 46.6329f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1269.1022f, -28.6319f, 46.76f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1272.0457f, -29.1311f, 46.8971f };
				}
				else
				{
					*uParam2 = { -1274.3591f, -29.081f, 47.0307f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1300.1418f, 16.41488f, 50.347145f, 11f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1303.5238f, 29.1151f, 51.6491f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1306.367f, 28.4745f, 51.8943f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1309.0829f, 27.1428f, 52.136f };
				}
				else
				{
					*uParam2 = { -1311.1244f, 25.4314f, 52.3217f };
				}
			}
			break;
		case 7:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1153.7592f, 5.592854f, 49.25827f, -1193.2933f, -3.027822f, 47.537586f, 16f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1174.0311f, 13.0789f, 48.921f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1176.1425f, 12.0404f, 48.8421f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1177.7793f, 12.7224f, 48.8837f };
				}
				else
				{
					*uParam2 = { -1177.7153f, 11.1655f, 48.7797f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1096.5605f, -79.871956f, 43.651833f, 11f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1109.0933f, -76.4043f, 42.4111f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1108.5151f, -74.3624f, 42.3498f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1107.7117f, -72.2814f, 42.2795f };
				}
				else
				{
					*uParam2 = { -1106.5951f, -70.5346f, 42.2694f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1055.6727f, -77.093796f, 43.748905f, 13.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1060.041f, -65.1439f, 43.2142f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1057.8276f, -64.7564f, 43.1777f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1055.5619f, -63.9114f, 43.1779f };
				}
				else
				{
					*uParam2 = { -1065.857f, -67.254f, 43.2841f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1047.4744f, -100.36991f, 43.101807f, 7.25f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1054.9695f, -106.0665f, 41.2801f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1053.6267f, -106.6474f, 41.373f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1052.3851f, -107.0745f, 41.4528f };
				}
				else
				{
					*uParam2 = { -1051.1041f, -107.5534f, 41.4978f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1024.673f, -84.07045f, 43.897423f, 6.5f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1019.6564f, -91.2034f, 42.1369f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1018.5802f, -89.0888f, 42.2369f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1017.7621f, -86.8312f, 42.2233f };
				}
				else
				{
					*uParam2 = { -1017.4727f, -84.2646f, 42.2985f };
				}
			}
			break;
		case 8:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1153.7592f, 5.592854f, 49.25827f, -1193.2933f, -3.027822f, 47.537586f, 16f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1169.097f, -7.196f, 46.4323f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1167.2222f, -7.1338f, 46.4319f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1164.85f, -7.2801f, 46.4345f };
				}
				else
				{
					*uParam2 = { -1162.7856f, -7.8826f, 46.4761f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1267.6012f, 67.51432f, 52.510513f, 6.75f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1261.2919f, 61.7125f, 50.4284f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1259.6598f, 63.7194f, 50.5575f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1258.2268f, 65.9119f, 50.6718f };
				}
				else
				{
					*uParam2 = { -1258.2637f, 68.0789f, 50.8772f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1273.7953f, 67.98034f, 54.25151f, -1287.2177f, 66.19893f, 53.76926f, 16f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1269.3099f, 73.8897f, 52.1591f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1269.9092f, 75.9058f, 52.3567f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1267.6621f, 73.8826f, 52.0383f };
				}
				else
				{
					*uParam2 = { -1268.6478f, 76.1384f, 52.2743f };
				}
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1287.9976f, 72.037735f, 55.717316f, -1299.0497f, 67.99752f, 54.09443f, 9.5f, false, false))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1304.0128f, 71.0417f, 53.2779f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1303.5636f, 69.7113f, 53.2013f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1303.674f, 67.6263f, 52.9456f };
				}
				else
				{
					*uParam2 = { -1303.1334f, 65.3647f, 52.5448f };
				}
			}
			else if (__LIB_12__::func_770(Param0, -1283.16f, 90.42681f, 55.650764f, 8f, 1))
			{
				if (iParam3 == 0)
				{
					*uParam2 = { -1292.8694f, 99.573f, 54.4191f };
				}
				else if (iParam3 == 1)
				{
					*uParam2 = { -1290.1041f, 100.9091f, 54.5348f };
				}
				else if (iParam3 == 2)
				{
					*uParam2 = { -1288.1364f, 101.3769f, 54.5255f };
				}
				else
				{
					*uParam2 = { -1285.9658f, 101.4354f, 54.5018f };
				}
			}
			break;
	}
	return !__LIB_0__::func_86(*uParam2);
}

int func_662(struct<3> Param0, int iParam1)//Position - 0x89C3B
{
	switch (iParam1)
	{
		case 0:
			return SYSTEM::VDIST2(Param0, -1118.9744f, 216.7396f, 62.148014f) < (8.75f * 8.75f);
			break;
		case 1:
			return 0;
			break;
		case 2:
			return 0;
			break;
		case 3:
			return SYSTEM::VDIST2(Param0, -1098.52f, 10.75f, 49.73f) < (25f * 25f);
			break;
		case 4:
			return 0;
			break;
		case 5:
			return 0;
			break;
		case 6:
			return 0;
			break;
		case 7:
			return 0;
			break;
		case 8:
			return 0;
			break;
	}
	return 0;
}

void func_663(int* iParam0)//Position - 0x8A953
{
	iParam0->f_572 = 0;
	if (CAM::DOES_CAM_EXIST(iParam0->f_541))
	{
		CAM::DESTROY_CAM(iParam0->f_541, false);
	}
	if (CAM::DOES_CAM_EXIST(iParam0->f_542))
	{
		CAM::DESTROY_CAM(iParam0->f_542, false);
	}
	if (CAM::DOES_CAM_EXIST(iParam0->f_543))
	{
		CAM::DESTROY_CAM(iParam0->f_543, false);
	}
}

void func_664(var uParam0, int iParam1)//Position - 0x8AB28
{
	uParam0->f_1[iParam1 /*4*/].f_1 = 0;
	uParam0->f_1[iParam1 /*4*/].f_2 = 0;
	uParam0->f_1[iParam1 /*4*/].f_3 = 0;
	uParam0->f_1[iParam1 /*4*/] = 0;
}

void func_665(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x8B3C5
{
	switch (iParam0)
	{
		case 1:
			*uParam3 = 0.07f;
			*uParam1 = 1f;
			*uParam2 = 1.585f;
			break;
		case 3:
			*uParam3 = 0.08f;
			*uParam1 = 1f;
			*uParam2 = 1.585f;
			break;
		case 5:
			*uParam3 = 0.08f;
			*uParam1 = 1.035f;
			*uParam2 = 1.591f;
			break;
		case 7:
			*uParam3 = 0.08f;
			*uParam1 = 1.075f;
			*uParam2 = 1.65f;
			break;
		case 8:
			*uParam3 = 0.085f;
			*uParam1 = 1.075f;
			*uParam2 = 1.66f;
			break;
		case 9:
			*uParam3 = 0.085f;
			*uParam1 = 1.12f;
			*uParam2 = 1.67f;
			break;
		case 10:
			*uParam3 = 0.085f;
			*uParam1 = 1.135f;
			*uParam2 = 1.674f;
			break;
		case 11:
			*uParam3 = 0.09f;
			*uParam1 = 1.174f;
			*uParam2 = 1.69f;
			break;
		case 12:
			*uParam3 = 0.095f;
			*uParam1 = 1.215f;
			*uParam2 = 1.72f;
			break;
		case 13:
			*uParam3 = 0.097f;
			*uParam1 = 1.245f;
			*uParam2 = 1.73f;
			break;
		case 14:
			*uParam3 = 0.1f;
			*uParam1 = 1.265f;
			*uParam2 = 1.73f;
			break;
		case 16:
			*uParam3 = 0.1f;
			*uParam1 = 1.414f;
			*uParam2 = 1.73f;
			break;
		case 17:
			*uParam3 = 0.085f;
			*uParam1 = 1.485f;
			*uParam2 = 1.73f;
			break;
		case 19:
			*uParam3 = 0f;
			*uParam1 = 1f;
			*uParam2 = 1f;
			break;
		default:
			break;
	}
}

void func_666(var uParam0)//Position - 0x8B738
{
	uParam0->f_28 = { uParam0->f_25 };
}

void func_667(var uParam0)//Position - 0x8B74C
{
	if (uParam0->f_23 == 3)
	{
	}
	else if (uParam0->f_23 == -1)
	{
	}
	else if (uParam0->f_23 == 7)
	{
	}
	else if (uParam0->f_23 == 8)
	{
	}
	else if (uParam0->f_23 == 0)
	{
	}
	else if (uParam0->f_23 == 1)
	{
	}
	else if (uParam0->f_23 == 4)
	{
	}
	else if (uParam0->f_23 == 2)
	{
	}
	else if (uParam0->f_23 == 5)
	{
	}
	else if (uParam0->f_23 == 9)
	{
	}
	uParam0->f_24 = uParam0->f_23;
}

void func_668(int iParam0)//Position - 0x8C930
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		PED::RESET_PED_WEAPON_MOVEMENT_CLIPSET(iParam0);
		PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(iParam0, true);
		PED::SET_PED_CONFIG_FLAG(iParam0, 332, false);
	}
}

void func_669(int* iParam0, int iParam1)//Position - 0x8CA2C
{
	iParam0->f_120 = (iParam0->f_120 - (iParam0->f_120 && iParam1));
}

int func_670(var uParam0)//Position - 0x8CB1D
{
	float fVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(__LIB_9__::func_550(uParam0)))
	{
		return 0;
	}
	fVar0 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(__LIB_9__::func_550(uParam0), true), __LIB_7__::func_147(uParam0));
	if ((fVar0 < (4f * 4f) || __LIB_36__::func_410(uParam0, 512)) && ((!PED::IS_PED_RAGDOLL(__LIB_9__::func_550(uParam0)) && !ENTITY::IS_ENTITY_IN_AIR(__LIB_9__::func_550(uParam0))) && !TASK::IS_PED_GETTING_UP(__LIB_9__::func_550(uParam0))))
	{
		return 1;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(__LIB_9__::func_550(uParam0), false))
	{
		if (fVar0 < (12f * 12f))
		{
			return 1;
		}
	}
	return 0;
}

void func_671(int iParam0, bool bParam1, int iParam2)//Position - 0x8CBEA
{
	WEAPON::SET_CURRENT_PED_WEAPON(iParam0, joaat("WEAPON_UNARMED"), bParam1);
	if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_GOLFCLUB"), false) && iParam2)
	{
		WEAPON::REMOVE_WEAPON_FROM_PED(iParam0, joaat("WEAPON_GOLFCLUB"));
	}
}

int func_672(struct<3> Param0)//Position - 0x8CC20
{
	if (((((((((((SYSTEM::VDIST2(Param0, -1365.7279f, 174.31537f, 57.01312f) < (20.75f * 20.75f) || SYSTEM::VDIST2(Param0, -1351.8052f, 179.00304f, 57.291412f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1338.6167f, 182.51062f, 57.515053f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1320.9374f, 184.8574f, 57.82013f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1303.4974f, 185.03795f, 58.282097f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1287.778f, 186.67972f, 58.92799f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1276.0924f, 187.6004f, 59.52738f) < (25.75f * 25.75f)) || SYSTEM::VDIST2(Param0, -1256.2947f, 188.98596f, 61.28985f) < (25f * 25f)) || SYSTEM::VDIST2(Param0, -1235.7712f, 189.36678f, 62.402626f) < (29.5f * 29.5f)) || SYSTEM::VDIST2(Param0, -1217.6161f, 191.28922f, 63.778843f) < (33.5f * 33.5f)) || SYSTEM::VDIST2(Param0, -1189.6769f, 198.54466f, 64.96094f) < (45f * 45f)) || SYSTEM::VDIST2(Param0, -1147.4658f, 215.92424f, 64.519f) < (49.75f * 49.75f))
	{
		return 0;
	}
	return 1;
}

int func_673()//Position - 0x8D9D0
{
	return Global_112414;
}

bool func_674(var uParam0)//Position - 0x8EAC4
{
	if (uParam0->f_578 < 0)
	{
		return 0;
	}
	return PATHFIND::DOES_NAVMESH_BLOCKING_OBJECT_EXIST(uParam0->f_578);
}

void func_675(var uParam0, int iParam1)//Position - 0x8EF23
{
	uParam0->f_119 = (uParam0->f_119 || iParam1);
}

bool func_676(var uParam0, int iParam1)//Position - 0x8EF36
{
	return (uParam0->f_119 && iParam1) != 0;
}

int func_677(int iParam0)//Position - 0x8F0BD
{
	if (iParam0 == 0)
	{
		return 45;
	}
	if (iParam0 == 1)
	{
		return 46;
	}
	if (iParam0 == 2)
	{
		return 47;
	}
	return 48;
}

int func_678(int* iParam0, int iParam1)//Position - 0x8F0F1
{
	return iParam0->f_628[iParam1];
}

int func_679(var uParam0, int iParam1)//Position - 0x8F7A0
{
	if (iParam1 < 0 || iParam1 >= *uParam0)
	{
		return -1;
	}
	return (uParam0[iParam1 /*40*/])->f_39;
}

void func_680(int* iParam0, int iParam1)//Position - 0x8F84A
{
	iParam0->f_118 = (iParam0->f_118 - (iParam0->f_118 && iParam1));
}

void func_681(int iParam0, int iParam1)//Position - 0x8FCB8
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "CLEAR_PLAYERCARD_SLOT");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, "CLEAR_SCOREBOARD_SLOT");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

int func_682(int iParam0)//Position - 0x9BE93
{
	if (iParam0 == 0)
	{
		return 146;
	}
	if (iParam0 == 1)
	{
		return 147;
	}
	if (iParam0 == 2)
	{
		return 148;
	}
	return 149;
}

void func_683(var uParam0, int iParam1, int iParam2)//Position - 0x9C1F8
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return;
	}
	(uParam0[iParam1 /*3*/])->f_2 = iParam2;
}

void func_684(int* iParam0, int iParam1)//Position - 0x9C28A
{
	iParam0->f_118 = (iParam0->f_118 || iParam1);
}

void func_685(int* iParam0)//Position - 0x9C29D
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "COURSE_PAR");
	__LIB_0__::func_610("PAR_5");
	__LIB_0__::func_610("PAR_4");
	__LIB_0__::func_610("PAR_3");
	__LIB_0__::func_610("PAR_4");
	__LIB_0__::func_610("PAR_4");
	__LIB_0__::func_610("PAR_3");
	__LIB_0__::func_610("PAR_4");
	__LIB_0__::func_610("PAR_5");
	__LIB_0__::func_610("PAR_4");
	__LIB_0__::func_610("PAR_TOTAL");
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_686(int* iParam0)//Position - 0x9C310
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "SET_SCOREBOARD_TITLE");
	__LIB_0__::func_610("TITLE_STANDING");
	__LIB_0__::func_610("HOLE_ALLCAPS");
	__LIB_0__::func_610("PAR_ALLCAPS");
	__LIB_0__::func_610("SCORE_ALLCAPS");
	__LIB_0__::func_610("SCORE_HOLEINONE");
	__LIB_0__::func_610("SCORE_BELOW_PAR");
	__LIB_0__::func_610("SCORE_ABOVE_PAR");
	__LIB_0__::func_610("HOLE_1");
	__LIB_0__::func_610("HOLE_2");
	__LIB_0__::func_610("HOLE_3");
	__LIB_0__::func_610("HOLE_4");
	__LIB_0__::func_610("HOLE_5");
	__LIB_0__::func_610("HOLE_6");
	__LIB_0__::func_610("HOLE_7");
	__LIB_0__::func_610("HOLE_8");
	__LIB_0__::func_610("HOLE_9");
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_687()//Position - 0x9C636
{
	if (STREAMING::IS_IPL_ACTIVE("GolfFlags"))
	{
		STREAMING::REMOVE_IPL("GolfFlags");
	}
}

bool func_688(int* iParam0, int iParam1)//Position - 0x9CA70
{
	return (iParam0->f_118 && iParam1) != 0;
}

int func_689(var uParam0, int iParam1)//Position - 0x9CB7E
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_9__::func_550(&(uParam0->f_15[iParam1 /*74*/]));
}

void func_690(var uParam0, int iParam1, int iParam2)//Position - 0x9CD18
{
	if (iParam1 < 0 || iParam1 >= *uParam0)
	{
		return;
	}
	(*uParam0)[iParam1 /*40*/] = iParam2;
}

void func_691(bool bParam0)//Position - 0x9CF28
{
	__LIB_0__::func_985();
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(2);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(19);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(1);
	if (bParam0)
	{
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(4);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
	}
	HUD::SET_WAYPOINT_OFF();
}

Vector3 func_692(var uParam0)//Position - 0x9D33E
{
	return -1175f, 40f, 57f;
}

int func_693(int iParam0)//Position - 0x9E304
{
	var uVar0;
	if (iParam0 != 0)
	{
		uVar0 = Global_113386.f_18979.f_26;
	}
	else
	{
		uVar0 = Global_113386.f_18979.f_25;
	}
	return uVar0;
}

void func_694(var uParam0)//Position - 0x9E412
{
	uParam0->f_124.f_11 = { 0.025f, 0.3f, 0.025f };
	uParam0->f_124.f_14 = { 255f, 255f, 255f };
	uParam0->f_124.f_17 = { 255f, 255f, 255f };
	uParam0->f_124.f_20 = { 255f, 255f, 255f };
	uParam0->f_124.f_23 = { 100f, 100f, 100f };
	uParam0->f_124.f_26 = 8;
	uParam0->f_124.f_27 = 10;
	uParam0->f_124.f_29 = 1f;
	uParam0->f_124.f_30 = 1f;
	uParam0->f_124.f_31 = 1f;
	uParam0->f_124.f_32 = 1f;
	uParam0->f_124.f_33 = 0.3f;
	GRAPHICS::GOLF_TRAIL_SET_RADIUS(uParam0->f_124.f_11, uParam0->f_124.f_11.f_1, uParam0->f_124.f_11.f_2);
	GRAPHICS::GOLF_TRAIL_SET_COLOUR(SYSTEM::FLOOR(uParam0->f_124.f_14), SYSTEM::FLOOR(uParam0->f_124.f_14.f_1), SYSTEM::FLOOR(uParam0->f_124.f_14.f_2), SYSTEM::FLOOR(uParam0->f_124.f_23), SYSTEM::FLOOR(uParam0->f_124.f_17), SYSTEM::FLOOR(uParam0->f_124.f_17.f_1), SYSTEM::FLOOR(uParam0->f_124.f_17.f_2), SYSTEM::FLOOR(uParam0->f_124.f_23.f_1), SYSTEM::FLOOR(uParam0->f_124.f_20), SYSTEM::FLOOR(uParam0->f_124.f_20.f_1), SYSTEM::FLOOR(uParam0->f_124.f_20.f_2), SYSTEM::FLOOR(uParam0->f_124.f_23.f_2));
	GRAPHICS::GOLF_TRAIL_SET_SHADER_PARAMS(uParam0->f_124.f_29, uParam0->f_124.f_30, uParam0->f_124.f_31, uParam0->f_124.f_32, uParam0->f_124.f_33);
}

void func_695(int* iParam0, int iParam1)//Position - 0x9E9B1
{
	iParam0->f_531 = (iParam0->f_531 || iParam1);
}

int func_696(var uParam0, int iParam1)//Position - 0xCD08F
{
	if (iParam1 < 0 || iParam1 >= *uParam0)
	{
		return 0;
	}
	return (uParam0[iParam1 /*40*/])->f_38;
}

void func_697(var uParam0)//Position - 0xCD14D
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_4))
	{
		ENTITY::DETACH_ENTITY(uParam0->f_4, true, true);
		ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&(uParam0->f_4));
	}
}

void func_698()//Position - 0xCD2C9
{
	if (!STREAMING::IS_IPL_ACTIVE("GolfFlags"))
	{
		STREAMING::REQUEST_IPL("GolfFlags");
	}
}

bool func_699(int iParam0)//Position - 0xCD345
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 == -1)
	{
		iVar0 = __LIB_0__::func_5();
	}
	return Global_1575038[iVar0];
}

int func_700(var uParam0, int iParam1)//Position - 0x20D7
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return -1;
	}
	return __LIB_0__::func_404(&(uParam0->f_15[iParam1 /*74*/]));
}

Vector3 func_701(var uParam0, int iParam1)//Position - 0x26D6
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_28)
	{
		return 0f, 0f, 0f;
	}
	return __LIB_36__::func_405(iParam1);
}

int func_702(var uParam0)//Position - 0x1429D
{
	int iVar0;
	int iVar1;
	struct<13> Var2;
	int iVar3;
	int iVar4;
	iVar4 = 0;
	iVar0 = uParam0->f_37;
	iVar3 = PLAYER::INT_TO_PLAYERINDEX(uParam0->f_37);
	if (iVar3 != __LIB_0__::func_162() && __LIB_0__::func_156(iVar3, 0, 1))
	{
		Var2 = { __LIB_0__::func_819(iVar3) };
		iVar1 = __LIB_1__::func_973(uParam0, uParam0->f_37);
		if (__LIB_0__::func_800(Var2))
		{
			switch (iVar1)
			{
				case 0:
					if (NETWORK::NETWORK_CAN_COMMUNICATE_WITH_GAMER(&Var2))
					{
						if (NETWORK::NETWORK_IS_GAMER_TALKING(&Var2))
						{
							iVar4 = 1;
							__LIB_1__::func_972(uParam0, iVar0, 2);
						}
					}
					else if (NETWORK::NETWORK_IS_GAMER_MUTED_BY_ME(&Var2))
					{
						iVar4 = 1;
						__LIB_1__::func_972(uParam0, iVar0, 1);
					}
					break;
				case 2:
					if (NETWORK::NETWORK_CAN_COMMUNICATE_WITH_GAMER(&Var2))
					{
						if (!NETWORK::NETWORK_IS_GAMER_TALKING(&Var2))
						{
							iVar4 = 1;
							__LIB_1__::func_972(uParam0, iVar0, 0);
						}
					}
					else
					{
						iVar4 = 1;
						__LIB_1__::func_972(uParam0, iVar0, 0);
					}
					break;
				case 1:
					if (NETWORK::NETWORK_CAN_COMMUNICATE_WITH_GAMER(&Var2))
					{
						if (!NETWORK::NETWORK_IS_GAMER_MUTED_BY_ME(&Var2))
						{
							iVar4 = 1;
							__LIB_1__::func_972(uParam0, iVar0, 0);
						}
					}
					else if (!NETWORK::NETWORK_IS_GAMER_MUTED_BY_ME(&Var2))
					{
						iVar4 = 1;
						__LIB_1__::func_972(uParam0, iVar0, 0);
					}
					break;
				}
			}
	}
	uParam0->f_37++;
	if (uParam0->f_37 >= 32)
	{
		uParam0->f_37 = 0;
	}
	return iVar4;
}

int func_703(struct<3> Param0, float fParam1, struct<3> Param2, var uParam3)//Position - 0x6FE0E
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	int iVar4;
	float fVar5;
	int iVar6;
	int iVar7;
	var uVar8;
	var uVar9;
	Var0 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Param0, fParam1, Param2) };
	Var1 = { Param0 - Var0 };
	Var2 = { __LIB_0__::func_79(Var1) };
	Var1 = { Var1 * Vector(0.75f, 0.75f, 0.75f) };
	Param0 = { Var0 + Var1 };
	GRAPHICS::DRAW_DEBUG_LINE(Var0, Param0, 255, 0, 0, 255);
	fVar5 = SYSTEM::VDIST(Var0, Param0);
	iVar4 = 0;
	while (iVar4 < 20)
	{
		GRAPHICS::DRAW_DEBUG_SPHERE(Var0 + FtoV(((SYSTEM::TO_FLOAT(iVar4) * fVar5) / 20f)) * Var2, 0.75f, 0, 0, 255, 10);
		iVar4++;
	}
	iVar6 = SHAPETEST::START_SHAPE_TEST_CAPSULE(Param0, Var0, 0.25f, 17, PLAYER::PLAYER_PED_ID(), 4);
	if (SHAPETEST::GET_SHAPE_TEST_RESULT(iVar6, &iVar7, &Var3, &uVar8, &uVar9) != 2)
	{
	}
	if (iVar7 != 0)
	{
		*uParam3 = { Var3 };
		return 1;
	}
	return 0;
}

bool func_704()//Position - 0x70A06
{
	return ((((__LIB_36__::func_392() && LOCALIZATION::GET_CURRENT_LANGUAGE() != 10) && LOCALIZATION::GET_CURRENT_LANGUAGE() != 9) && LOCALIZATION::GET_CURRENT_LANGUAGE() != 8) && LOCALIZATION::GET_CURRENT_LANGUAGE() != 12);
}

int func_705(struct<3> Param0)//Position - 0x72995
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (SYSTEM::VDIST2(__LIB_36__::func_405(iVar0), Param0) < (__LIB_36__::func_404(iVar0) * __LIB_36__::func_404(iVar0)))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_706(var uParam0, var uParam1, int iParam2)//Position - 0x7327C
{
	__LIB_1__::func_270(&(uParam0->f_15[iParam2 /*74*/]), uParam1);
}

int func_707(var uParam0, int iParam1)//Position - 0x732E8
{
	return __LIB_1__::func_285(&(uParam0->f_15[iParam1 /*74*/]));
}

var func_708(bool bParam0)//Position - 0x73666
{
	if (!bParam0)
	{
		return __LIB_36__::func_395();
	}
	return __LIB_36__::func_394();
}

int func_709(var uParam0, int iParam1)//Position - 0x777BC
{
	if (iParam1 < 0 || iParam1 >= uParam0->f_15)
	{
		return 0;
	}
	return __LIB_9__::func_818(&(uParam0->f_15[iParam1 /*74*/]));
}

void func_710(var uParam0, float fParam1, struct<3> Param2)//Position - 0x83B23
{
	float fVar0;
	float fVar1;
	Param2 = { __LIB_0__::func_79(Param2) };
	fVar0 = SYSTEM::COS(fParam1);
	fVar1 = SYSTEM::SIN(fParam1);
	*uParam0 = { __LIB_36__::func_483(*uParam0, Param2) * Vector(fVar0, fVar0, fVar0) + __LIB_0__::func_835(Param2, *uParam0) * Vector(fVar1, fVar1, fVar1) + __LIB_36__::func_441(*uParam0, Param2) };
}

void func_711()//Position - 0x9E58C
{
	if ((BitTest(Global_1888862[PLAYER::NETWORK_PLAYER_ID_TO_INT() /*120*/].f_38.f_27, 3) || __LIB_23__::func_264(PLAYER::PLAYER_ID())) || Global_1973321.f_726.f_5)
	{
		return;
	}
	if (!__LIB_12__::func_393())
	{
		if (__LIB_19__::func_112(11, -1) == 0)
		{
			if (PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID()))
			{
				if (!__LIB_0__::func_77(1) && !__LIB_0__::func_193())
				{
					switch (Global_2727834)
					{
						case 0:
							if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 48 /*INPUT_HUD_SPECIAL*/))
							{
								__LIB_0__::func_467();
								Global_2727834++;
								if (__LIB_13__::func_641(joaat("MPPLY_TOGGLE_OFF_BIG_RADAR")) == 0)
								{
									HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(true);
									__LIB_10__::func_255(1);
								}
								HUD::SET_BIGMAP_ACTIVE(true, false);
								Global_2678393.f_1593 = 1;
								__LIB_23__::func_454(1);
							}
							break;
						case 1:
							__LIB_28__::func_709();
							if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 48 /*INPUT_HUD_SPECIAL*/))
							{
								__LIB_0__::func_467();
								Global_2727834 = (Global_2727834 - 1);
								HUD::SET_BIGMAP_ACTIVE(false, false);
								__LIB_0__::func_467();
								HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
								__LIB_10__::func_255(0);
								Global_2678393.f_1593 = 0;
								__LIB_23__::func_454(0);
							}
							break;
						case 2:
							break;
					}
				}
				else if (Global_2727834 == 1)
				{
					Global_2727834 = (Global_2727834 - 1);
					HUD::SET_BIGMAP_ACTIVE(false, false);
					HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
					__LIB_0__::func_467();
					__LIB_10__::func_255(0);
					Global_2678393.f_1593 = 0;
					__LIB_23__::func_454(0);
					__LIB_0__::func_467();
				}
			}
			else if (__LIB_0__::func_137(24, -1) || MISC::GET_PROFILE_SETTING(221) == 1)
			{
				__LIB_28__::func_709();
				switch (__LIB_2__::func_6())
				{
					case 0:
						if (Global_2727831)
						{
							HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
							__LIB_10__::func_255(0);
						}
						break;
					case 1:
						if (Global_2727831 == 0)
						{
							HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(true);
							__LIB_10__::func_255(1);
						}
						break;
					case 2:
						if (Global_2727831 == 0)
						{
							HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(true);
							__LIB_10__::func_255(1);
						}
						break;
				}
				HUD::SET_BIGMAP_ACTIVE(true, false);
				Global_2678393.f_1593 = 1;
			}
			else if (__LIB_0__::func_409())
			{
				switch (__LIB_2__::func_6())
				{
					case 0:
						__LIB_0__::func_467();
						HUD::SET_BIGMAP_ACTIVE(false, false);
						HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
						__LIB_10__::func_255(0);
						__LIB_0__::func_467();
						Global_2678393.f_1593 = 0;
						break;
					case 1:
						__LIB_0__::func_794(&Global_2727835);
						HUD::SET_BIGMAP_ACTIVE(false, false);
						HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
						__LIB_10__::func_255(0);
						__LIB_0__::func_467();
						Global_2678393.f_1593 = 0;
						break;
					case 2:
						__LIB_28__::func_709();
						if (__LIB_0__::func_937(&Global_2727835, 4000, 0))
						{
							HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(false);
							__LIB_10__::func_255(0);
						}
						else if (__LIB_13__::func_641(joaat("MPPLY_TOGGLE_OFF_BIG_RADAR")) == 0)
						{
							HUD::DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(true);
							__LIB_10__::func_255(1);
						}
						__LIB_28__::func_709();
						HUD::SET_BIGMAP_ACTIVE(true, false);
						Global_2678393.f_1593 = 1;
						break;
				}
			}
			else
			{
				__LIB_0__::func_467();
				HUD::SET_BIGMAP_ACTIVE(false, false);
				__LIB_0__::func_467();
				Global_2678393.f_1593 = 0;
			}
		}
		else
		{
			__LIB_0__::func_467();
			HUD::SET_BIGMAP_ACTIVE(false, false);
			__LIB_0__::func_467();
			Global_2678393.f_1593 = 0;
		}
	}
}

struct<4> func_712(int iParam0)//Position - 0x152BC
{
	char cVar0[32];
	if (__LIB_0__::func_156(iParam0, 0, 1))
	{
		Global_2787505 = { __LIB_0__::func_819(iParam0) };
		if (__LIB_0__::func_53())
		{
			if (__LIB_0__::func_800(Global_2787505))
			{
				if (!NETWORK::NETWORK_CAN_VIEW_GAMER_USER_CONTENT(&Global_2787505))
				{
					return cVar0;
				}
			}
		}
		else if (!NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
		{
			return cVar0;
		}
		if (__LIB_1__::func_87(&Global_2787505))
		{
			Global_2787435 = { __LIB_1__::func_892(iParam0) };
			__LIB_1__::func_825(&Global_2787435, &cVar0);
		}
	}
	return cVar0;
}

int func_713(var uParam0)//Position - 0x153B5
{
	__LIB_4__::func_993();
	if (!__LIB_0__::func_864(&(uParam0->f_19)))
	{
		if (PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 187 /*INPUT_FRONTEND_DOWN*/) || (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/) && PAD::IS_DISABLED_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 203 /*INPUT_FRONTEND_X*/)))
		{
			__LIB_18__::func_874(&(uParam0->f_17));
			__LIB_0__::func_795(&(uParam0->f_19), 0, 0);
			__LIB_18__::func_873(uParam0, 0);
		}
	}
	else if (__LIB_0__::func_864(&(uParam0->f_19)))
	{
		if ((PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 187 /*INPUT_FRONTEND_DOWN*/) && !__LIB_1__::func_827()) || ((PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/) && PAD::IS_DISABLED_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 203 /*INPUT_FRONTEND_X*/)) && !__LIB_1__::func_827()))
		{
			__LIB_18__::func_873(uParam0, 1);
			return 0;
		}
		else if (BitTest(uParam0->f_33, 0))
		{
			return 1;
		}
		else if (__LIB_18__::func_874(&(uParam0->f_17)))
		{
			__LIB_18__::func_524(&(uParam0->f_17), 0, 0);
			__LIB_18__::func_872(&(uParam0->f_17), "CELEB_LIST" /* GXT: Players */, 1);
			MISC::SET_BIT(&(uParam0->f_33), 0);
		}
	}
	return 0;
}

int func_714(int iParam0)//Position - 0x75269
{
	if (__LIB_0__::func_216(iParam0) == 145)
	{
		return __LIB_16__::func_750(iParam0);
	}
	return __LIB_0__::func_216(iParam0);
}

bool func_715()//Position - 0x75319
{
	return (((NETWORK::NETWORK_IS_SIGNED_ONLINE() && NETWORK::NETWORK_IS_SIGNED_IN()) && __LIB_1__::func_894()) && PLAYER::IS_PLAYER_ONLINE());
}

void func_716(int* iParam0)//Position - 0x9D220
{
	if (!iParam0->f_453)
	{
		if (Global_1574971)
		{
			__LIB_18__::func_925(iParam0, 0);
			if (__LIB_18__::func_867(iParam0))
			{
				iParam0->f_453 = 1;
			}
		}
	}
	else if ((__LIB_0__::func_457(PLAYER::PLAYER_ID()) && !__LIB_1__::func_11()) && !__LIB_1__::func_308())
	{
		if (!__LIB_0__::func_864(&(iParam0->f_454)))
		{
			__LIB_0__::func_795(&(iParam0->f_454), 0, 0);
		}
		else if (__LIB_0__::func_937(&(iParam0->f_454), 5000, 0))
		{
			GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(iParam0);
			GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&(iParam0->f_1));
			GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&(iParam0->f_2));
			iParam0->f_453 = 0;
			Global_1574971 = 0;
			__LIB_0__::func_794(&(iParam0->f_454));
		}
	}
}

int func_717()//Position - 0x14E49
{
	if (__LIB_1__::func_15(PLAYER::PLAYER_ID()) || __LIB_2__::func_119())
	{
		if (!__LIB_32__::func_196(PLAYER::PLAYER_ID()))
		{
			return 0;
		}
	}
	return 1;
}

void func_718(var uParam0, var uParam1)//Position - 0x33E2
{
	int iVar0;
	bool bVar1;
	var uVar2[3];
	int iVar3;
	bool bVar4;
	bool bVar5;
	struct<8> Var6;
	char[] cVar7[8];
	int iVar8[3];
	int iVar9;
	struct<13> Var10;
	var uVar11;
	struct<3> Var12;
	struct<3> Var13;
	bool bVar14;
	__LIB_0__::func_627(&(Global_2103068.f_49), 1, 0);
	HUD::HIDE_HELP_TEXT_THIS_FRAME();
	__LIB_1__::func_733();
	__LIB_1__::func_33(0);
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	__LIB_3__::func_93(1);
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
	__LIB_0__::func_876(1);
	__LIB_1__::func_10(1);
	if (!__LIB_11__::func_773())
	{
		if (!AUDIO::IS_AUDIO_SCENE_ACTIVE("LEADERBOARD_SCENE"))
		{
			AUDIO::START_AUDIO_SCENE("LEADERBOARD_SCENE");
		}
	}
	if (!BitTest(uParam1->f_42, 3))
	{
		*uParam0 = __LIB_8__::func_314();
		MISC::SET_BIT(&(uParam1->f_42), 3);
	}
	Var10 = { __LIB_0__::func_819(PLAYER::PLAYER_ID()) };
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam0))
	{
		if (((!NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS() || !PLAYER::IS_PLAYER_ONLINE()) || (!NETWORK::NETWORK_HAVE_ONLINE_PRIVILEGES() && NETWORK::NETWORK_HAS_AGE_RESTRICTIONS())) || Global_2097536.f_2832 != 0)
		{
			if (!PLAYER::IS_PLAYER_ONLINE())
			{
				if (Global_2097536.f_2829 != 2)
				{
					MISC::CLEAR_BIT(&(uParam1->f_42), 1);
					Global_2097536.f_2829 = 2;
				}
			}
			else if (!NETWORK::NETWORK_HAVE_ONLINE_PRIVILEGES() && NETWORK::NETWORK_HAS_AGE_RESTRICTIONS())
			{
				if (Global_2097536.f_2829 != 3)
				{
					MISC::CLEAR_BIT(&(uParam1->f_42), 1);
					Global_2097536.f_2829 = 3;
				}
			}
			else if (!NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS())
			{
				if (Global_2097536.f_2829 != 4)
				{
					MISC::CLEAR_BIT(&(uParam1->f_42), 1);
					Global_2097536.f_2829 = 4;
				}
			}
			else if (Global_2097536.f_2832 != 0)
			{
				if (Global_2097536.f_2829 != 5)
				{
					MISC::CLEAR_BIT(&(uParam1->f_42), 1);
					Global_2097536.f_2829 = 5;
				}
			}
			if (!BitTest(uParam1->f_42, 1))
			{
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*uParam0, "CLEAR_ALL_SLOTS");
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				__LIB_8__::func_313(*uParam0, Global_2097536.f_2780);
				if (HUD::DOES_TEXT_LABEL_EXIST(&(Global_2097536.f_2780.f_1)))
				{
					if (!__LIB_8__::func_312(uParam1->f_44))
					{
						if (Global_2097536.f_2780.f_26 > 0)
						{
							Var6 = { Global_2097536.f_2780.f_9 };
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &Var6, Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
						}
						else
						{
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
						}
					}
					else if (!Global_2097536.f_2780.f_27)
					{
						StringCopy(&Var6, "FMMC_COR_SCLB5" /* GXT: Driver */, 64);
						if (Global_2097536.f_2780.f_26 > 0)
						{
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
						}
						else
						{
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
						}
					}
					else
					{
						StringCopy(&Var6, "FMMC_COR_SCLB6" /* GXT: Co-Driver */, 64);
						if (Global_2097536.f_2780.f_26 > 0)
						{
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
						}
						else
						{
							__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
						}
					}
					__LIB_8__::func_310(*uParam0, "SCLB_C_RANK" /* GXT: POSITION */, &(Global_2097536.f_2717), Global_2097536.f_2708);
				}
				iVar9 = 0;
				MISC::SET_BIT(&iVar9, 4);
				__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 1);
				iVar9 = 0;
				MISC::SET_BIT(&iVar9, 5);
				__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 1);
				iVar9 = 0;
				MISC::SET_BIT(&iVar9, 6);
				__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 1);
				MISC::SET_BIT(&(uParam1->f_42), 1);
				__LIB_8__::func_308(*uParam0);
				MISC::CLEAR_BIT(&(uParam1->f_42), 2);
				HUD::CLEAR_HELP(true);
			}
			else
			{
				__LIB_8__::func_308(*uParam0);
			}
		}
		else
		{
			if (Global_2097536.f_2829 != 1)
			{
				MISC::CLEAR_BIT(&(uParam1->f_42), 1);
				Global_2097536.f_2829 = 1;
			}
			if (!__LIB_36__::func_402(uParam1))
			{
				uParam1->f_246.f_1 = -1;
				MISC::CLEAR_BIT(&(uParam1->f_42), 1);
				if (!BitTest(uParam1->f_42, 0))
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*uParam0, "CLEAR_ALL_SLOTS");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					__LIB_8__::func_313(*uParam0, Global_2097536.f_2780);
					if (HUD::DOES_TEXT_LABEL_EXIST(&(Global_2097536.f_2780.f_1)))
					{
						if (!__LIB_8__::func_312(uParam1->f_44))
						{
							if (Global_2097536.f_2780.f_26 > 0)
							{
								Var6 = { Global_2097536.f_2780.f_9 };
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &Var6, 1, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						else if (!Global_2097536.f_2780.f_27)
						{
							StringCopy(&Var6, "FMMC_COR_SCLB5" /* GXT: Driver */, 64);
							if (Global_2097536.f_2780.f_26 > 0)
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						else
						{
							StringCopy(&Var6, "FMMC_COR_SCLB6" /* GXT: Co-Driver */, 64);
							if (Global_2097536.f_2780.f_26 > 0)
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						__LIB_8__::func_310(*uParam0, "SCLB_C_RANK" /* GXT: POSITION */, &(Global_2097536.f_2717), Global_2097536.f_2708);
					}
					MISC::SET_BIT(&(uParam1->f_42), 0);
					MISC::CLEAR_BIT(&(uParam1->f_42), 2);
				}
				iVar3 = 0;
				iVar0 = 0;
				if (Global_2097536.f_2825 == -1)
				{
					StringCopy(&Var12, "SC_LB_DL0" /* GXT: Downloading */, 24);
					iVar0 = 0;
					while (iVar0 < 3)
					{
						if (iVar0 == 0)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 4);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						else if (iVar0 == 1)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 5);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						else if (iVar0 == 2)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 6);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						iVar9 = 0;
						MISC::SET_BIT(&iVar9, 7);
						__LIB_8__::func_294(*uParam0, iVar3, iVar9, &Var12);
						iVar3++;
						iVar0++;
					}
					Global_2097536.f_2825 = 1;
					__LIB_0__::func_794(&(Global_2097536.f_2823));
				}
				else if (__LIB_0__::func_937(&(Global_2097536.f_2823), 300, 0))
				{
					StringCopy(&Var13, "SC_LB_DL", 24);
					StringIntConCat(&Var13, Global_2097536.f_2825, 24);
					iVar0 = 0;
					while (iVar0 < 3)
					{
						if (iVar0 == 0)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 4);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						else if (iVar0 == 1)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 5);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						else if (iVar0 == 2)
						{
							iVar9 = 0;
							MISC::SET_BIT(&iVar9, 6);
							__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
						}
						iVar9 = 0;
						MISC::SET_BIT(&iVar9, 7);
						__LIB_8__::func_294(*uParam0, iVar3, iVar9, &Var13);
						iVar3++;
						iVar0++;
					}
					Global_2097536.f_2825++;
					if (Global_2097536.f_2825 > 3)
					{
						Global_2097536.f_2825 = 0;
					}
					__LIB_0__::func_794(&(Global_2097536.f_2823));
				}
				__LIB_8__::func_308(*uParam0);
			}
			else
			{
				MISC::CLEAR_BIT(&(uParam1->f_42), 0);
				if (!BitTest(uParam1->f_42, 1))
				{
					iVar0 = 0;
					while (iVar0 < 3)
					{
						uParam1->f_246.f_187[iVar0] = 0;
						iVar0++;
					}
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*uParam0, "CLEAR_ALL_SLOTS");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					__LIB_8__::func_313(*uParam0, Global_2097536.f_2780);
					if (HUD::DOES_TEXT_LABEL_EXIST(&(Global_2097536.f_2780.f_1)))
					{
						if (!__LIB_8__::func_312(uParam1->f_44))
						{
							if (Global_2097536.f_2780.f_26 > 0)
							{
								Var6 = { Global_2097536.f_2780.f_9 };
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &Var6, 1, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &cVar7, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						else if (!Global_2097536.f_2780.f_27)
						{
							StringCopy(&Var6, "FMMC_COR_SCLB5" /* GXT: Driver */, 64);
							if (Global_2097536.f_2780.f_26 > 0)
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						else
						{
							StringCopy(&Var6, "FMMC_COR_SCLB6" /* GXT: Co-Driver */, 64);
							if (Global_2097536.f_2780.f_26 > 0)
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, Global_2097536.f_2780.f_26);
							}
							else
							{
								__LIB_8__::func_311(*uParam0, &(Global_2097536.f_2780.f_1), &Var6, &(Global_2097536.f_2780.f_9), Global_2097536.f_2780.f_25, -1);
							}
						}
						__LIB_8__::func_310(*uParam0, "SCLB_C_RANK" /* GXT: POSITION */, &(Global_2097536.f_2717), Global_2097536.f_2708);
					}
					if (!BitTest(uParam1->f_42, 6))
					{
						__LIB_2__::func_544(&Global_2101867);
						__LIB_31__::func_947(uParam1, &Global_2101867);
						__LIB_8__::func_291(uParam1, &Global_2101867);
					}
					iVar3 = 0;
					uParam1->f_246.f_2 = 0;
					if ((Global_2097536.f_2704[0] > 1 || (Global_2097536.f_2704[0] > 0 && Global_2097536.f_2775[0] != -1)) || (((Global_2097536.f_2704[0] > 0 && Global_2097536.f_2780.f_27) && __LIB_8__::func_312(uParam1->f_44)) && Global_2097536.f_2775[0] != -1))
					{
						uParam1->f_246.f_1 = -1;
						iVar0 = 0;
						iVar0 = 0;
						while (iVar0 < 12)
						{
							bVar14 = false;
							if (Global_2101867[iVar0 /*100*/].f_75 == 1)
							{
								if (!iVar8[0])
								{
									iVar9 = 0;
									MISC::SET_BIT(&iVar9, 4);
									__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
									iVar8[0] = 1;
								}
							}
							else if (Global_2101867[iVar0 /*100*/].f_75 == 2)
							{
								if (!iVar8[1])
								{
									iVar9 = 0;
									MISC::SET_BIT(&iVar9, 5);
									if ((Global_2097536.f_2704[1] < 1 && Global_2097536.f_2775[1] == -1) && !(((Global_2097536.f_2704[1] > 0 && Global_2097536.f_2780.f_27) && __LIB_8__::func_312(uParam1->f_44)) && Global_2097536.f_2775[1] != -1))
									{
										__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 0);
										bVar14 = true;
									}
									else
									{
										__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
									}
									iVar8[1] = 1;
								}
							}
							else if (Global_2101867[iVar0 /*100*/].f_75 == 3)
							{
								if (!iVar8[2])
								{
									iVar9 = 0;
									MISC::SET_BIT(&iVar9, 6);
									if (!NETWORK::NETWORK_HAS_SOCIAL_CLUB_ACCOUNT())
									{
										bVar14 = true;
									}
									else if (!NETWORK::NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT())
									{
										bVar14 = true;
									}
									if ((Global_2097536.f_2704[2] < 2 && Global_2097536.f_2775[2] == -1) && !(((Global_2097536.f_2704[2] > 0 && Global_2097536.f_2780.f_27) && __LIB_8__::func_312(uParam1->f_44)) && Global_2097536.f_2775[2] != -1))
									{
										bVar14 = true;
									}
									if (bVar14)
									{
										__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 0);
									}
									else
									{
										__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 0, 0);
									}
									iVar8[2] = 1;
								}
							}
							if (__LIB_0__::func_800(Global_2101867[iVar0 /*100*/].f_32))
							{
								if (__LIB_8__::func_312(uParam1->f_44))
								{
									NETWORK::NETWORK_PLAYER_GET_USERID(PLAYER::PLAYER_ID(), &uVar11);
									if (!Global_2101867[iVar0 /*100*/].f_74 && MISC::ARE_STRINGS_EQUAL(&(uParam1->f_44.f_3.f_1[1 /*16*/].f_8), &uVar11))
									{
										bVar14 = true;
									}
								}
								if (!bVar14)
								{
									iVar9 = 0;
									if (!Global_2097536.f_2780.f_27)
									{
										if (__LIB_8__::func_290(&(Global_2101867[iVar0 /*100*/].f_32), &Var10))
										{
											MISC::SET_BIT(&iVar9, 1);
											if (uParam1->f_246.f_1 == -1)
											{
												bVar4 = true;
												uParam1->f_246.f_1 = iVar0;
												MISC::SET_BIT(&iVar9, 3);
											}
										}
									}
									if (__LIB_8__::func_312(uParam1->f_44))
									{
										Var6 = { Global_2101867[iVar0 /*100*/] };
										if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_2101867[iVar0 /*100*/].f_84)) && !MISC::ARE_STRINGS_EQUAL(&(Global_2101867[iVar0 /*100*/].f_84), ""))
										{
											StringConCat(&Var6, "/", 64);
											StringConCat(&Var6, &(Global_2101867[iVar0 /*100*/].f_84), 64);
										}
										__LIB_8__::func_289(*uParam0, iVar3, iVar9, Global_2101867[iVar0 /*100*/].f_59, &Var6, &(Global_2101867[iVar0 /*100*/].f_80));
										uParam1->f_246.f_6[iVar0 /*15*/] = iVar3;
										uParam1->f_246.f_6[iVar0 /*15*/].f_1 = iVar9;
										uParam1->f_246.f_6[iVar0 /*15*/].f_2 = { Global_2101867[iVar0 /*100*/].f_32 };
										uParam1->f_246.f_2++;
									}
									else
									{
										__LIB_8__::func_289(*uParam0, iVar3, iVar9, Global_2101867[iVar0 /*100*/].f_59, &(Global_2101867[iVar0 /*100*/]), &(Global_2101867[iVar0 /*100*/].f_80));
										uParam1->f_246.f_6[iVar0 /*15*/] = iVar3;
										uParam1->f_246.f_6[iVar0 /*15*/].f_1 = iVar9;
										uParam1->f_246.f_6[iVar0 /*15*/].f_2 = { Global_2101867[iVar0 /*100*/].f_32 };
										uParam1->f_246.f_2++;
									}
									bVar1 = false;
									while (bVar1 < Global_2097536.f_2708)
									{
										bVar5 = false;
										if (BitTest(Global_2097536.f_2770, bVar1))
										{
											if (BitTest(Global_2097536.f_2768, bVar1))
											{
												if (Global_2097536.f_2754[bVar1] == Global_2101867[iVar0 /*100*/].f_67[bVar1])
												{
													bVar5 = true;
												}
											}
											if (bVar5)
											{
												__LIB_15__::func_249(Global_2097536.f_2780, bVar1, Global_2101867[iVar0 /*100*/].f_67[bVar1], 0, Global_2101867[iVar0 /*100*/].f_58);
											}
											else
											{
												__LIB_15__::func_249(Global_2097536.f_2780, bVar1, Global_2101867[iVar0 /*100*/].f_67[bVar1], Global_2101867[iVar0 /*100*/].f_74, Global_2101867[iVar0 /*100*/].f_58);
											}
										}
										else
										{
											if (BitTest(Global_2097536.f_2768, bVar1))
											{
												if (Global_2097536.f_2761[bVar1] == Global_2101867[iVar0 /*100*/].f_67[bVar1])
												{
													bVar5 = true;
												}
											}
											if (bVar5)
											{
												__LIB_12__::func_688(Global_2097536.f_2780, bVar1, Global_2101867[iVar0 /*100*/].f_60[bVar1], 0);
											}
											else
											{
												__LIB_12__::func_688(Global_2097536.f_2780, bVar1, Global_2101867[iVar0 /*100*/].f_60[bVar1], Global_2101867[iVar0 /*100*/].f_74);
											}
										}
										bVar1++;
									}
									__LIB_8__::func_285();
									uVar2[(Global_2101867[iVar0 /*100*/].f_75 - 1)]++;
									if (uVar2[(Global_2101867[iVar0 /*100*/].f_75 - 1)] == 2)
									{
										if (Global_2101867[iVar0 /*100*/].f_59 > 2)
										{
											MISC::SET_BIT(&iVar9, 2);
											MISC::SET_BIT(&(uParam1->f_246.f_6[0 /*15*/].f_1), 2);
											__LIB_8__::func_284(*uParam0, (iVar3 - 1), iVar9);
										}
									}
									iVar3++;
								}
							}
							iVar0++;
						}
						iVar0 = 0;
						iVar0 = 0;
						while (iVar0 < 3)
						{
							uParam1->f_246.f_187[iVar0] = uVar2[iVar0];
							iVar0++;
						}
					}
					else
					{
						iVar9 = 0;
						MISC::SET_BIT(&iVar9, 4);
						__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 0);
						iVar9 = 0;
						MISC::SET_BIT(&iVar9, 5);
						__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 0);
						iVar9 = 0;
						MISC::SET_BIT(&iVar9, 6);
						__LIB_16__::func_737(*uParam0, &iVar3, iVar9, 1, 0);
					}
					MISC::SET_BIT(&(uParam1->f_42), 1);
					MISC::CLEAR_BIT(&(uParam1->f_42), 2);
					__LIB_8__::func_308(*uParam0);
					HUD::CLEAR_HELP(true);
					if (uParam1->f_246.f_1 == -1 && !bVar4 == 1)
					{
						if (Global_2097536.f_2704[0] > 1)
						{
							uParam1->f_246.f_1 = 0;
							MISC::SET_BIT(&(uParam1->f_246.f_6[uParam1->f_246.f_1 /*15*/].f_1), 3);
							__LIB_8__::func_284(*uParam0, uParam1->f_246.f_6[uParam1->f_246.f_1 /*15*/], uParam1->f_246.f_6[uParam1->f_246.f_1 /*15*/].f_1);
						}
					}
				}
				else
				{
					__LIB_8__::func_308(*uParam0);
					__LIB_12__::func_723(uParam0, uParam1);
				}
			}
		}
	}
}

int func_719(int iParam0)//Position - 0x65861
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	if (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1 > 0)
	{
		iVar2 = (Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1 - Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/]);
		__LIB_2__::func_428(49, iVar2, -1);
		__LIB_30__::func_952(49, 9);
		__LIB_0__::func_186(7, 1, -1);
		__LIB_2__::func_586(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1, 0, Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1, 0);
		iVar1 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1;
		Global_1837286 = Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/];
		if (__LIB_0__::func_112())
		{
			__LIB_2__::func_604(joaat("SERVICE_EARN_BETTING"), iVar1, &iVar0, 0, 0, 0);
			Global_4534105[iVar0 /*85*/].f_14.f_34 = { Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_150 };
		}
		else
		{
			MONEY::NETWORK_EARN_FROM_BETTING(iVar1, &(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_150));
			__LIB_2__::func_561(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_124.f_6[iParam0 /*2*/].f_1, 0);
		}
	}
	return iVar1;
}

int func_720(int iParam0)//Position - 0x2B94
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 >= 0 && iVar0 <= 31)
	{
		return BitTest(Global_113386.f_26434.f_2, iVar0);
	}
	return 0;
}

int func_721(int iParam0)//Position - 0x2BC4
{
	if ((iParam0 == -1 || iParam0 == 13) || iParam0 == 9)
	{
		return 0;
	}
	return 1;
}

bool func_722(var uParam0, var uParam1)//Position - 0x336A
{
	return (uParam0 && uParam1) != 0;
}

void func_723(char* sParam0)//Position - 0x193C
{
	int iVar0;
	iVar0 = iLocal_220 + 1;
	*sParam0 = { Local_202 };
	StringConCat(sParam0, "@", 64);
	StringConCat(sParam0, "CONVO_", 64);
	StringIntConCat(sParam0, iVar0, 64);
	StringConCat(sParam0, "@", 64);
	StringConCat(sParam0, "CONVO_", 64);
	StringIntConCat(sParam0, iVar0, 64);
}

void func_724(int iParam0, char* sParam1)//Position - 0x1980
{
	switch (iParam0)
	{
		case 0:
			StringCopy(sParam1, "A", 16);
			break;
		case 1:
			StringCopy(sParam1, "B", 16);
			break;
		case 2:
			StringCopy(sParam1, "C", 16);
			break;
		case 3:
			StringCopy(sParam1, "D", 16);
			break;
		case 4:
			StringCopy(sParam1, "E", 16);
			break;
		case 5:
			StringCopy(sParam1, "F", 16);
			break;
		case 6:
			StringCopy(sParam1, "G", 16);
			break;
		case 7:
			StringCopy(sParam1, "H", 16);
			break;
		case 8:
			StringCopy(sParam1, "I", 16);
			break;
		case 9:
			StringCopy(sParam1, "J", 16);
			break;
		case 10:
			StringCopy(sParam1, "K", 16);
			break;
		case 11:
			StringCopy(sParam1, "L", 16);
			break;
		case 12:
			StringCopy(sParam1, "M", 16);
			break;
		case 13:
			StringCopy(sParam1, "N", 16);
			break;
		case 14:
			StringCopy(sParam1, "O", 16);
			break;
		case 15:
			StringCopy(sParam1, "P", 16);
			break;
		case 16:
			StringCopy(sParam1, "Q", 16);
			break;
		case 17:
			StringCopy(sParam1, "R", 16);
			break;
		case 18:
			StringCopy(sParam1, "S", 16);
			break;
		case 19:
			StringCopy(sParam1, "T", 16);
			break;
		case 20:
			StringCopy(sParam1, "U", 16);
			break;
		case 21:
			StringCopy(sParam1, "V", 16);
			break;
		case 22:
			StringCopy(sParam1, "W", 16);
			break;
		case 23:
			StringCopy(sParam1, "X", 16);
			break;
		case 24:
			StringCopy(sParam1, "Y", 16);
			break;
		case 25:
			StringCopy(sParam1, "Z", 16);
			break;
	}
}

void func_725(char* sParam0)//Position - 0x1BA8
{
	MemCopy(sParam0, {Local_204}, 4);
	StringConCat(sParam0, "_CONV_", 16);
	StringIntConCat(sParam0, iLocal_220 + 1, 16);
}

void func_726()//Position - 0x1BC9
{
	iLocal_220 = MISC::GET_RANDOM_INT_IN_RANGE(0, iLocal_219);
}

void func_727()//Position - 0x2456
{
	STREAMING::REMOVE_ANIM_DICT(&Local_254);
}

bool func_728()//Position - 0x25FA
{
	bool bVar0;
	bVar0 = STREAMING::HAS_ANIM_DICT_LOADED(&Local_254);
	return bVar0;
}

int func_729()//Position - 0x262F
{
	if (TASK::GET_SCRIPT_TASK_STATUS(iLocal_208, joaat("SCRIPT_TASK_PLAY_ANIM")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(iLocal_208, joaat("SCRIPT_TASK_PLAY_ANIM")) != 0)
	{
		return 0;
	}
	return 1;
}

void func_730(char* sParam0)//Position - 0x26CE
{
	StringCopy(sParam0, "MONOLOGUE_", 16);
	StringIntConCat(sParam0, Global_113331[iLocal_217] + 1, 16);
}

char* func_731(int iParam0)//Position - 0x2AAA
{
	switch (iParam0)
	{
		case 0:
			return "CM_SPEAND" /* GXT: Andy Moon */;
			break;
		case 1:
			return "CM_SPEBAY" /* GXT: Baygor */;
			break;
		case 2:
			return "CM_SPEBIL" /* GXT: Bill Binder */;
			break;
		case 3:
			return "CM_SPECLI" /* GXT: Clinton */;
			break;
		case 4:
			return "CM_SPEGRI" /* GXT: Griff */;
			break;
		case 5:
			return "CM_SPEJAN" /* GXT: Jane */;
			break;
		case 6:
			return "CM_SPEJER" /* GXT: Jerome */;
			break;
		case 7:
			return "CM_SPEJES" /* GXT: Jesse */;
			break;
		case 8:
			return "CM_SPEMAN" /* GXT: Mani */;
			break;
		case 9:
			return "CM_SPEMIM" /* GXT: Mime */;
			break;
		case 10:
			return "CM_SPEPAM" /* GXT: Pamela Drake */;
			break;
		case 11:
			return "CM_SPEIMP" /* GXT: Impotent Rage */;
			break;
		case 12:
			return "CM_SPEZOM" /* GXT: Zombie */;
			break;
	}
	return "ERROR!";
}

int func_732(int iParam0)//Position - 0x2C0B
{
	switch (iParam0)
	{
		case joaat("gpb_andymoon"):
			return 0;
			break;
		case joaat("gpb_baygor"):
			return 1;
			break;
		case joaat("gpb_billbinder"):
			return 2;
			break;
		case joaat("gpb_clinton"):
			return 3;
			break;
		case joaat("gpb_griff"):
			return 4;
			break;
		case joaat("gpb_jane"):
			return 5;
			break;
		case joaat("gpb_jerome"):
			return 6;
			break;
		case joaat("gpb_jesse"):
			return 7;
			break;
		case joaat("gpb_mani"):
			return 8;
			break;
		case joaat("gpb_mime"):
			return 9;
			break;
		case joaat("gpb_pameladrake"):
			return 10;
			break;
		case joaat("gpb_superhero"):
			return 11;
			break;
		case joaat("gpb_zombie"):
			return 12;
			break;
	}
	return -1;
}

void func_733(int* iParam0)//Position - 0x2CC9
{
	if (iLocal_276 == 1)
	{
		if (HUD::DOES_BLIP_EXIST(*iParam0))
		{
			HUD::REMOVE_BLIP(iParam0);
		}
	}
}

int func_734()//Position - 0x2FA3
{
	if (iLocal_216 == 24 || iLocal_216 == 25)
	{
		return 1;
	}
	return 0;
}

void func_735()//Position - 0x2FC3
{
	if (iLocal_211 != -1)
	{
		if (PATHFIND::DOES_NAVMESH_BLOCKING_OBJECT_EXIST(iLocal_211))
		{
			PATHFIND::REMOVE_NAVMESH_BLOCKING_OBJECT(iLocal_211);
		}
		iLocal_211 = -1;
	}
}

int func_736(int iParam0, bool bParam1)//Position - 0x30A1
{
	if (!__LIB_36__::func_721(iParam0))
	{
		if (!bParam1)
		{
		}
		return 0;
	}
	switch (iParam0)
	{
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 4;
		case 3:
			return 8;
		case 4:
			return 16;
		case 5:
			return 64;
		case 6:
			return 128;
		case 7:
			return 256;
		case 8:
			return 512;
		case 10:
			return 2048;
		case 11:
			return 4096;
		case 12:
			return 8192;
		default:
	}
	if (!bParam1)
	{
	}
	return 0;
}

void func_737(int iParam0, bool bParam1)//Position - 0x3165
{
	if (iParam0 == 1)
	{
		TASK::TASK_PLAY_ANIM(iLocal_208, &cLocal_234, &Local_203, 2f, -2f, -1, 0, 0f, false, false, false);
	}
	else
	{
		TASK::TASK_PLAY_ANIM(iLocal_208, &cLocal_234, &Local_203, 1000f, 1000f, -1, 0, 0f, false, false, false);
	}
	Local_252 = { Local_203 };
	if (bParam1)
	{
		if (!PED::IS_PED_INJURED(iLocal_208) && !PED::IS_PED_DEAD_OR_DYING(iLocal_208, true))
		{
			PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(iLocal_208, false, false);
		}
	}
}

int func_738(char* sParam0)//Position - 0x3385
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_AndyMoon"))
	{
		return 1;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Baygor"))
	{
		return 2;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_BillBinder"))
	{
		return 4;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Clinton"))
	{
		return 8;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Griff"))
	{
		return 16;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Jane"))
	{
		return 64;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Jerome"))
	{
		return 128;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Jesse"))
	{
		return 256;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Mani"))
	{
		return 512;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Mime"))
	{
		return 1024;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_PamelaDrake"))
	{
		return 2048;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Superhero"))
	{
		return 4096;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sParam0, "gpb_Zombie"))
	{
		return 8192;
	}
	return 0;
}

void func_739()//Position - 0x35E4
{
	if (iLocal_211 == -1)
	{
		iLocal_211 = PATHFIND::ADD_NAVMESH_BLOCKING_OBJECT(Local_210, 2f, 2f, 2f, 0f, false, 1);
	}
}

int func_740(int iParam0)//Position - 0x2B8D
{
	if (__LIB_36__::func_721(iParam0))
	{
		return BitTest(Global_113386.f_26434.f_2, iParam0);
	}
	return 0;
}

bool func_741(var uParam0)//Position - 0x3361
{
	return __LIB_36__::func_722(Global_113386.f_20117, uParam0);
}

void func_742(int* iParam0, int iParam1, bool bParam2)//Position - 0x2CE8
{
	if (iLocal_276 == 1)
	{
		if (!HUD::DOES_BLIP_EXIST(*iParam0))
		{
			if (ENTITY::DOES_ENTITY_EXIST(*iParam1))
			{
				if (!PED::IS_PED_INJURED(*iParam1))
				{
					*iParam0 = __LIB_0__::func_666(*iParam1, bParam2, 145);
					if (bParam2 == 0)
					{
						HUD::SET_BLIP_PRIORITY(*iParam0, 7);
					}
					HUD::SET_BLIP_COLOUR(*iParam0, 3);
				}
			}
		}
	}
}

void func_743(char* sParam0)//Position - 0x1BDA
{
	int iVar0;
	MemCopy(sParam0, {Local_204}, 4);
	StringConCat(sParam0, "_CONV_", 16);
	iVar0 = __LIB_0__::func_683();
	if (iVar0 == 2)
	{
		StringConCat(sParam0, "T", 16);
	}
	else if (iVar0 == 0)
	{
		StringConCat(sParam0, "M", 16);
	}
	else
	{
		StringConCat(sParam0, "F", 16);
	}
	StringIntConCat(sParam0, iLocal_225[__LIB_0__::func_683()], 16);
}

void func_744(char[4] cParam0)//Position - 0x2338
{
	int iVar0;
	iVar0 = __LIB_0__::func_683();
	if (iVar0 == 2)
	{
		*cParam0 = { Local_232 };
	}
	else if (iVar0 == 0)
	{
		*cParam0 = { Local_231 };
	}
	else
	{
		*cParam0 = { Local_233 };
	}
}

void func_745(char* sParam0)//Position - 0x240E
{
	int iVar0;
	iVar0 = __LIB_0__::func_683();
	if (iVar0 == 2)
	{
		StringCopy(sParam0, "TREVOR", 16);
	}
	else if (iVar0 == 0)
	{
		StringCopy(sParam0, "MICHAEL", 16);
	}
	else
	{
		StringCopy(sParam0, "FRANKLIN", 16);
	}
}

void func_746(char* sParam0)//Position - 0x25C2
{
	__LIB_36__::func_724(iLocal_223, sParam0);
}

void func_747()//Position - 0x14D9
{
	__LIB_0__::func_467();
	if (__LIB_0__::func_121(iLocal_208) && __LIB_0__::func_121(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iLocal_208, false);
		TASK::TASK_WANDER_STANDARD(iLocal_208, 40000f, 0);
		PED::SET_PED_KEEP_TASK(iLocal_208, true);
	}
}

void func_748()//Position - 0x1B35
{
	if (!__LIB_36__::func_729())
	{
		__LIB_36__::func_737(1, 1);
	}
}

int func_749(int iParam0)//Position - 0x2FB5
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 13)
	{
		iVar1 = iVar0;
		if (__LIB_36__::func_736(iVar1, 1) == iParam0)
		{
			return iVar1;
		}
		iVar0++;
	}
	return -1;
}

void func_750()//Position - 0x151D
{
	__LIB_0__::func_467();
	if (__LIB_0__::func_121(iLocal_208) && __LIB_0__::func_121(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iLocal_208, false);
		TASK::TASK_SMART_FLEE_PED(iLocal_208, PLAYER::PLAYER_PED_ID(), 100f, -1, false, false);
		PED::SET_PED_KEEP_TASK(iLocal_208, true);
		__LIB_0__::func_429();
	}
}

void func_751(int iParam0, bool bParam1)//Position - 0x2612
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 >= 0 && iVar0 <= 31)
	{
		if (__LIB_36__::func_721(iParam0))
		{
			if (!__LIB_36__::func_740(iParam0))
			{
				MISC::SET_BIT(&(Global_113386.f_26434.f_2), iVar0);
				if (!bParam1)
				{
					__LIB_0__::func_68(__LIB_36__::func_731(iParam0));
					if (!__LIB_0__::func_67(70))
					{
						__LIB_0__::func_697("DI_HLP_SPCL" /* GXT: Unique characters become available in Rockstar Editor's 'Director Mode' as you meet them around Los Santos. */, 2, 0, 20000, 10000, 7, 0, 210, 0);
					}
				}
			}
		}
	}
}

void func_752(char* sParam0)//Position - 0x1A82
{
	struct<4> Var0;
	__LIB_36__::func_745(&Var0);
	*sParam0 = { Var0 };
	StringConCat(sParam0, "_", 16);
	StringIntConCat(sParam0, iLocal_225[__LIB_0__::func_683()], 16);
}

int func_753()//Position - 0x249A
{
	struct<4> Var0;
	int iVar1;
	Var0 = { Local_230 };
	StringIntConCat(&Var0, Global_113331[iLocal_217] + 1, 16);
	__LIB_0__::func_222(&uLocal_37, 3, iLocal_208, &Local_205, 0, 1);
	if (bLocal_266)
	{
		iVar1 = 1;
	}
	else
	{
		iVar1 = __LIB_0__::func_787(&uLocal_37, &cLocal_227, &Var0, 3, 0, 0, 0);
	}
	Local_327 = { Var0 };
	return iVar1;
}

void func_754(char* sParam0)//Position - 0x25ED
{
	struct<8> Var0;
	*sParam0 = { Local_202 };
	StringConCat(sParam0, "@", 64);
	__LIB_36__::func_730(&Var0);
	StringConCat(sParam0, &Var0, 64);
	StringConCat(sParam0, "@", 64);
	StringConCat(sParam0, &Var0, 64);
	__LIB_36__::func_746(&Var0);
	StringConCat(sParam0, &Var0, 64);
}

void func_755(int iParam0)//Position - 0x3464
{
	var uVar0;
	__LIB_19__::func_922();
	if (iLocal_209)
	{
		MemCopy(&uVar0, {__LIB_0__::func_486()}, 4);
		if (MISC::ARE_STRINGS_EQUAL(&uVar0, &Local_327))
		{
			__LIB_0__::func_325();
		}
		if (iParam0 == 1)
		{
			PED::DELETE_PED(&iLocal_208);
		}
		else
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&iLocal_208);
		}
		iLocal_209 = 0;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Local_255))
	{
		STREAMING::REMOVE_ANIM_DICT(&Local_255);
	}
	if (iLocal_215 == 1)
	{
		if (!MISC::IS_STRING_NULL_OR_EMPTY(&cLocal_234))
		{
			if (STREAMING::HAS_ANIM_DICT_LOADED(&cLocal_234))
			{
				STREAMING::REMOVE_ANIM_DICT(&cLocal_234);
			}
		}
		if (!MISC::IS_STRING_NULL_OR_EMPTY(&cLocal_243))
		{
			if (STREAMING::HAS_ANIM_DICT_LOADED(&cLocal_243))
			{
				STREAMING::REMOVE_ANIM_DICT(&cLocal_243);
			}
		}
	}
	if (iLocal_224 != -1)
	{
		__LIB_3__::func_422(&iLocal_224);
	}
	if (HUD::DOES_BLIP_EXIST(iLocal_214))
	{
		__LIB_0__::func_714(&iLocal_214);
	}
	__LIB_36__::func_735();
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		AUDIO::DISABLE_PED_PAIN_AUDIO(PLAYER::PLAYER_PED_ID(), false);
	}
	SCRIPT::TERMINATE_THIS_THREAD();
}

void func_756(int iParam0)//Position - 0x2FEF
{
	int iVar0;
	__LIB_0__::func_964(&(Global_113386.f_20117), iParam0);
	iVar0 = __LIB_36__::func_749(iParam0);
	if (__LIB_36__::func_721(iVar0))
	{
		__LIB_36__::func_751(__LIB_36__::func_749(iParam0), 0);
	}
}

void func_757(int iParam0, bool bParam1)//Position - 0x265C
{
	int iVar0;
	iVar0 = __LIB_36__::func_732(iParam0);
	if (__LIB_36__::func_721(iVar0))
	{
		__LIB_36__::func_751(iVar0, bParam1);
	}
}

void func_758(char* sParam0)//Position - 0x18A1
{
	char cVar0[64];
	*sParam0 = { Local_202 };
	StringConCat(sParam0, "@", 64);
	__LIB_36__::func_752(&cVar0);
	StringConCat(sParam0, &cVar0, 64);
	StringConCat(sParam0, "@", 64);
	StringConCat(sParam0, &cVar0, 64);
}

void func_759()//Position - 0x3513
{
	if (ENTITY::DOES_ENTITY_EXIST(iLocal_277))
	{
		OBJECT::DELETE_OBJECT(&iLocal_277);
	}
}

void func_760()//Position - 0x2557
{
	struct<16> Var0;
	__LIB_36__::func_754(&Var0);
	STREAMING::REQUEST_ANIM_DICT(&Var0);
	Local_254 = { Var0 };
}

int func_761()//Position - 0x248E
{
	struct<4> Var0;
	int iVar1;
	Var0 = { Local_230 };
	StringIntConCat(&Var0, Global_113331[iLocal_217] + 1, 16);
	__LIB_0__::func_222(&uLocal_37, 3, iLocal_208, &Local_205, 0, 1);
	if (bLocal_266)
	{
		iVar1 = 1;
	}
	else
	{
		iVar1 = __LIB_0__::func_787(&uLocal_37, &cLocal_227, &Var0, 3, 0, 0, 0);
	}
	Local_328 = { Var0 };
	return iVar1;
}

void func_762(char* sParam0)//Position - 0x161E
{
	StringCopy(sParam0, "", 64);
}

void func_763()//Position - 0x1515
{
	if (!ENTITY::IS_ENTITY_DEAD(iLocal_208, false))
	{
		AUDIO::REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(iLocal_208, 0f);
	}
}

int func_764()//Position - 0x255D
{
	struct<4> Var0;
	int iVar1;
	Var0 = { Local_230 };
	StringIntConCat(&Var0, Global_113331[iLocal_217] + 1, 16);
	__LIB_0__::func_222(&uLocal_37, 3, iLocal_208, &Local_205, 0, 1);
	if (bLocal_266)
	{
		iVar1 = 1;
	}
	else
	{
		iVar1 = __LIB_0__::func_787(&uLocal_37, &cLocal_227, &Var0, 3, 0, 0, 0);
	}
	Local_329 = { Var0 };
	return iVar1;
}

int func_765(int iParam0)//Position - 0x46D
{
	if (iParam0 != __LIB_0__::func_162())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_428, 4);
	}
	return 0;
}

struct<2> func_766(struct<2> Param0, struct<2> Param1, float fParam2)//Position - 0x9D11
{
	return __LIB_5__::func_402(__LIB_16__::func_771(Param0, (1f - fParam2)), __LIB_16__::func_771(Param1, fParam2));
}

void func_767(struct<2> Param0, struct<2> Param1, struct<4> Param2)//Position - 0x408C
{
	Param0 = { __LIB_16__::func_775(Param0) };
	Param1 = { __LIB_16__::func_775(Param1) };
	__LIB_36__::func_388(Param0, Param1, Param2);
}

int func_768(int iParam0)//Position - 0xA67C
{
	int iVar0;
	struct<2> Var1;
	switch (iParam0)
	{
		case joaat("WEAPON_HAMMER"):
		case joaat("WEAPON_PISTOL50"):
		case joaat("WEAPON_BULLPUPSHOTGUN"):
		case joaat("WEAPON_ASSAULTSMG"):
			return 1;
			break;
	}
	iVar0 = 0;
	while (iVar0 < FILES::GET_NUM_DLC_WEAPONS())
	{
		if (FILES::GET_DLC_WEAPON_DATA(iVar0, &Var1))
		{
			if (Var1.f_1 == iParam0)
			{
				if (!FILES::IS_CONTENT_ITEM_LOCKED(Var1.f_0))
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

void func_769(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xB71C
{
	*uParam0 = iParam1;
	uParam0->f_4 = iParam2;
	uParam0->f_6 = iParam3;
	uParam0->f_1 = iParam4;
}

void func_770(char* sParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5)//Position - 0x10F1A
{
	StringCopy(sParam0, sParam1, 16);
	StringCopy(&(sParam0->f_4), sParam2, 16);
	sParam0->f_8 = iParam3;
	sParam0->f_9 = iParam4;
	sParam0->f_10 = iParam5;
}

int func_771(int iParam0)//Position - 0x171A8
{
	switch (iParam0)
	{
		case joaat("COMPONENT_PISTOL_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_SMG_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_COMBATMG_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_SNSPISTOL_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_REVOLVER_MK2_CAMO_IND_01"):
		case joaat("COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01"):
			return 1;
			break;
	}
	return 0;
}

int func_772(int iParam0, int iParam1)//Position - 0x20F42
{
	int iVar0;
	iVar0 = 0;
	switch (iParam0)
	{
		case joaat("GADGET_PARACHUTE"):
		case joaat("WEAPON_MICROSMG"):
		case joaat("WEAPON_SMG"):
		case joaat("WEAPON_SAWNOFFSHOTGUN"):
		case joaat("WEAPON_ASSAULTSMG"):
		case joaat("WEAPON_PUMPSHOTGUN"):
		case joaat("WEAPON_ASSAULTSHOTGUN"):
		case joaat("WEAPON_ASSAULTRIFLE"):
		case joaat("WEAPON_CARBINERIFLE"):
		case joaat("WEAPON_ADVANCEDRIFLE"):
		case joaat("WEAPON_SNIPERRIFLE"):
		case joaat("WEAPON_HEAVYSNIPER"):
		case joaat("WEAPON_MG"):
		case joaat("WEAPON_COMBATMG"):
		case joaat("WEAPON_RPG"):
		case joaat("WEAPON_GRENADELAUNCHER"):
		case joaat("WEAPON_MINIGUN"):
		case joaat("WEAPON_BULLPUPSHOTGUN"):
		case joaat("WEAPON_GUSENBERG"):
		case joaat("WEAPON_SPECIALCARBINE"):
		case joaat("WEAPON_BULLPUPRIFLE"):
		case joaat("WEAPON_MUSKET"):
		case joaat("WEAPON_MARKSMANRIFLE"):
		case joaat("WEAPON_HEAVYSHOTGUN"):
		case joaat("WEAPON_COMBATPDW"):
		case joaat("WEAPON_MARKSMANPISTOL"):
		case joaat("WEAPON_RAILGUN"):
		case joaat("WEAPON_HOMINGLAUNCHER"):
		case joaat("WEAPON_PETROLCAN"):
		case joaat("WEAPON_STICKYBOMB"):
		case joaat("WEAPON_PROXMINE"):
		case joaat("WEAPON_PIPEBOMB"):
		case joaat("WEAPON_GRENADE"):
		case joaat("WEAPON_SMOKEGRENADE"):
		case joaat("WEAPON_VINTAGEPISTOL"):
		case joaat("WEAPON_PISTOL50"):
		case joaat("WEAPON_SNSPISTOL"):
		case joaat("WEAPON_PISTOL"):
		case joaat("WEAPON_COMBATPISTOL"):
		case joaat("WEAPON_APPISTOL"):
		case joaat("WEAPON_STUNGUN"):
		case joaat("WEAPON_HEAVYPISTOL"):
		case joaat("WEAPON_MACHINEPISTOL"):
		case joaat("WEAPON_BOTTLE"):
		case joaat("WEAPON_MACHETE"):
		case joaat("WEAPON_HAMMER"):
		case joaat("WEAPON_HATCHET"):
		case joaat("WEAPON_NIGHTSTICK"):
		case joaat("WEAPON_KNUCKLE"):
		case joaat("WEAPON_DAGGER"):
		case joaat("WEAPON_KNIFE"):
			iVar0 = 1;
			break;
	}
	if (iParam1 == 3)
	{
		iVar0 = 1;
	}
	return iVar0;
}

int func_773(int iParam0, int iParam1)//Position - 0xB6379
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), iParam0, false))
	{
		if (iParam1 && __LIB_18__::func_245(iParam0) != 0)
		{
			iVar2 = WEAPON::GET_PED_ORIGINAL_AMMO_TYPE_FROM_WEAPON(PLAYER::PLAYER_PED_ID(), iParam0);
			if (WEAPON::GET_MAX_AMMO_BY_TYPE(PLAYER::PLAYER_PED_ID(), iVar2, &iVar0))
			{
				if (WEAPON::GET_PED_AMMO_BY_TYPE(PLAYER::PLAYER_PED_ID(), iVar2) >= iVar0)
				{
					iVar1 = 1;
				}
			}
		}
		else if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), iParam0, &iVar0))
			{
				if (WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), iParam0) >= iVar0)
				{
					iVar1 = 1;
				}
			}
		}
	}
	return iVar1;
}

var func_774(bool bParam0, int iParam1)//Position - 0xA562
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_3__::func_371(iParam1);
	iVar2 = __LIB_0__::func_161(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

int func_775(int iParam0)//Position - 0xAE6A
{
	if (iParam0 == 0)
	{
		return 0;
	}
	if (iParam0 == joaat("OBJECT"))
	{
		return 1;
	}
	if (iParam0 == -61829581)
	{
		return 1;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (((((((iParam0 == joaat("WEAPON_ASSAULTMG") || iParam0 == joaat("WEAPON_ASSAULTSNIPER")) || iParam0 == joaat("WEAPON_BULLPUPSHOTGUN")) || iParam0 == joaat("WEAPON_LOUDHAILER")) || iParam0 == joaat("WEAPON_PISTOL50")) || iParam0 == joaat("WEAPON_PROGRAMMABLEAR")) || iParam0 == joaat("WEAPON_RUBBERGUN")) || iParam0 == joaat("WEAPON_HAMMER"))
		{
			return 1;
		}
		if (iParam0 == joaat("WEAPON_HATCHET"))
		{
			if (__LIB_0__::func_116() || Global_262145.f_20269 /* Tunable: ENABLE_RETURNING_CONTENT_WEAPON */)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
	}
	else
	{
		switch (iParam0)
		{
			case joaat("WEAPON_HATCHET"):
				if (__LIB_0__::func_116())
				{
					if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[62 /*6*/])
					{
						return 1;
					}
					else
					{
						return 0;
					}
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_RAILGUN"):
				if (__LIB_0__::func_116())
				{
					if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[14 /*6*/])
					{
						return 1;
					}
					else
					{
						return 0;
					}
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_BOTTLE"):
			case joaat("WEAPON_HAMMER"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[1 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_SNSPISTOL"):
				if ((Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[1 /*6*/] || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[43 /*6*/]) || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[19 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_SPECIALCARBINE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[90 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_DAGGER"):
			case joaat("WEAPON_VINTAGEPISTOL"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[62 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_HEAVYPISTOL"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[29 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_BULLPUPSHOTGUN"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[74 /*6*/] || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[38 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_MUSKET"):
			case joaat("WEAPON_MARKSMANPISTOL"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[59 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_GUSENBERG"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[28 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_PISTOL50"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[39 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_BULLPUPRIFLE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[84 /*6*/] || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[85 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_MARKSMANRIFLE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[93 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_HEAVYSHOTGUN"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[39 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_FIREWORK"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[28 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_PROXMINE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[64 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_HOMINGLAUNCHER"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[14 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_KNUCKLE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[2 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_COMBATPDW"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[92 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_MACHETE"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[63 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
			case joaat("WEAPON_MACHINEPISTOL"):
				if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[41 /*6*/])
				{
					return 1;
				}
				else
				{
					return 0;
				}
				break;
		}
		if ((((((((iParam0 == joaat("WEAPON_ASSAULTMG") || iParam0 == joaat("WEAPON_ASSAULTSMG")) || iParam0 == joaat("WEAPON_ASSAULTSNIPER")) || iParam0 == joaat("WEAPON_BULLPUPSHOTGUN")) || iParam0 == joaat("WEAPON_LOUDHAILER")) || iParam0 == joaat("WEAPON_PISTOL50")) || iParam0 == joaat("WEAPON_PROGRAMMABLEAR")) || iParam0 == joaat("WEAPON_RUBBERGUN")) || iParam0 == joaat("WEAPON_HAMMER"))
		{
			return 1;
		}
	}
	return -1;
}

var func_776(bool bParam0, int iParam1, int iParam2)//Position - 0x59B8A
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_6__::func_350(iParam2, iParam1);
	iVar2 = __LIB_0__::func_161(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_2"), &uVar0, -1);
					break;
			}
			break;
		case 3:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_3"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_3"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_3"), &uVar0, -1);
					break;
			}
			break;
		case 4:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_4"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_4"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_4"), &uVar0, -1);
					break;
			}
			break;
		case 5:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_5"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_5"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_5"), &uVar0, -1);
					break;
			}
			break;
		case 6:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_6"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_6"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_6"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

void func_777(bool bParam0, int iParam1, int iParam2, int iParam3)//Position - 0xACF2C
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_6__::func_350(iParam2, iParam1);
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_0"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_0"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_0"), iParam3, true);
					break;
			}
			break;
		case 1:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_1"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_1"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_1"), iParam3, true);
					break;
			}
			break;
		case 2:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_2"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_2"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_2"), iParam3, true);
					break;
			}
			break;
		case 3:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_3"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_3"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_3"), iParam3, true);
					break;
			}
			break;
		case 4:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_4"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_4"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_4"), iParam3, true);
					break;
			}
			break;
		case 5:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_5"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_5"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_5"), iParam3, true);
					break;
			}
			break;
		case 6:
			switch (bParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_PURCH_6"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_PURCH_6"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_PURCH_6"), iParam3, true);
					break;
			}
			break;
		default:
			break;
	}
}

var func_778(int iParam0, int iParam1, int iParam2)//Position - 0x9B35
{
	var uVar0;
	uVar0 = __LIB_1__::func_360(__LIB_6__::func_698(iParam0, iParam1), iParam2, 0);
	return uVar0;
}

var func_779(int iParam0, int iParam1)//Position - 0x217E7
{
	var uVar0;
	uVar0 = __LIB_1__::func_360(__LIB_6__::func_349(iParam0), iParam1, 0);
	return uVar0;
}

void func_780(var uParam0, bool bParam1, int iParam2)//Position - 0x99A25
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_6__::func_699(uParam0, iParam2);
	iVar1 = uParam0;
	if (iVar1 > -1)
	{
		if (bParam1)
		{
			MISC::SET_BIT(&iVar0, __LIB_0__::func_160(iVar1));
		}
		else
		{
			MISC::CLEAR_BIT(&iVar0, __LIB_0__::func_160(iVar1));
		}
		__LIB_1__::func_354(__LIB_6__::func_160(uParam0), iVar0, iParam2, 1, 0);
	}
}

int func_781(int iParam0)//Position - 0x16901
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3[6];
	bool bVar4;
	bVar0 = __LIB_14__::func_466();
	if (iParam0 == 0 || !__LIB_0__::func_374(bVar0))
	{
		return -1;
	}
	iVar1 = 7;
	switch (iParam0)
	{
		case joaat("WEAPON_UNARMED"):
			break;
		case joaat("GADGET_PARACHUTE"):
			break;
		case joaat("WEAPON_MICROSMG"):
			iVar1 = 1;
			break;
		case joaat("WEAPON_SMG"):
			iVar1 = 1;
			break;
		case joaat("WEAPON_SAWNOFFSHOTGUN"):
			iVar1 = 3;
			break;
		case joaat("WEAPON_PUMPSHOTGUN"):
			iVar1 = 3;
			break;
		case joaat("WEAPON_ASSAULTSHOTGUN"):
			iVar1 = 3;
			break;
		case joaat("WEAPON_ASSAULTRIFLE"):
			iVar1 = 2;
			break;
		case joaat("WEAPON_CARBINERIFLE"):
			iVar1 = 2;
			break;
		case joaat("WEAPON_ADVANCEDRIFLE"):
			iVar1 = 2;
			break;
		case joaat("WEAPON_SNIPERRIFLE"):
			break;
		case joaat("WEAPON_HEAVYSNIPER"):
			break;
		case joaat("WEAPON_MG"):
			iVar1 = 4;
			break;
		case joaat("WEAPON_COMBATMG"):
			iVar1 = 4;
			break;
		case joaat("WEAPON_RPG"):
			break;
		case joaat("WEAPON_GRENADELAUNCHER"):
			break;
		case joaat("WEAPON_MINIGUN"):
			iVar1 = 5;
			break;
		case joaat("WEAPON_KNIFE"):
			break;
		case joaat("WEAPON_NIGHTSTICK"):
			break;
		case joaat("WEAPON_PETROLCAN"):
			break;
		case joaat("WEAPON_STUNGUN"):
			break;
		case joaat("WEAPON_APPISTOL"):
			iVar1 = 0;
			break;
		case joaat("WEAPON_COMBATPISTOL"):
			iVar1 = 0;
			break;
		case joaat("WEAPON_PISTOL"):
			iVar1 = 0;
			break;
		case joaat("WEAPON_SMOKEGRENADE"):
			break;
		case joaat("WEAPON_GRENADE"):
			break;
		case joaat("WEAPON_STICKYBOMB"):
			break;
	}
	if (iVar1 != 7)
	{
		switch (__LIB_26__::func_499(iVar1, bVar0))
		{
			case 1:
				return 3;
				break;
			case 2:
				return 2;
				break;
			case 3:
				return 1;
				break;
		}
	}
	else
	{
		iVar3[0] = __LIB_26__::func_499(1, bVar0);
		iVar3[1] = __LIB_26__::func_499(3, bVar0);
		iVar3[2] = __LIB_26__::func_499(2, bVar0);
		iVar3[3] = __LIB_26__::func_499(4, bVar0);
		iVar3[4] = __LIB_26__::func_499(5, bVar0);
		iVar3[5] = __LIB_26__::func_499(0, bVar0);
		bVar4 = false;
		iVar2 = 0;
		while (iVar2 < 6)
		{
			if (iVar3[iVar2] < 3)
			{
				bVar4 = true;
			}
			iVar2++;
		}
		if (!bVar4)
		{
			return 1;
		}
		bVar4 = false;
		iVar2 = 0;
		while (iVar2 < 6)
		{
			if (iVar3[iVar2] < 2)
			{
				bVar4 = true;
			}
			iVar2++;
		}
		if (!bVar4)
		{
			return 2;
		}
		bVar4 = false;
		iVar2 = 0;
		while (iVar2 < 6)
		{
			if (iVar3[iVar2] < 1)
			{
				bVar4 = true;
			}
			iVar2++;
		}
		if (!bVar4)
		{
			return 3;
		}
	}
	return -1;
}

void func_782(int iParam0)//Position - 0x1B16
{
	Local_146.f_0 = iParam0;
}

bool func_783()//Position - 0x217F
{
	return (Local_134.f_0 || Local_134.f_6 > NETWORK::GET_NETWORK_TIME());
}

bool func_784(int iParam0)//Position - 0x25C9
{
	return Local_138.f_1[iParam0];
}

int func_785(int iParam0)//Position - 0x25D9
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = 3;
			break;
		case 1:
			iVar0 = 4;
			break;
		case 2:
			iVar0 = 5;
			break;
		case 3:
			iVar0 = 6;
			break;
	}
	return iVar0;
}

char* func_786()//Position - 0x63167
{
	return "FONT_";
}

struct<2> func_787()//Position - 0x63280
{
	return __LIB_5__::func_403(24f, 48f);
}

struct<2> func_788()//Position - 0x63296
{
	return __LIB_5__::func_403(1220f, 350f);
}

struct<2> func_789()//Position - 0x63562
{
	return __LIB_5__::func_403(750f, 350f);
}

struct<2> func_790()//Position - 0x63756
{
	return __LIB_5__::func_403(600f, 350f);
}

struct<4> func_791()//Position - 0x637DE
{
	struct<4> Var0;
	Var0.f_3 = 255;
	__LIB_15__::func_813(&Var0, 255, 255, 255, 255);
	return Var0;
}

struct<2> func_792()//Position - 0x63816
{
	return __LIB_5__::func_403(960f, 200f);
}

struct<2> func_793()//Position - 0x63844
{
	return __LIB_5__::func_403(24f, (48f * 1.1f));
}

bool func_794()//Position - 0x63FB3
{
	return __LIB_5__::func_106(PLAYER::PLAYER_ID()) <= 0;
}

bool func_795(float fParam0, var uParam1, float fParam2)//Position - 0x67E9A
{
	float fVar0;
	float fVar1;
	fVar0 = (250f + fParam2);
	fVar1 = (1605f - fParam2);
	return (fParam0 > fVar0 && fParam0 < fVar1);
}

int func_796(int iParam0)//Position - 0x69196
{
	return Local_138.f_66[iParam0];
}

int func_797(int iParam0)//Position - 0x691CD
{
	return Local_138.f_54[iParam0];
}

int func_798(int iParam0, float fParam1, float fParam2)//Position - 0x6DC64
{
	GRAPHICS::DRAW_BINK_MOVIE(iParam0, 0.5f, 0.5f, fParam1, fParam2, 0f, 255, 255, 255, 255);
	if (GRAPHICS::GET_BINK_MOVIE_TIME(iParam0) >= 99f)
	{
		GRAPHICS::STOP_BINK_MOVIE(iParam0);
		GRAPHICS::RELEASE_BINK_MOVIE(iParam0);
		return 1;
	}
	return 0;
}

void func_799(int iParam0, int iParam1, var uParam2)//Position - 0x6EDAE
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	iVar0 = (iParam1 - 1);
	while (iVar0 >= 0)
	{
		(*uParam2)[iVar1] = ((iParam0 / SYSTEM::ROUND(SYSTEM::POW(10f, SYSTEM::TO_FLOAT(iVar0)))) % 10);
		iVar1++;
		iVar0 = (iVar0 + -1);
	}
}

int func_800(int iParam0)//Position - 0x73504
{
	return Local_138.f_48[iParam0];
}

int func_801(int iParam0)//Position - 0x76A5A
{
	if (iParam0 == 3)
	{
		return 1;
	}
	return 0;
}

int func_802(int iParam0)//Position - 0x78CAC
{
	switch (iParam0)
	{
		case 0:
			return 2;
		case 1:
			return 3;
		case 2:
			return 4;
		case 3:
			return 5;
		case 4:
			return 6;
		default:
	}
	return -1;
}

void func_803(int iParam0, var uParam1)//Position - 0x7BA79
{
	struct<3> Var0;
	int iVar1;
	Var0.f_0 = 1086643333;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = uParam1;
	iVar1 = __LIB_0__::func_950(iParam0);
	if (!iVar1 == 0 && __LIB_0__::func_156(iParam0, 0, 1))
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iVar1);
	}
}

int func_804(var uParam0, int iParam1)//Position - 0x7BBD0
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		if ((uParam0[iVar0 /*3*/])->f_2 == iParam1)
		{
			return iVar0;
		}
		iVar0++;
	}
	return 99;
}

void func_805()//Position - 0x7BD18
{
	Local_134.f_0 = 0;
}

int func_806()//Position - 0x7C561
{
	return Local_146.f_0;
}

void func_807()//Position - 0x612E9
{
	Local_134.f_5 = -1;
	if (Local_134.f_6 != -2147483647)
	{
		Local_134.f_6 = -2147483647;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(Local_134.f_7))
	{
		Local_134.f_7 = __LIB_0__::func_591();
	}
	if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
	}
}

struct<4> func_808(bool bParam0)//Position - 0x636E2
{
	struct<4> Var0;
	Var0.f_3 = 255;
	if (bParam0)
	{
		__LIB_15__::func_813(&Var0, 0, 0, 255, 255);
	}
	else
	{
		__LIB_15__::func_813(&Var0, 255, 0, 0, 255);
	}
	return Var0;
}

void func_809(int iParam0)//Position - 0x63860
{
	Local_134.f_0 = 1;
	Local_134.f_6 = -2147483647;
	Local_134.f_5 = MISC::GET_HASH_KEY(__LIB_15__::func_819(iParam0));
	__LIB_5__::func_401(__LIB_15__::func_819(iParam0));
}

int func_810()//Position - 0x6DBD2
{
	if (!__LIB_1__::func_338())
	{
		return 1;
	}
	return 0;
}

var func_811()//Position - 0x3B5D9
{
	return Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_1;
}

int func_812(int iParam0, var uParam1, var uParam2)//Position - 0x7EBAA
{
	int iVar0;
	int iVar1;
	int iVar2;
	*uParam1 = 0;
	iVar0 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, 11);
	iVar1 = PED::GET_PED_TEXTURE_VARIATION(iParam0, 11);
	iVar2 = FILES::GET_HASH_NAME_FOR_COMPONENT(iParam0, 11, iVar0, iVar1);
	if (FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HOODED_JACKET"), 0))
	{
		*uParam1 = FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HOOD_UP"), 0);
		*uParam2 = FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(iVar2, joaat("HOOD_TUCKED"), 0);
		return 1;
	}
	return 0;
}

int func_813(int iParam0, char* sParam1)//Position - 0x97E9B
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam1);
	switch (iParam0)
	{
		case 256:
			switch (iVar0)
			{
				case joaat("CLO_H4M_DECL_38"):
					return 1;
					break;
				case joaat("CLO_H4M_DECL_36"):
					return 2;
					break;
				case joaat("CLO_H4M_DECL_34"):
					return 3;
					break;
				case joaat("CLO_H4M_DECL_35"):
					return 4;
					break;
				case joaat("CLO_H4M_DECL_37"):
					return 5;
					break;
				case joaat("CLO_H4M_DECL_43"):
					return 6;
					break;
				case joaat("CLO_H4M_DECL_41"):
					return 7;
					break;
				case joaat("CLO_H4M_DECL_39"):
					return 8;
					break;
				case joaat("CLO_H4M_U_7_5"):
					return 9;
					break;
				case joaat("CLO_H4M_U_7_6"):
					return 10;
					break;
				case joaat("CLO_H4M_U_7_7"):
					return 11;
					break;
				case joaat("CLO_H4M_U_7_8"):
					return 12;
					break;
				case joaat("CLO_H4M_U_7_9"):
					return 13;
					break;
			}
			switch (iVar0)
			{
				case joaat("CLO_H4F_DECL_38"):
					return 1;
					break;
				case joaat("CLO_H4F_DECL_36"):
					return 2;
					break;
				case joaat("CLO_H4F_DECL_34"):
					return 3;
					break;
				case joaat("CLO_H4F_DECL_35"):
					return 4;
					break;
				case joaat("CLO_H4F_DECL_37"):
					return 5;
					break;
				case joaat("CLO_H4F_DECL_43"):
					return 6;
					break;
				case joaat("CLO_H4F_DECL_41"):
					return 7;
					break;
				case joaat("CLO_H4F_DECL_39"):
					return 8;
					break;
				case joaat("CLO_H4F_U_6_5"):
					return 9;
					break;
				case joaat("CLO_H4F_U_6_6"):
					return 10;
					break;
				case joaat("CLO_H4F_U_6_7"):
					return 11;
					break;
				case joaat("CLO_H4F_U_6_8"):
					return 12;
					break;
				case joaat("CLO_H4F_U_6_9"):
					return 13;
					break;
			}
			break;
		case 257:
			switch (iVar0)
			{
				case joaat("CLO_H4M_PH_1_5"):
					return 1;
					break;
				case joaat("CLO_H4M_PH_1_6"):
					return 2;
					break;
				case joaat("CLO_H4M_PH_1_7"):
					return 3;
					break;
				case joaat("CLO_H4M_PH_2_5"):
					return 4;
					break;
				case joaat("CLO_H4M_PH_2_6"):
					return 5;
					break;
				case joaat("CLO_H4M_PH_2_7"):
					return 6;
					break;
			}
			switch (iVar0)
			{
				case joaat("CLO_H4F_PH_1_5"):
					return 1;
					break;
				case joaat("CLO_H4F_PH_1_6"):
					return 2;
					break;
				case joaat("CLO_H4F_PH_1_7"):
					return 3;
					break;
				case joaat("CLO_H4F_PH_2_5"):
					return 4;
					break;
				case joaat("CLO_H4F_PH_2_6"):
					return 5;
					break;
				case joaat("CLO_H4F_PH_2_7"):
					return 6;
					break;
			}
			break;
	}
	return 0;
}

int func_814(char* sParam0)//Position - 0x980EA
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	switch (iVar0)
	{
		case joaat("CLO_FXM_DECL_0"):
		case joaat("CLO_FXF_DECL_0"):
		case joaat("CLO_FXM_D_6_0"):
		case joaat("CLO_FXM_D_7_0"):
		case joaat("CLO_FXF_D_8_0"):
		case joaat("CLO_FXF_D_9_0"):
			return 1;
			break;
	}
	return 0;
}

int func_815(int iParam0)//Position - 0xA5595
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 8:
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
			return 1;
			break;
	}
	return 0;
}

void func_816(int iParam0)//Position - 0x78AB3
{
	__LIB_1__::func_354(753, iParam0, Global_78127, 1, 0);
	__LIB_1__::func_354(2053, iParam0, Global_78127, 1, 0);
	__LIB_1__::func_348(161, 1, -1, 1);
}

int func_817(char* sParam0)//Position - 0x91708
{
	int iVar0;
	int iVar1;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 37;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	if (__LIB_31__::func_932(78))
	{
		iVar1 = __LIB_16__::func_468(iVar0);
		if (iVar1 != 37)
		{
			return iVar1;
		}
	}
	switch (iVar0)
	{
		case joaat("CLO_HP_B_0_0"):
		case joaat("CLO_HP_B_0_1"):
		case joaat("CLO_HP_B_1_0"):
		case joaat("CLO_HP_B_1_1"):
		case joaat("CLO_HP_B_2_0"):
		case joaat("CLO_HP_B_2_1"):
		case joaat("CLO_HP_B_3_0"):
		case joaat("CLO_HP_B_3_1"):
		case joaat("CLO_INDM_B_0_0"):
		case joaat("CLO_INDM_B_0_1"):
		case joaat("CLO_INDM_B_1_0"):
		case joaat("CLO_INDM_B_1_1"):
		case joaat("CLO_INDM_B_2_0"):
		case joaat("CLO_INDM_B_2_1"):
		case joaat("CLO_INDM_B_3_0"):
		case joaat("CLO_INDM_B_3_1"):
		case joaat("CLO_INDM_B_4_0"):
		case joaat("CLO_INDM_B_4_1"):
		case joaat("CLO_INDM_B_5_0"):
		case joaat("CLO_INDM_B_5_1"):
		case joaat("CLO_HP_F_B_0_0"):
		case joaat("CLO_HP_F_B_0_1"):
		case joaat("CLO_HP_F_B_1_0"):
		case joaat("CLO_HP_F_B_1_1"):
		case joaat("CLO_HP_F_B_2_0"):
		case joaat("CLO_HP_F_B_2_1"):
		case joaat("CLO_HP_F_B_3_0"):
		case joaat("CLO_HP_F_B_3_1"):
		case joaat("CLO_INDF_B_0_0"):
		case joaat("CLO_INDF_B_0_1"):
		case joaat("CLO_INDF_B_1_0"):
		case joaat("CLO_INDF_B_1_1"):
		case joaat("CLO_INDF_B_2_0"):
		case joaat("CLO_INDF_B_2_1"):
		case joaat("CLO_INDF_B_3_0"):
		case joaat("CLO_INDF_B_3_1"):
		case joaat("CLO_INDF_B_4_0"):
		case joaat("CLO_INDF_B_4_1"):
		case joaat("CLO_INDF_B_5_0"):
		case joaat("CLO_INDF_B_5_1"):
			return 0;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_HSTM_B_8_0"):
		case joaat("CLO_HSTM_B_9_0"):
		case joaat("CLO_HSTM_B_10_0"):
		case joaat("CLO_HSTM_B_15_0"):
		case joaat("CLO_HSTM_B_15_1"):
		case joaat("CLO_HSTM_B_15_2"):
		case joaat("CLO_HSTM_B_15_3"):
		case joaat("CLO_HSTM_B_15_4"):
		case joaat("CLO_HSTM_B_15_5"):
		case joaat("CLO_HSTM_B_15_6"):
		case joaat("CLO_HSTM_B_15_7"):
		case joaat("CLO_HSTM_B_15_8"):
		case joaat("CLO_HSTM_B_15_9"):
		case joaat("CLO_HSTF_B_8_0"):
		case joaat("CLO_HSTF_B_9_0"):
		case joaat("CLO_HSTF_B_10_0"):
		case joaat("CLO_HSTF_B_15_0"):
		case joaat("CLO_HSTF_B_15_1"):
		case joaat("CLO_HSTF_B_15_2"):
		case joaat("CLO_HSTF_B_15_3"):
		case joaat("CLO_HSTF_B_15_4"):
		case joaat("CLO_HSTF_B_15_5"):
		case joaat("CLO_HSTF_B_15_6"):
		case joaat("CLO_HSTF_B_15_7"):
		case joaat("CLO_HSTF_B_15_8"):
		case joaat("CLO_HSTF_B_15_9"):
			return 6;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_XMAS_M_0_0"):
		case joaat("CLO_XMAS_M_0_1"):
		case joaat("CLO_XMAS_M_0_2"):
		case joaat("CLO_XMAS_M_1_0"):
		case joaat("CLO_XMAS_M_2_0"):
		case joaat("CLO_X2M_B_0_0"):
		case joaat("CLO_X2M_B_1_0"):
		case joaat("CLO_X2M_B_2_0"):
		case joaat("CLO_X2M_B_3_0"):
		case joaat("CLO_X2M_B_3_1"):
		case joaat("CLO_X2M_B_3_2"):
		case joaat("CLO_X2F_B_0_0"):
		case joaat("CLO_X2F_B_1_0"):
		case joaat("CLO_X2F_B_2_0"):
		case joaat("CLO_X2F_B_3_0"):
		case joaat("CLO_X2F_B_3_1"):
		case joaat("CLO_X2F_B_3_2"):
		case joaat("CLO_X3M_B_0_0"):
		case joaat("CLO_X3M_B_0_1"):
		case joaat("CLO_X3M_B_0_2"):
		case joaat("CLO_X3M_B_1_0"):
		case joaat("CLO_X3M_B_1_1"):
		case joaat("CLO_X3M_B_1_2"):
		case joaat("CLO_X3M_B_2_0"):
		case joaat("CLO_X3M_B_2_1"):
		case joaat("CLO_X3M_B_2_2"):
		case joaat("CLO_X3M_B_3_0"):
		case joaat("CLO_X3M_B_3_1"):
		case joaat("CLO_X3M_B_3_2"):
		case joaat("CLO_X3M_B_3_3"):
		case joaat("CLO_X3M_B_3_4"):
		case joaat("CLO_X3M_B_3_5"):
		case joaat("CLO_X3M_B_4_0"):
		case joaat("CLO_X3M_B_4_1"):
		case joaat("CLO_X3M_B_10_0"):
		case joaat("CLO_X3M_B_11_0"):
		case joaat("CLO_X3M_B_11_1"):
		case joaat("CLO_X3M_B_11_2"):
		case joaat("CLO_X3M_B_12_0"):
		case joaat("CLO_X3M_B_12_1"):
		case joaat("CLO_X3M_B_12_2"):
		case joaat("CLO_X3M_B_13_0"):
		case joaat("CLO_X3M_B_13_1"):
		case joaat("CLO_X3M_B_13_2"):
		case joaat("CLO_X3M_B_14_0"):
		case joaat("CLO_X3M_B_14_1"):
		case joaat("CLO_X3M_B_14_2"):
		case joaat("CLO_X3F_B_0_0"):
		case joaat("CLO_X3F_B_0_1"):
		case joaat("CLO_X3F_B_0_2"):
		case joaat("CLO_X3F_B_1_0"):
		case joaat("CLO_X3F_B_1_1"):
		case joaat("CLO_X3F_B_1_2"):
		case joaat("CLO_X3F_B_2_0"):
		case joaat("CLO_X3F_B_2_1"):
		case joaat("CLO_X3F_B_2_2"):
		case joaat("CLO_X3F_B_3_0"):
		case joaat("CLO_X3F_B_3_1"):
		case joaat("CLO_X3F_B_3_2"):
		case joaat("CLO_X3F_B_3_3"):
		case joaat("CLO_X3F_B_3_4"):
		case joaat("CLO_X3F_B_3_5"):
		case joaat("CLO_X3F_B_4_0"):
		case joaat("CLO_X3F_B_4_1"):
		case joaat("CLO_X3F_B_10_0"):
		case joaat("CLO_X3F_B_11_0"):
		case joaat("CLO_X3F_B_11_1"):
		case joaat("CLO_X3F_B_11_2"):
		case joaat("CLO_X3F_B_12_0"):
		case joaat("CLO_X3F_B_12_1"):
		case joaat("CLO_X3F_B_12_2"):
		case joaat("CLO_X3F_B_13_0"):
		case joaat("CLO_X3F_B_13_1"):
		case joaat("CLO_X3F_B_13_2"):
		case joaat("CLO_X3F_B_14_0"):
		case joaat("CLO_X3F_B_14_1"):
		case joaat("CLO_X3F_B_14_2"):
			return 10;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_HSTM_B_12_0"):
		case joaat("CLO_HSTM_B_12_1"):
		case joaat("CLO_HSTM_B_12_2"):
		case joaat("CLO_HSTM_B_12_3"):
		case joaat("CLO_HSTM_B_13_0"):
		case joaat("CLO_HSTM_B_13_1"):
		case joaat("CLO_HSTM_B_13_2"):
		case joaat("CLO_HSTM_B_13_3"):
		case joaat("CLO_HSTMB_16_0"):
		case joaat("CLO_HSTMB_16_1"):
		case joaat("CLO_HSTMB_16_2"):
		case joaat("CLO_HSTMB_16_3"):
		case joaat("CLO_HSTMB_16_4"):
		case joaat("CLO_HSTMB_16_5"):
		case joaat("CLO_HSTMB_16_6"):
		case joaat("CLO_HSTMB_16_7"):
		case joaat("CLO_HSTMB_16_8"):
		case joaat("CLO_HSTMB_16_9"):
		case joaat("CLO_HSTMB_19_0"):
		case joaat("CLO_HSTMB_19_1"):
		case joaat("CLO_HSTMB_19_2"):
		case joaat("CLO_HSTMB_19_3"):
		case joaat("CLO_HSTMB_19_4"):
		case joaat("CLO_HSTMB_19_5"):
		case joaat("CLO_HSTMB_19_6"):
		case joaat("CLO_HSTMB_19_7"):
		case joaat("CLO_HSTMB_19_8"):
		case joaat("CLO_HSTMB_19_9"):
		case joaat("CLO_HSTMB_19_10"):
		case joaat("CLO_HSTF_B_12_0"):
		case joaat("CLO_HSTF_B_12_1"):
		case joaat("CLO_HSTF_B_12_2"):
		case joaat("CLO_HSTF_B_12_3"):
		case joaat("CLO_HSTF_B_13_0"):
		case joaat("CLO_HSTF_B_13_1"):
		case joaat("CLO_HSTF_B_13_2"):
		case joaat("CLO_HSTF_B_13_3"):
		case joaat("CLO_HSTFB_16_0"):
		case joaat("CLO_HSTFB_16_1"):
		case joaat("CLO_HSTFB_16_2"):
		case joaat("CLO_HSTFB_16_3"):
		case joaat("CLO_HSTFB_16_4"):
		case joaat("CLO_HSTFB_16_5"):
		case joaat("CLO_HSTFB_16_6"):
		case joaat("CLO_HSTFB_16_7"):
		case joaat("CLO_HSTFB_16_8"):
		case joaat("CLO_HSTFB_16_9"):
		case joaat("CLO_HSTFB_19_0"):
		case joaat("CLO_HSTFB_19_1"):
		case joaat("CLO_HSTFB_19_2"):
		case joaat("CLO_HSTFB_19_3"):
		case joaat("CLO_HSTFB_19_4"):
		case joaat("CLO_HSTFB_19_5"):
		case joaat("CLO_HSTFB_19_6"):
		case joaat("CLO_HSTFB_19_7"):
		case joaat("CLO_HSTFB_19_8"):
		case joaat("CLO_HSTFB_19_9"):
		case joaat("CLO_HSTFB_19_10"):
			return 8;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_HSTMB_14_0"):
		case joaat("CLO_HSTMB_14_1"):
		case joaat("CLO_HSTMB_14_2"):
		case joaat("CLO_HSTMB_14_3"):
		case joaat("CLO_HSTMB_14_4"):
		case joaat("CLO_HSTMB_14_5"):
		case joaat("CLO_HSTMB_14_6"):
		case joaat("CLO_HSTMB_14_7"):
		case joaat("CLO_HSTMB_14_8"):
		case joaat("CLO_HSTMB_14_9"):
		case joaat("CLO_HSTMB_14_10"):
		case joaat("CLO_HSTMB_14_11"):
		case joaat("CLO_HSTMB_14_12"):
		case joaat("CLO_HSTMB_14_13"):
		case joaat("CLO_HSTMB_14_14"):
		case joaat("CLO_HSTMB_14_15"):
		case joaat("CLO_HSTMB_14_16"):
		case joaat("CLO_HSTMB_14_17"):
		case joaat("CLO_HSTMB_14_18"):
		case joaat("CLO_HSTMB_14_19"):
		case joaat("CLO_HSTMB_14_20"):
		case joaat("CLO_HSTMB_14_21"):
		case joaat("CLO_HSTMB_14_22"):
		case joaat("CLO_HSTMB_14_23"):
		case joaat("CLO_HSTMB_14_24"):
		case joaat("CLO_HSTMB_14_25"):
		case joaat("CLO_HSTFB_14_0"):
		case joaat("CLO_HSTFB_14_1"):
		case joaat("CLO_HSTFB_14_2"):
		case joaat("CLO_HSTFB_14_3"):
		case joaat("CLO_HSTFB_14_4"):
		case joaat("CLO_HSTFB_14_5"):
		case joaat("CLO_HSTFB_14_6"):
		case joaat("CLO_HSTFB_14_7"):
		case joaat("CLO_HSTFB_14_8"):
		case joaat("CLO_HSTFB_14_9"):
		case joaat("CLO_HSTFB_14_10"):
		case joaat("CLO_HSTFB_14_11"):
		case joaat("CLO_HSTFB_14_12"):
		case joaat("CLO_HSTFB_14_13"):
		case joaat("CLO_HSTFB_14_14"):
		case joaat("CLO_HSTFB_14_15"):
		case joaat("CLO_HSTFB_14_16"):
		case joaat("CLO_HSTFB_14_17"):
		case joaat("CLO_HSTFB_14_18"):
		case joaat("CLO_HSTFB_14_19"):
		case joaat("CLO_HSTFB_14_20"):
		case joaat("CLO_HSTFB_14_21"):
		case joaat("CLO_HSTFB_14_22"):
		case joaat("CLO_HSTFB_14_23"):
		case joaat("CLO_HSTFB_14_24"):
		case joaat("CLO_HSTFB_14_25"):
			return 18;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_BUS_M_0_1"):
		case joaat("CLO_BUS_M_0_2"):
		case joaat("CLO_BUS_M_0_10"):
			return 9;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_BUS_M_0_0"):
		case joaat("CLO_BUS_M_0_3"):
		case joaat("CLO_BUS_M_0_4"):
		case joaat("CLO_BUS_M_0_5"):
		case joaat("CLO_BUS_M_0_6"):
		case joaat("CLO_BUS_M_2_0"):
		case joaat("CLO_BUS_M_2_1"):
		case joaat("CLO_BUS_M_2_2"):
		case joaat("CLO_BUS_M_2_3"):
		case joaat("CLO_BUS_M_2_4"):
		case joaat("CLO_BUS_M_2_5"):
		case joaat("CLO_BUS_M_2_6"):
		case joaat("CLO_BUS_M_2_7"):
		case joaat("CLO_BUS_M_2_8"):
		case joaat("CLO_LTSMB_2_0"):
		case joaat("CLO_LTSFB_2_0"):
			return 16;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_HSTMB_21_0"):
		case joaat("CLO_HSTMB_21_1"):
		case joaat("CLO_HSTMB_21_2"):
		case joaat("CLO_HSTMB_21_3"):
		case joaat("CLO_HSTMB_21_4"):
		case joaat("CLO_HSTMB_21_5"):
		case joaat("CLO_HSTMB_21_6"):
		case joaat("CLO_HSTMB_21_7"):
		case joaat("CLO_HSTMB_21_8"):
		case joaat("CLO_HSTMB_22_0"):
		case joaat("CLO_HSTMB_22_1"):
		case joaat("CLO_HSTMB_22_2"):
		case joaat("CLO_HSTMB_22_3"):
		case joaat("CLO_HSTMB_22_4"):
		case joaat("CLO_HSTMB_22_5"):
		case joaat("CLO_HSTMB_22_6"):
		case joaat("CLO_HSTMB_22_7"):
		case joaat("CLO_HSTMB_22_8"):
		case joaat("CLO_HSTMB_22_9"):
		case joaat("CLO_HSTMB_22_10"):
		case joaat("CLO_HSTMB_22_11"):
		case joaat("CLO_HSTMB_22_12"):
		case joaat("CLO_HSTMB_22_13"):
		case joaat("CLO_HSTMB_22_14"):
		case joaat("CLO_HSTMB_22_15"):
		case joaat("CLO_HSTMB_22_16"):
		case joaat("CLO_HSTMB_22_17"):
		case joaat("CLO_HSTMB_22_18"):
		case joaat("CLO_HSTMB_22_19"):
		case joaat("CLO_HSTMB_22_20"):
		case joaat("CLO_HSTMB_22_21"):
		case joaat("CLO_HSTMB_23_0"):
		case joaat("CLO_HSTMB_23_1"):
		case joaat("CLO_HSTMB_23_2"):
		case joaat("CLO_HSTMB_23_3"):
		case joaat("CLO_HSTMB_23_4"):
		case joaat("CLO_HSTMB_23_5"):
		case joaat("CLO_HSTMB_23_6"):
		case joaat("CLO_HSTMB_23_7"):
		case joaat("CLO_HSTMB_23_8"):
		case joaat("CLO_HSTMB_23_9"):
		case joaat("CLO_HSTFB_21_0"):
		case joaat("CLO_HSTFB_21_1"):
		case joaat("CLO_HSTFB_21_2"):
		case joaat("CLO_HSTFB_21_3"):
		case joaat("CLO_HSTFB_21_4"):
		case joaat("CLO_HSTFB_21_5"):
		case joaat("CLO_HSTFB_21_6"):
		case joaat("CLO_HSTFB_21_7"):
		case joaat("CLO_HSTFB_21_8"):
		case joaat("CLO_HSTFB_22_0"):
		case joaat("CLO_HSTFB_22_1"):
		case joaat("CLO_HSTFB_22_2"):
		case joaat("CLO_HSTFB_22_3"):
		case joaat("CLO_HSTFB_22_4"):
		case joaat("CLO_HSTFB_22_5"):
		case joaat("CLO_HSTFB_22_6"):
		case joaat("CLO_HSTFB_22_7"):
		case joaat("CLO_HSTFB_22_8"):
		case joaat("CLO_HSTFB_22_9"):
		case joaat("CLO_HSTFB_22_10"):
		case joaat("CLO_HSTFB_22_11"):
		case joaat("CLO_HSTFB_22_12"):
		case joaat("CLO_HSTFB_22_13"):
		case joaat("CLO_HSTFB_22_14"):
		case joaat("CLO_HSTFB_22_15"):
		case joaat("CLO_HSTFB_22_16"):
		case joaat("CLO_HSTFB_22_17"):
		case joaat("CLO_HSTFB_22_18"):
		case joaat("CLO_HSTFB_22_19"):
		case joaat("CLO_HSTFB_22_20"):
		case joaat("CLO_HSTFB_22_21"):
		case joaat("CLO_HSTFB_23_0"):
		case joaat("CLO_HSTFB_23_1"):
		case joaat("CLO_HSTFB_23_2"):
		case joaat("CLO_HSTFB_23_3"):
		case joaat("CLO_HSTFB_23_4"):
		case joaat("CLO_HSTFB_23_5"):
		case joaat("CLO_HSTFB_23_6"):
		case joaat("CLO_HSTFB_23_7"):
		case joaat("CLO_HSTFB_23_8"):
		case joaat("CLO_HSTFB_23_9"):
		case joaat("CLO_HST_B_2_0"):
			return 2;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_HSTMB_18_0"):
		case joaat("CLO_HSTMB_18_1"):
		case joaat("CLO_HSTMB_18_2"):
		case joaat("CLO_HSTMB_18_3"):
		case joaat("CLO_HSTMB_18_4"):
		case joaat("CLO_HSTMB_18_5"):
		case joaat("CLO_HSTMB_18_6"):
		case joaat("CLO_HSTMB_18_7"):
		case joaat("CLO_HSTMB_18_8"):
		case joaat("CLO_HSTMB_18_9"):
		case joaat("CLO_HSTMB_18_10"):
		case joaat("CLO_HSTMB_18_11"):
		case joaat("CLO_HSTMB_20_0"):
		case joaat("CLO_HSTMB_20_1"):
		case joaat("CLO_HSTMB_17_0"):
		case joaat("CLO_HSTMB_17_1"):
		case joaat("CLO_HSTMB_17_2"):
		case joaat("CLO_HSTMB_17_3"):
		case joaat("CLO_HSTMB_17_4"):
		case joaat("CLO_HSTMB_17_5"):
		case joaat("CLO_HSTMB_17_6"):
		case joaat("CLO_HSTMB_17_7"):
		case joaat("CLO_HSTMB_17_8"):
		case joaat("CLO_HSTMB_17_9"):
		case joaat("CLO_HSTMB_17_10"):
		case joaat("CLO_HSTMB_17_11"):
		case joaat("CLO_HSTFB_20_0"):
		case joaat("CLO_HSTFB_20_1"):
		case joaat("CLO_HSTFB_18_0"):
		case joaat("CLO_HSTFB_18_1"):
		case joaat("CLO_HSTFB_18_2"):
		case joaat("CLO_HSTFB_18_3"):
		case joaat("CLO_HSTFB_18_4"):
		case joaat("CLO_HSTFB_18_5"):
		case joaat("CLO_HSTFB_18_6"):
		case joaat("CLO_HSTFB_18_7"):
		case joaat("CLO_HSTFB_18_8"):
		case joaat("CLO_HSTFB_18_9"):
		case joaat("CLO_HSTFB_18_10"):
		case joaat("CLO_HSTFB_18_11"):
		case joaat("CLO_HSTFB_17_0"):
		case joaat("CLO_HSTFB_17_1"):
		case joaat("CLO_HSTFB_17_2"):
		case joaat("CLO_HSTFB_17_3"):
		case joaat("CLO_HSTFB_17_4"):
		case joaat("CLO_HSTFB_17_5"):
		case joaat("CLO_HSTFB_17_6"):
		case joaat("CLO_HSTFB_17_7"):
		case joaat("CLO_HSTFB_17_8"):
		case joaat("CLO_HSTFB_17_9"):
		case joaat("CLO_HSTFB_17_10"):
		case joaat("CLO_HSTFB_17_11"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_BUS_M_0_11"):
		case joaat("CLO_BUS_M_0_12"):
		case joaat("CLO_BUS_M_0_13"):
		case joaat("CLO_BUS_M_0_14"):
		case joaat("CLO_BUS_M_0_15"):
		case joaat("CLO_BUS_M_1_0"):
		case joaat("CLO_BUS_M_1_1"):
		case joaat("CLO_BUS_M_1_2"):
		case joaat("CLO_LTSMB_1_0"):
		case joaat("CLO_LTSMB_1_1"):
		case joaat("CLO_LTSMB_1_2"):
		case joaat("CLO_LTSMB_1_3"):
		case joaat("CLO_LTSMB_1_4"):
		case joaat("CLO_HSTM_B_4_0"):
		case joaat("CLO_HSTM_B_4_1"):
		case joaat("CLO_HSTM_B_5_0"):
		case joaat("CLO_HSTM_B_5_1"):
		case joaat("CLO_HSTM_B_6_0"):
		case joaat("CLO_HSTM_B_6_1"):
		case joaat("CLO_HSTM_B_7_0"):
		case joaat("CLO_HSTM_B_7_1"):
		case joaat("CLO_LTSFB_1_0"):
		case joaat("CLO_LTSFB_1_1"):
		case joaat("CLO_LTSFB_1_2"):
		case joaat("CLO_LTSFB_1_3"):
		case joaat("CLO_LTSFB_1_4"):
		case joaat("CLO_HSTF_B_4_0"):
		case joaat("CLO_HSTF_B_4_1"):
		case joaat("CLO_HSTF_B_5_0"):
		case joaat("CLO_HSTF_B_5_1"):
		case joaat("CLO_HSTF_B_6_0"):
		case joaat("CLO_HSTF_B_6_1"):
		case joaat("CLO_HSTF_B_7_0"):
		case joaat("CLO_HSTF_B_7_1"):
		case joaat("CLO_HALM_0_0"):
		case joaat("CLO_HALM_0_1"):
		case joaat("CLO_HALM_0_2"):
		case joaat("CLO_HALM_1_0"):
		case joaat("CLO_HALM_1_1"):
		case joaat("CLO_HALM_1_2"):
		case joaat("CLO_HALM_2_0"):
		case joaat("CLO_HALM_2_1"):
		case joaat("CLO_HALM_2_2"):
		case joaat("CLO_HALM_3_0"):
		case joaat("CLO_HALM_3_1"):
		case joaat("CLO_HALM_3_2"):
		case joaat("CLO_HALM_4_0"):
		case joaat("CLO_HALM_4_1"):
		case joaat("CLO_HALM_4_2"):
		case joaat("CLO_HALM_5_0"):
		case joaat("CLO_HALM_5_1"):
		case joaat("CLO_HALM_5_2"):
		case joaat("CLO_HALM_6_0"):
		case joaat("CLO_HALM_6_1"):
		case joaat("CLO_HALM_6_2"):
		case joaat("CLO_HALM_7_0"):
		case joaat("CLO_HALM_7_1"):
		case joaat("CLO_HALM_7_2"):
		case joaat("CLO_HALM_8_0"):
		case joaat("CLO_HALM_8_1"):
		case joaat("CLO_HALM_8_2"):
		case joaat("CLO_HALM_9_0"):
		case joaat("CLO_HALM_9_1"):
		case joaat("CLO_HALM_9_2"):
		case joaat("CLO_HALM_10_0"):
		case joaat("CLO_HALM_10_1"):
		case joaat("CLO_HALM_10_2"):
		case joaat("CLO_HALM_11_0"):
		case joaat("CLO_HALM_11_1"):
		case joaat("CLO_HALM_11_2"):
		case joaat("CLO_HALM_12_0"):
		case joaat("CLO_HALM_12_1"):
		case joaat("CLO_HALM_12_2"):
		case joaat("CLO_HALF_0_0"):
		case joaat("CLO_HALF_0_1"):
		case joaat("CLO_HALF_0_2"):
		case joaat("CLO_HALF_1_0"):
		case joaat("CLO_HALF_1_1"):
		case joaat("CLO_HALF_1_2"):
		case joaat("CLO_HALF_2_0"):
		case joaat("CLO_HALF_2_1"):
		case joaat("CLO_HALF_2_2"):
		case joaat("CLO_HALF_3_0"):
		case joaat("CLO_HALF_3_1"):
		case joaat("CLO_HALF_3_2"):
		case joaat("CLO_HALF_4_0"):
		case joaat("CLO_HALF_4_1"):
		case joaat("CLO_HALF_4_2"):
		case joaat("CLO_HALF_5_0"):
		case joaat("CLO_HALF_5_1"):
		case joaat("CLO_HALF_5_2"):
		case joaat("CLO_HALF_6_0"):
		case joaat("CLO_HALF_6_1"):
		case joaat("CLO_HALF_6_2"):
		case joaat("CLO_HALF_7_0"):
		case joaat("CLO_HALF_7_1"):
		case joaat("CLO_HALF_7_2"):
		case joaat("CLO_HALF_8_0"):
		case joaat("CLO_HALF_8_1"):
		case joaat("CLO_HALF_8_2"):
		case joaat("CLO_HALF_9_0"):
		case joaat("CLO_HALF_9_1"):
		case joaat("CLO_HALF_9_2"):
		case joaat("CLO_HALF_10_0"):
		case joaat("CLO_HALF_10_1"):
		case joaat("CLO_HALF_10_2"):
		case joaat("CLO_HALF_11_0"):
		case joaat("CLO_HALF_11_1"):
		case joaat("CLO_HALF_11_2"):
		case joaat("CLO_HALF_12_0"):
		case joaat("CLO_HALF_12_1"):
		case joaat("CLO_HALF_12_2"):
			return 17;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_BUS_M_0_7"):
		case joaat("CLO_BUS_M_0_8"):
		case joaat("CLO_BUS_M_0_9"):
		case joaat("CLO_BUS_M_1_3"):
		case joaat("CLO_BHM_B_0_0"):
		case joaat("CLO_BHM_B_0_1"):
		case joaat("CLO_BHM_B_0_2"):
		case joaat("CLO_BHM_B_0_3"):
		case joaat("CLO_BHM_B_0_4"):
		case joaat("CLO_BHM_B_0_5"):
		case joaat("CLO_BHM_B_0_6"):
		case joaat("CLO_BHM_B_0_7"):
		case joaat("CLO_BHM_B_0_8"):
		case joaat("CLO_BHM_B_0_9"):
		case joaat("CLO_BHM_B_0_10"):
		case joaat("CLO_BHM_B_0_11"):
		case joaat("CLO_BHM_B_0_12"):
		case joaat("CLO_BHM_B_0_13"):
		case joaat("CLO_BHM_B_0_14"):
		case joaat("CLO_BHM_B_0_15"):
		case joaat("CLO_BHM_B_0_16"):
		case joaat("CLO_BHF_B_0_0"):
		case joaat("CLO_BHF_B_0_1"):
		case joaat("CLO_BHF_B_0_2"):
		case joaat("CLO_BHF_B_0_3"):
		case joaat("CLO_BHF_B_0_4"):
		case joaat("CLO_BHF_B_0_5"):
		case joaat("CLO_BHF_B_0_6"):
		case joaat("CLO_BHF_B_0_7"):
		case joaat("CLO_BHF_B_0_8"):
		case joaat("CLO_BHF_B_0_9"):
		case joaat("CLO_BHF_B_0_10"):
		case joaat("CLO_BHF_B_0_11"):
		case joaat("CLO_BHF_B_0_12"):
		case joaat("CLO_BHF_B_0_13"):
		case joaat("CLO_BHF_B_0_14"):
		case joaat("CLO_BHF_B_0_15"):
		case joaat("CLO_BHF_B_0_16"):
			return 20;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_LTSMB_0_0"):
		case joaat("CLO_LTSMB_0_1"):
		case joaat("CLO_LTSMB_0_2"):
		case joaat("CLO_LTSMB_0_3"):
		case joaat("CLO_LTSMB_0_4"):
		case joaat("CLO_LTSFB_0_0"):
		case joaat("CLO_LTSFB_0_1"):
		case joaat("CLO_LTSFB_0_2"):
		case joaat("CLO_LTSFB_0_3"):
		case joaat("CLO_LTSFB_0_4"):
			return 21;
			break;
		case joaat("CLO_HST_B_3_0"):
		case joaat("CLO_HSTM_B_11_0"):
		case joaat("CLO_HSTF_B_11_0"):
			return 13;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_VALM_B_0_0"):
		case joaat("CLO_VALM_B_0_1"):
		case joaat("CLO_VALM_B_0_2"):
		case joaat("CLO_VALM_B_1_0"):
		case joaat("CLO_VALM_B_1_1"):
		case joaat("CLO_VALM_B_1_2"):
		case joaat("CLO_VALM_B_2_0"):
		case joaat("CLO_VALF_B_0_0"):
		case joaat("CLO_VALF_B_0_1"):
		case joaat("CLO_VALF_B_0_2"):
		case joaat("CLO_VALF_B_1_0"):
		case joaat("CLO_VALF_B_1_1"):
		case joaat("CLO_VALF_B_1_2"):
		case joaat("CLO_VALF_B_2_0"):
			return 22;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_BIM_B_0_0"):
		case joaat("CLO_BIM_B_0_1"):
		case joaat("CLO_BIM_B_0_2"):
		case joaat("CLO_BIM_B_0_3"):
		case joaat("CLO_BIM_B_0_4"):
		case joaat("CLO_BIM_B_0_5"):
		case joaat("CLO_BIM_B_0_6"):
		case joaat("CLO_BIM_B_0_7"):
		case joaat("CLO_BIF_B_0_0"):
		case joaat("CLO_BIF_B_0_1"):
		case joaat("CLO_BIF_B_0_2"):
		case joaat("CLO_BIF_B_0_3"):
		case joaat("CLO_BIF_B_0_4"):
		case joaat("CLO_BIF_B_0_5"):
		case joaat("CLO_BIF_B_0_6"):
		case joaat("CLO_BIF_B_0_7"):
			return 3;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_IEM_B_1_0"):
		case joaat("CLO_IEM_B_1_1"):
		case joaat("CLO_IEM_B_1_2"):
		case joaat("CLO_IEM_B_1_3"):
		case joaat("CLO_IEM_B_1_4"):
		case joaat("CLO_IEM_B_1_5"):
			return 17;
			break;
		case joaat("CLO_IEM_B_2_0"):
		case joaat("CLO_IEM_B_2_1"):
		case joaat("CLO_IEM_B_2_2"):
		case joaat("CLO_IEM_B_2_3"):
		case joaat("CLO_IEM_B_2_4"):
		case joaat("CLO_IEM_B_2_5"):
			return 0;
			break;
		case joaat("CLO_IEM_B_3_0"):
		case joaat("CLO_IEM_B_3_1"):
		case joaat("CLO_IEM_B_3_2"):
		case joaat("CLO_IEM_B_3_3"):
		case joaat("CLO_IEM_B_3_4"):
		case joaat("CLO_IEM_B_3_5"):
			return 9;
			break;
		case joaat("CLO_IEM_B_4_0"):
		case joaat("CLO_IEM_B_4_1"):
		case joaat("CLO_IEM_B_4_2"):
		case joaat("CLO_IEM_B_4_3"):
		case joaat("CLO_IEM_B_4_4"):
		case joaat("CLO_IEM_B_4_5"):
		case joaat("CLO_IEM_B_4_6"):
		case joaat("CLO_IEM_B_4_7"):
			return 7;
			break;
		case joaat("CLO_IEM_B_5_0"):
		case joaat("CLO_IEM_B_5_1"):
		case joaat("CLO_IEM_B_5_2"):
		case joaat("CLO_IEM_B_5_3"):
		case joaat("CLO_IEM_B_6_0"):
		case joaat("CLO_IEM_B_6_1"):
		case joaat("CLO_IEM_B_6_2"):
		case joaat("CLO_IEM_B_6_3"):
		case joaat("CLO_IEM_B_6_4"):
		case joaat("CLO_IEM_B_6_5"):
		case joaat("CLO_X4M_B_7_0"):
			return 0;
			break;
		case joaat("CLO_IEM_B_8_0"):
		case joaat("CLO_IEM_B_8_1"):
		case joaat("CLO_IEM_B_8_2"):
		case joaat("CLO_IEM_B_8_3"):
		case joaat("CLO_IEM_B_8_4"):
		case joaat("CLO_IEM_B_8_5"):
			return 9;
			break;
		case joaat("CLO_IEM_B_9_0"):
		case joaat("CLO_IEM_B_9_1"):
		case joaat("CLO_IEM_B_9_2"):
		case joaat("CLO_IEM_B_9_3"):
		case joaat("CLO_IEM_B_9_4"):
		case joaat("CLO_IEM_B_9_5"):
			return 0;
			break;
		case joaat("CLO_IEM_B_10_0"):
		case joaat("CLO_IEM_B_10_1"):
		case joaat("CLO_IEM_B_10_2"):
		case joaat("CLO_IEM_B_10_3"):
		case joaat("CLO_IEM_B_10_4"):
		case joaat("CLO_IEM_B_10_5"):
		case joaat("CLO_IEM_B_10_6"):
		case joaat("CLO_IEM_B_10_7"):
		case joaat("CLO_IEM_B_10_8"):
		case joaat("CLO_IEM_B_10_9"):
		case joaat("CLO_IEM_B_10_10"):
		case joaat("CLO_IEM_B_10_11"):
		case joaat("CLO_IEM_B_10_12"):
		case joaat("CLO_IEM_B_10_13"):
		case joaat("CLO_IEM_B_10_14"):
		case joaat("CLO_IEM_B_10_15"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_IEF_B_1_0"):
		case joaat("CLO_IEF_B_1_1"):
		case joaat("CLO_IEF_B_1_2"):
		case joaat("CLO_IEF_B_1_3"):
		case joaat("CLO_IEF_B_1_4"):
		case joaat("CLO_IEF_B_1_5"):
			return 17;
			break;
		case joaat("CLO_IEF_B_2_0"):
		case joaat("CLO_IEF_B_2_1"):
		case joaat("CLO_IEF_B_2_2"):
		case joaat("CLO_IEF_B_2_3"):
		case joaat("CLO_IEF_B_2_4"):
		case joaat("CLO_IEF_B_2_5"):
			return 0;
			break;
		case joaat("CLO_IEF_B_3_0"):
		case joaat("CLO_IEF_B_3_1"):
		case joaat("CLO_IEF_B_3_2"):
		case joaat("CLO_IEF_B_3_3"):
		case joaat("CLO_IEF_B_3_4"):
		case joaat("CLO_IEF_B_3_5"):
			return 9;
			break;
		case joaat("CLO_IEF_B_4_0"):
		case joaat("CLO_IEF_B_4_1"):
		case joaat("CLO_IEF_B_4_2"):
		case joaat("CLO_IEF_B_4_3"):
		case joaat("CLO_IEF_B_4_4"):
		case joaat("CLO_IEF_B_4_5"):
		case joaat("CLO_IEF_B_4_6"):
		case joaat("CLO_IEF_B_4_7"):
			return 7;
			break;
		case joaat("CLO_IEF_B_5_0"):
		case joaat("CLO_IEF_B_5_1"):
		case joaat("CLO_IEF_B_5_2"):
		case joaat("CLO_IEF_B_5_3"):
		case joaat("CLO_IEF_B_6_0"):
		case joaat("CLO_IEF_B_6_1"):
		case joaat("CLO_IEF_B_6_2"):
		case joaat("CLO_IEF_B_6_3"):
		case joaat("CLO_IEF_B_6_4"):
		case joaat("CLO_IEF_B_6_5"):
		case joaat("CLO_X4F_B_7_0"):
			return 0;
			break;
		case joaat("CLO_IEF_B_8_0"):
		case joaat("CLO_IEF_B_8_1"):
		case joaat("CLO_IEF_B_8_2"):
		case joaat("CLO_IEF_B_8_3"):
		case joaat("CLO_IEF_B_8_4"):
		case joaat("CLO_IEF_B_8_5"):
			return 9;
			break;
		case joaat("CLO_IEF_B_9_0"):
		case joaat("CLO_IEF_B_9_1"):
		case joaat("CLO_IEF_B_9_2"):
		case joaat("CLO_IEF_B_9_3"):
		case joaat("CLO_IEF_B_9_4"):
		case joaat("CLO_IEF_B_9_5"):
			return 0;
			break;
		case joaat("CLO_IEF_B_10_0"):
		case joaat("CLO_IEF_B_10_1"):
		case joaat("CLO_IEF_B_10_2"):
		case joaat("CLO_IEF_B_10_3"):
		case joaat("CLO_IEF_B_10_4"):
		case joaat("CLO_IEF_B_10_5"):
		case joaat("CLO_IEF_B_10_6"):
		case joaat("CLO_IEF_B_10_7"):
		case joaat("CLO_IEF_B_10_8"):
		case joaat("CLO_IEF_B_10_9"):
		case joaat("CLO_IEF_B_10_10"):
		case joaat("CLO_IEF_B_10_11"):
		case joaat("CLO_IEF_B_10_12"):
		case joaat("CLO_IEF_B_10_13"):
		case joaat("CLO_IEF_B_10_14"):
		case joaat("CLO_IEF_B_10_15"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_0_0"):
		case joaat("CLO_GRM_B_0_1"):
		case joaat("CLO_GRM_B_0_2"):
		case joaat("CLO_GRM_B_0_3"):
		case joaat("CLO_GRM_B_0_4"):
		case joaat("CLO_GRM_B_0_5"):
		case joaat("CLO_GRM_B_0_6"):
		case joaat("CLO_GRM_B_0_7"):
		case joaat("CLO_GRM_B_0_8"):
		case joaat("CLO_GRM_B_0_9"):
		case joaat("CLO_GRM_B_0_10"):
		case joaat("CLO_GRM_B_0_11"):
		case joaat("CLO_GRM_B_0_12"):
		case joaat("CLO_GRM_B_0_13"):
		case joaat("CLO_GRM_B_0_14"):
		case joaat("CLO_GRM_B_0_15"):
		case joaat("CLO_GRM_B_0_16"):
		case joaat("CLO_GRM_B_0_17"):
		case joaat("CLO_GRM_B_0_18"):
		case joaat("CLO_GRM_B_0_19"):
		case joaat("CLO_GRM_B_0_20"):
		case joaat("CLO_GRM_B_0_21"):
		case joaat("CLO_GRM_B_0_22"):
		case joaat("CLO_GRM_B_0_23"):
		case joaat("CLO_GRM_B_0_24"):
		case joaat("CLO_GRM_B_0_25"):
			return 24;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_1_0"):
		case joaat("CLO_GRM_B_1_1"):
		case joaat("CLO_GRM_B_1_2"):
		case joaat("CLO_GRM_B_1_3"):
		case joaat("CLO_GRM_B_1_4"):
		case joaat("CLO_GRM_B_1_5"):
		case joaat("CLO_GRM_B_1_6"):
		case joaat("CLO_GRM_B_1_7"):
		case joaat("CLO_GRM_B_1_8"):
		case joaat("CLO_GRM_B_1_9"):
		case joaat("CLO_GRM_B_1_10"):
		case joaat("CLO_GRM_B_1_11"):
		case joaat("CLO_GRM_B_1_12"):
		case joaat("CLO_GRM_B_1_13"):
		case joaat("CLO_GRM_B_1_14"):
		case joaat("CLO_GRM_B_1_15"):
		case joaat("CLO_GRM_B_1_16"):
		case joaat("CLO_GRM_B_1_17"):
		case joaat("CLO_GRM_B_1_18"):
		case joaat("CLO_GRM_B_1_19"):
		case joaat("CLO_GRM_B_1_24"):
		case joaat("CLO_GRM_B_1_25"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_2_0"):
		case joaat("CLO_GRM_B_2_1"):
		case joaat("CLO_GRM_B_2_2"):
		case joaat("CLO_GRM_B_2_3"):
		case joaat("CLO_GRM_B_2_4"):
		case joaat("CLO_GRM_B_2_5"):
		case joaat("CLO_GRM_B_2_6"):
		case joaat("CLO_GRM_B_2_7"):
		case joaat("CLO_GRM_B_2_8"):
		case joaat("CLO_GRM_B_2_9"):
		case joaat("CLO_GRM_B_2_10"):
		case joaat("CLO_GRM_B_2_11"):
		case joaat("CLO_GRM_B_2_12"):
		case joaat("CLO_GRM_B_2_13"):
		case joaat("CLO_GRM_B_2_14"):
		case joaat("CLO_GRM_B_2_15"):
		case joaat("CLO_GRM_B_2_16"):
		case joaat("CLO_GRM_B_2_17"):
		case joaat("CLO_GRM_B_2_18"):
		case joaat("CLO_GRM_B_2_19"):
		case joaat("CLO_GRM_B_2_20"):
		case joaat("CLO_GRM_B_2_21"):
		case joaat("CLO_GRM_B_2_22"):
		case joaat("CLO_GRM_B_2_23"):
			return 9;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_3_0"):
		case joaat("CLO_GRM_B_3_1"):
		case joaat("CLO_GRM_B_3_2"):
		case joaat("CLO_GRM_B_3_3"):
		case joaat("CLO_GRM_B_3_4"):
		case joaat("CLO_GRM_B_3_5"):
		case joaat("CLO_GRM_B_3_6"):
		case joaat("CLO_GRM_B_3_7"):
		case joaat("CLO_GRM_B_3_8"):
		case joaat("CLO_GRM_B_3_9"):
		case joaat("CLO_GRM_B_3_10"):
		case joaat("CLO_GRM_B_3_11"):
		case joaat("CLO_GRM_B_3_12"):
		case joaat("CLO_GRM_B_3_13"):
		case joaat("CLO_GRM_B_3_14"):
		case joaat("CLO_GRM_B_3_15"):
		case joaat("CLO_GRM_B_3_16"):
		case joaat("CLO_GRM_B_3_17"):
		case joaat("CLO_GRM_B_3_18"):
		case joaat("CLO_GRM_B_3_19"):
		case joaat("CLO_GRM_B_3_24"):
		case joaat("CLO_GRM_B_3_25"):
			return 21;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_4_0"):
		case joaat("CLO_GRM_B_4_1"):
		case joaat("CLO_GRM_B_4_2"):
		case joaat("CLO_GRM_B_4_3"):
		case joaat("CLO_GRM_B_4_4"):
		case joaat("CLO_GRM_B_4_5"):
		case joaat("CLO_GRM_B_4_6"):
		case joaat("CLO_GRM_B_4_7"):
		case joaat("CLO_GRM_B_4_8"):
		case joaat("CLO_GRM_B_4_9"):
		case joaat("CLO_GRM_B_4_10"):
		case joaat("CLO_GRM_B_4_11"):
		case joaat("CLO_GRM_B_4_12"):
		case joaat("CLO_GRM_B_4_13"):
		case joaat("CLO_GRM_B_4_14"):
		case joaat("CLO_GRM_B_4_15"):
		case joaat("CLO_GRM_B_4_16"):
		case joaat("CLO_GRM_B_4_17"):
		case joaat("CLO_GRM_B_4_18"):
		case joaat("CLO_GRM_B_4_19"):
			return 3;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRM_B_5_0"):
		case joaat("CLO_GRM_B_5_1"):
		case joaat("CLO_GRM_B_5_2"):
		case joaat("CLO_GRM_B_5_3"):
		case joaat("CLO_GRM_B_5_4"):
		case joaat("CLO_GRM_B_5_5"):
		case joaat("CLO_GRM_B_5_6"):
		case joaat("CLO_GRM_B_5_7"):
		case joaat("CLO_GRM_B_5_8"):
		case joaat("CLO_GRM_B_5_9"):
		case joaat("CLO_GRM_B_5_10"):
		case joaat("CLO_GRM_B_5_11"):
		case joaat("CLO_GRM_B_5_12"):
		case joaat("CLO_GRM_B_5_13"):
		case joaat("CLO_GRM_B_5_14"):
		case joaat("CLO_GRM_B_5_15"):
		case joaat("CLO_GRM_B_5_16"):
		case joaat("CLO_GRM_B_5_17"):
		case joaat("CLO_GRM_B_5_18"):
		case joaat("CLO_GRM_B_5_19"):
		case joaat("CLO_GRM_B_5_20"):
		case joaat("CLO_GRM_B_5_21"):
		case joaat("CLO_GRM_B_5_22"):
		case joaat("CLO_GRM_B_5_23"):
			return 17;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_0_0"):
		case joaat("CLO_GRF_B_0_1"):
		case joaat("CLO_GRF_B_0_2"):
		case joaat("CLO_GRF_B_0_3"):
		case joaat("CLO_GRF_B_0_4"):
		case joaat("CLO_GRF_B_0_5"):
		case joaat("CLO_GRF_B_0_6"):
		case joaat("CLO_GRF_B_0_7"):
		case joaat("CLO_GRF_B_0_8"):
		case joaat("CLO_GRF_B_0_9"):
		case joaat("CLO_GRF_B_0_10"):
		case joaat("CLO_GRF_B_0_11"):
		case joaat("CLO_GRF_B_0_12"):
		case joaat("CLO_GRF_B_0_13"):
		case joaat("CLO_GRF_B_0_14"):
		case joaat("CLO_GRF_B_0_15"):
		case joaat("CLO_GRF_B_0_16"):
		case joaat("CLO_GRF_B_0_17"):
		case joaat("CLO_GRF_B_0_18"):
		case joaat("CLO_GRF_B_0_19"):
		case joaat("CLO_GRF_B_0_20"):
		case joaat("CLO_GRF_B_0_21"):
		case joaat("CLO_GRF_B_0_22"):
		case joaat("CLO_GRF_B_0_23"):
		case joaat("CLO_GRF_B_0_24"):
		case joaat("CLO_GRF_B_0_25"):
			return 24;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_1_0"):
		case joaat("CLO_GRF_B_1_1"):
		case joaat("CLO_GRF_B_1_2"):
		case joaat("CLO_GRF_B_1_3"):
		case joaat("CLO_GRF_B_1_4"):
		case joaat("CLO_GRF_B_1_5"):
		case joaat("CLO_GRF_B_1_6"):
		case joaat("CLO_GRF_B_1_7"):
		case joaat("CLO_GRF_B_1_8"):
		case joaat("CLO_GRF_B_1_9"):
		case joaat("CLO_GRF_B_1_10"):
		case joaat("CLO_GRF_B_1_11"):
		case joaat("CLO_GRF_B_1_12"):
		case joaat("CLO_GRF_B_1_13"):
		case joaat("CLO_GRF_B_1_14"):
		case joaat("CLO_GRF_B_1_15"):
		case joaat("CLO_GRF_B_1_16"):
		case joaat("CLO_GRF_B_1_17"):
		case joaat("CLO_GRF_B_1_18"):
		case joaat("CLO_GRF_B_1_19"):
		case joaat("CLO_GRF_B_1_24"):
		case joaat("CLO_GRF_B_1_25"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_2_0"):
		case joaat("CLO_GRF_B_2_1"):
		case joaat("CLO_GRF_B_2_2"):
		case joaat("CLO_GRF_B_2_3"):
		case joaat("CLO_GRF_B_2_4"):
		case joaat("CLO_GRF_B_2_5"):
		case joaat("CLO_GRF_B_2_6"):
		case joaat("CLO_GRF_B_2_7"):
		case joaat("CLO_GRF_B_2_8"):
		case joaat("CLO_GRF_B_2_9"):
		case joaat("CLO_GRF_B_2_10"):
		case joaat("CLO_GRF_B_2_11"):
		case joaat("CLO_GRF_B_2_12"):
		case joaat("CLO_GRF_B_2_13"):
		case joaat("CLO_GRF_B_2_14"):
		case joaat("CLO_GRF_B_2_15"):
		case joaat("CLO_GRF_B_2_16"):
		case joaat("CLO_GRF_B_2_17"):
		case joaat("CLO_GRF_B_2_18"):
		case joaat("CLO_GRF_B_2_19"):
		case joaat("CLO_GRF_B_2_20"):
		case joaat("CLO_GRF_B_2_21"):
		case joaat("CLO_GRF_B_2_22"):
		case joaat("CLO_GRF_B_2_23"):
			return 9;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_3_0"):
		case joaat("CLO_GRF_B_3_1"):
		case joaat("CLO_GRF_B_3_2"):
		case joaat("CLO_GRF_B_3_3"):
		case joaat("CLO_GRF_B_3_4"):
		case joaat("CLO_GRF_B_3_5"):
		case joaat("CLO_GRF_B_3_6"):
		case joaat("CLO_GRF_B_3_7"):
		case joaat("CLO_GRF_B_3_8"):
		case joaat("CLO_GRF_B_3_9"):
		case joaat("CLO_GRF_B_3_10"):
		case joaat("CLO_GRF_B_3_11"):
		case joaat("CLO_GRF_B_3_12"):
		case joaat("CLO_GRF_B_3_13"):
		case joaat("CLO_GRF_B_3_14"):
		case joaat("CLO_GRF_B_3_15"):
		case joaat("CLO_GRF_B_3_16"):
		case joaat("CLO_GRF_B_3_17"):
		case joaat("CLO_GRF_B_3_18"):
		case joaat("CLO_GRF_B_3_19"):
		case joaat("CLO_GRF_B_3_24"):
		case joaat("CLO_GRF_B_3_25"):
			return 21;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_4_0"):
		case joaat("CLO_GRF_B_4_1"):
		case joaat("CLO_GRF_B_4_2"):
		case joaat("CLO_GRF_B_4_3"):
		case joaat("CLO_GRF_B_4_4"):
		case joaat("CLO_GRF_B_4_5"):
		case joaat("CLO_GRF_B_4_6"):
		case joaat("CLO_GRF_B_4_7"):
		case joaat("CLO_GRF_B_4_8"):
		case joaat("CLO_GRF_B_4_9"):
		case joaat("CLO_GRF_B_4_10"):
		case joaat("CLO_GRF_B_4_11"):
		case joaat("CLO_GRF_B_4_12"):
		case joaat("CLO_GRF_B_4_13"):
		case joaat("CLO_GRF_B_4_14"):
		case joaat("CLO_GRF_B_4_15"):
		case joaat("CLO_GRF_B_4_16"):
		case joaat("CLO_GRF_B_4_17"):
		case joaat("CLO_GRF_B_4_18"):
		case joaat("CLO_GRF_B_4_19"):
			return 3;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_GRF_B_5_0"):
		case joaat("CLO_GRF_B_5_1"):
		case joaat("CLO_GRF_B_5_2"):
		case joaat("CLO_GRF_B_5_3"):
		case joaat("CLO_GRF_B_5_4"):
		case joaat("CLO_GRF_B_5_5"):
		case joaat("CLO_GRF_B_5_6"):
		case joaat("CLO_GRF_B_5_7"):
		case joaat("CLO_GRF_B_5_8"):
		case joaat("CLO_GRF_B_5_9"):
		case joaat("CLO_GRF_B_5_10"):
		case joaat("CLO_GRF_B_5_11"):
		case joaat("CLO_GRF_B_5_12"):
		case joaat("CLO_GRF_B_5_13"):
		case joaat("CLO_GRF_B_5_14"):
		case joaat("CLO_GRF_B_5_15"):
		case joaat("CLO_GRF_B_5_16"):
		case joaat("CLO_GRF_B_5_17"):
		case joaat("CLO_GRF_B_5_18"):
		case joaat("CLO_GRF_B_5_19"):
		case joaat("CLO_GRF_B_5_20"):
		case joaat("CLO_GRF_B_5_21"):
		case joaat("CLO_GRF_B_5_22"):
		case joaat("CLO_GRF_B_5_23"):
			return 17;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_0_0"):
		case joaat("CLO_SMM_B_0_1"):
		case joaat("CLO_SMM_B_0_2"):
		case joaat("CLO_SMM_B_0_3"):
		case joaat("CLO_SMM_B_0_4"):
		case joaat("CLO_SMM_B_0_5"):
		case joaat("CLO_SMM_B_0_6"):
		case joaat("CLO_SMM_B_0_7"):
		case joaat("CLO_SMM_B_0_8"):
		case joaat("CLO_SMM_B_0_9"):
		case joaat("CLO_SMM_B_0_10"):
		case joaat("CLO_SMM_B_0_11"):
		case joaat("CLO_SMM_B_0_12"):
		case joaat("CLO_SMM_B_0_13"):
		case joaat("CLO_SMM_B_0_14"):
		case joaat("CLO_SMM_B_0_15"):
		case joaat("CLO_SMM_B_0_16"):
		case joaat("CLO_SMM_B_0_17"):
		case joaat("CLO_SMM_B_0_18"):
		case joaat("CLO_SMM_B_0_19"):
		case joaat("CLO_SMM_B_0_20"):
		case joaat("CLO_SMM_B_0_21"):
		case joaat("CLO_SMF_B_0_0"):
		case joaat("CLO_SMF_B_0_1"):
		case joaat("CLO_SMF_B_0_2"):
		case joaat("CLO_SMF_B_0_3"):
		case joaat("CLO_SMF_B_0_4"):
		case joaat("CLO_SMF_B_0_5"):
		case joaat("CLO_SMF_B_0_6"):
		case joaat("CLO_SMF_B_0_7"):
		case joaat("CLO_SMF_B_0_8"):
		case joaat("CLO_SMF_B_0_9"):
		case joaat("CLO_SMF_B_0_10"):
		case joaat("CLO_SMF_B_0_11"):
		case joaat("CLO_SMF_B_0_12"):
		case joaat("CLO_SMF_B_0_13"):
		case joaat("CLO_SMF_B_0_14"):
		case joaat("CLO_SMF_B_0_15"):
		case joaat("CLO_SMF_B_0_16"):
		case joaat("CLO_SMF_B_0_17"):
		case joaat("CLO_SMF_B_0_18"):
		case joaat("CLO_SMF_B_0_19"):
		case joaat("CLO_SMF_B_0_20"):
		case joaat("CLO_SMF_B_0_21"):
			return 16;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_1_4"):
		case joaat("CLO_SMM_B_1_5"):
		case joaat("CLO_SMM_B_1_6"):
		case joaat("CLO_SMM_B_1_7"):
		case joaat("CLO_SMM_B_1_8"):
		case joaat("CLO_SMM_B_1_9"):
		case joaat("CLO_SMM_B_1_10"):
		case joaat("CLO_SMM_B_1_11"):
		case joaat("CLO_SMM_B_1_12"):
		case joaat("CLO_SMM_B_1_13"):
		case joaat("CLO_SMM_B_1_14"):
		case joaat("CLO_SMM_B_1_15"):
		case joaat("CLO_SMM_B_1_16"):
		case joaat("CLO_SMM_B_1_17"):
		case joaat("CLO_SMM_B_1_18"):
		case joaat("CLO_SMM_B_1_19"):
		case joaat("CLO_SMM_B_1_20"):
		case joaat("CLO_SMM_B_1_21"):
		case joaat("CLO_SMM_B_1_22"):
		case joaat("CLO_SMM_B_1_23"):
		case joaat("CLO_SMM_B_1_24"):
		case joaat("CLO_SMM_B_1_25"):
		case joaat("CLO_SMF_B_1_4"):
		case joaat("CLO_SMF_B_1_5"):
		case joaat("CLO_SMF_B_1_6"):
		case joaat("CLO_SMF_B_1_7"):
		case joaat("CLO_SMF_B_1_8"):
		case joaat("CLO_SMF_B_1_9"):
		case joaat("CLO_SMF_B_1_10"):
		case joaat("CLO_SMF_B_1_11"):
		case joaat("CLO_SMF_B_1_12"):
		case joaat("CLO_SMF_B_1_13"):
		case joaat("CLO_SMF_B_1_14"):
		case joaat("CLO_SMF_B_1_15"):
		case joaat("CLO_SMF_B_1_16"):
		case joaat("CLO_SMF_B_1_17"):
		case joaat("CLO_SMF_B_1_18"):
		case joaat("CLO_SMF_B_1_19"):
		case joaat("CLO_SMF_B_1_20"):
		case joaat("CLO_SMF_B_1_21"):
		case joaat("CLO_SMF_B_1_22"):
		case joaat("CLO_SMF_B_1_23"):
		case joaat("CLO_SMF_B_1_24"):
		case joaat("CLO_SMF_B_1_25"):
			return 8;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_2_0"):
		case joaat("CLO_SMM_B_2_1"):
		case joaat("CLO_SMM_B_2_2"):
		case joaat("CLO_SMM_B_2_3"):
		case joaat("CLO_SMM_B_2_4"):
		case joaat("CLO_SMM_B_2_5"):
		case joaat("CLO_SMM_B_2_6"):
		case joaat("CLO_SMM_B_2_7"):
		case joaat("CLO_SMM_B_2_8"):
		case joaat("CLO_SMM_B_2_9"):
		case joaat("CLO_SMM_B_2_10"):
		case joaat("CLO_SMM_B_2_11"):
		case joaat("CLO_SMM_B_2_12"):
		case joaat("CLO_SMM_B_2_13"):
		case joaat("CLO_SMM_B_2_14"):
		case joaat("CLO_SMM_B_2_15"):
		case joaat("CLO_SMM_B_2_16"):
		case joaat("CLO_SMM_B_2_17"):
		case joaat("CLO_SMM_B_2_18"):
		case joaat("CLO_SMM_B_2_19"):
		case joaat("CLO_SMM_B_2_20"):
		case joaat("CLO_SMM_B_2_21"):
		case joaat("CLO_SMF_B_2_0"):
		case joaat("CLO_SMF_B_2_1"):
		case joaat("CLO_SMF_B_2_2"):
		case joaat("CLO_SMF_B_2_3"):
		case joaat("CLO_SMF_B_2_4"):
		case joaat("CLO_SMF_B_2_5"):
		case joaat("CLO_SMF_B_2_6"):
		case joaat("CLO_SMF_B_2_7"):
		case joaat("CLO_SMF_B_2_8"):
		case joaat("CLO_SMF_B_2_9"):
		case joaat("CLO_SMF_B_2_10"):
		case joaat("CLO_SMF_B_2_11"):
		case joaat("CLO_SMF_B_2_12"):
		case joaat("CLO_SMF_B_2_13"):
		case joaat("CLO_SMF_B_2_14"):
		case joaat("CLO_SMF_B_2_15"):
		case joaat("CLO_SMF_B_2_16"):
		case joaat("CLO_SMF_B_2_17"):
		case joaat("CLO_SMF_B_2_18"):
		case joaat("CLO_SMF_B_2_19"):
		case joaat("CLO_SMF_B_2_20"):
		case joaat("CLO_SMF_B_2_21"):
			return 16;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_3_0"):
		case joaat("CLO_SMM_B_3_1"):
		case joaat("CLO_SMM_B_3_2"):
		case joaat("CLO_SMM_B_3_3"):
		case joaat("CLO_SMM_B_3_4"):
		case joaat("CLO_SMM_B_3_5"):
		case joaat("CLO_SMM_B_3_6"):
		case joaat("CLO_SMM_B_3_7"):
		case joaat("CLO_SMM_B_3_8"):
		case joaat("CLO_SMM_B_3_9"):
		case joaat("CLO_SMM_B_3_10"):
		case joaat("CLO_SMM_B_3_11"):
		case joaat("CLO_SMM_B_3_12"):
		case joaat("CLO_SMM_B_3_17"):
		case joaat("CLO_SMM_B_3_18"):
		case joaat("CLO_SMM_B_3_19"):
		case joaat("CLO_SMM_B_3_20"):
		case joaat("CLO_SMM_B_3_21"):
		case joaat("CLO_SMF_B_3_0"):
		case joaat("CLO_SMF_B_3_1"):
		case joaat("CLO_SMF_B_3_2"):
		case joaat("CLO_SMF_B_3_3"):
		case joaat("CLO_SMF_B_3_4"):
		case joaat("CLO_SMF_B_3_5"):
		case joaat("CLO_SMF_B_3_6"):
		case joaat("CLO_SMF_B_3_7"):
		case joaat("CLO_SMF_B_3_8"):
		case joaat("CLO_SMF_B_3_9"):
		case joaat("CLO_SMF_B_3_10"):
		case joaat("CLO_SMF_B_3_11"):
		case joaat("CLO_SMF_B_3_12"):
		case joaat("CLO_SMF_B_3_17"):
		case joaat("CLO_SMF_B_3_18"):
		case joaat("CLO_SMF_B_3_19"):
		case joaat("CLO_SMF_B_3_20"):
		case joaat("CLO_SMF_B_3_21"):
			return 19;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_4_0"):
		case joaat("CLO_SMM_B_4_1"):
		case joaat("CLO_SMM_B_4_2"):
		case joaat("CLO_SMM_B_4_3"):
		case joaat("CLO_SMM_B_4_4"):
		case joaat("CLO_SMM_B_4_5"):
		case joaat("CLO_SMM_B_4_6"):
		case joaat("CLO_SMM_B_4_7"):
		case joaat("CLO_SMM_B_4_8"):
		case joaat("CLO_SMM_B_4_9"):
		case joaat("CLO_SMM_B_4_10"):
		case joaat("CLO_SMM_B_4_11"):
		case joaat("CLO_SMM_B_4_12"):
		case joaat("CLO_SMM_B_4_13"):
		case joaat("CLO_SMM_B_4_14"):
		case joaat("CLO_SMM_B_4_15"):
		case joaat("CLO_SMM_B_4_16"):
		case joaat("CLO_SMM_B_4_17"):
		case joaat("CLO_SMM_B_4_18"):
		case joaat("CLO_SMM_B_4_19"):
		case joaat("CLO_SMM_B_4_20"):
		case joaat("CLO_SMM_B_4_21"):
		case joaat("CLO_SMF_B_4_0"):
		case joaat("CLO_SMF_B_4_1"):
		case joaat("CLO_SMF_B_4_2"):
		case joaat("CLO_SMF_B_4_3"):
		case joaat("CLO_SMF_B_4_4"):
		case joaat("CLO_SMF_B_4_5"):
		case joaat("CLO_SMF_B_4_6"):
		case joaat("CLO_SMF_B_4_7"):
		case joaat("CLO_SMF_B_4_8"):
		case joaat("CLO_SMF_B_4_9"):
		case joaat("CLO_SMF_B_4_10"):
		case joaat("CLO_SMF_B_4_11"):
		case joaat("CLO_SMF_B_4_12"):
		case joaat("CLO_SMF_B_4_13"):
		case joaat("CLO_SMF_B_4_14"):
		case joaat("CLO_SMF_B_4_15"):
		case joaat("CLO_SMF_B_4_16"):
		case joaat("CLO_SMF_B_4_17"):
		case joaat("CLO_SMF_B_4_18"):
		case joaat("CLO_SMF_B_4_19"):
		case joaat("CLO_SMF_B_4_20"):
		case joaat("CLO_SMF_B_4_21"):
			return 14;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_5_0"):
		case joaat("CLO_SMM_B_5_1"):
		case joaat("CLO_SMM_B_5_2"):
		case joaat("CLO_SMM_B_5_3"):
		case joaat("CLO_SMM_B_5_4"):
		case joaat("CLO_SMM_B_5_5"):
		case joaat("CLO_SMM_B_5_6"):
		case joaat("CLO_SMM_B_5_7"):
		case joaat("CLO_SMM_B_5_8"):
		case joaat("CLO_SMM_B_5_9"):
		case joaat("CLO_SMM_B_5_10"):
		case joaat("CLO_SMM_B_5_11"):
		case joaat("CLO_SMM_B_5_12"):
		case joaat("CLO_SMM_B_5_13"):
		case joaat("CLO_SMM_B_5_14"):
		case joaat("CLO_SMM_B_5_15"):
		case joaat("CLO_SMM_B_5_16"):
		case joaat("CLO_SMM_B_5_17"):
		case joaat("CLO_SMM_B_5_18"):
		case joaat("CLO_SMM_B_5_19"):
		case joaat("CLO_SMM_B_5_20"):
		case joaat("CLO_SMM_B_5_21"):
		case joaat("CLO_SMF_B_5_0"):
		case joaat("CLO_SMF_B_5_1"):
		case joaat("CLO_SMF_B_5_2"):
		case joaat("CLO_SMF_B_5_3"):
		case joaat("CLO_SMF_B_5_4"):
		case joaat("CLO_SMF_B_5_5"):
		case joaat("CLO_SMF_B_5_6"):
		case joaat("CLO_SMF_B_5_7"):
		case joaat("CLO_SMF_B_5_8"):
		case joaat("CLO_SMF_B_5_9"):
		case joaat("CLO_SMF_B_5_10"):
		case joaat("CLO_SMF_B_5_11"):
		case joaat("CLO_SMF_B_5_12"):
		case joaat("CLO_SMF_B_5_13"):
		case joaat("CLO_SMF_B_5_14"):
		case joaat("CLO_SMF_B_5_15"):
		case joaat("CLO_SMF_B_5_16"):
		case joaat("CLO_SMF_B_5_17"):
		case joaat("CLO_SMF_B_5_18"):
		case joaat("CLO_SMF_B_5_19"):
		case joaat("CLO_SMF_B_5_20"):
		case joaat("CLO_SMF_B_5_21"):
			return 14;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_6_0"):
		case joaat("CLO_SMM_B_6_1"):
		case joaat("CLO_SMM_B_6_2"):
		case joaat("CLO_SMM_B_6_3"):
		case joaat("CLO_SMM_B_6_4"):
		case joaat("CLO_SMM_B_6_5"):
		case joaat("CLO_SMM_B_6_6"):
		case joaat("CLO_SMM_B_6_7"):
		case joaat("CLO_SMM_B_6_8"):
		case joaat("CLO_SMM_B_6_9"):
		case joaat("CLO_SMM_B_6_10"):
		case joaat("CLO_SMM_B_6_11"):
		case joaat("CLO_SMM_B_6_12"):
		case joaat("CLO_SMM_B_6_13"):
		case joaat("CLO_SMM_B_6_14"):
		case joaat("CLO_SMM_B_6_15"):
		case joaat("CLO_SMM_B_6_16"):
		case joaat("CLO_SMM_B_6_17"):
		case joaat("CLO_SMM_B_6_18"):
		case joaat("CLO_SMM_B_6_19"):
		case joaat("CLO_SMM_B_6_20"):
		case joaat("CLO_SMM_B_6_21"):
		case joaat("CLO_SMF_B_6_0"):
		case joaat("CLO_SMF_B_6_1"):
		case joaat("CLO_SMF_B_6_2"):
		case joaat("CLO_SMF_B_6_3"):
		case joaat("CLO_SMF_B_6_4"):
		case joaat("CLO_SMF_B_6_5"):
		case joaat("CLO_SMF_B_6_6"):
		case joaat("CLO_SMF_B_6_7"):
		case joaat("CLO_SMF_B_6_8"):
		case joaat("CLO_SMF_B_6_9"):
		case joaat("CLO_SMF_B_6_10"):
		case joaat("CLO_SMF_B_6_11"):
		case joaat("CLO_SMF_B_6_12"):
		case joaat("CLO_SMF_B_6_13"):
		case joaat("CLO_SMF_B_6_14"):
		case joaat("CLO_SMF_B_6_15"):
		case joaat("CLO_SMF_B_6_16"):
		case joaat("CLO_SMF_B_6_17"):
		case joaat("CLO_SMF_B_6_18"):
		case joaat("CLO_SMF_B_6_19"):
		case joaat("CLO_SMF_B_6_20"):
		case joaat("CLO_SMF_B_6_21"):
			return 14;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_7_0"):
		case joaat("CLO_SMM_B_7_1"):
		case joaat("CLO_SMM_B_7_2"):
		case joaat("CLO_SMM_B_7_3"):
		case joaat("CLO_SMM_B_7_4"):
		case joaat("CLO_SMM_B_7_5"):
		case joaat("CLO_SMM_B_7_6"):
		case joaat("CLO_SMM_B_7_7"):
		case joaat("CLO_SMM_B_7_8"):
		case joaat("CLO_SMM_B_7_9"):
		case joaat("CLO_SMM_B_7_10"):
		case joaat("CLO_SMM_B_7_11"):
		case joaat("CLO_SMM_B_7_12"):
		case joaat("CLO_SMM_B_7_13"):
		case joaat("CLO_SMM_B_7_14"):
		case joaat("CLO_SMM_B_7_15"):
		case joaat("CLO_SMM_B_7_16"):
		case joaat("CLO_SMM_B_7_17"):
		case joaat("CLO_SMM_B_7_18"):
		case joaat("CLO_SMM_B_7_19"):
		case joaat("CLO_SMM_B_7_20"):
		case joaat("CLO_SMF_B_7_0"):
		case joaat("CLO_SMF_B_7_1"):
		case joaat("CLO_SMF_B_7_2"):
		case joaat("CLO_SMF_B_7_3"):
		case joaat("CLO_SMF_B_7_4"):
		case joaat("CLO_SMF_B_7_5"):
		case joaat("CLO_SMF_B_7_6"):
		case joaat("CLO_SMF_B_7_7"):
		case joaat("CLO_SMF_B_7_8"):
		case joaat("CLO_SMF_B_7_9"):
		case joaat("CLO_SMF_B_7_10"):
		case joaat("CLO_SMF_B_7_11"):
		case joaat("CLO_SMF_B_7_12"):
		case joaat("CLO_SMF_B_7_13"):
		case joaat("CLO_SMF_B_7_14"):
		case joaat("CLO_SMF_B_7_15"):
		case joaat("CLO_SMF_B_7_16"):
		case joaat("CLO_SMF_B_7_17"):
		case joaat("CLO_SMF_B_7_18"):
		case joaat("CLO_SMF_B_7_19"):
		case joaat("CLO_SMF_B_7_20"):
			return 2;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_8_4"):
		case joaat("CLO_SMM_B_8_5"):
		case joaat("CLO_SMM_B_8_6"):
		case joaat("CLO_SMM_B_8_7"):
		case joaat("CLO_SMM_B_8_8"):
		case joaat("CLO_SMM_B_8_9"):
		case joaat("CLO_SMM_B_8_10"):
		case joaat("CLO_SMM_B_8_11"):
		case joaat("CLO_SMM_B_8_12"):
		case joaat("CLO_SMM_B_8_13"):
		case joaat("CLO_SMM_B_8_14"):
		case joaat("CLO_SMM_B_8_15"):
		case joaat("CLO_SMM_B_8_16"):
		case joaat("CLO_SMM_B_8_17"):
		case joaat("CLO_SMM_B_8_18"):
		case joaat("CLO_SMM_B_8_19"):
		case joaat("CLO_SMM_B_8_20"):
		case joaat("CLO_SMM_B_8_21"):
		case joaat("CLO_SMM_B_8_22"):
		case joaat("CLO_SMM_B_8_23"):
		case joaat("CLO_SMM_B_8_24"):
		case joaat("CLO_SMM_B_8_25"):
		case joaat("CLO_SMF_B_8_4"):
		case joaat("CLO_SMF_B_8_5"):
		case joaat("CLO_SMF_B_8_6"):
		case joaat("CLO_SMF_B_8_7"):
		case joaat("CLO_SMF_B_8_8"):
		case joaat("CLO_SMF_B_8_9"):
		case joaat("CLO_SMF_B_8_10"):
		case joaat("CLO_SMF_B_8_11"):
		case joaat("CLO_SMF_B_8_12"):
		case joaat("CLO_SMF_B_8_13"):
		case joaat("CLO_SMF_B_8_14"):
		case joaat("CLO_SMF_B_8_15"):
		case joaat("CLO_SMF_B_8_16"):
		case joaat("CLO_SMF_B_8_17"):
		case joaat("CLO_SMF_B_8_18"):
		case joaat("CLO_SMF_B_8_19"):
		case joaat("CLO_SMF_B_8_20"):
		case joaat("CLO_SMF_B_8_21"):
		case joaat("CLO_SMF_B_8_22"):
		case joaat("CLO_SMF_B_8_23"):
		case joaat("CLO_SMF_B_8_24"):
		case joaat("CLO_SMF_B_8_25"):
			return 8;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SMM_B_9_0"):
		case joaat("CLO_SMM_B_9_1"):
		case joaat("CLO_SMM_B_9_2"):
		case joaat("CLO_SMM_B_9_3"):
		case joaat("CLO_SMM_B_9_4"):
		case joaat("CLO_SMM_B_9_5"):
		case joaat("CLO_SMM_B_9_6"):
		case joaat("CLO_SMM_B_9_11"):
		case joaat("CLO_SMM_B_9_12"):
		case joaat("CLO_SMM_B_9_13"):
		case joaat("CLO_SMM_B_9_14"):
		case joaat("CLO_SMM_B_9_15"):
		case joaat("CLO_SMM_B_9_16"):
		case joaat("CLO_SMM_B_9_17"):
		case joaat("CLO_SMM_B_9_18"):
		case joaat("CLO_SMM_B_9_19"):
		case joaat("CLO_SMM_B_9_20"):
		case joaat("CLO_SMM_B_9_21"):
		case joaat("CLO_SMM_B_9_22"):
		case joaat("CLO_SMM_B_9_23"):
		case joaat("CLO_SMM_B_9_24"):
		case joaat("CLO_SMF_B_9_0"):
		case joaat("CLO_SMF_B_9_1"):
		case joaat("CLO_SMF_B_9_2"):
		case joaat("CLO_SMF_B_9_3"):
		case joaat("CLO_SMF_B_9_4"):
		case joaat("CLO_SMF_B_9_5"):
		case joaat("CLO_SMF_B_9_6"):
		case joaat("CLO_SMF_B_9_11"):
		case joaat("CLO_SMF_B_9_12"):
		case joaat("CLO_SMF_B_9_13"):
		case joaat("CLO_SMF_B_9_14"):
		case joaat("CLO_SMF_B_9_15"):
		case joaat("CLO_SMF_B_9_16"):
		case joaat("CLO_SMF_B_9_17"):
		case joaat("CLO_SMF_B_9_18"):
		case joaat("CLO_SMF_B_9_19"):
		case joaat("CLO_SMF_B_9_20"):
		case joaat("CLO_SMF_B_9_21"):
		case joaat("CLO_SMF_B_9_22"):
		case joaat("CLO_SMF_B_9_23"):
		case joaat("CLO_SMF_B_9_24"):
			return 2;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_3_0"):
		case joaat("CLO_H2M_B_3_1"):
		case joaat("CLO_H2M_B_3_2"):
		case joaat("CLO_H2M_B_3_3"):
		case joaat("CLO_H2M_B_3_4"):
		case joaat("CLO_H2M_B_3_5"):
		case joaat("CLO_H2M_B_3_6"):
		case joaat("CLO_H2M_B_3_7"):
		case joaat("CLO_H2M_B_3_8"):
		case joaat("CLO_H2M_B_3_9"):
		case joaat("CLO_H2M_B_3_10"):
		case joaat("CLO_H2M_B_3_11"):
		case joaat("CLO_H2M_B_3_12"):
		case joaat("CLO_H2M_B_3_13"):
		case joaat("CLO_H2M_B_3_14"):
		case joaat("CLO_H2M_B_3_15"):
		case joaat("CLO_H2M_B_3_16"):
		case joaat("CLO_H2M_B_3_17"):
		case joaat("CLO_H2M_B_3_18"):
		case joaat("CLO_H2M_B_3_19"):
		case joaat("CLO_H2M_B_3_20"):
		case joaat("CLO_H2M_B_3_21"):
		case joaat("CLO_H2M_B_3_22"):
		case joaat("CLO_H2M_B_3_23"):
		case joaat("CLO_H2F_B_3_0"):
		case joaat("CLO_H2F_B_3_1"):
		case joaat("CLO_H2F_B_3_2"):
		case joaat("CLO_H2F_B_3_3"):
		case joaat("CLO_H2F_B_3_4"):
		case joaat("CLO_H2F_B_3_5"):
		case joaat("CLO_H2F_B_3_6"):
		case joaat("CLO_H2F_B_3_7"):
		case joaat("CLO_H2F_B_3_8"):
		case joaat("CLO_H2F_B_3_9"):
		case joaat("CLO_H2F_B_3_10"):
		case joaat("CLO_H2F_B_3_11"):
		case joaat("CLO_H2F_B_3_12"):
		case joaat("CLO_H2F_B_3_13"):
		case joaat("CLO_H2F_B_3_14"):
		case joaat("CLO_H2F_B_3_15"):
		case joaat("CLO_H2F_B_3_16"):
		case joaat("CLO_H2F_B_3_17"):
		case joaat("CLO_H2F_B_3_18"):
		case joaat("CLO_H2F_B_3_19"):
		case joaat("CLO_H2F_B_3_20"):
		case joaat("CLO_H2F_B_3_21"):
		case joaat("CLO_H2F_B_3_22"):
		case joaat("CLO_H2F_B_3_23"):
			return 9;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_4_0"):
		case joaat("CLO_H2M_B_4_1"):
		case joaat("CLO_H2M_B_4_2"):
		case joaat("CLO_H2M_B_4_3"):
		case joaat("CLO_H2M_B_4_8"):
		case joaat("CLO_H2M_B_4_9"):
		case joaat("CLO_H2M_B_4_10"):
		case joaat("CLO_H2M_B_4_11"):
		case joaat("CLO_H2M_B_4_12"):
		case joaat("CLO_H2M_B_4_13"):
		case joaat("CLO_H2M_B_4_14"):
		case joaat("CLO_H2M_B_4_15"):
		case joaat("CLO_H2M_B_4_16"):
		case joaat("CLO_H2M_B_4_17"):
		case joaat("CLO_H2M_B_4_18"):
		case joaat("CLO_H2M_B_4_19"):
		case joaat("CLO_H2M_B_4_20"):
		case joaat("CLO_H2M_B_4_21"):
		case joaat("CLO_H2M_B_4_22"):
		case joaat("CLO_H2M_B_4_23"):
		case joaat("CLO_H2M_B_4_24"):
		case joaat("CLO_H2M_B_4_25"):
		case joaat("CLO_H2F_B_4_0"):
		case joaat("CLO_H2F_B_4_1"):
		case joaat("CLO_H2F_B_4_2"):
		case joaat("CLO_H2F_B_4_3"):
		case joaat("CLO_H2F_B_4_8"):
		case joaat("CLO_H2F_B_4_9"):
		case joaat("CLO_H2F_B_4_10"):
		case joaat("CLO_H2F_B_4_11"):
		case joaat("CLO_H2F_B_4_12"):
		case joaat("CLO_H2F_B_4_13"):
		case joaat("CLO_H2F_B_4_14"):
		case joaat("CLO_H2F_B_4_15"):
		case joaat("CLO_H2F_B_4_16"):
		case joaat("CLO_H2F_B_4_17"):
		case joaat("CLO_H2F_B_4_18"):
		case joaat("CLO_H2F_B_4_19"):
		case joaat("CLO_H2F_B_4_20"):
		case joaat("CLO_H2F_B_4_21"):
		case joaat("CLO_H2F_B_4_22"):
		case joaat("CLO_H2F_B_4_23"):
		case joaat("CLO_H2F_B_4_24"):
		case joaat("CLO_H2F_B_4_25"):
			return 21;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_5_0"):
		case joaat("CLO_H2M_B_5_1"):
		case joaat("CLO_H2M_B_5_2"):
		case joaat("CLO_H2M_B_5_3"):
		case joaat("CLO_H2M_B_5_4"):
		case joaat("CLO_H2M_B_5_5"):
		case joaat("CLO_H2M_B_5_6"):
		case joaat("CLO_H2M_B_5_7"):
		case joaat("CLO_H2M_B_5_8"):
		case joaat("CLO_H2M_B_5_9"):
		case joaat("CLO_H2M_B_5_10"):
		case joaat("CLO_H2M_B_5_11"):
		case joaat("CLO_H2M_B_5_12"):
		case joaat("CLO_H2M_B_5_13"):
		case joaat("CLO_H2F_B_5_0"):
		case joaat("CLO_H2F_B_5_1"):
		case joaat("CLO_H2F_B_5_2"):
		case joaat("CLO_H2F_B_5_3"):
		case joaat("CLO_H2F_B_5_4"):
		case joaat("CLO_H2F_B_5_5"):
		case joaat("CLO_H2F_B_5_6"):
		case joaat("CLO_H2F_B_5_7"):
		case joaat("CLO_H2F_B_5_8"):
		case joaat("CLO_H2F_B_5_9"):
		case joaat("CLO_H2F_B_5_10"):
		case joaat("CLO_H2F_B_5_11"):
		case joaat("CLO_H2F_B_5_12"):
		case joaat("CLO_H2F_B_5_13"):
			return 21;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_X17M_B_6_0"):
		case joaat("CLO_X17M_B_6_1"):
		case joaat("CLO_X17M_B_6_2"):
		case joaat("CLO_X17M_B_6_3"):
		case joaat("CLO_X17F_B_6_0"):
		case joaat("CLO_X17F_B_6_1"):
		case joaat("CLO_X17F_B_6_2"):
		case joaat("CLO_X17F_B_6_3"):
			return 10;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_7_0"):
		case joaat("CLO_H2M_B_7_1"):
		case joaat("CLO_H2M_B_7_2"):
		case joaat("CLO_H2M_B_7_3"):
		case joaat("CLO_H2M_B_7_4"):
		case joaat("CLO_H2M_B_7_5"):
		case joaat("CLO_H2M_B_7_6"):
		case joaat("CLO_H2M_B_7_7"):
		case joaat("CLO_H2M_B_7_8"):
		case joaat("CLO_H2M_B_7_9"):
		case joaat("CLO_H2M_B_7_10"):
		case joaat("CLO_H2M_B_7_11"):
		case joaat("CLO_H2F_B_7_0"):
		case joaat("CLO_H2F_B_7_1"):
		case joaat("CLO_H2F_B_7_2"):
		case joaat("CLO_H2F_B_7_3"):
		case joaat("CLO_H2F_B_7_4"):
		case joaat("CLO_H2F_B_7_5"):
		case joaat("CLO_H2F_B_7_6"):
		case joaat("CLO_H2F_B_7_7"):
		case joaat("CLO_H2F_B_7_8"):
		case joaat("CLO_H2F_B_7_9"):
		case joaat("CLO_H2F_B_7_10"):
		case joaat("CLO_H2F_B_7_11"):
			return 6;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_8_0"):
		case joaat("CLO_H2M_B_8_1"):
		case joaat("CLO_H2M_B_8_2"):
		case joaat("CLO_H2M_B_8_3"):
		case joaat("CLO_H2M_B_8_4"):
		case joaat("CLO_H2M_B_8_5"):
		case joaat("CLO_H2M_B_8_6"):
		case joaat("CLO_H2M_B_8_7"):
		case joaat("CLO_H2M_B_8_8"):
		case joaat("CLO_H2M_B_8_9"):
		case joaat("CLO_H2M_B_8_10"):
		case joaat("CLO_H2M_B_8_11"):
		case joaat("CLO_H2M_B_8_12"):
		case joaat("CLO_H2M_B_8_13"):
		case joaat("CLO_H2F_B_8_0"):
		case joaat("CLO_H2F_B_8_1"):
		case joaat("CLO_H2F_B_8_2"):
		case joaat("CLO_H2F_B_8_3"):
		case joaat("CLO_H2F_B_8_4"):
		case joaat("CLO_H2F_B_8_5"):
		case joaat("CLO_H2F_B_8_6"):
		case joaat("CLO_H2F_B_8_7"):
		case joaat("CLO_H2F_B_8_8"):
		case joaat("CLO_H2F_B_8_9"):
		case joaat("CLO_H2F_B_8_10"):
		case joaat("CLO_H2F_B_8_11"):
		case joaat("CLO_H2F_B_8_12"):
		case joaat("CLO_H2F_B_8_13"):
			return 13;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_9_0"):
		case joaat("CLO_H2M_B_9_1"):
		case joaat("CLO_H2M_B_9_2"):
		case joaat("CLO_H2M_B_9_3"):
		case joaat("CLO_H2M_B_9_4"):
		case joaat("CLO_H2M_B_9_5"):
		case joaat("CLO_H2M_B_9_6"):
		case joaat("CLO_H2M_B_9_7"):
		case joaat("CLO_H2M_B_9_8"):
		case joaat("CLO_H2M_B_9_9"):
		case joaat("CLO_H2M_B_9_10"):
		case joaat("CLO_H2M_B_9_11"):
		case joaat("CLO_H2M_B_9_12"):
		case joaat("CLO_H2M_B_9_13"):
		case joaat("CLO_H2M_B_9_14"):
		case joaat("CLO_H2F_B_9_0"):
		case joaat("CLO_H2F_B_9_1"):
		case joaat("CLO_H2F_B_9_2"):
		case joaat("CLO_H2F_B_9_3"):
		case joaat("CLO_H2F_B_9_4"):
		case joaat("CLO_H2F_B_9_5"):
		case joaat("CLO_H2F_B_9_6"):
		case joaat("CLO_H2F_B_9_7"):
		case joaat("CLO_H2F_B_9_8"):
		case joaat("CLO_H2F_B_9_9"):
		case joaat("CLO_H2F_B_9_10"):
		case joaat("CLO_H2F_B_9_11"):
		case joaat("CLO_H2F_B_9_12"):
		case joaat("CLO_H2F_B_9_13"):
		case joaat("CLO_H2F_B_9_14"):
			return 13;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_X17M_B_10_0"):
		case joaat("CLO_X17M_B_10_1"):
		case joaat("CLO_X17M_B_10_2"):
		case joaat("CLO_X17M_B_10_3"):
		case joaat("CLO_X17F_B_10_0"):
		case joaat("CLO_X17F_B_10_1"):
		case joaat("CLO_X17F_B_10_2"):
		case joaat("CLO_X17F_B_10_3"):
			return 10;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H2M_B_11_0"):
		case joaat("CLO_H2M_B_11_1"):
		case joaat("CLO_H2M_B_11_2"):
		case joaat("CLO_H2M_B_11_3"):
		case joaat("CLO_H2M_B_11_4"):
		case joaat("CLO_H2M_B_11_5"):
		case joaat("CLO_H2M_B_11_6"):
		case joaat("CLO_H2M_B_11_7"):
		case joaat("CLO_H2M_B_11_8"):
		case joaat("CLO_H2M_B_11_9"):
		case joaat("CLO_H2M_B_1110"):
		case joaat("CLO_H2M_B_1111"):
		case joaat("CLO_H2M_B_1112"):
		case joaat("CLO_H2M_B_1113"):
		case joaat("CLO_H2M_B_1114"):
		case joaat("CLO_H2M_B_1115"):
		case joaat("CLO_H2M_B_1116"):
		case joaat("CLO_H2M_B_1117"):
		case joaat("CLO_H2M_B_1118"):
		case joaat("CLO_H2M_B_1119"):
		case joaat("CLO_H2M_B_1120"):
		case joaat("CLO_H2M_B_1121"):
		case joaat("CLO_H2F_B_11_0"):
		case joaat("CLO_H2F_B_11_1"):
		case joaat("CLO_H2F_B_11_2"):
		case joaat("CLO_H2F_B_11_3"):
		case joaat("CLO_H2F_B_11_4"):
		case joaat("CLO_H2F_B_11_5"):
		case joaat("CLO_H2F_B_11_6"):
		case joaat("CLO_H2F_B_11_7"):
		case joaat("CLO_H2F_B_11_8"):
		case joaat("CLO_H2F_B_11_9"):
		case joaat("CLO_H2F_B_1110"):
		case joaat("CLO_H2F_B_1111"):
		case joaat("CLO_H2F_B_1112"):
		case joaat("CLO_H2F_B_1113"):
		case joaat("CLO_H2F_B_1114"):
		case joaat("CLO_H2F_B_1115"):
		case joaat("CLO_H2F_B_1116"):
		case joaat("CLO_H2F_B_1117"):
		case joaat("CLO_H2F_B_1118"):
		case joaat("CLO_H2F_B_1119"):
		case joaat("CLO_H2F_B_1120"):
		case joaat("CLO_H2F_B_1121"):
			return 21;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_AWM_B_2_0"):
		case joaat("CLO_AWM_B_2_1"):
		case joaat("CLO_AWM_B_2_2"):
		case joaat("CLO_AWM_B_2_3"):
		case joaat("CLO_AWM_B_2_4"):
		case joaat("CLO_AWM_B_2_5"):
		case joaat("CLO_AWM_B_2_6"):
		case joaat("CLO_AWM_B_2_7"):
		case joaat("CLO_AWM_B_2_8"):
		case joaat("CLO_AWM_B_2_9"):
		case joaat("CLO_AWM_B_2_10"):
		case joaat("CLO_AWM_B_2_11"):
		case joaat("CLO_AWM_B_2_12"):
		case joaat("CLO_AWM_B_2_13"):
		case joaat("CLO_AWM_B_2_14"):
		case joaat("CLO_AWM_B_2_15"):
		case joaat("CLO_AWM_B_3_0"):
		case joaat("CLO_AWM_B_3_1"):
		case joaat("CLO_AWM_B_3_2"):
		case joaat("CLO_AWM_B_3_3"):
		case joaat("CLO_AWM_B_3_4"):
		case joaat("CLO_AWM_B_3_5"):
		case joaat("CLO_AWM_B_3_6"):
		case joaat("CLO_AWM_B_3_7"):
		case joaat("CLO_AWM_B_4_0"):
		case joaat("CLO_AWM_B_4_1"):
		case joaat("CLO_AWM_B_4_2"):
		case joaat("CLO_AWM_B_4_3"):
		case joaat("CLO_AWM_B_4_4"):
		case joaat("CLO_AWM_B_4_5"):
		case joaat("CLO_AWM_B_4_6"):
		case joaat("CLO_AWM_B_4_7"):
		case joaat("CLO_AWM_B_4_8"):
		case joaat("CLO_AWM_B_4_9"):
		case joaat("CLO_AWM_B_4_10"):
		case joaat("CLO_AWM_B_4_11"):
		case joaat("CLO_AWM_B_8_0"):
		case joaat("CLO_AWM_B_8_1"):
		case joaat("CLO_AWM_B_8_2"):
		case joaat("CLO_AWM_B_8_3"):
		case joaat("CLO_AWM_B_8_4"):
		case joaat("CLO_AWM_B_8_5"):
		case joaat("CLO_AWM_B_8_6"):
		case joaat("CLO_AWM_B_8_7"):
		case joaat("CLO_AWM_B_8_8"):
		case joaat("CLO_AWM_B_8_9"):
		case joaat("CLO_AWM_B_8_10"):
		case joaat("CLO_AWM_B_8_11"):
		case joaat("CLO_AWM_B_9_0"):
		case joaat("CLO_AWM_B_10_0"):
		case joaat("CLO_AWM_B_11_0"):
		case joaat("CLO_AWM_B_12_0"):
		case joaat("CLO_AWM_B_12_1"):
		case joaat("CLO_AWM_B_12_2"):
		case joaat("CLO_AWM_B_12_3"):
		case joaat("CLO_AWM_B_12_4"):
		case joaat("CLO_AWM_B_12_5"):
		case joaat("CLO_AWM_B_12_6"):
		case joaat("CLO_AWM_B_12_7"):
		case joaat("CLO_AWM_B_12_8"):
		case joaat("CLO_AWM_B_12_9"):
		case joaat("CLO_AWM_B_12_10"):
		case joaat("CLO_AWM_B_12_11"):
		case joaat("CLO_AWM_B_12_12"):
		case joaat("CLO_AWM_B_12_13"):
		case joaat("CLO_AWM_B_12_14"):
		case joaat("CLO_AWM_B_12_15"):
		case joaat("CLO_AWM_B_12_16"):
		case joaat("CLO_AWF_B_2_0"):
		case joaat("CLO_AWF_B_2_1"):
		case joaat("CLO_AWF_B_2_2"):
		case joaat("CLO_AWF_B_2_3"):
		case joaat("CLO_AWF_B_2_4"):
		case joaat("CLO_AWF_B_2_5"):
		case joaat("CLO_AWF_B_2_6"):
		case joaat("CLO_AWF_B_2_7"):
		case joaat("CLO_AWF_B_2_8"):
		case joaat("CLO_AWF_B_2_9"):
		case joaat("CLO_AWF_B_2_10"):
		case joaat("CLO_AWF_B_2_11"):
		case joaat("CLO_AWF_B_2_12"):
		case joaat("CLO_AWF_B_2_13"):
		case joaat("CLO_AWF_B_2_14"):
		case joaat("CLO_AWF_B_2_15"):
		case joaat("CLO_AWF_B_3_0"):
		case joaat("CLO_AWF_B_3_1"):
		case joaat("CLO_AWF_B_3_2"):
		case joaat("CLO_AWF_B_3_3"):
		case joaat("CLO_AWF_B_3_4"):
		case joaat("CLO_AWF_B_3_5"):
		case joaat("CLO_AWF_B_3_6"):
		case joaat("CLO_AWF_B_3_7"):
		case joaat("CLO_AWF_B_4_0"):
		case joaat("CLO_AWF_B_4_1"):
		case joaat("CLO_AWF_B_4_2"):
		case joaat("CLO_AWF_B_4_3"):
		case joaat("CLO_AWF_B_4_4"):
		case joaat("CLO_AWF_B_4_5"):
		case joaat("CLO_AWF_B_4_6"):
		case joaat("CLO_AWF_B_4_7"):
		case joaat("CLO_AWF_B_4_8"):
		case joaat("CLO_AWF_B_4_9"):
		case joaat("CLO_AWF_B_4_10"):
		case joaat("CLO_AWF_B_4_11"):
		case joaat("CLO_AWF_B_8_0"):
		case joaat("CLO_AWF_B_8_1"):
		case joaat("CLO_AWF_B_8_2"):
		case joaat("CLO_AWF_B_8_3"):
		case joaat("CLO_AWF_B_8_4"):
		case joaat("CLO_AWF_B_8_5"):
		case joaat("CLO_AWF_B_8_6"):
		case joaat("CLO_AWF_B_8_7"):
		case joaat("CLO_AWF_B_8_8"):
		case joaat("CLO_AWF_B_8_9"):
		case joaat("CLO_AWF_B_8_10"):
		case joaat("CLO_AWF_B_8_11"):
		case joaat("CLO_AWF_B_9_0"):
		case joaat("CLO_AWF_B_10_0"):
		case joaat("CLO_AWF_B_11_0"):
		case joaat("CLO_AWF_B_12_0"):
		case joaat("CLO_AWF_B_12_1"):
		case joaat("CLO_AWF_B_12_2"):
		case joaat("CLO_AWF_B_12_3"):
		case joaat("CLO_AWF_B_12_4"):
		case joaat("CLO_AWF_B_12_5"):
		case joaat("CLO_AWF_B_12_6"):
		case joaat("CLO_AWF_B_12_7"):
		case joaat("CLO_AWF_B_12_8"):
		case joaat("CLO_AWF_B_12_9"):
		case joaat("CLO_AWF_B_12_10"):
		case joaat("CLO_AWF_B_12_11"):
		case joaat("CLO_AWF_B_12_12"):
		case joaat("CLO_AWF_B_12_13"):
		case joaat("CLO_AWF_B_12_14"):
		case joaat("CLO_AWF_B_12_15"):
		case joaat("CLO_AWF_B_12_16"):
			return 1;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_VWM_B_0_0"):
		case joaat("CLO_VWM_B_1_0"):
		case joaat("CLO_VWM_B_2_0"):
		case joaat("CLO_VWM_B_3_0"):
		case joaat("CLO_VWM_B_4_0"):
		case joaat("CLO_VWM_B_5_0"):
		case joaat("CLO_VWM_B_6_0"):
		case joaat("CLO_VWM_B_7_0"):
		case joaat("CLO_VWM_B_7_1"):
		case joaat("CLO_VWM_B_7_2"):
		case joaat("CLO_VWM_B_7_3"):
		case joaat("CLO_VWM_B_8_0"):
		case joaat("CLO_VWM_B_8_1"):
		case joaat("CLO_VWM_B_8_2"):
		case joaat("CLO_VWM_B_8_3"):
		case joaat("CLO_VWM_B_9_0"):
		case joaat("CLO_VWM_B_9_1"):
		case joaat("CLO_VWM_B_9_2"):
		case joaat("CLO_VWM_B_9_3"):
		case joaat("CLO_VWM_B_10_0"):
		case joaat("CLO_VWM_B_10_1"):
		case joaat("CLO_VWM_B_10_2"):
		case joaat("CLO_VWM_B_10_3"):
		case joaat("CLO_VWM_B_11_0"):
		case joaat("CLO_VWM_B_11_1"):
		case joaat("CLO_VWM_B_11_2"):
		case joaat("CLO_VWM_B_11_3"):
		case joaat("CLO_VWF_B_0_0"):
		case joaat("CLO_VWF_B_1_0"):
		case joaat("CLO_VWF_B_2_0"):
		case joaat("CLO_VWF_B_3_0"):
		case joaat("CLO_VWF_B_4_0"):
		case joaat("CLO_VWF_B_5_0"):
		case joaat("CLO_VWF_B_6_0"):
		case joaat("CLO_VWF_B_7_0"):
		case joaat("CLO_VWF_B_7_1"):
		case joaat("CLO_VWF_B_7_2"):
		case joaat("CLO_VWF_B_7_3"):
		case joaat("CLO_VWF_B_8_0"):
		case joaat("CLO_VWF_B_8_1"):
		case joaat("CLO_VWF_B_8_2"):
		case joaat("CLO_VWF_B_8_3"):
		case joaat("CLO_VWF_B_9_0"):
		case joaat("CLO_VWF_B_9_1"):
		case joaat("CLO_VWF_B_9_2"):
		case joaat("CLO_VWF_B_9_3"):
		case joaat("CLO_VWF_B_10_0"):
		case joaat("CLO_VWF_B_10_1"):
		case joaat("CLO_VWF_B_10_2"):
		case joaat("CLO_VWF_B_10_3"):
		case joaat("CLO_VWF_B_11_0"):
		case joaat("CLO_VWF_B_11_1"):
		case joaat("CLO_VWF_B_11_2"):
		case joaat("CLO_VWF_B_11_3"):
			return 4;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H3F_B_0_0"):
		case joaat("CLO_H3F_B_1_0"):
		case joaat("CLO_H3F_B_2_0"):
		case joaat("CLO_H3F_B_3_0"):
		case joaat("CLO_H3F_B_4_0"):
		case joaat("CLO_H3F_B_5_0"):
		case joaat("CLO_H3F_B_7_0"):
		case joaat("CLO_H3F_B_8_0"):
		case joaat("CLO_H3F_B_9_0"):
		case joaat("CLO_H3F_B_9_1"):
		case joaat("CLO_H3F_B_9_2"):
		case joaat("CLO_H3F_B_9_3"):
		case joaat("CLO_H3F_B_9_4"):
		case joaat("CLO_H3F_B_9_5"):
		case joaat("CLO_H3F_B_9_6"):
		case joaat("CLO_H3F_B_9_7"):
		case joaat("CLO_H3F_B_9_8"):
		case joaat("CLO_H3F_B_9_9"):
		case joaat("CLO_H3F_B_9_10"):
		case joaat("CLO_H3F_B_9_11"):
		case joaat("CLO_H3F_B_9_12"):
		case joaat("CLO_H3F_B_9_13"):
		case joaat("CLO_H3F_B_9_14"):
		case joaat("CLO_H3F_B_9_15"):
		case joaat("CLO_H3F_B_9_16"):
		case joaat("CLO_H3F_B_9_17"):
		case joaat("CLO_H3F_B_9_18"):
		case joaat("CLO_H3F_B_9_19"):
		case joaat("CLO_H3F_B_9_20"):
		case joaat("CLO_H3F_B_9_21"):
		case joaat("CLO_H3F_B_10_0"):
		case joaat("CLO_H3F_B_11_0"):
		case joaat("CLO_H3F_B_12_0"):
		case joaat("CLO_H3F_B_12_1"):
		case joaat("CLO_H3F_B_12_2"):
		case joaat("CLO_H3F_B_13_0"):
		case joaat("CLO_H3F_B_14_0"):
		case joaat("CLO_H3F_B_14_1"):
		case joaat("CLO_H3F_B_14_2"):
		case joaat("CLO_H3F_B_14_3"):
		case joaat("CLO_H3F_B_14_4"):
		case joaat("CLO_H3F_B_14_5"):
		case joaat("CLO_H3F_B_14_6"):
		case joaat("CLO_H3F_B_14_7"):
		case joaat("CLO_H3F_B_14_8"):
		case joaat("CLO_H3F_B_14_9"):
		case joaat("CLO_H3F_B_14_10"):
		case joaat("CLO_H3F_B_14_11"):
		case joaat("CLO_H3F_B_14_12"):
		case joaat("CLO_H3F_B_14_13"):
		case joaat("CLO_H3F_B_14_14"):
		case joaat("CLO_H3F_B_14_15"):
		case joaat("CLO_H3F_B_14_16"):
		case joaat("CLO_H3F_B_14_17"):
		case joaat("CLO_H3F_B_14_18"):
		case joaat("CLO_H3F_B_14_19"):
		case joaat("CLO_H3F_B_14_20"):
		case joaat("CLO_H3F_B_14_21"):
		case joaat("CLO_H3F_B_14_22"):
		case joaat("CLO_H3F_B_14_23"):
		case joaat("CLO_H3F_B_14_24"):
		case joaat("CLO_H3F_B_15_0"):
		case joaat("CLO_H3F_B_15_1"):
		case joaat("CLO_H3F_B_15_2"):
		case joaat("CLO_H3F_B_15_3"):
		case joaat("CLO_H3F_B_16_0"):
		case joaat("CLO_H3F_B_16_1"):
		case joaat("CLO_H3F_B_16_2"):
		case joaat("CLO_H3F_B_16_3"):
		case joaat("CLO_H3F_B_17_0"):
		case joaat("CLO_H3F_B_18_0"):
		case joaat("CLO_H3F_B_18_1"):
		case joaat("CLO_H3F_B_18_2"):
		case joaat("CLO_H3F_B_18_3"):
		case joaat("CLO_H3F_B_18_4"):
		case joaat("CLO_H3F_B_18_5"):
		case joaat("CLO_H3F_B_18_6"):
		case joaat("CLO_H3F_B_18_7"):
		case joaat("CLO_H3F_B_18_8"):
		case joaat("CLO_H3F_B_18_9"):
		case joaat("CLO_H3F_B_18_10"):
		case joaat("CLO_H3F_B_18_11"):
		case joaat("CLO_H3F_B_18_12"):
		case joaat("CLO_H3F_B_18_13"):
		case joaat("CLO_H3F_B_18_14"):
		case joaat("CLO_H3F_B_18_15"):
		case joaat("CLO_H3F_B_18_16"):
		case joaat("CLO_H3F_B_18_17"):
		case joaat("CLO_H3F_B_18_18"):
		case joaat("CLO_H3F_B_18_19"):
		case joaat("CLO_H3F_B_18_20"):
		case joaat("CLO_H3F_B_18_21"):
		case joaat("CLO_H3F_B_18_22"):
		case joaat("CLO_H3F_B_18_23"):
		case joaat("CLO_H3F_B_18_24"):
		case joaat("CLO_H3F_B_18_25"):
		case joaat("CLO_H3F_B_19_0"):
		case joaat("CLO_H3F_B_19_1"):
		case joaat("CLO_H3F_B_19_2"):
		case joaat("CLO_H3F_B_19_3"):
		case joaat("CLO_H3F_B_19_4"):
		case joaat("CLO_H3F_B_19_5"):
		case joaat("CLO_H3F_B_19_6"):
		case joaat("CLO_H3F_B_19_7"):
			return 5;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H3M_B_0_0"):
		case joaat("CLO_H3M_B_1_0"):
		case joaat("CLO_H3M_B_2_0"):
		case joaat("CLO_H3M_B_3_0"):
		case joaat("CLO_H3M_B_4_0"):
		case joaat("CLO_H3M_B_5_0"):
		case joaat("CLO_H3M_B_7_0"):
		case joaat("CLO_H3M_B_8_0"):
		case joaat("CLO_H3M_B_9_0"):
		case joaat("CLO_H3M_B_9_1"):
		case joaat("CLO_H3M_B_9_2"):
		case joaat("CLO_H3M_B_9_3"):
		case joaat("CLO_H3M_B_9_4"):
		case joaat("CLO_H3M_B_9_5"):
		case joaat("CLO_H3M_B_9_6"):
		case joaat("CLO_H3M_B_9_7"):
		case joaat("CLO_H3M_B_9_8"):
		case joaat("CLO_H3M_B_9_9"):
		case joaat("CLO_H3M_B_9_10"):
		case joaat("CLO_H3M_B_9_11"):
		case joaat("CLO_H3M_B_9_12"):
		case joaat("CLO_H3M_B_9_13"):
		case joaat("CLO_H3M_B_9_14"):
		case joaat("CLO_H3M_B_9_15"):
		case joaat("CLO_H3M_B_9_16"):
		case joaat("CLO_H3M_B_9_17"):
		case joaat("CLO_H3M_B_9_18"):
		case joaat("CLO_H3M_B_9_19"):
		case joaat("CLO_H3M_B_9_20"):
		case joaat("CLO_H3M_B_9_21"):
		case joaat("CLO_H3M_B_10_0"):
		case joaat("CLO_H3M_B_11_0"):
		case joaat("CLO_H3M_B_12_0"):
		case joaat("CLO_H3M_B_12_1"):
		case joaat("CLO_H3M_B_12_2"):
		case joaat("CLO_H3M_B_13_0"):
		case joaat("CLO_H3M_B_14_0"):
		case joaat("CLO_H3M_B_14_1"):
		case joaat("CLO_H3M_B_14_2"):
		case joaat("CLO_H3M_B_14_3"):
		case joaat("CLO_H3M_B_14_4"):
		case joaat("CLO_H3M_B_14_5"):
		case joaat("CLO_H3M_B_14_6"):
		case joaat("CLO_H3M_B_14_7"):
		case joaat("CLO_H3M_B_14_8"):
		case joaat("CLO_H3M_B_14_9"):
		case joaat("CLO_H3M_B_14_10"):
		case joaat("CLO_H3M_B_14_11"):
		case joaat("CLO_H3M_B_14_12"):
		case joaat("CLO_H3M_B_14_13"):
		case joaat("CLO_H3M_B_14_14"):
		case joaat("CLO_H3M_B_14_15"):
		case joaat("CLO_H3M_B_14_16"):
		case joaat("CLO_H3M_B_14_17"):
		case joaat("CLO_H3M_B_14_18"):
		case joaat("CLO_H3M_B_14_19"):
		case joaat("CLO_H3M_B_14_20"):
		case joaat("CLO_H3M_B_14_21"):
		case joaat("CLO_H3M_B_14_22"):
		case joaat("CLO_H3M_B_14_23"):
		case joaat("CLO_H3M_B_14_24"):
		case joaat("CLO_H3M_B_15_0"):
		case joaat("CLO_H3M_B_15_1"):
		case joaat("CLO_H3M_B_15_2"):
		case joaat("CLO_H3M_B_15_3"):
		case joaat("CLO_H3M_B_16_0"):
		case joaat("CLO_H3M_B_16_1"):
		case joaat("CLO_H3M_B_16_2"):
		case joaat("CLO_H3M_B_16_3"):
		case joaat("CLO_H3M_B_17_0"):
		case joaat("CLO_H3M_B_18_0"):
		case joaat("CLO_H3M_B_18_1"):
		case joaat("CLO_H3M_B_18_2"):
		case joaat("CLO_H3M_B_18_3"):
		case joaat("CLO_H3M_B_18_4"):
		case joaat("CLO_H3M_B_18_5"):
		case joaat("CLO_H3M_B_18_6"):
		case joaat("CLO_H3M_B_18_7"):
		case joaat("CLO_H3M_B_18_8"):
		case joaat("CLO_H3M_B_18_9"):
		case joaat("CLO_H3M_B_18_10"):
		case joaat("CLO_H3M_B_18_11"):
		case joaat("CLO_H3M_B_18_12"):
		case joaat("CLO_H3M_B_18_13"):
		case joaat("CLO_H3M_B_18_14"):
		case joaat("CLO_H3M_B_18_15"):
		case joaat("CLO_H3M_B_18_16"):
		case joaat("CLO_H3M_B_18_17"):
		case joaat("CLO_H3M_B_18_18"):
		case joaat("CLO_H3M_B_18_19"):
		case joaat("CLO_H3M_B_18_20"):
		case joaat("CLO_H3M_B_18_21"):
		case joaat("CLO_H3M_B_18_22"):
		case joaat("CLO_H3M_B_18_23"):
		case joaat("CLO_H3M_B_18_24"):
		case -1165132985:
		case joaat("CLO_H3M_B_19_0"):
		case joaat("CLO_H3M_B_19_1"):
		case joaat("CLO_H3M_B_19_2"):
		case joaat("CLO_H3M_B_19_3"):
		case joaat("CLO_H3M_B_19_4"):
		case joaat("CLO_H3M_B_19_5"):
		case joaat("CLO_H3M_B_19_6"):
		case joaat("CLO_H3M_B_19_7"):
			return 5;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SUM_B_1_0"):
		case joaat("CLO_SUM_B_1_1"):
		case joaat("CLO_SUM_B_1_2"):
		case joaat("CLO_SUM_B_1_3"):
		case joaat("CLO_SUM_B_2_0"):
		case joaat("CLO_SUM_B_2_1"):
		case joaat("CLO_SUM_B_2_2"):
		case joaat("CLO_SUM_B_2_3"):
		case joaat("CLO_SUM_B_4_0"):
		case joaat("CLO_SUM_B_4_1"):
		case joaat("CLO_SUM_B_4_2"):
		case joaat("CLO_SUM_B_4_3"):
			return 0;
			break;
		case joaat("CLO_SUM_B_3_0"):
		case joaat("CLO_SUM_B_3_1"):
		case joaat("CLO_SUM_B_3_2"):
		case joaat("CLO_SUM_B_3_3"):
		case joaat("CLO_SUM_B_3_4"):
		case joaat("CLO_SUM_B_3_5"):
		case joaat("CLO_SUM_B_3_6"):
		case joaat("CLO_SUM_B_3_7"):
		case joaat("CLO_SUM_B_3_8"):
		case joaat("CLO_SUM_B_3_9"):
		case joaat("CLO_SUM_B_3_10"):
		case joaat("CLO_SUM_B_3_11"):
		case joaat("CLO_SUM_B_3_12"):
		case joaat("CLO_SUM_B_3_13"):
		case joaat("CLO_SUM_B_3_14"):
		case joaat("CLO_SUM_B_3_15"):
			return 20;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SUF_B_1_0"):
		case joaat("CLO_SUF_B_1_1"):
		case joaat("CLO_SUF_B_1_2"):
		case joaat("CLO_SUF_B_1_3"):
		case joaat("CLO_SUF_B_2_0"):
		case joaat("CLO_SUF_B_2_1"):
		case joaat("CLO_SUF_B_2_2"):
		case joaat("CLO_SUF_B_2_3"):
		case joaat("CLO_SUF_B_4_0"):
		case joaat("CLO_SUF_B_4_1"):
		case joaat("CLO_SUF_B_4_2"):
		case joaat("CLO_SUF_B_4_3"):
			return 0;
			break;
		case joaat("CLO_SUF_B_3_0"):
		case joaat("CLO_SUF_B_3_1"):
		case joaat("CLO_SUF_B_3_2"):
		case joaat("CLO_SUF_B_3_3"):
		case joaat("CLO_SUF_B_3_4"):
		case joaat("CLO_SUF_B_3_5"):
		case joaat("CLO_SUF_B_3_6"):
		case joaat("CLO_SUF_B_3_7"):
		case joaat("CLO_SUF_B_3_8"):
		case joaat("CLO_SUF_B_3_9"):
		case joaat("CLO_SUF_B_3_10"):
		case joaat("CLO_SUF_B_3_11"):
		case joaat("CLO_SUF_B_3_12"):
		case joaat("CLO_SUF_B_3_13"):
		case joaat("CLO_SUF_B_3_14"):
		case joaat("CLO_SUF_B_3_15"):
			return 20;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H4M_B_0_0"):
		case joaat("CLO_H4M_B_0_1"):
		case joaat("CLO_H4M_B_0_2"):
		case joaat("CLO_H4M_B_0_3"):
		case joaat("CLO_H4M_B_0_4"):
		case joaat("CLO_H4M_B_0_5"):
		case joaat("CLO_H4M_B_0_6"):
		case joaat("CLO_H4M_B_0_7"):
		case joaat("CLO_H4M_B_0_8"):
		case joaat("CLO_H4M_B_0_9"):
		case joaat("CLO_H4M_B_0_10"):
		case joaat("CLO_H4M_B_0_11"):
		case joaat("CLO_H4M_B_0_12"):
		case joaat("CLO_H4M_B_0_13"):
		case joaat("CLO_H4M_B_0_14"):
		case joaat("CLO_H4M_B_0_15"):
		case joaat("CLO_H4M_B_0_16"):
		case joaat("CLO_H4M_B_0_17"):
		case joaat("CLO_H4M_B_0_18"):
		case joaat("CLO_H4M_B_0_19"):
		case joaat("CLO_H4M_B_0_20"):
		case joaat("CLO_H4M_B_0_21"):
		case joaat("CLO_H4M_B_0_22"):
		case joaat("CLO_H4M_B_0_23"):
		case joaat("CLO_H4M_B_0_24"):
		case joaat("CLO_H4M_B_0_25"):
		case joaat("CLO_H4M_B_1_0"):
		case joaat("CLO_H4M_B_1_1"):
		case joaat("CLO_H4M_B_1_2"):
		case joaat("CLO_H4M_B_1_3"):
		case joaat("CLO_H4M_B_1_4"):
		case joaat("CLO_H4M_B_1_5"):
		case joaat("CLO_H4M_B_1_6"):
		case joaat("CLO_H4M_B_1_7"):
		case joaat("CLO_H4M_B_1_8"):
			return 19;
			break;
		case joaat("CLO_H4M_B_2_0"):
		case joaat("CLO_H4M_B_2_1"):
		case joaat("CLO_H4M_B_2_2"):
		case joaat("CLO_H4M_B_2_3"):
		case joaat("CLO_H4M_B_2_4"):
		case joaat("CLO_H4M_B_2_5"):
		case joaat("CLO_H4M_B_2_6"):
		case joaat("CLO_H4M_B_2_7"):
		case joaat("CLO_H4M_B_2_8"):
		case joaat("CLO_H4M_B_2_9"):
		case joaat("CLO_H4M_B_2_10"):
		case joaat("CLO_H4M_B_2_11"):
		case joaat("CLO_H4M_B_2_12"):
		case joaat("CLO_H4M_B_2_13"):
		case joaat("CLO_H4M_B_2_14"):
		case joaat("CLO_H4M_B_2_15"):
		case joaat("CLO_H4M_B_2_16"):
		case joaat("CLO_H4M_B_2_17"):
		case joaat("CLO_H4M_B_2_18"):
		case joaat("CLO_H4M_B_2_19"):
		case joaat("CLO_H4M_B_2_20"):
		case joaat("CLO_H4M_B_2_21"):
		case joaat("CLO_H4M_B_2_22"):
		case joaat("CLO_H4M_B_2_23"):
		case joaat("CLO_H4M_B_2_24"):
		case joaat("CLO_H4M_B_2_25"):
			return 12;
			break;
		case joaat("CLO_H4M_B_3_0"):
		case joaat("CLO_H4M_B_3_1"):
		case joaat("CLO_H4M_B_3_2"):
		case joaat("CLO_H4M_B_3_3"):
		case joaat("CLO_H4M_B_3_4"):
		case joaat("CLO_H4M_B_3_5"):
		case joaat("CLO_H4M_B_3_6"):
		case joaat("CLO_H4M_B_3_7"):
		case joaat("CLO_H4M_B_3_8"):
		case joaat("CLO_H4M_B_3_9"):
		case joaat("CLO_H4M_B_3_10"):
		case joaat("CLO_H4M_B_3_11"):
			return 21;
			break;
		case joaat("CLO_H4M_B_4_0"):
		case joaat("CLO_H4M_B_4_1"):
		case joaat("CLO_H4M_B_4_2"):
		case joaat("CLO_H4M_B_4_3"):
		case joaat("CLO_H4M_B_4_4"):
		case joaat("CLO_H4M_B_4_5"):
		case joaat("CLO_H4M_B_4_6"):
		case joaat("CLO_H4M_B_4_7"):
		case joaat("CLO_H4M_B_4_8"):
		case joaat("CLO_H4M_B_4_9"):
		case joaat("CLO_H4M_B_4_10"):
		case joaat("CLO_H4M_B_4_11"):
		case joaat("CLO_H4M_B_4_12"):
		case joaat("CLO_H4M_B_4_13"):
		case joaat("CLO_H4M_B_4_14"):
		case joaat("CLO_H4M_B_4_15"):
		case joaat("CLO_H4M_B_4_16"):
		case joaat("CLO_H4M_B_4_17"):
		case joaat("CLO_H4M_B_4_18"):
		case joaat("CLO_H4M_B_4_19"):
			return 11;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_H4F_B_0_0"):
		case joaat("CLO_H4F_B_0_1"):
		case joaat("CLO_H4F_B_0_2"):
		case joaat("CLO_H4F_B_0_3"):
		case joaat("CLO_H4F_B_0_4"):
		case joaat("CLO_H4F_B_0_5"):
		case joaat("CLO_H4F_B_0_6"):
		case joaat("CLO_H4F_B_0_7"):
		case joaat("CLO_H4F_B_0_8"):
		case joaat("CLO_H4F_B_0_9"):
		case joaat("CLO_H4F_B_0_10"):
		case joaat("CLO_H4F_B_0_11"):
		case joaat("CLO_H4F_B_0_12"):
		case joaat("CLO_H4F_B_0_13"):
		case joaat("CLO_H4F_B_0_14"):
		case joaat("CLO_H4F_B_0_15"):
		case joaat("CLO_H4F_B_0_16"):
		case joaat("CLO_H4F_B_0_17"):
		case joaat("CLO_H4F_B_0_18"):
		case joaat("CLO_H4F_B_0_19"):
		case joaat("CLO_H4F_B_0_20"):
		case joaat("CLO_H4F_B_0_21"):
		case joaat("CLO_H4F_B_0_22"):
		case joaat("CLO_H4F_B_0_23"):
		case joaat("CLO_H4F_B_0_24"):
		case joaat("CLO_H4F_B_0_25"):
		case joaat("CLO_H4F_B_1_0"):
		case joaat("CLO_H4F_B_1_1"):
		case joaat("CLO_H4F_B_1_2"):
		case joaat("CLO_H4F_B_1_3"):
		case joaat("CLO_H4F_B_1_4"):
		case joaat("CLO_H4F_B_1_5"):
		case joaat("CLO_H4F_B_1_6"):
		case joaat("CLO_H4F_B_1_7"):
		case joaat("CLO_H4F_B_1_8"):
			return 19;
			break;
		case joaat("CLO_H4F_B_2_0"):
		case joaat("CLO_H4F_B_2_1"):
		case joaat("CLO_H4F_B_2_2"):
		case joaat("CLO_H4F_B_2_3"):
		case joaat("CLO_H4F_B_2_4"):
		case joaat("CLO_H4F_B_2_5"):
		case joaat("CLO_H4F_B_2_6"):
		case joaat("CLO_H4F_B_2_7"):
		case joaat("CLO_H4F_B_2_8"):
		case joaat("CLO_H4F_B_2_9"):
		case joaat("CLO_H4F_B_2_10"):
		case joaat("CLO_H4F_B_2_11"):
		case joaat("CLO_H4F_B_2_12"):
		case joaat("CLO_H4F_B_2_13"):
		case joaat("CLO_H4F_B_2_14"):
		case joaat("CLO_H4F_B_2_15"):
		case joaat("CLO_H4F_B_2_16"):
		case joaat("CLO_H4F_B_2_17"):
		case joaat("CLO_H4F_B_2_18"):
		case joaat("CLO_H4F_B_2_19"):
		case joaat("CLO_H4F_B_2_20"):
		case joaat("CLO_H4F_B_2_21"):
		case joaat("CLO_H4F_B_2_22"):
		case joaat("CLO_H4F_B_2_23"):
		case joaat("CLO_H4F_B_2_24"):
		case joaat("CLO_H4F_B_2_25"):
			return 12;
			break;
		case joaat("CLO_H4F_B_3_0"):
		case joaat("CLO_H4F_B_3_1"):
		case joaat("CLO_H4F_B_3_2"):
		case joaat("CLO_H4F_B_3_3"):
		case joaat("CLO_H4F_B_3_4"):
		case joaat("CLO_H4F_B_3_5"):
		case joaat("CLO_H4F_B_3_6"):
		case joaat("CLO_H4F_B_3_7"):
		case joaat("CLO_H4F_B_3_8"):
		case joaat("CLO_H4F_B_3_9"):
		case joaat("CLO_H4F_B_3_10"):
		case joaat("CLO_H4F_B_3_11"):
			return 21;
			break;
		case joaat("CLO_H4F_B_4_0"):
		case joaat("CLO_H4F_B_4_1"):
		case joaat("CLO_H4F_B_4_2"):
		case joaat("CLO_H4F_B_4_3"):
		case joaat("CLO_H4F_B_4_4"):
		case joaat("CLO_H4F_B_4_5"):
		case joaat("CLO_H4F_B_4_6"):
		case joaat("CLO_H4F_B_4_7"):
		case joaat("CLO_H4F_B_4_8"):
		case joaat("CLO_H4F_B_4_9"):
		case joaat("CLO_H4F_B_4_10"):
		case joaat("CLO_H4F_B_4_11"):
		case joaat("CLO_H4F_B_4_12"):
		case joaat("CLO_H4F_B_4_13"):
		case joaat("CLO_H4F_B_4_14"):
		case joaat("CLO_H4F_B_4_15"):
		case joaat("CLO_H4F_B_4_16"):
		case joaat("CLO_H4F_B_4_17"):
		case joaat("CLO_H4F_B_4_18"):
		case joaat("CLO_H4F_B_4_19"):
			return 11;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_TRM_B_0_0"):
		case joaat("CLO_TRM_B_0_1"):
		case joaat("CLO_TRM_B_0_2"):
		case joaat("CLO_TRM_B_0_3"):
		case joaat("CLO_TRM_B_1_0"):
		case joaat("CLO_TRM_B_1_1"):
		case joaat("CLO_TRM_B_1_2"):
		case joaat("CLO_TRM_B_1_3"):
		case joaat("CLO_TRM_B_2_0"):
		case joaat("CLO_TRM_B_2_1"):
		case joaat("CLO_TRM_B_2_2"):
		case joaat("CLO_TRM_B_2_3"):
		case joaat("CLO_TRF_B_1_0"):
		case joaat("CLO_TRF_B_1_1"):
		case joaat("CLO_TRF_B_1_2"):
		case joaat("CLO_TRF_B_1_3"):
		case joaat("CLO_TRF_B_2_0"):
		case joaat("CLO_TRF_B_2_1"):
		case joaat("CLO_TRF_B_2_2"):
		case joaat("CLO_TRF_B_2_3"):
		case joaat("CLO_TRF_B_3_0"):
		case joaat("CLO_TRF_B_3_1"):
		case joaat("CLO_TRF_B_3_2"):
		case joaat("CLO_TRF_B_3_3"):
			return 17;
			break;
		case joaat("CLO_TRM_B_3_0"):
		case joaat("CLO_TRF_B_4_0"):
			return 0;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_FXM_B_0_0"):
		case joaat("CLO_FXM_B_0_1"):
		case joaat("CLO_FXM_B_0_2"):
		case joaat("CLO_FXM_B_0_3"):
		case joaat("CLO_FXM_B_1_0"):
		case joaat("CLO_FXM_B_1_1"):
		case joaat("CLO_FXM_B_1_2"):
		case joaat("CLO_FXM_B_1_3"):
		case joaat("CLO_FXM_B_2_0"):
		case joaat("CLO_FXM_B_2_1"):
		case joaat("CLO_FXM_B_2_2"):
		case joaat("CLO_FXM_B_2_3"):
		case joaat("CLO_FXF_B_0_0"):
		case joaat("CLO_FXF_B_0_1"):
		case joaat("CLO_FXF_B_0_2"):
		case joaat("CLO_FXF_B_0_3"):
		case joaat("CLO_FXF_B_1_0"):
		case joaat("CLO_FXF_B_1_1"):
		case joaat("CLO_FXF_B_1_2"):
		case joaat("CLO_FXF_B_1_3"):
		case joaat("CLO_FXF_B_2_0"):
		case joaat("CLO_FXF_B_2_1"):
		case joaat("CLO_FXF_B_2_2"):
		case joaat("CLO_FXF_B_2_3"):
			return 0;
			break;
	}
	switch (iVar0)
	{
		case joaat("CLO_SBM_B_8_0"):
		case joaat("CLO_SBM_B_0_0"):
		case joaat("CLO_SBM_B_3_0"):
		case joaat("CLO_SBM_B_4_0"):
		case joaat("CLO_SBF_B_8_0"):
		case joaat("CLO_SBF_B_0_0"):
		case joaat("CLO_SBF_B_3_0"):
		case joaat("CLO_SBF_B_4_0"):
			return 6;
			break;
		case joaat("CLO_SBM_B_7_0"):
		case joaat("CLO_SBF_B_7_0"):
			return 17;
			break;
		case joaat("CLO_SBM_B_5_0"):
		case joaat("CLO_SBM_B_5_1"):
		case joaat("CLO_SBM_B_5_2"):
		case joaat("CLO_SBM_B_5_3"):
		case joaat("CLO_SBF_B_5_0"):
		case joaat("CLO_SBF_B_5_1"):
		case joaat("CLO_SBF_B_5_2"):
		case joaat("CLO_SBF_B_5_3"):
			return 0;
			break;
		case joaat("CLO_SBM_B_10_0"):
		case joaat("CLO_SBM_B_10_1"):
		case joaat("CLO_SBM_B_10_2"):
		case joaat("CLO_SBM_B_10_3"):
		case joaat("CLO_SBM_B_10_4"):
		case joaat("CLO_SBM_B_10_5"):
		case joaat("CLO_SBM_B_10_6"):
		case joaat("CLO_SBM_B_10_7"):
		case joaat("CLO_SBM_B_10_8"):
		case joaat("CLO_SBM_B_10_9"):
		case joaat("CLO_SBM_B_10_10"):
		case joaat("CLO_SBM_B_10_11"):
		case joaat("CLO_SBM_B_10_12"):
		case joaat("CLO_SBM_B_10_13"):
		case joaat("CLO_SBM_B_10_14"):
		case joaat("CLO_SBM_B_10_15"):
		case joaat("CLO_SBM_B_10_16"):
		case joaat("CLO_SBM_B_10_17"):
		case joaat("CLO_SBM_B_10_18"):
		case joaat("CLO_SBM_B_10_19"):
		case joaat("CLO_SBM_B_10_20"):
		case joaat("CLO_SBM_B_10_21"):
		case joaat("CLO_SBM_B_10_22"):
		case joaat("CLO_SBM_B_10_23"):
		case joaat("CLO_SBM_B_10_24"):
		case joaat("CLO_SBM_B_10_25"):
		case joaat("CLO_SBF_B_10_0"):
		case joaat("CLO_SBF_B_10_1"):
		case joaat("CLO_SBF_B_10_2"):
		case joaat("CLO_SBF_B_10_3"):
		case joaat("CLO_SBF_B_10_4"):
		case joaat("CLO_SBF_B_10_5"):
		case joaat("CLO_SBF_B_10_6"):
		case joaat("CLO_SBF_B_10_7"):
		case joaat("CLO_SBF_B_10_8"):
		case joaat("CLO_SBF_B_10_9"):
		case joaat("CLO_SBF_B_10_10"):
		case joaat("CLO_SBF_B_10_11"):
		case joaat("CLO_SBF_B_10_12"):
		case joaat("CLO_SBF_B_10_13"):
		case joaat("CLO_SBF_B_10_14"):
		case joaat("CLO_SBF_B_10_15"):
		case joaat("CLO_SBF_B_10_16"):
		case joaat("CLO_SBF_B_10_17"):
		case joaat("CLO_SBF_B_10_18"):
		case joaat("CLO_SBF_B_10_19"):
		case joaat("CLO_SBF_B_10_20"):
		case joaat("CLO_SBF_B_10_21"):
		case joaat("CLO_SBF_B_10_22"):
		case joaat("CLO_SBF_B_10_23"):
		case joaat("CLO_SBF_B_10_24"):
		case joaat("CLO_SBF_B_10_25"):
			return 16;
			break;
		case joaat("CLO_SBM_B_6_0"):
		case joaat("CLO_SBM_B_6_1"):
		case joaat("CLO_SBM_B_6_2"):
		case joaat("CLO_SBM_B_9_0"):
		case joaat("CLO_SBM_B_9_1"):
		case joaat("CLO_SBM_B_9_2"):
		case joaat("CLO_SBM_B_1_0"):
		case joaat("CLO_SBM_B_1_1"):
		case joaat("CLO_SBM_B_1_2"):
		case joaat("CLO_SBF_B_6_0"):
		case joaat("CLO_SBF_B_6_1"):
		case joaat("CLO_SBF_B_6_2"):
		case joaat("CLO_SBF_B_9_0"):
		case joaat("CLO_SBF_B_9_1"):
		case joaat("CLO_SBF_B_9_2"):
		case joaat("CLO_SBF_B_1_0"):
		case joaat("CLO_SBF_B_1_1"):
		case joaat("CLO_SBF_B_1_2"):
			return 23;
			break;
	}
	return 37;
}

char* func_818(int iParam0, bool bParam1, int iParam2, bool bParam3)//Position - 0x5F6B2
{
	switch (iParam0)
	{
		case 0:
			if (bParam1)
			{
				if (iParam2 == joaat("CSHOP_TRY_MASK"))
				{
					return "CSHOP_TITLE41";
				}
				else if (iParam2 == joaat("CSHOP_TRY_GEAR"))
				{
					return "CSHOP_TITLE159" /* GXT: HEIST GEAR */;
				}
				else
				{
					return "CSHOP_TITLE0";
				}
			}
			else
			{
				return "CSHOP_ITEM0";
			}
			break;
		case 1:
			if (bParam1)
			{
				return "CSHOP_TITLE1";
			}
			else
			{
				return "CSHOP_ITEM1";
			}
			break;
		case 2:
			if (bParam1)
			{
				return "CSHOP_TITLE114";
			}
			else
			{
				return "CSHOP_ITEM114";
			}
			break;
		case 3:
			if (bParam1)
			{
				return "CSHOP_TITLE113";
			}
			else
			{
				return "CSHOP_ITEM113";
			}
			break;
		case 4:
			if (bParam1)
			{
				return "CSHOP_TITLE113";
			}
			else
			{
				return "CSHOP_ITEM113";
			}
			break;
		case 6:
			if (bParam1)
			{
				return "CSHOP_TITLE2";
			}
			else
			{
				return "CSHOP_ITEM2";
			}
			break;
		case 7:
			if (bParam1)
			{
				return "CSHOP_TITLE46";
			}
			else
			{
				return "CSHOP_ITEM46";
			}
			break;
		case 8:
			if (bParam1)
			{
				return "CSHOP_TITLE92";
			}
			else
			{
				return "CSHOP_ITEM92";
			}
			break;
		case 9:
			if (bParam1)
			{
				return "CSHOP_TITLE111";
			}
			else
			{
				return "CSHOP_ITEM111";
			}
			break;
		case 10:
			if (bParam1)
			{
				return "CSHOP_TITLE93";
			}
			else
			{
				return "CSHOP_ITEM93";
			}
			break;
		case 11:
			if (bParam1)
			{
				return "CSHOP_TITLE3";
			}
			else
			{
				return "CSHOP_ITEM3";
			}
			break;
		case 12:
			if (bParam1)
			{
				return "CSHOP_TITLE4";
			}
			else
			{
				return "CSHOP_ITEM4";
			}
			break;
		case 13:
			if (bParam1)
			{
				return "CSHOP_TITLE5";
			}
			else
			{
				return "CSHOP_ITEM5";
			}
			break;
		case 14:
			if (bParam1)
			{
				return "CSHOP_TITLE6";
			}
			else
			{
				return "CSHOP_ITEM6";
			}
			break;
		case 15:
			if (bParam1)
			{
				return "CSHOP_TITLE7";
			}
			else
			{
				return "CSHOP_ITEM7";
			}
			break;
		case 16:
			if (bParam1)
			{
				return "CSHOP_TITLE8";
			}
			else
			{
				return "CSHOP_ITEM8";
			}
			break;
		case 17:
			if (bParam1)
			{
				return "CSHOP_TITLE9";
			}
			else
			{
				return "CSHOP_ITEM9";
			}
			break;
		case 18:
			if (bParam1)
			{
				return "CSHOP_TITLE10";
			}
			else
			{
				return "CSHOP_ITEM10";
			}
			break;
		case 19:
			if (bParam1)
			{
				return "CSHOP_TITLE11";
			}
			else
			{
				return "CSHOP_ITEM11";
			}
			break;
		case 28:
			if (bParam1)
			{
				return "CSHOP_TITLE12";
			}
			else
			{
				return "CSHOP_ITEM12";
			}
			break;
		case 29:
			if (bParam1)
			{
				return "CSHOP_TITLE76";
			}
			else
			{
				return "CSHOP_ITEM76";
			}
			break;
		case 30:
			if (bParam1)
			{
				return "CSHOP_TITLE13";
			}
			else
			{
				return "CSHOP_ITEM13";
			}
			break;
		case 31:
			if (bParam1)
			{
				return "CSHOP_TITLE14";
			}
			else
			{
				return "CSHOP_ITEM14";
			}
			break;
		case 32:
			if (bParam1)
			{
				return "CSHOP_TITLE15";
			}
			else
			{
				return "CSHOP_ITEM15";
			}
			break;
		case 33:
			if (bParam1)
			{
				return "CSHOP_TITLE16";
			}
			else
			{
				return "CSHOP_ITEM16";
			}
			break;
		case 34:
			if (bParam1)
			{
				return "CSHOP_TITLE94";
			}
			else
			{
				return "CSHOP_ITEM94";
			}
			break;
		case 35:
			if (bParam1)
			{
				return "CSHOP_TITLE17";
			}
			else
			{
				return "CSHOP_ITEM17";
			}
			break;
		case 36:
			if (bParam1)
			{
				return "CSHOP_TITLE96";
			}
			else
			{
				return "CSHOP_ITEM96";
			}
			break;
		case 37:
			if (bParam1)
			{
				return "CSHOP_TITLE95";
			}
			else
			{
				return "CSHOP_ITEM95";
			}
			break;
		case 38:
			if (bParam1)
			{
				return "CSHOP_TITLE18";
			}
			else
			{
				return "CSHOP_ITEM18";
			}
			break;
		case 39:
			if (bParam1)
			{
				return "CSHOP_TITLE19";
			}
			else
			{
				return "CSHOP_ITEM19";
			}
			break;
		case 44:
			if (bParam1)
			{
				return "CSHOP_TITLE21";
			}
			else
			{
				return "CSHOP_ITEM21";
			}
			break;
		case 45:
			if (bParam1)
			{
				return "CSHOP_TITLE77";
			}
			else
			{
				return "CSHOP_ITEM77";
			}
			break;
		case 46:
			if (bParam1)
			{
				return "CSHOP_TITLE22";
			}
			else
			{
				return "CSHOP_ITEM22";
			}
			break;
		case 47:
			if (bParam1)
			{
				return "CSHOP_TITLE90";
			}
			else
			{
				return "CSHOP_ITEM90";
			}
			break;
		case 48:
			if (bParam1)
			{
				return "CSHOP_TITLE91";
			}
			else
			{
				return "CSHOP_ITEM91";
			}
			break;
		case 49:
			if (bParam1)
			{
				return "CSHOP_TITLE23";
			}
			else
			{
				return "CSHOP_ITEM23";
			}
			break;
		case 50:
			if (bParam1)
			{
				return "CSHOP_TITLE24";
			}
			else
			{
				return "CSHOP_ITEM24";
			}
			break;
		case 51:
			if (bParam1)
			{
				return "CSHOP_TITLE25";
			}
			else
			{
				return "CSHOP_ITEM25";
			}
			break;
		case 52:
			if (bParam1)
			{
				return "CSHOP_TITLE27";
			}
			else
			{
				return "CSHOP_ITEM27";
			}
			break;
		case 53:
			if (bParam1)
			{
				return "CSHOP_TITLE28";
			}
			else
			{
				return "CSHOP_ITEM28";
			}
			break;
		case 54:
			if (bParam1)
			{
				return "CSHOP_TITLE29";
			}
			else
			{
				return "CSHOP_ITEM29";
			}
			break;
		case 55:
			if (bParam1)
			{
				return "CSHOP_TITLE75";
			}
			else
			{
				return "CSHOP_ITEM75";
			}
			break;
		case 56:
			if (bParam1)
			{
				return "CSHOP_TITLE30";
			}
			else
			{
				return "CSHOP_ITEM30";
			}
			break;
		case 57:
			if (bParam1)
			{
				return "CSHOP_TITLE31";
			}
			else
			{
				return "CSHOP_ITEM31";
			}
			break;
		case 58:
			if (bParam1)
			{
				return "CSHOP_TITLE32";
			}
			else
			{
				return "CSHOP_ITEM32";
			}
			break;
		case 110:
			if (bParam1)
			{
				return "CSHOP_TITLE112";
			}
			else
			{
				return "CSHOP_ITEM112";
			}
			break;
		case 59:
			if (bParam1)
			{
				return "CSHOP_TITLE33";
			}
			else
			{
				return "CSHOP_ITEM33";
			}
			break;
		case 40:
			if (bParam1)
			{
				return "CSHOP_TITLE34";
			}
			else
			{
				return "CSHOP_ITEM34";
			}
			break;
		case 41:
			if (bParam1)
			{
				return "CSHOP_TITLE35";
			}
			else
			{
				return "CSHOP_ITEM35";
			}
			break;
		case 20:
			if (bParam1)
			{
				return "CSHOP_TITLE52";
			}
			else
			{
				return "CSHOP_ITEM52";
			}
			break;
		case 21:
			if (bParam1)
			{
				return "CSHOP_TITLE53";
			}
			else
			{
				return "CSHOP_ITEM53";
			}
			break;
		case 22:
			if (bParam1)
			{
				return "CSHOP_TITLE54";
			}
			else
			{
				return "CSHOP_ITEM54";
			}
			break;
		case 42:
			if (bParam1)
			{
				return "CSHOP_TITLE55";
			}
			else
			{
				return "CSHOP_ITEM55";
			}
			break;
		case 60:
			if (bParam1)
			{
				return "CSHOP_TITLE56";
			}
			else
			{
				return "CSHOP_ITEM56";
			}
			break;
		case 23:
			if (bParam1)
			{
				return "CSHOP_TITLE57";
			}
			else
			{
				return "CSHOP_ITEM57";
			}
			break;
		case 25:
			if (bParam1)
			{
				return "CSHOP_TITLE129";
			}
			else
			{
				return "CSHOP_ITEM129";
			}
			break;
		case 26:
			if (bParam1)
			{
				return "CSHOP_TITLE50";
			}
			else
			{
				return "CSHOP_ITEM50";
			}
			break;
		case 27:
			if (bParam1)
			{
				return "CSHOP_TITLE130";
			}
			else
			{
				return "CSHOP_ITEM130";
			}
			break;
		case 99:
			if (bParam1)
			{
				return "CSHOP_TITLE49";
			}
			else
			{
				return "CSHOP_ITEM49";
			}
			break;
		case 87:
			if (bParam1)
			{
				return "CSHOP_TITLE60";
			}
			else
			{
				return "CSHOP_ITEM60";
			}
			break;
		case 80:
			if (bParam1)
			{
				return "CSHOP_TITLE83";
			}
			else
			{
				return "CSHOP_ITEM83";
			}
			break;
		case 81:
			if (bParam1)
			{
				return "CSHOP_TITLE84";
			}
			else
			{
				return "CSHOP_ITEM84";
			}
			break;
		case 82:
			if (bParam1)
			{
				return "CSHOP_TITLE85";
			}
			else
			{
				return "CSHOP_ITEM85";
			}
			break;
		case 83:
			if (bParam1)
			{
				return "CSHOP_TITLE86";
			}
			else
			{
				return "CSHOP_ITEM86";
			}
			break;
		case 84:
			if (bParam1)
			{
				return "CSHOP_TITLE87";
			}
			else
			{
				return "CSHOP_ITEM87";
			}
			break;
		case 85:
			if (bParam1)
			{
				return "CSHOP_TITLE88";
			}
			else
			{
				return "CSHOP_ITEM88";
			}
			break;
		case 86:
			if (bParam1)
			{
				return "CSHOP_TITLE89";
			}
			else
			{
				return "CSHOP_ITEM89";
			}
			break;
		case 78:
			if (__LIB_31__::func_932(iParam0))
			{
				if (bParam1)
				{
					return "CSHOP_CH_TITLE" /* GXT: DIAMOND CASINO HEIST MASKS */;
				}
				else
				{
					return "CSHOP_CH_ITEM" /* GXT: Diamond Casino Heist Masks */;
				}
			}
			if (bParam1)
			{
				return "CSHOP_TITLE41";
			}
			else
			{
				return "CSHOP_ITEM41";
			}
			break;
		case 88:
			if (bParam1)
			{
				return "CSHOP_TITLE115";
			}
			else
			{
				return "CSHOP_ITEM115";
			}
			break;
		case 90:
			if (bParam1)
			{
				return "CSHOP_TITLE116";
			}
			else
			{
				return "CSHOP_ITEM116";
			}
			break;
		case 91:
			if (bParam1)
			{
				return "CSHOP_TITLE117";
			}
			else
			{
				return "CSHOP_ITEM117";
			}
			break;
		case 92:
			if (bParam1)
			{
				return "CSHOP_TITLE81";
			}
			else
			{
				return "CSHOP_ITEM81";
			}
			break;
		case 93:
			if (bParam1)
			{
				return "CSHOP_TITLE119";
			}
			else
			{
				return "CSHOP_ITEM119";
			}
			break;
		case 94:
			if (bParam1)
			{
				return "CSHOP_TITLE120";
			}
			else
			{
				return "CSHOP_ITEM120";
			}
			break;
		case 95:
			if (bParam1)
			{
				return "CSHOP_TITLE121";
			}
			else
			{
				return "CSHOP_ITEM121";
			}
			break;
		case 96:
			if (bParam1)
			{
				return "CSHOP_TITLE122";
			}
			else
			{
				return "CSHOP_ITEM122";
			}
			break;
		case 97:
			if (bParam1)
			{
				return "CSHOP_TITLE123";
			}
			else
			{
				return "CSHOP_ITEM123";
			}
			break;
		case 98:
			if (bParam1)
			{
				return "CSHOP_TITLE124";
			}
			else
			{
				return "CSHOP_ITEM124";
			}
			break;
		case 100:
			if (bParam1)
			{
				return "CSHOP_TITLE59";
			}
			else
			{
				return "CSHOP_ITEM59";
			}
			break;
		case 101:
			if (bParam1)
			{
				return "CSHOP_TITLE61";
			}
			else
			{
				return "CSHOP_ITEM61";
			}
			break;
		case 102:
			if (bParam1)
			{
				return "CSHOP_TITLE62";
			}
			else
			{
				return "CSHOP_ITEM62";
			}
			break;
		case 103:
			if (bParam1)
			{
				return "CSHOP_TITLE63";
			}
			else
			{
				return "CSHOP_ITEM63";
			}
			break;
		case 104:
			if (bParam1)
			{
				return "CSHOP_TITLE64";
			}
			else
			{
				return "CSHOP_ITEM64";
			}
			break;
		case 105:
			if (bParam1)
			{
				return "CSHOP_TITLE65";
			}
			else
			{
				return "CSHOP_ITEM65";
			}
			break;
		case 106:
			if (bParam1)
			{
				return "CSHOP_TITLE66";
			}
			else
			{
				return "CSHOP_ITEM66";
			}
			break;
		case 107:
			if (bParam1)
			{
				return "CSHOP_TITLE67";
			}
			else
			{
				return "CSHOP_ITEM67";
			}
			break;
		case 108:
			if (bParam1)
			{
				return "CSHOP_TITLE68";
			}
			else
			{
				return "CSHOP_ITEM68";
			}
			break;
		case 109:
			if (bParam1)
			{
				return "CSHOP_TITLE69";
			}
			else
			{
				return "CSHOP_ITEM69";
			}
			break;
		case 89:
			if (bParam1)
			{
				return "CSHOP_TITLE74";
			}
			else
			{
				return "CSHOP_ITEM74";
			}
			break;
		case 24:
			if (bParam1)
			{
				return "CSHOP_TITLE37";
			}
			else
			{
				return "CSHOP_ITEM37";
			}
			break;
		case 43:
			if (bParam1)
			{
				return "CSHOP_TITLE38";
			}
			else
			{
				return "CSHOP_ITEM38";
			}
			break;
		case 61:
			if (bParam1)
			{
				return "CSHOP_TITLE40";
			}
			else
			{
				return "CSHOP_ITEM40";
			}
			break;
		case 62:
			if (bParam1)
			{
				return "CSHOP_TITLE97";
			}
			else
			{
				return "CSHOP_ITEM97";
			}
			break;
		case 63:
			if (bParam1)
			{
				return "CSHOP_TITLE98";
			}
			else
			{
				return "CSHOP_ITEM98";
			}
			break;
		case 64:
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (bParam1)
				{
					return "CSHOP_TITLE131";
				}
				else
				{
					return "CSHOP_ITEM131";
				}
			}
			else if (bParam1)
			{
				return "CSHOP_TITLE127";
			}
			else
			{
				return "CSHOP_ITEM127";
			}
			break;
		case 65:
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				if (bParam1)
				{
					return "CSHOP_TITLE132";
				}
				else
				{
					return "CSHOP_ITEM132";
				}
			}
			else
			{
				if (bParam1)
				{
					return "CSHOP_TITLE128";
				}
				else
				{
					return "CSHOP_ITEM128";
				}
				break;
			}
			break;
		case 66:
			if (bParam1)
			{
				return "CSHOP_TITLE100";
			}
			else
			{
				return "CSHOP_ITEM100";
			}
			break;
		case 67:
			if (bParam1)
			{
				return "CSHOP_TITLE110";
			}
			else
			{
				return "CSHOP_ITEM110";
			}
			break;
		case 68:
			if (bParam1)
			{
				return "CSHOP_TITLE101";
			}
			else
			{
				return "CSHOP_ITEM101";
			}
			break;
		case 69:
			if (bParam1)
			{
				return "CSHOP_TITLE102";
			}
			else
			{
				return "CSHOP_ITEM102";
			}
			break;
		case 70:
			if (bParam1)
			{
				return "CSHOP_TITLE103";
			}
			else
			{
				return "CSHOP_ITEM103";
			}
			break;
		case 71:
			if (bParam1)
			{
				return "CSHOP_TITLE104";
			}
			else
			{
				return "CSHOP_ITEM104";
			}
			break;
		case 72:
			if (bParam1)
			{
				return "CSHOP_TITLE108";
			}
			else
			{
				return "CSHOP_ITEM108";
			}
			break;
		case 73:
			if (bParam1)
			{
				return "CSHOP_TITLE109";
			}
			else
			{
				return "CSHOP_ITEM109";
			}
			break;
		case 74:
			if (bParam1)
			{
				return "CSHOP_TITLE105";
			}
			else
			{
				return "CSHOP_ITEM105";
			}
			break;
		case 75:
			if (bParam1)
			{
				return "CSHOP_TITLE106";
			}
			else
			{
				return "CSHOP_ITEM106";
			}
			break;
		case 76:
			if (bParam1)
			{
				return "CSHOP_TITLE107";
			}
			else
			{
				return "CSHOP_ITEM107";
			}
			break;
		case 77:
			if (bParam1)
			{
				return "CSHOP_TITLE58";
			}
			else
			{
				return "CSHOP_ITEM58";
			}
			break;
		case 79:
			if (bParam1)
			{
				return "CSHOP_TITLE42";
			}
			else
			{
				return "CSHOP_ITEM42";
			}
			break;
		case 111:
			if (bParam1)
			{
				return "CSHOP_TITLE150";
			}
			else
			{
				return "CSHOP_ITEM150";
			}
			break;
		case 112:
			if (bParam1)
			{
				return "CSHOP_TITLE151";
			}
			else
			{
				return "CSHOP_ITEM151";
			}
			break;
		case 113:
			if (bParam1)
			{
				return "CSHOP_TITLE152";
			}
			else
			{
				return "CSHOP_ITEM152";
			}
			break;
		case 114:
			if (bParam1)
			{
				return "CSHOP_TITLE153";
			}
			else
			{
				return "CSHOP_ITEM153";
			}
			break;
		case 115:
			if (bParam1)
			{
				return "CSHOP_TITLE154";
			}
			else
			{
				return "CSHOP_ITEM154";
			}
			break;
		case 116:
			if (bParam1)
			{
				return "CSHOP_TITLE155";
			}
			else
			{
				return "CSHOP_ITEM155";
			}
			break;
		case 117:
			if (bParam1)
			{
				return "CSHOP_TITLE156";
			}
			else
			{
				return "CSHOP_ITEM156";
			}
			break;
		case 119:
			if (bParam1)
			{
				return "CSHOP_TITLE157";
			}
			else
			{
				return "CSHOP_ITEM157";
			}
			break;
		case 118:
			if (bParam1)
			{
				return "CSHOP_TITLE158";
			}
			else
			{
				return "CSHOP_ITEM158";
			}
			break;
		case 120:
			if (bParam1)
			{
				return "CSHOP_TITLE160";
			}
			else
			{
				return "CSHOP_ITEM160";
			}
			break;
		case 124:
			if (bParam1)
			{
				return "CSHOP_TITLE159" /* GXT: HEIST GEAR */;
			}
			else
			{
				return "CSHOP_ITEM159" /* GXT: Heist Gear */;
			}
			break;
		case 122:
			if (bParam1)
			{
				return "CSHOP_TITLE161";
			}
			else
			{
				return "CSHOP_ITEM161";
			}
			break;
		case 121:
			if (bParam1)
			{
				return "CSHOP_TITLE162";
			}
			else
			{
				return "CSHOP_ITEM162";
			}
			break;
		case 123:
			if (bParam1)
			{
				return "CSHOP_TITLE163";
			}
			else
			{
				return "CSHOP_ITEM163";
			}
			break;
		case 125:
			if (bParam1)
			{
				return "CSHOP_TITLE164";
			}
			else
			{
				return "CSHOP_ITEM164";
			}
			break;
		case 126:
			if (bParam1)
			{
				return "CSHOP_TITLE165";
			}
			else
			{
				return "CSHOP_ITEM165";
			}
			break;
		case 127:
			if (bParam1)
			{
				return "CSHOP_TITLE166";
			}
			else
			{
				return "CSHOP_ITEM166";
			}
			break;
		case 128:
			if (bParam1)
			{
				return "CSHOP_TITLE167";
			}
			else
			{
				return "CSHOP_ITEM167";
			}
			break;
		case 129:
			if (bParam1)
			{
				return "CSHOP_TITLE168";
			}
			else
			{
				return "CSHOP_ITEM168";
			}
			break;
		case 130:
			if (bParam1)
			{
				return "CSHOP_TITLE169";
			}
			else
			{
				return "CSHOP_ITEM169";
			}
			break;
		case 131:
			if (bParam1)
			{
				return "CSHOP_TITLE170";
			}
			else
			{
				return "CSHOP_ITEM170";
			}
			break;
		case 132:
			if (bParam1)
			{
				return "CSHOP_TITLE171";
			}
			else
			{
				return "CSHOP_ITEM171";
			}
			break;
		case 133:
			if (bParam1)
			{
				return "CSHOP_TITLE172";
			}
			else
			{
				return "CSHOP_ITEM172";
			}
			break;
		case 134:
			if (bParam1)
			{
				return "CSHOP_TITLE173";
			}
			else
			{
				return "CSHOP_ITEM173";
			}
			break;
		case 135:
			if (bParam1)
			{
				return "CSHOP_TITLE174";
			}
			else
			{
				return "CSHOP_ITEM174";
			}
			break;
		case 136:
			if (bParam1)
			{
				return "CSHOP_TITLE175";
			}
			else
			{
				return "CSHOP_ITEM175";
			}
			break;
		case 137:
			if (bParam1)
			{
				return "CSHOP_TITLE176";
			}
			else
			{
				return "CSHOP_ITEM176";
			}
			break;
		case 138:
			if (bParam1)
			{
				return "CSHOP_TITLE177";
			}
			else
			{
				return "CSHOP_ITEM177";
			}
			break;
		case 139:
			if (bParam1)
			{
				return "CSHOP_TITLE178";
			}
			else
			{
				return "CSHOP_ITEM178";
			}
			break;
		case 140:
			if (bParam1)
			{
				return "CSHOP_TITLE179";
			}
			else
			{
				return "CSHOP_ITEM179";
			}
			break;
		case 141:
			if (bParam1)
			{
				return "CSHOP_TITLE180";
			}
			else
			{
				return "CSHOP_ITEM180";
			}
			break;
		case 142:
			if (bParam1)
			{
				return "CSHOP_TITLE181";
			}
			else
			{
				return "CSHOP_ITEM181";
			}
			break;
		case 143:
			if (bParam1)
			{
				return "CSHOP_TITLE182";
			}
			else
			{
				return "CSHOP_ITEM182";
			}
			break;
		case 144:
			if (bParam1)
			{
				return "CSHOP_TITLE183";
			}
			else
			{
				return "CSHOP_ITEM183";
			}
			break;
		case 145:
			if (bParam1)
			{
				return "CSHOP_TITLE184";
			}
			else
			{
				return "CSHOP_ITEM184";
			}
			break;
		case 146:
			if (bParam1)
			{
				return "CSHOP_TITLE185";
			}
			else
			{
				return "CSHOP_ITEM185";
			}
			break;
		case 147:
			if (bParam1)
			{
				return "CSHOP_TITLE186";
			}
			else
			{
				return "CSHOP_ITEM186";
			}
			break;
		case 148:
			if (bParam1)
			{
				return "CSHOP_TITLE187";
			}
			else
			{
				return "CSHOP_ITEM187";
			}
			break;
		case 149:
			if (bParam1)
			{
				return "CSHOP_TITLE188";
			}
			else
			{
				return "CSHOP_ITEM188";
			}
			break;
		case 150:
			if (bParam1)
			{
				return "CSHOP_TITLE189";
			}
			else
			{
				return "CSHOP_ITEM189";
			}
			break;
		case 151:
			if (bParam1)
			{
				return "CSHOP_TITLE190";
			}
			else
			{
				return "CSHOP_ITEM190";
			}
			break;
		case 152:
			if (bParam1)
			{
				return "CSHOP_TITLE191";
			}
			else
			{
				return "CSHOP_ITEM191";
			}
			break;
		case 153:
			if (bParam1)
			{
				return "CSHOP_TITLE192";
			}
			else
			{
				return "CSHOP_ITEM192";
			}
			break;
		case 154:
			if (bParam1)
			{
				return "CSHOP_TITLE193";
			}
			else
			{
				return "CSHOP_ITEM193";
			}
			break;
		case 155:
			if (bParam1)
			{
				return "CSHOP_TITLE194";
			}
			else
			{
				return "CSHOP_ITEM194";
			}
			break;
		case 156:
			if (bParam1)
			{
				return "CSHOP_TITLE195";
			}
			else
			{
				return "CSHOP_ITEM195";
			}
			break;
		case 157:
			if (bParam1)
			{
				return "CSHOP_TITLE196";
			}
			else
			{
				return "CSHOP_ITEM196";
			}
			break;
		case 158:
			if (bParam1)
			{
				return "CSHOP_TITLE197";
			}
			else
			{
				return "CSHOP_ITEM197";
			}
			break;
		case 159:
			if (bParam1)
			{
				return "CSHOP_TITLE198";
			}
			else
			{
				return "CSHOP_ITEM198";
			}
			break;
		case 5:
			if (bParam1)
			{
				return "CSHOP_TITLE199";
			}
			else
			{
				return "CSHOP_ITEM199";
			}
			break;
		case 160:
			if (bParam1)
			{
				return "CSHOP_TITLE200";
			}
			else
			{
				return "CSHOP_ITEM200";
			}
			break;
		case 165:
			if (bParam1)
			{
				return "CSHOP_TITLE205";
			}
			else
			{
				return "CSHOP_ITEM205";
			}
			break;
		case 166:
			if (bParam1)
			{
				return "CSHOP_TITLE206";
			}
			else
			{
				return "CSHOP_ITEM206";
			}
			break;
		case 167:
			if (bParam1)
			{
				return "CSHOP_TITLE207";
			}
			else
			{
				return "CSHOP_ITEM207";
			}
			break;
		case 168:
			if (bParam1)
			{
				return "CSHOP_TITLE208";
			}
			else
			{
				return "CSHOP_ITEM208";
			}
			break;
		case 169:
			if (bParam1)
			{
				return "CSHOP_TITLE209";
			}
			else
			{
				return "CSHOP_ITEM209";
			}
			break;
		case 170:
			if (bParam1)
			{
				return "CSHOP_TITLE210";
			}
			else
			{
				return "CSHOP_ITEM210";
			}
			break;
		case 161:
			if (bParam1)
			{
				return "CSHOP_TITLE211";
			}
			else
			{
				return "CSHOP_ITEM211";
			}
			break;
		case 171:
			if (bParam1)
			{
				return "CSHOP_TITLE212";
			}
			else
			{
				return "CSHOP_ITEM212";
			}
			break;
		case 172:
			if (bParam1)
			{
				return "CSHOP_TITLE213";
			}
			else
			{
				return "CSHOP_ITEM213";
			}
			break;
		case 173:
			if (bParam1)
			{
				return "CSHOP_TITLE214";
			}
			else
			{
				return "CSHOP_ITEM214";
			}
			break;
		case 174:
			if (bParam1)
			{
				return "CSHOP_TITLE215";
			}
			else
			{
				return "CSHOP_ITEM215";
			}
			break;
		case 175:
			if (bParam1)
			{
				return "CSHOP_TITLE216";
			}
			else
			{
				return "CSHOP_ITEM216";
			}
			break;
		case 176:
			if (bParam1)
			{
				return "CSHOP_TITLE217" /* GXT: OUTFITS: SANTA COSTUMES */;
			}
			else
			{
				return "CSHOP_ITEM217" /* GXT: Outfits: Santa Costumes */;
			}
			break;
		case 177:
			if (bParam1)
			{
				return "CSHOP_TITLE218";
			}
			else
			{
				return "CSHOP_ITEM218";
			}
			break;
		case 178:
			if (bParam1)
			{
				return "CSHOP_TITLE219";
			}
			else
			{
				return "CSHOP_ITEM219";
			}
			break;
		case 179:
			if (bParam1)
			{
				return "CSHOP_TITLE220";
			}
			else
			{
				return "CSHOP_ITEM220";
			}
			break;
		case 180:
			if (bParam1)
			{
				return "CSHOP_TITLE221";
			}
			else
			{
				return "CSHOP_ITEM221";
			}
			break;
		case 181:
			if (bParam1)
			{
				return "CSHOP_TITLE222";
			}
			else
			{
				return "CSHOP_ITEM222";
			}
			break;
		case 182:
			if (bParam1)
			{
				return "CSHOP_TITLE223";
			}
			else
			{
				return "CSHOP_ITEM223";
			}
			break;
		case 183:
			if (bParam1)
			{
				return "CSHOP_TITLE224";
			}
			else
			{
				return "CSHOP_ITEM224";
			}
			break;
		case 184:
			if (bParam1)
			{
				return "CSHOP_TITLE225";
			}
			else
			{
				return "CSHOP_ITEM225";
			}
			break;
		case 185:
			if (bParam1)
			{
				return "CSHOP_TITLE226";
			}
			else
			{
				return "CSHOP_ITEM226";
			}
			break;
		case 186:
			if (bParam1)
			{
				return "CSHOP_TITLE227";
			}
			else
			{
				return "CSHOP_ITEM227";
			}
			break;
		case 187:
			if (bParam1)
			{
				return "CSHOP_TITLE228";
			}
			else
			{
				return "CSHOP_ITEM228";
			}
			break;
		case 188:
			if (bParam1)
			{
				return "CSHOP_TITLE229";
			}
			else
			{
				return "CSHOP_ITEM229";
			}
			break;
	}
	switch (iParam0)
	{
		case 189:
			if (bParam1)
			{
				return "CSHOP_TITLE230";
			}
			else
			{
				return "CSHOP_ITEM230";
			}
			break;
		case 190:
			if (bParam1)
			{
				return "CSHOP_TITLE231";
			}
			else
			{
				return "CSHOP_ITEM231";
			}
			break;
		case 191:
			if (bParam1)
			{
				return "CSHOP_TITLE232";
			}
			else
			{
				return "CSHOP_ITEM232";
			}
			break;
		case 192:
			if (bParam1)
			{
				return "CSHOP_TITLE233";
			}
			else
			{
				return "CSHOP_ITEM233";
			}
			break;
		case 193:
			if (bParam1)
			{
				return "CSHOP_TITLE234";
			}
			else
			{
				return "CSHOP_ITEM234";
			}
			break;
		case 194:
			if (bParam1)
			{
				return "CSHOP_TITLE235";
			}
			else
			{
				return "CSHOP_ITEM235";
			}
			break;
		case 195:
			if (bParam1)
			{
				return "CSHOP_TITLE236";
			}
			else
			{
				return "CSHOP_ITEM236";
			}
			break;
		case 196:
			if (__LIB_1__::func_783(PLAYER::PLAYER_ID()))
			{
				if (bParam1)
				{
					return "CSHOPTITLECA237";
				}
				else
				{
					return "CSHOPITEMCA237";
				}
			}
			else if (bParam1)
			{
				return "CSHOP_TITLE237";
			}
			else
			{
				return "CSHOP_ITEM237";
			}
			break;
		case 197:
			if (bParam1)
			{
				return "CSHOP_TITLE238";
			}
			else
			{
				return "CSHOP_ITEM238";
			}
			break;
		case 198:
			if (bParam1)
			{
				return "CSHOP_TITLE239";
			}
			else
			{
				return "CSHOP_ITEM239";
			}
			break;
		case 199:
			if (bParam1)
			{
				return "CSHOP_TITLE240";
			}
			else
			{
				return "CSHOP_ITEM240";
			}
			break;
		case 200:
			if (bParam1)
			{
				return "CSHOP_TITLE241";
			}
			else
			{
				return "CSHOP_ITEM241";
			}
			break;
		case 201:
			if (bParam1)
			{
				return "CSHOP_TITLE242";
			}
			else
			{
				return "CSHOP_ITEM242";
			}
			break;
		case 202:
			if (bParam1)
			{
				return "CSHOP_TITLE243";
			}
			else
			{
				return "CSHOP_ITEM243";
			}
			break;
		case 203:
			if (bParam1)
			{
				return "CSHOP_TITLE244";
			}
			else
			{
				return "CSHOP_ITEM244";
			}
			break;
		case 204:
			if (bParam1)
			{
				return "CSHOP_TITLE245";
			}
			else
			{
				return "CSHOP_ITEM245";
			}
			break;
		case 205:
			if (bParam1)
			{
				return "CSHOP_TITLE246";
			}
			else
			{
				return "CSHOP_ITEM246";
			}
			break;
		case 206:
			if (bParam1)
			{
				return "CSHOP_TITLE247";
			}
			else
			{
				return "CSHOP_ITEM247";
			}
			break;
		case 207:
			if (bParam1)
			{
				return "CSHOP_TITLE248";
			}
			else
			{
				return "CSHOP_ITEM248";
			}
			break;
		case 210:
			if (bParam1)
			{
				return "CSHOP_TITLE249";
			}
			else
			{
				return "CSHOP_ITEM249";
			}
			break;
		case 209:
			if (bParam1)
			{
				return "CSHOP_TITLE250";
			}
			else
			{
				return "CSHOP_ITEM250";
			}
			break;
		case 208:
			if (bParam1)
			{
				return "CSHOP_TITLE251";
			}
			else
			{
				return "CSHOP_ITEM251";
			}
			break;
		case 211:
			if (bParam1)
			{
				return "CSHOP_TITLE252";
			}
			else
			{
				return "CSHOP_ITEM252";
			}
			break;
		case 212:
			if (bParam1)
			{
				return "CSHOP_TITLE253";
			}
			else
			{
				return "CSHOP_ITEM253";
			}
			break;
		case 213:
			if (bParam1)
			{
				return "CSHOP_TITLE254";
			}
			else
			{
				return "CSHOP_ITEM254";
			}
			break;
		case 214:
			if (bParam1)
			{
				return "CSHOP_TITLE255";
			}
			else
			{
				return "CSHOP_ITEM255";
			}
			break;
		case 215:
			if (bParam1)
			{
				return "CSHOP_TITLE256";
			}
			else
			{
				return "CSHOP_ITEM256";
			}
			break;
		case 216:
			if (bParam1)
			{
				return "CSHOP_TITLE257";
			}
			else
			{
				return "CSHOP_ITEM257";
			}
			break;
		case 217:
			if (bParam1)
			{
				return "CSHOP_TITLE258";
			}
			else
			{
				return "CSHOP_ITEM258";
			}
			break;
		case 218:
			if (bParam1)
			{
				return "CSHOP_TITLE259";
			}
			else
			{
				return "CSHOP_ITEM259";
			}
			break;
		case 219:
			if (bParam1)
			{
				return "CSHOP_TITLE260";
			}
			else
			{
				return "CSHOP_ITEM260";
			}
			break;
		case 220:
			if (bParam1)
			{
				return "CSHOP_TITLE261";
			}
			else
			{
				return "CSHOP_ITEM261";
			}
			break;
		case 221:
			if (bParam1)
			{
				return "CSHOP_TITLE262";
			}
			else
			{
				return "CSHOP_ITEM262";
			}
			break;
		case 222:
			if (bParam1)
			{
				return "CSHOP_TITLE263";
			}
			else
			{
				return "CSHOP_ITEM263";
			}
			break;
		case 223:
			if (bParam1)
			{
				return "CSHOP_TITLE264";
			}
			else
			{
				return "CSHOP_ITEM264";
			}
			break;
		case 224:
			if (bParam1)
			{
				return "CSHOP_TITLE265";
			}
			else
			{
				return "CSHOP_ITEM265";
			}
			break;
		case 225:
			if (bParam1)
			{
				return "CSHOP_TITLE266";
			}
			else
			{
				return "CSHOP_ITEM266";
			}
			break;
		case 226:
			if (bParam1)
			{
				return "CSHOP_TITLE267";
			}
			else
			{
				return "CSHOP_ITEM267";
			}
			break;
		case 227:
			if (bParam1)
			{
				return "CSHOP_TITLE268";
			}
			else
			{
				return "CSHOP_ITEM268";
			}
			break;
		case 228:
			if (bParam1)
			{
				return "CSHOP_TITLE269";
			}
			else
			{
				return "CSHOP_ITEM269";
			}
			break;
		case 229:
			if (bParam1)
			{
				return "CSHOP_TITLE270";
			}
			else
			{
				return "CSHOP_ITEM270";
			}
			break;
		case 230:
			if (bParam1)
			{
				return "CSHOP_TITLE271";
			}
			else
			{
				return "CSHOP_ITEM271";
			}
			break;
		case 231:
			if (bParam1)
			{
				return "CSHOP_TITLE272";
			}
			else
			{
				return "CSHOP_ITEM272";
			}
			break;
		case 232:
			if (bParam1)
			{
				return "CSHOP_TITLE273";
			}
			else
			{
				return "CSHOP_ITEM273";
			}
			break;
		case 233:
			if (bParam1)
			{
				return "CSHOP_TITLE274";
			}
			else
			{
				return "CSHOP_ITEM274";
			}
			break;
		case 234:
			if (bParam1)
			{
				return "CSHOP_TITLE275";
			}
			else
			{
				return "CSHOP_ITEM275";
			}
			break;
		case 235:
			if (bParam1)
			{
				return "CSHOP_TITLE276";
			}
			else
			{
				return "CSHOP_ITEM276";
			}
			break;
		case 236:
			if (bParam1)
			{
				return "CSHOP_TITLE277";
			}
			else
			{
				return "CSHOP_ITEM277";
			}
			break;
		case 237:
			if (bParam1)
			{
				return "CSHOP_TITLE278";
			}
			else
			{
				return "CSHOP_ITEM278";
			}
			break;
		case 238:
			if (bParam1)
			{
				return "CSHOP_TITLE279";
			}
			else
			{
				return "CSHOP_ITEM279";
			}
			break;
		case 239:
			if (bParam1)
			{
				return "CSHOP_TITLE280";
			}
			else
			{
				return "CSHOP_ITEM280";
			}
			break;
		case 247:
			if (bParam1)
			{
				return "CSHOP_TITLE281";
			}
			else
			{
				return "CSHOP_ITEM281" /* GXT: Outfits: Vinewood */;
			}
			break;
		case 248:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE3";
				}
				return "CSHOP_TITLE282";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM3";
				}
				return "CSHOP_ITEM282" /* GXT: Casino T-Shirts */;
			}
			break;
		case 249:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE207";
				}
				return "CSHOP_TITLE283";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM207";
				}
				return "CSHOP_ITEM283" /* GXT: Casino Bomber Jackets */;
			}
			break;
		case 250:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE247";
				}
				return "CSHOP_TITLE284";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM247";
				}
				return "CSHOP_ITEM284" /* GXT: Casino Sports Jackets */;
			}
			break;
		case 251:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE210";
				}
				return "CSHOP_TITLE285";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM210";
				}
				return "CSHOP_ITEM285" /* GXT: Casino Sweaters */;
			}
			break;
		case 252:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE5";
				}
				return "CSHOP_TITLE286";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM5";
				}
				return "CSHOP_ITEM286" /* GXT: Casino Hoodies */;
			}
			break;
		case 253:
			if (bParam1)
			{
				return "CSHOP_TITLE287";
			}
			else
			{
				return "CSHOP_ITEM287" /* GXT: Casino Pants */;
			}
			break;
		case 254:
			if (bParam1)
			{
				return "CSHOP_TITLE288";
			}
			else
			{
				return "CSHOP_ITEM288" /* GXT: Casino Shoes */;
			}
			break;
		case 255:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE40";
				}
				return "CSHOP_TITLE289";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM40";
				}
				return "CSHOP_ITEM289" /* GXT: Casino Hats */;
			}
			break;
		case 163:
			if (bParam1)
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_TITLE42";
				}
				return "CSHOP_TITLE290";
			}
			else
			{
				if (__LIB_1__::func_783(PLAYER::PLAYER_ID()) && !bParam3)
				{
					return "CSHOP_ITEM42";
				}
				return "CSHOP_ITEM290" /* GXT: Casino Glasses */;
			}
			break;
		case 164:
			if (bParam1)
			{
				return "CSHOP_TITLE291";
			}
			else
			{
				return "CSHOP_ITEM291" /* GXT: Special Glasses */;
			}
			break;
		case 240:
			if (bParam1)
			{
				return "CSHOP_TITLE292";
			}
			else
			{
				return "CSHOP_ITEM292";
			}
			break;
		case 241:
			if (bParam1)
			{
				return "CSHOP_TITLE293";
			}
			else
			{
				return "CSHOP_ITEM293";
			}
			break;
		case 242:
			if (bParam1)
			{
				return "CSHOP_TITLE294";
			}
			else
			{
				return "CSHOP_ITEM294";
			}
			break;
		case 162:
			if (bParam1)
			{
				return "CSHOP_TITLE295";
			}
			else
			{
				return "CSHOP_ITEM295";
			}
			break;
		case 243:
			if (bParam1)
			{
				return "CSHOP_TITLE296";
			}
			else
			{
				return "CSHOP_ITEM296";
			}
			break;
		case 244:
			if (bParam1)
			{
				return "CSHOP_TITLE297";
			}
			else
			{
				return "CSHOP_ITEM297";
			}
			break;
		case 245:
			if (bParam1)
			{
				return "CSHOP_TITLE298";
			}
			else
			{
				return "CSHOP_ITEM298";
			}
			break;
		case 246:
			if (bParam1)
			{
				return "CSHOP_TITLE299";
			}
			else
			{
				return "CSHOP_ITEM299";
			}
			break;
		case 256:
			if (bParam1)
			{
				return "CSHOP_TITLE300";
			}
			else
			{
				return "CSHOP_ITEM300";
			}
			break;
		case 257:
			if (bParam1)
			{
				return "CSHOP_TITLE301";
			}
			else
			{
				return "CSHOP_ITEM301";
			}
			break;
		case 258:
			if (bParam1)
			{
				return "CSHOP_TITLE302";
			}
			else
			{
				return "CSHOP_ITEM302";
			}
			break;
		case 259:
			if (bParam1)
			{
				return "CSHOP_TITLE303";
			}
			else
			{
				return "CSHOP_ITEM303";
			}
			break;
		case 260:
			if (bParam1)
			{
				return "CSHOP_TITLE304";
			}
			else
			{
				return "CSHOP_ITEM304";
			}
			break;
		case 261:
			if (bParam1)
			{
				return "CSHOP_TITLE305";
			}
			else
			{
				return "CSHOP_ITEM305";
			}
			break;
		case 262:
			if (bParam1)
			{
				return "CSHOP_TITLE306";
			}
			else
			{
				return "CSHOP_ITEM306";
			}
			break;
		case 265:
			if (bParam1)
			{
				return "CSHOP_TITLE309";
			}
			else
			{
				return "CSHOP_ITEM309";
			}
			break;
		case 266:
			if (bParam1)
			{
				return "CSHOP_TITLE310";
			}
			else
			{
				return "CSHOP_ITEM310";
			}
			break;
		case 267:
			if (bParam1)
			{
				return "CSHOP_TITLE311";
			}
			else
			{
				return "CSHOP_ITEM311";
			}
			break;
		case 268:
			if (bParam1)
			{
				return "CSHOP_TITLE312";
			}
			else
			{
				return "CSHOP_ITEM312";
			}
			break;
		case 269:
			if (bParam1)
			{
				return "CSHOP_TITLE313";
			}
			else
			{
				return "CSHOP_ITEM313";
			}
			break;
		case 270:
			if (bParam1)
			{
				return "CSHOP_TITLE314";
			}
			else
			{
				return "CSHOP_ITEM314";
			}
			break;
		case 271:
			if (bParam1)
			{
				return "CSHOP_TITLE315";
			}
			else
			{
				return "CSHOP_ITEM315";
			}
			break;
		case 272:
			if (bParam1)
			{
				return "CSHOP_TITLE316";
			}
			else
			{
				return "CSHOP_ITEM316";
			}
			break;
	}
	return "INVALID_MENU";
}

void func_819(var uParam0, int iParam1)//Position - 0x8C695
{
	if (*uParam0 == iParam1 && uParam0->f_7)
	{
		__LIB_13__::func_836("Unable to lock shop doors as player is inside the shop.", -1);
	}
	else
	{
		__LIB_15__::func_884(iParam1, 1, 0);
	}
	__LIB_14__::func_470(iParam1, 0);
	__LIB_14__::func_453(iParam1, 0);
	__LIB_2__::func_943(iParam1, 1, 1);
	__LIB_2__::func_943(iParam1, 10, 1);
	__LIB_2__::func_943(iParam1, 11, 1);
	__LIB_2__::func_943(iParam1, 12, 1);
	__LIB_2__::func_943(iParam1, 13, 1);
	__LIB_2__::func_943(iParam1, 22, 1);
	__LIB_2__::func_943(iParam1, 25, 1);
	if (uParam0->f_1 == 1)
	{
		__LIB_2__::func_943(iParam1, 19, 1);
	}
	if (!__LIB_15__::func_117(iParam1))
	{
		__LIB_13__::func_836("Letting shop controller know to relaunch when in range.", -1);
		__LIB_2__::func_911(iParam1, 17, 1);
	}
	__LIB_1__::func_714(iParam1);
	__LIB_15__::func_693(iParam1);
	__LIB_14__::func_359(PLAYER::PLAYER_ID(), iParam1);
	__LIB_13__::func_617();
	if (__LIB_14__::func_311(iParam1))
	{
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_12) && !PED::IS_PED_INJURED(uParam0->f_12))
		{
			if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(uParam0->f_12))
			{
				PED::SET_PED_KEEP_TASK(uParam0->f_12, true);
			}
		}
	}
	else
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(PLAYER::PLAYER_PED_ID());
		}
		if (__LIB_16__::func_571(uParam0, iParam1))
		{
			if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_12))
			{
				PED::DELETE_PED(&(uParam0->f_12));
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_12))
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&(uParam0->f_12));
		}
	}
}

void func_820(int iParam0, int iParam1, var uParam2, float fParam3)//Position - 0x6AFEE
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	int iVar5;
	if ((((iParam0 <= 0 || PLAYER::PLAYER_ID() == __LIB_0__::func_162()) || Global_262145.f_31078 /* Tunable: -1782032913 */) || __LIB_9__::func_128() >= __LIB_13__::func_688()) || !__LIB_1__::func_687(PLAYER::PLAYER_ID()))
	{
		return;
	}
	if (fParam3 != 1f)
	{
		iParam0 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iParam0) * fParam3));
	}
	iVar0 = __LIB_9__::func_128();
	iVar1 = __LIB_9__::func_127(iVar0);
	iVar2 = (iVar0 + iParam0);
	iVar3 = __LIB_13__::func_688();
	if (iVar2 > iVar3)
	{
		iVar2 = iVar3;
	}
	bVar4 = false;
	iVar5 = __LIB_9__::func_127(iVar2);
	if (iVar5 > iVar1)
	{
		bVar4 = true;
	}
	__LIB_1__::func_354(9834, iVar2, -1, 1, 0);
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_476.f_1 = iVar2;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_476.f_2 = iVar5;
	__LIB_14__::func_456(iParam0, iVar5, bVar4, iParam1, uParam2);
	__LIB_1__::func_875(107, iVar5, -1);
	if (bVar4)
	{
		__LIB_31__::func_872(iVar1, iVar5);
	}
}

void func_821(int iParam0, int iParam1)//Position - 0x8029
{
	if (iParam1 == -1)
	{
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (Local_125[iParam0 /*3*/].f_2)
		{
			Local_125[iParam0 /*3*/].f_2 = 0;
			Local_125[iParam0 /*3*/].f_1 = 0;
		}
	}
}

void func_822(var uParam0, int iParam1)//Position - 0x3E87D
{
	if (iParam1 == 1)
	{
		if (!ENTITY::DOES_ENTITY_EXIST(uParam0->f_526))
		{
			uParam0->f_526 = OBJECT::CREATE_OBJECT(joaat("p_cs_scissors_s"), uParam0->f_12.f_6, false, false, false);
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_526))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_526));
	}
}

var func_823(var uParam0, int iParam1)//Position - 0x3E8C9
{
	if (iParam1 == 1)
	{
		return uParam0->f_446.f_15;
	}
	return uParam0->f_12.f_15;
}

Vector3 func_824(var uParam0, int iParam1)//Position - 0x3E8EA
{
	if (iParam1 == 1)
	{
		return uParam0->f_446.f_6;
	}
	return uParam0->f_12.f_6;
}

var func_825(var uParam0, int iParam1)//Position - 0x3E90F
{
	if (iParam1 == 1)
	{
		return uParam0->f_446;
	}
	return uParam0->f_12;
}

int func_826(var uParam0)//Position - 0x3F9AC
{
	if (uParam0->f_638 && uParam0->f_525 == 6)
	{
		return 1;
	}
	return 0;
}

int func_827(int iParam0)//Position - 0x46281
{
	switch (iParam0)
	{
		case 2086722024:
			return 0;
			break;
		case -1911587515:
			return 1;
			break;
		case -1882357567:
			return 2;
			break;
		case -969019995:
			return 3;
			break;
		case -411291615:
			return 4;
			break;
		case -82979004:
			return 5;
			break;
		case 218692410:
			return 6;
			break;
		case 511680047:
			return 7;
			break;
		case 558867407:
			return 8;
			break;
		case 808796570:
			return 9;
			break;
		case -1605550121:
			return 10;
			break;
		case -1378886948:
			return 11;
			break;
		case -1142819072:
			return 12;
			break;
		case -899836937:
			return 13;
			break;
		case 1454746793:
			return 14;
			break;
		case 1677117227:
			return 15;
			break;
		case 1931240822:
			return 16;
			break;
		case -2125331999:
			return 17;
			break;
		case -2146762937:
			return 18;
			break;
		case -1919575460:
			return 19;
			break;
		case 1867669166:
			return 20;
			break;
		case 1562425931:
			return 21;
			break;
		case 1271240597:
			return 22;
			break;
		case -43115055:
			return 23;
			break;
		case -1731373935:
			return 24;
			break;
		case -1422100113:
			return 25;
			break;
		case -463508556:
			return 26;
			break;
		case -963301344:
			return 27;
			break;
		case 2063210751:
			return 28;
			break;
		case -2003094463:
			return 29;
			break;
		case -1888632346:
			return 30;
			break;
		case -1384776202:
			return 31;
			break;
		case 1107568404:
			return 32;
			break;
		case -412069578:
			return 33;
			break;
		case 1236833733:
			return 34;
			break;
		case 2004250944:
			return 35;
			break;
		case 544883529:
			return 36;
			break;
		case 1446293181:
			return 37;
			break;
		case -1964074960:
			return 38;
			break;
		case -1565538382:
			return 39;
			break;
		case 1752814407:
			return 40;
			break;
		case -1662501853:
			return 41;
			break;
		case -1216122527:
			return 42;
			break;
		case 1668958248:
			return 43;
			break;
		case 813687348:
			return 44;
			break;
		case 1121027799:
			return 45;
			break;
		case -1437018652:
			return 46;
			break;
		case -1133250022:
			return 47;
			break;
		case 1974922401:
			return 48;
			break;
		case -1751830435:
			return 49;
			break;
		case -737105609:
			return 50;
			break;
		case -1044282215:
			return 51;
			break;
		case 128880754:
			return 52;
			break;
		case -1214833480:
			return 53;
			break;
		case -853522486:
			return 54;
			break;
		case -1811655273:
			return 55;
			break;
		case -1040961166:
			return 56;
			break;
		case 1888456366:
			return 57;
			break;
		case -1639552485:
			return 58;
			break;
		case 1348226632:
			return 59;
			break;
		case 2125933309:
			return 60;
			break;
		case 754026355:
			return 61;
			break;
		case 1526948758:
			return 62;
			break;
		case -902969915:
			return 63;
			break;
		case -69457631:
			return 64;
			break;
		case -312701918:
			return 65;
			break;
		case 824579000:
			return 66;
			break;
		case 585856831:
			return 67;
			break;
		case 1226458016:
			return 68;
			break;
		case 987998003:
			return 69;
			break;
		case 1819413071:
			return 70;
			break;
		case 1583246888:
			return 71;
			break;
		case -1577847470:
			return 72;
			break;
		case -2026650806:
			return 73;
			break;
		case -1429665160:
			return 74;
			break;
		case -1185994876:
			return 75;
			break;
		case -2142554759:
			return 76;
			break;
		case -589631845:
			return 77;
			break;
		case -1637322333:
			return 78;
			break;
		case -1876568802:
			return 79;
			break;
		case -851292326:
			return 80;
			break;
		case 1859818120:
			return 81;
			break;
		case -1515880415:
			return 82;
			break;
		case -432930795:
			return 83;
			break;
		case 796201630:
			return 84;
			break;
		case 1170095920:
			return 85;
			break;
		case 1259981287:
			return 86;
			break;
		case 1632499279:
			return 87;
			break;
		case -1208917743:
			return 88;
			break;
		case -1245356871:
			return 89;
			break;
		case -567923298:
			return 90;
			break;
		case -932249040:
			return 91;
			break;
		case -221587773:
			return 92;
			break;
		case -845116305:
			return 93;
			break;
		case 381918900:
			return 94;
			break;
		case 83032851:
			return 95;
			break;
		case 705709389:
			return 96;
			break;
		case 410559006:
			return 97;
			break;
		case -850926612:
			return 98;
			break;
		case -1093056753:
			return 99;
			break;
		case 1258643301:
			return 100;
			break;
		case 865874067:
			return 101;
			break;
		case 627151902:
			return 102;
			break;
		case -2142352902:
			return 103;
			break;
		case -407070503:
			return 104;
			break;
		case 1502608510:
			return 105;
			break;
		case 827528886:
			return 106;
			break;
		case -781461791:
			return 107;
			break;
		case -474875027:
			return 108;
			break;
		case -1242030086:
			return 109;
			break;
		case 137348200:
			return 110;
			break;
		case -2121779449:
			return 111;
			break;
		case 1876005786:
			return 112;
			break;
		case -1641844675:
			return 113;
			break;
		case -1939452733:
			return 114;
			break;
		case 1595175476:
			return 115;
			break;
		case 1888141884:
			return 116;
			break;
		case 859096981:
			return 117;
			break;
		case 551756530:
			return 118;
			break;
		case 1439272126:
			return 119;
			break;
		case 1158474565:
			return 120;
			break;
		case -109358053:
			return 121;
			break;
		case -406605652:
			return 122;
			break;
		case 509746672:
			return 123;
			break;
		case 244809299:
			return 124;
			break;
		case -651750537:
			return 125;
			break;
		case 1816410231:
			return 126;
			break;
		case -2059015562:
			return 127;
			break;
		case 1945094090:
			return 128;
			break;
		case -1458261485:
			return 129;
			break;
		case -1755738467:
			return 130;
			break;
		case -846234872:
			return 131;
			break;
		case -1144170620:
			return 132;
			break;
		case -251641367:
			return 133;
			break;
		case -566158229:
			return 134;
			break;
		case -859506285:
			return 135;
			break;
		case 1823490339:
			return 136;
			break;
		case -2074414980:
			return 137;
			break;
		case 748741188:
			return 138;
			break;
		case 664000554:
			return 139;
			break;
		case 374125980:
			return 140;
			break;
		case 1933864846:
			return 141;
			break;
		case 1620822589:
			return 142;
			break;
		case 1304536201:
			return 143;
			break;
		case 1024459558:
			return 144;
			break;
		case -1167196704:
			return 145;
			break;
		case -1484564469:
			return 146;
			break;
		case -1728267522:
			return 147;
			break;
		case -2059818253:
			return 148;
			break;
		case 1995902574:
			return 149;
			break;
		case 1639965688:
			return 150;
			break;
		case 1397114629:
			return 151;
			break;
		case -1985437042:
			return 152;
			break;
		case 2060125395:
			return 153;
			break;
		case 1845619521:
			return 154;
			break;
		case 1352314995:
			return 155;
			break;
		case 1121916156:
			return 156;
			break;
		case 890173784:
			return 157;
			break;
		case 646995035:
			return 158;
			break;
		case 885782742:
			return 159;
			break;
		case 645225513:
			return 160;
			break;
		case 173548527:
			return 161;
			break;
		case -421803070:
			return 162;
			break;
		case 1299978497:
			return 163;
			break;
		case 1529427035:
			return 164;
			break;
		case 342566624:
			return 165;
			break;
		case 575062679:
			return 166;
			break;
		case -2035840169:
			return 167;
			break;
		case -1807833467:
			return 168;
			break;
		case 1762447394:
			return 169;
			break;
		case 2001923246:
			return 170;
			break;
		case 178590600:
			return 171;
			break;
		case 1262851572:
			return 172;
			break;
		case 537411450:
			return 173;
			break;
		case 785046783:
			return 174;
			break;
		case -2080536733:
			return 175;
			break;
		case -1640317987:
			return 176;
			break;
		case 1737477768:
			return 177;
			break;
		case 162597385:
			return 178;
			break;
		case 223154493:
			return 179;
			break;
		case 2140763608:
			return 180;
			break;
		case 1886967703:
			return 181;
			break;
		case 1237289509:
			return 182;
			break;
		case -1236704457:
			return 183;
			break;
		case -1467824214:
			return 184;
			break;
		case -1595623314:
			return 185;
			break;
		case -1829299053:
			return 186;
			break;
		case -1581270496:
			return 187;
			break;
		case -736238561:
			return 188;
			break;
	}
	switch (iParam0)
	{
		case 1479840145:
			return 189;
			break;
		case 356387741:
			return 190;
			break;
		case 653766416:
			return 191;
			break;
		case -1922761743:
			return 192;
			break;
		case -1625383068:
			return 193;
			break;
		case 1758409414:
			return 194;
			break;
		case 2048251219:
			return 195;
			break;
		case -1001100849:
			return 196;
			break;
		case -711848886:
			return 197;
			break;
		case -1614503760:
			return 198;
			break;
		case -1060874703:
			return 199;
			break;
		case -1669067343:
			return 200;
			break;
		case -1505615571:
			return 201;
			break;
		case -136756130:
			return 202;
			break;
		case 1503430607:
			return 203;
			break;
		case 1909897283:
			return 204;
			break;
		case -1005003578:
			return 205;
			break;
		case -734266100:
			return 206;
			break;
		case 1360852708:
			return 207;
			break;
		case 729066388:
			return 208;
			break;
		case 914374215:
			return 209;
			break;
		case 558502875:
			return 210;
			break;
		case -1591241840:
			return 211;
			break;
		case -1827014795:
			return 212;
			break;
		case -876282585:
			return 213;
			break;
		case -1180870440:
			return 214;
			break;
		case -1502662020:
			return 215;
			break;
		case -1785163569:
			return 216;
			break;
		case 80113449:
			return 217;
			break;
		case -216740922:
			return 218;
			break;
		case -533027310:
			return 219;
			break;
		case -829553991:
			return 220;
			break;
		case -531257788:
			return 221;
			break;
		case -827784469:
			return 222;
			break;
		case 744660972:
			return 223;
			break;
		case 899625573:
			return 224;
			break;
		case 266299110:
			return 225;
			break;
		case -1641282671:
			return 226;
			break;
		case -195383331:
			return 227;
			break;
		case 33245982:
			return 228;
			break;
		case -686033552:
			return 229;
			break;
		case 1700172263:
			return 230;
			break;
		case -1163314037:
			return 231;
			break;
		case -939239615:
			return 232;
			break;
		case -1579861681:
			return 233;
			break;
		case -1237032403:
			return 234;
			break;
		case 1942740285:
			return 235;
			break;
		case 558544952:
			return 236;
			break;
		case 1335891174:
			return 237;
			break;
		case 2129064819:
			return 238;
			break;
		case -699850186:
			return 239;
			break;
		case -864874870:
			return 240;
			break;
		case 333978995:
			return 241;
			break;
		case 1109522918:
			return 242;
			break;
		case -635535959:
			return 243;
			break;
		case -966961625:
			return 244;
			break;
		case -595983772:
			return 245;
			break;
		case 1319397047:
			return 246;
			break;
		case 15059771:
			return 247;
			break;
		case -679880450:
			return 248;
			break;
		case -1968193685:
			return 249;
			break;
		case 1656811402:
			return 250;
			break;
		case 1409143300:
			return 251;
			break;
		case 1047930613:
			return 252;
			break;
		case 834145657:
			return 253;
			break;
		case 1301103915:
			return 254;
			break;
		case 5679807:
			return 255;
			break;
		case 1241824794:
			return 256;
			break;
		case 1558963176:
			return 257;
			break;
		case 1466156191:
			return 258;
			break;
		case 1713299989:
			return 259;
			break;
		case 1415036551:
			return 260;
			break;
		case 1153834856:
			return 261;
			break;
		case 1360836629:
			return 262;
			break;
		case -1622780825:
			return 263;
			break;
		case -1374686726:
			return 264;
			break;
		case 2040629534:
			return 265;
			break;
		case -1973146973:
			return 266;
			break;
		case -657864855:
			return 267;
			break;
		case 1377860065:
			return 268;
			break;
		case 113042203:
			return 269;
			break;
		case -712703828:
			return 270;
			break;
		case 200109448:
			return 271;
			break;
		case -705035870:
			return 272;
			break;
		case -1340787251:
			return 273;
			break;
		case -107624231:
			return 274;
			break;
		case -784730090:
			return 275;
			break;
		case -1628925068:
			return 276;
			break;
		case 1496156159:
			return 277;
			break;
		case -1247690782:
			return 278;
			break;
		case -1569777283:
			return 279;
			break;
		case 1939083358:
			return 280;
			break;
		case -2050050861:
			return 281;
			break;
		case -1086019650:
			return 282;
			break;
		case -796734918:
			return 283;
			break;
		case -2051001154:
			return 284;
			break;
		case -1753327558:
			return 285;
			break;
		case -778482577:
			return 286;
			break;
		case -487919854:
			return 287;
			break;
		case 1063167984:
			return 288;
			break;
		case 1352190564:
			return 289;
			break;
		case 1918883225:
			return 290;
			break;
		case 2140499972:
			return 291;
			break;
		case -1622298764:
			return 292;
			break;
		case -1384887359:
			return 293;
			break;
		case -1451684059:
			return 294;
			break;
		case -675288142:
			return 295;
			break;
		case -984234274:
			return 296;
			break;
		case -258728614:
			return 297;
			break;
		case 516356543:
			return 298;
			break;
		case 200791073:
			return 299;
			break;
		case 976334996:
			return 300;
			break;
		case 743642327:
			return 301;
			break;
		case 1511583842:
			return 302;
			break;
		case 1238290382:
			return 303;
			break;
		case -587327163:
			return 304;
			break;
		case -1009457421:
			return 305;
			break;
		case 1852062739:
			return 306;
			break;
		case 1561958782:
			return 307;
			break;
		case -1779135693:
			return 308;
			break;
		case 2022396001:
			return 309;
			break;
		case -1277868344:
			return 310;
			break;
		case -1046224283:
			return 311;
			break;
		case -1992232544:
			return 312;
			break;
		case -1511904542:
			return 313;
			break;
		case 338954980:
			return 314;
			break;
		case 644853595:
			return 315;
			break;
		case 928043293:
			return 316;
			break;
		case 1233483142:
			return 317;
			break;
		case 455547074:
			return 318;
			break;
		case 753187901:
			return 319;
			break;
		case -1381379572:
			return 320;
			break;
		case -978746865:
			return 321;
			break;
		case 946792344:
			return 322;
			break;
		case -366195948:
			return 323;
			break;
		case -722394978:
			return 324;
			break;
		case 216207489:
			return 325;
			break;
		case 2124706822:
			return 326;
			break;
		case 832559610:
			return 327;
			break;
		case -791212145:
			return 328;
			break;
		case 1426003941:
			return 329;
			break;
		case -2062125037:
			return 330;
			break;
		case 2002508958:
			return 331;
			break;
		case -1983118982:
			return 332;
			break;
		case 825938009:
			return 333;
			break;
		case 1670231294:
			return 334;
			break;
		case 1439144306:
			return 335;
			break;
		case -2008613264:
			return 336;
			break;
		case 137657929:
			return 337;
			break;
		case 850282205:
			return 338;
			break;
	}
	switch (iParam0)
	{
		case 964358912:
			return 339;
			break;
		case -1735315153:
			return 340;
			break;
		case -2034102895:
			return 341;
			break;
		case 1999400550:
			return 342;
			break;
		case 1839705233:
			return 343;
			break;
		case 1466269709:
			return 344;
			break;
		case -469722811:
			return 345;
			break;
		case -692060480:
			return 346;
			break;
		case 1034427337:
			return 347;
			break;
		case 773946556:
			return 348;
			break;
		case 332646433:
			return 349;
			break;
		case 101002372:
			return 350;
			break;
		case -259915394:
			return 351;
			break;
		case -491231765:
			return 352;
			break;
		case 1624727807:
			return 353;
			break;
		case 1920336964:
			return 354;
			break;
		case -1998999285:
			return 355;
			break;
		case -1691200068:
			return 356;
			break;
		case -1249146258:
			return 357;
			break;
		case -942723339:
			return 358;
			break;
		case -693318480:
			return 359;
			break;
		case -465836082:
			return 360;
			break;
		case -214792773:
			return 361;
			break;
		case 209893467:
			return 362;
			break;
		case -163640692:
			return 363;
			break;
		case 2012777989:
			return 364;
			break;
		case 1782084221:
			return 365;
			break;
		case 1532613824:
			return 366;
			break;
		case 1318894406:
			return 367;
			break;
		case -818529153:
			return 368;
			break;
		case -1578376725:
			return 369;
			break;
		case -1832828010:
			return 370;
			break;
		case -2072074479:
			return 371;
			break;
		case 107719401:
			return 372;
			break;
		case 1090494188:
			return 373;
			break;
		case -1065738777:
			return 374;
			break;
		case -841762662:
			return 375;
			break;
		case -1694870808:
			return 376;
			break;
		case 689718031:
			return 377;
			break;
		case 1188920977:
			return 378;
			break;
		case 1425414854:
			return 379;
			break;
		case 1680914747:
			return 380;
			break;
		case -1397044638:
			return 381;
			break;
		case -1202658930:
			return 382;
			break;
		case -2077294849:
			return 383;
			break;
		case 1871566269:
			return 384;
			break;
		case -638735717:
			return 385;
			break;
		case -885912284:
			return 386;
			break;
		case 911795056:
			return 387;
			break;
		case 680937451:
			return 388;
			break;
		case -1507671294:
			return 389;
			break;
		case -1734596619:
			return 390;
			break;
		case -1832969157:
			return 391;
			break;
		case -53415839:
			return 392;
			break;
		case 646954998:
			return 393;
			break;
		case -404995440:
			return 394;
			break;
		case -92411949:
			return 395;
			break;
		case -894465993:
			return 396;
			break;
		case 1287195724:
			return 397;
			break;
		case 790876446:
			return 398;
			break;
		case 1070035557:
			return 399;
			break;
		case 301242048:
			return 400;
			break;
		case 1741013601:
			return 401;
			break;
		case 2044421772:
			return 402;
			break;
		case -1643561644:
			return 403;
			break;
		case -2018242390:
			return 404;
			break;
		case 561169449:
			return 405;
			break;
		case 444970575:
			return 406;
			break;
		case 1702284027:
			return 407;
			break;
		case -514538827:
			return 408;
			break;
		case -807559225:
			return 409;
			break;
		case -1056910526:
			return 410;
			break;
		case -1286391833:
			return 411;
			break;
		case 1010978731:
			return 412;
			break;
		case -278296374:
			return 413;
			break;
		case 1628302349:
			return 414;
			break;
		case 1422447491:
			return 415;
			break;
		case 1174910465:
			return 416;
			break;
		case 907351580:
			return 417;
			break;
		case -1471350134:
			return 418;
			break;
		case 492573151:
			return 419;
			break;
		case -1903922134:
			return 420;
			break;
		case 2146031349:
			return 421;
			break;
		case 1931984241:
			return 422;
			break;
		case 1432846833:
			return 423;
			break;
		case -953555596:
			return 423;
			break;
		case -1233304549:
			return 423;
			break;
		case -1700569289:
			return 424;
			break;
		case 1799422067:
			return 425;
			break;
		case -1452856849:
			return 426;
			break;
		case -1678668028:
			return 427;
			break;
		case -297200608:
			return 428;
			break;
		case 1917066264:
			return 429;
			break;
		case -2114733193:
			return 430;
			break;
		case 1601646962:
			return 431;
			break;
		case 1361941727:
			return 432;
			break;
		case 1796589743:
			return 433;
			break;
		case -1668568166:
			return 434;
			break;
		case -1908470015:
			return 435;
			break;
		case -1204722971:
			return 436;
			break;
		case -1444166054:
			return 437;
			break;
		case -1083477643:
			return 438;
			break;
		case -1319381674:
			return 439;
			break;
		case -866579660:
			return 440;
			break;
		case -151756966:
			return 441;
			break;
		case 423011294:
			return 442;
			break;
		case 159450227:
			return 443;
			break;
		case 1002989825:
			return 444;
			break;
		case 773705132:
			return 445;
			break;
		case 1020488435:
			return 446;
			break;
		case 778620446:
			return 447;
			break;
		case 1962433344:
			return 448;
			break;
		case 1733476341:
			return 449;
			break;
		case -2020802455:
			return 450;
			break;
		case 770231294:
			return 451;
			break;
		case 1612460136:
			return 452;
			break;
		case 1309412424:
			return 453;
			break;
		case 832559610:
			return 455;
			break;
		case 592919913:
			return 456;
			break;
		case 2030987546:
			return 457;
			break;
		case -1750454803:
			return 458;
			break;
		case -2133000109:
			return 459;
			break;
		case 238099193:
			return 460;
			break;
		case -1737118:
			return 461;
			break;
		case -359443522:
			return 462;
			break;
		case -598689991:
			return 463;
			break;
		case 618809439:
			return 464;
			break;
		case 388017372:
			return 465;
			break;
		case 66225792:
			return 466;
			break;
		case -214047465:
			return 467;
			break;
		case -1287625671:
			return 468;
			break;
		case -1643038245:
			return 469;
			break;
		case 424882269:
			return 470;
			break;
		case -343911240:
			return 471;
			break;
		case -53479593:
			return 472;
			break;
		case -956003391:
			return 473;
			break;
		case 1651163783:
			return 474;
			break;
		case 1959028538:
			return 475;
			break;
		case 1576286618:
			return 476;
			break;
		case 809918015:
			return 477;
			break;
		case -699848470:
			return 478;
			break;
		case -938963863:
			return 479;
			break;
		case -1396746805:
			return 480;
			break;
		case -617521066:
			return 481;
			break;
		case -1537104552:
			return 482;
			break;
		case -1438584459:
			return 483;
			break;
		case -1184165951:
			return 484;
			break;
		case -951538820:
			return 485;
			break;
		case -1796389178:
			return 486;
			break;
		case -1564482965:
			return 487;
			break;
		case 571695376:
			return 488;
			break;
		case -1350988574:
			return 489;
			break;
		case -527667449:
			return 490;
			break;
		case 990258165:
			return 491;
			break;
		case 1290804003:
			return 492;
			break;
		case 1059618708:
			return 493;
			break;
		case 234888640:
			return 494;
			break;
		case -89557357:
			return 495;
			break;
		case 697291999:
			return 496;
			break;
		case 389820472:
			return 497;
			break;
		case 1917084907:
			return 498;
			break;
		case 1551055177:
			return 499;
			break;
		case -1765855776:
			return 500;
			break;
		case -848116519:
			return 501;
			break;
		case 2129418862:
			return 502;
			break;
	}
	switch (iParam0)
	{
		case 741836376:
			return 503;
			break;
		case -173729484:
			return 504;
			break;
		case 668204433:
			return 505;
			break;
		case -2128891869:
			return 506;
			break;
		case 1936790734:
			return 507;
			break;
		case 1555523415:
			return 508;
			break;
		case 1310804523:
			return 509;
			break;
		case 205374789:
			return 510;
			break;
		case -1187045551:
			return 511;
			break;
		case -948126772:
			return 512;
			break;
		case -1800186310:
			return 513;
			break;
		case -1562774905:
			return 514;
			break;
		case -266826481:
			return 515;
			break;
		case -35510110:
			return 516;
			break;
		case -2095774068:
			return 517;
			break;
		case 628050754:
			return 518;
			break;
		case 389656279:
			return 519;
			break;
		case 1209274507:
			return 520;
			break;
		case 971338798:
			return 521;
			break;
		case -1219727614:
			return 522;
			break;
		case -980481145:
			return 523;
			break;
		case 1677446030:
			return 524;
			break;
		case -1779191939:
			return 525;
			break;
		case 260481701:
			return 526;
			break;
		case 21562922:
			return 527;
			break;
		case 812901503:
			return 528;
			break;
		case 1527134627:
			return 529;
			break;
		case -32047166:
			return 530;
			break;
		case -1011699139:
			return 531;
			break;
		case -1901069835:
			return 532;
			break;
	}
	switch (iParam0)
	{
		case 367580840:
			return 533;
			break;
		case 675150674:
			return 534;
			break;
		case 1534956433:
			return 535;
			break;
		case 1831614190:
			return 536;
			break;
	}
	return -1;
}

bool func_828()//Position - 0x48FDD
{
	return DLC::IS_DLC_PRESENT(joaat("mpchristmas2017"));
}

int func_829(var uParam0)//Position - 0x4902E
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0;
	iVar1 = __LIB_0__::func_161(iVar0);
	if ((__LIB_0__::func_3() == 0 || __LIB_0__::func_63() == 0) || (__LIB_0__::func_3() == 999 && __LIB_0__::func_63() == 999))
	{
		switch (iVar1)
		{
			case 0:
				return 2538;
				break;
			case 1:
				return 2539;
				break;
			case 2:
				return 2540;
				break;
			case 3:
				return 2541;
				break;
			case 4:
				return 2542;
				break;
			case 5:
				return 2543;
				break;
			case 6:
				return 2544;
				break;
			case 7:
				return 2545;
				break;
			case 8:
				return 2546;
				break;
			case 9:
				return 2547;
				break;
			case 10:
				return 2548;
				break;
		}
	}
	return 13122;
}

bool func_830()//Position - 0x49124
{
	return DLC::IS_DLC_PRESENT(joaat("mphalloween"));
}

bool func_831()//Position - 0x49146
{
	return DLC::IS_DLC_PRESENT(joaat("mpsecurity"));
}

bool func_832()//Position - 0x49157
{
	return DLC::IS_DLC_PRESENT(joaat("mptuner"));
}

bool func_833()//Position - 0x49168
{
	return DLC::IS_DLC_PRESENT(joaat("mpbiker"));
}

int func_834(int iParam0, int iParam1)//Position - 0x491AC
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				return 43;
				break;
			case 7:
				return 30;
				break;
			case 8:
				return 35;
				break;
			case 9:
				return 18;
				break;
			case 10:
				return 32;
				break;
			case 11:
				return 93;
				break;
			case 14:
				return 26;
				break;
			case 15:
				return 11;
				break;
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				return 45;
				break;
			case 8:
				return 35;
				break;
			case 10:
				return 32;
				break;
			case 11:
				return 93;
				break;
			case 13:
				return 8;
				break;
			case 14:
				return 26;
				break;
			case 15:
				return 11;
				break;
			}
	}
	return 0;
}

int func_835()//Position - 0x4936B
{
	if (__LIB_0__::func_291() && (Global_262145.f_8258 /* Tunable: TOGGLE_ACTIVATE_INDEPENDENCE_PACK */ || __LIB_0__::func_137(3607, -1)))
	{
		return 1;
	}
	return 0;
}

int func_836()//Position - 0x49447
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID());
	if (iVar0 == joaat("MP_M_Freemode_01"))
	{
		return 30;
	}
	return 19;
}

int func_837(int iParam0, int iParam1)//Position - 0x4B680
{
	if (iParam0 == -1)
	{
		return 1;
	}
	if (iParam1 == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_838(char* sParam0)//Position - 0x4B69E
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return -2;
	}
	iVar0 = MISC::GET_HASH_KEY(sParam0);
	switch (iVar0)
	{
		case joaat("CLO_SBM_H_0_0"):
		case joaat("CLO_SBM_H_1_0"):
			return 0;
			break;
		case joaat("CLO_SBF_H_0_0"):
		case joaat("CLO_SBF_H_1_0"):
			return 1;
			break;
		case joaat("CLO_FXM_H_0_0"):
			return 2;
			break;
		case joaat("CLO_FXF_H_0_0"):
			return 3;
			break;
		case joaat("CLO_TRM_H_0_0"):
			return 4;
			break;
		case joaat("CLO_TRF_H_0_0"):
			return 5;
			break;
		case joaat("CLO_VWM_H_0_0"):
			return 6;
			break;
		case joaat("CLO_VWF_H_0_0"):
			return 7;
			break;
		case joaat("CLO_GRM_H_0_0"):
		case joaat("CLO_GRM_H_1_0"):
			return 8;
			break;
		case joaat("CLO_GRF_H_0_0"):
		case joaat("CLO_GRF_H_1_0"):
			return 9;
			break;
		case joaat("CLO_BIM_H_0_0"):
		case joaat("CLO_BIM_H_1_0"):
		case joaat("CLO_BIM_H_2_0"):
		case joaat("CLO_BIM_H_3_0"):
		case joaat("CLO_BIM_H_4_0"):
		case joaat("CLO_BIM_H_5_0"):
			return 10;
			break;
		case joaat("CLO_BIF_H_0_0"):
		case joaat("CLO_BIF_H_1_0"):
		case joaat("CLO_BIF_H_2_0"):
		case joaat("CLO_BIF_H_3_0"):
		case joaat("CLO_BIF_H_4_0"):
		case joaat("CLO_BIF_H_5_0"):
		case joaat("CLO_BIF_H_6_0"):
			return 11;
			break;
		case joaat("CLO_S1M_H_0_0"):
		case joaat("CLO_S1M_H_1_0"):
		case joaat("CLO_S1M_H_2_0"):
		case joaat("CLO_S1M_H_3_0"):
		case joaat("CLO_S2M_H_0_0"):
		case joaat("CLO_S2M_H_1_0"):
		case joaat("CLO_S2M_H_2_0"):
			return 12;
			break;
		case joaat("CLO_S1F_H_0_0"):
		case joaat("CLO_S1F_H_1_0"):
		case joaat("CLO_S1F_H_2_0"):
		case joaat("CLO_S1F_H_3_0"):
		case joaat("CLO_S2F_H_0_0"):
		case joaat("CLO_S2F_H_1_0"):
		case joaat("CLO_S2F_H_2_0"):
			return 13;
			break;
		case joaat("CLO_IND_H_0_0"):
		case joaat("CLO_IND_H_0_1"):
		case joaat("CLO_IND_H_0_2"):
		case joaat("CLO_IND_H_0_3"):
		case joaat("CLO_IND_H_0_4"):
		case joaat("CLO_INDF_H_0_0"):
		case joaat("CLO_INDF_H_0_1"):
		case joaat("CLO_INDF_H_0_2"):
		case joaat("CLO_INDF_H_0_3"):
		case joaat("CLO_INDF_H_0_4"):
			return 14;
			break;
		case joaat("CLO_HP_HR_0_0"):
		case joaat("CLO_HP_HR_0_1"):
		case joaat("CLO_HP_HR_0_2"):
		case joaat("CLO_HP_HR_0_3"):
		case joaat("CLO_HP_HR_0_4"):
			return 15;
			break;
		case joaat("CLO_HP_HR_1_0"):
		case joaat("CLO_HP_HR_1_1"):
		case joaat("CLO_HP_HR_1_2"):
		case joaat("CLO_HP_HR_1_3"):
		case joaat("CLO_HP_HR_1_4"):
			return 16;
			break;
		case joaat("CLO_HP_F_HR_0_0"):
		case joaat("CLO_HP_F_HR_0_1"):
		case joaat("CLO_HP_F_HR_0_2"):
		case joaat("CLO_HP_F_HR_0_3"):
		case joaat("CLO_HP_F_HR_0_4"):
			return 17;
			break;
		case joaat("CLO_HP_F_HR_1_0"):
		case joaat("CLO_HP_F_HR_1_1"):
		case joaat("CLO_HP_F_HR_1_2"):
		case joaat("CLO_HP_F_HR_1_3"):
		case joaat("CLO_HP_F_HR_1_4"):
			return 18;
			break;
		case joaat("CLO_BUS_H_0_0"):
		case joaat("CLO_BUS_H_0_1"):
		case joaat("CLO_BUS_H_0_2"):
		case joaat("CLO_BUS_H_0_3"):
		case joaat("CLO_BUS_H_0_4"):
			return 19;
			break;
		case joaat("CLO_BUS_H_1_0"):
		case joaat("CLO_BUS_H_1_1"):
		case joaat("CLO_BUS_H_1_2"):
		case joaat("CLO_BUS_H_1_3"):
		case joaat("CLO_BUS_H_1_4"):
			return 20;
			break;
		case joaat("CLO_BUS_F_H_0_0"):
		case joaat("CLO_BUS_F_H_0_1"):
		case joaat("CLO_BUS_F_H_0_2"):
		case joaat("CLO_BUS_F_H_0_3"):
		case joaat("CLO_BUS_F_H_0_4"):
			return 21;
			break;
		case joaat("CLO_BUS_F_H_1_0"):
		case joaat("CLO_BUS_F_H_1_1"):
		case joaat("CLO_BUS_F_H_1_2"):
		case joaat("CLO_BUS_F_H_1_3"):
		case joaat("CLO_BUS_F_H_1_4"):
			return 22;
			break;
		case joaat("CLO_VALF_H_0_0"):
		case joaat("CLO_VALF_H_0_1"):
		case joaat("CLO_VALF_H_0_2"):
		case joaat("CLO_VALF_H_0_3"):
		case joaat("CLO_VALF_H_0_4"):
		case joaat("CLO_VALF_H_0_5"):
			return 23;
			break;
		case joaat("CLO_BBF_H_00"):
		case joaat("CLO_BBF_H_01"):
		case joaat("CLO_BBF_H_02"):
		case joaat("CLO_BBF_H_03"):
		case joaat("CLO_BBF_H_04"):
			return 24;
			break;
		case joaat("CLO_BBF_H_05"):
		case joaat("CLO_BBF_H_06"):
		case joaat("CLO_BBF_H_07"):
		case joaat("CLO_BBF_H_08"):
		case joaat("CLO_BBF_H_09"):
			return 25;
			break;
		case joaat("CLO_BBM_H_00"):
		case joaat("CLO_BBM_H_01"):
		case joaat("CLO_BBM_H_02"):
		case joaat("CLO_BBM_H_03"):
		case joaat("CLO_BBM_H_04"):
			return 26;
			break;
		case joaat("CLO_BBM_H_05"):
		case joaat("CLO_BBM_H_06"):
		case joaat("CLO_BBM_H_07"):
		case joaat("CLO_BBM_H_08"):
		case joaat("CLO_BBM_H_09"):
			return 27;
			break;
		case joaat("CC_M_HS_0"):
			return 28;
		case joaat("CC_M_HS_1"):
			return 29;
		case joaat("CC_M_HS_2"):
			return 30;
		case joaat("CC_M_HS_3"):
			return 31;
		case joaat("CC_M_HS_4"):
			return 32;
		case joaat("CC_M_HS_5"):
			return 33;
		case joaat("CC_M_HS_6"):
			return 34;
		case joaat("CC_M_HS_7"):
			return 35;
		case joaat("CC_M_HS_8"):
			return 36;
		case joaat("CC_M_HS_9"):
			return 37;
		case joaat("CC_M_HS_10"):
			return 38;
		case joaat("CC_M_HS_11"):
			return 39;
		case joaat("CC_M_HS_12"):
			return 40;
		case joaat("CC_M_HS_13"):
			return 41;
		case joaat("CC_M_HS_14"):
			return 42;
		case joaat("CC_M_HS_15"):
			return 43;
		case joaat("CC_F_HS_0"):
			return 44;
		case joaat("CC_F_HS_1"):
			return 45;
		case joaat("CC_F_HS_2"):
			return 46;
		case joaat("CC_F_HS_3"):
			return 47;
		case joaat("CC_F_HS_4"):
			return 48;
		case joaat("CC_F_HS_5"):
			return 49;
		case joaat("CC_F_HS_6"):
			return 50;
		case joaat("CC_F_HS_7"):
			return 51;
		case joaat("CC_F_HS_8"):
			return 52;
		case joaat("CC_F_HS_9"):
			return 53;
		case joaat("CC_F_HS_10"):
			return 54;
		case joaat("CC_F_HS_11"):
			return 55;
		case joaat("CC_F_HS_12"):
			return 56;
		case joaat("CC_F_HS_13"):
			return 57;
		case joaat("CC_F_HS_14"):
			return 58;
		case joaat("CC_F_HS_15"):
			return 59;
	}
	return -2;
}

int func_839(int iParam0)//Position - 0x562FD
{
	switch (iParam0)
	{
		case 0:
			return 29;
		case 1:
			return 28;
		case 2:
			return 30;
		case 3:
			return 31;
		case 4:
			return 32;
		case 5:
			return 33;
		case 6:
			return 34;
		case 7:
			return 35;
		case 8:
			return 36;
		case 9:
			return 37;
		case 10:
			return 38;
		case 11:
			return 39;
		case 12:
			return 40;
		case 13:
			return 41;
		case 14:
			return 42;
		case 15:
			return 43;
		case 16:
			return 44;
		case 17:
			return 45;
		case 18:
			return 46;
		case 19:
			return 47;
		case 20:
			return 48;
		case 21:
			return 49;
		case 22:
			return 50;
		case 23:
			return 51;
		case 24:
			return 52;
		case 25:
			return 53;
		case 26:
			return 54;
		case 27:
			return 55;
		case 28:
			return 56;
		case 29:
			return 57;
		case 30:
			return 58;
		case 31:
			return 59;
		case 32:
			return 60;
		case 33:
			return 91;
		case 34:
			return 92;
		case 35:
			return 93;
		case 36:
			return 94;
		case 37:
			return 95;
		case 38:
			return 96;
		case 39:
			return 97;
		case 40:
			return 98;
		case 41:
			return 99;
		case 42:
			return 100;
		case 43:
			return 101;
		case 44:
			return 102;
		case 45:
			return 103;
		case 46:
			return 104;
		case 47:
			return 105;
		case 48:
			return 106;
		case 49:
			return 107;
		case 50:
			return 108;
		case 51:
			return 109;
		case 52:
			return 110;
		case 53:
			return 111;
		case 54:
			return 112;
		case 55:
			return 113;
		case 56:
			return 114;
		case 57:
			return 115;
		case 58:
			return 116;
		case 59:
			return 117;
		case 60:
			return 118;
		case 61:
			return 119;
		case 62:
			return 120;
		case 63:
			return 121;
		case 64:
			return 122;
		case 65:
			return 149;
		case 66:
			return 150;
		case 67:
			return 151;
		case 68:
			return 152;
		case 69:
			return 153;
		case 70:
			return 154;
		case 71:
			return 155;
		case 72:
			return 156;
		case 73:
			return 157;
		case 74:
			return 158;
		case 75:
			return 159;
		case 76:
			return 160;
		case 77:
			return 161;
		case 78:
			return 162;
		case 79:
			return 163;
		case 80:
			return 164;
		case 81:
			return 165;
		case 82:
			return 166;
		case 83:
			return 167;
		case 84:
			return 168;
		case 85:
			return 169;
		case 86:
			return 170;
		case 87:
			return 171;
		default:
	}
	return 29;
}

int func_840(int iParam0)//Position - 0x56CF1
{
	switch (iParam0)
	{
		case 0:
			return 61;
		case 1:
			return 69;
		case 2:
			return 63;
		case 3:
			return 64;
		case 4:
			return 65;
		case 5:
			return 66;
		case 6:
			return 67;
		case 7:
			return 68;
		case 8:
			return 69;
		case 9:
			return 70;
		case 10:
			return 71;
		case 11:
			return 72;
		case 12:
			return 73;
		case 13:
			return 74;
		case 14:
			return 75;
		case 15:
			return 76;
		case 16:
			return 77;
		case 17:
			return 78;
		case 18:
			return 79;
		case 19:
			return 80;
		case 20:
			return 80;
		case 27:
			return 81;
		case 28:
			return 82;
		case 29:
			return 83;
		case 30:
			return 84;
		case 31:
			return 85;
		case 32:
			return 86;
		case 33:
			return 87;
		case 36:
			return 88;
		case 34:
			return 89;
		case 35:
			return 90;
		default:
	}
	return 61;
}

int func_841(char* sParam0, int iParam1, int iParam2)//Position - 0x57636
{
	int iVar0;
	int iVar1;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (iParam2 == 0)
	{
		return 0;
	}
	switch (iParam1)
	{
		case 6:
			if (Global_262145.f_15292 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_HAIR */)
			{
				return 1;
			}
			break;
		case 7:
			if (Global_262145.f_15293 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_BEARD */)
			{
				return 1;
			}
			break;
		case 8:
			if (Global_262145.f_15294 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_EYEBROWS */)
			{
				return 1;
			}
			break;
		case 9:
			if (Global_262145.f_15295 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_CHEST */)
			{
				return 1;
			}
			break;
		case 10:
			if (Global_262145.f_15296 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_CONTACTS */)
			{
				return 1;
			}
			break;
		case 11:
			if (Global_262145.f_15297 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_FACEPAINT */)
			{
				return 1;
			}
			break;
		case 13:
			if (Global_262145.f_15298 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP */)
			{
				return 1;
			}
			if (Global_262145.f_15299 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP_BLUSHER */)
			{
				return 1;
			}
			break;
		case 14:
			if (Global_262145.f_15298 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP */)
			{
				return 1;
			}
			if (Global_262145.f_15300 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP_EYE */)
			{
				return 1;
			}
			break;
		case 15:
			if (Global_262145.f_15298 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP */)
			{
				return 1;
			}
			if (Global_262145.f_15301 /* Tunable: SHOULD_ITEM_BE_DISCOUNTED_HME_NGMP_MAKEUP_LIPSTICK */)
			{
				return 1;
			}
			break;
	}
	iVar1 = MISC::GET_HASH_KEY(sParam0);
	iVar0 = 0;
	while (iVar0 < Global_262145.f_15302)
	{
		if (Global_262145.f_15302[iVar0] != 0)
		{
			if (iVar1 == Global_262145.f_15302[iVar0])
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_842(int iParam0, int iParam1)//Position - 0x59C2E
{
	switch (iParam0)
	{
		case 6:
			return joaat("CATEGORY_INVENTORY_HAIR");
			break;
		case 7:
			return joaat("CATEGORY_INVENTORY_BEARD");
			break;
		case 8:
			return joaat("CATEGORY_INVENTORY_EYEBROWS");
			break;
		case 9:
			return joaat("CATEGORY_INVENTORY_CHEST_HAIR");
			break;
		case 10:
			return joaat("CATEGORY_INVENTORY_CONTACTS");
			break;
		case 11:
			if (iParam1 == 4)
			{
				return joaat("CATEGORY_INVENTORY_FACEPAINT");
			}
			else if (iParam1 == 5)
			{
				return joaat("CATEGORY_INVENTORY_BLUSHER");
			}
			break;
		case 13:
			return joaat("CATEGORY_INVENTORY_BLUSHER");
			break;
		case 14:
			return joaat("CATEGORY_INVENTORY_MKUP");
			break;
		case 15:
			return joaat("CATEGORY_INVENTORY_LIPSTICK");
			break;
		default:
			break;
	}
	return joaat("CATEGORY_INVENTORY_HAIR");
}

int func_843(int iParam0, int iParam1)//Position - 0x5A048
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 7:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 8:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 9:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 10:
				return 0;
				break;
			case 11:
				return PED::GET_NUM_PED_MAKEUP_TINTS();
				break;
			case 14:
				return 0;
				break;
			case 15:
				return PED::GET_NUM_PED_MAKEUP_TINTS();
				break;
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 8:
				return PED::GET_NUM_PED_HAIR_TINTS();
				break;
			case 10:
				return 0;
				break;
			case 11:
				return PED::GET_NUM_PED_MAKEUP_TINTS();
				break;
			case 13:
				return PED::GET_NUM_PED_MAKEUP_TINTS();
				break;
			case 14:
				return 0;
				break;
			case 15:
				return PED::GET_NUM_PED_MAKEUP_TINTS();
				break;
			}
	}
	return 0;
}

int func_844(int iParam0, int iParam1, int iParam2)//Position - 0x5A15A
{
	if (((iParam0 == 6 || iParam0 == 7) || iParam0 == 9) || iParam0 == 8)
	{
		if (iParam2 == 50)
		{
			if (!PED::IS_PED_HAIR_TINT_FOR_CREATOR(iParam1))
			{
				return 0;
			}
		}
		if (!PED::IS_PED_HAIR_TINT_FOR_BARBER(iParam1))
		{
			return 0;
		}
	}
	else if (iParam0 == 15)
	{
		if (iParam2 == 50)
		{
			if (!PED::IS_PED_LIPSTICK_TINT_FOR_CREATOR(iParam1))
			{
				return 0;
			}
		}
		if (!PED::IS_PED_LIPSTICK_TINT_FOR_BARBER(iParam1))
		{
			return 0;
		}
	}
	else if (iParam0 == 13)
	{
		if (iParam2 == 50)
		{
			if (!PED::IS_PED_BLUSH_TINT_FOR_CREATOR(iParam1))
			{
				return 0;
			}
		}
		if (!PED::IS_PED_BLUSH_TINT_FOR_BARBER(iParam1))
		{
			return 0;
		}
	}
	else if (iParam0 == 11)
	{
		if (!PED::IS_PED_BLUSH_FACEPAINT_TINT_FOR_BARBER(iParam1))
		{
			return 0;
		}
	}
	return 1;
}

int func_845(int iParam0, int iParam1)//Position - 0x5A2C1
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		if (iParam1 == 0)
		{
			return -1;
		}
		return 0;
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		if (iParam1 == 0)
		{
			return -1;
		}
		return 0;
	}
	return -1;
}

void func_846(var uParam0)//Position - 0x5B3DE
{
	if (MISC::IS_PC_VERSION())
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_624, "SET_IS_PC");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_614, "SET_DATA_SLOT_EMPTY"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_614, "SET_TITLE"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	if (MISC::IS_PC_VERSION())
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_624, "SET_IS_PC");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_624, "SET_DATA_SLOT_EMPTY"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	if (GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_624, "SET_TITLE"))
	{
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

char* func_847(int iParam0, bool bParam1)//Position - 0x5C39E
{
	switch (iParam0)
	{
		case 5:
			if (bParam1)
			{
				return "HAIR_NG_T0";
			}
			else
			{
				return "HAIR_NG_O0";
			}
			break;
		case 6:
			if (bParam1)
			{
				return "HAIR_NG_T1";
			}
			else
			{
				return "HAIR_NG_O1";
			}
			break;
		case 7:
			if (bParam1)
			{
				return "HAIR_NG_T2";
			}
			else
			{
				return "HAIR_NG_O2";
			}
			break;
		case 8:
			if (bParam1)
			{
				return "HAIR_NG_T3";
			}
			else
			{
				return "HAIR_NG_O3";
			}
			break;
		case 9:
			if (bParam1)
			{
				return "HAIR_NG_T4";
			}
			else
			{
				return "HAIR_NG_O4";
			}
			break;
		case 10:
			if (bParam1)
			{
				return "HAIR_NG_T5";
			}
			else
			{
				return "HAIR_NG_O5";
			}
			break;
		case 11:
			if (bParam1)
			{
				return "HAIR_NG_T6";
			}
			else
			{
				return "HAIR_NG_O6";
			}
			break;
		case 12:
			if (bParam1)
			{
				return "HAIR_NG_T7";
			}
			else
			{
				return "HAIR_NG_O7";
			}
			break;
		case 13:
			if (bParam1)
			{
				return "HAIR_NG_T8";
			}
			else
			{
				return "HAIR_NG_O8";
			}
			break;
		case 14:
			if (bParam1)
			{
				return "HAIR_NG_T9";
			}
			else
			{
				return "HAIR_NG_O9";
			}
			break;
		case 15:
			if (bParam1)
			{
				return "HAIR_NG_T10";
			}
			else
			{
				return "HAIR_NG_O10";
			}
			break;
	}
	return "";
}

void func_848(int iParam0, int iParam1)//Position - 0x5CE37
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case 10:
			if (*iParam1 != 1)
			{
				*iParam1 = 1;
			}
			break;
		case 5:
		case 8:
			if (*iParam1 != 2)
			{
				*iParam1 = 2;
			}
			break;
		default:
			if (*iParam1 != 0)
			{
				*iParam1 = 0;
			}
			break;
	}
}

bool func_849(int iParam0, int iParam1, int iParam2)//Position - 0x5CE8E
{
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				if (!MISC::ARE_STRINGS_EQUAL("CC_M_HS", HUD::GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING(&(iParam2->f_1), HUD::GET_LENGTH_OF_LITERAL_STRING("CC_M_HS"))))
				{
					return 1;
				}
				break;
			case 7:
				if (iParam2->f_10 >= 81 && iParam2->f_10 <= 90)
				{
					return 1;
				}
				break;
			case 11:
				if (iParam2->f_10 == 92)
				{
					return 1;
				}
				if (iParam2->f_10 >= 93 && iParam2->f_10 <= 122)
				{
					return 1;
				}
				if (iParam2->f_10 >= 123 && iParam2->f_10 <= 148)
				{
					return 1;
				}
				if (iParam2->f_10 >= 149 && iParam2->f_10 <= 157)
				{
					return 1;
				}
				if (iParam2->f_10 >= 158 && iParam2->f_10 <= 171)
				{
					return 1;
				}
				break;
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		switch (iParam1)
		{
			case 6:
				if (!MISC::ARE_STRINGS_EQUAL("CC_F_HS", HUD::GET_FIRST_N_CHARACTERS_OF_LITERAL_STRING(&(iParam2->f_1), HUD::GET_LENGTH_OF_LITERAL_STRING("CC_F_HS"))))
				{
					return 1;
				}
				break;
			case 11:
				if (iParam2->f_10 == 92)
				{
					return 1;
				}
				if (iParam2->f_10 >= 93 && iParam2->f_10 <= 122)
				{
					return 1;
				}
				if (iParam2->f_10 >= 123 && iParam2->f_10 <= 148)
				{
					return 1;
				}
				if (iParam2->f_10 >= 149 && iParam2->f_10 <= 157)
				{
					return 1;
				}
				if (iParam2->f_10 >= 158 && iParam2->f_10 <= 171)
				{
					return 1;
				}
				break;
			}
	}
	return !MISC::IS_STRING_NULL_OR_EMPTY(__LIB_13__::func_984(&(iParam2->f_1), 0));
}

int func_850(int iParam0)//Position - 0x5D080
{
	switch (iParam0)
	{
		case 0:
			return 13;
			break;
		case 1:
			return 14;
			break;
		case 2:
			return 15;
			break;
	}
	return -1;
}

int func_851(int iParam0, int iParam1, int iParam2)//Position - 0x5D11F
{
	if (iParam2 == 50)
	{
		switch (iParam1)
		{
			case 9:
				return 0;
				break;
			case 10:
				return 0;
				break;
			case 11:
				return 0;
				break;
			}
	}
	if (iParam0 == joaat("MP_M_Freemode_01"))
	{
		switch (iParam1)
		{
			case 5:
				return 1;
				break;
			case 6:
				return 1;
				break;
			case 7:
				return 1;
				break;
			case 8:
				return 1;
				break;
			case 9:
				return 1;
				break;
			case 10:
				return 1;
				break;
			case 11:
				return 1;
				break;
			case 12:
				return 1;
				break;
			case 13:
				return 0;
				break;
			case 14:
				return 1;
				break;
			case 15:
				return 1;
				break;
		}
	}
	else if (iParam0 == joaat("MP_F_Freemode_01"))
	{
		switch (iParam1)
		{
			case 5:
				return 1;
				break;
			case 6:
				return 1;
				break;
			case 7:
				return 0;
				break;
			case 8:
				return 1;
				break;
			case 9:
				return 0;
				break;
			case 10:
				return 1;
				break;
			case 11:
				return 1;
				break;
			case 12:
				return 1;
				break;
			case 13:
				return 1;
				break;
			case 14:
				return 1;
				break;
			case 15:
				return 1;
				break;
			}
	}
	return 0;
}

int func_852(int iParam0)//Position - 0x5D2A0
{
	switch (iParam0)
	{
		case 0:
			return 6;
			break;
		case 1:
			return 7;
			break;
		case 2:
			return 8;
			break;
		case 3:
			return 9;
			break;
		case 4:
			return 10;
			break;
		case 5:
			return 11;
			break;
		case 6:
			return 12;
			break;
	}
	return -1;
}

int func_853(char* sParam0, int iParam1)//Position - 0x5E9DA
{
	if (iParam1 >= 19 + 1)
	{
		if (iParam1 >= 27 && iParam1 <= 36)
		{
			StringCopy(sParam0, "BRD_HP_", 16);
			StringIntConCat(sParam0, (iParam1 - 27), 16);
			return 1;
		}
	}
	return 0;
}

int func_854(int iParam0)//Position - 0x5EA13
{
	if (iParam0 >= 19 + 1)
	{
		if (iParam0 >= 27 && iParam0 <= 36)
		{
			return 1;
		}
		return 0;
	}
	return 0;
}

int func_855(var uParam0, int iParam1)//Position - 0x601CC
{
	if (uParam0->f_525 == 1 || NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (Global_4537616[iParam1] == uParam0->f_272)
		{
			return 1;
		}
	}
	else if (Global_4537616[iParam1] == uParam0->f_273)
	{
		return 1;
	}
	return 0;
}

int func_856(var uParam0, int iParam1, int iParam2)//Position - 0x64228
{
	if (iParam1 == 1)
	{
		if (__LIB_16__::func_450(uParam0, iParam2))
		{
			return 1;
		}
	}
	else if ((*uParam0)[iParam2] != -99)
	{
		return 1;
	}
	return 0;
}

var func_857(int iParam0, int iParam1)//Position - 0x64E2F
{
	var uVar0;
	uVar0 = (SYSTEM::SHIFT_LEFT(iParam0, 16) || iParam1);
	return uVar0;
}

int func_858(int iParam0, int iParam1)//Position - 0x834EE
{
	switch (iParam0)
	{
		case 6:
			return joaat("CATEGORY_HAIR");
			break;
		case 7:
			return joaat("CATEGORY_BEARD");
			break;
		case 8:
			return joaat("CATEGORY_EYEBROWS");
			break;
		case 9:
			return joaat("CATEGORY_CHEST_HAIR");
			break;
		case 10:
			return joaat("CATEGORY_CONTACTS");
			break;
		case 11:
			if (iParam1 == 4)
			{
				return joaat("CATEGORY_FACEPAINT");
			}
			else if (iParam1 == 5)
			{
				return joaat("CATEGORY_BLUSHER");
			}
			break;
		case 13:
			return joaat("CATEGORY_BLUSHER");
			break;
		case 14:
			return joaat("CATEGORY_MKUP");
			break;
		case 15:
			return joaat("CATEGORY_LIPSTICK");
			break;
		default:
			break;
	}
	return joaat("CATEGORY_HAIR");
}

void func_859(var uParam0, int iParam1, char* sParam2, int iParam3, int iParam4, float fParam5, int iParam6, int iParam7)//Position - 0x83634
{
	uParam0->f_9 = 1;
	if (iParam3 == 7)
	{
		uParam0->f_9 = 2;
	}
	*uParam0 = iParam1;
	StringCopy(&(uParam0->f_1), sParam2, 16);
	uParam0->f_5 = iParam3;
	uParam0->f_6 = iParam4;
	uParam0->f_7 = fParam5;
	uParam0->f_10 = iParam6;
	uParam0->f_11 = iParam7;
}

void func_860(var uParam0, int iParam1, char* sParam2, int iParam3, int iParam4)//Position - 0x83677
{
	uParam0->f_9 = 0;
	*uParam0 = iParam1;
	StringCopy(&(uParam0->f_1), sParam2, 16);
	uParam0->f_8 = iParam3;
	uParam0->f_6 = iParam3;
	uParam0->f_10 = -1;
	uParam0->f_11 = iParam4;
}

int func_861(int iParam0)//Position - 0x836A8
{
	if (iParam0 == 50)
	{
		return 1;
	}
	return 0;
}

int func_862(int iParam0)//Position - 0x95E85
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return iParam0;
	}
	if (!__LIB_4__::func_874())
	{
		return iParam0;
	}
	switch (iParam0)
	{
		case 0:
			return 0;
		case 27:
			return 1;
		case 28:
			return 2;
		case 29:
			return 3;
		case 30:
			return 4;
		case 31:
			return 5;
		case 32:
			return 6;
		case 33:
			return 7;
		case 34:
			return 8;
		case 35:
			return 9;
		case 36:
			return 10;
		case 1:
			return 11;
		case 2:
			return 12;
		case 3:
			return 13;
		case 4:
			return 14;
		case 5:
			return 15;
		case 6:
			return 16;
		case 7:
			return 17;
		case 8:
			return 18;
		case 9:
			return 19;
		case 10:
			return 20;
		case 11:
			return 21;
		case 12:
			return 22;
		case 13:
			return 23;
		case 14:
			return 24;
		case 15:
			return 25;
		case 16:
			return 26;
		case 17:
			return 27;
		case 18:
			return 28;
		case 19:
			return 29;
		default:
	}
	return -1;
}

void func_863(int iParam0, char* sParam1)//Position - 0x96187
{
	StringCopy(sParam1, "HAIR_GROUP", 16);
	switch (iParam0)
	{
		case 0:
			StringCopy(sParam1, "HAIR_GROUP_SB_MO", 16);
			break;
		case 1:
			StringCopy(sParam1, "HAIR_GROUP_SB_FO", 16);
			break;
		case 2:
			StringCopy(sParam1, "HAIR_GROUP_FX_MO", 16);
			break;
		case 3:
			StringCopy(sParam1, "HAIR_GROUP_FX_FO", 16);
			break;
		case 4:
			StringCopy(sParam1, "HAIR_GROUP_AF_MO", 16);
			break;
		case 5:
			StringCopy(sParam1, "HAIR_GROUP_AF_FO", 16);
			break;
		case 6:
			StringCopy(sParam1, "HAIR_GROUP_VW_M0", 16);
			break;
		case 7:
			StringCopy(sParam1, "HAIR_GROUP_VW_F0", 16);
			break;
		case 8:
			StringCopy(sParam1, "HAIR_GROUP_GR_M0", 16);
			break;
		case 9:
			StringCopy(sParam1, "HAIR_GROUP_GR_F0", 16);
			break;
		case 10:
			StringCopy(sParam1, "HAIR_GROUP_BIK_M0", 16);
			break;
		case 11:
			StringCopy(sParam1, "HAIR_GROUP_BIK_F0", 16);
			break;
		case 12:
			StringCopy(sParam1, "HAIR_GROUP_LOW_M0", 16);
			break;
		case 13:
			StringCopy(sParam1, "HAIR_GROUP_LOW_F0", 16);
			break;
		case 14:
			StringCopy(sParam1, "HAIR_GROUP_IND1" /* GXT: Mullet */, 16);
			break;
		case 15:
			StringCopy(sParam1, "HAIR_GROUP_HIP1" /* GXT: Long Slicked */, 16);
			break;
		case 16:
			StringCopy(sParam1, "HAIR_GROUP_HIP2" /* GXT: Hipster Youth */, 16);
			break;
		case 17:
			StringCopy(sParam1, "HAIR_GROUP_HIP3" /* GXT: Big Bangs */, 16);
			break;
		case 18:
			StringCopy(sParam1, "HAIR_GROUP_HIP4" /* GXT: Braided Top Knot */, 16);
			break;
		case 19:
			StringCopy(sParam1, "HAIR_GROUP_BUS1" /* GXT: Short Side Part */, 16);
			break;
		case 20:
			StringCopy(sParam1, "HAIR_GROUP_BUS2" /* GXT: High Slicked Sides */, 16);
			break;
		case 21:
			StringCopy(sParam1, "HAIR_GROUP_BUS3" /* GXT: Tight Bun */, 16);
			break;
		case 22:
			StringCopy(sParam1, "HAIR_GROUP_BUS4" /* GXT: Twisted Bob */, 16);
			break;
		case 23:
			StringCopy(sParam1, "HAIR_GROUP_VAL1" /* GXT: Flapper Bob */, 16);
			break;
		case 24:
			StringCopy(sParam1, "HAIR_GROUP_BCH1" /* GXT: Pin Up Girl */, 16);
			break;
		case 25:
			StringCopy(sParam1, "HAIR_GROUP_BCH2" /* GXT: Messy Bun */, 16);
			break;
		case 26:
			StringCopy(sParam1, "HAIR_GROUP_BCH3" /* GXT: Shaggy */, 16);
			break;
		case 27:
			StringCopy(sParam1, "HAIR_GROUP_BCH4" /* GXT: Surfer */, 16);
			break;
		case 28:
			StringCopy(sParam1, "HAIR_GROUP_M0" /* GXT: Shaven */, 16);
			break;
		case 29:
			StringCopy(sParam1, "HAIR_GROUP_M1" /* GXT: Buzzcut */, 16);
			break;
		case 30:
			StringCopy(sParam1, "HAIR_GROUP_M2" /* GXT: Faux Hawk */, 16);
			break;
		case 31:
			StringCopy(sParam1, "HAIR_GROUP_M3" /* GXT: Hipster Shaved */, 16);
			break;
		case 32:
			StringCopy(sParam1, "HAIR_GROUP_M4" /* GXT: Side Parting Spiked */, 16);
			break;
		case 33:
			StringCopy(sParam1, "HAIR_GROUP_M5" /* GXT: Shorter Cut */, 16);
			break;
		case 34:
			StringCopy(sParam1, "HAIR_GROUP_M6" /* GXT: Biker */, 16);
			break;
		case 35:
			StringCopy(sParam1, "HAIR_GROUP_M7" /* GXT: Ponytail */, 16);
			break;
		case 36:
			StringCopy(sParam1, "HAIR_GROUP_M8" /* GXT: Cornrows */, 16);
			break;
		case 37:
			StringCopy(sParam1, "HAIR_GROUP_M9" /* GXT: Slicked */, 16);
			break;
		case 38:
			StringCopy(sParam1, "HAIR_GROUP_M10" /* GXT: Short Brushed */, 16);
			break;
		case 39:
			StringCopy(sParam1, "HAIR_GROUP_M11" /* GXT: Spikey */, 16);
			break;
		case 40:
			StringCopy(sParam1, "HAIR_GROUP_M12" /* GXT: Caesar */, 16);
			break;
		case 41:
			StringCopy(sParam1, "HAIR_GROUP_M13" /* GXT: Chopped */, 16);
			break;
		case 42:
			StringCopy(sParam1, "HAIR_GROUP_M14" /* GXT: Dreads */, 16);
			break;
		case 43:
			StringCopy(sParam1, "HAIR_GROUP_M15" /* GXT: Long Hair */, 16);
			break;
		case 44:
			StringCopy(sParam1, "HAIR_GROUP_F0" /* GXT: Shaven */, 16);
			break;
		case 45:
			StringCopy(sParam1, "HAIR_GROUP_F1" /* GXT: Short */, 16);
			break;
		case 46:
			StringCopy(sParam1, "HAIR_GROUP_F2" /* GXT: Layered Bob */, 16);
			break;
		case 47:
			StringCopy(sParam1, "HAIR_GROUP_F3" /* GXT: Pigtails */, 16);
			break;
		case 48:
			StringCopy(sParam1, "HAIR_GROUP_F4" /* GXT: Ponytail */, 16);
			break;
		case 49:
			StringCopy(sParam1, "HAIR_GROUP_F5" /* GXT: Braided Mohawk */, 16);
			break;
		case 50:
			StringCopy(sParam1, "HAIR_GROUP_F6" /* GXT: Braids */, 16);
			break;
		case 51:
			StringCopy(sParam1, "HAIR_GROUP_F7" /* GXT: Bob */, 16);
			break;
		case 52:
			StringCopy(sParam1, "HAIR_GROUP_F8" /* GXT: Faux Hawk */, 16);
			break;
		case 53:
			StringCopy(sParam1, "HAIR_GROUP_F9" /* GXT: French Twist */, 16);
			break;
		case 54:
			StringCopy(sParam1, "HAIR_GROUP_F10" /* GXT: Long Bob */, 16);
			break;
		case 55:
			StringCopy(sParam1, "HAIR_GROUP_F11" /* GXT: Loose Tied */, 16);
			break;
		case 56:
			StringCopy(sParam1, "HAIR_GROUP_F12" /* GXT: Pixie */, 16);
			break;
		case 57:
			StringCopy(sParam1, "HAIR_GROUP_F13" /* GXT: Shaved Bangs */, 16);
			break;
		case 58:
			StringCopy(sParam1, "HAIR_GROUP_F14" /* GXT: Top Knot */, 16);
			break;
		case 59:
			StringCopy(sParam1, "HAIR_GROUP_F15" /* GXT: Wavy Bob */, 16);
			break;
	}
}

bool func_864(int iParam0)//Position - 0x965D7
{
	return iParam0 >= 5;
}

int func_865()//Position - 0x965E3
{
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_0__::func_3() == 0)
		{
			if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == joaat("MP_F_Freemode_01") || ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == joaat("MP_M_Freemode_01"))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_866()//Position - 0x96629
{
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			if (__LIB_0__::func_3() == 0)
			{
				if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == joaat("MP_M_Freemode_01"))
				{
					return 1;
				}
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

float func_867(var uParam0, var uParam1)//Position - 0x96668
{
	float fVar0;
	fVar0 = 0f;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		*uParam0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(*uParam1);
		if (*uParam0 != -1)
		{
			if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(*uParam0))
			{
				fVar0 = PED::GET_SYNCHRONIZED_SCENE_PHASE(*uParam0);
			}
			else
			{
				fVar0 = 1f;
			}
		}
		else
		{
			fVar0 = 1f;
		}
	}
	else if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(*uParam0))
	{
		fVar0 = PED::GET_SYNCHRONIZED_SCENE_PHASE(*uParam0);
	}
	else
	{
		fVar0 = 1f;
	}
	return fVar0;
}

void func_868(var uParam0)//Position - 0x9694B
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		NETWORK::NETWORK_START_SYNCHRONISED_SCENE(uParam0->f_531);
	}
}

void func_869(var uParam0, int iParam1, char* sParam2, int iParam3, float fParam4, float fParam5)//Position - 0x96963
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam1))
		{
			NETWORK::NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(iParam1, uParam0->f_531, uParam0->f_486, sParam2, fParam4, fParam5, iParam3);
			ENTITY::SET_ENTITY_VISIBLE(iParam1, true, false);
			ENTITY::FREEZE_ENTITY_POSITION(iParam1, false);
			ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(iParam1);
		}
	}
}

void func_870(var uParam0, int iParam1, char* sParam2, int iParam3, float fParam4, float fParam5)//Position - 0x969A8
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam1))
		{
			NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(iParam1, uParam0->f_531, uParam0->f_486, sParam2, fParam4, fParam5, iParam3, 0, 1000f, 0);
		}
	}
}

void func_871(var uParam0)//Position - 0x96A22
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		uParam0->f_529 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(uParam0->f_531);
		if (uParam0->f_529 != -1)
		{
			if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(uParam0->f_529))
			{
				NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(uParam0->f_531);
			}
		}
	}
}

char* func_872(char* sParam0)//Position - 0x96A5D
{
	char* sVar0;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_base"))
		{
			sVar0 = "scissors_base";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_enterchair"))
		{
			sVar0 = "scissors_enterchair";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_exitchair"))
		{
			sVar0 = "scissors_exitchair";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_idle_a"))
		{
			sVar0 = "scissors_idle_a";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_idle_b"))
		{
			sVar0 = "scissors_idle_b";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_idle_c"))
		{
			sVar0 = "scissors_idle_c";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_hair_cut_a"))
		{
			sVar0 = "scissors_hair_cut_a";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_hair_cut_b"))
		{
			sVar0 = "scissors_hair_cut_b";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_intro"))
		{
			sVar0 = "scissors_intro";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_tutorial"))
		{
			sVar0 = "scissors_tutorial";
		}
		else if (MISC::ARE_STRINGS_EQUAL(sParam0, "keeper_tutorial_base"))
		{
			sVar0 = "scissors_tutorial_base";
		}
	}
	return sVar0;
}

int func_873(var uParam0)//Position - 0x96C2D
{
	if (*uParam0 == 0)
	{
		return 1;
	}
	return 0;
}

void func_874(var uParam0)//Position - 0x994D0
{
	uParam0->f_640.f_68 = __LIB_36__::func_811();
}

int func_875(var uParam0)//Position - 0x9979B
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(uParam0->f_486))
	{
		return 0;
	}
	STREAMING::REQUEST_ANIM_DICT(uParam0->f_486);
	if (!STREAMING::HAS_ANIM_DICT_LOADED(uParam0->f_486))
	{
		return 0;
	}
	return 1;
}

void func_876(int iParam0, var uParam1)//Position - 0x997FC
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (!Local_125[iParam0 /*3*/].f_2)
		{
			Local_125[iParam0 /*3*/].f_1 = uParam1;
			Local_125[iParam0 /*3*/].f_2 = 1;
		}
	}
}

void func_877(int iParam0, var uParam1)//Position - 0x9982A
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (!BitTest(Global_1853348[iParam0 /*834*/].f_833, 4))
		{
			Global_1853348[iParam0 /*834*/].f_203 = uParam1;
			MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_833), 4);
		}
	}
}

int func_878(int iParam0, int iParam1, bool bParam2)//Position - 0x99AEA
{
	int iVar0;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 1;
	}
	iVar0 = (Local_66.f_4[iParam1] - 1);
	if (iVar0 == iParam0)
	{
		return 1;
	}
	if (!bParam2)
	{
		if (iVar0 == -1)
		{
			return 1;
		}
	}
	return 0;
}

int func_879(int iParam0)//Position - 0x9B18C
{
	switch (iParam0)
	{
		case 5:
			return 0;
			break;
		case 6:
			return 0;
			break;
		case 7:
			return 1;
			break;
		case 8:
			return 2;
			break;
		case 9:
			return 3;
			break;
		case 10:
			return 4;
			break;
		case 11:
			return 5;
			break;
		case 12:
			return 6;
			break;
		case 13:
			return 0;
			break;
		case 14:
			return 1;
			break;
		case 15:
			return 2;
			break;
	}
	return -1;
}

int func_880(bool bParam0)//Position - 0x9B2B5
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_66.f_1))
		{
			if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(Local_66.f_1))
			{
				return 1;
			}
			else if (bParam0)
			{
				NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(Local_66.f_1);
			}
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

char* func_881(int iParam0)//Position - 0x9D4FC
{
	switch (iParam0)
	{
		case 6:
			return "SHOP_L_SEAT" /* GXT: Walk up to a seat to browse hairstyles. */;
			break;
		case 7:
			return "SHOP_L_SEAT" /* GXT: Walk up to a seat to browse hairstyles. */;
			break;
		case 9:
			return "SHOP_L_WEAP" /* GXT: Walk up to the counter to browse weapons. */;
			break;
	}
	return "SHOP_L_ITEMS" /* GXT: Items */;
}

int func_882(var uParam0, int iParam1)//Position - 0x9DDD3
{
	if (!uParam0->f_496)
	{
		STREAMING::REQUEST_PTFX_ASSET();
		if (!STREAMING::HAS_PTFX_ASSET_LOADED())
		{
			return 0;
		}
		uParam0->f_496 = 1;
	}
	if (!uParam0->f_497)
	{
		if (iParam1 && uParam0->f_523 == 50)
		{
			return 1;
		}
		if (!AUDIO::REQUEST_AMBIENT_AUDIO_BANK(&(uParam0->f_560), false, -1))
		{
			return 0;
		}
		uParam0->f_497 = 1;
		uParam0->f_557 = AUDIO::GET_SOUND_ID();
		uParam0->f_558 = AUDIO::GET_SOUND_ID();
		uParam0->f_559 = AUDIO::GET_SOUND_ID();
	}
	return 1;
}

void func_883(var uParam0, int iParam1, int iParam2)//Position - 0x9E183
{
	if (iParam1 == 1)
	{
		uParam0->f_555 = iParam2;
	}
	else
	{
		uParam0->f_554 = iParam2;
	}
}

bool func_884(var uParam0, int iParam1)//Position - 0x9E1A2
{
	if (iParam1 == 1)
	{
		return uParam0->f_555;
	}
	return uParam0->f_554;
}

bool func_885(var uParam0)//Position - 0xA0599
{
	return uParam0->f_105;
}

void func_886(var uParam0)//Position - 0xA0652
{
	if (uParam0->f_496)
	{
		STREAMING::REMOVE_PTFX_ASSET();
		uParam0->f_496 = 0;
	}
	if (uParam0->f_497)
	{
		AUDIO::RELEASE_AMBIENT_AUDIO_BANK();
		uParam0->f_497 = 0;
	}
}

void func_887(int* iParam0, struct<3> Param1)//Position - 0xA27D2
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if ((PED::IS_PED_INJURED(*iParam0) || PED::IS_PED_FLEEING(*iParam0)) || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*iParam0, true), Param1, true) > 10f)
		{
			__LIB_13__::func_836("Marking previous shop ped as no longer needed", -1);
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(iParam0);
			return;
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		__LIB_13__::func_836("Deleting previous shop ped.", -1);
		PED::DELETE_PED(iParam0);
	}
}

void func_888(var uParam0, int iParam1, struct<3> Param2, float fParam3, struct<3> Param4, float fParam5)//Position - 0xA2AAC
{
	uParam0->f_3 = iParam1;
	uParam0->f_6 = { Param2 };
	uParam0->f_15 = fParam3;
	uParam0->f_22 = { Param4 };
	uParam0->f_25 = fParam5;
}

void func_889(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0xA2ADA
{
	*uParam0 = iParam1;
	uParam0->f_4 = iParam2;
	uParam0->f_2 = iParam3;
	uParam0->f_9 = iParam4;
}

void func_890()//Position - 0xA2E9D
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		iVar1 = PLAYER::INT_TO_PARTICIPANTINDEX(iLocal_140);
		if (((NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(iVar1) && __LIB_0__::func_156(NETWORK::NETWORK_GET_PLAYER_INDEX(iVar1), 1, 1)) && Local_125[iLocal_140 /*3*/].f_2) && NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(NETWORK::NETWORK_GET_PLAYER_INDEX(iVar1)))
		{
			iVar0 = (Local_66.f_4[Local_125[iLocal_140 /*3*/].f_1] - 1);
			if (iVar0 == iLocal_140)
			{
				return;
			}
			else if (iVar0 == -1)
			{
				Local_66.f_4[Local_125[iLocal_140 /*3*/].f_1] = iLocal_140 + 1;
				MISC::SET_BIT(&(Local_66.f_2), iLocal_140);
				return;
			}
			else if ((!__LIB_0__::func_156(PLAYER::INT_TO_PLAYERINDEX(iVar0), 1, 1) || !Local_125[iVar0 /*3*/].f_2) || Local_125[iVar0 /*3*/].f_1 != Local_125[iLocal_140 /*3*/].f_1)
			{
				Local_66.f_4[Local_125[iLocal_140 /*3*/].f_1] = iLocal_140 + 1;
				MISC::SET_BIT(&(Local_66.f_2), iLocal_140);
				return;
			}
		}
		else if (BitTest(Local_66.f_2, iLocal_140))
		{
			iVar2 = 0;
			while (iVar2 < 58)
			{
				if (Local_66.f_4[iVar2] == iLocal_140 + 1)
				{
					Local_66.f_4[iVar2] = 0;
				}
				iVar2++;
			}
			MISC::CLEAR_BIT(&(Local_66.f_2), iLocal_140);
		}
	}
	iLocal_140++;
	if (iLocal_140 >= 32)
	{
		iLocal_140 = 0;
	}
}

void func_891(var uParam0)//Position - 0xA3880
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			if (uParam0->f_591)
			{
				if (uParam0->f_11 != 4 || uParam0->f_116.f_31 > 6)
				{
					if (PED::HAS_PED_HEAD_BLEND_FINISHED(PLAYER::PLAYER_PED_ID()))
					{
						PED::FINALIZE_HEAD_BLEND(PLAYER::PLAYER_PED_ID());
						uParam0->f_591 = 0;
					}
				}
			}
			else if (uParam0->f_11 == 4 && uParam0->f_116.f_31 <= 6)
			{
				uParam0->f_591 = 1;
			}
		}
	}
	else
	{
		uParam0->f_591 = 0;
	}
}

void func_892(var uParam0)//Position - 0xA6073
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_66.f_0))
		{
			*uParam0 = NETWORK::NET_TO_PED(Local_66.f_0);
			uParam0->f_26 = 1;
		}
		else
		{
			*uParam0 = 0;
		}
		uParam0->f_27 = Local_66.f_3;
	}
}

void func_893(var uParam0)//Position - 0xA66A0
{
	if (!MISC::IS_STRING_NULL_OR_EMPTY(uParam0->f_486))
	{
		STREAMING::REMOVE_ANIM_DICT(uParam0->f_486);
	}
}

void func_894(var uParam0)//Position - 0x3DEC
{
	__LIB_13__::func_841(&(uParam0->f_116));
	__LIB_13__::func_840(uParam0);
	__LIB_13__::func_839(&(uParam0->f_276));
	__LIB_13__::func_838(&(uParam0->f_184));
	uParam0->f_272 = 0;
	uParam0->f_446.f_3 = 0;
	uParam0->f_446.f_6 = { 0f, 0f, 0f };
	uParam0->f_446.f_22 = { 0f, 0f, 0f };
	uParam0->f_446.f_15 = 0f;
	uParam0->f_446.f_25 = 0f;
	uParam0->f_446.f_26 = 0;
}

void func_895()//Position - 0x6892
{
	int iVar0;
	iVar0 = __LIB_0__::func_993(23);
	Global_2676732[iVar0 /*83*/] = 23;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_896(bool bParam0, int iParam1)//Position - 0x8509
{
	if (bParam0 > 255)
	{
		__LIB_0__::func_408(410, 255, iParam1);
		__LIB_0__::func_408(18095, (bParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__::func_408(410, bParam0, iParam1);
		__LIB_0__::func_408(18095, 0, iParam1);
	}
}

void func_897(bool bParam0, int iParam1)//Position - 0x8549
{
	if (bParam0 > 255)
	{
		__LIB_0__::func_408(407, 255, iParam1);
		__LIB_0__::func_408(18094, (bParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__::func_408(407, bParam0, iParam1);
		__LIB_0__::func_408(18094, 0, iParam1);
	}
}

void func_898(bool bParam0, int iParam1)//Position - 0x8589
{
	if (bParam0 > 255)
	{
		__LIB_0__::func_408(402, 255, iParam1);
		__LIB_0__::func_408(18093, (bParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__::func_408(402, bParam0, iParam1);
		__LIB_0__::func_408(18093, 0, iParam1);
	}
}

void func_899(bool bParam0, int iParam1)//Position - 0x85C9
{
	if (bParam0 > 255)
	{
		__LIB_0__::func_408(400, 255, iParam1);
		__LIB_0__::func_408(18092, (bParam0 - 255), iParam1);
	}
	else
	{
		__LIB_0__::func_408(400, bParam0, iParam1);
		__LIB_0__::func_408(18092, 0, iParam1);
	}
}

void func_900(var uParam0)//Position - 0x3E637
{
	__LIB_1__::func_22(&(uParam0->f_614));
	__LIB_1__::func_22(&(uParam0->f_624));
}

int func_901(int iParam0)//Position - 0x492BE
{
	if (iParam0 == -1 || iParam0 == 172)
	{
		return 1;
	}
	return BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_40[(iParam0 / 32)], (iParam0 % 32));
}

void func_902(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4)//Position - 0x49500
{
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(0));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(4);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(0));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(4);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
	}
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(1));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(1);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(1));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(1);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(4);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(2));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(4);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(2));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(4);
			Stack.Push(1);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(5);
		Stack.Push(1);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
}

float func_903(int iParam0, float fParam1, float fParam2, float fParam3, float fParam4, float fParam5)//Position - 0x5A2FD
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	float fVar7;
	float fVar8;
	float fVar9;
	struct<3> Var10;
	fVar5 = fParam4;
	fVar6 = fParam5;
	fVar7 = 0f;
	fVar8 = PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 239 /*INPUT_CURSOR_X*/);
	fVar9 = PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 240 /*INPUT_CURSOR_Y*/);
	if (Global_4539961 == -6)
	{
		return -1f;
	}
	switch (iParam0)
	{
		case 0:
			Var10 = { HUD::GET_PAUSE_MENU_POSITION() };
			fParam1 = (Var10.f_0 + __LIB_7__::func_711(0.005f));
			fParam2 = (Var10.f_1 + 0.518f);
			fParam3 = __LIB_7__::func_711(0.21f);
			fVar2 = 0.025f;
			fVar5 = (fParam4 + __LIB_7__::func_711(0.05f));
			fVar6 = (fParam5 - __LIB_7__::func_711(0.05f));
			fVar7 = __LIB_7__::func_711(0.005f);
			break;
		case 1:
			Var10 = { HUD::GET_PAUSE_MENU_POSITION() };
			fParam1 = (Var10.f_0 + __LIB_7__::func_711(0.145f));
			fParam2 = (Var10.f_1 + 0.417f);
			fParam3 = __LIB_7__::func_711(0.042f);
			fVar2 = 0.025f;
			fVar5 = fParam4;
			fVar6 = fParam5;
			fVar7 = (fParam3 / 2f);
			break;
		case 2:
			Var10 = { HUD::GET_PAUSE_MENU_POSITION() };
			fParam1 = (Var10.f_0 + __LIB_7__::func_711(0.145f));
			fParam2 = (Var10.f_1 + 0.457f);
			fParam3 = __LIB_7__::func_711(0.042f);
			fVar2 = 0.025f;
			fVar5 = fParam4;
			fVar6 = fParam5;
			fVar7 = (fParam3 / 2f);
			break;
		case 4:
			fParam3 = (fParam3 * 0.95f);
			fParam2 = (fParam2 + 0.035f);
			fParam1 = (fParam1 + (fParam3 * 0.025f));
			GRAPHICS::SET_SCRIPT_GFX_ALIGN(76, 84);
			GRAPHICS::SET_SCRIPT_GFX_ALIGN_PARAMS(0f, 0f, 0f, 0f);
			GRAPHICS::GET_SCRIPT_GFX_ALIGN_POSITION(fParam1, fParam2, &fParam1, &fParam2);
			GRAPHICS::RESET_SCRIPT_GFX_ALIGN();
			fVar2 = 0.025f;
			fVar5 = fParam4;
			fVar6 = fParam5;
			fVar7 = 0.005f;
			break;
	}
	fVar0 = (fParam1 + fParam3);
	fVar1 = (fParam2 + fVar2);
	if (fVar9 >= fParam2 && fVar9 <= fVar1)
	{
		if (fVar8 >= fParam1 && fVar8 <= fVar0)
		{
			fVar3 = ((fVar8 - fParam1) / fParam3);
			fVar4 = (fParam4 + ((fParam5 - fParam4) * fVar3));
			if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
			{
				fVar4 = __LIB_0__::func_331(fVar4, fVar5, fVar6);
				return fVar4;
			}
		}
		if (fVar7 > 0f)
		{
			if (fVar8 > (fParam1 - fVar7) && fVar8 < fParam1)
			{
				if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
				{
					return fParam4;
				}
			}
			if (fVar8 < (fVar0 + fVar7) && fVar8 > fVar0)
			{
				if (PAD::IS_CONTROL_PRESSED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
				{
					return fParam5;
				}
			}
		}
	}
	return -1f;
}

int func_904(int iParam0)//Position - 0x8388A
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return iParam0;
	}
	if (!__LIB_4__::func_874())
	{
		return iParam0;
	}
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 27;
		case 2:
			return 28;
		case 3:
			return 29;
		case 4:
			return 30;
		case 5:
			return 31;
		case 6:
			return 32;
		case 7:
			return 33;
		case 8:
			return 34;
		case 9:
			return 35;
		case 10:
			return 36;
		case 11:
			return 1;
		case 12:
			return 2;
		case 13:
			return 3;
		case 14:
			return 4;
		case 15:
			return 5;
		case 16:
			return 6;
		case 17:
			return 7;
		case 18:
			return 8;
		case 19:
			return 9;
		case 20:
			return 10;
		case 21:
			return 11;
		case 22:
			return 12;
		case 23:
			return 13;
		case 24:
			return 14;
		case 25:
			return 15;
		case 26:
			return 16;
		case 27:
			return 17;
		case 28:
			return 18;
		case 29:
			return 19;
		default:
	}
	return -1;
}

var func_905(var uParam0)//Position - 0x995BF
{
	int iVar0;
	int iVar1;
	StringCopy(&(uParam0->f_614.f_1), "COLOUR_SWITCHER_01", 24);
	iVar0 = __LIB_1__::func_768(&(uParam0->f_614));
	StringCopy(&(uParam0->f_624.f_1), "COLOUR_SWITCHER_02", 24);
	iVar1 = __LIB_1__::func_768(&(uParam0->f_624));
	return (iVar0 && iVar1);
}

void func_906(var uParam0)//Position - 0x331
{
	bool bVar0;
	int iVar1;
	if (uParam0->f_9 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		Local_125[PLAYER::PLAYER_ID() /*3*/] = Global_100493.f_1393[*uParam0];
		if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
		{
			__LIB_16__::func_510(*uParam0);
			if (uParam0->f_712)
			{
				if (NETWORK::IS_TIME_MORE_THAN(NETWORK::GET_NETWORK_TIME(), uParam0->f_713))
				{
					bVar0 = true;
					if ((!BitTest(Global_100493.f_1393[*uParam0], 0) && !BitTest(Global_100493.f_1393[*uParam0], 5)) && (!ENTITY::DOES_ENTITY_EXIST(uParam0->f_12) || PED::IS_PED_INJURED(uParam0->f_12)))
					{
						iVar1 = 0;
						while (iVar1 < 32)
						{
							if (__LIB_0__::func_156(PLAYER::INT_TO_PLAYERINDEX(iVar1), 1, 1))
							{
								if (BitTest(Local_125[iVar1 /*3*/], 5))
								{
									bVar0 = false;
									iVar1 = 33;
								}
							}
							iVar1++;
						}
					}
					else
					{
						bVar0 = false;
					}
					if (Global_2815059.f_5117)
					{
						bVar0 = false;
					}
					__LIB_14__::func_940(*uParam0, bVar0, 0, 1);
					uParam0->f_712 = 0;
				}
			}
			else
			{
				uParam0->f_713 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 2000);
				uParam0->f_712 = 1;
			}
		}
		else
		{
			uParam0->f_713 = NETWORK::GET_NETWORK_TIME();
			uParam0->f_712 = 1;
		}
	}
}

void func_907(var uParam0, int iParam1)//Position - 0x3DE09
{
	if (!__LIB_0__::func_157(0))
	{
		(*uParam0)[0] = __LIB_0__::func_253(387, iParam1);
		(*uParam0)[1] = __LIB_0__::func_253(388, iParam1);
		(*uParam0)[2] = __LIB_0__::func_253(389, iParam1);
		(*uParam0)[3] = __LIB_0__::func_253(390, iParam1);
		(*uParam0)[4] = __LIB_0__::func_253(391, iParam1);
		(*uParam0)[5] = __LIB_0__::func_253(392, iParam1);
		(*uParam0)[6] = __LIB_0__::func_253(393, iParam1);
		(*uParam0)[7] = __LIB_0__::func_253(394, iParam1);
		(*uParam0)[8] = __LIB_0__::func_253(395, iParam1);
		(*uParam0)[9] = __LIB_0__::func_253(396, iParam1);
		(*uParam0)[10] = __LIB_0__::func_253(397, iParam1);
		(*uParam0)[11] = __LIB_0__::func_253(398, iParam1);
		uParam0->f_13[0] = __LIB_0__::func_253(399, iParam1);
		uParam0->f_13[1] = __LIB_10__::func_581(iParam1);
		uParam0->f_13[2] = __LIB_0__::func_253(401, iParam1);
		uParam0->f_13[3] = __LIB_10__::func_580(iParam1);
		uParam0->f_13[4] = __LIB_0__::func_253(403, iParam1);
		uParam0->f_13[5] = __LIB_0__::func_253(404, iParam1);
		uParam0->f_13[6] = __LIB_0__::func_253(405, iParam1);
		uParam0->f_13[7] = __LIB_0__::func_253(406, iParam1);
		uParam0->f_13[8] = __LIB_10__::func_579(iParam1);
		uParam0->f_13[9] = __LIB_0__::func_253(408, iParam1);
		uParam0->f_13[10] = __LIB_0__::func_253(409, iParam1);
		uParam0->f_13[11] = __LIB_10__::func_578(iParam1);
		uParam0->f_26[0] = __LIB_0__::func_253(411, iParam1);
		uParam0->f_26[1] = __LIB_0__::func_253(412, iParam1);
		uParam0->f_26[2] = __LIB_0__::func_253(413, iParam1);
		uParam0->f_26[3] = __LIB_0__::func_253(414, iParam1);
		uParam0->f_26[4] = __LIB_0__::func_253(415, iParam1);
		uParam0->f_26[5] = __LIB_0__::func_253(416, iParam1);
		uParam0->f_26[6] = __LIB_0__::func_253(417, iParam1);
		uParam0->f_26[7] = __LIB_0__::func_253(418, iParam1);
		uParam0->f_26[8] = __LIB_0__::func_253(419, iParam1);
		uParam0->f_26[9] = __LIB_0__::func_253(420, iParam1);
		uParam0->f_26[10] = __LIB_0__::func_253(421, iParam1);
		uParam0->f_26[11] = __LIB_0__::func_253(422, iParam1);
		uParam0->f_39[0] = __LIB_0__::func_253(423, iParam1);
		uParam0->f_39[1] = __LIB_0__::func_253(424, iParam1);
		uParam0->f_39[2] = __LIB_0__::func_253(425, iParam1);
		uParam0->f_39[3] = __LIB_0__::func_253(426, iParam1);
		uParam0->f_39[4] = __LIB_0__::func_253(427, iParam1);
		uParam0->f_39[5] = __LIB_0__::func_253(428, iParam1);
		uParam0->f_39[6] = __LIB_0__::func_253(429, iParam1);
		uParam0->f_39[7] = __LIB_0__::func_253(430, iParam1);
		uParam0->f_39[8] = __LIB_0__::func_253(431, iParam1);
		uParam0->f_49[0] = __LIB_0__::func_253(432, iParam1);
		uParam0->f_49[1] = __LIB_0__::func_253(433, iParam1);
		uParam0->f_49[2] = __LIB_0__::func_253(434, iParam1);
		uParam0->f_49[3] = __LIB_0__::func_253(435, iParam1);
		uParam0->f_49[4] = __LIB_0__::func_253(436, iParam1);
		uParam0->f_49[5] = __LIB_0__::func_253(437, iParam1);
		uParam0->f_49[6] = __LIB_0__::func_253(438, iParam1);
		uParam0->f_49[7] = __LIB_0__::func_253(439, iParam1);
		uParam0->f_49[8] = __LIB_0__::func_253(440, iParam1);
		if (__LIB_0__::func_351(161, -1))
		{
			uParam0->f_59 = __LIB_0__::func_369(2053, iParam1, 0);
		}
		else
		{
			uParam0->f_59 = __LIB_0__::func_369(753, iParam1, 0);
		}
		uParam0->f_60 = __LIB_0__::func_369(754, iParam1, 0);
		uParam0->f_61 = __LIB_0__::func_369(755, iParam1, 0);
	}
}

void func_908(char* sParam0, int iParam1, struct<4> Param2, int iParam3, int iParam4)//Position - 0x55C36
{
	int iVar0;
	iVar0 = 999;
	switch (iParam1)
	{
		case 6:
			iVar0 = 0;
			break;
		case 7:
			iVar0 = 1;
			break;
		case 8:
			iVar0 = 2;
			break;
		case 9:
			iVar0 = 3;
			break;
		case 10:
			iVar0 = 4;
			break;
		case 11:
			iVar0 = 5;
			break;
		case 13:
			iVar0 = 6;
			break;
		case 14:
			iVar0 = 7;
			break;
		case 15:
			iVar0 = 8;
			break;
		case 5:
		case 12:
			return;
			break;
		default:
			break;
	}
	if (iParam3 != 0)
	{
		__LIB_4__::func_886(sParam0, Param2, iParam3, 0, iVar0, iParam4, -1, -1, 0, 0);
	}
	else
	{
		__LIB_4__::func_886(sParam0, Param2, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 0, iVar0, iParam4, -1, -1, 0, 0);
	}
}

bool func_909()//Position - 0x640AE
{
	return BitTest(__LIB_0__::func_369(8726, -1, 0), 0);
}

void func_910(int iParam0)//Position - 0x64B31
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	bVar0 = __LIB_13__::func_716(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[bVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_0__::func_445(&Var3, __LIB_0__::func_416(iVar1, bVar2), __LIB_0__::func_415(bVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_911()//Position - 0x921FC
{
	bool bVar0;
	bVar0 = __LIB_13__::func_716(PLAYER::PLAYER_PED_ID());
	if (__LIB_0__::func_374(bVar0))
	{
		Global_113386.f_2363.f_539.f_2340[bVar0] = MISC::GET_GAME_TIMER();
	}
}

void func_912(var uParam0, bool bParam1)//Position - 0x95DA7
{
	if (__LIB_14__::func_404(1))
	{
		if (uParam0->f_611 == -1)
		{
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
				uParam0->f_611 = __LIB_0__::func_253(451, -1) + 1;
				if (uParam0->f_611 == 256)
				{
					uParam0->f_611 = 0;
				}
			}
			uParam0->f_610 = uParam0->f_611;
		}
		if (bParam1)
		{
			uParam0->f_116.f_1 = uParam0->f_611;
		}
	}
}

int func_913(var uParam0)//Position - 0x96CA1
{
	if (uParam0->f_116.f_25)
	{
		switch (uParam0->f_116.f_26)
		{
			case 0:
				if (__LIB_12__::func_387())
				{
					uParam0->f_116.f_26 = 70;
				}
				else
				{
					uParam0->f_116.f_27 = NETWORK::GET_NETWORK_TIME();
					uParam0->f_116.f_26 = 1;
				}
				break;
			case 1:
				if (MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), uParam0->f_116.f_27)) > 1000)
				{
					if (__LIB_12__::func_387())
					{
						uParam0->f_116.f_26 = 70;
					}
					else
					{
						uParam0->f_116.f_27 = NETWORK::GET_NETWORK_TIME();
						uParam0->f_116.f_26 = 2;
					}
				}
				break;
			case 2:
				if (MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), uParam0->f_116.f_27)) > 1000)
				{
					if (__LIB_12__::func_387())
					{
						uParam0->f_116.f_26 = 70;
					}
					else
					{
						uParam0->f_116.f_26 = 90;
					}
				}
				break;
			case 70:
				if (__LIB_2__::func_835(__LIB_3__::func_534()))
				{
					if (__LIB_2__::func_834(__LIB_3__::func_534()) == 2)
					{
						uParam0->f_116.f_26 = 80;
					}
					else
					{
						uParam0->f_116.f_26 = 90;
					}
				}
				break;
			case 80:
				uParam0->f_116.f_25 = 0;
				uParam0->f_116.f_26 = 0;
				break;
			case 90:
				__LIB_1__::func_34(__LIB_3__::func_534());
				uParam0->f_116.f_15 = 0;
				uParam0->f_116.f_25 = 0;
				uParam0->f_116.f_26 = 0;
				break;
		}
		return 1;
	}
	return uParam0->f_116.f_25;
}

void func_914(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4)//Position - 0x497BA
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	FILES::INIT_SHOP_PED_COMPONENT(&iVar0);
	switch (__LIB_14__::func_466())
	{
		case 0:
			iVar3 = 6;
			break;
		case 1:
			iVar3 = 21;
			break;
		case 2:
			iVar3 = 9;
			break;
	}
	iVar2 = FILES::SETUP_SHOP_PED_APPAREL_QUERY_TU(iParam2, 10, -1, false, 0, 2);
	iVar1 = 0;
	while (iVar1 < iVar2)
	{
		FILES::GET_SHOP_PED_QUERY_COMPONENT(iVar1, &iVar0);
		if (!FILES::IS_CONTENT_ITEM_LOCKED(iVar0))
		{
			iVar4 = (iVar3 + iVar1);
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(iVar4);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		iVar1++;
	}
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(0));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(1);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(4);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(0));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(1);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(0));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(6);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(8);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(9);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(14);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(15);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(1));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(17);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(19);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(1);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(3);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(4);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(5);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(7);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(10);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(11);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(12);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(13);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(16);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(1));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(17);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(18);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(1));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(19);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	if (iParam4 == 1)
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(2));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(3);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(5);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
	else
	{
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		if (__LIB_0__::func_420(1, 1))
		{
			Stack.Push(uParam1);
			Stack.Push(iParam2);
			Stack.Push(__LIB_12__::func_894(2));
			Stack.Push(iParam3);
			Stack.Push(0);
			Stack.Push(3);
			Stack.Push(2);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(0);
			Stack.Push(-1);
			Call_Loc(*uParam0);
		}
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(5);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
		Stack.Push(uParam1);
		Stack.Push(iParam2);
		Stack.Push(__LIB_12__::func_894(2));
		Stack.Push(iParam3);
		Stack.Push(0);
		Stack.Push(6);
		Stack.Push(2);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(0);
		Stack.Push(-1);
		Call_Loc(*uParam0);
	}
}

int func_915(int iParam0)//Position - 0x59E02
{
	if (iParam0 == 0)
	{
		return 1;
	}
	if (__LIB_14__::func_404(1))
	{
		if (Global_78319)
		{
			if (MONEY::NETWORK_CAN_SPEND_MONEY(iParam0, false, true, false, -1, 0))
			{
				return 1;
			}
		}
		else if (__LIB_16__::func_413(__LIB_14__::func_466()) >= iParam0)
		{
			return 1;
		}
	}
	return 0;
}

int func_916(var uParam0)//Position - 0x9FAE0
{
	if (uParam0->f_490 == 0)
	{
		if (__LIB_14__::func_445())
		{
			CAM::DO_SCREEN_FADE_OUT(500);
			uParam0->f_490 = 1;
			return 1;
		}
	}
	return 0;
}

void func_917(var uParam0)//Position - 0xA2AF9
{
	if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) && uParam0->f_11 > 0) && uParam0->f_116.f_31 < 6)
	{
		if (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Local_66.f_1))
		{
			STREAMING::REQUEST_MODEL(joaat("p_cs_scissors_s"));
			if (STREAMING::HAS_MODEL_LOADED(joaat("p_cs_scissors_s")))
			{
				if (__LIB_2__::func_852(1, 0, 1))
				{
					NETWORK::RESERVE_NETWORK_MISSION_OBJECTS(1);
					if (__LIB_1__::func_671(&(Local_66.f_1), joaat("p_cs_scissors_s"), uParam0->f_12.f_6, 1, 1, 0, 1, 0, 0, 0))
					{
						ENTITY::SET_ENTITY_VISIBLE(NETWORK::NET_TO_ENT(Local_66.f_1), false, false);
						ENTITY::SET_ENTITY_COLLISION(NETWORK::NET_TO_ENT(Local_66.f_1), false, false);
						if (uParam0->f_523 == 50)
						{
							NETWORK::NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(NETWORK::NET_TO_ENT(Local_66.f_1), true);
						}
						ENTITY::FREEZE_ENTITY_POSITION(NETWORK::NET_TO_ENT(Local_66.f_1), true);
						STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("p_cs_scissors_s"));
					}
				}
			}
		}
	}
}

void func_918(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x9B87B
{
	int iVar0;
	iVar0 = 1;
	*uParam1 = { 136.87857f, -1711.7964f, 28.29161f };
	*uParam2 = { 135.71735f, -1713.2306f, 30.29161f };
	*uParam3 = 1.4f;
	__LIB_15__::func_119(iVar0, iParam0, uParam1);
	__LIB_15__::func_119(iVar0, iParam0, uParam2);
}

void func_919(int iParam0, var uParam1)//Position - 0x9D9FD
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar1 = MISC::GET_HASH_KEY("v_hairdresser");
	iVar2 = MISC::GET_HASH_KEY("v_barbers");
	iVar3 = MISC::GET_HASH_KEY("vw_dlc_casino_apart");
	iVar4 = MISC::GET_HASH_KEY(__LIB_3__::func_285(iParam0));
	if (iVar4 == iVar1)
	{
		iVar0 = 0;
		*uParam1 = { -825.9313f, -189.4604f, 36.6014f };
	}
	else if (iVar4 == iVar2)
	{
		iVar0 = 1;
		*uParam1 = { 130.3482f, -1713.9735f, 28.2503f };
	}
	else if (iVar4 == iVar3)
	{
		iVar0 = 0;
		*uParam1 = { -825.9313f, -189.4604f, 36.6014f };
	}
	__LIB_15__::func_119(iVar0, iParam0, uParam1);
}

int func_920(int iParam0, var uParam1, var uParam2)//Position - 0xA610B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	*uParam1 = { 0f, 0f, 0f };
	*uParam2 = { 0f, 0f, 0f };
	iVar0 = MISC::GET_HASH_KEY("v_hairdresser");
	iVar1 = MISC::GET_HASH_KEY("v_barbers");
	iVar2 = MISC::GET_HASH_KEY("vw_dlc_casino_apart");
	iVar3 = MISC::GET_HASH_KEY(__LIB_3__::func_285(iParam0));
	if (iVar3 == iVar0)
	{
		iVar4 = 0;
		*uParam1 = { -816.22f, -182.97f, 36.57f };
		*uParam2 = { 0f, 0f, (__LIB_0__::func_503(-2.6f) - 90f) };
	}
	else if (iVar3 == iVar1)
	{
		iVar4 = 1;
		*uParam1 = { 138.3646f, -1709.2522f, 28.3182f };
		*uParam2 = { 0f, 0f, (__LIB_0__::func_503(-5.41f) - 90f) };
	}
	else if (iVar3 == iVar2)
	{
		iVar4 = 0;
		*uParam1 = { -816.22f, -182.97f, 36.57f };
		*uParam2 = { 0f, 0f, (__LIB_0__::func_503(-2.6f) - 90f) };
	}
	if (!__LIB_0__::func_78(*uParam1, 0f, 0f, 0f, 0) && !__LIB_0__::func_78(*uParam2, 0f, 0f, 0f, 0))
	{
		__LIB_15__::func_119(iVar4, iParam0, uParam1);
		__LIB_15__::func_128(iVar4, iParam0, uParam2);
		return 1;
	}
	if (__LIB_0__::func_78(*uParam1, 0f, 0f, 0f, 0))
	{
	}
	if (__LIB_0__::func_78(*uParam2, 0f, 0f, 0f, 0))
	{
	}
	return 0;
}

void func_921(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x9B8C8
{
	int iVar0;
	iVar0 = 1;
	*uParam1 = { 136.83f, -1712.38f, 28.7754f };
	*uParam2 = { 136.27f, -1713.03f, 28.7754f };
	*uParam3 = 55f;
	__LIB_15__::func_119(iVar0, iParam0, uParam1);
	__LIB_15__::func_119(iVar0, iParam0, uParam2);
	__LIB_15__::func_124(iVar0, iParam0, uParam3);
}

void func_922(int iParam0, var uParam1)//Position - 0x9EAF7
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = MISC::GET_HASH_KEY("v_hairdresser");
	iVar1 = MISC::GET_HASH_KEY("v_barbers");
	iVar2 = MISC::GET_HASH_KEY("vw_dlc_casino_apart");
	iVar3 = MISC::GET_HASH_KEY(__LIB_3__::func_285(iParam0));
	if (iVar3 == iVar0)
	{
		iVar4 = 0;
		*(uParam1[0 /*3*/]) = { -820.49f, -186.87f, 36.5792f };
		uParam1->f_7[0] = 303.2416f;
		*(uParam1[1 /*3*/]) = { -820.4874f, -186.8682f, 36.5689f };
		uParam1->f_7[1] = 297.7427f;
		switch (uParam1->f_28)
		{
			case 0:
				uParam1->f_11[0 /*3*/] = { -821.3704f, -188.6373f, 38.1144f };
				uParam1->f_18[0 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[1 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[1] = 45f;
				break;
			case 1:
				uParam1->f_11[0 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[0 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[1 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[1] = 45f;
				break;
			case 2:
				uParam1->f_11[0 /*3*/] = { -816.8626f, -187.4645f, 38.2802f };
				uParam1->f_18[0 /*3*/] = { -12.0164f, 0f, -0.8625f };
				uParam1->f_25[0] = 35f;
				uParam1->f_11[1 /*3*/] = { -816.853f, -187.3602f, 38.258f };
				uParam1->f_18[1 /*3*/] = { -12.0164f, 0f, -0.8625f };
				uParam1->f_25[1] = 35f;
				break;
		}
	}
	else if (iVar3 == iVar1)
	{
		iVar4 = 1;
		*(uParam1[0 /*3*/]) = { 133.3136f, -1711.1904f, 28.2916f };
		uParam1->f_7[0] = 316.6123f;
		*(uParam1[1 /*3*/]) = { 134.7426f, -1710.8428f, 28.2916f };
		uParam1->f_7[1] = 310.9816f;
		switch (uParam1->f_28)
		{
			case 0:
				uParam1->f_11[0 /*3*/] = { 139.5276f, -1708.9738f, 29.7782f };
				uParam1->f_18[0 /*3*/] = { -4.721f, 0.2142f, 119.2654f };
				uParam1->f_25[0] = 40f;
				uParam1->f_11[1 /*3*/] = { 139.39f, -1709.0494f, 29.7652f };
				uParam1->f_18[1 /*3*/] = { -4.721f, 0.2142f, 119.2654f };
				uParam1->f_25[1] = 40f;
				break;
			case 1:
				uParam1->f_11[0 /*3*/] = { 139.39f, -1709.0494f, 29.7652f };
				uParam1->f_18[0 /*3*/] = { -4.721f, 0.2142f, 119.2654f };
				uParam1->f_25[0] = 40f;
				uParam1->f_11[1 /*3*/] = { 139.3498f, -1709.0717f, 29.7614f };
				uParam1->f_18[1 /*3*/] = { -4.721f, 0.2142f, 119.2654f };
				uParam1->f_25[1] = 40f;
				break;
			case 2:
				uParam1->f_11[0 /*3*/] = { 138.1713f, -1707.7611f, 29.7857f };
				uParam1->f_18[0 /*3*/] = { -6.5899f, 0.2142f, -160.3469f };
				uParam1->f_25[0] = 40f;
				uParam1->f_11[1 /*3*/] = { 138.0825f, -1707.5123f, 29.8162f };
				uParam1->f_18[1 /*3*/] = { -6.5899f, 0.2142f, -160.3469f };
				uParam1->f_25[1] = 40f;
				break;
			case 3:
				break;
			case 4:
				uParam1->f_11[0 /*3*/] = { 134.0933f, -1712.4443f, 30.0197f };
				uParam1->f_18[0 /*3*/] = { -9.3416f, 0f, -25.3724f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { 134.0933f, -1712.4443f, 30.0197f };
				uParam1->f_18[1 /*3*/] = { -9.3416f, 0f, -25.3724f };
				uParam1->f_25[1] = 45f;
				break;
			case 5:
				break;
			case 6:
				uParam1->f_11[0 /*3*/] = { 134.0933f, -1712.4443f, 30.0197f };
				uParam1->f_18[0 /*3*/] = { -9.3416f, 0f, -25.3724f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { 134.0933f, -1712.4443f, 30.0197f };
				uParam1->f_18[1 /*3*/] = { -9.3416f, 0f, -25.3724f };
				uParam1->f_25[1] = 45f;
				break;
		}
	}
	else if (iVar3 == iVar2)
	{
		iVar4 = 0;
		*(uParam1[0 /*3*/]) = { -820.49f, -186.87f, 36.5792f };
		uParam1->f_7[0] = 303.2416f;
		*(uParam1[1 /*3*/]) = { -820.4874f, -186.8682f, 36.5689f };
		uParam1->f_7[1] = 297.7427f;
		switch (uParam1->f_28)
		{
			case 0:
				uParam1->f_11[0 /*3*/] = { -821.3704f, -188.6373f, 38.1144f };
				uParam1->f_18[0 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[1 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[1] = 45f;
				break;
			case 1:
				uParam1->f_11[0 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[0 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[0] = 45f;
				uParam1->f_11[1 /*3*/] = { -821.3514f, -188.5915f, 38.1065f };
				uParam1->f_18[1 /*3*/] = { -9.1377f, 0f, -26.8098f };
				uParam1->f_25[1] = 45f;
				break;
			case 2:
				uParam1->f_11[0 /*3*/] = { -816.8626f, -187.4645f, 38.2802f };
				uParam1->f_18[0 /*3*/] = { -12.0164f, 0f, -0.8625f };
				uParam1->f_25[0] = 35f;
				uParam1->f_11[1 /*3*/] = { -816.853f, -187.3602f, 38.258f };
				uParam1->f_18[1 /*3*/] = { -12.0164f, 0f, -0.8625f };
				uParam1->f_25[1] = 35f;
				break;
			}
	}
	__LIB_15__::func_119(iVar4, iParam0, uParam1[0 /*3*/]);
	__LIB_15__::func_124(iVar4, iParam0, &(uParam1->f_7[0]));
	__LIB_15__::func_119(iVar4, iParam0, uParam1[1 /*3*/]);
	__LIB_15__::func_124(iVar4, iParam0, &(uParam1->f_7[1]));
	__LIB_15__::func_119(iVar4, iParam0, &(uParam1->f_11[0 /*3*/]));
	__LIB_15__::func_128(iVar4, iParam0, &(uParam1->f_18[0 /*3*/]));
	__LIB_15__::func_119(iVar4, iParam0, &(uParam1->f_11[1 /*3*/]));
	__LIB_15__::func_128(iVar4, iParam0, &(uParam1->f_18[1 /*3*/]));
}

void func_923(int iParam0, struct<3> Param1)//Position - 0x2DDF3
{
	int iVar0;
	struct<3> Var1[8];
	float fVar2;
	struct<3> Var3;
	iVar0 = 0;
	while (iVar0 <= 7)
	{
		Var1[iVar0 /*3*/] = { Param1 + __LIB_27__::func_545(iVar0) };
		MISC::GET_GROUND_Z_FOR_3D_COORD(Var1[iVar0 /*3*/], &fVar2, false, false);
		if (fVar2 < (Param1.f_2 - 2f) || fVar2 > (Param1.f_2 + 2f))
		{
			Var1[iVar0 /*3*/].f_2 = Param1.f_2;
		}
		else
		{
			Var1[iVar0 /*3*/].f_2 = fVar2;
		}
		iVar0++;
	}
	Var3 = { __LIB_18__::func_936(&Var1) };
	GRAPHICS::SET_CHECKPOINT_CLIPPLANE_WITH_POS_NORM(iParam0, Param1 - Vector(0.3f, 0f, 0f), Var3);
}

int func_924()//Position - 0x2ABED
{
	var uVar0;
	switch (__LIB_0__::func_683())
	{
		case 0:
			STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY"), &uVar0, -1);
			break;
		case 1:
			STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY"), &uVar0, -1);
			break;
		case 2:
			STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY"), &uVar0, -1);
			break;
	}
	return uVar0;
}

void func_925(int iParam0, int iParam1, char* sParam2, int iParam3, int iParam4, char* sParam5, int iParam6, int iParam7, char* sParam8, int iParam9, int iParam10, int iParam11, int iParam12, char* sParam13, int iParam14, int iParam15, int iParam16, char* sParam17, int iParam18, int iParam19, char* sParam20, int iParam21, char* sParam22, int iParam23, bool bParam24, int iParam25, char* sParam26, float fParam27, int iParam28, int iParam29, float fParam30, int iParam31, bool bParam32, int iParam33, int iParam34, char* sParam35, bool bParam36)//Position - 0x2B24B
{
	int iVar0;
	char* sVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	char* sVar5;
	char* sVar6;
	char* sVar7;
	char* sVar8;
	char* sVar9;
	char* sVar10;
	char* sVar11;
	if (bParam24)
	{
		iVar0 = 1;
	}
	else
	{
		iVar0 = 0;
	}
	if (iParam34 != -1)
	{
		__LIB_18__::func_743(iParam34, "TIMER_CHALLTIME" /* GXT: CHALLENGE TIME */, iParam9, iVar0, iParam25, 0, 10, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
	}
	__LIB_19__::func_9();
	if (fParam27 > -1f)
	{
		__LIB_16__::func_623(0, "", iParam25, iParam28, 10, 0, sParam26, 1, fParam27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 1, -1);
	}
	if (iParam15 > -1)
	{
		sVar1 = sParam17;
		if (__LIB_1__::func_76(sVar1))
		{
			sVar1 = "TIM_DAMAGE" /* GXT: DAMAGE */;
		}
		__LIB_16__::func_621(iParam15, iParam16, sVar1, iParam18, iParam25, 10, -1f, -1f, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, -1, 0, -1, -1082130432, -1082130432, 0, 1, 0, 0, 1, -1, 0, -1, 1);
	}
	if (!bParam32 || __LIB_1__::func_202())
	{
		if (iParam6 > -1 && iParam7 > 0)
		{
			sVar2 = sParam8;
			if (__LIB_1__::func_76(sVar2))
			{
				sVar2 = "TIM_POSIT" /* GXT: POSITION */;
			}
			__LIB_27__::func_542(iParam6, iParam7, sVar2, iParam10, iParam25, 7, 0, 0, 0, iParam10, 0, 0, 0);
		}
	}
	if (iParam3 > -1)
	{
		sVar3 = sParam5;
		if (__LIB_1__::func_76(sVar3))
		{
			sVar3 = "TIM_LAP" /* GXT: LAP */;
		}
		iParam3 = iParam3;
		iParam4 = iParam4;
		if (Global_1836356)
		{
			if (__LIB_0__::func_409())
			{
				__LIB_3__::func_437(iParam3, iParam4, sVar3, iParam25, 1, 8, 0, 0, 0, 0, 0, 1, 1, 0, 255, 0);
			}
		}
	}
	if (iParam11 > -1 && iParam12 > -1)
	{
		sVar4 = sParam13;
		if (__LIB_1__::func_76(sVar4))
		{
			sVar4 = "TIM_CHECKPOIN" /* GXT: CHECKPOINT */;
		}
		iParam14 = iParam14;
		if (Global_1836356)
		{
			__LIB_27__::func_542(iParam11, iParam12, sVar4, iParam14, iParam25, 7, 0, 0, 0, 1, 0, 0, 0);
		}
	}
	if (fParam30 > -1f)
	{
		sVar5 = "TIM_DISTANCE" /* GXT: CHECKPOINT */;
		sVar6 = "FMMC_LENGTHM";
		__LIB_16__::func_623(0, sVar5, -1, 1, 7, 0, sVar6, 1, fParam30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 1, -1);
	}
	if (iParam19 > -1)
	{
		sVar7 = sParam20;
		if (__LIB_1__::func_76(sVar7))
		{
			sVar7 = "TIMER_BESLAP" /* GXT: BEST LAP */;
		}
	}
	if ((((Global_4718592.f_107227 != 1 && Global_4718592.f_107227 != 3) && Global_4718592.f_107227 != 5) && Global_4718592.f_107227 != 7) && Global_4718592.f_107227 != 19)
	{
		if (iParam21 > -1)
		{
			if (!__LIB_0__::func_457(PLAYER::PLAYER_ID()))
			{
				sVar8 = sParam22;
				if (__LIB_1__::func_76(sVar8))
				{
					sVar8 = "TIMER_CURLAP" /* GXT: CURRENT LAP */;
				}
				__LIB_18__::func_743(iParam21, sVar8, 0, 1, iParam25, iParam23, 6, 0, iParam29, 0, 0, 0, 0, 0, 0, 0, 0, -1);
			}
		}
	}
	if (__LIB_1__::func_76(sVar9))
	{
		sVar9 = __LIB_18__::func_745(iParam1);
	}
	if (!bParam36)
	{
		if ((bParam32 || Global_1836356) || __LIB_2__::func_6() == 2)
		{
			if (bParam32)
			{
				if (Global_1836356 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam35))
				{
					__LIB_18__::func_743(iParam31, sParam35, iParam9, 1, iParam25, 0, 5, 1, 1, 0, 0, iParam31 <= 0, 0, 0, 0, 0, 0, -1);
				}
				else if (iParam31 <= 0)
				{
					__LIB_18__::func_743(iParam31, sVar9, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, -1);
				}
				else
				{
					__LIB_18__::func_743(iParam31, sVar9, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
				}
			}
			else if (__LIB_2__::func_6() == 2 && !MISC::IS_STRING_NULL_OR_EMPTY(sParam35))
			{
				__LIB_18__::func_743(iParam31, sParam35, iParam9, 1, iParam25, 0, 5, 1, 1, 0, 0, iParam31 <= 0, 0, 0, 0, 0, 0, -1);
			}
			else if (iParam31 <= 0)
			{
				__LIB_18__::func_743(iParam31, sVar9, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, -1);
			}
			else
			{
				__LIB_18__::func_743(iParam31, sVar9, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
			}
		}
	}
	else if (Global_1836356 || __LIB_2__::func_6() == 2)
	{
		if (iParam19 <= 0)
		{
			__LIB_18__::func_743(iParam19, sParam20, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, -1);
		}
		else
		{
			__LIB_18__::func_743(iParam19, sParam20, iParam9, 1, iParam25, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
		}
	}
	sVar10 = sParam2;
	if (__LIB_1__::func_76(sVar10))
	{
		sVar10 = "TIMER_TIME_RCE" /* GXT: TIME */;
	}
	if (iParam0 > -1)
	{
		__LIB_18__::func_743(iParam0, sVar10, iParam9, iVar0, iParam25, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1);
	}
	if (__LIB_1__::func_76(sVar11))
	{
		sVar11 = "TIMER_CHALLTIME" /* GXT: CHALLENGE TIME */;
	}
	iParam33 = iParam33;
}

bool func_926(int iParam0)//Position - 0x1FE5
{
	return BitTest(Global_113386.f_1.f_116, iParam0);
}

char* func_927(int iParam0)//Position - 0x24CD
{
	switch (iParam0)
	{
		case 1:
			return "HC_N_GUS" /* GXT: Gustavo Mota */;
			break;
		case 2:
			return "HC_N_KAR" /* GXT: Karl Abolaji */;
			break;
		case 10:
			return "HC_N_PAC" /* GXT: Packie McReary */;
			break;
		case 11:
			return "HC_N_CHE" /* GXT: Chef */;
			break;
		case 3:
			return "HC_N_HUG" /* GXT: Hugh Welsh */;
			break;
		case 4:
			return "HC_N_NOR" /* GXT: Norm Richards */;
			break;
		case 5:
			return "HC_N_DAR" /* GXT: Daryl Johns */;
			break;
		case 6:
			return "HC_N_PAI" /* GXT: Paige Harris */;
			break;
		case 7:
			return "HC_N_CHR" /* GXT: Christian Feltz */;
			break;
		case 12:
			return "HC_N_RIC" /* GXT: Rickie Lukens */;
			break;
		case 8:
			return "HC_N_EDD" /* GXT: Eddie Toh */;
			break;
		case 13:
			return "HC_N_TAL" /* GXT: Taliana Martinez */;
			break;
		case 9:
			return "HC_N_KRM" /* GXT: Karim Denz */;
			break;
	}
	return "ERROR!";
}

int func_928(int iParam0)//Position - 0x271D
{
	switch (iParam0)
	{
		case 0:
			return 2;
			break;
		case 1:
			return 3;
			break;
		case 2:
			return 4;
			break;
		case 3:
			return 5;
			break;
		case 4:
			return 6;
			break;
	}
	return -1;
}

int func_929(int iParam0, int iParam1)//Position - 0x23D7
{
	return SYSTEM::ROUND(((SYSTEM::TO_FLOAT(__LIB_17__::func_725(iParam0, iParam1)) / SYSTEM::TO_FLOAT(__LIB_0__::func_597(iParam1))) * 100f));
}

void func_930(int iParam0, bool bParam1)//Position - 0x162FD
{
	__LIB_16__::func_894(iParam0);
	__LIB_15__::func_226(iParam0, bParam1);
	__LIB_14__::func_631(iParam0);
	__LIB_14__::func_630(iParam0);
	__LIB_14__::func_629(iParam0);
	__LIB_14__::func_628(iParam0);
	__LIB_14__::func_627(iParam0);
}

int func_931(int iParam0, bool bParam1)//Position - 0x177D0
{
	bool bVar0;
	bool bVar1;
	if (!iParam0->f_39)
	{
		iParam0->f_7 = 4;
		iParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = iParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_682(__LIB_14__::func_466()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || iParam0->f_24[bParam1] != 0) || ((__LIB_15__::func_971(bParam1) && __LIB_17__::func_65(bParam1)) && !iParam0->f_18[bParam1]))
			{
				if (!iParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*iParam0)[bParam1]) || bVar0)
					{
						if (iParam0->f_34[bParam1] != 1 && iParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (iParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				iParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	iParam0->f_39 = 0;
	return 0;
}

void func_932()//Position - 0x1D7
{
	int iVar0;
	if (Global_78579)
	{
		return;
	}
	if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::GET_PLAYER_INDEX()))
	{
		return;
	}
	iVar0 = SYSTEM::ROUND((1f + (1000f * SYSTEM::TIMESTEP())));
	Global_96661.f_8 = (Global_96661.f_8 + iVar0);
}

void func_933(var uParam0)//Position - 0x219
{
	if (BitTest(Global_96449, *uParam0))
	{
		if (BitTest(uParam0->f_449, 1))
		{
			MISC::SET_BIT(&(uParam0->f_449), 15);
			MISC::SET_BIT(&(uParam0->f_449), 16);
			MISC::SET_BIT(&(uParam0->f_449), 14);
			MISC::CLEAR_BIT(&Global_96449, *uParam0);
		}
	}
}

void func_934(var uParam0, struct<2> Param1, struct<2> Param2, int iParam3)//Position - 0x1336
{
	if (uParam0->f_483 == 3)
	{
		return;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Param2))
	{
		uParam0->f_467[uParam0->f_483 /*5*/] = { Param1 };
		uParam0->f_467[uParam0->f_483 /*5*/].f_2 = { Param2 };
		uParam0->f_467[uParam0->f_483 /*5*/].f_4 = iParam3;
		uParam0->f_483++;
	}
}

void func_935(var uParam0, struct<3> Param1, float fParam2)//Position - 0x13DB
{
	uParam0->f_11 = { Param1 };
	if (fParam2 != -1f)
	{
		uParam0->f_7 = fParam2;
	}
}

void func_936(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x14DF
{
	int iVar0;
	int iVar1;
	iVar0 = uParam0->f_1.f_2;
	iVar1 = uParam0->f_1.f_3;
	if (*uParam1 < 0 || *uParam1 > iVar0)
	{
		return;
	}
	if (uParam1->f_1 < 0 || uParam1->f_1 > iVar1)
	{
		return;
	}
	*uParam2 = (SYSTEM::TO_FLOAT(*uParam1) / SYSTEM::TO_FLOAT(iVar0));
	*uParam3 = (SYSTEM::TO_FLOAT(uParam1->f_1) / SYSTEM::TO_FLOAT(iVar1));
}

int func_937(int iParam0, int iParam1)//Position - 0x154A
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 2;
					break;
				case 1:
					return 1;
					break;
				default:
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 3;
					break;
				case 1:
					return 4;
					break;
				default:
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return 5;
					break;
				default:
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					return 6;
					break;
				case 1:
					return 7;
					break;
				default:
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					return 8;
					break;
				case 1:
					return 9;
					break;
				default:
					break;
			}
			break;
	}
	return 0;
}

bool func_938(int iParam0, int iParam1)//Position - 0x18EE
{
	return BitTest(Global_113386.f_1.f_120[iParam0], iParam1);
}

void func_939(var uParam0)//Position - 0x1905
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_LABELS");
	__LIB_0__::func_610("H_CRW_NAME" /* GXT: Name */);
	__LIB_0__::func_610("H_CRW_TYPE" /* GXT: Expertise */);
	__LIB_0__::func_610("H_CRW_SKILLS" /* GXT: Skills */);
	switch (*uParam0)
	{
		case 0:
			__LIB_0__::func_610("H_LBL_JWL" /* GXT: JEWEL STORE */);
			break;
		case 1:
			__LIB_0__::func_610("H_LBL_DOC" /* GXT: LS PORT */);
			break;
		case 2:
			__LIB_0__::func_610("H_LBL_RUR" /* GXT: PALETO */);
			break;
		case 3:
			__LIB_0__::func_610("H_LBL_AGN" /* GXT: BUREAU */);
			break;
		case 4:
			__LIB_0__::func_610("H_LBL_FA" /* GXT: BIG SCORE A */);
			__LIB_0__::func_610("H_LBL_FB" /* GXT: BIG SCORE B */);
			break;
	}
	if (*uParam0 != 1)
	{
		__LIB_0__::func_610("H_LBL_CRW" /* GXT: CREW */);
	}
	__LIB_0__::func_610("H_LBL_TODO" /* GXT: TODO */);
	if (*uParam0 != 2)
	{
		__LIB_0__::func_610("H_LBL_APP" /* GXT: APPROACH */);
	}
	switch (*uParam0)
	{
		case 0:
			__LIB_0__::func_610("H_LBL_J1" /* GXT: CCTV */);
			__LIB_0__::func_610("H_LBL_J2" /* GXT: VENT */);
			__LIB_0__::func_610("H_LBL_J3" /* GXT: ALARM */);
			__LIB_0__::func_610("H_LBL_J4" /* GXT: TUNNEL */);
			__LIB_0__::func_610("HC_J_IMPACT" /* GXT: LOUD */);
			__LIB_0__::func_610("HC_J_STEALTH" /* GXT: SMART */);
			break;
		case 1:
			__LIB_0__::func_610("HC_D_BLOW_UP" /* GXT: FREIGHTER */);
			__LIB_0__::func_610("HC_D_DEEP_SEA" /* GXT: OFFSHORE */);
			break;
		case 2:
			__LIB_0__::func_610("H_LBL_R1" /* GXT: plan A */);
			__LIB_0__::func_610("H_LBL_R2" /* GXT: plan B? */);
			__LIB_0__::func_610("H_LBL_R3" /* GXT: 67 secs */);
			__LIB_0__::func_610("H_LBL_R4" /* GXT: 8+ Cops */);
			__LIB_0__::func_610("H_LBL_R5" /* GXT: 4 Cars */);
			__LIB_0__::func_610("H_LBL_R6" /* GXT: Banker's wife */);
			__LIB_0__::func_610("H_LBL_R7" /* GXT: $$$ */);
			__LIB_0__::func_610("H_LBL_R8" /* GXT: Need military grade hardware */);
			__LIB_0__::func_610("H_LBL_R9" /* GXT: 8/10 Smash it! */);
			__LIB_0__::func_610("H_LBL_R10" /* GXT: Military Hardware Route */);
			__LIB_0__::func_610("H_LBL_R11" /* GXT: Every 2 or 3hrs */);
			__LIB_0__::func_610("H_LBL_R12" /* GXT: BOAT */);
			break;
		case 3:
			__LIB_0__::func_610("H_LBL_A1" /* GXT: Davis fire station */);
			__LIB_0__::func_610("H_LBL_A2" /* GXT: floor 53 */);
			__LIB_0__::func_610("H_LBL_A3" /* GXT: Bomb */);
			__LIB_0__::func_610("H_LBL_A4" /* GXT: Drive 10 */);
			__LIB_0__::func_610("H_LBL_A5" /* GXT: 83QSL722 */);
			__LIB_0__::func_610("HC_A_FIRETRUCK" /* GXT: FIRE CREW */);
			__LIB_0__::func_610("HC_A_HELICOPTER" /* GXT: ROOF ENTRY */);
			break;
		case 4:
			__LIB_0__::func_610("H_LBL_F1" /* GXT: DROP-OFF */);
			__LIB_0__::func_610("H_LBL_F2" /* GXT: HOLE */);
			__LIB_0__::func_610("H_LBL_F3" /* GXT: SECURITY */);
			__LIB_0__::func_610("H_LBL_F4" /* GXT: GETAWAY */);
			__LIB_0__::func_610("H_LBL_F5" /* GXT: TUNNEL AMBUSH */);
			__LIB_0__::func_610("HC_F_TRAFFCONT" /* GXT: SUBTLE */);
			__LIB_0__::func_610("HC_F_HELI" /* GXT: OBVIOUS */);
			break;
	}
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_940(var uParam0)//Position - 0x1B07
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT_EMPTY");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

bool func_941(int iParam0)//Position - 0x1E2E
{
	return BitTest(Global_113386.f_1.f_118, iParam0);
}

var func_942(int iParam0)//Position - 0x1FA0
{
	return Global_96316[iParam0 /*5*/].f_1;
}

char* func_943(int iParam0, int iParam1)//Position - 0x20C0
{
	switch (iParam0)
	{
		case 1:
			switch (iParam1)
			{
				case 0:
					return "HC_STA_G1" /* GXT: Max Health */;
					break;
				case 1:
					return "HC_STA_G2" /* GXT: Accuracy */;
					break;
				case 2:
					return "HC_STA_G3" /* GXT: Shoot Rate */;
					break;
				case 3:
					return "HC_STA_G4" /* GXT: Weapon Choice */;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return "HC_STA_H1" /* GXT: Sys Knowledge */;
					break;
				case 1:
					return "HC_STA_H2" /* GXT: Decryption Skill */;
					break;
				case 2:
					return "HC_STA_H3" /* GXT: Access Speed */;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					return "HC_STA_D1" /* GXT: Driving Skill */;
					break;
				case 1:
					return "HC_STA_D2" /* GXT: Composure */;
					break;
				case 2:
					return "HC_STA_D3" /* GXT: Vehicle Choice */;
					break;
			}
			break;
	}
	return "ERROR!";
}

char* func_944(int iParam0)//Position - 0x22D2
{
	switch (Global_96316[iParam0 /*5*/])
	{
		case 1:
			return "HC_TYPE_G" /* GXT: Gunman */;
			break;
		case 2:
			return "HC_TYPE_H" /* GXT: Hacker */;
			break;
		case 3:
			return "HC_TYPE_D" /* GXT: Driver */;
			break;
	}
	return "ERROR!";
}

void func_945(var uParam0, int iParam1)//Position - 0x240C
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT_EMPTY");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam1);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_946(var uParam0)//Position - 0x2509
{
	switch (uParam0->f_464)
	{
		case 1:
		case 2:
		case 3:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "FOCUS_VIEW");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(99);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
	}
	HUD::CLEAR_HELP(false);
}

void func_947(int iParam0)//Position - 0x57C1
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[7];
			if (iVar0 == 1)
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_JEWEL_STEALTH"), true, true);
			}
			else
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_JEWEL_STEALTH"), false, true);
			}
			break;
		case 1:
			iVar0 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[8];
			if (iVar0 == 3)
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_DOCKS_SINK_SHIP"), true, true);
			}
			else
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_DOCKS_SINK_SHIP"), false, true);
			}
			break;
		case 3:
			iVar0 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[10];
			if (iVar0 == 6)
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_BUREAU_FIRECREW"), true, true);
			}
			else
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_BUREAU_FIRECREW"), false, true);
			}
			break;
		case 4:
			iVar0 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[11];
			if (iVar0 == 8)
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_BIGS_TRAFFIC"), true, true);
			}
			else
			{
				STATS::STAT_SET_BOOL(joaat("SP_HEIST_CHOSE_BIGS_TRAFFIC"), false, true);
			}
			break;
	}
}

void func_948(int iParam0)//Position - 0x5D01
{
	switch (iParam0)
	{
		case 0:
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 0);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 1);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 2);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 3);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 4);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 5);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 6);
			break;
		case 2:
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 7);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 8);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 9);
			break;
		case 3:
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 10);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 11);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 12);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 13);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 14);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 15);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 16);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 17);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 18);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 19);
			MISC::CLEAR_BIT(&(Global_113386.f_1.f_117), 20);
			break;
	}
}

void func_949()//Position - 0x60B2
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_20410.f_145)
	{
		__LIB_13__::func_99(iVar0);
		iVar0++;
	}
	Global_113386.f_20410.f_145 = 0;
	iVar0 = 0;
	while (iVar0 < 2)
	{
		Global_113386.f_20410.f_146[iVar0] = 0;
		iVar0++;
	}
	if (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
	}
}

void func_950(var uParam0, struct<3> Param1, struct<3> Param2, float fParam3, int iParam4, int iParam5, int iParam6, var uParam7, int iParam8, int iParam9, float fParam10, bool bParam11)//Position - 0x612E
{
	uParam0->f_1 = { Param1 };
	uParam0->f_4 = { Param2 };
	uParam0->f_7 = fParam3;
	uParam0->f_20 = iParam4;
	uParam0->f_21 = iParam5;
	uParam0->f_22 = iParam6;
	uParam0->f_8 = { 0f, 0f, 0f };
	uParam0->f_11 = { 0f, 0f, 0f };
	uParam0->f_14 = { 0f, 0f, 0f };
	uParam0->f_17 = fParam3;
	uParam0->f_18 = fParam3;
	uParam0->f_23 = iParam8;
	uParam0->f_19 = uParam7;
	*uParam0 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
	CAM::SET_CAM_ACTIVE(*uParam0, true);
	CAM::SET_CAM_PARAMS(*uParam0, uParam0->f_1, uParam0->f_4, uParam0->f_7, 0, 1, 1, 2);
	if (!bParam11)
	{
		CAM::SHAKE_CAM(*uParam0, "HAND_SHAKE", 0.19f);
	}
	CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
	if (fParam10 > 0f)
	{
		CAM::SET_CAM_NEAR_CLIP(*uParam0, fParam10);
	}
	if (uParam0->f_23)
	{
		HUD::LOCK_MINIMAP_ANGLE(iParam9);
	}
	uParam0->f_24 = 0;
	uParam0->f_25 = 0;
	uParam0->f_29 = 0f;
	uParam0->f_30 = 0f;
	uParam0->f_26 = 0;
	uParam0->f_28 = 0;
	uParam0->f_27 = 0;
}

void func_951(var uParam0)//Position - 0x79328
{
	AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("HEIST_BULLETIN_BOARD");
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("prop_ld_planning_pin_01"));
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("prop_ld_planning_pin_02"));
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("prop_ld_planning_pin_03"));
	if (uParam0->f_413 != 0)
	{
		GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&(uParam0->f_413));
	}
	if (uParam0->f_414 != 0)
	{
		GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&(uParam0->f_414));
	}
	HUD::CLEAR_ADDITIONAL_TEXT(5, false);
	MISC::CLEAR_BIT(&Global_96451, *uParam0);
	MISC::CLEAR_BIT(&(uParam0->f_449), 0);
}

void func_952(var uParam0)//Position - 0x793D9
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_1.f_33)
	{
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_428[iVar0]))
		{
			OBJECT::DELETE_OBJECT(&(uParam0->f_428[iVar0]));
		}
		iVar0++;
	}
}

void func_953(var uParam0)//Position - 0x794E6
{
	if (!AUDIO::HAS_LOADED_SP_DATA_SET())
	{
		return;
	}
	HUD::REQUEST_ADDITIONAL_TEXT(&(uParam0->f_1.f_272), 5);
	AUDIO::REQUEST_SCRIPT_AUDIO_BANK("HEIST_BULLETIN_BOARD", false, -1);
	if (*uParam0 != 1)
	{
		STREAMING::REQUEST_MODEL(joaat("prop_ld_planning_pin_01"));
		STREAMING::REQUEST_MODEL(joaat("prop_ld_planning_pin_02"));
		STREAMING::REQUEST_MODEL(joaat("prop_ld_planning_pin_03"));
	}
	uParam0->f_413 = GRAPHICS::REQUEST_SCALEFORM_MOVIE_INSTANCE(&(uParam0->f_1.f_268));
	uParam0->f_414 = GRAPHICS::REQUEST_SCALEFORM_MOVIE_INSTANCE("INSTRUCTIONAL_BUTTONS");
	MISC::SET_BIT(&Global_96449, *uParam0);
	MISC::SET_BIT(&(uParam0->f_449), 0);
}

void func_954(var uParam0)//Position - 0x79773
{
	int iVar0;
	int iVar1;
	var uVar2;
	bool bVar3;
	iVar1 = *uParam0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_1.f_117)
	{
		uVar2 = uParam0->f_1.f_186[iVar0];
		bVar3 = BitTest(Global_113386.f_1.f_120[iVar1], uVar2);
		if (uParam0->f_1.f_141[iVar0 /*2*/] == 0 && uParam0->f_1.f_141[iVar0 /*2*/].f_1 == 0)
		{
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SHOW_HEIST_ASSET");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_1.f_118[iVar0]);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bVar3);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
		else
		{
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SHOW_HEIST_ASSET");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_1.f_118[iVar0]);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(bVar3);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_141[iVar0 /*2*/]));
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_141[iVar0 /*2*/].f_1));
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
		iVar0++;
	}
}

int func_955(var uParam0)//Position - 0x79992
{
	if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_413))
	{
		return 0;
	}
	if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_414))
	{
		return 0;
	}
	if (!HUD::HAS_ADDITIONAL_TEXT_LOADED(5))
	{
		return 0;
	}
	if (AUDIO::HAS_LOADED_SP_DATA_SET())
	{
		if (!AUDIO::REQUEST_SCRIPT_AUDIO_BANK("HEIST_BULLETIN_BOARD", false, -1))
		{
			return 0;
		}
	}
	else
	{
		return 0;
	}
	if (*uParam0 != 1)
	{
		if ((!STREAMING::HAS_MODEL_LOADED(joaat("prop_ld_planning_pin_01")) || !STREAMING::HAS_MODEL_LOADED(joaat("prop_ld_planning_pin_02"))) || !STREAMING::HAS_MODEL_LOADED(joaat("prop_ld_planning_pin_03")))
		{
			return 0;
		}
	}
	MISC::SET_BIT(&Global_96451, *uParam0);
	return 1;
}

void func_956(var uParam0)//Position - 0x79CF8
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT_EMPTY");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

void func_957(var uParam0, int iParam1)//Position - 0x79DBF
{
	struct<3> Var0;
	float fVar1;
	*uParam0 = iParam1;
	Var0 = { Global_96387[uParam0->f_1.f_1 /*15*/].f_3 };
	fVar1 = Global_96387[uParam0->f_1.f_1 /*15*/].f_6;
	uParam0->f_401 = { Var0 };
	uParam0->f_404 = fVar1;
	uParam0->f_405 = { Var0 + Vector(0f, (-uParam0->f_1.f_8 * SYSTEM::COS((360f - fVar1))), (-uParam0->f_1.f_8 * SYSTEM::SIN((360f - fVar1)))) };
	uParam0->f_408 = { -0.85f, 0f, fVar1 };
	MISC::SET_BIT(&(uParam0->f_449), 4);
	uParam0->f_415 = uParam0->f_1.f_96;
	uParam0->f_416 = -1;
	MISC::CLEAR_BIT(&(uParam0->f_449), 0);
	MISC::CLEAR_BIT(&(uParam0->f_449), 1);
	MISC::CLEAR_BIT(&(uParam0->f_449), 2);
	uParam0->f_464 = 0;
	uParam0->f_451 = -1;
}

void func_958(var uParam0, int iParam1, char* sParam2, int iParam3, int iParam4, bool bParam5)//Position - 0x7A034
{
	struct<2> Var0;
	if (uParam0->f_369 < 7)
	{
		StringCopy(&Var0, sParam2, 8);
		uParam0->f_386[uParam0->f_369] = iParam1;
		uParam0->f_371[uParam0->f_369 /*2*/] = iParam3;
		uParam0->f_371[uParam0->f_369 /*2*/].f_1 = iParam4;
		uParam0->f_280[uParam0->f_369 + 4 /*2*/] = { Var0 };
		if (bParam5)
		{
			MISC::SET_BIT(&(uParam0->f_370), uParam0->f_369);
		}
		uParam0->f_369++;
	}
}

void func_959(var uParam0, int iParam1, int iParam2, char* sParam3)//Position - 0x7A0AD
{
	struct<8> Var0;
	if (uParam0->f_209 < 9)
	{
		StringCopy(&Var0, sParam3, 32);
		uParam0->f_248[uParam0->f_209] = iParam1;
		uParam0->f_258[uParam0->f_209] = iParam2;
		MemCopy(&(uParam0->f_211[uParam0->f_209 /*4*/]), {Var0}, 4);
		uParam0->f_209++;
	}
}

void func_960(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x7A0FD
{
	if (uParam0->f_117 < 22)
	{
		uParam0->f_118[uParam0->f_117] = iParam1;
		uParam0->f_186[uParam0->f_117] = iParam2;
		uParam0->f_141[uParam0->f_117 /*2*/] = iParam3;
		uParam0->f_141[uParam0->f_117 /*2*/].f_1 = iParam4;
		uParam0->f_117++;
	}
}

void func_961(var uParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, char* sParam5, char* sParam6, char* sParam7, char* sParam8)//Position - 0x7A14D
{
	struct<4> Var0;
	struct<4> Var1;
	struct<4> Var2;
	struct<4> Var3;
	struct<2> Var4;
	struct<2> Var5;
	struct<2> Var6;
	struct<2> Var7;
	StringCopy(&Var0, sParam1, 16);
	StringCopy(&Var1, sParam2, 16);
	StringCopy(&Var2, sParam3, 16);
	StringCopy(&Var3, sParam4, 16);
	StringCopy(&Var4, sParam5, 8);
	StringCopy(&Var5, sParam6, 8);
	StringCopy(&Var6, sParam7, 8);
	StringCopy(&Var7, sParam8, 8);
	uParam0->f_20[0 /*4*/] = { Var0 };
	uParam0->f_20[1 /*4*/] = { Var1 };
	uParam0->f_108[0 /*4*/] = { Var2 };
	uParam0->f_108[1 /*4*/] = { Var3 };
	uParam0->f_280[1 /*2*/] = { Var4 };
	uParam0->f_280[2 /*2*/] = { Var5 };
	uParam0->f_280[0 /*2*/] = { Var6 };
	uParam0->f_280[3 /*2*/] = { Var7 };
}

void func_962(var uParam0, float fParam1, float fParam2, float fParam3)//Position - 0x7A1F1
{
	uParam0->f_9 = fParam1;
	uParam0->f_10 = fParam2;
	uParam0->f_11 = fParam3;
}

void func_963(var uParam0, int iParam1, int iParam2, float fParam3, float fParam4, float fParam5, float fParam6, float fParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25)//Position - 0x7A20B
{
	uParam0->f_2 = iParam1;
	uParam0->f_3 = iParam2;
	uParam0->f_4 = fParam3;
	uParam0->f_5 = fParam4;
	uParam0->f_6 = fParam5;
	uParam0->f_7 = fParam6;
	uParam0->f_8 = fParam7;
	uParam0->f_12 = iParam8;
	uParam0->f_12.f_1 = iParam9;
	uParam0->f_97[0 /*2*/] = iParam10;
	uParam0->f_97[0 /*2*/].f_1 = iParam11;
	uParam0->f_97[1 /*2*/] = iParam12;
	uParam0->f_97[1 /*2*/].f_1 = iParam13;
	uParam0->f_97[2 /*2*/] = iParam14;
	uParam0->f_97[2 /*2*/].f_1 = iParam15;
	uParam0->f_97[3 /*2*/] = iParam16;
	uParam0->f_97[3 /*2*/].f_1 = iParam17;
	uParam0->f_97[4 /*2*/] = iParam18;
	uParam0->f_97[4 /*2*/].f_1 = iParam19;
	uParam0->f_16 = iParam20;
	uParam0->f_16.f_1 = iParam21;
	uParam0->f_18 = iParam22;
	uParam0->f_18.f_1 = iParam23;
	uParam0->f_14 = iParam24;
	uParam0->f_14.f_1 = iParam25;
}

void func_964(var uParam0, int iParam1, char* sParam2, char* sParam3, char* sParam4, char* sParam5, int iParam6, int iParam7, int iParam8, int iParam9, var uParam10, struct<3> Param11, struct<3> Param12)//Position - 0x7A2D9
{
	uParam0->f_1 = iParam1;
	StringCopy(&(uParam0->f_268), sParam2, 16);
	StringCopy(&(uParam0->f_272), sParam3, 16);
	StringCopy(&(uParam0->f_276), sParam4, 8);
	StringCopy(&(uParam0->f_278), sParam5, 8);
	uParam0->f_29 = iParam6;
	uParam0->f_30[0] = iParam8;
	uParam0->f_30[1] = iParam9;
	uParam0->f_210 = iParam7;
	uParam0->f_96 = uParam10;
	uParam0->f_394 = { Param11 };
	uParam0->f_397 = { Param12 };
}

void func_965(var uParam0)//Position - 0x44C
{
	char* sVar0;
	char* sVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	char* sVar5;
	bool bVar6;
	sVar0 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 13, true);
	sVar1 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 11, true);
	sVar2 = PAD::GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(0 /*PLAYER_CONTROL*/, 32 /*INPUT_MOVE_UP_ONLY*/, true);
	sVar3 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(0 /*PLAYER_CONTROL*/, 1, true);
	sVar4 = PAD::GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/, true);
	sVar5 = PAD::GET_CONTROL_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/, true);
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		sVar0 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 6, true);
		sVar1 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(2 /*FRONTEND_CONTROL*/, 7, true);
		sVar2 = PAD::GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTONS_STRING(0 /*PLAYER_CONTROL*/, 29, true);
	}
	bVar6 = __LIB_0__::func_786(1, *uParam0);
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_MAX_WIDTH");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(0.6f);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	switch (uParam0->f_464)
	{
		case 0:
			if (BitTest(uParam0->f_449, 2))
			{
				if (bVar6)
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar2);
					__LIB_0__::func_610("PB_H_ZOOM" /* GXT: Zoom */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				else
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					__LIB_0__::func_700(sVar2);
					__LIB_0__::func_610("PB_H_ZOOM" /* GXT: Zoom */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar5);
					__LIB_0__::func_610("PB_H_EXIT" /* GXT: Exit */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "DRAW_INSTRUCTIONAL_BUTTONS");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			}
			break;
		case 1:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "DRAW_INSTRUCTIONAL_BUTTONS");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
		case 2:
			if (BitTest(uParam0->f_449, 2))
			{
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				if (*uParam0 == 2)
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					__LIB_0__::func_700(sVar0);
					__LIB_0__::func_610("PB_H_SELCT" /* GXT: Browse */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar4);
					__LIB_0__::func_610("PB_H_TRIG" /* GXT: Select */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				else
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3);
					__LIB_0__::func_700(sVar0);
					__LIB_0__::func_610("PB_H_SELCT" /* GXT: Browse */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar5);
					__LIB_0__::func_610("PB_H_UNDO" /* GXT: Back */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar4);
					__LIB_0__::func_610("PB_H_TRIG" /* GXT: Select */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "DRAW_INSTRUCTIONAL_BUTTONS");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			}
			break;
		case 3:
			if (BitTest(uParam0->f_449, 2))
			{
				if (BitTest(uParam0->f_449, 9))
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar1);
					__LIB_0__::func_610("PB_H_SELCT" /* GXT: Browse */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				else
				{
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
					__LIB_0__::func_700(sVar1);
					__LIB_0__::func_610("PB_H_SELCT" /* GXT: Browse */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
					__LIB_0__::func_700(sVar3);
					__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
					GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
					GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
					__LIB_0__::func_700(sVar4);
					__LIB_0__::func_610("PB_H_TRIG" /* GXT: Select */);
					GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				}
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "DRAW_INSTRUCTIONAL_BUTTONS");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			}
			break;
		case 4:
			if (BitTest(uParam0->f_449, 2))
			{
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT_EMPTY");
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3);
				__LIB_0__::func_700(sVar2);
				__LIB_0__::func_610("PB_H_ZOOM" /* GXT: Zoom */);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
				__LIB_0__::func_700(sVar3);
				__LIB_0__::func_610("PB_H_LOOK" /* GXT: Look Around */);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
				__LIB_0__::func_700(sVar5);
				__LIB_0__::func_610("PB_H_UNDO" /* GXT: Back */);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "SET_DATA_SLOT");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
				__LIB_0__::func_700(sVar4);
				__LIB_0__::func_610("PB_H_CONF" /* GXT: Confirm */);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_414, "DRAW_INSTRUCTIONAL_BUTTONS");
				GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
				GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			}
			break;
	}
}

void func_966(var uParam0, bool bParam1)//Position - 0x983
{
	if (bParam1)
	{
		MISC::SET_BIT(&(uParam0->f_449), 18);
		if (((!__LIB_0__::func_1(&(uParam0->f_1.f_20[0 /*4*/])) && !__LIB_0__::func_1(&(uParam0->f_1.f_20[1 /*4*/]))) && !__LIB_0__::func_1(&(uParam0->f_1.f_108[0 /*4*/]))) && !__LIB_0__::func_1(&(uParam0->f_1.f_108[1 /*4*/])))
		{
			HUD::CLEAR_HELP(false);
		}
	}
	else
	{
		MISC::CLEAR_BIT(&(uParam0->f_449), 18);
	}
}

int func_967(var uParam0, bool bParam1)//Position - 0x1DE9
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_0__::func_566(__LIB_0__::func_598(*uParam0));
	iVar1 = 0;
	while (iVar1 < uParam0->f_417)
	{
		if (Global_113386.f_1.f_12[iVar0 /*6*/][iVar1] == bParam1)
		{
			return 1;
		}
		iVar1++;
	}
	return 0;
}

int func_968(int iParam0, int iParam1)//Position - 0x2206
{
	if (__LIB_0__::func_617(iParam0) != 2)
	{
		return -1;
	}
	return __LIB_16__::func_836(iParam0, iParam1);
}

char* func_969(int iParam0)//Position - 0x231B
{
	return __LIB_36__::func_927(iParam0);
}

int func_970(int iParam0)//Position - 0x79292
{
	switch (iParam0)
	{
		case 0:
			return __LIB_0__::func_425(18);
			break;
		case 1:
			return __LIB_0__::func_425(22);
			break;
		case 2:
			return __LIB_0__::func_425(40);
			break;
		case 3:
			return __LIB_0__::func_425(8);
			break;
		case 4:
			return __LIB_0__::func_425(26);
			break;
		default:
			break;
	}
	return 0;
}

void func_971(var uParam0)//Position - 0xE4C
{
	int iVar0;
	if (BitTest(uParam0->f_449, 7))
	{
		if (!BitTest(uParam0->f_449, 18))
		{
			switch (uParam0->f_464)
			{
				case 3:
					if (!Global_113386.f_1[*uParam0])
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_20[0 /*4*/]), ""))
						{
							__LIB_0__::func_697(&(uParam0->f_1.f_20[0 /*4*/]), 3, 0, -1, 10000, 7, 0, 0, 0);
						}
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_20[1 /*4*/]), ""))
						{
							__LIB_0__::func_697(&(uParam0->f_1.f_20[1 /*4*/]), 3, 1000, -1, 10000, 7, 0, 0, 0);
						}
						Global_113386.f_1[*uParam0] = 1;
					}
					else if (__LIB_9__::func_352() && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
					{
						if (((!BitTest(uParam0->f_449, 11) && !BitTest(uParam0->f_449, 10)) && !__LIB_0__::func_75()) && uParam0->f_483 == 0)
						{
							HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP("PB_H_CHOICE" /* GXT: Select an approach for this heist. */);
							HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, false, -1);
						}
					}
					break;
				case 2:
					if (!Global_113386.f_1.f_6[*uParam0])
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_108[0 /*4*/]), ""))
						{
							__LIB_0__::func_697(&(uParam0->f_1.f_108[0 /*4*/]), 3, 0, -1, 10000, 7, 0, 0, 0);
						}
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_108[1 /*4*/]), ""))
						{
							__LIB_0__::func_697(&(uParam0->f_1.f_108[1 /*4*/]), 3, 1000, -1, 10000, 7, 0, 0, 0);
						}
						Global_113386.f_1.f_6[*uParam0] = 1;
					}
					else if (__LIB_9__::func_352() && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
					{
						if (!BitTest(uParam0->f_449, 10))
						{
							if ((!__LIB_0__::func_1("PB_H_GUNM" /* GXT: Select a gunman to hire. */) && !__LIB_0__::func_1("PB_H_HACK" /* GXT: Select a hacker to hire. */)) && !__LIB_0__::func_1("PB_H_DRIV" /* GXT: Select a driver to hire. */))
							{
								iVar0 = __LIB_0__::func_566(__LIB_0__::func_598(*uParam0));
								if (uParam0->f_417 < 5)
								{
									if (((!BitTest(uParam0->f_449, 11) && !BitTest(uParam0->f_449, 10)) && !__LIB_0__::func_75()) && uParam0->f_483 == 0)
									{
										switch (Global_96470[iVar0 /*19*/].f_1[uParam0->f_417])
										{
											case 1:
												HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP("PB_H_GUNM" /* GXT: Select a gunman to hire. */);
												HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, false, -1);
												break;
											case 2:
												HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP("PB_H_HACK" /* GXT: Select a hacker to hire. */);
												HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, false, -1);
												break;
											case 3:
												HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP("PB_H_DRIV" /* GXT: Select a driver to hire. */);
												HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, false, -1);
												break;
											}
										}
									}
								}
							}
					}
					break;
				}
			}
	}
}

int func_972(int iParam0, int iParam1)//Position - 0x2015
{
	if (__LIB_0__::func_617(iParam0) != 3)
	{
		return -1;
	}
	return __LIB_16__::func_836(iParam0, iParam1);
}

bool func_973(int iParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x10256
{
	struct<2> Var0;
	__LIB_17__::func_642(iParam0, &Var0);
	__LIB_13__::func_812(iParam0, &Var0, &(Var0.f_1));
	return __LIB_17__::func_96(uParam1, &Var0, bParam2, bParam3, bParam4, bParam5, bParam6);
}

char* func_974(int iParam0)//Position - 0x228C
{
	return __LIB_36__::func_943(2, iParam0);
}

char* func_975(int iParam0)//Position - 0x232B
{
	return __LIB_36__::func_943(1, iParam0);
}

void func_976(var uParam0, int iParam1, bool bParam2)//Position - 0x2493
{
	int iVar0;
	if (!BitTest(Global_96470[iParam1 /*19*/].f_18, bParam2))
	{
		if (!MISC::ARE_STRINGS_EQUAL(&(Global_96470[iParam1 /*19*/].f_7[bParam2 /*2*/]), ""))
		{
			__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, Global_96470[iParam1 /*19*/].f_7[bParam2 /*2*/], 1);
			MISC::SET_BIT(&(Global_96470[iParam1 /*19*/].f_18), bParam2);
			iVar0 = 0;
			while (iVar0 < 10)
			{
				if (MISC::ARE_STRINGS_EQUAL(&(Global_96470[iParam1 /*19*/].f_7[bParam2 /*2*/]), &(Global_96470[iVar0 /*19*/].f_7[bParam2 /*2*/])))
				{
					MISC::SET_BIT(&(Global_96470[iVar0 /*19*/].f_18), bParam2);
				}
				iVar0++;
			}
		}
	}
}

void func_977(var uParam0, int iParam1)//Position - 0x4EEB
{
	if (!__LIB_0__::func_75())
	{
		if (uParam0->f_483 == 0)
		{
			switch (iParam1)
			{
				case 10:
					if (BitTest(Global_113386.f_1.f_119, 14))
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_304[14 /*2*/]), ""))
						{
							MISC::SET_BIT(&(uParam0->f_449), 10);
							MISC::SET_BIT(&(uParam0->f_449), 17);
							__LIB_36__::func_934(uParam0, uParam0->f_1.f_278, uParam0->f_1.f_304[14 /*2*/], 1);
							MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 14);
							MISC::SET_BIT(&(uParam0->f_449), 12);
							return;
						}
					}
					break;
				case 13:
					if (BitTest(Global_113386.f_1.f_119, 16))
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_304[16 /*2*/]), ""))
						{
							MISC::SET_BIT(&(uParam0->f_449), 10);
							MISC::SET_BIT(&(uParam0->f_449), 17);
							__LIB_36__::func_934(uParam0, uParam0->f_1.f_278, uParam0->f_1.f_304[16 /*2*/], 1);
							MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 16);
							MISC::SET_BIT(&(uParam0->f_449), 12);
							return;
						}
					}
					break;
				case 12:
					if (BitTest(Global_113386.f_1.f_119, 15))
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_304[15 /*2*/]), ""))
						{
							MISC::SET_BIT(&(uParam0->f_449), 10);
							MISC::SET_BIT(&(uParam0->f_449), 17);
							__LIB_36__::func_934(uParam0, uParam0->f_1.f_278, uParam0->f_1.f_304[15 /*2*/], 1);
							MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 15);
							MISC::SET_BIT(&(uParam0->f_449), 12);
							return;
						}
					}
					break;
				case 11:
					if (BitTest(Global_113386.f_1.f_119, 17))
					{
						if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_304[17 /*2*/]), ""))
						{
							MISC::SET_BIT(&(uParam0->f_449), 10);
							MISC::SET_BIT(&(uParam0->f_449), 17);
							__LIB_36__::func_934(uParam0, uParam0->f_1.f_278, uParam0->f_1.f_304[17 /*2*/], 1);
							MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 17);
							MISC::SET_BIT(&(uParam0->f_449), 12);
							return;
						}
					}
					break;
				}
			}
	}
}

void func_978(var uParam0, bool bParam1)//Position - 0x50F7
{
	if (!BitTest(uParam0->f_463, bParam1))
	{
		if (!BitTest(Global_113386.f_1.f_119, bParam1))
		{
			if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_304[bParam1 /*2*/]), ""))
			{
				__LIB_36__::func_934(uParam0, uParam0->f_1.f_278, uParam0->f_1.f_304[bParam1 /*2*/], 1);
				MISC::SET_BIT(&(Global_113386.f_1.f_119), bParam1);
			}
		}
		else
		{
			switch (*uParam0)
			{
				case 2:
					switch (bParam1)
					{
						case 1:
							if (BitTest(Global_113386.f_1.f_117, 0))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
							}
							break;
						case 10:
							if (BitTest(Global_113386.f_1.f_117, 1))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
							}
							break;
					}
					break;
				case 3:
					switch (bParam1)
					{
						case 12:
							if (BitTest(Global_113386.f_1.f_117, 3))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[24 /*2*/], 1);
							}
							break;
						case 9:
							if (BitTest(Global_113386.f_1.f_117, 6))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[26 /*2*/], 1);
							}
							break;
						case 1:
							if (BitTest(Global_113386.f_1.f_117, 0))
							{
								if (BitTest(Global_113386.f_1.f_117, 7))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[21 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
								}
							}
							else if (BitTest(Global_113386.f_1.f_117, 7))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[19 /*2*/], 1);
							}
							break;
						case 10:
							if (BitTest(Global_113386.f_1.f_117, 1))
							{
								if (BitTest(Global_113386.f_1.f_117, 8))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[21 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
								}
							}
							else if (BitTest(Global_113386.f_1.f_117, 8))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[19 /*2*/], 1);
							}
							break;
						case 6:
							if (BitTest(Global_113386.f_1.f_117, 4))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
							}
							break;
						case 7:
							if (BitTest(Global_113386.f_1.f_117, 2))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
							}
							break;
						case 8:
							if (BitTest(Global_113386.f_1.f_117, 5))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[18 /*2*/], 1);
							}
							break;
					}
					break;
				case 4:
					switch (bParam1)
					{
						case 12:
							if (BitTest(Global_113386.f_1.f_117, 15))
							{
								if (BitTest(Global_113386.f_1.f_117, 3))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[25 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[24 /*2*/], 1);
								}
							}
							break;
						case 7:
							if (BitTest(Global_113386.f_1.f_117, 2))
							{
								if (BitTest(Global_113386.f_1.f_117, 14))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[30 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[28 /*2*/], 1);
								}
							}
							else if (BitTest(Global_113386.f_1.f_117, 14))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[29 /*2*/], 1);
							}
							break;
						case 9:
							if (BitTest(Global_113386.f_1.f_117, 18))
							{
								if (BitTest(Global_113386.f_1.f_117, 6))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[27 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[26 /*2*/], 1);
								}
							}
							break;
						case 4:
							if (BitTest(Global_113386.f_1.f_117, 17))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[31 /*2*/], 1);
							}
							break;
						case 5:
							if (BitTest(Global_113386.f_1.f_117, 12))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[31 /*2*/], 1);
							}
							break;
						case 1:
							if (BitTest(Global_113386.f_1.f_117, 10))
							{
								if (BitTest(Global_113386.f_1.f_117, 0))
								{
									if (BitTest(Global_113386.f_1.f_117, 7))
									{
										__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[23 /*2*/], 1);
									}
									else
									{
										__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[22 /*2*/], 1);
									}
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
								}
							}
							break;
						case 10:
							if (BitTest(Global_113386.f_1.f_117, 11))
							{
								if (BitTest(Global_113386.f_1.f_117, 1))
								{
									if (BitTest(Global_113386.f_1.f_117, 8))
									{
										__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[23 /*2*/], 1);
									}
									else
									{
										__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[22 /*2*/], 1);
									}
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
								}
							}
							break;
						case 3:
							if (BitTest(Global_113386.f_1.f_117, 13))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
							}
							break;
						case 6:
							if (BitTest(Global_113386.f_1.f_117, 19))
							{
								if (BitTest(Global_113386.f_1.f_117, 4))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[22 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
								}
							}
							break;
						case 8:
							if (BitTest(Global_113386.f_1.f_117, 16))
							{
								if (BitTest(Global_113386.f_1.f_117, 5))
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[22 /*2*/], 1);
								}
								else
								{
									__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
								}
							}
							break;
						case 13:
							if (BitTest(Global_113386.f_1.f_117, 20))
							{
								__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_304[20 /*2*/], 1);
							}
							break;
					}
					break;
				}
		}
		MISC::SET_BIT(&(uParam0->f_463), bParam1);
	}
}

char* func_979(int iParam0)//Position - 0x7750
{
	switch (iParam0)
	{
		case 0:
			return "CM_HSTCHE" /* GXT: Chef */;
			break;
		case 1:
			return "CM_HSTCHR" /* GXT: Christian Feltz */;
			break;
		case 2:
			return "CM_HSTDAR" /* GXT: Daryl Johns */;
			break;
		case 3:
			return "CM_HSTEDD" /* GXT: Eddie Toh */;
			break;
		case 4:
			return "CM_HSTGUS" /* GXT: Gustavo Mota */;
			break;
		case 5:
			return "CM_HSTHUG" /* GXT: Hugh Welsh */;
			break;
		case 6:
			return "CM_HSTKRM" /* GXT: Karim Denz */;
			break;
		case 7:
			return "CM_HSTKAR" /* GXT: Karl Abolaji */;
			break;
		case 8:
			return "CM_HSTNOR" /* GXT: Norm Richards */;
			break;
		case 9:
			return "CM_HSTPAC" /* GXT: Packie McReary */;
			break;
		case 10:
			return "CM_HSTPAI" /* GXT: Paige Harris */;
			break;
		case 11:
			return "CM_HSTRIC" /* GXT: Rickie Lukens */;
			break;
		case 12:
			return "CM_HSTTAL" /* GXT: Taliana Martinez */;
			break;
	}
	return "ERROR!";
}

int func_980(int iParam0)//Position - 0x7833
{
	if (iParam0 != -1 && iParam0 != 13)
	{
		return BitTest(Global_113386.f_26434.f_1, iParam0);
	}
	return 0;
}

void func_981(int iParam0, bool bParam1)//Position - 0x1139C
{
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam1)
	{
		if (Global_78315 == iParam0)
		{
			Global_78316 = iParam0;
		}
	}
	else if (Global_78316 == iParam0)
	{
		Global_78316 = -1;
	}
}

Vector3 func_982(var uParam0, var uParam1)//Position - 0x21DA3
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	struct<3> Var7;
	fVar0 = uParam0->f_1.f_4;
	fVar1 = uParam0->f_1.f_5;
	__LIB_36__::func_936(uParam0, uParam1, &fVar2, &fVar3);
	fVar4 = (fVar0 * (fVar2 - 0.5f));
	fVar5 = (-fVar1 * (fVar3 - 0.5f));
	fVar6 = uParam0->f_404;
	Var7 = { uParam0->f_401 };
	Var7 = { Var7 + Vector(fVar5, (fVar4 * SYSTEM::COS((90f - fVar6))), (fVar4 * SYSTEM::SIN((90f - fVar6)))) };
	return Var7;
}

void func_983(var uParam0)//Position - 0x21EFE
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "CREATE_VIEW");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_14));
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_14.f_1));
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	iVar0 = *uParam0;
	iVar1 = 0;
	iVar2 = 0;
	while (iVar2 < uParam0->f_1.f_209)
	{
		if (__LIB_36__::func_938(iVar0, uParam0->f_1.f_248[iVar2]))
		{
			iVar3 = 0;
			if (__LIB_36__::func_938(iVar0, uParam0->f_1.f_258[iVar2]))
			{
				iVar3 = 1;
			}
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iVar3);
			__LIB_0__::func_610(&(uParam0->f_1.f_211[iVar2 /*4*/]));
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			iVar1++;
		}
		iVar2++;
	}
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "DISPLAY_VIEW");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	if (__LIB_36__::func_938(*uParam0, uParam0->f_1.f_210))
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SHOW_VIEW");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(true);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
	else
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SHOW_VIEW");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415 + 1);
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(false);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

void func_984(var uParam0, int iParam1, int iParam2, int iParam3)//Position - 0x22A58
{
	if (uParam0->f_33 < 20)
	{
		uParam0->f_75[uParam0->f_33] = iParam1;
		uParam0->f_34[uParam0->f_33 /*2*/] = iParam2;
		uParam0->f_34[uParam0->f_33 /*2*/].f_1 = iParam3;
		uParam0->f_33++;
	}
}

void func_985(var uParam0, int iParam1, char* sParam2)//Position - 0x22B3C
{
	struct<2> Var0;
	StringCopy(&Var0, sParam2, 8);
	if (MISC::ARE_STRINGS_EQUAL(sParam2, ""))
	{
		return;
	}
	uParam0->f_304[iParam1 /*2*/] = { Var0 };
}

void func_986(var uParam0, int iParam1, char* sParam2, char* sParam3)//Position - 0x22B67
{
	struct<2> Var0;
	struct<2> Var1;
	StringCopy(&Var0, sParam2, 8);
	StringCopy(&Var1, sParam3, 8);
	uParam0->f_304[iParam1 /*2*/] = { Var0 };
	if (!MISC::ARE_STRINGS_EQUAL(sParam3, ""))
	{
		switch (iParam1)
		{
			case 10:
				uParam0->f_304[14 /*2*/] = { Var1 };
				break;
			case 13:
				uParam0->f_304[16 /*2*/] = { Var1 };
				break;
			case 12:
				uParam0->f_304[15 /*2*/] = { Var1 };
				break;
			case 11:
				uParam0->f_304[17 /*2*/] = { Var1 };
				break;
			default:
				break;
			}
	}
}

void func_987(var uParam0, bool bParam1, int iParam2)//Position - 0x1348
{
	if (!BitTest(uParam0->f_1.f_303, bParam1))
	{
		if (!MISC::ARE_STRINGS_EQUAL(&(uParam0->f_1.f_280[bParam1 /*2*/]), ""))
		{
			__LIB_36__::func_934(uParam0, uParam0->f_1.f_276, uParam0->f_1.f_280[bParam1 /*2*/], iParam2);
			MISC::SET_BIT(&(uParam0->f_1.f_303), bParam1);
		}
	}
}

Vector3 func_988(var uParam0, var uParam1)//Position - 0x1462
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	struct<3> Var7;
	float fVar8;
	float fVar9;
	float fVar10;
	float fVar11;
	float fVar12;
	float fVar13;
	float fVar14;
	fVar0 = uParam0->f_1.f_4;
	fVar1 = uParam0->f_1.f_5;
	__LIB_36__::func_936(uParam0, uParam1, &fVar2, &fVar3);
	fVar4 = (fVar0 * (fVar2 - 0.5f));
	fVar5 = (-fVar1 * (fVar3 - 0.5f));
	fVar6 = uParam0->f_404;
	Var7 = { uParam0->f_401 };
	Var7 = { Var7 + Vector(fVar5, (fVar4 * SYSTEM::COS((90f - fVar6))), (fVar4 * SYSTEM::SIN((90f - fVar6)))) };
	fVar8 = fVar4;
	fVar9 = MISC::ATAN((fVar8 / uParam0->f_1.f_8));
	fVar10 = (uParam0->f_401.f_2 - uParam0->f_649.f_1.f_2);
	fVar11 = (Var7.f_2 - uParam0->f_649.f_1.f_2);
	fVar12 = (fVar11 - fVar10);
	fVar13 = MISC::ATAN((fVar12 / uParam0->f_1.f_8));
	fVar14 = ((fVar9 * 3f) / 18f);
	return (fVar13 * 0.95f), fVar14, (-fVar9 * 0.85f);
}

void func_989(var uParam0)//Position - 0x16E9
{
	int iVar0;
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "CREATE_VIEW");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_16));
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(SYSTEM::TO_FLOAT(uParam0->f_1.f_16.f_1));
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	__LIB_36__::func_939(uParam0);
	switch (*uParam0)
	{
		case 0:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(2);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
		case 1:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(3);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(4);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
		case 3:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(6);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(7);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
		case 4:
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(0);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(8);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_DATA_SLOT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(1);
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(9);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
			break;
	}
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "DISPLAY_VIEW");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SHOW_VIEW");
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
	GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(__LIB_36__::func_938(*uParam0, uParam0->f_1.f_29));
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	iVar0 = __LIB_0__::func_566(__LIB_0__::func_598(*uParam0));
	if (iVar0 != 0)
	{
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "FOCUS_VIEW");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(uParam0->f_415);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		if (iVar0 == __LIB_36__::func_937(*uParam0, 0))
		{
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_INPUT_EVENT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(8);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
		else if (iVar0 == __LIB_36__::func_937(*uParam0, 1))
		{
			GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "SET_INPUT_EVENT");
			GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(9);
			GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		}
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(uParam0->f_413, "FOCUS_VIEW");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(99);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
	}
}

char* func_990(int iParam0)//Position - 0x2119
{
	return __LIB_36__::func_943(3, iParam0);
}

void func_991(int iParam0)//Position - 0x59A6
{
	int iVar0;
	int iVar1;
	__LIB_36__::func_948(iParam0);
	switch (iParam0)
	{
		case 0:
			iVar1 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[7];
			iVar0 = 0;
			while (iVar0 < Global_96470[iVar1 /*19*/])
			{
				switch (Global_113386.f_1.f_12[iVar1 /*6*/][iVar0])
				{
					case 1:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 0);
						break;
					case 10:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 1);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 14);
						break;
					case 7:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 2);
						break;
					case 12:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 3);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 15);
						break;
					case 6:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 4);
						break;
					case 8:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 5);
						break;
					case 9:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 6);
						break;
				}
				MISC::SET_BIT(&(Global_113386.f_1.f_119), Global_113386.f_1.f_12[iVar1 /*6*/][iVar0]);
				iVar0++;
			}
			break;
		case 2:
			iVar1 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[9];
			iVar0 = 0;
			while (iVar0 < Global_96470[iVar1 /*19*/])
			{
				switch (Global_113386.f_1.f_12[iVar1 /*6*/][iVar0])
				{
					case 1:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 7);
						break;
					case 10:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 8);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 14);
						break;
					case 11:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 9);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 17);
						break;
				}
				MISC::SET_BIT(&(Global_113386.f_1.f_119), Global_113386.f_1.f_12[iVar1 /*6*/][iVar0]);
				iVar0++;
			}
			break;
		case 3:
			iVar1 = Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[10];
			iVar0 = 0;
			while (iVar0 < Global_96470[iVar1 /*19*/])
			{
				switch (Global_113386.f_1.f_12[iVar1 /*6*/][iVar0])
				{
					case 1:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 10);
						break;
					case 10:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 11);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 14);
						break;
					case 5:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 12);
						break;
					case 3:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 13);
						break;
					case 4:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 17);
						break;
					case 7:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 14);
						break;
					case 12:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 15);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 15);
						break;
					case 6:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 19);
						break;
					case 8:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 16);
						break;
					case 9:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 18);
						break;
					case 13:
						MISC::SET_BIT(&(Global_113386.f_1.f_117), 20);
						MISC::CLEAR_BIT(&(Global_113386.f_1.f_119), 16);
						break;
				}
				MISC::SET_BIT(&(Global_113386.f_1.f_119), Global_113386.f_1.f_12[iVar1 /*6*/][iVar0]);
				iVar0++;
			}
			break;
	}
}

int func_992(int iParam0, int iParam1)//Position - 0x220B
{
	return SYSTEM::ROUND(((SYSTEM::TO_FLOAT(__LIB_36__::func_968(iParam0, iParam1)) / SYSTEM::TO_FLOAT(__LIB_0__::func_595(iParam1))) * 100f));
}

int func_993(int iParam0, int iParam1)//Position - 0x201A
{
	return SYSTEM::ROUND(((SYSTEM::TO_FLOAT(__LIB_36__::func_972(iParam0, iParam1)) / SYSTEM::TO_FLOAT(__LIB_0__::func_595(iParam1))) * 100f));
}

void func_994(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x1640D
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_13__::func_716(iParam0);
		iVar1 = 0;
		while (iVar1 < 12)
		{
			__LIB_14__::func_626(iParam0, iVar1, &(uParam1->f_13[iVar1]), uParam1[iVar1], &(uParam1->f_26[iVar1]), iParam2, 145);
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 9)
		{
			__LIB_14__::func_625(iParam0, iVar1, &(uParam1->f_39[iVar1]), &(uParam1->f_49[iVar1]), iParam2, 145);
			iVar1++;
		}
		if (__LIB_0__::func_374(iVar0))
		{
			uParam1->f_59 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_59;
			uParam1->f_60 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_60;
			uParam1->f_61 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_61;
			uParam1->f_62 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_62;
			uParam1->f_63 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_63;
			uParam1->f_64 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_64;
		}
		else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::GET_ENTITY_MODEL(iParam0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_16__::func_945(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
			uParam1->f_60 = __LIB_0__::func_369(754, iParam3, 0);
			uParam1->f_61 = __LIB_0__::func_369(755, iParam3, 0);
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (__LIB_16__::func_945(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
		}
	}
}

void func_995(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5)//Position - 0x21124
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3;
	struct<3> Var4;
	iVar0 = 0;
	iVar1 = 0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
			{
				iVar1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, false);
				*uParam4 = 2;
			}
			else
			{
				iVar2 = __LIB_13__::func_716(iParam0);
				if (!ENTITY::IS_ENTITY_DEAD(Global_100144[iVar2], false))
				{
					if (VEHICLE::IS_VEHICLE_SEAT_FREE(Global_100144[iVar2], -1, false))
					{
						Var3 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
						Var4 = { ENTITY::GET_ENTITY_COORDS(Global_100144[iVar2], true) };
						if (ENTITY::GET_ENTITY_MODEL(Global_100144[iVar2]) == joaat("luxor2"))
						{
							if (SYSTEM::VDIST(Var3, Var4) < 10f)
							{
								*uParam4 = 2;
								iVar1 = Global_100144[iVar2];
								iVar0 = 1;
							}
						}
					}
				}
			}
		}
	}
	__LIB_15__::func_96(iParam0, iVar1, uParam1, uParam2, uParam3, uParam4, uParam5, iVar0);
}

void func_996(var uParam0, bool bParam1)//Position - 0x2862
{
	struct<3> Var0;
	int iVar1;
	uParam0->f_453 = 0;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		ENTITY::FREEZE_ENTITY_POSITION(PLAYER::PLAYER_PED_ID(), false);
		if (!bParam1)
		{
			Var0 = { uParam0->f_401 };
			Var0 = { Var0 + Vector(0f, (1f * SYSTEM::COS((180f - uParam0->f_404))), (1f * SYSTEM::SIN((180f - uParam0->f_404)))) };
			MISC::GET_GROUND_Z_FOR_3D_COORD(Var0, &(Var0.f_2), false, false);
			ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), Var0, true, false, false, true);
			ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), uParam0->f_404);
			CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
			CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
			PED::FORCE_PED_MOTION_STATE(PLAYER::PLAYER_PED_ID(), joaat("MotionState_Idle"), false, 0, false);
			PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(PLAYER::PLAYER_PED_ID(), true, false);
		}
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 134);
	}
	HUD::DISPLAY_RADAR(true);
	__LIB_0__::func_671(0);
	__LIB_0__::func_131();
	HUD::THEFEED_RESUME();
	HUD::RESET_HUD_COMPONENT_VALUES(17);
	GRAPHICS::CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(false);
	__LIB_11__::func_684(&(uParam0->f_649), 0, 1);
	__LIB_13__::func_311(&(uParam0->f_1.f_20[0 /*4*/]), 1);
	__LIB_13__::func_311(&(uParam0->f_1.f_20[1 /*4*/]), 1);
	__LIB_13__::func_311(&(uParam0->f_1.f_108[0 /*4*/]), 1);
	__LIB_13__::func_311(&(uParam0->f_1.f_108[1 /*4*/]), 1);
	HUD::CLEAR_HELP(true);
	while (HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
		SYSTEM::WAIT(0);
	}
	iVar1 = INTERIOR::GET_INTERIOR_AT_COORDS(uParam0->f_401);
	if (iVar1 != 0)
	{
		INTERIOR::UNPIN_INTERIOR(iVar1);
	}
	AUDIO::UNREGISTER_SCRIPT_WITH_AUDIO();
	__LIB_36__::func_946(uParam0);
	MISC::CLEAR_BIT(&(uParam0->f_449), 7);
	MISC::CLEAR_BIT(&(uParam0->f_449), 2);
	Global_96448 = 0;
}

void func_997(var uParam0)//Position - 0x36DD
{
	int iVar0;
	int iVar1;
	if ((!__LIB_0__::func_75() && CAM::IS_SCREEN_FADED_IN()) && !CUTSCENE::IS_CUTSCENE_PLAYING())
	{
		if (uParam0->f_483 > 0)
		{
			if (!BitTest(uParam0->f_449, 13))
			{
				if (__LIB_15__::func_872(&(uParam0->f_484), &(uParam0->f_467[0 /*5*/]), &(uParam0->f_467[0 /*5*/].f_2), 4, 0, 0, 0))
				{
					uParam0->f_455 = 0;
					if (uParam0->f_467[0 /*5*/].f_4)
					{
						MISC::CLEAR_BIT(&(uParam0->f_449), 11);
					}
					else
					{
						MISC::SET_BIT(&(uParam0->f_449), 11);
					}
					iVar0 = 0;
					while (iVar0 < 2)
					{
						uParam0->f_467[iVar0 /*5*/] = { uParam0->f_467[iVar0 + 1 /*5*/] };
						uParam0->f_467[iVar0 /*5*/].f_2 = { uParam0->f_467[iVar0 + 1 /*5*/].f_2 };
						uParam0->f_467[iVar0 /*5*/].f_4 = uParam0->f_467[iVar0 + 1 /*5*/].f_4;
						iVar0++;
					}
					uParam0->f_483 = (uParam0->f_483 - 1);
				}
			}
			else
			{
				iVar1 = 0;
				while (iVar1 < 2)
				{
					uParam0->f_467[iVar1 /*5*/] = { uParam0->f_467[iVar1 + 1 /*5*/] };
					uParam0->f_467[iVar1 /*5*/].f_2 = { uParam0->f_467[iVar1 + 1 /*5*/].f_2 };
					uParam0->f_467[iVar1 /*5*/].f_4 = uParam0->f_467[iVar1 + 1 /*5*/].f_4;
					iVar1++;
				}
				uParam0->f_483 = (uParam0->f_483 - 1);
				MISC::CLEAR_BIT(&(uParam0->f_449), 13);
				MISC::CLEAR_BIT(&(uParam0->f_449), 11);
			}
		}
		else
		{
			if (BitTest(uParam0->f_449, 11))
			{
				MISC::CLEAR_BIT(&(uParam0->f_449), 11);
			}
			if (BitTest(uParam0->f_449, 13))
			{
				MISC::CLEAR_BIT(&(uParam0->f_449), 13);
			}
			uParam0->f_455++;
		}
	}
}

void func_998(int iParam0, bool bParam1)//Position - 0x77A3
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 >= 0 && iVar0 <= 31)
	{
		if (!__LIB_36__::func_980(iParam0))
		{
			MISC::SET_BIT(&(Global_113386.f_26434.f_1), iVar0);
			if (!bParam1)
			{
				__LIB_0__::func_68(__LIB_36__::func_979(iParam0));
			}
		}
	}
}

void func_999(var uParam0)//Position - 0x1121B
{
	int iVar0;
	int iVar1;
	float fVar2;
	float fVar3;
	struct<3> Var4;
	iVar0 = 0;
	while (iVar0 < uParam0->f_1.f_33)
	{
		if (__LIB_36__::func_938(*uParam0, uParam0->f_1.f_75[iVar0]))
		{
			switch ((iVar0 % 3))
			{
				case 0:
					iVar1 = joaat("prop_ld_planning_pin_01");
					break;
				case 1:
					iVar1 = joaat("prop_ld_planning_pin_02");
					break;
				case 2:
					iVar1 = joaat("prop_ld_planning_pin_03");
					break;
			}
			fVar2 = (SYSTEM::TO_FLOAT((MISC::GET_RANDOM_INT_IN_RANGE(0, 65535) - 32767)) / 4000f);
			fVar3 = (SYSTEM::TO_FLOAT((MISC::GET_RANDOM_INT_IN_RANGE(0, 65535) - 32767)) / 4000f);
			Var4 = { __LIB_36__::func_982(uParam0, &(uParam0->f_1.f_34[iVar0 /*2*/])) };
			uParam0->f_428[iVar0] = OBJECT::CREATE_OBJECT(iVar1, Var4, true, true, false);
			ENTITY::SET_ENTITY_ROTATION(uParam0->f_428[iVar0], fVar2, 0f, (uParam0->f_404 + fVar3), 2, true);
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(uParam0->f_428[iVar0], true, false);
			ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_428[iVar0], true);
			ENTITY::SET_ENTITY_COLLISION(uParam0->f_428[iVar0], false, false);
			ENTITY::SET_ENTITY_HAS_GRAVITY(uParam0->f_428[iVar0], false);
			ENTITY::FREEZE_ENTITY_POSITION(uParam0->f_428[iVar0], true);
		}
		iVar0++;
	}
	MISC::CLEAR_BIT(&Global_96452, *uParam0);
}

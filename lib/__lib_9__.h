void func_0(var uParam0)//Position - 0x2C9689
{
	int iVar0;
	int iVar1;
	*uParam0 = 0;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		uParam0->f_1[iVar0 /*3*/] = -1;
		uParam0->f_1[iVar0 /*3*/].f_1 = -1;
		uParam0->f_1[iVar0 /*3*/].f_2 = -1;
		iVar0++;
	}
	iVar1 = 0;
	while (iVar1 < 9)
	{
		uParam0->f_38[iVar1 /*2*/] = -1;
		uParam0->f_38[iVar1 /*2*/].f_1 = 0;
		iVar1++;
	}
}

void func_1(var uParam0, int iParam1)//Position - 0x1C6
{
	uParam0->f_20 = iParam1;
}

float func_2(struct<2> Param0, var uParam1)//Position - 0x1EF7
{
	if (((Param0.f_1 >= 1000f && Param0.f_1 <= 1700f) && Param0.f_0 >= -700f) && Param0.f_0 <= 1100f)
	{
		return 500f;
	}
	if (((Param0.f_1 >= 3600f && Param0.f_1 <= 4100f) && Param0.f_0 >= -1700f) && Param0.f_0 <= -700f)
	{
		return 550f;
	}
	if (((Param0.f_1 >= 4880f && Param0.f_1 <= 6150f) && Param0.f_0 >= -500f) && Param0.f_0 <= 1900f)
	{
		return 850f;
	}
	return 400f;
}

float func_3(int iParam0)//Position - 0x1FBE
{
	float fVar0;
	fVar0 = 100f;
	switch (iParam0)
	{
		case 0:
			fVar0 = 90f;
			break;
		case 1:
			fVar0 = 60f;
			break;
		case 2:
			fVar0 = 50f;
			break;
		case 3:
			fVar0 = 25f;
			break;
		case 4:
			fVar0 = 10f;
			break;
	}
	return fVar0;
}

int func_4(var uParam0)//Position - 0x412E
{
	return uParam0->f_20;
}

int func_5(int iParam0, int iParam1)//Position - 0xC65
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_2__.func_141(iParam1))
	{
		iVar0 = 0;
		while (iVar0 <= 4)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_114[iVar0 /*3*/] == iParam1)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_6(int iParam0, var uParam1, var uParam2)//Position - 0x1D19
{
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	return 0;
}

int func_7(int iParam0)//Position - 0x30F3
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 12);
}

int func_8(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0x4EBB
{
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (Global_1977032 != 3)
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	switch (iParam1)
	{
		case -1:
			break;
	}
	return 1;
}

int func_9(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0x7557
{
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	switch (iParam1)
	{
		case 7:
			if (Global_1977041 == 1)
			{
				return 0;
			}
			break;
	}
	return 1;
}

int func_10(int iParam0, int iParam1, var uParam2)//Position - 0x795D
{
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	switch (iParam1)
	{
		case 1:
			return Global_1945950;
			break;
	}
	return 0;
}

int func_11(int iParam0)//Position - 0x7DB1
{
	return __LIB_2__.func_330(iParam0);
}

int func_12()//Position - 0xA455
{
	return __LIB_2__.func_330(PLAYER::PLAYER_ID());
}

int func_13()//Position - 0x10195
{
	return __LIB_2__.func_329(PLAYER::PLAYER_ID());
}

int func_14(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0x18272
{
	struct<3> Var0;
	struct<3> Var1;
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	Var1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	if (!__LIB_0__.func_394(0f, 0f, Var0.f_2, 0f, 0f, Var1.f_2, 1056964608, 0))
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	switch (iParam1)
	{
		case -1:
			break;
	}
	return 1;
}

int func_15(int iParam0)//Position - 0x1868C
{
	return __LIB_2__.func_289(iParam0);
}

int func_16(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0x1AF5F
{
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	switch (iParam1)
	{
		case -1:
			break;
	}
	return 1;
}

int func_17(int iParam0)//Position - 0x1B68B
{
	return __LIB_2__.func_102(iParam0);
}

int func_18(int iParam0, int iParam1, var uParam2, var uParam3)//Position - 0x2B474
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (Global_2725435)
	{
		return 0;
	}
	switch (iParam1)
	{
		case 13:
			iVar0 = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
			if (iVar0 != joaat("Lobby"))
			{
				return 0;
			}
			break;
		case 57:
		case 58:
		case 61:
		case 95:
		case 117:
			Var1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			Var2 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
			if (!__LIB_0__.func_394(0f, 0f, Var2.f_2, 0f, 0f, Var1.f_2, 1056964608, 0))
			{
				return 0;
			}
			break;
	}
	return 1;
}

int func_19(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x4F620
{
	struct<3> Var0;
	struct<3> Var1;
	int iVar2;
	if (!__LIB_0__.func_121(iParam0))
	{
		return 0;
	}
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (Global_2725435)
	{
		return 0;
	}
	if (__LIB_5__.func_122())
	{
		return 0;
	}
	Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	Var1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	if (!__LIB_0__.func_394(0f, 0f, Var0.f_2, 0f, 0f, Var1.f_2, 1056964608, 0))
	{
		return 0;
	}
	switch (iParam1)
	{
		case 0:
			iVar2 = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
			switch (iParam2)
			{
				case 0:
				case 1:
					if (iVar2 != joaat("Rm_Command"))
					{
						return 0;
					}
					break;
				case 2:
					if (iVar2 != joaat("Rm_Torpedo"))
					{
						return 0;
					}
					break;
				case 3:
					if (iVar2 != joaat("Rm_Mess"))
					{
						return 0;
					}
					break;
				case 4:
					if (iVar2 != joaat("Rm_EngineMain"))
					{
						return 0;
					}
					break;
			}
			break;
	}
	return 1;
}

int func_20(var uParam0, int iParam1, var uParam2, var uParam3)//Position - 0x529A2
{
	if (!Global_1579009)
	{
		return 0;
	}
	if (__LIB_1__.func_352(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (CAM::IS_SCREEN_FADING_OUT() || CAM::IS_SCREEN_FADED_OUT())
	{
		return 0;
	}
	if (__LIB_0__.func_661())
	{
		return 0;
	}
	if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE() || __LIB_6__.func_737(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if ((__LIB_0__.func_706() || __LIB_0__.func_739()) || __LIB_3__.func_778())
	{
		return 0;
	}
	if (Global_2725435)
	{
		return 0;
	}
	switch (iParam1)
	{
		case 0:
			break;
	}
	return 1;
}

int func_21()//Position - 0x7FB62
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < NETWORK::NETWORK_GET_MAX_NUM_PARTICIPANTS())
	{
		if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(iVar1)))
		{
			iVar0++;
		}
		iVar1++;
	}
	return iVar0;
}

int func_22(int iParam0)//Position - 0x2776
{
	switch (iParam0)
	{
		case 1:
			return 11;
			break;
		case 256:
			return 11;
			break;
		case 257:
			return 11;
			break;
		case 258:
			return 11;
			break;
		case 259:
			return 11;
			break;
		case 260:
			return 11;
			break;
		case 261:
			return 11;
			break;
		case 262:
			return 11;
			break;
		case 305:
			return 11;
			break;
		case 306:
			return 11;
			break;
		case 307:
			return 11;
			break;
		case 308:
			return 11;
			break;
		case 309:
			return 11;
			break;
		case 310:
			return 11;
			break;
		case 311:
			return 11;
			break;
		case 312:
			return 11;
			break;
		case 313:
			return 11;
			break;
		case 314:
			return 11;
			break;
		case 315:
			return 11;
			break;
		case 316:
			return 11;
			break;
		case 317:
			return 11;
			break;
		case 318:
			return 11;
			break;
		case 319:
			return 11;
			break;
		case 320:
			return 11;
			break;
		case 321:
			return 11;
			break;
		case 322:
			return 11;
			break;
		case 323:
			return 11;
			break;
		case 263:
			return 11;
			break;
		case 264:
			return 11;
			break;
		case 265:
			return 11;
			break;
		case 302:
			return 11;
			break;
		case 303:
			return 11;
			break;
		case 304:
			return 11;
			break;
		case 296:
			return 11;
			break;
		case 297:
			return 11;
			break;
		case 298:
			return 11;
			break;
		case 299:
			return 11;
			break;
		case 300:
			return 11;
			break;
		case 301:
			return 11;
			break;
		case 1228:
			return 11;
			break;
		case 1229:
			return 11;
			break;
		case 1230:
			return 11;
			break;
		case 1231:
			return 11;
			break;
		case 1232:
			return 11;
			break;
		case 1233:
			return 11;
			break;
		case 1251:
			return 11;
			break;
		case 1252:
			return 11;
			break;
		case 156:
			return 5;
			break;
		case 157:
			return 10;
			break;
		case 158:
			return 15;
			break;
		case 159:
			return 20;
			break;
		case 160:
			return 25;
			break;
		case 2:
			return 27;
			break;
		case 3:
			return 24;
			break;
		case 4:
			return 22;
			break;
		case 6:
			return 15;
			break;
		case 7:
			return 18;
			break;
		case 8:
			return 44;
			break;
		case 9:
			return 16;
			break;
		case 10:
			return 23;
			break;
		case 11:
			return 38;
			break;
		case 12:
			return 32;
			break;
		case 13:
			return 11;
			break;
		case 14:
			return 56;
			break;
		case 15:
			return 28;
			break;
		case 288:
			return 44;
			break;
		case 289:
			return 16;
			break;
		case 290:
			return 23;
			break;
		case 291:
			return 38;
			break;
		case 292:
			return 32;
			break;
		case 293:
			return 11;
			break;
		case 294:
			return 56;
			break;
		case 295:
			return 28;
			break;
		case 17:
			return 75;
			break;
		case 136:
			return 50;
			break;
		case 137:
			return 50;
			break;
		case 138:
			return 50;
			break;
		case 139:
			return 50;
			break;
		case 140:
			return 50;
			break;
		case 141:
			return 50;
			break;
		case 142:
			return 50;
			break;
		case 143:
			return 50;
			break;
		case 144:
			return 50;
			break;
		case 145:
			return 50;
			break;
		case 146:
			return 50;
			break;
		case 147:
			return 50;
			break;
		case 148:
			return 50;
			break;
		case 149:
			return 50;
			break;
		case 150:
			return 50;
			break;
		case 151:
			return 50;
			break;
		case 152:
			return 50;
			break;
		case 153:
			return 50;
			break;
		case 154:
			return 50;
			break;
		case 155:
			return 50;
			break;
		case 36:
			return 100;
			break;
		case 238:
			if (Global_262145.f_2867 /* Tunable: PLAYERKIT_ARMOUR_STORE_L1_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2867 /* Tunable: PLAYERKIT_ARMOUR_STORE_L1_RANK_TUNABLE */;
			}
			else
			{
				return 0;
			}
			break;
		case 239:
			if (Global_262145.f_2868 /* Tunable: PLAYERKIT_ARMOUR_STORE_L2_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2868 /* Tunable: PLAYERKIT_ARMOUR_STORE_L2_RANK_TUNABLE */;
			}
			else
			{
				return 15;
			}
			break;
		case 240:
			if (Global_262145.f_2869 /* Tunable: PLAYERKIT_ARMOUR_STORE_L3_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2869 /* Tunable: PLAYERKIT_ARMOUR_STORE_L3_RANK_TUNABLE */;
			}
			else
			{
				return 30;
			}
			break;
		case 241:
			if (Global_262145.f_2870 /* Tunable: PLAYERKIT_ARMOUR_STORE_L4_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2870 /* Tunable: PLAYERKIT_ARMOUR_STORE_L4_RANK_TUNABLE */;
			}
			else
			{
				return 45;
			}
			break;
		case 242:
			if (Global_262145.f_2871 /* Tunable: PLAYERKIT_ARMOUR_STORE_L5_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2871 /* Tunable: PLAYERKIT_ARMOUR_STORE_L5_RANK_TUNABLE */;
			}
			else
			{
				return 60;
			}
			break;
		case 243:
			if (Global_262145.f_2872 /* Tunable: PLAYERKIT_ARMOUR_STORE_L6_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2872 /* Tunable: PLAYERKIT_ARMOUR_STORE_L6_RANK_TUNABLE */;
			}
			else
			{
				return 75;
			}
			break;
		case 244:
			if (Global_262145.f_2873 /* Tunable: PLAYERKIT_ARMOUR_STORE_L7_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2873 /* Tunable: PLAYERKIT_ARMOUR_STORE_L7_RANK_TUNABLE */;
			}
			else
			{
				return 90;
			}
			break;
		case 245:
			if (Global_262145.f_2874 /* Tunable: PLAYERKIT_ARMOUR_STORE_L8_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2874 /* Tunable: PLAYERKIT_ARMOUR_STORE_L8_RANK_TUNABLE */;
			}
			else
			{
				return 105;
			}
			break;
		case 246:
			if (Global_262145.f_2875 /* Tunable: PLAYERKIT_ARMOUR_STORE_L9_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2875 /* Tunable: PLAYERKIT_ARMOUR_STORE_L9_RANK_TUNABLE */;
			}
			else
			{
				return 130;
			}
			break;
		case 247:
			if (Global_262145.f_2876 /* Tunable: PLAYERKIT_ARMOUR_STORE_L10_RANK_TUNABLE */ > -1)
			{
				return Global_262145.f_2876 /* Tunable: PLAYERKIT_ARMOUR_STORE_L10_RANK_TUNABLE */;
			}
			else
			{
				return 145;
			}
			break;
	}
	switch (iParam0)
	{
		case 345:
			return 11;
			break;
		case 346:
			return 11;
			break;
		case 347:
			return 11;
			break;
		case 348:
			return 11;
			break;
		case 349:
			return 11;
			break;
		case 350:
			return 11;
			break;
		case 351:
			return 11;
			break;
		case 352:
			return 11;
			break;
		case 353:
			return 11;
			break;
		case 354:
			return 11;
			break;
		case 355:
			return 11;
			break;
		case 356:
			return 11;
			break;
		case 357:
			return 11;
			break;
		case 358:
			return 11;
			break;
		case 359:
			return 11;
			break;
		case 360:
			return 11;
			break;
		case 361:
			return 11;
			break;
		case 362:
			return 11;
			break;
		case 363:
			return 11;
			break;
		case 364:
			return 11;
			break;
	}
	switch (iParam0)
	{
		case 56:
			return 100;
		case 57:
			return 100;
		case 58:
			return 100;
		case 59:
			return 100;
		case 60:
			return 100;
		case 61:
			return 100;
		case 62:
			return 100;
		case 63:
			return 100;
		case 64:
			return 100;
		case 65:
			return 100;
		case 66:
			return 100;
		case 67:
			return 100;
		case 68:
			return 100;
		case 69:
			return 100;
		case 70:
			return 100;
		case 71:
			return 100;
		case 72:
			return 100;
		case 73:
			return 100;
		case 74:
			return 100;
		case 75:
			return 100;
		case 76:
			return 200;
		case 77:
			return 200;
		case 78:
			return 200;
		case 79:
			return 200;
		case 80:
			return 200;
		case 81:
			return 200;
		case 82:
			return 200;
		case 83:
			return 200;
		case 84:
			return 200;
		case 85:
			return 200;
		case 86:
			return 200;
		case 87:
			return 200;
		case 88:
			return 200;
		case 89:
			return 200;
		case 90:
			return 200;
		case 91:
			return 200;
		case 92:
			return 200;
		case 93:
			return 200;
		case 94:
			return 200;
		case 95:
			return 200;
		case 96:
			return 400;
		case 97:
			return 400;
		case 98:
			return 400;
		case 99:
			return 400;
		case 100:
			return 400;
		case 101:
			return 400;
		case 102:
			return 400;
		case 103:
			return 400;
		case 104:
			return 400;
		case 105:
			return 400;
		case 106:
			return 400;
		case 107:
			return 400;
		case 108:
			return 400;
		case 109:
			return 400;
		case 110:
			return 400;
		case 111:
			return 400;
		case 112:
			return 400;
		case 113:
			return 400;
		case 114:
			return 400;
		case 115:
			return 400;
		case 116:
			return 600;
		case 117:
			return 600;
		case 118:
			return 600;
		case 119:
			return 600;
		case 120:
			return 600;
		case 121:
			return 600;
		case 122:
			return 600;
		case 123:
			return 600;
		case 124:
			return 600;
		case 125:
			return 600;
		case 126:
			return 600;
		case 127:
			return 600;
		case 128:
			return 600;
		case 129:
			return 600;
		case 130:
			return 600;
		case 131:
			return 600;
		case 132:
			return 600;
		case 133:
			return 600;
		case 134:
			return 600;
		case 135:
			return 600;
		default:
	}
	switch (iParam0)
	{
		case 161:
			return 75;
		case 162:
			return 50;
		case 163:
			return 100;
		case 164:
			return 600;
		case 165:
			return 400;
		case 166:
			return 100;
		case 167:
			return 75;
		case 168:
			return 50;
		case 169:
			return 100;
		case 170:
			return 600;
		case 171:
			return 400;
		case 172:
			return 100;
		case 173:
			return 75;
		case 174:
			return 50;
		case 175:
			return 100;
		case 176:
			return 600;
		case 177:
			return 400;
		case 178:
			return 100;
		case 179:
			return 75;
		case 180:
			return 50;
		case 181:
			return 100;
		case 182:
			return 600;
		case 183:
			return 400;
		case 184:
			return 100;
		default:
	}
	switch (iParam0)
	{
		case 185:
			return 75;
		case 186:
			return 50;
		case 187:
			return 100;
		case 188:
			return 600;
		case 189:
			return 400;
		case 190:
			return 100;
		case 191:
			return 200;
		case 192:
			return 200;
		case 193:
			return 200;
		case 194:
			return 200;
		case 195:
			return 75;
		case 196:
			return 50;
		case 197:
			return 100;
		case 198:
			return 600;
		case 199:
			return 400;
		case 200:
			return 100;
		case 201:
			return 200;
		case 202:
			return 75;
		case 203:
			return 50;
		case 204:
			return 100;
		case 205:
			return 600;
		case 206:
			return 400;
		case 207:
			return 100;
		case 208:
			return 200;
		case 209:
			return 75;
		case 210:
			return 50;
		case 211:
			return 100;
		case 212:
			return 600;
		case 213:
			return 400;
		case 214:
			return 100;
		case 215:
			return 200;
		case 224:
			return 75;
		case 225:
			return 50;
		case 226:
			return 100;
		case 227:
			return 600;
		case 228:
			return 400;
		case 229:
			return 100;
		case 230:
			return 200;
		case 231:
			return 75;
		case 232:
			return 50;
		case 233:
			return 100;
		case 234:
			return 600;
		case 235:
			return 400;
		case 236:
			return 100;
		case 237:
			return 200;
		default:
	}
	switch (iParam0)
	{
		case 266:
			return 75;
		case 267:
			return 50;
		case 268:
			return 100;
		case 269:
			return 600;
		case 270:
			return 400;
		case 271:
			return 100;
		case 272:
			return 200;
		case 273:
			return 75;
		case 274:
			return 50;
		case 275:
			return 100;
		case 276:
			return 600;
		case 277:
			return 400;
		case 278:
			return 100;
		case 279:
			return 200;
		case 280:
			return 75;
		case 281:
			return 50;
		case 282:
			return 100;
		case 283:
			return 600;
		case 284:
			return 400;
		case 285:
			return 100;
		case 286:
			return 200;
		case 324:
			return 75;
		case 325:
			return 50;
		case 326:
			return 100;
		case 327:
			return 600;
		case 328:
			return 400;
		case 329:
			return 100;
		case 330:
			return 200;
		case 331:
			return 75;
		case 332:
			return 50;
		case 333:
			return 100;
		case 334:
			return 600;
		case 335:
			return 400;
		case 336:
			return 100;
		case 337:
			return 200;
		case 338:
			return 75;
		case 339:
			return 50;
		case 340:
			return 100;
		case 341:
			return 600;
		case 342:
			return 400;
		case 343:
			return 100;
		case 344:
			return 200;
		case 372:
			return 11;
		case 373:
			return 11;
		case 374:
			return 11;
		case 375:
			return 11;
		case 376:
			return 11;
		default:
	}
	switch (iParam0)
	{
		case 1184:
			return 11;
			break;
		case 1185:
			return 11;
			break;
		case 1234:
			return 11;
			break;
		case 1235:
			return 11;
			break;
		case 1236:
			return 11;
			break;
		case 1253:
			return 11;
			break;
	}
	return 0;
}

bool func_23(var uParam0)//Position - 0x528C4
{
	return uParam0->f_10 == PLAYER::PLAYER_ID();
}

int func_24(int iParam0, int iParam1)//Position - 0xDDCA4
{
	if (((((((iParam1 == joaat("speedo4") || iParam1 == joaat("mule4")) || iParam1 == joaat("pounder2")) || iParam1 == __LIB_1__.func_391()) || __LIB_1__.func_177(iParam1)) || __LIB_1__.func_392(iParam1)) || func_2461(iParam1)) || VEHICLE::IS_THIS_MODEL_A_BICYCLE(iParam1))
	{
		return 0;
	}
	return 1;
}

int func_25(int iParam0, int iParam1)//Position - 0x1A9C83
{
	if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) == 1 || TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) == 0)
	{
		return 1;
	}
	return 0;
}

struct<4> func_26(int iParam0)//Position - 0x1BC923
{
	struct<4> Var0;
	switch (iParam0)
	{
		case 1:
			StringCopy(&Var0, "MP_PROP_1" /* GXT: Eclipse Towers, Apt 31 */, 16);
			break;
		case 2:
			StringCopy(&Var0, "MP_PROP_2" /* GXT: Eclipse Towers, Apt 9 */, 16);
			break;
		case 3:
			StringCopy(&Var0, "MP_PROP_3" /* GXT: Eclipse Towers, Apt 40 */, 16);
			break;
		case 4:
			StringCopy(&Var0, "MP_PROP_4" /* GXT: Eclipse Towers, Apt 5 */, 16);
			break;
		case 5:
			StringCopy(&Var0, "MP_PROP_5" /* GXT: 3 Alta St, Apt 10 */, 16);
			break;
		case 6:
			StringCopy(&Var0, "MP_PROP_6" /* GXT: 3 Alta St, Apt 57 */, 16);
			break;
		case 7:
			StringCopy(&Var0, "MP_PROP_7" /* GXT: Del Perro Heights, Apt 20 */, 16);
			break;
		case 8:
			StringCopy(&Var0, "MP_PROP_8" /* GXT: 1162 Power St, Apt 3 */, 16);
			break;
		case 9:
			StringCopy(&Var0, "MP_PROP_9" /* GXT: 0605 Spanish Ave, Apt 1 */, 16);
			break;
		case 10:
			StringCopy(&Var0, "MP_PROP_10" /* GXT: 0604 Las Lagunas Blvd, Apt 4 */, 16);
			break;
		case 11:
			StringCopy(&Var0, "MP_PROP_11" /* GXT: 0184 Milton Rd, Apt 13 */, 16);
			break;
		case 12:
			StringCopy(&Var0, "MP_PROP_12" /* GXT: The Royale, Apt 19 */, 16);
			break;
		case 13:
			StringCopy(&Var0, "MP_PROP_13" /* GXT: 0504 S Mo Milton Dr */, 16);
			break;
		case 14:
			StringCopy(&Var0, "MP_PROP_14" /* GXT: 0115 Bay City Ave, Apt 45 */, 16);
			break;
		case 15:
			StringCopy(&Var0, "MP_PROP_15" /* GXT: 0325 South Rockford Dr */, 16);
			break;
		case 16:
			StringCopy(&Var0, "MP_PROP_16" /* GXT: Dream Tower, Apt 15 */, 16);
			break;
		case 17:
			StringCopy(&Var0, "MP_PROP_17" /* GXT: 2143 Las Lagunas Blvd, Apt 9 */, 16);
			break;
		case 18:
			StringCopy(&Var0, "MP_PROP_18" /* GXT: 1561 San Vitas St, Apt 2 */, 16);
			break;
		case 19:
			StringCopy(&Var0, "MP_PROP_19" /* GXT: 0112 S Rockford Dr, Apt 13 */, 16);
			break;
		case 20:
			StringCopy(&Var0, "MP_PROP_20" /* GXT: 2057 Vespucci Blvd, Apt 1 */, 16);
			break;
		case 21:
			StringCopy(&Var0, "MP_PROP_21" /* GXT: 0069 Cougar Ave, Apt 19 */, 16);
			break;
		case 22:
			StringCopy(&Var0, "MP_PROP_22" /* GXT: 1237 Prosperity St, Apt 21 */, 16);
			break;
		case 23:
			StringCopy(&Var0, "MP_PROP_23" /* GXT: 1115 Blvd Del Perro, Apt 18 */, 16);
			break;
		case 24:
			StringCopy(&Var0, "MP_PROP_24" /* GXT: 0120 Murrieta Heights */, 16);
			break;
		case 25:
			StringCopy(&Var0, "MP_PROP_25" /* GXT: Unit 14 Popular St */, 16);
			break;
		case 26:
			StringCopy(&Var0, "MP_PROP_26" /* GXT: Unit 2 Popular St */, 16);
			break;
		case 27:
			StringCopy(&Var0, "MP_PROP_27" /* GXT: 331 Supply St */, 16);
			break;
		case 28:
			StringCopy(&Var0, "MP_PROP_28" /* GXT: Unit 1 Olympic Fwy */, 16);
			break;
		case 29:
			StringCopy(&Var0, "MP_PROP_29" /* GXT: 0754 Roy Lowenstein Blvd */, 16);
			break;
		case 30:
			StringCopy(&Var0, "MP_PROP_30" /* GXT: 12 Little Bighorn Ave */, 16);
			break;
		case 31:
			StringCopy(&Var0, "MP_PROP_31" /* GXT: Unit 124 Popular St */, 16);
			break;
		case 32:
			StringCopy(&Var0, "MP_PROP_32" /* GXT: 0552 Roy Lowenstein Blvd */, 16);
			break;
		case 33:
			StringCopy(&Var0, "MP_PROP_33" /* GXT: 0432 Davis Ave */, 16);
			break;
		case 34:
			StringCopy(&Var0, "MP_PROP_34" /* GXT: Del Perro Heights, Apt 7 */, 16);
			break;
		case 35:
			StringCopy(&Var0, "MP_PROP_35" /* GXT: Weazel Plaza, Apt 101 */, 16);
			break;
		case 36:
			StringCopy(&Var0, "MP_PROP_36" /* GXT: Weazel Plaza, Apt 70 */, 16);
			break;
		case 37:
			StringCopy(&Var0, "MP_PROP_37" /* GXT: Weazel Plaza, Apt 26 */, 16);
			break;
		case 38:
			StringCopy(&Var0, "MP_PROP_38" /* GXT: 4 Integrity Way, Apt 30 */, 16);
			break;
		case 39:
			StringCopy(&Var0, "MP_PROP_39" /* GXT: 4 Integrity Way, Apt 35 */, 16);
			break;
		case 40:
			StringCopy(&Var0, "MP_PROP_40" /* GXT: Richards Majestic, Apt 4 */, 16);
			break;
		case 41:
			StringCopy(&Var0, "MP_PROP_41" /* GXT: Richards Majestic, Apt 51 */, 16);
			break;
		case 42:
			StringCopy(&Var0, "MP_PROP_42" /* GXT: Tinsel Towers, Apt 45 */, 16);
			break;
		case 43:
			StringCopy(&Var0, "MP_PROP_43" /* GXT: Tinsel Towers, Apt 29 */, 16);
			break;
		case 44:
			StringCopy(&Var0, "MP_PROP_44" /* GXT: 142 Paleto Blvd */, 16);
			break;
		case 45:
			StringCopy(&Var0, "MP_PROP_45" /* GXT: 1 Strawberry Ave */, 16);
			break;
		case 46:
			StringCopy(&Var0, "MP_PROP_46" /* GXT: 1932 Grapeseed Ave */, 16);
			break;
		case 47:
			StringCopy(&Var0, "MP_PROP_48" /* GXT: 1920 Senora Way */, 16);
			break;
		case 48:
			StringCopy(&Var0, "MP_PROP_49" /* GXT: 2000 Great Ocean Highway */, 16);
			break;
		case 49:
			StringCopy(&Var0, "MP_PROP_50" /* GXT: 197 Route 68 */, 16);
			break;
		case 50:
			StringCopy(&Var0, "MP_PROP_51" /* GXT: 870 Route 68 Approach */, 16);
			break;
		case 51:
			StringCopy(&Var0, "MP_PROP_52" /* GXT: 1200 Route 68 */, 16);
			break;
		case 52:
			StringCopy(&Var0, "MP_PROP_57" /* GXT: 8754 Route 68 */, 16);
			break;
		case 53:
			StringCopy(&Var0, "MP_PROP_59" /* GXT: 1905 Davis Ave */, 16);
			break;
		case 54:
			StringCopy(&Var0, "MP_PROP_60" /* GXT: 1623 South Shambles St */, 16);
			break;
		case 55:
			StringCopy(&Var0, "MP_PROP_61" /* GXT: 4531 Dry Dock St */, 16);
			break;
		case 56:
			StringCopy(&Var0, "MP_PROP_62" /* GXT: 1337 Exceptionalists Way */, 16);
			break;
		case 57:
			StringCopy(&Var0, "MP_PROP_63" /* GXT: Unit 76 Greenwich Parkway */, 16);
			break;
		case 58:
			StringCopy(&Var0, "MP_PROP_64" /* GXT: Garage Innocence Blvd */, 16);
			break;
		case 59:
			StringCopy(&Var0, "MP_PROP_65" /* GXT: 634 Blvd Del Perro */, 16);
			break;
		case 60:
			StringCopy(&Var0, "MP_PROP_66" /* GXT: 0897 Mirror Park Blvd */, 16);
			break;
		case 61:
			StringCopy(&Var0, "MP_PROP_67" /* GXT: Eclipse Towers, Apt 3 */, 16);
			break;
		case 62:
			StringCopy(&Var0, "MP_PROP_68" /* GXT: Del Perro Heights, Apt 4 */, 16);
			break;
		case 63:
			StringCopy(&Var0, "MP_PROP_69" /* GXT: Richards Majestic, Apt 2 */, 16);
			break;
		case 64:
			StringCopy(&Var0, "MP_PROP_70" /* GXT: Tinsel Towers, Apt 42 */, 16);
			break;
		case 65:
			StringCopy(&Var0, "MP_PROP_71" /* GXT: 4 Integrity Way, Apt 28 */, 16);
			break;
		case 66:
			StringCopy(&Var0, "MP_PROP_72" /* GXT: 4 Hangman Ave */, 16);
			break;
		case 67:
			StringCopy(&Var0, "MP_PROP_73" /* GXT: 12 Sustancia Rd */, 16);
			break;
		case 68:
			StringCopy(&Var0, "MP_PROP_74" /* GXT: 4584 Procopio Dr */, 16);
			break;
		case 69:
			StringCopy(&Var0, "MP_PROP_75" /* GXT: 4401 Procopio Dr */, 16);
			break;
		case 70:
			StringCopy(&Var0, "MP_PROP_76" /* GXT: 0232 Paleto Blvd */, 16);
			break;
		case 71:
			StringCopy(&Var0, "MP_PROP_77" /* GXT: 140 Zancudo Ave */, 16);
			break;
		case 72:
			StringCopy(&Var0, "MP_PROP_78" /* GXT: 1893 Grapeseed Ave */, 16);
			break;
		case 83:
			StringCopy(&Var0, "MP_PROP_79" /* GXT: Eclipse Towers, Penthouse Suite 1 */, 16);
			break;
		case 84:
			StringCopy(&Var0, "MP_PROP_80" /* GXT: Eclipse Towers, Penthouse Suite 2 */, 16);
			break;
		case 85:
			StringCopy(&Var0, "MP_PROP_81" /* GXT: Eclipse Towers, Penthouse Suite 3 */, 16);
			break;
		case 73:
			StringCopy(&Var0, "MP_PROP_83" /* GXT: 3655 Wild Oats Drive */, 16);
			break;
		case 74:
			StringCopy(&Var0, "MP_PROP_84" /* GXT: 2044 North Conker Avenue */, 16);
			break;
		case 75:
			StringCopy(&Var0, "MP_PROP_85" /* GXT: 2868 Hillcrest Avenue */, 16);
			break;
		case 76:
			StringCopy(&Var0, "MP_PROP_86" /* GXT: 2862 Hillcrest Avenue */, 16);
			break;
		case 77:
			StringCopy(&Var0, "MP_PROP_87" /* GXT: 3677 Whispymound Drive */, 16);
			break;
		case 78:
			StringCopy(&Var0, "MP_PROP_89" /* GXT: 2117 Milton Road */, 16);
			break;
		case 79:
			StringCopy(&Var0, "MP_PROP_90" /* GXT: 2866 Hillcrest Avenue */, 16);
			break;
		case 80:
			StringCopy(&Var0, "MP_PROP_92" /* GXT: 2874 Hillcrest Avenue */, 16);
			break;
		case 81:
			StringCopy(&Var0, "MP_PROP_94" /* GXT: 2113 Mad Wayne Thunder Drive */, 16);
			break;
		case 82:
			StringCopy(&Var0, "MP_PROP_95" /* GXT: 2045 North Conker Avenue */, 16);
			break;
		case 86:
			StringCopy(&Var0, "PM_SPAWN_Y" /* GXT: Private Yacht */, 16);
			break;
		case 87:
			StringCopy(&Var0, "MP_PROP_OFF1" /* GXT: Lombank West */, 16);
			break;
		case 88:
			StringCopy(&Var0, "MP_PROP_OFF2" /* GXT: Maze Bank West */, 16);
			break;
		case 89:
			StringCopy(&Var0, "MP_PROP_OFF3" /* GXT: Arcadius Business Center */, 16);
			break;
		case 90:
			StringCopy(&Var0, "MP_PROP_OFF4" /* GXT: Maze Bank Tower */, 16);
			break;
		case 91:
			StringCopy(&Var0, "MP_PROP_CLUBH1" /* GXT: Rancho Clubhouse */, 16);
			break;
		case 92:
			StringCopy(&Var0, "MP_PROP_CLUBH2" /* GXT: Del Perro Beach Clubhouse */, 16);
			break;
		case 93:
			StringCopy(&Var0, "MP_PROP_CLUBH3" /* GXT: Pillbox Hill Clubhouse */, 16);
			break;
		case 94:
			StringCopy(&Var0, "MP_PROP_CLUBH4" /* GXT: Great Chaparral Clubhouse */, 16);
			break;
		case 95:
			StringCopy(&Var0, "MP_PROP_CLUBH5" /* GXT: Paleto Bay Clubhouse */, 16);
			break;
		case 96:
			StringCopy(&Var0, "MP_PROP_CLUBH6" /* GXT: Sandy Shores Clubhouse */, 16);
			break;
		case 97:
			StringCopy(&Var0, "MP_PROP_CLUBH7" /* GXT: La Mesa Clubhouse */, 16);
			break;
		case 98:
			StringCopy(&Var0, "MP_PROP_CLUBH8" /* GXT: Downtown Vinewood Clubhouse */, 16);
			break;
		case 99:
			StringCopy(&Var0, "MP_PROP_CLUBH9" /* GXT: Hawick Clubhouse */, 16);
			break;
		case 100:
			StringCopy(&Var0, "MP_PROP_CLUBH10" /* GXT: Grapeseed Clubhouse */, 16);
			break;
		case 101:
			StringCopy(&Var0, "MP_PROP_CLUBH11" /* GXT: Paleto Bay Clubhouse */, 16);
			break;
		case 102:
			StringCopy(&Var0, "MP_PROP_CLUBH12" /* GXT: Vespucci Beach Clubhouse */, 16);
			break;
		case 103:
		case 106:
		case 109:
		case 112:
			StringCopy(&Var0, "MP_PROP_OFFG1" /* GXT: Office Garage 1 */, 16);
			break;
		case 104:
		case 107:
		case 110:
		case 113:
			StringCopy(&Var0, "MP_PROP_OFFG2" /* GXT: Office Garage 2 */, 16);
			break;
		case 105:
		case 108:
		case 111:
		case 114:
			StringCopy(&Var0, "MP_PROP_OFFG3" /* GXT: Office Garage 3 */, 16);
			break;
		case 115:
			StringCopy(&Var0, "IE_WARE_1" /* GXT: Vehicle Warehouse */, 16);
			break;
	}
	return Var0;
}

void func_27(char* sParam0, int iParam1, int iParam2)//Position - 0x1C74C4
{
	int iVar0;
	StringCopy(&(Global_4539885.f_21), sParam0, 16);
	Global_4539885.f_61 = 0;
	Global_4539885.f_62 = 0;
	Global_4539885.f_63 = 0;
	Global_4539885.f_64 = 0;
	Global_4539885.f_65 = iParam1;
	Global_4539885.f_66 = MISC::GET_GAME_TIMER();
	Global_4539885.f_67 = iParam2;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		Global_4539885.f_25[iVar0] = 0;
		iVar0++;
	}
}

void func_28()//Position - 0x1D45AD
{
	Global_43991 = 1;
}

int func_29(int iParam0)//Position - 0x1D86E4
{
	switch (iParam0)
	{
		case 256:
			return 1;
		default:
	}
	return 0;
}

Vector3 func_30(int iParam0)//Position - 0x1C4AD
{
	return Global_1892703[iParam0 /*599*/].f_10.f_305;
}

int func_31()//Position - 0x241A8
{
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		return 209;
	}
	return 207;
}

void func_32(int iParam0)//Position - 0x291E0
{
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_47), iParam0);
}

void func_33(int iParam0, bool bParam1)//Position - 0x291F7
{
	struct<3> Var0;
	Var0.f_0 = -1858744609;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = bParam1;
	if (bParam1)
	{
	}
	SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iParam0);
}

void func_34(int iParam0)//Position - 0x29223
{
	struct<2> Var0;
	Var0.f_0 = 601184540;
	Var0.f_1 = PLAYER::PLAYER_ID();
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 2, iParam0);
	}
}

void func_35()//Position - 0x2924F
{
	Global_2815059.f_5961 = 0;
	Global_2815059.f_5961.f_3 = 0;
	Global_2815059.f_5961.f_4 = 0;
	Global_2815059.f_5961.f_2 = 0;
	Global_2815059.f_5961.f_5 = 0;
	Global_2815059.f_5961.f_1 = 0;
	Global_2815059.f_5961.f_6 = 0;
}

void func_36()//Position - 0x2929B
{
	int iVar0;
	if (MISC::IS_PC_VERSION())
	{
		NETWORK::NETWORK_SET_SCRIPT_CONTROLLING_TEAMS(0);
		HUD::OVERRIDE_MP_TEXT_CHAT_TEAM_STRING(0);
		iVar0 = 0;
		while (iVar0 < 32)
		{
			NETWORK::NETWORK_SET_SAME_TEAM_AS_LOCAL_PLAYER(iVar0, 0);
			iVar0++;
		}
		Global_2815059.f_5195.f_46 = 0;
	}
}

void func_37()//Position - 0x292D9
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_7 = 0;
}

void func_38(int iParam0)//Position - 0x292F1
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_28 = iParam0;
}

int func_39(int iParam0)//Position - 0x2936E
{
	return Global_1892703[iParam0 /*599*/].f_10.f_2;
}

void func_40(int iParam0)//Position - 0x294FC
{
	MISC::SET_BIT(&(Global_2815059.f_5195.f_47), iParam0);
}

void func_41(bool bParam0)//Position - 0x2A3EF
{
	if (bParam0)
	{
		__LIB_1__.func_484(10);
	}
	else
	{
		__LIB_1__.func_485(10);
	}
}

var func_42()//Position - 0x8C329
{
	return Global_32228;
}

struct<16> func_43()//Position - 0x8C373
{
	return Global_2715699.f_3076.f_2;
}

void func_44(int iParam0)//Position - 0x8C387
{
	struct<16> Var0;
	Global_2715699.f_3076.f_18[iParam0 /*16*/] = { Var0 };
}

void func_45()//Position - 0x8C3A4
{
	struct<16> Var0;
	Global_2715699.f_3076.f_2 = { Var0 };
}

void func_46()//Position - 0x8C3BD
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 6)
	{
		Global_2815059.f_5195.f_7[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 2)
	{
		Global_2815059.f_5195.f_14[iVar0] = 0;
		iVar0++;
	}
}

int func_47(int iParam0)//Position - 0xBC867
{
	if (((iParam0 == 68 || iParam0 == 69) || iParam0 == 70) || iParam0 == 71)
	{
		return 1;
	}
	return 0;
}

int func_48(int iParam0)//Position - 0xC03CB
{
	if (iParam0 > -1)
	{
		if (Global_1853348[iParam0 /*834*/].f_267.f_32 != -1 || BitTest(Global_1853348[iParam0 /*834*/].f_267.f_30, 2))
		{
			return 1;
		}
	}
	return 0;
}

int func_49(int iParam0)//Position - 0xC0513
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 == -1)
	{
		return 0;
	}
	return BitTest(Global_1853348[iVar0 /*834*/].f_36.f_18, 20);
}

int func_50(int iParam0, bool bParam1)//Position - 0xC0539
{
	if (DECORATOR::DECOR_IS_REGISTERED_AS_TYPE("MPBitset", 3))
	{
		if (DECORATOR::DECOR_EXIST_ON(PLAYER::GET_PLAYER_PED_SCRIPT_INDEX(iParam0), "MPBitset"))
		{
			if (BitTest(DECORATOR::DECOR_GET_INT(PLAYER::GET_PLAYER_PED_SCRIPT_INDEX(iParam0), "MPBitset"), bParam1))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_51(int iParam0)//Position - 0x1F8218
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (iParam0 == -15)
	{
		return 0;
	}
	iVar0 = __LIB_0__.func_483(iParam0);
	if (iVar0 < 0 || iVar0 >= 60)
	{
		return 0;
	}
	iVar1 = __LIB_0__.func_195(iParam0);
	if (iVar1 < 0 || iVar1 >= 60)
	{
		return 0;
	}
	iVar2 = __LIB_0__.func_196(iParam0);
	if (iVar2 < 0 || iVar2 > 23)
	{
		return 0;
	}
	iVar3 = __LIB_1__.func_26(iParam0);
	if ((iVar3 <= 0 || iVar3 > 2043) || iVar3 < 1979)
	{
		return 0;
	}
	iVar4 = __LIB_0__.func_411(iParam0);
	if (iVar4 < 0 || iVar4 > 11)
	{
		return 0;
	}
	iVar5 = __LIB_0__.func_482(iParam0);
	if (iVar5 < 1 || iVar5 > __LIB_0__.func_139(iVar4, iVar3))
	{
		return 0;
	}
	return 1;
}

void func_52(var uParam0, bool bParam1, bool bParam2)//Position - 0x1FBEF2
{
	if (CAM::DOES_CAM_EXIST(*uParam0))
	{
		if (bParam2)
		{
			CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, bParam1, 0);
		}
		if (CAM::IS_CAM_ACTIVE(*uParam0))
		{
			CAM::SET_CAM_ACTIVE(*uParam0, false);
		}
		CAM::DESTROY_CAM(*uParam0, bParam1);
	}
	if (uParam0->f_23)
	{
		HUD::UNLOCK_MINIMAP_ANGLE();
		uParam0->f_23 = 0;
	}
	uParam0->f_1 = { 0f, 0f, 0f };
	uParam0->f_4 = { 0f, 0f, 0f };
	uParam0->f_7 = 0f;
	uParam0->f_20 = 0;
	uParam0->f_21 = 0;
	uParam0->f_22 = 0;
	uParam0->f_8 = { 0f, 0f, 0f };
	uParam0->f_11 = { 0f, 0f, 0f };
	uParam0->f_14 = { 0f, 0f, 0f };
	uParam0->f_17 = 0f;
	uParam0->f_18 = 0f;
}

void func_53(int iParam0, var uParam1)//Position - 0x1FEC5A
{
	struct<3> Var0;
	Var0.f_0 = 994142343;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = uParam1;
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 3, iParam0);
	}
}

int func_54(var uParam0, int iParam1)//Position - 0x1FEC8C
{
	var uVar0;
	int iVar1;
	iVar1 = 0;
	while (iVar1 < uParam0->f_57)
	{
		if (iParam1 != uParam0->f_46[iVar1])
		{
			MISC::SET_BIT(&uVar0, uParam0->f_46[iVar1]);
		}
		iVar1++;
	}
	return uVar0;
}

void func_55(var uParam0)//Position - 0x1FEEC3
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 10)
	{
		if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_21[iVar0], false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(uParam0->f_21[iVar0]))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(uParam0->f_21[iVar0], false, true);
			}
			PED::DELETE_PED(&(uParam0->f_21[iVar0]));
		}
		iVar0++;
	}
	if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_19, false))
	{
		if (BitTest(uParam0->f_1, 7))
		{
			AUDIO::REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(uParam0->f_19, 0f);
			MISC::CLEAR_BIT(&(uParam0->f_1), 7);
		}
		VEHICLE::DELETE_VEHICLE(&(uParam0->f_19));
	}
}

void func_56(var uParam0, int iParam1)//Position - 0x1FEF49
{
	if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_20, false) && NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(uParam0->f_20))
	{
		if (VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(uParam0->f_20) > 1)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(uParam0->f_20, 1);
			MISC::CLEAR_BIT(&(uParam0->f_1), 3);
		}
	}
	else if ((!ENTITY::IS_ENTITY_DEAD(uParam0->f_20, false) && VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(uParam0->f_20) > 1) && iParam1)
	{
		Global_2725439.f_300 = 1;
	}
}

void func_57()//Position - 0x1FEFCB
{
	if (AUDIO::IS_AUDIO_SCENE_ACTIVE("EXEC1_Enter_Office_From_Heli_Scene"))
	{
		AUDIO::STOP_AUDIO_SCENE("EXEC1_Enter_Office_From_Heli_Scene");
	}
	if (AUDIO::IS_AUDIO_SCENE_ACTIVE("EXEC1_Enter_Office_From_Heli_Fade_To_Black_Scene"))
	{
		AUDIO::STOP_AUDIO_SCENE("EXEC1_Enter_Office_From_Heli_Fade_To_Black_Scene");
	}
	if (AUDIO::IS_AUDIO_SCENE_ACTIVE("EXEC1_Exit_Office_In_Heli_Scene"))
	{
		AUDIO::STOP_AUDIO_SCENE("EXEC1_Exit_Office_In_Heli_Scene");
	}
}

void func_58(var uParam0, int iParam1)//Position - 0x200D9B
{
	var uVar0[10];
	int iVar1;
	int iVar2;
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		iVar1 = PED::GET_PED_NEARBY_VEHICLES(iParam1, &uVar0);
		iVar2 = 0;
		while (iVar2 < iVar1)
		{
			if (!ENTITY::IS_ENTITY_DEAD(uVar0[iVar2], false))
			{
				ENTITY::SET_ENTITY_NO_COLLISION_ENTITY(uParam0->f_19, uVar0[iVar2], false);
			}
			iVar2++;
		}
	}
}

void func_59(var uParam0)//Position - 0x20104B
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_19, false))
	{
		iVar0 = 0;
		while (iVar0 < uParam0->f_32)
		{
			if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_21[iVar0], false))
			{
				PED::SET_PED_INTO_VEHICLE(uParam0->f_21[iVar0], uParam0->f_19, uParam0->f_33[iVar0]);
				PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(uParam0->f_21[iVar0], true, true);
				ENTITY::SET_ENTITY_VISIBLE(uParam0->f_21[iVar0], true, false);
			}
			iVar0++;
		}
	}
	VEHICLE::SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED(uParam0->f_19, 0);
	VEHICLE::SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(uParam0->f_19, true);
	VEHICLE::SET_VEHICLE_DOORS_LOCKED(uParam0->f_19, 4);
}

int func_60(var uParam0)//Position - 0x201688
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_32)
	{
		if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_21[iVar0]) && !ENTITY::IS_ENTITY_DEAD(uParam0->f_21[iVar0], false))
		{
			if (!PED::HAVE_ALL_STREAMING_REQUESTS_COMPLETED(uParam0->f_21[iVar0]))
			{
				return 0;
			}
		}
		iVar0++;
	}
	return 1;
}

bool func_61(int iParam0)//Position - 0x201D6F
{
	return iParam0 >= 4;
}

bool func_62(var uParam0, int iParam1)//Position - 0x201D7B
{
	return *uParam0 == iParam1;
}

struct<8> func_63(int iParam0, int iParam1)//Position - 0x20264F
{
	struct<8> Var0;
	switch (iParam0)
	{
		case 1:
			if (iParam1 == 0)
			{
				Var0 = { -786.13055f, 318.1971f, 84.1695f };
				Var0.f_3 = { -766.9842f, 318.14105f, 89.4195f };
				Var0.f_6 = 9f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -796.3859f, 313.8292f, 84.20247f };
				Var0.f_3 = { -796.4361f, 337.33496f, 88.98668f };
				Var0.f_6 = 19.5f;
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				Var0 = { -262.00125f, -970.0028f, 30.220259f };
				Var0.f_3 = { -269.68542f, -953.74225f, 33.473366f };
				Var0.f_6 = 3.25f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -281.4165f, -991.9504f, 23.136797f };
				Var0.f_3 = { -296.1687f, -986.64545f, 26.636797f };
				Var0.f_6 = 14.5f;
			}
			break;
		case 3:
			if (iParam1 == 0)
			{
				Var0 = { -1443.356f, -544.2447f, 33.74223f };
				Var0.f_3 = { -1448.1887f, -537.3356f, 36.740612f };
				Var0.f_6 = 12.75f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -1445.2601f, -514.4717f, 30.602194f };
				Var0.f_3 = { -1458.7538f, -523.7849f, 33.352196f };
				Var0.f_6 = 29.25f;
			}
			break;
		case 4:
			if (iParam1 == 0)
			{
				Var0 = { -915.1752f, -442.15042f, 38.610317f };
				Var0.f_3 = { -906.6085f, -459.02338f, 45.860317f };
				Var0.f_6 = 8.25f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -814.8599f, -438.8026f, 34.243286f };
				Var0.f_3 = { -819.5484f, -429.7499f, 39.627193f };
				Var0.f_6 = 8.25f;
			}
			break;
		case 5:
			if (iParam1 == 0)
			{
				Var0 = { -43.56847f, -582.31213f, 37.167168f };
				Var0.f_3 = { -46.803577f, -591.23834f, 41.916233f };
				Var0.f_6 = 3.5f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -35.122864f, -612.46436f, 34.07579f };
				Var0.f_3 = { -39.20616f, -622.9727f, 38.359833f };
				Var0.f_6 = 9f;
			}
			break;
		case 6:
			if (iParam1 == 0)
			{
				Var0 = { -934.8961f, -378.43405f, 37.711254f };
				Var0.f_3 = { -929.82684f, -375.81412f, 41.961254f };
				Var0.f_6 = 9f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -878.0805f, -359.38245f, 34.57846f };
				Var0.f_3 = { -883.7973f, -348.11505f, 37.784054f };
				Var0.f_6 = 7f;
			}
			break;
		case 7:
			if (iParam1 == 0)
			{
				Var0 = { -618.387f, 38.452286f, 42.60744f };
				Var0.f_3 = { -618.25305f, 47.625286f, 46.995808f };
				Var0.f_6 = 17.5f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -629.8059f, 56.867207f, 42.724968f };
				Var0.f_3 = { -615.78534f, 56.87227f, 46.745895f };
				Var0.f_6 = 18.5f;
			}
			break;
		case 8:
			if (iParam1 == 0)
			{
				Var0 = { 286.4769f, -160.57649f, 63.622066f };
				Var0.f_3 = { 293.09503f, -162.991f, 66.447395f };
				Var0.f_6 = 4.75f;
			}
			break;
		case 9:
			if (iParam1 == 0)
			{
				Var0 = { 3.71509f, 37.615387f, 70.53527f };
				Var0.f_3 = { 5.459632f, 42.26798f, 73.78261f };
				Var0.f_6 = 6.25f;
			}
			break;
		case 10:
			if (iParam1 == 0)
			{
				Var0 = { 9.232037f, 81.06382f, 77.444725f };
				Var0.f_3 = { 7.523234f, 76.364f, 80.44495f };
				Var0.f_6 = 6.25f;
			}
			break;
		case 11:
			if (iParam1 == 0)
			{
				Var0 = { -511.6273f, 107.804184f, 62.800556f };
				Var0.f_3 = { -510.49933f, 99.92493f, 65.80055f };
				Var0.f_6 = 8.75f;
			}
			break;
		case 12:
			if (iParam1 == 0)
			{
				Var0 = { -197.87733f, 85.269745f, 68.75653f };
				Var0.f_3 = { -198.49606f, 82.33672f, 72.51045f };
				Var0.f_6 = 3.75f;
			}
			break;
		case 13:
			if (iParam1 == 0)
			{
				Var0 = { -627.2931f, 169.6802f, 60.162457f };
				Var0.f_3 = { -624.2522f, 169.68837f, 63.412453f };
				Var0.f_6 = 3.5f;
			}
			break;
		case 14:
			if (iParam1 == 0)
			{
				Var0 = { -968.9308f, -1430.9891f, 6.768438f };
				Var0.f_3 = { -965.2498f, -1429.65f, 9.268437f };
				Var0.f_6 = 8.5f;
			}
			break;
		case 15:
			if (iParam1 == 0)
			{
				Var0 = { -831.43634f, -863.06824f, 19.712624f };
				Var0.f_3 = { -831.42957f, -865.9731f, 22.962624f };
				Var0.f_6 = 2.75f;
			}
			break;
		case 16:
			if (iParam1 == 0)
			{
				Var0 = { -763.95447f, -753.8076f, 26.875198f };
				Var0.f_3 = { -768.0023f, -753.8146f, 30.125198f };
				Var0.f_6 = 13.5f;
			}
			break;
		case 17:
			if (iParam1 == 0)
			{
				Var0 = { -40.38081f, -58.762543f, 63.06794f };
				Var0.f_3 = { -37.415157f, -59.78346f, 65.318085f };
				Var0.f_6 = 2.25f;
			}
			break;
		case 18:
			if (iParam1 == 0)
			{
				Var0 = { -200.24976f, 186.88927f, 79.51667f };
				Var0.f_3 = { -190.49205f, 186.96484f, 87.24945f };
				Var0.f_6 = 5.5f;
			}
			break;
		case 19:
			if (iParam1 == 0)
			{
				Var0 = { -812.0079f, -980.21423f, 13.025441f };
				Var0.f_3 = { -809.1713f, -978.2696f, 16.227818f };
				Var0.f_6 = 3.25f;
			}
			break;
		case 20:
			if (iParam1 == 0)
			{
				Var0 = { -662.4572f, -854.6315f, 23.273163f };
				Var0.f_3 = { -662.5194f, -858.4444f, 26.273163f };
				Var0.f_6 = 1.75f;
			}
			break;
		case 21:
			if (iParam1 == 0)
			{
				Var0 = { -1531.6609f, -325.88638f, 46.920044f };
				Var0.f_3 = { -1528.7633f, -328.8114f, 50.670044f };
				Var0.f_6 = 9.5f;
			}
			break;
		case 22:
			if (iParam1 == 0)
			{
				Var0 = { -1564.8085f, -405.96255f, 41.388157f };
				Var0.f_3 = { -1567.7528f, -403.51105f, 44.388157f };
				Var0.f_6 = 5f;
			}
			break;
		case 23:
			if (iParam1 == 0)
			{
				Var0 = { -1605.7943f, -432.94583f, 39.42203f };
				Var0.f_3 = { -1601.6578f, -436.41965f, 41.92203f };
				Var0.f_6 = 8.75f;
			}
			else if (iParam1 == 1)
			{
				Var0 = { -1579.3342f, -458.9346f, 36.212383f };
				Var0.f_3 = { -1603.4231f, -438.7501f, 40.46665f };
				Var0.f_6 = 14.5f;
			}
			break;
	}
	return Var0;
}

void func_64(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x21412A
{
	switch (iParam0)
	{
		case 72:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 248.3876f, -1804.608f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 1:
							*uParam3 = { 245.8115f, -1806.016f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 2:
							*uParam3 = { 247.3799f, -1806.607f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 3:
							*uParam3 = { 246.0137f, -1808.251f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 4:
							*uParam3 = { 244.0453f, -1806.36f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 127.7955f;
							break;
						case 5:
							*uParam3 = { 243.6538f, -1808.915f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 6:
							*uParam3 = { 255.106f, -1799.4f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 7:
							*uParam3 = { 252.8464f, -1799.4019f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 8:
							*uParam3 = { 254.2191f, -1801.667f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 9:
							*uParam3 = { 252.0353f, -1801.4738f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 10:
							*uParam3 = { 245.0722f, -1804.656f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 109.7955f;
							break;
						case 11:
							*uParam3 = { 250.5898f, -1798.918f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 163.5455f;
							break;
						case 12:
							*uParam3 = { 243.528f, -1804.161f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 106.5455f;
							break;
						case 13:
							*uParam3 = { 238.995f, -1805.772f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 60.5455f;
							break;
						case 14:
							*uParam3 = { 240.4495f, -1804.641f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 53.5455f;
							break;
						case 15:
							*uParam3 = { 237.8052f, -1803.795f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 51.5455f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 256.7626f, -1800.183f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 52.7955f;
							break;
						case 1:
							*uParam3 = { 256.1365f, -1798.491f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 52.5455f;
							break;
						case 2:
							*uParam3 = { 254.6549f, -1800.032f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 57.5455f;
							break;
						case 3:
							*uParam3 = { 252.0887f, -1801.376f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 4:
							*uParam3 = { 254.5203f, -1801.86f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 127.7955f;
							break;
						case 5:
							*uParam3 = { 253.2288f, -1802.99f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 6:
							*uParam3 = { 248.006f, -1805.35f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 7:
							*uParam3 = { 247.8714f, -1807.477f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 8:
							*uParam3 = { 245.2941f, -1806.617f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 9:
							*uParam3 = { 245.2853f, -1808.974f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.2955f;
							break;
						case 10:
							*uParam3 = { 245.6222f, -1804.656f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 109.7955f;
							break;
						case 11:
							*uParam3 = { 243.1648f, -1806.768f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.2955f;
							break;
						case 12:
							*uParam3 = { 243.528f, -1804.161f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.7955f;
							break;
						case 13:
							*uParam3 = { 238.995f, -1805.772f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 52.2955f;
							break;
						case 14:
							*uParam3 = { 240.4495f, -1804.641f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 53.5455f;
							break;
						case 15:
							*uParam3 = { 237.8052f, -1803.795f, 26.1131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 51.5455f;
							break;
					}
					break;
			}
			break;
		case 73:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1469.405f, -921.986f, 9.0362f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.3606f;
							break;
						case 1:
							*uParam3 = { -1468.631f, -923.8187f, 9.0412f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 239.1106f;
							break;
						case 2:
							*uParam3 = { -1467.462f, -921.3599f, 9.0322f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 253.3606f;
							break;
						case 3:
							*uParam3 = { -1466.703f, -923.9033f, 9.0359f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.6106f;
							break;
						case 4:
							*uParam3 = { -1465.272f, -921.1121f, 9.0428f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 239.1106f;
							break;
						case 5:
							*uParam3 = { -1464.413f, -923.3676f, 9.0336f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 243.6106f;
							break;
						case 6:
							*uParam3 = { -1464.886f, -925.5522f, 9.0309f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 249.6106f;
							break;
						case 7:
							*uParam3 = { -1463.196f, -921.8294f, 9.0412f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.6106f;
							break;
						case 8:
							*uParam3 = { -1462.773f, -924.9448f, 9.0427f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 236.1106f;
							break;
						case 9:
							*uParam3 = { -1461.807f, -923.2014f, 9.0389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 236.8606f;
							break;
						case 10:
							*uParam3 = { -1460.52f, -925.1838f, 9.0283f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 232.8606f;
							break;
						case 11:
							*uParam3 = { -1459.302f, -927.8456f, 9.0345f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 231.6106f;
							break;
						case 12:
							*uParam3 = { -1458.064f, -924.9882f, 9.0478f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 234.8606f;
							break;
						case 13:
							*uParam3 = { -1457.097f, -927.8991f, 9.031f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.6106f;
							break;
						case 14:
							*uParam3 = { -1455.243f, -926.5684f, 9.0307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 218.6106f;
							break;
						case 15:
							*uParam3 = { -1453.787f, -929.0729f, 9.0276f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 236.8606f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1468.786f, -927.9666f, 9.0995f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 317.9953f;
							break;
						case 1:
							*uParam3 = { -1466.987f, -928.9243f, 9.0903f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 318.7453f;
							break;
						case 2:
							*uParam3 = { -1470.344f, -925.6655f, 9.1476f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.9953f;
							break;
						case 3:
							*uParam3 = { -1466.385f, -926.6589f, 9.1086f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 319.7453f;
							break;
						case 4:
							*uParam3 = { -1468.103f, -925.0677f, 9.0688f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 321.7453f;
							break;
						case 5:
							*uParam3 = { -1463.945f, -925.8981f, 9.1219f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 284.7453f;
							break;
						case 6:
							*uParam3 = { -1465.743f, -924.2328f, 9.1402f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.2453f;
							break;
						case 7:
							*uParam3 = { -1467.677f, -923.085f, 9.078f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 351.9953f;
							break;
						case 8:
							*uParam3 = { -1462.055f, -926.3004f, 9.0596f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 248.9953f;
							break;
						case 9:
							*uParam3 = { -1462.138f, -924.1319f, 9.0812f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 238.2453f;
							break;
						case 10:
							*uParam3 = { -1459.926f, -925.9143f, 9.1626f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 233.7453f;
							break;
						case 11:
							*uParam3 = { -1466.259f, -921.2512f, 9.1178f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.2453f;
							break;
						case 12:
							*uParam3 = { -1459.271f, -928.1438f, 9.0393f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.9953f;
							break;
						case 13:
							*uParam3 = { -1457.429f, -926.0047f, 9.1443f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 236.4953f;
							break;
						case 14:
							*uParam3 = { -1456.524f, -928.774f, 9.1809f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 236.4953f;
							break;
						case 15:
							*uParam3 = { -1453.868f, -929.1035f, 9.0577f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 232.4953f;
							break;
					}
					break;
			}
			break;
		case 74:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 32.5131f, -1030.324f, 28.4228f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 103.105f;
							break;
						case 1:
							*uParam3 = { 31.287f, -1028.882f, 28.4355f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 112.355f;
							break;
						case 2:
							*uParam3 = { 31.6554f, -1032.148f, 28.376f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 115.355f;
							break;
						case 3:
							*uParam3 = { 30.5142f, -1030.642f, 28.4203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.605f;
							break;
						case 4:
							*uParam3 = { 31.3208f, -1034.301f, 28.4696f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 154.605f;
							break;
						case 5:
							*uParam3 = { 29.6793f, -1033.431f, 28.4905f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 150.605f;
							break;
						case 6:
							*uParam3 = { 29.0316f, -1031.791f, 28.379f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 150.105f;
							break;
						case 7:
							*uParam3 = { 30.5969f, -1036.118f, 28.4592f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 139.605f;
							break;
						case 8:
							*uParam3 = { 28.9447f, -1035.633f, 28.4813f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 139.355f;
							break;
						case 9:
							*uParam3 = { 27.8859f, -1033.715f, 28.4482f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 131.605f;
							break;
						case 10:
							*uParam3 = { 26.9977f, -1037.122f, 28.3378f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.855f;
							break;
						case 11:
							*uParam3 = { 28.7404f, -1038.234f, 28.4227f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.105f;
							break;
						case 12:
							*uParam3 = { 26.6785f, -1039.427f, 28.4658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 79.105f;
							break;
						case 13:
							*uParam3 = { 24.5705f, -1037.663f, 28.3899f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 72.105f;
							break;
						case 14:
							*uParam3 = { 23.375f, -1038.907f, 28.3463f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.355f;
							break;
						case 15:
							*uParam3 = { 22.6057f, -1036.511f, 28.4549f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 69.605f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 38.5645f, -1021.964f, 28.4797f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.5602f;
							break;
						case 1:
							*uParam3 = { 37.6384f, -1023.021f, 28.4826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 75.5602f;
							break;
						case 2:
							*uParam3 = { 38.5818f, -1020.462f, 28.4789f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 62.0602f;
							break;
						case 3:
							*uParam3 = { 37.7656f, -1018.281f, 28.4768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 31.3102f;
							break;
						case 4:
							*uParam3 = { 35.0472f, -1024.39f, 28.4804f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.0602f;
							break;
						case 5:
							*uParam3 = { 35.6557f, -1022.6451f, 28.4818f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.5602f;
							break;
						case 6:
							*uParam3 = { 36.508f, -1019.83f, 28.476f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.8102f;
							break;
						case 7:
							*uParam3 = { 37.4733f, -1015.757f, 28.4775f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 17.3102f;
							break;
						case 8:
							*uParam3 = { 35.4211f, -1014.572f, 28.4833f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.25f;
							break;
						case 9:
							*uParam3 = { 34.2623f, -1013.554f, 28.4915f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.3102f;
							break;
						case 10:
							*uParam3 = { 32.7242f, -1025.311f, 28.4781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.0602f;
							break;
						case 11:
							*uParam3 = { 30.9668f, -1026.498f, 28.4739f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 158.8102f;
							break;
						case 12:
							*uParam3 = { 32.4799f, -1028.316f, 28.4812f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.8102f;
							break;
						case 13:
							*uParam3 = { 35.3969f, -1011.527f, 28.4666f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 346f;
							break;
						case 14:
							*uParam3 = { 35.7264f, -1008.571f, 28.4721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.25f;
							break;
						case 15:
							*uParam3 = { 30.5071f, -1028.9f, 28.4754f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 148.3102f;
							break;
					}
					break;
			}
			break;
		case 75:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 44.1834f, 2786.177f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 144.2576f;
							break;
						case 1:
							*uParam3 = { 44.8323f, 2784.269f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 137.5076f;
							break;
						case 2:
							*uParam3 = { 41.9007f, 2786.353f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 146.7576f;
							break;
						case 3:
							*uParam3 = { 43.1345f, 2783.659f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 143.2576f;
							break;
						case 4:
							*uParam3 = { 41.3911f, 2784.001f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.0076f;
							break;
						case 5:
							*uParam3 = { 44.4496f, 2782.095f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 137.5076f;
							break;
						case 6:
							*uParam3 = { 42.6768f, 2781.336f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.5076f;
							break;
						case 7:
							*uParam3 = { 39.5672f, 2785.058f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 118.2576f;
							break;
						case 8:
							*uParam3 = { 39.4899f, 2782.893f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.5076f;
							break;
						case 9:
							*uParam3 = { 37.4062f, 2784.686f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.5076f;
							break;
						case 10:
							*uParam3 = { 40.668f, 2781.329f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 138.0076f;
							break;
						case 11:
							*uParam3 = { 37.0606f, 2780.867f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 133.5076f;
							break;
						case 12:
							*uParam3 = { 47.4238f, 2787.4495f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 146.7576f;
							break;
						case 13:
							*uParam3 = { 36.0158f, 2782.364f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 126.2576f;
							break;
						case 14:
							*uParam3 = { 38.4703f, 2779.37f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 125.0076f;
							break;
						case 15:
							*uParam3 = { 35.051f, 2784.89f, 56.8781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 134.5076f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 56.8445f, 2781.035f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 1:
							*uParam3 = { 58.7934f, 2779.878f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 2:
							*uParam3 = { 55.7868f, 2779.586f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 3:
							*uParam3 = { 60.9206f, 2779.018f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 4:
							*uParam3 = { 59.5272f, 2777.384f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 5:
							*uParam3 = { 57.2857f, 2778.004f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 186.5215f;
							break;
						case 6:
							*uParam3 = { 58.338f, 2775.519f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 185.5215f;
							break;
						case 7:
							*uParam3 = { 61.9783f, 2776.817f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 165.0215f;
							break;
						case 8:
							*uParam3 = { 60.7761f, 2774.8516f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 178.0215f;
							break;
						case 9:
							*uParam3 = { 59.2923f, 2772.795f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 194.5215f;
							break;
						case 10:
							*uParam3 = { 57.1041f, 2772.4626f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 211.5215f;
							break;
						case 11:
							*uParam3 = { 58.8217f, 2770.726f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 199.0215f;
							break;
						case 12:
							*uParam3 = { 61.2849f, 2769.933f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 178.0215f;
							break;
						case 13:
							*uParam3 = { 60.1769f, 2767.972f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 181.0215f;
							break;
						case 14:
							*uParam3 = { 57.7064f, 2768.753f, 56.8783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 201.2715f;
							break;
						case 15:
							*uParam3 = { 62.2871f, 2767.098f, 56.884f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 167.0215f;
							break;
					}
					break;
			}
			break;
		case 76:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -338.833f, 6069.191f, 30.3673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.1173f;
							break;
						case 1:
							*uParam3 = { -337.1591f, 6069.158f, 30.3496f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.1173f;
							break;
						case 2:
							*uParam3 = { -338.7657f, 6070.717f, 30.3626f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.1173f;
							break;
						case 3:
							*uParam3 = { -329.9819f, 6066.548f, 30.3801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 242.3673f;
							break;
						case 4:
							*uParam3 = { -337.3503f, 6070.689f, 30.3548f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.1173f;
							break;
						case 5:
							*uParam3 = { -339.0918f, 6072.384f, 30.3626f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.1173f;
							break;
						case 6:
							*uParam3 = { -334.5646f, 6067.2f, 30.4153f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.6173f;
							break;
						case 7:
							*uParam3 = { -333.4742f, 6068.897f, 30.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 239.8673f;
							break;
						case 8:
							*uParam3 = { -332.0515f, 6067.057f, 30.3235f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 246.8673f;
							break;
						case 9:
							*uParam3 = { -341.5853f, 6073.3f, 30.3184f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.25f;
							break;
						case 10:
							*uParam3 = { -339.7484f, 6073.993f, 30.4306f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 39.1173f;
							break;
						case 11:
							*uParam3 = { -342.7808f, 6071.906f, 30.3999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 51f;
							break;
						case 12:
							*uParam3 = { -341.9427f, 6075.288f, 30.3286f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 39.96f;
							break;
						case 13:
							*uParam3 = { -343.7507f, 6074.052f, 30.3754f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 51.48f;
							break;
						case 14:
							*uParam3 = { -344.6961f, 6076.608f, 30.4859f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.75f;
							break;
						case 15:
							*uParam3 = { -345.5154f, 6075.254f, 30.3766f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -356.1217f, 6068.353f, 30.4986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.9638f;
							break;
						case 1:
							*uParam3 = { -355.3478f, 6070.67f, 30.4985f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 39.7138f;
							break;
						case 2:
							*uParam3 = { -358.6794f, 6067.679f, 30.4989f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 45.2138f;
							break;
						case 3:
							*uParam3 = { -357.1956f, 6070.586f, 30.4987f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 44.7138f;
							break;
						case 4:
							*uParam3 = { -360.614f, 6068.602f, 30.4984f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 45.7138f;
							break;
						case 5:
							*uParam3 = { -355.6305f, 6072.696f, 30.4988f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 46.2138f;
							break;
						case 6:
							*uParam3 = { -359.9533f, 6070.712f, 30.499f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 40.9638f;
							break;
						case 7:
							*uParam3 = { -358.1879f, 6072.81f, 30.4985f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 46.4638f;
							break;
						case 8:
							*uParam3 = { -354.0402f, 6074.969f, 30.4983f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 313.2f;
							break;
						case 9:
							*uParam3 = { -352.999f, 6076.863f, 30.4984f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 296.75f;
							break;
						case 10:
							*uParam3 = { -353.9871f, 6078.805f, 30.4992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 275.7138f;
							break;
						case 11:
							*uParam3 = { -356.3445f, 6078.218f, 30.4986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 288f;
							break;
						case 12:
							*uParam3 = { -365.3814f, 6070.326f, 30.4986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 98.2138f;
							break;
						case 13:
							*uParam3 = { -365.9144f, 6072.64f, 30.499f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.7138f;
							break;
						case 14:
							*uParam3 = { -368.4098f, 6071.346f, 30.4994f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.7138f;
							break;
						case 15:
							*uParam3 = { -371.0791f, 6071.041f, 30.4978f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.2138f;
							break;
					}
					break;
			}
			break;
		case 77:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 1735.407f, 3715.0618f, 33.1157f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 1:
							*uParam3 = { 1733.506f, 3715.754f, 33.1124f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 2:
							*uParam3 = { 1735.999f, 3716.763f, 33.1337f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 3:
							*uParam3 = { 1738.083f, 3717.969f, 33.1142f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 4:
							*uParam3 = { 1731.34f, 3715.9856f, 33.0938f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 5:
							*uParam3 = { 1736.298f, 3718.855f, 33.1282f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 6:
							*uParam3 = { 1732.675f, 3717.671f, 33.1322f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 7:
							*uParam3 = { 1730.166f, 3718.818f, 33.0965f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 8:
							*uParam3 = { 1733.064f, 3720.453f, 33.0993f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 9:
							*uParam3 = { 1736.305f, 3721.346f, 33.1183f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 10:
							*uParam3 = { 1730.817f, 3721.289f, 33.1452f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 11:
							*uParam3 = { 1734.059f, 3723.027f, 33.1128f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 12:
							*uParam3 = { 1726.647f, 3720.434f, 33.0811f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.9648f;
							break;
						case 13:
							*uParam3 = { 1727.964f, 3723.499f, 33.1179f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 27.4648f;
							break;
						case 14:
							*uParam3 = { 1731.519f, 3724.629f, 33.1497f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 15:
							*uParam3 = { 1724.125f, 3723.95f, 33.0773f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 31.9648f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 1722.857f, 3710.937f, 33.1157f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 1:
							*uParam3 = { 1724.056f, 3713.404f, 33.1124f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 2:
							*uParam3 = { 1727.574f, 3712.038f, 33.1337f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.4648f;
							break;
						case 3:
							*uParam3 = { 1720.733f, 3712.769f, 33.1142f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 4:
							*uParam3 = { 1721.99f, 3714.986f, 33.0938f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 5:
							*uParam3 = { 1718.973f, 3715.33f, 33.1282f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 6:
							*uParam3 = { 1722.475f, 3717.671f, 33.1322f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 7:
							*uParam3 = { 1726.316f, 3715.418f, 34.1465f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 8:
							*uParam3 = { 1725.089f, 3718.578f, 33.0993f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 9:
							*uParam3 = { 1719.955f, 3718.746f, 33.1183f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.9648f;
							break;
						case 10:
							*uParam3 = { 1717.542f, 3718.614f, 33.1452f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 11:
							*uParam3 = { 1722.859f, 3720.877f, 33.1128f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.2148f;
							break;
						case 12:
							*uParam3 = { 1727.372f, 3720.434f, 33.0811f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 1f;
							break;
						case 13:
							*uParam3 = { 1725.314f, 3721.974f, 33.1179f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.75f;
							break;
						case 14:
							*uParam3 = { 1728.194f, 3717.704f, 33.1497f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 351f;
							break;
						case 15:
							*uParam3 = { 1728.2f, 3722.725f, 33.0773f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 357.75f;
							break;
					}
					break;
			}
			break;
		case 78:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 939.3288f, -1454.651f, 30.2007f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 1:
							*uParam3 = { 941.4027f, -1453.659f, 30.2581f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 2:
							*uParam3 = { 936.7712f, -1453.575f, 30.3012f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 3:
							*uParam3 = { 934.88f, -1452.719f, 30.1433f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 4:
							*uParam3 = { 942.5115f, -1455.277f, 30.1287f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 5:
							*uParam3 = { 943.945f, -1454.358f, 30.3454f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 6:
							*uParam3 = { 943.0223f, -1453.492f, 30.2438f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 7:
							*uParam3 = { 935.5626f, -1455.045f, 30.1117f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 8:
							*uParam3 = { 934.1104f, -1453.535f, 30.1576f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 9:
							*uParam3 = { 945.6266f, -1455.192f, 30.2953f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 10:
							*uParam3 = { 947.4135f, -1455.599f, 30.3955f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 11:
							*uParam3 = { 948.6311f, -1454.4608f, 30.0986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 333.5f;
							break;
						case 12:
							*uParam3 = { 950.8692f, -1454.153f, 30.1257f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 273.3453f;
							break;
						case 13:
							*uParam3 = { 949.6862f, -1452.164f, 30.3849f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 269.5953f;
							break;
						case 14:
							*uParam3 = { 953.0157f, -1453.234f, 30.2787f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 276.25f;
							break;
						case 15:
							*uParam3 = { 955.4964f, -1452.188f, 30.0918f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 279.0953f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 943.5038f, -1456.001f, 30.2007f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 1:
							*uParam3 = { 941.4027f, -1453.659f, 30.2581f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 2:
							*uParam3 = { 935.7462f, -1454.575f, 30.3012f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 78.5953f;
							break;
						case 3:
							*uParam3 = { 933.83f, -1453.494f, 30.1433f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 80.8453f;
							break;
						case 4:
							*uParam3 = { 941.8115f, -1455.277f, 30.1287f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 5:
							*uParam3 = { 943.945f, -1454.358f, 30.3454f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 6:
							*uParam3 = { 943.0223f, -1453.492f, 30.2438f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 7:
							*uParam3 = { 937.6626f, -1454.27f, 30.1117f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 75.3453f;
							break;
						case 8:
							*uParam3 = { 936.2104f, -1452.46f, 30.1576f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 88.8453f;
							break;
						case 9:
							*uParam3 = { 945.6266f, -1455.192f, 30.2953f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.3453f;
							break;
						case 10:
							*uParam3 = { 948.4135f, -1453.849f, 30.3955f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 284.0953f;
							break;
						case 11:
							*uParam3 = { 947.0561f, -1453.611f, 30.0986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 360f;
							break;
						case 12:
							*uParam3 = { 950.8692f, -1454.153f, 30.1257f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 273.3453f;
							break;
						case 13:
							*uParam3 = { 949.6862f, -1452.164f, 30.3849f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 269.5953f;
							break;
						case 14:
							*uParam3 = { 953.0157f, -1453.234f, 30.2787f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 276.25f;
							break;
						case 15:
							*uParam3 = { 955.4964f, -1452.188f, 30.0918f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 279.0953f;
							break;
					}
					break;
			}
			break;
		case 79:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 189.9778f, 306.3599f, 104.4328f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 179.4526f;
							break;
						case 1:
							*uParam3 = { 191.7016f, 305.3522f, 104.4457f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 178.9526f;
							break;
						case 2:
							*uParam3 = { 188.2701f, 305.236f, 104.451f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 179.7026f;
							break;
						case 3:
							*uParam3 = { 189.5289f, 303.8426f, 104.4199f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 179.2026f;
							break;
						case 4:
							*uParam3 = { 193.5104f, 303.8588f, 104.4147f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 191.4526f;
							break;
						case 5:
							*uParam3 = { 192.3689f, 302.5033f, 104.4638f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 185.7026f;
							break;
						case 6:
							*uParam3 = { 190.6212f, 302.7187f, 104.4381f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 181.9526f;
							break;
						case 7:
							*uParam3 = { 188.0366f, 302.6914f, 104.4018f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 176.7026f;
							break;
						case 8:
							*uParam3 = { 192.7343f, 298.6011f, 104.4275f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 196.7026f;
							break;
						case 9:
							*uParam3 = { 192.0005f, 296.5695f, 104.4585f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 213.9526f;
							break;
						case 10:
							*uParam3 = { 194.4124f, 297.0371f, 104.4691f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 224.2026f;
							break;
						case 11:
							*uParam3 = { 193.83f, 295.1003f, 104.4071f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 240.4526f;
							break;
						case 12:
							*uParam3 = { 186.1931f, 301.0076f, 104.3965f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 102.9526f;
							break;
						case 13:
							*uParam3 = { 184.2351f, 301.4218f, 104.4948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 110.4526f;
							break;
						case 14:
							*uParam3 = { 184.6647f, 298.8775f, 104.4434f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 105.9526f;
							break;
						case 15:
							*uParam3 = { 182.3704f, 299.423f, 104.3932f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.4526f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 178.8955f, 305.4025f, 104.3879f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 185.9646f;
							break;
						case 1:
							*uParam3 = { 180.8444f, 304.5198f, 104.3727f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 197.2146f;
							break;
						case 2:
							*uParam3 = { 177.4629f, 304.0286f, 104.3722f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 171.9646f;
							break;
						case 3:
							*uParam3 = { 179.1717f, 302.9352f, 104.3839f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 184.2146f;
							break;
						case 4:
							*uParam3 = { 182.9032f, 303.8014f, 104.3733f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 232.9646f;
							break;
						case 5:
							*uParam3 = { 181.1117f, 302.2459f, 104.3721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 206.9646f;
							break;
						case 6:
							*uParam3 = { 184.014f, 302.1363f, 104.3722f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 219.4646f;
							break;
						case 7:
							*uParam3 = { 184.1794f, 300.059f, 104.3734f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.2146f;
							break;
						case 8:
							*uParam3 = { 186.7771f, 301.5437f, 104.3732f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 241.2146f;
							break;
						case 9:
							*uParam3 = { 174.9433f, 302.0621f, 104.3726f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 109.4646f;
							break;
						case 10:
							*uParam3 = { 174.8802f, 300.1547f, 104.3716f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 104.7146f;
							break;
						case 11:
							*uParam3 = { 172.6228f, 301.7679f, 104.3723f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 103.2146f;
							break;
						case 12:
							*uParam3 = { 171.9609f, 299.6252f, 104.3739f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.2146f;
							break;
						case 13:
							*uParam3 = { 169.8779f, 300.3894f, 104.3714f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 103.9646f;
							break;
						case 14:
							*uParam3 = { 186.4824f, 298.9451f, 104.371f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 227.2146f;
							break;
						case 15:
							*uParam3 = { 189.1632f, 299.6406f, 104.3736f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 238.4646f;
							break;
					}
					break;
			}
			break;
		case 80:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -23.2594f, -196.145f, 51.3669f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 167.0118f;
							break;
						case 1:
							*uParam3 = { -21.5355f, -197.3777f, 51.3683f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 167.0118f;
							break;
						case 2:
							*uParam3 = { -24.9921f, -197.0688f, 51.3665f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 162.2618f;
							break;
						case 3:
							*uParam3 = { -23.1583f, -198.3623f, 51.3655f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.7618f;
							break;
						case 4:
							*uParam3 = { -24.8267f, -198.2711f, 51.3648f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.0118f;
							break;
						case 5:
							*uParam3 = { -20.0932f, -198.7265f, 51.3658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.0118f;
							break;
						case 6:
							*uParam3 = { -21.5409f, -199.8362f, 51.3673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 181.7618f;
							break;
						case 7:
							*uParam3 = { -24.1506f, -200.0884f, 51.3634f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.5118f;
							break;
						case 8:
							*uParam3 = { -19.0278f, -200.7288f, 51.3662f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 213.2618f;
							break;
						case 9:
							*uParam3 = { -18.7866f, -202.8103f, 51.3697f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 232.5118f;
							break;
						case 10:
							*uParam3 = { -16.4748f, -203.6677f, 51.36f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 244.7618f;
							break;
						case 11:
							*uParam3 = { -26.8071f, -201.1796f, 51.364f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.5118f;
							break;
						case 12:
							*uParam3 = { -27.944f, -196.6972f, 51.3642f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 94.7618f;
							break;
						case 13:
							*uParam3 = { -27.627f, -198.8331f, 51.3585f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 99.5118f;
							break;
						case 14:
							*uParam3 = { -30.0975f, -197.8024f, 51.3615f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 81.2618f;
							break;
						case 15:
							*uParam3 = { -29.5418f, -199.6819f, 51.3616f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 81.2618f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -23.2594f, -196.145f, 51.3669f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 167.0118f;
							break;
						case 1:
							*uParam3 = { -21.5355f, -197.3777f, 51.3683f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 167.0118f;
							break;
						case 2:
							*uParam3 = { -24.9921f, -197.0688f, 51.3665f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 162.2618f;
							break;
						case 3:
							*uParam3 = { -23.1583f, -198.3623f, 51.3655f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.7618f;
							break;
						case 4:
							*uParam3 = { -24.8267f, -198.2711f, 51.3648f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.0118f;
							break;
						case 5:
							*uParam3 = { -20.0932f, -198.7265f, 51.3658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.0118f;
							break;
						case 6:
							*uParam3 = { -21.5409f, -199.8362f, 51.3673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 181.7618f;
							break;
						case 7:
							*uParam3 = { -24.1506f, -200.0884f, 51.3634f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.5118f;
							break;
						case 8:
							*uParam3 = { -19.0278f, -200.7288f, 51.3662f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 213.2618f;
							break;
						case 9:
							*uParam3 = { -18.7866f, -202.8103f, 51.3697f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 232.5118f;
							break;
						case 10:
							*uParam3 = { -16.4748f, -203.6677f, 51.36f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 244.7618f;
							break;
						case 11:
							*uParam3 = { -26.8071f, -201.1796f, 51.364f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.5118f;
							break;
						case 12:
							*uParam3 = { -27.944f, -196.6972f, 51.3642f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 94.7618f;
							break;
						case 13:
							*uParam3 = { -27.627f, -198.8331f, 51.3585f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 99.5118f;
							break;
						case 14:
							*uParam3 = { -30.0975f, -197.8024f, 51.3615f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 81.2618f;
							break;
						case 15:
							*uParam3 = { -29.5418f, -199.6819f, 51.3616f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 81.2618f;
							break;
					}
					break;
			}
			break;
		case 81:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 2471.7131f, 4115.273f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.2864f;
							break;
						case 1:
							*uParam3 = { 2473.687f, 4115.865f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.2864f;
							break;
						case 2:
							*uParam3 = { 2472.506f, 4118.299f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.2864f;
							break;
						case 3:
							*uParam3 = { 2473.989f, 4117.581f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.7864f;
							break;
						case 4:
							*uParam3 = { 2474.746f, 4119.022f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.2864f;
							break;
						case 5:
							*uParam3 = { 2475.879f, 4116.541f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 276.0364f;
							break;
						case 6:
							*uParam3 = { 2476.406f, 4120.507f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 279.0364f;
							break;
						case 7:
							*uParam3 = { 2477.747f, 4118.805f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.0364f;
							break;
						case 8:
							*uParam3 = { 2479.095f, 4116.514f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 287.7864f;
							break;
						case 9:
							*uParam3 = { 2480.086f, 4120.383f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 275.5364f;
							break;
						case 10:
							*uParam3 = { 2482.523f, 4118.175f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 257.2864f;
							break;
						case 11:
							*uParam3 = { 2484.09f, 4116.288f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 259.0364f;
							break;
						case 12:
							*uParam3 = { 2484.979f, 4119.746f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.5364f;
							break;
						case 13:
							*uParam3 = { 2486.445f, 4117.81f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 255.7864f;
							break;
						case 14:
							*uParam3 = { 2486.625f, 4114.365f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 254.5364f;
							break;
						case 15:
							*uParam3 = { 2489.181f, 4119.311f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.7864f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 2466.01f, 4104.121f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 346f;
							break;
						case 1:
							*uParam3 = { 2464.934f, 4105.563f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 340.4382f;
							break;
						case 2:
							*uParam3 = { 2467.878f, 4105.522f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 343.25f;
							break;
						case 3:
							*uParam3 = { 2466.511f, 4106.978f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 343.75f;
							break;
						case 4:
							*uParam3 = { 2468.418f, 4108.219f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 344.9382f;
							break;
						case 5:
							*uParam3 = { 2466.351f, 4108.839f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.1882f;
							break;
						case 6:
							*uParam3 = { 2468.828f, 4113.429f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 318.75f;
							break;
						case 7:
							*uParam3 = { 2470.994f, 4114.727f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 294.25f;
							break;
						case 8:
							*uParam3 = { 2472.992f, 4116.387f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 293f;
							break;
						case 9:
							*uParam3 = { 2475.308f, 4115.73f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 280f;
							break;
						case 10:
							*uParam3 = { 2475.595f, 4118.773f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 289.9382f;
							break;
						case 11:
							*uParam3 = { 2477.512f, 4117.861f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 289.25f;
							break;
						case 12:
							*uParam3 = { 2473.05f, 4119.293f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 266.9382f;
							break;
						case 13:
							*uParam3 = { 2477.542f, 4115.757f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 297.1882f;
							break;
						case 14:
							*uParam3 = { 2479.672f, 4117.663f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 286.4382f;
							break;
						case 15:
							*uParam3 = { 2479.828f, 4120.384f, 37.0647f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 290.9382f;
							break;
					}
					break;
			}
			break;
		case 82:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -33.8389f, 6416.275f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 1:
							*uParam3 = { -31.4401f, 6416.2925f, 30.4525f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 2:
							*uParam3 = { -34.0216f, 6414.201f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 225.2329f;
							break;
						case 3:
							*uParam3 = { -31.9878f, 6414.308f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 4:
							*uParam3 = { -29.3563f, 6416.374f, 30.4305f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 222.4829f;
							break;
						case 5:
							*uParam3 = { -33.7727f, 6412.369f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 230.7329f;
							break;
						case 6:
							*uParam3 = { -35.8205f, 6412.684f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 7:
							*uParam3 = { -30.0801f, 6414.582f, 30.4564f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 229.2329f;
							break;
						case 8:
							*uParam3 = { -31.7574f, 6412.316f, 30.4636f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 9:
							*uParam3 = { -25.5912f, 6411.735f, 30.4289f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 10:
							*uParam3 = { -23.6293f, 6411.453f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 11:
							*uParam3 = { -25.0367f, 6409.565f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 12:
							*uParam3 = { -28.8486f, 6407.648f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 229.7329f;
							break;
						case 13:
							*uParam3 = { -30.7316f, 6406.812f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 14:
							*uParam3 = { -31.577f, 6408.818f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 15:
							*uParam3 = { -27.6213f, 6409.589f, 30.4738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -33.8389f, 6416.275f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 1:
							*uParam3 = { -31.4401f, 6416.2925f, 30.4525f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 2:
							*uParam3 = { -34.0216f, 6414.201f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 225.2329f;
							break;
						case 3:
							*uParam3 = { -31.9878f, 6414.308f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 4:
							*uParam3 = { -29.3563f, 6416.374f, 30.4305f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 222.4829f;
							break;
						case 5:
							*uParam3 = { -33.7727f, 6412.369f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 230.7329f;
							break;
						case 6:
							*uParam3 = { -35.8205f, 6412.684f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 7:
							*uParam3 = { -30.0801f, 6414.582f, 30.4564f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 229.2329f;
							break;
						case 8:
							*uParam3 = { -31.7574f, 6412.316f, 30.4636f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 9:
							*uParam3 = { -25.5912f, 6411.735f, 30.4289f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 10:
							*uParam3 = { -23.6293f, 6411.453f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 11:
							*uParam3 = { -25.0367f, 6409.565f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 12:
							*uParam3 = { -28.8486f, 6407.648f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 229.7329f;
							break;
						case 13:
							*uParam3 = { -30.7316f, 6406.812f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 14:
							*uParam3 = { -31.577f, 6408.818f, 30.4904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
						case 15:
							*uParam3 = { -27.6213f, 6409.589f, 30.4738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 226.7329f;
							break;
					}
					break;
			}
			break;
		case 83:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1133.69f, -1570.284f, 3.3234f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 216.071f;
							break;
						case 1:
							*uParam3 = { -1132.292f, -1569.0166f, 3.3681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 216.321f;
							break;
						case 2:
							*uParam3 = { -1130.773f, -1567.958f, 3.3536f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 215.071f;
							break;
						case 3:
							*uParam3 = { -1128.114f, -1566.201f, 3.1537f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 215.071f;
							break;
						case 4:
							*uParam3 = { -1127.808f, -1564.66f, 3.2932f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.571f;
							break;
						case 5:
							*uParam3 = { -1129.524f, -1563.79f, 3.3797f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 213.821f;
							break;
						case 6:
							*uParam3 = { -1129.447f, -1561.75f, 3.3089f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 213.571f;
							break;
						case 7:
							*uParam3 = { -1131.031f, -1561.777f, 3.2536f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 219.821f;
							break;
						case 8:
							*uParam3 = { -1131.034f, -1559.893f, 3.3378f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 215.571f;
							break;
						case 9:
							*uParam3 = { -1132.368f, -1560.149f, 3.393f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 221.821f;
							break;
						case 10:
							*uParam3 = { -1132.456f, -1557.932f, 3.3644f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 222.071f;
							break;
						case 11:
							*uParam3 = { -1123.488f, -1561.444f, 3.2597f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 300.071f;
							break;
						case 12:
							*uParam3 = { -1121.975f, -1560.661f, 3.2629f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 306.821f;
							break;
						case 13:
							*uParam3 = { -1120.908f, -1559.072f, 3.4021f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 309.071f;
							break;
						case 14:
							*uParam3 = { -1119.629f, -1559.091f, 3.2945f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 302.821f;
							break;
						case 15:
							*uParam3 = { -1118.398f, -1557.421f, 3.4039f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 305.071f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1133.82f, -1570.312f, 3.3721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 1:
							*uParam3 = { -1138.746f, -1572.07f, 3.3944f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 2:
							*uParam3 = { -1140.053f, -1572.686f, 3.3825f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 3:
							*uParam3 = { -1140.844f, -1573.98f, 3.3283f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 4:
							*uParam3 = { -1142.713f, -1574.438f, 3.3428f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 5:
							*uParam3 = { -1129.929f, -1563.394f, 3.3969f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 6:
							*uParam3 = { -1129.827f, -1562.228f, 3.3568f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 7:
							*uParam3 = { -1131.061f, -1562.481f, 3.2981f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 8:
							*uParam3 = { -1130.164f, -1560.971f, 3.3874f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 9:
							*uParam3 = { -1131.347f, -1561.128f, 3.4079f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 10:
							*uParam3 = { -1130.461f, -1559.485f, 3.3859f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 11:
							*uParam3 = { -1132.518f, -1560.547f, 3.2836f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 12:
							*uParam3 = { -1131.98f, -1559.464f, 3.3125f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 13:
							*uParam3 = { -1132.888f, -1559.375f, 3.425f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 14:
							*uParam3 = { -1131.908f, -1558.12f, 3.3415f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
						case 15:
							*uParam3 = { -1133.578f, -1557.849f, 3.2554f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.9958f;
							break;
					}
					break;
			}
			break;
	}
}

void func_65(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x218B76
{
	switch (iParam0)
	{
		case 68:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1582.9708f, -556.2847f, 33.9532f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 1:
							*uParam3 = { -1582.047f, -556.6674f, 33.9528f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 2:
							*uParam3 = { -1583.3535f, -557.2086f, 33.9533f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 3:
							*uParam3 = { -1583.8947f, -555.902f, 33.9529f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 4:
							*uParam3 = { -1582.5881f, -555.3608f, 33.953f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 5:
							*uParam3 = { -1582.4297f, -557.5912f, 33.953f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 6:
							*uParam3 = { -1584.2773f, -556.8259f, 33.9531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 7:
							*uParam3 = { -1583.512f, -554.9781f, 33.9568f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 8:
							*uParam3 = { -1581.6643f, -555.7435f, 33.9528f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 9:
							*uParam3 = { -1581.123f, -557.05f, 33.9528f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 10:
							*uParam3 = { -1583.7362f, -558.1324f, 33.9535f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 11:
							*uParam3 = { -1584.8186f, -555.5193f, 33.9666f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 12:
							*uParam3 = { -1582.2054f, -554.4369f, 33.9529f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 13:
							*uParam3 = { -1581.8884f, -558.8978f, 33.9528f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 14:
							*uParam3 = { -1585.584f, -557.3671f, 33.953f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
						case 15:
							*uParam3 = { -1584.0532f, -553.6716f, 34.0069f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.1349f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1562.3104f, -567.1251f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 1:
							*uParam3 = { -1561.3866f, -567.5078f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 2:
							*uParam3 = { -1562.6931f, -568.049f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 3:
							*uParam3 = { -1563.2343f, -566.7424f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 4:
							*uParam3 = { -1561.9277f, -566.2012f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 5:
							*uParam3 = { -1561.7693f, -568.4317f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 6:
							*uParam3 = { -1563.617f, -567.6663f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 7:
							*uParam3 = { -1562.8516f, -565.8185f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 8:
							*uParam3 = { -1561.0039f, -566.5839f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 9:
							*uParam3 = { -1560.4626f, -567.8905f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 10:
							*uParam3 = { -1563.0758f, -568.9729f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 11:
							*uParam3 = { -1564.1582f, -566.3597f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 12:
							*uParam3 = { -1561.545f, -565.2773f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 13:
							*uParam3 = { -1561.228f, -569.7382f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 14:
							*uParam3 = { -1564.9236f, -568.2075f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
						case 15:
							*uParam3 = { -1563.3928f, -564.512f, 113.4493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.5132f;
							break;
					}
					break;
				case 2:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1569.07f, -532.943f, 34.5266f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.427f;
							break;
						case 1:
							*uParam3 = { -1571.446f, -533.0757f, 34.5806f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 36.677f;
							break;
						case 2:
							*uParam3 = { -1568.528f, -530.9669f, 34.5536f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.177f;
							break;
						case 3:
							*uParam3 = { -1566.594f, -530.4353f, 34.4795f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 24.677f;
							break;
						case 4:
							*uParam3 = { -1572.462f, -534.7441f, 34.4969f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.427f;
							break;
						case 5:
							*uParam3 = { -1564.804f, -528.1746f, 34.6049f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 345.5f;
							break;
						case 6:
							*uParam3 = { -1562.201f, -527.3342f, 34.4885f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 321.5f;
							break;
						case 7:
							*uParam3 = { -1575.611f, -536.4864f, 34.4879f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 80.927f;
							break;
						case 8:
							*uParam3 = { -1563.138f, -525.6268f, 34.5543f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.25f;
							break;
						case 9:
							*uParam3 = { -1560.747f, -525.4584f, 34.6141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 314.177f;
							break;
						case 10:
							*uParam3 = { -1577.71f, -538.6658f, 34.5804f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 122.677f;
							break;
						case 11:
							*uParam3 = { -1577.893f, -536.0776f, 34.4735f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.427f;
							break;
						case 12:
							*uParam3 = { -1572.029f, -530.8452f, 34.4988f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.177f;
							break;
						case 13:
							*uParam3 = { -1568.337f, -528.5561f, 34.5891f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 24.677f;
							break;
						case 14:
							*uParam3 = { -1580.808f, -539.0254f, 34.4605f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 119.677f;
							break;
						case 15:
							*uParam3 = { -1556.027f, -522.0799f, 34.4907f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 305.75f;
							break;
					}
					break;
			}
			break;
		case 69:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1371.4149f, -503.9825f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 1:
							*uParam3 = { -1373.691f, -504.3652f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 2:
							*uParam3 = { -1371.7976f, -504.9064f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 3:
							*uParam3 = { -1372.3387f, -503.5998f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 4:
							*uParam3 = { -1374.632f, -503.0586f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 5:
							*uParam3 = { -1370.8738f, -505.289f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 6:
							*uParam3 = { -1372.7214f, -504.5237f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 7:
							*uParam3 = { -1371.956f, -502.6759f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 8:
							*uParam3 = { -1372.908f, -506.1413f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 9:
							*uParam3 = { -1371.367f, -506.7479f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 10:
							*uParam3 = { -1372.18f, -505.8302f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 11:
							*uParam3 = { -1373.2627f, -503.2171f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 12:
							*uParam3 = { -1373.75f, -502.1347f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 13:
							*uParam3 = { -1370.3325f, -506.5956f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 14:
							*uParam3 = { -1374.0281f, -505.0649f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
						case 15:
							*uParam3 = { -1374.797f, -504.0694f, 32.1574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 128.2785f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1368.6677f, -471.4168f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 1:
							*uParam3 = { -1367.7439f, -471.7995f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 2:
							*uParam3 = { -1366.55f, -475.7407f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 209.0546f;
							break;
						case 3:
							*uParam3 = { -1369.392f, -470.6341f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 4:
							*uParam3 = { -1368.285f, -470.4929f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 5:
							*uParam3 = { -1368.1266f, -472.7233f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 6:
							*uParam3 = { -1366.974f, -477.858f, 83.5868f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 215.0546f;
							break;
						case 7:
							*uParam3 = { -1369.109f, -469.7102f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 8:
							*uParam3 = { -1367.3612f, -470.8756f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.0546f;
							break;
						case 9:
							*uParam3 = { -1367.62f, -476.8822f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 222.0546f;
							break;
						case 10:
							*uParam3 = { -1368.533f, -474.8645f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.0546f;
							break;
						case 11:
							*uParam3 = { -1366.816f, -476.6514f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 215.0546f;
							break;
						case 12:
							*uParam3 = { -1367.202f, -475.169f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.0546f;
							break;
						case 13:
							*uParam3 = { -1367.5853f, -474.0299f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 206.0546f;
							break;
						case 14:
							*uParam3 = { -1367.681f, -476.0992f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.0546f;
							break;
						case 15:
							*uParam3 = { -1368.35f, -475.8037f, 83.4469f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 211.0546f;
							break;
					}
					break;
				case 2:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1419.393f, -480.616f, 32.7711f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 1:
							*uParam3 = { -1417.67f, -482.7237f, 32.7329f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 2:
							*uParam3 = { -1419.676f, -478.0899f, 32.7456f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 3:
							*uParam3 = { -1421.642f, -477.1583f, 32.8092f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 4:
							*uParam3 = { -1416.361f, -485.2421f, 32.7966f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 5:
							*uParam3 = { -1419.677f, -482.7726f, 32.7074f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 6:
							*uParam3 = { -1421.425f, -479.6572f, 32.7644f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 7:
							*uParam3 = { -1422.984f, -473.9095f, 32.8347f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6864f;
							break;
						case 8:
							*uParam3 = { -1424.912f, -474.6498f, 32.7585f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 39.4364f;
							break;
						case 9:
							*uParam3 = { -1425.171f, -471.3564f, 32.6948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 47.4364f;
							break;
						case 10:
							*uParam3 = { -1415.159f, -488.0138f, 32.6859f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.4364f;
							break;
						case 11:
							*uParam3 = { -1411.041f, -490.0756f, 32.8427f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 214.1864f;
							break;
						case 12:
							*uParam3 = { -1412.953f, -487.7683f, 32.8222f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 218.6864f;
							break;
						case 13:
							*uParam3 = { -1423.436f, -467.1541f, 32.6438f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 14:
							*uParam3 = { -1421.006f, -466.7234f, 32.6701f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 124.1864f;
							break;
						case 15:
							*uParam3 = { -1421.376f, -469.3029f, 32.8984f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 118.6864f;
							break;
					}
					break;
			}
			break;
		case 70:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -114.8805f, -603.2027f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 254.4622f;
							break;
						case 1:
							*uParam3 = { -114.1816f, -605.2354f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.7122f;
							break;
						case 2:
							*uParam3 = { -115.7881f, -606.2516f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 254.2122f;
							break;
						case 3:
							*uParam3 = { -116.6543f, -604.195f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 246.4622f;
							break;
						case 4:
							*uParam3 = { -113.7978f, -600.7538f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.7122f;
							break;
						case 5:
							*uParam3 = { -112.2393f, -604.5093f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.7122f;
							break;
						case 6:
							*uParam3 = { -117.712f, -607.0689f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 249.4622f;
							break;
						case 7:
							*uParam3 = { -115.4717f, -600.9961f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 248.7122f;
							break;
						case 8:
							*uParam3 = { -112.9739f, -602.5115f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.7122f;
							break;
						case 9:
							*uParam3 = { -114.1827f, -608.3931f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 255.7122f;
							break;
						case 10:
							*uParam3 = { -116.1958f, -609.6755f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.7122f;
							break;
						case 11:
							*uParam3 = { -110.1782f, -603.3373f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.4622f;
							break;
						case 12:
							*uParam3 = { -111.4901f, -601.3549f, 35.5107f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.7122f;
							break;
						case 13:
							*uParam3 = { -112.7981f, -607.3658f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 248.7122f;
							break;
						case 14:
							*uParam3 = { -110.1686f, -606.0351f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 248.7122f;
							break;
						case 15:
							*uParam3 = { -111.5628f, -609.1146f, 35.2857f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 249.4622f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -131.6322f, -585.456f, 200.7919f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 221.75f;
							break;
						case 1:
							*uParam3 = { -131.3072f, -587.931f, 200.7669f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 207.25f;
							break;
						case 2:
							*uParam3 = { -135.4822f, -581.331f, 200.7419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.25f;
							break;
						case 3:
							*uParam3 = { -136.4572f, -579.756f, 200.5919f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 69.5f;
							break;
						case 4:
							*uParam3 = { -138.1572f, -580.081f, 200.6419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.5f;
							break;
						case 5:
							*uParam3 = { -138.9322f, -578.156f, 200.4925f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 80f;
							break;
						case 6:
							*uParam3 = { -140.8822f, -579.306f, 200.7169f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 78.5f;
							break;
						case 7:
							*uParam3 = { -141.7072f, -577.631f, 200.6919f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 78f;
							break;
						case 8:
							*uParam3 = { -130.2072f, -596.706f, 200.8919f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 9:
							*uParam3 = { -128.3072f, -596.006f, 200.9919f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 20.25f;
							break;
						case 10:
							*uParam3 = { -129.1822f, -599.256f, 200.8425f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 11:
							*uParam3 = { -131.2322f, -599.656f, 200.8425f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 332.5f;
							break;
						case 12:
							*uParam3 = { -134.5572f, -592.106f, 206.1925f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 23f;
							break;
						case 13:
							*uParam3 = { -133.3822f, -588.906f, 206.193f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 28f;
							break;
						case 14:
							*uParam3 = { -132.3822f, -593.631f, 206.168f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 22.5f;
							break;
						case 15:
							*uParam3 = { -135.8072f, -589.206f, 206.193f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 32.25f;
							break;
					}
					break;
				case 2:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -147.0087f, -585.0933f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 1:
							*uParam3 = { -149.0098f, -586.501f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 2:
							*uParam3 = { -145.5414f, -587.3922f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 3:
							*uParam3 = { -148.4326f, -588.5356f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 4:
							*uParam3 = { -146.526f, -590.7444f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 5:
							*uParam3 = { -149.6175f, -591.1499f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 6:
							*uParam3 = { -146.7652f, -592.7845f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 7:
							*uParam3 = { -148.5749f, -592.4117f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 8:
							*uParam3 = { -150.3021f, -593.4521f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 9:
							*uParam3 = { -148.1109f, -594.1337f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 10:
							*uParam3 = { -147.824f, -595.7661f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 11:
							*uParam3 = { -149.9564f, -595.9029f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 12:
							*uParam3 = { -149.2183f, -597.9705f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 13:
							*uParam3 = { -151.9263f, -597.0064f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 14:
							*uParam3 = { -151.4218f, -599.7007f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
						case 15:
							*uParam3 = { -150.9161f, -602.4302f, 31.4245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 160.0507f;
							break;
					}
					break;
			}
			break;
		case 71:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -83.7985f, -791.2855f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 1:
							*uParam3 = { -82.5746f, -791.6682f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 2:
							*uParam3 = { -84.4812f, -792.4094f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 3:
							*uParam3 = { -85.0224f, -790.9028f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 4:
							*uParam3 = { -83.7158f, -790.3616f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 5:
							*uParam3 = { -82.8573f, -792.592f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 6:
							*uParam3 = { -85.405f, -791.8267f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 7:
							*uParam3 = { -85.1397f, -789.6789f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 8:
							*uParam3 = { -81.7919f, -790.7443f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 321.84f;
							break;
						case 9:
							*uParam3 = { -81.3507f, -792.0508f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 10:
							*uParam3 = { -84.8639f, -793.2332f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 11:
							*uParam3 = { -86.9463f, -790.5201f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 60.84f;
							break;
						case 12:
							*uParam3 = { -83.3331f, -789.4377f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 13:
							*uParam3 = { -83.0161f, -793.8986f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.9975f;
							break;
						case 14:
							*uParam3 = { -86.7116f, -792.3679f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.04f;
							break;
						case 15:
							*uParam3 = { -86.3809f, -788.6724f, 43.327f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 51.48f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -65.8016f, -820.6504f, 320.7948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.64f;
							break;
						case 1:
							*uParam3 = { -67.5777f, -824.6331f, 320.3073f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 141.84f;
							break;
						case 2:
							*uParam3 = { -65.0842f, -824.1743f, 320.7948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 152.64f;
							break;
						case 3:
							*uParam3 = { -65.6254f, -818.8677f, 320.2896f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 360f;
							break;
						case 4:
							*uParam3 = { -64.9189f, -822.5265f, 320.7948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 333.36f;
							break;
						case 5:
							*uParam3 = { -70.6604f, -826.957f, 320.337f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.12f;
							break;
						case 6:
							*uParam3 = { -66.9081f, -824.0916f, 320.2875f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 141.84f;
							break;
						case 7:
							*uParam3 = { -66.0427f, -817.8438f, 320.8174f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 8.64f;
							break;
						case 8:
							*uParam3 = { -64.195f, -819.5092f, 320.2875f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 351.36f;
							break;
						case 9:
							*uParam3 = { -66.0538f, -824.7158f, 320.7715f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 144.72f;
							break;
						case 10:
							*uParam3 = { -66.6669f, -825.7982f, 320.7948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 134.28f;
							break;
						case 11:
							*uParam3 = { -66.5493f, -822.485f, 320.1896f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.28f;
							break;
						case 12:
							*uParam3 = { -64.4362f, -818.7026f, 320.7948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 360f;
							break;
						case 13:
							*uParam3 = { -68.5192f, -827.1635f, 320.2875f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 130.68f;
							break;
						case 14:
							*uParam3 = { -68.4146f, -825.4328f, 320.2875f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 155.52f;
							break;
						case 15:
							*uParam3 = { -66.715f, -815.9373f, 320.2896f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.44f;
							break;
					}
					break;
				case 2:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -89.4094f, -750.5601f, 42.9818f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 1:
							*uParam3 = { -91.6355f, -750.2678f, 42.9148f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 2:
							*uParam3 = { -87.8671f, -749.434f, 42.9024f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 3:
							*uParam3 = { -93.5082f, -749.6024f, 43.0245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 4:
							*uParam3 = { -86.5517f, -747.6862f, 43.0399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 5:
							*uParam3 = { -91.2932f, -748.1417f, 42.8596f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 6:
							*uParam3 = { -89.1659f, -746.8513f, 42.945f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 7:
							*uParam3 = { -83.3756f, -745.9535f, 43.1039f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 333.75f;
							break;
						case 8:
							*uParam3 = { -81.5278f, -747.2939f, 42.9701f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 319f;
							break;
						case 9:
							*uParam3 = { -81.4116f, -744.5255f, 42.845f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 332.5f;
							break;
						case 10:
							*uParam3 = { -84.9997f, -742.5829f, 42.823f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4801f;
							break;
						case 11:
							*uParam3 = { -93.2321f, -738.7197f, 43.0668f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 12:
							*uParam3 = { -97.919f, -738.7623f, 43.095f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 13:
							*uParam3 = { -96.002f, -736.6482f, 42.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 14:
							*uParam3 = { -99.3475f, -734.4175f, 42.9082f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.2301f;
							break;
						case 15:
							*uParam3 = { -100.2417f, -731.647f, 43.2053f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 45.2301f;
							break;
					}
					break;
			}
			break;
	}
}

void func_66(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x21B07D
{
	switch (iParam0)
	{
		case 58:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -177.4872f, 504.1537f, 135.8589f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 1:
							*uParam3 = { -176.5633f, 503.771f, 135.9713f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 2:
							*uParam3 = { -177.8698f, 503.2298f, 135.8448f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 3:
							*uParam3 = { -178.411f, 504.5364f, 135.8671f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 4:
							*uParam3 = { -177.1045f, 507.1776f, 135.6909f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 5:
							*uParam3 = { -176.946f, 505.4471f, 136.119f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 6:
							*uParam3 = { -178.7937f, 503.6125f, 135.8557f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 7:
							*uParam3 = { -178.0283f, 505.2602f, 135.8318f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 8:
							*uParam3 = { -176.2806f, 504.6949f, 135.8586f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 9:
							*uParam3 = { -175.6394f, 507.2883f, 135.8221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 10:
							*uParam3 = { -178.5525f, 506.0059f, 135.8306f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 11:
							*uParam3 = { -179.3349f, 505.1191f, 135.8341f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 12:
							*uParam3 = { -177.5218f, 506.4014f, 135.6244f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 13:
							*uParam3 = { -176.4048f, 506.6406f, 135.82f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 14:
							*uParam3 = { -180.1003f, 506.1713f, 135.4541f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
						case 15:
							*uParam3 = { -178.5695f, 506.7668f, 135.5867f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 9.7048f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -192.4984f, 499.1179f, 132.7493f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 355.75f;
							break;
						case 1:
							*uParam3 = { -191.2323f, 499.7352f, 132.9291f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 13.25f;
							break;
						case 2:
							*uParam3 = { -190.4889f, 499.519f, 132.921f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 12.7624f;
							break;
						case 3:
							*uParam3 = { -189.3051f, 500.1006f, 132.8369f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 15.5124f;
							break;
						case 4:
							*uParam3 = { -188.1485f, 500.1168f, 132.8457f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 14.2624f;
							break;
						case 5:
							*uParam3 = { -187.215f, 500.8364f, 133.043f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 13.7624f;
							break;
						case 6:
							*uParam3 = { -185.8627f, 500.7517f, 133.074f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 12.25f;
							break;
						case 7:
							*uParam3 = { -184.1474f, 502.0495f, 133.0814f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 16.25f;
							break;
						case 8:
							*uParam3 = { -185.2496f, 501.6591f, 133.0652f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 16.0124f;
							break;
						case 9:
							*uParam3 = { -190.2834f, 500.9526f, 132.8341f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 15.0124f;
							break;
						case 10:
							*uParam3 = { -188.1716f, 501.2202f, 132.9537f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.5f;
							break;
						case 11:
							*uParam3 = { -186.454f, 501.8083f, 133.0837f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.08f;
							break;
						case 12:
							*uParam3 = { -185.8408f, 502.6407f, 133.1021f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 16.0124f;
							break;
						case 13:
							*uParam3 = { -193.0988f, 500.4548f, 132.4819f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.75f;
							break;
						case 14:
							*uParam3 = { -189.2943f, 501.5605f, 132.85f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 1.5f;
							break;
						case 15:
							*uParam3 = { -177.7386f, 503.631f, 135.2258f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 19.75f;
							break;
					}
					break;
			}
			break;
		case 59:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 347.425f, 440.9599f, 146.5071f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.9395f;
							break;
						case 1:
							*uParam3 = { 347.4674f, 442.2011f, 146.6313f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 299.1895f;
							break;
						case 2:
							*uParam3 = { 348.875f, 443.2f, 146.5807f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 303.6895f;
							break;
						case 3:
							*uParam3 = { 350.3228f, 442.7096f, 145.9536f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 313.4395f;
							break;
						case 4:
							*uParam3 = { 349.7151f, 442.2107f, 146.6307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 303.6895f;
							break;
						case 5:
							*uParam3 = { 350.2066f, 443.9412f, 145.7291f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 305.4395f;
							break;
						case 6:
							*uParam3 = { 348.4085f, 441.3695f, 146.5315f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.4395f;
							break;
						case 7:
							*uParam3 = { 348.1012f, 442.7577f, 146.8138f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 296.9395f;
							break;
						case 8:
							*uParam3 = { 352.7489f, 437.0673f, 146.0203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 301.1895f;
							break;
						case 9:
							*uParam3 = { 348.9412f, 441.9434f, 146.431f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 307.4395f;
							break;
						case 10:
							*uParam3 = { 352.9827f, 440.0738f, 145.3388f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 297.9395f;
							break;
						case 11:
							*uParam3 = { 353.7467f, 434.9519f, 146.0338f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 295.9395f;
							break;
						case 12:
							*uParam3 = { 352.0393f, 438.54f, 145.9888f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 302.1895f;
							break;
						case 13:
							*uParam3 = { 351.4313f, 439.7292f, 145.9227f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 299.1895f;
							break;
						case 14:
							*uParam3 = { 341.3415f, 449.8804f, 145.7844f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.9395f;
							break;
						case 15:
							*uParam3 = { 341.7055f, 450.9335f, 145.7688f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 297.9395f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 352.0339f, 439.4672f, 145.5995f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 303.5499f;
							break;
						case 1:
							*uParam3 = { 353.0078f, 438.6345f, 145.3702f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.0499f;
							break;
						case 2:
							*uParam3 = { 353.2762f, 437.1183f, 145.3148f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.5499f;
							break;
						case 3:
							*uParam3 = { 352.86f, 440.4749f, 145.8215f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 299.2999f;
							break;
						case 4:
							*uParam3 = { 354.0666f, 438.0661f, 145.3126f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 300.2999f;
							break;
						case 5:
							*uParam3 = { 354.2751f, 436.1356f, 145.6522f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.2999f;
							break;
						case 6:
							*uParam3 = { 354.5523f, 434.151f, 145.8313f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 296.5499f;
							break;
						case 7:
							*uParam3 = { 355.6177f, 435.4237f, 145.3717f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 297.2999f;
							break;
						case 8:
							*uParam3 = { 354.1404f, 439.4084f, 145.1468f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 298.2999f;
							break;
						case 9:
							*uParam3 = { 355.2316f, 438.3768f, 145.2037f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 315.0499f;
							break;
						case 10:
							*uParam3 = { 356.8185f, 436.4694f, 144.6635f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 315.0499f;
							break;
						case 11:
							*uParam3 = { 357.9112f, 435.7076f, 144.8991f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 315.0499f;
							break;
						case 12:
							*uParam3 = { 353.8242f, 440.4399f, 145.0485f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 315.0499f;
							break;
						case 13:
							*uParam3 = { 355.8913f, 436.8791f, 144.7484f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 309.0499f;
							break;
						case 14:
							*uParam3 = { 356.2458f, 437.7598f, 144.8946f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 313.0499f;
							break;
						case 15:
							*uParam3 = { 348.5015f, 441.7553f, 146.1664f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 305.0499f;
							break;
					}
					break;
			}
			break;
		case 60:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -752.2014f, 623.5539f, 141.4762f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 1:
							*uParam3 = { -751.2775f, 623.1712f, 141.3504f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 2:
							*uParam3 = { -752.384f, 622.63f, 141.4621f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 3:
							*uParam3 = { -753.1252f, 623.9366f, 141.6011f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 4:
							*uParam3 = { -751.8187f, 624.4778f, 141.419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 5:
							*uParam3 = { -751.6602f, 622.2473f, 141.2837f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 6:
							*uParam3 = { -751.9079f, 621.5127f, 141.2844f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 7:
							*uParam3 = { -752.7426f, 624.8605f, 141.5307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 8:
							*uParam3 = { -750.8948f, 624.0951f, 141.2163f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 9:
							*uParam3 = { -750.3536f, 622.7885f, 141.2573f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 10:
							*uParam3 = { -750.7667f, 622.0061f, 141.3192f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 11:
							*uParam3 = { -753.5491f, 624.7193f, 141.7188f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 12:
							*uParam3 = { -751.436f, 625.4017f, 141.2958f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 13:
							*uParam3 = { -751.119f, 620.9408f, 141.2434f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 14:
							*uParam3 = { -750.1145f, 621.1715f, 141.3053f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
						case 15:
							*uParam3 = { -753.2838f, 626.167f, 141.5795f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.2647f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -756.374f, 629.7765f, 141.2712f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 292.6437f;
							break;
						case 1:
							*uParam3 = { -754.3047f, 629.831f, 141.1618f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 292.6437f;
							break;
						case 2:
							*uParam3 = { -754.876f, 628.786f, 141.3005f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 292.6437f;
							break;
						case 3:
							*uParam3 = { -756.0763f, 627.7861f, 141.2178f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 285.1437f;
							break;
						case 4:
							*uParam3 = { -754.234f, 624.0122f, 141.3261f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 286.1437f;
							break;
						case 5:
							*uParam3 = { -752.5755f, 624.1818f, 141.091f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 286.6437f;
							break;
						case 6:
							*uParam3 = { -754.5982f, 625.4722f, 141.2218f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 288.3937f;
							break;
						case 7:
							*uParam3 = { -753.4328f, 625.0199f, 140.8718f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 289.1437f;
							break;
						case 8:
							*uParam3 = { -753.1601f, 626.6046f, 141.194f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 287.8937f;
							break;
						case 9:
							*uParam3 = { -755.3189f, 626.498f, 141.3222f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.6437f;
							break;
						case 10:
							*uParam3 = { -754.532f, 627.0406f, 141.0968f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 283.6437f;
							break;
						case 11:
							*uParam3 = { -753.4894f, 627.9787f, 141.146f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 287.6437f;
							break;
						case 12:
							*uParam3 = { -750.3221f, 621.7039f, 141.1631f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 279.6555f;
							break;
						case 13:
							*uParam3 = { -752.2743f, 622.0395f, 140.6657f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 290.8937f;
							break;
						case 14:
							*uParam3 = { -751.1928f, 620.2807f, 140.5254f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 286.8937f;
							break;
						case 15:
							*uParam3 = { -752.1417f, 620.7884f, 140.4307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 290.3937f;
							break;
					}
					break;
			}
			break;
		case 61:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -688.5425f, 599.4959f, 142.2134f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.819f;
							break;
						case 1:
							*uParam3 = { -689.9321f, 598.481f, 142.0513f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 32.1702f;
							break;
						case 2:
							*uParam3 = { -687.4945f, 598.1655f, 142.6471f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.7099f;
							break;
						case 3:
							*uParam3 = { -688.2803f, 596.4659f, 142.6471f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 31.2257f;
							break;
						case 4:
							*uParam3 = { -685.6052f, 599.9669f, 143.3221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.4f;
							break;
						case 5:
							*uParam3 = { -684.4716f, 600.2614f, 143.2721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43f;
							break;
						case 6:
							*uParam3 = { -684.2444f, 601.4768f, 143.2471f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.8276f;
							break;
						case 7:
							*uParam3 = { -682.754f, 601.2996f, 143.1721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.75f;
							break;
						case 8:
							*uParam3 = { -682.7563f, 602.6842f, 143.3505f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.3276f;
							break;
						case 9:
							*uParam3 = { -681.3901f, 602.5776f, 143.0221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 36f;
							break;
						case 10:
							*uParam3 = { -681.0032f, 603.9702f, 143.0434f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 40.8276f;
							break;
						case 11:
							*uParam3 = { -679.7606f, 604.8584f, 143.1779f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.3276f;
							break;
						case 12:
							*uParam3 = { -679.6475f, 605.8908f, 143.439f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 38.8276f;
							break;
						case 13:
							*uParam3 = { -681.3554f, 605.4549f, 143.167f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.3276f;
							break;
						case 14:
							*uParam3 = { -684.2259f, 602.9356f, 143.5184f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.8276f;
							break;
						case 15:
							*uParam3 = { -682.6452f, 604.4561f, 143.216f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.5776f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -682.754f, 601.2996f, 143.8721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 39.75f;
							break;
						case 1:
							*uParam3 = { -684.4716f, 600.2614f, 143.2721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 38.16f;
							break;
						case 2:
							*uParam3 = { -681.0651f, 603.9776f, 143.2221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 40.68f;
							break;
						case 3:
							*uParam3 = { -681.0032f, 602.5776f, 143.0221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.12f;
							break;
						case 4:
							*uParam3 = { -685.6052f, 599.9669f, 143.3221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.4f;
							break;
						case 5:
							*uParam3 = { -687.564f, 596.2853f, 143.2971f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43f;
							break;
						case 6:
							*uParam3 = { -684.2444f, 601.4768f, 143.2471f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.8276f;
							break;
						case 7:
							*uParam3 = { -686.6378f, 597.293f, 143.1721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 34.25f;
							break;
						case 8:
							*uParam3 = { -682.7563f, 602.6842f, 143.3505f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.3276f;
							break;
						case 9:
							*uParam3 = { -687.6955f, 597.5191f, 143.3221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 36f;
							break;
						case 10:
							*uParam3 = { -689.1117f, 597.8507f, 143.0221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 40.8276f;
							break;
						case 11:
							*uParam3 = { -679.7606f, 604.8584f, 143.1779f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.3276f;
							break;
						case 12:
							*uParam3 = { -679.6475f, 605.8908f, 143.439f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 38.8276f;
							break;
						case 13:
							*uParam3 = { -681.3554f, 605.4549f, 143.167f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.3276f;
							break;
						case 14:
							*uParam3 = { -684.2259f, 602.9356f, 143.5184f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 43.8276f;
							break;
						case 15:
							*uParam3 = { -682.6452f, 604.4561f, 143.216f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 41.5776f;
							break;
					}
					break;
			}
			break;
		case 62:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 118.8627f, 567.422f, 182.1263f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 1:
							*uParam3 = { 119.7866f, 567.0393f, 182.1125f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 2:
							*uParam3 = { 118.48f, 566.4981f, 182.4628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 3:
							*uParam3 = { 117.9388f, 567.8047f, 182.0941f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 4:
							*uParam3 = { 119.2454f, 568.3459f, 181.9803f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 5:
							*uParam3 = { 119.4039f, 566.1154f, 182.7934f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 6:
							*uParam3 = { 117.5562f, 566.8808f, 183.0419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 7:
							*uParam3 = { 118.3215f, 568.7286f, 181.9665f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 8:
							*uParam3 = { 120.1693f, 567.9632f, 182.1591f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 9:
							*uParam3 = { 120.7105f, 566.6566f, 182.4628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 10:
							*uParam3 = { 118.0973f, 565.5742f, 182.9967f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 11:
							*uParam3 = { 117.0149f, 568.1874f, 181.9169f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 12:
							*uParam3 = { 119.6281f, 569.5698f, 182.0299f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 13:
							*uParam3 = { 120.2451f, 568.6089f, 182.0644f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 14:
							*uParam3 = { 117.1496f, 565.9396f, 182.8811f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
						case 15:
							*uParam3 = { 117.6803f, 569.1351f, 182.0199f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.0916f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 131.5869f, 567.6766f, 182.4982f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 1:
							*uParam3 = { 132.5108f, 567.2939f, 182.6182f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 2:
							*uParam3 = { 131.2042f, 566.7527f, 182.738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 3:
							*uParam3 = { 130.6631f, 568.0593f, 182.3783f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 4:
							*uParam3 = { 131.9696f, 568.6005f, 182.3529f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 5:
							*uParam3 = { 132.1281f, 566.3701f, 182.8102f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 6:
							*uParam3 = { 130.2804f, 567.1354f, 182.6097f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 7:
							*uParam3 = { 131.0457f, 568.9832f, 182.3233f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 8:
							*uParam3 = { 132.8935f, 568.2178f, 182.4406f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 9:
							*uParam3 = { 133.4347f, 566.9113f, 182.7368f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 10:
							*uParam3 = { 130.8216f, 566.1289f, 182.855f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 11:
							*uParam3 = { 129.7392f, 568.442f, 182.2882f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 12:
							*uParam3 = { 132.3523f, 569.5244f, 182.3788f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 3.917f;
							break;
						case 13:
							*uParam3 = { 133.4693f, 568.9635f, 182.7592f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 14:
							*uParam3 = { 129.0738f, 567.3942f, 182.7644f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
						case 15:
							*uParam3 = { 128.8045f, 568.5897f, 182.3732f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.917f;
							break;
					}
					break;
			}
			break;
		case 63:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -558.1767f, 665.3058f, 144.4514f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 288.4424f;
							break;
						case 1:
							*uParam3 = { -559.1245f, 665.3712f, 144.4123f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.4424f;
							break;
						case 2:
							*uParam3 = { -558.529f, 666.2405f, 144.49f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 267.4424f;
							break;
						case 3:
							*uParam3 = { -557.0179f, 664.8124f, 144.26f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 4:
							*uParam3 = { -556.4352f, 665.3363f, 144.0852f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 5:
							*uParam3 = { -557.3591f, 665.719f, 144.1037f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 6:
							*uParam3 = { -555.5114f, 664.9536f, 144.1088f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 7:
							*uParam3 = { -554.5875f, 664.8709f, 144.1094f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 8:
							*uParam3 = { -556.094f, 664.3297f, 144.2801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 9:
							*uParam3 = { -555.1287f, 665.8775f, 143.8997f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 10:
							*uParam3 = { -555.0702f, 664.247f, 144.305f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 11:
							*uParam3 = { -556.0526f, 666.2602f, 143.9126f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 12:
							*uParam3 = { -554.2048f, 665.4948f, 143.8677f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 13:
							*uParam3 = { -553.6636f, 664.8882f, 144.0775f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 14:
							*uParam3 = { -554.746f, 666.8014f, 143.7029f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 15:
							*uParam3 = { -556.5938f, 667.5667f, 143.8159f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -555.5114f, 664.9536f, 144.1088f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 1:
							*uParam3 = { -554.5875f, 664.8709f, 144.1094f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 2:
							*uParam3 = { -556.094f, 664.3297f, 144.2801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 3:
							*uParam3 = { -556.4352f, 665.3363f, 144.0852f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 4:
							*uParam3 = { -555.1287f, 665.8775f, 143.8997f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 5:
							*uParam3 = { -555.0702f, 664.247f, 144.305f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 6:
							*uParam3 = { -557.0179f, 664.8124f, 144.26f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 7:
							*uParam3 = { -556.0526f, 666.2602f, 143.9126f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 8:
							*uParam3 = { -554.2048f, 665.4948f, 143.8677f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 9:
							*uParam3 = { -553.6636f, 664.8882f, 144.0775f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 10:
							*uParam3 = { -558.1767f, 665.3058f, 144.4514f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 288.4424f;
							break;
						case 11:
							*uParam3 = { -557.3591f, 665.719f, 144.1037f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 12:
							*uParam3 = { -554.746f, 666.8014f, 143.7029f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
						case 13:
							*uParam3 = { -558.529f, 666.2405f, 144.49f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 267.4424f;
							break;
						case 14:
							*uParam3 = { -559.1245f, 665.3712f, 144.4123f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 304.4424f;
							break;
						case 15:
							*uParam3 = { -556.5938f, 667.5667f, 143.8159f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 337.4424f;
							break;
					}
					break;
			}
			break;
		case 64:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -732.7784f, 594.7928f, 140.7715f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 321.421f;
							break;
						case 1:
							*uParam3 = { -741.519f, 600.1362f, 141.5243f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 310.9962f;
							break;
						case 2:
							*uParam3 = { -742.9602f, 600.4427f, 141.3538f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 3:
							*uParam3 = { -742.8948f, 602.2905f, 140.9795f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 4:
							*uParam3 = { -742.3536f, 600.9839f, 141.0509f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 5:
							*uParam3 = { -742.3667f, 599.9015f, 142.1332f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 6:
							*uParam3 = { -746.0491f, 602.5146f, 141.3008f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 7:
							*uParam3 = { -743.436f, 603.597f, 140.9498f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 8:
							*uParam3 = { -744.8145f, 604.3669f, 142.1332f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 9:
							*uParam3 = { -743.2775f, 601.3666f, 141.0904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 10:
							*uParam3 = { -744.384f, 603.7254f, 141.4196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 11:
							*uParam3 = { -745.1252f, 602.132f, 141.2141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 12:
							*uParam3 = { -743.8187f, 602.6732f, 141.0419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 13:
							*uParam3 = { -745.5079f, 603.5081f, 141.4633f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 14:
							*uParam3 = { -744.7426f, 603.0558f, 141.127f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 15:
							*uParam3 = { -745.2838f, 604.3624f, 141.0929f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -744.2014f, 601.7493f, 141.132f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 1:
							*uParam3 = { -743.2775f, 601.3666f, 141.0904f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 2:
							*uParam3 = { -744.384f, 603.7254f, 141.4196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 3:
							*uParam3 = { -745.1252f, 602.132f, 141.2141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 4:
							*uParam3 = { -743.8187f, 602.6732f, 141.0419f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 5:
							*uParam3 = { -742.9602f, 600.4427f, 141.3538f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 6:
							*uParam3 = { -745.5079f, 603.5081f, 141.4633f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 7:
							*uParam3 = { -744.7426f, 603.0558f, 141.127f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 8:
							*uParam3 = { -742.8948f, 602.2905f, 140.9795f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 9:
							*uParam3 = { -742.3536f, 600.9839f, 141.0509f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 10:
							*uParam3 = { -742.3667f, 599.9015f, 142.1332f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 11:
							*uParam3 = { -746.0491f, 602.5146f, 141.3008f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 12:
							*uParam3 = { -743.436f, 603.597f, 140.9498f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 13:
							*uParam3 = { -741.519f, 600.1362f, 141.5243f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 310.9962f;
							break;
						case 14:
							*uParam3 = { -744.8145f, 604.3669f, 142.1332f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
						case 15:
							*uParam3 = { -745.2838f, 604.3624f, 141.0929f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.9962f;
							break;
					}
					break;
			}
			break;
		case 65:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -853.3578f, 697.1407f, 147.8176f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 4.32f;
							break;
						case 1:
							*uParam3 = { -854.7839f, 696.608f, 147.943f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.92f;
							break;
						case 2:
							*uParam3 = { -855.7905f, 695.9168f, 147.8325f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.5f;
							break;
						case 3:
							*uParam3 = { -857.0067f, 696.2484f, 147.8438f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 1.15f;
							break;
						case 4:
							*uParam3 = { -854.2001f, 698.3396f, 147.7988f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 5.4f;
							break;
						case 5:
							*uParam3 = { -855.7666f, 697.7591f, 147.943f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 3.5f;
							break;
						case 6:
							*uParam3 = { -857.7394f, 697.5745f, 147.943f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 10.25f;
							break;
						case 7:
							*uParam3 = { -858.374f, 695.7722f, 147.8269f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 8:
							*uParam3 = { -853.5762f, 699.7569f, 147.7763f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.88f;
							break;
						case 9:
							*uParam3 = { -855.21f, 699.6753f, 147.7831f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 5.25f;
							break;
						case 10:
							*uParam3 = { -856.8482f, 699.0179f, 147.8172f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 5.4f;
							break;
						case 11:
							*uParam3 = { -859.1306f, 698.756f, 147.8699f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 11.16f;
							break;
						case 12:
							*uParam3 = { -854.5424f, 701.1134f, 147.78f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 10.8f;
							break;
						case 13:
							*uParam3 = { -857.7254f, 700.8276f, 147.9985f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.12f;
							break;
						case 14:
							*uParam3 = { -859.7959f, 697.1333f, 147.8997f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 3.24f;
							break;
						case 15:
							*uParam3 = { -860.0402f, 695.6288f, 147.8362f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 17.28f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -863.2893f, 695.5299f, 148.0291f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
						case 1:
							*uParam3 = { -864.4905f, 696.4722f, 148.0273f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
						case 2:
							*uParam3 = { -865.997f, 696.431f, 148.0067f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
						case 3:
							*uParam3 = { -867.5132f, 697.3376f, 148.0293f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 312.0431f;
							break;
						case 4:
							*uParam3 = { -867.0317f, 698.4788f, 148.0467f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 307.75f;
							break;
						case 5:
							*uParam3 = { -862.9981f, 697.2233f, 148.0065f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
						case 6:
							*uParam3 = { -865.1459f, 697.6387f, 148.0069f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 327.7931f;
							break;
						case 7:
							*uParam3 = { -865.2555f, 698.9865f, 148.0517f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 349.5431f;
							break;
						case 8:
							*uParam3 = { -863.5578f, 698.6461f, 148.0248f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.0431f;
							break;
						case 9:
							*uParam3 = { -861.7416f, 696.0645f, 148.0032f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
						case 10:
							*uParam3 = { -861.5547f, 698.2821f, 147.9989f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 315.5431f;
							break;
						case 11:
							*uParam3 = { -862.1621f, 700.2453f, 148.0294f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 345.7931f;
							break;
						case 12:
							*uParam3 = { -863.974f, 700.3026f, 148.0465f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.0431f;
							break;
						case 13:
							*uParam3 = { -860.2569f, 696.0168f, 147.9989f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 327.2931f;
							break;
						case 14:
							*uParam3 = { -859.9524f, 697.5725f, 147.9989f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 319.7931f;
							break;
						case 15:
							*uParam3 = { -858.0967f, 699.618f, 148.0742f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7931f;
							break;
					}
					break;
			}
			break;
		case 66:
			switch (iParam1)
			{
				case 0:
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1294.872f, 455.1695f, 96.4711f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 1:
							*uParam3 = { -1295.349f, 455.8868f, 96.531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 2:
							*uParam3 = { -1296.255f, 455.0456f, 96.6231f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 3:
							*uParam3 = { -1296.596f, 455.7522f, 96.4639f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 4:
							*uParam3 = { -1297.29f, 454.9934f, 96.3194f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 5:
							*uParam3 = { -1297.831f, 455.7629f, 96.6315f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 6:
							*uParam3 = { -1298.379f, 455.0283f, 96.5885f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 7:
							*uParam3 = { -1298.914f, 455.676f, 96.3332f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 8:
							*uParam3 = { -1299.666f, 455.1107f, 96.3501f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 9:
							*uParam3 = { -1300.325f, 455.9041f, 96.5803f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 10:
							*uParam3 = { -1300.638f, 455.4217f, 96.5745f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 11:
							*uParam3 = { -1301.82f, 455.7349f, 96.5022f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 12:
							*uParam3 = { -1294.507f, 456.0172f, 96.2794f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 350.688f;
							break;
						case 13:
							*uParam3 = { -1296.89f, 466.0564f, 96.5f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177f;
							break;
						case 14:
							*uParam3 = { -1297.886f, 465.6871f, 96.5f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177f;
							break;
						case 15:
							*uParam3 = { -1296.055f, 465.7826f, 96.5f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177f;
							break;
					}
					break;
			}
			break;
		case 67:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 371.0836f, 433.0168f, 143.5063f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 1:
							*uParam3 = { 371.849f, 434.8646f, 143.3797f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 2:
							*uParam3 = { 372.8075f, 432.4341f, 143.4768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 3:
							*uParam3 = { 371.9663f, 433.6407f, 143.4418f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 4:
							*uParam3 = { 372.7729f, 434.4819f, 143.336f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 5:
							*uParam3 = { 373.5902f, 433.058f, 143.4017f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 6:
							*uParam3 = { 374.6141f, 433.1753f, 143.3664f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 316.9252f;
							break;
						case 7:
							*uParam3 = { 372.3314f, 431.1515f, 143.9473f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 8:
							*uParam3 = { 374.3967f, 434.1992f, 143.2923f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 9:
							*uParam3 = { 375.8379f, 432.8926f, 143.3318f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 256.9252f;
							break;
						case 10:
							*uParam3 = { 371.6248f, 430.2103f, 143.9458f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 11:
							*uParam3 = { 370.5424f, 434.3234f, 143.4864f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 12:
							*uParam3 = { 375.5555f, 434.1058f, 143.139f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 267.9252f;
							break;
						case 13:
							*uParam3 = { 373.4725f, 430.9449f, 144.1218f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 14:
							*uParam3 = { 371.1771f, 431.9756f, 143.7974f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
						case 15:
							*uParam3 = { 369.6078f, 435.3711f, 143.2591f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 341.9252f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 391.006f, 430.5639f, 142.5917f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 1:
							*uParam3 = { 391.9298f, 430.1812f, 142.6093f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 2:
							*uParam3 = { 389.9233f, 429.74f, 142.8207f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 3:
							*uParam3 = { 389.7821f, 430.9466f, 142.5693f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 4:
							*uParam3 = { 390.6886f, 431.4878f, 142.3306f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 5:
							*uParam3 = { 393.8471f, 429.2574f, 142.8615f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 6:
							*uParam3 = { 386.9994f, 430.4227f, 142.7799f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 7:
							*uParam3 = { 387.2648f, 431.8705f, 142.4789f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 8:
							*uParam3 = { 392.3125f, 431.1051f, 142.3481f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 9:
							*uParam3 = { 392.8537f, 429.7986f, 142.649f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 10:
							*uParam3 = { 390.2406f, 428.7162f, 143.0691f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 11:
							*uParam3 = { 388.2582f, 431.3293f, 142.5417f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 12:
							*uParam3 = { 393.7713f, 430.9117f, 142.0962f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 13:
							*uParam3 = { 392.1883f, 428.9508f, 143.1948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 14:
							*uParam3 = { 388.3929f, 429.4815f, 142.9574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
						case 15:
							*uParam3 = { 394.8236f, 430.577f, 142.2197f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.4558f;
							break;
					}
					break;
			}
			break;
	}
}

void func_67(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x21EB63
{
	switch (iParam0)
	{
		case 20:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -662.7263f, -851.8633f, 23.4339f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 1:
							*uParam3 = { -661.8024f, -852.246f, 23.4548f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 2:
							*uParam3 = { -663.109f, -852.7872f, 23.4373f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 3:
							*uParam3 = { -663.6502f, -851.4806f, 23.413f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 4:
							*uParam3 = { -662.3436f, -850.9394f, 23.4306f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 5:
							*uParam3 = { -662.1851f, -853.1699f, 23.4582f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 6:
							*uParam3 = { -664.0329f, -852.4045f, 23.4165f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 7:
							*uParam3 = { -663.2675f, -850.5567f, 23.4097f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 8:
							*uParam3 = { -661.4197f, -851.3221f, 23.4515f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 9:
							*uParam3 = { -660.8785f, -852.6287f, 23.4691f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 10:
							*uParam3 = { -663.4917f, -853.7111f, 23.4408f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 11:
							*uParam3 = { -664.5741f, -851.0979f, 23.3922f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 12:
							*uParam3 = { -661.9609f, -850.0155f, 23.4272f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 13:
							*uParam3 = { -665.1439f, -850.0764f, 23.4788f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 14:
							*uParam3 = { -665.3394f, -852.9457f, 23.3853f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
						case 15:
							*uParam3 = { -663.8087f, -849.2502f, 23.3855f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 6.1894f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -668.2311f, -853.2266f, 23.2703f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 1:
							*uParam3 = { -667.3072f, -853.6093f, 23.286f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 2:
							*uParam3 = { -668.6138f, -854.1505f, 23.2626f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 3:
							*uParam3 = { -669.155f, -852.8439f, 23.2547f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 4:
							*uParam3 = { -667.8484f, -852.3027f, 23.2822f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 5:
							*uParam3 = { -667.6899f, -854.5332f, 23.2817f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 6:
							*uParam3 = { -669.5377f, -853.7678f, 23.2428f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 7:
							*uParam3 = { -668.7723f, -851.92f, 23.2665f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 8:
							*uParam3 = { -666.9245f, -852.6854f, 23.3093f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 9:
							*uParam3 = { -666.3833f, -853.992f, 23.3292f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 10:
							*uParam3 = { -668.9965f, -855.0744f, 23.2639f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 11:
							*uParam3 = { -670.0789f, -852.4612f, 23.239f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 12:
							*uParam3 = { -667.4657f, -851.3788f, 23.294f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 13:
							*uParam3 = { -667.1487f, -855.8397f, 23.3574f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 14:
							*uParam3 = { -670.8442f, -854.309f, 23.2253f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
						case 15:
							*uParam3 = { -669.3135f, -850.6135f, 23.2673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 7.0422f;
							break;
					}
					break;
			}
			break;
		case 21:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1535.7134f, -324.8829f, 46.4718f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 1:
							*uParam3 = { -1534.7896f, -325.2656f, 46.4994f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 2:
							*uParam3 = { -1536.0961f, -325.8068f, 46.4269f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 3:
							*uParam3 = { -1536.6372f, -324.5002f, 46.437f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 4:
							*uParam3 = { -1535.3307f, -323.959f, 46.526f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 5:
							*uParam3 = { -1535.1722f, -326.1895f, 46.4739f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 6:
							*uParam3 = { -1537.0199f, -325.4241f, 46.3915f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 7:
							*uParam3 = { -1536.2545f, -323.5764f, 46.4916f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 8:
							*uParam3 = { -1534.4069f, -324.3417f, 46.5354f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 9:
							*uParam3 = { -1533.8656f, -325.6483f, 46.5107f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 10:
							*uParam3 = { -1537.679f, -326.7307f, 46.382f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 11:
							*uParam3 = { -1537.5612f, -324.1175f, 46.4022f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 12:
							*uParam3 = { -1534.948f, -323.0352f, 46.5744f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 13:
							*uParam3 = { -1539.731f, -325.896f, 46.9112f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 14:
							*uParam3 = { -1538.3265f, -325.9653f, 46.3112f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
						case 15:
							*uParam3 = { -1536.7958f, -322.2698f, 46.5271f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 59.3285f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1530.2577f, -345.9402f, 44.2794f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 1:
							*uParam3 = { -1529.3339f, -346.3229f, 44.2344f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 2:
							*uParam3 = { -1530.6404f, -346.8641f, 44.2276f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 3:
							*uParam3 = { -1531.1815f, -345.5575f, 44.3626f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 4:
							*uParam3 = { -1529.875f, -345.0163f, 44.3528f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 5:
							*uParam3 = { -1529.7166f, -347.2468f, 44.1479f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 6:
							*uParam3 = { -1531.5642f, -346.4814f, 44.3097f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 7:
							*uParam3 = { -1530.7988f, -344.6337f, 44.4086f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 8:
							*uParam3 = { -1528.9512f, -345.399f, 44.2968f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 9:
							*uParam3 = { -1528.4099f, -346.7056f, 44.1952f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 10:
							*uParam3 = { -1531.0231f, -347.788f, 44.1769f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 11:
							*uParam3 = { -1532.1055f, -345.1748f, 44.4296f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 12:
							*uParam3 = { -1529.4923f, -344.0925f, 44.3935f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 13:
							*uParam3 = { -1529.1753f, -348.5533f, 43.9977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 14:
							*uParam3 = { -1532.8708f, -347.0226f, 44.3667f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
						case 15:
							*uParam3 = { -1531.3401f, -343.3271f, 44.4879f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 132.0311f;
							break;
					}
					break;
			}
			break;
		case 22:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1562.4242f, -407.92f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 1:
							*uParam3 = { -1561.5004f, -408.3027f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 2:
							*uParam3 = { -1562.8069f, -408.8439f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 3:
							*uParam3 = { -1563.348f, -407.5373f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 4:
							*uParam3 = { -1562.0415f, -406.9961f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 5:
							*uParam3 = { -1561.883f, -409.2265f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 6:
							*uParam3 = { -1563.7307f, -408.4612f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 7:
							*uParam3 = { -1562.9653f, -406.6134f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 8:
							*uParam3 = { -1561.1177f, -407.3788f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 9:
							*uParam3 = { -1560.5764f, -408.6854f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 10:
							*uParam3 = { -1563.1896f, -409.7677f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 11:
							*uParam3 = { -1564.272f, -407.1546f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 12:
							*uParam3 = { -1561.6588f, -406.0722f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 13:
							*uParam3 = { -1561.3418f, -410.5331f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 14:
							*uParam3 = { -1565.0374f, -409.0024f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
						case 15:
							*uParam3 = { -1563.5066f, -405.3069f, 41.389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 228.3514f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1554.9592f, -401.9469f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 1:
							*uParam3 = { -1554.0354f, -402.3296f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 2:
							*uParam3 = { -1555.3419f, -402.8708f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 3:
							*uParam3 = { -1555.883f, -401.5642f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 4:
							*uParam3 = { -1554.5765f, -401.023f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 5:
							*uParam3 = { -1554.4181f, -403.2534f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 6:
							*uParam3 = { -1556.2657f, -402.4881f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 7:
							*uParam3 = { -1555.5004f, -400.6403f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 8:
							*uParam3 = { -1553.6527f, -401.4057f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 9:
							*uParam3 = { -1553.1115f, -402.7122f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 10:
							*uParam3 = { -1555.7246f, -403.7946f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 11:
							*uParam3 = { -1556.807f, -401.1815f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 12:
							*uParam3 = { -1554.1938f, -400.0991f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 13:
							*uParam3 = { -1553.8768f, -404.56f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 14:
							*uParam3 = { -1557.5724f, -403.0293f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
						case 15:
							*uParam3 = { -1556.0416f, -399.3338f, 40.9881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 235.0099f;
							break;
					}
					break;
			}
			break;
		case 23:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1608.2607f, -430.5509f, 39.4373f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 1:
							*uParam3 = { -1607.3369f, -430.9336f, 39.4381f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 2:
							*uParam3 = { -1608.6434f, -431.4748f, 39.4348f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 3:
							*uParam3 = { -1609.1846f, -430.1682f, 39.4365f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 4:
							*uParam3 = { -1607.878f, -429.627f, 39.4397f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 5:
							*uParam3 = { -1607.7196f, -431.8575f, 39.4356f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 6:
							*uParam3 = { -1609.5673f, -431.0921f, 39.434f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 7:
							*uParam3 = { -1608.8019f, -429.2444f, 39.4389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 8:
							*uParam3 = { -1606.9542f, -430.0097f, 39.4406f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 9:
							*uParam3 = { -1606.413f, -431.3163f, 39.4389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 10:
							*uParam3 = { -1609.0261f, -432.3987f, 39.4324f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 11:
							*uParam3 = { -1610.1085f, -429.7856f, 39.4357f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 12:
							*uParam3 = { -1607.4954f, -428.7032f, 39.4422f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 13:
							*uParam3 = { -1607.1783f, -433.164f, 39.434f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 14:
							*uParam3 = { -1610.8739f, -431.6333f, 39.4308f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
						case 15:
							*uParam3 = { -1609.3431f, -427.9378f, 39.4406f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 50.2883f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1609.6592f, -452.3079f, 37.1728f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 1:
							*uParam3 = { -1608.7354f, -452.6906f, 37.1158f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 2:
							*uParam3 = { -1610.0419f, -453.2318f, 37.1518f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 3:
							*uParam3 = { -1610.583f, -451.9252f, 37.2299f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 4:
							*uParam3 = { -1609.2765f, -451.384f, 37.1971f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 5:
							*uParam3 = { -1609.118f, -453.6145f, 37.099f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 6:
							*uParam3 = { -1610.9657f, -452.8491f, 37.2026f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 7:
							*uParam3 = { -1610.2003f, -451.0014f, 37.2573f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 8:
							*uParam3 = { -1608.3527f, -451.7667f, 37.1369f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 9:
							*uParam3 = { -1607.8114f, -453.0733f, 37.0792f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 10:
							*uParam3 = { -1610.4246f, -454.1557f, 37.1144f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 11:
							*uParam3 = { -1611.507f, -451.5425f, 37.2869f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 12:
							*uParam3 = { -1608.8938f, -450.4602f, 37.1946f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 13:
							*uParam3 = { -1608.5768f, -454.921f, 37.0064f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 14:
							*uParam3 = { -1612.2723f, -453.3903f, 37.2158f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
						case 15:
							*uParam3 = { -1610.7416f, -449.6948f, 37.3149f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 145.5856f;
							break;
					}
					break;
			}
			break;
		case 24:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 966.1377f, -1016.6282f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 1:
							*uParam3 = { 967.0616f, -1017.0109f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 2:
							*uParam3 = { 965.755f, -1017.5521f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 3:
							*uParam3 = { 965.2138f, -1016.2455f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 4:
							*uParam3 = { 966.5204f, -1015.7043f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 5:
							*uParam3 = { 966.6789f, -1017.9348f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 6:
							*uParam3 = { 964.8311f, -1017.1694f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 7:
							*uParam3 = { 965.5965f, -1015.3216f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 8:
							*uParam3 = { 967.4443f, -1016.087f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 9:
							*uParam3 = { 967.9855f, -1017.3936f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 10:
							*uParam3 = { 965.3723f, -1018.476f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 11:
							*uParam3 = { 964.2899f, -1015.8628f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 12:
							*uParam3 = { 966.9031f, -1014.7804f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 13:
							*uParam3 = { 967.2201f, -1019.2413f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 14:
							*uParam3 = { 963.5246f, -1017.7106f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
						case 15:
							*uParam3 = { 965.0553f, -1014.0151f, 39.8475f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 274.5574f;
							break;
					}
					break;
			}
			break;
		case 25:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 892.32f, -889.2527f, 25.9683f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 1:
							*uParam3 = { 893.2439f, -889.6354f, 26.0399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 2:
							*uParam3 = { 891.9373f, -890.1766f, 25.9386f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 3:
							*uParam3 = { 891.3961f, -888.87f, 25.8967f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 4:
							*uParam3 = { 892.7027f, -888.3288f, 25.998f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 5:
							*uParam3 = { 892.8612f, -890.5593f, 26.0102f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 6:
							*uParam3 = { 891.0134f, -889.7939f, 25.867f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 7:
							*uParam3 = { 891.7788f, -887.9461f, 25.9264f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 8:
							*uParam3 = { 893.6266f, -888.7115f, 26.0696f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 9:
							*uParam3 = { 894.1678f, -890.0181f, 26.1115f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 10:
							*uParam3 = { 891.5546f, -891.1005f, 25.909f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 11:
							*uParam3 = { 890.4722f, -888.4873f, 25.8251f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 12:
							*uParam3 = { 893.0854f, -887.4049f, 26.0278f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 13:
							*uParam3 = { 893.4024f, -891.8658f, 26.0522f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 14:
							*uParam3 = { 889.7069f, -890.3351f, 25.7658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
						case 15:
							*uParam3 = { 891.2376f, -886.6396f, 25.8847f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 84.7646f;
							break;
					}
					break;
			}
			break;
		case 26:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 817.4515f, -921.6305f, 25.042f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 1:
							*uParam3 = { 818.3754f, -922.0132f, 25.0658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 2:
							*uParam3 = { 817.0688f, -922.5544f, 25.0996f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 3:
							*uParam3 = { 816.5276f, -921.2478f, 25.0183f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 4:
							*uParam3 = { 817.8342f, -920.7066f, 24.9847f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 5:
							*uParam3 = { 817.9927f, -922.9371f, 25.1234f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 6:
							*uParam3 = { 816.1449f, -922.1717f, 25.0758f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 7:
							*uParam3 = { 816.9103f, -920.3239f, 24.961f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 8:
							*uParam3 = { 818.7581f, -921.0893f, 25.0084f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 9:
							*uParam3 = { 819.2993f, -922.3959f, 25.0897f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 10:
							*uParam3 = { 816.6861f, -923.4783f, 25.1572f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 11:
							*uParam3 = { 815.6037f, -920.8651f, 24.9946f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 12:
							*uParam3 = { 818.2169f, -919.7827f, 24.9064f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 13:
							*uParam3 = { 818.5339f, -924.2436f, 25.2048f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 14:
							*uParam3 = { 814.8384f, -922.7129f, 25.1096f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
						case 15:
							*uParam3 = { 816.3691f, -919.0174f, 24.8097f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 354.4193f;
							break;
					}
					break;
			}
			break;
		case 27:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 762.0056f, -755.2083f, 25.7564f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 1:
							*uParam3 = { 762.9295f, -755.591f, 25.7375f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 2:
							*uParam3 = { 761.6229f, -756.1322f, 25.721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 3:
							*uParam3 = { 761.0817f, -754.8256f, 25.9291f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 4:
							*uParam3 = { 762.3883f, -754.2844f, 25.7918f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 5:
							*uParam3 = { 762.5468f, -756.5149f, 25.7021f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 6:
							*uParam3 = { 760.699f, -755.7495f, 25.8918f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 7:
							*uParam3 = { 761.4644f, -753.9017f, 25.8107f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 8:
							*uParam3 = { 763.3122f, -754.6671f, 25.7728f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 9:
							*uParam3 = { 763.8534f, -755.9737f, 25.7185f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 10:
							*uParam3 = { 761.2402f, -757.0561f, 25.8379f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 11:
							*uParam3 = { 760.1578f, -754.4429f, 25.9459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 12:
							*uParam3 = { 762.771f, -753.3605f, 25.827f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 13:
							*uParam3 = { 763.088f, -757.8214f, 25.6479f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 14:
							*uParam3 = { 759.3925f, -756.2907f, 25.8807f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
						case 15:
							*uParam3 = { 760.9232f, -752.5952f, 26.0206f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 268.7337f;
							break;
					}
					break;
			}
			break;
		case 28:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 842.0649f, -1162.5195f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 1:
							*uParam3 = { 842.9888f, -1162.9022f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 2:
							*uParam3 = { 841.6822f, -1163.4434f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 3:
							*uParam3 = { 841.141f, -1162.1368f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 4:
							*uParam3 = { 842.4476f, -1161.5957f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 5:
							*uParam3 = { 842.6061f, -1163.826f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 6:
							*uParam3 = { 840.7583f, -1163.0607f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 7:
							*uParam3 = { 841.5237f, -1161.213f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 8:
							*uParam3 = { 843.3715f, -1161.9784f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 9:
							*uParam3 = { 843.9127f, -1163.2849f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 10:
							*uParam3 = { 841.2995f, -1164.3673f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 11:
							*uParam3 = { 840.2171f, -1161.7542f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 12:
							*uParam3 = { 842.8303f, -1160.6718f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 13:
							*uParam3 = { 842.4473f, -1159.533f, 24.3046f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 14:
							*uParam3 = { 839.5518f, -1163.6019f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
						case 15:
							*uParam3 = { 840.9825f, -1159.9064f, 24.2681f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0f;
							break;
					}
					break;
			}
			break;
		case 29:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 525.5429f, -1601.2756f, 28.186f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 1:
							*uParam3 = { 526.4668f, -1601.6583f, 28.1482f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 2:
							*uParam3 = { 525.1602f, -1602.1995f, 28.2064f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 3:
							*uParam3 = { 524.619f, -1600.893f, 28.3056f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 4:
							*uParam3 = { 525.9256f, -1600.3518f, 28.1874f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 5:
							*uParam3 = { 526.0841f, -1602.5822f, 28.1754f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 6:
							*uParam3 = { 524.2363f, -1601.8168f, 28.2451f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 7:
							*uParam3 = { 525.0017f, -1599.9691f, 28.3071f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 8:
							*uParam3 = { 526.8495f, -1600.7345f, 28.1269f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 9:
							*uParam3 = { 527.3907f, -1602.041f, 28.1433f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 10:
							*uParam3 = { 524.7775f, -1603.1234f, 28.2268f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 11:
							*uParam3 = { 523.6951f, -1600.5103f, 28.3103f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 12:
							*uParam3 = { 526.3083f, -1599.4279f, 28.2139f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 13:
							*uParam3 = { 526.6253f, -1603.8888f, 28.23f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 14:
							*uParam3 = { 522.3298f, -1601.358f, 28.3188f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
						case 15:
							*uParam3 = { 524.4605f, -1598.6625f, 28.3022f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 48.3497f;
							break;
					}
					break;
			}
			break;
		case 30:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 571.3085f, -1568.6774f, 27.5894f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 1:
							*uParam3 = { 572.2324f, -1569.06f, 27.5459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 2:
							*uParam3 = { 570.9258f, -1569.6012f, 27.5657f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 3:
							*uParam3 = { 570.3846f, -1568.2947f, 27.632f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 4:
							*uParam3 = { 571.6912f, -1567.7535f, 27.6131f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 5:
							*uParam3 = { 571.8497f, -1569.9839f, 27.5222f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 6:
							*uParam3 = { 570.0019f, -1569.2185f, 27.6079f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 7:
							*uParam3 = { 570.7673f, -1567.3708f, 27.6562f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 8:
							*uParam3 = { 572.6151f, -1568.1362f, 27.5695f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 9:
							*uParam3 = { 573.1563f, -1569.4427f, 27.5023f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 10:
							*uParam3 = { 570.5431f, -1570.5251f, 27.5416f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 11:
							*uParam3 = { 569.4607f, -1567.912f, 27.675f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 12:
							*uParam3 = { 572.0739f, -1566.8296f, 27.6367f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 13:
							*uParam3 = { 572.3909f, -1571.2905f, 27.4539f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 14:
							*uParam3 = { 568.5954f, -1566.76f, 27.6191f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
						case 15:
							*uParam3 = { 570.2261f, -1566.0642f, 27.7243f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 322.3951f;
							break;
					}
					break;
			}
			break;
		case 31:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 725.9998f, -1192.6427f, 23.2782f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 1:
							*uParam3 = { 726.9237f, -1193.0254f, 23.2773f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 2:
							*uParam3 = { 725.6171f, -1193.5665f, 23.2786f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 3:
							*uParam3 = { 725.0759f, -1192.26f, 23.2792f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 4:
							*uParam3 = { 726.3825f, -1191.7189f, 23.2778f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 5:
							*uParam3 = { 726.541f, -1193.9492f, 23.2777f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 6:
							*uParam3 = { 724.6932f, -1193.1838f, 23.2796f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 7:
							*uParam3 = { 725.4586f, -1191.3362f, 23.2788f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 8:
							*uParam3 = { 727.3064f, -1192.1016f, 23.2769f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 9:
							*uParam3 = { 727.8476f, -1193.4081f, 23.2764f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 10:
							*uParam3 = { 725.2344f, -1194.4905f, 23.279f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 11:
							*uParam3 = { 724.152f, -1191.8773f, 23.2801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 12:
							*uParam3 = { 726.7652f, -1190.7949f, 23.2775f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 13:
							*uParam3 = { 727.0822f, -1195.2559f, 23.2771f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 14:
							*uParam3 = { 723.3867f, -1193.7251f, 23.2809f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
						case 15:
							*uParam3 = { 724.9174f, -1190.0295f, 23.2794f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180.131f;
							break;
					}
					break;
			}
			break;
		case 32:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 504.7614f, -1497.0289f, 28.2886f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 1:
							*uParam3 = { 505.6852f, -1497.4116f, 28.2885f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 2:
							*uParam3 = { 504.3787f, -1497.9528f, 28.2887f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 3:
							*uParam3 = { 503.8375f, -1496.6462f, 28.2886f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 4:
							*uParam3 = { 505.144f, -1496.1051f, 28.2887f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 5:
							*uParam3 = { 505.3026f, -1498.3354f, 28.2886f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 6:
							*uParam3 = { 503.4548f, -1497.5701f, 28.2889f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 7:
							*uParam3 = { 504.2202f, -1495.7224f, 28.2888f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 8:
							*uParam3 = { 506.0679f, -1496.4878f, 28.2887f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 9:
							*uParam3 = { 506.6091f, -1497.7943f, 28.2884f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 10:
							*uParam3 = { 503.996f, -1498.8767f, 28.2889f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 11:
							*uParam3 = { 502.9136f, -1496.2635f, 28.2887f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 12:
							*uParam3 = { 505.5267f, -1495.1812f, 28.2887f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 13:
							*uParam3 = { 505.8437f, -1499.6421f, 28.2885f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 14:
							*uParam3 = { 502.1483f, -1498.1113f, 28.2889f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
						case 15:
							*uParam3 = { 503.679f, -1494.4158f, 28.2888f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 182.976f;
							break;
					}
					break;
			}
			break;
		case 33:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 477.1494f, -1545.453f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 1:
							*uParam3 = { 478.0733f, -1545.8357f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 2:
							*uParam3 = { 476.7667f, -1546.3768f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 3:
							*uParam3 = { 476.2255f, -1545.0703f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 4:
							*uParam3 = { 477.5321f, -1544.5292f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 5:
							*uParam3 = { 477.6906f, -1546.7595f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 6:
							*uParam3 = { 475.8428f, -1545.9941f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 7:
							*uParam3 = { 476.6082f, -1544.1465f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 8:
							*uParam3 = { 478.4559f, -1544.9119f, 28.2773f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 9:
							*uParam3 = { 478.9971f, -1546.2184f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 10:
							*uParam3 = { 476.384f, -1547.3008f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 11:
							*uParam3 = { 475.3016f, -1544.6876f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 12:
							*uParam3 = { 477.9147f, -1543.6052f, 28.2321f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 13:
							*uParam3 = { 478.2318f, -1548.0662f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 14:
							*uParam3 = { 474.5363f, -1546.5354f, 28.2826f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
						case 15:
							*uParam3 = { 476.067f, -1542.8398f, 28.2737f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 320.5585f;
							break;
					}
					break;
			}
			break;
		case 34:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -71.8173f, 6429.417f, 30.4394f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 1:
							*uParam3 = { -70.8934f, 6429.034f, 30.4393f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 2:
							*uParam3 = { -72.2f, 6428.493f, 30.4396f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 3:
							*uParam3 = { -72.7411f, 6429.8f, 30.4395f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 4:
							*uParam3 = { -71.4346f, 6430.341f, 30.4392f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 5:
							*uParam3 = { -71.2761f, 6428.1104f, 30.4395f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 6:
							*uParam3 = { -73.1238f, 6428.876f, 30.4397f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 7:
							*uParam3 = { -72.3585f, 6430.7236f, 30.4394f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 8:
							*uParam3 = { -70.5107f, 6429.958f, 30.4392f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 9:
							*uParam3 = { -69.9695f, 6428.652f, 30.4392f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 10:
							*uParam3 = { -72.5826f, 6427.5693f, 30.4398f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 11:
							*uParam3 = { -73.665f, 6430.182f, 30.4396f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 12:
							*uParam3 = { -71.0519f, 6431.2646f, 30.4392f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 13:
							*uParam3 = { -70.7349f, 6426.8037f, 30.4394f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 14:
							*uParam3 = { -74.4304f, 6428.3345f, 30.44f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
						case 15:
							*uParam3 = { -72.8997f, 6432.0303f, 30.4397f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 42.2785f;
							break;
					}
					break;
			}
			break;
		case 35:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -244.3722f, 6238.167f, 30.4896f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 1:
							*uParam3 = { -243.4483f, 6237.784f, 30.4898f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 2:
							*uParam3 = { -244.7549f, 6237.243f, 30.4899f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 3:
							*uParam3 = { -245.2961f, 6238.55f, 30.4894f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 4:
							*uParam3 = { -243.9895f, 6239.091f, 30.4893f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 5:
							*uParam3 = { -243.831f, 6236.8604f, 30.49f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 6:
							*uParam3 = { -245.6787f, 6237.626f, 30.4897f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 7:
							*uParam3 = { -244.9134f, 6239.4736f, 30.4892f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 8:
							*uParam3 = { -243.0656f, 6238.708f, 30.4895f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 9:
							*uParam3 = { -242.5244f, 6237.402f, 30.4899f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 10:
							*uParam3 = { -245.1375f, 6236.3193f, 30.4901f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 11:
							*uParam3 = { -246.2199f, 6238.932f, 30.4892f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 12:
							*uParam3 = { -243.6068f, 6240.0146f, 30.4892f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 13:
							*uParam3 = { -243.2898f, 6235.5537f, 30.4906f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 14:
							*uParam3 = { -246.9853f, 6237.0845f, 30.4898f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
						case 15:
							*uParam3 = { -245.4546f, 6240.7803f, 30.4892f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.4269f;
							break;
					}
					break;
			}
			break;
		case 36:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 2552.881f, 4671.039f, 32.954f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 1:
							*uParam3 = { 2553.805f, 4670.6562f, 32.938f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 2:
							*uParam3 = { 2552.4985f, 4670.115f, 33.0451f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 3:
							*uParam3 = { 2551.9573f, 4671.422f, 33.066f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 4:
							*uParam3 = { 2553.2637f, 4671.963f, 32.9388f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 5:
							*uParam3 = { 2553.4224f, 4669.7324f, 32.9628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 6:
							*uParam3 = { 2551.5745f, 4670.498f, 33.0768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 7:
							*uParam3 = { 2552.3398f, 4672.3457f, 32.9561f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 8:
							*uParam3 = { 2554.1877f, 4671.58f, 32.9226f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 9:
							*uParam3 = { 2554.7288f, 4670.274f, 32.922f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 10:
							*uParam3 = { 2552.1157f, 4669.1914f, 33.0768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 11:
							*uParam3 = { 2551.0334f, 4671.804f, 33.0768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 12:
							*uParam3 = { 2553.6465f, 4672.8867f, 32.9239f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 13:
							*uParam3 = { 2553.9634f, 4668.426f, 32.993f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 14:
							*uParam3 = { 2550.268f, 4669.9565f, 33.0768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
						case 15:
							*uParam3 = { 2551.7988f, 4673.6523f, 32.9586f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 26.0471f;
							break;
					}
					break;
			}
			break;
		case 37:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 2465.8596f, 1589.9851f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 1:
							*uParam3 = { 2466.7834f, 1589.6024f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 2:
							*uParam3 = { 2465.477f, 1589.0613f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 3:
							*uParam3 = { 2464.9358f, 1590.3678f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 4:
							*uParam3 = { 2466.2422f, 1590.9089f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 5:
							*uParam3 = { 2466.401f, 1588.6786f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 6:
							*uParam3 = { 2464.553f, 1589.444f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 7:
							*uParam3 = { 2465.3184f, 1591.2916f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 8:
							*uParam3 = { 2467.1663f, 1590.5262f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 9:
							*uParam3 = { 2467.7073f, 1589.2197f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 10:
							*uParam3 = { 2465.0942f, 1588.1373f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 11:
							*uParam3 = { 2464.012f, 1590.7505f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 12:
							*uParam3 = { 2466.625f, 1591.8329f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 13:
							*uParam3 = { 2466.942f, 1587.372f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 14:
							*uParam3 = { 2463.2466f, 1588.9027f, 31.7992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
						case 15:
							*uParam3 = { 2464.7773f, 1592.5983f, 31.7204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 270.418f;
							break;
					}
					break;
			}
			break;
		case 38:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -2205.0527f, 4247.2637f, 46.6545f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 1:
							*uParam3 = { -2204.129f, 4246.881f, 46.7531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 2:
							*uParam3 = { -2205.4353f, 4246.34f, 46.715f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 3:
							*uParam3 = { -2205.9766f, 4247.6465f, 46.6086f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 4:
							*uParam3 = { -2204.6702f, 4248.1875f, 46.6173f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 5:
							*uParam3 = { -2204.5115f, 4245.957f, 46.8169f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 6:
							*uParam3 = { -2206.3594f, 4246.7227f, 46.6458f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 7:
							*uParam3 = { -2205.594f, 4248.5703f, 46.5714f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 8:
							*uParam3 = { -2203.746f, 4247.8047f, 46.6892f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 9:
							*uParam3 = { -2203.205f, 4246.4985f, 46.8862f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 10:
							*uParam3 = { -2205.818f, 4245.416f, 46.7749f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 11:
							*uParam3 = { -2206.9004f, 4248.029f, 46.5628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 12:
							*uParam3 = { -2204.2874f, 4249.1113f, 46.5801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 13:
							*uParam3 = { -2203.9705f, 4244.6504f, 47.1452f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 14:
							*uParam3 = { -2207.6658f, 4246.181f, 46.6272f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
						case 15:
							*uParam3 = { -2206.135f, 4249.877f, 46.4884f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 37.6908f;
							break;
					}
					break;
			}
			break;
	}
}

void func_68(int iParam0, int iParam1, int iParam2, var uParam3)//Position - 0x2232D3
{
	switch (iParam0)
	{
		case 1:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -775.251f, 308.9036f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 1:
							*uParam3 = { -774.6043f, 308.6357f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 2:
							*uParam3 = { -775.5189f, 308.2569f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 3:
							*uParam3 = { -775.8978f, 309.1715f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 4:
							*uParam3 = { -774.9832f, 309.5504f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 5:
							*uParam3 = { -774.8722f, 307.989f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 6:
							*uParam3 = { -776.1656f, 308.5248f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 7:
							*uParam3 = { -775.6299f, 309.8182f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 8:
							*uParam3 = { -774.3364f, 309.2825f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 9:
							*uParam3 = { -773.9576f, 308.3679f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 10:
							*uParam3 = { -775.7868f, 307.6102f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 11:
							*uParam3 = { -776.5445f, 309.4394f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 12:
							*uParam3 = { -774.7153f, 310.1971f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 13:
							*uParam3 = { -774.4933f, 307.0745f, 84.6999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 14:
							*uParam3 = { -777.0802f, 308.146f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
						case 15:
							*uParam3 = { -776.0087f, 310.7328f, 84.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 192.094f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -795.8608f, 305.5297f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 1:
							*uParam3 = { -794.9369f, 305.147f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 2:
							*uParam3 = { -796.2435f, 304.6058f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 3:
							*uParam3 = { -796.7847f, 305.9124f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 4:
							*uParam3 = { -795.4781f, 306.4536f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 5:
							*uParam3 = { -795.3196f, 304.2231f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 6:
							*uParam3 = { -797.1674f, 304.9885f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 7:
							*uParam3 = { -796.402f, 306.8362f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 8:
							*uParam3 = { -794.5542f, 306.0709f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 9:
							*uParam3 = { -794.013f, 304.7643f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 10:
							*uParam3 = { -796.6262f, 303.6819f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 11:
							*uParam3 = { -797.7086f, 306.2951f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 12:
							*uParam3 = { -793.8954f, 306.7774f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 13:
							*uParam3 = { -794.7784f, 302.9166f, 84.7047f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 14:
							*uParam3 = { -798.4739f, 304.4473f, 84.7015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
						case 15:
							*uParam3 = { -797.5432f, 306.9428f, 84.7034f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 180f;
							break;
					}
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -259.7942f, -974.291f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 1:
							*uParam3 = { -259.1475f, -974.5589f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 2:
							*uParam3 = { -260.0621f, -974.9377f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 3:
							*uParam3 = { -260.4409f, -974.0231f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 4:
							*uParam3 = { -259.5263f, -973.6443f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 5:
							*uParam3 = { -259.4153f, -975.2056f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 6:
							*uParam3 = { -260.7088f, -974.6699f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 7:
							*uParam3 = { -260.173f, -973.3764f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 8:
							*uParam3 = { -258.8796f, -973.9122f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 9:
							*uParam3 = { -258.5008f, -974.8268f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 10:
							*uParam3 = { -260.33f, -975.5845f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 11:
							*uParam3 = { -261.0876f, -973.7552f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 12:
							*uParam3 = { -259.2584f, -972.9976f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 13:
							*uParam3 = { -259.0365f, -976.1202f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 14:
							*uParam3 = { -260.7234f, -976.2487f, 30.2195f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
						case 15:
							*uParam3 = { -260.5518f, -972.7619f, 30.2196f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 212.026f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -269.9766f, -999.1443f, 25.2602f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 1:
							*uParam3 = { -269.0527f, -999.527f, 25.4254f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 2:
							*uParam3 = { -270.3593f, -1000.0682f, 25.253f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 3:
							*uParam3 = { -270.9005f, -998.7617f, 25.095f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 4:
							*uParam3 = { -269.5939f, -998.2205f, 25.2673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 5:
							*uParam3 = { -269.4354f, -1000.4509f, 25.4182f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 6:
							*uParam3 = { -271.2831f, -999.6855f, 25.0878f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 7:
							*uParam3 = { -270.5178f, -997.8378f, 25.1021f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 8:
							*uParam3 = { -268.67f, -998.6031f, 25.4325f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 9:
							*uParam3 = { -268.1288f, -999.9097f, 25.579f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 10:
							*uParam3 = { -270.742f, -1000.9921f, 25.2459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 11:
							*uParam3 = { -271.8243f, -998.379f, 24.9298f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 12:
							*uParam3 = { -269.2112f, -997.2966f, 25.2745f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 13:
							*uParam3 = { -268.8942f, -1001.7574f, 25.5658f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 14:
							*uParam3 = { -272.5897f, -1000.2267f, 24.9155f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
						case 15:
							*uParam3 = { -271.059f, -996.5312f, 24.944f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 251.25f;
							break;
					}
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1441.4354f, -547.3218f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 1:
							*uParam3 = { -1440.7887f, -547.5897f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 2:
							*uParam3 = { -1441.7032f, -547.9686f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 3:
							*uParam3 = { -1442.0822f, -547.054f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 4:
							*uParam3 = { -1441.1676f, -546.6751f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 5:
							*uParam3 = { -1441.0566f, -548.2365f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 6:
							*uParam3 = { -1442.35f, -547.7007f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 7:
							*uParam3 = { -1441.8142f, -546.4072f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 8:
							*uParam3 = { -1440.5209f, -546.943f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 9:
							*uParam3 = { -1440.142f, -547.8576f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 10:
							*uParam3 = { -1441.9712f, -548.6153f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 11:
							*uParam3 = { -1442.7289f, -546.7861f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 12:
							*uParam3 = { -1440.8997f, -546.0284f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 13:
							*uParam3 = { -1440.6777f, -549.151f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 14:
							*uParam3 = { -1443.2646f, -548.0795f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
						case 15:
							*uParam3 = { -1439.793f, -546.6927f, 33.7424f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 217.7307f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -1458.3235f, -498.347f, 31.7257f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 1:
							*uParam3 = { -1457.3997f, -498.7297f, 31.6445f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 2:
							*uParam3 = { -1458.7062f, -499.2709f, 31.6635f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 3:
							*uParam3 = { -1459.2473f, -497.9643f, 31.8069f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 4:
							*uParam3 = { -1457.9408f, -497.4231f, 31.7879f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 5:
							*uParam3 = { -1457.7823f, -499.6535f, 31.5824f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 6:
							*uParam3 = { -1459.63f, -498.8882f, 31.7447f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 7:
							*uParam3 = { -1458.8646f, -497.0404f, 31.8437f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 8:
							*uParam3 = { -1457.017f, -497.8058f, 31.7067f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 9:
							*uParam3 = { -1456.4757f, -499.1124f, 31.5673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 10:
							*uParam3 = { -1459.0889f, -500.1947f, 31.6014f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 11:
							*uParam3 = { -1460.1713f, -497.5816f, 31.8358f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 12:
							*uParam3 = { -1457.5581f, -496.4992f, 31.85f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 13:
							*uParam3 = { -1456.641f, -500.0601f, 31.4408f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 14:
							*uParam3 = { -1460.9366f, -499.4294f, 31.7638f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
						case 15:
							*uParam3 = { -1459.4059f, -495.7339f, 31.9459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 336.7638f;
							break;
					}
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -918.2479f, -458.6036f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 1:
							*uParam3 = { -917.6012f, -458.8715f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 2:
							*uParam3 = { -918.5158f, -459.2503f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 3:
							*uParam3 = { -919.7947f, -456.8357f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 4:
							*uParam3 = { -917.98f, -457.9568f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 5:
							*uParam3 = { -917.8691f, -459.5182f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 6:
							*uParam3 = { -919.1625f, -458.9824f, 38.3807f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 7:
							*uParam3 = { -918.6268f, -457.689f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 8:
							*uParam3 = { -917.3333f, -458.2247f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 9:
							*uParam3 = { -916.9545f, -459.1393f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 10:
							*uParam3 = { -918.7837f, -459.897f, 38.3807f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 11:
							*uParam3 = { -919.5414f, -457.55f, 38.3807f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 12:
							*uParam3 = { -917.7122f, -457.3102f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 13:
							*uParam3 = { -916.2902f, -458.6327f, 38.4738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 14:
							*uParam3 = { -920.0771f, -459.3612f, 37.7211f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
						case 15:
							*uParam3 = { -919.0056f, -456.7744f, 38.5999f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 107.1204f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -826.7952f, -439.5775f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 1:
							*uParam3 = { -825.8713f, -439.9602f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 2:
							*uParam3 = { -827.1779f, -440.5014f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 3:
							*uParam3 = { -827.7191f, -439.1948f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 4:
							*uParam3 = { -826.4125f, -438.6536f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 5:
							*uParam3 = { -826.254f, -440.884f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 6:
							*uParam3 = { -828.1017f, -440.1187f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 7:
							*uParam3 = { -827.3364f, -438.2709f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 8:
							*uParam3 = { -825.4886f, -439.0363f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 9:
							*uParam3 = { -824.9474f, -440.3429f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 10:
							*uParam3 = { -827.5605f, -441.4252f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 11:
							*uParam3 = { -828.6429f, -438.8121f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 12:
							*uParam3 = { -826.0298f, -437.7297f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 13:
							*uParam3 = { -825.7128f, -442.1906f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 14:
							*uParam3 = { -829.4083f, -440.6599f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
						case 15:
							*uParam3 = { -827.8776f, -436.9644f, 35.6399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 120f;
							break;
					}
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -49.7012f, -585.056f, 35.8638f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 1:
							*uParam3 = { -50.3479f, -584.7881f, 35.841f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 2:
							*uParam3 = { -49.9691f, -585.7027f, 35.864f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 3:
							*uParam3 = { -49.0545f, -585.3239f, 36.3023f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 4:
							*uParam3 = { -49.4333f, -584.4092f, 35.9145f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 5:
							*uParam3 = { -49.3224f, -585.9706f, 36.3023f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 6:
							*uParam3 = { -50.6158f, -585.4348f, 35.7679f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 7:
							*uParam3 = { -50.0801f, -584.1414f, 35.9141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 8:
							*uParam3 = { -48.7866f, -584.6771f, 36.3023f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 9:
							*uParam3 = { -48.4078f, -585.5917f, 36.7388f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 10:
							*uParam3 = { -50.237f, -586.3494f, 35.8641f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 11:
							*uParam3 = { -50.9947f, -584.5202f, 35.8405f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 12:
							*uParam3 = { -49.1655f, -583.7625f, 35.9876f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 13:
							*uParam3 = { -48.9436f, -586.8851f, 36.7388f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 14:
							*uParam3 = { -51.5304f, -585.8137f, 35.6947f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
						case 15:
							*uParam3 = { -50.4589f, -583.2268f, 35.9867f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 65.4321f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -25.4888f, -624.5776f, 34.5573f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 1:
							*uParam3 = { -24.5649f, -624.9603f, 34.6159f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 2:
							*uParam3 = { -25.8715f, -625.5015f, 34.5547f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 3:
							*uParam3 = { -26.4126f, -624.1949f, 34.4986f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 4:
							*uParam3 = { -25.1061f, -623.6537f, 34.5598f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 5:
							*uParam3 = { -24.9476f, -625.8842f, 34.6134f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 6:
							*uParam3 = { -26.7953f, -625.1188f, 34.496f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 7:
							*uParam3 = { -26.03f, -623.2711f, 34.5012f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 8:
							*uParam3 = { -24.1822f, -624.0364f, 34.6185f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 9:
							*uParam3 = { -23.641f, -625.343f, 34.6746f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 10:
							*uParam3 = { -26.2541f, -626.4254f, 34.689f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 11:
							*uParam3 = { -27.3365f, -623.8123f, 34.4399f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 12:
							*uParam3 = { -24.7234f, -622.7299f, 34.6931f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 13:
							*uParam3 = { -24.4064f, -627.1907f, 34.8094f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 14:
							*uParam3 = { -28.1019f, -625.66f, 34.4365f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
						case 15:
							*uParam3 = { -26.5712f, -621.9645f, 34.5789f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 247.1257f;
							break;
					}
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -935.457f, -386.0929f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 1:
							*uParam3 = { -934.5331f, -386.4756f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 2:
							*uParam3 = { -935.8397f, -387.0168f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 3:
							*uParam3 = { -936.3809f, -385.7102f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 4:
							*uParam3 = { -935.0743f, -385.169f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 5:
							*uParam3 = { -934.9158f, -387.3995f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 6:
							*uParam3 = { -936.7635f, -386.6341f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 7:
							*uParam3 = { -935.9982f, -384.7864f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 8:
							*uParam3 = { -934.1504f, -385.5517f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 9:
							*uParam3 = { -933.6092f, -386.8583f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 10:
							*uParam3 = { -936.2224f, -387.9407f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 11:
							*uParam3 = { -937.3047f, -385.3275f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 12:
							*uParam3 = { -934.6916f, -384.2452f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 13:
							*uParam3 = { -933.7746f, -388.106f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 14:
							*uParam3 = { -938.0701f, -387.1753f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
						case 15:
							*uParam3 = { -936.5394f, -383.4798f, 37.9613f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 116.5503f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -875.3662f, -361.2026f, 35.0485f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 205.6862f;
							break;
						case 1:
							*uParam3 = { -872.5667f, -368.9275f, 37.0642f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 2:
							*uParam3 = { -873.8732f, -369.4687f, 37.0309f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 3:
							*uParam3 = { -874.4144f, -368.1621f, 36.6811f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 4:
							*uParam3 = { -873.1078f, -367.6209f, 36.7117f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 5:
							*uParam3 = { -872.9493f, -369.8513f, 37.2224f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 6:
							*uParam3 = { -874.7971f, -369.086f, 36.8393f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 7:
							*uParam3 = { -874.0317f, -367.2383f, 36.5221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 8:
							*uParam3 = { -872.184f, -368.0036f, 36.9013f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 9:
							*uParam3 = { -871.6428f, -369.3102f, 37.2547f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 10:
							*uParam3 = { -874.2559f, -370.3925f, 37.1891f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 11:
							*uParam3 = { -875.3383f, -367.7794f, 36.4895f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 12:
							*uParam3 = { -872.7252f, -366.6971f, 36.5478f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 13:
							*uParam3 = { -872.4081f, -371.1579f, 37.5722f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 14:
							*uParam3 = { -876.1036f, -369.6272f, 38.4312f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 15:
							*uParam3 = { -874.5729f, -365.9317f, 36.1686f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
					}
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -618.3904f, 34.805f, 42.5368f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 1:
							*uParam3 = { -617.4666f, 34.4223f, 42.5312f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 2:
							*uParam3 = { -618.7731f, 33.8811f, 42.531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 3:
							*uParam3 = { -619.3143f, 35.1877f, 42.5442f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 4:
							*uParam3 = { -618.0078f, 35.7289f, 42.5547f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 5:
							*uParam3 = { -617.8492f, 33.4984f, 42.5309f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 6:
							*uParam3 = { -619.697f, 34.2638f, 42.5311f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 7:
							*uParam3 = { -618.9316f, 36.1115f, 42.5622f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 8:
							*uParam3 = { -617.0839f, 35.3462f, 42.5472f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 9:
							*uParam3 = { -616.5427f, 34.0396f, 42.531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 10:
							*uParam3 = { -619.1558f, 32.9572f, 42.5307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 11:
							*uParam3 = { -620.2382f, 35.5704f, 42.5517f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 12:
							*uParam3 = { -617.6251f, 36.6528f, 42.5727f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 13:
							*uParam3 = { -617.308f, 32.1919f, 42.5304f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 14:
							*uParam3 = { -621.0035f, 33.7226f, 42.5309f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
						case 15:
							*uParam3 = { -620.0728f, 36.5181f, 42.531f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 177.6474f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -636.8297f, 57.3226f, 42.9195f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 1:
							*uParam3 = { -635.9058f, 56.94f, 42.8483f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 2:
							*uParam3 = { -637.2124f, 56.3988f, 42.8155f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 3:
							*uParam3 = { -637.7536f, 57.7053f, 43.0559f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 4:
							*uParam3 = { -636.447f, 58.2465f, 43.0254f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 5:
							*uParam3 = { -636.2885f, 56.0161f, 42.7121f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 6:
							*uParam3 = { -638.1363f, 56.7815f, 42.8459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 7:
							*uParam3 = { -637.3709f, 58.6292f, 43.2265f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 8:
							*uParam3 = { -635.5231f, 57.8638f, 42.9007f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 9:
							*uParam3 = { -634.9819f, 56.5573f, 42.738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 10:
							*uParam3 = { -637.5951f, 55.4749f, 42.605f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 11:
							*uParam3 = { -638.6775f, 58.088f, 43.2293f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 12:
							*uParam3 = { -636.0643f, 59.1704f, 43.1529f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 13:
							*uParam3 = { -635.7473f, 54.7095f, 42.585f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 14:
							*uParam3 = { -639.4428f, 56.2403f, 42.7263f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
						case 15:
							*uParam3 = { -637.9121f, 59.9357f, 43.5067f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 95.6182f;
							break;
					}
					break;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 281.319f, -159.5767f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 1:
							*uParam3 = { 282.2429f, -159.9594f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 2:
							*uParam3 = { 280.9363f, -160.5006f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 3:
							*uParam3 = { 280.3951f, -159.194f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 4:
							*uParam3 = { 281.7017f, -158.6528f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 5:
							*uParam3 = { 281.8602f, -160.8833f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 6:
							*uParam3 = { 280.0125f, -160.1179f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 7:
							*uParam3 = { 280.7778f, -158.2702f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 8:
							*uParam3 = { 282.6256f, -159.0355f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 9:
							*uParam3 = { 283.1668f, -160.3421f, 62.8223f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 10:
							*uParam3 = { 280.5536f, -161.4245f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 11:
							*uParam3 = { 279.4713f, -158.8114f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 12:
							*uParam3 = { 282.0844f, -157.729f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 13:
							*uParam3 = { 282.4014f, -162.1898f, 62.8223f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 14:
							*uParam3 = { 278.7059f, -160.6591f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
						case 15:
							*uParam3 = { 280.2366f, -156.9636f, 62.6221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 73.2445f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 282.2822f, -147.192f, 64.0771f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 1:
							*uParam3 = { 283.2061f, -147.5747f, 64.058f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 2:
							*uParam3 = { 281.8995f, -148.1159f, 64.078f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 3:
							*uParam3 = { 281.3583f, -146.8094f, 64.0962f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 4:
							*uParam3 = { 282.6649f, -146.2682f, 64.0992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 5:
							*uParam3 = { 282.8234f, -148.4986f, 64.0588f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 6:
							*uParam3 = { 280.9756f, -147.7332f, 64.0633f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 7:
							*uParam3 = { 281.741f, -145.8855f, 64.1508f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 8:
							*uParam3 = { 283.5887f, -146.6509f, 64.0572f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 9:
							*uParam3 = { 284.1299f, -147.9574f, 64.0389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 967.9026f;
							break;
						case 10:
							*uParam3 = { 281.5168f, -149.0398f, 63.9889f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 11:
							*uParam3 = { 280.4344f, -146.4267f, 64.1154f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 12:
							*uParam3 = { 283.0475f, -145.3443f, 64.1934f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 13:
							*uParam3 = { 283.3645f, -149.8051f, 64.0406f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 14:
							*uParam3 = { 279.6691f, -148.2744f, 63.9174f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
						case 15:
							*uParam3 = { 281.1998f, -144.5789f, 64.3075f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 67.9026f;
							break;
					}
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 2.2989f, 33.8131f, 70.1142f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 1:
							*uParam3 = { 3.2228f, 33.4304f, 70.0723f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 2:
							*uParam3 = { 1.9162f, 32.8892f, 70.0587f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 3:
							*uParam3 = { 1.375f, 34.1957f, 70.148f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 4:
							*uParam3 = { 2.6816f, 34.7369f, 70.3903f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 5:
							*uParam3 = { 2.8401f, 32.5065f, 70.0314f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 6:
							*uParam3 = { 0.9923f, 33.2719f, 70.0861f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 7:
							*uParam3 = { 1.7577f, 35.1196f, 70.3903f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 8:
							*uParam3 = { 3.6054f, 34.3543f, 70.3903f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 9:
							*uParam3 = { 4.1466f, 33.0477f, 70.0304f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 10:
							*uParam3 = { 1.5335f, 31.9653f, 70.0578f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 11:
							*uParam3 = { 0.4511f, 34.5784f, 70.1628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 12:
							*uParam3 = { 3.0643f, 35.6608f, 70.5353f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 13:
							*uParam3 = { 3.3813f, 31.2f, 70.0082f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 14:
							*uParam3 = { -0.3142f, 32.7307f, 70.1124f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
						case 15:
							*uParam3 = { 1.2165f, 36.4262f, 70.5353f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 157.6513f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -11.608f, 37.0248f, 70.6536f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 1:
							*uParam3 = { -10.6841f, 36.6422f, 70.588f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 2:
							*uParam3 = { -11.9906f, 36.101f, 70.6454f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 3:
							*uParam3 = { -12.5318f, 37.4075f, 70.7141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 4:
							*uParam3 = { -11.2253f, 37.9487f, 70.6618f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 5:
							*uParam3 = { -11.0668f, 35.7183f, 70.5798f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 6:
							*uParam3 = { -12.9145f, 36.4836f, 70.6992f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 7:
							*uParam3 = { -12.1491f, 38.3314f, 70.7275f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 8:
							*uParam3 = { -10.3014f, 37.566f, 70.5962f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 9:
							*uParam3 = { -9.7602f, 36.2595f, 70.5223f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 10:
							*uParam3 = { -12.3733f, 35.1771f, 70.6317f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 11:
							*uParam3 = { -13.4557f, 37.7902f, 70.7561f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 12:
							*uParam3 = { -10.8426f, 38.8726f, 70.646f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 13:
							*uParam3 = { -10.5256f, 34.4117f, 70.5059f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 14:
							*uParam3 = { -14.2211f, 35.9425f, 70.7303f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
						case 15:
							*uParam3 = { -12.6903f, 39.6379f, 70.712f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 161.168f;
							break;
					}
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 10.4945f, 84.7033f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 1:
							*uParam3 = { 11.4184f, 84.3206f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 2:
							*uParam3 = { 10.1118f, 83.7794f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 3:
							*uParam3 = { 9.5706f, 85.086f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 4:
							*uParam3 = { 10.8772f, 85.6272f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 5:
							*uParam3 = { 11.0357f, 83.3968f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 6:
							*uParam3 = { 9.188f, 84.1621f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 7:
							*uParam3 = { 9.9533f, 86.0099f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 8:
							*uParam3 = { 11.8011f, 85.2445f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 9:
							*uParam3 = { 12.3423f, 83.9379f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 10:
							*uParam3 = { 10.3292f, 82.8556f, 77.4349f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 11:
							*uParam3 = { 8.6468f, 85.4687f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 12:
							*uParam3 = { 11.2599f, 86.5511f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 13:
							*uParam3 = { 11.5769f, 82.0902f, 77.4349f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 14:
							*uParam3 = { 12.8814f, 85.5209f, 77.398f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
						case 15:
							*uParam3 = { 9.4121f, 87.3164f, 77.3977f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 339.648f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { 31.4004f, 80.4085f, 74.0801f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 1:
							*uParam3 = { 32.3243f, 80.0259f, 74.1186f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 2:
							*uParam3 = { 31.0177f, 79.4847f, 73.9918f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 3:
							*uParam3 = { 30.4765f, 80.7912f, 74.0317f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 4:
							*uParam3 = { 31.7831f, 81.3324f, 74.1504f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 5:
							*uParam3 = { 31.9416f, 79.102f, 74.0303f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 6:
							*uParam3 = { 30.0938f, 79.8674f, 73.9532f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 7:
							*uParam3 = { 30.8592f, 81.7151f, 74.0837f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 8:
							*uParam3 = { 32.7069f, 80.9497f, 74.221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 9:
							*uParam3 = { 33.2481f, 79.6432f, 74.1615f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 10:
							*uParam3 = { 30.635f, 78.5608f, 73.9176f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 11:
							*uParam3 = { 29.5526f, 81.1739f, 73.965f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 12:
							*uParam3 = { 32.1657f, 82.2563f, 74.2285f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 13:
							*uParam3 = { 32.4828f, 77.7954f, 73.9804f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 14:
							*uParam3 = { 28.7873f, 79.3262f, 73.8372f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
						case 15:
							*uParam3 = { 30.318f, 83.0216f, 74.0691f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 252.0891f;
							break;
					}
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -512.2874f, 112.6906f, 62.3215f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 1:
							*uParam3 = { -511.3635f, 112.3079f, 62.3472f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 2:
							*uParam3 = { -512.67f, 111.7667f, 62.3305f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 3:
							*uParam3 = { -513.2112f, 113.0733f, 62.2966f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 4:
							*uParam3 = { -511.9047f, 113.6145f, 62.3406f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 5:
							*uParam3 = { -511.7462f, 111.384f, 62.3561f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 6:
							*uParam3 = { -513.5939f, 112.1494f, 62.3067f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 7:
							*uParam3 = { -512.8286f, 113.9971f, 62.3223f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 8:
							*uParam3 = { -510.9808f, 113.2318f, 62.331f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 9:
							*uParam3 = { -510.4396f, 111.9252f, 62.3728f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 10:
							*uParam3 = { -513.0527f, 110.8428f, 62.3395f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 11:
							*uParam3 = { -514.1351f, 113.4559f, 62.3043f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 12:
							*uParam3 = { -511.522f, 114.5383f, 62.3403f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 13:
							*uParam3 = { -511.205f, 110.0775f, 62.6004f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 14:
							*uParam3 = { -514.9005f, 111.6082f, 62.2985f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
						case 15:
							*uParam3 = { -513.3698f, 115.3037f, 62.3033f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 2.8528f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -500.9369f, 83.8745f, 55.2034f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 1:
							*uParam3 = { -500.013f, 83.4918f, 55.1287f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 2:
							*uParam3 = { -501.3196f, 82.9506f, 55.2308f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 3:
							*uParam3 = { -501.8608f, 84.2571f, 55.2781f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 4:
							*uParam3 = { -500.5542f, 84.7983f, 55.176f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 5:
							*uParam3 = { -500.3957f, 82.5679f, 55.1561f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 6:
							*uParam3 = { -502.2435f, 83.3333f, 55.3054f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 7:
							*uParam3 = { -501.4781f, 85.181f, 55.2504f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 8:
							*uParam3 = { -499.6304f, 84.4157f, 55.1013f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 9:
							*uParam3 = { -499.0892f, 83.1091f, 55.054f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 10:
							*uParam3 = { -501.7023f, 82.0267f, 55.2577f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 11:
							*uParam3 = { -502.7847f, 84.6398f, 55.3524f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 12:
							*uParam3 = { -500.1716f, 85.7222f, 55.1484f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 13:
							*uParam3 = { -499.8546f, 81.2614f, 55.2988f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 14:
							*uParam3 = { -503.55f, 82.7921f, 55.407f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
						case 15:
							*uParam3 = { -502.0193f, 86.4876f, 55.297f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 86.0801f;
							break;
					}
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -197.643f, 92.668f, 68.5803f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 1:
							*uParam3 = { -196.7191f, 92.2853f, 68.5959f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 2:
							*uParam3 = { -198.0257f, 91.7441f, 68.5993f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 3:
							*uParam3 = { -198.5669f, 93.0507f, 68.5693f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 4:
							*uParam3 = { -197.2603f, 93.5919f, 68.5707f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 5:
							*uParam3 = { -197.1018f, 91.3615f, 68.6217f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 6:
							*uParam3 = { -198.9496f, 92.1268f, 68.581f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 7:
							*uParam3 = { -198.1842f, 93.9746f, 68.5515f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 8:
							*uParam3 = { -196.3365f, 93.2092f, 68.5796f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 9:
							*uParam3 = { -195.7952f, 91.9027f, 68.6192f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 10:
							*uParam3 = { -198.4084f, 90.8203f, 68.6245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 11:
							*uParam3 = { -199.4908f, 93.4334f, 68.5451f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 12:
							*uParam3 = { -196.8776f, 94.5158f, 68.5579f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 13:
							*uParam3 = { -196.5606f, 90.0549f, 68.673f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 14:
							*uParam3 = { -200.2561f, 91.5856f, 68.7312f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
						case 15:
							*uParam3 = { -198.7254f, 95.2811f, 68.5409f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 33.4936f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -215.6974f, 39.4492f, 58.9449f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 1:
							*uParam3 = { -214.7735f, 39.0666f, 58.8928f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 2:
							*uParam3 = { -216.0801f, 38.5254f, 58.7767f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 3:
							*uParam3 = { -216.6213f, 39.8319f, 58.8993f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 4:
							*uParam3 = { -215.3147f, 40.3731f, 59.1054f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 5:
							*uParam3 = { -215.1562f, 38.1427f, 58.753f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 6:
							*uParam3 = { -217.0039f, 38.908f, 58.7312f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 7:
							*uParam3 = { -216.2386f, 40.7558f, 59.1165f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 8:
							*uParam3 = { -214.3908f, 39.9904f, 59.0325f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 9:
							*uParam3 = { -213.8496f, 38.6839f, 58.8199f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 10:
							*uParam3 = { -216.4628f, 37.6015f, 58.6086f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 11:
							*uParam3 = { -217.5452f, 40.2146f, 58.9768f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 12:
							*uParam3 = { -214.932f, 41.297f, 59.23f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 13:
							*uParam3 = { -214.615f, 36.8361f, 58.5404f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 14:
							*uParam3 = { -218.3105f, 38.3668f, 58.53f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
						case 15:
							*uParam3 = { -216.7798f, 42.0623f, 59.4237f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 91.5407f;
							break;
					}
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -630.2797f, 169.4221f, 60.2377f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 1:
							*uParam3 = { -629.3558f, 169.0394f, 60.1491f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 2:
							*uParam3 = { -630.6624f, 168.4982f, 60.2157f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 3:
							*uParam3 = { -631.2036f, 169.8047f, 60.3263f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 4:
							*uParam3 = { -629.897f, 170.3459f, 60.2597f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 5:
							*uParam3 = { -629.7385f, 168.1155f, 60.1275f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 6:
							*uParam3 = { -631.5862f, 168.8809f, 60.2412f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 7:
							*uParam3 = { -630.8209f, 170.7286f, 60.3482f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 8:
							*uParam3 = { -628.9731f, 169.9632f, 60.1711f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 9:
							*uParam3 = { -628.4319f, 168.6567f, 60.1501f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 10:
							*uParam3 = { -633.545f, 169.3743f, 60.3789f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 11:
							*uParam3 = { -632.1274f, 170.1874f, 60.4035f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 12:
							*uParam3 = { -633.3143f, 170.6698f, 60.4816f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 13:
							*uParam3 = { -631.6973f, 167.909f, 60.1468f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 14:
							*uParam3 = { -632.8928f, 168.3397f, 60.3037f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
						case 15:
							*uParam3 = { -634.3621f, 168.4352f, 60.3015f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 93.8352f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -631.4269f, 152.4149f, 56.0771f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 1:
							*uParam3 = { -630.5031f, 152.0322f, 55.9425f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 2:
							*uParam3 = { -631.8096f, 151.491f, 56.104f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 3:
							*uParam3 = { -632.3508f, 152.7976f, 56.245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 4:
							*uParam3 = { -631.0443f, 153.3388f, 56.0688f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 5:
							*uParam3 = { -630.8857f, 151.1083f, 55.9694f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 6:
							*uParam3 = { -632.7335f, 151.8737f, 56.2514f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 7:
							*uParam3 = { -631.9681f, 153.7214f, 56.2339f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 8:
							*uParam3 = { -630.1204f, 152.9561f, 55.9155f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 9:
							*uParam3 = { -629.5792f, 151.6495f, 55.8116f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 10:
							*uParam3 = { -632.1923f, 150.5671f, 56.1307f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 11:
							*uParam3 = { -633.2747f, 153.1803f, 56.4142f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 12:
							*uParam3 = { -630.6616f, 154.2626f, 56.0404f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 13:
							*uParam3 = { -630.3445f, 149.8018f, 55.8612f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 14:
							*uParam3 = { -634.04f, 151.3325f, 56.4215f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
						case 15:
							*uParam3 = { -632.5093f, 155.028f, 56.3849f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 92.6024f;
							break;
					}
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -973.6483f, -1432.6826f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 1:
							*uParam3 = { -972.7244f, -1433.0653f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 2:
							*uParam3 = { -974.031f, -1433.6064f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 3:
							*uParam3 = { -974.5722f, -1432.2999f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 4:
							*uParam3 = { -973.2656f, -1431.7588f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 5:
							*uParam3 = { -973.1071f, -1433.9891f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 6:
							*uParam3 = { -974.9549f, -1433.2238f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 7:
							*uParam3 = { -974.1895f, -1431.3761f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 8:
							*uParam3 = { -972.3417f, -1432.1415f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 9:
							*uParam3 = { -971.3005f, -1434.748f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 10:
							*uParam3 = { -974.4137f, -1434.5304f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 11:
							*uParam3 = { -975.4961f, -1431.9172f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 12:
							*uParam3 = { -973.4829f, -1429.935f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 13:
							*uParam3 = { -972.5659f, -1435.2958f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 14:
							*uParam3 = { -976.2614f, -1433.765f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
						case 15:
							*uParam3 = { -974.7307f, -1430.0695f, 6.6791f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 114.8663f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -987.7444f, -1452.8099f, 3.9932f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 1:
							*uParam3 = { -986.8206f, -1453.1926f, 3.9925f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 2:
							*uParam3 = { -988.1271f, -1453.7338f, 3.9913f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 3:
							*uParam3 = { -988.6683f, -1452.4272f, 3.9939f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 4:
							*uParam3 = { -987.3618f, -1451.8861f, 3.9958f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 5:
							*uParam3 = { -987.2032f, -1454.1165f, 3.99f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 6:
							*uParam3 = { -989.051f, -1453.3511f, 3.9922f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 7:
							*uParam3 = { -988.2856f, -1451.5034f, 3.997f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 8:
							*uParam3 = { -986.4379f, -1452.2688f, 3.9946f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 9:
							*uParam3 = { -985.8967f, -1453.5753f, 3.9909f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 10:
							*uParam3 = { -988.5098f, -1454.6577f, 3.9901f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 11:
							*uParam3 = { -989.5922f, -1452.0446f, 3.995f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 12:
							*uParam3 = { -986.9791f, -1450.9622f, 3.9989f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 13:
							*uParam3 = { -986.662f, -1455.4231f, 4.1396f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 14:
							*uParam3 = { -990.3575f, -1453.8923f, 3.9909f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
						case 15:
							*uParam3 = { -988.8268f, -1450.1968f, 4.0125f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 100.6508f;
							break;
					}
					break;
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -831.6933f, -855.0789f, 18.5782f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 1:
							*uParam3 = { -830.7694f, -855.4616f, 18.6051f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 2:
							*uParam3 = { -832.076f, -856.0028f, 18.5916f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 3:
							*uParam3 = { -832.6172f, -854.6962f, 18.5708f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 4:
							*uParam3 = { -831.3106f, -854.155f, 18.5724f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 5:
							*uParam3 = { -831.1521f, -856.3855f, 18.6009f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 6:
							*uParam3 = { -832.9999f, -855.6201f, 18.5833f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 7:
							*uParam3 = { -832.2345f, -853.7723f, 18.5591f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 8:
							*uParam3 = { -830.3867f, -854.5377f, 18.5846f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 9:
							*uParam3 = { -829.8455f, -855.8443f, 18.6144f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 10:
							*uParam3 = { -832.4587f, -856.9267f, 18.5874f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 11:
							*uParam3 = { -833.5411f, -854.3135f, 18.5147f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 12:
							*uParam3 = { -830.9279f, -853.2311f, 18.5721f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 13:
							*uParam3 = { -830.6109f, -857.692f, 18.8194f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 14:
							*uParam3 = { -834.3064f, -856.1613f, 18.5628f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
						case 15:
							*uParam3 = { -832.7757f, -852.4658f, 18.5348f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 0.9069f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -759.0161f, -870.2166f, 20.5842f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 1:
							*uParam3 = { -758.0922f, -870.5992f, 20.7855f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 2:
							*uParam3 = { -759.3988f, -871.1404f, 20.4607f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 3:
							*uParam3 = { -759.94f, -869.8339f, 20.4204f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 4:
							*uParam3 = { -758.6334f, -869.2927f, 20.7183f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 5:
							*uParam3 = { -758.4749f, -871.5231f, 20.6459f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 6:
							*uParam3 = { -760.3227f, -870.7578f, 20.3209f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 7:
							*uParam3 = { -759.5573f, -868.91f, 20.5226f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 8:
							*uParam3 = { -757.7095f, -869.6754f, 20.948f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 9:
							*uParam3 = { -757.1683f, -870.9819f, 20.93f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 10:
							*uParam3 = { -759.7815f, -872.0643f, 20.3488f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 11:
							*uParam3 = { -760.8639f, -869.4512f, 20.2742f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 12:
							*uParam3 = { -758.2507f, -868.3688f, 20.8808f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 13:
							*uParam3 = { -757.9337f, -872.8297f, 20.7076f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 14:
							*uParam3 = { -761.6292f, -871.299f, 20.0724f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
						case 15:
							*uParam3 = { -760.0985f, -867.6035f, 20.4761f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 265.8728f;
							break;
					}
					break;
			}
			break;
		case 16:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -756.6014f, -753.9909f, 25.6366f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 1:
							*uParam3 = { -755.6776f, -754.3736f, 25.6133f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 2:
							*uParam3 = { -756.9841f, -754.9148f, 25.5835f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 3:
							*uParam3 = { -757.5253f, -753.6082f, 25.6606f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 4:
							*uParam3 = { -756.2188f, -753.067f, 25.6941f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 5:
							*uParam3 = { -756.0602f, -755.2975f, 25.5571f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 6:
							*uParam3 = { -757.908f, -754.5321f, 25.6214f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 7:
							*uParam3 = { -757.1426f, -752.6843f, 25.7009f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 8:
							*uParam3 = { -755.2949f, -753.4497f, 25.6702f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 9:
							*uParam3 = { -754.7537f, -754.7563f, 25.59f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 10:
							*uParam3 = { -757.3668f, -755.8387f, 25.5468f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 11:
							*uParam3 = { -758.4492f, -753.2255f, 25.7748f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 12:
							*uParam3 = { -755.8361f, -752.1431f, 25.7516f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 13:
							*uParam3 = { -755.519f, -756.604f, 25.4648f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 14:
							*uParam3 = { -759.2145f, -755.0733f, 26.141f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
						case 15:
							*uParam3 = { -757.6838f, -751.3778f, 25.7453f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 264.9302f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -786.4116f, -802.2524f, 19.6338f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 1:
							*uParam3 = { -785.4877f, -802.6351f, 19.6649f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 2:
							*uParam3 = { -786.7943f, -803.1763f, 19.6209f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 3:
							*uParam3 = { -787.3355f, -801.8698f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 4:
							*uParam3 = { -786.0289f, -801.3286f, 19.6467f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 5:
							*uParam3 = { -785.8704f, -803.559f, 19.652f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 6:
							*uParam3 = { -787.7182f, -802.7936f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 7:
							*uParam3 = { -786.9528f, -800.9459f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 8:
							*uParam3 = { -785.105f, -801.7112f, 19.6778f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 9:
							*uParam3 = { -784.5638f, -803.0178f, 19.6961f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 10:
							*uParam3 = { -787.177f, -804.1002f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 11:
							*uParam3 = { -788.2594f, -801.4871f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 12:
							*uParam3 = { -785.6462f, -800.4047f, 19.6596f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 13:
							*uParam3 = { -785.3292f, -804.8655f, 19.6704f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 14:
							*uParam3 = { -789.0247f, -803.3348f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
						case 15:
							*uParam3 = { -787.494f, -799.6393f, 19.6203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 173.9836f;
							break;
					}
					break;
			}
			break;
		case 17:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -42.3248f, -57.8807f, 62.4746f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 1:
							*uParam3 = { -41.4009f, -58.2634f, 62.6646f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 2:
							*uParam3 = { -42.7075f, -58.8046f, 62.4705f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 3:
							*uParam3 = { -43.2487f, -57.498f, 62.4258f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 4:
							*uParam3 = { -41.9421f, -56.9568f, 62.4631f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 5:
							*uParam3 = { -41.7836f, -59.1873f, 62.5126f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 6:
							*uParam3 = { -43.6313f, -58.4219f, 62.4285f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 7:
							*uParam3 = { -42.866f, -56.5742f, 62.3598f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 8:
							*uParam3 = { -41.0182f, -57.3395f, 62.6646f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 9:
							*uParam3 = { -44.777f, -54.9461f, 62.4174f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 10:
							*uParam3 = { -43.0901f, -59.7285f, 62.4665f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 11:
							*uParam3 = { -44.1725f, -57.1154f, 62.3225f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 12:
							*uParam3 = { -41.5594f, -56.033f, 62.4378f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 13:
							*uParam3 = { -42.2424f, -55.2938f, 62.6646f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 14:
							*uParam3 = { -43.5379f, -54.3631f, 62.3825f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
						case 15:
							*uParam3 = { -43.4072f, -55.2676f, 62.2354f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 66.8478f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -34.2063f, -69.8032f, 58.2312f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 1:
							*uParam3 = { -33.2825f, -70.1859f, 58.2221f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 2:
							*uParam3 = { -34.589f, -70.7271f, 58.1654f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 3:
							*uParam3 = { -35.1302f, -69.4206f, 58.2245f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 4:
							*uParam3 = { -33.8236f, -68.8794f, 58.2967f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 5:
							*uParam3 = { -33.6651f, -71.1098f, 58.1553f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 6:
							*uParam3 = { -35.5129f, -70.3444f, 58.1603f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 7:
							*uParam3 = { -34.7475f, -68.4967f, 58.3042f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 8:
							*uParam3 = { -32.8998f, -69.2621f, 58.2877f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 9:
							*uParam3 = { -32.3586f, -70.5686f, 58.213f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 10:
							*uParam3 = { -34.9717f, -71.651f, 58.1002f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 11:
							*uParam3 = { -36.0541f, -69.0379f, 58.1914f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 12:
							*uParam3 = { -33.441f, -67.9555f, 58.3619f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 13:
							*uParam3 = { -33.1239f, -72.4163f, 58.0798f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 14:
							*uParam3 = { -36.8194f, -70.8856f, 58.0629f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
						case 15:
							*uParam3 = { -35.2887f, -67.1901f, 58.3749f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 68.4022f;
							break;
					}
					break;
			}
			break;
		case 18:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -203.5715f, 184.6067f, 79.3927f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 1:
							*uParam3 = { -202.6477f, 184.224f, 79.3737f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 2:
							*uParam3 = { -203.9542f, 183.6828f, 79.3271f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 3:
							*uParam3 = { -204.4954f, 184.9894f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 4:
							*uParam3 = { -203.1889f, 185.5306f, 79.3275f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 5:
							*uParam3 = { -203.0304f, 183.3002f, 79.3233f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 6:
							*uParam3 = { -204.8781f, 184.0655f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 7:
							*uParam3 = { -204.1127f, 185.9133f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 8:
							*uParam3 = { -202.265f, 185.1479f, 79.3164f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 9:
							*uParam3 = { -201.7238f, 183.8414f, 79.3301f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 10:
							*uParam3 = { -204.3369f, 182.759f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 11:
							*uParam3 = { -205.4193f, 185.3721f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 12:
							*uParam3 = { -202.8062f, 186.4545f, 79.3275f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 13:
							*uParam3 = { -202.4892f, 181.9936f, 79.3234f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 14:
							*uParam3 = { -206.1846f, 183.5243f, 79.3274f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
						case 15:
							*uParam3 = { -206.3539f, 184.7198f, 79.3076f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 89.3842f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -205.0849f, 192.5791f, 79.2005f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 1:
							*uParam3 = { -204.161f, 192.1964f, 79.0257f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 2:
							*uParam3 = { -205.4676f, 191.6552f, 79.0898f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 3:
							*uParam3 = { -206.0088f, 192.9618f, 79.3796f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 4:
							*uParam3 = { -204.7022f, 193.503f, 79.2593f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 5:
							*uParam3 = { -204.5437f, 191.2726f, 78.9861f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 6:
							*uParam3 = { -206.3914f, 192.0379f, 79.2735f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 7:
							*uParam3 = { -205.6261f, 193.8857f, 79.4278f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 8:
							*uParam3 = { -203.7784f, 193.1203f, 79.0288f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 9:
							*uParam3 = { -203.2371f, 191.8138f, 78.7949f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 10:
							*uParam3 = { -205.8503f, 190.7314f, 79.0002f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 11:
							*uParam3 = { -206.9327f, 193.3445f, 79.5513f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 12:
							*uParam3 = { -204.3195f, 194.4269f, 79.233f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 13:
							*uParam3 = { -204.0025f, 189.966f, 78.7888f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 14:
							*uParam3 = { -207.698f, 191.4967f, 79.3389f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
						case 15:
							*uParam3 = { -206.1673f, 195.1922f, 79.707f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 83.2798f;
							break;
					}
					break;
			}
			break;
		case 19:
			switch (iParam1)
			{
				case 0:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -814.1105f, -982.7191f, 13.1087f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 1:
							*uParam3 = { -813.1866f, -983.1018f, 13.133f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 2:
							*uParam3 = { -814.4932f, -983.643f, 13.0738f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 3:
							*uParam3 = { -815.0344f, -982.3364f, 13.1355f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 4:
							*uParam3 = { -813.7278f, -981.7952f, 13.1281f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 5:
							*uParam3 = { -813.5693f, -984.0257f, 13.1011f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 6:
							*uParam3 = { -815.4171f, -983.2603f, 13.1043f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 7:
							*uParam3 = { -814.6517f, -981.4125f, 13.1603f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 8:
							*uParam3 = { -812.8039f, -982.1779f, 13.1481f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 9:
							*uParam3 = { -812.2627f, -983.4845f, 13.1741f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 10:
							*uParam3 = { -814.8759f, -984.5669f, 13.0203f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 11:
							*uParam3 = { -815.9583f, -981.9537f, 13.2236f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 12:
							*uParam3 = { -813.3451f, -980.8713f, 13.1503f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 13:
							*uParam3 = { -813.0281f, -985.3322f, 13.0471f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 14:
							*uParam3 = { -816.7236f, -983.8015f, 13.1292f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
						case 15:
							*uParam3 = { -814.2929f, -985.106f, 13.2735f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 164.2901f;
							break;
					}
					break;
				case 1:
					switch (iParam2)
					{
						case 0:
							*uParam3 = { -799.429f, -982.5418f, 12.7421f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 1:
							*uParam3 = { -798.5051f, -982.9245f, 12.9232f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 2:
							*uParam3 = { -799.8116f, -983.4657f, 12.8103f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 3:
							*uParam3 = { -800.3528f, -982.1591f, 12.5151f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 4:
							*uParam3 = { -799.0463f, -981.6179f, 12.6683f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 5:
							*uParam3 = { -798.8878f, -983.8484f, 12.8998f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 6:
							*uParam3 = { -800.7355f, -983.083f, 12.5833f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 7:
							*uParam3 = { -799.9702f, -981.2352f, 12.4451f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 8:
							*uParam3 = { -798.1224f, -982.0006f, 12.8955f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 9:
							*uParam3 = { -797.5812f, -983.3072f, 12.9537f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 10:
							*uParam3 = { -800.1943f, -984.3896f, 12.8489f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 11:
							*uParam3 = { -801.2767f, -981.7764f, 12.2881f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 12:
							*uParam3 = { -798.6636f, -980.694f, 12.5591f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 13:
							*uParam3 = { -798.3466f, -985.1549f, 12.9004f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 14:
							*uParam3 = { -802.0421f, -983.6242f, 12.4244f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
						case 15:
							*uParam3 = { -800.5114f, -979.9287f, 14.2486f };
							uParam3->f_3 = { 0f, 0f, 0f };
							uParam3->f_3.f_2 = 220.1102f;
							break;
					}
					break;
			}
			break;
	}
}

void func_69()//Position - 0x22A8C5
{
	int iVar0;
	iVar0 = AUDIO::GET_SOUND_ID();
	AUDIO::PLAY_SOUND_FRONTEND(iVar0, "GARAGE_DOOR_SCRIPTED_CLOSE", 0, true);
	AUDIO::SET_VARIABLE_ON_SOUND(iVar0, "hold", 2.25f);
}

int func_70(int iParam0, int iParam1)//Position - 0x22AB2D
{
	Global_2703735.f_61.f_64 = iParam1;
	Global_2703735.f_61.f_50 = 1;
	if (Global_2703735.f_61.f_63 != 0)
	{
		*iParam0 = Global_2703735.f_61.f_63;
		Global_2703735.f_61.f_63 = 0;
		Global_2703735.f_61.f_50 = 0;
		return 1;
	}
	return 0;
}

bool func_71()//Position - 0x22B01B
{
	return Global_2667225.f_26;
}

void func_72()//Position - 0x23BD3E
{
	if (!Global_1931939)
	{
	}
	Global_1931939 = 1;
}

void func_73()//Position - 0x2426A4
{
	Global_44203 = 0;
	Global_44204 = 0;
	Global_44205 = 0;
	Global_44206 = 30000;
	Global_44207 = 0f;
	Global_44209 = 0f;
	Global_44208 = 0f;
	Global_44210 = 1f;
	Global_44211 = 0f;
	StringCopy(&Global_44212, "", 16);
}

void func_74()//Position - 0x245C8B
{
	switch (Global_32234)
	{
		case 4:
		case 5:
			PED::SET_PED_CAPSULE(PLAYER::PLAYER_PED_ID(), 0.15f);
			break;
		case 6:
		case 7:
		case 9:
		case 10:
		case 16:
		case 17:
		case 18:
		case 12:
			CAM::SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(PLAYER::PLAYER_PED_ID());
			break;
	}
}

Vector3 func_75(struct<3> Param0)//Position - 0x246029
{
	while (Param0.f_2 > 180f)
	{
		Param0.f_2 = (Param0.f_2 - 360f);
	}
	while (Param0.f_2 < -180f)
	{
		Param0.f_2 = (Param0.f_2 + 360f);
	}
	return Param0;
}

void func_76()//Position - 0x27CF2F
{
	if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833), 8);
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_776 = -1;
	}
}

bool func_77(var uParam0)//Position - 0x2BAAB7
{
	return __LIB_0__.func_492(uParam0, 1);
}

void func_78(var uParam0, var uParam1)//Position - 0x2BAB20
{
	*uParam0 = 0;
	*uParam1 = 203;
}

int func_79(var uParam0)//Position - 0x2BABDD
{
	if (uParam0->f_491 == 6)
	{
		return 1;
	}
	if (uParam0->f_491 == 5 && __LIB_4__.func_515(uParam0) != 1)
	{
		return 1;
	}
	return 0;
}

int func_80()//Position - 0x2C7CFF
{
	return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_32;
}

void func_81(int iParam0, bool bParam1)//Position - 0x2CC0C8
{
	struct<2> Var0;
	Var0 = { __LIB_4__.func_744(iParam0) };
	if (Var0.f_1 == -1)
	{
		return;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_38401[Var0.f_1]), Var0.f_0);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_38401[Var0.f_1]), Var0.f_0);
	}
}

void func_82(var uParam0, bool bParam1)//Position - 0x2CD4F6
{
	STREAMING::REMOVE_ANIM_DICT("ANIM@AMB@OFFICE@PA@MALE@");
	STREAMING::REMOVE_ANIM_DICT("ANIM@AMB@OFFICE@PA@FEMALE@");
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_616))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_616));
		MISC::CLEAR_BIT(&(uParam0->f_394), 1);
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_615))
	{
		PED::DELETE_PED(&(uParam0->f_615));
		MISC::CLEAR_BIT(&(uParam0->f_394), 0);
	}
	if (bParam1)
	{
		uParam0->f_578 = 2;
	}
	else
	{
		uParam0->f_578 = 0;
		Global_4282953 = 0;
	}
	MISC::CLEAR_BIT(&(uParam0->f_576), 0);
	MISC::CLEAR_BIT(&(uParam0->f_576), 3);
	MISC::CLEAR_BIT(&(uParam0->f_576), 1);
	MISC::CLEAR_BIT(&(uParam0->f_576), 2);
	MISC::CLEAR_BIT(&(uParam0->f_576), 4);
}

bool func_83(int iParam0)//Position - 0x2D4677
{
	return iParam0 == 1;
}

int func_84(int iParam0, int iParam1, int iParam2)//Position - 0x2D9FDC
{
	switch (iParam0)
	{
		case 9:
			if (iParam1 == 1)
			{
				if (iParam2 == 0)
				{
					return joaat("prop_bh1_44_door_01l");
				}
			}
			break;
		case 10:
			if (iParam1 == 1)
			{
				return joaat("prop_bh1_44_door_01l");
			}
			break;
		case 11:
			if (iParam1 == 1)
			{
				return joaat("prop_sm1_11_doorl");
			}
			break;
		case 12:
			if (iParam1 == 0)
			{
				return joaat("prop_ss1_05_mp_door");
			}
			else if (iParam1 == 1)
			{
				return joaat("prop_ss1_05_mp_door");
			}
			break;
		case 13:
			if (iParam1 == 1)
			{
				return joaat("prop_ss1_08_mp_door_l");
			}
			break;
		case 14:
			if (iParam1 == 0)
			{
				return joaat("vb_43_door_r_mp");
			}
			else if (iParam1 == 1)
			{
				return joaat("vb_43_door_l_mp");
			}
			break;
		case 15:
			if (iParam1 == 1)
			{
				return joaat("prop_kt1_10_mpdoor_r");
			}
			break;
		case 16:
			if (iParam1 == 0)
			{
				return joaat("prop_kt1_06_door_r");
			}
			else if (iParam1 == 1)
			{
				return joaat("prop_kt1_06_door_r");
			}
			break;
		case 19:
			if (iParam1 == 0)
			{
				return joaat("prop_kt1_10_mpdoor_l");
			}
			else if (iParam1 == 1)
			{
				return joaat("prop_kt1_10_mpdoor_r");
			}
			break;
		case 51:
			return joaat("hei_prop_sync_door_06");
			break;
		case 52:
			return joaat("hei_prop_sync_door03");
			break;
		case 53:
			return joaat("hei_prop_sync_door04");
			break;
		case 54:
			return joaat("hei_prop_sync_door02b");
			break;
		case 55:
			return joaat("hei_prop_sync_door07");
			break;
		case 56:
			return joaat("hei_prop_sync_door05b");
			break;
		case 57:
			return joaat("hei_prop_sync_door01a");
			break;
		case 6:
			if (iParam1 == 0)
			{
				return joaat("hei_prop_bh1_08_hdoor");
			}
			else if (iParam1 == 1)
			{
				return joaat("hei_prop_bh1_08_hdoor");
			}
			break;
		case 68:
			if (iParam1 == 0)
			{
				return joaat("ex_prop_door_lowbank_ent_r");
			}
			else if (iParam1 == 1)
			{
				return joaat("ex_prop_door_lowbank_roof");
			}
			break;
		case 69:
			if (iParam1 == 1)
			{
				if (iParam2 == 0)
				{
					return joaat("ex_prop_door_maze2_rf_l");
				}
				else if (iParam2 == 1)
				{
					return joaat("ex_prop_door_maze2_rf_r");
				}
			}
			break;
		case 70:
			if (iParam1 == 0)
			{
				return joaat("ex_prop_door_arcad_ent_l");
			}
			else if (iParam1 == 1)
			{
				if (iParam2 == 0)
				{
					return joaat("ex_prop_door_arcad_roof_l");
				}
				else if (iParam2 == 1)
				{
					return joaat("ex_prop_door_arcad_roof_r");
				}
			}
			break;
		case 71:
			if (iParam1 == 0)
			{
				return joaat("ex_prop_door_maze2_ent_r");
			}
			else if (iParam1 == 1)
			{
				return joaat("ex_prop_door_maze2_roof");
			}
			break;
	}
	return 0;
}

void func_85(int iParam0, int iParam1, bool bParam2, var uParam3)//Position - 0x2DCFAA
{
	switch (iParam0)
	{
		case 1:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -778.8375f, 312.4263f, 86.2157f };
					uParam3->f_3 = { -3.6467f, -0.0242f, -61.4538f };
					uParam3->f_6 = 26;
					break;
				case 1:
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -262.3743f, -971.1577f, 31.7935f };
					uParam3->f_3 = { -7.6574f, -0.0501f, -31.6205f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1443.9298f, -545.9659f, 35.1923f };
					uParam3->f_3 = { -5.5697f, -0.0008f, -32.2035f };
					uParam3->f_6 = 30;
					break;
				case 1:
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -915.1278f, -453.6297f, 40.0744f };
					uParam3->f_3 = { -6.0811f, -0.0118f, -134.2025f };
					uParam3->f_6 = 28;
					break;
				case 1:
					break;
			}
			break;
		case 5:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -48.989f, -584.7633f, 38.6f };
					uParam3->f_3 = { -1.2894f, -0.027f, -165.4495f };
					uParam3->f_6 = 22;
					break;
				case 1:
					break;
			}
			break;
		case 6:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -931.6423f, -390.9495f, 39.0325f };
					uParam3->f_3 = { -0.3785f, 0.577f, 5.7074f };
					uParam3->f_6 = 20;
					break;
				case 1:
					break;
			}
			break;
		case 7:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -616.0326f, 37.8265f, 44.3494f };
					uParam3->f_3 = { -8.1049f, -0.1644f, -72.0749f };
					uParam3->f_6 = 30;
					break;
				case 1:
					break;
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 285.9142f, -159.6398f, 65.0086f };
					uParam3->f_3 = { -5.1911f, -0.0457f, -171.3981f };
					uParam3->f_6 = 36;
					break;
				case 1:
					break;
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 1.9757f, 37.2375f, 71.8745f };
					uParam3->f_3 = { -3.8733f, -0.0381f, -79.9425f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 11.0097f, 81.2408f, 78.7658f };
					uParam3->f_3 = { -4.0039f, -0.0606f, 99.0836f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 11:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -510.878f, 108.4017f, 64.1737f };
					uParam3->f_3 = { -4.7927f, -0.0578f, 115.5957f };
					uParam3->f_6 = 36;
					break;
				case 1:
					break;
			}
			break;
		case 12:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -196.3497f, 85.7192f, 70.0537f };
					uParam3->f_3 = { -4.1878f, -0.0707f, 100.6295f };
					uParam3->f_6 = 32;
					break;
				case 1:
					break;
			}
			break;
		case 13:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -628.1861f, 170.5892f, 61.5412f };
					uParam3->f_3 = { -7.1596f, 0.034f, -151.0119f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -969.9488f, -1430.513f, 8.281f };
					uParam3->f_3 = { -0.9523f, -0.0007f, -128.564f };
					uParam3->f_6 = 36;
					break;
				case 1:
					break;
			}
			break;
		case 15:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -830.5533f, -862.1614f, 21.2626f };
					uParam3->f_3 = { -5.7446f, 0.0702f, 113.1385f };
					uParam3->f_6 = 34;
					break;
				case 1:
					*uParam3 = { -830.9413f, -862.3662f, 21.1341f };
					uParam3->f_3 = { -6.4051f, 0f, 120.4844f };
					uParam3->f_6 = 50;
					break;
			}
			break;
		case 16:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -763.1959f, -754.4324f, 28.0761f };
					uParam3->f_3 = { -0.1307f, 0.0611f, 32.2352f };
					uParam3->f_6 = 35;
					break;
				case 1:
					break;
			}
			break;
		case 17:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -41.8778f, -59.9533f, 64.3708f };
					uParam3->f_3 = { -2.5317f, 0.0466f, -47.9009f };
					uParam3->f_6 = 35;
					break;
				case 1:
					break;
			}
			break;
		case 18:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -201.1149f, 187.7645f, 80.8444f };
					uParam3->f_3 = { -4.747f, 0.0559f, -149.2041f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 19:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -813.5362f, -979.8682f, 14.8561f };
					uParam3->f_3 = { -5.6169f, 0.0575f, -116.8919f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 20:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -663.8629f, -853.4365f, 24.8634f };
					uParam3->f_3 = { -5.277f, -0.0469f, -124.8955f };
					uParam3->f_6 = 33;
					break;
				case 1:
					break;
			}
			break;
		case 21:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1532.8925f, -325.5346f, 48.4096f };
					uParam3->f_3 = { -2.7735f, 0.0108f, 169.1348f };
					uParam3->f_6 = 41;
					break;
				case 1:
					break;
			}
			break;
		case 22:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1564.6744f, -406.903f, 42.7314f };
					uParam3->f_3 = { -2.3305f, -0.0179f, -11.882f };
					uParam3->f_6 = 35;
					break;
				case 1:
					break;
			}
			break;
		case 23:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1605.9042f, -431.7684f, 40.8291f };
					uParam3->f_3 = { -4.0988f, 0.0591f, 169.9062f };
					uParam3->f_6 = 32;
					break;
				case 1:
					break;
			}
			break;
		case 24:
			break;
		case 25:
			break;
		case 26:
			break;
		case 27:
			break;
		case 28:
			break;
		case 29:
			break;
		case 30:
			break;
		case 31:
			break;
		case 32:
			break;
		case 33:
			break;
		case 34:
			break;
		case 35:
			break;
		case 36:
			break;
		case 37:
			break;
		case 38:
			break;
		case 39:
			break;
		case 40:
			break;
		case 41:
			break;
		case 42:
			break;
		case 43:
			break;
		case 44:
			break;
		case 45:
			break;
		case 46:
			break;
		case 47:
			break;
		case 48:
			break;
		case 49:
			break;
		case 50:
			break;
		case 51:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1405.6022f, 528.2314f, 124.3656f };
					uParam3->f_3 = { -4.3219f, 0f, -170.2689f };
					uParam3->f_6 = 40;
					break;
				case 1:
					break;
			}
			break;
		case 52:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 1334.5752f, -1580.3108f, 54.9153f };
					uParam3->f_3 = { 0.9696f, -0.0301f, -50.8474f };
					uParam3->f_6 = 31;
					break;
				case 1:
					break;
			}
			break;
		case 53:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -107.8012f, 6530.543f, 30.6087f };
					uParam3->f_3 = { 1.7051f, -0.031f, -139.5824f };
					uParam3->f_6 = 31;
					break;
				case 1:
					break;
			}
			break;
		case 54:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -297.7531f, 6331.174f, 32.7564f };
					uParam3->f_3 = { 2.2478f, 0.0379f, 136.6248f };
					uParam3->f_6 = 23;
					break;
				case 1:
					break;
			}
			break;
		case 55:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -12.5197f, 6554.6187f, 33.5394f };
					uParam3->f_3 = { -1.3467f, 0f, 46.8774f };
					uParam3->f_6 = 27;
					break;
				case 1:
					break;
			}
			break;
		case 56:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 1903.2606f, 3774.377f, 33.0854f };
					uParam3->f_3 = { -0.5878f, 0.0308f, 32.349f };
					uParam3->f_6 = 18;
					break;
				case 1:
					break;
			}
			break;
		case 57:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 1662.224f, 4772.824f, 42.8465f };
					uParam3->f_3 = { -3.1724f, 0f, 0.752f };
					uParam3->f_6 = 17;
					break;
				case 1:
					break;
			}
			break;
		case 58:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -174.2884f, 501.312f, 137.95f };
					uParam3->f_3 = { -1.2027f, 0.0156f, 7.0754f };
					uParam3->f_6 = 34;
					break;
				case 1:
					break;
			}
			break;
		case 62:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 117.651f, 563.5542f, 184.9347f };
					uParam3->f_3 = { -17.7276f, 0.0362f, -77.4043f };
					uParam3->f_6 = 30;
					break;
				case 1:
					break;
			}
			break;
		case 59:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 345.9495f, 441.9537f, 148.1468f };
					uParam3->f_3 = { -4.1549f, -0.0894f, -172.1909f };
					uParam3->f_6 = 46;
					break;
				case 1:
					break;
			}
			break;
		case 60:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -753.3809f, 622.2144f, 142.9006f };
					uParam3->f_3 = { 3.1702f, 0.0623f, 167.7499f };
					uParam3->f_6 = 40;
					break;
				case 1:
					break;
			}
			break;
		case 61:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -687.0825f, 595.0414f, 144.1755f };
					uParam3->f_3 = { 0.5655f, -0.0023f, -61.8951f };
					uParam3->f_6 = 52;
					break;
				case 1:
					break;
			}
			break;
		case 63:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -556.8793f, 664.4926f, 145.5217f };
					uParam3->f_3 = { 0.7323f, -0.1035f, 109.3282f };
					uParam3->f_6 = 33;
					break;
				case 1:
					break;
			}
			break;
		case 64:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -731.8242f, 593.0071f, 143.0652f };
					uParam3->f_3 = { -12.4002f, 0.0292f, 68.9178f };
					uParam3->f_6 = 37;
					break;
				case 1:
					break;
			}
			break;
		case 65:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -851.2979f, 695.7601f, 149.4358f };
					uParam3->f_3 = { -5.2567f, -0.0731f, 115.5629f };
					uParam3->f_6 = 39;
					break;
				case 1:
					break;
			}
			break;
		case 66:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1292.713f, 454.9815f, 97.8919f };
					uParam3->f_3 = { 3.263f, 0.035f, 130.612f };
					uParam3->f_6 = 36;
					break;
				case 1:
					break;
			}
			break;
		case 67:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 371.7109f, 430.7896f, 146.0474f };
					uParam3->f_3 = { -0.285f, 0f, -136.6176f };
					uParam3->f_6 = 24;
					break;
				case 1:
					break;
			}
			break;
		case 68:
			switch (iParam1)
			{
				case 0:
					if (bParam2)
					{
						*uParam3 = { -1579.5897f, -556.4324f, 35.5136f };
						uParam3->f_3 = { -0.603f, -0.0228f, 127.9377f };
						uParam3->f_6 = 20;
					}
					else
					{
						*uParam3 = { -1580.476f, -557.3078f, 35.5376f };
						uParam3->f_3 = { -4.3653f, -0.0815f, 129.6542f };
						uParam3->f_6 = 24;
					}
					break;
				case 1:
					*uParam3 = { -1558.7742f, -567.9628f, 114.6745f };
					uParam3->f_3 = { 0.1791f, 0.0687f, 126.75f };
					uParam3->f_6 = 27;
					break;
			}
			break;
		case 69:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1372.0757f, -500.8174f, 33.6383f };
					uParam3->f_3 = { -1.2811f, -0.0249f, -126.7845f };
					uParam3->f_6 = 43;
					break;
				case 1:
					*uParam3 = { -1368.5631f, -473.6149f, 85.2461f };
					uParam3->f_3 = { -13.9712f, 0f, 37.098f };
					uParam3->f_6 = 42;
					break;
			}
			break;
		case 70:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -119.2171f, -609.3939f, 36.8558f };
					uParam3->f_3 = { -3.0867f, 0.0696f, -19.2852f };
					uParam3->f_6 = 16;
					break;
				case 1:
					*uParam3 = { -130.8887f, -587.8684f, 202.2298f };
					uParam3->f_3 = { -0.0352f, -0.0257f, 53.5323f };
					uParam3->f_6 = 18;
					break;
			}
			break;
		case 71:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -73.2211f, -842.1545f, 41.2237f };
					uParam3->f_3 = { -5.6972f, 1.3887f, -48.4721f };
					uParam3->f_6 = 22;
					break;
				case 1:
					*uParam3 = { -69.0923f, -825.2212f, 322.6436f };
					uParam3->f_3 = { -12.4604f, 0.1103f, -23.9435f };
					uParam3->f_6 = 20;
					break;
			}
			break;
		case 72:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 254.94388f, -1807.3206f, 27.628801f };
					uParam3->f_3 = { -0.252823f, -0.200463f, 145.1105f };
					uParam3->f_6 = 24;
					break;
			}
			break;
		case 73:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1473.2317f, -921.6639f, 10.42345f };
					uParam3->f_3 = { -2.428516f, -0.032469f, -22.644066f };
					uParam3->f_6 = 43;
					break;
			}
			break;
		case 74:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 36.916344f, -1030.8391f, 30.251883f };
					uParam3->f_3 = { -4.955771f, -0.072793f, -23.51704f };
					uParam3->f_6 = 34;
					break;
			}
			break;
		case 75:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 47.483208f, 2788.058f, 58.452034f };
					uParam3->f_3 = { -1.609905f, -0.050702f, 26.16432f };
					uParam3->f_6 = 38;
					break;
			}
			break;
		case 76:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -343.99777f, 6067.1284f, 32.25699f };
					uParam3->f_3 = { -6.1195f, 0.116859f, -129.04971f };
					uParam3->f_6 = 18;
					break;
			}
			break;
		case 77:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 1734.8202f, 3709.049f, 34.539253f };
					uParam3->f_3 = { 1.492825f, -0.085494f, -94.46148f };
					uParam3->f_6 = 21;
					break;
			}
			break;
		case 78:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 941.2058f, -1458.3849f, 31.99033f };
					uParam3->f_3 = { -2.881305f, 0.069815f, 111.23191f };
					uParam3->f_6 = 39;
					break;
			}
			break;
		case 79:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 187.24655f, 309.1672f, 106.12668f };
					uParam3->f_3 = { -4.899244f, 0.092152f, -80.15679f };
					uParam3->f_6 = 21;
					break;
			}
			break;
		case 80:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -24.885988f, -190.96452f, 53.101295f };
					uParam3->f_3 = { -10.212523f, 0.071275f, -93.717575f };
					uParam3->f_6 = 31;
					break;
			}
			break;
		case 81:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { 2472.7632f, 4112.579f, 38.881607f };
					uParam3->f_3 = { -7.489403f, 0.048921f, 161.9735f };
					uParam3->f_6 = 25;
					break;
			}
			break;
		case 82:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -40.147297f, 6419.2593f, 32.26235f };
					uParam3->f_3 = { -1.430565f, 0.008784f, -37.568604f };
					uParam3->f_6 = 31;
					break;
			}
			break;
		case 83:
			switch (iParam1)
			{
				case 0:
					*uParam3 = { -1133.1603f, -1567.4343f, 5.008084f };
					uParam3->f_3 = { -0.669292f, -0.082458f, 127.09876f };
					uParam3->f_6 = 27;
					break;
			}
			break;
	}
}

void func_86()//Position - 0x2E237F
{
	if ((!__LIB_1__.func_239() && !__LIB_1__.func_238()) && !__LIB_1__.func_307())
	{
		MISC::SET_BIT(&(Global_2714762.f_2), 18);
	}
}

int func_87(int iParam0, int iParam1, var uParam2, int iParam3)//Position - 0x2E9B70
{
	int iVar0;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_378 = iParam0;
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_131), 31);
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_379 = iParam1;
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_380 = iParam3;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		if (Global_1853348[iParam0 /*834*/].f_267.f_370[iVar0] == PLAYER::PLAYER_ID())
		{
			__LIB_1__.func_245(35);
			*uParam2 = iVar0;
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_88(int iParam0)//Position - 0x309924
{
	switch (iParam0)
	{
		case 83:
		case 84:
		case 85:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 104:
		case 105:
		case 106:
		case 107:
		case 108:
		case 109:
		case 110:
		case 111:
		case 112:
		case 113:
		case 114:
			return 1;
			break;
	}
	return 0;
}

void func_89(int* iParam0, var uParam1, int iParam2)//Position - 0x3115BB
{
	iParam0->f_24 = 0;
	__LIB_6__.func_464(iParam0, 0);
	iParam0->f_26 = uParam1;
	iParam0->f_27 = iParam2;
	MISC::CLEAR_BIT(&(iParam0->f_28), 3);
	MISC::CLEAR_BIT(&(iParam0->f_28), 4);
	MISC::CLEAR_BIT(&(iParam0->f_28), 5);
	MISC::CLEAR_BIT(&(iParam0->f_28), 6);
	MISC::SET_BIT(iParam0, 0);
}

int func_90(var uParam0, int* iParam1, int* iParam2)//Position - 0x311AAE
{
	if (__LIB_6__.func_533(uParam0, iParam1) == 2)
	{
		return 1;
	}
	if (__LIB_6__.func_533(uParam0, iParam1) == 1)
	{
		if ((iParam2->f_87 == 6 || iParam2->f_87 == 7) || iParam2->f_87 == 8)
		{
			return 1;
		}
	}
	return 0;
}

int func_91(int iParam0)//Position - 0x31404B
{
	if (Global_1892703[iParam0 /*599*/] == 236 || Global_1892703[iParam0 /*599*/] == 150)
	{
		return __LIB_0__.func_740(iParam0);
	}
	return 0;
}

int func_92(var uParam0, int iParam1)//Position - 0x323FF1
{
	if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iParam1))
	{
		if (iParam1 > -1)
		{
			if (!BitTest(Global_1853348[iParam1 /*834*/].f_267.f_30, 2))
			{
				if (!NETWORK::NETWORK_IS_PLAYER_CONCEALED(iParam1))
				{
					if (!BitTest(Global_2689235[iParam1 /*453*/].f_197, 4))
					{
						if (BitTest(uParam0->f_1, 16))
						{
							if (BitTest(uParam0->f_1, 17))
							{
								if (MISC::GET_GAME_TIMER() > uParam0->f_1.f_40)
								{
									return 1;
								}
							}
							else
							{
								uParam0->f_1.f_40 = MISC::GET_GAME_TIMER() + 3000;
								MISC::SET_BIT(&(uParam0->f_1), 17);
							}
						}
						else
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

bool func_93(int iParam0)//Position - 0x324309
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_143, 30);
}

void func_94(int* iParam0, int* iParam1)//Position - 0x325A2E
{
	if (iParam0->f_2481)
	{
		if (BitTest(*iParam0, 31))
		{
			if (!BitTest(*iParam1, 5))
			{
				if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_2)
				{
					MISC::SET_BIT(iParam1, 6);
				}
				else
				{
					MISC::CLEAR_BIT(iParam1, 6);
				}
				iParam1->f_2 = Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_3;
				if (iParam1->f_2 > -1)
				{
					if (2 == __LIB_6__.func_535(iParam1->f_2))
					{
						iParam1->f_2 = 6;
					}
				}
				MISC::SET_BIT(iParam1, 5);
			}
		}
		else if (!BitTest(*iParam1, 5))
		{
			if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_4)
			{
				MISC::SET_BIT(iParam1, 6);
			}
			else
			{
				MISC::CLEAR_BIT(iParam1, 6);
			}
			iParam1->f_2 = Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_5;
			if (iParam1->f_2 > -1)
			{
				if (2 == __LIB_6__.func_535(iParam1->f_2))
				{
					iParam1->f_2 = 6;
				}
			}
			MISC::SET_BIT(iParam1, 5);
		}
	}
	else if (iParam0->f_2483)
	{
		if (BitTest(iParam0->f_1, 0))
		{
			if (!BitTest(*iParam1, 5))
			{
				if (__LIB_0__.func_137(28267, -1))
				{
					MISC::SET_BIT(iParam1, 6);
				}
				else
				{
					MISC::CLEAR_BIT(iParam1, 6);
				}
				iParam1->f_2 = __LIB_0__.func_228(34117, -1);
				if (iParam1->f_2 > -1)
				{
					if (2 == __LIB_6__.func_535(iParam1->f_2))
					{
						iParam1->f_2 = 6;
					}
				}
				MISC::SET_BIT(iParam1, 5);
			}
		}
		else if (BitTest(*iParam0, 31))
		{
			if (!BitTest(*iParam1, 5))
			{
				if (__LIB_0__.func_137(28268, -1))
				{
					MISC::SET_BIT(iParam1, 6);
				}
				else
				{
					MISC::CLEAR_BIT(iParam1, 6);
				}
				iParam1->f_2 = __LIB_0__.func_228(34118, -1);
				if (iParam1->f_2 > -1)
				{
					if (2 == __LIB_6__.func_535(iParam1->f_2))
					{
						iParam1->f_2 = 6;
					}
				}
				MISC::SET_BIT(iParam1, 5);
			}
		}
		else if (!BitTest(*iParam1, 5))
		{
			if (__LIB_0__.func_137(28269, -1))
			{
				MISC::SET_BIT(iParam1, 6);
			}
			else
			{
				MISC::CLEAR_BIT(iParam1, 6);
			}
			iParam1->f_2 = __LIB_0__.func_228(34119, -1);
			if (iParam1->f_2 > -1)
			{
				if (2 == __LIB_6__.func_535(iParam1->f_2))
				{
					iParam1->f_2 = 6;
				}
			}
			MISC::SET_BIT(iParam1, 5);
		}
	}
	else if (!BitTest(*iParam1, 5))
	{
		if (!iParam0->f_2482)
		{
			if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7)
			{
				MISC::SET_BIT(iParam1, 6);
			}
			else
			{
				MISC::CLEAR_BIT(iParam1, 6);
			}
			if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_12)
			{
				MISC::SET_BIT(iParam1, 7);
			}
			else
			{
				MISC::CLEAR_BIT(iParam1, 7);
			}
			iParam1->f_2 = Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_1;
			iParam1->f_3 = Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_13;
			if (iParam1->f_2 > -1)
			{
				if (2 == __LIB_6__.func_535(iParam1->f_2))
				{
					iParam1->f_2 = 6;
				}
			}
		}
		else
		{
			MISC::SET_BIT(iParam1, 6);
			iParam1->f_2 = 8;
		}
		MISC::SET_BIT(iParam1, 5);
	}
}

void func_95(int* iParam0, var uParam1)//Position - 0x325CE2
{
	if (iParam0->f_2481)
	{
		if (BitTest(*iParam0, 31))
		{
			if (uParam1->f_22 > 0)
			{
				if (uParam1->f_22 == 1)
				{
					if (!Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_2)
					{
						Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_2 = 1;
					}
				}
				if (uParam1->f_22 == 2)
				{
					if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_2)
					{
						Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_2 = 0;
					}
				}
				if (uParam1->f_20 != Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_3)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_3 = uParam1->f_20;
				}
			}
		}
		else if (uParam1->f_22 > 0)
		{
			if (uParam1->f_22 == 1)
			{
				if (!Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_4)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_4 = 1;
				}
			}
			if (uParam1->f_22 == 2)
			{
				if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_4)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_4 = 0;
				}
			}
			if (uParam1->f_20 != Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_5)
			{
				Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_5 = uParam1->f_20;
			}
		}
	}
	else if (iParam0->f_2483)
	{
		if (BitTest(iParam0->f_1, 0))
		{
			if (uParam1->f_22 > 0)
			{
				if (uParam1->f_22 == 1)
				{
					if (!__LIB_0__.func_137(28267, -1))
					{
						__LIB_0__.func_521(28267, 1, -1);
					}
				}
				if (uParam1->f_22 == 2)
				{
					if (__LIB_0__.func_137(28267, -1))
					{
						__LIB_0__.func_521(28267, 0, -1);
					}
				}
				if (uParam1->f_20 != __LIB_0__.func_228(34117, -1))
				{
					__LIB_1__.func_39(34117, uParam1->f_20, -1);
				}
			}
		}
		else if (BitTest(*iParam0, 31))
		{
			if (uParam1->f_22 > 0)
			{
				if (uParam1->f_22 == 1)
				{
					if (!__LIB_0__.func_137(28268, -1))
					{
						__LIB_0__.func_521(28268, 1, -1);
					}
				}
				if (uParam1->f_22 == 2)
				{
					if (__LIB_0__.func_137(28268, -1))
					{
						__LIB_0__.func_521(28268, 0, -1);
					}
				}
				if (uParam1->f_20 != __LIB_0__.func_228(34118, -1))
				{
					__LIB_1__.func_39(34118, uParam1->f_20, -1);
				}
			}
		}
		else if (uParam1->f_22 > 0)
		{
			if (uParam1->f_22 == 1)
			{
				if (!__LIB_0__.func_137(28269, -1))
				{
					__LIB_0__.func_521(28269, 1, -1);
				}
			}
			if (uParam1->f_22 == 2)
			{
				if (__LIB_0__.func_137(28269, -1))
				{
					__LIB_0__.func_521(28269, 0, -1);
				}
			}
			if (uParam1->f_20 != __LIB_0__.func_228(34119, -1))
			{
				__LIB_1__.func_39(34119, uParam1->f_20, -1);
			}
		}
	}
	else if (!iParam0->f_2482)
	{
		if (uParam1->f_22 > 0)
		{
			if (uParam1->f_22 == 1)
			{
				if (!Global_2359296[__LIB_0__.func_153() /*5567*/].f_7)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7 = 1;
				}
			}
			if (uParam1->f_22 == 2)
			{
				if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7 = 0;
				}
			}
			if (uParam1->f_20 != Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_1)
			{
				Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_1 = uParam1->f_20;
			}
		}
		if (uParam1->f_23 > 0)
		{
			if (uParam1->f_23 == 1)
			{
				if (!Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_12)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_12 = 1;
				}
			}
			if (uParam1->f_23 == 2)
			{
				if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_12)
				{
					Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_12 = 0;
				}
			}
			if (uParam1->f_21 != Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_13)
			{
				Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_13 = uParam1->f_21;
			}
		}
	}
}

bool func_96()//Position - 0x32CFB6
{
	return Global_1835431.f_4;
}

int func_97(int iParam0)//Position - 0x3A7CDE
{
	switch (__LIB_2__.func_106(iParam0))
	{
		case 10:
			return 20;
			break;
		case 6:
		case 3:
			return 10;
			break;
		case 5:
		case 2:
			return 6;
			break;
		case 4:
		case 1:
			return 2;
			break;
	}
	return 0;
}

void func_98(int iParam0)//Position - 0x90AFE
{
	Global_2787909 = iParam0;
}

void func_99(int iParam0)//Position - 0x933E0
{
	if (Global_2815059.f_4623 != iParam0)
	{
		Global_2815059.f_4623 = iParam0;
	}
}

int func_100(int iParam0)//Position - 0x94E08
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_284, 4);
	}
	return 0;
}

bool func_101()//Position - 0x9596B
{
	return BitTest(Global_1958736, 2);
}

void func_102(var uParam0)//Position - 0x7CF6E
{
	if (Global_23150.f_5154 >= 3 || Global_23150.f_5153 >= 4)
	{
		return;
	}
	Global_23150.f_5087[Global_23150.f_5153] = 2;
	Global_23150.f_5153++;
	Global_23150.f_5092[Global_23150.f_5154] = uParam0;
	Global_23150.f_5154++;
}

int func_103(int iParam0)//Position - 0x7FDED
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 11);
}

int func_104(int iParam0)//Position - 0x7FE14
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 10);
}

int func_105(var uParam0)//Position - 0x9722E
{
	switch (uParam0->f_3)
	{
		case 155:
		case 156:
		case 157:
		case 158:
			return 1;
			break;
	}
	return 0;
}

char* func_106(var uParam0)//Position - 0x978AC
{
	switch (uParam0->f_3)
	{
		case 155:
		case 156:
		case 157:
		case 158:
			return "SHOP_BANNER_CLINTON_PARTNER";
			break;
	}
	return "";
}

void func_107(struct<3> Param0, float fParam1, int iParam2)//Position - 0x1104FC
{
	__LIB_2__.func_0(Param0, fParam1, iParam2);
}

float func_108(var uParam0)//Position - 0x1B4680
{
	switch (uParam0->f_3)
	{
		case 155:
		case 156:
		case 157:
		case 158:
			return 1f;
			break;
	}
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5, 25))
	{
		return 1.3f;
	}
	return 1f;
}

Vector3 func_109(var uParam0, int iParam1)//Position - 0x1B472A
{
	switch (uParam0->f_3)
	{
		case 155:
		case 156:
		case 157:
		case 158:
			switch (iParam1)
			{
				case 0:
					return OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(__LIB_2__.func_392(uParam0->f_3, 0), __LIB_2__.func_391(uParam0->f_3, 0), 3.54489f, 1.54312f, 0.490177f);
					break;
			}
			break;
	}
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5, 25))
	{
		return -54.9f, -1090.33f, 25.92f;
	}
	return 0f, 0f, 0f;
}

int func_110(var uParam0)//Position - 0x1B47B9
{
	switch (uParam0->f_3)
	{
		case 155:
		case 156:
		case 157:
		case 158:
			return 1;
			break;
	}
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5, 25))
	{
		return 1;
	}
	return 0;
}

int func_111(int iParam0)//Position - 0x1B5910
{
	struct<3> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		Var0 = { __LIB_0__.func_79(ENTITY::GET_ENTITY_COORDS(iParam0, true) - ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) };
		return __LIB_0__.func_156(ENTITY::GET_ENTITY_FORWARD_VECTOR(PLAYER::PLAYER_PED_ID()), Var0) >= 0f;
	}
	return 0;
}

int func_112(int iParam0, int iParam1, int iParam2)//Position - 0x1FBA5D
{
	if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) == 1 || (TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1) == 0 && iParam2))
	{
		return 1;
	}
	return 0;
}

void func_113(int iParam0, var uParam1)//Position - 0x200B1C
{
	switch (iParam0)
	{
		case joaat("buccaneer2"):
			*uParam1 = (*uParam1 + 0.35f);
			break;
		case joaat("warrener2"):
			*uParam1 = (*uParam1 + 0.3f);
			break;
		case joaat("jester"):
			*uParam1 = (*uParam1 + 0.095f);
			break;
		case joaat("italigto"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("novak"):
			*uParam1 = (*uParam1 - 0.45f);
			break;
		case joaat("casco"):
			*uParam1 = (*uParam1 + 0.25f);
			break;
		case joaat("baller"):
			*uParam1 = (*uParam1 - 0.6f);
			break;
		case joaat("banshee"):
			*uParam1 = (*uParam1 - 0.2f);
			break;
		case joaat("brioso2"):
			*uParam1 = (*uParam1 - 0.2f);
			break;
		case joaat("buffalo4"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("cognoscenti"):
			*uParam1 = (*uParam1 - 0.2f);
			break;
		case joaat("cognoscenti2"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("dubsta"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("dubsta2"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("dukes3"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("dynasty"):
			*uParam1 = (*uParam1 - 0.3f);
			break;
		case joaat("fagaloa"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("feltzer3"):
			*uParam1 = (*uParam1 + 0.25f);
			break;
		case joaat("greenwood"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("hellion"):
			*uParam1 = (*uParam1 - 0.35f);
			break;
		case joaat("hermes"):
			*uParam1 = (*uParam1 + 0.15f);
			break;
		case joaat("impaler"):
			*uParam1 = (*uParam1 + 0.1f);
			break;
		case joaat("kanjo"):
			*uParam1 = (*uParam1 - 0.45f);
			break;
		case joaat("landstalker2"):
			*uParam1 = (*uParam1 - 0.55f);
			break;
		case joaat("mesa"):
			*uParam1 = (*uParam1 - 0.05f);
			break;
		case joaat("michelli"):
			*uParam1 = (*uParam1 - 0.3f);
			break;
		case joaat("nebula"):
			*uParam1 = (*uParam1 - 0.2f);
			break;
		case joaat("omnis"):
			*uParam1 = (*uParam1 - 0.45f);
			break;
		case joaat("penumbra2"):
			*uParam1 = (*uParam1 - 0.35f);
			break;
		case joaat("peyote2"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("picador"):
			*uParam1 = (*uParam1 - 0.25f);
			break;
		case joaat("remus"):
			*uParam1 = (*uParam1 - 0.35f);
			break;
		case joaat("schwarzer"):
			*uParam1 = (*uParam1 + 0.2f);
			break;
		case joaat("seminole2"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("sentinel"):
			*uParam1 = (*uParam1 + 0.1f);
			break;
		case joaat("speedo"):
			*uParam1 = (*uParam1 - 0.45f);
			break;
		case joaat("sultan2"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("tornado2"):
			*uParam1 = (*uParam1 - 0.25f);
			break;
		case joaat("veto2"):
			*uParam1 = (*uParam1 + 0.15f);
			break;
		case joaat("corsita"):
			*uParam1 = (*uParam1 - 0.3f);
			break;
		case joaat("imorgon"):
			*uParam1 = (*uParam1 - 0.3f);
			break;
		case joaat("jester4"):
			*uParam1 = (*uParam1 + 0.15f);
			break;
		case joaat("lm87"):
			*uParam1 = (*uParam1 + 0.15f);
			break;
		case joaat("nero"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("omnisegt"):
			*uParam1 = (*uParam1 - 0.3f);
			break;
		case joaat("openwheel1"):
			*uParam1 = (*uParam1 + 0.25f);
			break;
		case joaat("pariah"):
			*uParam1 = (*uParam1 - 0.05f);
			break;
		case joaat("pfister811"):
			*uParam1 = (*uParam1 + 0.15f);
			break;
		case joaat("s80"):
			*uParam1 = (*uParam1 + 0.25f);
			break;
		case joaat("tezeract"):
			*uParam1 = (*uParam1 + 0.1f);
			break;
		case joaat("turismor"):
			*uParam1 = (*uParam1 + 0.25f);
			break;
		case joaat("zentorno"):
			*uParam1 = (*uParam1 - 0.15f);
			break;
		case joaat("gauntlet4"):
			*uParam1 = (*uParam1 + 0.1f);
			break;
		case joaat("turismo2"):
			*uParam1 = (*uParam1 - 0.2f);
			break;
		case joaat("comet2"):
			*uParam1 = (*uParam1 - 0.1f);
			break;
		case joaat("tailgater2"):
			*uParam1 = (*uParam1 + 0.1f);
			break;
	}
}

int func_114(int iParam0)//Position - 0x20E502
{
	if ((NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(PLAYER::PLAYER_ID(), "AM_MP_SMPL_INTERIOR_EXT", iParam0) || NETWORK::NETWORK_IS_SCRIPT_ACTIVE("AM_MP_SMPL_INTERIOR_EXT", iParam0, true, 0)) || __LIB_3__.func_853(12, iParam0))
	{
		return 1;
	}
	return 0;
}

void func_115(var uParam0, int iParam1)//Position - 0x20F3B0
{
	if (uParam0->f_495 != iParam1)
	{
		uParam0->f_495 = iParam1;
	}
}

void func_116(var uParam0)//Position - 0x20F464
{
	float fVar0;
	fVar0 = 0.7f;
	*uParam0 = { 1f, 1f, 1f };
	uParam0->f_3 = { ((10f * 0.8f) * fVar0), ((6f * 0.8f) * fVar0), (1f * fVar0) };
	uParam0->f_6 = { 0f, 0f, 0f };
	uParam0->f_9 = 0;
}

char* func_117()//Position - 0xCBE
{
	return "ANIM@AMB@NIGHTCLUB@SMOKING@";
}

void func_118(int iParam0, bool bParam1, int iParam2)//Position - 0x1799D0
{
	if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		return;
	}
}

void func_119(bool bParam0, int iParam1)//Position - 0x17A8D9
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_3, 17))
		{
			MISC::SET_BIT(&(Global_1946250.f_3), 17);
			Global_1946250.f_4549 = iParam1;
		}
	}
	else if (BitTest(Global_1946250.f_3, 17))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_3), 17);
		Global_1946250.f_4549 = -1;
	}
}

void func_120(bool bParam0)//Position - 0x17AEF1
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_5, 18))
		{
			MISC::SET_BIT(&(Global_1946250.f_5), 18);
		}
	}
	else if (BitTest(Global_1946250.f_5, 18))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_5), 18);
	}
}

bool func_121(int iParam0)//Position - 0x17DFCB
{
	if (!BitTest(Global_1946250.f_11, 0))
	{
		return 0;
	}
	return Global_1946250.f_4703 == iParam0;
}

void func_122(bool bParam0, bool bParam1)//Position - 0x1825BF
{
	__LIB_1__.func_317(1, 2, 1, 1, 1);
	__LIB_1__.func_318(1, 1, 0, 0, 0);
	if (bParam1)
	{
		__LIB_1__.func_345(201, "ITEM_SELECT" /* GXT: Select */, -1, 0);
	}
	if (bParam0)
	{
		__LIB_1__.func_345(202, "ITEM_BACK" /* GXT: Back */, -1, 0);
	}
}

bool func_123(var uParam0)//Position - 0x183803
{
	return BitTest(uParam0->f_2, 2);
}

int func_124(var uParam0)//Position - 0x18383B
{
	if (__LIB_3__.func_20(uParam0))
	{
		return uParam0->f_33[uParam0->f_5];
	}
	return 0;
}

void func_125(var uParam0, int iParam1, bool bParam2)//Position - 0x183A63
{
	if (bParam2)
	{
		MISC::SET_BIT(&(uParam0->f_45), iParam1);
	}
	else
	{
		MISC::CLEAR_BIT(&(uParam0->f_45), iParam1);
	}
}

int func_126(var uParam0, int iParam1)//Position - 0x184033
{
	if (__LIB_2__.func_445(uParam0, iParam1))
	{
		return BitTest(uParam0->f_3, iParam1);
	}
	return 0;
}

bool func_127(var uParam0, int iParam1)//Position - 0x1840AD
{
	return BitTest(uParam0->f_45, iParam1);
}

bool func_128()//Position - 0x1841D1
{
	return (Global_1574935[0] != 0 || Global_1574935[1] != 0);
}

void func_129(int iParam0, var uParam1)//Position - 0x18441D
{
	if (*uParam1 != iParam0)
	{
		*uParam1 = iParam0;
	}
}

bool func_130(int iParam0, int iParam1)//Position - 0x1936C7
{
	if (iParam0 == iParam1)
	{
		return 1;
	}
	if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, false) || !PED::IS_PED_IN_ANY_VEHICLE(iParam1, false))
	{
		return 0;
	}
	return PED::GET_VEHICLE_PED_IS_IN(iParam0, false) == PED::GET_VEHICLE_PED_IS_IN(iParam1, false);
}

struct<16> func_131(int iParam0, int iParam1, bool bParam2)//Position - 0x195C46
{
	struct<16> Var0;
	if (bParam2)
	{
	}
	if (iParam0 == -1)
	{
		if (__LIB_6__.func_107(iParam1) != -1)
		{
			Var0 = { Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_105[__LIB_6__.func_107(iParam1) /*16*/] };
		}
	}
	else if (iParam0 > -1 && iParam0 < 30)
	{
		Var0 = { Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_105[iParam0 /*16*/] };
	}
	else if (bParam2)
	{
	}
	return Var0;
}

int func_132(int iParam0, var uParam1)//Position - 0x1A1010
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = 15947;
			return 1;
		case 1:
			*uParam1 = 15948;
			return 1;
		case 2:
			*uParam1 = 15949;
			return 1;
		case 3:
			*uParam1 = 15950;
			return 1;
		case 4:
			*uParam1 = 15951;
			return 1;
		case 5:
			*uParam1 = 15952;
			return 1;
		case 6:
			*uParam1 = 15953;
			return 1;
		case 7:
			*uParam1 = 15954;
			return 1;
		case 8:
			*uParam1 = 15955;
			return 1;
		case 9:
			*uParam1 = 15956;
			return 1;
		case 10:
			*uParam1 = 15957;
			return 1;
		case 11:
			*uParam1 = 15958;
			return 1;
		case 12:
			*uParam1 = 15959;
			return 1;
		case 13:
			*uParam1 = 15960;
			return 1;
		case 14:
			*uParam1 = 15961;
			return 1;
		case 15:
			*uParam1 = 15962;
			return 1;
		case 16:
			*uParam1 = 15996;
			return 1;
		case 17:
			*uParam1 = 15997;
			return 1;
		case 18:
			*uParam1 = 15998;
			return 1;
		case 19:
			*uParam1 = 30560;
			return 1;
		default:
	}
	return 0;
}

int func_133(int iParam0)//Position - 0x1A11E1
{
	int iVar0;
	iParam0 = (iParam0 - 159);
	iVar0 = 0;
	switch (iParam0)
	{
		case 0:
			MISC::SET_BIT(&iVar0, 4);
			MISC::SET_BIT(&iVar0, 2);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 1:
			MISC::SET_BIT(&iVar0, 2);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 2:
			MISC::SET_BIT(&iVar0, 1);
			MISC::SET_BIT(&iVar0, 0);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 3:
			MISC::SET_BIT(&iVar0, 0);
			MISC::SET_BIT(&iVar0, 1);
			MISC::SET_BIT(&iVar0, 2);
			MISC::SET_BIT(&iVar0, 4);
			MISC::SET_BIT(&iVar0, 5);
			MISC::SET_BIT(&iVar0, 6);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 4:
			MISC::SET_BIT(&iVar0, 5);
			MISC::SET_BIT(&iVar0, 0);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 5:
			MISC::SET_BIT(&iVar0, 4);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 6:
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 7:
			MISC::SET_BIT(&iVar0, 9);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 8:
			MISC::SET_BIT(&iVar0, 11);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 9:
			MISC::SET_BIT(&iVar0, 7);
			MISC::SET_BIT(&iVar0, 10);
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 10:
			MISC::SET_BIT(&iVar0, 11);
			MISC::SET_BIT(&iVar0, 9);
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 11:
			MISC::SET_BIT(&iVar0, 8);
			MISC::SET_BIT(&iVar0, 10);
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 12:
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 13:
			MISC::SET_BIT(&iVar0, 10);
			MISC::SET_BIT(&iVar0, 11);
			MISC::SET_BIT(&iVar0, 12);
			MISC::SET_BIT(&iVar0, 9);
			MISC::SET_BIT(&iVar0, 14);
			MISC::SET_BIT(&iVar0, 15);
			MISC::SET_BIT(&iVar0, 16);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 14:
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 15:
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 16);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 16:
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 15);
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 17:
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 18:
			MISC::SET_BIT(&iVar0, 19);
			break;
		case 19:
			MISC::SET_BIT(&iVar0, 0);
			MISC::SET_BIT(&iVar0, 1);
			MISC::SET_BIT(&iVar0, 2);
			MISC::SET_BIT(&iVar0, 3);
			MISC::SET_BIT(&iVar0, 4);
			MISC::SET_BIT(&iVar0, 5);
			MISC::SET_BIT(&iVar0, 6);
			MISC::SET_BIT(&iVar0, 7);
			MISC::SET_BIT(&iVar0, 8);
			MISC::SET_BIT(&iVar0, 9);
			MISC::SET_BIT(&iVar0, 10);
			MISC::SET_BIT(&iVar0, 11);
			MISC::SET_BIT(&iVar0, 12);
			MISC::SET_BIT(&iVar0, 13);
			MISC::SET_BIT(&iVar0, 14);
			MISC::SET_BIT(&iVar0, 15);
			MISC::SET_BIT(&iVar0, 16);
			MISC::SET_BIT(&iVar0, 17);
			MISC::SET_BIT(&iVar0, 18);
			break;
	}
	return iVar0;
}

int func_134(int iParam0)//Position - 0x1A1523
{
	switch (iParam0)
	{
		case joaat("microlight"):
		case joaat("havok"):
		case joaat("seabreeze"):
		case joaat("rogue"):
		case joaat("pyro"):
		case joaat("buzzard"):
		case joaat("frogger"):
		case joaat("maverick"):
		case joaat("supervolito"):
		case joaat("supervolito2"):
		case joaat("volatus"):
		case joaat("cuban800"):
		case joaat("besra"):
		case joaat("duster"):
		case joaat("stunt"):
		case joaat("velum"):
		case joaat("velum2"):
		case joaat("vestra"):
		case joaat("lazer"):
		case joaat("alphaz1"):
		case joaat("howard"):
		case joaat("molotok"):
		case joaat("nokota"):
		case joaat("starling"):
		case joaat("seasparrow"):
		case joaat("conada"):
			return 0;
		case joaat("hydra"):
		case joaat("dodo"):
		case joaat("mammatus"):
		case joaat("annihilator"):
		case joaat("tula"):
		case joaat("hunter"):
		case joaat("mogul"):
		case joaat("cargobob"):
		case joaat("cargobob2"):
		case joaat("shamal"):
		case joaat("savage"):
		case joaat("luxor"):
		case joaat("luxor2"):
		case joaat("nimbus"):
		case joaat("swift"):
		case joaat("swift2"):
		case joaat("valkyrie"):
		case joaat("akula"):
			return 1;
		case joaat("titan"):
		case joaat("skylift"):
		case joaat("miljet"):
		case joaat("bombushka"):
		case joaat("volatol"):
			return 2;
		case joaat("alkonost"):
			return 3;
		default:
	}
	if (iParam0 == joaat("strikeforce"))
	{
		return 1;
	}
	return 0;
}

int func_135(int iParam0)//Position - 0x1A167D
{
	iParam0 = (iParam0 - 159);
	switch (iParam0)
	{
		case 0:
		case 1:
		case 5:
		case 6:
		case 7:
		case 8:
		case 10:
		case 12:
		case 14:
		case 15:
		case 17:
		case 18:
			return 0;
		case 2:
		case 4:
		case 9:
		case 11:
		case 16:
			return 1;
		case 3:
		case 13:
			return 2;
		case 19:
			return 3;
		default:
	}
	return 0;
}

bool func_136()//Position - 0x1A1A02
{
	return Global_2703735.f_910;
}

void func_137()//Position - 0x1A1F6E
{
	Global_1946250.f_4700 = -1;
}

Vector3 func_138(float fParam0, struct<3> Param1, struct<3> Param2)//Position - 0x1A5F66
{
	struct<3> Var0;
	Var0 = { Param1 + __LIB_0__.func_298(Param2, fParam0) * Vector(59f, 59f, 59f) + Vector((2f + 1f), 0f, 0f) };
	return Var0;
}

int func_139(var uParam0)//Position - 0x1A65CE
{
	if (((uParam0->f_17 == joaat("cargobob") || uParam0->f_17 == joaat("cargobob2")) || uParam0->f_17 == joaat("cargobob3")) || uParam0->f_17 == joaat("cargobob4"))
	{
		return 1;
	}
	return 0;
}

int func_140(var uParam0, int iParam1)//Position - 0x1A6F4D
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (uParam0->f_9 == iParam1)
	{
		return -1;
	}
	else if (uParam0->f_10 == iParam1)
	{
		return 0;
	}
	else
	{
		if (uParam0->f_10 != uParam0->f_9)
		{
			iVar1 = 1;
		}
		iVar0 = 0;
		while (iVar0 < uParam0->f_57)
		{
			if (uParam0->f_46[iVar0] != uParam0->f_9 && uParam0->f_46[iVar0] != uParam0->f_10)
			{
				if (uParam0->f_46[iVar0] == iParam1)
				{
					iVar2 = iVar1;
					if (iVar2 == 0)
					{
						return 0;
					}
					else if (iVar2 == 1)
					{
						return 1;
					}
					else if (iVar2 == 2)
					{
						return 2;
					}
				}
				iVar1++;
			}
			iVar0++;
		}
	}
	return -2;
}

bool func_141(int iParam0)//Position - 0x1A7131
{
	return VEHICLE::IS_THIS_MODEL_A_HELI(iParam0);
}

void func_142(var uParam0)//Position - 0x1A7BEF
{
	if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(uParam0->f_20))
	{
		MISC::SET_BIT(&(uParam0->f_1), 3);
		VEHICLE::SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED(uParam0->f_20, 0);
		VEHICLE::SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER(uParam0->f_20, true);
		VEHICLE::SET_VEHICLE_DOORS_LOCKED(uParam0->f_20, 4);
	}
}

int func_143(var uParam0, int iParam1)//Position - 0x1A7C4F
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < uParam0->f_57)
	{
		iVar1 = uParam0->f_46[iVar0];
		if (iVar1 == iParam1)
		{
			return BitTest(uParam0->f_58, iVar0);
		}
		iVar0++;
	}
	return 0;
}

bool func_144()//Position - 0x1A7DFC
{
	return BitTest(Global_2815059.f_5194, 5);
}

int func_145(var uParam0)//Position - 0x1A7F09
{
	struct<3> Var0;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, uParam0->f_2, true) < 50f && Var0.f_2 > (uParam0->f_2.f_2 + 2f))
		{
			return 1;
		}
	}
	return 0;
}

void func_146(var uParam0)//Position - 0x1A81EE
{
	__LIB_3__.func_702(uParam0, 2);
}

int func_147(int iParam0)//Position - 0x1A8DF8
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return __LIB_0__.func_649(&(Global_1853348[iParam0 /*834*/].f_267.f_336.f_10));
	}
	return 0;
}

char* func_148(int iParam0, int iParam1)//Position - 0x1A8E22
{
	switch (iParam0)
	{
		case joaat("radio_22_dlc_battle_mix1_club"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_CLUB_03";
					break;
			}
			break;
		case joaat("radio_23_dlc_battle_mix2_club"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_CLUB_03";
					break;
			}
			break;
		case joaat("radio_24_dlc_battle_mix3_club"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_CLUB_03";
					break;
			}
			break;
		case joaat("radio_25_dlc_battle_mix4_club"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_CLUB_03";
					break;
			}
			break;
		case joaat("dlc_battle_mix1_club_priv"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_PRIVATE_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_PRIVATE_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX1_PRIVATE_CLUB_03";
					break;
			}
			break;
		case joaat("dlc_battle_mix2_club_priv"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_PRIVATE_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_PRIVATE_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX2_PRIVATE_CLUB_03";
					break;
			}
			break;
		case joaat("dlc_battle_mix3_club_priv"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_PRIVATE_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_PRIVATE_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX3_PRIVATE_CLUB_03";
					break;
			}
			break;
		case joaat("dlc_battle_mix4_club_priv"):
			switch (iParam1)
			{
				case 1:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_PRIVATE_CLUB_01";
					break;
				case 2:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_PRIVATE_CLUB_02";
					break;
				case 3:
					return "DLC_BATTLE_MUSIC_BATTLE_MIX4_PRIVATE_CLUB_03";
					break;
			}
			break;
	}
	return "";
}

bool func_149()//Position - 0x1B8943
{
	return __LIB_0__.func_137(25008, -1);
}

int func_150(bool bParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0xF5729
{
	if (__LIB_1__.func_155(bParam0, 1, 0) && __LIB_1__.func_155(bParam1, 1, 0))
	{
		if (Global_1853348[bParam0 /*834*/].f_267.f_33 == Global_1853348[bParam1 /*834*/].f_267.f_33 && Global_1853348[bParam0 /*834*/].f_267.f_32 == Global_1853348[bParam1 /*834*/].f_267.f_32)
		{
			if (!bParam2)
			{
				return 1;
			}
			else
			{
				if (BitTest(Global_1853348[bParam0 /*834*/].f_267.f_30, 3) && BitTest(Global_1853348[bParam1 /*834*/].f_267.f_30, 3))
				{
					return 1;
				}
				if (!BitTest(Global_1853348[bParam0 /*834*/].f_267.f_30, 3) && !BitTest(Global_1853348[bParam1 /*834*/].f_267.f_30, 3))
				{
					return 1;
				}
			}
		}
	}
	if (bParam3)
	{
		if ((((Global_2689235[bParam0 /*453*/].f_318.f_6 != -1 && Global_2689235[bParam0 /*453*/].f_318.f_7 > -1) && Global_2689235[bParam0 /*453*/].f_318.f_6 == Global_2689235[bParam1 /*453*/].f_318.f_6) && Global_2689235[bParam0 /*453*/].f_318.f_7 == Global_2689235[bParam1 /*453*/].f_318.f_7) && Global_2680265.f_903.f_168[bParam0] == Global_2680265.f_903.f_168[bParam1])
		{
			return 1;
		}
	}
	return 0;
}

int func_151(bool bParam0)//Position - 0x1AE38F
{
	if (bParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_2689235[bParam0 /*453*/].f_318.f_4, 16);
}

int func_152(struct<3> Param0, int iParam1)//Position - 0x1B021A
{
	switch (iParam1)
	{
		case 1:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 379.363f, -80.449f, 114.635f, 394.338f, -44.549f, 136.66f, 44.675f, false, true))
			{
				return 1;
			}
			break;
		case 2:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1040.412f, -437.769f, 75.094f, -996.012f, -416.269f, 97.369f, 44.625f, false, true))
			{
				return 1;
			}
			break;
		case 3:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -606.824f, -716.454f, 126.511f, -567.124f, -716.529f, 149.886f, 31.15f, false, true))
			{
				return 1;
			}
			break;
		case 4:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1018.396f, -781.148f, 71.337f, -992.071f, -709.123f, 96.537f, 60.45f, false, true))
			{
				return 1;
			}
			break;
	}
	return 0;
}

bool func_153(var uParam0)//Position - 0x1B0472
{
	return uParam0->f_9 == PLAYER::PLAYER_ID();
}

int func_154(var uParam0, bool bParam1)//Position - 0x1B1547
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (uParam0->f_9 == bParam1)
	{
		return -1;
	}
	else if (uParam0->f_10 == bParam1)
	{
		return 0;
	}
	else
	{
		if (uParam0->f_10 != uParam0->f_9)
		{
			iVar1 = 1;
		}
		iVar0 = 0;
		while (iVar0 < uParam0->f_57)
		{
			if (uParam0->f_46[iVar0] != uParam0->f_9 && uParam0->f_46[iVar0] != uParam0->f_10)
			{
				if (uParam0->f_46[iVar0] == bParam1)
				{
					iVar2 = iVar1;
					if (iVar2 == 0)
					{
						return 0;
					}
					else if (iVar2 == 1)
					{
						return 1;
					}
					else if (iVar2 == 2)
					{
						return 2;
					}
				}
				iVar1++;
			}
			iVar0++;
		}
	}
	return -2;
}

void func_155(int iParam0, bool bParam1, int iParam2, int iParam3, int iParam4)//Position - 0x1B20CD
{
	if (iParam2 < 0 && iParam0 != -1)
	{
		return;
	}
	if (Global_1946244 == 0 && bParam1)
	{
		return;
	}
	if (bParam1)
	{
		Global_1946250.f_4716 = iParam0;
		Global_1946250.f_4716.f_1 = iParam2;
		Global_1946250.f_4716.f_2 = iParam3;
		Global_1946250.f_4716.f_4 = iParam4;
		Global_1946250.f_4716.f_3 = 1;
	}
	else
	{
		Global_1946250.f_4716 = -1;
		Global_1946250.f_4716.f_1 = -1;
		Global_1946250.f_4716.f_6 = -1;
		Global_1946250.f_4716.f_2 = 0;
		Global_1946250.f_4716.f_3 = 0;
		Global_1946250.f_4716.f_4 = 0;
	}
}

void func_156(bool bParam0)//Position - 0x1B2EC5
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 18))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 18);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 18))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 18);
	}
}

void func_157(bool bParam0)//Position - 0x1B2F32
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 14))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 14);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 14))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 14);
	}
}

void func_158(int iParam0, int iParam1)//Position - 0x1B6EF5
{
	int iVar0;
	int iVar1;
	__LIB_2__.func_747(iParam1, &iVar0, &iVar1);
	switch (iParam0)
	{
		case 0:
			MISC::CLEAR_BIT(&(Global_1946250.f_2606[iVar0]), iVar1);
			return;
			break;
		case 1:
			MISC::CLEAR_BIT(&(Global_1946250.f_2612[iVar0]), iVar1);
			return;
			break;
		case 2:
			MISC::CLEAR_BIT(&(Global_1946250.f_2618[iVar0]), iVar1);
			return;
			break;
		case 3:
			MISC::CLEAR_BIT(&(Global_1946250.f_3262[iVar0]), iVar1);
			return;
			break;
		case 4:
			MISC::CLEAR_BIT(&(Global_1946250.f_3268[iVar0]), iVar1);
			return;
			break;
		case 5:
			MISC::CLEAR_BIT(&(Global_1946250.f_3548[iVar0]), iVar1);
			return;
			break;
		case 6:
			MISC::CLEAR_BIT(&(Global_1946250.f_3554[iVar0]), iVar1);
			return;
			break;
		case 7:
			MISC::CLEAR_BIT(&(Global_1946250.f_3560[iVar0]), iVar1);
			return;
			break;
		case 8:
			MISC::CLEAR_BIT(&(Global_1946250.f_3580[iVar0]), iVar1);
			return;
			break;
		case 9:
			MISC::CLEAR_BIT(&(Global_1946250.f_3586[iVar0]), iVar1);
			return;
			break;
		case 10:
			MISC::CLEAR_BIT(&(Global_1946250.f_3274[iVar0]), iVar1);
			return;
			break;
		case 11:
			MISC::CLEAR_BIT(&(Global_1946250.f_3566[iVar0]), iVar1);
			return;
			break;
		case 12:
			MISC::CLEAR_BIT(&(Global_1946250.f_3572[iVar0]), iVar1);
			return;
			break;
		case 13:
			MISC::CLEAR_BIT(&(Global_1946250.f_3283[iVar0]), iVar1);
			return;
			break;
	}
}

void func_159(bool bParam0)//Position - 0x1B73CC
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 21);
	}
}

void func_160(bool bParam0)//Position - 0x1B7439
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 19))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 19);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 19))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 19);
	}
}

void func_161(bool bParam0)//Position - 0x1B75D6
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_2, 5))
		{
			MISC::SET_BIT(&(Global_1946250.f_2), 5);
		}
	}
	else if (BitTest(Global_1946250.f_2, 5))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_2), 5);
	}
}

int func_162(int iParam0)//Position - 0x1B86B9
{
	switch (iParam0)
	{
		case -1:
		case 0:
		case 1:
		case 2:
		case 3:
		case 6:
		case 18:
		case 19:
		case 21:
			return 0;
			break;
	}
	return 1;
}

int func_163(char* sParam0, bool bParam1)//Position - 0x1BA20A
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	if (bParam1)
	{
		AUDIO::START_AUDIO_SCENE(sParam0);
		return 1;
	}
	else
	{
		AUDIO::STOP_AUDIO_SCENE(sParam0);
		return 1;
	}
	return 0;
}

void func_164(int iParam0)//Position - 0x1BA366
{
	struct<12> Var0;
	if (iParam0 > -1 && iParam0 < 10)
	{
		if (Global_2667225.f_368[iParam0 /*12*/].f_9)
		{
			Global_2667225.f_368[iParam0 /*12*/] = { Var0 };
		}
	}
}

int func_165(int iParam0)//Position - 0x1BC9A8
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 14);
	}
	return 0;
}

int func_166(int iParam0)//Position - 0x1BCA5E
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 20);
	}
	return 0;
}

void func_167(bool bParam0)//Position - 0x1BCC1A
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 22))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 22);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 22))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 22);
	}
}

void func_168(bool bParam0)//Position - 0x1BCD59
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 12))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 12);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 12))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 12);
	}
}

void func_169(bool bParam0)//Position - 0x1BDD46
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5, 1))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5), 1);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5, 1))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_5), 1);
	}
}

void func_170(bool bParam0)//Position - 0x1BF3A7
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_2, 28))
		{
			MISC::SET_BIT(&(Global_1946250.f_2), 28);
		}
	}
	else if (BitTest(Global_1946250.f_2, 28))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_2), 28);
	}
}

void func_171(bool bParam0)//Position - 0x1BF4BF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 30))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 30);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 30))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 30);
	}
}

int func_172(var uParam0)//Position - 0x1C373B
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_6)
	{
		if (__LIB_9__.func_126(uParam0, iVar0))
		{
			return iVar0;
		}
		iVar0++;
	}
	return 0;
}

int func_173(var uParam0)//Position - 0x1C3769
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < uParam0->f_6)
	{
		if (__LIB_9__.func_126(uParam0, iVar0))
		{
			iVar1 = iVar0;
		}
		iVar0++;
	}
	return iVar1;
}

void func_174(var uParam0)//Position - 0x1C37A6
{
	if (uParam0->f_5 >= 0)
	{
		if (!BitTest(uParam0->f_4, uParam0->f_5))
		{
			MISC::SET_BIT(&(uParam0->f_2), 1);
			MISC::CLEAR_BIT(&(uParam0->f_2), 3);
			AUDIO::PLAY_SOUND_FRONTEND(-1, "SELECT" /* GXT: Filter List */, "HUD_FREEMODE_SOUNDSET", true);
			__LIB_9__.func_125(uParam0, 0, 0);
		}
		else
		{
			AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_FREEMODE_SOUNDSET", true);
		}
	}
}

int func_175(var uParam0, int iParam1)//Position - 0x1C3800
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < uParam0->f_6)
	{
		if (__LIB_9__.func_126(uParam0, iVar0))
		{
			if (iParam1 == iVar1)
			{
				return iVar0;
			}
			iVar1++;
		}
		iVar0++;
	}
	return -1;
}

int func_176()//Position - 0x1C4333
{
	int iVar0;
	if (Global_2815059.f_5195.f_765)
	{
		iVar0 = 0;
		while (iVar0 < 10)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_1649593.f_4659.f_11[iVar0 /*16*/])) && MISC::GET_HASH_KEY(&(Global_1649593.f_4659.f_11[iVar0 /*16*/])) == joaat("TSA_HUD_START"))
			{
				return Global_1649593.f_4659[iVar0];
			}
			iVar0++;
		}
	}
	return -1;
}

void func_177(var uParam0, struct<16> Param1, var uParam2, var uParam3, int iParam4)//Position - 0x1C46DC
{
	int iVar0;
	uParam0->f_7 = { Param1 };
	iVar0 = 0;
	while (iVar0 < __LIB_2__.func_559(iParam4, 9))
	{
		uParam0->f_23[iVar0] = (*uParam2)[iVar0];
		uParam0->f_33[iVar0] = (*uParam3)[iVar0];
		MISC::SET_BIT(&(uParam0->f_3), iVar0);
		iVar0++;
	}
	uParam0->f_6 = iParam4;
	uParam0->f_2 = 0;
	uParam0->f_1 = 0;
	*uParam0 = 0;
}

void func_178(bool bParam0)//Position - 0x1C7942
{
	if (bParam0)
	{
		MISC::SET_BIT(&Global_1946250, 26);
	}
	else
	{
		MISC::CLEAR_BIT(&Global_1946250, 26);
	}
}

bool func_179()//Position - 0x1C7CB6
{
	return BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 19);
}

void func_180(int iParam0, int iParam1, var uParam2)//Position - 0x1C7DAB
{
	struct<5> Var0;
	Var0.f_0 = -1338917610;
	Var0.f_1 = PLAYER::PLAYER_ID();
	Var0.f_2 = uParam2;
	Var0.f_3 = iParam1;
	Var0.f_4 = iParam0;
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 5, iParam0);
	}
}

var func_181()//Position - 0x1C80DE
{
	return BitTest(Global_1946250.f_5, 17);
}

int func_182()//Position - 0x1C811E
{
	return Global_1946250.f_4549;
}

void func_183(bool bParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x1C813E
{
	if (iParam1 == -1 || iParam1 == 159)
	{
		return;
	}
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_6, 12))
		{
			if (GRAPHICS::GET_TOGGLE_PAUSED_RENDERPHASES_STATUS())
			{
				GRAPHICS::TOGGLE_PAUSED_RENDERPHASES(false);
			}
			if (bParam3)
			{
				STREAMING::CLEAR_FOCUS();
			}
			MISC::SET_BIT(&(Global_1946250.f_6), 12);
			Global_1946250.f_4702 = iParam1;
		}
	}
	else if (BitTest(Global_1946250.f_6, 12))
	{
		if (Global_1946250.f_4702 == iParam1 || iParam2)
		{
			if (!GRAPHICS::GET_TOGGLE_PAUSED_RENDERPHASES_STATUS())
			{
				GRAPHICS::TOGGLE_PAUSED_RENDERPHASES(true);
			}
			MISC::CLEAR_BIT(&(Global_1946250.f_6), 12);
			Global_1946250.f_4702 = -1;
		}
	}
}

bool func_184(var uParam0)//Position - 0x1C8DEC
{
	return BitTest(uParam0->f_3, 13);
}

int func_185(int iParam0)//Position - 0x1C9702
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_5, 5);
	}
	return 0;
}

void func_186(bool bParam0)//Position - 0x1C9EA7
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_3, 8))
		{
			MISC::SET_BIT(&(Global_1946250.f_3), 8);
		}
	}
	else if (BitTest(Global_1946250.f_3, 8))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_3), 8);
	}
}

int func_187(int iParam0)//Position - 0x1C9F25
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_292, 2);
	}
	return 0;
}

bool func_188()//Position - 0x1CA42B
{
	if (!__LIB_0__.func_121(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	return ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 1561.5027f, 407.0425f, -56.426216f, 1561.4854f, 414.2987f, -54.71336f, 4.5f, false, true, 0);
}

bool func_189(var uParam0)//Position - 0x1CB296
{
	return !MISC::IS_STRING_NULL_OR_EMPTY(uParam0->f_21);
}

void func_190(bool bParam0)//Position - 0x1CB2B8
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 17))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 17);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 17))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 17);
	}
}

bool func_191()//Position - 0x1CC50F
{
	return BitTest(Global_1946250.f_5, 3);
}

var func_192(var uParam0)//Position - 0x1CC51F
{
	return BitTest(uParam0->f_3, 1);
}

int func_193(int iParam0)//Position - 0x1CCB3E
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 17);
	}
	return 0;
}

int func_194(int iParam0)//Position - 0x1CCB64
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 16);
	}
	return 0;
}

int func_195(int iParam0)//Position - 0x1CCB8A
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 10);
	}
	return 0;
}

int func_196(int iParam0)//Position - 0x1CCBB0
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 16);
	}
	return 0;
}

int func_197(int iParam0)//Position - 0x1CCBD6
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 17);
	}
	return 0;
}

int func_198(int iParam0)//Position - 0x1CCBFC
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 15);
	}
	return 0;
}

bool func_199()//Position - 0x1CCC22
{
	return Global_1574921;
}

bool func_200()//Position - 0x1CCC50
{
	return BitTest(Global_1946250, 11);
}

int func_201()//Position - 0x1CD209
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 6)
	{
		if (iVar0 != 0 && Global_262145.f_31703[iVar0] == Global_4718592.f_116524)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_202()//Position - 0x1CD24A
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return __LIB_0__.func_490();
	}
	return __LIB_0__.func_829(Global_4718592.f_116524);
}

int func_203()//Position - 0x1CD593
{
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return 0;
	}
	if (__LIB_0__.func_742() == 31)
	{
		if (__LIB_0__.func_835(Global_4718592.f_116524))
		{
			return 1;
		}
	}
	return 0;
}

int func_204(int iParam0)//Position - 0x1CF2A4
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 14);
}

bool func_205()//Position - 0x1CF898
{
	return BitTest(Global_1946250.f_2, 12);
}

void func_206(bool bParam0)//Position - 0x1D1185
{
	if (bParam0)
	{
		MISC::SET_BIT(&(Global_1946250.f_7), 25);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_7), 25);
	}
}

void func_207(bool bParam0)//Position - 0x1D1219
{
	if (bParam0)
	{
		MISC::SET_BIT(&Global_1946250, 6);
	}
	else
	{
		MISC::CLEAR_BIT(&Global_1946250, 6);
	}
}

bool func_208()//Position - 0x1D1AA3
{
	return __LIB_0__.func_137(22081, -1);
}

bool func_209()//Position - 0x1D1AB3
{
	return __LIB_0__.func_137(22080, -1);
}

int func_210(int iParam0)//Position - 0x1D1D76
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 30);
	}
	return 0;
}

void func_211(int iParam0, var uParam1)//Position - 0x1D1E8B
{
	if (iParam0 > -1 && iParam0 < 159)
	{
		*uParam1 = { Global_1946250.f_1011[iParam0 /*3*/] };
	}
}

char* func_212(int iParam0)//Position - 0x5D4
{
	switch (iParam0)
	{
		case 0:
			return "AIRPORT_FAR_RIGHT_R";
		case 1:
			return "AIRPORT_FAR_RIGHT_L";
		case 2:
			return "AIRPORT_LEFT_R";
		case 3:
			return "AIRPORT_LEFT_L";
		case 5:
			return "AIRPORT_CENTRE_R";
		case 4:
			return "AIRPORT_CENTRE_L";
		case 6:
			return "GOVERNMENT_FACILITY_NORTH";
		case 7:
			return "GOVERNMENT_FACILITY_SOUTH";
		default:
	}
	return "INVALID";
}

void func_213(int iParam0, var uParam1, var uParam2, var uParam3)//Position - 0x686
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -1019.33044f, -2426.0234f, 13.008f };
			*uParam3 = 8f;
			break;
		case 1:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -1004.44977f, -2400.376f, 13.08f };
			*uParam3 = 8f;
			break;
		case 2:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -996.74f, -2826.1f, 12.99f };
			*uParam3 = 8f;
			break;
		case 3:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -971.11f, -2840.98f, 13.07f };
			*uParam3 = 8f;
			break;
		case 5:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -1157.67f, -2719.3f, 12.96f };
			*uParam3 = 8f;
			break;
		case 4:
			*uParam1 = joaat("prop_gate_airport_01");
			*uParam2 = { -1132.1f, -2734.17f, 13.01f };
			*uParam3 = 8f;
			break;
		case 6:
			*uParam1 = joaat("prop_gate_military_01");
			*uParam2 = { 2492.459f, -335.52747f, 92.119f };
			*uParam3 = 8f;
			break;
		case 7:
			*uParam1 = joaat("prop_gate_military_01");
			*uParam2 = { 2492.7598f, -432.71283f, 91.99274f };
			*uParam3 = 8f;
			break;
		default:
			*uParam1 = 0;
			*uParam2 = { 0f, 0f, 0f };
			*uParam3 = -1f;
			break;
	}
}

int func_214(int iParam0, int iParam1)//Position - 0xCA1
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 30230;
				case 1:
					return 30231;
				case 2:
					return 30232;
				case 3:
					return 30233;
				case 4:
					return 30234;
				case 5:
					return 30235;
				case 6:
					return 30236;
				case 7:
					return 30237;
				case 8:
					return 30238;
				case 9:
					return 30239;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 30297;
				case 1:
					return 30298;
				case 2:
					return 30299;
				case 3:
					return 30300;
				case 4:
					return 30301;
				case 5:
					return 30302;
				case 6:
					return 30303;
				case 7:
					return 30304;
				case 8:
					return 30305;
				case 9:
					return 30306;
				default:
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return 30307;
				case 1:
					return 30308;
				default:
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 0:
					return 30310;
				case 1:
					return 30311;
				case 2:
					return 30312;
				case 3:
					return 30313;
				case 4:
					return 30314;
				case 5:
					return 30315;
				case 6:
					return 30316;
				case 7:
					return 30317;
				case 8:
					return 30318;
				case 9:
					return 30319;
				default:
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 0:
					return 32294;
				case 1:
					return 31717;
				case 2:
					return 31718;
				case 3:
					return 31719;
				case 4:
					return 31720;
				case 5:
					return 31721;
				case 6:
					return 31722;
				case 7:
					return 31723;
				case 8:
					return 31724;
				case 9:
					return 31725;
				case 10:
					return 31726;
				case 11:
					return 31727;
				case 12:
					return 31728;
				case 13:
					return 31729;
				case 14:
					return 31730;
				case 15:
					return 31731;
				case 16:
					return 31732;
				case 17:
					return 31733;
				case 18:
					return 31758;
				case 19:
					return 31759;
				default:
			}
			break;
		case 5:
			return 31734;
			break;
		case 6:
			switch (iParam1)
			{
				case 0:
					return 25522;
				case 1:
					return 25523;
				case 2:
					return 25524;
				case 3:
					return 25525;
				case 4:
					return 25526;
				case 5:
					return 25527;
				case 6:
					return 25528;
				case 7:
					return 25529;
				case 8:
					return 25530;
				case 9:
					return 25531;
				default:
			}
			break;
		case 8:
			switch (iParam1)
			{
				case 0:
					return 34252;
				case 1:
					return 34253;
				case 2:
					return 34254;
				case 3:
					return 34255;
				case 4:
					return 34256;
				case 5:
					return 34257;
				case 6:
					return 34258;
				case 7:
					return 34259;
				case 8:
					return 34260;
				case 9:
					return 34261;
				case 10:
					return 34512;
				case 11:
					return 34513;
				case 12:
					return 34514;
				case 13:
					return 34515;
				case 14:
					return 34516;
				case 15:
					return 34517;
				case 16:
					return 34518;
				case 17:
					return 34519;
				case 18:
					return 34520;
				case 19:
					return 34521;
				case 20:
					return 34522;
				case 21:
					return 34523;
				case 22:
					return 34524;
				case 23:
					return 34525;
				case 24:
					return 34526;
				case 25:
					return 34527;
				case 26:
					return 34528;
				case 27:
					return 34529;
				case 28:
					return 34530;
				case 29:
					return 34531;
				case 30:
					return 34532;
				case 31:
					return 34533;
				case 32:
					return 34534;
				case 33:
					return 34535;
				case 34:
					return 34536;
				case 35:
					return 34537;
				case 36:
					return 34538;
				case 37:
					return 34539;
				case 38:
					return 34540;
				case 39:
					return 34541;
				case 40:
					return 34542;
				case 41:
					return 34543;
				case 42:
					return 34544;
				case 43:
					return 34545;
				case 44:
					return 34546;
				case 45:
					return 34547;
				case 46:
					return 34548;
				case 47:
					return 34549;
				case 48:
					return 34550;
				case 49:
					return 34551;
				case 50:
					return 34552;
				case 51:
					return 34553;
				case 52:
					return 34554;
				case 53:
					return 34555;
				case 54:
					return 34556;
				case 55:
					return 34557;
				case 56:
					return 34558;
				case 57:
					return 34559;
				case 58:
					return 34560;
				case 59:
					return 34561;
				case 60:
					return 34562;
				case 61:
					return 34563;
				case 62:
					return 34564;
				case 63:
					return 34565;
				case 64:
					return 34566;
				case 65:
					return 34567;
				case 66:
					return 34568;
				case 67:
					return 34569;
				case 68:
					return 34570;
				case 69:
					return 34571;
				case 70:
					return 34572;
				case 71:
					return 34573;
				case 72:
					return 34574;
				case 73:
					return 34575;
				case 74:
					return 34576;
				case 75:
					return 34577;
				case 76:
					return 34578;
				case 77:
					return 34579;
				case 78:
					return 34580;
				case 79:
					return 34581;
				case 80:
					return 34582;
				case 81:
					return 34583;
				case 82:
					return 34584;
				case 83:
					return 34585;
				case 84:
					return 34586;
				case 85:
					return 34587;
				case 86:
					return 34588;
				case 87:
					return 34589;
				case 88:
					return 34590;
				case 89:
					return 34591;
				case 90:
					return 34592;
				case 91:
					return 34593;
				case 92:
					return 34594;
				case 93:
					return 34595;
				case 94:
					return 34596;
				case 95:
					return 34597;
				case 96:
					return 34598;
				case 97:
					return 34599;
				case 98:
					return 34600;
				case 99:
					return 34601;
				default:
			}
			switch (iParam1)
			{
				case 100:
					return 34602;
				case 101:
					return 34603;
				case 102:
					return 34604;
				case 103:
					return 34605;
				case 104:
					return 34606;
				case 105:
					return 34607;
				case 106:
					return 34608;
				case 107:
					return 34609;
				case 108:
					return 34610;
				case 109:
					return 34611;
				case 110:
					return 34612;
				case 111:
					return 34613;
				case 112:
					return 34614;
				case 113:
					return 34615;
				case 114:
					return 34616;
				case 115:
					return 34617;
				case 116:
					return 34618;
				case 117:
					return 34619;
				case 118:
					return 34620;
				case 119:
					return 34621;
				case 120:
					return 34622;
				case 121:
					return 34623;
				case 122:
					return 34624;
				case 123:
					return 34625;
				case 124:
					return 34626;
				case 125:
					return 34627;
				case 126:
					return 34628;
				case 127:
					return 34629;
				case 128:
					return 34630;
				case 129:
					return 34631;
				case 130:
					return 34632;
				case 131:
					return 34633;
				case 132:
					return 34634;
				case 133:
					return 34635;
				case 134:
					return 34636;
				case 135:
					return 34637;
				case 136:
					return 34638;
				case 137:
					return 34639;
				case 138:
					return 34640;
				case 139:
					return 34641;
				case 140:
					return 34642;
				case 141:
					return 34643;
				case 142:
					return 34644;
				case 143:
					return 34645;
				case 144:
					return 34646;
				case 145:
					return 34647;
				case 146:
					return 34648;
				case 147:
					return 34649;
				case 148:
					return 34650;
				case 149:
					return 34651;
				case 150:
					return 34652;
				case 151:
					return 34653;
				case 152:
					return 34654;
				case 153:
					return 34655;
				case 154:
					return 34656;
				case 155:
					return 34657;
				case 156:
					return 34658;
				case 157:
					return 34659;
				case 158:
					return 34660;
				case 159:
					return 34661;
				case 160:
					return 34662;
				case 161:
					return 34663;
				case 162:
					return 34664;
				case 163:
					return 34665;
				case 164:
					return 34666;
				case 165:
					return 34667;
				case 166:
					return 34668;
				case 167:
					return 34669;
				case 168:
					return 34670;
				case 169:
					return 34671;
				case 170:
					return 34672;
				case 171:
					return 34673;
				case 172:
					return 34674;
				case 173:
					return 34675;
				case 174:
					return 34676;
				case 175:
					return 34677;
				case 176:
					return 34678;
				case 177:
					return 34679;
				case 178:
					return 34680;
				case 179:
					return 34681;
				case 180:
					return 34682;
				case 181:
					return 34683;
				case 182:
					return 34684;
				case 183:
					return 34685;
				case 184:
					return 34686;
				case 185:
					return 34687;
				case 186:
					return 34688;
				case 187:
					return 34689;
				case 188:
					return 34690;
				case 189:
					return 34691;
				case 190:
					return 34692;
				case 191:
					return 34693;
				case 192:
					return 34694;
				case 193:
					return 34695;
				case 194:
					return 34696;
				case 195:
					return 34697;
				case 196:
					return 34698;
				case 197:
					return 34699;
				case 198:
					return 34700;
				case 199:
					return 34701;
				default:
			}
			break;
		case 9:
			switch (iParam1)
			{
				case 0:
					return 34262;
				case 1:
					return 34263;
				case 2:
					return 34264;
				case 3:
					return 34265;
				case 4:
					return 34266;
				case 5:
					return 34267;
				case 6:
					return 34268;
				case 7:
					return 34269;
				case 8:
					return 34270;
				case 9:
					return 34271;
				case 10:
					return 34272;
				case 11:
					return 34273;
				case 12:
					return 34274;
				case 13:
					return 34275;
				case 14:
					return 34276;
				case 15:
					return 34277;
				case 16:
					return 34278;
				case 17:
					return 34279;
				case 18:
					return 34280;
				case 19:
					return 34281;
				case 20:
					return 34282;
				case 21:
					return 34283;
				case 22:
					return 34284;
				case 23:
					return 34285;
				case 24:
					return 34286;
				case 25:
					return 34287;
				case 26:
					return 34288;
				case 27:
					return 34289;
				case 28:
					return 34290;
				case 29:
					return 34291;
				case 30:
					return 34292;
				case 31:
					return 34293;
				case 32:
					return 34294;
				case 33:
					return 34295;
				case 34:
					return 34296;
				case 35:
					return 34297;
				case 36:
					return 34298;
				case 37:
					return 34299;
				case 38:
					return 34300;
				case 39:
					return 34301;
				case 40:
					return 34302;
				case 41:
					return 34303;
				case 42:
					return 34304;
				case 43:
					return 34305;
				case 44:
					return 34306;
				case 45:
					return 34307;
				case 46:
					return 34308;
				case 47:
					return 34309;
				case 48:
					return 34310;
				case 49:
					return 34311;
				case 50:
					return 34312;
				case 51:
					return 34313;
				case 52:
					return 34314;
				case 53:
					return 34315;
				case 54:
					return 34316;
				case 55:
					return 34317;
				case 56:
					return 34318;
				case 57:
					return 34319;
				case 58:
					return 34320;
				case 59:
					return 34321;
				case 60:
					return 34322;
				case 61:
					return 34323;
				case 62:
					return 34324;
				case 63:
					return 34325;
				case 64:
					return 34326;
				case 65:
					return 34327;
				case 66:
					return 34328;
				case 67:
					return 34329;
				case 68:
					return 34330;
				case 69:
					return 34331;
				case 70:
					return 34332;
				case 71:
					return 34333;
				case 72:
					return 34334;
				case 73:
					return 34335;
				case 74:
					return 34336;
				case 75:
					return 34337;
				case 76:
					return 34338;
				case 77:
					return 34339;
				case 78:
					return 34340;
				case 79:
					return 34341;
				case 80:
					return 34342;
				case 81:
					return 34343;
				case 82:
					return 34344;
				case 83:
					return 34345;
				case 84:
					return 34346;
				case 85:
					return 34347;
				case 86:
					return 34348;
				case 87:
					return 34349;
				case 88:
					return 34350;
				case 89:
					return 34351;
				case 90:
					return 34352;
				case 91:
					return 34353;
				case 92:
					return 34354;
				case 93:
					return 34355;
				case 94:
					return 34356;
				case 95:
					return 34357;
				case 96:
					return 34358;
				case 97:
					return 34359;
				case 98:
					return 34360;
				case 99:
					return 34361;
				default:
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 0:
					return 34362;
				case 1:
					return 34363;
				case 2:
					return 34364;
				case 3:
					return 34365;
				case 4:
					return 34366;
				case 5:
					return 34367;
				case 6:
					return 34368;
				case 7:
					return 34369;
				case 8:
					return 34370;
				case 9:
					return 34371;
				default:
			}
			break;
	}
	return 36628;
}

void func_215(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0xAFF46
{
	if (HUD::DOES_BLIP_EXIST(*uParam1))
	{
		if (((__LIB_0__.func_1("HIF_INTRO_HELP" /* GXT: The Music Locker ~BLIP_MUSIC_VENUE~ is a new and exclusive nightclub that has opened under The Diamond Casino & Resort. Meet Miguel Madrazo inside the club to discuss a job opportunity. */) && HUD::IS_BLIP_FLASHING(*uParam1)) || func_1825(11, 146)) || !func_1828(uParam0))
		{
			HUD::SET_BLIP_PRIORITY(*uParam1, 8);
		}
		else
		{
			HUD::SET_BLIP_PRIORITY(*uParam1, __LIB_2__.func_750(uParam0, 0));
		}
		HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam1, "CASINO_ENT_F6" /* GXT: The Music Locker */);
	}
}

int func_216()//Position - 0xB9679
{
	if (__LIB_0__.func_693(PLAYER::PLAYER_ID()) || __LIB_0__.func_694(PLAYER::PLAYER_ID()))
	{
		if (__LIB_1__.func_206() || func_2062())
		{
			return 1;
		}
	}
	return 0;
}

bool func_217(int iParam0)//Position - 0xBC7FE
{
	return (__LIB_2__.func_376(iParam0) && func_2147(iParam0));
}

int func_218(int iParam0)//Position - 0xBD08A
{
	if (iParam0 == __LIB_0__.func_160() || !func_2168(iParam0))
	{
		return 6;
	}
	return Global_1853348[iParam0 /*834*/].f_267.f_408.f_4;
}

int func_219(var uParam0, int iParam1, var uParam2)//Position - 0x16108A
{
	if (__LIB_3__.func_165() || __LIB_3__.func_164(PLAYER::PLAYER_ID()))
	{
		return 1;
	}
	if ((__LIB_2__.func_465(PLAYER::PLAYER_PED_ID(), 1) && !__LIB_3__.func_165()) && !__LIB_3__.func_334())
	{
		return 0;
	}
	if (__LIB_1__.func_205(PLAYER::PLAYER_ID()) == 5)
	{
		return 0;
	}
	if (__LIB_2__.func_509(PLAYER::PLAYER_ID(), 14))
	{
		return 0;
	}
	if (__LIB_1__.func_909())
	{
		return 0;
	}
	if (__LIB_4__.func_0(PLAYER::PLAYER_ID()) && __LIB_6__.func_482(&(Global_1952191.f_5470.f_3)) != iParam1)
	{
		return 0;
	}
	if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 21))
	{
		return 0;
	}
	if (__LIB_0__.func_702(PLAYER::PLAYER_ID(), 25))
	{
		return 0;
	}
	return 1;
}

int func_220()//Position - 0x1C28A2
{
	if (!Global_262145.f_119 /* Tunable: ENABLE_SPRUNK_GTAO_PURCHASING */)
	{
		return 6;
	}
	return 7;
}

int func_221(int iParam0, var uParam1)//Position - 0x1D519F
{
	if (iParam0 != -1)
	{
		return __LIB_5__.func_949(iParam0, uParam1);
	}
	return 0;
}

void func_222()//Position - 0x1ED9B8
{
	Global_2815059.f_337 = 0;
	Global_2815059.f_337.f_1 = 0;
}

bool func_223()//Position - 0x1ED9D2
{
	return Global_1853194 == PLAYER::PLAYER_ID();
}

bool func_224()//Position - 0x1EEFB6
{
	return BitTest(Global_1946250.f_7, 11);
}

int func_225(int iParam0)//Position - 0x1EFC2D
{
	if (__LIB_8__.func_205(iParam0))
	{
		return __LIB_2__.func_321(Global_2689235[iParam0 /*453*/].f_318.f_6);
	}
	return 0;
}

int func_226(int iParam0)//Position - 0x1F0957
{
	return __LIB_8__.func_205(iParam0);
}

int func_227()//Position - 0x1F1A62
{
	return __LIB_8__.func_205(PLAYER::PLAYER_ID());
}

int func_228(bool bParam0)//Position - 0x1F62FC
{
	return __LIB_4__.func_334(bParam0);
}

int func_229()//Position - 0x281171
{
	int iVar0;
	if (__LIB_3__.func_925(PLAYER::PLAYER_ID()))
	{
		iVar0 = __LIB_6__.func_345(0, 0);
	}
	else if (__LIB_4__.func_424(PLAYER::PLAYER_ID()))
	{
		iVar0 = Global_2815059.f_309;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (__LIB_3__.func_925(PLAYER::PLAYER_ID()))
			{
				if (VEHICLE::GET_VEHICLE_MOD(iVar0, 10) == 1 && !__LIB_8__.func_701())
				{
					return 1;
				}
			}
			if (__LIB_4__.func_424(PLAYER::PLAYER_ID()))
			{
				if (VEHICLE::GET_VEHICLE_MOD(iVar0, 10) == 1)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_230(int iParam0)//Position - 0x28BD9F
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(Global_2689235[iParam0 /*453*/].f_52))
		{
			return NETWORK::NET_TO_VEH(Global_2689235[iParam0 /*453*/].f_52);
		}
	}
	return Global_2815059.f_324;
}

int func_231(int iParam0)//Position - 0x28CEB7
{
	var uVar0;
	switch (iParam0)
	{
		case 0:
			STATS::STAT_GET_INT(joaat("SP0_TOTAL_CASH"), &uVar0, -1);
			return uVar0;
		case 1:
			STATS::STAT_GET_INT(joaat("SP1_TOTAL_CASH"), &uVar0, -1);
			return uVar0;
		case 2:
			STATS::STAT_GET_INT(joaat("SP2_TOTAL_CASH"), &uVar0, -1);
			return uVar0;
		default:
	}
	return 0;
}

void func_232(var uParam0, int iParam1)//Position - 0x28D232
{
	uParam0->f_6 = iParam1;
}

void func_233()//Position - 0x290379
{
	Global_2815059.f_337++;
}

int func_234()//Position - 0x290459
{
	return 100;
}

int func_235()//Position - 0x291A37
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		if (NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(PLAYER::INT_TO_PLAYERINDEX(iVar0)))
		{
			iVar1 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iVar0));
			if (!PED::IS_PED_INJURED(iVar1))
			{
				if ((TASK::GET_IS_TASK_ACTIVE(iVar1, 2) || TASK::GET_SCRIPT_TASK_STATUS(iVar1, joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 1) || TASK::GET_SCRIPT_TASK_STATUS(iVar1, joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) == 0)
				{
					return 1;
				}
			}
		}
		iVar0++;
	}
	return 0;
}

int func_236(struct<3> Param0)//Position - 0x291D35
{
	if (__LIB_1__.func_264(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), false) > 2f)
		{
			return 1;
		}
	}
	return 0;
}

bool func_237(int iParam0)//Position - 0x233
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	return (((iVar0 == joaat("cargobob") || iVar0 == joaat("cargobob2")) || iVar0 == joaat("cargobob3")) || iVar0 == joaat("cargobob4"));
}

int func_238(int iParam0)//Position - 0x2AD6
{
	switch (iParam0)
	{
		case joaat("police"):
		case joaat("police2"):
		case joaat("police3"):
		case joaat("police4"):
		case joaat("polmav"):
		case joaat("policeb"):
		case joaat("policet"):
		case joaat("policeold2"):
		case joaat("policeold1"):
		case joaat("sheriff"):
		case joaat("sheriff2"):
			return 1;
			break;
	}
	return 0;
}

float func_239(struct<3> Param0)//Position - 0x2EAE
{
	return SYSTEM::SQRT((((Param0.f_0 * Param0.f_0) + (Param0.f_1 * Param0.f_1)) + (Param0.f_2 * Param0.f_2)));
}

Vector3 func_240(struct<3> Param0)//Position - 0x4392
{
	struct<3> Var0;
	Var0.f_0 = SYSTEM::COS(Param0.f_0);
	Var0.f_1 = SYSTEM::COS(Param0.f_2);
	Var0.f_2 = SYSTEM::SIN(Param0.f_0);
	Var0.f_1 = (Var0.f_1 * Var0.f_0);
	Var0.f_0 = (Var0.f_0 * -SYSTEM::SIN(Param0.f_2));
	return Var0;
}

bool func_241()//Position - 0x43FE
{
	return Global_2727832;
}

bool func_242()//Position - 0x6261
{
	return BitTest(Global_1958691, 0);
}

int func_243(int iParam0)//Position - 0x8FAF
{
	return Global_2683918.f_97[iParam0 /*33*/].f_6;
}

void func_244(int iParam0)//Position - 0x92B7
{
	MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_833), 8);
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_776 = iParam0;
}

void func_245(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7, int iParam8, bool bParam9)//Position - 0xA76E
{
	struct<10> Var0;
	Var0.f_3 = -1;
	Var0.f_0 = -1390976345;
	Var0.f_1 = PLAYER::PLAYER_ID();
	if (iParam6 < 0)
	{
		Var0.f_2 = PLAYER::PLAYER_ID();
	}
	else
	{
		Var0.f_2 = PLAYER::INT_TO_PLAYERINDEX(iParam6);
	}
	Var0.f_5 = iParam1;
	Var0.f_7 = iParam4;
	Var0.f_8 = iParam5;
	Var0.f_3 = iParam3;
	Var0.f_4 = iParam2;
	Var0.f_6 = iParam8;
	if (bParam7)
	{
		MISC::SET_BIT(&(Var0.f_9), 0);
	}
	if (bParam9)
	{
		MISC::SET_BIT(&(Var0.f_9), 1);
	}
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 10, iParam0);
	}
}

int func_246(int iParam0)//Position - 0x131FA
{
	return Global_2683918.f_97[iParam0 /*33*/].f_6.f_3;
}

int func_247()//Position - 0x139EC
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 6)
	{
		if (Global_43792[iVar0 /*32*/])
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

bool func_248()//Position - 0x14F35
{
	return BitTest(Global_2815059.f_4660, 26);
}

void func_249(int iParam0, int iParam1)//Position - 0x488B2
{
	if ((iParam0 >= 0 && iParam0 < 21) && iParam1 == iParam0 == 20)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2305[iParam0] = 0;
		StringCopy(&(Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2459[iParam0 /*8*/]), "", 32);
	}
}

bool func_250(int iParam0, int iParam1, int iParam2)//Position - 0x63489
{
	int iVar0;
	if (((iParam1 >= 0 && iParam1 < 21) && Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2305[iParam1]) && iParam2 == iParam1 == 20)
	{
		iVar0 = 0;
		while (iVar0 < 12)
		{
			if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_1335[iParam1 /*13*/][iVar0] != -1)
			{
				PED::SET_PED_PRELOAD_VARIATION_DATA(iParam0, iVar0, Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_1335[iParam1 /*13*/][iVar0], Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_1609[iParam1 /*13*/][iVar0]);
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 9)
		{
			if (Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_1883[iParam1 /*10*/][iVar0] != -1)
			{
				PED::SET_PED_PRELOAD_PROP_DATA(iParam0, iVar0, Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_1883[iParam1 /*10*/][iVar0], Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2094[iParam1 /*10*/][iVar0]);
			}
			iVar0++;
		}
	}
	return (PED::HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(iParam0) && PED::HAS_PED_PRELOAD_PROP_DATA_FINISHED(iParam0));
}

int func_251(int iParam0)//Position - 0x64A2A
{
	int iVar0;
	iVar0 = iParam0;
	switch (iVar0)
	{
		case 1:
			return 9;
			break;
		case 2:
			return 9;
			break;
		case 3:
			return 3;
			break;
		case 4:
			return 3;
			break;
		case 5:
			return 8;
			break;
		case 6:
			return 8;
			break;
		case 7:
			return 11;
			break;
		case 8:
			return 11;
			break;
		case 9:
			return 6;
			break;
		case 10:
			return 6;
			break;
		case 11:
			return 10;
			break;
		case 12:
			return 10;
			break;
	}
	return 0;
}

int func_252(int iParam0)//Position - 0x87012
{
	switch (iParam0)
	{
		case 918:
		case 919:
		case 920:
		case 921:
		case 922:
		case 923:
		case 924:
		case 925:
			return 1;
		default:
	}
	return 0;
}

bool func_253(int iParam0)//Position - 0x871A5
{
	return Global_262145.f_5032[3] == iParam0;
}

int func_254()//Position - 0x8725F
{
	if (Global_2787782 > 0)
	{
		return 1;
	}
	return 0;
}

bool func_255()//Position - 0x87274
{
	return Global_1952160;
}

int func_256(int iParam0)//Position - 0x8B8D7
{
	return Global_2683918.f_97[iParam0 /*33*/].f_6.f_1;
}

float func_257(float fParam0)//Position - 0x8C394
{
	return (fParam0 * 0.017453292f);
}

void func_258(int iParam0, var uParam1, var uParam2, var uParam3, float fParam4)//Position - 0x8EE10
{
	struct<3> Var0;
	var uVar1;
	struct<3> Var2;
	Var0 = { __LIB_1__.func_328(iParam0) };
	uVar1 = __LIB_1__.func_913(iParam0);
	Var2 = { 0f, 1f, 0f };
	__LIB_0__.func_602(&Var2, 0f, 0f, uVar1);
	Var2 = { Var2 / FtoV(SYSTEM::VMAG(Var2)) };
	*uParam1 = { Var0 + Var2 * FtoV((0.5f * (120f + fParam4))) };
	uParam1->f_2 = (uParam1->f_2 - (0.5f * (34f + fParam4)));
	*uParam2 = { Var0 - Var2 * FtoV((0.5f * (120f + fParam4))) };
	uParam2->f_2 = (uParam2->f_2 + (0.5f * (34f + fParam4)));
	*uParam3 = (16.17f + fParam4);
}

struct<16> func_259(int iParam0)//Position - 0x91283
{
	return Global_2683918.f_97[iParam0 /*33*/].f_6.f_5;
}

void func_260(int iParam0)//Position - 0x931F0
{
	Global_1943927 = iParam0;
}

float func_261(char* sParam0)//Position - 0x94C70
{
	HUD::BEGIN_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT("STRING");
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam0);
	return HUD::END_TEXT_COMMAND_GET_SCREEN_WIDTH_OF_DISPLAY_TEXT(true);
}

var func_262(int iParam0)//Position - 0x94F1E
{
	return Global_2689235[iParam0 /*453*/].f_269.f_20;
}

void func_263(int iParam0, var uParam1, int iParam2)//Position - 0x11CCF8
{
	uParam1->f_22.f_69[0] = "";
	uParam1->f_22.f_69[1] = "";
	uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
	uParam1->f_22.f_79 = "Garage_Door_Close";
	uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
	uParam1->f_22.f_87 = "Garage_Door_Close";
	uParam1->f_22.f_3 = "anim@apt_trans@garage";
	uParam1->f_22.f_5 = "gar_open_1_left";
	uParam1->f_22.f_34 = 0f;
	uParam1->f_22.f_35 = 0.45f;
	uParam1->f_22.f_4 = "";
	uParam1->f_22.f_6 = "";
	uParam1->f_22.f_40 = 0.1f;
	uParam1->f_22.f_59 = { -305.6156f, -1811.623f, 43.7338f };
	uParam1->f_22.f_62 = { -3.1585f, 0f, 167.2231f };
	uParam1->f_22.f_65 = 52.1727f;
	uParam1->f_22.f_66 = 0.2f;
	switch (iParam2)
	{
		case 0:
			uParam1->f_22.f_13 = { -360.5857f, -1866.0913f, 21.5786f };
			uParam1->f_22.f_16 = { -2.5741f, -0.0486f, 156.2227f };
			uParam1->f_22.f_19 = 44.2101f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -364.237f, -1874.903f, 19.51f };
			uParam1->f_22.f_31 = { 0f, 0f, -56.25f };
			break;
		case 1:
			uParam1->f_22.f_13 = { -372.5756f, -1867.3385f, 23.6148f };
			uParam1->f_22.f_16 = { -11.1339f, -0.0009f, 164.4299f };
			uParam1->f_22.f_19 = 41.4256f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -375.853f, -1878.3f, 19.528f };
			uParam1->f_22.f_31 = { 0f, 0f, -47f };
			break;
		case 2:
			uParam1->f_22.f_13 = { -385.7779f, -1868.6774f, 23.7628f };
			uParam1->f_22.f_16 = { -11.0499f, -0.0187f, 173.4695f };
			uParam1->f_22.f_19 = 36.5515f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -387.012f, -1883.659f, 19.525f };
			uParam1->f_22.f_31 = { 0f, 0f, -40f };
			break;
		case 6:
		case 7:
			if (__LIB_4__.func_150(PLAYER::PLAYER_ID(), __LIB_3__.func_17(iParam0)) && (!func_3438() || iParam2 == 7))
			{
				uParam1->f_22.f_13 = { -397.58f, -1887.553f, 22.2998f };
				uParam1->f_22.f_16 = { -1.429f, -0.0057f, 5.8277f };
				uParam1->f_22.f_19 = 45.8457f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { -397.6456f, -1887.5483f, 22.2994f };
				uParam1->f_22.f_23 = { -1.429f, -0.0057f, 13.3423f };
				uParam1->f_22.f_26 = 45.8457f;
				uParam1->f_22.f_3 = "anim@apt_trans@hinge_r";
				uParam1->f_22.f_28 = { -399.731f, -1885.762f, 20.721f };
				uParam1->f_22.f_31 = { 0f, 0f, -56.5f };
				uParam1->f_22.f_5 = "ext_player";
				uParam1->f_22.f_34 = 0.1f;
				uParam1->f_22.f_35 = 0.4f;
				uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
				uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
				uParam1->f_22.f_72[0] = 0.251f;
				uParam1->f_22.f_72[1] = 0.35f;
				uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				uParam1->f_22.f_4 = "";
				uParam1->f_22.f_6 = "";
			}
			else
			{
				uParam1->f_22.f_13 = { -394.8493f, -1886.1761f, 21.789f };
				uParam1->f_22.f_16 = { -0.9744f, 0f, 74.5255f };
				uParam1->f_22.f_19 = 50f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { -395.4853f, -1886.0001f, 21.7778f };
				uParam1->f_22.f_23 = { -0.9744f, 0f, 76.6543f };
				uParam1->f_22.f_26 = 50f;
				uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
				uParam1->f_22.f_28 = { -400.079f, -1884.535f, 20.532f };
				uParam1->f_22.f_31 = { 0f, 0f, 109.75f };
				uParam1->f_22.f_5 = "buzz_short";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.8f;
				uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
				uParam1->f_22.f_72[0] = 0.353f;
				uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
					uParam1->f_22.f_6 = "enter";
				}
				else
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
					uParam1->f_22.f_6 = "enter";
				}
			}
			break;
	}
}

void func_264(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0x137A1D
{
	bool bVar0;
	bool bVar1;
	int iVar2;
	struct<13> Var3;
	if (HUD::DOES_BLIP_EXIST(*uParam1))
	{
		if (!__LIB_4__.func_155(PLAYER::PLAYER_ID(), __LIB_3__.func_103(iParam0)) && !__LIB_4__.func_155(__LIB_0__.func_582(), __LIB_3__.func_103(iParam0)))
		{
			bVar1 = false;
			iVar2 = 0;
			while (iVar2 < 32)
			{
				bVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar2);
				if (__LIB_1__.func_264(bVar0, 1, 1) && bVar0 != PLAYER::PLAYER_ID())
				{
					if ((((__LIB_4__.func_155(bVar0, __LIB_3__.func_103(iParam0)) && __LIB_4__.func_154(bVar0, 0)) && __LIB_4__.func_154(bVar0, 1)) && __LIB_4__.func_154(bVar0, 4)) && func_3674(bVar0, 11, 1))
					{
						Var3 = { __LIB_1__.func_267(bVar0) };
						if (__LIB_0__.func_585(Var3))
						{
							if (NETWORK::NETWORK_IS_FRIEND(&Var3))
							{
								HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam1, "NIGHTCLUB_F_BLIP" /* GXT: Friend's Nightclub */);
							}
							else
							{
								bVar1 = true;
							}
						}
						else
						{
							bVar1 = true;
						}
					}
				}
				iVar2++;
			}
			if (bVar1)
			{
				HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam1, "NIGHTCLUB_R_BLIP" /* GXT: Rival's Nightclub */);
			}
		}
		else
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*uParam1, "BLIP_614" /* GXT: Nightclub Property */);
		}
	}
}

void func_265()//Position - 0x1403
{
	Global_1659413 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 30000);
}

void func_266()//Position - 0x246E
{
	Global_1659411 = 0;
}

int func_267(var uParam0)//Position - 0x2826
{
	int iVar0;
	iVar0 = uParam0->f_9;
	if (iVar0 == -1)
	{
		return 0;
	}
	if (!Global_2657492.f_356[iVar0 /*75*/])
	{
		return 0;
	}
	if (!MISC::ARE_STRINGS_EQUAL(&(Global_2657492.f_356[iVar0 /*75*/].f_10), &(uParam0->f_3)))
	{
		return 0;
	}
	if (!BitTest(Global_2657492.f_356[iVar0 /*75*/].f_5, 3))
	{
		return 0;
	}
	return 1;
}

var func_268(int iParam0)//Position - 0x3A05
{
	return Global_2621865[iParam0 /*26*/].f_15;
}

int func_269()//Position - 0x4462
{
	if (BitTest(Global_2815059.f_1794, 28) && !BitTest(Global_2815059.f_1794, 29))
	{
		return 1;
	}
	return 0;
}

bool func_270()//Position - 0x448C
{
	return BitTest(Global_2815059.f_1795, 3);
}

int func_271(int iParam0, int iParam1)//Position - 0x59F4
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 447;
				case 1:
					return 448;
				case 2:
					return 449;
				case 3:
					return 450;
				case 4:
					return 451;
				case 5:
					return 452;
				case 6:
					return 453;
				case 7:
					return 454;
				default:
			}
			return 445;
		default:
	}
	return 445;
}

bool func_272(int iParam0)//Position - 0x7F0B
{
	return iParam0 == Global_262145.f_9074 /* Tunable: ROOT_ID_HASH_THE_PACIFIC_STANDARD_JOB */;
}

bool func_273(int iParam0)//Position - 0x7F1D
{
	return iParam0 == Global_262145.f_9068 /* Tunable: ROOT_ID_HASH_SERIES_A_FUNDING */;
}

bool func_274(int iParam0)//Position - 0x7F2F
{
	return iParam0 == Global_262145.f_9062 /* Tunable: ROOT_ID_HASH_THE_HUMANE_LABS_RAID */;
}

bool func_275(int iParam0)//Position - 0x7F41
{
	return iParam0 == Global_262145.f_9055 /* Tunable: ROOT_ID_HASH_THE_PRISON_BREAK */;
}

bool func_276(int iParam0)//Position - 0x7F53
{
	return iParam0 == Global_262145.f_9050 /* Tunable: ROOT_ID_HASH_THE_FLECCA_JOB */;
}

bool func_277()//Position - 0x92D9
{
	return BitTest(__LIB_1__.func_556(6427, -1, 0), 19);
}

int func_278(int iParam0)//Position - 0xAE77
{
	int iVar0;
	int iVar1;
	iVar0 = Global_2666436[iParam0 /*14*/].f_12;
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < 3)
	{
		if (Global_2667178[iVar1 /*2*/] == iVar0)
		{
			if (MISC::GET_GAME_TIMER() > Global_2667178[iVar1 /*2*/].f_1)
			{
				Global_2667178[iVar1 /*2*/].f_1 = 0;
				Global_2667178[iVar1 /*2*/] = 0;
			}
			else
			{
				return 1;
			}
		}
		iVar1++;
	}
	return 0;
}

int func_279(int iParam0)//Position - 0x8ED8
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (__LIB_1__.func_264(iParam0, 1, 1))
		{
			return Global_2689235[iParam0 /*453*/].f_318.f_6;
		}
		else if (((Global_1575058 || Global_2667225.f_2680) && iParam0 == PLAYER::PLAYER_ID()) && __LIB_1__.func_264(iParam0, 1, 0))
		{
			return Global_2689235[iParam0 /*453*/].f_318.f_6;
		}
	}
	return -1;
}

bool func_280(int iParam0)//Position - 0xCB24
{
	return __LIB_0__.func_163(iParam0, 19);
}

int func_281(int iParam0)//Position - 0x9B717
{
	if (__LIB_0__.func_740(iParam0))
	{
		return 1;
	}
	if (__LIB_0__.func_286(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_282(int iParam0)//Position - 0xA16CA
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 != -1)
	{
		return (BitTest(Global_1892703[iParam0 /*599*/].f_1, 10) || BitTest(Global_1892703[iParam0 /*599*/].f_1, 9));
	}
	return 0;
}

bool func_283(int iParam0, bool bParam1)//Position - 0xA1986
{
	if (bParam1)
	{
		return 0;
	}
	return (Global_2689235[iParam0 /*453*/].f_244 != -1 || __LIB_0__.func_743(iParam0));
}

char* func_284(int iParam0)//Position - 0x4821
{
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_0_0"):
			return "CLO_E1M_B_0_0" /* GXT: Gray Cracked Puppet */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_0_0"):
			return "CLO_E1F_B_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_0_1"):
			return "CLO_E1M_B_0_1" /* GXT: Blushed Cracked Puppet */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_0_1"):
			return "CLO_E1F_B_0_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_1_0"):
			return "CLO_E1M_B_1_0" /* GXT: Grimy Stitched */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_1_0"):
			return "CLO_E1F_B_1_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_1_1"):
			return "CLO_E1M_B_1_1" /* GXT: Pale Stitched */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_1_1"):
			return "CLO_E1F_B_1_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_4_0"):
			return "CLO_E1M_B_4_0" /* GXT: Green Emissive Lady Liberty */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_4_1"):
			return "CLO_E1M_B_4_1" /* GXT: Blue Emissive Lady Liberty */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_4_0"):
			return "CLO_E1F_B_4_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_4_1"):
			return "CLO_E1F_B_4_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_2_0"):
			return "CLO_E1M_B_2_0" /* GXT: President */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_2_0"):
			return "CLO_E1F_B_2_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_OUTFIT_MUMMY"):
			return "CLO_E1M_O_MUM";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_OUTFIT_MUMMY"):
			return "CLO_E1F_O_MUM";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_LEGS_0_0"):
			return "CLO_E1M_L_0_0" /* GXT: Apricot Perseus Track Pants */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_LEGS_0_0"):
			return "CLO_E1F_L_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_LEGS_0_1"):
			return "CLO_E1M_L_0_1" /* GXT: Manor Geo Track Pants */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_LEGS_0_1"):
			return "CLO_E1F_L_0_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_0_0"):
			return "CLO_E1M_U_0_0" /* GXT: Pumpkin Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_1_0"):
			return "CLO_E1M_U_0_0" /* GXT: Pumpkin Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_1_0"):
			return "CLO_E1F_U_1_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_2_0"):
			return "CLO_E1F_U_1_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_0_1"):
			return "CLO_E1M_U_0_1" /* GXT: Manor Geo Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_1_1"):
			return "CLO_E1M_U_0_1" /* GXT: Manor Geo Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_1_1"):
			return "CLO_E1F_U_1_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_2_1"):
			return "CLO_E1F_U_1_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_2_0"):
			return "CLO_E1M_U_2_0" /* GXT: Hand-Drawn Biker Bomber */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_3_0"):
			return "CLO_E1M_U_2_0" /* GXT: Hand-Drawn Biker Bomber */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_3_0"):
			return "CLO_E1F_U_3_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_4_0"):
			return "CLO_E1F_U_3_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_6_0"):
			return "CLO_E1M_U_6_0" /* GXT: Still Slipping Tie-dye Tee */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_8_0"):
			return "CLO_E1F_U_8_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_7_0"):
			return "CLO_E1M_U_7_0" /* GXT: LS Smoking Jacket */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_5_0"):
			return "CLO_E1F_U_5_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_0_0"):
			return "CLO_E1M_PH_0_0" /* GXT: Apricot Perseus Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_1_0"):
			return "CLO_E1M_PH_1_0" /* GXT: Apricot Perseus Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_0_0"):
			return "CLO_E1F_PH_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_1_0"):
			return "CLO_E1F_PH_1_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_2_0"):
			return "CLO_E1M_PH_2_0" /* GXT: Bigness Hand-drawn Dome */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_2_0"):
			return "CLO_E1F_PH_2_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_3_0"):
			return "CLO_E1M_PH_3_0" /* GXT: Manor Geo Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_4_0"):
			return "CLO_E1M_PH_4_0" /* GXT: Manor Geo Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_3_0"):
			return "CLO_E1F_PH_3_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_4_0"):
			return "CLO_E1F_PH_4_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_6_0"):
			return "CLO_E1M_PH_6_0" /* GXT: Still Slipping Tie-dye Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_7_0"):
			return "CLO_E1M_PH_7_0" /* GXT: Still Slipping Tie-dye Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_6_0"):
			return "CLO_E1F_PH_6_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_7_0"):
			return "CLO_E1F_PH_7_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_0"):
			return "CLO_E1M_PH_5_0" /* GXT: Lemon Festive Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_0"):
			return "CLO_E1F_PH_5_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_1"):
			return "CLO_E1M_PH_5_1" /* GXT: Green Festive Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_1"):
			return "CLO_E1F_PH_5_1";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_2"):
			return "CLO_E1M_PH_5_2" /* GXT: Red Snowflake Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_2"):
			return "CLO_E1F_PH_5_2";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_3"):
			return "CLO_E1M_PH_5_3" /* GXT: Blue Snowflake Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_3"):
			return "CLO_E1F_PH_5_3";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_4"):
			return "CLO_E1M_PH_5_4" /* GXT: Red Holly Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_4"):
			return "CLO_E1F_PH_5_4";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_7"):
			return "CLO_E1M_PH_5_7" /* GXT: Red Reindeer Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_7"):
			return "CLO_E1F_PH_5_7";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_8"):
			return "CLO_E1M_PH_5_8" /* GXT: Borfmas Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_8"):
			return "CLO_E1F_PH_5_8";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_5"):
			return "CLO_E1M_PH_5_5" /* GXT: Pisswasser Festive Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_5"):
			return "CLO_E1F_PH_5_5";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_6"):
			return "CLO_E1M_PH_5_6" /* GXT: Blarneys Festive Beer Hat */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_6"):
			return "CLO_E1F_PH_5_6";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PEARS_0_0"):
			return "CLO_E1M_E_0_0" /* GXT: Gold Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PEARS_0_0"):
			return "CLO_E1F_E_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PLEFT_WRIST_0_0"):
			return "CLO_E1M_LW_0_0" /* GXT: White Spiked Gauntlet (L) */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PRIGHT_WRIST_0_0"):
			return "CLO_E1M_RW_0_0" /* GXT: White Spiked Gauntlet (R) */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PLEFT_WRIST_0_0"):
			return "CLO_E1F_LW_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_PRIGHT_WRIST_0_0"):
			return "CLO_E1F_RW_0_0";
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_DECL_0_0"):
			return "CLO_E1M_D_0_0" /* GXT: Have You Seen Me? Sweater */;
			break;
		case joaat("DLC_MP_SUM2_G9EC_F_DECL_0_0"):
			return "CLO_E1F_D_0_0";
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_M_BERD_5_0"):
			return "CLO_SBM_B_5_0" /* GXT: Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_5_0"):
			return "CLO_SBF_B_5_0" /* GXT: Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_5_1"):
			return "CLO_SBM_B_5_1" /* GXT: Gray Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_5_1"):
			return "CLO_SBF_B_5_1" /* GXT: Gray Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_5_2"):
			return "CLO_SBM_B_5_2" /* GXT: Gold Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_5_2"):
			return "CLO_SBF_B_5_2" /* GXT: Gold Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_5_3"):
			return "CLO_SBM_B_5_3" /* GXT: Ornate Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_5_3"):
			return "CLO_SBF_B_5_3" /* GXT: Ornate Painted Tiger */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_6_0"):
			return "CLO_SBM_B_6_0" /* GXT: Pale Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_6_0"):
			return "CLO_SBF_B_6_0" /* GXT: Pale Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_6_1"):
			return "CLO_SBM_B_6_1" /* GXT: Green Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_6_1"):
			return "CLO_SBF_B_6_1" /* GXT: Green Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_6_2"):
			return "CLO_SBM_B_6_2" /* GXT: Weathered Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_6_2"):
			return "CLO_SBF_B_6_2" /* GXT: Weathered Vintage Mummy */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_7_0"):
			return "CLO_SBM_B_7_0" /* GXT: Horror Pumpkin */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_7_0"):
			return "CLO_SBF_B_7_0" /* GXT: Horror Pumpkin */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_8_0"):
			return "CLO_SBM_B_8_0" /* GXT: Conquest */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_8_0"):
			return "CLO_SBF_B_8_0" /* GXT: Conquest */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_9_0"):
			return "CLO_SBM_B_9_0" /* GXT: Green Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_9_0"):
			return "CLO_SBF_B_9_0" /* GXT: Green Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_9_1"):
			return "CLO_SBM_B_9_1" /* GXT: Brown Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_9_1"):
			return "CLO_SBF_B_9_1" /* GXT: Brown Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_9_2"):
			return "CLO_SBM_B_9_2" /* GXT: Gray Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_9_2"):
			return "CLO_SBF_B_9_2" /* GXT: Gray Vintage Frank */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_0"):
			return "CLO_SBM_B_10_0" /* GXT: Black Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_0"):
			return "CLO_SBF_B_10_0" /* GXT: Black Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_1"):
			return "CLO_SBM_B_10_1" /* GXT: Gray Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_1"):
			return "CLO_SBF_B_10_1" /* GXT: Gray Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_2"):
			return "CLO_SBM_B_10_2" /* GXT: White Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_2"):
			return "CLO_SBF_B_10_2" /* GXT: White Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_3"):
			return "CLO_SBM_B_10_3" /* GXT: Green Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_3"):
			return "CLO_SBF_B_10_3" /* GXT: Green Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_4"):
			return "CLO_SBM_B_10_4" /* GXT: Orange Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_4"):
			return "CLO_SBF_B_10_4" /* GXT: Orange Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_5"):
			return "CLO_SBM_B_10_5" /* GXT: Purple Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_5"):
			return "CLO_SBF_B_10_5" /* GXT: Purple Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_6"):
			return "CLO_SBM_B_10_6" /* GXT: Pink Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_6"):
			return "CLO_SBF_B_10_6" /* GXT: Pink Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_7"):
			return "CLO_SBM_B_10_7" /* GXT: Red Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_7"):
			return "CLO_SBF_B_10_7" /* GXT: Red Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_8"):
			return "CLO_SBM_B_10_8" /* GXT: Blue Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_8"):
			return "CLO_SBF_B_10_8" /* GXT: Blue Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_9"):
			return "CLO_SBM_B_10_9" /* GXT: Yellow Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_9"):
			return "CLO_SBF_B_10_9" /* GXT: Yellow Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_10"):
			return "CLO_SBM_B_10_10" /* GXT: Green Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_10"):
			return "CLO_SBF_B_10_10" /* GXT: Green Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_11"):
			return "CLO_SBM_B_10_11" /* GXT: Pink Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_11"):
			return "CLO_SBF_B_10_11" /* GXT: Pink Detail Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_12"):
			return "CLO_SBM_B_10_12" /* GXT: Orange & Gray Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_12"):
			return "CLO_SBF_B_10_12" /* GXT: Orange & Gray Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_13"):
			return "CLO_SBM_B_10_13" /* GXT: Red Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_13"):
			return "CLO_SBF_B_10_13" /* GXT: Red Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_14"):
			return "CLO_SBM_B_10_14" /* GXT: Camo Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_14"):
			return "CLO_SBF_B_10_14" /* GXT: Camo Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_15"):
			return "CLO_SBM_B_10_15" /* GXT: Aqua Camo Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_15"):
			return "CLO_SBF_B_10_15" /* GXT: Aqua Camo Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_16"):
			return "CLO_SBM_B_10_16" /* GXT: Brown Digital Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_16"):
			return "CLO_SBF_B_10_16" /* GXT: Brown Digital Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_17"):
			return "CLO_SBM_B_10_17" /* GXT: Gold Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_17"):
			return "CLO_SBF_B_10_17" /* GXT: Gold Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_18"):
			return "CLO_SBM_B_10_18" /* GXT: Orange & Cream Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_18"):
			return "CLO_SBF_B_10_18" /* GXT: Orange & Cream Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_19"):
			return "CLO_SBM_B_10_19" /* GXT: Green & Yellow Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_19"):
			return "CLO_SBF_B_10_19" /* GXT: Green & Yellow Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_20"):
			return "CLO_SBM_B_10_20" /* GXT: Pink Floral Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_20"):
			return "CLO_SBF_B_10_20" /* GXT: Pink Floral Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_21"):
			return "CLO_SBM_B_10_21" /* GXT: Black & Green Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_21"):
			return "CLO_SBF_B_10_21" /* GXT: Black & Green Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_22"):
			return "CLO_SBM_B_10_22" /* GXT: White & Red Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_22"):
			return "CLO_SBF_B_10_22" /* GXT: White & Red Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_23"):
			return "CLO_SBM_B_10_23" /* GXT: Carbon Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_23"):
			return "CLO_SBF_B_10_23" /* GXT: Carbon Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_24"):
			return "CLO_SBM_B_10_24" /* GXT: Carbon Teal Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_24"):
			return "CLO_SBF_B_10_24" /* GXT: Carbon Teal Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_10_25"):
			return "CLO_SBM_B_10_25" /* GXT: Black & White Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_10_25"):
			return "CLO_SBF_B_10_25" /* GXT: Black & White Tech Demon */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_0_0"):
			return "CLO_SBM_B_0_0" /* GXT: Famine */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_0_0"):
			return "CLO_SBF_B_0_0" /* GXT: Famine */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_1_0"):
			return "CLO_SBM_B_1_0" /* GXT: White Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_1_0"):
			return "CLO_SBF_B_1_0" /* GXT: White Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_1_1"):
			return "CLO_SBM_B_1_1" /* GXT: Dark Green Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_1_1"):
			return "CLO_SBF_B_1_1" /* GXT: Dark Green Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_1_2"):
			return "CLO_SBM_B_1_2" /* GXT: Light Green Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_1_2"):
			return "CLO_SBF_B_1_2" /* GXT: Light Green Vintage Vampire */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_3_0"):
			return "CLO_SBM_B_3_0" /* GXT: War */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_3_0"):
			return "CLO_SBF_B_3_0" /* GXT: War */;
			break;
		case joaat("DLC_MP_SUM2_M_BERD_4_0"):
			return "CLO_SBM_B_4_0" /* GXT: Death */;
			break;
		case joaat("DLC_MP_SUM2_F_BERD_4_0"):
			return "CLO_SBF_B_4_0" /* GXT: Death */;
			break;
		case joaat("DLC_MP_SUM2_M_OUTFIT_SASQUATCH"):
			return "CLO_SBM_O_SAS" /* GXT: Sasquatch */;
			break;
		case joaat("DLC_MP_SUM2_F_OUTFIT_SASQUATCH"):
			return "CLO_SBF_O_SAS" /* GXT: Sasquatch */;
			break;
		case joaat("DLC_MP_SUM2_M_LEGS_2_0"):
			return "CLO_SBM_L_2_0" /* GXT: Green UFO Boxer Shorts */;
			break;
		case joaat("DLC_MP_SUM2_F_LEGS_0_0"):
			return "CLO_SBF_L_0_0" /* GXT: Green UFO Boxer Shorts */;
			break;
		case joaat("DLC_MP_SUM2_M_LEGS_2_1"):
			return "CLO_SBM_L_2_1" /* GXT: White UFO Boxer Shorts */;
			break;
		case joaat("DLC_MP_SUM2_F_LEGS_0_1"):
			return "CLO_SBF_L_0_1" /* GXT: White UFO Boxer Shorts */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_13_0"):
			return "CLO_SBM_U_13_0" /* GXT: Pumpkin Tee */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_15_0"):
			return "CLO_SBF_U_15_0" /* GXT: Pumpkin Tee */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_14_0"):
			return "CLO_SBM_U_14_0" /* GXT: Sinsimito Cuban Shirt */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_19_0"):
			return "CLO_SBF_U_19_0" /* GXT: Sinsimito Cuban Shirt */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_15_0"):
			return "CLO_SBM_U_15_0" /* GXT: Cliffford Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_16_0"):
			return "CLO_SBM_U_15_0" /* GXT: Cliffford Varsity */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_20_0"):
			return "CLO_SBF_U_20_0" /* GXT: Cliffford Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_15_1"):
			return "CLO_SBM_U_15_1" /* GXT: Pacific Standard Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_16_1"):
			return "CLO_SBM_U_15_1" /* GXT: Pacific Standard Varsity */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_20_1"):
			return "CLO_SBF_U_20_1" /* GXT: Pacific Standard Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_15_2"):
			return "CLO_SBM_U_15_2" /* GXT: The Diamond Casino Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_16_2"):
			return "CLO_SBM_U_15_2" /* GXT: The Diamond Casino Varsity */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_20_2"):
			return "CLO_SBF_U_20_2" /* GXT: The Diamond Casino Varsity */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_17_0"):
			return "CLO_SBM_U_17_0" /* GXT: Pacific Standard Sweater */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_8_0"):
			return "CLO_SBF_U_8_0" /* GXT: Pacific Standard Sweater */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_7_0"):
			return "CLO_SBM_U_7_0" /* GXT: Cliffford Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_8_0"):
			return "CLO_SBM_U_7_0" /* GXT: Cliffford Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_24_0"):
			return "CLO_SBF_U_21_0" /* GXT: Cliffford Hoodie */;
			break;
		case joaat("DLC_MP_SUM2_F_JBIB_21_0"):
			return "CLO_SBF_U_21_0" /* GXT: Cliffford Hoodie */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_M_PHEAD_6_0"):
			return "CLO_SBM_PH_6_0" /* GXT: Gray Yeti Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_0"):
			return "CLO_SBF_PH_6_0" /* GXT: Gray Yeti Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_1"):
			return "CLO_SBM_PH_6_1" /* GXT: Woodland Yeti Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_1"):
			return "CLO_SBF_PH_6_1" /* GXT: Woodland Yeti Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_2"):
			return "CLO_SBM_PH_6_2" /* GXT: Green FB Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_2"):
			return "CLO_SBF_PH_6_2" /* GXT: Green FB Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_3"):
			return "CLO_SBM_PH_6_3" /* GXT: Blue FB Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_3"):
			return "CLO_SBF_PH_6_3" /* GXT: Blue FB Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_4"):
			return "CLO_SBM_PH_6_4" /* GXT: Gray Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_4"):
			return "CLO_SBF_PH_6_4" /* GXT: Gray Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_5"):
			return "CLO_SBM_PH_6_5" /* GXT: Green Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_5"):
			return "CLO_SBF_PH_6_5" /* GXT: Green Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_6"):
			return "CLO_SBM_PH_6_6" /* GXT: Light Plaid Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_6"):
			return "CLO_SBF_PH_6_6" /* GXT: Light Plaid Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_7"):
			return "CLO_SBM_PH_6_7" /* GXT: Dark Plaid Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_7"):
			return "CLO_SBF_PH_6_7" /* GXT: Dark Plaid Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_8"):
			return "CLO_SBM_PH_6_8" /* GXT: White Striped Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_8"):
			return "CLO_SBF_PH_6_8" /* GXT: White Striped Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_9"):
			return "CLO_SBM_PH_6_9" /* GXT: Red Striped Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_9"):
			return "CLO_SBF_PH_6_9" /* GXT: Red Striped Lézard Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_10"):
			return "CLO_SBM_PH_6_10" /* GXT: Brown Crevis Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_10"):
			return "CLO_SBF_PH_6_10" /* GXT: Brown Crevis Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_11"):
			return "CLO_SBM_PH_6_11" /* GXT: Gray Crevis Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_11"):
			return "CLO_SBF_PH_6_11" /* GXT: Gray Crevis Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_12"):
			return "CLO_SBM_PH_6_12" /* GXT: Black Broker Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_12"):
			return "CLO_SBF_PH_6_12" /* GXT: Black Broker Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_6_13"):
			return "CLO_SBM_PH_6_13" /* GXT: Burgundy Broker Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_6_13"):
			return "CLO_SBF_PH_6_13" /* GXT: Burgundy Broker Flat Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_0_0"):
			return "CLO_SBF_PH_0_0" /* GXT: Black LD Organics Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_1_0"):
			return "CLO_SBM_PH_1_0" /* GXT: Black LD Organics Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_0_0"):
			return "CLO_SBF_PH_0_0" /* GXT: Black LD Organics Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_1_0"):
			return "CLO_SBF_PH_1_0" /* GXT: Black LD Organics Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_2_0"):
			return "CLO_SBM_PH_2_0" /* GXT: Gray Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_4_0"):
			return "CLO_SBM_PH_4_0" /* GXT: Gray Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_2_0"):
			return "CLO_SBF_PH_2_0" /* GXT: Gray Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_4_0"):
			return "CLO_SBF_PH_4_0" /* GXT: Gray Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_2_1"):
			return "CLO_SBM_PH_2_1" /* GXT: Black Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_4_1"):
			return "CLO_SBM_PH_4_1" /* GXT: Black Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_2_1"):
			return "CLO_SBF_PH_2_1" /* GXT: Black Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_4_1"):
			return "CLO_SBF_PH_4_1" /* GXT: Black Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_3_0"):
			return "CLO_SBM_PH_3_0" /* GXT: Glow Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_7_0"):
			return "CLO_SBM_PH_7_0" /* GXT: Glow Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_3_0"):
			return "CLO_SBF_PH_3_0" /* GXT: Glow Believe Forwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_7_0"):
			return "CLO_SBF_PH_7_0" /* GXT: Glow Believe Backwards Cap */;
			break;
		case joaat("DLC_MP_SUM2_M_PHEAD_8_0"):
			return "CLO_SBM_PH_8_0" /* GXT: Strickler Hat */;
			break;
		case joaat("DLC_MP_SUM2_F_PHEAD_8_0"):
			return "CLO_SBF_PH_8_0" /* GXT: Strickler Hat */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_0"):
			return "CLO_SBM_E_0_0" /* GXT: White Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_0"):
			return "CLO_SBF_E_0_0" /* GXT: White Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_1"):
			return "CLO_SBM_E_0_1" /* GXT: Yellow Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_1"):
			return "CLO_SBF_E_0_1" /* GXT: Yellow Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_2"):
			return "CLO_SBM_E_0_2" /* GXT: Salmon Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_2"):
			return "CLO_SBF_E_0_2" /* GXT: Salmon Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_3"):
			return "CLO_SBM_E_0_3" /* GXT: Orange Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_3"):
			return "CLO_SBF_E_0_3" /* GXT: Orange Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_4"):
			return "CLO_SBM_E_0_4" /* GXT: Purple Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_4"):
			return "CLO_SBF_E_0_4" /* GXT: Purple Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_5"):
			return "CLO_SBM_E_0_5" /* GXT: Pink Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_5"):
			return "CLO_SBF_E_0_5" /* GXT: Pink Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_6"):
			return "CLO_SBM_E_0_6" /* GXT: Turquoise Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_6"):
			return "CLO_SBF_E_0_6" /* GXT: Turquoise Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_7"):
			return "CLO_SBM_E_0_7" /* GXT: Blue Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_7"):
			return "CLO_SBF_E_0_7" /* GXT: Blue Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_8"):
			return "CLO_SBM_E_0_8" /* GXT: Black Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_8"):
			return "CLO_SBF_E_0_8" /* GXT: Black Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_9"):
			return "CLO_SBM_E_0_9" /* GXT: Gray Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_9"):
			return "CLO_SBF_E_0_9" /* GXT: Gray Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_10"):
			return "CLO_SBM_E_0_10" /* GXT: Teal Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_10"):
			return "CLO_SBF_E_0_10" /* GXT: Teal Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_M_PEARS_0_11"):
			return "CLO_SBM_E_0_11" /* GXT: Red Beat Off Earphones */;
			break;
		case joaat("DLC_MP_SUM2_F_PEARS_0_11"):
			return "CLO_SBF_E_0_11" /* GXT: Red Beat Off Earphones */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_M_SPECIAL_1_0"):
			return "CLO_SBM_S_1_0" /* GXT: The Diamond Strike Vest */;
			break;
		case joaat("DLC_MP_SUM2_F_SPECIAL_1_0"):
			return "CLO_SBF_S_1_0" /* GXT: The Diamond Strike Vest */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_0"):
			return "CLO_SBM_F_5_0" /* GXT: Wild Striped Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_0"):
			return "CLO_SBF_F_5_0" /* GXT: Wild Striped Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_1"):
			return "CLO_SBM_F_5_1" /* GXT: Neon Striped Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_1"):
			return "CLO_SBF_F_5_1" /* GXT: Neon Striped Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_2"):
			return "CLO_SBM_F_5_2" /* GXT: Black SC Coin Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_2"):
			return "CLO_SBF_F_5_2" /* GXT: Black SC Coin Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_3"):
			return "CLO_SBM_F_5_3" /* GXT: White SC Coin Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_3"):
			return "CLO_SBF_F_5_3" /* GXT: White SC Coin Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_4"):
			return "CLO_SBM_F_5_4" /* GXT: Black SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_4"):
			return "CLO_SBF_F_5_4" /* GXT: Black SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_5"):
			return "CLO_SBM_F_5_5" /* GXT: Pink SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_5"):
			return "CLO_SBF_F_5_5" /* GXT: Pink SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_6"):
			return "CLO_SBM_F_5_6" /* GXT: Blue SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_6"):
			return "CLO_SBF_F_5_6" /* GXT: Blue SC Pattern Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_7"):
			return "CLO_SBM_F_5_7" /* GXT: Camo Yeti Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_7"):
			return "CLO_SBF_F_5_7" /* GXT: Camo Yeti Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_8"):
			return "CLO_SBM_F_5_8" /* GXT: Gray Camo Yeti Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_5_8"):
			return "CLO_SBF_F_5_8" /* GXT: Gray Camo Yeti Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_0"):
			return "CLO_SBM_F_6_0" /* GXT: Black Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_0"):
			return "CLO_SBF_F_6_0" /* GXT: Black Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_1"):
			return "CLO_SBM_F_6_1" /* GXT: Purple Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_1"):
			return "CLO_SBF_F_6_1" /* GXT: Purple Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_2"):
			return "CLO_SBM_F_6_2" /* GXT: Camo Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_2"):
			return "CLO_SBF_F_6_2" /* GXT: Camo Bigness Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_3"):
			return "CLO_SBM_F_6_3" /* GXT: Black Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_3"):
			return "CLO_SBF_F_6_3" /* GXT: Black Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_4"):
			return "CLO_SBM_F_6_4" /* GXT: White Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_4"):
			return "CLO_SBF_F_6_4" /* GXT: White Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_5"):
			return "CLO_SBM_F_6_5" /* GXT: Pink Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_5"):
			return "CLO_SBF_F_6_5" /* GXT: Pink Blagueurs Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_6"):
			return "CLO_SBM_F_6_6" /* GXT: Gray Cimicino Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_6"):
			return "CLO_SBF_F_6_6" /* GXT: Gray Cimicino Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_7"):
			return "CLO_SBM_F_6_7" /* GXT: Rouge Cimicino Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_7"):
			return "CLO_SBF_F_6_7" /* GXT: Rouge Cimicino Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_8"):
			return "CLO_SBM_F_6_8" /* GXT: Navy DS Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_8"):
			return "CLO_SBF_F_6_8" /* GXT: Navy DS Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_9"):
			return "CLO_SBM_F_6_9" /* GXT: Red DS Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_9"):
			return "CLO_SBF_F_6_9" /* GXT: Red DS Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_10"):
			return "CLO_SBM_F_6_10" /* GXT: Floral Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_10"):
			return "CLO_SBF_F_6_10" /* GXT: Floral Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_11"):
			return "CLO_SBM_F_6_11" /* GXT: Green Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_11"):
			return "CLO_SBF_F_6_11" /* GXT: Green Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_12"):
			return "CLO_SBM_F_6_12" /* GXT: White Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_12"):
			return "CLO_SBF_F_6_12" /* GXT: White Güffy Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_13"):
			return "CLO_SBM_F_6_13" /* GXT: Blue Heat Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_13"):
			return "CLO_SBF_F_6_13" /* GXT: Blue Heat Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_6_14"):
			return "CLO_SBM_F_6_14" /* GXT: Red ProLaps Pool Sliders */;
			break;
		case joaat("DLC_MP_SUM2_F_FEET_6_14"):
			return "CLO_SBF_F_6_14" /* GXT: Red ProLaps Pool Sliders */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_FIXER_M_JBIB_10_2"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_2"):
			return "CLO_FXM_U_10_2" /* GXT: Orange DJ Pooh Tee */;
			break;
		case joaat("DLC_MP_FIXER_M_JBIB_10_3"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_3"):
			return "CLO_FXM_U_10_3" /* GXT: White WCC DJ Pooh Tee */;
			break;
		case joaat("DLC_MP_FIXER_M_JBIB_10_4"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_4"):
			return "CLO_FXM_U_10_4" /* GXT: Blue WCC DJ Pooh Tee */;
			break;
		case joaat("DLC_MP_FIXER_M_JBIB_10_0"):
		case joaat("DLC_MP_FIXER_F_JBIB_13_0"):
			return "CLO_FXM_U_10_0" /* GXT: Green Festive Tee */;
			break;
		case joaat("DLC_MP_FIXER_M_JBIB_10_1"):
		case joaat("DLC_MP_FIXER_F_JBIB_13_1"):
			return "CLO_FXM_U_10_1" /* GXT: Red Festive Tee */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_0_0"):
		case joaat("DLC_MP_FIXER_F_BERD_0_0"):
			return "CLO_FXM_B_0_0" /* GXT: Orange Goldfish */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_0_1"):
		case joaat("DLC_MP_FIXER_F_BERD_0_1"):
			return "CLO_FXM_B_0_1" /* GXT: Purple Goldfish */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_0_2"):
		case joaat("DLC_MP_FIXER_F_BERD_0_2"):
			return "CLO_FXM_B_0_2" /* GXT: Bronze Goldfish */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_0_3"):
		case joaat("DLC_MP_FIXER_F_BERD_0_3"):
			return "CLO_FXM_B_0_3" /* GXT: Clownfish */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_1_0"):
		case joaat("DLC_MP_FIXER_F_BERD_1_0"):
			return "CLO_FXM_B_1_0" /* GXT: Juvenile Gull */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_1_1"):
		case joaat("DLC_MP_FIXER_F_BERD_1_1"):
			return "CLO_FXM_B_1_1" /* GXT: Sooty Gull */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_1_2"):
		case joaat("DLC_MP_FIXER_F_BERD_1_2"):
			return "CLO_FXM_B_1_2" /* GXT: Black-headed Gull */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_1_3"):
		case joaat("DLC_MP_FIXER_F_BERD_1_3"):
			return "CLO_FXM_B_1_3" /* GXT: Herring Gull */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_2_0"):
		case joaat("DLC_MP_FIXER_F_BERD_2_0"):
			return "CLO_FXM_B_2_0" /* GXT: Brown Sea Lion */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_2_1"):
		case joaat("DLC_MP_FIXER_F_BERD_2_1"):
			return "CLO_FXM_B_2_1" /* GXT: Dark Sea Lion */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_2_2"):
		case joaat("DLC_MP_FIXER_F_BERD_2_2"):
			return "CLO_FXM_B_2_2" /* GXT: Spotted Sea Lion */;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_2_3"):
		case joaat("DLC_MP_FIXER_F_BERD_2_3"):
			return "CLO_FXM_B_2_3" /* GXT: Gray Sea Lion */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_TUNER_M_DECL_30_1"):
		case joaat("DLC_MP_TUNER_F_DECL_29_1"):
			return "CLO_TRM_D_30_1" /* GXT: White Born x Raised Tee */;
			break;
		case joaat("MP_Tuner_Tee_008_M"):
		case joaat("MP_Tuner_Tee_008_F"):
			return "CLO_TRM_DECL_8" /* GXT: Black Banshee Tee */;
			break;
		case joaat("MP_Tuner_Tee_010_M"):
		case joaat("MP_Tuner_Tee_010_F"):
			return "CLO_TRM_DECL_10" /* GXT: Blue Banshee Tee */;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_11_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_12_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_11_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_12_0"):
			return "CLO_TRM_U_11_0" /* GXT: Banshee Hoodie */;
			break;
		case joaat("MP_Tuner_Tee_011_M"):
		case joaat("MP_Tuner_Tee_011_F"):
			return "CLO_TRM_DECL_11" /* GXT: LS Customs Tee */;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_BOILER_1"):
		case joaat("DLC_MP_TUNER_M_JBIB_1_3"):
		case joaat("DLC_MP_TUNER_M_LEGS_1_3"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_BOILER_1"):
		case joaat("DLC_MP_TUNER_F_JBIB_1_3"):
		case joaat("DLC_MP_TUNER_F_LEGS_1_3"):
			return "CLO_TRM_O_BS_1" /* GXT: LS Customs Coveralls */;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_9_15"):
		case joaat("DLC_MP_TUNER_F_JBIB_9_15"):
			return "CLO_TRM_U_9_15" /* GXT: LS Customs Tour Jacket */;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_2"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_2"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_2"):
			return "CLO_TRM_U_13_2" /* GXT: LS Customs Varsity */;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_0"):
			return "CLO_TRM_U_13_0" /* GXT: Sprunk Varsity */;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_1"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_1"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_1"):
			return "CLO_TRM_U_13_1" /* GXT: eCola Varsity */;
			break;
		case joaat("DLC_MP_TUNER_M_PHEAD_1_0"):
		case joaat("DLC_MP_TUNER_M_PHEAD_2_0"):
		case joaat("DLC_MP_TUNER_F_PHEAD_1_0"):
		case joaat("DLC_MP_TUNER_F_PHEAD_2_0"):
			return "CLO_TRM_PH_1_0" /* GXT: Sprunk Forwards Cap */;
			break;
		case joaat("DLC_MP_TUNER_M_PHEAD_1_1"):
		case joaat("DLC_MP_TUNER_M_PHEAD_2_1"):
		case joaat("DLC_MP_TUNER_F_PHEAD_1_1"):
		case joaat("DLC_MP_TUNER_F_PHEAD_2_1"):
			return "CLO_TRM_PH_1_1" /* GXT: eCola Forwards Cap */;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_MORPH_0"):
			return "CLO_TRM_O_MS_0" /* GXT: eCola Bodysuit */;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_MORPH_1"):
			return "CLO_TRM_O_MS_1" /* GXT: Sprunk Bodysuit */;
			break;
		case -1372800957:
			return "PS_BAG_64" /* GXT: Sprunk Chute Bag */;
			break;
		case -1125170035:
			return "PS_BAG_65" /* GXT: Halloween Chute Bag */;
			break;
		case 1276052663:
			return "PS_BAG_66" /* GXT: eCola Chute Bag */;
			break;
		case joaat("MP_Tuner_Tee_012_M"):
		case joaat("MP_Tuner_Tee_012_F"):
			return "CLO_TRM_DECL_12" /* GXT: Rockstar Games Typeface Tee */;
			break;
		case joaat("MP_Tuner_Tee_013_M"):
		case joaat("MP_Tuner_Tee_013_F"):
			return "CLO_TRM_DECL_13" /* GXT: Wasted! Tee */;
			break;
		case joaat("MP_Tuner_Tee_014_M"):
		case joaat("MP_Tuner_Tee_014_F"):
			return "CLO_TRM_DECL_14" /* GXT: Baseball Bat Tee */;
			break;
		case joaat("MP_Tuner_Tee_015_M"):
		case joaat("MP_Tuner_Tee_015_F"):
			return "CLO_TRM_DECL_15" /* GXT: Knuckleduster Tee */;
			break;
		case joaat("MP_Tuner_Tee_016_M"):
		case joaat("MP_Tuner_Tee_016_F"):
			return "CLO_TRM_DECL_16" /* GXT: Rampage Tee */;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_BOILER_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_1_2"):
		case joaat("DLC_MP_TUNER_M_LEGS_1_2"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_BOILER_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_1_2"):
		case joaat("DLC_MP_TUNER_F_LEGS_1_2"):
			return "CLO_TRM_O_BS_0" /* GXT: Penitentiary Coveralls */;
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Heist4_Tee_055_M"):
		case joaat("MP_Heist4_Tee_055_F"):
			return "CLO_H4M_DECL_55" /* GXT: Still Slipping Blarneys Tee */;
			break;
		case joaat("MP_Heist4_Tee_057_M"):
		case joaat("MP_Heist4_Tee_057_F"):
			return "CLO_H4M_DECL_57" /* GXT: Still Slipping Friend Tee */;
			break;
		case joaat("MP_Heist4_Tee_059_M"):
		case joaat("MP_Heist4_Tee_059_F"):
			return "CLO_H4M_DECL_59" /* GXT: Moodymann Whatupdoe Tee */;
			break;
		case joaat("MP_Heist4_Tee_061_M"):
		case joaat("MP_Heist4_Tee_061_F"):
			return "CLO_H4M_DECL_61" /* GXT: Moodymann Big D Tee */;
			break;
		case joaat("MP_Heist4_Tee_063_M"):
		case joaat("MP_Heist4_Tee_063_F"):
			return "CLO_H4M_DECL_63" /* GXT: Keinemusik Cayo Perico Tee */;
			break;
		case joaat("MP_Heist4_Tee_065_M"):
		case joaat("MP_Heist4_Tee_065_F"):
			return "CLO_H4M_DECL_65" /* GXT: Palms Trax LS Tee */;
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Heist4_Tee_030_M"):
		case joaat("MP_Heist4_Tee_030_F"):
			return "CLO_H4M_DECL_30" /* GXT: KJAH Radio Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_032_M"):
		case joaat("MP_Heist4_Tee_032_F"):
			return "CLO_H4M_DECL_32" /* GXT: K-Rose Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_028_M"):
		case joaat("MP_Heist4_Tee_028_F"):
			return "CLO_H4M_DECL_28" /* GXT: Emotion 98.3 Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_029_M"):
		case joaat("MP_Heist4_Tee_029_F"):
			return "CLO_H4M_DECL_29" /* GXT: KDST Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_031_M"):
		case joaat("MP_Heist4_Tee_031_F"):
			return "CLO_H4M_DECL_31" /* GXT: Bounce FM Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_022_M"):
		case joaat("MP_Heist4_Tee_022_F"):
			return "CLO_H4M_DECL_22" /* GXT: Fake Vapid Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_023_M"):
		case joaat("MP_Heist4_Tee_023_F"):
			return "CLO_H4M_DECL_23" /* GXT: I Married My Dad Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_020_M"):
		case joaat("MP_Heist4_Tee_020_F"):
			return "CLO_H4M_DECL_20" /* GXT: ToeShoes Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_021_M"):
		case joaat("MP_Heist4_Tee_021_F"):
			return "CLO_H4M_DECL_21" /* GXT: Vanilla Unicorn Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_003_M"):
		case joaat("MP_Heist4_Tee_003_F"):
			return "CLO_H4M_DECL_3" /* GXT: Steel Horse Solid Logo Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_004_M"):
		case joaat("MP_Heist4_Tee_004_F"):
			return "CLO_H4M_DECL_4" /* GXT: Black Western Logo Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_005_M"):
		case joaat("MP_Heist4_Tee_005_F"):
			return "CLO_H4M_DECL_5" /* GXT: White Nagasaki Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_006_M"):
		case joaat("MP_Heist4_Tee_006_F"):
			return "CLO_H4M_DECL_6" /* GXT: Black Principe Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_027_M"):
		case joaat("MP_Heist4_Tee_027_F"):
			return "CLO_H4M_DECL_27" /* GXT: Noise Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_026_M"):
		case joaat("MP_Heist4_Tee_026_F"):
			return "CLO_H4M_DECL_26" /* GXT: Noise Rockstar Logo Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_025_M"):
		case joaat("MP_Heist4_Tee_025_F"):
			return "CLO_H4M_DECL_25" /* GXT: Razor Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_024_M"):
		case joaat("MP_Heist4_Tee_024_F"):
			return "CLO_H4M_DECL_24" /* GXT: White Rockstar Camo Aged T-Shirt */;
			break;
		case joaat("MP_Heist4_Tee_002_M"):
		case joaat("MP_Heist4_Tee_002_F"):
			return "CLO_H4M_DECL_2" /* GXT: LSUR Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_001_M"):
		case joaat("MP_Heist4_Tee_001_F"):
			return "CLO_H4M_DECL_1" /* GXT: Rebel Radio Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_000_M"):
		case joaat("MP_Heist4_Tee_000_F"):
			return "CLO_H4M_DECL_0" /* GXT: Channel X Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_007_M"):
		case joaat("MP_Heist4_Tee_007_F"):
			return "CLO_H4M_DECL_7" /* GXT: Albany Vintage Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_008_M"):
		case joaat("MP_Heist4_Tee_008_F"):
			return "CLO_H4M_DECL_8" /* GXT: Benefactor Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_009_M"):
		case joaat("MP_Heist4_Tee_009_F"):
			return "CLO_H4M_DECL_9" /* GXT: Bravado Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_010_M"):
		case joaat("MP_Heist4_Tee_010_F"):
			return "CLO_H4M_DECL_10" /* GXT: Declasse Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_011_M"):
		case joaat("MP_Heist4_Tee_011_F"):
			return "CLO_H4M_DECL_11" /* GXT: Dinka Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_012_M"):
		case joaat("MP_Heist4_Tee_012_F"):
			return "CLO_H4M_DECL_12" /* GXT: Grotti Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_013_M"):
		case joaat("MP_Heist4_Tee_013_F"):
			return "CLO_H4M_DECL_13" /* GXT: Lampadati Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_014_M"):
		case joaat("MP_Heist4_Tee_014_F"):
			return "CLO_H4M_DECL_14" /* GXT: Ocelot Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_015_M"):
		case joaat("MP_Heist4_Tee_015_F"):
			return "CLO_H4M_DECL_15" /* GXT: Overflod Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_016_M"):
		case joaat("MP_Heist4_Tee_016_F"):
			return "CLO_H4M_DECL_16" /* GXT: Pegassi Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_017_M"):
		case joaat("MP_Heist4_Tee_017_F"):
			return "CLO_H4M_DECL_17" /* GXT: Pfister Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_018_M"):
		case joaat("MP_Heist4_Tee_018_F"):
			return "CLO_H4M_DECL_18" /* GXT: Vapid Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_019_M"):
		case joaat("MP_Heist4_Tee_019_F"):
			return "CLO_H4M_DECL_19" /* GXT: Weeny Aged Tee */;
			break;
		case joaat("MP_Heist4_Tee_033_M"):
		case joaat("MP_Heist4_Tee_033_F"):
			return "CLO_H4M_DECL_33" /* GXT: Blue The Diamond Resort LS Aged Tee */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_JBIB_8_0"):
		case joaat("DLC_MP_H4_F_JBIB_9_0"):
		case joaat("DLC_MP_H4_M_JBIB_8_0"):
		case joaat("DLC_MP_H4_M_JBIB_9_0"):
			return "CLO_H4F_U_8_0" /* GXT: Panther Varsity Jacket Closed */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_10_0"):
		case joaat("DLC_MP_H4_M_JBIB_10_0"):
			return "CLO_H4F_U_10_0" /* GXT: Panther Tour Jacket */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_5_0"):
		case joaat("DLC_MP_H4_M_JBIB_6_0"):
			return "CLO_H4F_U_5_0" /* GXT: Broker Prolaps Basketball Top */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_5_1"):
		case joaat("DLC_MP_H4_M_JBIB_6_1"):
			return "CLO_H4F_U_5_1" /* GXT: Panic Prolaps Basketball Top */;
			break;
		case joaat("DLC_MP_H4_M_JBIB_0_5"):
		case joaat("DLC_MP_H4_F_JBIB_7_1"):
			return "CLO_H4F_U_7_1" /* GXT: Gussét Frog Tee */;
			break;
		case joaat("MP_Heist4_Tee_048_M"):
		case joaat("MP_Heist4_Tee_048_F"):
			return "CLO_H4M_DECL_48" /* GXT: Warped Still Slipping Tee */;
			break;
		case joaat("MP_Heist4_Tee_047_M"):
		case joaat("MP_Heist4_Tee_047_F"):
			return "CLO_H4M_DECL_47" /* GXT: Yellow Still Slipping Tee */;
			break;
		case joaat("MP_Heist4_Tee_045_M"):
		case joaat("MP_Heist4_Tee_045_F"):
			return "CLO_H4M_DECL_45" /* GXT: Black Rockstar Tee */;
			break;
		case joaat("MP_Heist4_Tee_046_M"):
		case joaat("MP_Heist4_Tee_046_F"):
			return "CLO_H4M_DECL_46" /* GXT: Black Exsorbeo 720 Logo Tee */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_7_5"):
		case joaat("DLC_MP_H4_M_JBIB_0_9"):
			return "CLO_H4F_U_7_5" /* GXT: Manor PRBG Tee */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_7_4"):
		case joaat("DLC_MP_H4_M_JBIB_0_8"):
			return "CLO_H4F_U_7_4" /* GXT: Manor Tie-dye Tee */;
			break;
		case joaat("DLC_MP_H4_M_DECL_0_0"):
		case joaat("DLC_MP_H4_F_DECL_0_0"):
			return "CLO_H4F_D_0_0" /* GXT: Open Wheel Sponsor Tee */;
			break;
		case joaat("DLC_MP_H4_M_JBIB_0_6"):
		case joaat("DLC_MP_H4_F_JBIB_7_2"):
			return "CLO_H4F_U_7_2" /* GXT: Rockstar Yellow Pattern Tee */;
			break;
		case joaat("DLC_MP_H4_M_JBIB_0_7"):
		case joaat("DLC_MP_H4_F_JBIB_7_3"):
			return "CLO_H4F_U_7_3" /* GXT: Rockstar Gray Pattern Tee */;
			break;
		case joaat("DLC_MP_H4_M_JBIB_5_0"):
		case joaat("DLC_MP_H4_F_JBIB_4_0"):
			return "CLO_H4F_U_4_0" /* GXT: Rockstar Rolling Tee */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_6_4"):
		case joaat("DLC_MP_H4_M_JBIB_7_4"):
			return "CLO_H4F_U_6_4" /* GXT: Santo Capra Patterns Sweater */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_6_3"):
		case joaat("DLC_MP_H4_M_JBIB_7_3"):
			return "CLO_H4F_U_6_3" /* GXT: Rockstar Studio Colors Sweater */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_6_2"):
		case joaat("DLC_MP_H4_M_JBIB_7_2"):
			return "CLO_H4F_U_6_2" /* GXT: Bigness Jackal Sweater */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_6_1"):
		case joaat("DLC_MP_H4_M_JBIB_7_1"):
			return "CLO_H4F_U_6_1" /* GXT: Bigness Tie-dye Sweater */;
			break;
		case joaat("DLC_MP_H4_F_JBIB_6_0"):
		case joaat("DLC_MP_H4_M_JBIB_7_0"):
			return "CLO_H4F_U_6_0" /* GXT: Bigness Faces Sweater */;
			break;
		case joaat("DLC_MP_H4_F_LEGS_1_0"):
		case joaat("DLC_MP_H4_M_LEGS_1_0"):
			return "CLO_H4F_L_1_0" /* GXT: Broker Prolaps Basketball Shorts */;
			break;
		case joaat("DLC_MP_H4_F_LEGS_1_1"):
		case joaat("DLC_MP_H4_M_LEGS_1_1"):
			return "CLO_H4F_L_1_1" /* GXT: Panic Prolaps Basketball Shorts */;
			break;
		case joaat("DLC_MP_H4_F_LEGS_1_2"):
		case joaat("DLC_MP_H4_M_LEGS_1_2"):
			return "CLO_H4F_L_1_2" /* GXT: Exsorbeo 720 Sports Shorts */;
			break;
		case joaat("DLC_MP_H4_F_LEGS_0_0"):
		case joaat("DLC_MP_H4_M_LEGS_0_0"):
			return "CLO_H4F_L_0_0" /* GXT: Bigness Tie-dye Sports Pants */;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_0"):
		case joaat("DLC_MP_H4_M_PHEAD_1_0"):
		case joaat("DLC_MP_H4_F_PHEAD_2_0"):
		case joaat("DLC_MP_H4_M_PHEAD_2_0"):
			return "CLO_H4F_PH_1_0" /* GXT: Enus Yeti Forwards Cap */;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_1"):
		case joaat("DLC_MP_H4_M_PHEAD_1_1"):
		case joaat("DLC_MP_H4_F_PHEAD_2_1"):
		case joaat("DLC_MP_H4_M_PHEAD_2_1"):
			return "CLO_H4F_PH_1_1" /* GXT: 720 Forwards Cap */;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_2"):
		case joaat("DLC_MP_H4_M_PHEAD_1_2"):
		case joaat("DLC_MP_H4_F_PHEAD_2_2"):
		case joaat("DLC_MP_H4_M_PHEAD_2_2"):
			return "CLO_H4F_PH_1_2" /* GXT: Exsorbeo 720 Forwards Cap */;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_3"):
		case joaat("DLC_MP_H4_M_PHEAD_1_3"):
		case joaat("DLC_MP_H4_F_PHEAD_2_3"):
		case joaat("DLC_MP_H4_M_PHEAD_2_3"):
			return "CLO_H4F_PH_1_3" /* GXT: Güffy Double Logo Forwards Cap */;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_4"):
		case joaat("DLC_MP_H4_M_PHEAD_1_4"):
		case joaat("DLC_MP_H4_F_PHEAD_2_4"):
		case joaat("DLC_MP_H4_M_PHEAD_2_4"):
			return "CLO_H4F_PH_1_4" /* GXT: Rockstar Forwards Cap */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_0"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_0"):
			return "CLO_H4F_PLW_0_0" /* GXT: Blue Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_1"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_1"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_1"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_1"):
			return "CLO_H4F_PLW_0_1" /* GXT: Red Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_2"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_2"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_2"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_2"):
			return "CLO_H4F_PLW_0_2" /* GXT: Pink Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_3"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_3"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_3"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_3"):
			return "CLO_H4F_PLW_0_3" /* GXT: Yellow Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_4"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_4"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_4"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_4"):
			return "CLO_H4F_PLW_0_4" /* GXT: Orange Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_5"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_5"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_5"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_5"):
			return "CLO_H4F_PLW_0_5" /* GXT: Green Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_6"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_6"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_6"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_6"):
			return "CLO_H4F_PLW_0_6" /* GXT: Red & Blue Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_7"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_7"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_7"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_7"):
			return "CLO_H4F_PLW_0_7" /* GXT: Yellow & Orange Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_8"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_8"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_8"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_8"):
			return "CLO_H4F_PLW_0_8" /* GXT: Green & Pink Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_9"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_9"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_9"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_9"):
			return "CLO_H4F_PLW_0_9" /* GXT: Rainbow Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_10"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_10"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_10"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_10"):
			return "CLO_H4F_PLW_010" /* GXT: Sunset Bangles (L) */;
			break;
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_11"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_11"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_11"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_11"):
			return "CLO_H4F_PLW_011" /* GXT: Tropical Bangles (L) */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_PEYES_0_0"):
		case joaat("DLC_MP_H4_M_PEYES_0_0"):
			return "CLO_H4F_PEY_0_0" /* GXT: Blue & Pink Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_1"):
		case joaat("DLC_MP_H4_M_PEYES_0_1"):
			return "CLO_H4F_PEY_0_1" /* GXT: Red Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_2"):
		case joaat("DLC_MP_H4_M_PEYES_0_2"):
			return "CLO_H4F_PEY_0_2" /* GXT: Orange Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_3"):
		case joaat("DLC_MP_H4_M_PEYES_0_3"):
			return "CLO_H4F_PEY_0_3" /* GXT: Yellow Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_4"):
		case joaat("DLC_MP_H4_M_PEYES_0_4"):
			return "CLO_H4F_PEY_0_4" /* GXT: Green Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_5"):
		case joaat("DLC_MP_H4_M_PEYES_0_5"):
			return "CLO_H4F_PEY_0_5" /* GXT: Blue Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_6"):
		case joaat("DLC_MP_H4_M_PEYES_0_6"):
			return "CLO_H4F_PEY_0_6" /* GXT: Pink Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_7"):
		case joaat("DLC_MP_H4_M_PEYES_0_7"):
			return "CLO_H4F_PEY_0_7" /* GXT: Blue & Magenta Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_8"):
		case joaat("DLC_MP_H4_M_PEYES_0_8"):
			return "CLO_H4F_PEY_0_8" /* GXT: Purple & Yellow Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_9"):
		case joaat("DLC_MP_H4_M_PEYES_0_9"):
			return "CLO_H4F_PEY_0_9" /* GXT: Blue & Yellow Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_10"):
		case joaat("DLC_MP_H4_M_PEYES_0_10"):
			return "CLO_H4F_PEY_010" /* GXT: Pink & Yellow Glow Shades */;
			break;
		case joaat("DLC_MP_H4_F_PEYES_0_11"):
		case joaat("DLC_MP_H4_M_PEYES_0_11"):
			return "CLO_H4F_PEY_011" /* GXT: Red & Yellow Glow Shades */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_TEETH_13_0"):
		case joaat("DLC_MP_H4_M_TEETH_13_0"):
		case joaat("DLC_MP_H4_F_TEETH_14_0"):
		case joaat("DLC_MP_H4_M_TEETH_14_0"):
			return "CLO_H4F_T_13_0" /* GXT: Blue Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_1"):
		case joaat("DLC_MP_H4_M_TEETH_13_1"):
		case joaat("DLC_MP_H4_F_TEETH_14_1"):
		case joaat("DLC_MP_H4_M_TEETH_14_1"):
			return "CLO_H4F_T_13_1" /* GXT: Red Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_2"):
		case joaat("DLC_MP_H4_M_TEETH_13_2"):
		case joaat("DLC_MP_H4_F_TEETH_14_2"):
		case joaat("DLC_MP_H4_M_TEETH_14_2"):
			return "CLO_H4F_T_13_2" /* GXT: Pink Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_3"):
		case joaat("DLC_MP_H4_M_TEETH_13_3"):
		case joaat("DLC_MP_H4_F_TEETH_14_3"):
		case joaat("DLC_MP_H4_M_TEETH_14_3"):
			return "CLO_H4F_T_13_3" /* GXT: Yellow Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_4"):
		case joaat("DLC_MP_H4_M_TEETH_13_4"):
		case joaat("DLC_MP_H4_F_TEETH_14_4"):
		case joaat("DLC_MP_H4_M_TEETH_14_4"):
			return "CLO_H4F_T_13_4" /* GXT: Orange Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_5"):
		case joaat("DLC_MP_H4_M_TEETH_13_5"):
		case joaat("DLC_MP_H4_F_TEETH_14_5"):
		case joaat("DLC_MP_H4_M_TEETH_14_5"):
			return "CLO_H4F_T_13_5" /* GXT: Green Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_6"):
		case joaat("DLC_MP_H4_M_TEETH_13_6"):
		case joaat("DLC_MP_H4_F_TEETH_14_6"):
		case joaat("DLC_MP_H4_M_TEETH_14_6"):
			return "CLO_H4F_T_13_6" /* GXT: Festival Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_7"):
		case joaat("DLC_MP_H4_M_TEETH_13_7"):
		case joaat("DLC_MP_H4_F_TEETH_14_7"):
		case joaat("DLC_MP_H4_M_TEETH_14_7"):
			return "CLO_H4F_T_13_7" /* GXT: Carnival Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_8"):
		case joaat("DLC_MP_H4_M_TEETH_13_8"):
		case joaat("DLC_MP_H4_F_TEETH_14_8"):
		case joaat("DLC_MP_H4_M_TEETH_14_8"):
			return "CLO_H4F_T_13_8" /* GXT: Tropical Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_9"):
		case joaat("DLC_MP_H4_M_TEETH_13_9"):
		case joaat("DLC_MP_H4_F_TEETH_14_9"):
		case joaat("DLC_MP_H4_M_TEETH_14_9"):
			return "CLO_H4F_T_13_9" /* GXT: Hot Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_10"):
		case joaat("DLC_MP_H4_M_TEETH_13_10"):
		case joaat("DLC_MP_H4_F_TEETH_14_10"):
		case joaat("DLC_MP_H4_M_TEETH_14_10"):
			return "CLO_H4F_T_13_10" /* GXT: Neon Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_11"):
		case joaat("DLC_MP_H4_M_TEETH_13_11"):
		case joaat("DLC_MP_H4_F_TEETH_14_11"):
		case joaat("DLC_MP_H4_M_TEETH_14_11"):
			return "CLO_H4F_T_13_11" /* GXT: Party Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_12"):
		case joaat("DLC_MP_H4_M_TEETH_13_12"):
		case joaat("DLC_MP_H4_F_TEETH_14_12"):
		case joaat("DLC_MP_H4_M_TEETH_14_12"):
			return "CLO_H4F_T_13_12" /* GXT: Sunset Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_13"):
		case joaat("DLC_MP_H4_M_TEETH_13_13"):
		case joaat("DLC_MP_H4_F_TEETH_14_13"):
		case joaat("DLC_MP_H4_M_TEETH_14_13"):
			return "CLO_H4F_T_13_13" /* GXT: Radiant Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_14"):
		case joaat("DLC_MP_H4_M_TEETH_13_14"):
		case joaat("DLC_MP_H4_F_TEETH_14_14"):
		case joaat("DLC_MP_H4_M_TEETH_14_14"):
			return "CLO_H4F_T_13_14" /* GXT: Sunrise Glow Necklace */;
			break;
		case joaat("DLC_MP_H4_F_TEETH_13_15"):
		case joaat("DLC_MP_H4_M_TEETH_13_15"):
		case joaat("DLC_MP_H4_F_TEETH_14_15"):
		case joaat("DLC_MP_H4_M_TEETH_14_15"):
			return "CLO_H4F_T_13_15" /* GXT: Session Glow Necklace */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_M_BERD_4_0"):
		case joaat("DLC_MP_H4_F_BERD_4_0"):
			return "CLO_H4M_B_4_0" /* GXT: Green Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_1"):
		case joaat("DLC_MP_H4_F_BERD_4_1"):
			return "CLO_H4M_B_4_1" /* GXT: Navy Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_2"):
		case joaat("DLC_MP_H4_F_BERD_4_2"):
			return "CLO_H4M_B_4_2" /* GXT: Cherry Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_3"):
		case joaat("DLC_MP_H4_F_BERD_4_3"):
			return "CLO_H4M_B_4_3" /* GXT: Orange Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_4"):
		case joaat("DLC_MP_H4_F_BERD_4_4"):
			return "CLO_H4M_B_4_4" /* GXT: Purple Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_5"):
		case joaat("DLC_MP_H4_F_BERD_4_5"):
			return "CLO_H4M_B_4_5" /* GXT: Dark Blue Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_6"):
		case joaat("DLC_MP_H4_F_BERD_4_6"):
			return "CLO_H4M_B_4_6" /* GXT: Lavender Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_7"):
		case joaat("DLC_MP_H4_F_BERD_4_7"):
			return "CLO_H4M_B_4_7" /* GXT: Yellow Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_8"):
		case joaat("DLC_MP_H4_F_BERD_4_8"):
			return "CLO_H4M_B_4_8" /* GXT: Pink Calavera Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_9"):
		case joaat("DLC_MP_H4_F_BERD_4_9"):
			return "CLO_H4M_B_4_9" /* GXT: Neon Stitch Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_10"):
		case joaat("DLC_MP_H4_F_BERD_4_10"):
			return "CLO_H4M_B_4_10" /* GXT: Vibrant Stitch Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_11"):
		case joaat("DLC_MP_H4_F_BERD_4_11"):
			return "CLO_H4M_B_4_11" /* GXT: Pink Stitch Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_12"):
		case joaat("DLC_MP_H4_F_BERD_4_12"):
			return "CLO_H4M_B_4_12" /* GXT: Blue Stitch Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_13"):
		case joaat("DLC_MP_H4_F_BERD_4_13"):
			return "CLO_H4M_B_4_13" /* GXT: Neon Skull Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_14"):
		case joaat("DLC_MP_H4_F_BERD_4_14"):
			return "CLO_H4M_B_4_14" /* GXT: Vibrant Skull Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_15"):
		case joaat("DLC_MP_H4_F_BERD_4_15"):
			return "CLO_H4M_B_4_15" /* GXT: Pink Skull Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_16"):
		case joaat("DLC_MP_H4_F_BERD_4_16"):
			return "CLO_H4M_B_4_16" /* GXT: Orange Skull Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_17"):
		case joaat("DLC_MP_H4_F_BERD_4_17"):
			return "CLO_H4M_B_4_17" /* GXT: Dark X-Ray Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_18"):
		case joaat("DLC_MP_H4_F_BERD_4_18"):
			return "CLO_H4M_B_4_18" /* GXT: Bright X-Ray Emissive Mask */;
			break;
		case joaat("DLC_MP_H4_M_BERD_4_19"):
		case joaat("DLC_MP_H4_F_BERD_4_19"):
			return "CLO_H4M_B_4_19" /* GXT: Purple X-Ray Emissive Mask */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_M_PEYES_1_0"):
		case joaat("DLC_MP_H4_F_PEYES_1_0"):
			return "CLO_H4M_PEY_1_0" /* GXT: Midnight Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_1"):
		case joaat("DLC_MP_H4_F_PEYES_1_1"):
			return "CLO_H4M_PEY_1_1" /* GXT: Sunset Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_2"):
		case joaat("DLC_MP_H4_F_PEYES_1_2"):
			return "CLO_H4M_PEY_1_2" /* GXT: Black Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_3"):
		case joaat("DLC_MP_H4_F_PEYES_1_3"):
			return "CLO_H4M_PEY_1_3" /* GXT: Blue Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_4"):
		case joaat("DLC_MP_H4_F_PEYES_1_4"):
			return "CLO_H4M_PEY_1_4" /* GXT: Gold Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_5"):
		case joaat("DLC_MP_H4_F_PEYES_1_5"):
			return "CLO_H4M_PEY_1_5" /* GXT: Green Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_6"):
		case joaat("DLC_MP_H4_F_PEYES_1_6"):
			return "CLO_H4M_PEY_1_6" /* GXT: Orange Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_7"):
		case joaat("DLC_MP_H4_F_PEYES_1_7"):
			return "CLO_H4M_PEY_1_7" /* GXT: Red Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_8"):
		case joaat("DLC_MP_H4_F_PEYES_1_8"):
			return "CLO_H4M_PEY_1_8" /* GXT: Pink Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_9"):
		case joaat("DLC_MP_H4_F_PEYES_1_9"):
			return "CLO_H4M_PEY_1_9" /* GXT: Yellow Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_10"):
		case joaat("DLC_MP_H4_F_PEYES_1_10"):
			return "CLO_H4M_PEY_110" /* GXT: Lemon Tint Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_1_11"):
		case joaat("DLC_MP_H4_F_PEYES_1_11"):
			return "CLO_H4M_PEY_111" /* GXT: Gold Rimmed Oversize Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_0"):
		case joaat("DLC_MP_H4_F_PEYES_2_0"):
			return "CLO_H4M_PEY_2_0" /* GXT: White Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_1"):
		case joaat("DLC_MP_H4_F_PEYES_2_1"):
			return "CLO_H4M_PEY_2_1" /* GXT: Pink Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_2"):
		case joaat("DLC_MP_H4_F_PEYES_2_2"):
			return "CLO_H4M_PEY_2_2" /* GXT: Yellow Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_3"):
		case joaat("DLC_MP_H4_F_PEYES_2_3"):
			return "CLO_H4M_PEY_2_3" /* GXT: Red Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_4"):
		case joaat("DLC_MP_H4_F_PEYES_2_4"):
			return "CLO_H4M_PEY_2_4" /* GXT: White Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_5"):
		case joaat("DLC_MP_H4_F_PEYES_2_5"):
			return "CLO_H4M_PEY_2_5" /* GXT: Black Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_6"):
		case joaat("DLC_MP_H4_F_PEYES_2_6"):
			return "CLO_H4M_PEY_2_6" /* GXT: Pink Tinted Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_7"):
		case joaat("DLC_MP_H4_F_PEYES_2_7"):
			return "CLO_H4M_PEY_2_7" /* GXT: Blue Tinted Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_8"):
		case joaat("DLC_MP_H4_F_PEYES_2_8"):
			return "CLO_H4M_PEY_2_8" /* GXT: Green Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_9"):
		case joaat("DLC_MP_H4_F_PEYES_2_9"):
			return "CLO_H4M_PEY_2_9" /* GXT: Blue Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_10"):
		case joaat("DLC_MP_H4_F_PEYES_2_10"):
			return "CLO_H4M_PEY_210" /* GXT: Orange Checked Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_2_11"):
		case joaat("DLC_MP_H4_F_PEYES_2_11"):
			return "CLO_H4M_PEY_211" /* GXT: Green Tinted Round Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_0"):
		case joaat("DLC_MP_H4_F_PEYES_3_0"):
			return "CLO_H4M_PEY_3_0" /* GXT: Brown Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_1"):
		case joaat("DLC_MP_H4_F_PEYES_3_1"):
			return "CLO_H4M_PEY_3_1" /* GXT: Yellow Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_2"):
		case joaat("DLC_MP_H4_F_PEYES_3_2"):
			return "CLO_H4M_PEY_3_2" /* GXT: Black Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_3"):
		case joaat("DLC_MP_H4_F_PEYES_3_3"):
			return "CLO_H4M_PEY_3_3" /* GXT: Tortoiseshell Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_4"):
		case joaat("DLC_MP_H4_F_PEYES_3_4"):
			return "CLO_H4M_PEY_3_4" /* GXT: Green Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_5"):
		case joaat("DLC_MP_H4_F_PEYES_3_5"):
			return "CLO_H4M_PEY_3_5" /* GXT: Red Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_6"):
		case joaat("DLC_MP_H4_F_PEYES_3_6"):
			return "CLO_H4M_PEY_3_6" /* GXT: Pink Tinted Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_7"):
		case joaat("DLC_MP_H4_F_PEYES_3_7"):
			return "CLO_H4M_PEY_3_7" /* GXT: Blue Tinted Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_8"):
		case joaat("DLC_MP_H4_F_PEYES_3_8"):
			return "CLO_H4M_PEY_3_8" /* GXT: White Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_9"):
		case joaat("DLC_MP_H4_F_PEYES_3_9"):
			return "CLO_H4M_PEY_3_9" /* GXT: Pink Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_10"):
		case joaat("DLC_MP_H4_F_PEYES_3_10"):
			return "CLO_H4M_PEY_310" /* GXT: All White Square Shades */;
			break;
		case joaat("DLC_MP_H4_M_PEYES_3_11"):
		case joaat("DLC_MP_H4_F_PEYES_3_11"):
			return "CLO_H4M_PEY_311" /* GXT: Mono Square Shades */;
			break;
	}
	switch (iParam0)
	{
		case joaat("mpSum_Tee_000_M"):
			return "CLO_SUM_DECL_0" /* GXT: BCTR Aged Tee */;
			break;
		case joaat("mpSum_Tee_000_F"):
			return "CLO_SUF_DECL_0" /* GXT: BCTR Aged Tee */;
			break;
		case joaat("mpSum_Tee_001_M"):
			return "CLO_SUM_DECL_1" /* GXT: BCTR Tee */;
			break;
		case joaat("mpSum_Tee_001_F"):
			return "CLO_SUF_DECL_1" /* GXT: BCTR Tee */;
			break;
		case joaat("mpSum_Tee_002_M"):
			return "CLO_SUM_DECL_2" /* GXT: Cultstoppers Aged Tee */;
			break;
		case joaat("mpSum_Tee_002_F"):
			return "CLO_SUF_DECL_2" /* GXT: Cultstoppers Aged Tee */;
			break;
		case joaat("mpSum_Tee_003_M"):
			return "CLO_SUM_DECL_3" /* GXT: Cultstoppers Tee */;
			break;
		case joaat("mpSum_Tee_003_F"):
			return "CLO_SUF_DECL_3" /* GXT: Cultstoppers Tee */;
			break;
		case joaat("mpSum_Tee_004_M"):
			return "CLO_SUM_DECL_4" /* GXT: Daily Globe Aged Tee */;
			break;
		case joaat("mpSum_Tee_004_F"):
			return "CLO_SUF_DECL_4" /* GXT: Daily Globe Aged Tee */;
			break;
		case joaat("mpSum_Tee_005_M"):
			return "CLO_SUM_DECL_5" /* GXT: Daily Globe Tee */;
			break;
		case joaat("mpSum_Tee_005_F"):
			return "CLO_SUF_DECL_5" /* GXT: Daily Globe Tee */;
			break;
		case joaat("mpSum_Tee_006_M"):
			return "CLO_SUM_DECL_6" /* GXT: Eyefind Aged Tee */;
			break;
		case joaat("mpSum_Tee_006_F"):
			return "CLO_SUF_DECL_6" /* GXT: Eyefind Aged Tee */;
			break;
		case joaat("mpSum_Tee_007_M"):
			return "CLO_SUM_DECL_7" /* GXT: Eyefind Tee */;
			break;
		case joaat("mpSum_Tee_007_F"):
			return "CLO_SUF_DECL_7" /* GXT: Eyefind Tee */;
			break;
		case joaat("mpSum_Tee_008_M"):
			return "CLO_SUM_DECL_8" /* GXT: Facade Aged Tee */;
			break;
		case joaat("mpSum_Tee_008_F"):
			return "CLO_SUF_DECL_8" /* GXT: Facade Aged Tee */;
			break;
		case joaat("mpSum_Tee_009_M"):
			return "CLO_SUM_DECL_9" /* GXT: Facade Tee */;
			break;
		case joaat("mpSum_Tee_009_F"):
			return "CLO_SUF_DECL_9" /* GXT: Facade Tee */;
			break;
		case joaat("mpSum_Tee_010_M"):
			return "CLO_SUM_DECL_10" /* GXT: Fruit Aged Tee */;
			break;
		case joaat("mpSum_Tee_010_F"):
			return "CLO_SUF_DECL_10" /* GXT: Fruit Aged Tee */;
			break;
		case joaat("mpSum_Tee_011_M"):
			return "CLO_SUM_DECL_11" /* GXT: Fruit Tee */;
			break;
		case joaat("mpSum_Tee_011_F"):
			return "CLO_SUF_DECL_11" /* GXT: Fruit Tee */;
			break;
		case joaat("mpSum_Tee_012_M"):
			return "CLO_SUM_DECL_12" /* GXT: LSHH Aged Tee */;
			break;
		case joaat("mpSum_Tee_012_F"):
			return "CLO_SUF_DECL_12" /* GXT: LSHH Aged Tee */;
			break;
		case joaat("mpSum_Tee_013_M"):
			return "CLO_SUM_DECL_13" /* GXT: LSHH Tee */;
			break;
		case joaat("mpSum_Tee_013_F"):
			return "CLO_SUF_DECL_13" /* GXT: LSHH Tee */;
			break;
		case joaat("mpSum_Tee_014_M"):
			return "CLO_SUM_DECL_14" /* GXT: MyRoom Aged Tee */;
			break;
		case joaat("mpSum_Tee_014_F"):
			return "CLO_SUF_DECL_14" /* GXT: MyRoom Aged Tee */;
			break;
		case joaat("mpSum_Tee_015_M"):
			return "CLO_SUM_DECL_15" /* GXT: MyRoom Tee */;
			break;
		case joaat("mpSum_Tee_015_F"):
			return "CLO_SUF_DECL_15" /* GXT: MyRoom Tee */;
			break;
		case joaat("mpSum_Tee_016_M"):
			return "CLO_SUM_DECL_16" /* GXT: Rebel Aged Tee */;
			break;
		case joaat("mpSum_Tee_016_F"):
			return "CLO_SUF_DECL_16" /* GXT: Rebel Aged Tee */;
			break;
		case joaat("mpSum_Tee_017M"):
			return "CLO_SUM_DECL_17" /* GXT: Rebel Tee */;
			break;
		case joaat("mpSum_Tee_017_F"):
			return "CLO_SUF_DECL_17" /* GXT: Rebel Tee */;
			break;
		case joaat("mpSum_Tee_018_M"):
			return "CLO_SUM_DECL_18" /* GXT: Six Figure Aged Tee */;
			break;
		case joaat("mpSum_Tee_018_F"):
			return "CLO_SUF_DECL_18" /* GXT: Six Figure Aged Tee */;
			break;
		case joaat("mpSum_Tee_019_M"):
			return "CLO_SUM_DECL_19" /* GXT: Six Figure Tee */;
			break;
		case joaat("mpSum_Tee_019_F"):
			return "CLO_SUF_DECL_19" /* GXT: Six Figure Tee */;
			break;
		case joaat("mpSum_Tee_020_M"):
			return "CLO_SUM_DECL_20" /* GXT: Trash Or Treasure Aged Tee */;
			break;
		case joaat("mpSum_Tee_020_F"):
			return "CLO_SUF_DECL_20" /* GXT: Trash Or Treasure Aged Tee */;
			break;
		case joaat("mpSum_Tee_021_M"):
			return "CLO_SUM_DECL_21" /* GXT: Trash Or Treasure Tee */;
			break;
		case joaat("mpSum_Tee_021_F"):
			return "CLO_SUF_DECL_21" /* GXT: Trash Or Treasure Tee */;
			break;
		case joaat("mpSum_Tee_022_M"):
			return "CLO_SUM_DECL_22" /* GXT: Tw@ Logo Aged Tee */;
			break;
		case joaat("mpSum_Tee_022_F"):
			return "CLO_SUF_DECL_22" /* GXT: Tw@ Logo Aged Tee */;
			break;
		case joaat("mpSum_Tee_023_M"):
			return "CLO_SUM_DECL_23" /* GXT: Tw@ Logo Tee */;
			break;
		case joaat("mpSum_Tee_023_F"):
			return "CLO_SUF_DECL_23" /* GXT: Tw@ Logo Tee */;
			break;
		case joaat("mpSum_Tee_024_M"):
			return "CLO_SUM_DECL_24" /* GXT: Vapers Den Aged Tee */;
			break;
		case joaat("mpSum_Tee_024_F"):
			return "CLO_SUF_DECL_24" /* GXT: Vapers Den Aged Tee */;
			break;
		case joaat("mpSum_Tee_025_M"):
			return "CLO_SUM_DECL_25" /* GXT: Vapers Den Tee */;
			break;
		case joaat("mpSum_Tee_025_F"):
			return "CLO_SUF_DECL_25" /* GXT: Vapers Den Tee */;
			break;
		case joaat("mpSum_Tee_026_M"):
			return "CLO_SUM_DECL_26" /* GXT: WingIt Aged Tee */;
			break;
		case joaat("mpSum_Tee_026_F"):
			return "CLO_SUF_DECL_26" /* GXT: WingIt Aged Tee */;
			break;
		case joaat("mpSum_Tee_027_M"):
			return "CLO_SUM_DECL_27" /* GXT: WingIt Tee */;
			break;
		case joaat("mpSum_Tee_027_F"):
			return "CLO_SUF_DECL_27" /* GXT: WingIt Tee */;
			break;
		case joaat("mpSum_Tee_028_M"):
			return "CLO_SUM_DECL_28" /* GXT: ZiT Aged Tee */;
			break;
		case joaat("mpSum_Tee_028_F"):
			return "CLO_SUF_DECL_28" /* GXT: ZiT Aged Tee */;
			break;
		case joaat("mpSum_Tee_029_M"):
			return "CLO_SUM_DECL_29" /* GXT: ZiT Tee */;
			break;
		case joaat("mpSum_Tee_029_F"):
			return "CLO_SUF_DECL_29" /* GXT: ZiT Tee */;
			break;
		case joaat("DLC_MP_SUM_M_BERD_3_4"):
			return "CLO_SUM_B_3_4" /* GXT: Green Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_F_BERD_3_4"):
			return "CLO_SUF_B_3_4" /* GXT: Green Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_M_BERD_3_5"):
			return "CLO_SUM_B_3_5" /* GXT: Orange Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_F_BERD_3_5"):
			return "CLO_SUF_B_3_5" /* GXT: Orange Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_M_BERD_3_6"):
			return "CLO_SUM_B_3_6" /* GXT: Blue Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_F_BERD_3_6"):
			return "CLO_SUF_B_3_6" /* GXT: Blue Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_M_BERD_3_7"):
			return "CLO_SUM_B_3_7" /* GXT: Pink Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_F_BERD_3_7"):
			return "CLO_SUF_B_3_7" /* GXT: Pink Dot Tech Mask */;
			break;
		case joaat("DLC_MP_SUM_M_LEGS_1_25"):
			return "CLO_SUM_L_1_25" /* GXT: Lemon Sports Track Pants */;
			break;
		case joaat("DLC_MP_SUM_F_LEGS_2_25"):
			return "CLO_SUF_L_2_25" /* GXT: Lemon Sports Track Pants */;
			break;
		case joaat("DLC_MP_SUM_M_JBIB_0_25"):
			return "CLO_SUM_U_0_25" /* GXT: Lemon Sports Track Top */;
			break;
		case joaat("DLC_MP_SUM_F_JBIB_0_25"):
			return "CLO_SUF_U_0_25" /* GXT: Lemon Sports Track Top */;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_VWD_M_DECL_1_0"):
			return "CLO_VWM_D_1_0" /* GXT: Street Crimes Boxart Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_0"):
			return "CLO_VWF_D_1_0" /* GXT: Street Crimes Boxart Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_6"):
			return "CLO_VWM_D_1_6" /* GXT: Street Crimes Logo Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_6"):
			return "CLO_VWF_D_1_6" /* GXT: Street Crimes Logo Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_7"):
			return "CLO_VWM_D_1_7" /* GXT: Claim What's Yours Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_7"):
			return "CLO_VWF_D_1_7" /* GXT: Claim What's Yours Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_8"):
			return "CLO_VWM_D_1_8" /* GXT: Choose Your Side Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_8"):
			return "CLO_VWF_D_1_8" /* GXT: Choose Your Side Tee */;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_5"):
			return "CLO_VWM_U_23_5" /* GXT: Street Crimes Color Gangs Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_5"):
			return "CLO_VWF_U_21_5" /* GXT: Street Crimes Color Gangs Tee */;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_8"):
			return "CLO_VWM_U_23_8" /* GXT: Street Crimes Red Gangs Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_8"):
			return "CLO_VWF_U_21_8" /* GXT: Street Crimes Red Gangs Tee */;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_9"):
			return "CLO_VWM_U_23_9" /* GXT: White Street Crimes Icons Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_9"):
			return "CLO_VWF_U_21_9" /* GXT: White Street Crimes Icons Tee */;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_10"):
			return "CLO_VWM_U_23_10" /* GXT: Black Street Crimes Icons Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_10"):
			return "CLO_VWF_U_21_10" /* GXT: Black Street Crimes Icons Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_11"):
			return "CLO_VWM_D_1_11" /* GXT: Invade and Persuade Logo Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_11"):
			return "CLO_VWF_D_1_11" /* GXT: Invade and Persuade Logo Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_12"):
			return "CLO_VWM_D_1_12" /* GXT: Mission I Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_12"):
			return "CLO_VMF_D_1_12";
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_13"):
			return "CLO_VWM_D_1_13" /* GXT: Mission II Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_13"):
			return "CLO_VWF_D_1_13" /* GXT: Mission II Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_14"):
			return "CLO_VWM_D_1_14" /* GXT: Mission IV Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_14"):
			return "CLO_VWF_D_1_14" /* GXT: Mission IV Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_15"):
			return "CLO_VWM_D_1_15" /* GXT: Mission III Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_15"):
			return "CLO_VWF_D_1_15" /* GXT: Mission III Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_16"):
			return "CLO_VWM_D_1_16" /* GXT: Invade and Persuade Boxart Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_16"):
			return "CLO_VWF_D_1_16" /* GXT: Invade and Persuade Boxart Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_17"):
			return "CLO_VWM_D_1_17" /* GXT: Invade and Persuade Invader Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_17"):
			return "CLO_VWF_D_1_17" /* GXT: Invade and Persuade Invader Tee */;
			break;
		case joaat("DLC_MP_VWD_M_DECL_1_18"):
			return "CLO_VWM_D_1_18" /* GXT: Invade and Persuade Suck Tee */;
			break;
		case joaat("DLC_MP_VWD_F_DECL_1_18"):
			return "CLO_VWF_D_1_18" /* GXT: Invade and Persuade Suck Tee */;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_0"):
			return "CLO_VWM_U_23_0" /* GXT: Invade and Persuade Jets Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_0"):
			return "CLO_VMF_U_21_0";
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_2"):
			return "CLO_VWM_U_23_2" /* GXT: Invade and Persuade Gold Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_2"):
			return "CLO_VMF_U_21_2";
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_4"):
			return "CLO_VWM_U_23_4" /* GXT: Invade and Persuade Hero Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_4"):
			return "CLO_VMF_U_21_4";
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_7"):
			return "CLO_VWM_U_23_7" /* GXT: Invade and Persuade Barrels Tee */;
			break;
		case joaat("DLC_MP_VWD_F_JBIB_21_7"):
			return "CLO_VMF_U_21_7";
			break;
	}
	switch (iParam0)
	{
		case joaat("MP_Christmas2018_Tee_000_M"):
			return "CLO_AWM_DECL_0" /* GXT: Albany Tee */;
		case joaat("MP_Christmas2018_Tee_000_F"):
			return "CLO_AWF_DECL_0" /* GXT: Albany Tee */;
		case joaat("MP_Christmas2018_Tee_001_M"):
			return "CLO_AWM_DECL_1" /* GXT: Albany Vintage Tee */;
		case joaat("MP_Christmas2018_Tee_001_F"):
			return "CLO_AWF_DECL_1" /* GXT: Albany Vintage Tee */;
		case joaat("MP_Christmas2018_Tee_002_M"):
			return "CLO_AWM_DECL_2" /* GXT: Annis Tee */;
		case joaat("MP_Christmas2018_Tee_002_F"):
			return "CLO_AWF_DECL_2" /* GXT: Annis Tee */;
		case joaat("MP_Christmas2018_Tee_003_M"):
			return "CLO_AWM_DECL_3" /* GXT: Benefactor Tee */;
		case joaat("MP_Christmas2018_Tee_003_F"):
			return "CLO_AWF_DECL_3" /* GXT: Benefactor Tee */;
		case joaat("MP_Christmas2018_Tee_004_M"):
			return "CLO_AWM_DECL_4" /* GXT: BF Tee */;
		case joaat("MP_Christmas2018_Tee_004_F"):
			return "CLO_AWF_DECL_4" /* GXT: BF Tee */;
		case joaat("MP_Christmas2018_Tee_005_M"):
			return "CLO_AWM_DECL_5" /* GXT: Bollokan Tee */;
		case joaat("MP_Christmas2018_Tee_005_F"):
			return "CLO_AWF_DECL_5" /* GXT: Bollokan Tee */;
		case joaat("MP_Christmas2018_Tee_006_M"):
			return "CLO_AWM_DECL_6" /* GXT: Bravado Tee */;
		case joaat("MP_Christmas2018_Tee_006_F"):
			return "CLO_AWF_DECL_6" /* GXT: Bravado Tee */;
		case joaat("MP_Christmas2018_Tee_007_M"):
			return "CLO_AWM_DECL_7" /* GXT: Brute Tee */;
		case joaat("MP_Christmas2018_Tee_007_F"):
			return "CLO_AWF_DECL_7" /* GXT: Brute Tee */;
		case joaat("MP_Christmas2018_Tee_008_M"):
			return "CLO_AWM_DECL_8" /* GXT: Buckingham Tee */;
		case joaat("MP_Christmas2018_Tee_008_F"):
			return "CLO_AWF_DECL_8" /* GXT: Buckingham Tee */;
		case joaat("MP_Christmas2018_Tee_009_M"):
			return "CLO_AWM_DECL_9" /* GXT: Canis Tee */;
		case joaat("MP_Christmas2018_Tee_009_F"):
			return "CLO_AWF_DECL_9" /* GXT: Canis Tee */;
		case joaat("MP_Christmas2018_Tee_010_M"):
			return "CLO_AWM_DECL_10" /* GXT: Chariot Tee */;
		case joaat("MP_Christmas2018_Tee_010_F"):
			return "CLO_AWF_DECL_10" /* GXT: Chariot Tee */;
		case joaat("MP_Christmas2018_Tee_011_M"):
			return "CLO_AWM_DECL_11" /* GXT: Cheval Tee */;
		case joaat("MP_Christmas2018_Tee_011_F"):
			return "CLO_AWF_DECL_11" /* GXT: Cheval Tee */;
		case joaat("MP_Christmas2018_Tee_012_M"):
			return "CLO_AWM_DECL_12" /* GXT: Classique Tee */;
		case joaat("MP_Christmas2018_Tee_012_F"):
			return "CLO_AWF_DECL_12" /* GXT: Classique Tee */;
		case joaat("MP_Christmas2018_Tee_013_M"):
			return "CLO_AWM_DECL_13" /* GXT: Coil Tee */;
		case joaat("MP_Christmas2018_Tee_013_F"):
			return "CLO_AWF_DECL_13" /* GXT: Coil Tee */;
		case joaat("MP_Christmas2018_Tee_014_M"):
			return "CLO_AWM_DECL_14" /* GXT: Declasse Tee */;
		case joaat("MP_Christmas2018_Tee_014_F"):
			return "CLO_AWF_DECL_14" /* GXT: Declasse Tee */;
		case joaat("MP_Christmas2018_Tee_015_M"):
			return "CLO_AWM_DECL_15" /* GXT: Dewbauchee Tee */;
		case joaat("MP_Christmas2018_Tee_015_F"):
			return "CLO_AWF_DECL_15" /* GXT: Dewbauchee Tee */;
		case joaat("MP_Christmas2018_Tee_016_M"):
			return "CLO_AWM_DECL_16" /* GXT: Dilettante Tee */;
		case joaat("MP_Christmas2018_Tee_016_F"):
			return "CLO_AWF_DECL_16" /* GXT: Dilettante Tee */;
		case joaat("MP_Christmas2018_Tee_017_M"):
			return "CLO_AWM_DECL_17" /* GXT: Dinka Tee */;
		case joaat("MP_Christmas2018_Tee_017_F"):
			return "CLO_AWF_DECL_17" /* GXT: Dinka Tee */;
		case joaat("MP_Christmas2018_Tee_018_M"):
			return "CLO_AWM_DECL_18" /* GXT: Dundreary Tee */;
		case joaat("MP_Christmas2018_Tee_018_F"):
			return "CLO_AWF_DECL_18" /* GXT: Dundreary Tee */;
		case joaat("MP_Christmas2018_Tee_019_M"):
			return "CLO_AWM_DECL_19" /* GXT: Emperor Tee */;
		case joaat("MP_Christmas2018_Tee_019_F"):
			return "CLO_AWF_DECL_19" /* GXT: Emperor Tee */;
		case joaat("MP_Christmas2018_Tee_020_M"):
			return "CLO_AWM_DECL_20" /* GXT: Enus Tee */;
		case joaat("MP_Christmas2018_Tee_020_F"):
			return "CLO_AWF_DECL_20" /* GXT: Enus Tee */;
		case joaat("MP_Christmas2018_Tee_021_M"):
			return "CLO_AWM_DECL_21" /* GXT: Fathom Tee */;
		case joaat("MP_Christmas2018_Tee_021_F"):
			return "CLO_AWF_DECL_21" /* GXT: Fathom Tee */;
		case joaat("MP_Christmas2018_Tee_022_M"):
			return "CLO_AWM_DECL_22" /* GXT: Gallivanter Tee */;
		case joaat("MP_Christmas2018_Tee_022_F"):
			return "CLO_AWF_DECL_22" /* GXT: Gallivanter Tee */;
		case joaat("MP_Christmas2018_Tee_023_M"):
			return "CLO_AWM_DECL_23" /* GXT: Grotti Tee */;
		case joaat("MP_Christmas2018_Tee_023_F"):
			return "CLO_AWF_DECL_23" /* GXT: Grotti Tee */;
		case joaat("MP_Christmas2018_Tee_024_M"):
			return "CLO_AWM_DECL_24" /* GXT: Hijak Tee */;
		case joaat("MP_Christmas2018_Tee_024_F"):
			return "CLO_AWF_DECL_24" /* GXT: Hijak Tee */;
		case joaat("MP_Christmas2018_Tee_025_M"):
			return "CLO_AWM_DECL_25" /* GXT: HVY Tee */;
		case joaat("MP_Christmas2018_Tee_025_F"):
			return "CLO_AWF_DECL_25" /* GXT: HVY Tee */;
		case joaat("MP_Christmas2018_Tee_026_M"):
			return "CLO_AWM_DECL_26" /* GXT: Imponte Tee */;
		case joaat("MP_Christmas2018_Tee_026_F"):
			return "CLO_AWF_DECL_26" /* GXT: Imponte Tee */;
		case joaat("MP_Christmas2018_Tee_027_M"):
			return "CLO_AWM_DECL_27" /* GXT: Invetero Tee */;
		case joaat("MP_Christmas2018_Tee_027_F"):
			return "CLO_AWF_DECL_27" /* GXT: Invetero Tee */;
		case joaat("MP_Christmas2018_Tee_028_M"):
			return "CLO_AWM_DECL_28" /* GXT: Jobuilt Tee */;
		case joaat("MP_Christmas2018_Tee_028_F"):
			return "CLO_AWF_DECL_28" /* GXT: Jobuilt Tee */;
		case joaat("MP_Christmas2018_Tee_029_M"):
			return "CLO_AWM_DECL_29" /* GXT: Karin Tee */;
		case joaat("MP_Christmas2018_Tee_029_F"):
			return "CLO_AWF_DECL_29" /* GXT: Karin Tee */;
		case joaat("MP_Christmas2018_Tee_030_M"):
			return "CLO_AWM_DECL_30" /* GXT: Lampadati Tee */;
		case joaat("MP_Christmas2018_Tee_030_F"):
			return "CLO_AWF_DECL_30" /* GXT: Lampadati Tee */;
		case joaat("MP_Christmas2018_Tee_031_M"):
			return "CLO_AWM_DECL_31" /* GXT: Maibatsu Tee */;
		case joaat("MP_Christmas2018_Tee_031_F"):
			return "CLO_AWF_DECL_31" /* GXT: Maibatsu Tee */;
		case joaat("MP_Christmas2018_Tee_032_M"):
			return "CLO_AWM_DECL_32" /* GXT: Mamba Tee */;
		case joaat("MP_Christmas2018_Tee_032_F"):
			return "CLO_AWF_DECL_32" /* GXT: Mamba Tee */;
		case joaat("MP_Christmas2018_Tee_033_M"):
			return "CLO_AWM_DECL_33" /* GXT: Mammoth Tee */;
		case joaat("MP_Christmas2018_Tee_033_F"):
			return "CLO_AWF_DECL_33" /* GXT: Mammoth Tee */;
		case joaat("MP_Christmas2018_Tee_034_M"):
			return "CLO_AWM_DECL_34" /* GXT: MTL Tee */;
		case joaat("MP_Christmas2018_Tee_034_F"):
			return "CLO_AWF_DECL_34" /* GXT: MTL Tee */;
		case joaat("MP_Christmas2018_Tee_035_M"):
			return "CLO_AWM_DECL_35" /* GXT: Obey Tee */;
		case joaat("MP_Christmas2018_Tee_035_F"):
			return "CLO_AWF_DECL_35" /* GXT: Obey Tee */;
		case joaat("MP_Christmas2018_Tee_036_M"):
			return "CLO_AWM_DECL_36" /* GXT: Ocelot Tee */;
		case joaat("MP_Christmas2018_Tee_036_F"):
			return "CLO_AWF_DECL_36" /* GXT: Ocelot Tee */;
		case joaat("MP_Christmas2018_Tee_037_M"):
			return "CLO_AWM_DECL_37" /* GXT: Overflod Tee */;
		case joaat("MP_Christmas2018_Tee_037_F"):
			return "CLO_AWF_DECL_37" /* GXT: Overflod Tee */;
		case joaat("MP_Christmas2018_Tee_038_M"):
			return "CLO_AWM_DECL_38" /* GXT: Pegassi Tee */;
		case joaat("MP_Christmas2018_Tee_038_F"):
			return "CLO_AWF_DECL_38" /* GXT: Pegassi Tee */;
		case joaat("MP_Christmas2018_Tee_039_M"):
			return "CLO_AWM_DECL_39" /* GXT: Pfister Tee */;
		case joaat("MP_Christmas2018_Tee_039_F"):
			return "CLO_AWF_DECL_39" /* GXT: Pfister Tee */;
		case joaat("MP_Christmas2018_Tee_040_M"):
			return "CLO_AWM_DECL_40" /* GXT: Progen Tee */;
		case joaat("MP_Christmas2018_Tee_040_F"):
			return "CLO_AWF_DECL_40" /* GXT: Progen Tee */;
		case joaat("MP_Christmas2018_Tee_041_M"):
			return "CLO_AWM_DECL_41" /* GXT: Rune Tee */;
		case joaat("MP_Christmas2018_Tee_041_F"):
			return "CLO_AWF_DECL_41" /* GXT: Rune Tee */;
		case joaat("MP_Christmas2018_Tee_042_M"):
			return "CLO_AWM_DECL_42" /* GXT: Schyster Tee */;
		case joaat("MP_Christmas2018_Tee_042_F"):
			return "CLO_AWF_DECL_42" /* GXT: Schyster Tee */;
		case joaat("MP_Christmas2018_Tee_043_M"):
			return "CLO_AWM_DECL_43" /* GXT: Shitzu Tee */;
		case joaat("MP_Christmas2018_Tee_043_F"):
			return "CLO_AWF_DECL_43" /* GXT: Shitzu Tee */;
		case joaat("MP_Christmas2018_Tee_044_M"):
			return "CLO_AWM_DECL_44" /* GXT: Truffade Tee */;
		case joaat("MP_Christmas2018_Tee_044_F"):
			return "CLO_AWF_DECL_44" /* GXT: Truffade Tee */;
		case joaat("MP_Christmas2018_Tee_045_M"):
			return "CLO_AWM_DECL_45" /* GXT: Ubermacht Tee */;
		case joaat("MP_Christmas2018_Tee_045_F"):
			return "CLO_AWF_DECL_45" /* GXT: Ubermacht Tee */;
		case joaat("MP_Christmas2018_Tee_046_M"):
			return "CLO_AWM_DECL_46" /* GXT: Vapid Tee */;
		case joaat("MP_Christmas2018_Tee_046_F"):
			return "CLO_AWF_DECL_46" /* GXT: Vapid Tee */;
		case joaat("MP_Christmas2018_Tee_047_M"):
			return "CLO_AWM_DECL_47" /* GXT: Vulcar Tee */;
		case joaat("MP_Christmas2018_Tee_047_F"):
			return "CLO_AWF_DECL_47" /* GXT: Vulcar Tee */;
		case joaat("MP_Christmas2018_Tee_048_M"):
			return "CLO_AWM_DECL_48" /* GXT: Weeny Tee */;
		case joaat("MP_Christmas2018_Tee_048_F"):
			return "CLO_AWF_DECL_48" /* GXT: Weeny Tee */;
		case joaat("MP_Christmas2018_Tee_049_M"):
			return "CLO_AWM_DECL_49" /* GXT: Willard Tee */;
		case joaat("MP_Christmas2018_Tee_049_F"):
			return "CLO_AWF_DECL_49" /* GXT: Willard Tee */;
		case joaat("MP_Christmas2018_Tee_050_M"):
			return "CLO_AWM_DECL_50" /* GXT: Albany Nostalgia Tee */;
		case joaat("MP_Christmas2018_Tee_050_F"):
			return "CLO_AWF_DECL_50" /* GXT: Albany Nostalgia Tee */;
		case joaat("MP_Christmas2018_Tee_051_M"):
			return "CLO_AWM_DECL_51" /* GXT: Albany USA Tee */;
		case joaat("MP_Christmas2018_Tee_051_F"):
			return "CLO_AWF_DECL_51" /* GXT: Albany USA Tee */;
		case joaat("MP_Christmas2018_Tee_052_M"):
			return "CLO_AWM_DECL_52" /* GXT: Albany Dealership Tee */;
		case joaat("MP_Christmas2018_Tee_052_F"):
			return "CLO_AWF_DECL_52" /* GXT: Albany Dealership Tee */;
		case joaat("MP_Christmas2018_Tee_053_M"):
			return "CLO_AWM_DECL_53" /* GXT: Annis JPN Tee */;
		case joaat("MP_Christmas2018_Tee_053_F"):
			return "CLO_AWF_DECL_53" /* GXT: Annis JPN Tee */;
		case joaat("MP_Christmas2018_Tee_054_M"):
			return "CLO_AWM_DECL_54" /* GXT: BF Surfer Tee */;
		case joaat("MP_Christmas2018_Tee_054_F"):
			return "CLO_AWF_DECL_54" /* GXT: BF Surfer Tee */;
		case joaat("MP_Christmas2018_Tee_055_M"):
			return "CLO_AWM_DECL_55" /* GXT: Bollokan Prairie Tee */;
		case joaat("MP_Christmas2018_Tee_055_F"):
			return "CLO_AWF_DECL_55" /* GXT: Bollokan Prairie Tee */;
		case joaat("MP_Christmas2018_Tee_056_M"):
			return "CLO_AWM_DECL_56" /* GXT: Bravado Stylized Tee */;
		case joaat("MP_Christmas2018_Tee_056_F"):
			return "CLO_AWF_DECL_56" /* GXT: Bravado Stylized Tee */;
		case joaat("MP_Christmas2018_Tee_057_M"):
			return "CLO_AWM_DECL_57" /* GXT: Brute Impregnable Tee */;
		case joaat("MP_Christmas2018_Tee_057_F"):
			return "CLO_AWF_DECL_57" /* GXT: Brute Impregnable Tee */;
		case joaat("MP_Christmas2018_Tee_058_M"):
			return "CLO_AWM_DECL_58" /* GXT: Brute Heavy Duty Tee */;
		case joaat("MP_Christmas2018_Tee_058_F"):
			return "CLO_AWF_DECL_58" /* GXT: Brute Heavy Duty Tee */;
		case joaat("MP_Christmas2018_Tee_059_M"):
			return "CLO_AWM_DECL_59" /* GXT: Buckingham Luxe Tee */;
		case joaat("MP_Christmas2018_Tee_059_F"):
			return "CLO_AWF_DECL_59" /* GXT: Buckingham Luxe Tee */;
		case joaat("MP_Christmas2018_Tee_060_M"):
			return "CLO_AWM_DECL_60" /* GXT: Canis USA Tee */;
		case joaat("MP_Christmas2018_Tee_060_F"):
			return "CLO_AWF_DECL_60" /* GXT: Canis USA Tee */;
		case joaat("MP_Christmas2018_Tee_061_M"):
			return "CLO_AWMDECL_61";
		case joaat("MP_Christmas2018_Tee_061_F"):
			return "CLO_AWF_DECL_61" /* GXT: Canis American Legend Tee */;
		case joaat("MP_Christmas2018_Tee_062_M"):
			return "CLO_AWM_DECL_62" /* GXT: Canis Wolf Tee */;
		case joaat("MP_Christmas2018_Tee_062_F"):
			return "CLO_AWF_DECL_62" /* GXT: Canis Wolf Tee */;
		case joaat("MP_Christmas2018_Tee_063_M"):
			return "CLO_AWM_DECL_63" /* GXT: Cheval Marshall Tee */;
		case joaat("MP_Christmas2018_Tee_063_F"):
			return "CLO_AWF_DECL_63" /* GXT: Cheval Marshall Tee */;
		case joaat("MP_Christmas2018_Tee_064_M"):
			return "CLO_AWM_DECL_64" /* GXT: Coil USA Tee */;
		case joaat("MP_Christmas2018_Tee_064_F"):
			return "CLO_AWF_DECL_64" /* GXT: Coil USA Tee */;
		case joaat("MP_Christmas2018_Tee_065_M"):
			return "CLO_AWM_DECL_65" /* GXT: Coil Raiden Tee */;
		case joaat("MP_Christmas2018_Tee_065_F"):
			return "CLO_AWF_DECL_65" /* GXT: Coil Raiden Tee */;
		case joaat("MP_Christmas2018_Tee_066_M"):
			return "CLO_AWM_DECL_66" /* GXT: Declasse Logo Tee */;
		case joaat("MP_Christmas2018_Tee_066_F"):
			return "CLO_AWF_DECL_66" /* GXT: Declasse Logo Tee */;
		case joaat("MP_Christmas2018_Tee_067_M"):
			return "CLO_AWM_DECL_67" /* GXT: Declasse Girl Tee */;
		case joaat("MP_Christmas2018_Tee_067_F"):
			return "CLO_AWF_DECL_67" /* GXT: Declasse Girl Tee */;
		case joaat("MP_Christmas2018_Tee_068_M"):
			return "CLO_AWM_DECL_68" /* GXT: Burger Shot Black Tee */;
		case joaat("MP_Christmas2018_Tee_068_F"):
			return "CLO_AWF_DECL_68" /* GXT: Burger Shot Black Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_ARENA_F_JBIB_16_0"):
			return "CLO_X5F_U_16_0" /* GXT: Burger Shot Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_0"):
			return "CLO_X5M_U_16_0" /* GXT: Burger Shot Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_1"):
			return "CLO_X5F_U_16_1" /* GXT: Red Bleeder Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_1"):
			return "CLO_X5M_U_16_1" /* GXT: Red Bleeder Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_2"):
			return "CLO_X5F_U_16_2" /* GXT: Blue Bleeder Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_2"):
			return "CLO_X5M_U_16_2" /* GXT: Blue Bleeder Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_3"):
			return "CLO_X5F_U_16_3" /* GXT: Blue Cluckin' Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_3"):
			return "CLO_X5M_U_16_3" /* GXT: Blue Cluckin' Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_4"):
			return "CLO_X5F_U_16_4" /* GXT: Green Cluckin' Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_4"):
			return "CLO_X5M_U_16_4" /* GXT: Green Cluckin' Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_5"):
			return "CLO_X5F_U_16_5" /* GXT: Blue Slaying Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_5"):
			return "CLO_X5M_U_16_5" /* GXT: Blue Slaying Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_6"):
			return "CLO_X5F_U_16_6" /* GXT: Green Slaying Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_6"):
			return "CLO_X5M_U_16_6" /* GXT: Green Slaying Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_7"):
			return "CLO_X5F_U_16_7" /* GXT: Slasher Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_7"):
			return "CLO_X5M_U_16_7" /* GXT: Slasher Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_8"):
			return "CLO_X5F_U_16_8" /* GXT: Hail Santa Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_8"):
			return "CLO_X5M_U_16_8" /* GXT: Hail Santa Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_9"):
			return "CLO_X5F_U_16_9" /* GXT: Red Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_9"):
			return "CLO_X5M_U_16_9" /* GXT: Red Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_10"):
			return "CLO_X5F_U_16_10" /* GXT: Black & White Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_10"):
			return "CLO_X5M_U_16_10" /* GXT: Black & White Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_11"):
			return "CLO_X5F_U_16_11" /* GXT: Black & Red Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_11"):
			return "CLO_X5M_U_16_11" /* GXT: Black & Red Bones Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_12"):
			return "CLO_X5F_U_16_12" /* GXT: Merry Sprunkmas Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_12"):
			return "CLO_X5M_U_16_12" /* GXT: Merry Sprunkmas Festive Sweater */;
		case joaat("DLC_MP_ARENA_F_JBIB_16_13"):
			return "CLO_X5F_U_16_13" /* GXT: Ice Cold Sprunk Festive Sweater */;
		case joaat("DLC_MP_ARENA_M_JBIB_16_13"):
			return "CLO_X5M_U_16_13" /* GXT: Ice Cold Sprunk Festive Sweater */;
		default:
	}
	switch (iParam0)
	{
		case joaat("MP_Battle_Clothing_000_M"):
		case joaat("MP_Battle_Clothing_000_F"):
			return "CLO_BHM_DECL_0" /* GXT: Kifflom T-Shirt */;
		case joaat("MP_Battle_Clothing_002_M"):
		case joaat("MP_Battle_Clothing_002_F"):
			return "CLO_BHM_DECL_1" /* GXT: Blaine County Radio Tee */;
		case joaat("MP_Battle_Clothing_003_M"):
		case joaat("MP_Battle_Clothing_003_F"):
			return "CLO_BHM_DECL_2" /* GXT: Channel X Tee */;
		case joaat("MP_Battle_Clothing_004_M"):
		case joaat("MP_Battle_Clothing_004_F"):
			return "CLO_BHM_DECL_3" /* GXT: East Los FM Tee */;
		case joaat("MP_Battle_Clothing_005_M"):
		case joaat("MP_Battle_Clothing_005_F"):
			return "CLO_BHM_DECL_4" /* GXT: FlyLo FM Tee */;
		case joaat("MP_Battle_Clothing_006_M"):
		case joaat("MP_Battle_Clothing_006_F"):
			return "CLO_BHM_DECL_5" /* GXT: LS Rock Radio Tee */;
		case joaat("MP_Battle_Clothing_007_M"):
		case joaat("MP_Battle_Clothing_007_F"):
			return "CLO_BHM_DECL_6" /* GXT: Non-Stop-Pop FM Tee */;
		case joaat("MP_Battle_Clothing_008_M"):
		case joaat("MP_Battle_Clothing_008_F"):
			return "CLO_BHM_DECL_7" /* GXT: Radio LS Tee */;
		case joaat("MP_Battle_Clothing_009_M"):
		case joaat("MP_Battle_Clothing_009_F"):
			return "CLO_BHM_DECL_8" /* GXT: Radio Mirror Park Tee */;
		case joaat("MP_Battle_Clothing_010_M"):
		case joaat("MP_Battle_Clothing_010_F"):
			return "CLO_BHM_DECL_9" /* GXT: Rebel Radio Tee */;
		case joaat("MP_Battle_Clothing_011_M"):
		case joaat("MP_Battle_Clothing_011_F"):
			return "CLO_BHM_DECL_10" /* GXT: Soulwax FM Tee */;
		case joaat("MP_Battle_Clothing_012_M"):
		case joaat("MP_Battle_Clothing_012_F"):
			return "CLO_BHM_DECL_11" /* GXT: Space 103.2 Tee */;
		case joaat("MP_Battle_Clothing_013_M"):
		case joaat("MP_Battle_Clothing_013_F"):
			return "CLO_BHM_DECL_12" /* GXT: Blue Ark Tee */;
		case joaat("MP_Battle_Clothing_014_M"):
		case joaat("MP_Battle_Clothing_014_F"):
			return "CLO_BHM_DECL_13" /* GXT: The Lab Tee */;
		case joaat("MP_Battle_Clothing_015_M"):
		case joaat("MP_Battle_Clothing_015_F"):
			return "CLO_BHM_DECL_14" /* GXT: The Lowdown 91.1 Tee */;
		case joaat("MP_Battle_Clothing_016_M"):
		case joaat("MP_Battle_Clothing_016_F"):
			return "CLO_BHM_DECL_15" /* GXT: Vinewood Blvd Radio Tee */;
		case joaat("MP_Battle_Clothing_017_M"):
		case joaat("MP_Battle_Clothing_017_F"):
			return "CLO_BHM_DECL_16" /* GXT: West Coast Classics Tee */;
		case joaat("MP_Battle_Clothing_018_M"):
		case joaat("MP_Battle_Clothing_018_F"):
			return "CLO_BHM_DECL_17" /* GXT: West Coast Talk Radio Tee */;
		case joaat("MP_Battle_Clothing_019_M"):
		case joaat("MP_Battle_Clothing_019_F"):
			return "CLO_BHM_DECL_18" /* GXT: WorldWide FM Tee */;
		case joaat("MP_Battle_Clothing_020_M"):
		case joaat("MP_Battle_Clothing_020_F"):
			return "CLO_BHM_DECL_19" /* GXT: LS UR Tee */;
		case joaat("MP_Battle_Clothing_021_M"):
		case joaat("MP_Battle_Clothing_021_F"):
			return "CLO_BHM_DECL_20" /* GXT: Blonded LS 97.8 FM Tee */;
		case joaat("MP_Battle_Clothing_022_M"):
		case joaat("MP_Battle_Clothing_022_F"):
			return "BBNCSHIRT3" /* GXT: Galaxy T-Shirt */;
		case joaat("MP_Battle_Clothing_023_M"):
		case joaat("MP_Battle_Clothing_023_F"):
			return "BBNCSHIRT4" /* GXT: Gefängnis T-Shirt */;
		case joaat("MP_Battle_Clothing_024_M"):
		case joaat("MP_Battle_Clothing_024_F"):
			return "BBNCSHIRT5" /* GXT: Omega T-Shirt */;
		case joaat("MP_Battle_Clothing_025_M"):
		case joaat("MP_Battle_Clothing_025_F"):
			return "BBNCSHIRT1" /* GXT: Maisonette Los Santos T-Shirt */;
		case joaat("MP_Battle_Clothing_026_M"):
		case joaat("MP_Battle_Clothing_026_F"):
			return "BBNCSHIRT7" /* GXT: Paradise T-Shirt */;
		case joaat("MP_Battle_Clothing_027_M"):
		case joaat("MP_Battle_Clothing_027_F"):
			return "BBNCSHIRT2" /* GXT: Studio Los Santos T-Shirt */;
		case joaat("MP_Battle_Clothing_028_M"):
		case joaat("MP_Battle_Clothing_028_F"):
			return "BBNCSHIRT6" /* GXT: Technologie T-Shirt */;
		case joaat("MP_Battle_Clothing_029_M"):
		case joaat("MP_Battle_Clothing_029_F"):
			return "BBNCSHIRT8" /* GXT: The Palace T-Shirt */;
		case joaat("MP_Battle_Clothing_030_M"):
		case joaat("MP_Battle_Clothing_030_F"):
			return "BBNCSHIRT9" /* GXT: Tony's Fun House T-Shirt */;
		default:
	}
	switch (iParam0)
	{
		case joaat("MP_Battle_Clothing_031_M"):
		case joaat("MP_Battle_Clothing_031_F"):
			return "CLO_BHF_DECL_30" /* GXT: White The Black Madonna Tee */;
		case joaat("MP_Battle_Clothing_032_M"):
		case joaat("MP_Battle_Clothing_032_F"):
			return "CLO_BHF_DECL_31" /* GXT: Black The Black Madonna Tee */;
		case joaat("MP_Battle_Clothing_033_M"):
		case joaat("MP_Battle_Clothing_033_F"):
			return "CLO_BHF_DECL_32" /* GXT: White The Black Madonna Emb. Tee */;
		case joaat("MP_Battle_Clothing_034_M"):
		case joaat("MP_Battle_Clothing_034_F"):
			return "CLO_BHF_DECL_33" /* GXT: Black The Black Madonna Emb. Tee */;
		case joaat("MP_Battle_Clothing_035_M"):
		case joaat("MP_Battle_Clothing_035_F"):
			return "CLO_BHF_DECL_34" /* GXT: White The Black Madonna Init. Tee */;
		case joaat("MP_Battle_Clothing_036_M"):
		case joaat("MP_Battle_Clothing_036_F"):
			return "CLO_BHF_DECL_35" /* GXT: The Black Madonna Star Tee */;
		case joaat("MP_Battle_Clothing_037_M"):
		case joaat("MP_Battle_Clothing_037_F"):
			return "CLO_BHF_DECL_36" /* GXT: Black The Black Madonna Init. Tee */;
		case joaat("MP_Battle_Clothing_038_M"):
		case joaat("MP_Battle_Clothing_038_F"):
			return "CLO_BHF_DECL_37" /* GXT: The Black Madonna We Believe Tee */;
		case joaat("MP_Battle_Clothing_039_M"):
		case joaat("MP_Battle_Clothing_039_F"):
			return "CLO_BHF_DECL_38" /* GXT: Dixon Green Logo Tee */;
		case joaat("MP_Battle_Clothing_040_M"):
		case joaat("MP_Battle_Clothing_040_F"):
			return "CLO_BHF_DECL_39" /* GXT: Dixon Glitch Logo Tee */;
		case joaat("MP_Battle_Clothing_041_M"):
		case joaat("MP_Battle_Clothing_041_F"):
			return "CLO_BHF_DECL_40" /* GXT: Dixon Box Logo Tee */;
		case joaat("MP_Battle_Clothing_042_M"):
		case joaat("MP_Battle_Clothing_042_F"):
			return "CLO_BHF_DECL_41" /* GXT: Dixon Pocket Logo Tee */;
		case joaat("MP_Battle_Clothing_043_M"):
		case joaat("MP_Battle_Clothing_043_F"):
			return "CLO_BHF_DECL_42" /* GXT: White Dixon Repeated Logo Tee */;
		case joaat("MP_Battle_Clothing_044_M"):
		case joaat("MP_Battle_Clothing_044_F"):
			return "CLO_BHF_DECL_43" /* GXT: Black Dixon Repeated Logo Tee */;
		case joaat("MP_Battle_Clothing_045_M"):
		case joaat("MP_Battle_Clothing_045_F"):
			return "CLO_BHF_DECL_44" /* GXT: White Dixon Wilderness Tee */;
		case joaat("MP_Battle_Clothing_046_M"):
		case joaat("MP_Battle_Clothing_046_F"):
			return "CLO_BHF_DECL_45" /* GXT: Black Dixon Wilderness Tee */;
		case joaat("MP_Battle_Clothing_047_M"):
		case joaat("MP_Battle_Clothing_047_F"):
			return "CLO_BHF_DECL_46" /* GXT: Tale Of Us Box Logo Tee */;
		case joaat("MP_Battle_Clothing_048_M"):
		case joaat("MP_Battle_Clothing_048_F"):
			return "CLO_BHF_DECL_47" /* GXT: White Tale Of Us Logo Tee */;
		case joaat("MP_Battle_Clothing_049_M"):
		case joaat("MP_Battle_Clothing_049_F"):
			return "CLO_BHF_DECL_48" /* GXT: Black Tale Of Us Logo Tee */;
		case joaat("MP_Battle_Clothing_050_M"):
		case joaat("MP_Battle_Clothing_050_F"):
			return "CLO_BHF_DECL_49" /* GXT: Tale Of Us Black Box Tee */;
		case joaat("MP_Battle_Clothing_051_M"):
		case joaat("MP_Battle_Clothing_051_F"):
			return "CLO_BHF_DECL_50" /* GXT: Tale Of Us Stacked Logo Tee */;
		case joaat("MP_Battle_Clothing_052_M"):
		case joaat("MP_Battle_Clothing_052_F"):
			return "CLO_BHF_DECL_51" /* GXT: Tale Of Us Afterlight Tee */;
		case joaat("MP_Battle_Clothing_053_M"):
		case joaat("MP_Battle_Clothing_053_F"):
			return "CLO_BHF_DECL_52" /* GXT: White Tale Of Us Emb. Tee */;
		case joaat("MP_Battle_Clothing_054_M"):
		case joaat("MP_Battle_Clothing_054_F"):
			return "CLO_BHF_DECL_53" /* GXT: Black Tale Of Us Emb. Tee */;
		case joaat("MP_Battle_Clothing_055_M"):
		case joaat("MP_Battle_Clothing_055_F"):
			return "CLO_BHF_DECL_54" /* GXT: White Solomun Logo Tee */;
		case joaat("MP_Battle_Clothing_056_M"):
		case joaat("MP_Battle_Clothing_056_F"):
			return "CLO_BHF_DECL_55" /* GXT: Black Solomun Yellow Logo Tee */;
		case joaat("MP_Battle_Clothing_057_M"):
		case joaat("MP_Battle_Clothing_057_F"):
			return "CLO_BHF_DECL_56" /* GXT: Black Solomun White Logo Tee */;
		case joaat("MP_Battle_Clothing_058_M"):
		case joaat("MP_Battle_Clothing_058_F"):
			return "CLO_BHF_DECL_57" /* GXT: White Solomun Tee */;
		case joaat("MP_Battle_Clothing_059_M"):
		case joaat("MP_Battle_Clothing_059_F"):
			return "CLO_BHF_DECL_58" /* GXT: Black And Yellow Solomun Tee */;
		case joaat("MP_Battle_Clothing_060_M"):
		case joaat("MP_Battle_Clothing_060_F"):
			return "CLO_BHF_DECL_59" /* GXT: Black And White Solomun Tee */;
		case joaat("MP_Battle_Clothing_061_M"):
		case joaat("MP_Battle_Clothing_061_F"):
			return "CLO_BHF_DECL_60" /* GXT: White Solomun Pocket Logo Tee */;
		case joaat("MP_Battle_Clothing_062_M"):
		case joaat("MP_Battle_Clothing_062_F"):
			return "CLO_BHF_DECL_61" /* GXT: Black Solomun Pocket Logo Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_X17_M_BERD_2_0"):
		case joaat("DLC_MP_X17_M_LEGS_1_0"):
		case joaat("DLC_MP_X17_M_FEET_1_0"):
		case joaat("DLC_MP_X17_M_JBIB_5_0"):
			return "CLO_X17M_O_M_0" /* GXT: Green Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_X17_F_BERD_2_0"):
		case joaat("DLC_MP_X17_F_LEGS_1_0"):
		case joaat("DLC_MP_X17_F_FEET_1_0"):
		case joaat("DLC_MP_X17_F_JBIB_5_0"):
			return "CLO_X17F_O_M_0" /* GXT: Green Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_X17_M_BERD_2_1"):
		case joaat("DLC_MP_X17_M_LEGS_1_1"):
		case joaat("DLC_MP_X17_M_FEET_1_1"):
		case joaat("DLC_MP_X17_M_JBIB_5_1"):
			return "CLO_X17M_O_M_1" /* GXT: Orange Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_X17_F_BERD_2_1"):
		case joaat("DLC_MP_X17_F_LEGS_1_1"):
		case joaat("DLC_MP_X17_F_FEET_1_1"):
		case joaat("DLC_MP_X17_F_JBIB_5_1"):
			return "CLO_X17F_O_M_1" /* GXT: Orange Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_2"):
		case joaat("DLC_MP_X17_M_BERD_2_2"):
		case joaat("DLC_MP_X17_M_LEGS_1_2"):
		case joaat("DLC_MP_X17_M_FEET_1_2"):
		case joaat("DLC_MP_X17_M_JBIB_5_2"):
			return "CLO_X17M_O_M_2" /* GXT: Blue Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_2"):
		case joaat("DLC_MP_X17_F_BERD_2_2"):
		case joaat("DLC_MP_X17_F_LEGS_1_2"):
		case joaat("DLC_MP_X17_F_FEET_1_2"):
		case joaat("DLC_MP_X17_F_JBIB_5_2"):
			return "CLO_X17F_O_M_2" /* GXT: Blue Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_3"):
		case joaat("DLC_MP_X17_M_BERD_2_3"):
		case joaat("DLC_MP_X17_M_LEGS_1_3"):
		case joaat("DLC_MP_X17_M_FEET_1_3"):
		case joaat("DLC_MP_X17_M_JBIB_5_3"):
			return "CLO_X17M_O_M_3" /* GXT: Pink Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_3"):
		case joaat("DLC_MP_X17_F_BERD_2_3"):
		case joaat("DLC_MP_X17_F_LEGS_1_3"):
		case joaat("DLC_MP_X17_F_FEET_1_3"):
		case joaat("DLC_MP_X17_F_JBIB_5_3"):
			return "CLO_X17F_O_M_3" /* GXT: Pink Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_4"):
		case joaat("DLC_MP_X17_M_BERD_2_4"):
		case joaat("DLC_MP_X17_M_LEGS_1_4"):
		case joaat("DLC_MP_X17_M_FEET_1_4"):
		case joaat("DLC_MP_X17_M_JBIB_5_4"):
			return "CLO_X17M_O_M_4" /* GXT: Yellow Wireframe Bodysuit */;
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_4"):
		case joaat("DLC_MP_X17_F_BERD_2_4"):
		case joaat("DLC_MP_X17_F_LEGS_1_4"):
		case joaat("DLC_MP_X17_F_FEET_1_4"):
		case joaat("DLC_MP_X17_F_JBIB_5_4"):
			return "CLO_X17F_O_M_4" /* GXT: Yellow Wireframe Bodysuit */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LTS_M_OUTFIT_14"):
		case joaat("DLC_MP_LTS_F_OUTFIT_14"):
			return "CLO_LTSM_O_14" /* GXT: The Forest */;
		case joaat("DLC_MP_X17_M_BERD_10_0"):
		case joaat("DLC_MP_X17_F_BERD_10_0"):
			return "UNLOCK_AWD_KRAMP1" /* GXT: Hideous Krampus Mask */;
		case joaat("DLC_MP_X17_M_BERD_10_1"):
		case joaat("DLC_MP_X17_F_BERD_10_1"):
			return "UNLOCK_AWD_KRAMP2" /* GXT: Fearsome Krampus Mask */;
		case joaat("DLC_MP_X17_M_BERD_10_2"):
		case joaat("DLC_MP_X17_F_BERD_10_2"):
			return "UNLOCK_AWD_KRAMP3" /* GXT: Odious Krampus Mask */;
		case joaat("DLC_MP_X17_M_BERD_10_3"):
		case joaat("DLC_MP_X17_F_BERD_10_3"):
			return "UNLOCK_AWD_KRAMP4" /* GXT: Heinous Krampus Mask */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_PHEAD_6_0"):
		case joaat("DLC_MP_GR_M_PHEAD_7_0"):
			return "CLO_GRM_PH_6_0" /* GXT: Red Hawk & Little Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_0"):
		case joaat("DLC_MP_GR_F_PHEAD_7_0"):
			return "CLO_GRF_PH_6_0" /* GXT: Red Hawk & Little Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_2"):
		case joaat("DLC_MP_GR_M_PHEAD_7_2"):
			return "CLO_GRM_PH_6_2" /* GXT: White Shrewsbury Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_2"):
		case joaat("DLC_MP_GR_F_PHEAD_7_2"):
			return "CLO_GRF_PH_6_2" /* GXT: White Shrewsbury Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_4"):
		case joaat("DLC_MP_GR_M_PHEAD_7_4"):
			return "CLO_GRM_PH_6_4" /* GXT: White Vom Feuer Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_4"):
		case joaat("DLC_MP_GR_F_PHEAD_7_4"):
			return "CLO_GRF_PH_6_4" /* GXT: White Vom Feuer Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_5"):
		case joaat("DLC_MP_GR_M_PHEAD_7_5"):
			return "CLO_GRM_PH_6_5" /* GXT: Black Vom Feuer Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_5"):
		case joaat("DLC_MP_GR_F_PHEAD_7_5"):
			return "CLO_GRF_PH_6_5" /* GXT: Black Vom Feuer Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_6"):
		case joaat("DLC_MP_GR_M_PHEAD_7_6"):
			return "CLO_GRM_PH_6_6" /* GXT: Wine Coil Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_6"):
		case joaat("DLC_MP_GR_F_PHEAD_7_6"):
			return "CLO_GRF_PH_6_6" /* GXT: Wine Coil Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_7"):
		case joaat("DLC_MP_GR_M_PHEAD_7_7"):
			return "CLO_GRM_PH_6_7" /* GXT: Black Coil Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_7"):
		case joaat("DLC_MP_GR_F_PHEAD_7_7"):
			return "CLO_GRF_PH_6_7" /* GXT: Black Coil Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_8"):
		case joaat("DLC_MP_GR_M_PHEAD_7_8"):
			return "CLO_GRM_PH_6_8" /* GXT: Black Ammu-Nation Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_8"):
		case joaat("DLC_MP_GR_F_PHEAD_7_8"):
			return "CLO_GRF_PH_6_8" /* GXT: Black Ammu-Nation Cap */;
		case joaat("DLC_MP_GR_M_PHEAD_6_10"):
		case joaat("DLC_MP_GR_M_PHEAD_7_10"):
			return "CLO_GRM_PH_6_10" /* GXT: Warstock Cap */;
		case joaat("DLC_MP_GR_F_PHEAD_6_10"):
		case joaat("DLC_MP_GR_F_PHEAD_7_10"):
			return "CLO_GRF_PH_6_10" /* GXT: Warstock Cap */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_JBIB_19_0"):
		case joaat("DLC_MP_GR_F_JBIB_25_0"):
			return "CLO_GRF_U_25_0" /* GXT: Blue R* Class of '98 */;
		case joaat("DLC_MP_GR_M_JBIB_19_1"):
		case joaat("DLC_MP_GR_F_JBIB_25_1"):
			return "CLO_GRF_U_25_1" /* GXT: Red R* Class of '98 */;
		case joaat("DLC_MP_GR_M_JBIB_20_0"):
		case joaat("DLC_MP_GR_F_JBIB_26_0"):
			return "CLO_GRM_U_20_0" /* GXT: Knuckleduster Pocket Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_DECL_5_0"):
		case joaat("DLC_MP_GR_F_DECL_5_0"):
			return "CLO_GRF_DECL_19" /* GXT: White Hawk & Little Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_1"):
		case joaat("DLC_MP_GR_F_DECL_5_1"):
			return "CLO_GRM_DECL_20" /* GXT: Black Hawk & Little Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_2"):
		case joaat("DLC_MP_GR_F_DECL_5_2"):
			return "CLO_GRM_DECL_21" /* GXT: White Shrewsbury Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_3"):
		case joaat("DLC_MP_GR_F_DECL_5_3"):
			return "CLO_GRF_DECL_22" /* GXT: Black Shrewsbury Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_4"):
		case joaat("DLC_MP_GR_F_DECL_5_4"):
			return "CLO_GRM_DECL_23" /* GXT: White Vom Feuer Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_6"):
		case joaat("DLC_MP_GR_F_DECL_5_6"):
			return "CLO_GRM_DECL_25" /* GXT: White Coil Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_8"):
		case joaat("DLC_MP_GR_F_DECL_5_8"):
			return "CLO_GRM_DECL_27" /* GXT: Black Ammu-Nation Hoodie */;
		case joaat("DLC_MP_GR_M_DECL_5_10"):
		case joaat("DLC_MP_GR_F_DECL_5_10"):
			return "CLO_GRM_DECL_29" /* GXT: Black Warstock Hoodie */;
		default:
	}
	switch (iParam0)
	{
		case joaat("MP_Gunrunning_Award_000_M"):
		case joaat("MP_Gunrunning_Award_000_F"):
			return "CLO_GRF_DECL_0" /* GXT: Black Hawk & Little Logo Tee */;
		case joaat("MP_Gunrunning_Award_002_M"):
		case joaat("MP_Gunrunning_Award_002_F"):
			return "CLO_GRM_DECL_2" /* GXT: White Hawk & Little Tee */;
		case joaat("MP_Gunrunning_Award_003_M"):
		case joaat("MP_Gunrunning_Award_003_F"):
			return "CLO_GRF_DECL_3" /* GXT: Black Hawk & Little Tee */;
		case joaat("MP_Gunrunning_Award_005_M"):
		case joaat("MP_Gunrunning_Award_005_F"):
			return "CLO_GRF_DECL_5" /* GXT: White Shrewsbury Logo Tee */;
		case joaat("MP_Gunrunning_Award_006_M"):
		case joaat("MP_Gunrunning_Award_006_F"):
			return "CLO_GRF_DECL_6" /* GXT: White Shrewsbury Tee */;
		case joaat("MP_Gunrunning_Award_009_M"):
		case joaat("MP_Gunrunning_Award_009_F"):
			return "CLO_GRM_DECL_9" /* GXT: Yellow Vom Feuer Logo Tee */;
		case joaat("MP_Gunrunning_Award_010_M"):
		case joaat("MP_Gunrunning_Award_010_F"):
			return "CLO_GRM_DECL_10" /* GXT: Yellow Vom Feuer Tee */;
		case joaat("MP_Gunrunning_Award_011_M"):
		case joaat("MP_Gunrunning_Award_011_F"):
			return "CLO_GRF_DECL_11" /* GXT: Green Vom Feuer Tee */;
		case joaat("MP_Gunrunning_Award_012_M"):
		case joaat("MP_Gunrunning_Award_012_F"):
			return "CLO_GRF_DECL_12" /* GXT: White Coil Tee */;
		case joaat("MP_Gunrunning_Award_014_M"):
		case joaat("MP_Gunrunning_Award_014_F"):
			return "CLO_GRM_DECL_14" /* GXT: Black Coil Tee */;
		case joaat("MP_Gunrunning_Award_015_M"):
		case joaat("MP_Gunrunning_Award_015_F"):
			return "CLO_GRM_DECL_15" /* GXT: Black Ammu-Nation Tee */;
		case joaat("MP_Gunrunning_Award_016_M"):
		case joaat("MP_Gunrunning_Award_016_F"):
			return "CLO_GRM_DECL_16" /* GXT: White Ammu-Nation Tee */;
		case joaat("MP_Gunrunning_Award_017_M"):
		case joaat("MP_Gunrunning_Award_017_F"):
			return "CLO_GRM_DECL_10" /* GXT: Yellow Vom Feuer Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_IE_M_BERD_7_0"):
			return "CLO_X4M_B_7_0" /* GXT: Unicorn */;
		case joaat("DLC_MP_IE_F_BERD_7_0"):
			return "CLO_X4F_B_7_0" /* GXT: Unicorn */;
		default:
	}
	switch (iParam0)
	{
		case joaat("MP_Biker_Award_000_M"):
			return "CLO_BIM_DECL_57" /* GXT: R* Crosswalk Tee */;
		case joaat("MP_Biker_Award_000_F"):
			return "CLO_BIF_DECL_56" /* GXT: Crosswalk Tee */;
		case joaat("MP_Biker_Award_001_M"):
			return "CLO_BIM_DECL_57" /* GXT: R* Crosswalk Tee */;
		case joaat("MP_Biker_Award_001_F"):
			return "CLO_BIF_DECL_57" /* GXT: R* Crosswalk Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("MP_Biker_Tee_022_M"):
		case joaat("MP_Biker_Tee_022_F"):
			return "bikshirt4" /* GXT: Steel Horse Solid Logo Tee */;
		case joaat("MP_Biker_Tee_023_M"):
		case joaat("MP_Biker_Tee_023_F"):
			return "bikshirt5" /* GXT: Steel Horse Logo Tee */;
		case joaat("MP_Biker_Tee_024_M"):
		case joaat("MP_Biker_Tee_024_F"):
			return "bikshirt7" /* GXT: Steel Horse Brand Black Tee */;
		case joaat("MP_Biker_Tee_025_M"):
		case joaat("MP_Biker_Tee_025_F"):
			return "bikshirt6" /* GXT: Steel Horse Brand White Tee */;
		case joaat("MP_Biker_Tee_047_M"):
		case joaat("MP_Biker_Tee_047_F"):
			return "bikshirt3" /* GXT: Western Logo Black Tee */;
		case joaat("MP_Biker_Tee_048_M"):
		case joaat("MP_Biker_Tee_048_F"):
			return "bikshirt2" /* GXT: Western Logo White Tee */;
		case joaat("MP_Biker_Tee_049_M"):
		case joaat("MP_Biker_Tee_049_F"):
			return "bikshirt1" /* GXT: Western Brand Black Tee */;
		case joaat("MP_Biker_Tee_050_M"):
		case joaat("MP_Biker_Tee_050_F"):
			return "bikshirt0" /* GXT: Western Brand White Tee */;
		case joaat("MP_Biker_Tee_051_M"):
		case joaat("MP_Biker_Tee_051_F"):
			return "bikshirt8" /* GXT: Nagasaki White Tee */;
		case joaat("MP_Biker_Tee_052_M"):
		case joaat("MP_Biker_Tee_052_F"):
			return "bikshirt9" /* GXT: Nagasaki White and Red Tee */;
		case joaat("MP_Biker_Tee_053_M"):
		case joaat("MP_Biker_Tee_053_F"):
			return "bikshirt10" /* GXT: Nagasaki Black Tee */;
		case joaat("MP_Biker_Tee_054_M"):
		case joaat("MP_Biker_Tee_054_F"):
			return "bikshirt11" /* GXT: Purple Helmets Black Tee */;
		case joaat("MP_Biker_Tee_055_M"):
		case joaat("MP_Biker_Tee_055_F"):
			return "bikshirt12" /* GXT: Principe Black Tee */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_BIKER_M_DECL_0_0"):
		case joaat("DLC_MP_BIKER_F_DECL_0_0"):
			return "bikshirt13" /* GXT: Black Steel Horse Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_1"):
		case joaat("DLC_MP_BIKER_F_DECL_0_1"):
			return "bikshirt14" /* GXT: Steel Horse Brand White Tee */;
		case joaat("DLC_MP_BIKER_M_DECL_0_2"):
		case joaat("DLC_MP_BIKER_F_DECL_0_2"):
			return "bikshirt15" /* GXT: Western Black Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_3"):
		case joaat("DLC_MP_BIKER_F_DECL_0_3"):
			return "bikshirt16" /* GXT: Western Logo White Tee */;
		case joaat("DLC_MP_BIKER_M_DECL_0_4"):
		case joaat("DLC_MP_BIKER_F_DECL_0_4"):
			return "bikshirt17" /* GXT: Nagasaki White Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_5"):
		case joaat("DLC_MP_BIKER_F_DECL_0_5"):
			return "bikshirt18" /* GXT: Nagasaki White and Red Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_6"):
		case joaat("DLC_MP_BIKER_F_DECL_0_6"):
			return "bikshirt19" /* GXT: Nagasaki Black Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_7"):
		case joaat("DLC_MP_BIKER_F_DECL_0_7"):
			return "bikshirt20" /* GXT: Purple Helmets Black Hoodie */;
		case joaat("DLC_MP_BIKER_M_DECL_0_8"):
		case joaat("DLC_MP_BIKER_F_DECL_0_8"):
			return "bikshirt21" /* GXT: Principe Logo */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_0"):
			return "CLO_STM_O_E_0" /* GXT: White Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_0"):
			return "CLO_STF_O_E_0" /* GXT: White Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_1"):
			return "CLO_STM_O_E_1" /* GXT: Blue Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_1"):
			return "CLO_STF_O_E_1" /* GXT: Blue Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_2"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_2"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_2"):
			return "CLO_STM_O_E_2" /* GXT: Red Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_2"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_2"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_2"):
			return "CLO_STF_O_E_2" /* GXT: Red Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_3"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_3"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_3"):
			return "CLO_STM_O_E_3" /* GXT: Black Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_3"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_3"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_3"):
			return "CLO_STF_O_E_3" /* GXT: Black Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_4"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_4"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_4"):
			return "CLO_STM_O_E_4" /* GXT: Pink Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_4"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_4"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_4"):
			return "CLO_STF_O_E_4" /* GXT: Pink Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_5"):
		case joaat("DLC_MP_STUNT_M_PHEAD_13_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_14_0"):
			return "CLO_STM_O_E_15";
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_5"):
		case joaat("DLC_MP_STUNT_F_PHEAD_13_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_14_0"):
			return "CLO_STF_O_E_5" /* GXT: Gold Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_6"):
		case joaat("DLC_MP_STUNT_M_PHEAD_13_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_14_1"):
			return "CLO_STM_O_E_6" /* GXT: Silver Jock Cranley Suit */;
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_6"):
		case joaat("DLC_MP_STUNT_F_PHEAD_13_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_14_1"):
			return "CLO_STF_O_E_6" /* GXT: Silver Jock Cranley Suit */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_EXEC_F_JBIB_15_0"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_0"):
			return "CLO_EXF_EU_15_0" /* GXT: Pastel Blue Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_0"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_0"):
			return "CLO_EXM_EU_15_0" /* GXT: Pastel Blue Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_1"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_1"):
			return "CLO_EXF_EU_15_1" /* GXT: Pastel Yellow Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_1"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_1"):
			return "CLO_EXM_EU_15_1" /* GXT: Pastel Yellow Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_2"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_2"):
			return "CLO_EXF_EU_15_2" /* GXT: Pastel Pink Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_2"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_2"):
			return "CLO_EXM_EU_15_2" /* GXT: Pastel Pink Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_3"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_3"):
			return "CLO_EXF_EU_15_3" /* GXT: Pastel Green Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_3"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_3"):
			return "CLO_EXM_EU_15_3" /* GXT: Pastel Green Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_4"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_4"):
			return "CLO_EXF_EU_15_4" /* GXT: Vibrant Check Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_4"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_4"):
			return "CLO_EXM_EU_15_4" /* GXT: Vibrant Check Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_5"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_5"):
			return "CLO_EXF_EU_15_5" /* GXT: Blue Check Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_5"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_5"):
			return "CLO_EXM_EU_15_5" /* GXT: Blue Check Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_6"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_6"):
			return "CLO_EXF_EU_15_6" /* GXT: Red Swirl Motif Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_6"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_6"):
			return "CLO_EXM_EU_15_6" /* GXT: Red Swirl Motif Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_7"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_7"):
			return "CLO_EXF_EU_15_7" /* GXT: White Graphic Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_7"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_7"):
			return "CLO_EXM_EU_15_7" /* GXT: White Graphic Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_8"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_8"):
			return "CLO_EXF_EU_15_8" /* GXT: Blue Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_8"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_8"):
			return "CLO_EXM_EU_15_8" /* GXT: Blue Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_9"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_9"):
			return "CLO_EXF_EU_15_9" /* GXT: Yellow Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_9"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_9"):
			return "CLO_EXM_EU_15_9" /* GXT: Yellow Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_10"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_10"):
			return "CLO_EXF_EU_1510" /* GXT: Red Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_10"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_10"):
			return "CLO_EXM_EU_1510" /* GXT: Red Swirl Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_11"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_11"):
			return "CLO_EXF_EU_1511" /* GXT: Navy Pinstripe Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_11"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_11"):
			return "CLO_EXM_EU_1511" /* GXT: Navy Pinstripe Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_12"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_12"):
			return "CLO_EXF_EU_1512" /* GXT: Bold Pinstripe Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_12"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_12"):
			return "CLO_EXM_EU_1512" /* GXT: Bold Pinstripe Pajamas */;
		case joaat("DLC_MP_EXEC_F_JBIB_15_13"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_13"):
			return "CLO_EXF_EU_1513" /* GXT: Orange Pinstripe Pajamas */;
		case joaat("DLC_MP_EXEC_M_JBIB_15_13"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_13"):
			return "CLO_EXM_EU_1513" /* GXT: Orange Pinstripe Pajamas */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_EXEC_F_JBIB_16_0"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_0"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_1"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_1"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_2"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_2"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_3"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_3"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_4"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_4"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_5"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_5"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_6"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_6"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_7"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_7"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_8"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_8"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_9"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_9"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_10"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_10"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_11"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_11"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_12"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_12"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		case joaat("DLC_MP_EXEC_F_JBIB_16_13"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_13"):
			return "SMOKINGJACKUNLOCK" /* GXT: Smoking Jacket */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LOW_F_PHEAD_1_0"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_0"):
			return "UNLOKLOWHATS0" /* GXT: 'Magnetics Script' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_1"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_1"):
			return "UNLOKLOWHATS1" /* GXT: 'Magnetics Block' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_2"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_2"):
			return "UNLOKLOWHATS2" /* GXT: 'Low Santos' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_3"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_3"):
			return "UNLOKLOWHATS3" /* GXT: 'Boars' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_4"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_4"):
			return "UNLOKLOWHATS4" /* GXT: 'Benny's' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_5"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_5"):
			return "UNLOKLOWHATS5" /* GXT: 'Westside' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_6"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_6"):
			return "UNLOKLOWHATS6" /* GXT: 'Eastside' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_7"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_7"):
			return "UNLOKLOWHATS7" /* GXT: 'Strawberry' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_8"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_8"):
			return "UNLOKLOWHATS8" /* GXT: 'S.A.' Hat */;
		case joaat("DLC_MP_LOW_F_PHEAD_1_9"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_9"):
			return "UNLOKLOWHATS9" /* GXT: 'Davis' Hat */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_IND_F_PHEAD_6_0"):
		case joaat("DLC_MP_IND_M_PHEAD_6_0"):
			return "UNLOCK_NAME_BHAT1" /* GXT: 'Pisswasser' Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_1"):
		case joaat("DLC_MP_IND_M_PHEAD_6_1"):
			return "UNLOCK_NAME_BHAT2" /* GXT: 'Benedict' Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_2"):
		case joaat("DLC_MP_IND_M_PHEAD_6_2"):
			return "UNLOCK_NAME_BHAT3" /* GXT: 'J Lager' Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_3"):
		case joaat("DLC_MP_IND_M_PHEAD_6_3"):
			return "UNLOCK_NAME_BHAT4" /* GXT: 'Patriot' Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_4"):
		case joaat("DLC_MP_IND_M_PHEAD_6_4"):
			return "UNLOCK_NAME_BHAT5" /* GXT: 'Blarneys' Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_5"):
		case joaat("DLC_MP_IND_M_PHEAD_6_5"):
			return "UNLOCK_NAME_BHAT6" /* GXT: 'Supa Wet' Beer Hat */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LTS_M_BERD_2_0"):
		case joaat("DLC_MP_LTS_F_BERD_2_0"):
			return "BBSHIRTUN15" /* GXT: Please Stop Me Mask */;
		case joaat("FM_Hip_M_Retro_010"):
		case joaat("FM_Hip_F_Retro_010"):
			return "BBSHIRTUN6" /* GXT: Vivisection T-Shirt */;
		case joaat("FM_Hip_M_Retro_003"):
		case joaat("FM_Hip_F_Retro_003"):
			return "BBSHIRTUN1" /* GXT: Crocs Bar T-Shirt */;
		case joaat("FM_Hip_M_Retro_000"):
		case joaat("FM_Hip_F_Retro_000"):
			return "BBSHIRTUN2" /* GXT: Base5 T-Shirt */;
		case joaat("FM_Hip_M_Retro_001"):
		case joaat("FM_Hip_F_Retro_001"):
			return "BBSHIRTUN4" /* GXT: Bitch'n' Dog Food T-Shirt */;
		case joaat("FM_Hip_M_Retro_002"):
		case joaat("FM_Hip_F_Retro_002"):
			return "BBSHIRTUN3" /* GXT: BOBO T-Shirt */;
		case joaat("FM_Hip_M_Retro_004"):
		case joaat("FM_Hip_F_Retro_004"):
			return "BBSHIRTUN0" /* GXT: Emotion 98.3 T-Shirt */;
		case joaat("FM_Hip_M_Retro_005"):
		case joaat("FM_Hip_F_Retro_005"):
			return "BBSHIRTUN10" /* GXT: Fever 105 T-Shirt */;
		case joaat("FM_Hip_M_Retro_006"):
		case joaat("FM_Hip_F_Retro_006"):
			return "BBSHIRTUN8" /* GXT: Flash T-Shirt */;
		case joaat("FM_Hip_M_Retro_007"):
		case joaat("FM_Hip_F_Retro_007"):
			return "BBSHIRTUN9" /* GXT: Vinyl Countdown T-Shirt */;
		case joaat("FM_Hip_M_Retro_008"):
		case joaat("FM_Hip_F_Retro_008"):
			return "BBSHIRTUN14" /* GXT: Homies Sharp T-Shirt */;
		case joaat("FM_Hip_M_Retro_009"):
		case joaat("FM_Hip_F_Retro_009"):
			return "BBSHIRTUN12" /* GXT: K-DST T-Shirt */;
		case joaat("FM_Hip_M_Retro_011"):
		case joaat("FM_Hip_F_Retro_011"):
			return "BBSHIRTUN5" /* GXT: KJAH Radio T-Shirt */;
		case joaat("FM_Hip_M_Retro_012"):
		case joaat("FM_Hip_F_Retro_012"):
			return "BBSHIRTUN13" /* GXT: Bounce FM T-Shirt */;
		case joaat("FM_Hip_M_Retro_013"):
		case joaat("FM_Hip_F_Retro_013"):
			return "BBSHIRTUN7" /* GXT: K-ROSE T-Shirt */;
		case joaat("FM_Ind_M_Award_000"):
		case joaat("FM_Ind_F_Award_000"):
			return "UNLOCK_NAME_SHIRT14" /* GXT: 'Statue Of Happiness' T-shirt */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_XMAS3_F_JBIB_1_0"):
			return "CLO_X3F_U_1_0" /* GXT: Red Check Pajamas */;
		case joaat("DLC_MP_XMAS3_M_JBIB_1_0"):
			return "CLO_X3M_U_1_0" /* GXT: Red Check Pajamas */;
		case joaat("DLC_MP_XMAS3_F_JBIB_1_1"):
			return "CLO_X3F_U_1_1" /* GXT: Green Check Pajamas */;
		case joaat("DLC_MP_XMAS3_M_JBIB_1_1"):
			return "CLO_X3M_U_1_1" /* GXT: Green Check Pajamas */;
		case joaat("DLC_MP_XMAS3_F_JBIB_1_2"):
			return "CLO_X3F_U_1_2" /* GXT: Black Check Pajamas */;
		case joaat("DLC_MP_XMAS3_M_JBIB_1_2"):
			return "CLO_X3M_U_1_2" /* GXT: Black Check Pajamas */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_XMAS2_F_PHEAD_4_0"):
			return "CLO_X2F_HT_4_0" /* GXT: Naughty Cap */;
		case joaat("DLC_MP_XMAS2_F_PHEAD_5_0"):
			return "CLO_X2F_HT_5_0" /* GXT: Naughty Flipped Cap */;
		case joaat("DLC_MP_XMAS2_M_PHEAD_4_0"):
			return "CLO_X2M_HT_4_0" /* GXT: Naughty Cap */;
		case joaat("DLC_MP_XMAS2_M_PHEAD_5_0"):
			return "CLO_X2M_HT_5_0" /* GXT: Naughty Flipped Cap */;
		case joaat("DLC_MP_XMAS2_F_PHEAD_4_3"):
			return "CLO_X2F_HT_4_3" /* GXT: Nice Cap */;
		case joaat("DLC_MP_XMAS2_F_PHEAD_5_3"):
			return "CLO_X2F_HT_5_3" /* GXT: Nice Flipped Cap */;
		case joaat("DLC_MP_XMAS2_M_PHEAD_4_3"):
			return "CLO_X2M_HT_4_3" /* GXT: Nice Cap */;
		case joaat("DLC_MP_XMAS2_M_PHEAD_5_3"):
			return "CLO_X2M_HT_5_3" /* GXT: Nice Flipped Cap */;
		case joaat("DLC_MP_XMAS3_M_BERD_10_0"):
			return "CLO_X3M_B_10_0" /* GXT: Abominable Snowman */;
		case joaat("DLC_MP_XMAS3_F_BERD_10_0"):
			return "CLO_X3F_B_10_0" /* GXT: Abominable Snowman */;
		case joaat("DLC_MP_XMAS2_M_BERD_1_0"):
			return "CLO_X2M_B_1_0" /* GXT: Stocking */;
		case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			return "CLO_X2F_B_1_0" /* GXT: Stocking */;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_IND_F_PHEAD_6_0"):
			return "CLO_INDF_HT_6_0" /* GXT: Pisswasser Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_0"):
			return "CLO_INDM_HT_6_0" /* GXT: Pisswasser Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_1"):
			return "CLO_INDF_HT_6_1" /* GXT: Benedict Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_1"):
			return "CLO_INDM_HT_6_1" /* GXT: Benedict Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_2"):
			return "CLO_INDF_HT_6_2" /* GXT: J Lager Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_2"):
			return "CLO_INDM_HT_6_2" /* GXT: J Lager Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_3"):
			return "CLO_INDF_HT_6_3" /* GXT: Patriot Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_3"):
			return "CLO_INDM_HT_6_3" /* GXT: Patriot Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_4"):
			return "CLO_INDF_HT_6_4" /* GXT: Blarneys Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_4"):
			return "CLO_INDM_HT_6_4" /* GXT: Blarneys Beer Hat */;
		case joaat("DLC_MP_IND_F_PHEAD_6_5"):
			return "CLO_INDF_HT_6_5" /* GXT: Supa Wet Beer Hat */;
		case joaat("DLC_MP_IND_M_PHEAD_6_5"):
			return "CLO_INDM_HT_6_5" /* GXT: Supa Wet Beer Hat */;
		default:
	}
	return "UNLOCK_AWD_SHIRT" /* GXT: New Reward T-Shirt */;
}

int func_285(int iParam0)//Position - 0x28B95
{
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_0_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_0_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_1_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_1_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_4_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_4_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_4_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_4_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_BERD_2_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_BERD_2_0"):
			return 1;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_OUTFIT_MUMMY"):
		case joaat("DLC_MP_SUM2_G9EC_F_OUTFIT_MUMMY"):
			return 12;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_LEGS_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_LEGS_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_LEGS_0_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_LEGS_0_1"):
			return 4;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_2_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_0_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_1_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_1_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_2_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_2_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_3_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_3_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_4_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_6_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_8_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_JBIB_7_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_JBIB_5_0"):
			return 11;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_1_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_2_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_2_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_3_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_4_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_3_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_4_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_6_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_7_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_6_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_7_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_1"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_1"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_2"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_2"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_3"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_3"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_4"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_4"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_7"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_7"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_8"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_8"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_5"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_5"):
		case joaat("DLC_MP_SUM2_G9EC_M_PHEAD_5_6"):
		case joaat("DLC_MP_SUM2_G9EC_F_PHEAD_5_6"):
		case joaat("DLC_MP_SUM2_G9EC_M_PEARS_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PEARS_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_M_PRIGHT_WRIST_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_PRIGHT_WRIST_0_0"):
			return 14;
			break;
		case joaat("DLC_MP_SUM2_G9EC_M_DECL_0_0"):
		case joaat("DLC_MP_SUM2_G9EC_F_DECL_0_0"):
			return 10;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_M_BERD_5_0"):
		case joaat("DLC_MP_SUM2_F_BERD_5_0"):
		case joaat("DLC_MP_SUM2_M_BERD_5_1"):
		case joaat("DLC_MP_SUM2_F_BERD_5_1"):
		case joaat("DLC_MP_SUM2_M_BERD_5_2"):
		case joaat("DLC_MP_SUM2_F_BERD_5_2"):
		case joaat("DLC_MP_SUM2_M_BERD_5_3"):
		case joaat("DLC_MP_SUM2_F_BERD_5_3"):
		case joaat("DLC_MP_SUM2_M_BERD_6_0"):
		case joaat("DLC_MP_SUM2_F_BERD_6_0"):
		case joaat("DLC_MP_SUM2_M_BERD_6_1"):
		case joaat("DLC_MP_SUM2_F_BERD_6_1"):
		case joaat("DLC_MP_SUM2_M_BERD_6_2"):
		case joaat("DLC_MP_SUM2_F_BERD_6_2"):
		case joaat("DLC_MP_SUM2_M_BERD_7_0"):
		case joaat("DLC_MP_SUM2_F_BERD_7_0"):
		case joaat("DLC_MP_SUM2_M_BERD_8_0"):
		case joaat("DLC_MP_SUM2_F_BERD_8_0"):
		case joaat("DLC_MP_SUM2_M_BERD_9_0"):
		case joaat("DLC_MP_SUM2_F_BERD_9_0"):
		case joaat("DLC_MP_SUM2_M_BERD_9_1"):
		case joaat("DLC_MP_SUM2_F_BERD_9_1"):
		case joaat("DLC_MP_SUM2_M_BERD_9_2"):
		case joaat("DLC_MP_SUM2_F_BERD_9_2"):
		case joaat("DLC_MP_SUM2_M_BERD_10_0"):
		case joaat("DLC_MP_SUM2_F_BERD_10_0"):
		case joaat("DLC_MP_SUM2_M_BERD_10_1"):
		case joaat("DLC_MP_SUM2_F_BERD_10_1"):
		case joaat("DLC_MP_SUM2_M_BERD_10_2"):
		case joaat("DLC_MP_SUM2_F_BERD_10_2"):
		case joaat("DLC_MP_SUM2_M_BERD_10_3"):
		case joaat("DLC_MP_SUM2_F_BERD_10_3"):
		case joaat("DLC_MP_SUM2_M_BERD_10_4"):
		case joaat("DLC_MP_SUM2_F_BERD_10_4"):
		case joaat("DLC_MP_SUM2_M_BERD_10_5"):
		case joaat("DLC_MP_SUM2_F_BERD_10_5"):
		case joaat("DLC_MP_SUM2_M_BERD_10_6"):
		case joaat("DLC_MP_SUM2_F_BERD_10_6"):
		case joaat("DLC_MP_SUM2_M_BERD_10_7"):
		case joaat("DLC_MP_SUM2_F_BERD_10_7"):
		case joaat("DLC_MP_SUM2_M_BERD_10_8"):
		case joaat("DLC_MP_SUM2_F_BERD_10_8"):
		case joaat("DLC_MP_SUM2_M_BERD_10_9"):
		case joaat("DLC_MP_SUM2_F_BERD_10_9"):
		case joaat("DLC_MP_SUM2_M_BERD_10_10"):
		case joaat("DLC_MP_SUM2_F_BERD_10_10"):
		case joaat("DLC_MP_SUM2_M_BERD_10_11"):
		case joaat("DLC_MP_SUM2_F_BERD_10_11"):
		case joaat("DLC_MP_SUM2_M_BERD_10_12"):
		case joaat("DLC_MP_SUM2_F_BERD_10_12"):
		case joaat("DLC_MP_SUM2_M_BERD_10_13"):
		case joaat("DLC_MP_SUM2_F_BERD_10_13"):
		case joaat("DLC_MP_SUM2_M_BERD_10_14"):
		case joaat("DLC_MP_SUM2_F_BERD_10_14"):
		case joaat("DLC_MP_SUM2_M_BERD_10_15"):
		case joaat("DLC_MP_SUM2_F_BERD_10_15"):
		case joaat("DLC_MP_SUM2_M_BERD_10_16"):
		case joaat("DLC_MP_SUM2_F_BERD_10_16"):
		case joaat("DLC_MP_SUM2_M_BERD_10_17"):
		case joaat("DLC_MP_SUM2_F_BERD_10_17"):
		case joaat("DLC_MP_SUM2_M_BERD_10_18"):
		case joaat("DLC_MP_SUM2_F_BERD_10_18"):
		case joaat("DLC_MP_SUM2_M_BERD_10_19"):
		case joaat("DLC_MP_SUM2_F_BERD_10_19"):
		case joaat("DLC_MP_SUM2_M_BERD_10_20"):
		case joaat("DLC_MP_SUM2_F_BERD_10_20"):
		case joaat("DLC_MP_SUM2_M_BERD_10_21"):
		case joaat("DLC_MP_SUM2_F_BERD_10_21"):
		case joaat("DLC_MP_SUM2_M_BERD_10_22"):
		case joaat("DLC_MP_SUM2_F_BERD_10_22"):
		case joaat("DLC_MP_SUM2_M_BERD_10_23"):
		case joaat("DLC_MP_SUM2_F_BERD_10_23"):
		case joaat("DLC_MP_SUM2_M_BERD_10_24"):
		case joaat("DLC_MP_SUM2_F_BERD_10_24"):
		case joaat("DLC_MP_SUM2_M_BERD_10_25"):
		case joaat("DLC_MP_SUM2_F_BERD_10_25"):
		case joaat("DLC_MP_SUM2_M_BERD_0_0"):
		case joaat("DLC_MP_SUM2_F_BERD_0_0"):
		case joaat("DLC_MP_SUM2_M_BERD_1_0"):
		case joaat("DLC_MP_SUM2_F_BERD_1_0"):
		case joaat("DLC_MP_SUM2_M_BERD_1_1"):
		case joaat("DLC_MP_SUM2_F_BERD_1_1"):
		case joaat("DLC_MP_SUM2_M_BERD_1_2"):
		case joaat("DLC_MP_SUM2_F_BERD_1_2"):
		case joaat("DLC_MP_SUM2_M_BERD_3_0"):
		case joaat("DLC_MP_SUM2_F_BERD_3_0"):
		case joaat("DLC_MP_SUM2_M_BERD_4_0"):
		case joaat("DLC_MP_SUM2_F_BERD_4_0"):
			return 1;
			break;
		case joaat("DLC_MP_SUM2_M_OUTFIT_SASQUATCH"):
		case joaat("DLC_MP_SUM2_F_OUTFIT_SASQUATCH"):
			return 12;
			break;
		case joaat("DLC_MP_SUM2_M_LEGS_2_0"):
		case joaat("DLC_MP_SUM2_F_LEGS_0_0"):
		case joaat("DLC_MP_SUM2_M_LEGS_2_1"):
		case joaat("DLC_MP_SUM2_F_LEGS_0_1"):
			return 4;
			break;
		case joaat("DLC_MP_SUM2_M_JBIB_13_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_15_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_14_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_19_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_15_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_16_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_20_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_15_1"):
		case joaat("DLC_MP_SUM2_M_JBIB_16_1"):
		case joaat("DLC_MP_SUM2_F_JBIB_20_1"):
		case joaat("DLC_MP_SUM2_M_JBIB_15_2"):
		case joaat("DLC_MP_SUM2_M_JBIB_16_2"):
		case joaat("DLC_MP_SUM2_F_JBIB_20_2"):
		case joaat("DLC_MP_SUM2_M_JBIB_17_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_8_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_7_0"):
		case joaat("DLC_MP_SUM2_M_JBIB_8_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_24_0"):
		case joaat("DLC_MP_SUM2_F_JBIB_21_0"):
			return 11;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM2_M_PHEAD_6_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_1"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_1"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_2"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_2"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_3"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_3"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_4"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_4"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_5"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_5"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_6"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_6"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_7"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_7"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_8"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_8"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_9"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_9"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_10"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_10"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_11"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_11"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_12"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_12"):
		case joaat("DLC_MP_SUM2_M_PHEAD_6_13"):
		case joaat("DLC_MP_SUM2_F_PHEAD_6_13"):
		case joaat("DLC_MP_SUM2_M_PHEAD_0_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_1_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_0_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_1_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_2_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_4_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_2_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_4_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_2_1"):
		case joaat("DLC_MP_SUM2_M_PHEAD_4_1"):
		case joaat("DLC_MP_SUM2_F_PHEAD_2_1"):
		case joaat("DLC_MP_SUM2_F_PHEAD_4_1"):
		case joaat("DLC_MP_SUM2_M_PHEAD_3_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_7_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_3_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_7_0"):
		case joaat("DLC_MP_SUM2_M_PHEAD_8_0"):
		case joaat("DLC_MP_SUM2_F_PHEAD_8_0"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_0"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_0"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_1"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_1"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_2"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_2"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_3"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_3"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_4"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_4"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_5"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_5"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_6"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_6"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_7"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_7"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_8"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_8"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_9"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_9"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_10"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_10"):
		case joaat("DLC_MP_SUM2_M_PEARS_0_11"):
		case joaat("DLC_MP_SUM2_F_PEARS_0_11"):
			return 14;
			break;
		case joaat("DLC_MP_SUM2_M_SPECIAL_1_0"):
		case joaat("DLC_MP_SUM2_F_SPECIAL_1_0"):
			return 8;
			break;
		case joaat("DLC_MP_SUM2_M_FEET_5_0"):
		case joaat("DLC_MP_SUM2_F_FEET_5_0"):
		case joaat("DLC_MP_SUM2_M_FEET_5_1"):
		case joaat("DLC_MP_SUM2_F_FEET_5_1"):
		case joaat("DLC_MP_SUM2_M_FEET_5_2"):
		case joaat("DLC_MP_SUM2_F_FEET_5_2"):
		case joaat("DLC_MP_SUM2_M_FEET_5_3"):
		case joaat("DLC_MP_SUM2_F_FEET_5_3"):
		case joaat("DLC_MP_SUM2_M_FEET_5_4"):
		case joaat("DLC_MP_SUM2_F_FEET_5_4"):
		case joaat("DLC_MP_SUM2_M_FEET_5_5"):
		case joaat("DLC_MP_SUM2_F_FEET_5_5"):
		case joaat("DLC_MP_SUM2_M_FEET_5_6"):
		case joaat("DLC_MP_SUM2_F_FEET_5_6"):
		case joaat("DLC_MP_SUM2_M_FEET_5_7"):
		case joaat("DLC_MP_SUM2_F_FEET_5_7"):
		case joaat("DLC_MP_SUM2_M_FEET_5_8"):
		case joaat("DLC_MP_SUM2_F_FEET_5_8"):
		case joaat("DLC_MP_SUM2_M_FEET_6_0"):
		case joaat("DLC_MP_SUM2_F_FEET_6_0"):
		case joaat("DLC_MP_SUM2_M_FEET_6_1"):
		case joaat("DLC_MP_SUM2_F_FEET_6_1"):
		case joaat("DLC_MP_SUM2_M_FEET_6_2"):
		case joaat("DLC_MP_SUM2_F_FEET_6_2"):
		case joaat("DLC_MP_SUM2_M_FEET_6_3"):
		case joaat("DLC_MP_SUM2_F_FEET_6_3"):
		case joaat("DLC_MP_SUM2_M_FEET_6_4"):
		case joaat("DLC_MP_SUM2_F_FEET_6_4"):
		case joaat("DLC_MP_SUM2_M_FEET_6_5"):
		case joaat("DLC_MP_SUM2_F_FEET_6_5"):
		case joaat("DLC_MP_SUM2_M_FEET_6_6"):
		case joaat("DLC_MP_SUM2_F_FEET_6_6"):
		case joaat("DLC_MP_SUM2_M_FEET_6_7"):
		case joaat("DLC_MP_SUM2_F_FEET_6_7"):
		case joaat("DLC_MP_SUM2_M_FEET_6_8"):
		case joaat("DLC_MP_SUM2_F_FEET_6_8"):
		case joaat("DLC_MP_SUM2_M_FEET_6_9"):
		case joaat("DLC_MP_SUM2_F_FEET_6_9"):
		case joaat("DLC_MP_SUM2_M_FEET_6_10"):
		case joaat("DLC_MP_SUM2_F_FEET_6_10"):
		case joaat("DLC_MP_SUM2_M_FEET_6_11"):
		case joaat("DLC_MP_SUM2_F_FEET_6_11"):
		case joaat("DLC_MP_SUM2_M_FEET_6_12"):
		case joaat("DLC_MP_SUM2_F_FEET_6_12"):
		case joaat("DLC_MP_SUM2_M_FEET_6_13"):
		case joaat("DLC_MP_SUM2_F_FEET_6_13"):
		case joaat("DLC_MP_SUM2_M_FEET_6_14"):
		case joaat("DLC_MP_SUM2_F_FEET_6_14"):
			return 6;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_FIXER_M_JBIB_10_2"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_2"):
		case joaat("DLC_MP_FIXER_M_JBIB_10_3"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_3"):
		case joaat("DLC_MP_FIXER_M_JBIB_10_4"):
		case joaat("DLC_MP_FIXER_F_JBIB_10_4"):
			return 11;
			break;
		case joaat("DLC_MP_FIXER_M_JBIB_10_0"):
		case joaat("DLC_MP_FIXER_M_JBIB_10_1"):
		case joaat("DLC_MP_FIXER_F_JBIB_13_0"):
		case joaat("DLC_MP_FIXER_F_JBIB_13_1"):
			return 11;
			break;
		case joaat("DLC_MP_FIXER_M_BERD_0_0"):
		case joaat("DLC_MP_FIXER_M_BERD_0_1"):
		case joaat("DLC_MP_FIXER_M_BERD_0_2"):
		case joaat("DLC_MP_FIXER_M_BERD_0_3"):
		case joaat("DLC_MP_FIXER_M_BERD_1_0"):
		case joaat("DLC_MP_FIXER_M_BERD_1_1"):
		case joaat("DLC_MP_FIXER_M_BERD_1_2"):
		case joaat("DLC_MP_FIXER_M_BERD_1_3"):
		case joaat("DLC_MP_FIXER_M_BERD_2_0"):
		case joaat("DLC_MP_FIXER_M_BERD_2_1"):
		case joaat("DLC_MP_FIXER_M_BERD_2_2"):
		case joaat("DLC_MP_FIXER_M_BERD_2_3"):
		case joaat("DLC_MP_FIXER_F_BERD_0_0"):
		case joaat("DLC_MP_FIXER_F_BERD_0_1"):
		case joaat("DLC_MP_FIXER_F_BERD_0_2"):
		case joaat("DLC_MP_FIXER_F_BERD_0_3"):
		case joaat("DLC_MP_FIXER_F_BERD_1_0"):
		case joaat("DLC_MP_FIXER_F_BERD_1_1"):
		case joaat("DLC_MP_FIXER_F_BERD_1_2"):
		case joaat("DLC_MP_FIXER_F_BERD_1_3"):
		case joaat("DLC_MP_FIXER_F_BERD_2_0"):
		case joaat("DLC_MP_FIXER_F_BERD_2_1"):
		case joaat("DLC_MP_FIXER_F_BERD_2_2"):
		case joaat("DLC_MP_FIXER_F_BERD_2_3"):
			return 1;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_TUNER_M_DECL_30_1"):
		case joaat("DLC_MP_TUNER_F_DECL_29_1"):
			return 10;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_11_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_12_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_11_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_12_0"):
			return 11;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_BOILER_1"):
		case joaat("DLC_MP_TUNER_M_JBIB_1_3"):
		case joaat("DLC_MP_TUNER_M_LEGS_1_3"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_BOILER_1"):
		case joaat("DLC_MP_TUNER_F_JBIB_1_3"):
		case joaat("DLC_MP_TUNER_F_LEGS_1_3"):
			return 12;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_9_15"):
		case joaat("DLC_MP_TUNER_F_JBIB_9_15"):
			return 11;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_2"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_2"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_2"):
			return 11;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_0"):
			return 11;
			break;
		case joaat("DLC_MP_TUNER_M_JBIB_13_1"):
		case joaat("DLC_MP_TUNER_M_JBIB_14_1"):
		case joaat("DLC_MP_TUNER_F_JBIB_13_1"):
			return 11;
			break;
		case joaat("DLC_MP_TUNER_M_PHEAD_1_0"):
		case joaat("DLC_MP_TUNER_M_PHEAD_2_0"):
		case joaat("DLC_MP_TUNER_F_PHEAD_1_0"):
		case joaat("DLC_MP_TUNER_F_PHEAD_2_0"):
			return 0;
			break;
		case joaat("DLC_MP_TUNER_M_PHEAD_1_1"):
		case joaat("DLC_MP_TUNER_M_PHEAD_2_1"):
		case joaat("DLC_MP_TUNER_F_PHEAD_1_1"):
		case joaat("DLC_MP_TUNER_F_PHEAD_2_1"):
			return 0;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_MORPH_0"):
			return 12;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_MORPH_1"):
			return 12;
			break;
		case joaat("DLC_MP_TUNER_M_OUTFIT_BOILER_0"):
		case joaat("DLC_MP_TUNER_M_JBIB_1_2"):
		case joaat("DLC_MP_TUNER_M_LEGS_1_2"):
		case joaat("DLC_MP_TUNER_F_OUTFIT_BOILER_0"):
		case joaat("DLC_MP_TUNER_F_JBIB_1_2"):
		case joaat("DLC_MP_TUNER_F_LEGS_1_2"):
			return 12;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_JBIB_8_0"):
		case joaat("DLC_MP_H4_F_JBIB_9_0"):
		case joaat("DLC_MP_H4_M_JBIB_8_0"):
		case joaat("DLC_MP_H4_M_JBIB_9_0"):
		case joaat("DLC_MP_H4_F_JBIB_10_0"):
		case joaat("DLC_MP_H4_M_JBIB_10_0"):
		case joaat("DLC_MP_H4_F_JBIB_5_0"):
		case joaat("DLC_MP_H4_M_JBIB_6_0"):
		case joaat("DLC_MP_H4_F_JBIB_5_1"):
		case joaat("DLC_MP_H4_M_JBIB_6_1"):
		case joaat("DLC_MP_H4_M_JBIB_0_5"):
		case joaat("DLC_MP_H4_F_JBIB_7_1"):
		case joaat("DLC_MP_H4_F_JBIB_7_5"):
		case joaat("DLC_MP_H4_M_JBIB_0_9"):
		case joaat("DLC_MP_H4_F_JBIB_7_4"):
		case joaat("DLC_MP_H4_M_JBIB_0_8"):
		case joaat("DLC_MP_H4_M_JBIB_0_6"):
		case joaat("DLC_MP_H4_F_JBIB_7_2"):
		case joaat("DLC_MP_H4_M_JBIB_0_7"):
		case joaat("DLC_MP_H4_F_JBIB_7_3"):
		case joaat("DLC_MP_H4_M_JBIB_5_0"):
		case joaat("DLC_MP_H4_F_JBIB_4_0"):
		case joaat("DLC_MP_H4_F_JBIB_6_4"):
		case joaat("DLC_MP_H4_M_JBIB_7_4"):
		case joaat("DLC_MP_H4_F_JBIB_6_3"):
		case joaat("DLC_MP_H4_M_JBIB_7_3"):
		case joaat("DLC_MP_H4_F_JBIB_6_2"):
		case joaat("DLC_MP_H4_M_JBIB_7_2"):
		case joaat("DLC_MP_H4_F_JBIB_6_1"):
		case joaat("DLC_MP_H4_M_JBIB_7_1"):
		case joaat("DLC_MP_H4_F_JBIB_6_0"):
		case joaat("DLC_MP_H4_M_JBIB_7_0"):
			return 11;
			break;
		case joaat("DLC_MP_H4_F_LEGS_1_0"):
		case joaat("DLC_MP_H4_M_LEGS_1_0"):
		case joaat("DLC_MP_H4_F_LEGS_1_1"):
		case joaat("DLC_MP_H4_M_LEGS_1_1"):
		case joaat("DLC_MP_H4_F_LEGS_1_2"):
		case joaat("DLC_MP_H4_M_LEGS_1_2"):
		case joaat("DLC_MP_H4_F_LEGS_0_0"):
		case joaat("DLC_MP_H4_M_LEGS_0_0"):
			return 4;
			break;
		case joaat("DLC_MP_H4_F_PHEAD_1_0"):
		case joaat("DLC_MP_H4_M_PHEAD_1_0"):
		case joaat("DLC_MP_H4_F_PHEAD_2_0"):
		case joaat("DLC_MP_H4_M_PHEAD_2_0"):
		case joaat("DLC_MP_H4_F_PHEAD_1_1"):
		case joaat("DLC_MP_H4_M_PHEAD_1_1"):
		case joaat("DLC_MP_H4_F_PHEAD_2_1"):
		case joaat("DLC_MP_H4_M_PHEAD_2_1"):
		case joaat("DLC_MP_H4_F_PHEAD_1_2"):
		case joaat("DLC_MP_H4_M_PHEAD_1_2"):
		case joaat("DLC_MP_H4_F_PHEAD_2_2"):
		case joaat("DLC_MP_H4_M_PHEAD_2_2"):
		case joaat("DLC_MP_H4_F_PHEAD_1_3"):
		case joaat("DLC_MP_H4_M_PHEAD_1_3"):
		case joaat("DLC_MP_H4_F_PHEAD_2_3"):
		case joaat("DLC_MP_H4_M_PHEAD_2_3"):
		case joaat("DLC_MP_H4_F_PHEAD_1_4"):
		case joaat("DLC_MP_H4_M_PHEAD_1_4"):
		case joaat("DLC_MP_H4_F_PHEAD_2_4"):
		case joaat("DLC_MP_H4_M_PHEAD_2_4"):
			return 0;
			break;
		case joaat("DLC_MP_H4_M_DECL_0_0"):
		case joaat("DLC_MP_H4_F_DECL_0_0"):
			return 10;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_0"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_0"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_0"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_1"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_1"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_1"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_1"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_2"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_2"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_2"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_2"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_3"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_3"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_3"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_3"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_4"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_4"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_4"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_4"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_5"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_5"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_5"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_5"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_6"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_6"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_6"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_6"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_7"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_7"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_7"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_7"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_8"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_8"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_8"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_8"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_9"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_9"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_9"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_9"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_10"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_10"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_10"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_10"):
		case joaat("DLC_MP_H4_F_PLEFT_WRIST_0_11"):
		case joaat("DLC_MP_H4_F_PRIGHT_WRIST_0_11"):
		case joaat("DLC_MP_H4_M_PLEFT_WRIST_0_11"):
		case joaat("DLC_MP_H4_M_PRIGHT_WRIST_0_11"):
			return 5;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_PEYES_0_0"):
		case joaat("DLC_MP_H4_M_PEYES_0_0"):
		case joaat("DLC_MP_H4_F_PEYES_0_1"):
		case joaat("DLC_MP_H4_M_PEYES_0_1"):
		case joaat("DLC_MP_H4_F_PEYES_0_2"):
		case joaat("DLC_MP_H4_M_PEYES_0_2"):
		case joaat("DLC_MP_H4_F_PEYES_0_3"):
		case joaat("DLC_MP_H4_M_PEYES_0_3"):
		case joaat("DLC_MP_H4_F_PEYES_0_4"):
		case joaat("DLC_MP_H4_M_PEYES_0_4"):
		case joaat("DLC_MP_H4_F_PEYES_0_5"):
		case joaat("DLC_MP_H4_M_PEYES_0_5"):
		case joaat("DLC_MP_H4_F_PEYES_0_6"):
		case joaat("DLC_MP_H4_M_PEYES_0_6"):
		case joaat("DLC_MP_H4_F_PEYES_0_7"):
		case joaat("DLC_MP_H4_M_PEYES_0_7"):
		case joaat("DLC_MP_H4_F_PEYES_0_8"):
		case joaat("DLC_MP_H4_M_PEYES_0_8"):
		case joaat("DLC_MP_H4_F_PEYES_0_9"):
		case joaat("DLC_MP_H4_M_PEYES_0_9"):
		case joaat("DLC_MP_H4_F_PEYES_0_10"):
		case joaat("DLC_MP_H4_M_PEYES_0_10"):
		case joaat("DLC_MP_H4_F_PEYES_0_11"):
		case joaat("DLC_MP_H4_M_PEYES_0_11"):
			return 0;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_F_TEETH_13_0"):
		case joaat("DLC_MP_H4_M_TEETH_13_0"):
		case joaat("DLC_MP_H4_F_TEETH_14_0"):
		case joaat("DLC_MP_H4_M_TEETH_14_0"):
		case joaat("DLC_MP_H4_F_TEETH_13_1"):
		case joaat("DLC_MP_H4_M_TEETH_13_1"):
		case joaat("DLC_MP_H4_F_TEETH_14_1"):
		case joaat("DLC_MP_H4_M_TEETH_14_1"):
		case joaat("DLC_MP_H4_F_TEETH_13_2"):
		case joaat("DLC_MP_H4_M_TEETH_13_2"):
		case joaat("DLC_MP_H4_F_TEETH_14_2"):
		case joaat("DLC_MP_H4_M_TEETH_14_2"):
		case joaat("DLC_MP_H4_F_TEETH_13_3"):
		case joaat("DLC_MP_H4_M_TEETH_13_3"):
		case joaat("DLC_MP_H4_F_TEETH_14_3"):
		case joaat("DLC_MP_H4_M_TEETH_14_3"):
		case joaat("DLC_MP_H4_F_TEETH_13_4"):
		case joaat("DLC_MP_H4_M_TEETH_13_4"):
		case joaat("DLC_MP_H4_F_TEETH_14_4"):
		case joaat("DLC_MP_H4_M_TEETH_14_4"):
		case joaat("DLC_MP_H4_F_TEETH_13_5"):
		case joaat("DLC_MP_H4_M_TEETH_13_5"):
		case joaat("DLC_MP_H4_F_TEETH_14_5"):
		case joaat("DLC_MP_H4_M_TEETH_14_5"):
		case joaat("DLC_MP_H4_F_TEETH_13_6"):
		case joaat("DLC_MP_H4_M_TEETH_13_6"):
		case joaat("DLC_MP_H4_F_TEETH_14_6"):
		case joaat("DLC_MP_H4_M_TEETH_14_6"):
		case joaat("DLC_MP_H4_F_TEETH_13_7"):
		case joaat("DLC_MP_H4_M_TEETH_13_7"):
		case joaat("DLC_MP_H4_F_TEETH_14_7"):
		case joaat("DLC_MP_H4_M_TEETH_14_7"):
		case joaat("DLC_MP_H4_F_TEETH_13_8"):
		case joaat("DLC_MP_H4_M_TEETH_13_8"):
		case joaat("DLC_MP_H4_F_TEETH_14_8"):
		case joaat("DLC_MP_H4_M_TEETH_14_8"):
		case joaat("DLC_MP_H4_F_TEETH_13_9"):
		case joaat("DLC_MP_H4_M_TEETH_13_9"):
		case joaat("DLC_MP_H4_F_TEETH_14_9"):
		case joaat("DLC_MP_H4_M_TEETH_14_9"):
		case joaat("DLC_MP_H4_F_TEETH_13_10"):
		case joaat("DLC_MP_H4_M_TEETH_13_10"):
		case joaat("DLC_MP_H4_F_TEETH_14_10"):
		case joaat("DLC_MP_H4_M_TEETH_14_10"):
		case joaat("DLC_MP_H4_F_TEETH_13_11"):
		case joaat("DLC_MP_H4_M_TEETH_13_11"):
		case joaat("DLC_MP_H4_F_TEETH_14_11"):
		case joaat("DLC_MP_H4_M_TEETH_14_11"):
		case joaat("DLC_MP_H4_F_TEETH_13_12"):
		case joaat("DLC_MP_H4_M_TEETH_13_12"):
		case joaat("DLC_MP_H4_F_TEETH_14_12"):
		case joaat("DLC_MP_H4_M_TEETH_14_12"):
		case joaat("DLC_MP_H4_F_TEETH_13_13"):
		case joaat("DLC_MP_H4_M_TEETH_13_13"):
		case joaat("DLC_MP_H4_F_TEETH_14_13"):
		case joaat("DLC_MP_H4_M_TEETH_14_13"):
		case joaat("DLC_MP_H4_F_TEETH_13_14"):
		case joaat("DLC_MP_H4_M_TEETH_13_14"):
		case joaat("DLC_MP_H4_F_TEETH_14_14"):
		case joaat("DLC_MP_H4_M_TEETH_14_14"):
		case joaat("DLC_MP_H4_F_TEETH_13_15"):
		case joaat("DLC_MP_H4_M_TEETH_13_15"):
		case joaat("DLC_MP_H4_F_TEETH_14_15"):
		case joaat("DLC_MP_H4_M_TEETH_14_15"):
			return 7;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_M_BERD_4_0"):
		case joaat("DLC_MP_H4_F_BERD_4_0"):
		case joaat("DLC_MP_H4_M_BERD_4_1"):
		case joaat("DLC_MP_H4_F_BERD_4_1"):
		case joaat("DLC_MP_H4_M_BERD_4_2"):
		case joaat("DLC_MP_H4_F_BERD_4_2"):
		case joaat("DLC_MP_H4_M_BERD_4_3"):
		case joaat("DLC_MP_H4_F_BERD_4_3"):
		case joaat("DLC_MP_H4_M_BERD_4_4"):
		case joaat("DLC_MP_H4_F_BERD_4_4"):
		case joaat("DLC_MP_H4_M_BERD_4_5"):
		case joaat("DLC_MP_H4_F_BERD_4_5"):
		case joaat("DLC_MP_H4_M_BERD_4_6"):
		case joaat("DLC_MP_H4_F_BERD_4_6"):
		case joaat("DLC_MP_H4_M_BERD_4_7"):
		case joaat("DLC_MP_H4_F_BERD_4_7"):
		case joaat("DLC_MP_H4_M_BERD_4_8"):
		case joaat("DLC_MP_H4_F_BERD_4_8"):
		case joaat("DLC_MP_H4_M_BERD_4_9"):
		case joaat("DLC_MP_H4_F_BERD_4_9"):
		case joaat("DLC_MP_H4_M_BERD_4_10"):
		case joaat("DLC_MP_H4_F_BERD_4_10"):
		case joaat("DLC_MP_H4_M_BERD_4_11"):
		case joaat("DLC_MP_H4_F_BERD_4_11"):
		case joaat("DLC_MP_H4_M_BERD_4_12"):
		case joaat("DLC_MP_H4_F_BERD_4_12"):
		case joaat("DLC_MP_H4_M_BERD_4_13"):
		case joaat("DLC_MP_H4_F_BERD_4_13"):
		case joaat("DLC_MP_H4_M_BERD_4_14"):
		case joaat("DLC_MP_H4_F_BERD_4_14"):
		case joaat("DLC_MP_H4_M_BERD_4_15"):
		case joaat("DLC_MP_H4_F_BERD_4_15"):
		case joaat("DLC_MP_H4_M_BERD_4_16"):
		case joaat("DLC_MP_H4_F_BERD_4_16"):
		case joaat("DLC_MP_H4_M_BERD_4_17"):
		case joaat("DLC_MP_H4_F_BERD_4_17"):
		case joaat("DLC_MP_H4_M_BERD_4_18"):
		case joaat("DLC_MP_H4_F_BERD_4_18"):
		case joaat("DLC_MP_H4_M_BERD_4_19"):
		case joaat("DLC_MP_H4_F_BERD_4_19"):
			return 1;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_H4_M_PEYES_1_0"):
		case joaat("DLC_MP_H4_F_PEYES_1_0"):
		case joaat("DLC_MP_H4_M_PEYES_1_1"):
		case joaat("DLC_MP_H4_F_PEYES_1_1"):
		case joaat("DLC_MP_H4_M_PEYES_1_2"):
		case joaat("DLC_MP_H4_F_PEYES_1_2"):
		case joaat("DLC_MP_H4_M_PEYES_1_3"):
		case joaat("DLC_MP_H4_F_PEYES_1_3"):
		case joaat("DLC_MP_H4_M_PEYES_1_4"):
		case joaat("DLC_MP_H4_F_PEYES_1_4"):
		case joaat("DLC_MP_H4_M_PEYES_1_5"):
		case joaat("DLC_MP_H4_F_PEYES_1_5"):
		case joaat("DLC_MP_H4_M_PEYES_1_6"):
		case joaat("DLC_MP_H4_F_PEYES_1_6"):
		case joaat("DLC_MP_H4_M_PEYES_1_7"):
		case joaat("DLC_MP_H4_F_PEYES_1_7"):
		case joaat("DLC_MP_H4_M_PEYES_1_8"):
		case joaat("DLC_MP_H4_F_PEYES_1_8"):
		case joaat("DLC_MP_H4_M_PEYES_1_9"):
		case joaat("DLC_MP_H4_F_PEYES_1_9"):
		case joaat("DLC_MP_H4_M_PEYES_1_10"):
		case joaat("DLC_MP_H4_F_PEYES_1_10"):
		case joaat("DLC_MP_H4_M_PEYES_1_11"):
		case joaat("DLC_MP_H4_F_PEYES_1_11"):
		case joaat("DLC_MP_H4_M_PEYES_2_0"):
		case joaat("DLC_MP_H4_F_PEYES_2_0"):
		case joaat("DLC_MP_H4_M_PEYES_2_1"):
		case joaat("DLC_MP_H4_F_PEYES_2_1"):
		case joaat("DLC_MP_H4_M_PEYES_2_2"):
		case joaat("DLC_MP_H4_F_PEYES_2_2"):
		case joaat("DLC_MP_H4_M_PEYES_2_3"):
		case joaat("DLC_MP_H4_F_PEYES_2_3"):
		case joaat("DLC_MP_H4_M_PEYES_2_4"):
		case joaat("DLC_MP_H4_F_PEYES_2_4"):
		case joaat("DLC_MP_H4_M_PEYES_2_5"):
		case joaat("DLC_MP_H4_F_PEYES_2_5"):
		case joaat("DLC_MP_H4_M_PEYES_2_6"):
		case joaat("DLC_MP_H4_F_PEYES_2_6"):
		case joaat("DLC_MP_H4_M_PEYES_2_7"):
		case joaat("DLC_MP_H4_F_PEYES_2_7"):
		case joaat("DLC_MP_H4_M_PEYES_2_8"):
		case joaat("DLC_MP_H4_F_PEYES_2_8"):
		case joaat("DLC_MP_H4_M_PEYES_2_9"):
		case joaat("DLC_MP_H4_F_PEYES_2_9"):
		case joaat("DLC_MP_H4_M_PEYES_2_10"):
		case joaat("DLC_MP_H4_F_PEYES_2_10"):
		case joaat("DLC_MP_H4_M_PEYES_2_11"):
		case joaat("DLC_MP_H4_F_PEYES_2_11"):
		case joaat("DLC_MP_H4_M_PEYES_3_0"):
		case joaat("DLC_MP_H4_F_PEYES_3_0"):
		case joaat("DLC_MP_H4_M_PEYES_3_1"):
		case joaat("DLC_MP_H4_F_PEYES_3_1"):
		case joaat("DLC_MP_H4_M_PEYES_3_2"):
		case joaat("DLC_MP_H4_F_PEYES_3_2"):
		case joaat("DLC_MP_H4_M_PEYES_3_3"):
		case joaat("DLC_MP_H4_F_PEYES_3_3"):
		case joaat("DLC_MP_H4_M_PEYES_3_4"):
		case joaat("DLC_MP_H4_F_PEYES_3_4"):
		case joaat("DLC_MP_H4_M_PEYES_3_5"):
		case joaat("DLC_MP_H4_F_PEYES_3_5"):
		case joaat("DLC_MP_H4_M_PEYES_3_6"):
		case joaat("DLC_MP_H4_F_PEYES_3_6"):
		case joaat("DLC_MP_H4_M_PEYES_3_7"):
		case joaat("DLC_MP_H4_F_PEYES_3_7"):
		case joaat("DLC_MP_H4_M_PEYES_3_8"):
		case joaat("DLC_MP_H4_F_PEYES_3_8"):
		case joaat("DLC_MP_H4_M_PEYES_3_9"):
		case joaat("DLC_MP_H4_F_PEYES_3_9"):
		case joaat("DLC_MP_H4_M_PEYES_3_10"):
		case joaat("DLC_MP_H4_F_PEYES_3_10"):
		case joaat("DLC_MP_H4_M_PEYES_3_11"):
		case joaat("DLC_MP_H4_F_PEYES_3_11"):
			return 0;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_SUM_M_BERD_3_4"):
		case joaat("DLC_MP_SUM_F_BERD_3_4"):
		case joaat("DLC_MP_SUM_M_BERD_3_5"):
		case joaat("DLC_MP_SUM_F_BERD_3_5"):
		case joaat("DLC_MP_SUM_M_BERD_3_6"):
		case joaat("DLC_MP_SUM_F_BERD_3_6"):
		case joaat("DLC_MP_SUM_M_BERD_3_7"):
		case joaat("DLC_MP_SUM_F_BERD_3_7"):
			return 1;
			break;
		case joaat("DLC_MP_SUM_M_LEGS_1_25"):
		case joaat("DLC_MP_SUM_F_LEGS_2_25"):
			return 4;
			break;
		case joaat("DLC_MP_SUM_M_JBIB_0_25"):
		case joaat("DLC_MP_SUM_F_JBIB_0_25"):
			return 11;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_VWD_M_DECL_1_0"):
		case joaat("DLC_MP_VWD_F_DECL_1_0"):
		case joaat("DLC_MP_VWD_M_DECL_1_6"):
		case joaat("DLC_MP_VWD_F_DECL_1_6"):
		case joaat("DLC_MP_VWD_M_DECL_1_7"):
		case joaat("DLC_MP_VWD_F_DECL_1_7"):
		case joaat("DLC_MP_VWD_M_DECL_1_8"):
		case joaat("DLC_MP_VWD_F_DECL_1_8"):
		case joaat("DLC_MP_VWD_M_DECL_1_11"):
		case joaat("DLC_MP_VWD_F_DECL_1_11"):
		case joaat("DLC_MP_VWD_M_DECL_1_12"):
		case joaat("DLC_MP_VWD_F_DECL_1_12"):
		case joaat("DLC_MP_VWD_M_DECL_1_13"):
		case joaat("DLC_MP_VWD_F_DECL_1_13"):
		case joaat("DLC_MP_VWD_M_DECL_1_14"):
		case joaat("DLC_MP_VWD_F_DECL_1_14"):
		case joaat("DLC_MP_VWD_M_DECL_1_15"):
		case joaat("DLC_MP_VWD_F_DECL_1_15"):
		case joaat("DLC_MP_VWD_M_DECL_1_16"):
		case joaat("DLC_MP_VWD_F_DECL_1_16"):
		case joaat("DLC_MP_VWD_M_DECL_1_17"):
		case joaat("DLC_MP_VWD_F_DECL_1_17"):
		case joaat("DLC_MP_VWD_M_DECL_1_18"):
		case joaat("DLC_MP_VWD_F_DECL_1_18"):
			return 10;
			break;
		case joaat("DLC_MP_VWD_M_JBIB_23_5"):
		case joaat("DLC_MP_VWD_F_JBIB_21_5"):
		case joaat("DLC_MP_VWD_M_JBIB_23_8"):
		case joaat("DLC_MP_VWD_F_JBIB_21_8"):
		case joaat("DLC_MP_VWD_M_JBIB_23_9"):
		case joaat("DLC_MP_VWD_F_JBIB_21_9"):
		case joaat("DLC_MP_VWD_M_JBIB_23_10"):
		case joaat("DLC_MP_VWD_F_JBIB_21_10"):
		case joaat("DLC_MP_VWD_M_JBIB_23_0"):
		case joaat("DLC_MP_VWD_F_JBIB_21_0"):
		case joaat("DLC_MP_VWD_M_JBIB_23_2"):
		case joaat("DLC_MP_VWD_F_JBIB_21_2"):
		case joaat("DLC_MP_VWD_M_JBIB_23_4"):
		case joaat("DLC_MP_VWD_F_JBIB_21_4"):
		case joaat("DLC_MP_VWD_M_JBIB_23_7"):
		case joaat("DLC_MP_VWD_F_JBIB_21_7"):
			return 11;
			break;
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_ARENA_F_JBIB_16_0"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_0"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_1"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_1"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_2"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_2"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_3"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_3"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_4"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_4"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_5"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_5"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_6"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_6"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_7"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_7"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_8"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_8"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_9"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_9"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_10"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_10"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_11"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_11"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_12"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_12"):
		case joaat("DLC_MP_ARENA_F_JBIB_16_13"):
		case joaat("DLC_MP_ARENA_M_JBIB_16_13"):
			return 11;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LTS_M_OUTFIT_14"):
		case joaat("DLC_MP_LTS_F_OUTFIT_14"):
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_0"):
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_1"):
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_2"):
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_2"):
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_3"):
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_3"):
		case joaat("DLC_MP_X17_M_OUTFIT_MORPH_4"):
		case joaat("DLC_MP_X17_F_OUTFIT_MORPH_4"):
			return 12;
		case joaat("DLC_MP_X17_M_BERD_2_0"):
		case joaat("DLC_MP_X17_F_BERD_2_0"):
		case joaat("DLC_MP_X17_M_BERD_2_1"):
		case joaat("DLC_MP_X17_F_BERD_2_1"):
		case joaat("DLC_MP_X17_M_BERD_2_2"):
		case joaat("DLC_MP_X17_F_BERD_2_2"):
		case joaat("DLC_MP_X17_M_BERD_2_3"):
		case joaat("DLC_MP_X17_F_BERD_2_3"):
		case joaat("DLC_MP_X17_M_BERD_2_4"):
		case joaat("DLC_MP_X17_F_BERD_2_4"):
		case joaat("DLC_MP_X17_M_BERD_10_0"):
		case joaat("DLC_MP_X17_F_BERD_10_0"):
		case joaat("DLC_MP_X17_M_BERD_10_1"):
		case joaat("DLC_MP_X17_F_BERD_10_1"):
		case joaat("DLC_MP_X17_M_BERD_10_2"):
		case joaat("DLC_MP_X17_F_BERD_10_2"):
		case joaat("DLC_MP_X17_M_BERD_10_3"):
		case joaat("DLC_MP_X17_F_BERD_10_3"):
			return 1;
		case joaat("DLC_MP_X17_M_LEGS_1_0"):
		case joaat("DLC_MP_X17_F_LEGS_1_0"):
		case joaat("DLC_MP_X17_M_LEGS_1_1"):
		case joaat("DLC_MP_X17_F_LEGS_1_1"):
		case joaat("DLC_MP_X17_M_LEGS_1_2"):
		case joaat("DLC_MP_X17_F_LEGS_1_2"):
		case joaat("DLC_MP_X17_M_LEGS_1_3"):
		case joaat("DLC_MP_X17_F_LEGS_1_3"):
		case joaat("DLC_MP_X17_M_LEGS_1_4"):
		case joaat("DLC_MP_X17_F_LEGS_1_4"):
			return 4;
		case joaat("DLC_MP_X17_M_FEET_1_0"):
		case joaat("DLC_MP_X17_F_FEET_1_0"):
		case joaat("DLC_MP_X17_M_FEET_1_1"):
		case joaat("DLC_MP_X17_F_FEET_1_1"):
		case joaat("DLC_MP_X17_M_FEET_1_2"):
		case joaat("DLC_MP_X17_F_FEET_1_2"):
		case joaat("DLC_MP_X17_M_FEET_1_3"):
		case joaat("DLC_MP_X17_F_FEET_1_3"):
		case joaat("DLC_MP_X17_M_FEET_1_4"):
		case joaat("DLC_MP_X17_F_FEET_1_4"):
			return 6;
		case joaat("DLC_MP_X17_M_JBIB_5_0"):
		case joaat("DLC_MP_X17_F_JBIB_5_0"):
		case joaat("DLC_MP_X17_M_JBIB_5_1"):
		case joaat("DLC_MP_X17_F_JBIB_5_1"):
		case joaat("DLC_MP_X17_M_JBIB_5_2"):
		case joaat("DLC_MP_X17_F_JBIB_5_2"):
		case joaat("DLC_MP_X17_M_JBIB_5_3"):
		case joaat("DLC_MP_X17_F_JBIB_5_3"):
		case joaat("DLC_MP_X17_M_JBIB_5_4"):
		case joaat("DLC_MP_X17_F_JBIB_5_4"):
			return 11;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_GR_M_JBIB_19_0"):
		case joaat("DLC_MP_GR_F_JBIB_25_0"):
		case joaat("DLC_MP_GR_M_JBIB_19_1"):
		case joaat("DLC_MP_GR_F_JBIB_25_1"):
		case joaat("DLC_MP_GR_M_JBIB_20_0"):
		case joaat("DLC_MP_GR_F_JBIB_26_0"):
			return 11;
		case joaat("DLC_MP_GR_M_DECL_5_0"):
		case joaat("DLC_MP_GR_F_DECL_5_0"):
		case joaat("DLC_MP_GR_M_DECL_5_1"):
		case joaat("DLC_MP_GR_F_DECL_5_1"):
		case joaat("DLC_MP_GR_M_DECL_5_2"):
		case joaat("DLC_MP_GR_F_DECL_5_2"):
		case joaat("DLC_MP_GR_M_DECL_5_3"):
		case joaat("DLC_MP_GR_F_DECL_5_3"):
		case joaat("DLC_MP_GR_M_DECL_5_4"):
		case joaat("DLC_MP_GR_F_DECL_5_4"):
		case joaat("DLC_MP_GR_M_DECL_5_5"):
		case joaat("DLC_MP_GR_F_DECL_5_5"):
		case joaat("DLC_MP_GR_M_DECL_5_6"):
		case joaat("DLC_MP_GR_F_DECL_5_6"):
		case joaat("DLC_MP_GR_M_DECL_5_7"):
		case joaat("DLC_MP_GR_F_DECL_5_7"):
		case joaat("DLC_MP_GR_M_DECL_5_8"):
		case joaat("DLC_MP_GR_F_DECL_5_8"):
		case joaat("DLC_MP_GR_M_DECL_5_9"):
		case joaat("DLC_MP_GR_F_DECL_5_9"):
		case joaat("DLC_MP_GR_M_DECL_5_10"):
		case joaat("DLC_MP_GR_F_DECL_5_10"):
			return 10;
		case joaat("DLC_MP_GR_M_PHEAD_6_0"):
		case joaat("DLC_MP_GR_F_PHEAD_6_0"):
		case joaat("DLC_MP_GR_M_PHEAD_7_0"):
		case joaat("DLC_MP_GR_F_PHEAD_7_0"):
		case joaat("DLC_MP_GR_M_PHEAD_6_1"):
		case joaat("DLC_MP_GR_F_PHEAD_6_1"):
		case joaat("DLC_MP_GR_M_PHEAD_7_1"):
		case joaat("DLC_MP_GR_F_PHEAD_7_1"):
		case joaat("DLC_MP_GR_M_PHEAD_6_2"):
		case joaat("DLC_MP_GR_F_PHEAD_6_2"):
		case joaat("DLC_MP_GR_M_PHEAD_7_2"):
		case joaat("DLC_MP_GR_F_PHEAD_7_2"):
		case joaat("DLC_MP_GR_M_PHEAD_6_3"):
		case joaat("DLC_MP_GR_F_PHEAD_6_3"):
		case joaat("DLC_MP_GR_M_PHEAD_7_3"):
		case joaat("DLC_MP_GR_F_PHEAD_7_3"):
		case joaat("DLC_MP_GR_M_PHEAD_6_4"):
		case joaat("DLC_MP_GR_F_PHEAD_6_4"):
		case joaat("DLC_MP_GR_M_PHEAD_7_4"):
		case joaat("DLC_MP_GR_F_PHEAD_7_4"):
		case joaat("DLC_MP_GR_M_PHEAD_6_5"):
		case joaat("DLC_MP_GR_F_PHEAD_6_5"):
		case joaat("DLC_MP_GR_M_PHEAD_7_5"):
		case joaat("DLC_MP_GR_F_PHEAD_7_5"):
		case joaat("DLC_MP_GR_M_PHEAD_6_6"):
		case joaat("DLC_MP_GR_F_PHEAD_6_6"):
		case joaat("DLC_MP_GR_M_PHEAD_7_6"):
		case joaat("DLC_MP_GR_F_PHEAD_7_6"):
		case joaat("DLC_MP_GR_M_PHEAD_6_7"):
		case joaat("DLC_MP_GR_F_PHEAD_6_7"):
		case joaat("DLC_MP_GR_M_PHEAD_7_7"):
		case joaat("DLC_MP_GR_F_PHEAD_7_7"):
		case joaat("DLC_MP_GR_M_PHEAD_6_8"):
		case joaat("DLC_MP_GR_F_PHEAD_6_8"):
		case joaat("DLC_MP_GR_M_PHEAD_7_8"):
		case joaat("DLC_MP_GR_F_PHEAD_7_8"):
		case joaat("DLC_MP_GR_M_PHEAD_6_9"):
		case joaat("DLC_MP_GR_F_PHEAD_6_9"):
		case joaat("DLC_MP_GR_M_PHEAD_7_9"):
		case joaat("DLC_MP_GR_F_PHEAD_7_9"):
		case joaat("DLC_MP_GR_M_PHEAD_6_10"):
		case joaat("DLC_MP_GR_F_PHEAD_6_10"):
		case joaat("DLC_MP_GR_M_PHEAD_7_10"):
		case joaat("DLC_MP_GR_F_PHEAD_7_10"):
			return 0;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_IE_M_BERD_7_0"):
		case joaat("DLC_MP_IE_F_BERD_7_0"):
			return 1;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_BIKER_M_DECL_0_0"):
		case joaat("DLC_MP_BIKER_F_DECL_0_0"):
		case joaat("DLC_MP_BIKER_M_DECL_0_1"):
		case joaat("DLC_MP_BIKER_F_DECL_0_1"):
		case joaat("DLC_MP_BIKER_M_DECL_0_2"):
		case joaat("DLC_MP_BIKER_F_DECL_0_2"):
		case joaat("DLC_MP_BIKER_M_DECL_0_3"):
		case joaat("DLC_MP_BIKER_F_DECL_0_3"):
		case joaat("DLC_MP_BIKER_M_DECL_0_4"):
		case joaat("DLC_MP_BIKER_F_DECL_0_4"):
		case joaat("DLC_MP_BIKER_M_DECL_0_5"):
		case joaat("DLC_MP_BIKER_F_DECL_0_5"):
		case joaat("DLC_MP_BIKER_M_DECL_0_6"):
		case joaat("DLC_MP_BIKER_F_DECL_0_6"):
		case joaat("DLC_MP_BIKER_M_DECL_0_7"):
		case joaat("DLC_MP_BIKER_F_DECL_0_7"):
		case joaat("DLC_MP_BIKER_M_DECL_0_8"):
		case joaat("DLC_MP_BIKER_F_DECL_0_8"):
			return 10;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_0"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_0"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_1"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_1"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_2"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_2"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_3"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_3"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_4"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_4"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_5"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_5"):
		case joaat("DLC_MP_STUNT_M_OUTFIT_E_6"):
		case joaat("DLC_MP_STUNT_F_OUTFIT_E_6"):
			return 12;
		case joaat("DLC_MP_STUNT_M_PHEAD_11_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_2"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_2"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_2"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_2"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_3"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_3"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_3"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_3"):
		case joaat("DLC_MP_STUNT_M_PHEAD_11_4"):
		case joaat("DLC_MP_STUNT_M_PHEAD_12_4"):
		case joaat("DLC_MP_STUNT_F_PHEAD_11_4"):
		case joaat("DLC_MP_STUNT_F_PHEAD_12_4"):
		case joaat("DLC_MP_STUNT_M_PHEAD_13_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_14_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_13_0"):
		case joaat("DLC_MP_STUNT_F_PHEAD_14_0"):
		case joaat("DLC_MP_STUNT_M_PHEAD_13_1"):
		case joaat("DLC_MP_STUNT_M_PHEAD_14_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_13_1"):
		case joaat("DLC_MP_STUNT_F_PHEAD_14_1"):
			return 0;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_EXEC_F_LEGS_1_0"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_0"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_1"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_1"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_2"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_2"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_3"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_3"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_4"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_4"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_5"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_5"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_6"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_6"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_7"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_7"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_8"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_8"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_9"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_9"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_10"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_10"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_11"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_11"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_12"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_12"):
		case joaat("DLC_MP_EXEC_F_LEGS_1_13"):
		case joaat("DLC_MP_EXEC_M_LEGS_1_13"):
			return 4;
		case joaat("DLC_MP_EXEC_F_JBIB_15_0"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_0"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_1"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_1"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_2"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_2"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_3"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_3"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_4"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_4"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_5"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_5"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_6"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_6"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_7"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_7"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_8"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_8"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_9"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_9"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_10"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_10"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_11"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_11"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_12"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_12"):
		case joaat("DLC_MP_EXEC_F_JBIB_15_13"):
		case joaat("DLC_MP_EXEC_M_JBIB_15_13"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_0"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_0"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_1"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_1"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_2"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_2"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_3"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_3"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_4"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_4"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_5"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_5"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_6"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_6"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_7"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_7"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_8"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_8"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_9"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_9"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_10"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_10"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_11"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_11"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_12"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_12"):
		case joaat("DLC_MP_EXEC_F_JBIB_16_13"):
		case joaat("DLC_MP_EXEC_M_JBIB_16_13"):
			return 11;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LOW_F_PHEAD_1_0"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_0"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_1"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_1"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_2"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_2"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_3"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_3"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_4"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_4"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_5"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_5"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_6"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_6"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_7"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_7"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_8"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_8"):
		case joaat("DLC_MP_LOW_F_PHEAD_1_9"):
		case joaat("DLC_MP_LOW_M_PHEAD_1_9"):
			return 0;
		case joaat("DLC_MP_XMAS3_F_JBIB_1_0"):
		case joaat("DLC_MP_XMAS3_M_JBIB_1_0"):
		case joaat("DLC_MP_XMAS3_F_JBIB_1_1"):
		case joaat("DLC_MP_XMAS3_M_JBIB_1_1"):
		case joaat("DLC_MP_XMAS3_F_JBIB_1_2"):
		case joaat("DLC_MP_XMAS3_M_JBIB_1_2"):
			return 11;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_XMAS2_F_PHEAD_4_0"):
		case joaat("DLC_MP_XMAS2_F_PHEAD_5_0"):
		case joaat("DLC_MP_XMAS2_M_PHEAD_4_0"):
		case joaat("DLC_MP_XMAS2_M_PHEAD_5_0"):
		case joaat("DLC_MP_XMAS2_F_PHEAD_4_3"):
		case joaat("DLC_MP_XMAS2_F_PHEAD_5_3"):
		case joaat("DLC_MP_XMAS2_M_PHEAD_4_3"):
		case joaat("DLC_MP_XMAS2_M_PHEAD_5_3"):
			return 0;
		case joaat("DLC_MP_XMAS3_M_BERD_10_0"):
		case joaat("DLC_MP_XMAS3_F_BERD_10_0"):
		case joaat("DLC_MP_XMAS2_M_BERD_1_0"):
		case joaat("DLC_MP_XMAS2_F_BERD_1_0"):
			return 1;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_IND_F_PHEAD_6_0"):
		case joaat("DLC_MP_IND_M_PHEAD_6_0"):
		case joaat("DLC_MP_IND_F_PHEAD_6_1"):
		case joaat("DLC_MP_IND_M_PHEAD_6_1"):
		case joaat("DLC_MP_IND_F_PHEAD_6_2"):
		case joaat("DLC_MP_IND_M_PHEAD_6_2"):
		case joaat("DLC_MP_IND_F_PHEAD_6_3"):
		case joaat("DLC_MP_IND_M_PHEAD_6_3"):
		case joaat("DLC_MP_IND_F_PHEAD_6_4"):
		case joaat("DLC_MP_IND_M_PHEAD_6_4"):
		case joaat("DLC_MP_IND_F_PHEAD_6_5"):
		case joaat("DLC_MP_IND_M_PHEAD_6_5"):
			return 0;
		default:
	}
	switch (iParam0)
	{
		case joaat("DLC_MP_LTS_M_BERD_2_0"):
		case joaat("DLC_MP_LTS_F_BERD_2_0"):
			return 1;
		default:
	}
	return -1;
}

int func_286(int iParam0)//Position - 0x2AAD1
{
	switch (iParam0)
	{
		case 214:
		case 215:
		case 216:
		case 217:
		case 218:
		case 219:
		case 220:
		case 221:
		case 188:
		case 178:
			return 1;
		default:
	}
	return 0;
}

int func_287(int iParam0, int iParam1)//Position - 0x304CF
{
	switch (iParam0)
	{
		case 1:
			if (Global_262145.f_32964 /* Tunable: 648076385 */)
			{
				if (!__LIB_0__.func_137(32351, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32972 /* Tunable: -793049781 */);
				}
			}
			break;
		case 3:
			if (Global_262145.f_32965 /* Tunable: 1057315128 */)
			{
				if (!__LIB_0__.func_137(32352, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32973 /* Tunable: -1035386051 */);
				}
			}
			break;
		case 4:
			if (Global_262145.f_32966 /* Tunable: 2074826178 */)
			{
				if (!__LIB_0__.func_137(32353, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32974 /* Tunable: 1011759977 */);
				}
			}
			break;
		case 0:
			if (Global_262145.f_32967 /* Tunable: 98893693 */)
			{
				if (!__LIB_0__.func_137(32354, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32975 /* Tunable: -1980822412 */);
				}
			}
			break;
		case 2:
			if (Global_262145.f_32968 /* Tunable: 328208647 */)
			{
				if (!__LIB_0__.func_137(32355, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32976 /* Tunable: 667598560 */);
				}
			}
			break;
		case 5:
			if (Global_262145.f_32970 /* Tunable: 1598011694 */)
			{
				if (!__LIB_0__.func_137(32357, -1))
				{
					iParam1 = (iParam1 * Global_262145.f_32978 /* Tunable: -278088930 */);
				}
			}
			break;
	}
	return iParam1;
}

int func_288(int iParam0)//Position - 0x30B45
{
	switch (iParam0)
	{
		case 3:
		case 8:
		case 13:
		case 18:
			return 4;
			break;
		case 4:
		case 9:
		case 14:
		case 19:
			return 2;
			break;
		case 5:
		case 10:
		case 15:
		case 20:
			return 0;
			break;
		case 1:
		case 6:
		case 11:
		case 16:
			return 3;
			break;
		case 2:
		case 7:
		case 12:
		case 17:
			return 1;
			break;
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
			return 5;
			break;
	}
	return -1;
}

int func_289(int iParam0)//Position - 0x312FC
{
	if (iParam0 == 0)
	{
		return 3649;
	}
	else if (iParam0 == 1)
	{
		return 3650;
	}
	else if (iParam0 == 2)
	{
		return 3651;
	}
	else if (iParam0 == 3)
	{
		return 3652;
	}
	else if (iParam0 == 4)
	{
		return 3653;
	}
	return 3649;
}

void func_290(var uParam0, int iParam1)//Position - 0x3412A
{
	*uParam0 = iParam1;
	uParam0->f_1 = 1;
}

void func_291()//Position - 0x36685
{
	Global_2815059.f_1856.f_56 = 1;
}

void func_292()//Position - 0x36697
{
	Global_2815059.f_1856.f_54 = 1;
}

int func_293(int iParam0)//Position - 0x36771
{
	int iVar0;
	iVar0 = iParam0;
	if (iVar0 != -1)
	{
		return BitTest(Global_1892703[iParam0 /*599*/].f_1, 5);
	}
	return 0;
}

int func_294(int iParam0)//Position - 0x3E481
{
	if (__LIB_2__.func_193(iParam0))
	{
		return 1;
	}
	if (__LIB_0__.func_431(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_295(int iParam0)//Position - 0x41EB9
{
	if (Global_2815059.f_316 == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_296(int iParam0)//Position - 0x41ED2
{
	if (Global_2815059.f_308 == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_297(int iParam0)//Position - 0x43AE1
{
	switch (iParam0)
	{
		case 241:
		case 248:
		case 242:
		case 244:
		case 240:
		case 239:
			return 1;
		default:
	}
	return 0;
}

int func_298(int iParam0)//Position - 0x4E92B
{
	switch (iParam0)
	{
		case 258:
			return 1;
		default:
	}
	return 0;
}

int func_299(int iParam0)//Position - 0x4EACC
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_348, 12);
	}
	return 0;
}

int func_300(int iParam0)//Position - 0x4EB1A
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_348, 11);
	}
	return 0;
}

int func_301(int iParam0)//Position - 0x4F1F6
{
	switch (iParam0)
	{
		case 0:
			return 3901;
		case 1:
			return 3930;
		case 2:
			return 3934;
		case 3:
			return 3938;
		case 4:
			return 3942;
		case 5:
			return 5453;
		default:
	}
	return 3901;
}

void func_302(struct<3> Param0)//Position - 0x556B9
{
	Global_1836844.f_6 = { Param0 };
}

int func_303(int iParam0)//Position - 0x56D82
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return BitTest(Global_4718592.f_162510.f_14, 5);
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 19);
}

bool func_304(int iParam0)//Position - 0x5A988
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 12);
}

bool func_305(int iParam0)//Position - 0x5A9A2
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 13);
}

void func_306(char* sParam0, int iParam1)//Position - 0x5DE26
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 35)
	{
		if (!MISC::IS_STRING_NULL(&(Global_113386.f_14141[iVar0 /*104*/])))
		{
			if (MISC::ARE_STRINGS_EQUAL(&(Global_113386.f_14141[iVar0 /*104*/]), sParam0))
			{
				if (Global_113386.f_14141[iVar0 /*104*/].f_24 == 0)
				{
				}
				Global_113386.f_14141[iVar0 /*104*/].f_24 = 1;
				if (Global_113386.f_14141[iVar0 /*104*/].f_25 == 1)
				{
					if (Global_113386.f_14141[iVar0 /*104*/].f_99[0] == 1)
					{
						Global_113386.f_14051[0 /*20*/].f_17 = 0;
					}
					if (Global_113386.f_14141[iVar0 /*104*/].f_99[1] == 1)
					{
						Global_113386.f_14051[1 /*20*/].f_17 = 0;
					}
					if (Global_113386.f_14141[iVar0 /*104*/].f_99[2] == 1)
					{
						Global_113386.f_14051[2 /*20*/].f_17 = 0;
					}
					if (Global_113386.f_14141[iVar0 /*104*/].f_99[3] == 1)
					{
						Global_113386.f_14051[3 /*20*/].f_17 = 0;
					}
					Global_113386.f_14141[iVar0 /*104*/].f_25 = 0;
					if (iParam1 == 1)
					{
						Global_113386.f_14141[iVar0 /*104*/].f_27 = 1;
					}
				}
			}
		}
		iVar0++;
	}
}

int func_307(int iParam0)//Position - 0x5E6CA
{
	switch (iParam0)
	{
		case 159:
			return 11;
		case 157:
			return 12;
		case 148:
			return 13;
		case 164:
			return 14;
		case 142:
			return 15;
		case 152:
			return 16;
		case 163:
			return 17;
		case 155:
			return 18;
		case 160:
			return 19;
		case 153:
			return 20;
		case 162:
			return 21;
		case 154:
			return 22;
		case 166:
			return 8;
		case 170:
			return 9;
		case 173:
			return 10;
		case 171:
			return 23;
		case 172:
			return 24;
		case 179:
			return 25;
		case 189:
			return 26;
		case 193:
			return 27;
		case 194:
			return 28;
		case 199:
			return 29;
		case 201:
			return 30;
		case 200:
			return 31;
		case 205:
			return 32;
		case 210:
			return 33;
		case 182:
			return 34;
		case 183:
			return 35;
		case 185:
			return 36;
		case 186:
			return 37;
		case 180:
			return 38;
		case 195:
			return 39;
		case 197:
			return 40;
		case 198:
			return 41;
		case 207:
			return 42;
		case 208:
			return 43;
		case 209:
			return 44;
		case 211:
			return 45;
		case 214:
			return 0;
		case 215:
			return 1;
		case 216:
			return 2;
		case 217:
			return 3;
		case 218:
			return 4;
		case 219:
			return 5;
		case 220:
			return 6;
		case 221:
			return 7;
		default:
	}
	return -1;
}

int func_308()//Position - 0x5EBFD
{
	char* sVar0;
	sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
	if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_ASSAULT"))
	{
		return 159;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BELLYBEAST"))
	{
		return 157;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_DEATHMATCH"))
	{
		return 148;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_HUNT_THE_BOSS"))
	{
		return 164;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_SIGHTSEER"))
	{
		return 142;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_YACHT_ROB"))
	{
		return 152;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CARJACKING"))
	{
		return 163;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_COLLECT_MONEY"))
	{
		return 155;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FINDERSKEEPERS"))
	{
		return 160;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FIVESTAR"))
	{
		return 153;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_POINT_TO_POINT"))
	{
		return 162;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_ROB_SHOP"))
	{
		return 154;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_HEADHUNTER"))
	{
		return 166;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CONTRABAND_BUY"))
	{
		return 167;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CONTRABAND_SELL"))
	{
		return 168;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CONTRABAND_DEFEND"))
	{
		return 169;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_AIRFREIGHT"))
	{
		return 170;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_CASHING_OUT"))
	{
		return 171;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_SALVAGE"))
	{
		return 172;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FRAGILE_GOODS"))
	{
		return 173;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_VEHICLE_EXPORT"))
	{
		return 178;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_ILLICIT_GOODS_RESUPPLY"))
	{
		return 192;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_JOUST"))
	{
		return 179;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_UNLOAD_WEAPONS"))
	{
		return 180;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_BAD_DEAL"))
	{
		return 182;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_RESCUE_CONTACT"))
	{
		return 183;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_LAST_RESPECTS"))
	{
		return 185;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_CONTRACT_KILLING"))
	{
		return 186;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_RACE_P2P"))
	{
		return 189;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_CONTRABAND_SELL"))
	{
		return 190;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_CONTRABAND_DEFEND"))
	{
		return 191;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_ILLICIT_GOODS_RESUPPLY"))
	{
		return 192;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_DRIVEBY_ASSASSIN"))
	{
		return 193;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_RIPPIN_IT_UP"))
	{
		return 194;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_FREE_PRISONER"))
	{
		return 197;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_SAFECRACKER"))
	{
		return 198;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_STEAL_BIKES"))
	{
		return 195;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_SEARCH_AND_DESTROY"))
	{
		return 199;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "AM_PENNED_IN"))
	{
		return 200;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_STAND_YOUR_GROUND"))
	{
		return 201;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_CRIMINAL_MISCHIEF"))
	{
		return 205;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_DESTROY_VANS"))
	{
		return 207;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_BURN_ASSETS"))
	{
		return 208;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_SHUTTLE"))
	{
		return 209;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_BIKER_WHEELIE_RIDER"))
	{
		return 210;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_PLOUGHED"))
	{
		return 214;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FULLY_LOADED"))
	{
		return 215;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_AMPHIBIOUS_ASSAULT"))
	{
		return 216;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_TRANSPORTER"))
	{
		return 217;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FORTIFIED"))
	{
		return 218;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_VELOCITY"))
	{
		return 219;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_STOCKPILING"))
	{
		return 221;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_RAMPED_UP"))
	{
		return 220;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_GUNRUNNING"))
	{
		return 225;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_GUNRUNNING_DEFEND"))
	{
		return 227;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_SMUGGLER"))
	{
		return 229;
	}
	else if (MISC::ARE_STRINGS_EQUAL(sVar0, "GB_FM_GANGOPS"))
	{
		return 233;
	}
	return 0;
}

void func_309(int iParam0)//Position - 0x5F1F8
{
	MISC::CLEAR_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_5), iParam0);
}

int func_310(int iParam0, int iParam1)//Position - 0x5F598
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	if (__LIB_1__.func_346(iParam1))
	{
		iVar0 = 0;
		while (iVar0 <= 5)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/] == iParam1)
			{
				return Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_8;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_311(int iParam0)//Position - 0x5FB60
{
	switch (iParam0)
	{
		case 5:
			return 34738;
			break;
	}
	return 0;
}

int func_312(int iParam0)//Position - 0x5FB80
{
	switch (iParam0)
	{
		case 1:
			return 34722;
			break;
		case 3:
			return 34725;
			break;
		case 4:
			return 34723;
			break;
		case 0:
			return 34724;
			break;
		case 2:
			return 34726;
			break;
		case 5:
			return 34727;
			break;
	}
	return 0;
}

void func_313(int iParam0)//Position - 0x600BF
{
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_LOST"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_LOST"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_MEXICAN"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_MEXICAN"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_FAMILY"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_FAMILY"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_MARABUNTE"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_MARABUNTE"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_CULT"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_CULT"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_SALVA"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_SALVA"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_WEICHENG"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_WEICHENG"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_BALLAS"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_BALLAS"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_HILLBILLY"), *iParam0);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, *iParam0, joaat("AMBIENT_GANG_HILLBILLY"));
}

void func_314(int iParam0, int iParam1)//Position - 0x601B1
{
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, joaat("COP"), *iParam1);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, *iParam1, joaat("COP"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, joaat("ARMY"), *iParam1);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, *iParam1, joaat("ARMY"));
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, joaat("SECURITY_GUARD"), *iParam1);
	PED::SET_RELATIONSHIP_BETWEEN_GROUPS(iParam0, *iParam1, joaat("SECURITY_GUARD"));
}

void func_315(int iParam0)//Position - 0x60852
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_31[iVar0]), iVar1);
}

void func_316()//Position - 0x610AB
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 1)
	{
		Global_2815059.f_5195.f_17[iVar0] = 0;
		iVar0++;
	}
}

void func_317(int iParam0)//Position - 0x12B2
{
	Global_4521801.f_6 = 1;
	Global_4521801.f_7 = iParam0;
}

int func_318(bool bParam0)//Position - 0x17E3
{
	int iVar0;
	iVar0 = bParam0;
	if (iVar0 != -1)
	{
		return Global_1892703[iVar0 /*599*/];
	}
	return -1;
}

int func_319(int iParam0)//Position - 0x25AD7
{
	return (iParam0 * Global_262145.f_24320 /* Tunable: 134208154 */);
}

void func_320(int iParam0)//Position - 0x25C3F
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_3__.func_120(iParam0);
	iVar1 = iVar0 + 7;
	iVar2 = iVar0;
	while (iVar2 <= iVar1)
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_3), iVar2);
		iVar2++;
	}
}

void func_321(int iParam0, int iParam1)//Position - 0x26806
{
	if (iParam0 > 255)
	{
		__LIB_1__.func_39(410, 255, iParam1);
		__LIB_1__.func_39(18095, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_1__.func_39(410, iParam0, iParam1);
		__LIB_1__.func_39(18095, 0, iParam1);
	}
}

void func_322(int iParam0, int iParam1)//Position - 0x26846
{
	if (iParam0 > 255)
	{
		__LIB_1__.func_39(407, 255, iParam1);
		__LIB_1__.func_39(18094, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_1__.func_39(407, iParam0, iParam1);
		__LIB_1__.func_39(18094, 0, iParam1);
	}
}

void func_323(int iParam0, int iParam1)//Position - 0x26886
{
	if (iParam0 > 255)
	{
		__LIB_1__.func_39(402, 255, iParam1);
		__LIB_1__.func_39(18093, (iParam0 - 255), iParam1);
	}
	else
	{
		__LIB_1__.func_39(402, iParam0, iParam1);
		__LIB_1__.func_39(18093, 0, iParam1);
	}
}

bool func_324()//Position - 0x2FAE2
{
	return Global_2725379;
}

int func_325()//Position - 0x390EB
{
	int iVar0;
	iVar0 = (iVar0 + Global_1659620);
	iVar0 = (iVar0 + Global_1659623);
	return iVar0;
}

int func_326(struct<7> Param0)//Position - 0x39932
{
	if ((((((Param0.f_0 == 0 && Param0.f_1 == 0) && Param0.f_2 == 0) && Param0.f_3 == 0) && Param0.f_4 == 0) && Param0.f_5 == 0) && Param0.f_6 == 0)
	{
		return 1;
	}
	return 0;
}

int func_327(int iParam0)//Position - 0x399FE
{
	if (iParam0 < 1)
	{
		return 0;
	}
	if (iParam0 > 12)
	{
		return 0;
	}
	switch (iParam0)
	{
		case 1:
			return 0;
			break;
		case 2:
			return 1;
			break;
		case 3:
			return 2;
			break;
		case 4:
			return 3;
			break;
		case 5:
			return 4;
			break;
		case 6:
			return 5;
			break;
		case 7:
			return 6;
			break;
		case 8:
			return 7;
			break;
		case 9:
			return 8;
			break;
		case 10:
			return 9;
			break;
		case 11:
			return 10;
			break;
		case 12:
			return 11;
			break;
	}
	return 0;
}

struct<7> func_328(int iParam0)//Position - 0x39AC3
{
	int iVar0;
	struct<7> Var1;
	struct<7> Var2;
	iVar0 = iParam0;
	if (STATS::STAT_GET_DATE(iVar0, &Var2, 7, -1))
	{
		return Var2;
	}
	return Var1;
}

float func_329()//Position - 0x3A591
{
	return Global_100493.f_2072;
}

int func_330(int iParam0)//Position - 0x3B5D7
{
	switch (iParam0)
	{
		case joaat("WEAPON_PISTOL_MK2"):
		case joaat("WEAPON_SMG_MK2"):
		case joaat("WEAPON_ASSAULTRIFLE_MK2"):
		case joaat("WEAPON_CARBINERIFLE_MK2"):
		case joaat("WEAPON_COMBATMG_MK2"):
		case joaat("WEAPON_HEAVYSNIPER_MK2"):
		case joaat("WEAPON_PUMPSHOTGUN_MK2"):
		case joaat("WEAPON_SPECIALCARBINE_MK2"):
		case joaat("WEAPON_SNSPISTOL_MK2"):
		case joaat("WEAPON_MARKSMANRIFLE_MK2"):
		case joaat("WEAPON_REVOLVER_MK2"):
		case joaat("WEAPON_BULLPUPRIFLE_MK2"):
			return 2;
			break;
	}
	return -1;
}

int func_331(int iParam0)//Position - 0x4C4EB
{
	switch (iParam0)
	{
		case 46:
		case 47:
		case 48:
		case 49:
		case 52:
		case 53:
		case 56:
			return 1;
		default:
	}
	return 0;
}

int func_332(int iParam0, int iParam1)//Position - 0x700A4
{
	if ((iParam0 >= 0 && iParam0 < 21) && iParam1 == iParam0 == 20)
	{
		return Global_2359296[__LIB_0__.func_153() /*5567*/].f_681.f_2305[iParam0];
	}
	return 0;
}

void func_333(int iParam0)//Position - 0x77A42
{
	MISC::SET_BIT(&(Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_5), iParam0);
}

int func_334(int iParam0)//Position - 0xB1155
{
	if (iParam0 == __LIB_0__.func_720(1) || iParam0 == __LIB_0__.func_720(0))
	{
		return 1;
	}
	return 0;
}

int func_335(int iParam0)//Position - 0xB11B5
{
	switch (iParam0)
	{
		case 10:
			return 9;
			break;
		case 5:
			return 8;
			break;
		case 6:
			return 7;
			break;
		case 8:
			return 6;
			break;
		case 7:
			return 4;
			break;
		case 4:
		case 11:
			return 2;
			break;
		case 0:
		case 2:
		case 3:
		case 9:
		case 1:
			return 1;
			break;
	}
	return 1;
}

int func_336()//Position - 0xB1240
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_TEAM(Global_2703735);
	if (iVar0 > -1 && iVar0 < 4)
	{
		return BitTest(Global_4718592.f_658[iVar0 /*22957*/].f_12180, 4);
	}
	return 0;
}

int func_337()//Position - 0xC6326
{
	return 67;
}

var func_338(int iParam0)//Position - 0xC7CD3
{
	return BitTest(Global_2815059.f_5195.f_48, iParam0);
}

void func_339(int iParam0, bool bParam1)//Position - 0xC93D8
{
	int iVar0;
	iVar0 = iParam0;
	if (bParam1)
	{
		AUDIO::LOCK_RADIO_STATION("RADIO_36_AUDIOPLAYER" /* GXT: Media Player */, false);
		AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_36_AUDIOPLAYER" /* GXT: Media Player */, __LIB_5__.func_95(iParam0));
		__LIB_0__.func_521(__LIB_5__.func_96(iVar0), 1, -1);
	}
	else
	{
		AUDIO::LOCK_RADIO_STATION_TRACK_LIST("RADIO_36_AUDIOPLAYER" /* GXT: Media Player */, __LIB_5__.func_95(iParam0));
		__LIB_0__.func_521(__LIB_5__.func_96(iVar0), 0, -1);
	}
}

var func_340(int iParam0, int iParam1)//Position - 0xCA8E7
{
	int iVar0;
	iVar0 = iParam1;
	if (iParam1 == -1)
	{
		iVar0 = __LIB_0__.func_5();
	}
	return Global_2869862[iParam0 /*3*/][iVar0];
}

void func_341(int iParam0, bool bParam1, int iParam2, int iParam3, int iParam4)//Position - 0xCAE80
{
	Global_23150.f_5466[0] = iParam0;
	Global_23150.f_5466[1] = bParam1;
	Global_23150.f_5466[2] = iParam2;
	Global_23150.f_5466[3] = iParam3;
	Global_23150.f_5466[4] = iParam4;
}

int func_342(int iParam0)//Position - 0xCDFFE
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 6);
}

int func_343(int iParam0)//Position - 0xCE024
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 7);
}

int func_344(int iParam0)//Position - 0xCE26C
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_4, 31);
	}
	return 0;
}

bool func_345(int iParam0)//Position - 0xCE821
{
	if (iParam0 < 32)
	{
		return BitTest(Global_2703735.f_61.f_11, iParam0);
	}
	return BitTest(Global_2703735.f_61.f_12, (iParam0 - 32));
}

int func_346(bool bParam0)//Position - 0xD1C13
{
	return Global_2683918[bParam0 /*3*/];
}

int func_347(int iParam0, bool bParam1)//Position - 0xD1DF6
{
	if (Global_78319)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0) && (!bParam1 || VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)))
		{
			if (DECORATOR::DECOR_EXIST_ON(iParam0, "Previous_Owner"))
			{
				if (DECORATOR::DECOR_GET_INT(iParam0, "Previous_Owner") == NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_348(int iParam0)//Position - 0xD1ED0
{
	if (Global_2815059.f_325 == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_349(int iParam0)//Position - 0xD2027
{
	if (Global_2815059.f_324 == iParam0)
	{
		return 1;
	}
	return 0;
}

int func_350(int iParam0)//Position - 0xD2087
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 25);
	}
	return 0;
}

int func_351(int iParam0)//Position - 0xD218C
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 8);
	}
	return 0;
}

int func_352(int iParam0)//Position - 0xD54AC
{
	int iVar0;
	switch (Global_4718592.f_162543)
	{
		case 1:
			switch (iParam0)
			{
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					iVar0 = joaat("bruiser");
					break;
				case joaat("brutus"):
				case joaat("brutus2"):
				case joaat("brutus3"):
					iVar0 = joaat("brutus");
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					iVar0 = joaat("cerberus");
					break;
				case joaat("deathbike"):
				case joaat("deathbike2"):
				case joaat("deathbike3"):
					iVar0 = joaat("deathbike");
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					iVar0 = joaat("dominator4");
					break;
				case joaat("impaler2"):
				case joaat("impaler3"):
				case joaat("impaler4"):
					iVar0 = joaat("impaler2");
					break;
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
					iVar0 = joaat("imperator");
					break;
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					iVar0 = joaat("issi4");
					break;
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					iVar0 = joaat("monster3");
					break;
				case joaat("scarab"):
				case joaat("scarab2"):
				case joaat("scarab3"):
					iVar0 = joaat("scarab");
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					iVar0 = joaat("slamvan4");
					break;
				case joaat("zr380"):
				case joaat("zr3802"):
				case joaat("zr3803"):
					iVar0 = joaat("zr380");
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					iVar0 = joaat("bruiser2");
					break;
				case joaat("brutus"):
				case joaat("brutus2"):
				case joaat("brutus3"):
					iVar0 = joaat("brutus2");
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					iVar0 = joaat("cerberus2");
					break;
				case joaat("deathbike"):
				case joaat("deathbike2"):
				case joaat("deathbike3"):
					iVar0 = joaat("deathbike2");
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					iVar0 = joaat("dominator5");
					break;
				case joaat("impaler2"):
				case joaat("impaler3"):
				case joaat("impaler4"):
					iVar0 = joaat("impaler3");
					break;
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
					iVar0 = joaat("imperator2");
					break;
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					iVar0 = joaat("issi5");
					break;
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					iVar0 = joaat("monster4");
					break;
				case joaat("scarab"):
				case joaat("scarab2"):
				case joaat("scarab3"):
					iVar0 = joaat("scarab2");
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					iVar0 = joaat("slamvan5");
					break;
				case joaat("zr380"):
				case joaat("zr3802"):
				case joaat("zr3803"):
					iVar0 = joaat("zr3802");
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case joaat("bruiser"):
				case joaat("bruiser2"):
				case joaat("bruiser3"):
					iVar0 = joaat("bruiser3");
					break;
				case joaat("brutus"):
				case joaat("brutus2"):
				case joaat("brutus3"):
					iVar0 = joaat("brutus3");
					break;
				case joaat("cerberus"):
				case joaat("cerberus2"):
				case joaat("cerberus3"):
					iVar0 = joaat("cerberus3");
					break;
				case joaat("deathbike"):
				case joaat("deathbike2"):
				case joaat("deathbike3"):
					iVar0 = joaat("deathbike3");
					break;
				case joaat("dominator4"):
				case joaat("dominator5"):
				case joaat("dominator6"):
					iVar0 = joaat("dominator6");
					break;
				case joaat("impaler2"):
				case joaat("impaler3"):
				case joaat("impaler4"):
					iVar0 = joaat("impaler4");
					break;
				case joaat("imperator"):
				case joaat("imperator2"):
				case joaat("imperator3"):
					iVar0 = joaat("imperator3");
					break;
				case joaat("issi4"):
				case joaat("issi5"):
				case joaat("issi6"):
					iVar0 = joaat("issi6");
					break;
				case joaat("monster3"):
				case joaat("monster4"):
				case joaat("monster5"):
					iVar0 = joaat("monster5");
					break;
				case joaat("scarab"):
				case joaat("scarab2"):
				case joaat("scarab3"):
					iVar0 = joaat("scarab3");
					break;
				case joaat("slamvan4"):
				case joaat("slamvan5"):
				case joaat("slamvan6"):
					iVar0 = joaat("slamvan6");
					break;
				case joaat("zr380"):
				case joaat("zr3802"):
				case joaat("zr3803"):
					iVar0 = joaat("zr3803");
					break;
			}
			break;
	}
	if (STREAMING::IS_MODEL_VALID(iVar0))
	{
		return iVar0;
	}
	return iParam0;
}

int func_353()//Position - 0xD594C
{
	return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_96.f_28;
}

int func_354(int iParam0, int iParam1)//Position - 0xD59F5
{
	if (iParam1 == 15 || iParam1 == 16)
	{
		if (Global_2711251[9] == 0)
		{
			if (iParam0 == Global_4718592.f_110279)
			{
				return 1;
			}
			if (Global_1659934 != -1)
			{
				if (iParam0 == Global_1659934)
				{
					return 1;
				}
			}
		}
		return 0;
	}
	return 0;
}

int func_355(bool bParam0)//Position - 0xD60B0
{
	if (bParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[bParam0 /*453*/].f_318.f_5, 4);
	}
	return 0;
}

int func_356(int iParam0)//Position - 0xD619D
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 4);
}

int func_357(int iParam0)//Position - 0xD61C3
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 5);
}

bool func_358()//Position - 0xD70E9
{
	return BitTest(Global_2815059.f_4660, 0);
}

bool func_359(int iParam0)//Position - 0xD70FA
{
	return iParam0 == 54;
}

int func_360(var uParam0)//Position - 0xD71FD
{
	int iVar0;
	iVar0 = uParam0;
	if (iVar0 != 0)
	{
		return iVar0;
	}
	return joaat("WEAPON_PISTOL");
}

int func_361(int iParam0)//Position - 0xD721C
{
	switch (iParam0)
	{
		case 0:
			return joaat("WEAPON_PISTOL");
			break;
		case 1:
			return joaat("WEAPON_COMBATPISTOL");
			break;
		case 2:
			return joaat("WEAPON_APPISTOL");
			break;
		case 3:
			return joaat("WEAPON_PISTOL50");
			break;
		case 4:
			return joaat("WEAPON_HEAVYPISTOL");
			break;
		case 5:
			return joaat("WEAPON_SNSPISTOL");
			break;
		case 6:
			return joaat("WEAPON_VINTAGEPISTOL");
			break;
		case 7:
			return joaat("WEAPON_FLAREGUN");
			break;
		case 8:
			return joaat("WEAPON_MARKSMANPISTOL");
			break;
		case 9:
			return joaat("WEAPON_PISTOL_MK2");
			break;
		case 10:
			return joaat("WEAPON_REVOLVER_MK2");
			break;
		case 11:
			return joaat("WEAPON_SNSPISTOL_MK2");
			break;
		case 12:
			return joaat("WEAPON_REVOLVER");
			break;
		case 13:
			return joaat("WEAPON_RAYPISTOL");
			break;
		case 14:
			return joaat("WEAPON_GADGETPISTOL");
			break;
		case 15:
			return joaat("WEAPON_MICROSMG");
			break;
		case 16:
			return joaat("WEAPON_SMG");
			break;
		case 17:
			return joaat("WEAPON_ASSAULTSMG");
			break;
		case 18:
			return joaat("WEAPON_COMBATPDW");
			break;
		case 19:
			return joaat("WEAPON_MINISMG");
			break;
		case 20:
			return joaat("WEAPON_MACHINEPISTOL");
			break;
		case 21:
			return joaat("WEAPON_SMG_MK2");
			break;
		case 22:
			return joaat("WEAPON_ASSAULTRIFLE");
			break;
		case 23:
			return joaat("WEAPON_CARBINERIFLE");
			break;
		case 24:
			return joaat("WEAPON_ADVANCEDRIFLE");
			break;
		case 25:
			return joaat("WEAPON_BULLPUPRIFLE");
			break;
		case 26:
			return joaat("WEAPON_MARKSMANRIFLE");
			break;
		case 27:
			return joaat("WEAPON_COMPACTRIFLE");
			break;
		case 28:
			return joaat("WEAPON_GUSENBERG");
			break;
		case 29:
			return joaat("WEAPON_MUSKET");
			break;
		case 30:
			return joaat("WEAPON_RAYCARBINE");
			break;
		case 31:
			return joaat("WEAPON_SPECIALCARBINE");
			break;
		case 32:
			return joaat("WEAPON_ASSAULTRIFLE_MK2");
			break;
		case 33:
			return joaat("WEAPON_CARBINERIFLE_MK2");
			break;
		case 34:
			return joaat("WEAPON_COMBATMG_MK2");
			break;
		case 35:
			return joaat("WEAPON_BULLPUPRIFLE_MK2");
			break;
		case 36:
			return joaat("WEAPON_MARKSMANRIFLE_MK2");
			break;
		case 37:
			return joaat("WEAPON_SPECIALCARBINE_MK2");
			break;
		case 38:
			return joaat("WEAPON_MILITARYRIFLE");
			break;
		case 39:
			return joaat("WEAPON_MG");
			break;
		case 40:
			return joaat("WEAPON_COMBATMG");
			break;
		case 41:
			return joaat("WEAPON_PUMPSHOTGUN");
			break;
		case 42:
			return joaat("WEAPON_SAWNOFFSHOTGUN");
			break;
		case 43:
			return joaat("WEAPON_ASSAULTSHOTGUN");
			break;
		case 44:
			return joaat("WEAPON_BULLPUPSHOTGUN");
			break;
		case 45:
			return joaat("WEAPON_HEAVYSHOTGUN");
			break;
		case 46:
			return joaat("WEAPON_DBSHOTGUN");
			break;
		case 47:
			return joaat("WEAPON_AUTOSHOTGUN");
			break;
		case 48:
			return joaat("WEAPON_DOUBLEACTION");
			break;
		case 49:
			return joaat("WEAPON_PUMPSHOTGUN_MK2");
			break;
		case 50:
			return joaat("WEAPON_COMBATSHOTGUN");
			break;
		case 51:
			return joaat("WEAPON_SNIPERRIFLE");
			break;
		case 52:
			return joaat("WEAPON_HEAVYSNIPER");
			break;
		case 53:
			return joaat("WEAPON_HEAVYSNIPER_MK2");
			break;
		case 54:
			return joaat("WEAPON_GRENADELAUNCHER");
			break;
		case 55:
			return joaat("WEAPON_RPG");
			break;
		case 56:
			return joaat("WEAPON_MINIGUN");
			break;
		case 57:
			return joaat("WEAPON_RAYMINIGUN");
			break;
		case 58:
			return joaat("WEAPON_FIREWORK");
			break;
		case 59:
			return joaat("WEAPON_HOMINGLAUNCHER");
			break;
		case 60:
			return joaat("WEAPON_RAILGUN");
			break;
		case 61:
			return joaat("WEAPON_COMPACTLAUNCHER");
			break;
		case 62:
			return joaat("WEAPON_GRENADE");
			break;
		case 63:
			return joaat("WEAPON_SMOKEGRENADE");
			break;
		case 64:
			return joaat("WEAPON_STICKYBOMB");
			break;
		case 65:
			return joaat("WEAPON_MOLOTOV");
			break;
		case 66:
			return joaat("WEAPON_PROXMINE");
			break;
		case 67:
			return joaat("WEAPON_PIPEBOMB");
			break;
		case 68:
			return joaat("WEAPON_STUNGUN");
			break;
		case 69:
			return joaat("WEAPON_PETROLCAN");
			break;
		case 70:
			return joaat("WEAPON_KNIFE");
			break;
		case 71:
			return joaat("WEAPON_NIGHTSTICK");
			break;
		case 72:
			return joaat("WEAPON_HAMMER");
			break;
		case 73:
			return joaat("WEAPON_BAT");
			break;
		case 74:
			return joaat("WEAPON_CROWBAR");
			break;
		case 75:
			return joaat("WEAPON_GOLFCLUB");
			break;
		case 76:
			return joaat("WEAPON_BOTTLE");
			break;
		case 77:
			return joaat("WEAPON_DAGGER");
			break;
		case 78:
			return joaat("WEAPON_KNUCKLE");
			break;
		case 79:
			return joaat("WEAPON_HATCHET");
			break;
		case 80:
			return joaat("WEAPON_MACHETE");
			break;
		case 81:
			return joaat("WEAPON_FLASHLIGHT");
			break;
		case 82:
			return joaat("WEAPON_SWITCHBLADE");
			break;
		case 83:
			return joaat("WEAPON_BATTLEAXE");
			break;
		case 84:
			return joaat("WEAPON_POOLCUE");
			break;
		case 85:
			return joaat("WEAPON_WRENCH");
			break;
		case 86:
			return joaat("WEAPON_STONE_HATCHET");
			break;
		case 87:
			return joaat("WEAPON_UNARMED");
			break;
		case 88:
			return joaat("WEAPON_FERTILIZERCAN");
			break;
		case 89:
			return joaat("WEAPON_STUNGUN_MP");
			break;
		case 90:
			return joaat("WEAPON_EMPLAUNCHER");
			break;
		case 91:
			return joaat("WEAPON_TACTICALRIFLE");
			break;
		case 92:
			return joaat("WEAPON_PRECISIONRIFLE");
			break;
		case 93:
			return joaat("WEAPON_HEAVYRIFLE");
			break;
	}
	return joaat("WEAPON_PISTOL");
}

bool func_362()//Position - 0xD79A4
{
	return BitTest(Global_2815059.f_4660, 7);
}

int func_363(int iParam0)//Position - 0xD79B5
{
	int iVar0;
	iVar0 = 0;
	if (BitTest(Global_4718592.f_162934, 2) && iParam0 == 0)
	{
		iVar0 = 1;
	}
	else if (BitTest(Global_4718592.f_162934, 3) && iParam0 == 1)
	{
		iVar0 = 1;
	}
	else if (BitTest(Global_4718592.f_162934, 4) && iParam0 == 2)
	{
		iVar0 = 1;
	}
	else if (BitTest(Global_4718592.f_162934, 5) && iParam0 == 3)
	{
		iVar0 = 1;
	}
	return iVar0;
}

void func_364(int iParam0)//Position - 0xD8234
{
	__LIB_0__.func_579(&(Global_2715699.f_4316.f_233[iParam0 /*2*/]));
}

int func_365(int iParam0)//Position - 0x1F9E43
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return BitTest(Global_4718592.f_162510.f_14, 3);
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_2, 23);
}

Vector3 func_366(int iParam0)//Position - 0x1FC820
{
	switch (iParam0)
	{
		case 91:
			return 249.3483f, -1805.22f, 26.1131f;
			break;
		case 92:
			return -1462.1592f, -923.3718f, 9.0446f;
			break;
		case 93:
			return 32.102f, -1025.4478f, 28.4631f;
			break;
		case 94:
			return 38.5539f, 2784.1147f, 56.8781f;
			break;
		case 95:
			return -360.8651f, 6073.394f, 30.4974f;
			break;
		case 96:
			return 1731.091f, 3720.5735f, 33.0542f;
			break;
		case 97:
			return 942.3256f, -1452.339f, 30.1209f;
			break;
		case 98:
			return 189.2704f, 300.9276f, 104.4934f;
			break;
		case 99:
			return -25.0047f, -200.5497f, 51.3551f;
			break;
		case 100:
			return 2485.1702f, 4080.784f, 36.9306f;
			break;
		case 101:
			return -31.0946f, 6413.322f, 30.4904f;
			break;
		case 102:
			return -1134.5073f, -1576.3403f, 3.4102f;
			break;
	}
	return 0f, 0f, 0f;
}

bool func_367()//Position - 0x20F4D4
{
	return BitTest(Global_1943920.f_3, 5);
}

int func_368(bool bParam0)//Position - 0x2125E6
{
	if (Global_1892703[bParam0 /*599*/] == 236 || Global_1892703[bParam0 /*599*/] == 150)
	{
		return __LIB_1__.func_471(bParam0);
	}
	return 0;
}

bool func_369(var uParam0, int iParam1)//Position - 0x2137D9
{
	return BitTest((*uParam0)[(iParam1 / 32)], (iParam1 % 32));
}

var func_370()//Position - 0x2140FE
{
	return Global_2815059.f_5192;
}

void func_371(int iParam0)//Position - 0x214C3F
{
	Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_269.f_47 = iParam0;
}

int func_372(int iParam0)//Position - 0x21559E
{
	switch (iParam0)
	{
		case 170:
			return 0;
		case 166:
			return 1;
		case 171:
			return 2;
		case 172:
			return 3;
		case 173:
			return 4;
		case 214:
			return 5;
		case 215:
			return 6;
		case 216:
			return 7;
		case 217:
			return 8;
		case 218:
			return 9;
		case 219:
			return 10;
		case 220:
			return 11;
		case 221:
			return 12;
		default:
	}
	return -1;
}

int func_373(int iParam0)//Position - 0x218205
{
	if (iParam0 == 0)
	{
		return 0;
	}
	if ((iParam0 == 3 || iParam0 == 4) || iParam0 == 5)
	{
		return 1;
	}
	return 0;
}

int func_374(int iParam0)//Position - 0x220CEF
{
	switch (iParam0)
	{
		case 10:
		case 8:
		case 3:
		case 18:
			return 1;
		default:
	}
	return 0;
}

bool func_375(int iParam0)//Position - 0x220D1B
{
	return __LIB_0__.func_710(iParam0) != 0;
}

int func_376(int iParam0, int iParam1)//Position - 0x2248F1
{
	switch (iParam1)
	{
		case 45:
			switch (iParam0)
			{
				case 0:
					return 919;
				case 1:
					return 920;
				case 2:
					return 921;
				case 3:
					return 922;
				case 4:
					return 923;
				case 5:
					return 924;
				case 6:
					return 925;
				default:
			}
			break;
		case 46:
			switch (iParam0)
			{
				case 0:
					return 727;
				case 1:
					return 728;
				case 2:
					return 729;
				case 3:
					return 882;
				case 4:
					return 883;
				case 5:
					return 884;
				case 6:
					return 885;
				default:
			}
			break;
		case 47:
			switch (iParam0)
			{
				case 0:
					return 731;
				case 1:
					return 732;
				case 2:
					return 733;
				case 3:
					return 886;
				case 4:
					return 887;
				case 5:
					return 888;
				case 6:
					return 889;
				default:
			}
			break;
		case 48:
			switch (iParam0)
			{
				case 0:
					return 715;
				case 1:
					return 716;
				case 2:
					return 717;
				case 3:
					return 870;
				case 4:
					return 871;
				case 5:
					return 872;
				case 6:
					return 873;
				default:
			}
			break;
		case 49:
			switch (iParam0)
			{
				case 0:
					return 719;
				case 1:
					return 720;
				case 2:
					return 721;
				case 3:
					return 874;
				case 4:
					return 875;
				case 5:
					return 876;
				case 6:
					return 877;
				default:
			}
			break;
		case 50:
			switch (iParam0)
			{
				case 0:
					return 723;
				case 1:
					return 724;
				case 2:
					return 725;
				case 3:
					return 878;
				case 4:
					return 879;
				case 5:
					return 880;
				case 6:
					return 881;
				default:
			}
			break;
		case 51:
			switch (iParam0)
			{
				case 0:
					return 735;
				case 1:
					return 736;
				case 2:
					return 737;
				case 3:
					return 890;
				case 4:
					return 891;
				case 5:
					return 892;
				case 6:
					return 893;
				default:
			}
			break;
		case 52:
			switch (iParam0)
			{
				case 0:
					return 739;
				case 1:
					return 740;
				case 2:
					return 741;
				case 3:
					return 894;
				case 4:
					return 895;
				case 5:
					return 896;
				case 6:
					return 897;
				default:
			}
			break;
		case 53:
			switch (iParam0)
			{
				case 0:
					return 927;
				case 1:
					return 928;
				case 2:
					return 929;
				case 3:
					return 930;
				case 4:
					return 931;
				case 5:
					return 932;
				case 6:
					return 933;
				default:
			}
			break;
		case 54:
			switch (iParam0)
			{
				case 0:
					return 935;
				case 1:
					return 936;
				case 2:
					return 937;
				case 3:
					return 938;
				case 4:
					return 939;
				case 5:
					return 940;
				case 6:
					return 941;
				default:
			}
			break;
		case 55:
			switch (iParam0)
			{
				case 0:
					return 943;
				case 1:
					return 944;
				case 2:
					return 945;
				case 3:
					return 946;
				case 4:
					return 947;
				case 5:
					return 948;
				case 6:
					return 949;
				default:
			}
			break;
	}
	switch (iParam1)
	{
		case 56:
			switch (iParam0)
			{
				case 0:
					return 1091;
				case 1:
					return 1092;
				case 2:
					return 1093;
				case 3:
					return 1094;
				case 4:
					return 1095;
				case 5:
					return 1096;
				case 6:
					return 1097;
				default:
			}
			break;
		case 57:
			switch (iParam0)
			{
				case 0:
					return 1061;
				case 1:
					return 1062;
				case 2:
					return 1063;
				case 3:
					return 1064;
				case 4:
					return 1065;
				case 5:
					return 1066;
				case 6:
					return 1067;
				default:
			}
			break;
		case 58:
			switch (iParam0)
			{
				case 0:
					return 1115;
				case 1:
					return 1116;
				case 2:
					return 1117;
				case 3:
					return 1118;
				case 4:
					return 1119;
				case 5:
					return 1120;
				case 6:
					return 1121;
				default:
			}
			break;
		case 59:
			switch (iParam0)
			{
				case 0:
					return 1123;
				case 1:
					return 1124;
				case 2:
					return 1125;
				case 3:
					return 1126;
				case 4:
					return 1127;
				case 5:
					return 1128;
				case 6:
					return 1129;
				default:
			}
			break;
	}
	return 0;
}

void func_377(int iParam0)//Position - 0x224EE4
{
	switch (iParam0)
	{
		case 0:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 0;
			Global_2824753.f_1 = 0;
			break;
		case 45:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 46;
			Global_2824753.f_1 = 46;
			break;
		case 46:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 47;
			Global_2824753.f_1 = 47;
			break;
		case 47:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 48;
			Global_2824753.f_1 = 48;
			break;
		case 48:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 49;
			Global_2824753.f_1 = 49;
			break;
		case 49:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 50;
			Global_2824753.f_1 = 50;
			break;
		case 50:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 51;
			Global_2824753.f_1 = 51;
			break;
		case 51:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 52;
			Global_2824753.f_1 = 52;
			break;
		case 52:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 53;
			Global_2824753.f_1 = 53;
			break;
		case 53:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 54;
			Global_2824753.f_1 = 54;
			break;
		case 54:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 55;
			Global_2824753.f_1 = 55;
			break;
		case 55:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 56;
			Global_2824753.f_1 = 56;
			break;
		case 56:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 57;
			Global_2824753.f_1 = 57;
			break;
		case 57:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 58;
			Global_2824753.f_1 = 58;
			break;
		case 58:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 59;
			Global_2824753.f_1 = 59;
			break;
		case 59:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 60;
			Global_2824753.f_1 = 60;
			break;
		case 60:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 61;
			Global_2824753.f_1 = 61;
			break;
		case 61:
			Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_2 = 62;
			Global_2824753.f_1 = 62;
			break;
	}
}

void func_378(int iParam0)//Position - 0x225179
{
	if (__LIB_2__.func_232())
	{
		Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_76.f_19 = iParam0;
		Global_2824753.f_24 = iParam0;
	}
}

int func_379(int iParam0, int iParam1)//Position - 0x22E83E
{
	if (__LIB_1__.func_984(iParam1) == 83)
	{
		switch (iParam0)
		{
			case 0:
				return Global_262145.f_13127 /* Tunable: APT_DISABLE_INTERIOR1 */;
			case 1:
				return Global_262145.f_13128 /* Tunable: APT_DISABLE_INTERIOR2 */;
			case 2:
				return Global_262145.f_13129 /* Tunable: APT_DISABLE_INTERIOR3 */;
			case 3:
				return Global_262145.f_13130 /* Tunable: APT_DISABLE_INTERIOR4 */;
			case 4:
				return Global_262145.f_13131 /* Tunable: APT_DISABLE_INTERIOR5 */;
			case 5:
				return Global_262145.f_13132 /* Tunable: APT_DISABLE_INTERIOR6 */;
			case 6:
				return Global_262145.f_13133 /* Tunable: APT_DISABLE_INTERIOR7 */;
			case 7:
				return Global_262145.f_13134 /* Tunable: APT_DISABLE_INTERIOR8 */;
			default:
		}
	}
	else if (__LIB_1__.func_984(iParam1) == 88)
	{
		switch (iParam0)
		{
			case 0:
				return 0;
			case 1:
				return 0;
			case 2:
				return 0;
			case 3:
				return 0;
			case 4:
				return 0;
			case 5:
				return 0;
			case 6:
				return 0;
			case 7:
				return 0;
			case 8:
				return 0;
			default:
		}
	}
	else if (__LIB_1__.func_984(iParam1) == 91 || __LIB_1__.func_984(iParam1) == 97)
	{
		switch (iParam0)
		{
			case 0:
				return 0;
			case 1:
				return 0;
			case 2:
				return 0;
			case 3:
				return 0;
			case 4:
				return 0;
			case 5:
				return 0;
			case 6:
				return 0;
			case 7:
				return 0;
			default:
		}
	}
	else if (__LIB_1__.func_984(iParam1) == 109)
	{
		switch (iParam0)
		{
			case 0:
				return 0;
			case 1:
				return 0;
			case 2:
				return 0;
			case 3:
				return 0;
			}
		default:
	}
	return 0;
}

int func_380(int iParam0)//Position - 0x22E9FA
{
	if (__LIB_1__.func_984(iParam0) == 83)
	{
		return 8;
	}
	else if (__LIB_1__.func_984(iParam0) == 88)
	{
		return 9;
	}
	else if (__LIB_1__.func_984(iParam0) == 91 || __LIB_1__.func_984(iParam0) == 97)
	{
		return 9;
	}
	else if (__LIB_1__.func_984(iParam0) == 109)
	{
		return 4;
	}
	return 0;
}

void func_381(char* sParam0)//Position - 0x2302F3
{
	if (Global_23150.f_77 >= 3 || Global_23150.f_74 >= 4)
	{
		return;
	}
	Global_23150.f_5[Global_23150.f_74] = 1;
	Global_23150.f_74++;
	StringCopy(&(Global_23150.f_22[Global_23150.f_77 /*6*/]), sParam0, 24);
	Global_23150.f_77++;
}

int func_382(int iParam0, int iParam1)//Position - 0x23676A
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(iParam1) + 1;
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		iVar0 = 0;
		while (iVar0 < iVar1)
		{
			if (!VEHICLE::IS_VEHICLE_SEAT_FREE(iParam1, (iVar0 - 1), false))
			{
				iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam1, (iVar0 - 1), false);
				if (!PED::IS_PED_INJURED(iVar2))
				{
					if (PED::IS_PED_A_PLAYER(iVar2))
					{
						if (PLAYER::GET_PLAYER_PED(iParam0) == iVar2)
						{
							return 1;
						}
					}
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_383(int iParam0)//Position - 0x23683B
{
	switch (iParam0)
	{
		case joaat("trailersmall2"):
			return 0;
			break;
	}
	return -1;
}

bool func_384()//Position - 0x239E0C
{
	return BitTest(Global_1958711, 24);
}

int func_385(int iParam0)//Position - 0x239E42
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 27);
	}
	return 0;
}

bool func_386()//Position - 0x239E6B
{
	return BitTest(Global_1958711, 25);
}

int func_387()//Position - 0x239E7A
{
	if (PLAYER::PLAYER_ID() != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 20);
	}
	return 0;
}

bool func_388()//Position - 0x239EA5
{
	return BitTest(Global_1958711, 23);
}

char* func_389(int iParam0)//Position - 0x23E8BD
{
	char* sVar0;
	switch (iParam0)
	{
		case 2:
			sVar0 = "MP_BWH_WEED_1" /* GXT: Mount Chiliad Weed Farm */;
			break;
		case 1:
			sVar0 = "MP_BWH_METH_1" /* GXT: Paleto Bay Meth Lab */;
			break;
		case 3:
			sVar0 = "MP_BWH_CRACK_1" /* GXT: Paleto Bay Cocaine Lockup */;
			break;
		case 5:
			sVar0 = "MP_BWH_FAKEID_1" /* GXT: Paleto Bay Forgery Office */;
			break;
		case 4:
			sVar0 = "MP_BWH_CASH_1" /* GXT: Paleto Bay Counterfeit Cash Factory */;
			break;
		case 7:
			sVar0 = "MP_BWH_WEED_2" /* GXT: Downtown Vinewood Weed Farm */;
			break;
		case 6:
			sVar0 = "MP_BWH_METH_2" /* GXT: El Burro Heights Meth Lab */;
			break;
		case 8:
			sVar0 = "MP_BWH_CRACK_2" /* GXT: Morningwood Cocaine Lockup */;
			break;
		case 10:
			sVar0 = "MP_BWH_FAKEID_2" /* GXT: Textile City Forgery Office */;
			break;
		case 9:
			sVar0 = "MP_BWH_CASH_2" /* GXT: Vespucci Canals Counterfeit Cash Factory */;
			break;
		case 12:
			sVar0 = "MP_BWH_WEED_3" /* GXT: San Chianski Weed Farm */;
			break;
		case 11:
			sVar0 = "MP_BWH_METH_3" /* GXT: Senora Desert Meth Lab */;
			break;
		case 13:
			sVar0 = "MP_BWH_CRACK_3" /* GXT: Zancudo River Cocaine Lockup */;
			break;
		case 15:
			sVar0 = "MP_BWH_FAKEID_3" /* GXT: Grapeseed Forgery Office */;
			break;
		case 14:
			sVar0 = "MP_BWH_CASH_3" /* GXT: Senora Desert Counterfeit Cash Factory */;
			break;
		case 17:
			sVar0 = "MP_BWH_WEED_4" /* GXT: Elysian Island Weed Farm */;
			break;
		case 16:
			sVar0 = "MP_BWH_METH_4" /* GXT: Terminal Meth Lab */;
			break;
		case 18:
			sVar0 = "MP_BWH_CRACK_4" /* GXT: Elysian Island Cocaine Lockup */;
			break;
		case 20:
			sVar0 = "MP_BWH_FAKEID_4" /* GXT: Elysian Island Forgery Office */;
			break;
		case 19:
			sVar0 = "MP_BWH_CASH_4" /* GXT: Cypress Flats Counterfeit Cash Factory */;
			break;
		case 21:
			sVar0 = "MP_BUNKER_1" /* GXT: Grand Senora Oilfields Bunker */;
			break;
		case 22:
			sVar0 = "MP_BUNKER_2" /* GXT: Grand Senora Desert Bunker */;
			break;
		case 23:
			sVar0 = "MP_BUNKER_3" /* GXT: Route 68 Bunker */;
			break;
		case 24:
			sVar0 = "MP_BUNKER_4" /* GXT: Farmhouse Bunker */;
			break;
		case 25:
			sVar0 = "MP_BUNKER_5" /* GXT: Smoke Tree Road Bunker */;
			break;
		case 26:
			sVar0 = "MP_BUNKER_6" /* GXT: Thomson Scrapyard Bunker */;
			break;
		case 27:
			sVar0 = "MP_BUNKER_7" /* GXT: Grapeseed Bunker */;
			break;
		case 28:
			sVar0 = "MP_BUNKER_9" /* GXT: Paleto Forest Bunker */;
			break;
		case 29:
			sVar0 = "MP_BUNKER_10" /* GXT: Raton Canyon Bunker */;
			break;
		case 30:
			sVar0 = "MP_BUNKER_11" /* GXT: Lago Zancudo Bunker */;
			break;
		case 31:
			sVar0 = "MP_BUNKER_12" /* GXT: Chumash Bunker */;
			break;
	}
	return sVar0;
}

void func_390(int iParam0)//Position - 0x24222B
{
	Global_4196257 = iParam0;
}

void func_391(bool bParam0)//Position - 0x243C44
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 10))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 10);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 10))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 10);
	}
}

void func_392(bool bParam0)//Position - 0x243CB1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 11))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 11);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 11))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 11);
	}
}

void func_393(bool bParam0)//Position - 0x243D1E
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 12))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 12);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 12))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 12);
	}
}

void func_394(bool bParam0)//Position - 0x243D8B
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 13))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 13);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 13))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 13);
	}
}

void func_395(bool bParam0)//Position - 0x243DF8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 14))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 14);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459, 14))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_459), 14);
	}
}

int func_396()//Position - 0x24CF04
{
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID()), -1, false) == PLAYER::PLAYER_PED_ID())
		{
			return 1;
		}
	}
	return 0;
}

int func_397(int iParam0)//Position - 0x24F8E1
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_2, 17);
	}
	return 0;
}

int func_398(int iParam0)//Position - 0x24F931
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_348, 31);
	}
	return 0;
}

void func_399()//Position - 0x25162F
{
	Global_2815059.f_283 = 0;
	Global_2815059.f_284 = 0;
	Global_2815059.f_285 = 0;
}

void func_400(bool bParam0)//Position - 0x25EC64
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 31))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 31);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 31))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 31);
	}
}

void func_401(int iParam0, var uParam1, var uParam2)//Position - 0x26A922
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = { 1394.1692f, 3599.86f, 34.0121f };
			*uParam2 = { 1395.5479f, 3600.5752f, 33.98914f };
			break;
		case 1:
			*uParam1 = { -3038.9082f, 589.5187f, 6.9048f };
			*uParam2 = { -3038.657f, 589.5176f, 6.904751f };
			break;
		case 2:
			*uParam1 = { -3240.317f, 1004.4334f, 11.8307f };
			*uParam2 = { -3240.0322f, 1004.48175f, 11.830701f };
			break;
		case 3:
			*uParam1 = { 544.2802f, 2672.8113f, 41.1566f };
			*uParam2 = { 544.22784f, 2672.5005f, 41.1565f };
			break;
		case 4:
			*uParam1 = { 2559.247f, 385.5266f, 107.623f };
			*uParam2 = { 2559.1763f, 385.39355f, 107.62297f };
			break;
		case 5:
			*uParam1 = { 2682.0034f, 3282.5432f, 54.2411f };
			*uParam2 = { 2681.864f, 3282.6025f, 54.24114f };
			break;
		case 6:
			*uParam1 = { 1731.2098f, 6411.4033f, 34.0372f };
			*uParam2 = { 1731.2367f, 6411.5566f, 34.03723f };
			break;
		case 7:
			*uParam1 = { 1965.0542f, 3740.5552f, 31.3448f };
			*uParam2 = { 1964.9989f, 3740.7947f, 31.34375f };
			break;
		case 8:
			*uParam1 = { Vector(28.5036f, -1348.8127f, 27.0641f) + Vector(0f, -0.4f, 2f) };
			*uParam2 = { Vector(28.493917f, -1348.5073f, 27.033585f) + Vector(0f, -0.4f, 2f) };
			break;
		case 9:
			*uParam1 = { 376.6533f, 323.6471f, 102.5664f };
			*uParam2 = { 376.63092f, 323.55328f, 102.56641f };
			break;
		case 10:
			*uParam1 = { Vector(37.1573f, 2703.1143f, 1195.432f) + Vector(0f, 0.39f, -29.04f) };
			*uParam2 = { 1166.4972f, 2703.756f, 37.063072f };
			break;
		case 11:
			*uParam1 = { -2973.2617f, 390.8184f, 14.0433f };
			*uParam2 = { -2973.5117f, 390.78732f, 14.043219f };
			break;
		case 12:
			*uParam1 = { -1226.4644f, -902.5864f, 11.2783f };
			*uParam2 = { -1226.4175f, -902.67377f, 11.334959f };
			break;
		case 13:
			*uParam1 = { 1141.3596f, -980.8802f, 45.4155f };
			*uParam2 = { 1141.3501f, -980.9322f, 45.415943f };
			break;
		case 14:
			*uParam1 = { -1491.0565f, -383.5728f, 39.1706f };
			*uParam2 = { -1490.9487f, -383.4771f, 39.16332f };
			break;
		case 15:
			*uParam1 = { 1698.8085f, 4929.1978f, 41.0783f };
			*uParam2 = { 1698.9796f, 4929.0933f, 41.063572f };
			break;
		case 16:
			*uParam1 = { -711.721f, -916.6965f, 18.2145f };
			*uParam2 = { -711.76996f, -916.4685f, 18.215569f };
			break;
		case 17:
			*uParam1 = { -53.124f, -1756.4054f, 28.421f };
			*uParam2 = { -52.90452f, -1756.4739f, 28.42097f };
			break;
		case 18:
			*uParam1 = { 1159.5421f, -326.6986f, 67.923f };
			*uParam2 = { 1159.633f, -326.50867f, 68.20507f };
			break;
		case 19:
			*uParam1 = { -1822.2866f, 788.006f, 137.1859f };
			*uParam2 = { -1822.3729f, 788.2851f, 137.18762f };
			break;
	}
}

int func_402()//Position - 0x26C44C
{
	if (Global_2788199.f_210 >= 54)
	{
		return 1;
	}
	return 0;
}

int func_403(int iParam0)//Position - 0x27CB1C
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_3, 6);
	}
	return 0;
}

bool func_404(int iParam0)//Position - 0x2889C8
{
	return Global_262145.f_31039[iParam0] == Global_4718592.f_116524;
}

void func_405(var uParam0)//Position - 0x294BA0
{
	int iVar0;
	if (STATS::LEADERBOARDS_GET_CACHE_EXISTS(Global_2097536.f_2826))
	{
		iVar0 = STATS::LEADERBOARDS_GET_CACHE_TIME(Global_2097536.f_2826);
		if (iVar0 < 300000)
		{
			MISC::SET_BIT(&(uParam0->f_42), 5);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam0->f_42), 5);
			__LIB_5__.func_11(Global_2097536.f_2826, -1);
		}
	}
}

void func_406(int iParam0, int iParam1, char* sParam2, char* sParam3)//Position - 0x29A6E0
{
	int iVar0;
	int iVar1;
	if (iParam0 == 279)
	{
		iVar1 = Global_262145.f_5065[15 /*51*/][iParam1];
	}
	else if (iParam0 == 278)
	{
		iVar1 = Global_262145.f_5065[14 /*51*/][iParam1];
	}
	else
	{
		StringCopy(sParam2, "", 32);
		StringCopy(sParam3, "", 64);
		return;
	}
	iVar0 = MISC::GET_CONTENT_ID_INDEX(iVar1);
	if (iVar0 != -1)
	{
		MemCopy(sParam2, {Global_794709.f_4[iVar0 /*88*/]}, 8);
		*sParam3 = { Global_794709.f_4[iVar0 /*88*/].f_22 };
		return;
	}
}

int func_407(int iParam0)//Position - 0x2A316E
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_VAR_v0", 64);
			break;
		case 6:
			StringCopy(&cVar0, "MP_STAT_PROP_CLUBHOUSE_VAR_v0", 64);
			break;
		case 7:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_5_v0", 64);
			break;
		case 8:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR1_VAR_v0", 64);
			break;
		case 9:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR2_VAR_v0", 64);
			break;
		case 10:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR3_VAR_v0", 64);
			break;
		case 23:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_6_v0", 64);
			break;
		case 24:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_7_v0", 64);
			break;
		case 27:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_8_v0", 64);
			break;
		case 28:
			StringCopy(&cVar0, "MP_STAT_APPARTMENT_VAR_9_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_408(int iParam0)//Position - 0x2A722E
{
	if (iParam0 >= 53 && iParam0 <= 83)
	{
		return 1;
	}
	return 0;
}

int func_409(int iParam0)//Position - 0x2A724D
{
	if (iParam0 >= 53 && iParam0 <= 113)
	{
		return 1;
	}
	return 0;
}

int func_410(int iParam0)//Position - 0x2A726C
{
	if (iParam0 >= 22 && iParam0 <= 52)
	{
		return 1;
	}
	return 0;
}

int func_411(int iParam0)//Position - 0x2A728B
{
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		case 6:
			return 6;
		case 7:
			return 7;
		case 8:
			return 8;
		case 9:
			return 9;
		case 10:
			return 10;
		case 11:
			return 11;
		case 12:
			return 12;
		case 13:
			return 13;
		case 14:
			return 14;
		case 15:
			return 15;
		case 16:
			return 16;
		case 17:
			return 17;
		case 18:
			return 18;
		case 19:
			return 19;
		case 20:
			return 20;
		case 21:
			return 21;
		default:
	}
	switch (iParam0)
	{
		case 22:
			return 0;
		case 23:
			return 1;
		case 24:
			return 2;
		case 25:
			return 3;
		case 26:
			return 4;
		case 27:
			return 5;
		case 28:
			return 6;
		case 29:
			return 7;
		case 30:
			return 8;
		case 31:
			return 9;
		case 32:
			return 10;
		case 33:
			return 11;
		case 34:
			return 12;
		case 35:
			return 13;
		case 36:
			return 14;
		case 37:
			return 15;
		case 38:
			return 16;
		case 39:
			return 17;
		case 40:
			return 18;
		case 41:
			return 19;
		case 42:
			return 20;
		case 43:
			return 21;
		case 44:
			return 22;
		case 45:
			return 23;
		case 46:
			return 24;
		case 47:
			return 25;
		case 48:
			return 26;
		case 49:
			return 27;
		case 50:
			return 28;
		case 51:
			return 29;
		case 52:
			return 30;
		default:
	}
	switch (iParam0)
	{
		case 53:
			return 0;
		case 54:
			return 1;
		case 55:
			return 2;
		case 56:
			return 3;
		case 57:
			return 4;
		case 58:
			return 5;
		case 59:
			return 6;
		case 60:
			return 7;
		case 61:
			return 8;
		case 62:
			return 9;
		case 63:
			return 10;
		case 64:
			return 11;
		case 65:
			return 12;
		case 66:
			return 13;
		case 67:
			return 14;
		case 68:
			return 15;
		case 69:
			return 16;
		case 70:
			return 17;
		case 71:
			return 18;
		case 72:
			return 19;
		case 73:
			return 20;
		case 74:
			return 21;
		case 75:
			return 22;
		case 76:
			return 23;
		case 77:
			return 24;
		case 78:
			return 25;
		case 79:
			return 26;
		case 80:
			return 27;
		case 81:
			return 28;
		case 82:
			return 29;
		case 83:
			return 30;
		case 84:
			return 0;
		case 85:
			return 1;
		case 86:
			return 2;
		case 87:
			return 3;
		case 88:
			return 4;
		case 89:
			return 5;
		case 90:
			return 6;
		case 91:
			return 7;
		case 92:
			return 8;
		case 93:
			return 9;
		case 94:
			return 10;
		case 95:
			return 11;
		case 96:
			return 12;
		case 97:
			return 13;
		case 98:
			return 14;
		case 99:
			return 15;
		case 100:
			return 16;
		case 101:
			return 17;
		case 102:
			return 18;
		case 103:
			return 19;
		case 104:
			return 20;
		case 105:
			return 21;
		case 106:
			return 22;
		case 107:
			return 23;
		case 108:
			return 24;
		case 109:
			return 25;
		case 110:
			return 26;
		case 111:
			return 27;
		case 112:
			return 28;
		case 113:
			return 29;
		default:
	}
	return -1;
}

int func_412(int iParam0)//Position - 0x2A7A90
{
	if (iParam0 >= 22 && iParam0 <= 42)
	{
		return 1;
	}
	return 0;
}

int func_413(int iParam0)//Position - 0x5825
{
	return Local_85[iParam0 /*3*/];
}

bool func_414(int iParam0)//Position - 0x12C8
{
	return BitTest(Global_1836145, iParam0);
}

int func_415(int iParam0)//Position - 0x919
{
	switch (iParam0)
	{
		case 243:
			return 1;
		default:
	}
	return 0;
}

int func_416(int iParam0)//Position - 0xA51
{
	if (PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false))
	{
		if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_USING(*iParam0), -1, false) == *iParam0)
		{
			return 1;
		}
	}
	return 0;
}

int func_417()//Position - 0x1EB
{
	if (BitTest(Local_61.f_1, 0))
	{
		return 1;
	}
	return 0;
}

int func_418()//Position - 0x35AF
{
	if (BitTest(Local_138[NETWORK::PARTICIPANT_ID_TO_INT() /*3*/].f_2, 0))
	{
		return 1;
	}
	return 0;
}

void func_419()//Position - 0x94B64
{
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 346, true);
		if (NETWORK::NETWORK_PLAYER_HAS_HEADSET(PLAYER::PLAYER_ID()))
		{
			if (NETWORK::NETWORK_IS_PLAYER_TALKING(PLAYER::PLAYER_ID()))
			{
			}
		}
	}
}

int func_420(int iParam0)//Position - 0x95543
{
	return Local_138[iParam0 /*3*/];
}

void func_421(int iParam0)//Position - 0x3622
{
	if (iParam0 > 0)
	{
	}
}

char* func_422(int iParam0, int iParam1, bool bParam2)//Position - 0x4139
{
	switch (iParam0)
	{
		case -1:
			return "S_N_EM" /* GXT: Empty Shop */;
			break;
		case 0:
			return "S_H_01" /* GXT: Bob Mulét Hair & Beauty */;
			break;
		case 1:
			return "S_H_02" /* GXT: Herr Kutz Barber */;
			break;
		case 2:
			return "S_H_03" /* GXT: Beachcombover Barbers */;
			break;
		case 3:
			return "S_H_04" /* GXT: O'Sheas Barbers */;
			break;
		case 4:
			return "S_H_05" /* GXT: Herr Kutz Barber */;
			break;
		case 5:
			return "S_H_06" /* GXT: Hair On Hawick Barbers */;
			break;
		case 6:
			return "S_H_07" /* GXT: Herr Kutz Barber */;
			break;
		case 7:
			return "S_CL_01" /* GXT: Discount Store */;
			break;
		case 8:
			return "S_CL_02" /* GXT: Discount Store */;
			break;
		case 9:
			return "S_CL_03" /* GXT: Binco Clothing */;
			break;
		case 10:
			return "S_CL_04" /* GXT: Discount Store */;
			break;
		case 11:
			return "S_CL_05" /* GXT: Discount Store */;
			break;
		case 12:
			return "S_CL_06" /* GXT: Binco Clothing */;
			break;
		case 13:
			return "S_CL_07" /* GXT: Discount Store */;
			break;
		case 14:
			return "S_CM_01" /* GXT: Suburban */;
			break;
		case 15:
			return "S_CM_03" /* GXT: Suburban */;
			break;
		case 16:
			return "S_CM_04" /* GXT: Suburban */;
			break;
		case 17:
			return "S_CM_05" /* GXT: Suburban */;
			break;
		case 18:
			return "S_CH_01" /* GXT: Ponsonbys */;
			break;
		case 19:
			return "S_CH_02" /* GXT: Ponsonbys */;
			break;
		case 20:
			return "S_CH_03" /* GXT: Ponsonbys */;
			break;
		case 21:
			return "S_CA_01" /* GXT: Vespucci Movie Masks */;
			break;
		case 22:
			return "S_T_01" /* GXT: Blazing Tattoo */;
			break;
		case 23:
			return "S_T_02" /* GXT: Alamo Tattoo Studio */;
			break;
		case 24:
			return "S_T_03" /* GXT: Paleto Tattoo Studio */;
			break;
		case 25:
			return "S_T_04" /* GXT: The Pit */;
			break;
		case 26:
			return "S_T_05" /* GXT: Los Santos Tattoos */;
			break;
		case 27:
			return "S_T_06" /* GXT: Ink Inc Tattoos */;
			break;
		case 28:
			return "S_G_01" /* GXT: Ammu-Nation */;
			break;
		case 29:
			return "S_G_02" /* GXT: Ammu-Nation */;
			break;
		case 30:
			return "S_G_03" /* GXT: Ammu-Nation */;
			break;
		case 31:
			return "S_G_04" /* GXT: Ammu-Nation */;
			break;
		case 32:
			return "S_G_05" /* GXT: Ammu-Nation */;
			break;
		case 33:
			return "S_G_06" /* GXT: Ammu-Nation */;
			break;
		case 34:
			return "S_G_07" /* GXT: Ammu-Nation */;
			break;
		case 35:
			return "S_G_08" /* GXT: Ammu-Nation */;
			break;
		case 36:
			return "S_G_09" /* GXT: Ammu-Nation */;
			break;
		case 37:
			return "S_G_10" /* GXT: Ammu-Nation */;
			break;
		case 38:
			return "S_G_11" /* GXT: Ammu-Nation */;
			break;
		case 39:
			return "S_MO_01" /* GXT: Los Santos Customs */;
			break;
		case 40:
			return "S_MO_05" /* GXT: Los Santos Customs */;
			break;
		case 41:
			return "S_MO_06" /* GXT: Los Santos Customs */;
			break;
		case 42:
			return "S_MO_07" /* GXT: Beeker's Garage */;
			break;
		case 43:
			return "S_MO_08" /* GXT: Los Santos Customs */;
			break;
		case 44:
			return "S_MO_09" /* GXT: Benny's Original Motor Works */;
			break;
		case 45:
			switch (iParam1)
			{
				case 4:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_BIKER_ONE";
					}
					else
					{
						return "S_MO_10" /* GXT: Custom Mod Shop */;
					}
					break;
				case 5:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_BIKER_TWO";
					}
					else
					{
						return "S_MO_10" /* GXT: Custom Mod Shop */;
					}
					break;
				case 11:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_BUNKER";
					}
					else
					{
						return "S_MO_B" /* GXT: Bunker Vehicle Workshop */;
					}
					break;
				case 10:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_TRUCK";
					}
					else
					{
						return "S_MO_T" /* GXT: Weapon & Vehicle Workshop */;
					}
					break;
				case 12:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_HANGAR";
					}
					else
					{
						return "S_MO_HA" /* GXT: Hangar Aircraft Workshop */;
					}
					break;
				case 13:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_AOC";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 14:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_BASE";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 15:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_BUSINESS_HUB";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 16:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_HACKER_TRUCK";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 17:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_ARENA_WARS";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 18:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_CAR_MEET";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 19:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_TUNER_AUTO_SHOP";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
				case 20:
					if (bParam2)
					{
						return "PERSONAL_CAR_MOD_VARIATION_FIXER_HQ";
					}
					else
					{
						return "S_MO_AOC" /* GXT: Vehicle Workshop */;
					}
					break;
			}
			return "S_MO_11" /* GXT: Custom Auto Shop */;
			break;
		case 46:
			return "S_G_12" /* GXT: MOC Armory */;
			break;
		case 47:
			return "S_G_13" /* GXT: Avenger Armory */;
			break;
		case 48:
			return "S_G_14" /* GXT: Terrorbyte Armory */;
			break;
		case 49:
			return "S_G_15" /* GXT: Arena Armory */;
			break;
		case 52:
			return "S_G_16" /* GXT: Arcade Armory */;
			break;
		case 53:
			return "S_G_17" /* GXT: Kosatka Armory */;
			break;
		case 50:
			return "S_H_08" /* GXT: Penthouse Barber */;
			break;
		case 51:
			return "S_CL_09" /* GXT: Casino Store */;
			break;
		case 54:
			return "S_T_07" /* GXT: LS Car Meet Tattoos */;
			break;
		case 55:
			return "S_CL_10" /* GXT: Merch Shop */;
			break;
		case 56:
			return "S_G_18" /* GXT: Fixer Armory */;
			break;
		case 57:
			return "S_CL_11" /* GXT: Record A Studios */;
			break;
	}
	return "SHOP_NAME_EMPTY";
}

bool func_423(struct<3> Param0, struct<3> Param1, float fParam2, bool bParam3)//Position - 0x551E
{
	return MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Param1, bParam3) <= fParam2;
}

char* func_424(char* sParam0, bool bParam1, int iParam2)//Position - 0xF821
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return sLocal_20;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, sLocal_20))
	{
		return sLocal_20;
	}
	__LIB_2__.func_119(1, iParam2);
	if (bParam1)
	{
		return sParam0;
	}
	return HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(sParam0);
}

void func_425()//Position - 0x1307F
{
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 0);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 1);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 2);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 3);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 4);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 5);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 6);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 7);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 11);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 12);
	MISC::CLEAR_BIT(&(Global_2703735.f_3673), 15);
}

void func_426()//Position - 0x1347A
{
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 337 /*INPUT_VEH_HYDRAULICS_CONTROL_TOGGLE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 143 /*INPUT_MELEE_BLOCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 257 /*INPUT_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 282 /*INPUT_VEH_GUN_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 283 /*INPUT_VEH_GUN_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 284 /*INPUT_VEH_GUN_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 285 /*INPUT_VEH_GUN_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 102 /*INPUT_VEH_JUMP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 354 /*INPUT_VEH_BIKE_WINGS*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 74 /*INPUT_VEH_HEADLIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 345 /*INPUT_VEH_MELEE_HOLD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 346 /*INPUT_VEH_MELEE_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 347 /*INPUT_VEH_MELEE_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 74 /*INPUT_VEH_HEADLIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 36 /*INPUT_DUCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 345 /*INPUT_VEH_MELEE_HOLD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 346 /*INPUT_VEH_MELEE_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 347 /*INPUT_VEH_MELEE_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 91 /*INPUT_VEH_PASSENGER_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 92 /*INPUT_VEH_PASSENGER_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 81 /*INPUT_VEH_NEXT_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 82 /*INPUT_VEH_PREV_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 83 /*INPUT_VEH_NEXT_RADIO_TRACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 84 /*INPUT_VEH_PREV_RADIO_TRACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 101 /*INPUT_VEH_ROOF*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 337 /*INPUT_VEH_HYDRAULICS_CONTROL_TOGGLE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 53 /*INPUT_WEAPON_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 54 /*INPUT_WEAPON_SPECIAL_TWO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 47 /*INPUT_DETONATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 143 /*INPUT_MELEE_BLOCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 44 /*INPUT_COVER*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 282 /*INPUT_VEH_GUN_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 283 /*INPUT_VEH_GUN_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 284 /*INPUT_VEH_GUN_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 285 /*INPUT_VEH_GUN_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 114 /*INPUT_VEH_FLY_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 102 /*INPUT_VEH_JUMP*/, true);
}

void func_427(bool bParam0)//Position - 0x1578D
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_3, 24))
		{
			MISC::SET_BIT(&(Global_1946250.f_3), 24);
		}
	}
	else if (BitTest(Global_1946250.f_3, 24))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_3), 24);
	}
}

void func_428(bool bParam0)//Position - 0x157CE
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 24))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 24);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 24))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 24);
	}
}

void func_429(int iParam0)//Position - 0x168AF
{
	if (Global_1958711.f_5 != iParam0)
	{
		Global_1958711.f_5 = iParam0;
	}
}

void func_430(bool bParam0)//Position - 0x168CA
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 20))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 20);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 20))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 20);
	}
}

void func_431(bool bParam0)//Position - 0x170B2
{
	if (bParam0)
	{
		if (!Global_2815059.f_934)
		{
			Global_2815059.f_934 = 1;
		}
	}
	else if (Global_2815059.f_934)
	{
		Global_2815059.f_934 = 0;
	}
}

void func_432(bool bParam0)//Position - 0x17115
{
	if (bParam0 < 32)
	{
		if (BitTest(Global_2703735.f_61.f_9, bParam0))
		{
			MISC::CLEAR_BIT(&(Global_2703735.f_61.f_9), bParam0);
		}
	}
	else if (BitTest(Global_2703735.f_61.f_10, (bParam0 - 32)))
	{
		MISC::CLEAR_BIT(&(Global_2703735.f_61.f_10), (bParam0 - 32));
	}
}

void func_433(bool bParam0)//Position - 0x17165
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 27))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 27);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 27))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 27);
	}
}

void func_434(bool bParam0)//Position - 0x171CE
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 28))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 28);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4, 28))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 28);
	}
}

void func_435(bool bParam0)//Position - 0x17237
{
	if (bParam0 < 32)
	{
		if (!BitTest(Global_2703735.f_61.f_9, bParam0))
		{
			MISC::SET_BIT(&(Global_2703735.f_61.f_9), bParam0);
		}
	}
	else if (!BitTest(Global_2703735.f_61.f_10, (bParam0 - 32)))
	{
		MISC::SET_BIT(&(Global_2703735.f_61.f_10), (bParam0 - 32));
	}
}

int func_436(int iParam0, int iParam1, float fParam2)//Position - 0x1766A
{
	float fVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false) || iParam1)
		{
			if (ENTITY::IS_ENTITY_IN_WATER(iParam0))
			{
				fVar0 = ENTITY::GET_ENTITY_SUBMERGED_LEVEL(iParam0);
				if (fVar0 > fParam2)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_437(bool bParam0)//Position - 0x17850
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 9);
	}
}

int func_438(int iParam0)//Position - 0x178BD
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_458, 9);
	}
	return 0;
}

void func_439(bool bParam0)//Position - 0x1793C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 8))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 8);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_458), 8);
	}
}

int func_440(var uParam0, int iParam1, bool bParam2, bool bParam3)//Position - 0x18484
{
	ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, bParam2, bParam3);
	*uParam0 = NETWORK::NETWORK_GET_NETWORK_ID_FROM_ENTITY(iParam1);
	if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(*uParam0))
	{
		if (bParam2)
		{
			NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(*uParam0, true);
		}
		return 1;
	}
	return 0;
}

void func_441(int iParam0, char* sParam1)//Position - 0x18C63
{
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return;
	}
	VEHICLE::SET_VEHICLE_ENGINE_ON(iParam0, true, true, false);
	AUDIO::SET_VEHICLE_RADIO_ENABLED(iParam0, true);
	AUDIO::SET_VEHICLE_RADIO_LOUD(iParam0, false);
	AUDIO::SET_VEH_FORCED_RADIO_THIS_FRAME(iParam0);
	AUDIO::SET_VEH_RADIO_STATION(iParam0, sParam1);
	AUDIO::SET_RADIO_TO_STATION_NAME(sParam1);
}

bool func_442()//Position - 0x19663
{
	return BitTest(Global_1958691, 3);
}

int func_443(int iParam0)//Position - 0x197C3
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_348, 25);
	}
	return 0;
}

void func_444(var uParam0, var uParam1)//Position - 0x2F0C0
{
	uParam0->f_9 = uParam1;
}

bool func_445()//Position - 0x2F573
{
	return Global_2815059.f_934;
}

void func_446(bool bParam0)//Position - 0x2F7CF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 4))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 4);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 4))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 4);
	}
}

bool func_447()//Position - 0x2F834
{
	return BitTest(Global_2703735.f_3673, 14);
}

void func_448(bool bParam0)//Position - 0x2FB42
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 8))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 8);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 8))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 8);
	}
}

bool func_449()//Position - 0x30CBA
{
	return BitTest(Global_1946250.f_2, 27);
}

int func_450(int iParam0)//Position - 0x32D27
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 21);
	}
	return 0;
}

void func_451(bool bParam0)//Position - 0x32DDC
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 9))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 9);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 9))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 9);
	}
}

void func_452(bool bParam0)//Position - 0x32E45
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 8))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 8);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 8))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 8);
	}
}

void func_453(bool bParam0)//Position - 0x32EAE
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 6))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 6);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 6))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 6);
	}
}

void func_454(bool bParam0)//Position - 0x32F13
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 4))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 4);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2, 4))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_2), 4);
	}
}

int func_455(int iParam0)//Position - 0x32F78
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 18);
	}
	return 0;
}

int func_456(int iParam0)//Position - 0x32F9E
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_2, 4);
	}
	return 0;
}

int func_457(int iParam0)//Position - 0x357EB
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_3, 8);
	}
	return 0;
}

void func_458(int iParam0, var uParam1)//Position - 0x35EDC
{
	*uParam1 = 15271;
	switch (iParam0)
	{
		case 0:
			*uParam1 = 15276;
			break;
		case 1:
			*uParam1 = 15277;
			break;
		case 2:
			*uParam1 = 15278;
			break;
		case 3:
			*uParam1 = 15279;
			break;
		case 4:
			*uParam1 = 15280;
			break;
		case 5:
			*uParam1 = 15275;
			break;
		case 6:
			*uParam1 = 15272;
			break;
		case 7:
			*uParam1 = 15274;
			break;
		case 8:
			*uParam1 = 15273;
			break;
		case 9:
			*uParam1 = 15271;
			break;
	}
}

int func_459(int iParam0)//Position - 0x37030
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 19);
	}
	return 0;
}

void func_460(bool bParam0)//Position - 0x37146
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 25))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 25);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 25))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 25);
	}
}

void func_461(bool bParam0)//Position - 0x371AF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 6))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 6);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 6))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 6);
	}
}

void func_462(bool bParam0)//Position - 0x3720C
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 8))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 8);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 8))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 8);
	}
}

int func_463(int iParam0)//Position - 0x37275
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 18);
	}
	return 0;
}

int func_464(int iParam0)//Position - 0x37CB3
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_2689235[iParam0 /*453*/].f_318.f_1, 13);
	}
	return 0;
}

var func_465()//Position - 0x38106
{
	return Global_2725419;
}

void func_466(int iParam0)//Position - 0x3896E
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_2815059.f_303))
	{
		Global_2815059.f_5991 = 1;
		Global_2815059.f_5992 = iParam0;
	}
}

void func_467(bool bParam0)//Position - 0x3912B
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_1, 13))
		{
			MISC::SET_BIT(&(Global_1946250.f_1), 13);
		}
	}
	else if (BitTest(Global_1946250.f_1, 13))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_1), 13);
	}
}

void func_468(bool bParam0)//Position - 0x8C7EF
{
	if (bParam0)
	{
		if (!BitTest(Global_1946250.f_2, 18))
		{
			MISC::SET_BIT(&(Global_1946250.f_2), 18);
		}
	}
	else if (BitTest(Global_1946250.f_2, 18))
	{
		MISC::CLEAR_BIT(&(Global_1946250.f_2), 18);
	}
}

void func_469(int iParam0, int iParam1)//Position - 0x8CDD0
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (iParam1 < VEHICLE::GET_NUM_VEHICLE_MODS(iParam0, 48))
		{
			VEHICLE::SET_VEHICLE_MOD(iParam0, 48, iParam1, false);
		}
		else if (iParam1 < VEHICLE::GET_VEHICLE_LIVERY_COUNT(iParam0))
		{
			VEHICLE::SET_VEHICLE_LIVERY(iParam0, iParam1);
		}
	}
}

int func_470()//Position - 0x8CE22
{
	return __LIB_0__.func_228(30485, -1);
}

void func_471(int iParam0, int iParam1)//Position - 0x8CE32
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		switch (iParam1)
		{
			case 0:
				iVar0 = 21;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 1:
				iVar0 = 13;
				iVar1 = 25;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 2:
				iVar0 = 59;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 3:
				iVar0 = 86;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 4:
				iVar0 = 87;
				iVar1 = 84;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 5:
				iVar0 = 86;
				iVar1 = 60;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 6:
				iVar0 = 113;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 7:
				iVar0 = 24;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 8:
				iVar0 = 84;
				iVar1 = 84;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 9:
				iVar0 = 24;
				iVar1 = 124;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 10:
				iVar0 = 60;
				iVar1 = 60;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 11:
				iVar0 = 126;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 12:
				iVar0 = 12;
				iVar1 = 12;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 13:
				iVar0 = 87;
				iVar1 = 87;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 14:
				iVar0 = 39;
				iVar1 = 39;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			case 15:
				iVar0 = 121;
				iVar1 = 121;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 132;
				break;
			default:
				iVar0 = 21;
				iVar1 = 46;
				iVar2 = 3;
				iVar3 = 0;
				iVar4 = 1;
				iVar5 = 12;
				break;
		}
		VEHICLE::SET_VEHICLE_COLOURS(iParam0, iVar0, iVar1);
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(iParam0, iVar2, iVar3);
		VEHICLE::SET_VEHICLE_EXTRA_COLOUR_5(iParam0, iVar4);
		VEHICLE::SET_VEHICLE_EXTRA_COLOUR_6(iParam0, iVar5);
	}
}

int func_472()//Position - 0x8D073
{
	return __LIB_0__.func_228(30484, -1);
}

char* func_473()//Position - 0x1AB760
{
	return "TXTMSG";
}

int func_474(struct<3> Param0, int iParam1)//Position - 0x1ACA96
{
	switch (iParam1)
	{
		case 87:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1588.118f, -581.678f, 109.549f, -1556.568f, -559.578f, 127.049f, 38.1f, false, true))
			{
				return 1;
			}
			break;
		case 88:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -1411.432f, -480.399f, 80.276f, -1348.382f, -473.199f, 98.801f, 37.65f, false, true))
			{
				return 1;
			}
			break;
		case 89:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -183.232f, -625.231f, 164.81f, -92.457f, -555.531f, 221.735f, 117.125f, false, true))
			{
				return 1;
			}
			break;
		case 90:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -97.577f, -810.65f, 290.012f, -51.802f, -827.175f, 331.587f, 44.15f, false, true))
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_475(int iParam0)//Position - 0x1AD13A
{
	switch (iParam0)
	{
		case 422:
			return 64;
			break;
		case 528:
			return 528;
			break;
		case 529:
			return 529;
			break;
		case 530:
			return 530;
			break;
		case 531:
			return 531;
			break;
		case 532:
			return 532;
			break;
		case 533:
			return 533;
			break;
		case 534:
			return 534;
			break;
		case 512:
			return 512;
			break;
		case 558:
			return 558;
			break;
		case 559:
			return 559;
			break;
		case 560:
			return 560;
			break;
		case 561:
			return 561;
			break;
		case 562:
			return 562;
			break;
		case 563:
			return 563;
			break;
		case 595:
			return 595;
			break;
		case 596:
			return 596;
			break;
		case 597:
			return 597;
			break;
		case 598:
			return 598;
			break;
		case 599:
			return 599;
			break;
		case 600:
			return 600;
			break;
		case 601:
			return 601;
			break;
		case 602:
			return 602;
			break;
		case 603:
			return 603;
			break;
		case 589:
			return 589;
			break;
		case 631:
			return 631;
			break;
		case 632:
			return 632;
			break;
		case 633:
			return 633;
			break;
		case 634:
			return 634;
			break;
		case 635:
			return 635;
			break;
		case 636:
			return 636;
			break;
		case 637:
			return 637;
			break;
		case 640:
			return 640;
			break;
		case 658:
			return 658;
			break;
		case 659:
			return 659;
			break;
		case 660:
			return 660;
			break;
		case 661:
			return 661;
			break;
		case 662:
			return 662;
			break;
		case 663:
			return 663;
			break;
		case 664:
			return 664;
			break;
		case 665:
			return 665;
			break;
		case 666:
			return 666;
			break;
		case 667:
			return 667;
			break;
		case 668:
			return 668;
			break;
		case 669:
			return 669;
			break;
		case 646:
			return 646;
			break;
		case 742:
			return 742;
			break;
		case 746:
			return 746;
			break;
		case 753:
			return 753;
			break;
		case 758:
			return 758;
			break;
		case 348:
			return 348;
			break;
		case 749:
			return 749;
			break;
		case 757:
			return 757;
			break;
		case 754:
			return 754;
			break;
		case 745:
			return 745;
			break;
		case 755:
			return 755;
			break;
		case 759:
			return 759;
			break;
		case 747:
			return 747;
			break;
		case 748:
			return 748;
			break;
		case 750:
			return 750;
			break;
		case 824:
			return 824;
			break;
		case 825:
			return 825;
			break;
		case 823:
			return 823;
			break;
		case 820:
			return 820;
			break;
		case 821:
			return 821;
			break;
		case 818:
			return 818;
			break;
	}
	return iParam0;
}

int func_476(int iParam0)//Position - 0x1AF76D
{
	if ((iParam0 == joaat("lazer") || iParam0 == joaat("besra")) || iParam0 == joaat("hydra"))
	{
		return 1;
	}
	return 0;
}

int func_477(int iParam0)//Position - 0x1AF7AE
{
	switch (iParam0)
	{
		case joaat("voltic2"):
			return 533;
		case joaat("ruiner2"):
			return 530;
		case joaat("dune4"):
			return 531;
		case joaat("dune5"):
			return 531;
		case joaat("phantom2"):
			return 528;
		case joaat("technical2"):
			return 534;
		case joaat("technical3"):
			return 534;
		case joaat("boxville5"):
			return 529;
		case joaat("wastelander"):
			return 532;
		case joaat("blazer5"):
			return 512;
		case joaat("apc"):
			return 558;
		case joaat("oppressor"):
			return 559;
		case joaat("halftrack"):
			return 560;
		case joaat("dune3"):
			return 561;
		case joaat("tampa3"):
			return 562;
		case joaat("trailersmall2"):
			return 563;
		case joaat("alphaz1"):
			return 572;
		case joaat("bombushka"):
			return 573;
		case joaat("havok"):
			return 574;
		case joaat("howard"):
			return 575;
		case joaat("hunter"):
			return 576;
		case joaat("microlight"):
			return 577;
		case joaat("mogul"):
			return 578;
		case joaat("molotok"):
			return 579;
		case joaat("nokota"):
			return 580;
		case joaat("pyro"):
			return 581;
		case joaat("rogue"):
			return 582;
		case joaat("starling"):
			return 583;
		case joaat("seabreeze"):
			return 584;
		case joaat("tula"):
			return 585;
		case joaat("nightshark"):
			if (__LIB_1__.func_324(Global_4718592.f_168757) || __LIB_1__.func_86(Global_4718592.f_168757))
			{
				return 225;
			}
			break;
		case joaat("technical"):
			if (__LIB_1__.func_324(Global_4718592.f_168757))
			{
				return 534;
			}
			break;
		case joaat("stromberg"):
			return 595;
		case joaat("deluxo"):
			return 596;
		case joaat("thruster"):
			return 597;
		case joaat("khanjali"):
			return 598;
		case joaat("riot2"):
			return 599;
		case joaat("volatol"):
			return 600;
		case joaat("barrage"):
			return 601;
		case joaat("akula"):
			return 602;
		case joaat("chernobog"):
			return 603;
		case joaat("avenger"):
			return 589;
		case joaat("strikeforce"):
			return 640;
		case joaat("speedo4"):
			return 637;
		case joaat("mule4"):
			return 636;
		case joaat("pounder2"):
			return 635;
		case joaat("oppressor2"):
			return 639;
		case joaat("seasparrow"):
			return 612;
		case joaat("caracara"):
			return 613;
		case joaat("rrocket"):
			return 348;
		case joaat("kosatka"):
			return 760;
		case joaat("champion"):
			return 824;
		case joaat("buffalo4"):
			return 825;
		case joaat("deity"):
			return 823;
		case joaat("jubilee"):
			return 820;
		case joaat("granger2"):
			return 821;
		case joaat("patriot3"):
			return 818;
	}
	return -1;
}

void func_478(bool bParam0)//Position - 0x1B03F1
{
	if (bParam0 < 32)
	{
		if (BitTest(Global_2703735.f_61.f_11, bParam0))
		{
			MISC::CLEAR_BIT(&(Global_2703735.f_61.f_11), bParam0);
		}
	}
	else if (BitTest(Global_2703735.f_61.f_12, (bParam0 - 32)))
	{
		MISC::CLEAR_BIT(&(Global_2703735.f_61.f_12), (bParam0 - 32));
	}
}

bool func_479()//Position - 0x1C93EB
{
	return __LIB_0__.func_137(25516, -1);
}

bool func_480()//Position - 0x1C9464
{
	return __LIB_0__.func_137(25237, -1);
}

void func_481(bool bParam0)//Position - 0x1C9474
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 21);
	}
}

void func_482(bool bParam0)//Position - 0x1C94E1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 22))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 22);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293, 22))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_293), 22);
	}
}

void func_483(bool bParam0)//Position - 0x1C95BB
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 22))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 22);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 22))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 22);
	}
}

void func_484(bool bParam0)//Position - 0x1C9628
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 23))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 23);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 23))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 23);
	}
}

void func_485(int iParam0, bool bParam1)//Position - 0x15AE
{
	if (bParam1)
	{
		MISC::SET_BIT(&Global_32207, iParam0);
	}
	else
	{
		MISC::CLEAR_BIT(&Global_32207, iParam0);
	}
}

int func_486()//Position - 0x76BF6
{
	return joaat("taxi");
}

int func_487(var uParam0)//Position - 0x77768
{
	*uParam0 = 0;
	*uParam0 = 0;
	while (*uParam0 < 8)
	{
		if (!GRAPHICS::PROCGRASS_IS_CULLSPHERE_ENABLED(*uParam0))
		{
			return 1;
		}
		*uParam0++;
	}
	*uParam0 = -1;
	return 0;
}

int func_488(int iParam0)//Position - 0x7AAFA
{
	return __LIB_6__.func_837(iParam0, 5, 1);
}

int func_489(int iParam0)//Position - 0x7C469
{
	return __LIB_6__.func_837(iParam0, 0, 0);
}

int func_490(int* iParam0, int iParam1, bool bParam2)//Position - 0xF7B
{
	bool bVar0;
	bVar0 = BitTest(*iParam0, iParam1);
	if (bParam2)
	{
		if (!bVar0)
		{
			MISC::SET_BIT(iParam0, iParam1);
			return 1;
		}
	}
	else if (bVar0)
	{
		MISC::CLEAR_BIT(iParam0, iParam1);
		return 1;
	}
	return 0;
}

struct<4> func_491(int iParam0, bool bParam1, bool bParam2)//Position - 0x5CE
{
	struct<4> Var0;
	int iVar1;
	StringCopy(&Var0, "ARC_MAC_G", 16);
	if (bParam1)
	{
		if (iParam0 == 0)
		{
			StringCopy(&Var0, "ARC_MAC_GM0" /* GXT: Space Monkey 3 */, 16);
			return Var0;
		}
		else
		{
			StringCopy(&Var0, "ARC_MAC_DG", 16);
		}
	}
	if (bParam2)
	{
		if ((iParam0 == 17 || iParam0 == 18) || iParam0 == 19)
		{
			iVar1 = 15 + 1;
			iVar1 = (iVar1 + (iParam0 - 17));
			StringIntConCat(&Var0, iVar1, 16);
		}
		else if (iParam0 >= 16)
		{
			StringCopy(&Var0, "ARC_MAC_PT_G", 16);
			StringIntConCat(&Var0, iParam0, 16);
		}
		else
		{
			StringIntConCat(&Var0, iParam0, 16);
		}
	}
	else
	{
		StringIntConCat(&Var0, iParam0, 16);
	}
	return Var0;
}

int func_492(int iParam0)//Position - 0xBBE
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 28);
	}
	return 0;
}

void func_493(bool bParam0)//Position - 0x162C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 15))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 15);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 15))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 15);
	}
}

int func_494(int iParam0, int iParam1)//Position - 0x45C8
{
	switch (iParam0)
	{
		case 10:
			switch (iParam1)
			{
				case 1:
					return 1;
				case 2:
					return 2;
				case 3:
					return 3;
				case 4:
					return 4;
				default:
			}
			break;
		case 0:
			return 5;
		case 1:
			return 6;
		case 5:
			return 7;
		case 3:
			return 8;
		case 4:
			return 9;
		case 2:
			return 10;
		case 6:
			return 11;
		case 7:
			return 12;
		case 8:
			return 13;
		case 12:
			return 14;
		case 11:
			return 15;
		case 13:
			return 16;
		case 9:
			return 17;
		case 17:
			return 18;
		case 18:
			return 19;
		case 19:
			return 20;
		case 16:
			return 23;
		case 15:
			return 22;
		case 14:
			return 21;
	}
	return 0;
}

int func_495(int iParam0)//Position - 0x474C
{
	switch (iParam0)
	{
		case 31:
			return 30;
		case 30:
			return 31;
		case 13:
			return 14;
		case 14:
			return 13;
		case 15:
			return 16;
		case 16:
			return 15;
		case 8:
			return 7;
		case 7:
			return 8;
		default:
	}
	return iParam0;
}

int func_496(int iParam0, bool bParam1)//Position - 0x4D34
{
	switch (iParam0)
	{
		case 1:
		case 5:
		case 3:
		case 4:
		case 16:
			return 2;
			break;
		case 12:
		case 13:
		case 14:
			if (bParam1)
			{
				return 2;
			}
			break;
	}
	return 1;
}

int func_497(int iParam0)//Position - 0x50FD
{
	switch (iParam0)
	{
		case 12:
		case 11:
		case 13:
		case 14:
			return 1;
			break;
	}
	return 0;
}

int func_498(int iParam0)//Position - 0x51D7
{
	switch (iParam0)
	{
		case 10:
			return 1;
			break;
	}
	return 0;
}

void func_499(int iParam0, bool bParam1)//Position - 0x5246
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return;
	}
	if (bParam1)
	{
		if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_2, 0))
		{
			MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_408.f_2), 0);
		}
	}
	else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_2, 0))
	{
		MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_408.f_2), 0);
	}
}

int func_500()//Position - 0xD985
{
	return iLocal_123;
}

void func_501(int iParam0, bool bParam1)//Position - 0xF315
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return;
	}
	if (bParam1)
	{
		if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 25))
		{
			MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1), 25);
		}
	}
	else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 25))
	{
		MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1), 25);
	}
}

Vector3 func_502(int iParam0, int iParam1, int iParam2)//Position - 0x1341B
{
	return OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(__LIB_2__.func_392(iParam0, iParam2), __LIB_2__.func_391(iParam0, iParam2), func_529(iParam1, iParam2));
}

void func_503(int iParam0)//Position - 0x187AE6
{
	if (Global_75485 != iParam0)
	{
		Global_75485 = iParam0;
	}
}

int func_504(int iParam0)//Position - 0x916
{
	switch (iParam0)
	{
		case 1:
			return Global_262145.f_24416 /* Tunable: -1318722703 */;
		case 2:
			return Global_262145.f_24417 /* Tunable: -2136290534 */;
		case 3:
			return Global_262145.f_24418 /* Tunable: 1069721135 */;
		case 4:
			return Global_262145.f_24419 /* Tunable: -8586474 */;
		case 5:
			return Global_262145.f_24420 /* Tunable: -358911902 */;
		case 6:
			return Global_262145.f_24421 /* Tunable: -879486246 */;
		case 0:
			return Global_262145.f_24422 /* Tunable: -1168716160 */;
		default:
	}
	return 0;
}

int func_505()//Position - 0x19F7
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar2 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar2))
		{
			if (__LIB_0__.func_581(iVar2))
			{
				iVar1++;
			}
		}
		iVar0++;
	}
	return iVar1;
}

int func_506(int iParam0, int iParam1)//Position - 0x1E12
{
	int iVar0;
	if (__LIB_1__.func_346(iParam1) && iParam0 != __LIB_0__.func_160())
	{
		iVar0 = 0;
		while (iVar0 <= 5)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/] == iParam1)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

bool func_507(int iParam0)//Position - 0x24A5
{
	return Global_1853348[iParam0 /*834*/].f_267.f_278.f_5;
}

int func_508()//Position - 0x2BCB
{
	if (PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/) || PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 237 /*INPUT_CURSOR_ACCEPT*/))
	{
		return 1;
	}
	return 0;
}

int func_509(int iParam0)//Position - 0x4334
{
	struct<13> Var0;
	if (iParam0 != __LIB_0__.func_160())
	{
		Var0 = { __LIB_0__.func_604(iParam0) };
		if ((MISC::IS_ORBIS_VERSION() && !MISC::IS_PROSPERO_VERSION()) || MISC::IS_PC_VERSION())
		{
			if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
			{
				return 0;
			}
		}
		else if (__LIB_0__.func_53() || MISC::IS_PROSPERO_VERSION())
		{
			if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
			{
				if (NETWORK::NETWORK_CAN_VIEW_GAMER_USER_CONTENT(&Var0))
				{
					return 0;
				}
			}
		}
	}
	return 1;
}

int func_510(int iParam0)//Position - 0x4E10
{
	if (!iParam0 == __LIB_0__.func_160())
	{
		if (__LIB_1__.func_113(iParam0, 1))
		{
			return Global_2680265.f_818.f_11[__LIB_0__.func_603(iParam0)];
		}
	}
	return -1;
}

int func_511(char* sParam0)//Position - 0x82B9
{
	char cVar0[24];
	int iVar1;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		iVar1 = 0;
		while (iVar1 < HUD::GET_LENGTH_OF_LITERAL_STRING(sParam0))
		{
			StringConCat(&cVar0, " ", 24);
			iVar1++;
		}
		if (MISC::ARE_STRINGS_EQUAL(sParam0, &cVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_512(int iParam0, char* sParam1)//Position - 0x8430
{
	if ((((iParam0 == joaat("/") || iParam0 == joaat("/")) || iParam0 == joaat("/")) || MISC::ARE_STRINGS_EQUAL("\", sParam1)) || MISC::ARE_STRINGS_EQUAL("/", sParam1))
	{
		return 0;
	}
	if ((((((MISC::ARE_STRINGS_EQUAL("??", sParam1) || MISC::ARE_STRINGS_EQUAL("???", sParam1)) || MISC::ARE_STRINGS_EQUAL("??", sParam1)) || MISC::ARE_STRINGS_EQUAL("???", sParam1)) || MISC::ARE_STRINGS_EQUAL("??", sParam1)) || MISC::ARE_STRINGS_EQUAL("`", sParam1)) || MISC::ARE_STRINGS_EQUAL("??", sParam1))
	{
		return 1;
	}
	switch (iParam0)
	{
		case 837920498:
			return 1;
		default:
	}
	switch (iParam0)
	{
		case 600083096:
		case -1522340247:
		case -143650098:
		case -1065966372:
		case -2140887879:
		case 778141872:
		case -921127396:
		case -1071570387:
		case 1523669383:
		case -1830565405:
		case 1821506824:
		case 266453929:
		case 1045078138:
		case -211416398:
		case 247251347:
		case 546465086:
		case -1123279309:
		case -346162474:
		case -916605278:
		case -752367050:
		case -1215032561:
		case -1377632339:
		case -2013350887:
		case -643246228:
		case 1983189126:
		case -1534956256:
		case 1234777875:
		case 458939031:
		case -2743410:
		case -464425851:
		case -299335629:
		case -1301641536:
		case 85241359:
		case 1695870474:
		case -513447975:
		case -992366910:
		case -995381666:
		case 2050333043:
		case -996692410:
		case -94758462:
		case -1273164471:
		case -1771875894:
		case -2134203011:
			return 1;
		default:
	}
	switch (iParam0)
	{
		case joaat("0"):
		case joaat("1"):
		case joaat("2"):
		case joaat("3"):
		case joaat("4"):
		case joaat("5"):
		case joaat("6"):
		case joaat("7"):
		case joaat("8"):
		case joaat("9"):
		case joaat("!"):
		case 1108028131:
		case joaat("#"):
		case joaat("$"):
		case joaat("%"):
		case joaat("&"):
		case 94056980:
		case joaat("("):
		case joaat(")"):
		case joaat("*"):
		case joaat("+"):
		case joaat(","):
		case joaat("-"):
		case joaat("."):
		case joaat(":"):
		case joaat(";"):
		case joaat("<"):
		case joaat("="):
		case joaat(">"):
		case joaat("?"):
		case joaat("@"):
		case joaat("["):
		case joaat("]"):
		case joaat("^"):
		case joaat("_"):
		case joaat("`"):
		case joaat("{"):
		case joaat("|"):
		case joaat("}"):
		case joaat("~"):
		case -1156959575:
		case 1114287026:
		case 383898785:
		case 1667493284:
		case 1390726294:
		case 811599757:
		case 80523367:
		case -1034900624:
		case -1075435881:
		case 1028923773:
		case 999169521:
		case 1239258034:
		case joaat("a"):
		case joaat("b"):
		case joaat("c"):
		case joaat("d"):
		case joaat("e"):
		case joaat("f"):
		case joaat("g"):
		case joaat("h"):
		case joaat("i"):
		case joaat("j"):
		case joaat("k"):
		case 194886717:
		case joaat("l"):
		case joaat("m"):
		case joaat("n"):
		case joaat("o"):
		case joaat("p"):
		case joaat("q"):
		case joaat("r"):
		case joaat("s"):
		case joaat("t"):
		case joaat("u"):
		case joaat("v"):
		case joaat("w"):
		case joaat("x"):
		case joaat("y"):
		case joaat("z"):
		case joaat("'"):
		case joaat("¡"):
		case joaat("´"):
		case 2085797791:
		case 1779178258:
		case joaat("¿"):
		case 1002815086:
		case joaat("º"):
		case -1463969696:
		case 929379417:
		case 1872733385:
		case 26298542:
		case -1893407789:
		case 322169851:
		case joaat("¥"):
		case 1155256502:
		case -303947068:
		case joaat("à"):
		case 1580073450:
		case -1816040176:
		case joaat("è"):
		case -570130027:
		case 847817372:
		case joaat("ì"):
		case 1518140036:
		case joaat("ò"):
		case -1243958978:
		case -1415865152:
		case joaat("ù"):
		case -1417405279:
		case -891331753:
		case joaat("ç"):
		case joaat("ß"):
		case -1249660752:
		case -262035881:
		case -1831113888:
		case -636388917:
		case joaat("Ä"):
		case 682858238:
		case -95077822:
		case -2061447209:
		case -1075133078:
		case 831170732:
		case 1608844640:
		case -1396465892:
		case joaat("Ö"):
		case -1509813883:
		case joaat("Ü"):
		case -1203980806:
		case joaat("Ñ"):
		case joaat("Ç"):
		case 318032343:
		case 1076044851:
		case -1061182110:
		case -1366949649:
		case -1984415916:
		case 2004521689:
		case -475305151:
		case -763836196:
		case -1664459388:
		case 1373751212:
		case -605463615:
		case -1828697628:
		case 1537399602:
		case -1398407881:
		case 927175280:
		case 615869784:
		case -1212476575:
		case -307232946:
		case -286883401:
			return 1;
		default:
	}
	switch (iParam0)
	{
		case joaat("!"):
		case 1108028131:
		case joaat("#"):
		case joaat("$"):
		case joaat("%"):
		case joaat("&"):
		case 94056980:
		case joaat("("):
		case joaat(")"):
		case joaat("*"):
		case joaat("+"):
		case joaat(","):
		case joaat("-"):
		case joaat("."):
		case joaat(":"):
		case joaat(";"):
		case joaat("<"):
		case joaat("="):
		case joaat(">"):
		case joaat("?"):
		case joaat("@"):
		case joaat("["):
		case joaat("/"):
		case joaat("]"):
		case joaat("^"):
		case joaat("_"):
		case joaat("`"):
		case joaat("{"):
		case joaat("|"):
		case joaat("}"):
		case joaat("~"):
		case -1156959575:
		case 1114287026:
		case 383898785:
		case 1667493284:
		case 1390726294:
		case 811599757:
		case 80523367:
		case -1034900624:
		case -1075435881:
		case 1028923773:
		case 999169521:
		case 1239258034:
		case joaat("a"):
		case joaat("b"):
		case joaat("c"):
		case joaat("d"):
		case joaat("e"):
		case joaat("f"):
		case joaat("g"):
		case joaat("h"):
		case joaat("i"):
		case joaat("j"):
		case joaat("k"):
		case joaat("l"):
		case joaat("m"):
		case joaat("n"):
		case joaat("o"):
		case joaat("p"):
		case joaat("q"):
		case joaat("r"):
		case joaat("s"):
		case joaat("t"):
		case joaat("u"):
		case joaat("v"):
		case joaat("w"):
		case joaat("x"):
		case joaat("y"):
		case joaat("z"):
		case joaat("'"):
		case joaat("¡"):
		case joaat("´"):
		case 2085797791:
		case 1779178258:
		case joaat("¿"):
		case 1002815086:
		case joaat("º"):
		case -1463969696:
		case 929379417:
		case 1872733385:
		case 26298542:
		case -1893407789:
		case 322169851:
		case 600083096:
		case joaat("¥"):
		case 1155256502:
		case -303947068:
		case joaat("à"):
		case 1580073450:
		case -1816040176:
		case joaat("è"):
		case -570130027:
		case 847817372:
		case joaat("ì"):
		case 1518140036:
		case joaat("ò"):
		case -1243958978:
		case -1415865152:
		case joaat("ù"):
		case -1417405279:
		case -891331753:
		case joaat("ç"):
		case joaat("ß"):
		case -1249660752:
		case -262035881:
		case -1831113888:
		case -636388917:
		case joaat("Ä"):
		case 682858238:
		case -95077822:
		case -2061447209:
		case -1075133078:
		case 831170732:
		case 1608844640:
		case -1396465892:
		case joaat("Ö"):
		case -1509813883:
		case joaat("Ü"):
		case -1203980806:
		case joaat("Ñ"):
		case joaat("Ç"):
			return 1;
		default:
	}
	return 0;
}

void func_513(int iParam0)//Position - 0x9DC6
{
	Global_2725911 = iParam0;
}

int func_514()//Position - 0x9DD4
{
	if ((((LOCALIZATION::GET_CURRENT_LANGUAGE() == 7 || LOCALIZATION::GET_CURRENT_LANGUAGE() == 8) || LOCALIZATION::GET_CURRENT_LANGUAGE() == 9) || LOCALIZATION::GET_CURRENT_LANGUAGE() == 10) || LOCALIZATION::GET_CURRENT_LANGUAGE() == 12)
	{
		return 1;
	}
	return 0;
}

int func_515(int iParam0)//Position - 0x1D29
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar1))
		{
			if ((Global_1892703[iParam0 /*599*/].f_10.f_34 != __LIB_0__.func_160() && Global_1892703[iParam0 /*599*/].f_10.f_34 == iVar1) && Global_1892703[iVar1 /*599*/].f_10.f_34 == iParam0)
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

bool func_516(int iParam0)//Position - 0x9D4B
{
	return Global_1640649[iParam0] != 0;
}

int func_517(int iParam0)//Position - 0xA3BC
{
	switch (iParam0)
	{
		case 0:
			return 3840;
		case 1:
			return 3841;
		case 2:
			return 3842;
		case 3:
			return 3843;
		case 4:
			return 3844;
		case 5:
			return 5443;
		default:
	}
	return 3840;
}

int func_518(int iParam0)//Position - 0xC466
{
	switch (iParam0)
	{
		case 0:
			return 7628;
		case 1:
			return 7629;
		case 2:
			return 7630;
		case 3:
			return 7631;
		case 4:
			return 7632;
		case 5:
			return 15373;
		default:
	}
	return 7628;
}

bool func_519(int iParam0)//Position - 0xDFBF
{
	return (iParam0 > -1 && iParam0 < 5);
}

void func_520(int iParam0, int iParam1)//Position - 0xE458
{
	if (iParam0 != -1 && iParam1 != Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[iParam0 /*13*/].f_2)
	{
		Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[iParam0 /*13*/].f_2 = iParam1;
	}
}

void func_521()//Position - 0xEBC3
{
	Global_1976976 = 1;
}

void func_522(int iParam0)//Position - 0xED5D
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_14[iVar0]), iVar1);
}

int func_523(int iParam0)//Position - 0xF3E0
{
	switch (iParam0)
	{
		case 0:
			return 3954;
		case 1:
			return 3955;
		case 2:
			return 3956;
		case 3:
			return 3957;
		case 4:
			return 3958;
		case 5:
			return 5459;
		default:
	}
	return 3954;
}

int func_524(int iParam0)//Position - 0x12489
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 <= 5)
	{
		if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/] != 0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_525(int iParam0)//Position - 0x103F
{
	switch (iParam0)
	{
		case 0:
			return 15381;
		case 1:
			return 15382;
		case 2:
			return 15428;
		case 3:
			return 15429;
		case 4:
			return 15430;
		case 5:
			return 15431;
		case 6:
			return 15491;
		case 7:
			return 15432;
		case 8:
			return 15433;
		case 9:
			return 15434;
		case 10:
			return 15435;
		case 11:
			return 15436;
		case 12:
			return 15437;
		case 13:
			return 15438;
		case 14:
			return 15439;
		case 15:
			return 15447;
		case 16:
			return 15448;
		case 17:
			return 15449;
		case 18:
			return 15450;
		case 19:
			return 15451;
		case 20:
			return 15452;
		case 21:
			return 15453;
		case 22:
			return 15454;
		case 23:
			return 15455;
		case 24:
			return 15456;
		case 25:
			return 15457;
		case 26:
			return 15458;
		case 27:
			return 15459;
		case 28:
			return 15460;
		case 29:
			return 15461;
		case 30:
			return 15462;
		case 31:
			return 15463;
		case 32:
			return 15464;
		case 33:
			return 15465;
		case 34:
			return 15466;
		case 35:
			return 15467;
		case 36:
			return 15468;
		case 37:
			return 15469;
		case 38:
			return 15470;
		case 39:
			return 15471;
		case 40:
			return 15472;
		case 41:
			return 15473;
		case 42:
			return 15474;
		case 43:
			return 15492;
		case 44:
			return 15493;
		case 45:
			return 15494;
		case 46:
			return 15495;
		case 47:
			return 15496;
		case 48:
			return 15497;
		case 49:
			return 15498;
		case 50:
			return 15499;
		default:
	}
	return 15381;
}

int func_526(int iParam0)//Position - 0x12B5
{
	if (Global_262145.f_21901 /* Tunable: GR_RESEARCH_UNLOCK_ALL */)
	{
		return 1;
	}
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_21850 /* Tunable: GR_RESEARCH_UNLOCK_APC_SAM_BATTERY */;
		case 1:
			return Global_262145.f_21851 /* Tunable: GR_RESEARCH_UNLOCK_BALLISTIC_EQUIPMENT */;
		case 2:
			return Global_262145.f_21852 /* Tunable: GR_RESEARCH_UNLOCK_HALF_TRACK_20MM_QUAD_CANNONS */;
		case 3:
			return Global_262145.f_21853 /* Tunable: GR_RESEARCH_UNLOCK_WEAPONIZED_TAMPA_DUAL_REMOTE_MINIGUN */;
		case 4:
			return Global_262145.f_21854 /* Tunable: GR_RESEARCH_UNLOCK_WEAPONIZED_TAMPA_REAR_FIRING_MORTAR */;
		case 5:
			return Global_262145.f_21855 /* Tunable: GR_RESEARCH_UNLOCK_WEAPONIZED_TAMPA_FRONT_MISSILE_LAUNCHERS */;
		case 6:
			return Global_262145.f_21856 /* Tunable: GR_RESEARCH_UNLOCK_WEAPONIZED_TAMPA_HEAVY_CHASSIS_ARMOR */;
		case 7:
			return Global_262145.f_21857 /* Tunable: GR_RESEARCH_UNLOCK_DUNE_FAV_40MM_GRENADE_LAUNCHER */;
		case 8:
			return Global_262145.f_21858 /* Tunable: GR_RESEARCH_UNLOCK_DUNE_FAV_762MM_MINIGUN */;
		case 9:
			return Global_262145.f_21859 /* Tunable: GR_RESEARCH_UNLOCK_INSURGENT_PICK_UP_CUSTOM_50_CAL_MINIGUN */;
		case 10:
			return Global_262145.f_21860 /* Tunable: GR_RESEARCH_UNLOCK_INSURGENT_PICK_UP_CUSTOM_HEAVY_ARMOR_PLATING */;
		case 11:
			return Global_262145.f_21861 /* Tunable: GR_RESEARCH_UNLOCK_TECHNICAL_CUSTOM_762MM_MINIGUN */;
		case 12:
			return Global_262145.f_21862 /* Tunable: GR_RESEARCH_UNLOCK_TECHNICAL_CUSTOM_RAM_BAR */;
		case 13:
			return Global_262145.f_21863 /* Tunable: GR_RESEARCH_UNLOCK_TECHNICAL_CUSTOM_BRUTE_BAR */;
		case 14:
			return Global_262145.f_21864 /* Tunable: GR_RESEARCH_UNLOCK_TECHNICAL_CUSTOM_HEAVY_CHASSIS_ARMOR */;
		case 15:
			return Global_262145.f_21865 /* Tunable: GR_RESEARCH_UNLOCK_OPPRESSOR_ROCKETS */;
		case 16:
			return Global_262145.f_21866 /* Tunable: GR_RESEARCH_UNLOCK_FRACTAL_LIVERY_SET */;
		case 17:
			return Global_262145.f_21867 /* Tunable: GR_RESEARCH_UNLOCK_DIGITAL_LIVERY_SET */;
		case 18:
			return Global_262145.f_21868 /* Tunable: GR_RESEARCH_UNLOCK_GEOMETRIC_LIVERY_SET */;
		case 19:
			return Global_262145.f_21869 /* Tunable: GR_RESEARCH_UNLOCK_NATURE_RESERVE_LIVERY */;
		case 20:
			return Global_262145.f_21870 /* Tunable: GR_RESEARCH_UNLOCK_NAVAL_BATTLE_LIVERY */;
		case 21:
			return Global_262145.f_21871 /* Tunable: GR_RESEARCH_UNLOCK_ANTI_AIRCRAFT_TRAILER_DUAL_20MM_FLAK_CANNON */;
		case 22:
			return Global_262145.f_21872 /* Tunable: GR_RESEARCH_UNLOCK_ANTI_AIRCRAFT_TRAILER_HOMING_MISSILE_BATTERY */;
		case 23:
			return Global_262145.f_21873 /* Tunable: GR_RESEARCH_UNLOCK_MOBILE_OPERATIONS_CENTER_REAR_TURRETS */;
		case 24:
			return Global_262145.f_21874 /* Tunable: GR_RESEARCH_UNLOCK_INCENDIARY_ROUNDS */;
		case 25:
			return Global_262145.f_21875 /* Tunable: GR_RESEARCH_UNLOCK_HOLLOW_POINT_ROUNDS */;
		case 26:
			return Global_262145.f_21876 /* Tunable: GR_RESEARCH_UNLOCK_ARMOR_PIERCING_ROUNDS */;
		case 27:
			return Global_262145.f_21877 /* Tunable: GR_RESEARCH_UNLOCK_FULL_METAL_JACKET_ROUNDS */;
		case 28:
			return Global_262145.f_21878 /* Tunable: GR_RESEARCH_UNLOCK_EXPLOSIVE_ROUNDS */;
		case 29:
			return Global_262145.f_21879 /* Tunable: GR_RESEARCH_UNLOCK_PISTOL_MK_II_RAIL_MOUNT */;
		case 30:
			return Global_262145.f_21880 /* Tunable: GR_RESEARCH_UNLOCK_PISTOL_MK_II_COMPENSATOR */;
		case 31:
			return Global_262145.f_21881 /* Tunable: GR_RESEARCH_UNLOCK_SMG_MK_II_HOLOGRAPHIC_SIGHT */;
		case 32:
			return Global_262145.f_21882 /* Tunable: GR_RESEARCH_UNLOCK_SMG_MK_II_HEAVY_BARREL */;
		case 33:
			return Global_262145.f_21883 /* Tunable: GR_RESEARCH_UNLOCK_HEAVY_SNIPER_MK_II_NIGHT_VISION_SCOPE */;
		case 34:
			return Global_262145.f_21884 /* Tunable: GR_RESEARCH_UNLOCK_HEAVY_SNIPER_MK_II_THERMAL_SCOPE */;
		case 35:
			return Global_262145.f_21885 /* Tunable: GR_RESEARCH_UNLOCK_HEAVY_SNIPER_MK_II_HEAVY_BARREL */;
		case 36:
			return Global_262145.f_21886 /* Tunable: GR_RESEARCH_UNLOCK_COMBAT_MG_MK_II_HOLOGRAPHIC_SIGHT */;
		case 37:
			return Global_262145.f_21887 /* Tunable: GR_RESEARCH_UNLOCK_COMBAT_MG_MK_II_HEAVY_BARREL */;
		case 38:
			return Global_262145.f_21888 /* Tunable: GR_RESEARCH_UNLOCK_ASSAULT_RIFLE_MK_II_HOLOGRAPHIC_SIGHT */;
		case 39:
			return Global_262145.f_21889 /* Tunable: GR_RESEARCH_UNLOCK_ASSAULT_RIFLE_MK_II_HEAVY_BARREL */;
		case 40:
			return Global_262145.f_21890 /* Tunable: GR_RESEARCH_UNLOCK_CARBINE_RIFLE_MK_II_HOLOGRAPHIC_SIGHT */;
		case 41:
			return Global_262145.f_21891 /* Tunable: GR_RESEARCH_UNLOCK_CARBINE_RIFLE_MK_II_HEAVY_BARREL */;
		case 42:
			return Global_262145.f_21892 /* Tunable: GR_RESEARCH_UNLOCK_PROXIMITY_MINES */;
		case 43:
			return Global_262145.f_21893 /* Tunable: GR_RESEARCH_UNLOCK_TIGER_STRIPE */;
		case 44:
			return Global_262145.f_21894 /* Tunable: GR_RESEARCH_UNLOCK_SKULL */;
		case 45:
			return Global_262145.f_21895 /* Tunable: GR_RESEARCH_UNLOCK_SESSANTA_NOVE */;
		case 46:
			return Global_262145.f_21896 /* Tunable: GR_RESEARCH_UNLOCK_PERSEUS */;
		case 47:
			return Global_262145.f_21897 /* Tunable: GR_RESEARCH_UNLOCK_LEOPARD_PRINT */;
		case 48:
			return Global_262145.f_21898 /* Tunable: GR_RESEARCH_UNLOCK_ZEBRA_STRIPE */;
		case 49:
			return Global_262145.f_21899 /* Tunable: GR_RESEARCH_UNLOCK_GEOMETRY */;
		case 50:
			return Global_262145.f_21900 /* Tunable: -890026214 */;
		default:
	}
	return 0;
}

void func_527(char* sParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x1ADF
{
	switch (iParam1)
	{
		case 5:
			switch (iParam2)
			{
				case 0:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_EQUIP_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 1:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_STAFF_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 2:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_SEC_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 3:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_DECOR_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 4:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_DECOR_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 5:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_DECOR_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 6:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_ACCOM_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 7:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_RANGE_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 8:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_RANGE_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 9:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_GNLCK_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 10:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_TRNPT_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
				case 11:
					StringCopy(sParam0, "FA_UPGRADE_WEAPONS_TRNPT_", 64);
					StringIntConCat(sParam0, iParam3, 64);
					StringConCat(sParam0, "_t0_v", 64);
					StringIntConCat(sParam0, iParam4, 64);
					break;
			}
			break;
	}
}

int func_528(int iParam0, int iParam1)//Position - 0x1D5E
{
	int iVar0;
	iVar0 = __LIB_1__.func_347(iParam1);
	switch (iVar0)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					return Global_262145.f_18284 /* Tunable: BIKER_DISABLE_DOCUMENTS_EQUIPMENT_UPGRADE */;
				case 2:
					return Global_262145.f_18283 /* Tunable: BIKER_DISABLE_DOCUMENTS_SECURITY_UPGRADE */;
				case 1:
					return Global_262145.f_18282 /* Tunable: BIKER_DISABLE_DOCUMENTS_STAFF_UPGRADE */;
				default:
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					return Global_262145.f_18287 /* Tunable: BIKER_DISABLE_COUNTERFEIT_CASH_EQUIPMENT_UPGRADE */;
				case 2:
					return Global_262145.f_18286 /* Tunable: BIKER_DISABLE_COUNTERFEIT_CASH_SECURITY_UPGRADE */;
				case 1:
					return Global_262145.f_18285 /* Tunable: BIKER_DISABLE_COUNTERFEIT_CASH_STAFF_UPGRADE */;
				default:
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					return Global_262145.f_18291 /* Tunable: BIKER_DISABLE_CRACK_STAFF_UPGRADE */;
				case 2:
					return Global_262145.f_18292 /* Tunable: BIKER_DISABLE_CRACK_SECURITY_UPGRADE */;
				case 1:
					return Global_262145.f_18291 /* Tunable: BIKER_DISABLE_CRACK_STAFF_UPGRADE */;
				default:
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					return Global_262145.f_18290 /* Tunable: BIKER_DISABLE_METH_EQUIPMENT_UPGRADE */;
				case 2:
					return Global_262145.f_18289 /* Tunable: BIKER_DISABLE_METH_SECURITY_UPGRADE */;
				case 1:
					return Global_262145.f_18288 /* Tunable: BIKER_DISABLE_METH_STAFF_UPGRADE */;
				default:
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					return Global_262145.f_18281 /* Tunable: BIKER_DISABLE_WEED_EQUIPMENT_UPGRADE */;
				case 2:
					return Global_262145.f_18280 /* Tunable: BIKER_DISABLE_WEED_SECURITY_UPGRADE */;
				case 1:
					return Global_262145.f_18279 /* Tunable: BIKER_DISABLE_WEED_STAFF_UPGRADE */;
				default:
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					return 0;
				case 2:
					return 0;
				case 1:
					return 0;
				case 3:
					return 0;
				case 4:
					return 0;
				case 5:
					return 0;
				case 6:
					return 0;
				case 7:
					return 0;
				case 8:
					return 0;
				case 9:
					return 0;
				case 10:
					return 0;
				case 11:
					return 0;
				default:
			}
			break;
	}
	return 1;
}

bool func_529(int iParam0)//Position - 0xA3F9
{
	return Global_1640642[iParam0] != 0;
}

void func_530(int iParam0)//Position - 0xAA0B
{
	if (iLocal_123 != iParam0)
	{
		iLocal_123 = iParam0;
	}
}

int func_531()//Position - 0xB7EF
{
	if ((__LIB_0__.func_228(15268, -1) == 1 || __LIB_0__.func_228(15269, -1) == 1) || __LIB_0__.func_228(15270, -1) == 1)
	{
		return 1;
	}
	return 0;
}

void func_532(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0xC45F
{
	int iVar0;
	if (iParam0 == __LIB_0__.func_160())
	{
		return;
	}
	if (__LIB_1__.func_346(iParam1))
	{
		iVar0 = 0;
		while (iVar0 <= 5)
		{
			if (Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/] == iParam1)
			{
				if (bParam3)
				{
					Global_1853348[iParam0 /*834*/].f_267.f_271 = iParam2;
				}
				else
				{
					Global_1853348[iParam0 /*834*/].f_267.f_191[iVar0 /*13*/].f_9 = iParam2;
				}
			}
			iVar0++;
		}
	}
}

int func_533(int iParam0)//Position - 0xCAE9
{
	switch (iParam0)
	{
		case 0:
			return 9416;
		case 1:
			return 9417;
		case 2:
			return 9418;
		case 3:
			return 9419;
		case 4:
			return 9420;
		case 5:
			return 15372;
		default:
	}
	return 9416;
}

void func_534(int iParam0, int iParam1, bool bParam2)//Position - 0xCBB2
{
	if (bParam2)
	{
		Global_2787779 = iParam1;
		return;
	}
	Global_2787772[iParam0] = iParam1;
}

int func_535(int iParam0)//Position - 0xE0F5
{
	switch (iParam0)
	{
		case 0:
			return 9394;
		case 1:
			return 9395;
		case 2:
			return 9396;
		case 3:
			return 9397;
		case 4:
			return 9398;
		case 5:
			return 15371;
		default:
	}
	return 9394;
}

int func_536(int iParam0, bool bParam1)//Position - 0xECCD
{
	char cVar0[64];
	if (bParam1)
	{
		if (iParam0 == 5)
		{
			StringCopy(&cVar0, "MP_STAT_RESTOTALFORFACTORY5_v0", 64);
		}
	}
	else
	{
		switch (iParam0)
		{
			case 0:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY0_v0", 64);
				break;
			case 1:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY1_v0", 64);
				break;
			case 2:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY2_v0", 64);
				break;
			case 3:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY3_v0", 64);
				break;
			case 4:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY4_v0", 64);
				break;
			case 5:
				StringCopy(&cVar0, "MP_STAT_PRODTOTALFORFACTORY5_v0", 64);
				break;
			}
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_537(int iParam0)//Position - 0xF18D
{
	switch (iParam0)
	{
		case 0:
			return 3850;
		case 1:
			return 3851;
		case 2:
			return 3852;
		case 3:
			return 3853;
		case 4:
			return 3854;
		case 5:
			return 5446;
		default:
	}
	return 3850;
}

int func_538(int iParam0, int iParam1)//Position - 0xF319
{
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					return 3857;
				case 1:
					return 3858;
				case 2:
					return 3859;
				case 3:
					return 3860;
				case 4:
					return 3861;
				case 5:
					return 5380;
				default:
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					return 3881;
				case 1:
					return 3882;
				case 2:
					return 3883;
				case 3:
					return 3884;
				case 4:
					return 3885;
				case 5:
					return 5379;
				default:
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					return 3886;
				case 1:
					return 3887;
				case 2:
					return 3888;
				case 3:
					return 3889;
				case 4:
					return 3890;
				case 5:
					return 5381;
				default:
			}
			break;
	}
	return 3857;
}

int func_539(int iParam0, int iParam1)//Position - 0xF629
{
	char cVar0[64];
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP0_v0", 64);
					break;
				case 1:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP1_v0", 64);
					break;
				case 2:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP2_v0", 64);
					break;
				case 3:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP3_v0", 64);
					break;
				case 4:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP4_v0", 64);
					break;
				case 5:
					StringCopy(&cVar0, "MP_STAT_FACTORYSETUP5_v0", 64);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES0_v0", 64);
					break;
				case 1:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES1_v0", 64);
					break;
				case 2:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES2_v0", 64);
					break;
				case 3:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES3_v0", 64);
					break;
				case 4:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES4_v0", 64);
					break;
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_EQUIPMENT_v0", 64);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES0_1_v0", 64);
					break;
				case 1:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES1_1_v0", 64);
					break;
				case 2:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES2_1_v0", 64);
					break;
				case 3:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES3_1_v0", 64);
					break;
				case 4:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES4_1_v0", 64);
					break;
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_STAFF_v0", 64);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES0_2_v0", 64);
					break;
				case 1:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES1_2_v0", 64);
					break;
				case 2:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES2_2_v0", 64);
					break;
				case 3:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES3_2_v0", 64);
					break;
				case 4:
					StringCopy(&cVar0, "MP_STAT_FACTORYUPGRADES4_2_v0", 64);
					break;
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_SECURITY_v0", 64);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_DECOR_v0", 64);
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_SAVEBED_v0", 64);
					break;
			}
			break;
		case 6:
			switch (iParam0)
			{
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_FIRING_RANGE_v0", 64);
					break;
			}
			break;
		case 7:
			switch (iParam0)
			{
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_GUNLOCKER_v0", 64);
					break;
			}
			break;
		case 8:
			switch (iParam0)
			{
				case 5:
					StringCopy(&cVar0, "MP_STAT_BUNKER_TRANSPORTATION_v0", 64);
					break;
			}
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_540(int iParam0, int iParam1)//Position - 0x100A6
{
	return SYSTEM::CEIL(((SYSTEM::TO_FLOAT(iParam0) / SYSTEM::TO_FLOAT(iParam1)) * 100f));
}

int func_541(int iParam0)//Position - 0x100DA
{
	switch (iParam0)
	{
		case 0:
			return 3902;
		case 1:
			return 3931;
		case 2:
			return 3935;
		case 3:
			return 3939;
		case 4:
			return 3943;
		case 5:
			return 5454;
		default:
	}
	return 3902;
}

int func_542(int iParam0)//Position - 0x101B8
{
	switch (iParam0)
	{
		case 0:
			return 3913;
		case 1:
			return 3946;
		case 2:
			return 3948;
		case 3:
			return 3950;
		case 4:
			return 3952;
		case 5:
			return 5457;
		default:
	}
	return 3913;
}

int func_543(int iParam0)//Position - 0x10227
{
	switch (iParam0)
	{
		case 0:
			return 3914;
		case 1:
			return 3947;
		case 2:
			return 3949;
		case 3:
			return 3951;
		case 4:
			return 3953;
		case 5:
			return 5458;
		default:
	}
	return 3914;
}

int func_544(int iParam0)//Position - 0x10296
{
	switch (iParam0)
	{
		case 0:
			return 3903;
		case 1:
			return 3932;
		case 2:
			return 3936;
		case 3:
			return 3940;
		case 4:
			return 3944;
		case 5:
			return 5455;
		default:
	}
	return 3903;
}

int func_545(int iParam0)//Position - 0x10305
{
	switch (iParam0)
	{
		case 0:
			return 3904;
		case 1:
			return 3933;
		case 2:
			return 3937;
		case 3:
			return 3941;
		case 4:
			return 3945;
		case 5:
			return 5456;
		default:
	}
	return 3902;
}

int func_546(int iParam0)//Position - 0x1095F
{
	switch (iParam0)
	{
		case 0:
			return 9389;
		case 1:
			return 9390;
		case 2:
			return 9391;
		case 3:
			return 9392;
		case 4:
			return 9393;
		case 5:
			return 15374;
		default:
	}
	return 9389;
}

int func_547(int iParam0)//Position - 0x10B4E
{
	int iVar0;
	switch (iParam0)
	{
		case 0:
			iVar0 = 22018;
			break;
		case 1:
			iVar0 = 22019;
			break;
		case 2:
			iVar0 = 22020;
			break;
		case 3:
			iVar0 = 22021;
			break;
		case 4:
			iVar0 = 22022;
			break;
	}
	return iVar0;
}

int func_548(int iParam0)//Position - 0x10C1F
{
	switch (iParam0)
	{
		case 1:
			return 12212;
		case 2:
			return 12213;
		case 3:
			return 12214;
		case 4:
			return 12215;
		case 5:
			return 12216;
		case 6:
			return 12217;
		case 0:
			return 12218;
		default:
	}
	return 12212;
}

int func_549(int iParam0, int iParam1)//Position - 0x10DA1
{
	bool bVar0;
	if (!__LIB_9__.func_519(iParam0) || !__LIB_4__.func_926(iParam1))
	{
		return 0;
	}
	if (iParam0 < 4)
	{
		bVar0 = (iParam0 * 7 + iParam1);
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_2, bVar0))
		{
			return 1;
		}
	}
	else
	{
		bVar0 = iParam1;
		if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_295.f_3, bVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_550(int iParam0)//Position - 0x110C9
{
	switch (iParam0)
	{
		case 0:
			return 3915;
		case 1:
			return 3916;
		case 2:
			return 3917;
		case 3:
			return 3918;
		case 4:
			return 3919;
		case 5:
			return 5450;
		default:
	}
	return 3915;
}

int func_551(int iParam0)//Position - 0x11123
{
	switch (iParam0)
	{
		case 0:
			return 3920;
		case 1:
			return 3921;
		case 2:
			return 3922;
		case 3:
			return 3923;
		case 4:
			return 3924;
		case 5:
			return 5451;
		default:
	}
	return 3920;
}

int func_552(int iParam0)//Position - 0x1117D
{
	switch (iParam0)
	{
		case 0:
			return 3925;
		case 1:
			return 3926;
		case 2:
			return 3927;
		case 3:
			return 3928;
		case 4:
			return 3929;
		case 5:
			return 5452;
		default:
	}
	return 3925;
}

void func_553(int iParam0)//Position - 0x11334
{
	MISC::CLEAR_BIT(&Global_1640673, iParam0);
	MISC::CLEAR_BIT(&Global_1640673, iParam0 + 6);
}

int func_554(int iParam0)//Position - 0x11352
{
	switch (iParam0)
	{
		case 0:
			return 7633;
		case 1:
			return 7634;
		case 2:
			return 7635;
		case 3:
			return 7636;
		case 4:
			return 7637;
		case 5:
			return 15383;
		default:
	}
	return 7633;
}

void func_555(int iParam0, int iParam1)//Position - 0x113AC
{
	if (iParam0 != -1 && iParam1 != Global_1640666[iParam0])
	{
		Global_1640666[iParam0] = iParam1;
	}
}

int func_556(int iParam0)//Position - 0x113D5
{
	switch (iParam0)
	{
		case 0:
			return 3845;
		case 1:
			return 3846;
		case 2:
			return 3847;
		case 3:
			return 3848;
		case 4:
			return 3849;
		case 5:
			return 5444;
		default:
	}
	return 3845;
}

int func_557(int iParam0)//Position - 0x1142F
{
	switch (iParam0)
	{
		case 0:
			return 9350;
		case 1:
			return 9351;
		case 2:
			return 9352;
		case 3:
			return 9353;
		case 4:
			return 9354;
		case 5:
			return 15266;
		default:
	}
	return 9350;
}

var func_558()//Position - 0x116D2
{
	return Global_4535596;
}

int func_559(int iParam0)//Position - 0x116DE
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORFACTORY5_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

int func_560(int iParam0)//Position - 0x11DED
{
	switch (iParam0)
	{
		case 0:
			return 3876;
		case 1:
			return 3877;
		case 2:
			return 3878;
		case 3:
			return 3879;
		case 4:
			return 3880;
		case 5:
			return 5447;
		default:
	}
	return 3876;
}

void func_561(int iParam0)//Position - 0x12417
{
	Global_4535596 = iParam0;
}

void func_562(char* sParam0, bool bParam1)//Position - 0x12596
{
	if (bParam1)
	{
		StringCopy(sParam0, "IG_SELL_0_t0_v0", 64);
	}
	else
	{
		StringCopy(sParam0, "IG_BUY_0_t0_v0", 64);
	}
}

int func_563()//Position - 0x1E85
{
	int iVar0;
	int iVar1;
	iVar0 = 225;
	__LIB_1__.func_327(iVar0, &iVar1, 0);
	if (iVar1 >= 0 && Global_1585857[iVar1 /*142*/].f_66 == joaat("mule4"))
	{
		return 1;
	}
	return 0;
}

int func_564()//Position - 0x200C
{
	int iVar0;
	int iVar1;
	iVar0 = 226;
	__LIB_1__.func_327(iVar0, &iVar1, 0);
	if (iVar1 >= 0 && Global_1585857[iVar1 /*142*/].f_66 == joaat("pounder2"))
	{
		return 1;
	}
	return 0;
}

void func_565(char* sParam0, char* sParam1)//Position - 0x37E1
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam1);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, true, true, -1);
}

int func_566(int iParam0)//Position - 0x3A66
{
	switch (iParam0)
	{
		case 1:
			return 5;
		case 2:
			return 4;
		case 3:
			return 3;
		case 4:
			return 1;
		case 5:
			return 0;
		case 6:
			return 2;
		default:
	}
	return -1;
}

void func_567()//Position - 0xC430
{
	AUDIO::PLAY_SOUND_FRONTEND(-1, "Click_Link", "GTAO_SMG_Hangar_Computer_Sounds", true);
}

int func_568(float fParam0)//Position - 0xD4BB
{
	return SYSTEM::ROUND(((SYSTEM::TO_FLOAT(1000) * fParam0) / 100f));
}

float func_569(int iParam0)//Position - 0xD532
{
	return ((100f * SYSTEM::TO_FLOAT(iParam0)) / SYSTEM::TO_FLOAT(1000));
}

float func_570(int iParam0)//Position - 0xD54E
{
	switch (iParam0)
	{
		case 6:
			return (100f * Global_262145.f_24356 /* Tunable: 1474162560 */);
		case 5:
			return (100f * Global_262145.f_24356 /* Tunable: 1474162560 */);
		default:
	}
	return 100f;
}

float func_571(int iParam0)//Position - 0xD58E
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case default:
	}
	return 0f;
}

bool func_572()//Position - 0xD6FC
{
	return Global_1964706 != -1;
}

void func_573(bool bParam0)//Position - 0xF2B6
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 31))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 31);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 31))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 31);
	}
}

bool func_574()//Position - 0x100E2
{
	return __LIB_0__.func_137(22184, -1);
}

bool func_575()//Position - 0x10134
{
	return __LIB_0__.func_137(22103, -1);
}

void func_576(var uParam0)//Position - 0x10144
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_6 = uParam0;
}

int func_577(int iParam0)//Position - 0x10370
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		if ((Global_4718592.f_162510 == 0 || Global_4718592.f_162510 == 1) || Global_4718592.f_162510 == 2)
		{
			return 1;
		}
		return 0;
	}
	if ((BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 2) || BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 3)) || BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 4))
	{
		return 1;
	}
	return 0;
}

bool func_578(int iParam0)//Position - 0x10ADB
{
	return (iParam0 > -1 && iParam0 < 32);
}

char* func_579(int iParam0)//Position - 0x11EDE
{
	switch (__LIB_8__.func_941(iParam0))
	{
		case 6554:
			return "MP_STAT_NIGHTCLUB_STYLE";
			break;
		case 6555:
			return "MP_STAT_NIGHTCLUB_LIGHTING";
			break;
		case 6556:
			return "MP_STAT_NIGHTCLUB_DJCHOICE";
			break;
		case 6557:
			return "MP_STAT_NIGHTCLUB_MOD_4";
			break;
		case 6542:
			return "MP_STAT_BUSINESSHUB_MOD_2";
			break;
		case 7215:
			return "MP_STAT_PROP_NIGHTCLUB_NAME_ID";
			break;
		case 6558:
			return "MP_STAT_NIGHTCLUB_MOD_5";
			break;
		case 6559:
			return "MP_STAT_NIGHTCLUB_MOD_6";
			break;
		case 6560:
			return "MP_STAT_NIGHTCLUB_MOD_7";
			break;
	}
	return "unknown!!!";
}

int func_580()//Position - 0x12451
{
	return iLocal_130;
}

bool func_581(float fParam0, float fParam1, float fParam2, int iParam3)//Position - 0x12978
{
	if (iParam3 <= 0)
	{
		return 0;
	}
	return fParam0 < (fParam1 * fParam2);
}

float func_582(int iParam0)//Position - 0x12992
{
	int iVar0;
	iVar0 = iParam0;
	return SYSTEM::TO_FLOAT(iVar0);
}

int func_583(int iParam0)//Position - 0x139CD
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = (iParam0 + iVar0);
		if (!__LIB_0__.func_137(iVar1, -1))
		{
			return 0;
		}
		iVar0++;
	}
	return 1;
}

int func_584(int iParam0)//Position - 0x15F36
{
	switch (iParam0)
	{
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
			return 1;
		default:
	}
	return 0;
}

int func_585(int iParam0, int iParam1)//Position - 0x15F7A
{
	int iVar0;
	int iVar1;
	iVar1 = iParam0;
	if (iVar1 != -1)
	{
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (Global_1892703[iVar1 /*599*/].f_10.f_492[iVar0] != 0 && Global_1892703[iVar1 /*599*/].f_10.f_492[iVar0] == iParam1)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_586()//Position - 0x16A85
{
	switch (Global_1578970)
	{
		case 0:
			return 110;
		case 1:
			return 125;
		case 2:
			return 50;
		case 3:
			return 70;
		case 4:
			return 90;
		default:
	}
	return 0;
}

int func_587(int iParam0)//Position - 0x16ED9
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (Global_4718592.f_162510.f_4 == 1 && BitTest(Global_4718592.f_162510.f_14, 2));
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 18);
}

int func_588(int iParam0)//Position - 0x16F2E
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return (Global_4718592.f_162510.f_4 == 0 && BitTest(Global_4718592.f_162510.f_14, 2));
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 17);
}

int func_589(int iParam0)//Position - 0x16F83
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 2;
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 16);
}

int func_590(int iParam0)//Position - 0x16FC6
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 1;
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 15);
}

int func_591(int iParam0)//Position - 0x17009
{
	if (NETWORK::NETWORK_IS_ACTIVITY_SESSION())
	{
		return Global_4718592.f_162510.f_3 == 0;
	}
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_336.f_1, 14);
}

int func_592()//Position - 0xC65D9
{
	if (__LIB_0__.func_649(&Global_1578987) && !func_5(&Global_1578987, 300000, 0))
	{
		return 1;
	}
	return 0;
}

int func_593()//Position - 0x124E
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (Global_78319)
	{
		return 0;
	}
	iVar2 = 0;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4)
	{
		iVar2 = 1;
	}
	if (Global_4541507 || iVar2)
	{
		return 1;
	}
	return 1;
}

int func_594()//Position - 0x1295
{
	if (((Global_20266.f_1 == 1 || Global_20266.f_1 == 3) || Global_20266.f_1 == 0) || Global_20210 == 1)
	{
		Global_20253 = 1;
		return 1;
	}
	return 0;
}

void func_595(float fParam0, float fParam1, char* sParam2, int iParam3)//Position - 0xCF62
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(sParam2);
	HUD::END_TEXT_COMMAND_DISPLAY_TEXT(fParam0, fParam1, iParam3);
}

int func_596(int iParam0, int iParam1, int iParam2)//Position - 0xEC59
{
	if (PAD::IS_CONTROL_JUST_PRESSED(iParam0, iParam1) || (iParam2 == 1 && PAD::IS_DISABLED_CONTROL_JUST_PRESSED(iParam0, iParam1)))
	{
		if (MISC::IS_PC_VERSION())
		{
			if (MISC::UPDATE_ONSCREEN_KEYBOARD() == 0 || (NETWORK::NETWORK_TEXT_CHAT_IS_TYPING() && PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/)))
			{
				return 0;
			}
		}
		if (HUD::IS_PAUSE_MENU_ACTIVE() || HUD::IS_WARNING_MESSAGE_ACTIVE())
		{
			return 0;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

bool func_597()//Position - 0xECFE
{
	return BitTest(Global_1958711, 18);
}

bool func_598()//Position - 0xF3AA
{
	return BitTest(Global_1958711, 17);
}

int func_599()//Position - 0xFD72
{
	int iVar0;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (VEHICLE::IS_VEHICLE_SEAT_FREE(iVar0, -1, false))
			{
				return 1;
			}
			else if (!VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) == PLAYER::PLAYER_PED_ID())
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_600()//Position - 0x1B9
{
	if (Global_8742 == 1 || Global_20266.f_1 < 7)
	{
		Global_20253 = 1;
		return 1;
	}
	return 0;
}

void func_601()//Position - 0x520
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		AUDIO::PLAY_SOUND_FRONTEND(-1, "Menu_Back", &Global_20255, true);
	}
}

bool func_602()//Position - 0x2F18
{
	return Global_60335;
}

int func_603()//Position - 0x72E3
{
	if (Global_43052 == 15)
	{
		return 0;
	}
	return 1;
}

int func_604(int iParam0, int iParam1)//Position - 0x7820
{
	int iVar0;
	if ((iParam0 != 0 && iParam0 != 1) && iParam0 != 2)
	{
		if ((iParam1 == 0 || iParam1 == 1) || iParam1 == 2)
		{
			iVar0 = iParam1;
			iParam1 = iParam0;
			iParam0 = iVar0;
		}
	}
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 10;
					break;
				case 1:
					return 0;
					break;
				case 2:
					return 2;
					break;
				case 3:
					return 10;
					break;
				case 4:
					return 5;
					break;
				case 5:
					return 8;
					break;
				default:
					return 10;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 10;
					break;
				case 2:
					return 1;
					break;
				case 3:
					return 3;
					break;
				case 4:
					return 6;
					break;
				case 5:
					return 10;
					break;
				default:
					return 10;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 0:
					return 2;
					break;
				case 1:
					return 1;
					break;
				case 2:
					return 10;
					break;
				case 3:
					return 4;
					break;
				case 4:
					return 7;
					break;
				case 5:
					return 10;
					break;
				default:
					return 10;
					break;
			}
			break;
	}
	return 10;
}

var func_605(int iParam0)//Position - 0x7A02
{
	return Global_1998[iParam0 /*29*/].f_11;
}

void func_606()//Position - 0x956C
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		if (Global_20266 == 0)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 1)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 2)
		{
			switch (Global_113386.f_14051[Global_20266 /*20*/].f_6)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				default:
					break;
				}
		}
		if (Global_20266 == 3)
		{
			switch (Global_4541505)
			{
				case 1:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 0);
					break;
				case 2:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 1);
					break;
				case 3:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 2);
					break;
				case 4:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 3);
					break;
				case 5:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 4);
					break;
				case 6:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 5);
					break;
				case 7:
					PLAYER::SET_PLAYER_PHONE_PALETTE_IDX(PLAYER::PLAYER_ID(), 6);
					break;
				default:
					break;
				}
			}
	}
}

int func_607()//Position - 0x9E3E
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		if (Global_20266.f_1 == 10 || Global_20266.f_1 == 9)
		{
			if (Global_20209 == 0)
			{
				if (Global_7451 != 128)
				{
					if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						if (Global_21605 != 2)
						{
						}
					}
				}
			}
		}
		if (__LIB_0__.func_39(14))
		{
			return 0;
		}
		if (PED::IS_PED_IN_COVER(PLAYER::PLAYER_PED_ID(), false))
		{
			return 0;
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			if (!CAM::IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING())
			{
				if (ENTITY::IS_ENTITY_IN_WATER(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
				{
					return 0;
				}
			}
		}
		if (((PED::IS_PED_SWIMMING(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || (PED::IS_PED_HANGING_ON_TO_VEHICLE(PLAYER::PLAYER_PED_ID()) && !(BitTest(Global_4718592.f_37, 17) && (NETWORK::NETWORK_IS_ACTIVITY_SESSION() || Global_1922883))))
		{
			return 0;
		}
		if (Global_112434)
		{
			return 0;
		}
	}
	if (Global_78319)
	{
		return 0;
	}
	iVar2 = 0;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4 && (iVar0 == 0 || CAM::IS_CINEMATIC_FIRST_PERSON_VEHICLE_INTERIOR_CAM_RENDERING()))
	{
		iVar2 = 1;
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
				if ((((((((VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iVar3)) || VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(iVar3))) || VEHICLE::IS_THIS_MODEL_A_QUADBIKE(ENTITY::GET_ENTITY_MODEL(iVar3))) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("seashark")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("seashark2")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("rhino")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("submersible")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("submersible2")) || ENTITY::GET_ENTITY_MODEL(iVar3) == joaat("toro"))
				{
					iVar2 = 0;
				}
			}
		}
	}
	if (Global_4541507 || iVar2 == 1)
	{
		if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("apptrackify")) > 0 || Global_113386.f_14051.f_89)
		{
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("michael2")) > 0)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

void func_608(int iParam0)//Position - 0xA5AF
{
	StringCopy(&(Global_113386.f_20410[iParam0 /*16*/]), "", 16);
	StringCopy(&(Global_113386.f_20410[iParam0 /*16*/].f_4), "", 16);
	Global_113386.f_20410[iParam0 /*16*/].f_8 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_9 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_11 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_10 = -1;
	Global_113386.f_20410[iParam0 /*16*/].f_12 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_13 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_14 = 0;
	Global_113386.f_20410[iParam0 /*16*/].f_15 = 0;
}

void func_609(int iParam0, int iParam1)//Position - 0xA649
{
	Global_113386.f_20410[iParam0 /*16*/] = { Global_113386.f_20410[iParam1 /*16*/] };
	Global_113386.f_20410[iParam0 /*16*/].f_4 = { Global_113386.f_20410[iParam1 /*16*/].f_4 };
	Global_113386.f_20410[iParam0 /*16*/].f_8 = Global_113386.f_20410[iParam1 /*16*/].f_8;
	Global_113386.f_20410[iParam0 /*16*/].f_10 = Global_113386.f_20410[iParam1 /*16*/].f_10;
	Global_113386.f_20410[iParam0 /*16*/].f_9 = Global_113386.f_20410[iParam1 /*16*/].f_9;
	Global_113386.f_20410[iParam0 /*16*/].f_11 = Global_113386.f_20410[iParam1 /*16*/].f_11;
	Global_113386.f_20410[iParam0 /*16*/].f_12 = Global_113386.f_20410[iParam1 /*16*/].f_12;
	Global_113386.f_20410[iParam0 /*16*/].f_13 = Global_113386.f_20410[iParam1 /*16*/].f_13;
	Global_113386.f_20410[iParam0 /*16*/].f_14 = Global_113386.f_20410[iParam1 /*16*/].f_14;
	Global_113386.f_20410[iParam0 /*16*/].f_15 = Global_113386.f_20410[iParam1 /*16*/].f_15;
}

int func_610(char* sParam0)//Position - 0xA987
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_20410.f_145)
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam0, &(Global_113386.f_20410[iVar0 /*16*/])))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_611()//Position - 0xAAEE
{
	return Global_78581;
}

int func_612(char* sParam0)//Position - 0xBA35
{
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "0"))
	{
		return 0;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "1"))
	{
		return 1;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "2"))
	{
		return 2;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "3"))
	{
		return 3;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "4"))
	{
		return 4;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "5"))
	{
		return 5;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "6"))
	{
		return 6;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "7"))
	{
		return 7;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "8"))
	{
		return 8;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "9"))
	{
		return 9;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "A"))
	{
		return 10;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "B"))
	{
		return 11;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "C"))
	{
		return 12;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "D"))
	{
		return 13;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "E"))
	{
		return 14;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "F"))
	{
		return 15;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "G"))
	{
		return 16;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "H"))
	{
		return 17;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "I"))
	{
		return 18;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "J"))
	{
		return 19;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "K"))
	{
		return 20;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "L"))
	{
		return 21;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "M"))
	{
		return 22;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "N"))
	{
		return 23;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "O"))
	{
		return 24;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "P"))
	{
		return 25;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Q"))
	{
		return 26;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "R"))
	{
		return 27;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "S"))
	{
		return 28;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "T"))
	{
		return 29;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "U"))
	{
		return 30;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "V"))
	{
		return 31;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "W"))
	{
		return 32;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "X"))
	{
		return 33;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Y"))
	{
		return 34;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "Z"))
	{
		return 35;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam0, "z"))
	{
		return -1;
	}
	return -1;
}

void func_613()//Position - 0xC15B
{
	if (__LIB_9__.func_593())
	{
		if (Global_20469 == 0)
		{
			MOBILE::CELL_SET_INPUT(2);
		}
		else
		{
			MOBILE::CELL_SET_INPUT(1);
		}
	}
}

void func_614()//Position - 0xC521
{
	if (__LIB_9__.func_593())
	{
		MOBILE::CELL_SET_INPUT(5);
	}
}

int func_615(int iParam0)//Position - 0xD3BA
{
	int iVar0;
	int iVar1;
	if (NETWORK::NETWORK_CLAN_SERVICE_IS_VALID() && NETWORK::NETWORK_HAS_SOCIAL_CLUB_ACCOUNT())
	{
		iVar0 = NETWORK::NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT();
		if (iVar0 > 0)
		{
			iVar1 = 0;
			while (iVar1 < iVar0)
			{
				NETWORK::NETWORK_CLAN_GET_MEMBERSHIP_DESC(&Global_2787435, iVar1);
				if (iParam0 == Global_2787435)
				{
					return 1;
				}
				iVar1++;
			}
		}
	}
	return 0;
}

void func_616()//Position - 0x5EFA
{
	MISC::SET_BIT(&(Global_1888862[PLAYER::PLAYER_ID() /*120*/].f_29), 12);
}

void func_617(var uParam0)//Position - 0x5FFD
{
	Global_2714762.f_42 = uParam0;
}

int func_618(int iParam0)//Position - 0x60A0
{
	switch (iParam0)
	{
		case 3:
		case 8:
		case 14:
		case 15:
			return 1;
		default:
	}
	return 0;
}

void func_619(int iParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, char* sParam5, char* sParam6)//Position - 0x4F68
{
	GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(iParam0, sParam1);
	__LIB_0__.func_478(sParam2);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam3))
	{
		__LIB_0__.func_478(sParam3);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam4))
	{
		__LIB_0__.func_478(sParam4);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam5))
	{
		__LIB_0__.func_478(sParam5);
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
	{
		__LIB_0__.func_478(sParam6);
	}
	GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
}

int func_620()//Position - 0x5961
{
	int iVar0;
	int iVar1;
	iVar0 = CAM::GET_CAM_ACTIVE_VIEW_MODE_CONTEXT();
	iVar1 = CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(iVar0);
	if (iVar1 == 4)
	{
		return 1;
	}
	return 0;
}

bool func_621()//Position - 0x7D8
{
	return BitTest(Global_1977048.f_1, 31);
}

void func_622()//Position - 0x5D8C
{
	Global_2714762.f_717 = 1;
}

void func_623(int iParam0)//Position - 0x9092
{
	iLocal_131 = iParam0;
}

int func_624(int iParam0)//Position - 0x9784
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_27, 1);
	}
	return 0;
}

int func_625(int iParam0)//Position - 0x9885
{
	if (iParam0 != -1)
	{
		return BitTest(Global_1977138[iParam0 /*57*/].f_27, 4);
	}
	return 0;
}

int func_626(int iParam0, int iParam1)//Position - 0x993A
{
	if (iParam0 != -1)
	{
		if (iParam1 >= 0 && iParam1 < 3)
		{
			return Global_1977138[iParam0 /*57*/].f_27.f_17[iParam1 /*3*/];
		}
	}
	return -1;
}

int func_627(int iParam0, int iParam1)//Position - 0x9C54
{
	if (iParam0 != -1)
	{
		if (iParam1 >= 0 && iParam1 < 3)
		{
			return Global_1977138[iParam0 /*57*/].f_27.f_17[iParam1 /*3*/].f_1;
		}
	}
	return 0;
}

int func_628(int iParam0, int iParam1, int iParam2)//Position - 0x5323
{
	struct<3> Var0;
	Var0 = -1;
	Var0.f_1 = -1;
	Var0.f_2 = -1;
	switch (iParam1)
	{
		case 43:
			return 3;
		case 17:
		case 18:
		case 15:
			return 2;
		case 12:
		case 13:
			if (iParam2 != __LIB_0__.func_160())
			{
				if (__LIB_1__.func_113(iParam2, 1))
				{
					Var0 = { __LIB_9__.func_30(iParam2) };
				}
			}
			else
			{
				return 4;
			}
			if (Var0.f_1 == 4)
			{
				return 4;
			}
			else
			{
				return 2;
			}
			break;
		case 53:
			if (iParam0 == 1)
			{
			}
			break;
	}
	return 1;
}

int func_629()//Position - 0x96FE
{
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_191[5 /*13*/].f_4 == 1 && !__LIB_9__.func_516(5))
	{
		return 1;
	}
	return 0;
}

int func_630(int iParam0)//Position - 0x9F41
{
	int iVar0;
	if (__LIB_2__.func_141(iParam0))
	{
		iVar0 = 0;
		while (iVar0 <= 4)
		{
			if (iParam0 == Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/])
			{
				return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/].f_1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_631()//Position - 0xA279
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/] != 0)
		{
			iVar1++;
		}
		iVar0++;
	}
	return iVar1;
}

int func_632(int iParam0)//Position - 0xA3BE
{
	if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iParam0 /*3*/] != 0)
	{
		return Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iParam0 /*3*/];
	}
	return 0;
}

bool func_633(int iParam0)//Position - 0xD7F1
{
	return __LIB_2__.func_78(iParam0) != 0;
}

int func_634(int iParam0, var uParam1, int iParam2, bool bParam3)//Position - 0xDCE7
{
	int iVar0;
	int iVar1;
	iVar1 = NETWORK::GET_NETWORK_TIME();
	if (bParam3)
	{
		iVar1 = MISC::GET_GAME_TIMER();
	}
	iVar0 = MISC::ABSI((iParam2 - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(iVar1, iParam0))));
	iVar0 = (iVar0 / 1000);
	return iVar0;
}

int func_635(int iParam0)//Position - 0xDD1F
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return Global_1853348[iParam0 /*834*/].f_267.f_278.f_5;
}

int func_636(var uParam0)//Position - 0x10B5B
{
	int iVar0;
	var uVar1;
	iVar0 = uParam0;
	if (STATS::STAT_GET_INT(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_637(var uParam0, var uParam1)//Position - 0x10F73
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_194 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_194.f_1 = uParam1;
}

void func_638(var uParam0)//Position - 0x10FC6
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_212 = uParam0;
}

bool func_639()//Position - 0x1170F
{
	return BitTest(uLocal_109, 0);
}

void func_640()//Position - 0xB3B
{
	if (__LIB_9__.func_593())
	{
		if (Global_20469 == 0)
		{
			MOBILE::CELL_SET_INPUT(1);
		}
		else
		{
			MOBILE::CELL_SET_INPUT(2);
		}
	}
}

void func_641(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4)//Position - 0x2443
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[0] = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[1] = uParam1;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[2] = uParam2;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187[3] = uParam3;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_187.f_5 = uParam4;
}

void func_642(int iParam0, int iParam1, bool bParam2)//Position - 0x2950
{
	*iParam1 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iParam0) / 32f));
	*bParam2 = (iParam0 - *iParam1 * 32);
}

int func_643(int iParam0)//Position - 0x3789
{
	if (__LIB_0__.func_603(iParam0) == __LIB_0__.func_160())
	{
		return 0;
	}
	return Global_1892703[iParam0 /*599*/].f_10.f_19;
}

int func_644(int iParam0)//Position - 0xB1E5
{
	if (iParam0 == __LIB_0__.func_160())
	{
		return 0;
	}
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 19);
}

int func_645(int iParam0)//Position - 0x145FF
{
	int iVar0;
	if (iParam0 == 0)
	{
		return 0;
	}
	if (!STREAMING::IS_MODEL_A_VEHICLE(iParam0))
	{
		return 0;
	}
	iVar0 = VEHICLE::GET_VEHICLE_CLASS_FROM_NAME(iParam0);
	if ((((((((((((((VEHICLE::IS_THIS_MODEL_A_BOAT(iParam0) || VEHICLE::IS_THIS_MODEL_A_PLANE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_HELI(iParam0)) || VEHICLE::IS_THIS_MODEL_A_BICYCLE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_PLANE(iParam0)) || VEHICLE::IS_THIS_MODEL_A_JETSKI(iParam0)) || VEHICLE::IS_THIS_MODEL_A_TRAIN(iParam0)) || iVar0 == 2) || iVar0 == 12) || iVar0 == 18) || iVar0 == 19) || iVar0 == 11) || iVar0 == 20) || iVar0 == 10) || iVar0 == 17)
	{
		return 0;
	}
	return 1;
}

int func_646(int iParam0)//Position - 0x146D4
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case 3:
			return joaat("prototipo");
		case 4:
		case 5:
		case 6:
			return joaat("tyrus");
		case 7:
		case 8:
		case 9:
			return joaat("bestiagts");
		case 10:
		case 11:
		case 12:
			return joaat("t20");
		case 13:
		case 14:
		case 15:
			return joaat("sheava");
		case 16:
		case 17:
		case 18:
			return joaat("osiris");
		case 19:
		case 20:
		case 21:
			return joaat("fmj");
		case 22:
		case 23:
		case 24:
			return joaat("reaper");
		case 25:
		case 26:
		case 27:
			return joaat("pfister811");
		case 28:
		case 29:
		case 30:
			return joaat("alpha");
		case 31:
		case 32:
		case 33:
			return joaat("mamba");
		case 34:
		case 35:
		case 36:
			return joaat("tampa");
		case 37:
		case 38:
		case 39:
			return joaat("btype3");
		case 40:
		case 41:
		case 42:
			return joaat("feltzer3");
		case 43:
		case 44:
		case 45:
			return joaat("ztype");
		case 46:
		case 47:
		case 48:
			return joaat("tropos");
		case 49:
		case 50:
		case 51:
			return joaat("entityxf");
		case 52:
		case 53:
		case 54:
			return joaat("sultanrs");
		case 55:
		case 56:
		case 57:
			return joaat("zentorno");
		case 58:
		case 59:
		case 60:
			return joaat("omnis");
		case 61:
		case 62:
		case 63:
			return joaat("coquette3");
		case 64:
		case 65:
		case 66:
			return joaat("seven70");
		case 67:
		case 68:
		case 69:
			return joaat("verlierer2");
		case 70:
		case 71:
		case 72:
			return joaat("feltzer2");
		case 73:
		case 74:
		case 75:
			return joaat("coquette2");
		case 76:
		case 77:
		case 78:
			return joaat("cheetah");
		case 79:
		case 80:
		case 81:
			return joaat("nightshade");
		case 82:
		case 83:
		case 84:
			return joaat("banshee2");
		case 85:
		case 86:
		case 87:
			return joaat("turismor");
		case 88:
		case 89:
		case 90:
			return joaat("massacro");
		case 91:
		case 92:
		case 93:
			return joaat("sabregt2");
		case 94:
		case 95:
		case 96:
			return joaat("jester");
		default:
	}
	return 0;
}

int func_647(var uParam0, var uParam1, var uParam2)//Position - 0x163BB
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bool bVar4;
	bVar0 = false;
	iVar3 = uParam2;
	iVar1 = 0;
	while (iVar1 < 3)
	{
		bVar4 = (iVar3 + iVar1);
		if (bVar4 > 31)
		{
			bVar0 = true;
			bVar4 = (bVar4 - 32);
		}
		if (!bVar0)
		{
			if (BitTest(uParam0, bVar4))
			{
				iVar2++;
			}
		}
		else if (BitTest(uParam1, bVar4))
		{
			iVar2++;
		}
		iVar1++;
	}
	return iVar2;
}

int func_648(int iParam0)//Position - 0x17518
{
	int iVar0;
	if (iParam0 == 8)
	{
		iVar0 = (Global_2789828 - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), Global_2789228.f_144)));
		iVar0 = (iVar0 / 1000);
	}
	else
	{
		iVar0 = (Global_262145.f_19359 /* Tunable: IMPEXP_STEAL_COOLDOWN */ - MISC::ABSI(NETWORK::GET_TIME_DIFFERENCE(MISC::GET_GAME_TIMER(), Global_2789228.f_146)));
		iVar0 = (iVar0 / 1000);
	}
	return iVar0;
}

int func_649(int iParam0)//Position - 0x17FB8
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (__LIB_0__.func_154(iParam0, 1, 1))
		{
			if (Global_2689235[iParam0 /*453*/].f_318.f_6 != -1)
			{
				return __LIB_0__.func_170(Global_2689235[iParam0 /*453*/].f_318.f_6) == 1;
			}
		}
	}
	return 0;
}

var func_650(int iParam0)//Position - 0x6EC5
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_278.f_1, 5);
}

var func_651(int iParam0)//Position - 0x6EE0
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_278.f_1, 4);
}

void func_652(int iParam0, bool bParam1)//Position - 0x24729
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 29))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 29);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 29))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 29);
		}
	}
}

void func_653(int iParam0, bool bParam1)//Position - 0x247CB
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 30))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 30);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2, 30))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_384.f_2), 30);
		}
	}
}

int func_654(int iParam0)//Position - 0x2FCDC
{
	switch (iParam0)
	{
		case 0:
			return 8253;
			break;
		case 1:
			return 8254;
			break;
		case 2:
			return 8255;
			break;
		case 3:
			return 8256;
			break;
		case 4:
			return 8257;
			break;
		case 5:
			return 8258;
			break;
		case 6:
			return 8259;
			break;
		case 7:
			return 8260;
			break;
		case 8:
			return 8261;
			break;
		case 9:
			return 8262;
			break;
	}
	return 13122;
}

int func_655(int iParam0)//Position - 0x3B311
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_2, 29);
	}
	return 0;
}

int func_656(int iParam0)//Position - 0x3B39E
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_2, 26);
	}
	return 0;
}

void func_657(char* sParam0, int iParam1, int iParam2)//Position - 0x3BE5C
{
	if (iParam2 == 3)
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_COLOUR_v3", 64);
				break;
		}
	}
	else if (iParam2 == 4)
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_LIVERY_v3", 64);
				break;
		}
	}
	else
	{
		switch (iParam1)
		{
			case 0:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v0", 64);
				break;
			case 1:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v1", 64);
				break;
			case 2:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v2", 64);
				break;
			case 3:
				StringCopy(sParam0, "CASINO_HEIST_VEHICLE_UPGRADE_v3", 64);
				break;
			}
	}
}

void func_658(char* sParam0, bool bParam1, int iParam2, int iParam3)//Position - 0x3BF58
{
	StringCopy(sParam0, "FCARCADE_", 64);
	if (bParam1)
	{
		StringConCat(sParam0, "B_", 64);
	}
	else
	{
		StringConCat(sParam0, "C_", 64);
	}
	if (iParam2 == 4)
	{
		StringConCat(sParam0, "LIV_REM", 64);
	}
	else
	{
		StringConCat(sParam0, "UP", 64);
		StringIntConCat(sParam0, iParam2, 64);
		if (iParam2 == 3)
		{
			StringConCat(sParam0, "_C_", 64);
			StringIntConCat(sParam0, iParam3, 64);
		}
	}
}

char* func_659(int iParam0)//Position - 0x3C188
{
	char cVar0[24];
	StringCopy(&cVar0, "ARC_MAC_", 24);
	switch (iParam0)
	{
		case 0:
			StringConCat(&cVar0, "SP_MON", 24);
			break;
		case 1:
			StringConCat(&cVar0, "GUNS", 24);
			break;
		case 5:
			StringConCat(&cVar0, "N_DRIVE_B", 24);
			break;
		case 3:
			StringConCat(&cVar0, "N_DRIVE_C", 24);
			break;
		case 4:
			StringConCat(&cVar0, "N_DRIVE_T", 24);
			break;
		case 2:
			StringConCat(&cVar0, "WIZZARD", 24);
			break;
		case 6:
			StringConCat(&cVar0, "DOTF", 24);
			break;
		case 7:
			StringConCat(&cVar0, "MONKEY", 24);
			break;
		case 8:
			StringConCat(&cVar0, "PEN", 24);
			break;
		case 12:
			StringConCat(&cVar0, "CLAW_CR", 24);
			break;
		case 11:
			StringConCat(&cVar0, "FORTUNE", 24);
			break;
		case 13:
			StringConCat(&cVar0, "LOVE", 24);
			break;
		case 10:
			StringConCat(&cVar0, "S_CRIME", 24);
			break;
		case 9:
			StringConCat(&cVar0, "IAP", 24);
			break;
		case 14:
			StringConCat(&cVar0, "STRENGTH" /* GXT: Strength */, 24);
			break;
		case 15:
			StringConCat(&cVar0, "QUB3D", 24);
			break;
		case 16:
			StringConCat(&cVar0, "CAMHEDZ", 24);
			break;
		default:
			return "";
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

int func_660(int iParam0)//Position - 0x3C2E4
{
	switch (iParam0)
	{
		case 0:
			return 8738;
		case 1:
			return 8739;
		case 5:
			return 8740;
		case 2:
			return 8741;
		case 6:
			return 8742;
		case 7:
			return 8743;
		case 8:
			return 8744;
		case 12:
			return 8745;
		case 11:
			return 8746;
		case 13:
			return 8747;
		case 9:
			return 8748;
		case 3:
			return 8749;
		case 4:
			return 8801;
		case 14:
			return 8978;
		case 15:
			return 8979;
		case 16:
			return 9603;
		default:
	}
	return 13122;
}

int func_661(int iParam0)//Position - 0x3C3E5
{
	switch (iParam0)
	{
		case 0:
			return 8718;
		case 1:
			return 8719;
		case 2:
			return 8720;
		case 3:
			return 8721;
		case 4:
			return 8722;
		case 5:
			return 8723;
		case 6:
			return 8724;
		case 8:
			return 8736;
		case 7:
			return 8737;
		default:
	}
	return 13122;
}

char* func_662(int iParam0, int iParam1)//Position - 0x3C534
{
	char cVar0[16];
	StringCopy(&cVar0, "FCARCADE_", 16);
	switch (iParam0)
	{
		case 0:
			StringConCat(&cVar0, "FLR_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 1:
			StringConCat(&cVar0, "CEIL_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 2:
			StringConCat(&cVar0, "WALL_", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 3:
			StringConCat(&cVar0, "QRT", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 4:
			StringConCat(&cVar0, "GRG", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 5:
			StringConCat(&cVar0, "NE", 16);
			StringIntConCat(&cVar0, iParam1 + 1, 16);
			break;
		case 6:
			StringConCat(&cVar0, "HS", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 7:
			StringConCat(&cVar0, "DS", 16);
			break;
		case 8:
			StringConCat(&cVar0, "BH", 16);
			break;
		default:
			return "";
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

char* func_663(int iParam0, int iParam1)//Position - 0x3DF91
{
	char cVar0[16];
	StringCopy(&cVar0, "FCHUB_", 16);
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "FCCLUB_GARG_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 1:
			StringCopy(&cVar0, "FCCLUB_STOR_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 2:
			StringConCat(&cVar0, "STA_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 3:
			StringConCat(&cVar0, "SEC_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 4:
			StringConCat(&cVar0, "EQU_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		case 5:
			StringConCat(&cVar0, "MOD7_", 16);
			StringIntConCat(&cVar0, iParam1, 16);
			break;
		default:
			return "";
			break;
	}
	return HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&cVar0, 0, HUD::GET_LENGTH_OF_LITERAL_STRING(&cVar0));
}

int func_664(int iParam0)//Position - 0x3E4CF
{
	if (iParam0 == 4)
	{
		return 0;
	}
	else if (iParam0 == 3)
	{
		return 1;
	}
	else if (iParam0 == 6)
	{
		return 2;
	}
	else if (iParam0 == 1)
	{
		return 3;
	}
	else if (iParam0 == 0)
	{
		return 4;
	}
	else if (iParam0 == 7)
	{
		return 5;
	}
	else if (iParam0 == 2)
	{
		return 6;
	}
	else if (iParam0 == 5)
	{
		return 7;
	}
	else if (iParam0 == 8)
	{
		return 8;
	}
	if (iParam0 == -1)
	{
		return -1;
	}
	return 0;
}

void func_665(char* sParam0, int iParam1, bool bParam2)//Position - 0x3FC6C
{
	StringCopy(sParam0, "FACTORY_INDEX_", 64);
	StringIntConCat(sParam0, iParam1, 64);
	StringConCat(sParam0, "_t0_v0", 64);
	if (bParam2)
	{
		StringConCat(sParam0, "_CESP", 64);
	}
}

int func_666(int iParam0, int iParam1)//Position - 0x43408
{
	int iVar0;
	var uVar1;
	iVar0 = Global_2826809[iParam0 /*3*/][iParam1];
	if (STATS::STAT_GET_INT(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_667(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x43518
{
	char cVar0[32];
	switch (iParam1)
	{
		case 0:
			StringCopy(&cVar0, "PM_BWALL_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 1:
			StringCopy(&cVar0, "PM_BHANGING_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 2:
			StringCopy(&cVar0, "PM_BFURNITURE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 3:
			return;
			break;
		case 4:
			StringCopy(&cVar0, "PM_BFONT_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 5:
			StringCopy(&cVar0, "PM_BFCOLOUR_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 6:
			StringCopy(&cVar0, "PM_BEMBLEM_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 7:
			StringCopy(&cVar0, "PM_BHIDESINAGE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 8:
			StringCopy(&cVar0, "PM_BGUNLOCK_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 9:
			StringCopy(&cVar0, "PM_BGARAGE_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
		case 10:
			StringCopy(&cVar0, "PM_BNAME_", 32);
			StringIntConCat(&cVar0, iParam2, 32);
			break;
	}
	StringCopy(sParam0, "PR_", 64);
	StringConCat(sParam0, &cVar0, 64);
	StringConCat(sParam0, "_t", 64);
	StringIntConCat(sParam0, iParam3, 64);
	StringConCat(sParam0, "_v0", 64);
}

int func_668(int iParam0, int iParam1)//Position - 0x46683
{
	switch (iParam0)
	{
		case 0:
			return 0;
			break;
		case 1:
			if (iParam1 == 0)
			{
				return Global_262145.f_15960 /* Tunable: DYNASTY8_OFFICE_PERSONNEL_FEMALE */;
			}
			else if (iParam1 == 1)
			{
				return Global_262145.f_15961 /* Tunable: DYNASTY8_OFFICE_PERSONNEL_MALE */;
			}
			return 0;
		case 2:
			return Global_262145.f_16825 /* Tunable: DYNASTY8_OFFICE_FONT_COST */;
		case 3:
			return 0;
		case 4:
			return Global_262145.f_15962 /* Tunable: DYNASTY8_OFFICE_GUNLOCKER */;
		case 5:
			return Global_262145.f_15963 /* Tunable: DYNASTY8_OFFICE_VAULT */;
		case 6:
			return Global_262145.f_15964 /* Tunable: DYNASTY8_OFFICE_ACCOMMODATION */;
		case 7:
			return Global_262145.f_15946 /* Tunable: EXEC1_RENAME_ORGANIZATION */;
		case 8:
		case 10:
		case 12:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_19599 /* Tunable: IMPEXP_GARAGE_LIGHTING1_COST */;
				case 1:
					return Global_262145.f_19600 /* Tunable: IMPEXP_GARAGE_LIGHTING2_COST */;
				case 2:
					return Global_262145.f_19601 /* Tunable: IMPEXP_GARAGE_LIGHTING3_COST */;
				case 3:
					return Global_262145.f_19602 /* Tunable: IMPEXP_GARAGE_LIGHTING4_COST */;
				case 4:
					return Global_262145.f_19603 /* Tunable: IMPEXP_GARAGE_LIGHTING5_COST */;
				case 5:
					return Global_262145.f_19604 /* Tunable: IMPEXP_GARAGE_LIGHTING6_COST */;
				case 6:
					return Global_262145.f_19605 /* Tunable: IMPEXP_GARAGE_LIGHTING7_COST */;
				case 7:
					return Global_262145.f_19606 /* Tunable: IMPEXP_GARAGE_LIGHTING8_COST */;
				case 8:
					return Global_262145.f_19607 /* Tunable: IMPEXP_GARAGE_LIGHTING9_COST */;
				default:
			}
			return 0;
			break;
		case 9:
		case 11:
		case 13:
			switch (iParam1)
			{
				case 0:
					return Global_262145.f_19608 /* Tunable: IMPEXP_GARAGE_SIGNAGE1_COST */;
				case 1:
					return Global_262145.f_19609 /* Tunable: IMPEXP_GARAGE_SIGNAGE2_COST */;
				case 2:
					return Global_262145.f_19610 /* Tunable: IMPEXP_GARAGE_SIGNAGE3_COST */;
				case 3:
					return Global_262145.f_19611 /* Tunable: IMPEXP_GARAGE_SIGNAGE4_COST */;
				case 4:
					return Global_262145.f_19612 /* Tunable: IMPEXP_GARAGE_SIGNAGE5_COST */;
				case 5:
					return Global_262145.f_19613 /* Tunable: IMPEXP_GARAGE_SIGNAGE6_COST */;
				case 6:
					return Global_262145.f_19614 /* Tunable: IMPEXP_GARAGE_SIGNAGE7_COST */;
				case 7:
					return Global_262145.f_19615 /* Tunable: IMPEXP_GARAGE_SIGNAGE8_COST */;
				case 8:
					return Global_262145.f_19616 /* Tunable: IMPEXP_GARAGE_SIGNAGE9_COST */;
				default:
			}
			return 0;
			break;
		case 14:
			switch (iParam1)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_19617 /* Tunable: IMPEXP_MODSHOP_FLOORING1_PURCHASE_COST */;
				case 2:
					return Global_262145.f_19618 /* Tunable: IMPEXP_MODSHOP_FLOORING2_PURCHASE_COST */;
				case 3:
					return Global_262145.f_19619 /* Tunable: IMPEXP_MODSHOP_FLOORING3_PURCHASE_COST */;
				case 4:
					return Global_262145.f_19620 /* Tunable: IMPEXP_MODSHOP_FLOORING4_PURCHASE_COST */;
				case 5:
					return Global_262145.f_19621 /* Tunable: IMPEXP_MODSHOP_FLOORING5_PURCHASE_COST */;
				case 6:
					return Global_262145.f_19622 /* Tunable: IMPEXP_MODSHOP_FLOORING6_PURCHASE_COST */;
				case 7:
					return Global_262145.f_19623 /* Tunable: IMPEXP_MODSHOP_FLOORING7_PURCHASE_COST */;
				case 8:
					return Global_262145.f_19624 /* Tunable: IMPEXP_MODSHOP_FLOORING8_PURCHASE_COST */;
				case 9:
					return Global_262145.f_19625 /* Tunable: IMPEXP_MODSHOP_FLOORING9_PURCHASE_COST */;
				case 10:
					return Global_262145.f_19626 /* Tunable: IMPEXP_MODSHOP_FLOORING10_PURCHASE_COST */;
				case 11:
					return Global_262145.f_19627 /* Tunable: IMPEXP_MODSHOP_FLOORING11_PURCHASE_COST */;
				case 12:
					return Global_262145.f_19628 /* Tunable: IMPEXP_MODSHOP_FLOORING12_PURCHASE_COST */;
				case 13:
					return Global_262145.f_19629 /* Tunable: IMPEXP_MODSHOP_FLOORING13_PURCHASE_COST */;
				case 14:
					return Global_262145.f_19630 /* Tunable: IMPEXP_MODSHOP_FLOORING14_PURCHASE_COST */;
				case 15:
					return Global_262145.f_19631 /* Tunable: IMPEXP_MODSHOP_FLOORING15_PURCHASE_COST */;
				case 16:
					return Global_262145.f_19632 /* Tunable: IMPEXP_MODSHOP_FLOORING16_PURCHASE_COST */;
				case 17:
					return Global_262145.f_19633 /* Tunable: IMPEXP_MODSHOP_FLOORING17_PURCHASE_COST */;
				case 18:
					return Global_262145.f_19634 /* Tunable: IMPEXP_MODSHOP_FLOORING18_PURCHASE_COST */;
				case 19:
					return Global_262145.f_19635 /* Tunable: IMPEXP_MODSHOP_FLOORING19_PURCHASE_COST */;
				case 20:
					return Global_262145.f_19636 /* Tunable: IMPEXP_MODSHOP_FLOORING20_PURCHASE_COST */;
				default:
			}
			return 0;
			break;
	}
	return 0;
}

int func_669(int iParam0)//Position - 0x47F00
{
	if (iParam0 != __LIB_0__.func_160())
	{
		return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_408.f_1, 26);
	}
	return 0;
}

char* func_670(int iParam0)//Position - 0x48252
{
	switch (iParam0)
	{
		case 1:
			return "MP_ARC_1" /* GXT: Pixel Pete's - Paleto Bay */;
		case 2:
			return "MP_ARC_2" /* GXT: Wonderama - Grapeseed */;
		case 3:
			return "MP_ARC_3" /* GXT: Warehouse - Davis */;
		case 4:
			return "MP_ARC_4" /* GXT: Eight-Bit - Vinewood */;
		case 5:
			return "MP_ARC_5" /* GXT: Insert Coin - Rockford Hills */;
		case 6:
			return "MP_ARC_6" /* GXT: Videogeddon - La Mesa */;
		default:
	}
	return "";
}

bool func_671(int iParam0)//Position - 0x48AA9
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 0);
}

bool func_672(int iParam0)//Position - 0x48AC4
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 4);
}

bool func_673(int iParam0)//Position - 0x48E7E
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_285.f_1, 5);
}

int func_674(int iParam0)//Position - 0x49E3C
{
	switch (iParam0)
	{
		case 0:
			return 6362;
		case 1:
			return 6363;
		case 2:
			return 6364;
		case 3:
			return 6365;
		case 4:
			return 6366;
		case 5:
			return 6367;
		default:
	}
	return 6362;
}

int func_675(int iParam0)//Position - 0x49EF0
{
	switch (iParam0)
	{
		case 0:
			return 6351;
		case 1:
			return 6352;
		case 2:
			return 6353;
		case 3:
			return 6354;
		case 4:
			return 6355;
		case 5:
			return 6356;
		default:
	}
	return 6351;
}

int func_676(int iParam0)//Position - 0x4C700
{
	switch (iParam0)
	{
		case 5:
		case 6:
		case 11:
		case 8:
		case 9:
		case 10:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 25:
		case 26:
			return 1;
			break;
		case -1:
			return 0;
			break;
	}
	return 0;
}

int func_677(int iParam0, int iParam1)//Position - 0x5162D
{
	if ((__LIB_1__.func_346(iParam0) && __LIB_1__.func_346(iParam1)) && __LIB_1__.func_347(iParam0) == __LIB_1__.func_347(iParam1))
	{
		return 1;
	}
	return 0;
}

int func_678(int iParam0)//Position - 0x53EA7
{
	switch (iParam0)
	{
		case 0:
			return 9861;
		case 1:
			return 9862;
		default:
	}
	return 13122;
}

void func_679(int iParam0, bool bParam1)//Position - 0x540E5
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 2))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 2);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 2))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 2);
		}
	}
}

void func_680(int iParam0, bool bParam1)//Position - 0x54167
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 1))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 1);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 1))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 1);
		}
	}
}

void func_681(int iParam0, bool bParam1)//Position - 0x541E9
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 0))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 0);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3, 0))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_465.f_3), 0);
		}
	}
}

var func_682()//Position - 0x55434
{
	return Global_262145.f_31307 /* Tunable: -952160525 */;
}

void func_683(bool bParam0)//Position - 0x56BE1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 1))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 1);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 1))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 1);
	}
}

void func_684(bool bParam0)//Position - 0x56D07
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 28))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 28);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 28))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 28);
	}
}

void func_685(bool bParam0)//Position - 0x56D7C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 26))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 26);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 26))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 26);
	}
}

void func_686(bool bParam0)//Position - 0x56DF1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 11))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 11);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 11))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 11);
	}
}

void func_687(bool bParam0)//Position - 0x56E66
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 10))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 10);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 10))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 10);
	}
}

void func_688(bool bParam0)//Position - 0x56EDB
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 9);
	}
}

void func_689(bool bParam0)//Position - 0x56F50
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 8))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 8);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 8);
	}
}

void func_690(bool bParam0)//Position - 0x56FC5
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 7);
	}
}

void func_691(bool bParam0)//Position - 0x57036
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 6))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 6);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 6))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 6);
	}
}

void func_692(bool bParam0)//Position - 0x570A7
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 5))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 5);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 5))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 5);
	}
}

void func_693(bool bParam0)//Position - 0x57118
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_2), 4);
	}
}

void func_694(bool bParam0)//Position - 0x57189
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 0))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 0);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 0))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 0);
	}
}

void func_695(bool bParam0)//Position - 0x571FA
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 24))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 24);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 24))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 24);
	}
}

void func_696(bool bParam0)//Position - 0x5726F
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 22))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 22);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 22))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 22);
	}
}

void func_697(bool bParam0)//Position - 0x572E4
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 21);
	}
}

void func_698(bool bParam0)//Position - 0x57359
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 20))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 20);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 20))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 20);
	}
}

void func_699(bool bParam0)//Position - 0x573CE
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 19))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 19);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 19))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 19);
	}
}

void func_700(bool bParam0)//Position - 0x57443
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 18))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 18);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 18))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 18);
	}
}

void func_701(bool bParam0)//Position - 0x574B8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 17))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 17);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 17))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 17);
	}
}

void func_702(bool bParam0)//Position - 0x5752D
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 16))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 16);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 16))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 16);
	}
}

void func_703(bool bParam0)//Position - 0x575A2
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 15))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 15);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 15))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 15);
	}
}

void func_704(bool bParam0)//Position - 0x57617
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 14))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 14);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 14))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 14);
	}
}

void func_705(bool bParam0)//Position - 0x5768C
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 13))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 13);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 13))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 13);
	}
}

void func_706(bool bParam0)//Position - 0x57701
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 12))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 12);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 12))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 12);
	}
}

void func_707(bool bParam0)//Position - 0x57776
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 10))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 10);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 10))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 10);
	}
}

void func_708(bool bParam0)//Position - 0x577EB
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 9))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 9);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 9))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 9);
	}
}

void func_709(bool bParam0)//Position - 0x57860
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 8))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 8);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 8))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 8);
	}
}

void func_710(bool bParam0)//Position - 0x578D5
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 7);
	}
}

void func_711(bool bParam0)//Position - 0x57946
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 6))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 6);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 6))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 6);
	}
}

void func_712(bool bParam0)//Position - 0x579B7
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 5))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 5);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 5))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 5);
	}
}

void func_713(bool bParam0)//Position - 0x57A28
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 4);
	}
}

void func_714(bool bParam0)//Position - 0x57A99
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 3))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 3);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1, 3))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_408.f_1), 3);
	}
}

void func_715(int iParam0, bool bParam1)//Position - 0x57C09
{
	bool bVar0;
	bVar0 = iParam0;
	if (bParam1)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414, bVar0))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414), bVar0);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414, bVar0))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_414), bVar0);
	}
}

void func_716()//Position - 0x5A322
{
	if (__LIB_0__.func_137(22139, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 20);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 20);
	}
	if (__LIB_0__.func_137(22138, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 19);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 19);
	}
	if (__LIB_0__.func_137(22137, -1))
	{
		MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 18);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_336.f_2), 18);
	}
}

int func_717(int iParam0, int iParam1)//Position - 0x5B2A0
{
	int iVar0;
	iVar0 = -1;
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					iVar0 = 7;
					break;
				case 1:
					iVar0 = 8;
					break;
				case 2:
					iVar0 = 9;
					break;
				case 3:
					iVar0 = 10;
					break;
				case 4:
					iVar0 = 11;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 5:
					iVar0 = 0;
					break;
				case 6:
					iVar0 = 1;
					break;
				case 7:
					iVar0 = 2;
					break;
				case 8:
					iVar0 = 3;
					break;
				case 9:
					iVar0 = 4;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 10:
					iVar0 = 12;
					break;
				case 11:
					iVar0 = 13;
					break;
				case 12:
					iVar0 = 14;
					break;
				case 13:
					iVar0 = 15;
					break;
			}
			break;
		case 3:
			iVar0 = 5;
			break;
		case 4:
			iVar0 = 6;
			break;
	}
	return iVar0;
}

int func_718(int iParam0)//Position - 0x5B544
{
	if (!__LIB_4__.func_926(iParam0))
	{
		return -1;
	}
	return Global_2787882[iParam0];
}

bool func_719(int iParam0)//Position - 0x5B80C
{
	return (iParam0 != -1 && iParam0 != 2);
}

bool func_720(int iParam0)//Position - 0x5B868
{
	return (iParam0 == 1 || iParam0 == 0);
}

int func_721(int iParam0, int iParam1)//Position - 0x5B87E
{
	switch (iParam0)
	{
		case 1:
			return (iParam1 >= 1 && iParam1 <= 5);
		case 0:
			return (iParam1 >= 6 && iParam1 <= 15);
		default:
	}
	return 0;
}

void func_722(int iParam0)//Position - 0x5D934
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_23[iVar0]), iVar1);
}

bool func_723(int iParam0)//Position - 0x5D95D
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_23[iVar0], iVar1);
}

void func_724(int iParam0)//Position - 0x5F769
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_21[iVar0]), iVar1);
}

bool func_725(int iParam0)//Position - 0x5F792
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_21[iVar0], iVar1);
}

int func_726(int iParam0, int iParam1)//Position - 0x60C06
{
	if (iParam1 == joaat("WEAPON_KNUCKLE"))
	{
		if (__LIB_0__.func_137(7450, -1))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if (iParam1 == joaat("WEAPON_MUSKET"))
	{
		if (__LIB_0__.func_137(7454, -1))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	switch (iParam0)
	{
		case joaat("GROUP_MELEE"):
			if (__LIB_0__.func_137(7450, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_PISTOL"):
			if (__LIB_0__.func_137(7451, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_HEAVY"):
			if (__LIB_0__.func_137(7456, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_SNIPER"):
			if (__LIB_0__.func_137(7455, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_SHOTGUN"):
			if (__LIB_0__.func_137(7454, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_THROWN"):
			if (__LIB_0__.func_137(7457, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_MG"):
		case joaat("GROUP_SMG"):
			if (__LIB_0__.func_137(7452, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
		case joaat("GROUP_RIFLE"):
			if (__LIB_0__.func_137(7453, -1))
			{
				return 1;
			}
			else
			{
				return 0;
			}
			break;
	}
	if (iParam1 == joaat("WEAPON_PETROLCAN") && __LIB_0__.func_137(7457, -1))
	{
		return 1;
	}
	return 0;
}

int func_727(int iParam0)//Position - 0x6E123
{
	switch (iParam0)
	{
		case 2:
			return Global_262145.f_18113 /* Tunable: BIKER_BUSINESS_PALETO_BAY_WEED_FARM_BASE */;
		case 1:
			return Global_262145.f_18109 /* Tunable: BIKER_BUSINESS_PALETO_BAY_METH_LAB_BASE */;
		case 3:
			return Global_262145.f_18105 /* Tunable: BIKER_BUSINESS_PALETO_BAY_COCAINE_LOCKUP_BASE */;
		case 5:
			return Global_262145.f_18097 /* Tunable: BIKER_BUSINESS_PALETO_BAY_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 4:
			return Global_262145.f_18101 /* Tunable: BIKER_BUSINESS_PALETO_BAY_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 7:
			return Global_262145.f_18114 /* Tunable: BIKER_BUSINESS_CITY_WEED_FARM_BASE */;
		case 6:
			return Global_262145.f_18110 /* Tunable: BIKER_BUSINESS_CITY_METH_LAB_BASE */;
		case 8:
			return Global_262145.f_18106 /* Tunable: BIKER_BUSINESS_CITY_COCAINE_LOCKUP_BASE */;
		case 10:
			return Global_262145.f_18098 /* Tunable: BIKER_BUSINESS_CITY_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 9:
			return Global_262145.f_18102 /* Tunable: BIKER_BUSINESS_CITY_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 12:
			return Global_262145.f_18115 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_WEED_FARM_BASE */;
		case 11:
			return Global_262145.f_18111 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_METH_LAB_BASE */;
		case 13:
			return Global_262145.f_18107 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_COCAINE_LOCKUP_BASE */;
		case 15:
			return Global_262145.f_18099 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 14:
			return Global_262145.f_18103 /* Tunable: BIKER_BUSINESS_COUNTRYSIDE_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 17:
			return Global_262145.f_18116 /* Tunable: BIKER_BUSINESS_ELYSIAN_WEED_FARM_BASE */;
		case 16:
			return Global_262145.f_18112 /* Tunable: BIKER_BUSINESS_ELYSIAN_METH_LAB_BASE */;
		case 18:
			return Global_262145.f_18108 /* Tunable: BIKER_BUSINESS_ELYSIAN_COCAINE_LOCKUP_BASE */;
		case 20:
			return Global_262145.f_18100 /* Tunable: BIKER_BUSINESS_ELYSIAN_DOCUMENT_FORGERY_OFFICE_BASE */;
		case 19:
			return Global_262145.f_18104 /* Tunable: BIKER_BUSINESS_ELYSIAN_COUNTERFEIT_CASH_FACTOY_BASE */;
		case 21:
			return 2035000;
		case 22:
			return 2120000;
		case 23:
			return 1950000;
		case 24:
			return 2375000;
		case 25:
			return 2205000;
		case 26:
			return 2290000;
		case 27:
			return 1750000;
		case 28:
			return 1165000;
		case 29:
			return 1450000;
		case 30:
			return 1550000;
		case 31:
			return 1650000;
		default:
	}
	return 0;
}

int func_728(int iParam0)//Position - 0x6E337
{
	switch (iParam0)
	{
		case 0:
			return 9456;
		case 1:
			return 9457;
		case 2:
			return 9458;
		case 3:
			return 9459;
		case 4:
			return 9460;
		case 5:
			return 15370;
		default:
	}
	return 9456;
}

int func_729(int iParam0)//Position - 0x6E463
{
	switch (iParam0)
	{
		case 0:
			return 3959;
		case 1:
			return 3960;
		case 2:
			return 3961;
		case 3:
			return 3962;
		case 4:
			return 3963;
		case 5:
			return 5460;
		default:
	}
	return 3959;
}

void func_730(int iParam0)//Position - 0x6E508
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::CLEAR_BIT(&(Global_2815059.f_5195.f_19[iVar0]), iVar1);
}

bool func_731(int iParam0)//Position - 0x6E531
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	return BitTest(Global_2815059.f_5195.f_19[iVar0], iVar1);
}

void func_732(int iParam0)//Position - 0x6E557
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	MISC::SET_BIT(&(Global_2815059.f_5195.f_19[iVar0]), iVar1);
}

int func_733(int iParam0)//Position - 0x6F7A2
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_FACTORYSLOT5_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_734(int iParam0, bool bParam1)//Position - 0x707F6
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 26))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 26);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 26))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 26);
		}
	}
}

void func_735(int iParam0, bool bParam1)//Position - 0x7086C
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 25))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 25);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 25))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 25);
		}
	}
}

void func_736(int iParam0, bool bParam1)//Position - 0x708E2
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 24))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 24);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1, 24))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_480.f_1), 24);
		}
	}
}

int func_737(int iParam0)//Position - 0x73292
{
	switch (iParam0)
	{
		case 87:
		case 88:
		case 89:
		case 90:
			return 5;
			break;
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
			return 6;
			break;
		case 103:
		case 106:
		case 109:
		case 112:
			return 8;
			break;
		case 104:
		case 107:
		case 110:
		case 113:
			return 9;
			break;
		case 105:
		case 108:
		case 111:
		case 114:
			return 10;
			break;
		case 116:
			return 12;
			break;
		case 118:
			return 14;
			break;
		case 119:
			return 15;
			break;
		case 120:
			return 16;
			break;
		case 121:
			return 17;
			break;
		case 122:
			return 18;
			break;
		case 123:
			return 19;
			break;
		case 124:
			return 20;
			break;
		case 125:
			return 21;
			break;
		case 126:
			return 22;
			break;
		case 127:
			return 25;
			break;
		case 128:
			return 26;
			break;
	}
	return -1;
}

int func_738(int iParam0)//Position - 0x73418
{
	switch (iParam0)
	{
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 106:
		case 109:
		case 112:
		case 104:
		case 107:
		case 110:
		case 113:
		case 105:
		case 108:
		case 111:
		case 114:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 127:
		case 128:
		case 116:
			return 1;
			break;
		case -1:
			return 0;
			break;
	}
	return 0;
}

int func_739()//Position - 0x786EE
{
	return 10388;
}

bool func_740(int iParam0)//Position - 0xC57A4
{
	return __LIB_0__.func_163(iParam0, 30);
}

void func_741()//Position - 0xC5FD2
{
	int iVar0;
	iVar0 = __LIB_0__.func_716(16);
	Global_2676732[iVar0 /*83*/] = 16;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_742()//Position - 0xC6029
{
	int iVar0;
	iVar0 = __LIB_0__.func_716(15);
	Global_2676732[iVar0 /*83*/] = 15;
	StringCopy(&(Global_2676732[iVar0 /*83*/].f_18[0 /*16*/]), "-StraightIntoFreemode", 64);
}

void func_743(bool bParam0)//Position - 0xC735D
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 3))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 3);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 3))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 3);
	}
}

int func_744(int iParam0)//Position - 0xC83B1
{
	switch (iParam0)
	{
		case 0:
			return 21;
		case 1:
			return 22;
		case 2:
			return 23;
		case 3:
			return 24;
		case 4:
			return 25;
		case 5:
			return 26;
		case 6:
			return 27;
		case 7:
			return 28;
		case 8:
			return 29;
		default:
	}
	return 21;
}

void func_745(int iParam0)//Position - 0xC8B02
{
	int iVar0;
	if (iParam0 == 0)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_16 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_17 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_18 = 0;
	}
	else if (iParam0 == 1)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_19 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_20 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_21 = 0;
	}
	else if (iParam0 == 2)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_22 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_23 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_24 = 0;
	}
	else if (iParam0 == 3)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_25 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_26 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_27 = 0;
	}
	else if (iParam0 == 4)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_28 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_29 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_30 = 0;
	}
	else if (iParam0 == 99)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_31 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_32 = 0;
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_33 = 0;
	}
	else if (iParam0 >= 5)
	{
		iVar0 = 0;
		while (iVar0 < 22)
		{
			Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_36[iVar0] = 0;
			Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_59[iVar0] = 0;
			Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_82[iVar0] = 0;
			iVar0++;
		}
	}
}

int func_746(int iParam0)//Position - 0xC8CD0
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_PROPERTY_HOUSE_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_4_v0", 64);
			break;
		case 5:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_v0", 64);
			break;
		case 6:
			StringCopy(&cVar0, "MP_STAT_PROP_CLUBHOUSE_v0", 64);
			break;
		case 7:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_5_v0", 64);
			break;
		case 8:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR1_v0", 64);
			break;
		case 9:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR2_v0", 64);
			break;
		case 10:
			StringCopy(&cVar0, "MP_STAT_PROP_OFFICE_GAR3_v0", 64);
			break;
		case 11:
			StringCopy(&cVar0, "MP_STAT_PROP_IE_WAREHOUSE_v0", 64);
			break;
		case 23:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_6_v0", 64);
			break;
		case 24:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_7_v0", 64);
			break;
		case 27:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_8_v0", 64);
			break;
		case 28:
			StringCopy(&cVar0, "MP_STAT_MULTI_PROPERTY_9_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_747(bool bParam0)//Position - 0xCAD90
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 4))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 4);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 4))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 4);
	}
}

void func_748(int iParam0, bool bParam1)//Position - 0xCADF9
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 24))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 24);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 24))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 24);
		}
	}
}

void func_749(int iParam0, bool bParam1)//Position - 0xCAE7F
{
	if (iParam0 != __LIB_0__.func_160())
	{
		if (bParam1)
		{
			if (!BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 23))
			{
				MISC::SET_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 23);
			}
		}
		else if (BitTest(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2, 23))
		{
			MISC::CLEAR_BIT(&(Global_1853348[iParam0 /*834*/].f_267.f_353.f_2), 23);
		}
	}
}

bool func_750(int iParam0)//Position - 0xD191D
{
	return __LIB_1__.func_292(iParam0) != 0;
}

void func_751(bool bParam0)//Position - 0xD57F0
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 6))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 6);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3, 6))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_3), 6);
	}
}

void func_752(bool bParam0)//Position - 0xD58D1
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 19))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 19);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 19))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_348), 19);
	}
}

void func_753(bool bParam0)//Position - 0xD5F40
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 29))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 29);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 29))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 29);
	}
}

void func_754(bool bParam0)//Position - 0xD89C9
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 1))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 1);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284, 1))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_284), 1);
	}
}

void func_755()//Position - 0xD8C4A
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274 = 0;
	switch (__LIB_0__.func_228(15267, -1))
	{
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 13))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 13);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 0))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 0);
			}
			break;
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 1))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 1);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 2))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 2);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 3))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 3);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 4))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 4);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 5))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 5);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 6))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 6);
			}
			break;
		case 9:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 7))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 7);
			}
			break;
		case 10:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 8))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 8);
			}
			break;
		case 11:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 9))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 9);
			}
			break;
		case 12:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 10))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 10);
			}
			break;
		case 13:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 11))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 11);
			}
			break;
		case 14:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274, 12))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_274), 12);
			}
			break;
		default:
			break;
	}
}

void func_756()//Position - 0xD9091
{
	Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273 = 0;
	switch (__LIB_0__.func_228(15268, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 0))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 0);
			}
			break;
		case 2:
			if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 0))
			{
				MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 0);
			}
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 3))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 3);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 6))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 6);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 9))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 9);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 12))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 12);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 15))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 15);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 18))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 18);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 21))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 21);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 24))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 24);
			}
			break;
		default:
			break;
	}
	switch (__LIB_0__.func_228(15269, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 1))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 1);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 4))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 4);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 7))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 7);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 10))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 10);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 13))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 13);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 16))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 16);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 22))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 22);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 25))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 25);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 19))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 19);
			}
			break;
		default:
			break;
	}
	switch (__LIB_0__.func_228(15270, -1))
	{
		case 3:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 2))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 2);
			}
			break;
		case 2:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 5))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 5);
			}
			break;
		case 4:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 8))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 8);
			}
			break;
		case 1:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 11))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 11);
			}
			break;
		case 7:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 14))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 14);
			}
			break;
		case 5:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 17))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 17);
			}
			break;
		case 6:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 20))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 20);
			}
			break;
		case 0:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 23))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 23);
			}
			break;
		case 8:
			if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273, 26))
			{
				MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_273), 26);
			}
			break;
		default:
			break;
	}
}

void func_757(bool bParam0)//Position - 0xD96DF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 13))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 13);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 13))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 13);
	}
}

void func_758(bool bParam0)//Position - 0xD9740
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 7))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 7);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 7))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 7);
	}
}

void func_759(bool bParam0)//Position - 0xD97A9
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 24))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 24);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 24))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 24);
	}
}

void func_760(bool bParam0)//Position - 0xD9816
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 25))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 25);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366, 25))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_366), 25);
	}
}

bool func_761(char* sParam0, int iParam1, int iParam2)//Position - 0x10B4F8
{
	HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(sParam0);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
	return HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
}

void func_762(int iParam0, int iParam1, int iParam2)//Position - 0x10EC1F
{
	if (!NETWORK::NETWORK_IS_ACTIVITY_SESSION() && NETWORK::IS_STORE_AVAILABLE_TO_USER())
	{
		Global_75653 = iParam0;
		Global_75654 = iParam1;
		Global_75652 = 1;
		Global_4539884 = iParam2;
	}
}

bool func_763()//Position - 0x116A6A
{
	return __LIB_0__.func_113(joaat("rcbandito"));
}

int func_764(int iParam0, int iParam1, int iParam2)//Position - 0x11B81F
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28445 /* Tunable: CH_ARCADE_FLOOR_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28544 /* Tunable: CH_ARCADE_FLOOR_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28545 /* Tunable: CH_ARCADE_FLOOR_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28546 /* Tunable: CH_ARCADE_FLOOR_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28547 /* Tunable: CH_ARCADE_FLOOR_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28548 /* Tunable: CH_ARCADE_FLOOR_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28549 /* Tunable: CH_ARCADE_FLOOR_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28550 /* Tunable: CH_ARCADE_FLOOR_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28551 /* Tunable: CH_ARCADE_FLOOR_8_BASE_PRICE */;
				default:
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28433 /* Tunable: CH_ARCADE_STYLE_RETRO_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28434 /* Tunable: CH_ARCADE_STYLE_MIRRORED_BASE_PRICE */;
				case 2:
					return Global_262145.f_28435 /* Tunable: CH_ARCADE_STYLE_HIPSTER_BASE_PRICE */;
				default:
			}
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28436 /* Tunable: CH_ARCADE_MURAL_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28535 /* Tunable: CH_ARCADE_MURAL_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28536 /* Tunable: CH_ARCADE_MURAL_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28537 /* Tunable: CH_ARCADE_MURAL_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28538 /* Tunable: CH_ARCADE_MURAL_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28539 /* Tunable: CH_ARCADE_MURAL_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28540 /* Tunable: CH_ARCADE_MURAL_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28541 /* Tunable: CH_ARCADE_MURAL_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28542 /* Tunable: CH_ARCADE_MURAL_8_BASE_PRICE */;
				default:
			}
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28562 /* Tunable: CH_ARCADE_QUARTERS_BASE_PRICE */;
				default:
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28563 /* Tunable: CH_ARCADE_GARAGE_BASE_PRICE */;
				default:
			}
			break;
		case 5:
			switch (iParam2)
			{
				case 0:
					return Global_262145.f_28454 /* Tunable: CH_ARCADE_NEON_NONE_RENOVATION_PRICE */;
				case 1:
					return Global_262145.f_28553 /* Tunable: CH_ARCADE_NEON_1_BASE_PRICE */;
				case 2:
					return Global_262145.f_28554 /* Tunable: CH_ARCADE_NEON_2_BASE_PRICE */;
				case 3:
					return Global_262145.f_28555 /* Tunable: CH_ARCADE_NEON_3_BASE_PRICE */;
				case 4:
					return Global_262145.f_28556 /* Tunable: CH_ARCADE_NEON_4_BASE_PRICE */;
				case 5:
					return Global_262145.f_28557 /* Tunable: CH_ARCADE_NEON_5_BASE_PRICE */;
				case 6:
					return Global_262145.f_28558 /* Tunable: CH_ARCADE_NEON_6_BASE_PRICE */;
				case 7:
					return Global_262145.f_28559 /* Tunable: CH_ARCADE_NEON_7_BASE_PRICE */;
				case 8:
					return Global_262145.f_28560 /* Tunable: CH_ARCADE_NEON_8_BASE_PRICE */;
				default:
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return 0;
				case 1:
					return Global_262145.f_28561 /* Tunable: CH_ARCADE_HIGHSCORE_BASE_PRICE */;
				default:
			}
			break;
		case 8:
			return Global_262145.f_28423 /* Tunable: CH_ARCADE_UPGRADE_CONTROL_BASE_PRICE */;
		case 7:
			return Global_262145.f_28424 /* Tunable: CH_ARCADE_UPGRADE_DRONE_BASE_PRICE */;
	}
	return 0;
}

int func_765(int iParam0, int iParam1, int iParam2)//Position - 0x11CAC1
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 140000;
					break;
				case 2:
					return 147000;
					break;
				case 3:
					return 154350;
					break;
				case 4:
					return 0;
					break;
			}
			return 0;
			break;
		case 3:
			return 695000;
			break;
		case 4:
			return 1425000;
			break;
		case 2:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 141000;
					break;
				case 2:
					return 184500;
					break;
				case 3:
					return 240500;
					break;
				case 4:
					return 312000;
					break;
			}
			return 0;
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 395000;
					break;
				case 2:
					return 414750;
					break;
				case 3:
					return 435500;
					break;
				case 4:
					return 457300;
					break;
			}
			return 0;
			break;
		case 5:
			return 95000;
			break;
	}
	return 0;
}

int func_766(int iParam0, int iParam1, int iParam2)//Position - 0x11CC21
{
	switch (iParam0)
	{
		case 0:
			switch (iParam2)
			{
				case 0:
					return 175000;
					break;
				case 1:
					return 225000;
					break;
				case 2:
					return 300000;
					break;
			}
			break;
		case 1:
			switch (iParam2)
			{
				case 0:
					return 35000;
					break;
				case 1:
					return 88000;
					break;
				case 2:
					return 140000;
					break;
				case 3:
					return 217500;
					break;
				case 4:
					return 295000;
					break;
			}
			break;
		case 2:
		case 7:
		case 8:
			return 100000;
			break;
		case 3:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 213500;
					break;
				case 2:
					return 213500;
					break;
				case 3:
					return 233500;
					break;
				case 4:
					return 220000;
					break;
				case 5:
					return 220000;
					break;
				case 6:
					return 240000;
					break;
				case 7:
					return 235000;
					break;
				case 8:
					return 235000;
					break;
				case 9:
					return 255000;
					break;
			}
			break;
		case 4:
			switch (iParam2)
			{
				case 0:
					return 0;
					break;
				case 1:
					return 345000;
					break;
			}
			break;
		case 6:
			switch (iParam2)
			{
				case 0:
					return 33500;
					break;
				case 1:
					return 33500;
					break;
				case 2:
					return 33500;
					break;
				case 3:
					return 33500;
					break;
				case 4:
					return 33500;
					break;
				case 5:
					return 33500;
					break;
				case 6:
					return 33500;
					break;
				case 7:
					return 33500;
					break;
				case 8:
					return 33500;
					break;
			}
			break;
		case 5:
			return 475000;
			break;
	}
	return 0;
}

int func_767(int iParam0)//Position - 0x11F903
{
	switch (iParam0)
	{
		case 2:
			return Global_262145.f_18259 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_0 */;
		case 1:
			return Global_262145.f_18271 /* Tunable: BIKER_DISABLE_PURCHASE_METH_0 */;
		case 3:
			return Global_262145.f_18275 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_0 */;
		case 5:
			return Global_262145.f_18263 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_0 */;
		case 4:
			return Global_262145.f_18267 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_0 */;
		case 7:
			return Global_262145.f_18260 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_1 */;
		case 6:
			return Global_262145.f_18272 /* Tunable: BIKER_DISABLE_PURCHASE_METH_1 */;
		case 8:
			return Global_262145.f_18276 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_1 */;
		case 10:
			return Global_262145.f_18264 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_1 */;
		case 9:
			return Global_262145.f_18268 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_1 */;
		case 12:
			return Global_262145.f_18261 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_2 */;
		case 11:
			return Global_262145.f_18273 /* Tunable: BIKER_DISABLE_PURCHASE_METH_2 */;
		case 13:
			return Global_262145.f_18277 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_2 */;
		case 15:
			return Global_262145.f_18265 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_2 */;
		case 14:
			return Global_262145.f_18269 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_2 */;
		case 17:
			return Global_262145.f_18262 /* Tunable: BIKER_DISABLE_PURCHASE_WEED_3 */;
		case 16:
			return Global_262145.f_18274 /* Tunable: BIKER_DISABLE_PURCHASE_METH_3 */;
		case 18:
			return Global_262145.f_18278 /* Tunable: BIKER_DISABLE_PURCHASE_CRACK_3 */;
		case 20:
			return Global_262145.f_18266 /* Tunable: BIKER_DISABLE_PURCHASE_DOCUMENTS_3 */;
		case 19:
			return Global_262145.f_18270 /* Tunable: BIKER_DISABLE_PURCHASE_COUNTERFEIT_CASH_3 */;
		case 21:
			return 0;
		case 22:
			return 0;
		case 23:
			return 0;
		case 24:
			return 0;
		case 25:
			return 0;
		case 26:
			return 0;
		case 27:
			return 0;
		case 28:
			return 0;
		case 29:
			return 0;
		case 30:
			return 0;
		case 31:
			return 0;
		default:
	}
	return 1;
}

struct<4> func_768(int iParam0, int iParam1)//Position - 0x120169
{
	struct<4> Var0;
	int iVar1;
	switch (iParam1)
	{
		case 4:
			StringCopy(&Var0, "MP_BWH_CRACK_", 16);
			break;
		case 1:
			StringCopy(&Var0, "MP_BWH_WEED_", 16);
			break;
		case 2:
			StringCopy(&Var0, "MP_BWH_FCASH_", 16);
			break;
		case 3:
			StringCopy(&Var0, "MP_BWH_METH_", 16);
			break;
		case 0:
			StringCopy(&Var0, "MP_BWH_FID_", 16);
			break;
		case 5:
			StringCopy(&Var0, "MP_BWH_WEA_", 16);
			break;
	}
	iVar1 = iParam0;
	if (iParam1 == 5)
	{
		iVar1 = (iVar1 - 21);
		StringIntConCat(&Var0, iVar1, 16);
	}
	else
	{
		StringIntConCat(&Var0, SYSTEM::CEIL((SYSTEM::TO_FLOAT(iVar1) / 5f)), 16);
	}
	StringConCat(&Var0, "D", 16);
	return Var0;
}

int func_769(int iParam0)//Position - 0x12031B
{
	if (Global_262145.f_13123 /* Tunable: APT_DISABLE_CUSTOM1 */ && iParam0 == 83)
	{
		return 1;
	}
	else if (Global_262145.f_13124 /* Tunable: APT_DISABLE_CUSTOM2 */ && iParam0 == 84)
	{
		return 1;
	}
	else if (Global_262145.f_13125 /* Tunable: APT_DISABLE_CUSTOM3 */ && iParam0 == 85)
	{
		return 1;
	}
	else if (Global_262145.f_13135 /* Tunable: APT_DISABLE_STILT1 */ && iParam0 == 73)
	{
		return 1;
	}
	else if (Global_262145.f_13136 /* Tunable: APT_DISABLE_STILT2 */ && iParam0 == 74)
	{
		return 1;
	}
	else if (Global_262145.f_13137 /* Tunable: APT_DISABLE_STILT3 */ && iParam0 == 75)
	{
		return 1;
	}
	else if (Global_262145.f_13138 /* Tunable: APT_DISABLE_STILT4 */ && iParam0 == 76)
	{
		return 1;
	}
	else if (Global_262145.f_13139 /* Tunable: APT_DISABLE_STILT5 */ && iParam0 == 77)
	{
		return 1;
	}
	else if (Global_262145.f_13140 /* Tunable: APT_DISABLE_STILT6 */ && iParam0 == 78)
	{
		return 1;
	}
	else if (Global_262145.f_13141 /* Tunable: APT_DISABLE_STILT7 */ && iParam0 == 79)
	{
		return 1;
	}
	else if (Global_262145.f_13142 /* Tunable: APT_DISABLE_STILT8 */ && iParam0 == 80)
	{
		return 1;
	}
	else if (Global_262145.f_13143 /* Tunable: APT_DISABLE_STILT9 */ && iParam0 == 81)
	{
		return 1;
	}
	else if (Global_262145.f_13144 /* Tunable: APT_DISABLE_STILT10 */ && iParam0 == 82)
	{
		return 1;
	}
	if (Global_262145.f_18247 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_0 */ && iParam0 == 91)
	{
		return 1;
	}
	else if (Global_262145.f_18248 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_1 */ && iParam0 == 92)
	{
		return 1;
	}
	else if (Global_262145.f_18249 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_2 */ && iParam0 == 93)
	{
		return 1;
	}
	else if (Global_262145.f_18250 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_3 */ && iParam0 == 94)
	{
		return 1;
	}
	else if (Global_262145.f_18251 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_4 */ && iParam0 == 95)
	{
		return 1;
	}
	else if (Global_262145.f_18252 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_5 */ && iParam0 == 96)
	{
		return 1;
	}
	else if (Global_262145.f_18253 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_6 */ && iParam0 == 97)
	{
		return 1;
	}
	else if (Global_262145.f_18254 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_7 */ && iParam0 == 98)
	{
		return 1;
	}
	else if (Global_262145.f_18255 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_8 */ && iParam0 == 99)
	{
		return 1;
	}
	else if (Global_262145.f_18256 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_9 */ && iParam0 == 100)
	{
		return 1;
	}
	else if (Global_262145.f_18257 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_10 */ && iParam0 == 101)
	{
		return 1;
	}
	else if (Global_262145.f_18258 /* Tunable: BIKER_DISABLE_PURCHASE_CLUBHOUSE_11 */ && iParam0 == 102)
	{
		return 1;
	}
	return 0;
}

int func_770(int iParam0)//Position - 0x12113E
{
	switch (iParam0)
	{
		case 1:
			return 400000;
			break;
		case 2:
			return 373000;
			break;
		case 3:
			return 391000;
			break;
		case 4:
			return 382000;
			break;
		case 5:
			return 217000;
			break;
		case 6:
			return 223000;
			break;
		case 7:
			return 205000;
			break;
		case 34:
			return 200000;
			break;
		case 35:
			return 335000;
			break;
		case 36:
			return 319000;
			break;
		case 37:
			return 304000;
			break;
		case 38:
			return 235000;
			break;
		case 39:
			return 247000;
			break;
		case 40:
			return 241000;
			break;
		case 41:
			return 253000;
			break;
		case 42:
			return 270000;
			break;
		case 43:
			return 286000;
			break;
		case 8:
			return 130000;
			break;
		case 9:
			return 128000;
			break;
		case 10:
			return 126000;
			break;
		case 11:
			return 146000;
			break;
		case 12:
			return 125000;
			break;
		case 13:
			return 141000;
			break;
		case 14:
			return 150000;
			break;
		case 15:
			return 137000;
			break;
		case 16:
			return 134000;
			break;
		case 17:
			return 115000;
			break;
		case 18:
			return 99000;
			break;
		case 19:
			return 80000;
			break;
		case 20:
			return 87000;
			break;
		case 21:
			return 112000;
			break;
		case 22:
			return 105000;
			break;
		case 23:
			return 93000;
			break;
		case 24:
			return 150000;
			break;
		case 25:
			return 77500;
			break;
		case 26:
			return 142500;
			break;
		case 27:
			return 135000;
			break;
		case 28:
			return 70000;
			break;
		case 29:
			return 29500;
			break;
		case 30:
			return 32000;
			break;
		case 31:
			return 25000;
			break;
		case 32:
			return 80000;
			break;
		case 33:
			return 72500;
			break;
		case 44:
			return 26500;
			break;
		case 45:
			return 26000;
			break;
		case 46:
			return 27500;
			break;
		case 47:
			return 32000;
			break;
		case 48:
			return 31500;
			break;
		case 49:
			return 29000;
			break;
		case 50:
			return 62500;
			break;
		case 51:
			return 28000;
			break;
		case 52:
			return 65000;
			break;
		case 53:
			return 75000;
			break;
		case 54:
			return 105000;
			break;
		case 55:
			return 67500;
			break;
		case 56:
			return 112500;
			break;
		case 57:
			return 120000;
			break;
		case 58:
			return 34000;
			break;
		case 59:
			return 33500;
			break;
		case 60:
			return 35000;
			break;
		case 61:
			return 500000;
			break;
		case 62:
			return 468000;
			break;
		case 63:
			return 484000;
			break;
		case 64:
			return 492000;
			break;
		case 65:
			return 476000;
			break;
		case 66:
			return 175000;
			break;
		case 67:
			return 143000;
			break;
		case 68:
			return 155000;
			break;
		case 69:
			return 165000;
			break;
		case 70:
			return 121000;
			break;
		case 71:
			return 120000;
			break;
		case 72:
			return 118000;
			break;
		case 73:
			return 800000;
		case 74:
			return 762000;
		case 75:
			return 672000;
		case 76:
			return 705000;
		case 77:
			return 478000;
		case 78:
			return 608000;
		case 79:
			return 525000;
		case 80:
			return 571000;
		case 81:
			return 449000;
		case 82:
			return 727000;
		case 83:
			return 985000;
		case 84:
			return 905000;
		case 85:
			return 1100000;
		case 86:
			return 27000000;
		case 87:
			return 3100000;
		case 88:
			return 1000000;
		case 89:
			return 2250000;
		case 90:
			return 4000000;
		case 91:
			return 420000;
		case 92:
			return 365000;
		case 93:
			return 455000;
		case 94:
			return 200000;
		case 95:
			return 242000;
		case 96:
			return 210000;
		case 97:
			return 449000;
		case 98:
			return 472000;
		case 99:
			return 495000;
		case 100:
			return 225000;
		case 101:
			return 250000;
		case 102:
			return 395000;
		case 103:
			return 1150000;
		case 104:
			return 855000;
		case 105:
			return 745000;
		case 106:
			return 1150000;
		case 107:
			return 855000;
		case 108:
			return 745000;
		case 109:
			return 1150000;
		case 110:
			return 855000;
		case 111:
			return 745000;
		case 112:
			return 1150000;
		case 113:
			return 855000;
		case 114:
			return 745000;
		case 115:
			return 3000000;
	}
	return 0;
}

int func_771(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x12226F
{
	int iVar0;
	iVar0 = MISC::GET_HASH_KEY(&uParam0);
	if (iVar0 == Global_262145.f_13425 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE0 */)
	{
		*iParam4 = 0;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13426 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE1 */)
	{
		*iParam4 = 1;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13427 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE2 */)
	{
		*iParam4 = 2;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13428 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE3 */)
	{
		*iParam4 = 3;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13429 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE4 */)
	{
		*iParam4 = 4;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13430 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE5 */)
	{
		*iParam4 = 5;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13431 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE6 */)
	{
		*iParam4 = 6;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13432 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE7 */)
	{
		*iParam4 = 7;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13433 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE8 */)
	{
		*iParam4 = 8;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13434 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE9 */)
	{
		*iParam4 = 9;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13435 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE10 */)
	{
		*iParam4 = 10;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13436 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE11 */)
	{
		*iParam4 = 11;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13437 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE12 */)
	{
		*iParam4 = 12;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13438 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE13 */)
	{
		*iParam4 = 13;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13439 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE14 */)
	{
		*iParam4 = 14;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13440 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE15 */)
	{
		*iParam4 = 15;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13441 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE16 */)
	{
		*iParam4 = 16;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13442 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE17 */)
	{
		*iParam4 = 17;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13443 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE18 */)
	{
		*iParam4 = 18;
		return 1;
	}
	else if (iVar0 == Global_262145.f_13444 /* Tunable: OPTOUT_PROPERTYWEBSITE_SALE19 */)
	{
		*iParam4 = 19;
		return 1;
	}
	*iParam4 = -1;
	return 0;
}

int func_772(int iParam0)//Position - 0x12283C
{
	struct<13> Var0;
	Var0 = { __LIB_0__.func_604(iParam0) };
	if (__LIB_0__.func_53())
	{
		if (iParam0 == PLAYER::PLAYER_ID())
		{
			return 1;
		}
		else if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0))
		{
			if (NETWORK::NETWORK_CAN_VIEW_GAMER_USER_CONTENT(&Var0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_773(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x137913
{
	int iVar0;
	if (Global_262145.f_13359 /* Tunable: REBATE_PROPERTY_ALL */)
	{
		*iParam4 = joaat("REBATE_PROPERTY_ALL");
		return 1;
	}
	iVar0 = MISC::GET_HASH_KEY(&uParam0);
	if (iVar0 == Global_262145.f_12762 /* Tunable: REBATE_PROPERTY_0 */)
	{
		*iParam4 = 0;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12763 /* Tunable: REBATE_PROPERTY_1 */)
	{
		*iParam4 = 1;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12764 /* Tunable: REBATE_PROPERTY_2 */)
	{
		*iParam4 = 2;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12765 /* Tunable: REBATE_PROPERTY_3 */)
	{
		*iParam4 = 3;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12766 /* Tunable: REBATE_PROPERTY_4 */)
	{
		*iParam4 = 4;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12767 /* Tunable: REBATE_PROPERTY_5 */)
	{
		*iParam4 = 5;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12768 /* Tunable: REBATE_PROPERTY_6 */)
	{
		*iParam4 = 6;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12769 /* Tunable: REBATE_PROPERTY_7 */)
	{
		*iParam4 = 7;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12770 /* Tunable: REBATE_PROPERTY_8 */)
	{
		*iParam4 = 8;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12771 /* Tunable: REBATE_PROPERTY_9 */)
	{
		*iParam4 = 9;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12772 /* Tunable: REBATE_PROPERTY_10 */)
	{
		*iParam4 = 10;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12773 /* Tunable: REBATE_PROPERTY_11 */)
	{
		*iParam4 = 11;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12774 /* Tunable: REBATE_PROPERTY_12 */)
	{
		*iParam4 = 12;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12775 /* Tunable: REBATE_PROPERTY_13 */)
	{
		*iParam4 = 13;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12776 /* Tunable: REBATE_PROPERTY_14 */)
	{
		*iParam4 = 14;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12777 /* Tunable: REBATE_PROPERTY_15 */)
	{
		*iParam4 = 15;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12778 /* Tunable: REBATE_PROPERTY_16 */)
	{
		*iParam4 = 16;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12779 /* Tunable: REBATE_PROPERTY_17 */)
	{
		*iParam4 = 17;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12780 /* Tunable: REBATE_PROPERTY_18 */)
	{
		*iParam4 = 18;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12781 /* Tunable: REBATE_PROPERTY_19 */)
	{
		*iParam4 = 19;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12782 /* Tunable: REBATE_PROPERTY_20 */)
	{
		*iParam4 = 20;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12783 /* Tunable: REBATE_PROPERTY_21 */)
	{
		*iParam4 = 21;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12784 /* Tunable: REBATE_PROPERTY_22 */)
	{
		*iParam4 = 22;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12785 /* Tunable: REBATE_PROPERTY_23 */)
	{
		*iParam4 = 23;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12786 /* Tunable: REBATE_PROPERTY_24 */)
	{
		*iParam4 = 24;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12787 /* Tunable: REBATE_PROPERTY_25 */)
	{
		*iParam4 = 25;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12788 /* Tunable: REBATE_PROPERTY_26 */)
	{
		*iParam4 = 26;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12789 /* Tunable: REBATE_PROPERTY_27 */)
	{
		*iParam4 = 27;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12790 /* Tunable: REBATE_PROPERTY_28 */)
	{
		*iParam4 = 28;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12791 /* Tunable: REBATE_PROPERTY_29 */)
	{
		*iParam4 = 29;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12792 /* Tunable: REBATE_PROPERTY_30 */)
	{
		*iParam4 = 30;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12793 /* Tunable: REBATE_PROPERTY_31 */)
	{
		*iParam4 = 31;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12794 /* Tunable: REBATE_PROPERTY_32 */)
	{
		*iParam4 = 32;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12795 /* Tunable: REBATE_PROPERTY_33 */)
	{
		*iParam4 = 33;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12796 /* Tunable: REBATE_PROPERTY_34 */)
	{
		*iParam4 = 34;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12797 /* Tunable: REBATE_PROPERTY_35 */)
	{
		*iParam4 = 35;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12798 /* Tunable: REBATE_PROPERTY_36 */)
	{
		*iParam4 = 36;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12799 /* Tunable: REBATE_PROPERTY_37 */)
	{
		*iParam4 = 37;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12800 /* Tunable: REBATE_PROPERTY_38 */)
	{
		*iParam4 = 38;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12801 /* Tunable: REBATE_PROPERTY_39 */)
	{
		*iParam4 = 39;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12802 /* Tunable: REBATE_PROPERTY_40 */)
	{
		*iParam4 = 40;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12803 /* Tunable: REBATE_PROPERTY_41 */)
	{
		*iParam4 = 41;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12804 /* Tunable: REBATE_PROPERTY_42 */)
	{
		*iParam4 = 42;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12805 /* Tunable: REBATE_PROPERTY_43 */)
	{
		*iParam4 = 43;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12806 /* Tunable: REBATE_PROPERTY_44 */)
	{
		*iParam4 = 44;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12807 /* Tunable: REBATE_PROPERTY_45 */)
	{
		*iParam4 = 45;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12808 /* Tunable: REBATE_PROPERTY_46 */)
	{
		*iParam4 = 46;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12809 /* Tunable: REBATE_PROPERTY_47 */)
	{
		*iParam4 = 47;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12810 /* Tunable: REBATE_PROPERTY_48 */)
	{
		*iParam4 = 48;
		return 1;
	}
	else if (iVar0 == Global_262145.f_12811 /* Tunable: REBATE_PROPERTY_49 */)
	{
		*iParam4 = 49;
		return 1;
	}
	*iParam4 = -1;
	return 0;
}

void func_774(int iParam0)//Position - 0x13C0AC
{
	int iVar0;
	struct<10> Var1;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_866)
	{
		return;
	}
	if (Global_113386.f_7688.f_866 > 1)
	{
		iVar0 = iParam0;
		while (iVar0 <= (Global_113386.f_7688.f_866 - 2))
		{
			Global_113386.f_7688.f_765[iVar0 /*10*/] = { Global_113386.f_7688.f_765[iVar0 + 1 /*10*/] };
			iVar0++;
		}
	}
	if (Global_113386.f_7688.f_866 > 0)
	{
		Global_113386.f_7688.f_765[(Global_113386.f_7688.f_866 - 1) /*10*/] = { Var1 };
		Global_113386.f_7688.f_866 = (Global_113386.f_7688.f_866 - 1);
	}
}

void func_775(int iParam0)//Position - 0x13C2EB
{
	struct<15> Var0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	while (iVar1 < Global_113386.f_7688.f_650)
	{
		if (Global_113386.f_7688.f_199[iVar1 /*15*/] == iParam0)
		{
			iVar2 = iVar1;
			while (iVar2 <= (Global_113386.f_7688.f_650 - 2))
			{
				Global_113386.f_7688.f_199[iVar2 /*15*/] = { Global_113386.f_7688.f_199[iVar2 + 1 /*15*/] };
				iVar2++;
			}
			Global_113386.f_7688.f_199[(Global_113386.f_7688.f_650 - 1) /*15*/] = { Var0 };
			Global_113386.f_7688.f_650 = (Global_113386.f_7688.f_650 - 1);
			return;
		}
		iVar1++;
	}
}

void func_776(int iParam0, int iParam1, int iParam2)//Position - 0x13C4AA
{
	Global_1998[iParam0 /*29*/].f_19[iParam1] = iParam2;
	if (iParam0 < 162)
	{
		Global_113386.f_28050[iParam0 /*29*/].f_19[iParam1] = iParam2;
	}
}

void func_777(char* sParam0, int iParam1, int iParam2)//Position - 0x142486
{
	HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(sParam0);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam1);
	HUD::ADD_TEXT_COMPONENT_INTEGER(iParam2);
	HUD::END_TEXT_COMMAND_DISPLAY_HELP(0, false, true, -1);
}

struct<13> func_778(int iParam0)//Position - 0x14928E
{
	struct<13> Var0;
	NETWORK::NETWORK_HANDLE_FROM_FRIEND(iParam0, &Var0, 13);
	return Var0;
}

int func_779(char* sParam0)//Position - 0x149FB5
{
	int iVar0;
	int iVar1;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		if (MISC::ARE_STRINGS_EQUAL(HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("GB_REST_ACCM" /* GXT: Motorcycle Club */), sParam0) || MISC::ARE_STRINGS_EQUAL(HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("GB_REST_ACC" /* GXT: An Organization */), sParam0))
		{
			return 0;
		}
		iVar1 = 0;
		while (iVar1 < 32)
		{
			iVar0 = PLAYER::INT_TO_PLAYERINDEX(iVar1);
			if ((NETWORK::NETWORK_IS_PLAYER_ACTIVE(iVar0) && PLAYER::PLAYER_ID() != iVar0) && __LIB_0__.func_581(iVar0))
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_1892703[iVar0 /*599*/].f_10.f_105)) && MISC::ARE_STRINGS_EQUAL(&(Global_1892703[iVar0 /*599*/].f_10.f_105), sParam0))
				{
					return 1;
				}
			}
			iVar1++;
		}
	}
	return 0;
}

void func_780(bool bParam0, bool bParam1)//Position - 0xFD5
{
	if (bParam0)
	{
		if (Global_2715699.f_2846.f_85 == 0)
		{
			if (!DLC::GET_IS_LOADING_SCREEN_ACTIVE())
			{
				if (bParam1)
				{
					Global_2715699.f_2846.f_153 = 1;
					Global_2715699.f_2846.f_85 = 1;
				}
			}
		}
	}
	else if (Global_2715699.f_2846.f_85 == 1 || Global_2715699.f_2846.f_85 == 2)
	{
		Global_2715699.f_2846.f_85 = 3;
	}
}

void func_781(int iParam0, bool bParam1)//Position - 0x6FE1
{
	if (iParam0 == -1)
	{
		return;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&Global_8136, iParam0);
		return;
	}
	MISC::CLEAR_BIT(&Global_8136, iParam0);
}

void func_782(bool bParam0)//Position - 0x8D67
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139, 21))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139), 21);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139, 21))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_139), 21);
	}
}

int func_783(int iParam0)//Position - 0x8E4C
{
	var uVar0;
	int iVar1;
	var uVar2;
	uVar0 = Global_1659583[iParam0];
	iVar1 = uVar0;
	if (STATS::STAT_GET_BOOL(iVar1, &uVar2, -1))
	{
		return uVar2;
	}
	return 0;
}

int func_784()//Position - 0xC617
{
	var uVar0;
	if (BitTest(Global_2815059.f_1794, 7))
	{
		return 1;
	}
	uVar0 = Global_1659747[__LIB_1__.func_443(-1)];
	if (BitTest(uVar0, 6))
	{
		MISC::SET_BIT(&(Global_2815059.f_1794), 7);
		return 1;
	}
	if (__LIB_0__.func_189())
	{
		return 1;
	}
	if (__LIB_0__.func_188())
	{
		return 1;
	}
	return 0;
}

void func_785(char* sParam0)//Position - 0xC66
{
	if (Global_22668 != 0)
	{
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
		{
		}
		Global_22668 = 0;
	}
}

Vector3 func_786(struct<3> Param0, struct<3> Param1, float fParam2)//Position - 0x2E96
{
	return Param0 + Param1 - Param0 * Vector(fParam2, fParam2, fParam2);
}

bool func_787(int iParam0)//Position - 0x6BA
{
	return BitTest(Global_1888478.f_3, iParam0);
}

void func_788()//Position - 0x6CB
{
	Global_1888478 = (Global_1888478 - 1);
}

void func_789()//Position - 0xE2E
{
	Global_1888478.f_1 = (Global_1888478.f_1 - 1);
	if (Global_1888478.f_1 < 0)
	{
		Global_1888478.f_1 = 0;
	}
}

void func_790(int iParam0)//Position - 0xEA5
{
	struct<2> Var0;
	Var0.f_0 = 1922361302;
	Var0.f_1 = PLAYER::PLAYER_ID();
	if (!iParam0 == 0)
	{
		SCRIPT::SEND_TU_SCRIPT_EVENT(1, &Var0, 2, iParam0);
	}
}

int func_791()//Position - 0xF29
{
	return Global_1888478;
}

void func_792()//Position - 0x197C
{
	if (Global_2815059.f_4028 != 0)
	{
		Global_2815059.f_4028 = 5;
	}
}

int func_793(int iParam0)//Position - 0x2B6D
{
	switch (iParam0)
	{
		case 15:
			return 181;
		case 14:
			return 182;
		case 122:
			return 186;
		case 11:
			return 183;
		case 13:
			return 184;
		case 12:
			return 185;
		case 8:
			return 188;
		case 1:
			return 189;
		case 5:
			return 187;
		case 6:
			return 190;
		case 3:
			return 193;
		case 0:
			return 191;
		case 2:
			return 192;
		case 148:
			return 49;
		case 151:
			return 52;
		case 152:
			return 53;
		case 157:
			return 54;
		case 153:
			return 55;
		case 154:
			return 56;
		case 155:
			return 57;
		case 159:
			return 58;
		case 162:
			return 51;
		case 142:
			return 60;
		case 160:
			return 62;
		case 164:
			return 63;
		case 163:
			return 64;
		case 166:
			return 65;
		case 167:
			return 66;
		case 168:
			return 67;
		case 169:
			return 68;
		case 170:
			return 69;
		case 171:
			return 70;
		case 172:
			return 71;
		case 173:
			return 72;
		case 178:
			return 73;
		case 188:
			return 74;
		case 214:
			return 75;
		case 215:
			return 76;
		case 216:
			return 77;
		case 217:
			return 78;
		case 218:
			return 79;
		case 219:
			return 80;
		case 220:
			return 81;
		case 221:
			return 82;
		case 179:
			return 84;
		case 189:
			return 83;
		case 180:
			return 85;
		case 182:
			return 87;
		case 183:
			return 88;
		case 185:
			return 89;
		case 186:
			return 90;
		case 190:
			return 91;
		case 191:
			return 92;
		case 192:
			return 93;
		case 193:
			return 94;
		case 205:
			return 102;
		case 194:
			return 95;
		case 197:
			return 96;
		case 198:
			return 97;
		case 195:
			return 98;
		case 199:
			return 99;
		case 200:
			return 100;
		case 201:
			return 101;
		case 207:
			return 103;
		case 208:
			return 104;
		case 209:
			return 105;
		case 210:
			return 106;
		case 225:
			return 107;
		case 226:
			return 108;
		case 227:
			return 109;
		case 229:
			return 110;
		case 230:
			return 111;
		case 233:
			return 113;
		case 237:
			return 115;
		case 238:
			return 116;
		case 249:
			return 123;
		case 239:
			return 117;
		case 240:
			return 118;
		case 241:
			return 119;
		case 242:
			return 120;
		case 244:
			return 121;
		case 248:
			return 122;
		case 250:
			return 124;
		case 243:
			return 125;
		case 158:
			return 126;
		case 181:
			return 86;
		case 150:
			return 127;
		case 24:
			return 128;
		case 26:
			return 129;
		case 256:
			return 130;
		case 258:
			return 131;
		case 259:
			return 133;
		case 271:
			return 134;
		case 273:
			return 135;
		case 276:
			return 136;
		case 277:
			return 137;
		case 262:
			return 138;
		case 263:
			return 139;
		case 264:
			return 140;
		case 268:
			return 141;
		case 269:
			return 143;
		case 270:
			return 144;
		case 275:
			return 145;
		case 286:
			return 146;
		case 267:
			return 148;
		case 266:
			return 147;
		case 287:
			return 149;
		case 289:
			return 150;
		case 147:
			return 151;
		case 291:
			return 152;
		case 292:
			return 153;
		case 293:
			return 154;
		case 294:
			return 155;
		case 295:
			return 156;
		case 296:
			return 157;
		case 297:
			return 158;
		case 298:
			return 159;
		case 299:
			return 160;
		case 300:
			return 161;
		case 301:
			return 162;
		default:
	}
	return 0;
}

int func_794()//Position - 0x40EF
{
	if (Global_4718592 == 2 || Global_4718592 == 8)
	{
		return 1;
	}
	return 0;
}

int func_795()//Position - 0x7823
{
	return Global_2725856;
}

Vector3 func_796(int iParam0, int iParam1)//Position - 0x8808
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return -210.4709f, -1306.3175f, 30.336f;
				case 1:
					return -1598.3271f, -1040.5378f, 12.0183f;
				case 2:
					return -21.2711f, -1732.453f, 28.304f;
				case 3:
					return 1992.482f, 3058.0784f, 46.0576f;
				case 4:
					return 960.3523f, -1745.8442f, 30.2208f;
				case 5:
					return 775.7347f, -1367.343f, 25.5669f;
				case 6:
					return -321.3307f, -1495.5978f, 29.6536f;
				case 7:
					return -210.4709f, -1306.3175f, 30.336f;
				default:
			}
			return -210.4709f, -1306.3175f, 30.336f;
		default:
	}
	return 0f, 0f, 0f;
}

bool func_797(int iParam0)//Position - 0x8947
{
	return iParam0 == 14;
}

void func_798(var uParam0, int iParam1)//Position - 0xF043
{
	MISC::SET_BIT(uParam0[(iParam1 / 32)], (iParam1 % 32));
}

int func_799(bool bParam0)//Position - 0x14350
{
	if (bParam0 < 31)
	{
		return 0;
	}
	else if (bParam0 < 62)
	{
		return 1;
	}
	return (bParam0 / 31);
}

char* func_800()//Position - 0x473B2
{
	return HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION("CREATOR_NO_T" /* GXT: No translation. */);
}

void func_801(var uParam0)//Position - 0x51531
{
	*uParam0 = 0;
	uParam0->f_1 = 0;
	uParam0->f_2 = 0;
	uParam0->f_3 = 0;
}

struct<6> func_802(int iParam0, bool bParam1, bool bParam2)//Position - 0x5658E
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 0:
		case 1:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_LR" /* GXT: Bookmarked Land Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_LR" /* GXT: Land Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_LR" /* GXT: ~a~ Land Race */, 24);
			return Var0;
		case 10:
		case 11:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_OFR" /* GXT: Bookmarked On Foot Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_OFR" /* GXT: On Foot Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_OFR" /* GXT: ~a~ On Foot Race */, 24);
			return Var0;
		case 12:
		case 13:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_BR" /* GXT: Bookmarked Bike Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_BR" /* GXT: Bike Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_BR" /* GXT: ~a~ Bike Race */, 24);
			return Var0;
		case 6:
		case 7:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_SR" /* GXT: Bookmarked Stunt Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_STR" /* GXT: Stunt Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_SR" /* GXT: ~a~ Stunt Race */, 24);
			return Var0;
		case 18:
		case 19:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TAR" /* GXT: Bookmarked Target Assault Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_TAR" /* GXT: Target Assault Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TAR" /* GXT: ~a~ Target Assault Race */, 24);
			return Var0;
		case 2:
		case 3:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_WR" /* GXT: Bookmarked Sea Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_WR" /* GXT: Sea Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_WR" /* GXT: ~a~ Sea Race */, 24);
			return Var0;
		case 4:
		case 5:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_AR" /* GXT: Bookmarked Air Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_AR" /* GXT: Air Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_AR" /* GXT: ~a~ Air Race */, 24);
			return Var0;
		case 20:
		case 21:
		case 22:
		case 23:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_AW" /* GXT: Bookmarked Arena Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTARAWR" /* GXT: Arena Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_AW" /* GXT: ~a~ Arena Race */, 24);
			return Var0;
		case 24:
		case 25:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_OW" /* GXT: Bookmarked Open Wheel Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_OW" /* GXT: Open Wheel Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_OW" /* GXT: ~a~ Open Wheel Race */, 24);
			return Var0;
		case 26:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_PU" /* GXT: Bookmarked Pursuit Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_PU" /* GXT: Pursuit Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_PU" /* GXT: ~a~ Pursuit Race */, 24);
			return Var0;
		case 27:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_ST" /* GXT: Bookmarked Street Race */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_ST" /* GXT: Street Race */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_ST" /* GXT: ~a~ Street Race */, 24);
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_LR" /* GXT: Land Race */, 24);
	return Var0;
}

struct<6> func_803(int iParam0, bool bParam1, bool bParam2)//Position - 0x56891
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 0:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_DM" /* GXT: Bookmarked Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_DM" /* GXT: Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_DM" /* GXT: ~a~ Deathmatch */, 24);
			return Var0;
		case 1:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TDM" /* GXT: Bookmarked Team Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_TDM" /* GXT: Team Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TDM" /* GXT: ~a~ Team Deathmatch */, 24);
			return Var0;
		case 2:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_VDM" /* GXT: Bookmarked Vehicle Deathmatch */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_VDM" /* GXT: Vehicle Deathmatch */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_VDM" /* GXT: ~a~ Vehicle Deathmatch */, 24);
			return Var0;
		case 3:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_KOTH" /* GXT: Bookmarked King of the Hill */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_KOTH" /* GXT: King of the Hill */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_KOTH" /* GXT: ~a~ King of the Hill */, 24);
			return Var0;
		case 4:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_TKOTH" /* GXT: Bookmarked Team King of the Hill */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTR_TKOTH" /* GXT: Team King of the Hill */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_TKOTH" /* GXT: ~a~ Team King of the Hill */, 24);
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_DM" /* GXT: Deathmatch */, 24);
	return Var0;
}

struct<6> func_804(int iParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x569E4
{
	struct<6> Var0;
	StringCopy(&Var0, "", 24);
	switch (iParam0)
	{
		case 1:
			StringCopy(&Var0, "FMMC_RSTAR_MHST" /* GXT: Heist */, 24);
			return Var0;
		case 7:
			StringCopy(&Var0, "FMMC_RSTAR_HP" /* GXT: Setup */, 24);
			return Var0;
		case 5:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_LTS" /* GXT: Bookmarked LTS */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MLTS" /* GXT: Last Team Standing */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_LTS" /* GXT: ~a~ Last Team Standing */, 24);
			return Var0;
		case 6:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_CTF" /* GXT: Bookmarked Capture */, 24);
				return Var0;
			}
			if (bParam1)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MCTF" /* GXT: Capture */, 24);
				return Var0;
			}
			StringCopy(&Var0, "FMMC_PL_CTF" /* GXT: ~a~ Capture */, 24);
			return Var0;
		case 8:
			if (iParam3 == 0)
			{
				StringCopy(&Var0, "FMMC_RSTAR_MSL" /* GXT: Lamar */, 24);
			}
			else
			{
				StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
			}
			return Var0;
		case 129:
			StringCopy(&Var0, "FMMC_RSTAR_MSA" /* GXT: Adversary Mode */, 24);
			return Var0;
		case 2:
		case 3:
		case 0:
		case 4:
		case 9:
			if (bParam2)
			{
				StringCopy(&Var0, "FMMC_BM_MISS" /* GXT: Bookmarked Mission */, 24);
			}
			else
			{
				StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
			}
			return Var0;
		default:
	}
	StringCopy(&Var0, "FMMC_RSTAR_MS" /* GXT: Mission */, 24);
	return Var0;
}

bool func_805()//Position - 0x56C67
{
	return Global_2656879;
}

int func_806(int iParam0)//Position - 0x56EAF
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1659440)
	{
		if (!Global_2656326[iVar0 /*46*/].f_7)
		{
			if (Global_2656326[iVar0 /*46*/].f_6 == iParam0)
			{
				return iVar0;
			}
		}
		iVar0++;
	}
	return -1;
}

var func_807(var uParam0, int iParam1)//Position - 0x88DC1
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = iParam1;
	iVar1 = (iVar0 / 32);
	iVar2 = (iVar0 % 32);
	return BitTest((*uParam0)[iVar1], iVar2);
}

char* func_808(int iParam0)//Position - 0xB19AB
{
	switch (iParam0)
	{
		case 0:
			switch (__LIB_2__.func_399())
			{
				case 12:
				case 13:
				case 14:
				case 15:
					return "CAR_MET_E_O_1" /* GXT: Spectate Test Track */;
					break;
				default:
					return "CAR_MET_EXT_T" /* GXT: LS Car Meet */;
					break;
			}
			break;
		case 1:
			if (!__LIB_3__.func_820() && func_1537(PLAYER::PLAYER_ID()))
			{
				return "CAR_MET_ENT_P" /* GXT: Takeover */;
			}
			break;
	}
	return "";
}

int func_809(int iParam0)//Position - 0xB7291
{
	if (iParam0 == __LIB_0__.func_160() || !func_1657(iParam0))
	{
		return 6;
	}
	return Global_1853348[iParam0 /*834*/].f_267.f_465.f_1;
}

bool func_810(int iParam0)//Position - 0x11422A
{
	return (__LIB_2__.func_376(iParam0) && func_2691(iParam0));
}

void func_811(int iParam0, var uParam1)//Position - 0x1D4A74
{
	*uParam1 = { Global_1853348[iParam0 /*834*/].f_267.f_69 };
}

bool func_812(int iParam0)//Position - 0x1D54E9
{
	return Global_2686568[iParam0 /*41*/] == 5;
}

var func_813(int iParam0)//Position - 0x1D55C6
{
	return Global_2621865[iParam0 /*26*/].f_15.f_1;
}

int func_814(int iParam0, char* sParam1, bool bParam2)//Position - 0x1D8251
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1659410)
	{
		if (!Global_2654152[iVar0 /*82*/].f_11)
		{
			if (Global_2654152[iVar0 /*82*/].f_10 == iParam0)
			{
				if (!bParam2)
				{
					return iVar0;
				}
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
				{
					return iVar0;
				}
				if (MISC::ARE_STRINGS_EQUAL(sParam1, &(Global_2654152[iVar0 /*82*/].f_21)))
				{
					return iVar0;
				}
			}
		}
		iVar0++;
	}
	return -1;
}

var func_815(int iParam0)//Position - 0x1D98E7
{
	return Global_1573860[iParam0 /*4*/].f_1;
}

struct<21> func_816(int iParam0)//Position - 0x1DA77B
{
	return Global_2686568[iParam0 /*41*/].f_3;
}

int func_817(int iParam0)//Position - 0x1DA7DA
{
	return Global_2686568[iParam0 /*41*/].f_3.f_17;
}

void func_818(int iParam0)//Position - 0x1DA945
{
	Global_2654152[iParam0 /*82*/] = 0;
	Global_2654152[iParam0 /*82*/].f_2 = 0;
	Global_2654152[iParam0 /*82*/].f_3 = 0;
	Global_2654152[iParam0 /*82*/].f_4 = 0;
	Global_2654152[iParam0 /*82*/].f_5 = 0;
	Global_2654152[iParam0 /*82*/].f_6 = { 0f, 0f, 0f };
	Global_2654152[iParam0 /*82*/].f_9 = __LIB_0__.func_160();
	Global_2654152[iParam0 /*82*/].f_10 = 145;
	Global_2654152[iParam0 /*82*/].f_11 = 1;
	Global_2654152[iParam0 /*82*/].f_12 = 0;
	Global_2654152[iParam0 /*82*/].f_13 = -1;
	Global_2654152[iParam0 /*82*/].f_14 = -1;
	Global_2654152[iParam0 /*82*/].f_15 = 0;
	Global_2654152[iParam0 /*82*/].f_16 = 0;
	Global_2654152[iParam0 /*82*/].f_16.f_1 = 0;
	Global_2654152[iParam0 /*82*/].f_16.f_2 = 0;
	Global_2654152[iParam0 /*82*/].f_19 = 0;
	Global_2654152[iParam0 /*82*/].f_20 = 0;
	StringCopy(&(Global_2654152[iParam0 /*82*/].f_21), "", 64);
	StringCopy(&(Global_2654152[iParam0 /*82*/].f_37), "", 64);
	Global_2654152[iParam0 /*82*/].f_54 = -1;
	Global_2654152[iParam0 /*82*/].f_64 = 16777215;
	Global_2654152[iParam0 /*82*/].f_65 = 0;
	Global_2654152[iParam0 /*82*/].f_66 = 0;
	Global_2654152[iParam0 /*82*/].f_67 = 0;
	Global_2654152[iParam0 /*82*/].f_68 = 0;
	Global_2654152[iParam0 /*82*/].f_69 = 0;
	Global_2654152[iParam0 /*82*/].f_70 = -1;
	Global_2654152[iParam0 /*82*/].f_71 = 0;
	Global_2654152[iParam0 /*82*/].f_72 = 0;
	Global_2654152[iParam0 /*82*/].f_73 = -1;
	Global_2654152[iParam0 /*82*/].f_74 = 0;
	Global_2654152[iParam0 /*82*/].f_76 = 0;
	Global_2654152[iParam0 /*82*/].f_77 = 0;
	Global_2654152[iParam0 /*82*/].f_78 = 0;
	Global_2654152[iParam0 /*82*/].f_79 = 0;
	Global_2654152[iParam0 /*82*/].f_80 = 0;
	Global_2654152[iParam0 /*82*/].f_81 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		Global_2654152[iParam0 /*82*/].f_53 = NETWORK::GET_NETWORK_TIME();
		Global_2654152[iParam0 /*82*/].f_55 = NETWORK::GET_NETWORK_TIME();
	}
}

void func_819(var uParam0)//Position - 0x1DAE24
{
	*uParam0 = 0;
	uParam0->f_1 = -1;
	uParam0->f_2 = -1;
	StringCopy(&(uParam0->f_3), "", 24);
	uParam0->f_9 = -1;
}

bool func_820(int iParam0)//Position - 0x1DAED5
{
	return Global_2654152[iParam0 /*82*/].f_2;
}

bool func_821(int iParam0)//Position - 0x1DAFD0
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_36.f_18, 15);
}

void func_822(int iParam0)//Position - 0x1DB588
{
	Global_2656326[iParam0 /*46*/] = 0;
	Global_2656326[iParam0 /*46*/].f_2 = 0;
	Global_2656326[iParam0 /*46*/].f_3 = 0;
	Global_2656326[iParam0 /*46*/].f_4 = 0;
	Global_2656326[iParam0 /*46*/].f_5 = __LIB_0__.func_160();
	Global_2656326[iParam0 /*46*/].f_6 = 145;
	Global_2656326[iParam0 /*46*/].f_7 = 1;
	Global_2656326[iParam0 /*46*/].f_8 = -1;
	Global_2656326[iParam0 /*46*/].f_9 = -1;
	StringCopy(&(Global_2656326[iParam0 /*46*/].f_10), "", 64);
	Global_2656326[iParam0 /*46*/].f_26 = -1;
	StringCopy(&(Global_2656326[iParam0 /*46*/].f_27), "", 32);
	Global_2656326[iParam0 /*46*/].f_35 = -1;
	Global_2656326[iParam0 /*46*/].f_36 = -1;
	Global_2656326[iParam0 /*46*/].f_37 = 0;
	Global_2656326[iParam0 /*46*/].f_39 = 0;
	Global_2656326[iParam0 /*46*/].f_40 = -1;
	Global_2656326[iParam0 /*46*/].f_41 = 0;
	Global_2656326[iParam0 /*46*/].f_42 = 0;
	Global_2656326[iParam0 /*46*/].f_43 = 0;
	Global_2656326[iParam0 /*46*/].f_45 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		Global_2656326[iParam0 /*46*/].f_38 = NETWORK::GET_NETWORK_TIME();
	}
}

struct<16> func_823(int iParam0)//Position - 0x1DBC9B
{
	struct<16> Var0;
	StringCopy(&Var0, "<C>", 64);
	StringConCat(&Var0, PLAYER::GET_PLAYER_NAME(iParam0), 64);
	StringConCat(&Var0, "</C>", 64);
	return Var0;
}

void func_824()//Position - 0x1DBE23
{
	PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 176 /*INPUT_CELLPHONE_SELECT*/);
	PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 177 /*INPUT_CELLPHONE_CANCEL*/);
}

int func_825(int iParam0)//Position - 0x1DC779
{
	switch (iParam0)
	{
		case 0:
		case 1:
			return 315;
		case 6:
		case 7:
			return 435;
		case 18:
		case 19:
			return 610;
		case 10:
		case 11:
			return 379;
		case 12:
		case 13:
			return 376;
		case 2:
		case 3:
			return 316;
		case 4:
		case 5:
			return 314;
		case 20:
		case 21:
		case 22:
		case 23:
			return 644;
		case 24:
		case 25:
			return 726;
		case 26:
			return 786;
		case 27:
			return 785;
		default:
	}
	return 309;
}

int func_826(int iParam0)//Position - 0x1DC851
{
	switch (iParam0)
	{
		case 0:
			return 310;
		case 1:
			return 378;
		case 2:
			return 380;
		case 3:
			return 674;
		case 4:
			return 675;
		default:
	}
	return 310;
}

int func_827(int iParam0, int iParam1)//Position - 0x1DC89F
{
	switch (iParam0)
	{
		case 1:
			return 59;
		case 7:
			return 59;
		case 5:
			return 409;
		case 6:
			return 408;
		case 2:
		case 3:
		case 0:
		case 4:
		case 9:
		case 129:
			return 304;
		case 8:
			if (iParam1 == 0)
			{
				return 445;
			}
			else
			{
				return 304;
			}
			break;
	}
	return 304;
}

var func_828(int iParam0)//Position - 0x1DD5B9
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_11.f_1, 1);
}

bool func_829(int iParam0)//Position - 0x1DE64B
{
	return Global_2654152[iParam0 /*82*/].f_3;
}

bool func_830()//Position - 0x1DEDF5
{
	return Global_2653202 == 0;
}

int func_831()//Position - 0x1DEE03
{
	if (Global_1574612)
	{
		return 1;
	}
	if (__LIB_0__.func_189())
	{
		return 1;
	}
	if (__LIB_0__.func_188())
	{
		return 1;
	}
	return __LIB_1__.func_563(124, -1);
}

int func_832(int iParam0, int iParam1)//Position - 0x1DF9B1
{
	if (iParam1 == -1)
	{
		iParam1 = 0;
	}
	else if (iParam1 < 0)
	{
		return Global_1642434[iParam0 /*6*/].f_2;
	}
	else if (iParam1 >= Global_1642434[iParam0 /*6*/].f_1)
	{
		return Global_1642434[iParam0 /*6*/].f_2;
	}
	return (Global_1642434[iParam0 /*6*/].f_2 + iParam1);
}

var func_833(int iParam0)//Position - 0x1DFA4E
{
	return BitTest(Global_2686568[iParam0 /*41*/].f_40, 2);
}

void func_834(int iParam0)//Position - 0xDD1
{
	if (iParam0 != Global_1957718)
	{
		Global_1957718 = iParam0;
	}
}

int func_835(int iParam0, var uParam1)//Position - 0x26E9
{
	if (iParam0 == 3)
	{
		*uParam1 = (*uParam1 - 2);
		return 0;
	}
	*uParam1++;
	return iParam0 + 1;
}

int func_836(int iParam0, int iParam1)//Position - 0x27C3
{
	int iVar0;
	if (iParam0 >= 32 || iParam0 < 0)
	{
		return 0;
	}
	if (iParam1 <= 0 || iParam1 > 3)
	{
		return 0;
	}
	iVar0 = iParam0 + 1;
	iVar0 *= 3;
	iVar0 = (iVar0 - 2);
	return (iVar0 + (iParam1 - 1));
}

int func_837()//Position - 0x280F
{
	if (Global_1946186 < 0 || Global_1946186 >= 32)
	{
		return 0;
	}
	return Global_1946187[Global_1946186];
}

int func_838(int iParam0, int iParam1)//Position - 0x416C
{
	switch (iParam0)
	{
		case 14:
		case 5:
		case 0:
		case 3:
		case 2:
			return 0;
		case 6:
			if (__LIB_9__.func_643(iParam1) + 1 == 1)
			{
				return 1;
			}
			else
			{
				return 2;
			}
			break;
	}
	return 1;
}

int func_839()//Position - 0x471B
{
	if (__LIB_0__.func_582() == __LIB_0__.func_160())
	{
		return 0;
	}
	return __LIB_9__.func_643(__LIB_0__.func_582());
}

char* func_840(int iParam0)//Position - 0xC30A
{
	switch (iParam0)
	{
		case 1:
			return "MP_WAREHOUSE_1" /* GXT: La Puerta Vehicle Warehouse */;
		case 2:
			return "MP_WAREHOUSE_2" /* GXT: La Mesa Vehicle Warehouse */;
		case 3:
			return "MP_WAREHOUSE_3" /* GXT: Davis Vehicle Warehouse */;
		case 4:
			return "MP_WAREHOUSE_4" /* GXT: Strawberry Vehicle Warehouse */;
		case 5:
			return "MP_WAREHOUSE_5" /* GXT: Murrieta Heights Vehicle Warehouse */;
		case 6:
			return "MP_WAREHOUSE_6" /* GXT: Cypress Flats Vehicle Warehouse */;
		case 7:
			return "MP_WAREHOUSE_7" /* GXT: El Burro Heights Vehicle Warehouse */;
		case 8:
			return "MP_WAREHOUSE_8" /* GXT: Elysian Island Vehicle Warehouse */;
		case 9:
			return "MP_WAREHOUSE_9" /* GXT: LSIA Vehicle Warehouse */;
		case 10:
			return "MP_WAREHOUSE_10" /* GXT: LSIA Vehicle Warehouse */;
		default:
	}
	return "";
}

int func_841(int iParam0)//Position - 0xC7AA
{
	return SYSTEM::CEIL((IntToFloat(iParam0) * Global_262145.f_19462 /* Tunable: -466347733 */));
}

int func_842(int iParam0)//Position - 0xC7C1
{
	switch (iParam0)
	{
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
			return 1;
		default:
	}
	return 0;
}

int func_843(int iParam0)//Position - 0xC83C
{
	return SYSTEM::CEIL((IntToFloat(iParam0) * Global_262145.f_19461 /* Tunable: 1410072259 */));
}

int func_844(int iParam0)//Position - 0xC853
{
	switch (iParam0)
	{
		case 3:
			return Global_262145.f_19457 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_HARD */;
		case 2:
			return Global_262145.f_19458 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_MED */;
		case 1:
			return Global_262145.f_19459 /* Tunable: IMPEXP_SELL_BUYER1_OFFER_EASY */;
		default:
	}
	return 0;
}

int func_845(int iParam0)//Position - 0xC893
{
	switch (iParam0)
	{
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
			return 1;
		default:
	}
	return 0;
}

int func_846(int iParam0)//Position - 0xC8D7
{
	switch (iParam0)
	{
		case joaat("prototipo"):
		case joaat("tyrus"):
		case joaat("t20"):
		case joaat("sheava"):
		case joaat("osiris"):
		case joaat("fmj"):
		case joaat("reaper"):
		case joaat("pfister811"):
		case joaat("mamba"):
		case joaat("btype3"):
		case joaat("feltzer3"):
		case joaat("ztype"):
			return 3;
		case joaat("tropos"):
		case joaat("entityxf"):
		case joaat("sultanrs"):
		case joaat("zentorno"):
		case joaat("omnis"):
		case joaat("coquette3"):
		case joaat("seven70"):
		case joaat("verlierer2"):
		case joaat("coquette2"):
		case joaat("cheetah"):
			return 2;
		case joaat("bestiagts"):
		case joaat("nightshade"):
		case joaat("banshee2"):
		case joaat("sabregt2"):
		case joaat("turismor"):
		case joaat("tampa"):
		case joaat("massacro"):
		case joaat("jester"):
		case joaat("alpha"):
		case joaat("feltzer2"):
			return 1;
		default:
	}
	return 1;
}

void func_847(int iParam0)//Position - 0x16A00
{
	Global_4535595 = iParam0;
}

int func_848(int iParam0)//Position - 0x16B1A
{
	char cVar0[64];
	switch (iParam0)
	{
		case 0:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE0_v0", 64);
			break;
		case 1:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE1_v0", 64);
			break;
		case 2:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE2_v0", 64);
			break;
		case 3:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE3_v0", 64);
			break;
		case 4:
			StringCopy(&cVar0, "MP_STAT_MISSIONFORWHOUSE4_v0", 64);
			break;
	}
	if (MISC::IS_STRING_NULL_OR_EMPTY(&cVar0))
	{
		return -1;
	}
	return MISC::GET_HASH_KEY(&cVar0);
}

void func_849(char* sParam0, bool bParam1, int iParam2, bool bParam3, int iParam4)//Position - 0x16BAD
{
	if (bParam1)
	{
		if (iParam2 == -1)
		{
			StringCopy(sParam0, "CB_NONE_0_t0_v0", 64);
		}
		else if (bParam3)
		{
			StringCopy(sParam0, "CB_BUY_", 64);
			StringIntConCat(sParam0, iParam2, 64);
			StringConCat(sParam0, "_t1_v", 64);
			StringIntConCat(sParam0, iParam4, 64);
		}
		else
		{
			StringCopy(sParam0, "CB_BUY_", 64);
			StringIntConCat(sParam0, iParam2, 64);
			StringConCat(sParam0, "_t0_v0", 64);
		}
	}
	else
	{
		StringCopy(sParam0, "CB_SELL_0_t0_v0", 64);
	}
}

int func_850(int iParam0)//Position - 0x16C51
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16042 /* Tunable: EXEC_CONTRABAND_ORNAMENTAL_EGG_COST */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16040 /* Tunable: EXEC_CONTRABAND_GOLDEN_MINIGUN_COST */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16044 /* Tunable: EXEC_CONTRABAND_XL_DIAMOND_COST */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16038 /* Tunable: EXEC_CONTRABAND_SASQUATCH_HIDE_COST */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16036 /* Tunable: EXEC_CONTRABAND_FILM_REEL_COST */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16046 /* Tunable: EXEC_CONTRABAND_POCKET_WATCH_COST */;
	}
	return 0;
}

int func_851(int iParam0)//Position - 0x16CC9
{
	if (iParam0 == 2)
	{
		return 1;
	}
	else if (iParam0 == 4)
	{
		return 2;
	}
	else if (iParam0 == 6)
	{
		return 3;
	}
	else if (iParam0 == 7)
	{
		return 4;
	}
	else if (iParam0 == 8)
	{
		return 5;
	}
	else if (iParam0 == 9)
	{
		return 6;
	}
	return 0;
}

int func_852(int iParam0)//Position - 0x16D1F
{
	switch (iParam0)
	{
		case 1:
			return Global_262145.f_15816 /* Tunable: EXEC_CONTRABAND_SMALL_COST */;
		case 2:
			return Global_262145.f_15817 /* Tunable: EXEC_CONTRABAND_MEDIUM_COST */;
		case 3:
			return Global_262145.f_15818 /* Tunable: EXEC_CONTRABAND_LARGE_COST */;
		default:
	}
	return 0;
}

void func_853(var uParam0, var uParam1, var uParam2, var uParam3)//Position - 0x1705F
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_1 = uParam1;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_2 = uParam2;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_183.f_3 = uParam3;
}

int func_854(int iParam0)//Position - 0x17E26
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16051 /* Tunable: EXEC_BASE_CONTRABAND_ORNAMENTAL_EGG_COST */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16050 /* Tunable: EXEC_BASE_CONTRABAND_GOLDEN_MINIGUN_COST */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16052 /* Tunable: EXEC_BASE_CONTRABAND_XL_DIAMOND_COST */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16049 /* Tunable: EXEC_BASE_CONTRABAND_SASQUATCH_HIDE_COST */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16048 /* Tunable: EXEC_BASE_CONTRABAND_FILM_REEL_COST */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16053 /* Tunable: EXEC_BASE_CONTRABAND_POCKET_WATCH_COST */;
	}
	return 0;
}

int func_855(int iParam0)//Position - 0x17EB3
{
	switch (iParam0)
	{
		case 1:
			return Global_262145.f_15819 /* Tunable: EXEC_CONTRABAND_BASE_SMALL_COST */;
		case 2:
			return Global_262145.f_15820 /* Tunable: EXEC_CONTRABAND_BASE_MEDIUM_COST */;
		case 3:
			return Global_262145.f_15821 /* Tunable: EXEC_CONTRABAND_BASE_LARGE_COST */;
		default:
	}
	return 0;
}

int func_856(int iParam0)//Position - 0x181F6
{
	if (iParam0 == 1)
	{
		return Global_262145.f_16043 /* Tunable: EXEC_CONTRABAND_ORNAMENTAL_EGG_VALUE */;
	}
	else if (iParam0 == 2)
	{
		return Global_262145.f_16041 /* Tunable: EXEC_CONTRABAND_GOLDEN_MINIGUN_VALUE */;
	}
	else if (iParam0 == 3)
	{
		return Global_262145.f_16045 /* Tunable: EXEC_CONTRABAND_XL_DIAMOND_VALUE */;
	}
	else if (iParam0 == 4)
	{
		return Global_262145.f_16039 /* Tunable: EXEC_CONTRABAND_SASQUATCH_HIDE_VALUE */;
	}
	else if (iParam0 == 5)
	{
		return Global_262145.f_16037 /* Tunable: EXEC_CONTRABAND_FILM_REEL_VALUE */;
	}
	else if (iParam0 == 6)
	{
		return Global_262145.f_16047 /* Tunable: EXEC_CONTRABAND_POCKET_WATCH_VALUE */;
	}
	return 0;
}

int func_857(int iParam0, int iParam1)//Position - 0x1826E
{
	int iVar0;
	if (__LIB_2__.func_141(iParam0))
	{
		iVar0 = 0;
		while (iVar0 < 6)
		{
			if (Global_1945958[iVar0] == iParam1 && Global_1945965[iVar0] == iParam0)
			{
				return 1;
			}
			iVar0++;
		}
	}
	return 0;
}

int func_858(int iParam0)//Position - 0x182B4
{
	if (iParam0 >= Global_262145.f_15842 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD21 */)
	{
		return Global_262145.f_15863 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD21 */;
	}
	else if (iParam0 >= Global_262145.f_15841 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD20 */)
	{
		return Global_262145.f_15862 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD20 */;
	}
	else if (iParam0 >= Global_262145.f_15840 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD19 */)
	{
		return Global_262145.f_15861 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD19 */;
	}
	else if (iParam0 >= Global_262145.f_15839 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD18 */)
	{
		return Global_262145.f_15860 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD18 */;
	}
	else if (iParam0 >= Global_262145.f_15838 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD17 */)
	{
		return Global_262145.f_15859 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD17 */;
	}
	else if (iParam0 >= Global_262145.f_15837 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD16 */)
	{
		return Global_262145.f_15858 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD16 */;
	}
	else if (iParam0 >= Global_262145.f_15836 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD15 */)
	{
		return Global_262145.f_15857 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD15 */;
	}
	else if (iParam0 >= Global_262145.f_15835 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD14 */)
	{
		return Global_262145.f_15856 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD14 */;
	}
	else if (iParam0 >= Global_262145.f_15834 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD13 */)
	{
		return Global_262145.f_15855 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD13 */;
	}
	else if (iParam0 >= Global_262145.f_15833 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD12 */)
	{
		return Global_262145.f_15854 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD12 */;
	}
	else if (iParam0 >= Global_262145.f_15832 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD11 */)
	{
		return Global_262145.f_15853 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD11 */;
	}
	else if (iParam0 >= Global_262145.f_15831 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD10 */)
	{
		return Global_262145.f_15852 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD10 */;
	}
	else if (iParam0 >= Global_262145.f_15830 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD9 */)
	{
		return Global_262145.f_15851 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD9 */;
	}
	else if (iParam0 >= Global_262145.f_15829 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD8 */)
	{
		return Global_262145.f_15850 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD8 */;
	}
	else if (iParam0 >= Global_262145.f_15828 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD7 */)
	{
		return Global_262145.f_15849 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD7 */;
	}
	else if (iParam0 >= Global_262145.f_15827 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD6 */)
	{
		return Global_262145.f_15848 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD6 */;
	}
	else if (iParam0 >= Global_262145.f_15826 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD5 */)
	{
		return Global_262145.f_15847 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD5 */;
	}
	else if (iParam0 >= Global_262145.f_15825 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD4 */)
	{
		return Global_262145.f_15846 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD4 */;
	}
	else if (iParam0 >= Global_262145.f_15824 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD3 */)
	{
		return Global_262145.f_15845 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD3 */;
	}
	else if (iParam0 >= Global_262145.f_15823 /* Tunable: EXEC_CONTRABAND_SALE_CRATES_THRESHOLD2 */)
	{
		return Global_262145.f_15844 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD2 */;
	}
	return Global_262145.f_15843 /* Tunable: EXEC_CONTRABAND_SALE_VALUE_THRESHOLD1 */;
}

int func_859()//Position - 0x1851D
{
	return (Global_262145.f_15608 /* Tunable: EXEC_BUY_COOLDOWN */ / 1000);
}

int func_860(int iParam0)//Position - 0x18530
{
	switch (iParam0)
	{
		case 0:
			return 3661;
		case 1:
			return 3662;
		case 2:
			return 3663;
		case 3:
			return 3664;
		case 4:
			return 3665;
		default:
	}
	return 3661;
}

Vector3 func_861(int iParam0)//Position - 0x18A4C
{
	struct<3> Var0;
	Var0 = { 0f, 0f, 0f };
	if (!__LIB_2__.func_141(iParam0))
	{
		return Var0;
	}
	switch (iParam0)
	{
		case 1:
			Var0 = { 50.9205f, -2560.0098f, 6f };
			break;
		case 2:
			Var0 = { -1074.8517f, -1257.4519f, 5.6938f };
			break;
		case 3:
			Var0 = { 901.936f, -1019.4255f, 34.9666f };
			break;
		case 4:
			Var0 = { 253.9006f, -1955.9329f, 22.9477f };
			break;
		case 5:
			Var0 = { -426.279f, 180.9043f, 80.6855f };
			break;
		case 6:
			Var0 = { -1050.3604f, -2023.9388f, 12.1616f };
			break;
		case 7:
			Var0 = { -1275.3776f, -815.4295f, 17.1148f };
			break;
		case 8:
			Var0 = { -883.2906f, -2730.5417f, 12.8285f };
			break;
		case 9:
			Var0 = { 269.6765f, -3016.2786f, 5.7176f };
			break;
		case 10:
			Var0 = { 1561.4023f, -2138.6965f, 77.5275f };
			break;
		case 11:
			Var0 = { -303.7892f, -2698.3901f, 6.0003f };
			break;
		case 12:
			Var0 = { 507.2061f, -649.5859f, 24.7512f };
			break;
		case 13:
			Var0 = { -525.8206f, -1775.8699f, 21.3501f };
			break;
		case 14:
			Var0 = { -291.6372f, -1352.5558f, 31.3146f };
			break;
		case 15:
			Var0 = { 348.6436f, 324.428f, 104.3185f };
			break;
		case 16:
			Var0 = { 922.0838f, -1561.2987f, 29.7475f };
			break;
		case 17:
			Var0 = { 763.7448f, -885.2086f, 25.0869f };
			break;
		case 18:
			Var0 = { 1043.884f, -2172.6033f, 30.471f };
			break;
		case 19:
			Var0 = { 1001.6589f, -2511.8804f, 28.302f };
			break;
		case 20:
			Var0 = { -263.138f, 194.3424f, 85.184f };
			break;
		case 21:
			Var0 = { 547.8112f, -1942.5139f, 23.9851f };
			break;
		case 22:
			Var0 = { 88.9678f, -2216.8818f, 6.0613f };
			break;
	}
	return Var0;
}

int func_862()//Position - 0x1FF43
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 4)
	{
		if (Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_114[iVar0 /*3*/] != 0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

bool func_863()//Position - 0x1FFD8
{
	return Global_1946111;
}

void func_864(int iParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x24340
{
	if (iParam0 == 0)
	{
		return;
	}
	if (bParam1 && bParam2)
	{
		return;
	}
	if (bParam3)
	{
		if (!bParam1)
		{
			return;
		}
	}
	Global_2666811 = iParam0;
	if (bParam1)
	{
		Global_2666811 += 10000;
	}
	if (bParam2)
	{
		Global_2666811 += 10000;
		Global_2666811 += 20000;
	}
	if (bParam3)
	{
		Global_2666811 = (Global_2666811 + 40000);
	}
}

void func_865()//Position - 0x24406
{
	Global_2714762.f_718 = 0;
}

int func_866(int iParam0)//Position - 0x245BA
{
	switch (iParam0)
	{
		case 0:
			return 8;
			break;
		case 1:
			return 8;
			break;
		case 2:
			return 16;
			break;
	}
	return -1;
}

void func_867(int iParam0)//Position - 0x27541
{
	Global_1952159 = iParam0;
}

int func_868(int iParam0)//Position - 0x288FD
{
	int iVar0;
	iVar0 = NETWORK::NETWORK_GET_CONTENT_MODIFIER_LIST_ID(iParam0);
	if (iVar0 >= 0)
	{
		return iVar0 + 28;
	}
	return 27;
}

int func_869(int iParam0, var uParam1)//Position - 0x292E9
{
	if (*uParam1 != iParam0)
	{
		if (*uParam1 != 0)
		{
			NETWORK::UGC_RELEASE_CACHED_DESCRIPTION(*uParam1);
		}
		uParam1->f_2 = 0;
		*uParam1 = iParam0;
		uParam1->f_1 = 0;
	}
	if (iParam0 == 0)
	{
		return 1;
	}
	if (uParam1->f_2)
	{
		return 1;
	}
	else
	{
		if (iParam0 == -1)
		{
			uParam1->f_2 = 1;
			return 1;
		}
		if ((!NETWORK::UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS(iParam0) && uParam1->f_1 == 0) || uParam1->f_1 == -1)
		{
			uParam1->f_1 = NETWORK::UGC_REQUEST_CACHED_DESCRIPTION(iParam0);
		}
		else if (NETWORK::UGC_HAS_DESCRIPTION_REQUEST_FINISHED(iParam0))
		{
			if (NETWORK::UGC_DID_DESCRIPTION_REQUEST_SUCCEED(iParam0))
			{
				uParam1->f_2 = 1;
				return 1;
			}
			else
			{
				uParam1->f_2 = 0;
				return 1;
			}
		}
	}
	return 0;
}

int func_870(int iParam0)//Position - 0x294D3
{
	switch (iParam0)
	{
		case 0:
			return Global_262145.f_19465 /* Tunable: 1584540863 */;
		case 1:
			return Global_262145.f_19466 /* Tunable: 66939034 */;
		case 2:
			return Global_262145.f_19467 /* Tunable: 1728276108 */;
		case 3:
			return Global_262145.f_19468 /* Tunable: 473647117 */;
		case 4:
			return Global_262145.f_19469 /* Tunable: -519289138 */;
		case 5:
			return Global_262145.f_19470 /* Tunable: 505472864 */;
		case 6:
			return Global_262145.f_19471 /* Tunable: 385270792 */;
		case 7:
			return Global_262145.f_19472 /* Tunable: -1169424861 */;
		default:
	}
	return -1;
}

struct<4> func_871(int iParam0)//Position - 0x49F
{
	struct<4> Var0;
	StringCopy(&Var0, "INVALID", 16);
	switch (iParam0)
	{
		case 0:
			StringCopy(&Var0, "HAPPT_ANIMAL" /* GXT: Animal Materials */, 16);
			break;
		case 1:
			StringCopy(&Var0, "HAPPT_ART" /* GXT: Art & Antiques */, 16);
			break;
		case 2:
			StringCopy(&Var0, "HAPPT_CHEMS" /* GXT: Chemicals */, 16);
			break;
		case 3:
			StringCopy(&Var0, "HAPPT_GOODS" /* GXT: Counterfeit Goods */, 16);
			break;
		case 4:
			StringCopy(&Var0, "HAPPT_JEWEL" /* GXT: Jewelry & Gemstones */, 16);
			break;
		case 5:
			StringCopy(&Var0, "HAPPT_MEDS" /* GXT: Medical Supplies */, 16);
			break;
		case 6:
			StringCopy(&Var0, "HAPPT_NARC" /* GXT: Narcotics */, 16);
			break;
		case 7:
			StringCopy(&Var0, "HAPPT_TOBAC" /* GXT: Tobacco & Alcohol */, 16);
			break;
		case 8:
			StringCopy(&Var0, "HAPPT_MIXED" /* GXT: Cargo */, 16);
			break;
	}
	return Var0;
}

bool func_872(int iParam0)//Position - 0x8B75
{
	return 0 == __LIB_4__.func_878(iParam0);
}

float func_873(int iParam0, int iParam1)//Position - 0x8E38
{
	float fVar0;
	float fVar1;
	int iVar2;
	fVar0 = 0f;
	fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22848 /* Tunable: 599309088 */);
	switch (iParam0)
	{
		case -1:
		case 8:
			return 0f;
		case 7:
			fVar0 = Global_262145.f_22850 /* Tunable: 264591774 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22847 /* Tunable: 664286755 */);
			break;
		case 3:
			fVar0 = Global_262145.f_22850 /* Tunable: 264591774 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22847 /* Tunable: 664286755 */);
			break;
		case 0:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 1:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 4:
			fVar0 = Global_262145.f_22851 /* Tunable: 99009277 */;
			break;
		case 6:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
		case 2:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
		case 5:
			fVar0 = Global_262145.f_22852 /* Tunable: 643266636 */;
			fVar1 = SYSTEM::TO_FLOAT(Global_262145.f_22849 /* Tunable: 486872462 */);
			break;
	}
	iVar2 = SYSTEM::FLOOR((SYSTEM::TO_FLOAT(iParam1) / fVar1));
	return (SYSTEM::TO_FLOAT(iVar2) * fVar0);
}

int func_874(int iParam0)//Position - 0x8F61
{
	switch (iParam0)
	{
		case 8:
			return Global_262145.f_22838 /* Tunable: -954321460 */;
		case 0:
			return Global_262145.f_22839 /* Tunable: 117429930 */;
		case 1:
			return Global_262145.f_22840 /* Tunable: 921812958 */;
		case 2:
			return Global_262145.f_22841 /* Tunable: 1940564107 */;
		case 3:
			return Global_262145.f_22842 /* Tunable: -2031678534 */;
		case 4:
			return Global_262145.f_22843 /* Tunable: -2091681714 */;
		case 5:
			return Global_262145.f_22844 /* Tunable: 975965466 */;
		case 6:
			return Global_262145.f_22845 /* Tunable: 1382988286 */;
		case 7:
			return Global_262145.f_22846 /* Tunable: 2066048851 */;
		default:
	}
	return 0;
}

void func_875(var uParam0, var uParam1)//Position - 0x97AC
{
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_234 = uParam0;
	Global_1892703[PLAYER::PLAYER_ID() /*599*/].f_10.f_234.f_22 = uParam1;
}

void func_876(int iParam0)//Position - 0x9958
{
	Global_4535597 = iParam0;
}

int func_877(int iParam0)//Position - 0xB09E
{
	switch (iParam0)
	{
		case 1:
			return joaat("sm_prop_smug_crate_l_medical");
		case 2:
			return joaat("sm_prop_smug_crate_m_medical");
		case 3:
			return joaat("sm_prop_smug_crate_l_tobacco");
		case 4:
			return joaat("sm_prop_smug_crate_m_tobacco");
		case 5:
			return joaat("sm_prop_smug_crate_l_antiques");
		case 6:
			return joaat("sm_prop_smug_crate_m_antiques");
		case 7:
			return joaat("sm_prop_smug_crate_l_narc");
		case 8:
			return joaat("sm_prop_smug_crate_m_narc");
		case 9:
			return joaat("sm_prop_smug_crate_l_jewellery");
		case 10:
			return joaat("sm_prop_smug_crate_m_jewellery");
		case 11:
			return joaat("sm_prop_smug_crate_l_bones");
		case 12:
			return joaat("sm_prop_smug_crate_m_bones");
		case 13:
			return joaat("sm_prop_smug_crate_l_fake");
		case 14:
			return joaat("sm_prop_smug_crate_m_fake");
		case 15:
			return joaat("sm_prop_smug_crate_l_hazard");
		case 16:
			return joaat("sm_prop_smug_crate_m_hazard");
		default:
	}
	return 0;
}

int func_878(int iParam0)//Position - 0xB1AA
{
	switch (iParam0)
	{
		case 0:
			return 16011;
		case 1:
			return 16012;
		case 2:
			return 16013;
		case 3:
			return 16014;
		case 4:
			return 16015;
		case 5:
			return 16016;
		case 6:
			return 16017;
		case 7:
			return 16018;
		case 8:
			return 16019;
		case 9:
			return 16020;
		case 10:
			return 16021;
		case 11:
			return 16022;
		case 12:
			return 16023;
		case 13:
			return 16024;
		case 14:
			return 16025;
		case 15:
			return 16026;
		case 16:
			return 16027;
		case 17:
			return 16028;
		case 18:
			return 16029;
		case 19:
			return 16030;
		case 20:
			return 16031;
		case 21:
			return 16032;
		case 22:
			return 16033;
		case 23:
			return 16034;
		case 24:
			return 16035;
		case 25:
			return 16036;
		case 26:
			return 16037;
		case 27:
			return 16038;
		case 28:
			return 16039;
		case 29:
			return 16040;
		case 30:
			return 16041;
		case 31:
			return 16042;
		case 32:
			return 16043;
		case 33:
			return 16044;
		case 34:
			return 16045;
		case 35:
			return 16046;
		case 36:
			return 16047;
		case 37:
			return 16048;
		case 38:
			return 16049;
		case 39:
			return 16050;
		case 40:
			return 16051;
		case 41:
			return 16052;
		case 42:
			return 16053;
		case 43:
			return 16054;
		case 44:
			return 16055;
		case 45:
			return 16056;
		case 46:
			return 16057;
		case 47:
			return 16058;
		case 48:
			return 16059;
		case 49:
			return 16060;
		default:
	}
	return 16011;
}

bool func_879()//Position - 0xBE82
{
	return BitTest(uLocal_109, 1);
}

void func_880(int iParam0)//Position - 0xC37F
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = (iParam0 + iVar0);
		if (!__LIB_0__.func_137(iVar1, -1))
		{
			__LIB_0__.func_521(iVar1, 1, -1);
			return;
		}
		iVar0++;
	}
}

bool func_881()//Position - 0xD376
{
	return __LIB_0__.func_137(15966, -1);
}

void func_882(int iParam0)//Position - 0x2913
{
	int iVar0;
	iVar0 = 0;
	switch (Global_113386.f_14141[iParam0 /*104*/].f_49)
	{
		case 1:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL01" /* GXT: ~a~ ~a~. */);
			break;
		case 2:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL02" /* GXT: ~a~ ~a~, ~a~. */);
			break;
		case 3:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL03" /* GXT: ~a~ ~a~, ~a~, ~a~. */);
			break;
		case 4:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL04" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 5:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL05" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 6:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL06" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 7:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL07" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 8:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL08" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
		case 9:
			GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("CELL_CL09" /* GXT: ~a~ ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~, ~a~. */);
			break;
	}
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_113386.f_14141[iParam0 /*104*/]));
	while (iVar0 < Global_113386.f_14141[iParam0 /*104*/].f_49)
	{
		switch (Global_113386.f_14141[iParam0 /*104*/].f_32)
		{
			case 4:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_2815059.f_1725[iVar0 /*4*/]));
				break;
			case 5:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931438[iVar0 /*4*/]));
				break;
			case 6:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931479[iVar0 /*4*/]));
				break;
			case 7:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931500[iVar0 /*4*/]));
				break;
			case 8:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931517[iVar0 /*4*/]));
				break;
			case 9:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931530[iVar0 /*4*/]));
				break;
			case 10:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931543[iVar0 /*4*/]));
				break;
			case 11:
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(&(Global_1931556[iVar0 /*4*/]));
				break;
		}
		iVar0++;
	}
	GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
}

bool func_883(int iParam0)//Position - 0x2C71
{
	return BitTest(Global_1892703[iParam0 /*599*/].f_3, 5);
}

bool func_884(int iParam0)//Position - 0x2C86
{
	return BitTest(Global_1892703[iParam0 /*599*/].f_3, 3);
}

void func_885(int iParam0, var uParam1, int iParam2)//Position - 0xE74C8
{
	uParam1->f_22.f_69[0] = "";
	uParam1->f_22.f_69[1] = "";
	uParam1->f_22.f_80 = "GTAO_Script_Doors_Faded_Screen_Sounds";
	uParam1->f_22.f_79 = "Garage_Door_Close";
	uParam1->f_22.f_88 = "GTAO_Script_Doors_Faded_Screen_Sounds";
	uParam1->f_22.f_87 = "Garage_Door_Close";
	uParam1->f_22.f_3 = "anim@apt_trans@garage";
	uParam1->f_22.f_5 = "gar_open_1_left";
	uParam1->f_22.f_34 = 0f;
	uParam1->f_22.f_35 = 0.45f;
	uParam1->f_22.f_4 = "";
	uParam1->f_22.f_6 = "";
	uParam1->f_22.f_40 = 0.1f;
	uParam1->f_22.f_59 = { -305.6156f, -1811.623f, 43.7338f };
	uParam1->f_22.f_62 = { -3.1585f, 0f, 167.2231f };
	uParam1->f_22.f_65 = 52.1727f;
	uParam1->f_22.f_66 = 0.2f;
	switch (iParam2)
	{
		case 0:
			uParam1->f_22.f_13 = { -360.5857f, -1866.0913f, 21.5786f };
			uParam1->f_22.f_16 = { -2.5741f, -0.0486f, 156.2227f };
			uParam1->f_22.f_19 = 44.2101f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -364.237f, -1874.903f, 19.51f };
			uParam1->f_22.f_31 = { 0f, 0f, -56.25f };
			break;
		case 1:
			uParam1->f_22.f_13 = { -372.5756f, -1867.3385f, 23.6148f };
			uParam1->f_22.f_16 = { -11.1339f, -0.0009f, 164.4299f };
			uParam1->f_22.f_19 = 41.4256f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -375.853f, -1878.3f, 19.528f };
			uParam1->f_22.f_31 = { 0f, 0f, -47f };
			break;
		case 2:
			uParam1->f_22.f_13 = { -385.7779f, -1868.6774f, 23.7628f };
			uParam1->f_22.f_16 = { -11.0499f, -0.0187f, 173.4695f };
			uParam1->f_22.f_19 = 36.5515f;
			uParam1->f_22.f_20 = { 0f, 0f, 0f };
			uParam1->f_22.f_23 = { 0f, 0f, 0f };
			uParam1->f_22.f_26 = 0f;
			uParam1->f_22.f_28 = { -387.012f, -1883.659f, 19.525f };
			uParam1->f_22.f_31 = { 0f, 0f, -40f };
			break;
		case 6:
		case 7:
			if (__LIB_3__.func_16(PLAYER::PLAYER_ID(), __LIB_3__.func_17(iParam0)) && (!func_2879() || iParam2 == 7))
			{
				uParam1->f_22.f_13 = { -397.58f, -1887.553f, 22.2998f };
				uParam1->f_22.f_16 = { -1.429f, -0.0057f, 5.8277f };
				uParam1->f_22.f_19 = 45.8457f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { -397.6456f, -1887.5483f, 22.2994f };
				uParam1->f_22.f_23 = { -1.429f, -0.0057f, 13.3423f };
				uParam1->f_22.f_26 = 45.8457f;
				uParam1->f_22.f_3 = "anim@apt_trans@hinge_r";
				uParam1->f_22.f_28 = { -399.731f, -1885.762f, 20.721f };
				uParam1->f_22.f_31 = { 0f, 0f, -56.5f };
				uParam1->f_22.f_5 = "ext_player";
				uParam1->f_22.f_34 = 0.1f;
				uParam1->f_22.f_35 = 0.4f;
				uParam1->f_22.f_69[0] = "GENERIC_DOOR_PUSH";
				uParam1->f_22.f_69[1] = "GENERIC_DOOR_LIMIT";
				uParam1->f_22.f_72[0] = 0.251f;
				uParam1->f_22.f_72[1] = 0.35f;
				uParam1->f_22.f_75 = "GTAO_SCRIPT_DOORS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				uParam1->f_22.f_4 = "";
				uParam1->f_22.f_6 = "";
			}
			else
			{
				uParam1->f_22.f_13 = { -394.8493f, -1886.1761f, 21.789f };
				uParam1->f_22.f_16 = { -0.9744f, 0f, 74.5255f };
				uParam1->f_22.f_19 = 50f;
				uParam1->f_22.f_40 = 0.1f;
				uParam1->f_22.f_20 = { -395.4853f, -1886.0001f, 21.7778f };
				uParam1->f_22.f_23 = { -0.9744f, 0f, 76.6543f };
				uParam1->f_22.f_26 = 50f;
				uParam1->f_22.f_3 = "anim@apt_trans@buzzer";
				uParam1->f_22.f_28 = { -400.079f, -1884.535f, 20.532f };
				uParam1->f_22.f_31 = { 0f, 0f, 109.75f };
				uParam1->f_22.f_5 = "buzz_short";
				uParam1->f_22.f_34 = 0.2f;
				uParam1->f_22.f_35 = 0.8f;
				uParam1->f_22.f_69[0] = "DOOR_BUZZ_ONESHOT_MASTER";
				uParam1->f_22.f_72[0] = 0.353f;
				uParam1->f_22.f_75 = "GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS";
				uParam1->f_22.f_80 = "";
				uParam1->f_22.f_79 = "";
				uParam1->f_22.f_88 = "";
				uParam1->f_22.f_87 = "";
				if (__LIB_0__.func_308(PLAYER::PLAYER_ID()))
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@female_arms_crossed@enter";
					uParam1->f_22.f_6 = "enter";
				}
				else
				{
					uParam1->f_22.f_4 = "amb@world_human_hang_out_street@male_c@enter";
					uParam1->f_22.f_6 = "enter";
				}
			}
			break;
	}
}

void func_886(var uParam0)//Position - 0x18D365
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		uParam0->f_47.f_996[iVar0] = 0;
		iVar0++;
	}
	MISC::CLEAR_BIT(&Global_2621446, 20);
	Global_2621446.f_82 = 0;
	if (Global_1574963)
	{
		MISC::SET_BIT(&Global_2621446, 20);
		iVar0 = 0;
		while (iVar0 < 32)
		{
			iVar1 = PLAYER::INT_TO_PLAYERINDEX(iVar0);
			if (__LIB_1__.func_264(iVar1, 1, 1))
			{
				if (!BitTest(Global_1853348[iVar1 /*834*/].f_199, 0))
				{
					if (PLAYER::GET_PLAYER_TEAM(iVar1) == PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()))
					{
						if (iVar1 != PLAYER::PLAYER_ID())
						{
							MISC::CLEAR_BIT(&Global_2621446, 20);
							iVar0 = 32;
						}
					}
					else if (__LIB_0__.func_610(PLAYER::GET_PLAYER_TEAM(iVar1), PLAYER::GET_PLAYER_TEAM(PLAYER::PLAYER_ID()), 0))
					{
						if (iVar1 != PLAYER::PLAYER_ID())
						{
							Global_2621446.f_82 = 1;
						}
					}
				}
			}
			iVar0++;
		}
	}
	Global_2727749 = 1;
	MISC::CLEAR_BIT(&(uParam0->f_1), 8);
}

void func_887()//Position - 0x18DD9D
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 32)
	{
		iVar1 = iVar0;
		if (iVar1 != __LIB_0__.func_160())
		{
			if (__LIB_1__.func_264(iVar1, 0, 1))
			{
				NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(iVar0, false);
			}
		}
		iVar0++;
	}
}

int func_888(int iParam0)//Position - 0x1B5015
{
	int iVar0;
	struct<3> Var1;
	if (__LIB_1__.func_264(iParam0, 0, 1))
	{
		iVar0 = PLAYER::GET_PLAYER_PED(iParam0);
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			if (ENTITY::IS_ENTITY_DEAD(iVar0, false))
			{
			}
			Var1 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
			if (Var1.f_2 > -145f)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_889(int* iParam0, int iParam1, bool bParam2)//Position - 0x1BDB1A
{
	int iVar0;
	iVar0 = iParam1;
	if (bParam2)
	{
		MISC::SET_BIT(iParam0, iVar0);
	}
	else
	{
		MISC::CLEAR_BIT(iParam0, iVar0);
	}
}

void func_890(int iParam0)//Position - 0xA1D
{
	Global_2725430 = iParam0;
}

bool func_891()//Position - 0x170F
{
	return Global_1574966;
}

void func_892(int iParam0, int iParam1, var uParam2)//Position - 0x38FE
{
	int iVar0;
	iVar0 = Global_2868734[iParam0 /*3*/][__LIB_0__.func_330(uParam2)];
	STATS::STAT_SET_INT(iVar0, iParam1, true);
}

int func_893()//Position - 0x3D28
{
	if (Global_2725430 >= 0 && Global_2725430 < 10)
	{
		return 1;
	}
	return 0;
}

void func_894(int iParam0)//Position - 0x3F1B
{
	Global_2787932 = iParam0;
}

void func_895()//Position - 0x3F29
{
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("turret_cam_script")) > 0)
	{
		Global_2787945 = 1;
	}
}

bool func_896()//Position - 0x3F43
{
	return (Global_2787932 == 3 || Global_2787932 == 0);
}

int func_897(int iParam0)//Position - 0x3F5D
{
	if (Global_2787943 == iParam0)
	{
		if (Global_2787932 == 2)
		{
			if (Global_2787943 == Global_2787944)
			{
				return 1;
			}
			else
			{
				return 2;
			}
		}
		else if (Global_2787932 == 0)
		{
			return 2;
		}
	}
	else
	{
		return 2;
	}
	return 0;
}

bool func_898(int iParam0, var uParam1)//Position - 0x5000
{
	return ENTITY::IS_ENTITY_IN_ANGLED_AREA(iParam0, uParam1->f_1, uParam1->f_1.f_3, uParam1->f_1.f_6, false, true, 0);
}

float func_899()//Position - 0x53BD
{
	return 0.13f;
}

int func_900()//Position - 0x5605
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2797.9878f, -3943.8984f, 181.00049f, 2797.9492f, -3919.8503f, 187.4114f, 30f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

bool func_901()//Position - 0x4596
{
	return Global_4718592.f_2 == 8;
}

void func_902(bool bParam0)//Position - 0xA8D1
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 22))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 22);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 22))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 22);
	}
}

bool func_903(int iParam0)//Position - 0xA92E
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 21);
}

void func_904(bool bParam0)//Position - 0xA944
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 5))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 5);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 5))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 5);
	}
}

void func_905(bool bParam0)//Position - 0xAA55
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 12))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 12);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 12))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 12);
	}
}

void func_906(bool bParam0)//Position - 0xD86A
{
	if (!Global_2787855)
	{
		if (bParam0)
		{
			if (Global_78319)
			{
				if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
				{
					NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
				}
			}
		}
	}
}

int func_907(int iParam0)//Position - 0x1C014
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_143, 20);
}

int func_908(int iParam0)//Position - 0xB162C
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
		switch (iVar0)
		{
			case joaat("voltic"):
				return VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 3);
				break;
			case joaat("coquette"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			case joaat("banshee"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			case joaat("stinger"):
				return !VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam0, 2);
				break;
			}
	}
	return 0;
}

void func_909(bool bParam0)//Position - 0xD0E10
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 18))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 18);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 18))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 18);
	}
}

bool func_910()//Position - 0xD9D89
{
	return DLC::IS_DLC_PRESENT(joaat("mpbusiness2"));
}

int func_911(int iParam0)//Position - 0xF7D2B
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (__LIB_4__.func_566(iVar0))
	{
		if (VEHICLE::GET_VEHICLE_MOD(iParam0, 36) != -1)
		{
			return 1;
		}
	}
	return 0;
}

void func_912()//Position - 0xFC550
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		Global_1835008[iVar0 /*103*/].f_100 = -1;
		iVar0++;
	}
}

void func_913()//Position - 0xFC787
{
	if (Global_100493.f_5 && Global_100493.f_6 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
	{
		HUD::CLEAR_HELP(true);
		Global_100493.f_5 = 0;
	}
}

var func_914()//Position - 0x1021E4
{
	return Global_2789625.f_66;
}

int func_915()//Position - 0x1022D2
{
	return 34779;
}

int func_916(int iParam0)//Position - 0x102964
{
	switch (iParam0)
	{
		case 0:
			return 34773;
		case 1:
			return 34774;
		case 2:
			return 34775;
		default:
	}
	return 0;
}

int func_917(int iParam0)//Position - 0x105608
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		switch (ENTITY::GET_ENTITY_MODEL(iParam0))
		{
			case joaat("tula"):
			case joaat("mogul"):
			case joaat("rogue"):
			case joaat("bombushka"):
			case joaat("seabreeze"):
			case joaat("hunter"):
			case joaat("nokota"):
				return 1;
				break;
			}
	}
	return 0;
}

int func_918(int iParam0)//Position - 0x105DC6
{
	switch (iParam0)
	{
		case 0:
			return 34767;
		case 1:
			return 34768;
		case 2:
			return 34769;
		default:
	}
	return 0;
}

int func_919()//Position - 0x1068D5
{
	return 34766;
}

int func_920(int iParam0)//Position - 0x107703
{
	switch (iParam0)
	{
		case 0:
			return 31702;
			break;
		case 1:
			return 31704;
			break;
	}
	return 0;
}

int func_921(int iParam0, int iParam1)//Position - 0x107815
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31682;
				case 1:
					return 31683;
				case 2:
					return 31684;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31695;
				case 1:
					return 31696;
				case 2:
					return 31697;
				default:
			}
			break;
	}
	return 0;
}

int func_922(int iParam0, int iParam1)//Position - 0x1079B0
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 0:
					return 31676;
				case 1:
					return 31677;
				case 2:
					return 31678;
				default:
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 0:
					return 31689;
				case 1:
					return 31690;
				case 2:
					return 31691;
				default:
			}
			break;
	}
	return 0;
}

int func_923(int iParam0)//Position - 0x107B11
{
	switch (iParam0)
	{
		case 0:
			return 31675;
			break;
		case 1:
			return 31688;
			break;
	}
	return 0;
}

int func_924(int iParam0)//Position - 0x108405
{
	int iVar0;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iVar0)
	{
		case joaat("tezeract"):
		case joaat("oppressor2"):
		case joaat("scarab"):
		case joaat("scarab2"):
		case joaat("scarab3"):
		case joaat("deathbike"):
		case joaat("deathbike2"):
		case joaat("deathbike3"):
		case joaat("cyclone"):
		case joaat("zeno"):
		case joaat("iwagen"):
			return 1;
			break;
	}
	if (Global_103941 != 0 && iVar0 == Global_103941)
	{
		return 1;
	}
	return 0;
}

void func_925(int iParam0, struct<16> Param1)//Position - 0x108797
{
	if (iParam0 != -1 && iParam0 < 30)
	{
		Global_2359296[__LIB_0__.func_153() /*5567*/].f_7.f_105[iParam0 /*16*/] = { Param1 };
	}
}

void func_926(int iParam0, var uParam1, int iParam2)//Position - 0x10D277
{
	Global_100493.f_1460 = iParam0;
	Global_100493.f_1461 = uParam1;
	Global_100493.f_1462 = iParam2;
}

float func_927()//Position - 0x1100C3
{
	return Global_23150.f_6267;
}

void func_928(int iParam0, int iParam1, int iParam2)//Position - 0x134BC7
{
	int iVar0;
	if (iParam1 == -1)
	{
		iParam1 = 255;
	}
	__LIB_9__.func_458(iParam0, &iVar0);
	__LIB_1__.func_39(iVar0, iParam1, iParam2);
}

void func_929(int iParam0)//Position - 0x13B13A
{
	if (Global_2789731 != iParam0)
	{
		Global_2789731 = iParam0;
	}
}

struct<103> func_930()//Position - 0x13B218
{
	return Global_2789625;
}

void func_931(bool bParam0)//Position - 0x13BA25
{
	if (!bParam0)
	{
		if (BitTest(Global_103317, 1))
		{
			MISC::CLEAR_BIT(&Global_103317, 1);
		}
	}
	else if (!BitTest(Global_103317, 1))
	{
		MISC::SET_BIT(&Global_103317, 1);
	}
}

void func_932(int iParam0, int iParam1)//Position - 0x13BA9E
{
	if (iParam1 < 0 || iParam1 >= 2)
	{
		return;
	}
	if (Global_2789409[iParam1] != iParam0)
	{
		Global_2789409[iParam1] = iParam0;
	}
}

void func_933(bool bParam0)//Position - 0x14D4BA
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 21))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 21);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 21))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 21);
	}
}

void func_934(bool bParam0)//Position - 0x14D5D7
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 26))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 26);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 26))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 26);
	}
}

bool func_935(int iParam0)//Position - 0x1536E9
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 26);
}

int func_936(int iParam0)//Position - 0x168156
{
	int iVar0;
	var uVar1;
	iVar0 = iParam0;
	if (STATS::STAT_GET_BOOL(iVar0, &uVar1, -1))
	{
		return uVar1;
	}
	return 0;
}

void func_937(bool bParam0)//Position - 0x1695DA
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 20))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 20);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 20))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 20);
	}
}

void func_938(bool bParam0)//Position - 0x169647
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 18))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 18);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292, 18))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_292), 18);
	}
}

void func_939(bool bParam0)//Position - 0x182EEF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 2))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 2);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 2))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 2);
	}
}

void func_940(bool bParam0)//Position - 0x182FF0
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 3))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 3);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 3))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 3);
	}
}

void func_941()//Position - 0x183049
{
	if (Global_152218 != -1)
	{
		if (!BitTest(Global_1585857[Global_152218 /*142*/].f_103, 12))
		{
			MISC::SET_BIT(&(Global_1585857[Global_152218 /*142*/].f_103), 12);
		}
	}
}

bool func_942()//Position - 0x187C08
{
	return BitTest(Global_2789732, 0);
}

int func_943(int iParam0)//Position - 0x1880D4
{
	if (iParam0 == joaat("oppressor2"))
	{
		return 1;
	}
	return 0;
}

int func_944(int iParam0)//Position - 0x1900D8
{
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	return BitTest(Global_1853348[iParam0 /*834*/].f_143, 18);
}

void func_945(int iParam0, var uParam1)//Position - 0x19FD52
{
	switch (iParam0)
	{
		case 30:
			uParam1->f_66 = joaat("alpha");
			StringCopy(&(uParam1->f_1), "R31GN", 16);
			*uParam1 = 4;
			uParam1->f_5 = 71;
			uParam1->f_6 = 71;
			uParam1->f_7 = 28;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 24);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 29;
			uParam1->f_59[0] = 1;
			break;
		case 84:
			uParam1->f_66 = joaat("banshee2");
			StringCopy(&(uParam1->f_1), "H0WL3R", 16);
			*uParam1 = 4;
			uParam1->f_5 = 138;
			uParam1->f_6 = 138;
			uParam1->f_7 = 89;
			uParam1->f_8 = 138;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 15;
			uParam1->f_75 = 3;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[0] = 6;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 5;
			uParam1->f_9[6] = 4;
			uParam1->f_9[7] = 6;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 19;
			uParam1->f_59[0] = 1;
			break;
		case 9:
			uParam1->f_66 = joaat("bestiagts");
			StringCopy(&(uParam1->f_1), "5M00TH", 16);
			*uParam1 = 2;
			uParam1->f_5 = 65;
			uParam1->f_6 = 57;
			uParam1->f_7 = 53;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 33;
			uParam1->f_59[0] = 1;
			break;
		case 39:
			uParam1->f_66 = joaat("btype3");
			StringCopy(&(uParam1->f_1), "V4L0R", 16);
			uParam1->f_5 = 12;
			uParam1->f_6 = 28;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 20;
			uParam1->f_63 = 20;
			uParam1->f_64 = 20;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 3;
			uParam1->f_9[8] = 2;
			uParam1->f_9[9] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 10;
			uParam1->f_9[43] = 1;
			uParam1->f_9[44] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 78:
			uParam1->f_66 = joaat("cheetah");
			StringCopy(&(uParam1->f_1), "B1GC4T", 16);
			*uParam1 = 3;
			uParam1->f_5 = 70;
			uParam1->f_6 = 136;
			uParam1->f_7 = 136;
			uParam1->f_8 = 136;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 3;
			uParam1->f_59[0] = 1;
			break;
		case 75:
			uParam1->f_66 = joaat("coquette2");
			StringCopy(&(uParam1->f_1), "CL45SY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 92;
			uParam1->f_6 = 38;
			uParam1->f_7 = 38;
			uParam1->f_8 = 41;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 2;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[23] = 12;
			uParam1->f_59[0] = 1;
			break;
		case 63:
			uParam1->f_66 = joaat("coquette3");
			StringCopy(&(uParam1->f_1), "BLKF1N", 16);
			*uParam1 = 4;
			uParam1->f_5 = 35;
			uParam1->f_6 = 107;
			uParam1->f_7 = 25;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 51:
			uParam1->f_66 = joaat("entityxf");
			StringCopy(&(uParam1->f_1), "W1DEB0Y", 16);
			*uParam1 = 2;
			uParam1->f_5 = 41;
			uParam1->f_8 = 122;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 226;
			uParam1->f_63 = 6;
			uParam1->f_64 = 6;
			uParam1->f_74 = 255;
			uParam1->f_75 = 1;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 26);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 5;
			uParam1->f_59[0] = 1;
			break;
		case 72:
			uParam1->f_66 = joaat("feltzer2");
			StringCopy(&(uParam1->f_1), "R4C3R", 16);
			*uParam1 = 1;
			uParam1->f_5 = 70;
			uParam1->f_7 = 70;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[23] = 35;
			uParam1->f_59[0] = 1;
			break;
		case 42:
			uParam1->f_66 = joaat("feltzer3");
			StringCopy(&(uParam1->f_1), "R4LLY", 16);
			uParam1->f_5 = 54;
			uParam1->f_6 = 7;
			uParam1->f_7 = 60;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[23] = 7;
			break;
		case 21:
			uParam1->f_66 = joaat("fmj");
			StringCopy(&(uParam1->f_1), "H0T4U", 16);
			*uParam1 = 1;
			uParam1->f_5 = 71;
			uParam1->f_6 = 135;
			uParam1->f_7 = 135;
			uParam1->f_8 = 135;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 5;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 16;
			break;
		case 96:
			uParam1->f_66 = joaat("jester");
			StringCopy(&(uParam1->f_1), "NOF00L", 16);
			uParam1->f_5 = 131;
			uParam1->f_6 = 42;
			uParam1->f_8 = 88;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 4;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 2;
			uParam1->f_9[15] = 4;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 33:
			uParam1->f_66 = joaat("mamba");
			StringCopy(&(uParam1->f_1), "V1P", 16);
			*uParam1 = 4;
			uParam1->f_5 = 51;
			uParam1->f_6 = 120;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 1);
			uParam1->f_9[7] = 1;
			uParam1->f_9[15] = 1;
			uParam1->f_9[23] = 2;
			break;
		case 90:
			uParam1->f_66 = joaat("massacro");
			StringCopy(&(uParam1->f_1), "B055", 16);
			*uParam1 = 4;
			uParam1->f_5 = 2;
			uParam1->f_6 = 6;
			uParam1->f_7 = 38;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[7] = 2;
			uParam1->f_9[8] = 1;
			uParam1->f_9[23] = 29;
			uParam1->f_59[0] = 1;
			break;
		case 81:
			uParam1->f_66 = joaat("nightshade");
			StringCopy(&(uParam1->f_1), "E4TM3", 16);
			*uParam1 = 1;
			uParam1->f_5 = 88;
			uParam1->f_6 = 12;
			uParam1->f_7 = 70;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 1;
			uParam1->f_9[7] = 4;
			uParam1->f_9[15] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 4;
			uParam1->f_59[0] = 1;
			break;
		case 60:
			uParam1->f_66 = joaat("omnis");
			StringCopy(&(uParam1->f_1), "D1RTY", 16);
			uParam1->f_5 = 63;
			uParam1->f_6 = 63;
			uParam1->f_7 = 87;
			uParam1->f_8 = 111;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_65 = 1;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 18:
			uParam1->f_66 = joaat("osiris");
			StringCopy(&(uParam1->f_1), "SL33K", 16);
			*uParam1 = 4;
			uParam1->f_5 = 107;
			uParam1->f_6 = 31;
			uParam1->f_7 = 107;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 3;
			uParam1->f_9[4] = 1;
			uParam1->f_9[8] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 6;
			break;
		case 27:
			uParam1->f_66 = joaat("pfister811");
			StringCopy(&(uParam1->f_1), "SL1CK", 16);
			*uParam1 = 1;
			uParam1->f_5 = 12;
			uParam1->f_6 = 38;
			uParam1->f_8 = 138;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 127;
			uParam1->f_74 = 255;
			uParam1->f_75 = 62;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 1;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[15] = 3;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 18;
			break;
		case 3:
			uParam1->f_66 = joaat("prototipo");
			StringCopy(&(uParam1->f_1), "TURB0", 16);
			uParam1->f_5 = 70;
			uParam1->f_6 = 111;
			uParam1->f_7 = 70;
			uParam1->f_8 = 70;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 2;
			uParam1->f_9[1] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[23] = 16;
			break;
		case 24:
			uParam1->f_66 = joaat("reaper");
			StringCopy(&(uParam1->f_1), "GR1M", 16);
			*uParam1 = 1;
			uParam1->f_5 = 92;
			uParam1->f_6 = 42;
			uParam1->f_7 = 88;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_75 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[15] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 33;
			uParam1->f_59[0] = 1;
			break;
		case 93:
			uParam1->f_66 = joaat("sabregt2");
			StringCopy(&(uParam1->f_1), "B0UNC3", 16);
			*uParam1 = 4;
			uParam1->f_5 = 12;
			uParam1->f_6 = 12;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 2;
			uParam1->f_9[2] = 1;
			uParam1->f_9[4] = 3;
			uParam1->f_9[5] = 2;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 36;
			uParam1->f_9[24] = 1;
			uParam1->f_59[0] = 1;
			break;
		case 66:
			uParam1->f_66 = joaat("seven70");
			StringCopy(&(uParam1->f_1), "SP33DY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 145;
			uParam1->f_6 = 3;
			uParam1->f_7 = 88;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 4;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 22;
			break;
		case 15:
			uParam1->f_66 = joaat("sheava");
			StringCopy(&(uParam1->f_1), "PR3TTY", 16);
			*uParam1 = 1;
			uParam1->f_5 = 137;
			uParam1->f_6 = 71;
			uParam1->f_7 = 71;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 132;
			uParam1->f_63 = 102;
			uParam1->f_64 = 226;
			uParam1->f_74 = 35;
			uParam1->f_75 = 1;
			uParam1->f_76 = 255;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			MISC::SET_BIT(&(uParam1->f_77), 0);
			uParam1->f_9[0] = 4;
			uParam1->f_9[1] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 22;
			uParam1->f_59[0] = 1;
			break;
		case 54:
			uParam1->f_66 = joaat("sultanrs");
			StringCopy(&(uParam1->f_1), "5H0W0FF", 16);
			*uParam1 = 2;
			uParam1->f_5 = 83;
			uParam1->f_6 = 83;
			uParam1->f_8 = 41;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 5;
			uParam1->f_62 = 255;
			uParam1->f_63 = 127;
			uParam1->f_74 = 255;
			uParam1->f_75 = 62;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 15;
			uParam1->f_9[1] = 14;
			uParam1->f_9[2] = 8;
			uParam1->f_9[3] = 4;
			uParam1->f_9[4] = 4;
			uParam1->f_9[5] = 3;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 10;
			uParam1->f_9[8] = 6;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 2;
			uParam1->f_59[0] = 1;
			break;
		case 12:
			uParam1->f_66 = joaat("t20");
			StringCopy(&(uParam1->f_1), "D3V1L", 16);
			*uParam1 = 4;
			uParam1->f_5 = 28;
			uParam1->f_6 = 143;
			uParam1->f_7 = 70;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 1;
			uParam1->f_9[2] = 2;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[23] = 24;
			break;
		case 36:
			uParam1->f_66 = joaat("tampa");
			StringCopy(&(uParam1->f_1), "MU5CL3", 16);
			uParam1->f_5 = 89;
			uParam1->f_6 = 64;
			uParam1->f_7 = 88;
			uParam1->f_8 = 64;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_63 = 174;
			uParam1->f_64 = 239;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 3;
			uParam1->f_9[1] = 3;
			uParam1->f_9[2] = 1;
			uParam1->f_9[5] = 1;
			uParam1->f_9[6] = 3;
			uParam1->f_9[7] = 4;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[23] = 14;
			uParam1->f_59[0] = 1;
			break;
		case 48:
			uParam1->f_66 = joaat("tropos");
			StringCopy(&(uParam1->f_1), "1985", 16);
			*uParam1 = 2;
			uParam1->f_5 = 111;
			uParam1->f_6 = 111;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 1;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[7] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 3;
			break;
		case 87:
			uParam1->f_66 = joaat("turismor");
			StringCopy(&(uParam1->f_1), "TPD4WG", 16);
			uParam1->f_5 = 68;
			uParam1->f_6 = 68;
			uParam1->f_7 = 92;
			uParam1->f_8 = 87;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_75 = 255;
			uParam1->f_76 = 140;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[4] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[15] = 3;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 19;
			uParam1->f_59[0] = 1;
			break;
		case 6:
			uParam1->f_66 = joaat("tyrus");
			StringCopy(&(uParam1->f_1), "TR3X", 16);
			*uParam1 = 1;
			uParam1->f_5 = 7;
			uParam1->f_6 = 3;
			uParam1->f_7 = 137;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_65 = 1;
			uParam1->f_69 = 7;
			uParam1->f_62 = 203;
			uParam1->f_63 = 54;
			uParam1->f_64 = 148;
			uParam1->f_74 = 255;
			uParam1->f_75 = 50;
			uParam1->f_76 = 100;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 2;
			uParam1->f_9[4] = 1;
			uParam1->f_9[15] = 2;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 8;
			uParam1->f_59[0] = 1;
			break;
		case 69:
			uParam1->f_66 = joaat("verlierer2");
			StringCopy(&(uParam1->f_1), "CURV35", 16);
			*uParam1 = 1;
			uParam1->f_5 = 107;
			uParam1->f_6 = 120;
			uParam1->f_7 = 35;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 3;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[0] = 1;
			uParam1->f_9[1] = 3;
			uParam1->f_9[3] = 1;
			uParam1->f_9[4] = 1;
			uParam1->f_9[5] = 3;
			uParam1->f_9[7] = 4;
			uParam1->f_9[8] = 1;
			uParam1->f_9[10] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 26;
			uParam1->f_59[0] = 1;
			break;
		case 57:
			uParam1->f_66 = joaat("zentorno");
			StringCopy(&(uParam1->f_1), "H3R0", 16);
			*uParam1 = 1;
			uParam1->f_5 = 149;
			uParam1->f_6 = 55;
			uParam1->f_8 = 55;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 7;
			uParam1->f_62 = 114;
			uParam1->f_63 = 204;
			uParam1->f_64 = 114;
			uParam1->f_74 = 94;
			uParam1->f_75 = 255;
			uParam1->f_76 = 1;
			MISC::SET_BIT(&(uParam1->f_77), 28);
			MISC::SET_BIT(&(uParam1->f_77), 29);
			MISC::SET_BIT(&(uParam1->f_77), 30);
			MISC::SET_BIT(&(uParam1->f_77), 31);
			uParam1->f_9[0] = 5;
			uParam1->f_9[3] = 2;
			uParam1->f_9[4] = 2;
			uParam1->f_9[5] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[20] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 1;
			break;
		case 45:
			uParam1->f_66 = joaat("ztype");
			StringCopy(&(uParam1->f_1), "CE0", 16);
			*uParam1 = 1;
			uParam1->f_5 = 120;
			uParam1->f_6 = 42;
			uParam1->f_8 = 156;
			uParam1->f_97 = 1;
			uParam1->f_99 = 132;
			uParam1->f_98 = 0;
			uParam1->f_69 = 2;
			uParam1->f_62 = 255;
			uParam1->f_63 = 255;
			uParam1->f_64 = 255;
			uParam1->f_74 = 255;
			uParam1->f_76 = 255;
			uParam1->f_9[1] = 1;
			uParam1->f_9[3] = 1;
			uParam1->f_9[6] = 2;
			uParam1->f_9[7] = 1;
			uParam1->f_9[22] = 1;
			uParam1->f_9[23] = 26;
			uParam1->f_59[0] = 1;
			break;
	}
	if (uParam1->f_66 == 0)
	{
	}
}

int func_946()//Position - 0x1A42B4
{
	return 10387;
}

int func_947(int iParam0)//Position - 0x1A42BF
{
	switch (iParam0)
	{
		case 0:
			return 9859;
		case 1:
			return 9860;
		default:
	}
	return 13122;
}

void func_948(bool bParam0)//Position - 0x1A4F24
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 9))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 9);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 9))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 9);
	}
}

int func_949()//Position - 0x1B5584
{
	if ((((Global_1946244 == 8 || Global_1946244 == 9) || Global_1946244 == 10) || Global_1946244 == 11) || Global_1946244 == 13)
	{
		return 1;
	}
	return 0;
}

void func_950(bool bParam0)//Position - 0x1B563C
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 23))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 23);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 23))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 23);
	}
}

bool func_951(int iParam0)//Position - 0x1B5699
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 23);
}

void func_952(bool bParam0)//Position - 0x1B56AF
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 0))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 0);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 0))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 0);
	}
}

bool func_953(int iParam0)//Position - 0x1B5719
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 0);
}

int func_954(int iParam0)//Position - 0x1B9180
{
	switch (iParam0)
	{
		case 28:
			return 0;
			break;
		case 56:
			return 1;
			break;
	}
	return 0;
}

void func_955(int iParam0, bool bParam1)//Position - 0x1BEB54
{
	if (iParam0 == 0 || !__LIB_1__.func_323(iParam0))
	{
		return;
	}
	switch (iParam0)
	{
		case joaat("monster3"):
			__LIB_0__.func_521(9482, bParam1, -1);
			break;
		case joaat("monster4"):
			__LIB_0__.func_521(9483, bParam1, -1);
			break;
		case joaat("monster5"):
			__LIB_0__.func_521(9484, bParam1, -1);
			break;
		case joaat("cerberus"):
			__LIB_0__.func_521(9485, bParam1, -1);
			break;
		case joaat("cerberus2"):
			__LIB_0__.func_521(9486, bParam1, -1);
			break;
		case joaat("cerberus3"):
			__LIB_0__.func_521(9487, bParam1, -1);
			break;
		case joaat("bruiser"):
			__LIB_0__.func_521(9488, bParam1, -1);
			break;
		case joaat("bruiser2"):
			__LIB_0__.func_521(9489, bParam1, -1);
			break;
		case joaat("bruiser3"):
			__LIB_0__.func_521(9490, bParam1, -1);
			break;
		case joaat("slamvan4"):
			__LIB_0__.func_521(9491, bParam1, -1);
			break;
		case joaat("slamvan5"):
			__LIB_0__.func_521(9492, bParam1, -1);
			break;
		case joaat("slamvan6"):
			__LIB_0__.func_521(9493, bParam1, -1);
			break;
		case joaat("brutus"):
			__LIB_0__.func_521(9494, bParam1, -1);
			break;
		case joaat("brutus2"):
			__LIB_0__.func_521(9495, bParam1, -1);
			break;
		case joaat("brutus3"):
			__LIB_0__.func_521(9496, bParam1, -1);
			break;
		case joaat("scarab"):
			__LIB_0__.func_521(9497, bParam1, -1);
			break;
		case joaat("scarab2"):
			__LIB_0__.func_521(9498, bParam1, -1);
			break;
		case joaat("scarab3"):
			__LIB_0__.func_521(9499, bParam1, -1);
			break;
		case joaat("dominator4"):
			__LIB_0__.func_521(9500, bParam1, -1);
			break;
		case joaat("dominator5"):
			__LIB_0__.func_521(9501, bParam1, -1);
			break;
		case joaat("dominator6"):
			__LIB_0__.func_521(9502, bParam1, -1);
			break;
		case joaat("impaler2"):
			__LIB_0__.func_521(9503, bParam1, -1);
			break;
		case joaat("impaler3"):
			__LIB_0__.func_521(9504, bParam1, -1);
			break;
		case joaat("impaler4"):
			__LIB_0__.func_521(9505, bParam1, -1);
			break;
		case joaat("imperator"):
			__LIB_0__.func_521(9506, bParam1, -1);
			break;
		case joaat("imperator2"):
			__LIB_0__.func_521(9507, bParam1, -1);
			break;
		case joaat("imperator3"):
			__LIB_0__.func_521(9508, bParam1, -1);
			break;
		case joaat("zr380"):
			__LIB_0__.func_521(9509, bParam1, -1);
			break;
		case joaat("zr3802"):
			__LIB_0__.func_521(9510, bParam1, -1);
			break;
		case joaat("zr3803"):
			__LIB_0__.func_521(9511, bParam1, -1);
			break;
		case joaat("issi4"):
			__LIB_0__.func_521(9512, bParam1, -1);
			break;
		case joaat("issi5"):
			__LIB_0__.func_521(9513, bParam1, -1);
			break;
		case joaat("issi6"):
			__LIB_0__.func_521(9514, bParam1, -1);
			break;
		case joaat("deathbike"):
			__LIB_0__.func_521(9515, bParam1, -1);
			break;
		case joaat("deathbike2"):
			__LIB_0__.func_521(9516, bParam1, -1);
			break;
		case joaat("deathbike3"):
			__LIB_0__.func_521(25135, bParam1, -1);
			break;
	}
}

void func_956(bool bParam0)//Position - 0x1BF885
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 24))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 24);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 24))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 24);
	}
}

int func_957()//Position - 0x1C0300
{
	return 23;
}

int func_958()//Position - 0x1C030A
{
	if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
	{
		return 223;
	}
	return 201;
}

var func_959(int iParam0)//Position - 0x1C13A2
{
	return BitTest(Global_1853348[iParam0 /*834*/].f_267.f_366, 3);
}

int func_960()//Position - 0x1C34E9
{
	int iVar0;
	iVar0 = (iVar0 + Global_1659621);
	iVar0 = (iVar0 + Global_1659622);
	iVar0 = (iVar0 + Global_1659620);
	iVar0 = (iVar0 + Global_1659623);
	iVar0 = (iVar0 + Global_1659625);
	iVar0 = (iVar0 + Global_1659624);
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_EXPLOITS")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_VC_ANNOYINGME")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_VC_HATE")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_BAD_CREW_NAME")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_BAD_CREW_MOTTO")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_BAD_CREW_STATUS")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_BAD_CREW_EMBLEM")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_PLAYERMADE_TITLE")));
	iVar0 = (iVar0 + __LIB_0__.func_714(joaat("MPPLY_PLAYERMADE_DESC")));
	return iVar0;
}

void func_961(bool bParam0)//Position - 0x1C567B
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 17))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 17);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 17))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 17);
	}
}

bool func_962()//Position - 0x1C5B37
{
	return BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 23);
}

var func_963(int iParam0)//Position - 0x1C8703
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 13);
}

void func_964(bool bParam0)//Position - 0x1C89E8
{
	if (bParam0)
	{
		if (!BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1, 27))
		{
			MISC::SET_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1), 27);
		}
	}
	else if (BitTest(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1, 27))
	{
		MISC::CLEAR_BIT(&(Global_1853348[PLAYER::PLAYER_ID() /*834*/].f_267.f_285.f_1), 27);
	}
}

bool func_965(char* sParam0, char* sParam1)//Position - 0x1C9C0F
{
	HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(sParam0);
	HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(sParam1);
	return HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
}

void func_966(bool bParam0)//Position - 0x1CA068
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 27))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 27);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 27))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 27);
	}
}

bool func_967(int iParam0)//Position - 0x1CA0C5
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_197, 27);
}

bool func_968(int iParam0)//Position - 0x1CD975
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 5);
}

void func_969(bool bParam0)//Position - 0x1CDAA4
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 1))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 1);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 1))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 1);
	}
}

var func_970(int iParam0)//Position - 0x1CDAFD
{
	return BitTest(Global_2689235[iParam0 /*453*/].f_198, 1);
}

int func_971(int iParam0)//Position - 0x1CDD43
{
	switch (iParam0)
	{
		case joaat("khanjali"):
			return 0;
			break;
		case joaat("chernobog"):
			return 1;
			break;
		case joaat("riot2"):
			return 2;
			break;
		case joaat("thruster"):
			return 3;
			break;
	}
	return -1;
}

var func_972(int iParam0)//Position - 0x1E7038
{
	return Global_55405.f_37[iParam0];
}

int func_973()//Position - 0x1E7049
{
	return Global_55405.f_36;
}

void func_974(bool bParam0)//Position - 0x1E8EDB
{
	if (bParam0)
	{
		if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 4))
		{
			MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 4);
		}
	}
	else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198, 4))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_198), 4);
	}
}

int func_975()//Position - 0x112F
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1612.2834f, -3021.7915f, -76.18069f, -1612.2198f, -3005.2026f, -74.20517f, 12.75f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

int func_976()//Position - 0x2398
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.51935f, 5163.8555f, -86.59737f, 211.7083f, 5163.8794f, -83.6007f, 6.25f, false, true, 0))
	{
		return 1;
	}
	return 0;
}

Vector3 func_977()//Position - 0x2505
{
	return 0.5f, -0.5f, 2f;
}

Vector3 func_978()//Position - 0x258F
{
	return -0.5f, -0.5f, 0f;
}

int func_979(int iParam0, int iParam1)//Position - 0x2C1F0
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()) && iParam1)
		{
			if (__LIB_0__.func_438(PLAYER::PLAYER_PED_ID(), iParam0))
			{
				PED::SET_GROUP_SEPARATION_RANGE(__LIB_0__.func_399(), 50f);
				return 1;
			}
		}
		else if (PED::IS_PED_GROUP_MEMBER(iParam0, __LIB_0__.func_399()))
		{
			PED::SET_GROUP_SEPARATION_RANGE(__LIB_0__.func_399(), 50f);
			return 1;
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

struct<6> func_980()//Position - 0x37B24
{
	struct<6> Var0;
	int iVar1;
	StringCopy(&Var0, "NULL", 24);
	if (Global_21605 == 4)
	{
		iVar1 = AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE();
		iVar1 = (iVar1 + Global_22615);
		if (iVar1 > -1)
		{
			return Global_20473[iVar1 /*6*/];
		}
		else
		{
			return Var0;
		}
	}
	return Var0;
}

void func_981(var uParam0, int iParam1, bool bParam2)//Position - 0x3AFF7
{
	char* sVar0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (BitTest(Global_2815059.f_4660, 26))
		{
			return;
		}
	}
	if (CAM::IS_GAMEPLAY_HINT_ACTIVE())
	{
		CAM::STOP_GAMEPLAY_HINT(bParam2);
		GRAPHICS::ANIMPOSTFX_STOP("FocusIn");
		AUDIO::STOP_AUDIO_SCENE("HINT_CAM_SCENE");
		if (uParam0->f_11)
		{
			GRAPHICS::ANIMPOSTFX_PLAY("FocusOut", 0, false);
			AUDIO::PLAY_SOUND_FRONTEND(-1, "FocusOut", "HintCamSounds", true);
			uParam0->f_11 = 0;
		}
	}
	CAM::SET_CINEMATIC_BUTTON_ACTIVE(true);
	uParam0->f_1 = 0;
	*uParam0 = 0;
	uParam0->f_2 = -1;
	uParam0->f_8 = 0;
	uParam0->f_5 = 0;
	uParam0->f_6 = 0;
	sVar0 = iParam1;
	if (MISC::IS_STRING_NULL(sVar0))
	{
		if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			sVar0 = "CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */;
		}
		else
		{
			sVar0 = "FM_IHELP_HNT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus. */;
		}
	}
	if (!MISC::IS_STRING_NULL(uParam0->f_3))
	{
		if (__LIB_0__.func_1(uParam0->f_3))
		{
			HUD::CLEAR_HELP(true);
		}
	}
	if (!MISC::IS_STRING_NULL(sVar0))
	{
		if (__LIB_0__.func_1(sVar0))
		{
			HUD::CLEAR_HELP(true);
		}
	}
}

void func_982(int iParam0, bool bParam1, int iParam2)//Position - 0x9CFCB
{
	int iVar0;
	int iVar1;
	iVar0 = (iParam0 / 32);
	iVar1 = (iParam0 % 32);
	if (iParam2 != -2)
	{
		Global_1574938 = iParam2;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_1574935[iVar0]), iVar1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_1574935[iVar0]), iVar1);
	}
}

bool func_983()//Position - 0x9D034
{
	return Global_32236;
}

int func_984()//Position - 0x9D18B
{
	if (__LIB_0__.func_52())
	{
		if (!NETWORK::NETWORK_IS_NP_AVAILABLE())
		{
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 4)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 2)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 1)
			{
				return 0;
			}
			if (NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 5)
			{
				return 0;
			}
		}
	}
	return 1;
}

int func_985(var uParam0, int iParam1)//Position - 0x9D328
{
	bool bVar0;
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	bVar0 = false;
	if (iParam1 == 3 || iParam1 == __LIB_0__.func_386(Global_113386.f_2363.f_539.f_4323))
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			bVar0 = true;
		}
	}
	if (bVar0)
	{
		uParam0->f_7 = iParam1;
		return 1;
	}
	uParam0->f_39 = 0;
	return 0;
}

bool func_986()//Position - 0x9DA90
{
	return Global_1577868;
}

int func_987(bool bParam0)//Position - 0x9DA9C
{
	if (Global_23011.f_130)
	{
		return 0;
	}
	if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/) || (!bParam0 && PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/)))
	{
		return 1;
	}
	if (MISC::IS_PC_VERSION())
	{
		if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				return 1;
			}
		}
		else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
		{
			if ((!PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
			{
				return 1;
			}
		}
		if (!bParam0)
		{
			if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
				{
					return 1;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 169 /*INPUT_SELECT_CHARACTER_MULTIPLAYER*/))
			{
				if ((!PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/)) && !PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

int func_988(int iParam0)//Position - 0xA84FA
{
	struct<2> Var0;
	Var0 = { __LIB_4__.func_744(iParam0) };
	if (Var0.f_1 != -1 && BitTest(Global_38401[Var0.f_1], Var0.f_0))
	{
		return 1;
	}
	return 0;
}

void func_989(int iParam0, int iParam1, bool bParam2)//Position - 0x33164
{
	int iVar0;
	if (iParam0 == 11 || iParam0 == -1)
	{
		return;
	}
	if (iParam1 < 0 || iParam1 >= 32)
	{
		return;
	}
	iVar0 = BitTest(Global_113386.f_9085.f_99.f_219[iParam0], iParam1);
	if (iVar0 == bParam2)
	{
		return;
	}
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_113386.f_9085.f_99.f_219[iParam0]), iParam1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_113386.f_9085.f_99.f_219[iParam0]), iParam1);
	}
}

void func_990()//Position - 0x3F0DD
{
	AUDIO::START_PRELOADED_CONVERSATION();
	Global_22597 = 0;
}

int func_991(struct<3> Param0, float fParam1, float fParam2)//Position - 0x4E08A
{
	if (CAM::IS_SPHERE_VISIBLE(Param0, fParam1))
	{
		if (!ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param0, fParam2, fParam2, fParam2, false, false, 0))
		{
			return 0;
		}
		else if (CAM::IS_SCREEN_FADED_OUT())
		{
			return 0;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

float func_992(float fParam0, float fParam1, float fParam2)//Position - 0x4E28C
{
	while (fParam0 < fParam1)
	{
		fParam0 = (fParam0 + 360f);
	}
	while (fParam0 > fParam2)
	{
		fParam0 = (fParam0 - 360f);
	}
	return fParam0;
}

void func_993(int* iParam0, var uParam1)//Position - 0x53564
{
	iParam0->f_21 = uParam1;
	if (!BitTest(iParam0->f_13, 26))
	{
		MISC::SET_BIT(&(iParam0->f_13), 26);
	}
}

void func_994()//Position - 0x597D5
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 35)
	{
		HUD::THEFEED_REMOVE_ITEM(Global_113386.f_14141[iVar0 /*104*/].f_16);
		iVar0++;
	}
}

void func_995()//Position - 0x598F3
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), false, false, false, false, false, false, false, false);
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 157, true);
		ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), false);
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97810[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_97810[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_97810[iVar0], false, false, false, false, false, false, false, false);
				ENTITY::SET_ENTITY_INVINCIBLE(Global_97810[iVar0], false);
			}
		}
		iVar0++;
	}
	if ((Global_43052 != 0 && Global_43052 != 3) && Global_43052 != 2)
	{
		PLAYER::SET_MAX_WANTED_LEVEL(5);
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
	}
}

Vector3 func_996()//Position - 0x5C01F
{
	return 2.55f, 5.665f, 2.55f;
}

int func_997()//Position - 0x5C036
{
	return Global_106934.f_2890.f_12.f_66;
}

void func_998(int iParam0)//Position - 0x20CC2
{
	switch (iParam0)
	{
		case 0:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		case 1:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		case 2:
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, joaat("AMBIENT_GANG_FAMILY"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(5, joaat("PLAYER"), joaat("AMBIENT_GANG_LOST"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(5, joaat("AMBIENT_GANG_LOST"), joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95444, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95444);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95445, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95445);
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, Global_95446, joaat("PLAYER"));
			PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, joaat("PLAYER"), Global_95446);
			break;
		default:
			break;
	}
}

void func_999(var uParam0, struct<3> Param1, int iParam2)//Position - 0x2AC53
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	CAM::SET_CINEMATIC_BUTTON_ACTIVE(false);
	iVar0 = uParam0->f_9;
	iVar1 = uParam0->f_10;
	if (iParam2 == joaat("VEHICLE_HIGH_ZOOM_HINT_HELPER"))
	{
		if (iVar0 < 1500)
		{
			iVar0 = 1500;
		}
		if (iVar1 < 1500)
		{
			iVar1 = 1500;
		}
	}
	CAM::SET_GAMEPLAY_COORD_HINT(Param1, -1, iVar0, iVar1, iParam2);
	iVar2 = 2048;
	iVar3 = 3;
	TASK::TASK_LOOK_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, -1, iVar2, iVar3);
	GRAPHICS::ANIMPOSTFX_PLAY("FocusIn", 0, false);
	AUDIO::START_AUDIO_SCENE("HINT_CAM_SCENE");
	AUDIO::PLAY_SOUND_FRONTEND(-1, "FocusIn", "HintCamSounds", true);
	uParam0->f_11 = 1;
	uParam0->f_8 = MISC::GET_GAME_TIMER();
	uParam0->f_1 = 1;
	*uParam0 = 0;
}

int func_0(int iParam0, var uParam1, int iParam2, char* sParam3, var uParam4, var uParam5, int iParam6, int iParam7, int iParam8, int iParam9, bool bParam10)//Position - 0x3287
{
	__LIB_0__::func_770(uParam1, iParam2, sParam3, iParam8, iParam9, 0);
	__LIB_15__::func_999();
	if (iParam7 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	__LIB_15__::func_998(iParam0);
	return __LIB_16__::func_610(uParam4, uParam5, iParam6, bParam10);
}

bool func_1(int iParam0, var uParam1, int iParam2, char* sParam3, var uParam4, var uParam5, char* sParam6, int iParam7, int iParam8, int iParam9, int iParam10, bool bParam11)//Position - 0x2B33
{
	__LIB_0__::func_770(uParam1, iParam2, sParam3, iParam9, iParam10, 0);
	__LIB_15__::func_999();
	if (iParam8 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	__LIB_15__::func_998(iParam0);
	Global_21657 = 1;
	StringCopy(&Global_21753, sParam6, 24);
	Global_21604 = 3;
	return __LIB_16__::func_610(uParam4, uParam5, iParam7, bParam11);
}

int func_2(int iParam0, int iParam1, int iParam2)//Position - 0x3BCE
{
	int iVar0;
	char cVar1[32];
	char cVar2[16];
	struct<8> Var3;
	char cVar4[16];
	char cVar5[24];
	char cVar6[24];
	iVar0 = 522;
	StringCopy(&cVar1, "missdrfriedlanderdrf_idles", 32);
	StringCopy(&cVar2, "facials@drf", 16);
	Var3 = { __LIB_16__::func_951(iParam0) };
	StringCopy(&cVar4, "drf_idle_drf", 16);
	StringCopy(&cVar5, "michael_concerned_01", 24);
	StringCopy(&cVar6, "drfriedlander_idle_01", 24);
	if (__LIB_16__::func_950())
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_INJURED(iParam1))
		{
			if (!ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3, 3))
			{
				TASK::TASK_PLAY_ANIM(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3, 2f, -1000f, -1, iVar0, 0f, false, false, false);
				TASK::TASK_PLAY_ANIM(iParam1, &cVar1, &cVar4, 2f, -1000f, -1, iVar0, 0f, false, false, false);
				TASK::TASK_PLAY_ANIM(PLAYER::PLAYER_PED_ID(), &cVar2, &cVar5, 2f, -1000f, -1, 32 | iVar0, 0f, false, 4, false);
				TASK::TASK_PLAY_ANIM(iParam1, &cVar2, &cVar6, 2f, -1000f, -1, 32 | iVar0, 0f, false, false, false);
				PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(PLAYER::PLAYER_PED_ID(), false, false);
				PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(iParam1, false, false);
				if (CAM::DOES_CAM_EXIST(*iParam2))
				{
					CAM::DESTROY_CAM(*iParam2, false);
				}
				if (!CAM::DOES_CAM_EXIST(*iParam2))
				{
					*iParam2 = CAM::CREATE_CAMERA(joaat("DEFAULT_SCRIPTED_CAMERA"), false);
				}
				CAM::SET_CAM_COORD(*iParam2, -1906.8422f, -572.3835f, 19.1046f);
				CAM::SET_CAM_ROT(*iParam2, -1.5254f, 0.0003f, 171.4657f, 2);
				CAM::SET_CAM_FOV(*iParam2, 17f);
				CAM::SET_CAM_ACTIVE(*iParam2, true);
				CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
			}
			else if (ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(PLAYER::PLAYER_PED_ID(), &cVar1, &Var3) >= 0.99f)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_3()//Position - 0x37AD
{
	float fVar0;
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_381, false))
	{
		VEHICLE::DELETE_VEHICLE(&iLocal_381);
		iLocal_381 = VEHICLE::CREATE_VEHICLE(iLocal_57, Local_396, fLocal_399, true, true, false);
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(iLocal_381, 6);
	}
	if (ENTITY::DOES_ENTITY_EXIST(iLocal_379))
	{
		PED::DELETE_PED(&iLocal_379);
	}
	if ((!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false) && !ENTITY::IS_ENTITY_DEAD(iLocal_381, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(iLocal_381, false))
	{
		ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), -1907.8273f, -560.0641f, 10.8064f, true, false, false, true);
		ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), 260.195f);
		ENTITY::SET_ENTITY_COORDS(iLocal_381, Local_396, true, false, false, true);
		ENTITY::SET_ENTITY_HEADING(iLocal_381, fLocal_399);
		if (ENTITY::DOES_ENTITY_EXIST(iLocal_382))
		{
			if (!ENTITY::IS_ENTITY_DEAD(iLocal_382, false))
			{
				VEHICLE::SET_VEHICLE_FIXED(iLocal_382);
				ENTITY::SET_ENTITY_INVINCIBLE(iLocal_382, true);
				VEHICLE::SET_VEHICLE_CAN_BREAK(iLocal_382, false);
				ENTITY::SET_ENTITY_COORDS(iLocal_382, __LIB_16__::func_949(iLocal_382), true, false, false, true);
				ENTITY::SET_ENTITY_HEADING(iLocal_382, 231f);
			}
		}
		TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
		TASK::TASK_STAND_STILL(PLAYER::PLAYER_PED_ID(), -1);
		if ((!iLocal_409 || !ENTITY::DOES_ENTITY_EXIST(iLocal_380)) || ENTITY::IS_ENTITY_DEAD(iLocal_380, false))
		{
			iLocal_380 = PED::CREATE_PED(26, iLocal_56, -1899.7f, -562.2f, 10.7945f, 217.9453f, true, true);
			PED::SET_PED_COMPONENT_VARIATION(iLocal_380, 3, iLocal_404, iLocal_405, 0);
			PED::SET_PED_COMPONENT_VARIATION(iLocal_380, 4, 0, iLocal_406, 0);
			PED::SET_PED_MONEY(iLocal_380, (2000 + MISC::GET_RANDOM_INT_IN_RANGE(5, 301)));
			ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(iLocal_380, true, 1);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iLocal_380, true);
			__LIB_0__::func_222(&uLocal_63, 1, iLocal_380, "FRIEDLANDER", 0, 1);
			iLocal_409 = 1;
		}
		else
		{
			ENTITY::SET_ENTITY_COORDS(iLocal_380, -1899.7f, -562.2f, 10.7945f, true, false, false, true);
			ENTITY::SET_ENTITY_HEADING(iLocal_380, 217.9453f);
			TASK::CLEAR_PED_TASKS_IMMEDIATELY(iLocal_380);
			TASK::TASK_STAND_STILL(iLocal_380, -1);
		}
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			if (!iLocal_408)
			{
				STREAMING::NEW_LOAD_SCENE_START(-1905.4998f, -557.8768f, 12.4125f, __LIB_0__::func_79(Vector(12.4748f, -560.2881f, -1904.7095f) - Vector(12.4125f, -557.8768f, -1905.4998f)), 100f, 0);
				iLocal_408 = 1;
				SYSTEM::WAIT(0);
			}
			while (!STREAMING::IS_NEW_LOAD_SCENE_LOADED() || (!PED::IS_PED_INJURED(iLocal_380) && !PED::HAVE_ALL_STREAMING_REQUESTS_COMPLETED(iLocal_380)))
			{
				SYSTEM::WAIT(0);
			}
			if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
			{
				TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			}
			CAM::DO_SCREEN_FADE_IN(500);
		}
		fVar0 = 2f;
		if (!PED::IS_PED_INJURED(iLocal_380) && !ENTITY::IS_ENTITY_DEAD(iLocal_381, false))
		{
			TASK::OPEN_SEQUENCE_TASK(&iLocal_386);
			TASK::TASK_ENTER_VEHICLE(0, iLocal_381, -1, -1, fVar0, 1, 0);
			TASK::TASK_VEHICLE_DRIVE_TO_COORD(0, iLocal_381, -1783.7303f, -629.1945f, 9.89f, 20f, 0, ENTITY::GET_ENTITY_MODEL(iLocal_381), 786484, 10f, 12f);
			TASK::TASK_VEHICLE_DRIVE_WANDER(0, iLocal_381, 19f, 786484);
			TASK::CLOSE_SEQUENCE_TASK(iLocal_386);
			TASK::TASK_PERFORM_SEQUENCE(iLocal_380, iLocal_386);
			PED::FORCE_PED_MOTION_STATE(iLocal_380, joaat("MotionState_Run"), true, 1, true);
		}
		iLocal_383 = HUD::ADD_BLIP_FOR_ENTITY(iLocal_380);
		HUD::SET_BLIP_COLOUR(iLocal_383, 1);
		__LIB_1__::func_31(&iLocal_237);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
		iLocal_385 = CAM::CREATE_CAMERA_WITH_PARAMS(joaat("DEFAULT_SCRIPTED_CAMERA"), -1904.6146f, -558.892f, 12.8339f, -9.0794f, 0f, -127.4455f, 50f, true, 2);
		CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
		HUD::DISPLAY_RADAR(false);
		HUD::DISPLAY_HUD(false);
	}
	MISC::CLEAR_AREA(-1886.8839f, -571.1942f, 11.3828f, 2.5f, true, true, false, false);
	VEHICLE::CREATE_VEHICLE(iLocal_58, -1886.8839f, -571.1942f, 11.3828f, -40.83f, true, true, false);
}

int func_4(int* iParam0, int* iParam1, var uParam2)//Position - 0x3E07
{
	bool bVar0;
	bool bVar1;
	if (__LIB_1__::func_13(iParam0) && __LIB_1__::func_361(iParam0) > 1.3f)
	{
		bVar0 = PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 201 /*INPUT_FRONTEND_ACCEPT*/);
		bVar1 = PAD::IS_CONTROL_JUST_PRESSED(2 /*FRONTEND_CONTROL*/, 202 /*INPUT_FRONTEND_CANCEL*/);
		if (bVar0 || bVar1)
		{
			if (bVar0)
			{
				*uParam2 = 1;
			}
			else
			{
				*uParam2 = 0;
			}
			if (__LIB_0__::func_1("SHRINK_ACCEPT"))
			{
				HUD::CLEAR_HELP(true);
			}
			__LIB_2__::func_540(iParam1);
			return 1;
		}
	}
	__LIB_16__::func_970(iParam1, 1128792064, 1, 0, 1, 1065353216);
	return 0;
}

void func_5(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x21AC9
{
	__LIB_14__::func_526(uParam0, iParam1);
	__LIB_14__::func_526(uParam0, iParam3);
	__LIB_14__::func_526(uParam0, iParam2);
	__LIB_14__::func_526(uParam0, iParam5);
	if (iParam6 == 4)
	{
		__LIB_14__::func_526(uParam0, iParam4);
	}
	__LIB_1__::func_298(uParam0);
	HUD::REQUEST_ADDITIONAL_TEXT("SHRINK", 0);
	AUDIO::LOAD_STREAM("Office_Background_Stream", "SHRINK_SOUNDS");
	STREAMING::NEW_LOAD_SCENE_START(-1904.2f, -573.2f, 19.6f, -0.2f, 0f, -59.4f, 10f, 0);
	__LIB_16__::func_964();
}

void func_6(int iParam0, var uParam1, int iParam2)//Position - 0x4F18
{
	int iVar0;
	var uVar1;
	struct<50> Var2;
	struct<14> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	Var2 = 12;
	Var2.f_13 = 12;
	Var2.f_26 = 12;
	Var2.f_39 = 9;
	Var2.f_49 = 9;
	iVar4 = ENTITY::GET_ENTITY_MODEL(iParam0);
	__LIB_16__::func_977(iParam0, &Var2, 0, -1);
	__LIB_16__::func_977(iParam0, uParam1, iParam2, -1);
	iVar5 = 0;
	iVar6 = 0;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		if (uParam1->f_13[iVar0] != Var2.f_13[iVar0] || (*uParam1)[iVar0] != Var2[iVar0])
		{
			if (__LIB_16__::func_960(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &uVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_16__::func_972(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &uVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (uParam1->f_39[iVar0] != Var2.f_39[iVar0] || uParam1->f_49[iVar0] != Var2.f_49[iVar0])
		{
			if (__LIB_16__::func_960(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &uVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_16__::func_972(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &uVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	if (iVar6 || iVar5)
	{
		iVar7 = __LIB_0__::func_206(iParam0, uParam1->f_13[1], (*uParam1)[1], 1);
		iVar8 = __LIB_0__::func_206(iParam0, uParam1->f_13[2], (*uParam1)[2], 2);
		iVar9 = __LIB_0__::func_24(iVar4, iVar8, iVar7);
		if (iVar9 != -99)
		{
			Var3 = { __LIB_13__::func_798(iVar4, 0, iVar9, -1) };
			uParam1->f_13[0] = Var3.f_3;
			(*uParam1)[0] = Var3.f_4;
		}
	}
}

bool func_7()//Position - 0x1AB
{
	return BitTest(Global_2715699.f_1.f_2810, 3);
}

void func_8(var uParam0, int iParam1, int iParam2, float fParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8)//Position - 0x1632
{
	uParam0->f_5 = iParam1;
	uParam0->f_6 = iParam2;
	uParam0->f_12 = fParam3;
	uParam0->f_14 = iParam4;
	uParam0->f_15 = iParam5;
	uParam0->f_16 = iParam6;
	uParam0->f_17 = iParam7;
	uParam0->f_13 = iParam8;
}

bool func_9()//Position - 0x25B4
{
	return !Global_77137.f_553;
}

void func_10()//Position - 0x25C4
{
	Global_77137.f_553 = 1;
	Global_77137.f_554 = 0;
}

void func_11()//Position - 0x22A1
{
	__LIB_15__::func_229();
	__LIB_12__::func_915(1);
}

void func_12(int iParam0)//Position - 0x931
{
	if (iParam0 < 0 || iParam0 >= 16)
	{
		return;
	}
	Global_44105[iParam0 /*6*/] = -1;
	Global_44105[iParam0 /*6*/].f_1 = -1;
	Global_44105[iParam0 /*6*/].f_2 = 6;
	Global_44105[iParam0 /*6*/].f_3 = 0;
	Global_44105[iParam0 /*6*/].f_4 = 0;
}

void func_13(int iParam0, char* sParam1)//Position - 0x1318
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_14__::func_709(iParam0);
	if (iVar0 == -1)
	{
		return;
	}
	if (Global_53557[iVar0 /*203*/].f_9 == 0)
	{
		return;
	}
	if (Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_6 == 10)
	{
		return;
	}
	iVar1 = Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_6;
	Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_6++;
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[iVar1 /*4*/]), sParam1, 16);
}

int func_14(int iParam0, bool bParam1)//Position - 0x1AC3
{
	int iVar0;
	int iVar1;
	bool bVar2;
	bool bVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	iVar0 = __LIB_14__::func_709(iParam0);
	if (iVar0 > -1)
	{
		if (Global_53557[iVar0 /*203*/].f_9 < 4)
		{
			return iVar0;
		}
	}
	iVar1 = 0;
	bVar2 = false;
	iVar1 = 0;
	while (iVar1 < 7)
	{
		if (Global_53557[iVar1 /*203*/] == 0)
		{
			bVar2 = true;
		}
		iVar1++;
	}
	if (!bVar2)
	{
		return -1;
	}
	bVar3 = true;
	iVar1 = 0;
	iVar4 = -1;
	iVar5 = -1;
	iVar1 = 0;
	while (iVar1 < 7)
	{
		if (Global_53557[iVar1 /*203*/] == 0)
		{
			if (bVar3)
			{
				iVar4 = iVar1;
				iVar5 = Global_53557[iVar1 /*203*/].f_1;
				bVar3 = false;
			}
			else if (iVar5 > Global_53557[iVar1 /*203*/].f_1)
			{
				iVar4 = iVar1;
				iVar5 = Global_53557[iVar1 /*203*/].f_1;
			}
		}
		iVar1++;
	}
	if (Global_53557[iVar4 /*203*/].f_9 > 0)
	{
		iVar1 = 0;
		iVar1 = 0;
		while (iVar1 < Global_53557[iVar4 /*203*/].f_9)
		{
			iVar6 = 0;
			iVar6 = 0;
			while (iVar6 < 3)
			{
				iVar7 = Global_53195[iVar6 /*120*/];
				if (iVar7 > 16)
				{
					iVar7 = 16;
				}
				iVar8 = 0;
				iVar8 = 0;
				while (iVar8 < iVar7)
				{
					if (Global_53195[iVar6 /*120*/].f_86[iVar8])
					{
						if (!Global_53195[iVar6 /*120*/].f_69[iVar8])
						{
							if (Global_53195[iVar6 /*120*/].f_18[iVar8] == Global_53557[iVar4 /*203*/].f_1)
							{
								if (Global_53195[iVar6 /*120*/].f_1[iVar8] == iVar1)
								{
									switch (iVar6)
									{
										case 0:
											Global_44249 = (Global_44249 - 1);
											break;
										case 1:
											Global_44250 = (Global_44250 - 1);
											break;
										case 2:
											Global_44251 = (Global_44251 - 1);
											break;
										}
									}
								}
							}
					}
					iVar8++;
				}
				iVar6++;
			}
			iVar1++;
		}
	}
	Global_53557[iVar4 /*203*/].f_2 = iParam0;
	Global_53557[iVar4 /*203*/].f_3 = 0;
	if (!bParam1)
	{
		Global_53557[iVar4 /*203*/] = 1;
	}
	Global_113386.f_21037.f_310++;
	if (Global_113386.f_21037.f_310 == 0)
	{
		Global_113386.f_21037.f_310 = 1;
	}
	Global_53557[iVar4 /*203*/].f_1 = Global_113386.f_21037.f_310;
	Global_53557[iVar4 /*203*/].f_9 = 0;
	return iVar4;
}

void func_15(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0x16F0
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<16> Var3;
	int iVar4;
	int iVar5;
	bool bVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	if (!iParam0 < 3)
	{
		return;
	}
	iVar0 = -1;
	StringCopy(&Var3, "UNSET", 64);
	if (!bParam2)
	{
		iVar4 = (Global_47582[iParam1 /*46*/].f_42 - 1);
		if (iVar4 < 0)
		{
			return;
		}
		iVar5 = Global_47582[iParam1 /*46*/].f_32[iVar4];
		iVar2 = iVar5;
		Var3 = { __LIB_14__::func_789(Global_44257[iVar5 /*12*/].f_1) };
		if (Global_44257[iVar5 /*12*/].f_2 == iParam0 && !Global_44257[iVar5 /*12*/].f_3 == iParam0)
		{
			return;
		}
		iVar1 = Global_44257[iVar5 /*12*/].f_2;
		iVar0 = Global_53195[iParam0 /*120*/];
		bVar6 = false;
		while (iVar0 >= 16)
		{
			iVar0 = (iVar0 - 16);
			bVar6 = true;
		}
		if (bVar6)
		{
			if (!Global_53195[iParam0 /*120*/].f_69[iVar0])
			{
				switch (iParam0)
				{
					case 0:
						Global_44249 = (Global_44249 - 1);
						if (Global_44249 < 0)
						{
							Global_44249 = 0;
						}
						break;
					case 1:
						Global_44250 = (Global_44250 - 1);
						if (Global_44250 < 0)
						{
							Global_44250 = 0;
						}
						break;
					case 2:
						Global_44251 = (Global_44251 - 1);
						if (Global_44251 < 0)
						{
							Global_44251 = 0;
						}
						break;
					}
				}
		}
		Global_53195[iParam0 /*120*/].f_18[iVar0] = iParam1;
		Global_53195[iParam0 /*120*/].f_1[iVar0] = iVar4;
		Global_53195[iParam0 /*120*/].f_35[iVar0] = 0;
		Global_53195[iParam0 /*120*/].f_86[iVar0] = 0;
		Global_53195[iParam0 /*120*/].f_69[iVar0] = 0;
		Global_53195[iParam0 /*120*/]++;
	}
	else
	{
		iVar0 = Global_53195[iParam0 /*120*/];
		bVar7 = false;
		while (iVar0 >= 16)
		{
			iVar0 = (iVar0 - 16);
			bVar7 = true;
		}
		if (bVar7)
		{
			if (!Global_53195[iParam0 /*120*/].f_69[iVar0])
			{
				switch (iParam0)
				{
					case 0:
						Global_44249 = (Global_44249 - 1);
						if (Global_44249 < 0)
						{
							Global_44249 = 0;
						}
						break;
					case 1:
						Global_44250 = (Global_44250 - 1);
						if (Global_44250 < 0)
						{
							Global_44250 = 0;
						}
						break;
					case 2:
						Global_44251 = (Global_44251 - 1);
						if (Global_44251 < 0)
						{
							Global_44251 = 0;
						}
						break;
					}
				}
		}
		iVar8 = -1;
		iVar9 = 0;
		iVar9 = 0;
		while (iVar9 < 7)
		{
			if (Global_53557[iVar9 /*203*/].f_1 == iParam1 && Global_53557[iVar9 /*203*/].f_9 > 0)
			{
				iVar8 = iVar9;
			}
			iVar9++;
		}
		if (iVar8 == -1)
		{
			return;
		}
		Global_53195[iParam0 /*120*/].f_18[iVar0] = Global_53557[iVar8 /*203*/].f_1;
		Global_53195[iParam0 /*120*/].f_1[iVar0] = (Global_53557[iVar8 /*203*/].f_9 - 1);
		Global_53195[iParam0 /*120*/].f_35[iVar0] = 0;
		Global_53195[iParam0 /*120*/].f_86[iVar0] = 1;
		Global_53195[iParam0 /*120*/].f_69[iVar0] = 0;
		Global_53195[iParam0 /*120*/]++;
		iVar10 = Global_53195[iParam0 /*120*/].f_1[iVar0];
		iVar11 = Global_53557[iVar8 /*203*/].f_10[iVar10 /*48*/];
		iVar2 = iVar11;
		iVar1 = Global_44257[iVar11 /*12*/].f_2;
		if (Global_53557[iVar8 /*203*/].f_10[(Global_53557[iVar8 /*203*/].f_9 - 1) /*48*/].f_1)
		{
			MemCopy(&Var3, {Global_53557[iVar8 /*203*/].f_10[(Global_53557[iVar8 /*203*/].f_9 - 1) /*48*/].f_2}, 16);
		}
		else
		{
			Var3 = { __LIB_14__::func_789(Global_44257[iVar11 /*12*/].f_1) };
		}
	}
	if (!bParam4)
	{
		if (!Global_53195[iParam0 /*120*/].f_69[iVar0] && !bParam3)
		{
			switch (iParam0)
			{
				case 0:
					__LIB_16__::func_608(0, iVar1, iVar2, &Var3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
					break;
				case 1:
					if (iVar2 == 249)
					{
						__LIB_16__::func_608(1, iVar1, iVar2, "PW_FEED_EM_1" /* GXT: You've been nominated to take part in Southern San Andreas' premier amateur photography competition in the wildlife sector. You'll join hundreds of other young, talented... */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
					}
					else
					{
						__LIB_16__::func_608(1, iVar1, iVar2, &Var3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
					}
					break;
				case 2:
					__LIB_16__::func_608(2, iVar1, iVar2, &Var3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
					break;
				}
			}
	}
}

int func_16()//Position - 0x8E2
{
	return Global_22622;
}

int func_17()//Position - 0xC17
{
	if (Global_2883694)
	{
		if (__LIB_0__::isGlobal_43052EqualsValue(0))
		{
			if (Global_3407872 || __LIB_0__::func_2(0))
			{
				return 1;
			}
		}
	}
	if (Global_2883693)
	{
		if (__LIB_0__::isGlobal_43052EqualsValue(0))
		{
			if (Global_3932160 || __LIB_0__::func_2(0))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_18(int iParam0)//Position - 0x22F2
{
	int iVar0;
	if (iParam0 == 26)
	{
		if (!BitTest(Global_113386.f_24986, (4 - 1)))
		{
			return;
		}
	}
	iVar0 = __LIB_14__::func_709(iParam0);
	if (iVar0 == -1)
	{
		return;
	}
	Global_53557[iVar0 /*203*/] = 0;
}

void func_19(int iParam0)//Position - 0x631
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<4> Var3;
	int iVar4;
	char* sVar5;
	iVar0 = __LIB_14__::func_709(iParam0);
	if (iVar0 == -1)
	{
		return;
	}
	if (Global_53557[iVar0 /*203*/].f_9 == 0)
	{
		return;
	}
	iVar1 = Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/];
	iVar2 = (Global_53557[iVar0 /*203*/].f_9 - 1);
	if (!Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_1)
	{
		iVar4 = Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/];
		MemCopy(&Var3, {__LIB_14__::func_789(Global_44257[iVar4 /*12*/].f_1)}, 4);
	}
	else
	{
		Var3 = { Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_2 };
	}
	if (iParam0 == 28)
	{
		switch (iVar1)
		{
			case 249:
				sVar5 = "PW_FEED_EM_1" /* GXT: You've been nominated to take part in Southern San Andreas' premier amateur photography competition in the wildlife sector. You'll join hundreds of other young, talented... */;
				break;
			case 269:
				sVar5 = "PW_FEED_EM_3" /* GXT: Hello Franklin,~n~The Southern San Andreas Tourist Board Young Amateur Wildlife Photographer of the Year Competition is over.~n~Some of our photographers fell off cli... */;
				break;
			default:
				sVar5 = "PW_FEED_EM_2" /* GXT: Dear contestant,~n~Thank you for your recent photographic submission. Our image licensing department is already maximizing its profit-making potential. And you're a step clos... */;
				break;
		}
		__LIB_16__::func_608(1, Global_44257[iVar1 /*12*/].f_2, iVar1, sVar5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	}
	else
	{
		switch (Global_44257[iVar1 /*12*/].f_3)
		{
			case 0:
				__LIB_16__::func_608(0, Global_44257[iVar1 /*12*/].f_2, iVar1, &Var3, &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[0 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[1 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[2 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[3 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[4 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[5 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[6 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[7 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[8 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[9 /*4*/]));
				break;
			case 1:
				__LIB_16__::func_608(1, Global_44257[iVar1 /*12*/].f_2, iVar1, &Var3, &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[0 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[1 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[2 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[3 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[4 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[5 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[6 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[7 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[8 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[9 /*4*/]));
				break;
			case 2:
				__LIB_16__::func_608(2, Global_44257[iVar1 /*12*/].f_2, iVar1, &Var3, &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[0 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[1 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[2 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[3 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[4 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[5 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[6 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[7 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[8 /*4*/]), &(Global_53557[iVar0 /*203*/].f_10[iVar2 /*48*/].f_7[9 /*4*/]));
				break;
			}
	}
}

int func_20(int iParam0, int iParam1, bool bParam2)//Position - 0x2453
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_17__::func_14(iParam0, 1);
	if (iVar0 == -1)
	{
		return 0;
	}
	if (Global_53557[iVar0 /*203*/].f_9 == 4)
	{
		return 0;
	}
	Global_53557[iVar0 /*203*/].f_2 = iParam0;
	Global_53557[iVar0 /*203*/].f_10[Global_53557[iVar0 /*203*/].f_9 /*48*/] = iParam1;
	Global_53557[iVar0 /*203*/].f_10[Global_53557[iVar0 /*203*/].f_9 /*48*/].f_1 = 0;
	Global_53557[iVar0 /*203*/].f_10[Global_53557[iVar0 /*203*/].f_9 /*48*/].f_6 = 0;
	Global_53557[iVar0 /*203*/].f_9++;
	iVar1 = 0;
	iVar2 = -1;
	iVar1 = 0;
	while (iVar1 < Global_53557[iVar0 /*203*/].f_3)
	{
		if (iVar2 == -1)
		{
			if (Global_53557[iVar0 /*203*/].f_4[iVar1] == Global_44257[iParam1 /*12*/].f_3)
			{
				iVar2 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar2 == -1)
	{
		if (Global_53557[iVar0 /*203*/].f_3 == 4)
		{
			return 0;
		}
		else
		{
			Global_53557[iVar0 /*203*/].f_4[Global_53557[iVar0 /*203*/].f_3] = Global_44257[iParam1 /*12*/].f_3;
			Global_53557[iVar0 /*203*/].f_3++;
		}
	}
	iVar1 = 0;
	iVar2 = -1;
	iVar1 = 0;
	while (iVar1 < Global_53557[iVar0 /*203*/].f_3)
	{
		if (iVar2 == -1)
		{
			if (Global_53557[iVar0 /*203*/].f_4[iVar1] == Global_44257[iParam1 /*12*/].f_2)
			{
				iVar2 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar2 == -1)
	{
		if (Global_53557[iVar0 /*203*/].f_3 == 4)
		{
			return 0;
		}
		else
		{
			Global_53557[iVar0 /*203*/].f_4[Global_53557[iVar0 /*203*/].f_3] = Global_44257[iParam1 /*12*/].f_2;
			Global_53557[iVar0 /*203*/].f_3++;
		}
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 < Global_53557[iVar0 /*203*/].f_3)
	{
		iVar3 = Global_53557[iVar0 /*203*/].f_4[iVar1];
		if (iVar3 < 3)
		{
			__LIB_17__::func_15(Global_53557[iVar0 /*203*/].f_4[iVar1], Global_53557[iVar0 /*203*/].f_1, 1, bParam2, 0);
		}
		iVar1++;
	}
	return 1;
}

int func_21(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11)//Position - 0x1E5FB
{
	struct<15> Var0;
	bool bVar1;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (iParam4 < 3)
	{
		if (iParam4 != bParam3)
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__::func_713(iParam1);
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam2;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam5);
		Var0.f_5 = iParam6;
		Var0.f_6 = bParam3;
		Var0.f_14 = iParam4;
		Var0.f_10 = iParam7;
		Var0.f_11 = -1;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		if (iParam7 != -1)
		{
			MISC::SET_BIT(&(Var0.f_1), 11);
		}
		else if (iParam1 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		bVar1 = false;
		while (bVar1 < 3)
		{
			if (BitTest(iParam2, bVar1))
			{
				__LIB_0__::func_688(bVar1);
			}
			bVar1++;
		}
		return 1;
	}
	return 0;
}

bool func_22(int iParam0)//Position - 0x1EFC5
{
	__LIB_0__::func_219();
	return iParam0 == Global_113386.f_2363.f_539.f_4321;
}

void func_23(int iParam0)//Position - 0x698
{
	int iVar0;
	*iParam0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (__LIB_16__::func_579(Global_113386.f_7688.f_765[iVar0 /*10*/], Global_113386.f_7688.f_765[*iParam0 /*10*/]) == 0)
		{
			*iParam0 = iVar0;
		}
		iVar0++;
	}
}

void func_24(struct<10> Param0)//Position - 0x60D
{
	if (__LIB_16__::func_577(Param0))
	{
		__LIB_0__::func_71(Param0.f_8, 0);
	}
}

void func_25(int* iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x2B4AF
{
	__LIB_8__::func_397(iParam0);
	*iParam0 = VEHICLE::CREATE_VEHICLE(iParam1, Param2, fParam3, true, true, false);
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
		ENTITY::SET_ENTITY_HEALTH(*iParam0, 1000, 0);
	}
}

void func_26(int iParam0, bool bParam1)//Position - 0x294ED
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_216(iParam0);
	if (__LIB_0__::func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_13__::func_814(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

void func_27(int iParam0, bool bParam1, bool bParam2)//Position - 0x2B858
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_0__::func_216(iParam0);
	if (__LIB_0__::func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		__LIB_0__::func_672(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]), bParam1);
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			HUD::HUD_SET_WEAPON_WHEEL_TOP_SLOT(Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0]);
			if (bParam2)
			{
				if (iVar1 == Global_113386.f_2363.f_539.f_1763 || (Global_113386.f_2363.f_539.f_1763 == -1 && iVar1 == 4))
				{
					if (Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] != 0 && Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] != joaat("WEAPON_MOLOTOV"))
					{
						if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0], false))
						{
							WEAPON::SET_CURRENT_PED_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0], true);
						}
					}
				}
			}
			iVar1++;
		}
		if (iVar0 == 0)
		{
			STATS::STAT_GET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (iVar0 == 1)
		{
			STATS::STAT_GET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (iVar0 == 2)
		{
			STATS::STAT_GET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), iVar2);
	}
}

void func_28(bool bParam0, int iParam1, int iParam2)//Position - 0x27F78
{
	bool bVar0;
	bVar0 = true;
	if (CUTSCENE::IS_CUTSCENE_ACTIVE())
	{
		while (bVar0)
		{
			bVar0 = CUTSCENE::IS_CUTSCENE_ACTIVE();
			if (CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				CUTSCENE::STOP_CUTSCENE(false);
			}
			if (CUTSCENE::HAS_CUTSCENE_LOADED())
			{
				CUTSCENE::REMOVE_CUTSCENE();
			}
			if (CUTSCENE::IS_CUTSCENE_ACTIVE() && !CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				bVar0 = false;
			}
			SYSTEM::WAIT(0);
		}
		if (bParam0)
		{
			__LIB_14__::func_870(iParam1, iParam2, 1, 1);
		}
	}
}

int func_29(int iParam0)//Position - 0x31BEE
{
	if (!__LIB_0__::func_374(iParam0))
	{
		return __LIB_0__::func_42(iParam0);
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

int func_30(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9)//Position - 0x46C5
{
	struct<10> Var0;
	struct<10> Var1;
	int iVar2;
	int iVar3;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam4 < 0)
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 == 76)
	{
		return 0;
	}
	if (iParam7 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_866 < 10)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__::func_713(iParam1);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
		Var0.f_5 = iParam5;
		Var0.f_1 = iParam9;
		Var0.f_2 = iParam2;
		Var0.f_6 = bParam3;
		Var0.f_7 = iParam6;
		Var0.f_8 = iParam7;
		Var0.f_9 = iParam8;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_765[Global_113386.f_7688.f_866 /*10*/] = { Var0 };
		Global_113386.f_7688.f_866++;
		return 1;
	}
	else
	{
		Var1 = { __LIB_16__::func_592(iParam0, iParam1, iParam2, bParam3, iParam4, iParam5, iParam6, iParam7, iParam8, iParam9) };
		iVar2 = 0;
		__LIB_17__::func_23(&iVar2);
		iVar3 = __LIB_16__::func_579(Var1, Global_113386.f_7688.f_765[iVar2 /*10*/]);
		if (iVar3 == 2)
		{
			__LIB_17__::func_24(Global_113386.f_7688.f_765[iVar2 /*10*/]);
			Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
			__LIB_16__::func_578(&Var1);
			return 1;
		}
		else if (iVar3 == 1)
		{
			if (__LIB_16__::func_577(Var1))
			{
				__LIB_17__::func_24(Global_113386.f_7688.f_765[iVar2 /*10*/]);
				Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
				__LIB_16__::func_578(&Var1);
				return 1;
			}
			else
			{
				if (!__LIB_16__::func_577(Global_113386.f_7688.f_765[iVar2 /*10*/]))
				{
					Global_113386.f_7688.f_765[iVar2 /*10*/] = { Var1 };
					__LIB_16__::func_578(&Var1);
					return 1;
				}
				__LIB_16__::func_578(&Var1);
				return 1;
			}
		}
		else
		{
			__LIB_17__::func_24(Var1);
			__LIB_16__::func_578(&Var1);
			return 1;
		}
	}
	return 0;
}

void func_31(var uParam0, char* sParam1, char* sParam2, int iParam3)//Position - 0x2BC8C
{
	*uParam0 = sParam1;
	uParam0->f_1 = sParam2;
	uParam0->f_2 = iParam3;
	STREAMING::REQUEST_ANIM_DICT(*uParam0);
	uParam0->f_5 = { 0f, 0f, 0f };
	uParam0->f_8 = { 0f, 0f, 0f };
	uParam0->f_3 = 1;
	uParam0->f_4 = 0;
}

void func_32(int iParam0, char* sParam1, bool bParam2)//Position - 0x27437
{
	int iVar0;
	iVar0 = __LIB_14__::func_709(iParam0);
	if (iVar0 == -1)
	{
		return;
	}
	if (Global_53557[iVar0 /*203*/].f_9 == 0)
	{
		return;
	}
	Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_1 = 1;
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_2), sParam1, 16);
	Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_6 = 0;
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[0 /*4*/]), "", 16);
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[1 /*4*/]), "", 16);
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[2 /*4*/]), "", 16);
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[3 /*4*/]), "", 16);
	StringCopy(&(Global_53557[iVar0 /*203*/].f_10[(Global_53557[iVar0 /*203*/].f_9 - 1) /*48*/].f_7[4 /*4*/]), "", 16);
	if (bParam2)
	{
		__LIB_17__::func_19(iParam0);
	}
}

int func_33()//Position - 0x30D7E
{
	return PED::ADD_SCENARIO_BLOCKING_AREA(1789.2f, 4658f, 30.73f, 1871.87f, 4745.51f, 40.17f, false, true, true, true);
}

void func_34(char* sParam0, int iParam1)//Position - 0x33C97
{
	sParam0 = sParam0;
	iParam1 = iParam1;
}

void func_35(char* sParam0)//Position - 0x37D1F
{
	sParam0 = sParam0;
}

int func_36(int iParam0, int iParam1, bool bParam2)//Position - 0x2817D
{
	if (__LIB_0__::func_692(iParam0) && PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
	{
		if (__LIB_0__::func_692(iParam1))
		{
			if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(iParam1, iParam0))
			{
				if (bParam2)
				{
					if (PED::IS_PED_RAGDOLL(iParam1))
					{
						return 1;
					}
				}
				else
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

bool func_37(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x2837C
{
	var uVar0;
	struct<3> Var1;
	int iVar2;
	iVar2 = __LIB_14__::func_854(iParam0, iParam1);
	if (!__LIB_0__::func_121(iParam0) || !__LIB_0__::func_121(iParam1))
	{
		if (iVar2 != -1)
		{
			__LIB_13__::func_439(&(Local_35[iVar2 /*4*/]));
		}
		return 0;
	}
	if (!__LIB_14__::func_736(iParam0, iParam1, fParam2, iParam3))
	{
		return 0;
	}
	if (iVar2 == -1)
	{
		iVar2 = __LIB_14__::func_853();
		if (iVar2 == -1)
		{
			return 0;
		}
		Local_35[iVar2 /*4*/].f_1 = iParam0;
		Local_35[iVar2 /*4*/].f_2 = iParam1;
	}
	Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
	uVar0 = __LIB_14__::func_869(&(Local_35[iVar2 /*4*/]), Var1, iParam1, &(Local_35[iVar2 /*4*/].f_3), iParam0, iParam5);
	return (uVar0 || (MISC::GET_GAME_TIMER() - Local_35[iVar2 /*4*/].f_3) < iParam4);
}

void func_38(int iParam0, var uParam1, int iParam2)//Position - 0x33365
{
	int iVar0;
	int iVar1;
	struct<50> Var2;
	struct<14> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	Var2 = 12;
	Var2.f_13 = 12;
	Var2.f_26 = 12;
	Var2.f_39 = 9;
	Var2.f_49 = 9;
	iVar4 = ENTITY::GET_ENTITY_MODEL(iParam0);
	__LIB_14__::func_529(iParam0, &Var2, 0, -1);
	__LIB_14__::func_529(iParam0, uParam1, iParam2, -1);
	iVar5 = 0;
	iVar6 = 0;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		if (uParam1->f_13[iVar0] != Var2.f_13[iVar0] || (*uParam1)[iVar0] != Var2[iVar0])
		{
			if (__LIB_0__::func_230(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_0__::func_231(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (uParam1->f_39[iVar0] != Var2.f_39[iVar0] || uParam1->f_49[iVar0] != Var2.f_49[iVar0])
		{
			if (__LIB_0__::func_230(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_0__::func_231(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	if (iVar6 || iVar5)
	{
		iVar7 = __LIB_0__::func_206(iParam0, uParam1->f_13[1], (*uParam1)[1], 1);
		iVar8 = __LIB_0__::func_206(iParam0, uParam1->f_13[2], (*uParam1)[2], 2);
		iVar9 = __LIB_0__::func_24(iVar4, iVar8, iVar7);
		if (iVar9 != -99)
		{
			Var3 = { __LIB_13__::func_798(iVar4, 0, iVar9, -1) };
			uParam1->f_13[0] = Var3.f_3;
			(*uParam1)[0] = Var3.f_4;
		}
	}
}

int func_39()//Position - 0x6BB90
{
	if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()))
	{
		if (CUTSCENE::CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY("Michael", 0))
		{
			PED::FORCE_PED_MOTION_STATE(PLAYER::PLAYER_PED_ID(), joaat("MotionState_Idle"), false, 1, false);
			return 1;
		}
	}
	return 0;
}

bool func_40(int iParam0, float fParam1)//Position - 0x6A62C
{
	return __LIB_17__::func_37(iParam0, PLAYER::PLAYER_PED_ID(), fParam1, 1, 250, 7);
}

void func_41(int iParam0, int iParam1)//Position - 0x6CF95
{
	int iVar0;
	struct<17> Var1;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	Var1 = { __LIB_0__::func_459(iVar0, iParam1) };
	__LIB_16__::func_898(iParam0, iVar0, &Var1);
}

void func_42(int* iParam0, int iParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x3CEA8
{
	__LIB_0__::func_0(iParam0);
	*iParam0 = PED::CREATE_PED(iParam4, iParam1, Param2, fParam3, false, false);
}

void func_43(char* sParam0, int iParam1, int iParam2)//Position - 0x3A38B
{
	int iVar0;
	struct<14> Var1;
	var uVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	var uVar8;
	int iVar9;
	uVar2 = 9;
	uVar8 = { __LIB_0__::func_459(iParam1, iParam2) };
	iVar9 = 0;
	if (uVar8[2] == -99 && uVar8[0] == -99)
	{
		iVar9 = 1;
	}
	iVar6 = 0;
	while (iVar6 <= 14)
	{
		iVar0 = iVar6;
		if (iVar0 != 12 && iVar0 != 14)
		{
			if (iVar0 == 13)
			{
				uVar2 = { __LIB_0__::func_466(iParam1, uVar8[iVar6]) };
				iVar7 = 0;
				while (iVar7 <= 8)
				{
					iVar3 = iVar7;
					iVar4 = __LIB_0__::func_40(iVar3);
					iVar5 = __LIB_0__::func_29(iVar4);
					if (uVar2[iVar7] != iVar5)
					{
						Var1 = { __LIB_13__::func_798(iParam1, 14, uVar2[iVar7], -1) };
						CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, Var1.f_12, Var1.f_3, 0, iParam1);
					}
					iVar7++;
				}
			}
			else
			{
				Var1 = { __LIB_13__::func_798(iParam1, iVar0, uVar8[iVar6], -1) };
				if (((iVar6 == 2 || iVar6 == 0) && iVar9) || uVar8[iVar6] == -99)
				{
					Var1.f_3 = Global_113386.f_2363.f_539[Var1.f_5 /*65*/].f_13[iVar6];
					Var1.f_4 = Global_113386.f_2363.f_539[Var1.f_5 /*65*/][iVar6];
				}
				CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar0), Var1.f_3, Var1.f_4, iParam1);
			}
		}
		iVar6++;
	}
}

void func_44(var uParam0, int iParam1, int iParam2, bool bParam3, bool bParam4, int iParam5)//Position - 0x1A15
{
	int iVar0;
	if (!uParam0->f_10)
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			if (!__LIB_0__::isGlobal_43052EqualsValue(13) && !__LIB_0__::isGlobal_43052EqualsValue(14))
			{
				if (!OBJECT::DOES_PICKUP_EXIST(uParam0->f_1))
				{
					if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), uParam0->f_3) <= (50f * 50f))
					{
						STREAMING::REQUEST_MODEL(iParam1);
						while (!STREAMING::HAS_MODEL_LOADED(iParam1))
						{
							STREAMING::REQUEST_MODEL(iParam1);
							SYSTEM::WAIT(0);
						}
						if (bParam3)
						{
							__LIB_0__::func_738(uParam0->f_3);
						}
						MISC::CLEAR_AREA(uParam0->f_3, 2.5f, false, false, false, false);
						if (bParam4)
						{
							MISC::SET_BIT(&iVar0, 1);
							uParam0->f_1 = OBJECT::CREATE_PICKUP_ROTATE(joaat("PICKUP_CUSTOM_SCRIPT"), uParam0->f_3, uParam0->f_6, iVar0, -1, iParam5, true, iParam1);
						}
						else
						{
							MISC::SET_BIT(&iVar0, 3);
							MISC::SET_BIT(&iVar0, 4);
							MISC::SET_BIT(&iVar0, 8);
							MISC::SET_BIT(&iVar0, 1);
							uParam0->f_1 = OBJECT::CREATE_PICKUP(iParam2, uParam0->f_3, iVar0, -1, true, iParam1);
						}
						STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam1);
					}
				}
			}
			if (OBJECT::DOES_PICKUP_EXIST(uParam0->f_1))
			{
				uParam0->f_10 = 1;
			}
		}
	}
}

int func_45(int iParam0)//Position - 0xACD
{
	switch (iParam0)
	{
		case 63:
		case 62:
		case 61:
		case 40:
			return 1;
		default:
	}
	return 0;
}

int func_46(int iParam0, int iParam1)//Position - 0x158E
{
	if (__LIB_2__::func_707(iParam1))
	{
		if (Global_2660249)
		{
			return Global_2660249.f_1.f_53;
		}
		return 304;
	}
	switch (iParam0)
	{
		case 63:
			return Global_794709.f_4[iParam1 /*88*/].f_65;
		case 62:
			return Global_998606.f_604[iParam1 /*88*/].f_65;
		default:
	}
	if (iParam0 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iParam1 /*88*/].f_65;
	}
	else if (iParam0 < 32)
	{
		return 304;
	}
	return 304;
}

void initGlobal_2655137ByIndex(int iParam0)//Position - 0x1F45
{
	Global_2655137[iParam0 /*99*/] = 0;
	Global_2655137[iParam0 /*99*/].f_1 = 0;
	Global_2655137[iParam0 /*99*/].f_5 = 0;
	StringCopy(&(Global_2655137[iParam0 /*99*/].f_15), "", 64);
	StringCopy(&(Global_2655137[iParam0 /*99*/].f_31), "", 64);
	Global_2655137[iParam0 /*99*/].f_47 = -1;
	Global_2655137[iParam0 /*99*/].f_48 = MISC::GET_GAME_TIMER();
	Global_2655137[iParam0 /*99*/].f_49 = -1;
	Global_2655137[iParam0 /*99*/].f_50 = -1;
	Global_2655137[iParam0 /*99*/].f_51 = -1;
	Global_2655137[iParam0 /*99*/].f_52 = 0;
	Global_2655137[iParam0 /*99*/].f_53 = 0;
	Global_2655137[iParam0 /*99*/].f_53.f_1 = 0;
	Global_2655137[iParam0 /*99*/].f_53.f_2 = 0;
	Global_2655137[iParam0 /*99*/].f_56 = 0;
	StringCopy(&(Global_2655137[iParam0 /*99*/].f_57), "", 64);
	StringCopy(&(Global_2655137[iParam0 /*99*/].f_73), "", 64);
	Global_2655137[iParam0 /*99*/].f_89 = 0;
	Global_2655137[iParam0 /*99*/].f_90 = 0;
	Global_2655137[iParam0 /*99*/].f_91 = -1;
	Global_2655137[iParam0 /*99*/].f_92 = -1;
	Global_2655137[iParam0 /*99*/].f_93 = 0;
	Global_2655137[iParam0 /*99*/].f_94 = -1;
	Global_2655137[iParam0 /*99*/].f_95 = 0;
	Global_2655137[iParam0 /*99*/].f_96 = 0;
	Global_2655137[iParam0 /*99*/].f_97 = 0;
	Global_2655137[iParam0 /*99*/].f_98 = 0;
}

int func_48(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15)//Position - 0x2087
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_1659438)
	{
		if (MISC::ARE_STRINGS_EQUAL(&uParam0, &(Global_2655137[iVar0 /*99*/].f_15)))
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

void func_49(int iParam0)//Position - 0x2132
{
	int iVar0;
	iVar0 = NETWORK::NETWORK_GET_PRESENCE_INVITE_INDEX_BY_ID(iParam0);
	if (iVar0 < 0 || iVar0 >= NETWORK::NETWORK_GET_NUM_PRESENCE_INVITES())
	{
		return;
	}
	if (NETWORK::NETWORK_REMOVE_PRESENCE_INVITE(iVar0))
	{
		return;
	}
}

void func_50()//Position - 0x245B
{
	char* sVar0;
	StringCopy(&(Global_2714762.f_860), sVar0, 24);
}

int func_51(int iParam0)//Position - 0xA1D
{
	if (MISC::IS_PS3_VERSION() || (__LIB_0__::func_52() && iParam0 == 0))
	{
		if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0) == 0 || NETWORK::NETWORK_HAVE_COMMUNICATION_PRIVILEGES(0, -1) == 0)
		{
			return 0;
		}
	}
	else if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(0) == 0)
	{
		return 0;
	}
	if (__LIB_16__::func_658() == 0)
	{
		return 0;
	}
	return 1;
}

int func_52(var uParam0)//Position - 0xFD8
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = __LIB_3__::func_189(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_80;
		case 62:
			return iVar0;
		default:
	}
	return iVar0;
}

int func_53(var uParam0)//Position - 0x14C0
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	if (__LIB_12__::func_466(uParam0))
	{
		return Global_2657492.f_356[uParam0->f_9 /*75*/].f_10.f_55;
	}
	if (__LIB_2__::func_707(uParam0->f_1))
	{
		if (__LIB_2__::func_706(uParam0))
		{
			return Global_2660249.f_1.f_55;
		}
		return iVar0;
	}
	iVar1 = __LIB_3__::func_189(uParam0);
	if (iVar1 == -1)
	{
		return iVar0;
	}
	switch (uParam0->f_2)
	{
		case 63:
			return Global_794709.f_4[iVar1 /*88*/].f_68;
		case 62:
			return Global_998606.f_604[iVar1 /*88*/].f_68;
		case 40:
			return iVar0;
		default:
	}
	if (uParam0->f_2 == PLAYER::PLAYER_ID())
	{
		return Global_1020252.f_5[iVar1 /*88*/].f_68;
	}
	else if (uParam0->f_2 < 32)
	{
		return iVar0;
	}
	return iVar0;
}

int func_54(int iParam0)//Position - 0x2D94
{
	return Global_1659759[__LIB_0__::func_153(iParam0)];
}

int func_55(int iParam0)//Position - 0x934
{
	if (MISC::IS_PS3_VERSION() || (__LIB_0__::func_52() && iParam0 == 0))
	{
		if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(1) == 0 || NETWORK::NETWORK_HAVE_COMMUNICATION_PRIVILEGES(1, -1) == 0)
		{
			return 0;
		}
	}
	else if (NETWORK::NETWORK_HAVE_USER_CONTENT_PRIVILEGES(1) == 0)
	{
		return 0;
	}
	if (__LIB_16__::func_658() == 0)
	{
		return 0;
	}
	return 1;
}

int func_56()//Position - 0x2197
{
	if (!__LIB_13__::func_112())
	{
		return 0;
	}
	return 1;
}

void func_57()//Position - 0x25A4
{
	struct<3> Var0;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
			ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), Var0.f_0, Var0.f_1, (Var0.f_2 + 1f), true, false, false, true);
		}
	}
}

float func_58(float fParam0)//Position - 0x9EDF
{
	float fVar0;
	fVar0 = fParam0;
	if (fVar0 < 0f)
	{
		fVar0 = (fVar0 + 360f);
	}
	else if (fVar0 > 360f)
	{
		fVar0 = (fVar0 - 360f);
	}
	return fVar0;
}

void func_59()//Position - 0x1722A
{
	Global_63161 = 0;
}

void func_60()//Position - 0x9128C
{
	Global_63161 = 1;
}

void func_61()//Position - 0x99913
{
	if (HUD::IS_NAMED_RENDERTARGET_REGISTERED("npcphone"))
	{
		HUD::RELEASE_NAMED_RENDERTARGET("npcphone");
	}
}

char* func_62()//Position - 0x9D889
{
	return "CELLPHONE_CUTSCENE";
}

void func_63(int iParam0, int iParam1)//Position - 0x9D953
{
	if (__LIB_0__::func_374(iParam0))
	{
		Global_113386.f_2363.f_539.f_2348[iParam0] = iParam1;
	}
}

void func_64(int iParam0, int iParam1)//Position - 0x2333B
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (iParam0 == 145 || Global_97782[iVar0] == iParam0)
			{
				if (iParam1 == 0 || ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == __LIB_0__::func_634(iParam0, iParam1))
				{
					if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_97772[iVar0], false))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_97772[iVar0], false, true);
						VEHICLE::DELETE_VEHICLE(&(Global_97772[iVar0]));
						Global_97782[iVar0] = 145;
					}
				}
			}
		}
		iVar0++;
	}
}

int func_65(int iParam0)//Position - 0x48798
{
	if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive || Global_3)
	{
		if (!Global_78319 || (Global_78319 && iParam0 != __LIB_0__::func_682(__LIB_0__::func_563())))
		{
			if (!__LIB_16__::func_20(__LIB_0__::func_484(iParam0)))
			{
				return 0;
			}
		}
	}
	return 1;
}

void func_66(int iParam0)//Position - 0x99714
{
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(Global_77137.f_139[iParam0]));
			Global_77137.f_139[iParam0] = 0;
		}
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			__LIB_0__::func_364(iParam0, 0);
		}
	}
}

int func_67(var uParam0, var uParam1, int iParam2, int iParam3)//Position - 0xF0BF
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam2, false))
	{
		__LIB_15__::func_947(uParam0, iParam2, iParam3);
		uParam1->f_4 = iParam2;
		if (__LIB_0__::func_385(iParam2))
		{
			uParam1->f_3 = 1;
		}
		else
		{
			uParam1->f_3 = 0;
		}
		return 1;
	}
	return 0;
}

void func_68(int iParam0)//Position - 0x215ED
{
	bool bVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			bVar0 = true;
			if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_139[iParam0], false))
				{
					if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_77137.f_139[iParam0], false))
					{
						bVar0 = false;
					}
				}
			}
			if (bVar0)
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
				VEHICLE::DELETE_VEHICLE(&(Global_77137.f_139[iParam0]));
			}
		}
		Global_77137[iParam0] = 1;
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			if (((((iParam0 == 24 && __LIB_0__::func_61(iParam0, 0)) && Global_78046.f_66 == 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] != 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] > 3) && (!__LIB_0__::func_542(0, Global_77137.f_555[0 /*21*/].f_12) || !__LIB_0__::func_542(1, Global_77137.f_555[0 /*21*/].f_12)))
			{
				__LIB_0__::func_313(&(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]), &Global_78046);
				Global_78124 = Global_113386.f_32749.f_5591;
			}
			__LIB_0__::func_364(iParam0, 0);
		}
	}
}

void func_69(var uParam0, int iParam1, char* sParam2, int iParam3, bool bParam4, var uParam5, bool bParam6)//Position - 0x7630
{
	uParam0->f_6 = 0;
	__LIB_14__::func_533(uParam0, iParam1, 0f, 0f, 0f, sParam2, iParam3, bParam4, uParam5, bParam6);
}

int func_70(int iParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7, int iParam8, int iParam9)//Position - 0x96801
{
	int iVar0;
	char* sVar1;
	int iVar2;
	char* sVar3;
	int iVar4;
	char* sVar5;
	char* sVar6;
	int iVar7;
	MISC::CLEAR_BIT(&Global_8136, 10);
	iVar0 = 0;
	sVar1 = "NULL";
	iVar2 = -99;
	sVar3 = "NULL";
	iVar4 = 0;
	sVar5 = "NULL";
	sVar6 = "NULL";
	iVar7 = 3;
	if (__LIB_16__::func_934(iParam0, sParam1, iParam2, iVar0, sVar1, sVar3, iVar2, iParam3, iParam4, iParam5, bParam7, iParam8, iParam9, iVar4, sVar5, sVar6, iVar7) == 1)
	{
		if (bParam7 == 1)
		{
			Global_8843 = iParam6;
			Global_8746[3 /*6*/] = { __LIB_0__::func_167(iParam0) };
			Global_8823 = iParam0;
			MISC::SET_BIT(&Global_8136, 1);
			MISC::SET_BIT(&Global_8136, 7);
		}
		return 1;
	}
	return 0;
}

void func_71(var uParam0, int iParam1, char* sParam2, int iParam3, bool bParam4, int iParam5, bool bParam6)//Position - 0x9416E
{
	__LIB_16__::func_41(uParam0, iParam1, 0f, 0f, 0f, sParam2, iParam3, bParam4, iParam5, bParam6);
}

int func_72(var uParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x42BB1
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	char cVar6[64];
	int iVar7;
	var uVar8;
	char* sVar9;
	if (!uParam0->f_39)
	{
		if (uParam0->f_7 == 4)
		{
			return 1;
		}
	}
	if (*uParam0)[uParam0->f_7] != PLAYER::PLAYER_PED_ID()
	{
	}
	if ((!PED::IS_PED_INJURED((*uParam0)[uParam0->f_7]) && !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (*uParam0)[uParam0->f_7] != PLAYER::PLAYER_PED_ID())
	{
		if (!bParam2)
		{
			if ((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) && !FIRE::IS_ENTITY_ON_FIRE(PLAYER::PLAYER_PED_ID())) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID()))
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
			}
			else
			{
				TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			}
			if ((PED::IS_PED_RAGDOLL((*uParam0)[uParam0->f_7]) && !FIRE::IS_ENTITY_ON_FIRE((*uParam0)[uParam0->f_7])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE((*uParam0)[uParam0->f_7]))
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY((*uParam0)[uParam0->f_7]);
			}
			else
			{
				TASK::CLEAR_PED_TASKS((*uParam0)[uParam0->f_7]);
			}
		}
		iVar0 = PLAYER::PLAYER_PED_ID();
		iVar1 = __LIB_14__::func_466();
		if (!uParam0->f_23)
		{
			__LIB_16__::func_938(iVar0, 0);
		}
		__LIB_13__::func_813(iVar1, &iVar0);
		PED::SET_PED_CONFIG_FLAG(iVar0, 32, true);
		PED::SET_PED_CONFIG_FLAG(iVar0, 250, true);
		iVar2 = __LIB_0__::func_484(uParam0->f_7);
		__LIB_16__::func_938((*uParam0)[uParam0->f_7], 0);
		fVar3 = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH((*uParam0)[uParam0->f_7])) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH((*uParam0)[uParam0->f_7])) - 100f)) * 100f);
		switch (__LIB_13__::func_716(PLAYER::PLAYER_PED_ID()))
		{
			case 0:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("BulletTime"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("BulletTime");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("BulletTimeOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("BulletTimeOut");
				}
				break;
			case 1:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("DrivingFocus"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("DrivingFocus");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("DrivingFocusOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("DrivingFocusOut");
				}
				break;
			case 2:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("REDMIST"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("REDMIST");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("REDMISTOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("REDMISTOut");
				}
				break;
		}
		if (__LIB_0__::func_374(__LIB_14__::func_466()))
		{
			if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0))
			{
				PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID(), 0);
			}
		}
		PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), (*uParam0)[uParam0->f_7], bParam2, false);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
		if (iParam3 & 1 != 0)
		{
			PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 210, false);
		}
		if (__LIB_0__::func_540(0) || __LIB_0__::func_540(3))
		{
			if (Global_23011.f_13)
			{
				iVar4 = 0;
				while (iVar4 < 7)
				{
					if (BitTest(Global_91193[iVar4 /*5*/].f_1, 2))
					{
						iVar5 = Global_91193[iVar4 /*5*/];
						StringCopy(&cVar6, "MISS_SWITCH_", 64);
						StringConCat(&cVar6, &(Global_91229[Global_78588.f_109[iVar5 /*4*/] /*34*/]), 64);
						STATS::STAT_INCREMENT(MISC::GET_HASH_KEY(&cVar6), 1f);
					}
					iVar4++;
				}
			}
		}
		Global_23011.f_13 = 0;
		uParam0->f_5 = __LIB_0__::func_682(iVar1);
		if (uParam0->f_5 == 4)
		{
			uParam0->f_5 = 3;
		}
		(*uParam0)[uParam0->f_5] = iVar0;
		(*uParam0)[uParam0->f_7] = 0;
		uParam0->f_6 = __LIB_0__::func_682(iVar2);
		uParam0->f_7 = 4;
		iVar7 = PLAYER::PLAYER_PED_ID();
		ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
		__LIB_15__::func_974(iVar7);
		PED::SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(iVar7, false, 0);
		if (fVar3 < 25f && !PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID()))
		{
			ENTITY::SET_ENTITY_HEALTH(PLAYER::PLAYER_PED_ID(), SYSTEM::ROUND((((25f / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(PLAYER::PLAYER_PED_ID())) - 100f)) + 100f)), 0);
		}
		if (bParam1)
		{
			if (ENTITY::DOES_ENTITY_EXIST(iVar0))
			{
				ENTITY::SET_ENTITY_VISIBLE(iVar0, true, false);
				__LIB_15__::func_974(iVar0);
				PED::SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(iVar0, false, 0);
				PED::SET_PED_STEALTH_MOVEMENT(iVar0, false, 0);
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			sVar9 = ENTITY::GET_ENTITY_SCRIPT(iVar0, &uVar8);
			if (!MISC::IS_STRING_NULL(sVar9))
			{
				if (!MISC::ARE_STRINGS_EQUAL(sVar9, SCRIPT::GET_THIS_SCRIPT_NAME()))
				{
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, false, true);
				}
				PED::DELETE_PED(&iVar0);
			}
		}
		Global_97723 = 1;
		__LIB_0__::func_481(PLAYER::PLAYER_PED_ID());
		__LIB_15__::func_979();
		__LIB_13__::func_799(iVar2);
		__LIB_15__::func_983();
		__LIB_13__::func_822(iVar2);
		__LIB_16__::func_899(__LIB_0__::func_517(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 145, 0));
		PLAYER::RESET_PLAYER_STAMINA(PLAYER::PLAYER_ID());
		ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(PLAYER::PLAYER_PED_ID(), false);
		PED::SET_PED_CAN_BE_DRAGGED_OUT(PLAYER::PLAYER_PED_ID(), true);
		if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			PLAYER::SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(PLAYER::PLAYER_ID(), __LIB_0__::func_425(67));
		}
		if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			PLAYER::SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(PLAYER::PLAYER_ID(), __LIB_0__::func_425(68));
		}
		__LIB_13__::func_818(iVar2, &iVar7);
		if (((__LIB_0__::isGlobal_43052EqualsValue(0) || __LIB_0__::isGlobal_43052EqualsValue(3)) || __LIB_0__::isGlobal_43052EqualsValue(2)) || __LIB_0__::isGlobal_43052EqualsValue(4))
		{
			PED::SET_PED_CONFIG_FLAG(iVar7, 32, false);
			PED::SET_PED_CONFIG_FLAG(iVar7, 250, false);
		}
		else
		{
			PED::SET_PED_CONFIG_FLAG(iVar7, 32, true);
			PED::SET_PED_CONFIG_FLAG(iVar7, 250, true);
		}
		if (!__LIB_0__::func_477())
		{
			__LIB_16__::func_844();
		}
		Global_97360 = 0;
		return 1;
	}
	else
	{
		if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
		}
		if (PED::IS_PED_INJURED((*uParam0)[uParam0->f_7]))
		{
		}
		if (PLAYER::PLAYER_PED_ID() == (*uParam0)[uParam0->f_7])
		{
		}
	}
	return 0;
}

void func_73(int iParam0, int iParam1, int iParam2)//Position - 0xEC0
{
	if (iParam1 != 4)
	{
		iParam0->f_34[iParam1] = iParam2;
		Global_23011.f_2 = 1;
	}
}

int func_74()//Position - 0x14DE
{
	return joaat("A_C_Chop");
}

void func_75(int iParam0, bool bParam1)//Position - 0x74617
{
	int iVar0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = WEAPON::GET_BEST_PED_WEAPON(iParam0, false);
		if (iVar0 != joaat("WEAPON_UNARMED"))
		{
			WEAPON::SET_CURRENT_PED_WEAPON(iParam0, iVar0, bParam1);
		}
	}
}

int func_76(int iParam0, bool bParam1)//Position - 0x74646
{
	if (PED::IS_PED_INJURED(iParam0))
	{
		return 0;
	}
	if (((((((((((((((((((((((((((((((((((((((((((((WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PISTOL"), false) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMBATPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_APPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SNSPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_HEAVYPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_VINTAGEPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MARKSMANPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MACHINEPISTOL"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MICROSMG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SMG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMBATPDW"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_ASSAULTRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_CARBINERIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SPECIALCARBINE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_ADVANCEDRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_BULLPUPRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_GUSENBERG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMPACTRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMBATMG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PUMPSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SAWNOFFSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_ASSAULTSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_HEAVYSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_DBSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SNIPERRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_HEAVYSNIPER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_REMOTESNIPER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MARKSMANRIFLE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_GRENADELAUNCHER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_GRENADELAUNCHER_SMOKE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_RPG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MINIGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_HOMINGLAUNCHER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_STUNGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PETROLCAN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_DIGISCANNER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMPACTLAUNCHER"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_AUTOSHOTGUN"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MINISMG"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_ASSAULTRIFLE_MK2"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_CARBINERIFLE_MK2"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_COMBATMG_MK2"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_HEAVYSNIPER_MK2"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PISTOL_MK2"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SMG_MK2"), false))
	{
		return 1;
	}
	if (bParam1)
	{
		if (((((WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_GRENADE"), false) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_SMOKEGRENADE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_STICKYBOMB"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_MOLOTOV"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PROXMINE"), false)) || WEAPON::HAS_PED_GOT_WEAPON(iParam0, joaat("WEAPON_PIPEBOMB"), false))
		{
			return 1;
		}
	}
	return 0;
}

int func_77(int iParam0, int iParam1)//Position - 0x7B083
{
	int iVar0;
	iVar0 = TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1);
	if (iVar0 == 7 || iVar0 == 2)
	{
		return 1;
	}
	return 0;
}

void func_78(int iParam0, int iParam1, int iParam2)//Position - 0x7C260
{
	if (iParam1 != 4)
	{
		iParam0->f_8[iParam1] = iParam2;
	}
}

void func_79(int* iParam0, bool bParam1)//Position - 0x8C7F7
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!PED::IS_PED_INJURED(*iParam0))
		{
			if (!PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false))
			{
				if (!PED::IS_PED_GETTING_INTO_A_VEHICLE(*iParam0))
				{
					if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(*iParam0))
					{
						ENTITY::DETACH_ENTITY(*iParam0, true, true);
					}
				}
			}
			if (!ENTITY::IS_ENTITY_ATTACHED(*iParam0))
			{
				ENTITY::FREEZE_ENTITY_POSITION(*iParam0, false);
			}
			if (!PED::IS_PED_IN_ANY_VEHICLE(*iParam0, false))
			{
				ENTITY::SET_ENTITY_COLLISION(*iParam0, true, false);
			}
		}
		if (bParam1)
		{
			PED::DELETE_PED(iParam0);
		}
		else
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(iParam0);
		}
	}
}

int func_80()//Position - 0x8CA3F
{
	return Global_103950;
}

void func_81(struct<3> Param0, float fParam1, float fParam2, char* sParam3)//Position - 0x8FA16
{
	if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true) < fParam1)
	{
		CUTSCENE::REQUEST_CUTSCENE(sParam3, 8);
	}
	else if (CUTSCENE::IS_CUTSCENE_ACTIVE() || CUTSCENE::HAS_CUTSCENE_LOADED())
	{
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true) > fParam2)
		{
			CUTSCENE::REMOVE_CUTSCENE();
		}
	}
}

int func_82(int iParam0, int iParam1)//Position - 0x934E9
{
	if (iParam0->f_39)
	{
		if (iParam1 == iParam0->f_7)
		{
			return 1;
		}
	}
	return 0;
}

float func_83(float fParam0)//Position - 0x95408
{
	float fVar0;
	fVar0 = fParam0;
	if (fParam0 < 0f)
	{
		fParam0 = (fParam0 + IntToFloat(SYSTEM::FLOOR((fVar0 / -360f)) + 1 * 360));
	}
	else if (fParam0 >= 360f)
	{
		fParam0 = (fVar0 % 360f);
	}
	return fParam0;
}

void func_84(int iParam0, float fParam1)//Position - 0xA4FE0
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
	{
		if (VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(*iParam0))
		{
			VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(*iParam0, (fParam1 - VEHICLE::GET_TIME_POSITION_IN_RECORDING(*iParam0)));
		}
	}
}

void func_85(var uParam0, float fParam1, float fParam2)//Position - 0xA663A
{
	*uParam0 = (*uParam0 + ((((fParam1 - *uParam0) * fParam2) * 30f) * SYSTEM::TIMESTEP()));
}

void func_86(int iParam0)//Position - 0xA9732
{
	Global_100164 = iParam0;
}

int func_87()//Position - 0xAEA91
{
	if (Global_113386.f_20118.f_254.f_5)
	{
		if (Global_113386.f_20118.f_254 > 66f)
		{
			return 1;
		}
		else if (Global_113386.f_20118.f_254 > 33f)
		{
			return 0;
		}
		else
		{
			return 2;
		}
	}
	return 2;
}

void func_88(var uParam0)//Position - 0x8C0CB
{
	int iVar0;
	if (CAM::DOES_CAM_EXIST(uParam0->f_9))
	{
		CAM::DESTROY_CAM(uParam0->f_9, false);
		__LIB_7__::func_703(0);
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_10))
	{
		CAM::DESTROY_CAM(uParam0->f_10, false);
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_11))
	{
		CAM::DESTROY_CAM(uParam0->f_11, false);
	}
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_9))
		{
			CAM::DESTROY_CAM((*uParam0)[iVar0], false);
		}
		iVar0++;
	}
	uParam0->f_15 = 0;
	uParam0->f_16 = 0;
	uParam0->f_17 = 0;
	uParam0->f_18 = 0;
	uParam0->f_19 = 0;
	uParam0->f_20 = 0;
	uParam0->f_21 = 0;
	uParam0->f_24 = 0;
	uParam0->f_27 = 0;
	uParam0->f_28 = 0f;
}

void func_89(int iParam0)//Position - 0xA3288
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_16__::func_319(iParam0);
	__LIB_0__::func_364(iParam0, 0);
}

void func_90(int iParam0, int iParam1)//Position - 0xA9D69
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]))
		{
			if (iParam0 == 145 || Global_97782[iVar0] == iParam0)
			{
				if (iParam1 == 0 || ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == __LIB_15__::func_221(iParam0, iParam1))
				{
					if (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_97772[iVar0], false))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_97772[iVar0], false, true);
						VEHICLE::DELETE_VEHICLE(&(Global_97772[iVar0]));
						Global_97782[iVar0] = 145;
					}
				}
			}
		}
		iVar0++;
	}
}

int func_91(int iParam0)//Position - 0x93F45
{
	int iVar0;
	if (!__LIB_15__::func_970(1))
	{
		return 0;
	}
	if (!iParam0->f_39)
	{
		iParam0->f_7 = 4;
		iParam0->f_39 = 1;
	}
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && !__LIB_13__::func_94())
	{
		if (((!iParam0->f_18[3] && iParam0->f_23) && !Global_3) && __LIB_15__::func_970(0))
		{
			iParam0->f_7 = 3;
			return 1;
		}
		else if (__LIB_15__::func_970(0) == 0 && __LIB_15__::func_935() == 0)
		{
			__LIB_15__::func_934(&iVar0);
			if (iVar0 == 1)
			{
				__LIB_13__::func_744(14, 1, -1);
			}
			else if (__LIB_0__::func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 4)
			{
				__LIB_13__::func_744(25, 1, -1);
			}
			else if (__LIB_0__::func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 2)
			{
				__LIB_13__::func_744(26, 1, -1);
			}
			else if (__LIB_0__::func_52() && NETWORK::NETWORK_GET_NP_UNAVAILABLE_REASON() == 1)
			{
				__LIB_13__::func_744(27, 1, -1);
			}
			else if ((PLAYER::IS_PLAYER_ONLINE() && NETWORK::NETWORK_IS_SIGNED_ONLINE()) == 0)
			{
				__LIB_13__::func_744(13, 1, -1);
			}
			else if (NETWORK::NETWORK_HAS_VALID_ROS_CREDENTIALS() == 0)
			{
			}
			else if (NETWORK::NETWORK_CAN_ENTER_MULTIPLAYER() == 0)
			{
			}
			else
			{
				__LIB_13__::func_744(14, 1, -1);
			}
		}
	}
	return 0;
}

void func_92(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0xA2F94
{
	if (__LIB_16__::func_31(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_16__::func_319(iParam0);
			__LIB_0__::func_313(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_0__::func_364(iParam0, 1);
		}
	}
}

void func_93(int iParam0)//Position - 0xA35AC
{
	bool bVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_16__::func_31(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			bVar0 = true;
			if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_139[iParam0], false))
				{
					if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), Global_77137.f_139[iParam0], false))
					{
						bVar0 = false;
					}
				}
			}
			if (bVar0)
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
				VEHICLE::DELETE_VEHICLE(&(Global_77137.f_139[iParam0]));
			}
		}
		Global_77137[iParam0] = 1;
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			if (((((iParam0 == 24 && __LIB_0__::func_61(iParam0, 0)) && Global_78046.f_66 == 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] != 0) && Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] > 3) && (!__LIB_0__::func_542(0, Global_77137.f_555[0 /*21*/].f_12) || !__LIB_0__::func_542(1, Global_77137.f_555[0 /*21*/].f_12)))
			{
				__LIB_0__::func_313(&(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]), &Global_78046);
				Global_78124 = Global_113386.f_32749.f_5591;
			}
			__LIB_0__::func_364(iParam0, 0);
		}
	}
}

void func_94(int iParam0, var uParam1)//Position - 0xABB36
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_14__::func_466())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_14__::func_466())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_14__::func_466() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

void func_95(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x6E69A
{
	int iVar0;
	if (iParam2 == 0)
	{
		iParam2 = PLAYER::PLAYER_PED_ID();
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam2))
	{
		uParam1->f_5 = __LIB_13__::func_716(iParam2);
	}
	if (__LIB_16__::func_5(iParam2, &iVar0, iParam3, iParam5))
	{
		__LIB_16__::func_35(uParam0, uParam1, iVar0, iParam4);
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("skylift")) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
			{
				__LIB_16__::func_35(uParam0, uParam1, iVar0, iParam4);
			}
		}
	}
}

int func_96(var uParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0xAA84D
{
	int iVar0;
	float fVar1;
	int iVar2;
	float fVar3;
	int iVar4;
	float fVar5;
	uParam0->f_7 = *uParam1;
	uParam0->f_8 = uParam1->f_1;
	if ((__LIB_0__::func_2(0) && !bParam2) && !bParam4)
	{
		if (uParam0->f_5)
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_7, 0, 0);
		}
		else
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_8, 0, 0);
		}
		return 1;
	}
	if (uParam0->f_2 == 0)
	{
		if (uParam0->f_7 != -1 && uParam0->f_8 != -1)
		{
			if (bParam2 || !__LIB_13__::func_692(uParam0->f_8, uParam0->f_7))
			{
				if (AUDIO::REQUEST_AMBIENT_AUDIO_BANK("TIME_LAPSE", false, -1))
				{
					uParam0->f_6 = 0;
					uParam0->f_2 = 1;
				}
			}
			else
			{
				uParam0->f_2 = -1;
				return 1;
			}
		}
		else
		{
			uParam0->f_2 = -1;
			return 1;
		}
	}
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
	PED::SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(0f);
	if (uParam0->f_2 == 1)
	{
		if (bParam2)
		{
			CAM::DESTROY_CAM(uParam0->f_4, false);
			uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
			CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			if (uParam1->f_17 < 0)
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
			}
			else
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			}
			CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
			CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
			if (!bParam6)
			{
				if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
				{
					ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
				}
				iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
					}
					ENTITY::SET_ENTITY_VISIBLE(iVar0, false, false);
				}
			}
			fVar1 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
			INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
			MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar1, 0);
			GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar1);
			GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar1);
			if (bParam3)
			{
				MISC::CLEAR_AREA(uParam1->f_2, 5000f, true, true, false, false);
			}
			__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 0, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
			__LIB_15__::func_228(uParam0, 1, 0, 2000, 1, 1, 0, 1);
			uParam0->f_2 = 2;
		}
		else if (!__LIB_13__::func_692(uParam0->f_7, uParam0->f_8))
		{
			if (uParam0->f_5)
			{
				CAM::DESTROY_CAM(uParam0->f_4, false);
				uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				if (uParam1->f_17 < 0)
				{
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
				}
				else
				{
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				}
				CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
				CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
				if (!bParam6)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
					}
					iVar2 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
					if (ENTITY::DOES_ENTITY_EXIST(iVar2))
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar2))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar2, true, false);
						}
						ENTITY::SET_ENTITY_VISIBLE(iVar2, false, false);
					}
				}
				fVar3 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
				INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
				MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar3, 0);
				GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar3);
				GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar3);
				if (bParam3)
				{
					MISC::CLEAR_AREA(uParam1->f_2, 5000f, true, true, false, false);
				}
				__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 8, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
				__LIB_15__::func_228(uParam0, 1, 0, 2000, 1, 1, 0, 1);
				uParam0->f_2 = 2;
			}
			else
			{
				AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
				uParam0->f_2 = -1;
				return 1;
			}
		}
		else if (!uParam0->f_5)
		{
			CAM::DESTROY_CAM(uParam0->f_4, false);
			uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
			CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			if (uParam1->f_17 < 0)
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
			}
			else
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			}
			CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
			CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
			CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
			if (!bParam6)
			{
				if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
				{
					ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
				}
				iVar4 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
				if (ENTITY::DOES_ENTITY_EXIST(iVar4))
				{
					if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar4))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar4, true, false);
					}
					ENTITY::SET_ENTITY_VISIBLE(iVar4, false, false);
				}
			}
			fVar5 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
			INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
			MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar5, 0);
			GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar5);
			GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar5);
			if (bParam3)
			{
				MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
			}
			__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 0, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
			__LIB_15__::func_228(uParam0, 1, 0, 2000, 1, 1, 0, 1);
			uParam0->f_2 = 2;
		}
		else
		{
			AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
			uParam0->f_2 = -1;
			return 1;
		}
	}
	if (uParam0->f_2 == 2)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (!uParam0->f_5)
		{
			if (__LIB_16__::func_624(uParam0->f_8, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, -1082130432, 0, 1, 1065353216))
			{
				if (uParam1->f_17 < 0)
				{
					uParam0->f_9 = MISC::GET_GAME_TIMER();
					uParam0->f_2 = 3;
				}
				else
				{
					uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
					CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
					CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
					CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
					uParam0->f_9 = MISC::GET_GAME_TIMER();
					uParam0->f_2 = 22;
				}
			}
		}
		else if (__LIB_16__::func_624(uParam0->f_7, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, -1082130432, 0, 1, 1065353216))
		{
			if (uParam1->f_17 < 0)
			{
				uParam0->f_9 = MISC::GET_GAME_TIMER();
				uParam0->f_2 = 3;
			}
			else
			{
				uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
				CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
				CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
				CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
				uParam0->f_9 = MISC::GET_GAME_TIMER();
				uParam0->f_2 = 22;
			}
		}
		if (!bParam5)
		{
			if (__LIB_0__::func_645(1000) || uParam0->f_6)
			{
				uParam0->f_6 = 1;
				if (!CAM::IS_SCREEN_FADING_OUT())
				{
					CAM::DO_SCREEN_FADE_OUT(250);
				}
				if (!CAM::IS_SCREEN_FADED_OUT())
				{
					HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
					return 0;
				}
				if (uParam0->f_3 != 0)
				{
					__LIB_16__::func_624(uParam0->f_7, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, 1f, 0, 1, 1065353216);
				}
				uParam0->f_2 = 4;
			}
		}
	}
	if (uParam0->f_2 == 22)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (CAM::DOES_CAM_EXIST(uParam0->f_4) && CAM::IS_CAM_INTERPOLATING(uParam0->f_4))
		{
		}
		else
		{
			uParam0->f_9 = MISC::GET_GAME_TIMER();
			uParam0->f_2 = 3;
		}
		if (!bParam5)
		{
			if (__LIB_0__::func_645(1000) || uParam0->f_6)
			{
				uParam0->f_6 = 1;
				if (!CAM::IS_SCREEN_FADING_OUT())
				{
					CAM::DO_SCREEN_FADE_OUT(250);
				}
				if (!CAM::IS_SCREEN_FADED_OUT())
				{
					HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
					return 0;
				}
				uParam0->f_2 = 4;
			}
		}
	}
	if (uParam0->f_2 == 3)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (uParam0->f_9 + 1000 > MISC::GET_GAME_TIMER())
		{
			uParam0->f_2 = 4;
		}
	}
	if (uParam0->f_2 == 4)
	{
		uParam0->f_6 = 0;
		uParam0->f_2 = -1;
		return 1;
	}
	if (uParam0->f_2 == -1)
	{
		return 1;
	}
	return 0;
}

int func_97(var uParam0, int iParam1, int iParam2, float fParam3, float fParam4, bool bParam5, bool bParam6, char* sParam7, bool bParam8, int iParam9)//Position - 0x91B90
{
	return __LIB_16__::func_900(uParam0, 0, iParam1, iParam2, fParam3, fParam4, bParam5, bParam6, sParam7, 2, 0, bParam8, iParam9);
	return 1;
}

void func_98(int iParam0)//Position - 0x1056
{
	if (CAM::DOES_CAM_EXIST(*iParam0))
	{
		CAM::DESTROY_CAM(*iParam0, false);
	}
}

bool func_99(char* sParam0)//Position - 0x29C9F
{
	return AUDIO::TRIGGER_MUSIC_EVENT(sParam0);
}

void func_100(int iParam0, int iParam1)//Position - 0x3B9A6
{
	Global_23011.f_9 = iParam0;
	Global_23011.f_10 = iParam1;
}

void func_101(var uParam0, struct<3> Param1, struct<3> Param2, float fParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, float fParam10, bool bParam11)//Position - 0x3DC3F
{
	uParam0->f_1 = { Param1 };
	uParam0->f_4 = { Param2 };
	uParam0->f_7 = fParam3;
	uParam0->f_20 = iParam4;
	uParam0->f_21 = iParam5;
	uParam0->f_22 = iParam6;
	uParam0->f_8 = { 0f, 0f, 0f };
	uParam0->f_11 = { 0f, 0f, 0f };
	uParam0->f_14 = { 0f, 0f, 0f };
	uParam0->f_17 = fParam3;
	uParam0->f_18 = fParam3;
	uParam0->f_23 = iParam8;
	uParam0->f_19 = iParam7;
	*uParam0 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
	CAM::SET_CAM_ACTIVE(*uParam0, true);
	CAM::SET_CAM_PARAMS(*uParam0, uParam0->f_1, uParam0->f_4, uParam0->f_7, 0, 1, 1, 2);
	if (!bParam11)
	{
		CAM::SHAKE_CAM(*uParam0, "HAND_SHAKE", 0.19f);
	}
	CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
	if (fParam10 > 0f)
	{
		CAM::SET_CAM_NEAR_CLIP(*uParam0, fParam10);
	}
	if (uParam0->f_23)
	{
		HUD::LOCK_MINIMAP_ANGLE(iParam9);
	}
	uParam0->f_24 = 0;
	uParam0->f_25 = 0;
	uParam0->f_29 = 0f;
	uParam0->f_30 = 0f;
	uParam0->f_26 = 0;
	uParam0->f_28 = 0;
	uParam0->f_27 = 0;
}

void func_102()//Position - 0x8FE2D
{
	if (CAM::IS_SCREEN_FADED_OUT())
	{
		STREAMING::LOAD_ALL_OBJECTS_NOW();
	}
}

void func_103(var uParam0, bool bParam1)//Position - 0x9BE07
{
	if (bParam1)
	{
		uParam0->f_2 = MISC::GET_GAME_TIMER();
	}
	else
	{
		uParam0->f_2 = -1;
	}
}

void func_104(float fParam0, float fParam1, var uParam2, float fParam3)//Position - 0x9E081
{
	float fVar0;
	float fVar1;
	float fVar2;
	fVar0 = MISC::GET_FRAME_TIME();
	fVar1 = (fParam1 - fParam0);
	fVar2 = (fVar1 / fParam3);
	*uParam2 = (*uParam2 + (fVar2 * fVar0));
}

void func_105(int iParam0)//Position - 0xA5A0F
{
	Global_78577 = iParam0;
}

void func_106(int iParam0)//Position - 0xA22DE
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_17__::func_66(iParam0);
	__LIB_0__::func_364(iParam0, 0);
}

int func_107(int iParam0)//Position - 0x2910
{
	int iVar0;
	int iVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			if (__LIB_16__::func_512(iVar0) == iVar1)
			{
				return iVar0;
			}
			iVar0++;
		}
	}
	return 145;
}

int func_108(var uParam0)//Position - 0x35DDC
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_60 = __LIB_0__::func_504(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_60 = __LIB_15__::func_924(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_60 = __LIB_15__::func_923(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_60 = __LIB_15__::func_940(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_60);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_15__::func_922(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_15__::func_958(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_15__::func_958(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_15__::func_921(), ""))
				{
					__LIB_15__::func_958(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_15__::func_920(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_15__::func_920(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_15__::func_919(0, 0, 1, 1);
	}
	else
	{
		__LIB_15__::func_919(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_15__::func_918(uParam0);
	return iVar0;
}

void func_109(var uParam0, int iParam1, bool bParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x3B1F6
{
	int iVar0;
	iVar0 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == 3)
		{
			iVar0 = 1;
		}
	}
	else if (__LIB_0__::func_563() == __LIB_0__::func_484(iParam1))
	{
		iVar0 = 1;
	}
	switch (iParam1)
	{
		case 0:
			*uParam4 = 3;
			*uParam6 = 0;
			if (!__LIB_15__::func_971(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_17__::func_65(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 1:
			*uParam4 = 0;
			*uParam6 = 0;
			if (!__LIB_15__::func_971(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_17__::func_65(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 2:
			*uParam4 = 1;
			*uParam6 = 0;
			if (!__LIB_15__::func_971(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_17__::func_65(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 3:
			*uParam4 = 2;
			*uParam6 = 0;
			if ((((((!uParam0->f_23 || Global_3) || (uParam0->f_23 && ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10)))) || (uParam0->f_23 && __LIB_0__::func_2(0))) || (uParam0->f_23 && Global_43018)) || !__LIB_13__::func_748()) || !__LIB_15__::func_970(0))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if (((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
	}
	if (iParam1 != 3)
	{
		if (iVar0 || uParam0->f_34[iParam1] == 2)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_34[iParam1] == 1 || uParam0->f_18[iParam1]) || ((!uParam0->f_23 && PED::IS_PED_INJURED((*uParam0)[iParam1])) && *uParam3 == 1)) || (uParam0->f_23 && BitTest(Global_97919.f_47, iParam1)))
		{
			if (*uParam3 == 1)
			{
				*uParam3 = 2;
			}
		}
		else if (uParam0->f_24[iParam1] != 0)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_23 && !BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1)) && !Global_3) && !__LIB_0__::func_2(0))
		{
			if ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))
			{
			}
			else
			{
				*uParam3 = 1;
			}
		}
	}
	else
	{
		*uParam3 = 3;
	}
	if ((iVar0 && uParam0->f_34[iParam1] == 0) || uParam0->f_34[iParam1] == 3)
	{
		if (!__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			*uParam6 = 1;
		}
	}
	if (bParam2)
	{
		__LIB_13__::func_766(uParam0, iParam1, uParam5);
	}
}

void func_110(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0xA1FEA
{
	if (__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_17__::func_66(iParam0);
			__LIB_0__::func_313(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_0__::func_364(iParam0, 1);
		}
	}
}

void func_111()//Position - 0x108A
{
	__LIB_0__::func_671(1);
	PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), false, 0);
}

void func_112(var uParam0, int iParam1, char* sParam2, int iParam3, bool bParam4, int iParam5, bool bParam6)//Position - 0x9AE38
{
	__LIB_17__::func_69(uParam0, iParam1, sParam2, iParam3, bParam4, iParam5, bParam6);
}

int func_113(int iParam0)//Position - 0x1124
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (Global_113386.f_7688[iVar0 /*15*/] == iParam0)
		{
			if (Global_43599 != iVar0)
			{
				__LIB_16__::func_605(iVar0);
				__LIB_16__::func_607(iParam0);
				iVar1 = 1;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_198)
	{
		if (Global_113386.f_7688.f_137[iVar0 /*15*/] == iParam0)
		{
			__LIB_16__::func_607(iParam0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_650)
	{
		if (Global_113386.f_7688.f_199[iVar0 /*15*/] == iParam0)
		{
			__LIB_13__::func_304(iParam0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (Global_113386.f_7688.f_651[iVar0 /*14*/] == iParam0)
		{
			__LIB_16__::func_606(iVar0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (Global_113386.f_7688.f_765[iVar0 /*10*/] == iParam0)
		{
			__LIB_13__::func_303(iVar0);
			iVar1 = 1;
		}
		iVar0++;
	}
	return iVar1;
}

void func_114(bool bParam0)//Position - 0x291E5
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	if (!PLAYER::IS_PLAYER_DEAD(iVar0))
	{
		if (bParam0)
		{
		}
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 16);
		PLAYER::SET_PLAYER_CONTROL(iVar0, bParam0, 32);
	}
	__LIB_1__::func_373(1, 1, 0, 0, 0, 0, 0);
}

void func_115(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x28BF4
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	PLAYER::SET_EVERYONE_IGNORE_PLAYER(iVar0, false);
	PLAYER::SET_PLAYER_CONTROL(iVar0, bParam3, 0);
	__LIB_1__::func_373(0, 1, 0, 0, 0, 0, 0);
	if (iParam2 == 1)
	{
		HUD::DISPLAY_RADAR(true);
		HUD::DISPLAY_HUD(true);
	}
	HUD::CLEAR_HELP(true);
	if (iParam0 == 1)
	{
		CAM::SET_WIDESCREEN_BORDERS(false, 0);
	}
	if (iParam1 == 1)
	{
		if ((iLocal_34 != 0 && iLocal_34 != joaat("OBJECT")) && iLocal_34 != joaat("GADGET_PARACHUTE"))
		{
			if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()))
			{
				if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_34, false))
				{
					WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_34, false);
				}
			}
		}
	}
	if (__LIB_0__::func_692(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), false, 0);
	}
}

void func_116(var uParam0, struct<3> Param1, var uParam2, int iParam3, bool bParam4, var uParam5, bool bParam6)//Position - 0x352C2
{
	int iVar0;
	if (uParam0->f_1 && CAM::IS_GAMEPLAY_HINT_ACTIVE())
	{
		if (MISC::GET_GAME_TIMER() >= (uParam0->f_8 + uParam0->f_9))
		{
			uParam0->f_1 = 0;
		}
	}
	iVar0 = uParam2;
	if (MISC::IS_STRING_NULL(iVar0))
	{
		if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
		{
			iVar0 = "CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */;
		}
		else
		{
			iVar0 = "FM_IHELP_HNT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus. */;
		}
	}
	if (__LIB_0__::func_1(iVar0))
	{
		__LIB_0__::func_187();
	}
	if (!CAM::IS_GAMEPLAY_HINT_ACTIVE())
	{
		if (__LIB_13__::func_796(uParam0, bParam4, bParam6, 0))
		{
			__LIB_13__::func_800(uParam0, Param1, iParam3);
		}
		if (*uParam0)
		{
			*uParam0 = 0;
		}
		else if (uParam0->f_6 == 2)
		{
			if (__LIB_13__::func_769(iVar0))
			{
				if ((MISC::IS_STRING_NULL(uParam0->f_3) && !MISC::IS_STRING_NULL(iVar0)) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
				{
					if ((CAM::IS_SPHERE_VISIBLE(Param1, 1f) && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED()) && uParam5)
					{
						if (!__LIB_0__::func_1(iVar0))
						{
							__LIB_0__::func_151(iVar0, -1);
							uParam0->f_3 = iVar0;
							if (MISC::ARE_STRINGS_EQUAL("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */, iVar0))
							{
								__LIB_0__::func_333(1);
							}
						}
					}
				}
			}
		}
		else if (__LIB_13__::func_769(iVar0))
		{
			if (MISC::IS_STRING_NULL(uParam0->f_3) && !MISC::IS_STRING_NULL(iVar0))
			{
				if ((CAM::IS_SPHERE_VISIBLE(Param1, 1f) && !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED()) && uParam5)
				{
					if (!__LIB_0__::func_1(iVar0))
					{
						__LIB_0__::func_151(iVar0, -1);
						uParam0->f_3 = iVar0;
						if (MISC::ARE_STRINGS_EQUAL("CMN_HINT" /* GXT: ~s~Press ~INPUT_VEH_CIN_CAM~ to toggle focus on the target. */, iVar0))
						{
							__LIB_0__::func_333(1);
						}
					}
				}
			}
		}
	}
	else
	{
		if (!MISC::IS_STRING_NULL(iVar0))
		{
			if (__LIB_0__::func_1(iVar0) && HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				HUD::CLEAR_HELP(true);
			}
		}
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), true))
		{
			if (PED::IS_PED_IN_ANY_BOAT(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(3) == 4)
				{
					__LIB_0__::func_345(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(6) == 4)
				{
					__LIB_0__::func_345(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(4) == 4)
				{
					__LIB_0__::func_345(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_IN_ANY_SUB(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(5) == 4)
				{
					__LIB_0__::func_345(uParam0, iVar0, 1);
				}
			}
			else if (PED::IS_PED_ON_ANY_BIKE(PLAYER::PLAYER_PED_ID()))
			{
				if (CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 3 || CAM::GET_CAM_VIEW_MODE_FOR_CONTEXT(2) == 4)
				{
					__LIB_0__::func_345(uParam0, iVar0, 1);
				}
			}
			else if (CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 3 || CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 4)
			{
				__LIB_0__::func_345(uParam0, iVar0, 1);
			}
		}
		if (!__LIB_13__::func_796(uParam0, bParam4, bParam6, 0))
		{
			if ((!*uParam0 && !uParam0->f_1) && !__LIB_0__::func_332(uParam0))
			{
				__LIB_0__::func_644(uParam0);
			}
		}
	}
}

int func_117(int iParam0, float fParam1)//Position - 0x3F3FC
{
	float fVar0;
	if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && __LIB_0__::func_121(iParam0))
	{
		if (__LIB_14__::func_657(iParam0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), iParam0))
		{
			if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6))
			{
				fVar0 = 40f;
			}
			else
			{
				fVar0 = 3f;
			}
			if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam0, fVar0, fVar0, fVar0, false, true, 0))
			{
				if (__LIB_17__::func_40(iParam0, fParam1))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_118(var uParam0, int iParam1, char* sParam2, int iParam3, bool bParam4, int iParam5, bool bParam6)//Position - 0x30A9B
{
	__LIB_14__::func_589(uParam0, iParam1, 0f, 0f, 0f, sParam2, iParam3, bParam4, iParam5, bParam6);
}

void func_119(int iParam0, var uParam1)//Position - 0x111C
{
	if (!__LIB_0__::func_43(iParam0))
	{
		return;
	}
	Global_113386.f_2363.f_539.f_2332[iParam0] = uParam1;
}

void func_120(int iParam0)//Position - 0x607DD
{
	if (!__LIB_0__::func_43(iParam0))
	{
		return;
	}
	Global_113386.f_2363.f_539.f_2332[iParam0] = 1;
}

void func_121(var uParam0)//Position - 0x6D73A
{
	if (*uParam0 != 0)
	{
		*uParam0 = 0;
	}
}

void func_122(char* sParam0, int iParam1)//Position - 0x6FAF4
{
	if (iParam1 == 1)
	{
		if (!AUDIO::IS_AUDIO_SCENE_ACTIVE(sParam0))
		{
			AUDIO::START_AUDIO_SCENE(sParam0);
		}
	}
	else if (AUDIO::IS_AUDIO_SCENE_ACTIVE(sParam0))
	{
		AUDIO::STOP_AUDIO_SCENE(sParam0);
	}
}

void func_123(int iParam0)//Position - 0x6FBDD
{
	STREAMING::REQUEST_MODEL(iParam0);
	if (!STREAMING::HAS_MODEL_LOADED(iParam0))
	{
		while (!STREAMING::HAS_MODEL_LOADED(iParam0))
		{
			SYSTEM::WAIT(0);
		}
	}
}

void func_124(int iParam0, bool bParam1)//Position - 0x783DC
{
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_41748[iParam0 /*31*/].f_1), 6);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_41748[iParam0 /*31*/].f_1), 6);
	}
}

int func_125(int iParam0)//Position - 0x87F52
{
	if (!__LIB_0__::func_43(iParam0))
	{
		return 0;
	}
	return Global_113386.f_2363.f_539.f_2332[iParam0];
}

int func_126(int iParam0, bool bParam1, float fParam2, float fParam3, bool bParam4, bool bParam5, bool bParam6, bool bParam7)//Position - 0x7F722
{
	struct<3> Var0;
	if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && __LIB_0__::func_121(iParam0))
	{
		if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
		{
			return 1;
		}
		if (__LIB_14__::func_858(iParam0, bParam1, bParam5, bParam6, bParam7))
		{
			return 1;
		}
		if (!WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6))
		{
			if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()))
			{
				Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) - ENTITY::GET_ENTITY_COORDS(iParam0, true) };
				if ((((Var0.f_0 * Var0.f_0) + (Var0.f_1 * Var0.f_1)) + (Var0.f_2 * Var0.f_2)) <= 5f)
				{
					return __LIB_14__::func_855(PLAYER::PLAYER_PED_ID(), iParam0, fParam2);
				}
			}
		}
		if (bParam4)
		{
			return 0;
		}
		else if (__LIB_17__::func_117(iParam0, fParam3))
		{
			return 1;
		}
	}
	return 0;
}

void func_127()//Position - 0x628E1
{
	struct<50> Var0;
	if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || !__LIB_0__::func_43(__LIB_0__::func_683())) || !__LIB_0__::func_438())
	{
		return;
	}
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_14__::func_529(PLAYER::PLAYER_PED_ID(), &Var0, 1, -1);
	__LIB_1__::func_379(1306, Var0[0], -1);
	__LIB_1__::func_379(1307, Var0[1], -1);
	__LIB_1__::func_379(1308, Var0[2], -1);
	__LIB_1__::func_379(1309, Var0[3], -1);
	__LIB_1__::func_379(1310, Var0[4], -1);
	__LIB_1__::func_379(1311, Var0[5], -1);
	__LIB_1__::func_379(1312, Var0[6], -1);
	__LIB_1__::func_379(1313, Var0[7], -1);
	__LIB_1__::func_379(1314, Var0[8], -1);
	__LIB_1__::func_379(1315, Var0[9], -1);
	__LIB_1__::func_379(1316, Var0[10], -1);
	__LIB_1__::func_379(1317, Var0[11], -1);
	__LIB_1__::func_379(1318, Var0.f_13[0], -1);
	__LIB_1__::func_379(1319, Var0.f_13[1], -1);
	__LIB_1__::func_379(1320, Var0.f_13[2], -1);
	__LIB_1__::func_379(1321, Var0.f_13[3], -1);
	__LIB_1__::func_379(1322, Var0.f_13[4], -1);
	__LIB_1__::func_379(1323, Var0.f_13[5], -1);
	__LIB_1__::func_379(1324, Var0.f_13[6], -1);
	__LIB_1__::func_379(1325, Var0.f_13[7], -1);
	__LIB_1__::func_379(1326, Var0.f_13[8], -1);
	__LIB_1__::func_379(1327, Var0.f_13[9], -1);
	__LIB_1__::func_379(1328, Var0.f_13[10], -1);
	__LIB_1__::func_379(1329, Var0.f_13[11], -1);
	__LIB_1__::func_379(1330, Var0.f_26[0], -1);
	__LIB_1__::func_379(1331, Var0.f_26[1], -1);
	__LIB_1__::func_379(1332, Var0.f_26[2], -1);
	__LIB_1__::func_379(1333, Var0.f_26[3], -1);
	__LIB_1__::func_379(1334, Var0.f_26[4], -1);
	__LIB_1__::func_379(1335, Var0.f_26[5], -1);
	__LIB_1__::func_379(1336, Var0.f_26[6], -1);
	__LIB_1__::func_379(1337, Var0.f_26[7], -1);
	__LIB_1__::func_379(1338, Var0.f_26[8], -1);
	__LIB_1__::func_379(1339, Var0.f_26[9], -1);
	__LIB_1__::func_379(1340, Var0.f_26[10], -1);
	__LIB_1__::func_379(1341, Var0.f_26[11], -1);
	__LIB_1__::func_379(1342, Var0.f_39[0], -1);
	__LIB_1__::func_379(1343, Var0.f_39[1], -1);
	__LIB_1__::func_379(1344, Var0.f_39[2], -1);
	__LIB_1__::func_379(1345, Var0.f_39[3], -1);
	__LIB_1__::func_379(1346, Var0.f_39[4], -1);
	__LIB_1__::func_379(1347, Var0.f_39[5], -1);
	__LIB_1__::func_379(1348, Var0.f_39[6], -1);
	__LIB_1__::func_379(1349, Var0.f_39[7], -1);
	__LIB_1__::func_379(1350, Var0.f_39[8], -1);
	__LIB_1__::func_379(1351, Var0.f_49[0], -1);
	__LIB_1__::func_379(1352, Var0.f_49[1], -1);
	__LIB_1__::func_379(1353, Var0.f_49[2], -1);
	__LIB_1__::func_379(1354, Var0.f_49[3], -1);
	__LIB_1__::func_379(1355, Var0.f_49[4], -1);
	__LIB_1__::func_379(1356, Var0.f_49[5], -1);
	__LIB_1__::func_379(1357, Var0.f_49[6], -1);
	__LIB_1__::func_379(1358, Var0.f_49[7], -1);
	__LIB_1__::func_379(1359, Var0.f_49[8], -1);
	__LIB_1__::func_379(1360, __LIB_0__::func_683(), -1);
	STATS::STAT_SET_BOOL(joaat("CLO_STORED_INITIAL"), true, true);
	Global_113386.f_2363.f_539.f_4315 = 1;
}

int func_128()//Position - 0xC51
{
	if (Global_112331)
	{
		return 1;
	}
	if (!__LIB_0__::isGlobal_43052EqualsValue(14) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("director_mode")) > 0)
	{
		return 1;
	}
	return 0;
}

int func_129(var uParam0, char* sParam1)//Position - 0xFDC
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_16__::func_102(uParam0) || !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
		__LIB_0__::func_190(sParam1);
		uParam0->f_14 = sParam1;
		uParam0->f_15 = 0;
		uParam0->f_9 = 1;
		return 1;
	}
	return 0;
}

void func_130(var uParam0)//Position - 0x103B
{
	if (__LIB_16__::func_102(uParam0))
	{
		HUD::CLEAR_HELP(true);
	}
	uParam0->f_14 = 0;
	uParam0->f_15 = 0;
	if (uParam0->f_9 == 1)
	{
		uParam0->f_9 = 0;
	}
}

int func_131(var uParam0, char* sParam1, int iParam2)//Position - 0xD8B
{
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_16__::func_102(uParam0) || !HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
	{
		HUD::CLEAR_HELP(true);
		__LIB_9__::func_821(sParam1, iParam2);
		uParam0->f_14 = sParam1;
		uParam0->f_15 = iParam2;
		uParam0->f_9 = 1;
		return 1;
	}
	return 0;
}

bool func_132()//Position - 0x1068
{
	int iVar0;
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		return 0;
	}
	iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	if (FIRE::IS_ENTITY_ON_FIRE(iVar0))
	{
		return 1;
	}
	if (__LIB_2__::func_836(iVar0))
	{
		return 1;
	}
	if (__LIB_16__::func_92(iVar0, 3))
	{
		return 1;
	}
	return !VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false);
}

void func_133(var uParam0)//Position - 0x1697
{
	if (uParam0->f_11 == 1)
	{
		__LIB_16__::func_106(&(uParam0->f_16), 255, 100, 0, 100);
	}
	else
	{
		__LIB_16__::func_45(uParam0->f_1, uParam0->f_10, 0, 0, 255, 255, 32);
	}
}

int func_134()//Position - 0x11E6
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return __LIB_2__::func_847(PLAYER::PLAYER_ID());
	}
	switch (__LIB_0__::func_683())
	{
		case 2:
			return __LIB_15__::func_806(2);
		case 0:
			return __LIB_15__::func_806(0);
		case 1:
			return __LIB_15__::func_806(1);
		default:
	}
	return 0;
}

int func_135(int iParam0)//Position - 0x2A5
{
	int iVar0;
	if (__LIB_1__::func_655(iParam0))
	{
		iVar0 = __LIB_1__::func_380(iParam0);
		if ((iVar0 == 3 || iVar0 == 4) || iVar0 == 5)
		{
			return 1;
		}
	}
	return 0;
}

int func_136(char* sParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x24B7
{
	int iVar0;
	iVar0 = MISC::GET_GAME_TIMER() + 7500;
	HUD::REQUEST_ADDITIONAL_TEXT(sParam0, iParam1);
	if (HUD::HAS_ADDITIONAL_TEXT_LOADED(iParam1) && !bParam3)
	{
		return 1;
	}
	if (iParam2 == 0)
	{
		return 1;
	}
	while (!HUD::HAS_ADDITIONAL_TEXT_LOADED(iParam1))
	{
		SYSTEM::WAIT(0);
		if (MISC::GET_GAME_TIMER() > iVar0 && !HUD::HAS_ADDITIONAL_TEXT_LOADED(iParam1))
		{
			return 0;
		}
	}
	return 1;
}

void func_137(int iParam0)//Position - 0x2B58
{
	if (iParam0 != 0)
	{
		STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam0);
	}
}

void func_138(int iParam0, int iParam1, int iParam2)//Position - 0x9DC
{
	Local_22[iParam0] = iParam1;
	Local_22.f_17[iParam0] = iParam2;
}

void func_139(var uParam0, int iParam1)//Position - 0x9F6
{
	uParam0->f_22 = 0;
	MISC::CLEAR_BIT(&uLocal_47, iParam1);
	if (iParam1 == 0 && uParam0->f_22 == 0)
	{
	}
}

void func_140(var uParam0, int iParam1)//Position - 0xA1E
{
	uParam0->f_22 = 0;
	MISC::CLEAR_BIT(&uLocal_45, iParam1);
	if (iParam1 == 0 && uParam0->f_22 == 0)
	{
	}
}

void func_141(var uParam0, struct<3> Param1, struct<3> Param2, int iParam3, float fParam4, float fParam5)//Position - 0x23EB
{
	uParam0->f_1 = { Param1 };
	uParam0->f_4 = { Param2 };
	uParam0->f_7 = iParam3;
	*uParam0 = 1;
	uParam0->f_8 = fParam4;
	uParam0->f_9 = fParam5;
}

void func_142(var uParam0, var uParam1, struct<3> Param2, struct<3> Param3, var uParam4, var uParam5, var uParam6)//Position - 0x2458
{
	*uParam0 = { Param2 };
	uParam0->f_3 = { Param3 };
	uParam0->f_6 = uParam4;
	uParam0->f_7 = uParam1;
	uParam0->f_8 = uParam5;
	uParam0->f_9 = uParam6;
}

void func_143(var uParam0)//Position - 0x249A
{
	uParam0->f_154 = 0;
	uParam0->f_155[0 /*11*/] = 0;
	uParam0->f_155[1 /*11*/] = 0;
}

int func_144(char* sParam0, var uParam1, int iParam2)//Position - 0x251C
{
	int iVar0;
	iVar0 = MISC::GET_GAME_TIMER() + 7500;
	if (*uParam1 == 0)
	{
		*uParam1 = GRAPHICS::REQUEST_SCALEFORM_MOVIE(sParam0);
	}
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam1))
	{
		return 1;
	}
	if (iParam2 == 0)
	{
		return 1;
	}
	while (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam1))
	{
		SYSTEM::WAIT(0);
		if (MISC::GET_GAME_TIMER() > iVar0 && !GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*uParam1))
		{
			return 0;
		}
	}
	return 1;
}

char* func_145(int iParam0)//Position - 0x25DF
{
	char* sVar0;
	switch (iParam0)
	{
		case 0:
			sVar0 = "misslester1b_crowd@a_";
			break;
		case 1:
			sVar0 = "misslester1b_crowd@b_";
			break;
		case 2:
			sVar0 = "misslester1b_crowd@c_";
			break;
		case 3:
			sVar0 = "misslester1b_crowd@d_";
			break;
		case 4:
			sVar0 = "misslester1b_crowd@e_";
			break;
		case 5:
			sVar0 = "misslester1b_crowd@f_";
			break;
		case 6:
			sVar0 = "misslester1b_crowd@g_";
			break;
		case 7:
			sVar0 = "misslester1b_crowd@h_";
			break;
		case 8:
			sVar0 = "misslester1b_crowd@i_";
			break;
		case 9:
			sVar0 = "misslester1b_crowd@j_";
			break;
		case 10:
			sVar0 = "misslester1b_crowd@k_";
			break;
		case 11:
			sVar0 = "misslester1b_crowd@l_";
			break;
		case 12:
			sVar0 = "misslester1b_crowd@m_";
			break;
	}
	return sVar0;
}

void func_146(char* sParam0)//Position - 0x2B4A
{
	STREAMING::REMOVE_ANIM_DICT(sParam0);
}

char* func_147(int iParam0)//Position - 0x2BE1
{
	char* sVar0;
	if (iParam0 == 0)
	{
	}
	sVar0 = "001077_01_14";
	return sVar0;
}

char* func_148(int iParam0)//Position - 0x2BF7
{
	char* sVar0;
	if (iParam0 == 0)
	{
	}
	sVar0 = "misslester1b_crowdlow@14@";
	return sVar0;
}

void func_149(var uParam0)//Position - 0x2C99
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_10)
	{
		__LIB_0__::func_0(&(uParam0->f_10[iVar0]));
		iVar0++;
	}
}

void func_150()//Position - 0x1EB
{
	int iVar0;
	bool bVar1;
	iVar0 = CUTSCENE::GET_CUTSCENE_TIME();
	bVar1 = false;
	while (bVar1 <= (16 - 1))
	{
		if (Local_22[bVar1] != -1)
		{
			if ((!BitTest(uLocal_39, bVar1) && iVar0 >= Local_22[bVar1]) && iVar0 < Local_22.f_17[bVar1])
			{
				__LIB_0__::func_467();
				MISC::SET_BIT(&uLocal_39, bVar1);
			}
		}
		bVar1++;
	}
}

void func_151(var uParam0, float fParam1, float fParam2, bool bParam3)//Position - 0x237AA
{
	float fVar0;
	if (*uParam0 != fParam1)
	{
		fVar0 = fParam2;
		if (bParam3)
		{
			fVar0 = (0f + (fParam2 * SYSTEM::TIMESTEP()));
		}
		if ((*uParam0 - fParam1) > fVar0)
		{
			*uParam0 = (*uParam0 - fVar0);
		}
		else if ((*uParam0 - fParam1) < -fVar0)
		{
			*uParam0 = (*uParam0 + fVar0);
		}
		else
		{
			*uParam0 = fParam1;
		}
	}
}

void func_152(bool bParam0, var uParam1, int iParam2)//Position - 0x2C043
{
	int iVar0;
	struct<98> Var1;
	Var1.f_11 = 12;
	Var1.f_31 = 49;
	Var1.f_81 = 2;
	Var1.f_88 = 1;
	Var1.f_84 = 255;
	Var1.f_85 = 255;
	Var1.f_86 = 255;
	Var1.f_3 = 1000;
	Var1.f_1 = 0;
	switch (bParam0)
	{
		case 14:
			if (iParam2 == 1)
			{
				iVar0 = joaat("issi2");
			}
			else if (iParam2 == 2)
			{
				iVar0 = joaat("tribike");
			}
			else
			{
				iVar0 = joaat("tribike");
			}
			switch (iVar0)
			{
				case joaat("issi2"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_5 = 88;
					Var1.f_6 = 7;
					Var1.f_9 = 0;
					StringCopy(&(Var1.f_27), "P3RSEUS", 16);
					break;
				case joaat("tribike"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_4 = 0;
					Var1.f_9 = 1;
					break;
			}
			break;
		case 15:
			if (iParam2 == 1)
			{
				iVar0 = joaat("issi2");
			}
			else if (iParam2 == 2)
			{
				iVar0 = joaat("sanchez");
			}
			else
			{
				iVar0 = joaat("issi2");
			}
			switch (iVar0)
			{
				case joaat("issi2"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_5 = 88;
					Var1.f_6 = 7;
					Var1.f_9 = 0;
					StringCopy(&(Var1.f_27), "P3RSEUS", 16);
					break;
				case joaat("sanchez"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_4 = 0;
					Var1.f_9 = 1;
					break;
			}
			break;
		case 17:
			if (iParam2 == 1)
			{
				iVar0 = joaat("sentinel2");
			}
			else if (iParam2 == 2)
			{
				iVar0 = joaat("faggio2");
			}
			else
			{
				iVar0 = joaat("sentinel2");
			}
			switch (iVar0)
			{
				case joaat("sentinel2"):
					Var1.f_0 = iVar0;
					Var1.f_5 = 28;
					Var1.f_6 = 28;
					Var1.f_9 = 0;
					StringCopy(&(Var1.f_27), "KRYST4L", 16);
					break;
				case joaat("faggio2"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_4 = 0;
					Var1.f_9 = 1;
					break;
			}
			break;
		case 19:
			if (iParam2 == 1)
			{
				iVar0 = joaat("speedo");
			}
			else if (iParam2 == 3)
			{
				iVar0 = joaat("emperor");
			}
			else
			{
				iVar0 = joaat("speedo");
			}
			switch (iVar0)
			{
				case joaat("speedo"):
					Var1.f_0 = iVar0;
					Var1.f_4 = 5;
					Var1.f_2 = 10f;
					Var1.f_9 = 1;
					StringCopy(&(Var1.f_27), "LAMAR G", 16);
					break;
				case joaat("emperor"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 8f;
					Var1.f_5 = 62;
					Var1.f_6 = 21;
					Var1.f_7 = 0;
					Var1.f_8 = 156;
					Var1.f_10 = 1;
					StringCopy(&(Var1.f_27), "07KZF345", 16);
					break;
			}
			break;
		case 29:
			Var1.f_0 = joaat("adder");
			Var1.f_5 = 62;
			Var1.f_6 = 4;
			Var1.f_7 = 68;
			Var1.f_8 = 156;
			Var1.f_10 = 1;
			Var1.f_9 = 0;
			StringCopy(&(Var1.f_27), "N4M4ST3", 16);
			break;
		case 30:
			Var1.f_0 = joaat("oracle2");
			Var1.f_9 = 1;
			Var1.f_4 = 7;
			StringCopy(&(Var1.f_27), "81TDS937", 16);
			break;
		case 18:
		case 20:
		case 21:
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 31:
		case 32:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
		case 61:
		case 62:
		case 63:
		case 64:
		case 39:
		case 40:
		case 46:
		case 47:
		case 65:
			if (iParam2 == 1)
			{
				iVar0 = joaat("asterope");
			}
			else if (iParam2 == 2)
			{
				iVar0 = joaat("sanchez");
			}
			else
			{
				iVar0 = joaat("asterope");
			}
			switch (iVar0)
			{
				case joaat("asterope"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_4 = 0;
					Var1.f_9 = 1;
					break;
				case joaat("sanchez"):
					Var1.f_0 = iVar0;
					Var1.f_2 = 0f;
					Var1.f_4 = 0;
					Var1.f_9 = 1;
					break;
			}
			break;
		default:
			break;
	}
	*uParam1 = { Var1 };
}

void func_153(var uParam0)//Position - 0x90B71
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!ENTITY::DOES_ENTITY_EXIST(Global_97802[iVar0]))
		{
			Global_97802[iVar0] = uParam0;
			iVar0 = 3;
		}
		if (iVar0 == 2)
		{
		}
		iVar0++;
	}
}

void func_154(int iParam0, bool bParam1, int iParam2)//Position - 0x1B9C
{
	if (bParam1)
	{
		if (!__LIB_0__::func_431(iParam0, 0, 0))
		{
			if (iParam2 && Global_100493.f_18[iParam0])
			{
				if (__LIB_0__::func_328(iParam0) == 3 && !__LIB_0__::func_529(iParam0))
				{
					__LIB_16__::func_596(iParam0);
					__LIB_13__::func_768(iParam0, 0, 0);
					__LIB_13__::func_776(iParam0, 1, 0);
					__LIB_1__::func_714(iParam0);
				}
				else
				{
					__LIB_13__::func_768(iParam0, 1, 0);
					__LIB_1__::func_714(iParam0);
				}
			}
			else
			{
				__LIB_13__::func_768(iParam0, 0, 0);
				__LIB_13__::func_776(iParam0, 1, 0);
				__LIB_1__::func_714(iParam0);
			}
		}
		else
		{
			__LIB_13__::func_776(iParam0, 1, 0);
			__LIB_1__::func_714(iParam0);
		}
	}
	else if (__LIB_0__::func_431(iParam0, 0, 0))
	{
		__LIB_13__::func_776(iParam0, 0, 0);
		__LIB_13__::func_776(iParam0, 1, 0);
		__LIB_1__::func_714(iParam0);
	}
}

bool func_155(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7)//Position - 0x238D3
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam4, iParam5, iParam6);
	if (iParam3 > 7)
	{
		if (iParam3 < 12)
		{
			iParam3 = 7;
		}
	}
	Global_21612 = 0;
	Global_21614 = 0;
	Global_21619 = 0;
	Global_22596 = 0;
	Global_22598 = 1;
	Global_22602 = 0;
	Global_22600 = iParam7;
	Global_2883585 = 0;
	return __LIB_15__::func_773(sParam2, iParam3, 0);
}

int func_156(int iParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x94782
{
	struct<2> Var0;
	__LIB_17__::func_94(iParam0, &Var0);
	__LIB_13__::func_812(iParam0, &Var0, &(Var0.f_1));
	return __LIB_17__::func_96(uParam1, &Var0, bParam2, bParam3, bParam4, bParam5, bParam6);
}

void func_157(int iParam0, int iParam1, int iParam2)//Position - 0x96BF6
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (!__LIB_16__::func_31(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return;
	}
	if (!BitTest(Global_77137.f_555[0 /*21*/].f_9, 12) && !BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
	{
		if (Global_77137.f_555[0 /*21*/].f_4 != ENTITY::GET_ENTITY_MODEL(iParam1))
		{
			return;
		}
	}
	if (Global_78044 != -1 && Global_78044 != iParam0)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iParam1))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, true, true);
			}
			if (iParam0 == 24)
			{
				Global_113386.f_32749.f_4801 = __LIB_11__::func_762();
			}
			if (iParam1 != Global_77137.f_139[iParam0])
			{
				if (iParam0 == 24)
				{
					iVar0 = __LIB_0__::func_343(iParam0);
					if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false)) && iParam1 != iVar0)
					{
						__LIB_12__::func_899(iVar0, 145);
					}
				}
				Global_78043 = iParam1;
				Global_78044 = iParam0;
				Global_78045 = iParam2;
			}
		}
	}
}

void func_158(var uParam0, char* sParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x7559
{
	int iVar0;
	int iVar1;
	*uParam0 = __LIB_14__::func_466();
	uParam0->f_1 = __LIB_11__::func_762();
	MISC::GET_CURR_WEATHER_STATE(&(uParam0->f_6), &(uParam0->f_7), &(uParam0->f_8));
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		__LIB_15__::func_985(&(uParam0->f_2884), 0);
		__LIB_14__::func_630(PLAYER::PLAYER_PED_ID());
		__LIB_15__::func_978(PLAYER::PLAYER_PED_ID(), 0);
		WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &(uParam0->f_2), true);
		if (uParam0->f_2 == 0 || uParam0->f_2 == joaat("OBJECT"))
		{
			uParam0->f_2 = joaat("WEAPON_UNARMED");
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		uParam0->f_17[iVar1] = Global_113386.f_2363.f_539.f_294[iVar1];
		if (iVar1 == __LIB_14__::func_466())
		{
			__LIB_15__::func_225(PLAYER::PLAYER_PED_ID(), &(uParam0->f_616[iVar1 /*65*/]), 1, -1);
		}
		else
		{
			iVar0 = 0;
			while (iVar0 < 12)
			{
				uParam0->f_616[iVar1 /*65*/][iVar0] = Global_100166[iVar1 /*65*/][iVar0];
				uParam0->f_616[iVar1 /*65*/].f_13[iVar0] = Global_100166[iVar1 /*65*/].f_13[iVar0];
				iVar0++;
			}
			uParam0->f_616[iVar1 /*65*/].f_59 = Global_100166[iVar1 /*65*/].f_59;
			uParam0->f_616[iVar1 /*65*/].f_60 = Global_100166[iVar1 /*65*/].f_60;
			uParam0->f_616[iVar1 /*65*/].f_61 = Global_100166[iVar1 /*65*/].f_61;
			uParam0->f_616[iVar1 /*65*/].f_62 = Global_100166[iVar1 /*65*/].f_62;
			uParam0->f_616[iVar1 /*65*/].f_63 = Global_100166[iVar1 /*65*/].f_63;
			uParam0->f_616[iVar1 /*65*/].f_64 = Global_100166[iVar1 /*65*/].f_64;
			iVar0 = 0;
			while (iVar0 < 9)
			{
				uParam0->f_616[iVar1 /*65*/].f_39[iVar0] = Global_100166[iVar1 /*65*/].f_39[iVar0];
				uParam0->f_616[iVar1 /*65*/].f_49[iVar0] = Global_100166[iVar1 /*65*/].f_49[iVar0];
				iVar0++;
			}
		}
		iVar0 = 0;
		while (iVar0 < 44)
		{
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/][iVar0 /*5*/] };
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 51)
		{
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/].f_221[iVar0 /*5*/] };
			iVar0++;
		}
		switch (iVar1)
		{
			case 0:
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 1:
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 2:
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
		}
		uParam0->f_9[iVar1] = Global_113386.f_20564.f_233[iVar1 /*69*/].f_1;
		uParam0->f_13[iVar1] = Global_60328_SPN_TOTAL_CASH[iVar1];
		uParam0->f_25[0 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[0 /*295*/][iVar1 /*98*/] };
		uParam0->f_25[1 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[1 /*295*/][iVar1 /*98*/] };
		iVar0 = 0;
		while (iVar0 <= 3)
		{
			uParam0->f_2838[iVar1 /*15*/][iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/][iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_5[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_5[iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_10[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_10[iVar0];
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			uParam0->f_2345[iVar1 /*164*/][iVar0] = Global_113386.f_2363[iVar1 /*164*/][iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_4[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_4[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_8[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_8[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_12[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_12[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_16[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_16[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_20[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_20[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_24[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_24[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_28[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_28[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_32[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_32[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_36[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_36[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_40[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_40[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_44[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_44[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_48[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_48[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_52[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_52[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_56[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_56[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_60[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_60[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_64[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_64[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_68[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_68[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_72[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_72[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_76[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_76[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_80[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_80[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_84[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_84[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_88[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_88[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_92[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_92[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_96[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_96[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_100[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_100[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_104[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_104[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_108[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_108[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_112[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_112[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_116[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_116[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_120[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_120[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_124[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_124[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_128[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_128[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_132[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_132[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_136[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_136[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_140[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_140[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_144[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_144[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_148[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_148[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_152[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_152[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_156[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_156[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_160[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_160[iVar0];
			iVar0++;
		}
		iVar1++;
	}
	STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY"), &(uParam0->f_2341[0]), -1);
	STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY"), &(uParam0->f_2341[1]), -1);
	STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY"), &(uParam0->f_2341[2]), -1);
	uParam0->f_5 = 145;
	if (iParam4 == 1)
	{
		__LIB_17__::func_95(&(uParam0->f_2890), uParam0, iParam5, 1, 1, 0);
	}
	__LIB_0__::func_384(&(uParam0->f_2980));
	uParam3 = uParam3;
	uParam2 = uParam2;
}

void func_159()//Position - 0x21FC4
{
	Global_63160 = 1;
}

int func_160(char* sParam0)//Position - 0x34382
{
	var uVar0;
	if (__LIB_0__::func_75())
	{
		MemCopy(&uVar0, {__LIB_0__::func_486()}, 4);
		if (MISC::ARE_STRINGS_EQUAL(sParam0, &uVar0))
		{
			return 1;
		}
	}
	return 0;
}

void func_161(int iParam0)//Position - 0x3BD49
{
	if (!CAM::IS_SCREEN_FADED_OUT())
	{
		CAM::DO_SCREEN_FADE_OUT(iParam0);
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			SYSTEM::WAIT(0);
		}
	}
}

void func_162(int iParam0)//Position - 0x49380
{
	if (iParam0 != -1)
	{
		if (Global_100479 == -1)
		{
			Global_100479 = iParam0;
		}
	}
}

void func_163(int iParam0, int iParam1, int iParam2)//Position - 0x3BF07
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (!__LIB_14__::func_527(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return;
	}
	if (!BitTest(Global_77137.f_555[0 /*21*/].f_9, 12) && !BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
	{
		if (Global_77137.f_555[0 /*21*/].f_4 != ENTITY::GET_ENTITY_MODEL(iParam1))
		{
			return;
		}
	}
	if (Global_78044 != -1 && Global_78044 != iParam0)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iParam1))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, true, true);
			}
			if (iParam0 == 24)
			{
				Global_113386.f_32749.f_4801 = __LIB_11__::func_762();
			}
			if (iParam1 != Global_77137.f_139[iParam0])
			{
				if (iParam0 == 24)
				{
					iVar0 = __LIB_0__::func_343(iParam0);
					if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false)) && iParam1 != iVar0)
					{
						__LIB_12__::func_899(iVar0, 145);
					}
				}
				Global_78043 = iParam1;
				Global_78044 = iParam0;
				Global_78045 = iParam2;
			}
		}
	}
}

void func_164(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1030
{
	struct<50> Var0;
	int iVar1;
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_17__::func_38(iParam1, &Var0, iParam3);
	iVar1 = 0;
	while (iVar1 < 12)
	{
		CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, iVar1, Var0.f_13[iVar1], Var0[iVar1], iParam2);
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 9)
	{
		if (Var0.f_39[iVar1] == -1 || Var0.f_39[iVar1] == 255)
		{
			CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar1, -1, 0, iParam2);
		}
		else
		{
			CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar1, Var0.f_39[iVar1], Var0.f_49[iVar1], iParam2);
		}
		iVar1++;
	}
}

void func_165(var uParam0, char* sParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x3FB31
{
	int iVar0;
	int iVar1;
	*uParam0 = __LIB_0__::func_683();
	uParam0->f_1 = __LIB_11__::func_762();
	MISC::GET_CURR_WEATHER_STATE(&(uParam0->f_6), &(uParam0->f_7), &(uParam0->f_8));
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		__LIB_14__::func_572(&(uParam0->f_2884), 0);
		__LIB_0__::func_780(PLAYER::PLAYER_PED_ID());
		__LIB_14__::func_530(PLAYER::PLAYER_PED_ID(), 0);
		WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &(uParam0->f_2), true);
		if (uParam0->f_2 == 0 || uParam0->f_2 == joaat("OBJECT"))
		{
			uParam0->f_2 = joaat("WEAPON_UNARMED");
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		uParam0->f_17[iVar1] = Global_113386.f_2363.f_539.f_294[iVar1];
		if (iVar1 == __LIB_0__::func_683())
		{
			__LIB_14__::func_529(PLAYER::PLAYER_PED_ID(), &(uParam0->f_616[iVar1 /*65*/]), 1, -1);
		}
		else
		{
			iVar0 = 0;
			while (iVar0 < 12)
			{
				uParam0->f_616[iVar1 /*65*/][iVar0] = Global_100166[iVar1 /*65*/][iVar0];
				uParam0->f_616[iVar1 /*65*/].f_13[iVar0] = Global_100166[iVar1 /*65*/].f_13[iVar0];
				iVar0++;
			}
			uParam0->f_616[iVar1 /*65*/].f_59 = Global_100166[iVar1 /*65*/].f_59;
			uParam0->f_616[iVar1 /*65*/].f_60 = Global_100166[iVar1 /*65*/].f_60;
			uParam0->f_616[iVar1 /*65*/].f_61 = Global_100166[iVar1 /*65*/].f_61;
			uParam0->f_616[iVar1 /*65*/].f_62 = Global_100166[iVar1 /*65*/].f_62;
			uParam0->f_616[iVar1 /*65*/].f_63 = Global_100166[iVar1 /*65*/].f_63;
			uParam0->f_616[iVar1 /*65*/].f_64 = Global_100166[iVar1 /*65*/].f_64;
			iVar0 = 0;
			while (iVar0 < 9)
			{
				uParam0->f_616[iVar1 /*65*/].f_39[iVar0] = Global_100166[iVar1 /*65*/].f_39[iVar0];
				uParam0->f_616[iVar1 /*65*/].f_49[iVar0] = Global_100166[iVar1 /*65*/].f_49[iVar0];
				iVar0++;
			}
		}
		iVar0 = 0;
		while (iVar0 < 44)
		{
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/][iVar0 /*5*/] };
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 51)
		{
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/].f_221[iVar0 /*5*/] };
			iVar0++;
		}
		switch (iVar1)
		{
			case 0:
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 1:
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 2:
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
		}
		uParam0->f_9[iVar1] = Global_113386.f_20564.f_233[iVar1 /*69*/].f_1;
		uParam0->f_13[iVar1] = Global_60328_SPN_TOTAL_CASH[iVar1];
		uParam0->f_25[0 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[0 /*295*/][iVar1 /*98*/] };
		uParam0->f_25[1 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[1 /*295*/][iVar1 /*98*/] };
		iVar0 = 0;
		while (iVar0 <= 3)
		{
			uParam0->f_2838[iVar1 /*15*/][iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/][iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_5[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_5[iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_10[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_10[iVar0];
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			uParam0->f_2345[iVar1 /*164*/][iVar0] = Global_113386.f_2363[iVar1 /*164*/][iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_4[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_4[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_8[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_8[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_12[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_12[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_16[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_16[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_20[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_20[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_24[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_24[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_28[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_28[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_32[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_32[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_36[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_36[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_40[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_40[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_44[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_44[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_48[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_48[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_52[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_52[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_56[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_56[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_60[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_60[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_64[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_64[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_68[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_68[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_72[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_72[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_76[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_76[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_80[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_80[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_84[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_84[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_88[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_88[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_92[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_92[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_96[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_96[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_100[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_100[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_104[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_104[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_108[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_108[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_112[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_112[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_116[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_116[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_120[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_120[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_124[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_124[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_128[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_128[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_132[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_132[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_136[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_136[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_140[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_140[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_144[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_144[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_148[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_148[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_152[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_152[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_156[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_156[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_160[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_160[iVar0];
			iVar0++;
		}
		iVar1++;
	}
	STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY"), &(uParam0->f_2341[0]), -1);
	STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY"), &(uParam0->f_2341[1]), -1);
	STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY"), &(uParam0->f_2341[2]), -1);
	uParam0->f_5 = 145;
	if (iParam4 == 1)
	{
		__LIB_14__::func_591(&(uParam0->f_2890), uParam0, iParam5, 1, 1, 0);
	}
	__LIB_0__::func_384(&(uParam0->f_2980));
	uParam3 = uParam3;
	uParam2 = uParam2;
}

int func_166(int iParam0)//Position - 0x92D3
{
	if (iParam0 == 0)
	{
		switch (Global_113386.f_14051[0 /*20*/].f_6)
		{
			case 1:
				return 0;
				break;
			case 2:
				return 1;
				break;
			case 3:
				return 2;
				break;
			case 4:
				return 3;
				break;
			case 5:
				return 4;
				break;
			case 6:
				return 5;
				break;
			case 7:
				return 6;
				break;
			default:
				return -1;
				break;
			}
	}
	if (iParam0 == 1)
	{
		switch (Global_113386.f_14051[1 /*20*/].f_6)
		{
			case 1:
				return 0;
				break;
			case 2:
				return 1;
				break;
			case 3:
				return 2;
				break;
			case 4:
				return 3;
				break;
			case 5:
				return 4;
				break;
			case 6:
				return 5;
				break;
			case 7:
				return 6;
				break;
			default:
				return -1;
				break;
			}
	}
	if (iParam0 == 2)
	{
		switch (Global_113386.f_14051[2 /*20*/].f_6)
		{
			case 1:
				return 0;
				break;
			case 2:
				return 1;
				break;
			case 3:
				return 2;
				break;
			case 4:
				return 3;
				break;
			case 5:
				return 4;
				break;
			case 6:
				return 5;
				break;
			case 7:
				return 6;
				break;
			default:
				return -1;
				break;
			}
	}
	return -2;
}

int func_167(int iParam0)//Position - 0x159F1
{
	return __LIB_0__::func_61(iParam0, 0);
}

void func_168(int iParam0)//Position - 0x15A00
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (FIRE::IS_ENTITY_ON_FIRE(iParam0))
			{
				FIRE::STOP_ENTITY_FIRE(iParam0);
				ENTITY::SET_ENTITY_HEALTH(iParam0, ENTITY::GET_ENTITY_HEALTH(iParam0) + 200, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(iParam0, (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(iParam0) + 200f));
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(iParam0, (VEHICLE::GET_VEHICLE_PETROL_TANK_HEALTH(iParam0) + 200f));
				FIRE::STOP_FIRE_IN_RANGE(ENTITY::GET_ENTITY_COORDS(iParam0, true), 5f);
				MISC::CLEAR_AREA(ENTITY::GET_ENTITY_COORDS(iParam0, true), 2.5f, true, false, false, false);
			}
		}
	}
}

int func_169(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4)//Position - 0x1A974
{
	int iVar0[16];
	int iVar1;
	iVar1 = 0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		PED::GET_PED_NEARBY_PEDS(iParam0, &iVar0, iParam4);
		iVar1 = 0;
		while (iVar1 <= (iVar0 - 1))
		{
			if (ENTITY::DOES_ENTITY_EXIST(iVar0[iVar1]))
			{
				if (!PED::IS_PED_INJURED(iVar0[iVar1]))
				{
					if (PED::GET_PED_RELATIONSHIP_GROUP_HASH(iVar0[iVar1]) == iParam1)
					{
						if (iParam2 <= 0)
						{
							if (iParam3 == 1)
							{
								if (ENTITY::IS_ENTITY_ON_SCREEN(iVar0[iVar1]))
								{
									return iVar0[iVar1];
								}
							}
							else
							{
								return iVar0[iVar1];
							}
						}
						else if (iVar1 + iParam2) <= (iVar0 - 1)
						{
							if (ENTITY::DOES_ENTITY_EXIST(iVar0[(iVar1 + iParam2)]))
							{
								if (!PED::IS_PED_INJURED(iVar0[(iVar1 + iParam2)]))
								{
									if (PED::GET_PED_RELATIONSHIP_GROUP_HASH(iVar0[(iVar1 + iParam2)]) == iParam1)
									{
										if (iParam3 == 1)
										{
											if (ENTITY::IS_ENTITY_ON_SCREEN(iVar0[(iVar1 + iParam2)]))
											{
												return iVar0[(iVar1 + iParam2)];
											}
										}
										else
										{
											return iVar0[(iVar1 + iParam2)];
										}
									}
								}
							}
						}
					}
				}
			}
			iVar1++;
		}
	}
	return 0;
}

void func_170(int iParam0, var uParam1, var uParam2)//Position - 0x1EA1F
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			*uParam1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			*uParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
	}
}

void func_171(int iParam0, bool bParam1, bool bParam2)//Position - 0x90869
{
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_41748[iParam0 /*31*/].f_1), 5);
		if (bParam2)
		{
			if (BitTest(Global_41748[iParam0 /*31*/].f_1, 1))
			{
				Global_41748[iParam0 /*31*/].f_22 = -1f;
			}
			else
			{
				Global_41748[iParam0 /*31*/].f_22 = 1f;
			}
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(Global_41748[iParam0 /*31*/], Global_41748[iParam0 /*31*/].f_22, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Global_41748[iParam0 /*31*/], 1, false, true);
		}
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_41748[iParam0 /*31*/].f_1), 5);
		if (bParam2)
		{
			Global_41748[iParam0 /*31*/].f_22 = 0f;
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(Global_41748[iParam0 /*31*/], Global_41748[iParam0 /*31*/].f_22, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Global_41748[iParam0 /*31*/], 1, false, true);
		}
	}
}

int func_172(var uParam0, var uParam1)//Position - 0x96CF1
{
	int iVar0;
	iVar0 = 0;
	if (*uParam1 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam1 - 1))
		{
			if (!STREAMING::HAS_ANIM_DICT_LOADED((*uParam0)[iVar0]))
			{
				STREAMING::REQUEST_ANIM_DICT((*uParam0)[iVar0]);
				return 0;
			}
			iVar0++;
		}
	}
	return 1;
}

int func_173(var uParam0, var uParam1)//Position - 0x96D36
{
	int iVar0;
	iVar0 = 0;
	if (*uParam1 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam1 - 1))
		{
			if (!STREAMING::HAS_MODEL_LOADED((*uParam0)[iVar0]))
			{
				STREAMING::REQUEST_MODEL((*uParam0)[iVar0]);
				return 0;
			}
			iVar0++;
		}
	}
	return 1;
}

void func_174(int iParam0, var uParam1, int iParam2, var uParam3)//Position - 0x97165
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	if (*uParam3 >= 0)
	{
		if (*uParam3 <= (iParam2 - 1))
		{
			iVar0 = 0;
			while (iVar0 <= *uParam3)
			{
				if ((*uParam1)[iVar0] == iParam0)
				{
					iVar1 = 1;
				}
				iVar0++;
			}
			if (iVar1 == 0)
			{
				STREAMING::REQUEST_MODEL(iParam0);
				(*uParam1)[*uParam3] = iParam0;
				*uParam3++;
			}
		}
	}
}

void func_175(var uParam0, var uParam1)//Position - 0x972DB
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 0;
	if (*uParam1 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam1 - 1))
		{
			STREAMING::REMOVE_ANIM_DICT((*uParam0)[iVar0]);
			(*uParam0)[iVar0] = iVar1;
			iVar0++;
		}
	}
	*uParam1 = 0;
}

void func_176(var uParam0, var uParam1)//Position - 0x9731C
{
	int iVar0;
	iVar0 = 0;
	if (*uParam1 > 0)
	{
		iVar0 = 0;
		while (iVar0 <= (*uParam1 - 1))
		{
			if ((*uParam0)[iVar0] != 0)
			{
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED((*uParam0)[iVar0]);
				(*uParam0)[iVar0] = 0;
			}
			iVar0++;
		}
	}
	*uParam1 = 0;
}

int func_177(int iParam0)//Position - 0xA0861
{
	var uVar0;
	var uVar1;
	if (iParam0 == 5)
	{
		return 5;
	}
	uVar1 = iParam0 + 1;
	uVar0 = uVar1;
	return uVar0;
}

void func_178(var uParam0, struct<98> Param1)//Position - 0x24172
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*uParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*uParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
		}
	}
	if (__LIB_0__::func_312(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
			}
		}
	}
	__LIB_0__::func_670(uParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Param1.f_96);
}

void func_179()//Position - 0xDF46
{
	if (Global_97753)
	{
		__LIB_13__::func_767();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_180()//Position - 0x126D8
{
	struct<50> Var0;
	if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || !__LIB_0__::func_374(__LIB_15__::func_944())) || !__LIB_0__::func_438())
	{
		return;
	}
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_16__::func_32(PLAYER::PLAYER_PED_ID(), &Var0, 1, -1);
	__LIB_1__::func_379(1306, Var0[0], -1);
	__LIB_1__::func_379(1307, Var0[1], -1);
	__LIB_1__::func_379(1308, Var0[2], -1);
	__LIB_1__::func_379(1309, Var0[3], -1);
	__LIB_1__::func_379(1310, Var0[4], -1);
	__LIB_1__::func_379(1311, Var0[5], -1);
	__LIB_1__::func_379(1312, Var0[6], -1);
	__LIB_1__::func_379(1313, Var0[7], -1);
	__LIB_1__::func_379(1314, Var0[8], -1);
	__LIB_1__::func_379(1315, Var0[9], -1);
	__LIB_1__::func_379(1316, Var0[10], -1);
	__LIB_1__::func_379(1317, Var0[11], -1);
	__LIB_1__::func_379(1318, Var0.f_13[0], -1);
	__LIB_1__::func_379(1319, Var0.f_13[1], -1);
	__LIB_1__::func_379(1320, Var0.f_13[2], -1);
	__LIB_1__::func_379(1321, Var0.f_13[3], -1);
	__LIB_1__::func_379(1322, Var0.f_13[4], -1);
	__LIB_1__::func_379(1323, Var0.f_13[5], -1);
	__LIB_1__::func_379(1324, Var0.f_13[6], -1);
	__LIB_1__::func_379(1325, Var0.f_13[7], -1);
	__LIB_1__::func_379(1326, Var0.f_13[8], -1);
	__LIB_1__::func_379(1327, Var0.f_13[9], -1);
	__LIB_1__::func_379(1328, Var0.f_13[10], -1);
	__LIB_1__::func_379(1329, Var0.f_13[11], -1);
	__LIB_1__::func_379(1330, Var0.f_26[0], -1);
	__LIB_1__::func_379(1331, Var0.f_26[1], -1);
	__LIB_1__::func_379(1332, Var0.f_26[2], -1);
	__LIB_1__::func_379(1333, Var0.f_26[3], -1);
	__LIB_1__::func_379(1334, Var0.f_26[4], -1);
	__LIB_1__::func_379(1335, Var0.f_26[5], -1);
	__LIB_1__::func_379(1336, Var0.f_26[6], -1);
	__LIB_1__::func_379(1337, Var0.f_26[7], -1);
	__LIB_1__::func_379(1338, Var0.f_26[8], -1);
	__LIB_1__::func_379(1339, Var0.f_26[9], -1);
	__LIB_1__::func_379(1340, Var0.f_26[10], -1);
	__LIB_1__::func_379(1341, Var0.f_26[11], -1);
	__LIB_1__::func_379(1342, Var0.f_39[0], -1);
	__LIB_1__::func_379(1343, Var0.f_39[1], -1);
	__LIB_1__::func_379(1344, Var0.f_39[2], -1);
	__LIB_1__::func_379(1345, Var0.f_39[3], -1);
	__LIB_1__::func_379(1346, Var0.f_39[4], -1);
	__LIB_1__::func_379(1347, Var0.f_39[5], -1);
	__LIB_1__::func_379(1348, Var0.f_39[6], -1);
	__LIB_1__::func_379(1349, Var0.f_39[7], -1);
	__LIB_1__::func_379(1350, Var0.f_39[8], -1);
	__LIB_1__::func_379(1351, Var0.f_49[0], -1);
	__LIB_1__::func_379(1352, Var0.f_49[1], -1);
	__LIB_1__::func_379(1353, Var0.f_49[2], -1);
	__LIB_1__::func_379(1354, Var0.f_49[3], -1);
	__LIB_1__::func_379(1355, Var0.f_49[4], -1);
	__LIB_1__::func_379(1356, Var0.f_49[5], -1);
	__LIB_1__::func_379(1357, Var0.f_49[6], -1);
	__LIB_1__::func_379(1358, Var0.f_49[7], -1);
	__LIB_1__::func_379(1359, Var0.f_49[8], -1);
	__LIB_1__::func_379(1360, __LIB_15__::func_944(), -1);
	STATS::STAT_SET_BOOL(joaat("CLO_STORED_INITIAL"), true, true);
	Global_113386.f_2363.f_539.f_4315 = 1;
}

void func_181(int iParam0, bool bParam1)//Position - 0x13E86
{
	__LIB_16__::func_33(iParam0);
	__LIB_16__::func_28(iParam0, bParam1);
	__LIB_16__::func_27(iParam0);
	__LIB_16__::func_26(iParam0);
	__LIB_16__::func_25(iParam0);
	__LIB_16__::func_24(iParam0);
	__LIB_16__::func_23(iParam0);
}

int func_182(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x9BDEA
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_0__::func_363(*uParam1, __LIB_15__::func_944(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_183(char* sParam0, int iParam1, bool bParam2)//Position - 0x8817
{
	Global_21606 = 0;
	if (Global_21605 == 0 || Global_21607 == 2)
	{
		if (Global_21605 != 0)
		{
			if (iParam1 > Global_21607)
			{
				if (Global_21612 == 0)
				{
					AUDIO::STOP_SCRIPTED_CONVERSATION(false);
					Global_20266.f_1 = 3;
					Global_21605 = 0;
					Global_21606 = 1;
					Global_21658 = 0;
					Global_21601 = 0;
					Global_21602 = 0;
					Global_21616 = 0;
					Global_21615 = 0;
					Global_20265 = 0;
				}
				else
				{
					__LIB_0__::func_74();
					return 0;
				}
			}
			else
			{
				return 0;
			}
		}
		if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING())
		{
			return 0;
		}
		if (__LIB_0__::func_194(8, -1))
		{
			return 0;
		}
		Global_21681 = { Global_21675 };
		__LIB_0__::func_228();
		Global_20894 = { Global_21059 };
		Global_21611 = Global_21612;
		Global_21618 = Global_21619;
		Global_2883586 = Global_2883585;
		Global_21620 = { Global_21636 };
		Global_21613 = Global_21614;
		Global_22595 = Global_22596;
		Global_22603 = { Global_22609 };
		Global_22597 = Global_22598;
		Global_22599 = Global_22600;
		Global_22601 = Global_22602;
		Global_21224.f_370 = Global_22594;
		Global_21224.f_368 = Global_22592;
		Global_21224.f_369 = Global_22593;
		Global_21601 = Global_21602;
		if (Global_21611)
		{
			MISC::CLEAR_BIT(&Global_8136, 20);
			MISC::CLEAR_BIT(&Global_8137, 17);
			MISC::CLEAR_BIT(&Global_8138, 0);
			if (bParam2)
			{
				__LIB_16__::func_38();
				if (Global_8941[Global_20266 /*2811*/][0 /*281*/].f_259 == 2)
				{
					if (iParam1 == 13)
					{
					}
					else
					{
						return 0;
					}
				}
				if (Global_20266.f_1 > 3)
				{
					return 0;
				}
			}
			if (Global_20232 == 1)
			{
				return 0;
			}
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (__LIB_0__::func_227())
				{
					return 0;
				}
				if (TASK::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), joaat("GADGET_PARACHUTE")))
				{
					return 0;
				}
				if (!Global_78319)
				{
					if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID()))
					{
						return 0;
					}
					if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID()))
					{
						return 0;
					}
					if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID()))
					{
						return 0;
					}
					if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0))
					{
						return 0;
					}
				}
			}
			if (__LIB_0__::func_73())
			{
				return 0;
			}
			else
			{
				switch (Global_20266.f_1)
				{
					case 7:
						return 0;
						break;
					case 8:
						return 0;
						break;
					case 9:
						break;
					case 10:
						break;
					default:
						break;
				}
				if (BitTest(Global_8136, 9))
				{
					return 0;
				}
			}
			__LIB_0__::func_226();
			Global_21615 = bParam2;
		}
		Global_21607 = iParam1;
		StringCopy(&Global_21224, sParam0, 24);
		Global_20471 = 0;
		__LIB_0__::func_225();
		__LIB_0__::func_665();
		return 1;
	}
	if (Global_21605 == 5)
	{
		return 0;
	}
	if (iParam1 < Global_21607 || iParam1 == Global_21607)
	{
		return 0;
	}
	if (iParam1 == 2)
	{
	}
	else
	{
		__LIB_0__::func_74();
	}
	return 0;
}

void func_184(int iParam0)//Position - 0xE43E
{
	struct<7> Var0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	float fVar4;
	int iVar5;
	int iVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	if (!__LIB_0__::func_346())
	{
		return;
	}
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	Var0 = { __LIB_0__::func_403(iParam0) };
	if (BitTest(Var0.f_4, 2))
	{
		__LIB_0__::func_726(iParam0, &Var0);
	}
	if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
	{
		if (CUTSCENE::IS_CUTSCENE_PLAYING())
		{
			return;
		}
	}
	bVar1 = false;
	bVar2 = false;
	fVar4 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true);
	if ((BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] == 2) && fVar4 > 210f)
	{
		MISC::CLEAR_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
		Global_38430[iParam0] = 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("startup_positioning")) == 0)
	{
		if (BitTest(Global_38657[(iParam0 / 32)], (iParam0 % 32)))
		{
			if (fVar4 < 25f)
			{
				if (Global_100493.f_373 == 0)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						Global_100493.f_373 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
					}
				}
				iVar5 = Global_100493.f_373;
				iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
				if (iVar5 == iVar6 && iVar5 != 0)
				{
					MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
					Global_38884[iParam0] = 3;
					MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
				}
			}
			MISC::CLEAR_BIT(&(Global_38657[(iParam0 / 32)]), (iParam0 % 32));
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)))
	{
		iVar3 = Global_38884[iParam0];
	}
	else if (BitTest(Var0.f_4, 0))
	{
		if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive)
		{
			iVar3 = __LIB_16__::func_37(iParam0);
		}
		else
		{
			iVar3 = 0;
		}
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			iVar3 = 0;
		}
	}
	else if (BitTest(Var0.f_4, 1) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("ambient_solomon")) == 0)
	{
		if (__LIB_16__::func_36())
		{
			iVar3 = 0;
		}
		else
		{
			iVar3 = 1;
		}
	}
	else
	{
		iVar3 = Global_113386.f_7261[iParam0];
	}
	if (Global_39111[iParam0] != iVar3)
	{
		bVar1 = true;
	}
	if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
	{
		if (!BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) || (Global_38430[iParam0] == 0 && Global_38884[iParam0] != 2))
		{
			bVar1 = true;
		}
	}
	if (bVar1)
	{
		if (!Global_38411)
		{
		}
		else
		{
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(Var0.f_5, Var0.f_3, Var0, false, false, false);
			}
			switch (iVar3)
			{
				case 1:
					if (BitTest(Var0.f_4, 3))
					{
						bVar7 = true;
					}
					else if (fVar4 > 3f || MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var0.f_5)) <= 0.015f)
					{
						iVar8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
						iVar9 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
						if (iVar8 != iVar9 || iVar8 == 0)
						{
							bVar7 = true;
						}
					}
					if (bVar7)
					{
						if (Var0.f_6 != 0f)
						{
							OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
						}
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
						bVar2 = true;
					}
					break;
				case 4:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 2:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 0:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, true);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 3:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, 0, false, true);
					bVar2 = true;
					break;
				case 5:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 6:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				default:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				}
		}
		if (bVar2)
		{
			MISC::CLEAR_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			Global_39111[iParam0] = iVar3;
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] != 2)
	{
		MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
		__LIB_0__::func_401(iParam0);
		if (Global_38430[iParam0] < 2)
		{
			Global_38430[iParam0]++;
		}
	}
}

void func_185(int iParam0, int iParam1, int iParam2)//Position - 0x222D
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (!__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return;
	}
	if (!BitTest(Global_77137.f_555[0 /*21*/].f_9, 12) && !BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
	{
		if (Global_77137.f_555[0 /*21*/].f_4 != ENTITY::GET_ENTITY_MODEL(iParam1))
		{
			return;
		}
	}
	if (Global_78044 != -1 && Global_78044 != iParam0)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iParam1))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, true, true);
			}
			if (iParam0 == 24)
			{
				Global_113386.f_32749.f_4801 = __LIB_0__::func_464();
			}
			if (iParam1 != Global_77137.f_139[iParam0])
			{
				if (iParam0 == 24)
				{
					iVar0 = __LIB_0__::func_343(iParam0);
					if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false)) && iParam1 != iVar0)
					{
						__LIB_13__::func_828(iVar0, 145);
					}
				}
				Global_78043 = iParam1;
				Global_78044 = iParam0;
				Global_78045 = iParam2;
			}
		}
	}
}

void func_186(var uParam0, int iParam1)//Position - 0x9BF33
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	*uParam0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	uParam0->f_3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
	uParam0->f_5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		uParam0->f_4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
	}
	if (SYSTEM::VDIST(*uParam0, 320.9934f, 265.2515f, 82.1221f) < 10f)
	{
		*uParam0 = { 301.2162f, 202.1357f, 103.3797f };
		uParam0->f_3 = 156.5144f;
	}
	else if (SYSTEM::VDIST(*uParam0, 377.153f, -717.567f, 10.0536f) < 10f)
	{
		*uParam0 = { 394.2567f, -713.5439f, 28.2853f };
		uParam0->f_3 = 276.6273f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1425.5645f, -244.3f, 15.8053f) < 10f)
	{
		*uParam0 = { -1423.4724f, -214.2539f, 45.5004f };
		uParam0->f_3 = 353.8757f;
	}
	else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("finale_choice")) > 0)
	{
		*uParam0 = { 4.2587f, 525.0214f, 173.6281f };
		uParam0->f_3 = 203.6746f;
	}
	else if (BitTest(Global_78567, 4))
	{
		*uParam0 = { 452.0255f, 5571.85f, 780.1859f };
		uParam0->f_3 = 78.9858f;
	}
	else if (BitTest(Global_78567, 5))
	{
		*uParam0 = { -745.4462f, 5595.1465f, 40.6594f };
		uParam0->f_3 = 261.747f;
	}
	else if (BitTest(Global_78567, 6))
	{
		*uParam0 = { -1675.5215f, -1125.5901f, 12.091f };
		uParam0->f_3 = 271.8208f;
	}
	else if (BitTest(Global_78567, 7))
	{
		*uParam0 = { -1631.2192f, -1112.8052f, 12.0212f };
		uParam0->f_3 = 316.8879f;
	}
	else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(1272.6588f, -1715.4669f, 53.7715f, "v_lesters"))
	{
		*uParam0 = { 1276.9564f, -1725.1892f, 53.6551f };
		uParam0->f_3 = 204.1703f;
	}
	else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646f, 2068.2886f, 113.30017f, -564.9516f, 1884.7025f, 134.04034f, 258.75f, false, true, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4706f, 2089.921f, 125.41275f, -581.21344f, 2036.2561f, 136.28363f, 9.5f, false, true, 0))
	{
		*uParam0 = { -601.59f, 2099.1973f, 128.8928f };
		uParam0->f_3 = 204.7498f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1007.39264f, -477.95844f, 52.5357f) < 8f)
	{
		*uParam0 = { -1018.3756f, -483.9436f, 36.0964f };
		uParam0->f_3 = 114.7664f;
	}
	else if (SYSTEM::VDIST(*uParam0, 480.6662f, -1317.8085f, 28.20303f) < 15f)
	{
		*uParam0 = { 497.7238f, -1310.9323f, 28.2372f };
		uParam0->f_3 = 289.3663f;
	}
	else if (SYSTEM::VDIST(*uParam0, 2329.5266f, 2571.3113f, 45.6779f) < 5f)
	{
		*uParam0 = { 2316.9304f, 2594.1528f, 45.7199f };
		uParam0->f_3 = 348.1325f;
	}
	if (iParam1 == 1)
	{
		if (__LIB_13__::func_781(&iVar0))
		{
			if (__LIB_0__::func_388(iVar0, &Var1, &uVar2))
			{
				Var1.f_2 = (Var1.f_2 + 1f);
				*uParam0 = { Var1 };
				uParam0->f_3 = uVar2;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43358f, -1019.7954f, -100.47276f, 189.93378f, -1019.6235f, -95.56883f, 17.1875f, false, true, 0))
		{
			iVar3 = __LIB_15__::func_944();
			if (iVar3 == 0)
			{
				*uParam0 = { -65.1234f, 81.2517f, 70.5644f };
				uParam0->f_3 = 71.6237f;
			}
			else if (iVar3 == 1)
			{
				*uParam0 = { -68.5531f, -1824.3774f, 25.9424f };
				uParam0->f_3 = 215.8295f;
			}
			else if (iVar3 == 2)
			{
				*uParam0 = { -220.8189f, -1162.3016f, 22.0242f };
				uParam0->f_3 = 70.2711f;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71747f, -1326.6299f, 28.2135f, 474.96436f, -1307.9983f, 34.494976f, 12f, false, true, 0))
		{
			*uParam0 = { 495.4108f, -1306.0801f, 29.2883f };
			uParam0->f_3 = 213.6273f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77f, -1534.22f, 3.37f, -1158.4525f, -1517.7496f, 6.374244f, 13f, false, true, 0))
		{
			*uParam0 = { -1160.0951f, -1515.407f, 3.1496f };
			uParam0->f_3 = 305.6424f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315f, -996.97687f, 24.88307f, 428.29355f, -997.0192f, 28.574581f, 8.5f, false, true, 0))
		{
			*uParam0 = { 431.8853f, -1013.133f, 28.7907f };
			uParam0->f_3 = 186.6814f;
		}
		else if (__LIB_0__::func_387(*uParam0, "v_hospital", 307.3065f, -589.9595f, 43.302f))
		{
			*uParam0 = { 279.4137f, -585.8815f, 43.2502f };
			uParam0->f_3 = 48.8028f;
		}
	}
}

void func_187(int* iParam0, bool bParam1)//Position - 0x4DF
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
		{
			if (ENTITY::IS_ENTITY_ATTACHED(*iParam0))
			{
				ENTITY::DETACH_ENTITY(*iParam0, true, true);
			}
		}
		if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(*iParam0, false))
		{
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
				{
					if (!PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), *iParam0))
					{
						if (bParam1)
						{
							VEHICLE::DELETE_VEHICLE(iParam0);
						}
						else
						{
							ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(iParam0);
						}
					}
					else
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(iParam0);
					}
				}
				else
				{
					ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(iParam0);
				}
			}
			else
			{
				ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(iParam0);
			}
		}
	}
}

void func_188(var uParam0)//Position - 0x8D549
{
	if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
		{
			if (ENTITY::GET_ENTITY_HEALTH(*uParam0) < 500)
			{
				ENTITY::SET_ENTITY_HEALTH(*uParam0, 500, 0);
			}
			if (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(*uParam0) < 500f)
			{
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*uParam0, 500f);
			}
			if (VEHICLE::GET_VEHICLE_PETROL_TANK_HEALTH(*uParam0) < 500f)
			{
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*uParam0, 500f);
			}
		}
	}
}

void func_189(int iParam0)//Position - 0x8DFA3
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
		{
			if (ENTITY::GET_ENTITY_HEALTH(*iParam0) < 500)
			{
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 500, 0);
			}
			if (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(*iParam0) < 500f)
			{
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 500f);
			}
			if (VEHICLE::GET_VEHICLE_PETROL_TANK_HEALTH(*iParam0) < 500f)
			{
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 500f);
			}
			ENTITY::SET_ENTITY_PROOFS(*iParam0, true, true, true, true, true, false, false, false);
		}
	}
}

int func_190(int iParam0, struct<3> Param1, char* sParam2)//Position - 0x94F01
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = INTERIOR::GET_INTERIOR_AT_COORDS(Param1);
		iVar1 = INTERIOR::GET_INTERIOR_FROM_ENTITY(iParam0);
		if (!iVar0 == 0)
		{
			if (iVar0 == iVar1)
			{
				iVar2 = INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(iParam0);
				iVar3 = MISC::GET_HASH_KEY(sParam2);
				if (iVar2 != 0)
				{
					if (iVar2 == iVar3)
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_191(int iParam0, float fParam1, float fParam2)//Position - 0x96D84
{
	float fVar0;
	fVar0 = (fParam1 - ENTITY::GET_ENTITY_HEADING(iParam0));
	if (fVar0 > 180f)
	{
		fVar0 = (fVar0 - 360f);
	}
	if (fVar0 < -180f)
	{
		fVar0 = (fVar0 + 360f);
	}
	if (MISC::ABSF(fVar0) <= fParam2)
	{
		return 1;
	}
	return 0;
}

void func_192()//Position - 0x97879
{
	__LIB_17__::func_86(0);
}

int func_193(int iParam0)//Position - 0x9DBB0
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
		{
			if (((VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(*iParam0, 0, 7000) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(*iParam0, 3, 30000)) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(*iParam0, 2, 30000)) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(*iParam0, 1, 40000))
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_194()//Position - 0x97859
{
	__LIB_17__::func_86((Global_100164 - 1));
}

void func_195(bool bParam0, bool bParam1, bool bParam2, float fParam3, float fParam4, int iParam5, bool bParam6)//Position - 0x7C865
{
	__LIB_16__::func_887();
	__LIB_0__::func_532(0, 1, 1, 0, 0, 0, 0);
	HUD::CLEAR_PRINTS();
	HUD::CLEAR_HELP(true);
	__LIB_0__::func_638();
	HUD::DISPLAY_HUD(true);
	HUD::DISPLAY_RADAR(true);
	CAM::SET_WIDESCREEN_BORDERS(false, 500);
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		CAM::DESTROY_ALL_CAMS(false);
		if (bParam1)
		{
			if (bParam2)
			{
				CAM::RENDER_SCRIPT_CAMS(false, true, iParam5, true, false, 0);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam3);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam4, 1f);
			}
			else
			{
				CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam3);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam4, 1f);
			}
		}
		if (bParam0)
		{
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
		}
		PLAYER::ENABLE_SPECIAL_ABILITY(PLAYER::PLAYER_ID(), true, 0);
		WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), false);
		PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
	}
	if (bParam6)
	{
		__LIB_16__::func_304();
	}
	else
	{
		__LIB_16__::func_305();
	}
}

int func_196(int* iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, char* sParam7, float fParam8, bool bParam9, int iParam10, bool bParam11, int iParam12, var uParam13, var uParam14, var uParam15, int iParam16, bool bParam17)//Position - 0x92FB9
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7[3];
	bool bVar8;
	bool bVar9;
	int iVar10;
	int iVar11;
	var uVar12[3];
	var uVar13[3];
	bool bVar14;
	int iVar15;
	int iVar16;
	int iVar17;
	int iVar18;
	struct<3> Var19;
	int iVar20;
	int iVar21;
	iVar4 = 0;
	iParam0->f_17[0] = uParam1;
	iParam0->f_17[1] = uParam2;
	iParam0->f_17[2] = uParam3;
	iParam0->f_16 = uParam1;
	uVar12[0] = uParam4;
	uVar12[1] = uParam5;
	uVar12[2] = uParam6;
	uVar13[0] = uParam13;
	uVar13[1] = uParam14;
	uVar13[2] = uParam15;
	iVar6 = 1;
	iVar1 = 0;
	iVar2 = 0;
	iVar3 = 0;
	iVar7[0] = 0;
	iVar7[1] = 0;
	iVar7[2] = 0;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
		{
			iVar3++;
		}
		if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
		{
			if (!BitTest(iParam0->f_13, 29) && !BitTest(iParam0->f_13, 28))
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], true, -1, 0);
				}
				if (iVar0 == 2)
				{
					MISC::SET_BIT(&(iParam0->f_13), 28);
				}
			}
		}
		else if (!BitTest(iParam0->f_13, 29) && BitTest(iParam0->f_13, 28))
		{
			if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
			{
				PED::SET_PED_USING_ACTION_MODE(iParam0->f_17[iVar0], false, -1, 0);
			}
			if (iVar0 == 2)
			{
				MISC::CLEAR_BIT(&(iParam0->f_13), 28);
			}
		}
		iVar0++;
	}
	if (iVar3 == 0)
	{
		return 1;
	}
	if (BitTest(iParam0->f_13, 26))
	{
		bVar14 = false;
		if (!ENTITY::DOES_ENTITY_EXIST(iParam0->f_21))
		{
			iVar16 = 64;
			iVar16 |= 65536;
			iVar16 |= 2048;
			iVar16 |= 1;
			iVar16 |= 2;
			iVar16 |= 4;
			iVar16 |= 32;
			iVar16 |= 16;
			iVar16 |= 8;
			iVar15 = VEHICLE::GET_CLOSEST_VEHICLE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 50f, 0, iVar16);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar15, false))
			{
				iParam0->f_21 = iVar15;
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0->f_21, false))
		{
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0->f_21, true)) < 400f)
			{
				if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					if (!PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0) || !bParam17)
					{
						if (__LIB_15__::func_990(iParam0->f_21, iParam0, iVar3))
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
								{
									PED::SET_PED_MAX_MOVE_BLEND_RATIO(iParam0->f_17[iVar0], 1f);
									if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
									{
										PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
									}
									if (TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE")) == 7 && !__LIB_0__::func_588(iParam0->f_17[iVar0], iParam0->f_21))
									{
										if (!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0]))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], true);
											TASK::TASK_ENTER_VEHICLE(iParam0->f_17[iVar0], iParam0->f_21, 60000, iVar0, 1f, 1, 0);
											PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], iVar0);
										}
									}
								}
								iVar0++;
							}
							return 1;
						}
						else
						{
							bVar14 = true;
						}
					}
					else
					{
						bVar14 = true;
					}
				}
				else
				{
					bVar14 = true;
				}
			}
			else
			{
				bVar14 = true;
			}
		}
		else
		{
			bVar14 = true;
		}
		if (bVar14)
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), 26);
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0]) && !iParam0->f_15)
					{
						TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
					}
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
					{
						if (__LIB_16__::func_890(iParam0, iParam0->f_17[iVar0], fParam8, 1))
						{
							PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495());
						}
					}
				}
				iVar0++;
			}
		}
	}
	if (!BitTest(iParam0->f_13, 26))
	{
		if ((!__LIB_16__::func_311(iParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) && !ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
			{
				if (!BitTest(iParam0->f_13, 13))
				{
					if (iParam16 == 4 || iParam16 == 5)
					{
					}
					if (!__LIB_13__::func_755(iParam0, 2))
					{
						iVar17 = 0;
						iVar18 = 0;
						iVar0 = 0;
						while (iVar0 < 3)
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
							{
								iVar17++;
							}
							iVar0++;
						}
						iVar18 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar17);
						if (!PED::IS_PED_INJURED(iParam0->f_17[iVar18]))
						{
							__LIB_0__::func_640(iParam0->f_17[iVar18], "NEED_A_BIGGER_VEHICLE", 3);
						}
						__LIB_0__::func_572(iParam0, "MORE_SEATS" /* GXT: A vehicle with more seats is needed. */, 0);
						MISC::SET_BIT(&(iParam0->f_13), 13);
					}
				}
				bVar9 = true;
			}
		}
		else
		{
			bVar9 = false;
			MISC::CLEAR_BIT(&(iParam0->f_13), 13);
			__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
		}
		if (!ENTITY::DOES_ENTITY_EXIST(iParam10))
		{
			if ((!PED::IS_PED_INJURED(iParam0->f_17[0]) || !PED::IS_PED_INJURED(iParam0->f_17[1])) || !PED::IS_PED_INJURED(iParam0->f_17[2]))
			{
				if (!BitTest(iParam0->f_13, 31))
				{
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()) && !__LIB_13__::func_755(iParam0, 2))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (__LIB_15__::func_995(iVar10, iParam0))
						{
							__LIB_0__::func_572(iParam0, "CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */, 0);
							MISC::SET_BIT(&(iParam0->f_13), 31);
						}
					}
				}
				else if (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
				{
					MISC::CLEAR_BIT(&(iParam0->f_13), 31);
					__LIB_0__::func_576("CMN_VEHSUIT" /* GXT: ~s~Vehicle is not suitable. */);
				}
			}
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
		{
			if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
			{
				if (PAD::IS_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/))
				{
					MISC::SET_BIT(&(iParam0->f_13), 21);
				}
			}
			else if (BitTest(iParam0->f_13, 21))
			{
				MISC::CLEAR_BIT(&(iParam0->f_13), 21);
			}
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (ENTITY::DOES_ENTITY_EXIST(iParam0->f_17[iVar0]))
			{
				if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
				{
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
					{
						PED::SET_PED_DIES_IN_WATER(iParam0->f_17[iVar0], true);
					}
					else
					{
						PED::SET_PED_DIES_IN_WATER(iParam0->f_17[iVar0], false);
					}
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
					{
						iVar10 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
						if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar10, false))
						{
							if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
							{
								if (!__LIB_16__::func_311(iParam0) && PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
								{
									if (!__LIB_0__::func_585(iParam0->f_17[iVar0]))
									{
										PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
									}
								}
							}
						}
						if (iVar10 != iParam10 && !ENTITY::IS_ENTITY_DEAD(iVar10, false))
						{
							if (PED::IS_PED_SITTING_IN_VEHICLE(iParam0->f_17[iVar0], iVar10))
							{
								if (ENTITY::IS_ENTITY_IN_WATER(iVar10) && !VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(iVar10))
								{
									Var19 = { ENTITY::GET_ENTITY_COORDS(iVar10, true) };
									if (Var19.f_2 < -1f)
									{
										TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
									}
								}
							}
						}
					}
					bVar8 = true;
					if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
					{
						if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam0->f_17[iVar0]))
						{
							iVar10 = PED::GET_VEHICLE_PED_IS_IN(iParam0->f_17[iVar0], false);
							if (!ENTITY::IS_ENTITY_DEAD(iVar10, false))
							{
								if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
								{
									if (iVar10 != iParam10)
									{
										if (!PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar10))
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
								else
								{
									if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
									{
										iVar20 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									}
									if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar20, false))
									{
										if (iVar10 != iVar20)
										{
											if (ENTITY::GET_ENTITY_SPEED(iVar10) > 5f)
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 4160);
											}
											else
											{
												TASK::TASK_LEAVE_VEHICLE(iParam0->f_17[iVar0], iVar10, 64);
											}
											bVar8 = false;
										}
									}
								}
							}
						}
					}
					if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
					{
						iVar21 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						if (ENTITY::DOES_ENTITY_EXIST(iVar21))
						{
							if (__LIB_15__::func_990(iVar21, iParam0, 0))
							{
								if (__LIB_15__::func_994(iVar0, iParam0) || !BitTest(iParam0->f_13, 27))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], iVar0);
									__LIB_15__::func_989(iVar0, iParam0);
									iVar4++;
									if (iVar4 >= iVar3)
									{
										MISC::SET_BIT(&(iParam0->f_13), 27);
									}
								}
							}
							else if (!__LIB_15__::func_994(iVar0, iParam0))
							{
								if (ENTITY::GET_ENTITY_MODEL(iVar21) == joaat("sentinel2"))
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], 4);
								}
								else
								{
									PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(iParam0->f_17[iVar0], 2);
								}
								__LIB_15__::func_993(iVar0, iParam0);
							}
						}
					}
					if ((!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()) && !__LIB_0__::func_582(iParam0->f_17[iVar0], iParam10)) && !__LIB_0__::func_581(iParam0->f_17[iVar0], iParam10))
					{
						if (__LIB_16__::func_890(iParam0, iParam0->f_17[iVar0], fParam8, bParam11))
						{
							if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
							{
								if (((!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0]))
								{
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7)
									{
										TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
									}
									PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495());
									bVar8 = false;
								}
							}
						}
						if (bVar8)
						{
							if (!HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
							{
								iParam0->f_11 = MISC::GET_GAME_TIMER();
								iParam0->f_1[iVar0] = __LIB_0__::func_639(iParam0->f_17[iVar0], 0, 0);
								HUD::SET_BLIP_DISPLAY(iParam0->f_1[iVar0], 2);
								if (bParam9)
								{
									__LIB_0__::func_571(iParam0->f_1[iVar0], iParam0);
								}
							}
						}
						iVar6 = 0;
					}
					else if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
					{
						if (((__LIB_13__::func_742(iParam0->f_17[iVar0], 1) || __LIB_0__::func_582(iParam0->f_17[iVar0], iParam10)) || iParam12) || (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
						{
							if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
							{
								HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
								__LIB_0__::func_576(uVar12[iVar0]);
							}
						}
						else
						{
							if (bParam9)
							{
								__LIB_0__::func_571(iParam0->f_1[iVar0], iParam0);
							}
							iVar6 = 0;
						}
					}
					else if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
					{
						if (!PED::IS_PED_SITTING_IN_VEHICLE(iParam0->f_17[iVar0], iParam10))
						{
							if ((ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], iParam10, 20f, 20f, 5f, false, true, 0) && !BitTest(iParam0->f_13, 11)) && !((bParam17 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) && !PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false)))
							{
								if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(iParam0->f_17[iVar0]))
								{
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar0], iParam10, false))
									{
										if (!__LIB_13__::func_742(iParam0->f_17[iVar0], 1))
										{
											if (__LIB_0__::func_569(iParam0->f_17[iVar0]))
											{
												iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_LEAVE_VEHICLE"));
												if (iVar11 == 7)
												{
													TASK::TASK_LEAVE_ANY_VEHICLE(iParam0->f_17[iVar0], 0, 0);
												}
											}
										}
									}
								}
								else
								{
									if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
									{
										if ((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0]) && !PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(iParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
										}
									}
									iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
									if (iVar11 == 7 && !__LIB_0__::func_588(iParam0->f_17[iVar0], iParam10))
									{
										if (((((!PED::IS_PED_JUMPING_OUT_OF_VEHICLE(iParam0->f_17[iVar0]) && !PED::IS_PED_JUMPING_OUT_OF_VEHICLE(PLAYER::PLAYER_PED_ID())) && !__LIB_0__::func_580(iParam0->f_17[iVar0], 2f)) && !PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0])) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0])) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
										{
											PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], true);
											if (BitTest(iParam0->f_13, 10))
											{
												PED::SET_PED_MAX_MOVE_BLEND_RATIO(iParam0->f_17[iVar0], 1f);
											}
											TASK::TASK_ENTER_VEHICLE(iParam0->f_17[iVar0], iParam10, 60000, iVar0, 2f, 1, 0);
											PED::SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(iParam0->f_17[iVar0], false);
										}
									}
									else if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false))
									{
										iParam0->f_1[iVar0] = __LIB_0__::func_639(iParam0->f_17[iVar0], 0, 0);
										HUD::SET_BLIP_DISPLAY(iParam0->f_1[iVar0], 2);
										iVar6 = 0;
									}
								}
							}
							else if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
							{
								if (__LIB_16__::func_890(iParam0, iParam0->f_17[iVar0], fParam8, bParam11))
								{
									if (!PED::IS_PED_RAGDOLL(iParam0->f_17[iVar0]) && !TASK::IS_PED_GETTING_UP(iParam0->f_17[iVar0]))
									{
										iVar11 = TASK::GET_SCRIPT_TASK_STATUS(iParam0->f_17[iVar0], joaat("SCRIPT_TASK_ENTER_VEHICLE"));
										if (iVar11 == 7)
										{
											TASK::CLEAR_PED_TASKS(iParam0->f_17[iVar0]);
										}
										PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0->f_17[iVar0], false);
										PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495());
									}
								}
							}
						}
						else if (PED::IS_PED_SITTING_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10))
						{
							if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()))
							{
								if (!BitTest(iParam0->f_13, 21))
								{
									PED::SET_PED_AS_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495());
								}
							}
							else if (BitTest(iParam0->f_13, 21))
							{
								PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
								MISC::SET_BIT(&(iParam0->f_13), 21);
							}
						}
						else if (PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar0], __LIB_0__::func_495()) && !FIRE::IS_ENTITY_ON_FIRE(iParam10))
						{
							PED::REMOVE_PED_FROM_GROUP(iParam0->f_17[iVar0]);
						}
					}
				}
				else if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
					__LIB_0__::func_576(uVar12[iVar0]);
				}
			}
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 3)
		{
			if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
			{
				iVar7[iVar0] = 1;
				iVar1++;
			}
			iVar0++;
		}
		if (!__LIB_13__::func_755(iParam0, 2))
		{
			if (iVar1 > 0)
			{
				iVar0 = 0;
				while (iVar0 < 3)
				{
					if (iVar7[iVar0])
					{
						if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
						{
							if (__LIB_0__::func_585(iParam0->f_17[iVar0]) || ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), iParam0->f_8, iParam0->f_8, iParam0->f_8, false, true, 0))
							{
								iVar1 = (iVar1 - 1);
								iVar7[iVar0] = 0;
							}
						}
					}
					else if (!PED::IS_PED_INJURED(iParam0->f_17[iVar0]))
					{
						if (!ENTITY::IS_ENTITY_AT_ENTITY(iParam0->f_17[iVar0], PLAYER::PLAYER_PED_ID(), (iParam0->f_8 * 0.85f), (iParam0->f_8 * 0.85f), iParam0->f_8, false, true, 0) && !__LIB_0__::func_585(iParam0->f_17[iVar0]))
						{
						}
					}
					iVar0++;
				}
			}
			iVar5 = MISC::GET_GAME_TIMER();
			if ((iVar5 - iParam0->f_11) > 1500 || iVar3 == 1)
			{
				if (iVar1 > 0)
				{
					if (iParam0->f_12 < iVar1)
					{
						if ((iVar1 == iVar3 || (iVar2 + iVar1) == iVar3) && iVar3 > 1)
						{
							if (!BitTest(iParam0->f_13, 5))
							{
								__LIB_0__::func_572(iParam0, sParam7, 0);
								MISC::SET_BIT(&(iParam0->f_13), 5);
								iParam0->f_12 = iVar1;
							}
							else
							{
								iParam0->f_12 = iVar1;
							}
						}
						else
						{
							iVar0 = 0;
							while (iVar0 < 3)
							{
								if (iVar7[iVar0])
								{
									if (!__LIB_15__::func_992(iVar0, iParam0))
									{
										if (!MISC::IS_STRING_NULL(uVar13[iVar0]))
										{
											if (!MISC::ARE_STRINGS_EQUAL(uVar13[iVar0], ""))
											{
												__LIB_16__::func_2(iParam0, uVar12[iVar0], uVar13[iVar0], 0);
												__LIB_15__::func_991(iVar0, iParam0);
												iParam0->f_12 = iVar1;
											}
										}
										if (!__LIB_15__::func_992(iVar0, iParam0))
										{
											__LIB_0__::func_572(iParam0, uVar12[iVar0], 0);
											__LIB_15__::func_991(iVar0, iParam0);
											iParam0->f_12 = iVar1;
										}
									}
									else
									{
										iParam0->f_12 = iVar1;
									}
								}
								iVar0++;
							}
						}
					}
				}
				else
				{
					iParam0->f_12 = 0;
				}
			}
		}
		MISC::CLEAR_BIT(&(iParam0->f_13), 10);
		if (iVar6 && !bVar9)
		{
			iVar0 = 0;
			while (iVar0 < 3)
			{
				if (HUD::DOES_BLIP_EXIST(iParam0->f_1[iVar0]))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_1[iVar0]));
					__LIB_0__::func_576(uVar12[iVar0]);
				}
				iVar0++;
			}
			__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
			return 1;
		}
	}
	return 0;
}

void func_197(int iParam0, struct<98> Param1)//Position - 0x9BC09
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*iParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*iParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*iParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*iParam0, true);
		}
	}
	if (__LIB_0__::func_312(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Param1.f_90);
			}
		}
	}
	__LIB_0__::func_372(iParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Param1.f_96);
}

void func_198(struct<3> Param0, float fParam1, bool bParam2)//Position - 0x89BC5
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 68)
	{
		if (__LIB_16__::func_31(&(Global_77137.f_555[0 /*21*/]), iVar0))
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Global_77137.f_555[0 /*21*/], bParam2) <= fParam1)
			{
				__LIB_17__::func_93(iVar0);
			}
		}
		iVar0++;
	}
}

void func_199(int iParam0)//Position - 0x9B624
{
	__LIB_16__::func_35(&(Global_106934.f_2890), &Global_106934, iParam0, 1);
}

int func_200(int iParam0, int iParam1, int iParam2)//Position - 0x9E293
{
	var uVar0;
	char* sVar1;
	if (iParam1 == 0)
	{
		sVar1 = ENTITY::GET_ENTITY_SCRIPT(iParam0, &uVar0);
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sVar1))
		{
			if (MISC::GET_HASH_KEY(sVar1) == MISC::GET_HASH_KEY("vehicle_gen_controller"))
			{
				return 0;
			}
		}
	}
	__LIB_12__::func_899(iParam0, iParam2);
	return 1;
}

void func_201(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0x99FD9
{
	struct<60> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam3 != 24 && iParam3 != 25)
		{
			return;
		}
		if (iParam3 == 24)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[25]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[25], false))
			{
				if (Global_77137.f_484[25] == iParam0)
				{
					return;
				}
			}
		}
		if (!bParam4)
		{
			if ((VEHICLE::IS_BIG_VEHICLE(iParam0) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bus")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("tourbus"))
			{
				return;
			}
		}
		__LIB_17__::func_89(iParam3);
		Var0.f_9 = 49;
		Var0.f_59 = 2;
		__LIB_0__::func_209(iParam0, &Var0);
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			fParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
		if (iParam3 == 24)
		{
			if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != joaat("vehicle_gen_controller"))
			{
				Global_78125 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
			}
		}
		__LIB_17__::func_92(iParam3, &Var0, Param1, fParam2, __LIB_0__::func_119(iParam0));
		__LIB_17__::func_157(iParam3, iParam0, 0);
	}
}

int func_202(int iParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x7E43D
{
	int iVar0;
	var uVar1;
	struct<97> Var2;
	int iVar3;
	int iVar4;
	bool bVar5;
	char cVar6[16];
	int iVar7;
	if (__LIB_0__::func_374(iParam1))
	{
		Var2.f_11 = 12;
		Var2.f_31 = 49;
		Var2.f_81 = 2;
		__LIB_0__::func_120(iParam1, &Var2, iParam5);
		if (Var2.f_0 == 0)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var2.f_0)
			{
			}
			return 1;
		}
		if ((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131])
		{
			Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] = 0;
		}
		if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar3 = 0;
				while (iVar3 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar3 + 1, !Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_11[iVar3]);
					iVar3++;
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar4 = 0;
				while (iVar4 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar4 + 1, !Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_11[iVar4]);
					iVar4++;
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var2.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var2.f_0))
			{
				bVar5 = true;
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var2.f_0, Param2, fParam3, true, true, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				StringCopy(&cVar6, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0), 16);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Var2.f_5, Var2.f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Var2.f_7, Var2.f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar7 = 0;
				while (iVar7 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar7 + 1, !Var2.f_11[iVar7]);
					iVar7++;
				}
				if (Var2.f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Var2.f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Var2.f_27));
					if (Var2.f_26 >= 0 && Var2.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Var2.f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Var2.f_84, Var2.f_85, Var2.f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Var2.f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Var2.f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Var2.f_93, Var2.f_94, Var2.f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Var2.f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Var2.f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Var2.f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Var2.f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Var2.f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Var2.f_89);
				}
				if (Var2.f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Var2.f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Var2.f_31), &(Var2.f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 1)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bagger") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[118])
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &cVar6);
						bVar5 = false;
					}
				}
				else if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				else if (((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131]) && ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("tailgater"))
				{
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 6, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 14, 7, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 11, 2, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 2, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 7, 5, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 0, 0, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 3, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 13, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 4, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 12, 2, false);
					VEHICLE::TOGGLE_VEHICLE_MOD(*iParam0, 22, true);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, 2);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 23, 11, false);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, 2);
					Global_113386.f_2363.f_539.f_4316 = 1;
					__LIB_16__::func_10(iParam1, iParam0, 0, 1);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var2.f_0);
				}
				if (bVar5)
				{
					__LIB_14__::func_525(*iParam0, iParam1);
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_203(int iParam0, bool bParam1, bool bParam2, int iParam3)//Position - 0x68F56
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	char cVar6[64];
	int iVar7;
	var uVar8;
	char* sVar9;
	if (!iParam0->f_39)
	{
		if (iParam0->f_7 == 4)
		{
			return 1;
		}
	}
	if (*iParam0)[iParam0->f_7] != PLAYER::PLAYER_PED_ID()
	{
	}
	if ((!PED::IS_PED_INJURED((*iParam0)[iParam0->f_7]) && !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (*iParam0)[iParam0->f_7] != PLAYER::PLAYER_PED_ID())
	{
		if (!bParam2)
		{
			if ((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) && !FIRE::IS_ENTITY_ON_FIRE(PLAYER::PLAYER_PED_ID())) && !PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID()))
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
			}
			else
			{
				TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
			}
			if ((PED::IS_PED_RAGDOLL((*iParam0)[iParam0->f_7]) && !FIRE::IS_ENTITY_ON_FIRE((*iParam0)[iParam0->f_7])) && !PED::IS_PED_GETTING_INTO_A_VEHICLE((*iParam0)[iParam0->f_7]))
			{
				TASK::CLEAR_PED_TASKS_IMMEDIATELY((*iParam0)[iParam0->f_7]);
			}
			else
			{
				TASK::CLEAR_PED_TASKS((*iParam0)[iParam0->f_7]);
			}
		}
		iVar0 = PLAYER::PLAYER_PED_ID();
		iVar1 = __LIB_14__::func_466();
		if (!iParam0->f_23)
		{
			__LIB_16__::func_845(iVar0, 0);
		}
		__LIB_13__::func_813(iVar1, &iVar0);
		PED::SET_PED_CONFIG_FLAG(iVar0, 32, true);
		PED::SET_PED_CONFIG_FLAG(iVar0, 250, true);
		iVar2 = __LIB_0__::func_484(iParam0->f_7);
		__LIB_16__::func_845((*iParam0)[iParam0->f_7], 0);
		fVar3 = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH((*iParam0)[iParam0->f_7])) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH((*iParam0)[iParam0->f_7])) - 100f)) * 100f);
		switch (__LIB_13__::func_716(PLAYER::PLAYER_PED_ID()))
		{
			case 0:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("BulletTime"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("BulletTime");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("BulletTimeOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("BulletTimeOut");
				}
				break;
			case 1:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("DrivingFocus"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("DrivingFocus");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("DrivingFocusOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("DrivingFocusOut");
				}
				break;
			case 2:
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("REDMIST"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("REDMIST");
				}
				if (GRAPHICS::ANIMPOSTFX_IS_RUNNING("REDMISTOut"))
				{
					GRAPHICS::ANIMPOSTFX_STOP("REDMISTOut");
				}
				break;
		}
		if (__LIB_0__::func_374(__LIB_14__::func_466()))
		{
			if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0))
			{
				PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID(), 0);
			}
		}
		PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), (*iParam0)[iParam0->f_7], bParam2, false);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(13);
		if (iParam3 & 1 != 0)
		{
			PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 210, false);
		}
		if (__LIB_0__::func_540(0) || __LIB_0__::func_540(3))
		{
			if (Global_23011.f_13)
			{
				iVar4 = 0;
				while (iVar4 < 7)
				{
					if (BitTest(Global_91193[iVar4 /*5*/].f_1, 2))
					{
						iVar5 = Global_91193[iVar4 /*5*/];
						StringCopy(&cVar6, "MISS_SWITCH_", 64);
						StringConCat(&cVar6, &(Global_91229[Global_78588.f_109[iVar5 /*4*/] /*34*/]), 64);
						STATS::STAT_INCREMENT(MISC::GET_HASH_KEY(&cVar6), 1f);
					}
					iVar4++;
				}
			}
		}
		Global_23011.f_13 = 0;
		iParam0->f_5 = __LIB_0__::func_682(iVar1);
		if (iParam0->f_5 == 4)
		{
			iParam0->f_5 = 3;
		}
		(*iParam0)[iParam0->f_5] = iVar0;
		(*iParam0)[iParam0->f_7] = 0;
		iParam0->f_6 = __LIB_0__::func_682(iVar2);
		iParam0->f_7 = 4;
		iVar7 = PLAYER::PLAYER_PED_ID();
		ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
		__LIB_15__::func_974(iVar7);
		PED::SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(iVar7, false, 0);
		if (fVar3 < 25f && !PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID()))
		{
			ENTITY::SET_ENTITY_HEALTH(PLAYER::PLAYER_PED_ID(), SYSTEM::ROUND((((25f / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(PLAYER::PLAYER_PED_ID())) - 100f)) + 100f)), 0);
		}
		if (bParam1)
		{
			if (ENTITY::DOES_ENTITY_EXIST(iVar0))
			{
				ENTITY::SET_ENTITY_VISIBLE(iVar0, true, false);
				__LIB_15__::func_974(iVar0);
				PED::SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(iVar0, false, 0);
				PED::SET_PED_STEALTH_MOVEMENT(iVar0, false, 0);
			}
		}
		else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			sVar9 = ENTITY::GET_ENTITY_SCRIPT(iVar0, &uVar8);
			if (!MISC::IS_STRING_NULL(sVar9))
			{
				if (!MISC::ARE_STRINGS_EQUAL(sVar9, SCRIPT::GET_THIS_SCRIPT_NAME()))
				{
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, false, true);
				}
				PED::DELETE_PED(&iVar0);
			}
		}
		Global_97723 = 1;
		__LIB_0__::func_481(PLAYER::PLAYER_PED_ID());
		__LIB_15__::func_979();
		__LIB_13__::func_799(iVar2);
		__LIB_15__::func_983();
		__LIB_13__::func_822(iVar2);
		__LIB_16__::func_847(__LIB_0__::func_517(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), 145, 0));
		PLAYER::RESET_PLAYER_STAMINA(PLAYER::PLAYER_ID());
		ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(PLAYER::PLAYER_PED_ID(), false);
		PED::SET_PED_CAN_BE_DRAGGED_OUT(PLAYER::PLAYER_PED_ID(), true);
		if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			PLAYER::SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(PLAYER::PLAYER_ID(), __LIB_0__::func_425(67));
		}
		if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			PLAYER::SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(PLAYER::PLAYER_ID(), __LIB_0__::func_425(68));
		}
		__LIB_13__::func_818(iVar2, &iVar7);
		if (((__LIB_0__::isGlobal_43052EqualsValue(0) || __LIB_0__::isGlobal_43052EqualsValue(3)) || __LIB_0__::isGlobal_43052EqualsValue(2)) || __LIB_0__::isGlobal_43052EqualsValue(4))
		{
			PED::SET_PED_CONFIG_FLAG(iVar7, 32, false);
			PED::SET_PED_CONFIG_FLAG(iVar7, 250, false);
		}
		else
		{
			PED::SET_PED_CONFIG_FLAG(iVar7, 32, true);
			PED::SET_PED_CONFIG_FLAG(iVar7, 250, true);
		}
		if (!__LIB_0__::func_477())
		{
			__LIB_16__::func_844();
		}
		Global_97360 = 0;
		return 1;
	}
	else
	{
		if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
		}
		if (PED::IS_PED_INJURED((*iParam0)[iParam0->f_7]))
		{
		}
		if (PLAYER::PLAYER_PED_ID() == (*iParam0)[iParam0->f_7])
		{
		}
	}
	return 0;
}

void func_204(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x6F377
{
	__LIB_17__::func_158(&Global_106934, SCRIPT::GET_THIS_SCRIPT_NAME(), iParam0, uParam1, iParam3, iParam2);
}

void func_205(int iParam0, struct<3> Param1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x655B4
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (iParam3 == 1)
		{
			PED::SET_PED_COORDS_KEEP_VEHICLE(iParam0, Param1);
		}
		else if (iParam3 == 0)
		{
			ENTITY::SET_ENTITY_COORDS(iParam0, Param1, true, false, false, true);
		}
		ENTITY::SET_ENTITY_HEADING(iParam0, fParam2);
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				PLAYER::SET_PLAYER_CLOTH_PIN_FRAMES(PLAYER::PLAYER_ID(), 1);
			}
			if (iParam4 == 1)
			{
				CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
				CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
			}
			if (iParam5 == 1)
			{
				STREAMING::LOAD_SCENE(Param1);
			}
		}
	}
}

void func_206(int iParam0, var uParam1, float fParam2, float fParam3, int iParam4, bool bParam5)//Position - 0x736DA
{
	int iVar0;
	if (Global_3)
	{
		return;
	}
	if (Global_44203)
	{
		return;
	}
	if (!bParam5)
	{
		if (iParam0 < 0)
		{
			return;
		}
	}
	if (fParam2 < 0f || fParam2 > 5f)
	{
		return;
	}
	if (!CAM::IS_GAMEPLAY_CAM_SHAKING())
	{
		CAM::SHAKE_GAMEPLAY_CAM("DRUNK_SHAKE", fParam3);
	}
	if (!CAM::IS_CINEMATIC_CAM_SHAKING())
	{
		CAM::SHAKE_CINEMATIC_CAM("DRUNK_SHAKE", (fParam3 * Global_44202));
	}
	if (CAM::DOES_CAM_EXIST(iParam4))
	{
		CAM::SHAKE_CAM(iParam4, "DRUNK_SHAKE", fParam3);
		Global_44204 = iParam4;
	}
	else
	{
		Global_44204 = 0;
	}
	Global_44203 = 1;
	iVar0 = MISC::GET_GAME_TIMER();
	Global_44205 = (iVar0 + iParam0);
	if (bParam5)
	{
		if (iParam0 == -1)
		{
			Global_44205 = -1;
		}
	}
	Global_44206 = uParam1;
	Global_44207 = fParam2;
	Global_44209 = fParam3;
	Global_44208 = fParam3;
}

void func_207(int iParam0, int iParam1, float fParam2, int iParam3)//Position - 0x76DC2
{
	if (!PED::IS_PED_INJURED(iParam1))
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam0))
		{
			if (!PED::IS_PED_INJURED(iParam0))
			{
				TASK::CLEAR_PED_TASKS(iParam0);
				PED::SET_PED_FLEE_ATTRIBUTES(iParam0, 4, true);
				TASK::TASK_SMART_FLEE_PED(iParam0, iParam1, fParam2, iParam3, false, false);
				PED::SET_PED_KEEP_TASK(iParam0, true);
			}
		}
	}
}

void func_208(int iParam0, int iParam1)//Position - 0x76E0A
{
	iParam0->f_14 = 0;
	iParam0->f_15 = iParam1;
}

void func_209(int iParam0)//Position - 0x77ADD
{
	if (iParam0 != -1)
	{
		Global_32020[iParam0 /*11*/].f_4 = 1;
	}
}

void func_210(int iParam0, int iParam1)//Position - 0x77AF5
{
	if (iParam0 != -1)
	{
		Global_32020[iParam0 /*11*/].f_8 = iParam1;
	}
}

void func_211(var uParam0, float fParam1, float fParam2, bool bParam3)//Position - 0x78CC7
{
	float fVar0;
	if (*uParam0 != fParam1)
	{
		fVar0 = fParam2;
		if (bParam3)
		{
			fVar0 = (0f + ((fParam2 * 30f) * SYSTEM::TIMESTEP()));
		}
		if ((*uParam0 - fParam1) > fVar0)
		{
			*uParam0 = (*uParam0 - fVar0);
		}
		else if ((*uParam0 - fParam1) < -fVar0)
		{
			*uParam0 = (*uParam0 + fVar0);
		}
		else
		{
			*uParam0 = fParam1;
		}
	}
}

void func_212(int iParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x82D0E
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			PED::SET_PED_CONFIG_FLAG(iParam0, 32, bParam2);
			PED::SET_PED_CONFIG_FLAG(iParam0, 132, bParam3);
			PED::SET_PED_CAN_BE_TARGETTED(iParam0, bParam4);
			PED::SET_PED_AS_ENEMY(iParam0, bParam5);
			PED::SET_PED_RELATIONSHIP_GROUP_HASH(iParam0, iParam1);
		}
	}
}

int func_213(char* sParam0, char* sParam1)//Position - 0x8CFDD
{
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0) && !MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return MISC::ARE_STRINGS_EQUAL(sParam0, sParam1);
	}
	return 0;
}

int func_214(struct<3> Param0, struct<3> Param1)//Position - 0x8DBAA
{
	return PED::ADD_SCENARIO_BLOCKING_AREA((Param0.f_0 - Param1.f_0), (Param0.f_1 - Param1.f_1), (Param0.f_2 - Param1.f_2), (Param0.f_0 + Param1.f_0), (Param0.f_1 + Param1.f_1), (Param0.f_2 + Param1.f_2), false, true, true, true);
}

int func_215(int iParam0, int iParam1, float fParam2)//Position - 0x8E1F1
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(iParam1))
		{
			if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
			{
				if (WEAPON::GET_CURRENT_PED_WEAPON(iParam0, &iVar0, true))
				{
					if (iVar0 == joaat("WEAPON_PETROLCAN"))
					{
						Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
						if (MISC::GET_GROUND_Z_FOR_3D_COORD(Var1, &uVar2, false, false))
						{
							Var1.f_2 = uVar2;
						}
						if (PED::IS_PED_SHOOTING(iParam0) && GRAPHICS::GET_IS_PETROL_DECAL_IN_RANGE(Var1, fParam2))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

int func_216(char* sParam0, int iParam1)//Position - 0x6552D
{
	if (__LIB_13__::func_801(sParam0))
	{
		return 1;
	}
	else
	{
		if (__LIB_0__::func_90())
		{
			CUTSCENE::REMOVE_CUTSCENE();
		}
		if (iParam1 == 1)
		{
			CUTSCENE::REQUEST_CUTSCENE(sParam0, 8);
		}
		else
		{
			CUTSCENE::REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(sParam0, iParam1, 8);
		}
	}
	return 0;
}

void func_217(int iParam0)//Position - 0x65635
{
	int iVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	iVar0 = __LIB_0__::func_216(iParam0);
	if (__LIB_0__::func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[iVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_0__::func_445(&Var3, __LIB_0__::func_416(iVar1, bVar2), __LIB_13__::func_805(iVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_218(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x7756B
{
	if (iParam0 != -1)
	{
		if (!__LIB_13__::func_806(iParam0))
		{
			return;
		}
		Global_32020[iParam0 /*11*/].f_5 = 1;
		Global_32020[iParam0 /*11*/] = iParam1;
		Global_32020[iParam0 /*11*/].f_1 = iParam2;
		Global_32020[iParam0 /*11*/].f_9 = bParam4;
		Global_32020[iParam0 /*11*/].f_7 = iParam3;
		if (__LIB_13__::func_807(iParam0))
		{
			GRAPHICS::SET_TV_CHANNEL(-1);
			GRAPHICS::SET_TV_CHANNEL_PLAYLIST(iParam1, __LIB_7__::func_692(iParam2), bParam4);
			GRAPHICS::SET_TV_CHANNEL(iParam1);
		}
	}
	StringCopy(&Global_32098, SCRIPT::GET_THIS_SCRIPT_NAME(), 24);
}

void func_219(int iParam0, int iParam1, int iParam2)//Position - 0x798AA
{
	int iVar0;
	int iVar1;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
			Global_113386.f_2363.f_539.f_2247[iParam1 /*4*/][iParam0] = (Global_113386.f_2363.f_539.f_2247[iParam1 /*4*/][iParam0] + iParam2);
			break;
		case 3:
			iVar1 = 13122;
			switch (iParam1)
			{
				case 1:
					iVar1 = 72;
					break;
				case 3:
					iVar1 = 74;
					break;
				case 2:
					iVar1 = 73;
					break;
				case 4:
					iVar1 = 75;
					break;
				case 5:
					iVar1 = 76;
					break;
				case 6:
					iVar1 = 77;
					break;
				case 7:
					iVar1 = 78;
					break;
			}
			if (iVar1 != 13122)
			{
				iVar0 = __LIB_0__::func_369(iVar1, -1, 0);
				iVar0 = (iVar0 + iParam2);
				if (iVar0 > 100)
				{
					iVar0 = 100;
				}
				__LIB_0__::func_413(iVar1, iVar0, -1, 1, 0);
			}
			break;
	}
}

int func_220(int* iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x82B94
{
	int iVar0;
	if (!__LIB_0__::func_43(iParam1))
	{
		iVar0 = __LIB_2__::func_910(iParam1);
		STREAMING::REQUEST_MODEL(iVar0);
		if (STREAMING::HAS_MODEL_LOADED(iVar0))
		{
			if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				PED::DELETE_PED(iParam0);
			}
			if (ENTITY::DOES_ENTITY_EXIST(iParam2) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam2, false))
			{
				*iParam0 = PED::CREATE_PED_INSIDE_VEHICLE(iParam2, 26, iVar0, iParam3, false, false);
				PED::SET_PED_DEFAULT_COMPONENT_VARIATION(*iParam0);
				__LIB_3__::func_500(*iParam0, iParam1);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
				}
			}
			return 1;
		}
	}
	return 0;
}

void func_221(int iParam0, bool bParam1)//Position - 0x6D337
{
	__LIB_16__::func_318(iParam0, bParam1, 0);
}

void func_222(int iParam0, bool bParam1)//Position - 0x8F7CD
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_216(iParam0);
	if (__LIB_0__::func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_0__::func_528(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_223(int iParam0, struct<3> Param1, struct<3> Param2, struct<3> Param3, struct<3> Param4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, char* sParam11, char* sParam12, char* sParam13, char* sParam14, char* sParam15, char* sParam16, bool bParam17, bool bParam18, char* sParam19, bool bParam20, int iParam21, bool bParam22, int iParam23, int iParam24, int iParam25, int iParam26, bool bParam27, float fParam28)//Position - 0x6D6D1
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<3> Var3;
	bool bVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	Var3 = { Param1 + Vector(1f, 0f, 0f) };
	iParam0->f_17[0] = iParam7;
	iParam0->f_17[1] = iParam8;
	iParam0->f_17[2] = iParam9;
	iParam0->f_16 = iParam7;
	__LIB_0__::func_590(iParam0);
	__LIB_0__::func_589(iParam0);
	__LIB_0__::func_496();
	if (__LIB_17__::func_196(iParam0, iParam0->f_17[0], iParam0->f_17[1], iParam0->f_17[2], sParam12, sParam13, sParam14, sParam15, iParam0->f_8, bParam17, iParam10, 0, 0, iParam24, iParam25, iParam26, iParam6, bParam18))
	{
		__LIB_0__::func_576(sParam12);
		__LIB_0__::func_576(sParam13);
		__LIB_0__::func_576(sParam14);
		__LIB_0__::func_576(sParam15);
		if (CAM::IS_SCREEN_FADED_IN())
		{
			bVar1 = false;
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
			{
				if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false))
				{
					MISC::SET_BIT(&(iParam0->f_13), 3);
					if (!BitTest(iParam0->f_13, 9))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 4);
					}
					if (BitTest(iParam0->f_13, 23))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 23);
					}
					MISC::SET_BIT(&(iParam0->f_13), 9);
					bVar1 = true;
				}
			}
			else if (iParam6 == 4 || iParam6 == 5)
			{
				if (__LIB_16__::func_320(iParam0, iParam21))
				{
					MISC::SET_BIT(&(iParam0->f_13), 3);
					if (!BitTest(iParam0->f_13, 9))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 4);
					}
					MISC::SET_BIT(&(iParam0->f_13), 9);
					bVar1 = true;
				}
			}
			else
			{
				bVar1 = true;
			}
			if (bVar1)
			{
				__LIB_0__::func_576(sParam16);
				__LIB_0__::func_576(sParam19);
				__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
				if (bParam18 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
				{
					if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
					{
						HUD::REMOVE_BLIP(&(iParam0->f_5));
						__LIB_0__::func_576(sParam11);
					}
					if (HUD::DOES_BLIP_EXIST(*iParam0))
					{
						HUD::REMOVE_BLIP(iParam0);
					}
					if ((!__LIB_13__::func_755(iParam0, 1) && !__LIB_0__::func_573(iParam0)) && !BitTest(iParam0->f_13, 0))
					{
						if (bParam22)
						{
							__LIB_0__::func_572(iParam0, "LOSE_WANTED" /* GXT: Lose the Cops. */, 0);
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "VEHICLE_POLICE_PURSUIT", 3);
							}
						}
						MISC::SET_BIT(&(iParam0->f_13), 0);
						MISC::CLEAR_BIT(&(iParam0->f_13), 1);
					}
				}
				else
				{
					if (BitTest(iParam0->f_13, 0))
					{
						__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
						MISC::CLEAR_BIT(&(iParam0->f_13), 0);
						MISC::SET_BIT(&(iParam0->f_13), 1);
					}
					if (BitTest(iParam0->f_13, 1))
					{
						if (!__LIB_13__::func_755(iParam0, 1))
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "LOSE_WANTED_LEVEL", 3);
							}
							MISC::CLEAR_BIT(&(iParam0->f_13), 1);
						}
					}
					if (!HUD::DOES_BLIP_EXIST(iParam0->f_5))
					{
						if (HUD::DOES_BLIP_EXIST(*iParam0))
						{
							HUD::REMOVE_BLIP(iParam0);
						}
						iParam0->f_5 = __LIB_0__::func_488(Var3, 0);
						if (!iParam23 == -1)
						{
							HUD::SET_BLIP_SPRITE(iParam0->f_5, iParam23);
						}
						if (bParam27)
						{
							__LIB_0__::func_571(iParam0->f_5, iParam0);
						}
					}
					else if (!__LIB_0__::func_490(Var3, HUD::GET_BLIP_COORDS(iParam0->f_5), 0.1f, 0))
					{
						HUD::SET_BLIP_COORDS(iParam0->f_5, Var3);
						if (bParam27)
						{
							__LIB_0__::func_571(iParam0->f_5, iParam0);
						}
					}
					if (!__LIB_13__::func_755(iParam0, 2))
					{
						if (!BitTest(iParam0->f_13, 2))
						{
							__LIB_0__::func_572(iParam0, sParam11, 0);
							MISC::SET_BIT(&(iParam0->f_13), 2);
						}
					}
					if (iParam6 == 4 || iParam6 == 5)
					{
						if (BitTest(iParam0->f_13, 13))
						{
							bParam5 = false;
						}
					}
					bVar1 = false;
					bVar4 = false;
					iVar5 = 0;
					if ((iParam6 == 1 || iParam6 == 3) || iParam6 == 5)
					{
						bVar4 = true;
					}
					if (iParam6 == 2 || iParam6 == 3)
					{
						iVar5 = 1;
					}
					else if (iParam6 == 4 || iParam6 == 5)
					{
						iVar5 = 2;
					}
					if (bParam20)
					{
						ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, Param2, bParam5, bVar4, iVar5);
						if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Param3, Param4, fParam28, false, bVar4, iVar5))
						{
							bVar1 = true;
						}
					}
					else if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, Param2, bParam5, bVar4, iVar5))
					{
						bVar1 = true;
					}
					if (bVar1)
					{
						bVar1 = true;
						iVar2 = 0;
						while (iVar2 < 3)
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[iVar2]))
							{
								if (iParam6 == 4 || iParam6 == 5)
								{
									iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar2], iVar0, false))
									{
										bVar1 = false;
									}
								}
								else if (iParam10 != 0)
								{
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar2], iParam10, false))
									{
										bVar1 = false;
									}
								}
								else if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar2], __LIB_0__::func_495()) || !__LIB_13__::func_742(iParam0->f_17[iVar2], 1))
								{
									bVar1 = false;
								}
							}
							iVar2++;
						}
						if (bVar1)
						{
							if (__LIB_13__::func_754(iParam0))
							{
								__LIB_0__::func_576(sParam11);
								__LIB_0__::func_576(sParam16);
								__LIB_0__::func_576(sParam12);
								__LIB_0__::func_576(sParam13);
								__LIB_0__::func_576(sParam14);
								__LIB_0__::func_576(sParam15);
								__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
								__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
								__LIB_0__::func_576(sParam19);
								__LIB_16__::func_318(iParam0, 1, 0);
								return 1;
							}
						}
					}
				}
			}
			else if (ENTITY::DOES_ENTITY_EXIST(iParam10))
			{
				if ((bParam18 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) && (!BitTest(iParam0->f_13, 9) && !BitTest(iParam0->f_13, 22)))
				{
					__LIB_0__::func_576(sParam16);
					__LIB_0__::func_576(sParam19);
					if (HUD::DOES_BLIP_EXIST(iParam0->f_5) || HUD::DOES_BLIP_EXIST(*iParam0))
					{
						HUD::REMOVE_BLIP(&(iParam0->f_5));
						HUD::REMOVE_BLIP(iParam0);
						__LIB_0__::func_576(sParam11);
					}
					if ((!__LIB_13__::func_755(iParam0, 1) && !__LIB_0__::func_573(iParam0)) && !BitTest(iParam0->f_13, 0))
					{
						if (bParam22)
						{
							__LIB_0__::func_572(iParam0, "LOSE_WANTED" /* GXT: Lose the Cops. */, 0);
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "VEHICLE_POLICE_PURSUIT", 3);
							}
						}
						MISC::SET_BIT(&(iParam0->f_13), 0);
						MISC::CLEAR_BIT(&(iParam0->f_13), 1);
					}
				}
				else
				{
					if (BitTest(iParam0->f_13, 0))
					{
						__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
						MISC::CLEAR_BIT(&(iParam0->f_13), 0);
						MISC::SET_BIT(&(iParam0->f_13), 1);
					}
					if (BitTest(iParam0->f_13, 1))
					{
						if (!__LIB_13__::func_755(iParam0, 1))
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "LOSE_WANTED_LEVEL", 3);
							}
							MISC::CLEAR_BIT(&(iParam0->f_13), 1);
						}
					}
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
					{
						if (!HUD::DOES_BLIP_EXIST(*iParam0))
						{
							if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
							{
								HUD::REMOVE_BLIP(&(iParam0->f_5));
								__LIB_0__::func_576(sParam11);
							}
							*iParam0 = __LIB_0__::func_639(iParam10, 0, 0);
							HUD::SET_BLIP_DISPLAY(*iParam0, 2);
							if (!BitTest(iParam0->f_13, 4))
							{
								__LIB_0__::func_571(*iParam0, iParam0);
							}
						}
						if (!__LIB_13__::func_755(iParam0, 2))
						{
							if (!BitTest(iParam0->f_13, 3))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 3);
								MISC::CLEAR_BIT(&(iParam0->f_13), 4);
							}
							else if (BitTest(iParam0->f_13, 9))
							{
								if (!MISC::IS_STRING_NULL(sParam19))
								{
									if (!BitTest(iParam0->f_13, 4))
									{
										__LIB_0__::func_572(iParam0, sParam19, 0);
										MISC::SET_BIT(&(iParam0->f_13), 4);
									}
								}
								else if (!BitTest(iParam0->f_13, 4))
								{
									__LIB_0__::func_572(iParam0, sParam16, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
								if (!BitTest(iParam0->f_13, 23))
								{
									if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
									{
										__LIB_0__::func_640(iParam0->f_17[0], "GET_IN_CAR", 3);
									}
									MISC::SET_BIT(&(iParam0->f_13), 23);
								}
							}
						}
					}
				}
			}
			else
			{
				if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_5));
					__LIB_0__::func_576(sParam11);
				}
				if (iParam6 == 4 || iParam6 == 5)
				{
					if (iParam21 > 0)
					{
						if (!__LIB_13__::func_755(iParam0, 2))
						{
							if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
							{
								if (!BitTest(iParam0->f_13, 13))
								{
									iVar6 = 0;
									iVar7 = 0;
									iVar2 = 0;
									while (iVar2 < 3)
									{
										if (!PED::IS_PED_INJURED(iParam0->f_17[iVar2]))
										{
											iVar6++;
										}
										iVar2++;
									}
									iVar7 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar6);
									if (!PED::IS_PED_INJURED(iParam0->f_17[iVar7]))
									{
										__LIB_0__::func_640(iParam0->f_17[iVar7], "NEED_A_BIGGER_VEHICLE", 3);
									}
									__LIB_0__::func_572(iParam0, "MORE_SEATS" /* GXT: A vehicle with more seats is needed. */, 0);
									MISC::SET_BIT(&(iParam0->f_13), 13);
								}
							}
							else if (!BitTest(iParam0->f_13, 3))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 3);
								MISC::CLEAR_BIT(&(iParam0->f_13), 4);
							}
							else if (!BitTest(iParam0->f_13, 4))
							{
								if (BitTest(iParam0->f_13, 9))
								{
									__LIB_0__::func_572(iParam0, sParam19, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
							}
						}
					}
					else if (!__LIB_13__::func_755(iParam0, 2))
					{
						if (!BitTest(iParam0->f_13, 3))
						{
							__LIB_0__::func_572(iParam0, sParam16, 0);
							MISC::SET_BIT(&(iParam0->f_13), 3);
							MISC::CLEAR_BIT(&(iParam0->f_13), 4);
						}
						else if (BitTest(iParam0->f_13, 9))
						{
							if (!MISC::IS_STRING_NULL(sParam19))
							{
								if (!BitTest(iParam0->f_13, 4))
								{
									__LIB_0__::func_572(iParam0, sParam19, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
							}
							else if (!BitTest(iParam0->f_13, 4))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 4);
							}
						}
					}
				}
			}
		}
	}
	else
	{
		if (BitTest(iParam0->f_13, 0))
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), 0);
		}
		__LIB_0__::func_576(sParam11);
		__LIB_0__::func_576(sParam16);
		__LIB_0__::func_576(sParam19);
		__LIB_0__::func_576(sParam16);
		__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
		if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
		{
			HUD::REMOVE_BLIP(&(iParam0->f_5));
		}
		if (HUD::DOES_BLIP_EXIST(*iParam0))
		{
			HUD::REMOVE_BLIP(iParam0);
		}
	}
	MISC::CLEAR_BIT(&(iParam0->f_13), 11);
	MISC::CLEAR_BIT(&(iParam0->f_13), 12);
	return 0;
}

void func_224(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0x65AC9
{
	struct<60> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam3 != 24 && iParam3 != 25)
		{
			return;
		}
		if (iParam3 == 24)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[25]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[25], false))
			{
				if (Global_77137.f_484[25] == iParam0)
				{
					return;
				}
			}
		}
		if (!bParam4)
		{
			if ((VEHICLE::IS_BIG_VEHICLE(iParam0) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bus")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("tourbus"))
			{
				return;
			}
		}
		__LIB_14__::func_741(iParam3);
		Var0.f_9 = 49;
		Var0.f_59 = 2;
		__LIB_0__::func_209(iParam0, &Var0);
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			fParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
		if (iParam3 == 24)
		{
			if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != joaat("vehicle_gen_controller"))
			{
				Global_78125 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
			}
		}
		__LIB_14__::func_746(iParam3, &Var0, Param1, fParam2, __LIB_0__::func_119(iParam0));
		__LIB_17__::func_163(iParam3, iParam0, 0);
	}
}

int func_225(int iParam0)//Position - 0xE6C4
{
	if (iParam0 < 9)
	{
		return Global_96297[iParam0 /*2*/];
	}
	return -1;
}

int func_226(int iParam0)//Position - 0x959B4
{
	struct<3> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			Var0 = { ENTITY::GET_ENTITY_SPEED_VECTOR(iParam0, true) };
			if (Var0.f_1 < -1f)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_227(struct<3> Param0, float fParam1)//Position - 0x98613
{
	if (!__LIB_0__::func_78(Param0, 0f, 0f, 0f, 0))
	{
		if (INTERIOR::IS_INTERIOR_READY(INTERIOR::GET_INTERIOR_AT_COORDS(Param0)))
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true) > fParam1)
			{
				INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS(Param0));
			}
		}
	}
}

void func_228(int* iParam0, bool bParam1)//Position - 0x9E46A
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (ENTITY::IS_ENTITY_ATTACHED(*iParam0))
		{
			ENTITY::DETACH_ENTITY(*iParam0, true, true);
		}
		if (bParam1 == 1)
		{
			OBJECT::DELETE_OBJECT(iParam0);
		}
		else
		{
			ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(iParam0);
		}
	}
}

int func_229(int iParam0, int iParam1)//Position - 0xB240D
{
	struct<82> Var0;
	if (!__LIB_0__::func_374(iParam0))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_17__::func_152(iParam0, &Var0, iParam1);
		return Var0.f_0;
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

void func_230(int iParam0)//Position - 0x1D82C
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = ENTITY::GET_ENTITY_MODEL(iParam0);
	iVar2 = __LIB_0__::func_19(iVar1);
	iVar0 = 0;
	while (iVar0 <= 11)
	{
		if (Global_113386.f_2363.f_539[iVar2 /*65*/].f_13[iVar0] != -1 && Global_113386.f_2363.f_539[iVar2 /*65*/][iVar0] != -1)
		{
			PED::SET_PED_PRELOAD_VARIATION_DATA(iParam0, iVar0, Global_113386.f_2363.f_539[iVar2 /*65*/].f_13[iVar0], Global_113386.f_2363.f_539[iVar2 /*65*/][iVar0]);
		}
		iVar0++;
	}
}

void func_231(char* sParam0, var uParam1, int iParam2, var uParam3)//Position - 0xB0CC2
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (*uParam3 >= 0)
	{
		if (*uParam3 <= (iParam2 - 1))
		{
			iVar0 = 0;
			while (iVar0 <= *uParam3)
			{
				if (__LIB_17__::func_213(sParam0, (*uParam1)[iVar0]))
				{
					iVar1 = 1;
				}
				iVar0++;
			}
			if (iVar1 == 0)
			{
				STREAMING::REQUEST_ANIM_DICT(sParam0);
				(*uParam1)[*uParam3] = sParam0;
				*uParam3++;
			}
		}
	}
}

void func_232(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, int iParam7)//Position - 0x82A90
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	uParam2->f_97 = 0;
	iVar0 = 145;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false) && !ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		iVar0 = __LIB_0__::func_650(iParam0);
		if (iVar0 > 3)
		{
			if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
			{
			}
			return;
		}
		if (DECORATOR::DECOR_EXIST_ON(iParam1, "GetawayVehicleValid"))
		{
			if (DECORATOR::DECOR_GET_BOOL(iParam1, "GetawayVehicleValid"))
			{
				if ((Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[45] || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[12]) || Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[34])
				{
					*uParam5 = 0;
					Global_100144[iVar0] = 0;
					return;
				}
			}
		}
		if (PED::IS_PED_IN_VEHICLE(iParam0, iParam1, false) || iParam7)
		{
			*uParam5 = 2;
			Global_100144[iVar0] = iParam1;
		}
		else if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
		{
			iParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, false);
			*uParam5 = 2;
			Global_100144[iVar0] = iParam1;
		}
		else
		{
			iVar1 = 0;
			while (iVar1 < 68)
			{
				if (iParam1 == Global_77137.f_139[iVar1])
				{
					*uParam5 = 0;
					Global_100144[iVar0] = 0;
					return;
				}
				iVar1++;
			}
			if (!ENTITY::IS_ENTITY_DEAD(Global_100144[iVar0], false))
			{
				if (!__LIB_0__::func_363(Global_100144[iVar0], iVar0, 0) || PED::IS_PED_IN_VEHICLE(iParam0, Global_100144[iVar0], false))
				{
					Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
					Var3 = { ENTITY::GET_ENTITY_COORDS(Global_100144[iVar0], true) };
					if (__LIB_14__::func_73(iParam0, Global_100144[iVar0], 0))
					{
						if (SYSTEM::VDIST2(Var2, Var3) < 22500f)
						{
							*uParam3 = { Var3 };
							*uParam4 = ENTITY::GET_ENTITY_HEADING(Global_100144[iVar0]);
							*uParam5 = 1;
							Global_100144[iVar0] = iParam1;
							if (SYSTEM::VDIST2(Var2, Var3) < (1.5f * 1.5f))
							{
							}
						}
					}
				}
				else
				{
					*uParam5 = 0;
					Global_100144[iVar0] = 0;
				}
			}
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		*uParam2 = ENTITY::GET_ENTITY_MODEL(iParam1);
		if (VEHICLE::GET_VEHICLE_TRAILER_VEHICLE(iParam1, &iVar5))
		{
			uParam2->f_1 = ENTITY::GET_ENTITY_MODEL(iVar5);
		}
		uParam2->f_2 = VEHICLE::GET_VEHICLE_DIRT_LEVEL(iParam1);
		uParam2->f_3 = ENTITY::GET_ENTITY_HEALTH(iParam1);
		uParam2->f_4 = VEHICLE::GET_VEHICLE_COLOUR_COMBINATION(iParam1);
		if (uParam2->f_4 > -1)
		{
			uParam2->f_9 = 1;
			uParam2->f_5 = -1;
			uParam2->f_6 = -1;
		}
		else
		{
			uParam2->f_9 = 0;
			VEHICLE::GET_VEHICLE_COLOURS(iParam1, &(uParam2->f_5), &(uParam2->f_6));
		}
		if (!VEHICLE::IS_THIS_MODEL_A_BOAT(*uParam2))
		{
			uParam2->f_10 = 1;
			VEHICLE::GET_VEHICLE_EXTRA_COLOURS(iParam1, &(uParam2->f_7), &(uParam2->f_8));
		}
		else
		{
			uParam2->f_10 = 0;
			uParam2->f_7 = -1;
			uParam2->f_8 = -1;
		}
		StringCopy(&(uParam2->f_27), VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam1), 16);
		uParam2->f_26 = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(iParam1);
		uParam2->f_88 = VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(iParam1);
		VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(iParam1, &(uParam2->f_84), &(uParam2->f_85), &(uParam2->f_86));
		uParam2->f_87 = VEHICLE::GET_VEHICLE_WINDOW_TINT(iParam1);
		VEHICLE::GET_VEHICLE_NEON_COLOUR(iParam1, &(uParam2->f_93), &(uParam2->f_94), &(uParam2->f_95));
		if (VEHICLE::GET_VEHICLE_NEON_ENABLED(iParam1, 2))
		{
			MISC::SET_BIT(&(uParam2->f_92), 28);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam2->f_92), 28);
		}
		if (VEHICLE::GET_VEHICLE_NEON_ENABLED(iParam1, 3))
		{
			MISC::SET_BIT(&(uParam2->f_92), 29);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam2->f_92), 29);
		}
		if (VEHICLE::GET_VEHICLE_NEON_ENABLED(iParam1, 0))
		{
			MISC::SET_BIT(&(uParam2->f_92), 30);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam2->f_92), 30);
		}
		if (VEHICLE::GET_VEHICLE_NEON_ENABLED(iParam1, 1))
		{
			MISC::SET_BIT(&(uParam2->f_92), 31);
		}
		else
		{
			MISC::CLEAR_BIT(&(uParam2->f_92), 31);
		}
		uParam2->f_89 = VEHICLE::GET_VEHICLE_LIVERY(iParam1);
		uParam2->f_90 = VEHICLE::GET_VEHICLE_WHEEL_TYPE(iParam1);
		iVar4 = 0;
		while (iVar4 < 12)
		{
			uParam2->f_11[iVar4] = VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(iParam1, iVar4 + 1);
			iVar4++;
		}
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(iParam1, false))
		{
			iVar6 = VEHICLE::GET_CONVERTIBLE_ROOF_STATE(iParam1);
			if (iVar6 == 0 || iVar6 == 5)
			{
				uParam2->f_24 = 1;
			}
			else
			{
				uParam2->f_24 = 0;
			}
		}
		else
		{
			uParam2->f_24 = 0;
		}
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			uParam2->f_25 = AUDIO::GET_PLAYER_RADIO_STATION_INDEX();
		}
		__LIB_0__::func_107(&iParam1, &(uParam2->f_31), &(uParam2->f_81));
		uParam2->f_96 = VEHICLE::GET_VEHICLE_ENVEFF_SCALE(iParam1);
		uParam2->f_97 = __LIB_0__::func_117(iParam1);
		*uParam6 = -1;
		switch (iVar0)
		{
			case 0:
				if (Global_113386.f_32749.f_69[0 /*78*/].f_66 == ENTITY::GET_ENTITY_MODEL(iParam1))
				{
					*uParam6 = 12;
				}
				break;
			case 1:
				if (Global_113386.f_32749.f_69[1 /*78*/].f_66 == ENTITY::GET_ENTITY_MODEL(iParam1))
				{
					*uParam6 = 13;
				}
				break;
			case 2:
				if (Global_113386.f_32749.f_69[2 /*78*/].f_66 == ENTITY::GET_ENTITY_MODEL(iParam1))
				{
					*uParam6 = 14;
				}
				break;
		}
	}
	else
	{
		*uParam5 = 0;
		*uParam3 = { 0f, 0f, 0f };
		*uParam4 = 0f;
		*uParam2 = 0;
		uParam2->f_1 = 0;
		uParam2->f_2 = 0f;
		uParam2->f_3 = 0;
		uParam2->f_4 = 0;
		uParam2->f_5 = 0;
		uParam2->f_6 = 0;
		uParam2->f_7 = 0;
		uParam2->f_8 = 0;
		uParam2->f_9 = 0;
		uParam2->f_10 = 0;
		iVar4 = 0;
		while (iVar4 < uParam2->f_11)
		{
			uParam2->f_11[iVar4] = 0;
			iVar4++;
		}
		uParam2->f_24 = 0;
		uParam2->f_25 = 0;
		*uParam5 = 0;
		*uParam6 = -1;
		uParam2->f_96 = 0f;
	}
}

void func_233(int iParam0, bool bParam1)//Position - 0xB1DD7
{
	if (bParam1)
	{
		if (!__LIB_0__::func_431(iParam0, 4, 0))
		{
			__LIB_13__::func_768(iParam0, 4, 0);
		}
	}
	else if (__LIB_0__::func_431(iParam0, 4, 0))
	{
		__LIB_13__::func_776(iParam0, 4, 0);
	}
}

void func_234(int iParam0, int iParam1, int iParam2)//Position - 0xE360
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_14__::func_791(iParam0);
	iVar1 = __LIB_14__::func_791(iParam1);
	iVar2 = __LIB_13__::func_95(iVar0, iVar1);
	if (iVar2 != 10)
	{
		__LIB_1__::func_31(&(Global_113386.f_18103.f_175[iVar2 /*19*/].f_5));
		Global_113386.f_18103.f_175[iVar2 /*19*/].f_8 = iParam2;
	}
}

void func_235()//Position - 0x137A8
{
	if (Global_97753)
	{
		__LIB_13__::func_767();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_15__::func_891(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_236(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x18309
{
	bool bVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_0__::func_650(iParam0);
		iVar1 = 0;
		while (iVar1 < 12)
		{
			__LIB_13__::func_753(iParam0, iVar1, &(uParam1->f_13[iVar1]), uParam1[iVar1], &(uParam1->f_26[iVar1]), iParam2, 145);
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 9)
		{
			__LIB_13__::func_752(iParam0, iVar1, &(uParam1->f_39[iVar1]), &(uParam1->f_49[iVar1]), iParam2, 145);
			iVar1++;
		}
		if (__LIB_0__::func_374(bVar0))
		{
			uParam1->f_59 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_59;
			uParam1->f_60 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_60;
			uParam1->f_61 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_61;
			uParam1->f_62 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_62;
			uParam1->f_63 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_63;
			uParam1->f_64 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_64;
		}
		else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::GET_ENTITY_MODEL(iParam0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
			uParam1->f_60 = __LIB_0__::func_369(754, iParam3, 0);
			uParam1->f_61 = __LIB_0__::func_369(755, iParam3, 0);
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
		}
	}
}

void func_237(int iParam0, bool bParam1)//Position - 0x1995F
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_0__::func_528(iParam0, &(Global_113386.f_2363.f_539.f_298[bVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (bVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_238(int iParam0, bool bParam1, bool bParam2)//Position - 0x81801
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = 4;
	if (bParam1 == 0)
	{
		iVar0 = 0;
	}
	else if (bParam1 == 2)
	{
		iVar0 = 2;
	}
	else if (bParam1 == 1)
	{
		iVar0 = 1;
	}
	else if (bParam1 == 145)
	{
		iVar0 = 3;
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[iVar0]))
	{
		iVar1 = -1;
		iVar2 = 0;
		while (iVar2 < Global_100366)
		{
			if (iVar1 < 0)
			{
				if (!ENTITY::DOES_ENTITY_EXIST(Global_100366[iVar2]))
				{
					iVar1 = iVar2;
				}
			}
			iVar2++;
		}
		if (iVar1 < 0 || iVar1 > Global_100366)
		{
			iVar1 = 0;
		}
		Global_100366[iVar1] = Global_97919[iVar0];
		if (bParam2)
		{
			if (!PED::IS_PED_INJURED(Global_100366[iVar1]))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iParam0))
				{
					if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
					{
						TASK::CLEAR_PED_TASKS(Global_100366[iVar1]);
						TASK::TASK_SMART_FLEE_COORD(Global_100366[iVar1], ENTITY::GET_ENTITY_COORDS(iParam0, true), 1000f, -1, true, false);
					}
				}
			}
		}
	}
	Global_97919[iVar0] = iParam0;
	Global_113386.f_2363.f_539.f_2296[bParam1] = __LIB_11__::func_762();
	Global_113386.f_2363.f_539.f_2300[bParam1 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	Global_113386.f_2363.f_539.f_2310[bParam1] = ENTITY::GET_ENTITY_HEADING(iParam0);
	if (bParam2)
	{
		MISC::SET_BIT(&(Global_97919.f_47), iVar0);
	}
	return 1;
}

int func_239(int* iParam0, struct<3> Param1, struct<3> Param2, struct<3> Param3, struct<3> Param4, bool bParam5, int iParam6, var uParam7, var uParam8, var uParam9, int iParam10, char* sParam11, char* sParam12, char* sParam13, char* sParam14, char* sParam15, char* sParam16, bool bParam17, bool bParam18, char* sParam19, bool bParam20, int iParam21, bool bParam22, int iParam23, int iParam24, int iParam25, int iParam26, bool bParam27, float fParam28)//Position - 0x95D5C
{
	int iVar0;
	bool bVar1;
	int iVar2;
	struct<3> Var3;
	bool bVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	Var3 = { Param1 + Vector(1f, 0f, 0f) };
	iParam0->f_17[0] = uParam7;
	iParam0->f_17[1] = uParam8;
	iParam0->f_17[2] = uParam9;
	iParam0->f_16 = uParam7;
	__LIB_0__::func_590(iParam0);
	__LIB_0__::func_589(iParam0);
	__LIB_0__::func_496();
	if (__LIB_15__::func_945(iParam0, iParam0->f_17[0], iParam0->f_17[1], iParam0->f_17[2], sParam12, sParam13, sParam14, sParam15, iParam0->f_8, bParam17, iParam10, 0, 0, iParam24, iParam25, iParam26, iParam6, bParam18))
	{
		__LIB_0__::func_576(sParam12);
		__LIB_0__::func_576(sParam13);
		__LIB_0__::func_576(sParam14);
		__LIB_0__::func_576(sParam15);
		if (CAM::IS_SCREEN_FADED_IN())
		{
			bVar1 = false;
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
			{
				if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iParam10, false))
				{
					MISC::SET_BIT(&(iParam0->f_13), 3);
					if (!BitTest(iParam0->f_13, 9))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 4);
					}
					if (BitTest(iParam0->f_13, 23))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 23);
					}
					MISC::SET_BIT(&(iParam0->f_13), 9);
					bVar1 = true;
				}
			}
			else if (iParam6 == 4 || iParam6 == 5)
			{
				if (__LIB_13__::func_792(iParam0, iParam21))
				{
					MISC::SET_BIT(&(iParam0->f_13), 3);
					if (!BitTest(iParam0->f_13, 9))
					{
						MISC::CLEAR_BIT(&(iParam0->f_13), 4);
					}
					MISC::SET_BIT(&(iParam0->f_13), 9);
					bVar1 = true;
				}
			}
			else
			{
				bVar1 = true;
			}
			if (bVar1)
			{
				__LIB_0__::func_576(sParam16);
				__LIB_0__::func_576(sParam19);
				__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
				if (bParam18 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
				{
					if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
					{
						HUD::REMOVE_BLIP(&(iParam0->f_5));
						__LIB_0__::func_576(sParam11);
					}
					if (HUD::DOES_BLIP_EXIST(*iParam0))
					{
						HUD::REMOVE_BLIP(iParam0);
					}
					if ((!__LIB_13__::func_755(iParam0, 1) && !__LIB_0__::func_573(iParam0)) && !BitTest(iParam0->f_13, 0))
					{
						if (bParam22)
						{
							__LIB_0__::func_572(iParam0, "LOSE_WANTED" /* GXT: Lose the Cops. */, 0);
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "VEHICLE_POLICE_PURSUIT", 3);
							}
						}
						MISC::SET_BIT(&(iParam0->f_13), 0);
						MISC::CLEAR_BIT(&(iParam0->f_13), 1);
					}
				}
				else
				{
					if (BitTest(iParam0->f_13, 0))
					{
						__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
						MISC::CLEAR_BIT(&(iParam0->f_13), 0);
						MISC::SET_BIT(&(iParam0->f_13), 1);
					}
					if (BitTest(iParam0->f_13, 1))
					{
						if (!__LIB_13__::func_755(iParam0, 1))
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "LOSE_WANTED_LEVEL", 3);
							}
							MISC::CLEAR_BIT(&(iParam0->f_13), 1);
						}
					}
					if (!HUD::DOES_BLIP_EXIST(iParam0->f_5))
					{
						if (HUD::DOES_BLIP_EXIST(*iParam0))
						{
							HUD::REMOVE_BLIP(iParam0);
						}
						iParam0->f_5 = __LIB_0__::func_488(Var3, 0);
						if (!iParam23 == -1)
						{
							HUD::SET_BLIP_SPRITE(iParam0->f_5, iParam23);
						}
						if (bParam27)
						{
							__LIB_0__::func_571(iParam0->f_5, iParam0);
						}
					}
					else if (!__LIB_0__::func_490(Var3, HUD::GET_BLIP_COORDS(iParam0->f_5), 0.1f, 0))
					{
						HUD::SET_BLIP_COORDS(iParam0->f_5, Var3);
						if (bParam27)
						{
							__LIB_0__::func_571(iParam0->f_5, iParam0);
						}
					}
					if (!__LIB_13__::func_755(iParam0, 2))
					{
						if (!BitTest(iParam0->f_13, 2))
						{
							__LIB_0__::func_572(iParam0, sParam11, 0);
							MISC::SET_BIT(&(iParam0->f_13), 2);
						}
					}
					if (iParam6 == 4 || iParam6 == 5)
					{
						if (BitTest(iParam0->f_13, 13))
						{
							bParam5 = false;
						}
					}
					bVar1 = false;
					bVar4 = false;
					iVar5 = 0;
					if ((iParam6 == 1 || iParam6 == 3) || iParam6 == 5)
					{
						bVar4 = true;
					}
					if (iParam6 == 2 || iParam6 == 3)
					{
						iVar5 = 1;
					}
					else if (iParam6 == 4 || iParam6 == 5)
					{
						iVar5 = 2;
					}
					if (bParam20)
					{
						ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, Param2, bParam5, bVar4, iVar5);
						if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Param3, Param4, fParam28, false, bVar4, iVar5))
						{
							bVar1 = true;
						}
					}
					else if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, Param2, bParam5, bVar4, iVar5))
					{
						bVar1 = true;
					}
					if (bVar1)
					{
						bVar1 = true;
						iVar2 = 0;
						while (iVar2 < 3)
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[iVar2]))
							{
								if (iParam6 == 4 || iParam6 == 5)
								{
									iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar2], iVar0, false))
									{
										bVar1 = false;
									}
								}
								else if (iParam10 != 0)
								{
									if (!PED::IS_PED_IN_VEHICLE(iParam0->f_17[iVar2], iParam10, false))
									{
										bVar1 = false;
									}
								}
								else if (!PED::IS_PED_GROUP_MEMBER(iParam0->f_17[iVar2], __LIB_0__::func_495()) || !__LIB_13__::func_742(iParam0->f_17[iVar2], 1))
								{
									bVar1 = false;
								}
							}
							iVar2++;
						}
						if (bVar1)
						{
							if (__LIB_13__::func_754(iParam0))
							{
								__LIB_0__::func_576(sParam11);
								__LIB_0__::func_576(sParam16);
								__LIB_0__::func_576(sParam12);
								__LIB_0__::func_576(sParam13);
								__LIB_0__::func_576(sParam14);
								__LIB_0__::func_576(sParam15);
								__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
								__LIB_0__::func_576("MORE_SEATS" /* GXT: A vehicle with more seats is needed. */);
								__LIB_0__::func_576(sParam19);
								__LIB_13__::func_815(iParam0, 1, 0);
								return 1;
							}
						}
					}
				}
			}
			else if (ENTITY::DOES_ENTITY_EXIST(iParam10))
			{
				if ((bParam18 && PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) && (!BitTest(iParam0->f_13, 9) && !BitTest(iParam0->f_13, 22)))
				{
					__LIB_0__::func_576(sParam16);
					__LIB_0__::func_576(sParam19);
					if (HUD::DOES_BLIP_EXIST(iParam0->f_5) || HUD::DOES_BLIP_EXIST(*iParam0))
					{
						HUD::REMOVE_BLIP(&(iParam0->f_5));
						HUD::REMOVE_BLIP(iParam0);
						__LIB_0__::func_576(sParam11);
					}
					if ((!__LIB_13__::func_755(iParam0, 1) && !__LIB_0__::func_573(iParam0)) && !BitTest(iParam0->f_13, 0))
					{
						if (bParam22)
						{
							__LIB_0__::func_572(iParam0, "LOSE_WANTED" /* GXT: Lose the Cops. */, 0);
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "VEHICLE_POLICE_PURSUIT", 3);
							}
						}
						MISC::SET_BIT(&(iParam0->f_13), 0);
						MISC::CLEAR_BIT(&(iParam0->f_13), 1);
					}
				}
				else
				{
					if (BitTest(iParam0->f_13, 0))
					{
						__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
						MISC::CLEAR_BIT(&(iParam0->f_13), 0);
						MISC::SET_BIT(&(iParam0->f_13), 1);
					}
					if (BitTest(iParam0->f_13, 1))
					{
						if (!__LIB_13__::func_755(iParam0, 1))
						{
							if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
							{
								__LIB_0__::func_640(iParam0->f_17[0], "LOSE_WANTED_LEVEL", 3);
							}
							MISC::CLEAR_BIT(&(iParam0->f_13), 1);
						}
					}
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam10, false))
					{
						if (!HUD::DOES_BLIP_EXIST(*iParam0))
						{
							if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
							{
								HUD::REMOVE_BLIP(&(iParam0->f_5));
								__LIB_0__::func_576(sParam11);
							}
							*iParam0 = __LIB_0__::func_639(iParam10, 0, 0);
							HUD::SET_BLIP_DISPLAY(*iParam0, 2);
							if (!BitTest(iParam0->f_13, 4))
							{
								__LIB_0__::func_571(*iParam0, iParam0);
							}
						}
						if (!__LIB_13__::func_755(iParam0, 2))
						{
							if (!BitTest(iParam0->f_13, 3))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 3);
								MISC::CLEAR_BIT(&(iParam0->f_13), 4);
							}
							else if (BitTest(iParam0->f_13, 9))
							{
								if (!MISC::IS_STRING_NULL(sParam19))
								{
									if (!BitTest(iParam0->f_13, 4))
									{
										__LIB_0__::func_572(iParam0, sParam19, 0);
										MISC::SET_BIT(&(iParam0->f_13), 4);
									}
								}
								else if (!BitTest(iParam0->f_13, 4))
								{
									__LIB_0__::func_572(iParam0, sParam16, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
								if (!BitTest(iParam0->f_13, 23))
								{
									if (!PED::IS_PED_INJURED(iParam0->f_17[0]))
									{
										__LIB_0__::func_640(iParam0->f_17[0], "GET_IN_CAR", 3);
									}
									MISC::SET_BIT(&(iParam0->f_13), 23);
								}
							}
						}
					}
				}
			}
			else
			{
				if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
				{
					HUD::REMOVE_BLIP(&(iParam0->f_5));
					__LIB_0__::func_576(sParam11);
				}
				if (iParam6 == 4 || iParam6 == 5)
				{
					if (iParam21 > 0)
					{
						if (!__LIB_13__::func_755(iParam0, 2))
						{
							if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
							{
								if (!BitTest(iParam0->f_13, 13))
								{
									iVar6 = 0;
									iVar7 = 0;
									iVar2 = 0;
									while (iVar2 < 3)
									{
										if (!PED::IS_PED_INJURED(iParam0->f_17[iVar2]))
										{
											iVar6++;
										}
										iVar2++;
									}
									iVar7 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar6);
									if (!PED::IS_PED_INJURED(iParam0->f_17[iVar7]))
									{
										__LIB_0__::func_640(iParam0->f_17[iVar7], "NEED_A_BIGGER_VEHICLE", 3);
									}
									__LIB_0__::func_572(iParam0, "MORE_SEATS" /* GXT: A vehicle with more seats is needed. */, 0);
									MISC::SET_BIT(&(iParam0->f_13), 13);
								}
							}
							else if (!BitTest(iParam0->f_13, 3))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 3);
								MISC::CLEAR_BIT(&(iParam0->f_13), 4);
							}
							else if (!BitTest(iParam0->f_13, 4))
							{
								if (BitTest(iParam0->f_13, 9))
								{
									__LIB_0__::func_572(iParam0, sParam19, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
							}
						}
					}
					else if (!__LIB_13__::func_755(iParam0, 2))
					{
						if (!BitTest(iParam0->f_13, 3))
						{
							__LIB_0__::func_572(iParam0, sParam16, 0);
							MISC::SET_BIT(&(iParam0->f_13), 3);
							MISC::CLEAR_BIT(&(iParam0->f_13), 4);
						}
						else if (BitTest(iParam0->f_13, 9))
						{
							if (!MISC::IS_STRING_NULL(sParam19))
							{
								if (!BitTest(iParam0->f_13, 4))
								{
									__LIB_0__::func_572(iParam0, sParam19, 0);
									MISC::SET_BIT(&(iParam0->f_13), 4);
								}
							}
							else if (!BitTest(iParam0->f_13, 4))
							{
								__LIB_0__::func_572(iParam0, sParam16, 0);
								MISC::SET_BIT(&(iParam0->f_13), 4);
							}
						}
					}
				}
			}
		}
	}
	else
	{
		if (BitTest(iParam0->f_13, 0))
		{
			MISC::CLEAR_BIT(&(iParam0->f_13), 0);
		}
		__LIB_0__::func_576(sParam11);
		__LIB_0__::func_576(sParam16);
		__LIB_0__::func_576(sParam19);
		__LIB_0__::func_576(sParam16);
		__LIB_0__::func_576("LOSE_WANTED" /* GXT: Lose the Cops. */);
		if (HUD::DOES_BLIP_EXIST(iParam0->f_5))
		{
			HUD::REMOVE_BLIP(&(iParam0->f_5));
		}
		if (HUD::DOES_BLIP_EXIST(*iParam0))
		{
			HUD::REMOVE_BLIP(iParam0);
		}
	}
	MISC::CLEAR_BIT(&(iParam0->f_13), 11);
	MISC::CLEAR_BIT(&(iParam0->f_13), 12);
	return 0;
}

int func_240(int iParam0, struct<3> Param1, bool bParam2)//Position - 0xAFBFD
{
	int iVar0;
	var uVar1[3];
	int iVar2;
	int iVar3;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iVar0)
	{
		case joaat("cargobob"):
			if (__LIB_0__::func_491(iParam0, Global_77137.f_139[38], 0))
			{
				__LIB_17__::func_68(38);
				return 1;
			}
			break;
		case joaat("firetruk"):
			if (__LIB_0__::func_491(iParam0, Global_77137.f_139[43], 1))
			{
				__LIB_17__::func_68(43);
				return 1;
			}
			break;
		case joaat("cuban800"):
			iVar2 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar1);
			iVar3 = 0;
			while (iVar3 <= (iVar2 - 1))
			{
				if (__LIB_0__::func_491(iParam0, uVar1[iVar3], 1) && __LIB_0__::func_490(ENTITY::GET_ENTITY_COORDS(uVar1[iVar3], true), 2136.133f, 4780.5635f, 39.9702f, 5f, 0))
				{
					if ((!bParam2 || __LIB_0__::func_78(Param1, 0f, 0f, 0f, 0)) || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(uVar1[iVar3], true), true) < 10f)
					{
						VEHICLE::DELETE_VEHICLE(&iParam0);
						return 1;
					}
					else
					{
						return 0;
					}
				}
				iVar3++;
			}
			break;
		case joaat("luxor2"):
			if ((ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[14]) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[14], false))
			{
				if (ENTITY::GET_ENTITY_MODEL(Global_77137.f_484[14]) == joaat("luxor2") && VEHICLE::GET_VEHICLE_LIVERY(iParam0) == VEHICLE::GET_VEHICLE_LIVERY(Global_77137.f_484[14]))
				{
					__LIB_17__::func_68(14);
					return 1;
				}
			}
			break;
		case joaat("swift2"):
			if ((ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[20]) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[20], false))
			{
				if (ENTITY::GET_ENTITY_MODEL(Global_77137.f_484[20]) == joaat("swift2") && VEHICLE::GET_VEHICLE_LIVERY(iParam0) == VEHICLE::GET_VEHICLE_LIVERY(Global_77137.f_484[20]))
				{
					__LIB_17__::func_68(20);
					return 1;
				}
			}
			break;
	}
	return 0;
}

void func_241(struct<3> Param0, float fParam1, bool bParam2)//Position - 0xB08F2
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 68)
	{
		if (__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iVar0))
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Global_77137.f_555[0 /*21*/], bParam2) <= fParam1)
			{
				__LIB_17__::func_68(iVar0);
			}
		}
		iVar0++;
	}
}

void func_242(int iParam0, int iParam1, int iParam2)//Position - 0xAC19B
{
	int iVar0;
	if (iParam0 == -1)
	{
		return;
	}
	if (!__LIB_15__::func_939(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return;
	}
	if (!BitTest(Global_77137.f_555[0 /*21*/].f_9, 12) && !BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
	{
		if (Global_77137.f_555[0 /*21*/].f_4 != ENTITY::GET_ENTITY_MODEL(iParam1))
		{
			return;
		}
	}
	if (Global_78044 != -1 && Global_78044 != iParam0)
	{
		return;
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iParam1))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam1, true, true);
			}
			if (iParam0 == 24)
			{
				Global_113386.f_32749.f_4801 = __LIB_11__::func_762();
			}
			if (iParam1 != Global_77137.f_139[iParam0])
			{
				if (iParam0 == 24)
				{
					iVar0 = __LIB_0__::func_343(iParam0);
					if ((ENTITY::DOES_ENTITY_EXIST(iVar0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false)) && iParam1 != iVar0)
					{
						__LIB_13__::func_828(iVar0, 145);
					}
				}
				Global_78043 = iParam1;
				Global_78044 = iParam0;
				Global_78045 = iParam2;
			}
		}
	}
}

bool func_243(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x997E1
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam4, iParam5, iParam6);
	if (iParam3 > 7)
	{
		if (iParam3 < 12)
		{
			iParam3 = 7;
		}
	}
	Global_21612 = 0;
	Global_21614 = 0;
	Global_21619 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_2883585 = 0;
	return __LIB_17__::func_183(sParam2, iParam3, 0);
}

bool func_244(var uParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6)//Position - 0x9905E
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam5, iParam6, 0);
	if (iParam4 > 7)
	{
		if (iParam4 < 12)
		{
			iParam4 = 7;
		}
	}
	Global_21612 = 0;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 1;
	StringCopy(&Global_22609, sParam3, 24);
	Global_2883585 = 0;
	return __LIB_17__::func_183(sParam2, iParam4, 0);
}

int func_245(int iParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0xA4DD2
{
	int iVar0;
	var uVar1;
	struct<97> Var2;
	int iVar3;
	int iVar4;
	bool bVar5;
	char cVar6[16];
	int iVar7;
	if (__LIB_0__::func_374(bParam1))
	{
		Var2.f_11 = 12;
		Var2.f_31 = 49;
		Var2.f_81 = 2;
		__LIB_0__::func_378(bParam1, &Var2, iParam5);
		if (Var2.f_0 == 0)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var2.f_0)
			{
			}
			return 1;
		}
		if ((bParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131])
		{
			Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/] = 0;
		}
		if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar3 = 0;
				while (iVar3 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar3 + 1, !Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_11[iVar3]);
					iVar3++;
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]);
				}
				__LIB_0__::func_397(*iParam0, bParam1);
				return 1;
			}
		}
		else if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar4 = 0;
				while (iVar4 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar4 + 1, !Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_11[iVar4]);
					iVar4++;
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]);
				}
				__LIB_0__::func_397(*iParam0, bParam1);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var2.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var2.f_0))
			{
				bVar5 = true;
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var2.f_0, Param2, fParam3, true, true, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				StringCopy(&cVar6, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0), 16);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Var2.f_5, Var2.f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Var2.f_7, Var2.f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar7 = 0;
				while (iVar7 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar7 + 1, !Var2.f_11[iVar7]);
					iVar7++;
				}
				if (Var2.f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Var2.f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Var2.f_27));
					if (Var2.f_26 >= 0 && Var2.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Var2.f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Var2.f_84, Var2.f_85, Var2.f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Var2.f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Var2.f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Var2.f_93, Var2.f_94, Var2.f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Var2.f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Var2.f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Var2.f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Var2.f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Var2.f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Var2.f_89);
				}
				if (Var2.f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Var2.f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Var2.f_31), &(Var2.f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 1)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bagger") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[118])
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &cVar6);
						bVar5 = false;
					}
				}
				else if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				else if (((bParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131]) && ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("tailgater"))
				{
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 6, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 14, 7, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 11, 2, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 2, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 7, 5, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 0, 0, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 3, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 13, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 4, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 12, 2, false);
					VEHICLE::TOGGLE_VEHICLE_MOD(*iParam0, 22, true);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, 2);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 23, 11, false);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, 2);
					Global_113386.f_2363.f_539.f_4316 = 1;
					__LIB_16__::func_875(bParam1, iParam0, 0, 1);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var2.f_0);
				}
				if (bVar5)
				{
					__LIB_0__::func_397(*iParam0, bParam1);
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_246(var uParam0, var uParam1)//Position - 0x3282
{
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
	}
	else if (Global_113386.f_20118.f_261)
	{
		*uParam0 = { Global_113386.f_20118.f_267 };
		*uParam1 = Global_113386.f_20118.f_271;
		return 1;
	}
	return 0;
}

void func_247(bool bParam0)//Position - 0x22CCC
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = 0;
	if (!__LIB_0__::func_374(bParam0))
	{
		return;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (BitTest(Global_113386.f_7688[iVar0 /*15*/].f_2, bParam0))
		{
			if (Global_113386.f_7688[iVar0 /*15*/].f_3 > iVar1)
			{
				iVar1 = Global_113386.f_7688[iVar0 /*15*/].f_3;
			}
		}
		iVar0++;
	}
	iVar2 = 0;
	while (iVar2 < Global_113386.f_7688.f_764)
	{
		if (BitTest(Global_113386.f_7688.f_651[iVar2 /*14*/].f_2, bParam0))
		{
			if (Global_113386.f_7688.f_651[iVar2 /*14*/].f_3 == 5)
			{
				iVar1 = 5;
			}
		}
		iVar2++;
	}
	Global_113386.f_7688.f_919[bParam0] = iVar1;
}

int func_248(struct<3> Param0, bool bParam1)//Position - 0x230E7
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	fVar2 = 10000000f;
	iVar3 = 5;
	iVar0 = 0;
	while (iVar0 <= (5 - 1))
	{
		if (Global_95644[iVar0 /*9*/].f_7 != 263)
		{
			if (!bParam1 || BitTest(Global_113386.f_7229.f_11[iVar0], 0))
			{
				fVar1 = MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Global_95644[iVar0 /*9*/].f_3, true);
				if (fVar1 < fVar2)
				{
					fVar2 = fVar1;
					iVar3 = iVar0;
				}
			}
		}
		iVar0++;
	}
	return iVar3;
}

char* func_249(int iParam0)//Position - 0x24D63
{
	switch (iParam0)
	{
		case 0:
			return "JIMMY";
			break;
		case 1:
			return "TRACEY";
			break;
		case 2:
			return "AMANDA";
			break;
		case 3:
			return "MAID";
			break;
		case 4:
			return "GARDENER";
			break;
		case 5:
			return "DENISE";
			break;
		case 6:
			return "LAMAR";
			break;
		case 7:
			return "STRETCH" /* GXT: Stretch */;
			break;
		case 10:
			return "NERVOUSRON";
			break;
		case 8:
			return "MICHAEL";
			break;
		case 9:
			return "TREVOR";
			break;
		case 11:
			return "PATRICIA";
			break;
		case 12:
			return "TREVORMOM";
			break;
		case 13:
			return "FLOYD";
			break;
		case 14:
			return "WADE";
			break;
	}
	return "NULL";
}

void func_250(int iParam0, int iParam1)//Position - 0x6E6A2
{
	Global_95447[iParam0] = iParam1;
}

int func_251()//Position - 0x76125
{
	if (Global_39990[11] == 1)
	{
		return 4;
	}
	if (!__LIB_0__::func_178(21))
	{
		return 0;
	}
	if (!__LIB_0__::func_425(130))
	{
		return 1;
	}
	if (!__LIB_0__::func_425(131))
	{
		return 2;
	}
	if (!__LIB_0__::func_178(22))
	{
		return 1;
	}
	if (!__LIB_0__::func_178(49))
	{
		return 3;
	}
	if (!__LIB_0__::func_178(28))
	{
		return 1;
	}
	return 3;
}

int func_252(int iParam0)//Position - 0x7E318
{
	if (iParam0 != -1)
	{
		if (Global_32020[iParam0 /*11*/].f_5)
		{
			return 1;
		}
	}
	return 0;
}

int func_253(int iParam0)//Position - 0x7E337
{
	if (iParam0 != -1)
	{
		if (Global_32020[iParam0 /*11*/].f_6 == 1)
		{
			return 1;
		}
	}
	return 0;
}

void func_254(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0x284CD
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_255(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, int iParam6)//Position - 0x28A15
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = iParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

void func_256()//Position - 0x22E62
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_16__::func_512(Global_113386.f_2363.f_539.f_4321) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			iVar0 = __LIB_17__::func_107(PLAYER::PLAYER_PED_ID());
			if (__LIB_0__::func_374(iVar0) && (!__LIB_0__::isGlobal_43052EqualsValue(14) || Global_112337))
			{
				if (Global_113386.f_2363.f_539.f_4321 != iVar0 && __LIB_0__::func_374(Global_113386.f_2363.f_539.f_4321))
				{
					Global_113386.f_2363.f_539.f_4322 = Global_113386.f_2363.f_539.f_4321;
				}
				Global_113386.f_2363.f_539.f_4323 = iVar0;
				Global_113386.f_2363.f_539.f_4321 = iVar0;
				return;
			}
		}
		else
		{
			if (Global_113386.f_2363.f_539.f_4321 != 145)
			{
				Global_113386.f_2363.f_539.f_4323 = Global_113386.f_2363.f_539.f_4321;
			}
			return;
		}
	}
	Global_113386.f_2363.f_539.f_4321 = 145;
}

void func_257(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x756ED
{
	__LIB_13__::func_826(__LIB_11__::func_762(), iParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam6);
}

void func_258(struct<3> Param0, struct<3> Param1, var uParam2)//Position - 0x9E9
{
	if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID()))
	{
		if (MISC::HAS_BULLET_IMPACTED_IN_BOX(Param0, Param1, true, true))
		{
			*uParam2++;
			if (*uParam2 > 6)
			{
				Global_95464 = 3;
			}
		}
		else if ((FIRE::IS_EXPLOSION_IN_AREA(0, Param0, Param1) || FIRE::IS_EXPLOSION_IN_AREA(2, Param0, Param1)) || MISC::IS_PROJECTILE_TYPE_IN_AREA(Param0, Param1, joaat("WEAPON_GRENADELAUNCHER"), true))
		{
			Global_95464 = 5;
		}
	}
}

void func_259(struct<3> Param0, struct<3> Param1)//Position - 0xA64
{
	int iVar0;
	if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &iVar0, true))
	{
		if (iVar0 == joaat("WEAPON_MOLOTOV") || iVar0 == joaat("WEAPON_PETROLCAN"))
		{
			if (FIRE::IS_EXPLOSION_IN_AREA(3, Param0, Param1))
			{
				Global_95464 = 2;
			}
		}
	}
}

void func_260(struct<3> Param0, struct<3> Param1, var uParam2)//Position - 0xBC2
{
	if ((PED::IS_PED_DUCKING(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_COVER(PLAYER::PLAYER_PED_ID(), false)) || PED::GET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID()))
	{
		if (ENTITY::IS_ENTITY_IN_AREA(PLAYER::PLAYER_PED_ID(), Param0, Param1, false, true, 0))
		{
			if (*uParam2 < 0)
			{
				*uParam2 = MISC::GET_GAME_TIMER();
			}
			else if (MISC::GET_GAME_TIMER() > *uParam2 + 10000)
			{
				Global_95464 = 1;
			}
		}
		else
		{
			*uParam2 = -1;
		}
	}
	else
	{
		*uParam2 = -1;
	}
}

void func_261(struct<3> Param0, struct<3> Param1)//Position - 0xC39
{
	int iVar0;
	if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &iVar0, true))
	{
		if (iVar0 == joaat("WEAPON_RPG"))
		{
			if (MISC::IS_PROJECTILE_TYPE_IN_AREA(Param0, Param1, iVar0, true))
			{
				Global_95464 = 0;
			}
		}
	}
}

int func_262(int iParam0)//Position - 0x1173
{
	switch (iParam0)
	{
		case 0:
			return 1;
			break;
		case 1:
			return 2;
			break;
		case 2:
			return 4;
			break;
	}
	return 0;
}

int func_263()//Position - 0x16F6
{
	if (Global_97363 != -1)
	{
		return 1;
	}
	return 0;
}

int func_264(int iParam0, int iParam1)//Position - 0x1AD3
{
	*iParam1 = 0;
	switch (iParam0)
	{
		case 0:
			return 14;
			break;
		case 1:
			return 15;
			break;
		case 2:
			return 17;
			break;
		case 5:
			return 44;
			break;
		case 6:
			return 19;
			break;
		case 7:
			return 37;
			break;
		case 10:
			return 20;
			break;
		case 8:
			return 0;
			break;
		case 9:
			return 2;
			break;
		case 11:
			return 40;
			break;
		case 12:
			*iParam1 = joaat("S_F_M_Maid_01");
			return 145;
			break;
		case 13:
			return 32;
			break;
		case 14:
			return 24;
			break;
		case 3:
			*iParam1 = joaat("S_F_M_Maid_01");
			return 145;
			break;
		case 4:
			*iParam1 = joaat("S_M_M_Gardener_01");
			return 145;
			break;
		case 15:
			return __LIB_0__::func_684();
			break;
	}
	return 145;
}

void func_265(int iParam0)//Position - 0x1BE0
{
	switch (Global_95447[iParam0])
	{
		case 137:
		case 138:
		case 139:
		case 140:
		case 141:
			break;
		default:
			Global_113386.f_18514[iParam0] = Global_95447[iParam0];
			break;
	}
}

void func_266(int iParam0, int iParam1)//Position - 0x25F1
{
	Global_32020[iParam0 /*11*/].f_10 = iParam1;
}

void func_267(int iParam0, int iParam1, var uParam2, int iParam3, int iParam4, char* sParam5, int iParam6)//Position - 0x273E
{
	switch (iParam0)
	{
		case 0:
			*iParam1 = joaat("v_ilev_mm_doorson");
			*uParam2 = { -806.8f, 174f, 76.9f };
			StringCopy(sParam5, "V_Michael_1_Son", 64);
			*iParam3 = 226;
			*iParam4 = 1850241841;
			*iParam6 = 0;
			break;
		case 1:
			*iParam1 = joaat("v_ilev_mm_doordaughter");
			*uParam2 = { -802.7f, 176.2f, 76.9f };
			StringCopy(sParam5, "V_Michael_1_Daught", 64);
			*iParam3 = 226;
			*iParam4 = -378388578;
			*iParam6 = 0;
			break;
		case 2:
			*iParam1 = joaat("v_ilev_mm_doorw");
			*uParam2 = { -805f, 171.9f, 76.9f };
			StringCopy(sParam5, "V_Michael_1_WC", 64);
			*iParam3 = 226;
			*iParam4 = -1223666875;
			*iParam6 = 0;
			break;
		case 3:
			*iParam1 = joaat("v_ilev_mm_doorw");
			*uParam2 = { -809.281f, 177.855f, 76.89f };
			StringCopy(sParam5, "V_Michael_1_WC", 64);
			*iParam3 = 226;
			*iParam4 = 1893421006;
			*iParam6 = 0;
			break;
		case 4:
			*iParam1 = joaat("v_ilev_mm_fridge_l");
			*uParam2 = { -804.1f, 185.8f, 72.7f };
			StringCopy(sParam5, "V_Michael_G_Kitche", 64);
			*iParam3 = 226;
			*iParam4 = 825812850;
			*iParam6 = 1;
			break;
		case 5:
			*iParam1 = joaat("v_ilev_mm_fridge_r");
			*uParam2 = { -802.8f, 186.3f, 72.7f };
			StringCopy(sParam5, "V_Michael_G_Kitche", 64);
			*iParam3 = 226;
			*iParam4 = 825812850;
			*iParam6 = 1;
			break;
		case 6:
			*iParam1 = joaat("prop_bh1_48_backdoor_l");
			*uParam2 = { -796.5657f, 177.2214f, 73.0405f };
			StringCopy(sParam5, "V_Michael_G_Kitche", 64);
			*iParam3 = 41;
			*iParam4 = 776026812;
			*iParam6 = 1;
			break;
		case 7:
			*iParam1 = joaat("prop_bh1_48_backdoor_r");
			*uParam2 = { -794.5051f, 178.0124f, 73.0405f };
			StringCopy(sParam5, "V_Michael_G_Kitche", 64);
			*iParam3 = 42;
			*iParam4 = 698422331;
			*iParam6 = 1;
			break;
		case 8:
			*iParam1 = joaat("v_ilev_mm_doorm_l");
			*uParam2 = { -817f, 179f, 73f };
			StringCopy(sParam5, "V_Michael_G_Front", 64);
			*iParam3 = 38;
			*iParam4 = -2097039789;
			*iParam6 = 1;
			break;
		case 9:
			*iParam1 = joaat("v_ilev_mm_doorm_r");
			*uParam2 = { -816f, 178f, 73f };
			StringCopy(sParam5, "V_Michael_G_Front", 64);
			*iParam3 = 39;
			*iParam4 = -2127416656;
			*iParam6 = 1;
			break;
		case 10:
			*iParam1 = joaat("v_ilev_trev_doorbath");
			*uParam2 = { -1150.158f, -1518.768f, 10.781f };
			StringCopy(sParam5, "rm_bathroom", 64);
			*iParam3 = 226;
			*iParam4 = 2007032394;
			*iParam6 = 0;
			break;
		default:
			*iParam1 = 0;
			*uParam2 = { 0f, 0f, 0f };
			StringCopy(sParam5, "NULL", 64);
			*iParam3 = 226;
			*iParam4 = 825812850;
			*iParam6 = 0;
			break;
	}
}

int func_268(int iParam0, char* sParam1)//Position - 0x2A06
{
	switch (iParam0)
	{
		case 0:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_12", 64);
			return 1;
			break;
		case 2:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_9", 64);
			return 1;
			break;
		case 3:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_9", 64);
			return 1;
			break;
		case 4:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_10", 64);
			return 1;
			break;
		case 18:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_3@BASE", 64);
			return 1;
			break;
		case 5:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_2@IG_2_P2", 64);
			return 1;
			break;
		case 21:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_2@IG_2_P2", 64);
			return 1;
			break;
		case 9:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_3@SLEEPING", 64);
			return 1;
			break;
		case 11:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_5@BASE", 64);
			return 1;
			break;
		case 12:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_9_2@", 64);
			return 1;
			break;
		case 13:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_9_7@", 64);
			return 1;
			break;
		case 14:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_9_8@", 64);
			return 1;
			break;
		case 15:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_9_11@", 64);
			return 1;
			break;
		case 16:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_1@BASE", 64);
			return 1;
			break;
		case 17:
			StringCopy(sParam1, "TIMETABLE@JIMMY@IG_4@BASE", 64);
			return 1;
			break;
		case 20:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_2", 64);
			return 1;
			break;
		case 24:
			StringCopy(sParam1, "SWITCH@MICHAEL@AROUND_THE_TABLE_SELFISH", 64);
			return 1;
			break;
		case 19:
			StringCopy(sParam1, "SWITCH@MICHAEL@ON_SOFA", 64);
			return 1;
			break;
		case 25:
			StringCopy(sParam1, "TIMETABLE@JIMMY@MICS3_IG_15@", 64);
			return 1;
			break;
		case 26:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_3@BASE", 64);
			return 1;
			break;
		case 32:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_5@BASE", 64);
			return 1;
			break;
		case 33:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_8@BASE", 64);
			return 1;
			break;
		case 38:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_7@BASE", 64);
			return 1;
			break;
		case 34:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_2@IDLE_A", 64);
			return 1;
			break;
		case 35:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_15@BASE", 64);
			return 1;
			break;
		case 37:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_4@", 64);
			return 1;
			break;
		case 36:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_1@BASE", 64);
			return 1;
			break;
		case 28:
			StringCopy(sParam1, "TIMETABLE@TRACY@IG_14@", 64);
			return 1;
			break;
		case 43:
			StringCopy(sParam1, "TIMETABLE@TRACY@SLEEP@", 64);
			return 1;
			break;
		case 44:
			StringCopy(sParam1, "TIMETABLE@TRACY@FAMR_IG_4", 64);
			return 1;
			break;
		case 29:
			StringCopy(sParam1, "TIMETABLE@TRACY@FAMR_IG_4", 64);
			return 1;
			break;
		case 30:
			StringCopy(sParam1, "TIMETABLE@TRACY@FAMR_IG_4", 64);
			return 1;
			break;
		case 45:
			StringCopy(sParam1, "TIMETABLE@TRACY@FAMR_IG_5", 64);
			return 1;
			break;
		case 47:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_9", 64);
			return 1;
			break;
		case 48:
			StringCopy(sParam1, "TIMETABLE@AMANDA@FACEMASK@BASE", 64);
			return 1;
			break;
		case 68:
			StringCopy(sParam1, "TIMETABLE@AMANDA@FACEMASK@BASE", 64);
			return 1;
			break;
		case 50:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_4", 64);
			return 1;
			break;
		case 69:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_4", 64);
			return 1;
			break;
		case 51:
			StringCopy(sParam1, "TIMETABLE@AMANDA@MAGDEMO_IG_2_SYNCED", 64);
			return 1;
			break;
		case 52:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_7", 64);
			return 1;
			break;
		case 67:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_7", 64);
			return 1;
			break;
		case 53:
			StringCopy(sParam1, "TIMETABLE@AMANDA@DRUNK_IN_KITCHEN@", 64);
			return 1;
			break;
		case 54:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_5", 64);
			return 1;
			break;
		case 70:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_5", 64);
			return 1;
			break;
		case 64:
			StringCopy(sParam1, "TIMETABLE@AMANDA@DRUNK@BASE", 64);
			return 1;
			break;
		case 55:
			StringCopy(sParam1, "TIMETABLE@AMANDA@DRUNK@BASE", 64);
			return 1;
			break;
		case 71:
			StringCopy(sParam1, "TIMETABLE@AMANDA@DRUNK@BASE", 64);
			return 1;
			break;
		case 56:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_2_P2", 64);
			return 1;
			break;
		case 57:
			StringCopy(sParam1, "TIMETABLE@AMANDA@DRUNK@BASE", 64);
			return 1;
			break;
		case 58:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_3", 64);
			return 1;
			break;
		case 59:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_11", 64);
			return 1;
			break;
		case 72:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_11", 64);
			return 1;
			break;
		case 60:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_11", 64);
			return 1;
			break;
		case 61:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_6", 64);
			return 1;
			break;
		case 63:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_6", 64);
			return 1;
			break;
		case 62:
			StringCopy(sParam1, "TIMETABLE@AMANDA@IG_6", 64);
			return 1;
			break;
		case 65:
			StringCopy(sParam1, "SWITCH@MICHAEL@BEDROOM", 64);
			return 1;
			break;
		case 66:
			StringCopy(sParam1, "SWITCH@MICHAEL@GETS_READY", 64);
			return 1;
			break;
		case 73:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_6", 64);
			return 1;
			break;
		case 74:
			StringCopy(sParam1, "TIMETABLE@REUNITED@IG_7", 64);
			return 1;
			break;
		case 76:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_SURFACE@BASE", 64);
			return 1;
		case 78:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_SURFACE@BASE", 64);
			return 1;
		case 85:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_SURFACE@BASE", 64);
			return 1;
		case 77:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_SURFACE_1@", 64);
			return 1;
		case 79:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_WINDOW@BASE", 64);
			return 1;
			break;
		case 86:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_WINDOW@BASE", 64);
			return 1;
			break;
		case 80:
			StringCopy(sParam1, "TIMETABLE@MAID@CLEANING_WINDOW@BASE", 64);
			return 1;
			break;
		case 81:
			StringCopy(sParam1, "TIMETABLE@MAID@IG_2@", 64);
			return 1;
			break;
		case 82:
			StringCopy(sParam1, "TIMETABLE@MAID@IG_8@", 64);
			return 1;
			break;
		case 83:
			StringCopy(sParam1, "TIMETABLE@MAID@IG_8@", 64);
			return 1;
			break;
		case 89:
			StringCopy(sParam1, "TIMETABLE@GARDENER@CLEAN_POOL@", 64);
			return 1;
			break;
		case 90:
			StringCopy(sParam1, "TIMETABLE@GARDENER@LAWNMOW@", 64);
			return 1;
			break;
		case 91:
			StringCopy(sParam1, "TIMETABLE@GARDENER@FILLING_CAN", 64);
			return 1;
			break;
		case 94:
			StringCopy(sParam1, "TIMETABLE@DENICE@IG_1", 64);
			return 1;
			break;
		case 95:
			StringCopy(sParam1, "TIMETABLE@DENICE@IG_2", 64);
			return 1;
			break;
		case 96:
			StringCopy(sParam1, "TIMETABLE@DENICE@IG_3", 64);
			return 1;
			break;
		case 98:
			StringCopy(sParam1, "TIMETABLE@DENICE@IG_3", 64);
			return 1;
			break;
		case 97:
			StringCopy(sParam1, "TIMETABLE@DENICE@IG_4", 64);
			break;
		case 100:
			StringCopy(sParam1, "TIMETABLE@RON@HAND_RADIO_IG_1", 64);
			return 1;
			break;
		case 101:
			StringCopy(sParam1, "TIMETABLE@RON@IG_2", 64);
			return 1;
			break;
		case 119:
			StringCopy(sParam1, "TIMETABLE@RON@IG_2", 64);
			return 1;
			break;
		case 102:
			StringCopy(sParam1, "TIMETABLE@RON@IG_3_COUCH", 64);
			return 1;
			break;
		case 103:
			StringCopy(sParam1, "TIMETABLE@RON@IG_3_COUCH", 64);
			return 1;
			break;
		case 104:
			StringCopy(sParam1, "TIMETABLE@RON@IG_4_SMOKING_METH", 64);
			return 1;
			break;
		case 105:
			StringCopy(sParam1, "TIMETABLE@RON@MOONSHINE_IG_5", 64);
			return 1;
			break;
		case 106:
			StringCopy(sParam1, "TIMETABLE@RON@IG_6", 64);
			return 1;
			break;
		case 107:
			StringCopy(sParam1, "TIMETABLE@MICHAEL@ON_CHAIRIDLE_A", 64);
			return 1;
			break;
		case 108:
			StringCopy(sParam1, "TIMETABLE@MICHAEL@ON_CLUBCHAIRBASE", 64);
			return 1;
			break;
		case 109:
			StringCopy(sParam1, "TIMETABLE@MICHAEL@ON_SOFABASE", 64);
			return 1;
			break;
		case 110:
			StringCopy(sParam1, "TIMETABLE@MICHAEL@TALK_PHONEbase", 64);
			return 1;
			break;
		case 111:
			StringCopy(sParam1, "TIMETABLE@MICHAEL@TALK_PHONEEXIT_A", 64);
			return 1;
			break;
		case 116:
			StringCopy(sParam1, "TIMETABLE@TREVOR@IG_1", 64);
			return 1;
			break;
		case 117:
			StringCopy(sParam1, "TIMETABLE@TREVOR@TRV_IG_2", 64);
			return 1;
			break;
		case 112:
			StringCopy(sParam1, "TIMETABLE@TREVOR@SMOKING_METH@BASE", 64);
			return 1;
			break;
		case 113:
			StringCopy(sParam1, "TIMETABLE@TREVOR@ON_THE_TOILET", 64);
			return 1;
			break;
		case 114:
			StringCopy(sParam1, "TIMETABLE@TREVOR@GRENADE_THROWING", 64);
			return 1;
			break;
		case 115:
			StringCopy(sParam1, "SWITCH@TREVOR@BED", 64);
			return 1;
			break;
		case 118:
			StringCopy(sParam1, "TIMETABLE@RON@IG_1", 64);
			return 1;
			break;
		case 120:
			StringCopy(sParam1, "TIMETABLE@RON@IG_3", 64);
			return 1;
			break;
		case 121:
			StringCopy(sParam1, "TIMETABLE@RON@IG_4", 64);
			return 1;
			break;
		case 122:
			StringCopy(sParam1, "TIMETABLE@PATRICIA@PAT_IG_1", 64);
			return 1;
			break;
		case 123:
			StringCopy(sParam1, "TIMETABLE@PATRICIA@PAT_IG_2@BASE", 64);
			return 1;
			break;
		case 124:
			StringCopy(sParam1, "TIMETABLE@PATRICIA@PAT_IG_3@", 64);
			return 1;
			break;
		case 126:
			StringCopy(sParam1, "TIMETABLE@FLOYD@CLEAN_KITCHEN@BASE", 64);
			return 1;
			break;
		case 127:
			StringCopy(sParam1, "TIMETABLE@FLOYD@CRYINGONBED@BASE", 64);
			return 1;
			break;
		case 130:
			StringCopy(sParam1, "TIMETABLE@FLOYD@CALLING", 64);
			return 1;
			break;
		case 131:
			StringCopy(sParam1, "TIMETABLE@FLOYD@ENDING_CALL", 64);
			return 1;
			break;
		case 132:
			StringCopy(sParam1, "TIMETABLE@FLOYD@HIDING_BEHIND_COUCH", 64);
			return 1;
			break;
		case 133:
			StringCopy(sParam1, "TIMETABLE@FLOYD@HIDING_BEHIND_COUCH", 64);
			return 1;
			break;
		case 134:
			StringCopy(sParam1, "TIMETABLE@FLOYD@HIDING_BEHIND_COUCH", 64);
			return 1;
			break;
		case 135:
			StringCopy(sParam1, "TIMETABLE@FLOYD@CRYINGONBED_IG_5@", 64);
			return 1;
			break;
	}
	StringCopy(sParam1, "", 64);
	return 0;
}

int func_269(var uParam0, var uParam1, char* sParam2)//Position - 0x3324
{
	AUDIO::STOP_STREAM();
	if ((*uParam0 == 0 && *uParam1 == -1) && MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
	{
		return 0;
	}
	if (*uParam0 != 0)
	{
		AUDIO::STOP_STREAM();
		*uParam0 = 0;
	}
	if (*uParam1 != -1)
	{
		AUDIO::STOP_SOUND(*uParam1);
		*uParam1 = -1;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
	{
		AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(sParam2);
		if (MISC::ARE_STRINGS_EQUAL(sParam2, "AFT_SON_PORN"))
		{
			AUDIO::SET_AUDIO_FLAG("DisableReplayScriptStreamRecording", false);
		}
	}
	StringCopy(sParam2, "", 64);
	return 1;
}

void func_270(int* iParam0)//Position - 0x33A0
{
	if (!PED::IS_PED_INJURED(*iParam0))
	{
		if (TASK::GET_SCRIPT_TASK_STATUS(*iParam0, joaat("SCRIPT_TASK_PLAY_ANIM")) != 0)
		{
			PED::SET_PED_KEEP_TASK(*iParam0, true);
		}
	}
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(*iParam0, true))
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(iParam0);
		}
	}
	else
	{
		ENTITY::SET_PED_AS_NO_LONGER_NEEDED(iParam0);
	}
}

int func_271(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x890
{
	struct<14> Var0;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam7 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam5 < 3)
	{
		if (BitTest(iParam4, bParam5))
		{
			return 0;
		}
	}
	if (iParam4 < 1 || iParam4 > 7)
	{
		return 0;
	}
	if (iParam1 == -1)
	{
		return 0;
	}
	if (iParam1 == 83 || iParam2 == 83)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_764 < 8)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__::func_713(iParam3);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam6);
		Var0.f_5 = iParam7;
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam4;
		Var0.f_6 = bParam5;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_13 = iParam12;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_651[Global_113386.f_7688.f_764 /*14*/] = { Var0 };
		Global_113386.f_7688.f_764++;
		__LIB_0__::func_688(0);
		__LIB_0__::func_688(1);
		__LIB_0__::func_688(2);
		return 1;
	}
	return 0;
}

int func_272(int iParam0, char* sParam1, int iParam2)//Position - 0x34E4
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (PLAYER::GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() == 64 && ENTITY::GET_ENTITY_MODEL(iParam0) != joaat("prop_bong_01"))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false) && !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0, true))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iParam0, true, false);
		}
		return 1;
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (ENTITY::IS_ENTITY_A_VEHICLE(iParam0) && PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
		{
			if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iParam0), false))
			{
				return 0;
			}
		}
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iParam0, true))
		{
			return 0;
		}
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("prop_bong_01"))
		{
			return 0;
		}
	}
	if (Global_100491)
	{
		return 1;
	}
	if (CAM::IS_SCREEN_FADED_OUT())
	{
		return 1;
	}
	if (__LIB_13__::func_94() || MISC::GET_MISSION_FLAG())
	{
		if (ENTITY::IS_ENTITY_ON_SCREEN(iParam0))
		{
			return 0;
		}
		return 1;
	}
	sParam1 = sParam1;
	iParam2 = iParam2;
	return 0;
}

int func_273(int iParam0, int iParam1)//Position - 0xCE1
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_684();
	if ((iParam0 >= iVar0 || iParam1 >= iVar0) || iParam0 == iParam1)
	{
		return 0;
	}
	iVar1 = __LIB_14__::func_791(iParam0);
	iVar2 = __LIB_14__::func_791(iParam1);
	if (iVar1 != 7 && iVar2 != 7)
	{
		iVar3 = __LIB_13__::func_95(iVar1, iVar2);
		if (iVar3 != 10)
		{
			if (__LIB_17__::func_225(iVar3) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_274(int* iParam0, int iParam1)//Position - 0xC3B
{
	PED::SET_PED_CAN_BE_TARGETTED(*iParam0, false);
	PED::SET_PED_CONFIG_FLAG(*iParam0, 20, true);
	PED::SET_RAGDOLL_BLOCKING_FLAGS(*iParam0, 16);
	if (iParam1 != joaat("NO_RELATIONSHIP"))
	{
		PED::SET_PED_RELATIONSHIP_GROUP_HASH(*iParam0, iParam1);
	}
}

int func_275(int iParam0, var uParam1)//Position - 0x15A6
{
	switch (Global_95447[iParam0])
	{
		case 11:
			*uParam1 = 0.4f;
			return 1;
			break;
		case 12:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 13:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 14:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 15:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 20:
			*uParam1 = 0.5f;
			return 1;
			break;
		case 37:
			*uParam1 = 1.25f;
			return 1;
			break;
		case 33:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 79:
		case 86:
		case 80:
			*uParam1 = 0.5f;
			return 1;
			break;
		case 81:
			*uParam1 = 0.5f;
			return 1;
			break;
		case 50:
		case 69:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 90:
			*uParam1 = 1f;
			return 1;
			break;
		case 107:
			*uParam1 = 0.5f;
			return 1;
			break;
		case 108:
			*uParam1 = 0.8f;
			return 1;
			break;
		case 121:
			*uParam1 = 0.75f;
			return 1;
			break;
		case 112:
			*uParam1 = 1.5f;
			return 1;
			break;
		case 113:
			*uParam1 = 1.25f;
			return 1;
			break;
		case 123:
			*uParam1 = 0.8f;
			return 1;
			break;
		case 126:
			*uParam1 = 0.5f;
			return 1;
			break;
		case 137:
		case 138:
			if (iParam0 == 13 || iParam0 == 13)
			{
				*uParam1 = 0.3f;
				return 1;
			}
			break;
	}
	*uParam1 = 0f;
	return 0;
}

void func_276(int iParam0, struct<3> Param1, float fParam2, int iParam3)//Position - 0x1FA9F
{
	if (iParam0 == iParam3)
	{
		return;
	}
	if (iParam0 == 76)
	{
		return;
	}
	if (iParam3 == 76)
	{
		return;
	}
	Global_43053[iParam0 /*5*/] = { Param1 };
	Global_43053[iParam0 /*5*/].f_3 = fParam2;
	Global_43053[iParam0 /*5*/].f_4 = iParam3;
}

int func_277(int iParam0)//Position - 0x1FAE8
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (Global_113386.f_7688.f_651[iVar0 /*14*/] == iParam0)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_278(int iParam0)//Position - 0x21ABA
{
	switch (iParam0)
	{
		case 18:
		case 42:
		case 43:
		case 65:
		case 66:
		case 135:
			return 1;
			break;
	}
	return 0;
}

int func_279(int iParam0, int iParam1, int iParam2)//Position - 0x21C8C
{
	if (INTERIOR::IS_VALID_INTERIOR(iParam1))
	{
		if (INTERIOR::IS_INTERIOR_READY(iParam1))
		{
			INTERIOR::FORCE_ROOM_FOR_ENTITY(iParam0, iParam1, iParam2);
			return 1;
		}
		else
		{
			INTERIOR::RETAIN_ENTITY_IN_INTERIOR(iParam0, iParam1);
			return 1;
		}
	}
	return 0;
}

int func_280(int iParam0, var uParam1, int iParam2, int iParam3, int iParam4)//Position - 0x224DD
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = 1;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 1:
			*uParam1 = 1;
			*iParam2 = 2;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 2:
			*uParam1 = 1;
			*iParam2 = 2;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 3:
			*uParam1 = 1;
			*iParam2 = 2;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 4:
			*uParam1 = 1;
			*iParam2 = 2;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 5:
			*uParam1 = 1;
			*iParam2 = 2;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 6:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 7:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 8:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 9:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 1;
			*iParam4 = 1;
			return 1;
			break;
		case 10:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 11:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 12:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 13:
			*uParam1 = 1;
			*iParam2 = 3;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 14:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 15:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 16:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 17:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 18:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 19:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 20:
			*uParam1 = 1;
			*iParam2 = 4;
			*iParam3 = 6;
			*iParam4 = 0;
			return 1;
			break;
		case 21:
			*uParam1 = 1;
			*iParam2 = 6;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 22:
			*uParam1 = 1;
			*iParam2 = 6;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 23:
			*uParam1 = 1;
			*iParam2 = 6;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 25:
			*uParam1 = 1;
			*iParam2 = 8;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 26:
			*uParam1 = 1;
			*iParam2 = 8;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 27:
			*uParam1 = 1;
			*iParam2 = 8;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 28:
			*uParam1 = 1;
			*iParam2 = 8;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 24:
			*uParam1 = 1;
			*iParam2 = 5;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 29:
			*uParam1 = 1;
			*iParam2 = 9;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 31:
			*uParam1 = 1;
			*iParam2 = 1;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 30:
			*uParam1 = 1;
			*iParam2 = 10;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 32:
			*uParam1 = 1;
			*iParam2 = 7;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 33:
			*uParam1 = 1;
			*iParam2 = 11;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 34:
		case 35:
		case 36:
		case 37:
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
			*uParam1 = 1;
			*iParam2 = 12;
			return 0;
			break;
		case 44:
			*uParam1 = 2;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 45:
			*uParam1 = 2;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 46:
			*uParam1 = 2;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 2;
			return 1;
			break;
		case 47:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 48:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 49:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 50:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 51:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 52:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 53:
			*uParam1 = 2;
			*iParam2 = 2;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 54:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 55:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 56:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 57:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 58:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 59:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 60:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 61:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 6;
			*iParam4 = 0;
			return 1;
			break;
		case 62:
			*uParam1 = 2;
			*iParam2 = 3;
			*iParam3 = 7;
			*iParam4 = 0;
			return 1;
			break;
		case 63:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 64:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 65:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 66:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 67:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 68:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 69:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 70:
			*uParam1 = 2;
			*iParam2 = 4;
			*iParam3 = 6;
			*iParam4 = 0;
			return 1;
			break;
		case 73:
			*uParam1 = 2;
			*iParam2 = 8;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 71:
			*uParam1 = 2;
			*iParam2 = 6;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 72:
			*uParam1 = 2;
			*iParam2 = 5;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 74:
			*uParam1 = 2;
			*iParam2 = 9;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 75:
			*uParam1 = 2;
			*iParam2 = 10;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 76:
			*uParam1 = 2;
			*iParam2 = 1;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 77:
			*uParam1 = 2;
			*iParam2 = 7;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 78:
			*uParam1 = 2;
			*iParam2 = 11;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
			*uParam1 = 2;
			*iParam2 = 12;
			return 0;
			break;
		case 89:
			*uParam1 = 0;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 90:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 91:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 92:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 1;
			*iParam4 = 1;
			return 1;
			break;
		case 93:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 94:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 2;
			*iParam4 = 1;
			return 1;
			break;
		case 95:
			*uParam1 = 0;
			*iParam2 = 2;
			*iParam3 = 2;
			*iParam4 = 2;
			return 1;
			break;
		case 96:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 97:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 98:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 99:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 100:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 101:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 4;
			*iParam4 = 1;
			return 1;
			break;
		case 102:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 103:
			*uParam1 = 0;
			*iParam2 = 3;
			*iParam3 = 6;
			*iParam4 = 0;
			return 1;
			break;
		case 104:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 105:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 1;
			return 1;
			break;
		case 106:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 2;
			return 1;
			break;
		case 107:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 108:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 1;
			*iParam4 = 1;
			return 1;
			break;
		case 109:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 110:
			*uParam1 = 0;
			*iParam2 = 4;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 111:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 112:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 113:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 114:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 115:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 116:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 4;
			*iParam4 = 1;
			return 1;
			break;
		case 117:
			*uParam1 = 0;
			*iParam2 = 6;
			*iParam3 = 4;
			*iParam4 = 2;
			return 1;
			break;
		case 118:
			*uParam1 = 0;
			*iParam2 = 5;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 119:
			*uParam1 = 0;
			*iParam2 = 8;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 120:
			*uParam1 = 0;
			*iParam2 = 9;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 121:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 122:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 123:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 124:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 125:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 4;
			*iParam4 = 0;
			return 1;
			break;
		case 126:
			*uParam1 = 0;
			*iParam2 = 10;
			*iParam3 = 5;
			*iParam4 = 0;
			return 1;
			break;
		case 127:
			*uParam1 = 0;
			*iParam2 = 1;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 128:
			*uParam1 = 0;
			*iParam2 = 1;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 129:
			*uParam1 = 0;
			*iParam2 = 7;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 130:
			*uParam1 = 0;
			*iParam2 = 11;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 131:
		case 132:
		case 133:
		case 134:
		case 135:
			*uParam1 = 0;
			*iParam2 = 12;
			return 0;
			break;
		case 136:
			*uParam1 = 13;
			*iParam2 = 0;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 137:
			*uParam1 = 13;
			*iParam2 = 2;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 138:
			*uParam1 = 13;
			*iParam2 = 3;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 139:
			*uParam1 = 13;
			*iParam2 = 3;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 140:
			*uParam1 = 13;
			*iParam2 = 3;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 141:
			*uParam1 = 13;
			*iParam2 = 3;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 142:
			*uParam1 = 13;
			*iParam2 = 4;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 143:
			*uParam1 = 13;
			*iParam2 = 4;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 144:
			*uParam1 = 13;
			*iParam2 = 4;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 145:
			*uParam1 = 13;
			*iParam2 = 4;
			*iParam3 = 3;
			*iParam4 = 0;
			return 1;
			break;
		case 146:
			*uParam1 = 13;
			*iParam2 = 6;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 147:
			*uParam1 = 13;
			*iParam2 = 6;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 148:
			*uParam1 = 13;
			*iParam2 = 5;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 149:
			*uParam1 = 13;
			*iParam2 = 5;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 150:
			*uParam1 = 13;
			*iParam2 = 5;
			*iParam3 = 2;
			*iParam4 = 0;
			return 1;
			break;
		case 151:
			*uParam1 = 13;
			*iParam2 = 8;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 152:
			*uParam1 = 13;
			*iParam2 = 8;
			*iParam3 = 1;
			*iParam4 = 0;
			return 1;
			break;
		case 153:
			*uParam1 = 13;
			*iParam2 = 9;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 154:
			*uParam1 = 13;
			*iParam2 = 10;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 155:
			*uParam1 = 13;
			*iParam2 = 1;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 156:
			*uParam1 = 13;
			*iParam2 = 7;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 157:
			*uParam1 = 13;
			*iParam2 = 11;
			*iParam3 = 0;
			*iParam4 = 0;
			return 1;
			break;
		case 158:
		case 159:
		case 160:
		case 161:
			*uParam1 = 13;
			*iParam2 = 12;
			return 0;
			break;
	}
	*uParam1 = 16;
	*iParam2 = -1;
	*iParam3 = -1;
	*iParam4 = -1;
	return 0;
}

int func_281(struct<3> Param0, float fParam1)//Position - 0x6B1B8
{
	int iVar0;
	struct<3> Var1;
	float fVar2;
	int iVar3;
	struct<3> Var4;
	float fVar5;
	int iVar6;
	int iVar7;
	struct<3> Var8;
	if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		return 0;
	}
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
	{
		if (ENTITY::IS_ENTITY_ON_SCREEN(iVar0))
		{
			return 1;
		}
		Var1 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
		fVar2 = SYSTEM::VDIST2(Param0, Var1);
		if (fVar2 < (fParam1 * fParam1))
		{
			iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(1, 10);
			Var4 = { 0f, 0f, 0f };
			fVar5 = 0f;
			iVar6 = 0;
			iVar7 = 1;
			if (PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(Param0, iVar3, &Var4, &fVar5, &iVar6, iVar7, 3f, 0f))
			{
				Var8 = { 2f, 2f, 2f };
				if (CAM::IS_SPHERE_VISIBLE(Var4, SYSTEM::VMAG(Var8)))
				{
					return 1;
				}
				if (MISC::IS_AREA_OCCUPIED(Var4 - Var8, Var4 + Var8, false, true, true, false, false, 0, false))
				{
					return 1;
				}
				ENTITY::SET_ENTITY_COORDS(iVar0, Var4, true, false, false, true);
				ENTITY::SET_ENTITY_HEADING(iVar0, fVar5);
				return 0;
			}
			return 1;
		}
	}
	return 0;
}

int func_282(bool bParam0)//Position - 0x6B598
{
	int iVar0;
	if (!__LIB_0__::func_374(bParam0))
	{
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (BitTest(Global_113386.f_7688[iVar0 /*15*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (BitTest(Global_113386.f_7688.f_651[iVar0 /*14*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (BitTest(Global_113386.f_7688.f_765[iVar0 /*10*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_283(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, var uParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, var uParam23, var uParam24, var uParam25, var uParam26, var uParam27, var uParam28, var uParam29, var uParam30, var uParam31, var uParam32, var uParam33, var uParam34, var uParam35, var uParam36, var uParam37, var uParam38, var uParam39, var uParam40, var uParam41, var uParam42, var uParam43, var uParam44, var uParam45, var uParam46, var uParam47, var uParam48, var uParam49, var uParam50, var uParam51, var uParam52, var uParam53, var uParam54, var uParam55, var uParam56, var uParam57, var uParam58, var uParam59, var uParam60, var uParam61, var uParam62, var uParam63, var uParam64, var uParam65, var uParam66, var uParam67, var uParam68, var uParam69, var uParam70, var uParam71, var uParam72, var uParam73, var uParam74, var uParam75, var uParam76, var uParam77, var uParam78, var uParam79, var uParam80, var uParam81, var uParam82, var uParam83, var uParam84, var uParam85, var uParam86, var uParam87, var uParam88, var uParam89, var uParam90, var uParam91, var uParam92, var uParam93, var uParam94, var uParam95, var uParam96, var uParam97, var uParam98)//Position - 0x6F5B9
{
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		return 0;
	}
	if (ENTITY::GET_ENTITY_MODEL(iParam0) != iParam1)
	{
		return 0;
	}
	return 1;
}

int func_284(bool bParam0, int iParam1)//Position - 0x706E9
{
	if (iParam1 < 0 || iParam1 > 4)
	{
		return 0;
	}
	return Global_1998[bParam0 /*29*/].f_12[iParam1];
}

int func_285()//Position - 0x71730
{
	int iVar0;
	int iVar1;
	iVar0 = WEAPON::GET_SELECTED_PED_WEAPON(PLAYER::PLAYER_PED_ID());
	if (iVar0 == 0)
	{
		return 0;
	}
	iVar1 = WEAPON::GET_WEAPONTYPE_GROUP(iVar0);
	if (iVar1 == joaat("GROUP_THROWN"))
	{
		return 1;
	}
	return 0;
}

void func_286(int* iParam0)//Position - 0x725FB
{
	if (__LIB_1__::func_13(iParam0))
	{
		if (__LIB_2__::func_213(iParam0))
		{
			iParam0->f_1 = (__LIB_0__::func_616(BitTest(*iParam0, 4)) - iParam0->f_2);
			iParam0->f_2 = 0f;
			MISC::CLEAR_BIT(iParam0, 2);
		}
	}
}

int func_287(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, var uParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, var uParam23, var uParam24, var uParam25, var uParam26, var uParam27, var uParam28, var uParam29, var uParam30, var uParam31, var uParam32, int iParam33, int* iParam34)//Position - 0x73EE3
{
	float fVar0;
	float fVar1;
	float fVar2;
	if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&uParam1) && !MISC::IS_STRING_NULL_OR_EMPTY(&uParam17))
	{
		if (PED::IS_PED_INJURED(iParam0))
		{
			return 0;
		}
		if (!ENTITY::IS_ENTITY_PLAYING_ANIM(iParam0, &uParam1, &uParam17, 3))
		{
			return 0;
		}
		if (ENTITY::FIND_ANIM_EVENT_PHASE(&uParam1, &uParam17, "drinking", &fVar0, &fVar1))
		{
			if (MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@AMANDA@DRUNK_IN_KITCHEN@"))
			{
				fVar0 = 0.05f;
				fVar1 = 0.75f;
			}
		}
		else if (MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@AMANDA@DRUNK_IN_KITCHEN@"))
		{
			fVar0 = 0.05f;
			fVar1 = 0.75f;
		}
		else if (MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@RON@MOONSHINE_IG_5") || ((MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@MICHAEL@ON_SOFAIDLE_A") || MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@MICHAEL@ON_SOFAIDLE_B")) || MISC::ARE_STRINGS_EQUAL(&uParam1, "TIMETABLE@MICHAEL@ON_SOFAIDLE_C")))
		{
			fVar0 = 0.25f;
			fVar1 = 0.75f;
		}
		else
		{
			fVar0 = -1f;
			fVar1 = -1f;
			return 0;
		}
		fVar2 = -1f;
		if (ENTITY::IS_ENTITY_PLAYING_ANIM(iParam0, &uParam1, &uParam17, 1))
		{
			fVar2 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(iParam0, &uParam1, &uParam17);
		}
		else if (ENTITY::IS_ENTITY_PLAYING_ANIM(iParam0, &uParam1, &uParam17, 2))
		{
			fVar2 = PED::GET_SYNCHRONIZED_SCENE_PHASE(iParam33);
		}
		if (fVar2 > fVar0 && fVar2 < fVar1)
		{
			if (__LIB_1__::func_13(iParam34))
			{
				if (!__LIB_2__::func_213(iParam34))
				{
					__LIB_14__::func_599(iParam34);
				}
			}
			return 1;
		}
	}
	return 0;
}

Vector3 func_288(int iParam0, int iParam1, bool bParam2)//Position - 0x78A11
{
	struct<3> Var0[10];
	struct<3> Var1;
	int iVar2;
	float fVar3;
	int iVar4;
	int iVar5;
	float fVar6;
	int iVar7;
	float fVar8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	struct<3> Var12;
	Var1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iParam0, MISC::GET_RANDOM_FLOAT_IN_RANGE(-5f, 5f), MISC::GET_RANDOM_FLOAT_IN_RANGE(10f, 50f), 0f) };
	switch (iParam1)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
			Var0[0 /*3*/] = { -821.1343f, 155.6063f, 69.2348f };
			Var0[1 /*3*/] = { -793.1925f, 165.5698f, 70.3529f };
			Var0[2 /*3*/] = { -802.1196f, 191.1686f, 71.835f };
			Var0[3 /*3*/] = { -779.3063f, 184.1423f, 71.8354f };
			Var0[4 /*3*/] = { -781.6624f, 155.8212f, 66.4745f };
			Var0[5 /*3*/] = { -815.5585f, 179.7955f, 71.1531f };
			Var0[6 /*3*/] = { -806.1222f, 169.9548f, 71.8347f };
			Var0[7 /*3*/] = { -794.8763f, 179.0604f, 71.8347f };
			Var0[8 /*3*/] = { -798.2634f, 185.71f, 71.6055f };
			if (iParam1 == 0)
			{
				Var0[9 /*3*/] = { -808.704f, 169.7271f, 75.7504f };
			}
			else if (iParam1 == 1)
			{
				Var0[9 /*3*/] = { -800.1566f, 172.8743f, 75.7504f };
			}
			else if (iParam1 == 2)
			{
				Var0[9 /*3*/] = { -815.927f, 179.6694f, 75.7407f };
			}
			else
			{
				Var0[9 /*3*/] = { -802.9651f, 178.5574f, 75.7483f };
			}
			break;
		case 5:
		case 6:
		case 7:
			Var0[0 /*3*/] = { -38.2037f, -1459.5112f, 30.3994f };
			Var0[1 /*3*/] = { -86.7261f, -1471.7407f, 31.5351f };
			break;
		case 10:
		case 11:
		case 8:
		case 9:
			Var0[0 /*3*/] = { 1980.7178f, 3819.2358f, 31.4324f };
			Var0[1 /*3*/] = { 1974.146f, 3825.4822f, 31.3671f };
			Var0[2 /*3*/] = { 1989.2611f, 3820.5364f, 31.3665f };
			Var0[3 /*3*/] = { 1971.3353f, 3837.562f, 30.9977f };
			Var0[4 /*3*/] = { 1975.6251f, 3820.1807f, 32.4501f };
			Var0[5 /*3*/] = { 1969.5767f, 3815.7659f, 32.4287f };
			break;
		case 13:
			Var0[0 /*3*/] = { -1148.7909f, -1522.9229f, 9.633f };
			Var0[1 /*3*/] = { -1151.6345f, -1521.5306f, 3.3567f };
			Var0[2 /*3*/] = { -1145.8826f, -1542.1782f, 3.3772f };
			Var0[3 /*3*/] = { -1167.1464f, -1505.143f, 3.3794f };
			Var0[4 /*3*/] = { -1187.0579f, -1532.1716f, 3.3795f };
			Var0[5 /*3*/] = { -1156.8148f, -1517.5059f, 9.6327f };
			Var0[6 /*3*/] = { -1157.3087f, -1525.3698f, 9.6321f };
			Var0[7 /*3*/] = { -1148.6206f, -1519.6217f, 9.6327f };
			Var0[8 /*3*/] = { -1149.4954f, -1513.1079f, 9.6327f };
			if (Global_32005 == 4 || Global_32005 == 6)
			{
				Var0[8 /*3*/] = { 0f, 0f, 0f };
			}
			else
			{
				Var0[8 /*3*/] = { -1153.3973f, -1522.3252f, 9.6475f };
			}
			Var1 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iParam0, MISC::GET_RANDOM_FLOAT_IN_RANGE(-2.5f, 2.5f), MISC::GET_RANDOM_FLOAT_IN_RANGE(5f, 10f), 0f) };
			break;
	}
	fVar3 = 10000000f;
	iVar4 = 99;
	iVar5 = 0;
	iVar2 = 0;
	while (iVar2 < Var0.f_0)
	{
		if (!__LIB_0__::func_78(Var0[iVar2 /*3*/], 0f, 0f, 0f, 0))
		{
			fVar6 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var1, Var0[iVar2 /*3*/], true);
			if (fVar6 < fVar3)
			{
				fVar3 = fVar6;
				iVar4 = iVar2;
			}
			iVar5++;
		}
		iVar2++;
	}
	iVar7 = iVar4;
	if (bParam2)
	{
		fVar3 = 10000000f;
		iVar2 = 0;
		while (iVar2 < Var0.f_0)
		{
			if (!__LIB_0__::func_78(Var0[iVar2 /*3*/], 0f, 0f, 0f, 0))
			{
				fVar8 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var1, Var0[iVar2 /*3*/], true);
				if (fVar8 < fVar3 && iVar2 != iVar4)
				{
					fVar3 = fVar8;
					iVar7 = iVar2;
				}
			}
			iVar2++;
		}
	}
	else
	{
		if (iVar5 == 0)
		{
			Var9 = { IntToFloat(MISC::GET_RANDOM_INT_IN_RANGE(-40, 40)), IntToFloat(MISC::GET_RANDOM_INT_IN_RANGE(-40, 40)), 0f };
			if (PATHFIND::GET_SAFE_COORD_FOR_PED(Var9, false, &Var10, 0))
			{
				Var9 = { Var10 };
			}
			return Var9;
		}
		iVar7 = MISC::GET_RANDOM_INT_IN_RANGE(0, (iVar5 - 1));
	}
	Var11 = { Var0[iVar7 /*3*/] };
	if (PATHFIND::GET_SAFE_COORD_FOR_PED(Var0[iVar7 /*3*/], false, &Var12, 0))
	{
		Var11 = { Var12 };
	}
	if (__LIB_0__::func_78(Var11, 0f, 0f, 0f, 0))
	{
		return Var1;
	}
	return Var11;
}

int func_289(int iParam0)//Position - 0x79B2F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	switch (iParam0)
	{
		case 26:
		case 46:
		case 54:
		case 70:
		case 108:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
			iVar0 = MISC::GET_PREV_WEATHER_TYPE_HASH_NAME();
			iVar1 = MISC::GET_NEXT_WEATHER_TYPE_HASH_NAME();
			iVar2 = 0;
			iVar3 = 0;
			if ((iVar0 == joaat("rain") || iVar0 == joaat("THUNDER")) || iVar0 == joaat("snow"))
			{
				iVar2 = 1;
			}
			if ((iVar1 == joaat("rain") || iVar1 == joaat("THUNDER")) || iVar1 == joaat("snow"))
			{
				iVar2 = 1;
			}
			if (iVar2 || iVar3)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_290(int iParam0)//Position - 0x79D15
{
	switch (iParam0)
	{
		case 0:
		case 2:
		case 3:
		case 4:
			if (Global_95447[1] != 141 || Global_95447[2] != 141)
			{
				return 1;
			}
			break;
		case 19:
			if (Global_95447[1] != 141)
			{
				return 1;
			}
			break;
		case 56:
		case 57:
			if (Global_95447[0] != 141)
			{
				return 1;
			}
			break;
		case 58:
		case 74:
			if (Global_95447[1] != 141)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_291(int iParam0, int iParam1)//Position - 0x79DB8
{
	switch (Global_78583)
	{
		case 19:
			if ((iParam1 == 7 || iParam1 == 27) || iParam1 == 51)
			{
				return 1;
			}
			if (iParam0 == 4)
			{
				return 1;
			}
			break;
		case 49:
			if ((iParam0 == 0 || iParam0 == 1) || iParam0 == 2)
			{
				return 1;
			}
			break;
		case 52:
			if (((iParam1 == 7 || iParam1 == 23) || iParam1 == 27) || iParam1 == 51)
			{
				return 1;
			}
			break;
	}
	if (iParam1 == 5)
	{
		if (__LIB_0__::func_178(18) && !__LIB_0__::func_178(20))
		{
			return 1;
		}
	}
	return 0;
}

int func_292(int iParam0)//Position - 0x7A0B2
{
	if (iParam0 != 10)
	{
		if (Global_95447[10] == 118 || Global_95447[10] == 121)
		{
			return 1;
		}
	}
	if (iParam0 != 8)
	{
		if (Global_95447[8] == 108)
		{
			return 1;
		}
	}
	if (iParam0 != 9)
	{
		if (Global_95447[9] == 114 || Global_95447[9] == 116)
		{
			return 1;
		}
	}
	if (iParam0 != 11)
	{
		if (Global_95447[11] == 123 || Global_95447[11] == 116)
		{
			return 1;
		}
	}
	return 0;
}

int func_293(int iParam0)//Position - 0x7A151
{
	if (iParam0 != 10)
	{
		if (Global_95447[10] == 119)
		{
			return 1;
		}
	}
	if (iParam0 != 8)
	{
		if (Global_95447[8] == 107 || Global_95447[8] == 110)
		{
			return 1;
		}
	}
	return 0;
}

int func_294(int iParam0)//Position - 0x7A19C
{
	if (iParam0 != 1)
	{
		if (Global_95447[1] == 26 || Global_95447[1] == 46)
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_95447[2] == 54 || Global_95447[2] == 70)
		{
			return 1;
		}
	}
	return 0;
}

int func_295(int iParam0)//Position - 0x7A1F3
{
	if (iParam0 != 0)
	{
		if (((((Global_95447[0] == 12 || Global_95447[0] == 13) || Global_95447[0] == 14) || Global_95447[0] == 15) || Global_95447[0] == 56) || Global_95447[0] == 57)
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if (((((Global_95447[1] == 37 || Global_95447[1] == 12) || Global_95447[1] == 13) || Global_95447[1] == 14) || Global_95447[1] == 15) || Global_95447[1] == 58)
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if ((Global_95447[2] == 58 || Global_95447[2] == 56) || Global_95447[2] == 57)
		{
			return 1;
		}
	}
	return 0;
}

int func_296(int iParam0)//Position - 0x7A301
{
	if (iParam0 != 0)
	{
		if ((((Global_95447[0] == 5 || Global_95447[0] == 21) || Global_95447[0] == 19) || Global_95447[0] == 25) || Global_95447[0] == 4)
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if ((((Global_95447[1] == 4 || Global_95447[1] == 35) || Global_95447[1] == 34) || Global_95447[1] == 33) || Global_95447[1] == 32)
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_95447[2] == 4)
		{
			return 1;
		}
	}
	return 0;
}

int func_297(int iParam0)//Position - 0x7A601
{
	if (iParam0 != 1)
	{
		if (Global_95447[1] == 31)
		{
			return 1;
		}
	}
	if (iParam0 != 0)
	{
		if (Global_95447[0] == 6)
		{
			return 1;
		}
	}
	return 0;
}

int func_298(float fParam0)//Position - 0x7A6D3
{
	int iVar0;
	if (Global_78584 < 0)
	{
		return 0;
	}
	iVar0 = MISC::GET_GAME_TIMER();
	if (iVar0 < (Global_78584 + SYSTEM::ROUND((fParam0 * 1000f))))
	{
		return 0;
	}
	return 1;
}

int func_299(var uParam0)//Position - 0x7A708
{
	if (BitTest(Global_113386.f_18574[35 /*6*/], 3) && !BitTest(Global_113386.f_18574[36 /*6*/], 3))
	{
		*uParam0 = 125;
		return 1;
	}
	*uParam0 = 141;
	return 0;
}

int func_300()//Position - 0x7C046
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -773.72314f, 168.8327f, 65f, -772.2901f, 136.81564f, 68f, 22f, false, true, 0))
	{
		return 0;
	}
	return 1;
}

int func_301(int iParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, var uParam5)//Position - 0x7F179
{
	if (iParam0 != 141)
	{
	}
	StringCopy(sParam1, sParam2, 64);
	StringCopy(sParam3, sParam4, 64);
	*uParam5 = 1;
	return 1;
}

void func_302(int iParam0, int iParam1)//Position - 0x7F796
{
	*iParam0 = (*iParam0 - (*iParam0 && iParam1));
}

int func_303(int iParam0, int iParam1, int iParam2)//Position - 0x8398D
{
	switch (iParam1)
	{
		case 18:
		case 16:
			switch (iParam0)
			{
				case 0:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 33:
			switch (iParam0)
			{
				case 1:
					*iParam2 = 1;
					return 1;
					break;
			}
			break;
		case 38:
		case 29:
		case 30:
		case 44:
			switch (iParam0)
			{
				case 1:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 56:
		case 57:
			switch (iParam0)
			{
				case 0:
				case 2:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 59:
		case 72:
		case 60:
			switch (iParam0)
			{
				case 2:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 96:
		case 98:
		case 95:
			switch (iParam0)
			{
				case 5:
					*iParam2 = 1;
					return 1;
					break;
			}
			break;
		case 97:
			switch (iParam0)
			{
				case 5:
					*iParam2 = 256;
					return 1;
					break;
			}
			break;
		case 122:
		case 123:
			switch (iParam0)
			{
				case 11:
					*iParam2 = 1;
					return 1;
					break;
			}
			break;
		case 117:
			switch (iParam0)
			{
				case 9:
					*iParam2 = 4;
					return 1;
					break;
				case 11:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 110:
			switch (iParam0)
			{
				case 8:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
		case 128:
		case 130:
			switch (iParam0)
			{
				case 13:
					*iParam2 = 4;
					return 1;
					break;
			}
			break;
	}
	*iParam2 = 0;
	return 0;
}

int func_304(int iParam0)//Position - 0x86025
{
	if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, joaat("SCRIPT_TASK_USE_MOBILE_PHONE")) != 1)
	{
		TASK::TASK_USE_MOBILE_PHONE(iParam0, true, 1);
		PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 8208);
		PED::SET_PED_CONFIG_FLAG(iParam0, 185, true);
		PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
		PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
		return 1;
	}
	return 1;
}

int func_305(int iParam0, int iParam1, struct<3> Param2, struct<3> Param3, char* sParam4)//Position - 0x88DF5
{
	float fVar0;
	float fVar1;
	if (TASK::GET_SCRIPT_TASK_STATUS(iParam0, joaat("SCRIPT_TASK_VEHICLE_DRIVE_WANDER")) == 1)
	{
		return 1;
	}
	switch (iParam1)
	{
		case 2:
			fVar0 = SYSTEM::VMAG(Param3 - Param2);
			fVar1 = (fVar0 - 2f);
			if (SYSTEM::VDIST2(Param2, ENTITY::GET_ENTITY_COORDS(iParam0, true)) > (fVar1 * fVar1))
			{
				return 1;
			}
			StringCopy(sParam4, "family_m_wife_drive", 32);
			return 0;
			break;
		case 1:
			fVar0 = SYSTEM::VMAG(Param3 - Param2);
			fVar1 = (fVar0 - 2f);
			if (SYSTEM::VDIST2(Param2, ENTITY::GET_ENTITY_COORDS(iParam0, true)) > (fVar1 * fVar1))
			{
				return 1;
			}
			StringCopy(sParam4, "family_m_daughter_drive", 32);
			return 0;
			break;
	}
	return 1;
}

int func_306(int iParam0, char* sParam1, float fParam2, var uParam3, var uParam4, var uParam5)//Position - 0x89BCB
{
	*uParam4 = 0;
	*uParam5 = 1;
	switch (iParam0)
	{
		case 79:
			StringCopy(sParam1, "v_michael_g_lounge", 32);
			*fParam2 = 1f;
			*uParam3 = 4;
			return 1;
			break;
		case 86:
			StringCopy(sParam1, "v_michael_g_lounge", 32);
			*fParam2 = 1f;
			*uParam3 = 4;
			return 1;
			break;
		case 85:
			StringCopy(sParam1, "v_michael_g_lounge", 32);
			*fParam2 = 0.35f;
			*uParam3 = 4;
			return 1;
			break;
		case 128:
			StringCopy(sParam1, "v_TrailerRm", 32);
			*fParam2 = -1f;
			*uParam3 = 2;
			return 1;
			break;
		case 168:
			StringCopy(sParam1, "v_michael_g_lounge", 32);
			*fParam2 = -1f;
			*uParam3 = 4;
			return 1;
			break;
		case 169:
			StringCopy(sParam1, "v_michael_g_lounge", 32);
			*fParam2 = -1f;
			*uParam3 = 5;
			*uParam4 = 2;
			*uParam5 = 5;
			return 1;
			break;
		case 191:
			StringCopy(sParam1, "loungeB", 32);
			*fParam2 = 0.2f;
			*uParam3 = 1;
			return 1;
			break;
		case 291:
			StringCopy(sParam1, "rm_Lounge", 32);
			*fParam2 = 0.35f;
			*uParam3 = 3;
			return 1;
			break;
	}
	*uParam3 = -1;
	StringCopy(sParam1, "", 32);
	*fParam2 = -1f;
	*uParam4 = -1;
	*uParam5 = 0;
	return 0;
}

void func_307(int iParam0, int iParam1, int iParam2)//Position - 0x89CFF
{
	float fVar0;
	float fVar1;
	struct<3> Var2;
	float fVar3;
	float fVar4;
	struct<3> Var5;
	float fVar6;
	float fVar7;
	struct<3> Var8;
	float fVar9;
	float fVar10;
	struct<3> Var11;
	fVar0 = 0f;
	fVar1 = 0f;
	Var2 = { 0f, 0f, 0f };
	fVar3 = 0.938f;
	fVar4 = -0.24f;
	Var5 = { -0.09f, -0.45f, -0.069f };
	fVar6 = 0.998f;
	fVar7 = -1f;
	Var8 = { -0.33f, -0.54f, -0.09f };
	fVar9 = 0.818f;
	fVar10 = -0.03f;
	Var11 = { -0.18f, -0.42f, -0.229f };
	switch (iParam2)
	{
		case 4:
			switch (iParam1)
			{
				case 0:
					fVar0 = fVar3;
					fVar1 = fVar4;
					Var2 = { Var5 };
					break;
				case 1:
					fVar0 = fVar6;
					fVar1 = fVar7;
					Var2 = { Var8 };
					break;
				case 2:
					fVar0 = fVar9;
					fVar1 = fVar10;
					Var2 = { Var11 };
					break;
			}
			break;
		case 25:
			switch (iParam1)
			{
				case 0:
					fVar0 = 1.118f;
					fVar1 = 0.39f;
					Var2 = { 0.425f, -0.28f, 0.2f };
					break;
				case 1:
					fVar0 = (3.1415927f * 0.3464f);
					fVar1 = -0.15f;
					Var2 = { -0.06f, -0.6f, 0.2f };
					break;
			}
			break;
		case 18:
			fVar0 = (3.1415927f * 0.5f);
			fVar1 = 0f;
			Var2 = { 0f, 0f, 0.25f };
			break;
		case 20:
			fVar0 = 0f;
			fVar1 = 0.1f;
			Var2 = { 0.1f, 0.1f, 0f };
			break;
		case 26:
		case 46:
			fVar0 = (3.1415927f * -0.4163f);
			fVar1 = 0f;
			Var2 = { 0f, -0.6f, 0.7f };
			break;
		case 42:
		case 43:
			fVar0 = (3.1415927f * 0.5f);
			fVar1 = (3.1415927f * -0.5f);
			Var2 = { 0.39f, 0f, -0.75f };
			break;
		case 29:
		case 30:
		case 44:
			fVar0 = (3.1415927f * 0.5f);
			fVar1 = 0f;
			Var2 = { 0f, 0.15f, 0f };
			break;
		case 54:
		case 70:
			fVar0 = (3.1415927f * 0.4332f);
			fVar1 = 0f;
			Var2 = { 0f, -1f, -0.3f };
			break;
		case 64:
		case 55:
		case 71:
			fVar0 = (3.1415927f * 0.4132f);
			fVar1 = 0f;
			Var2 = { 0f, 0f, 0f };
			break;
		case 94:
			fVar0 = (3.1415927f * 0.5f);
			fVar1 = 0f;
			Var2 = { 0f, 0f, -0.6f };
			break;
		case 95:
			fVar0 = 0f;
			fVar1 = 0f;
			Var2 = { 0f, 0f, 0f };
			break;
		case 112:
			fVar0 = 0f;
			fVar1 = 0f;
			Var2 = { 0f, -0.4f, 0f };
			break;
		case 113:
			fVar0 = 0f;
			fVar1 = 0f;
			Var2 = { -0.25f, -0.5f, 0f };
			break;
		default:
			fVar0 = 0f;
			fVar1 = 0f;
			Var2 = { 0f, 0f, 0f };
			break;
	}
	PED::SET_PED_BOUNDS_ORIENTATION(iParam0, fVar0, fVar1, Var2);
}

int func_308(int* iParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, var uParam5, int iParam6)//Position - 0x8E4E0
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<16> Var3;
	char cVar4[64];
	float fVar5;
	float fVar6;
	int iVar7;
	float fVar8;
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
		{
			iVar0 = 0;
			if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
			{
				iVar0 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam2);
			}
			iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam3);
			iVar2 = (iVar0 - iVar1);
			StringCopy(&Var3, "", 64);
			if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
			{
				StringCopy(&Var3, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sParam2, 0, iVar2), 64);
			}
			cVar4 = { Var3 };
			StringConCat(&cVar4, sParam4, 64);
			if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(*iParam0))
			{
				if (!STREAMING::HAS_ANIM_DICT_LOADED(sParam1))
				{
					STREAMING::REQUEST_ANIM_DICT(sParam1);
					return 0;
				}
				if (!ENTITY::IS_ENTITY_PLAYING_ANIM(*iParam0, sParam1, &cVar4, 3))
				{
					if (!PED::IS_SYNCHRONIZED_SCENE_RUNNING(*uParam5))
					{
						return 0;
					}
					if (iParam6 < 11)
					{
					}
					if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(*iParam0))
					{
						ENTITY::DETACH_ENTITY(*iParam0, true, true);
					}
					fVar5 = 8f;
					fVar6 = -8f;
					iVar7 = 5;
					fVar8 = 1000f;
					if (((ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("s_prop_hdphones") || ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("v_res_fa_chair02")) || ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("p_novel_01_s")) || ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("p_whiskey_bottle_s"))
					{
						fVar5 = 1000f;
						fVar6 = -1000f;
					}
					ENTITY::PLAY_SYNCHRONIZED_ENTITY_ANIM(*iParam0, *uParam5, &cVar4, sParam1, fVar5, fVar6, iVar7, fVar8);
					if (fVar5 == 1000f)
					{
						ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(*iParam0);
					}
					return 1;
				}
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 0;
		}
		ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(iParam0);
		return 0;
	}
	return 0;
}

int func_309(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, char* sParam5, char* sParam6, float fParam7, float fParam8, int iParam9, int iParam10, float fParam11, int iParam12)//Position - 0x8E867
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	struct<16> Var4;
	struct<16> Var5;
	iVar0 = iParam4;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam5) && !MISC::IS_STRING_NULL_OR_EMPTY(sParam6))
	{
		if (iVar0 <= 0)
		{
		}
		else
		{
			iVar1 = 0;
			while (iVar1 < iParam4 + 1)
			{
				if (MISC::ARE_STRINGS_EQUAL(sParam5, uParam2[iVar1 /*16*/]) && MISC::ARE_STRINGS_EQUAL(sParam6, uParam3[iVar1 /*16*/]))
				{
					iVar2 = iVar1;
					while (iVar2 <= (*uParam2 - 1))
					{
						if (iVar2 + 1 < *uParam2)
						{
							*(uParam2[iVar2 /*16*/]) = { *(uParam2[iVar2 + 1 /*16*/]) };
							*(uParam3[iVar2 /*16*/]) = { *(uParam3[iVar2 + 1 /*16*/]) };
						}
						else
						{
							StringCopy(uParam2[iVar2 /*16*/], "", 64);
							StringCopy(uParam3[iVar2 /*16*/], "", 64);
						}
						iVar2++;
					}
					iVar0 = (iVar0 - 1);
				}
				iVar1++;
			}
		}
	}
	iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar0 + 1);
	Var4 = { *(uParam2[iVar3 /*16*/]) };
	Var5 = { *(uParam3[iVar3 /*16*/]) };
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var4))
	{
		STREAMING::REQUEST_ANIM_DICT(&Var4);
		if (!STREAMING::HAS_ANIM_DICT_LOADED(&Var4))
		{
			STREAMING::REQUEST_ANIM_DICT(&Var4);
		}
		else
		{
			if (__LIB_1__::func_490(iParam9, 1))
			{
				PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 16);
				PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			}
			PED::SET_SYNCHRONIZED_SCENE_PHASE(iParam1, 0f);
			TASK::TASK_SYNCHRONIZED_SCENE(iParam0, iParam1, &Var4, &Var5, fParam7, fParam8, iParam9, iParam10, fParam11, iParam12);
			PED::SET_FORCE_FOOTSTEP_UPDATE(iParam0, true);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			PED::SET_SYNCHRONIZED_SCENE_LOOPED(iParam1, false);
			*sParam5 = { Var4 };
			*sParam6 = { Var5 };
			return 1;
		}
	}
	return 0;
}

void func_310(int* iParam0, bool bParam1, int iParam2)//Position - 0x8E9E8
{
	int iVar0;
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*iParam0))
	{
		if (bParam1)
		{
			MOBILE::GET_MOBILE_PHONE_RENDER_ID(&iVar0);
		}
		else
		{
			if (!HUD::IS_NAMED_RENDERTARGET_REGISTERED("npcphone"))
			{
				HUD::REGISTER_NAMED_RENDERTARGET("npcphone", false);
				HUD::LINK_NAMED_RENDERTARGET(joaat("prop_npc_phone"));
			}
			iVar0 = HUD::GET_NAMED_RENDERTARGET_RENDER_ID("npcphone");
		}
		HUD::SET_TEXT_RENDER_ID(iVar0);
		GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(*iParam0, "DISPLAY_VIEW");
		GRAPHICS::SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(iParam2);
		GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
		GRAPHICS::DRAW_SCALEFORM_MOVIE(*iParam0, Global_20186, Global_20187, Global_20188, Global_20189, 255, 255, 255, 255, 0);
	}
}

int func_311(int* iParam0)//Position - 0x8EA8B
{
	if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(*iParam0))
	{
		return 1;
	}
	return 0;
}

int func_312()//Position - 0x8F01B
{
	int iVar0;
	struct<3> Var1;
	int iVar2;
	int iVar3;
	char[] cVar4[8];
	int iVar5;
	int iVar6;
	int iVar7;
	iVar0 = 0;
	Var1 = { 0f, 0f, 0f };
	iVar2 = 226;
	iVar3 = 825812850;
	iVar5 = 0;
	iVar6 = 0;
	while (iVar6 < 11)
	{
		__LIB_17__::func_267(iVar6, &iVar0, &Var1, &iVar2, &iVar3, &cVar4, &iVar5);
		if (OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(Var1, 10f, iVar0, false))
		{
			iVar7 = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(Var1, 10f, iVar0, false, false, true);
			if (ENTITY::DOES_ENTITY_EXIST(iVar7))
			{
				if (iVar3 == 825812850)
				{
					ENTITY::SET_ENTITY_ROTATION(iVar7, 0f, 0f, 21f, 2, true);
				}
				ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&iVar7);
			}
		}
		if (iVar2 != 226)
		{
		}
		else if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar3))
		{
		}
		else
		{
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iVar3, 3, true, true);
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iVar3, 0f, true, true);
			if (((iVar6 != 6 && iVar6 != 7) && iVar6 != 8) && iVar6 != 9)
			{
				OBJECT::REMOVE_DOOR_FROM_SYSTEM(iVar3, 0);
			}
		}
		iVar6++;
	}
	__LIB_17__::func_124(4, 0);
	return 0;
}

void func_313(int* iParam0)//Position - 0x8F54E
{
	__LIB_17__::func_61();
	GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(iParam0);
}

int func_314(int iParam0)//Position - 0x1FB23
{
	struct<3> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) };
		if (!ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, PLAYER::PLAYER_PED_ID(), true))
		{
			switch (__LIB_17__::func_248(Var0, 1))
			{
				case 0:
					return 202;
					break;
				case 1:
					return 203;
					break;
				case 2:
					return 204;
					break;
				case 3:
					return 205;
					break;
				case 4:
					return 206;
					break;
			}
			return 202;
		}
	}
	return 0;
}

int func_315(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13)//Position - 0x2352D
{
	switch (iParam0)
	{
		case 34:
			*uParam1 = 0;
			*uParam2 = 4;
			*uParam3 = 12;
			*uParam4 = 18;
			*uParam5 = 23;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 35:
			*uParam1 = 0;
			*uParam2 = 2;
			*uParam3 = 8;
			*uParam4 = 15;
			*uParam5 = 21;
			*uParam6 = 24;
			*uParam7 = 26;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 36:
			*uParam1 = 0;
			*uParam2 = 5;
			*uParam3 = 13;
			*uParam4 = 15;
			*uParam5 = 21;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 37:
			*uParam1 = 0;
			*uParam2 = 5;
			*uParam3 = 13;
			*uParam4 = 20;
			*uParam5 = 23;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 38:
			*uParam1 = 0;
			*uParam2 = 1;
			*uParam3 = 6;
			*uParam4 = 14;
			*uParam5 = 21;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 39:
			*uParam1 = 0;
			*uParam2 = 5;
			*uParam3 = 7;
			*uParam4 = 16;
			*uParam5 = 23;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 4);
			return 1;
			break;
		case 40:
			*uParam1 = 0;
			*uParam2 = 1;
			*uParam3 = 8;
			*uParam4 = 15;
			*uParam5 = 21;
			*uParam6 = 24;
			*uParam7 = 26;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 41:
			*uParam1 = 0;
			*uParam2 = 1;
			*uParam3 = 9;
			*uParam4 = 19;
			*uParam5 = 23;
			*uParam6 = 24;
			*uParam7 = 26;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 42:
			*uParam1 = 0;
			*uParam2 = 1;
			*uParam3 = 11;
			*uParam4 = 17;
			*uParam5 = 23;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 43:
			*uParam1 = 0;
			*uParam2 = 3;
			*uParam3 = 10;
			*uParam4 = 16;
			*uParam5 = 21;
			*uParam6 = 24;
			*uParam7 = 25;
			*uParam8 = 29;
			*uParam9 = 30;
			*uParam10 = 31;
			*uParam11 = 32;
			*uParam12 = 33;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 79:
			*uParam1 = 44;
			*uParam2 = 53;
			*uParam3 = 56;
			*uParam4 = 65;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 80:
			*uParam1 = 44;
			*uParam2 = 47;
			*uParam3 = 54;
			*uParam4 = 63;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 81:
			*uParam1 = 44;
			*uParam2 = 48;
			*uParam3 = 55;
			*uParam4 = 64;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 82:
			*uParam1 = 45;
			*uParam2 = 52;
			*uParam3 = 60;
			*uParam4 = 69;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 2);
			return 1;
			break;
		case 83:
			*uParam1 = 45;
			*uParam2 = 52;
			*uParam3 = 60;
			*uParam4 = 69;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 84:
			*uParam1 = 46;
			*uParam2 = 51;
			*uParam3 = 62;
			*uParam4 = 66;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 4);
			return 1;
			break;
		case 85:
			*uParam1 = 44;
			*uParam2 = 49;
			*uParam3 = 58;
			*uParam4 = 67;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 86:
			*uParam1 = 44;
			*uParam2 = 49;
			*uParam3 = 56;
			*uParam4 = 65;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 87:
			*uParam1 = 44;
			*uParam2 = 49;
			*uParam3 = 61;
			*uParam4 = 70;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 2);
			return 1;
			break;
		case 88:
			*uParam1 = 44;
			*uParam2 = 49;
			*uParam3 = 57;
			*uParam4 = 66;
			*uParam5 = 71;
			*uParam6 = 72;
			*uParam7 = 73;
			*uParam8 = 74;
			*uParam9 = 75;
			*uParam10 = 76;
			*uParam11 = 77;
			*uParam12 = 78;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 131:
			*uParam1 = 89;
			*uParam2 = 90;
			*uParam3 = 96;
			*uParam4 = 104;
			*uParam5 = 111;
			*uParam6 = 118;
			*uParam7 = 119;
			*uParam8 = 120;
			*uParam9 = 121;
			*uParam10 = 127;
			*uParam11 = 129;
			*uParam12 = 130;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 132:
			*uParam1 = 89;
			*uParam2 = 90;
			*uParam3 = 102;
			*uParam4 = 110;
			*uParam5 = 115;
			*uParam6 = 118;
			*uParam7 = 119;
			*uParam8 = 120;
			*uParam9 = 123;
			*uParam10 = 128;
			*uParam11 = 129;
			*uParam12 = 130;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 133:
			*uParam1 = 89;
			*uParam2 = 90;
			*uParam3 = 97;
			*uParam4 = 105;
			*uParam5 = 114;
			*uParam6 = 118;
			*uParam7 = 119;
			*uParam8 = 120;
			*uParam9 = 122;
			*uParam10 = 127;
			*uParam11 = 129;
			*uParam12 = 130;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 134:
			*uParam1 = 89;
			*uParam2 = 90;
			*uParam3 = 96;
			*uParam4 = 104;
			*uParam5 = 114;
			*uParam6 = 118;
			*uParam7 = 119;
			*uParam8 = 120;
			*uParam9 = 121;
			*uParam10 = 127;
			*uParam11 = 129;
			*uParam12 = 130;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 135:
			*uParam1 = 89;
			*uParam2 = 95;
			*uParam3 = 101;
			*uParam4 = 108;
			*uParam5 = 116;
			*uParam6 = 118;
			*uParam7 = 119;
			*uParam8 = 120;
			*uParam9 = 126;
			*uParam10 = 128;
			*uParam11 = 129;
			*uParam12 = 130;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 158:
			*uParam1 = 136;
			*uParam2 = 137;
			*uParam3 = 138;
			*uParam4 = 142;
			*uParam5 = 146;
			*uParam6 = 148;
			*uParam7 = 151;
			*uParam8 = 153;
			*uParam9 = 154;
			*uParam10 = 155;
			*uParam11 = 156;
			*uParam12 = 157;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 159:
			*uParam1 = 136;
			*uParam2 = 137;
			*uParam3 = 138;
			*uParam4 = 142;
			*uParam5 = 146;
			*uParam6 = 148;
			*uParam7 = 152;
			*uParam8 = 153;
			*uParam9 = 154;
			*uParam10 = 155;
			*uParam11 = 156;
			*uParam12 = 157;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 160:
			*uParam1 = 136;
			*uParam2 = 137;
			*uParam3 = 141;
			*uParam4 = 145;
			*uParam5 = 147;
			*uParam6 = 150;
			*uParam7 = 152;
			*uParam8 = 153;
			*uParam9 = 154;
			*uParam10 = 155;
			*uParam11 = 156;
			*uParam12 = 157;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
		case 161:
			*uParam1 = 136;
			*uParam2 = 137;
			*uParam3 = 140;
			*uParam4 = 144;
			*uParam5 = 147;
			*uParam6 = 148;
			*uParam7 = 152;
			*uParam8 = 153;
			*uParam9 = 154;
			*uParam10 = 155;
			*uParam11 = 156;
			*uParam12 = 157;
			__LIB_1__::func_489(uParam13, 1);
			return 1;
			break;
	}
	return 0;
}

int func_316(bool bParam0)//Position - 0x6A77C
{
	if (!__LIB_0__::func_374(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_15__::func_957(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_317(bool bParam0)//Position - 0x6A7A6
{
	if (!__LIB_0__::func_374(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_15__::func_957(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
}

int func_318(bool bParam0)//Position - 0x6A7CC
{
	if (__LIB_0__::func_374(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_16__::func_512(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_319(bool bParam0)//Position - 0x6A7F5
{
	if (__LIB_0__::func_374(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_16__::func_512(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
}

int func_320(int iParam0, int iParam1, int iParam2, bool bParam3, bool bParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11)//Position - 0x702A1
{
	struct<15> Var0;
	bool bVar1;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam3 < 3)
	{
		if (BitTest(iParam2, bParam3))
		{
			return 0;
		}
	}
	if (bParam4 < 3)
	{
		if (bParam4 != bParam3)
		{
			return 0;
		}
	}
	if (iParam2 < 1 || iParam2 > 7)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__::func_713(iParam1);
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam2;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam5);
		Var0.f_5 = iParam6;
		Var0.f_6 = bParam3;
		Var0.f_14 = bParam4;
		Var0.f_10 = iParam7;
		Var0.f_11 = -1;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		if (iParam7 != -1)
		{
			MISC::SET_BIT(&(Var0.f_1), 11);
		}
		else if (iParam1 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		bVar1 = false;
		while (bVar1 < 3)
		{
			if (BitTest(iParam2, bVar1))
			{
				__LIB_17__::func_247(bVar1);
			}
			bVar1++;
		}
		return 1;
	}
	return 0;
}

int func_321(char* sParam0, int iParam1)//Position - 0x7160C
{
	if (HUD::HAS_THIS_ADDITIONAL_TEXT_LOADED(sParam0, iParam1))
	{
		return 1;
	}
	else if (!__LIB_0__::func_75() && !AUDIO::IS_MOBILE_PHONE_CALL_ONGOING())
	{
		if (!HUD::IS_STREAMING_ADDITIONAL_TEXT(iParam1))
		{
			HUD::REQUEST_ADDITIONAL_TEXT(sParam0, iParam1);
		}
	}
	return 0;
}

int func_322(int iParam0)//Position - 0x724DA
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	if (iVar0 == __LIB_15__::func_957(14))
	{
		return 0;
	}
	if (iVar0 == __LIB_15__::func_957(15))
	{
		return 1;
	}
	if (iVar0 == __LIB_15__::func_957(17))
	{
		return 2;
	}
	if (iVar0 == joaat("S_F_M_Maid_01"))
	{
		return 3;
	}
	if (iVar0 == joaat("S_M_M_Gardener_01"))
	{
		return 4;
	}
	if (iVar0 == joaat("IG_Denise"))
	{
		return 5;
	}
	if (iVar0 == __LIB_15__::func_957(19))
	{
		return 6;
	}
	if (iVar0 == __LIB_15__::func_957(37))
	{
		return 7;
	}
	if (iVar0 == __LIB_16__::func_512(0))
	{
		return 8;
	}
	if (iVar0 == __LIB_16__::func_512(2))
	{
		return 9;
	}
	if (iVar0 == __LIB_15__::func_957(20))
	{
		return 10;
	}
	if (iVar0 == __LIB_15__::func_957(40))
	{
		return 11;
	}
	if (iVar0 == joaat("S_F_M_Maid_01"))
	{
		return 12;
	}
	if (iVar0 == __LIB_15__::func_957(32))
	{
		return 13;
	}
	if (iVar0 == __LIB_15__::func_957(24))
	{
		return 14;
	}
	return 16;
}

int func_323(int iParam0)//Position - 0x73C4E
{
	if (AUDIO::IS_ANY_SPEECH_PLAYING(PLAYER::PLAYER_PED_ID()))
	{
		return 1;
	}
	if (AUDIO::IS_ANY_SPEECH_PLAYING(iParam0))
	{
		return 1;
	}
	if (__LIB_0__::func_75())
	{
		return 1;
	}
	if (__LIB_13__::func_810())
	{
		return 1;
	}
	return 0;
}

int func_324(int iParam0)//Position - 0x7A485
{
	if (__LIB_11__::func_283(62))
	{
		return 1;
	}
	switch (iParam0)
	{
		case 0:
			if (Global_95447[0] == 19 || Global_95447[0] == 25)
			{
				return 1;
			}
			break;
		case 1:
			if ((((((Global_95447[1] == 32 || Global_95447[1] == 41) || Global_95447[1] == 33) || Global_95447[1] == 34) || Global_95447[1] == 35) || Global_95447[1] == 36) || Global_95447[1] == 25)
			{
				return 1;
			}
			break;
		case 2:
			if (((Global_95447[2] == 48 || Global_95447[2] == 68) || Global_95447[2] == 55) || Global_95447[2] == 71)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_325(int iParam0, int iParam1)//Position - 0x7CC41
{
	struct<3> Var0;
	bool bVar1;
	int iVar2;
	int iVar3;
	float fVar4;
	var uVar5;
	int iVar6;
	struct<3> Var7;
	float fVar8;
	bVar1 = 145;
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
			Var0 = { Var0 + Vector(71.1531f, 179.5117f, -812.0607f) };
			break;
		case 5:
		case 6:
		case 7:
			Var0 = { Var0 + Vector(30.116f, -1435.9974f, -14.3064f) };
			break;
		case 10:
		case 8:
		case 9:
		case 11:
		case 12:
			Var0 = { Var0 + Vector(32.4374f, 3819.1438f, 1974.6129f) };
			if (iParam0 == 8)
			{
				bVar1 = false;
			}
			else if (iParam0 == 9)
			{
				bVar1 = 2;
			}
			else if (iParam1 == 124)
			{
				bVar1 = false;
			}
			else
			{
				bVar1 = 145;
			}
			break;
		case 13:
			Var0 = { Var0 + Vector(9.6346f, -1517.601f, -1152.5707f) };
			break;
	}
	if (bVar1 == 145)
	{
		return 0;
	}
	iVar2 = 0;
	while (iVar2 < 8)
	{
		if (Global_97374[iVar2 /*17*/])
		{
			iVar3 = Global_97374[iVar2 /*17*/].f_5;
			fVar4 = Global_97374[iVar2 /*17*/].f_10.f_4;
			uVar5 = Global_97374[iVar2 /*17*/].f_10.f_6;
			iVar6 = Global_91229[iVar3 /*34*/].f_10;
			Var7 = { __LIB_15__::func_964(iVar6, 0) };
			fVar8 = SYSTEM::VDIST2(Var0, Var7);
			if (!BitTest(uVar5, bVar1))
			{
				if (fVar8 < (fVar4 * fVar4))
				{
					return 1;
				}
			}
		}
		iVar2++;
	}
	return 0;
}

int func_326(int iParam0, int iParam1)//Position - 0x7D361
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_14__::func_791(iParam0);
	iVar1 = __LIB_14__::func_791(iParam1);
	iVar2 = __LIB_13__::func_95(iVar0, iVar1);
	if (iVar2 < 9)
	{
		return Global_113386.f_18103.f_175[iVar2 /*19*/].f_8;
	}
	return 1;
}

void func_327(int iParam0)//Position - 0x8FA05
{
	int iVar0;
	struct<14> Var1;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_764)
	{
		return;
	}
	if (Global_113386.f_7688.f_764 > 1)
	{
		iVar0 = iParam0;
		while (iVar0 <= (Global_113386.f_7688.f_764 - 2))
		{
			Global_113386.f_7688.f_651[iVar0 /*14*/] = { Global_113386.f_7688.f_651[iVar0 + 1 /*14*/] };
			iVar0++;
		}
	}
	if (Global_113386.f_7688.f_764 > 0)
	{
		Global_113386.f_7688.f_651[(Global_113386.f_7688.f_764 - 1) /*14*/] = { Var1 };
		Global_113386.f_7688.f_764 = (Global_113386.f_7688.f_764 - 1);
	}
	__LIB_17__::func_247(0);
	__LIB_17__::func_247(1);
	__LIB_17__::func_247(2);
}

void func_328(int iParam0)//Position - 0x8FDD0
{
	bool bVar0;
	var uVar1;
	struct<15> Var2;
	if (iParam0 < 0 || iParam0 >= Global_113386.f_7688.f_136)
	{
		return;
	}
	uVar1 = Global_113386.f_7688[iParam0 /*15*/].f_2;
	if (Global_113386.f_7688.f_136 > 1)
	{
		bVar0 = iParam0;
		while (bVar0 <= (Global_113386.f_7688.f_136 - 2))
		{
			Global_113386.f_7688[bVar0 /*15*/] = { Global_113386.f_7688[bVar0 + 1 /*15*/] };
			bVar0++;
		}
	}
	if (Global_113386.f_7688.f_136 > 0)
	{
		Global_113386.f_7688[(Global_113386.f_7688.f_136 - 1) /*15*/] = { Var2 };
		Global_113386.f_7688.f_136 = (Global_113386.f_7688.f_136 - 1);
	}
	bVar0 = false;
	while (bVar0 < 3)
	{
		if (BitTest(uVar1, bVar0))
		{
			__LIB_17__::func_247(bVar0);
		}
		bVar0++;
	}
}

void func_329()//Position - 0x8FEA8
{
	if (__LIB_17__::func_252(4))
	{
		__LIB_17__::func_266(4, 0);
		__LIB_17__::func_209(4);
	}
	if (__LIB_17__::func_252(5))
	{
		__LIB_17__::func_266(5, 0);
		__LIB_17__::func_209(5);
	}
	if (__LIB_17__::func_252(0))
	{
		__LIB_17__::func_266(0, 0);
		__LIB_17__::func_209(0);
	}
}

int func_330(int iParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x1F660
{
	struct<14> Var0;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam7 < 0)
	{
		return 0;
	}
	if (iParam8 == 76)
	{
		return 0;
	}
	if (iParam9 == 235)
	{
		return 0;
	}
	if (bParam5 < 3)
	{
		if (BitTest(iParam4, bParam5))
		{
			return 0;
		}
	}
	if (iParam4 < 1 || iParam4 > 7)
	{
		return 0;
	}
	if (iParam1 == -1)
	{
		return 0;
	}
	if (iParam1 == 83 || iParam2 == 83)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_764 < 8)
	{
		Var0.f_0 = iParam0;
		Var0.f_3 = __LIB_0__::func_713(iParam3);
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam6);
		Var0.f_5 = iParam7;
		Var0.f_1 = iParam11;
		Var0.f_2 = iParam4;
		Var0.f_6 = bParam5;
		Var0.f_7 = iParam8;
		Var0.f_8 = iParam9;
		Var0.f_9 = iParam10;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_13 = iParam12;
		MISC::CLEAR_BIT(&(Var0.f_1), 0);
		Global_113386.f_7688.f_651[Global_113386.f_7688.f_764 /*14*/] = { Var0 };
		Global_113386.f_7688.f_764++;
		__LIB_17__::func_247(0);
		__LIB_17__::func_247(1);
		__LIB_17__::func_247(2);
		return 1;
	}
	return 0;
}

void func_331(int iParam0)//Position - 0x1FD5E
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[bVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_332(int iParam0)//Position - 0x1FDA5
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[bVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_333(int iParam0)//Position - 0x1FDE3
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[bVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[bVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[bVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_334(int iParam0)//Position - 0x1FF70
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[bVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

void func_335(int iParam0)//Position - 0x1FFAC
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[bVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

void func_336(int iParam0)//Position - 0x68D3E
{
	bool bVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[bVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_0__::func_445(&Var3, __LIB_0__::func_416(iVar1, bVar2), __LIB_0__::func_415(bVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_337(int iParam0)//Position - 0x68E39
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[bVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

int func_338(bool bParam0, bool bParam1)//Position - 0x70713
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_684();
	if ((bParam0 >= iVar0 || bParam1 >= iVar0) || bParam0 == bParam1)
	{
		return 0;
	}
	iVar1 = __LIB_14__::func_791(bParam0);
	iVar2 = __LIB_14__::func_791(bParam1);
	if (iVar1 != 7 && iVar2 != 7)
	{
		iVar3 = __LIB_13__::func_95(iVar1, iVar2);
		if (iVar3 != 10)
		{
			if (__LIB_17__::func_225(iVar3) != -1)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_339(int* iParam0, float fParam1)//Position - 0x71763
{
	if (__LIB_15__::func_251(iParam0, fParam1))
	{
		__LIB_1__::func_12(iParam0);
		return 1;
	}
	return 0;
}

void func_340(int iParam0, bool bParam1)//Position - 0x2000B
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_13__::func_814(iParam0, &(Global_113386.f_2363.f_539.f_298[bVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][bVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (bVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (bVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

bool func_341()//Position - 0x24D7B
{
	__LIB_17__::func_256();
	return Global_113386.f_2363.f_539.f_4321;
}

void func_342(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x24D94
{
	bool bVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_17__::func_107(iParam0);
		iVar1 = 0;
		while (iVar1 < 12)
		{
			__LIB_17__::func_255(iParam0, iVar1, &(uParam1->f_13[iVar1]), uParam1[iVar1], &(uParam1->f_26[iVar1]), iParam2, 145);
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 9)
		{
			__LIB_17__::func_254(iParam0, iVar1, &(uParam1->f_39[iVar1]), &(uParam1->f_49[iVar1]), iParam2, 145);
			iVar1++;
		}
		if (__LIB_0__::func_374(bVar0))
		{
			uParam1->f_59 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_59;
			uParam1->f_60 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_60;
			uParam1->f_61 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_61;
			uParam1->f_62 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_62;
			uParam1->f_63 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_63;
			uParam1->f_64 = Global_113386.f_2363.f_539[bVar0 /*65*/].f_64;
		}
		else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::GET_ENTITY_MODEL(iParam0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
			uParam1->f_60 = __LIB_0__::func_369(754, iParam3, 0);
			uParam1->f_61 = __LIB_0__::func_369(755, iParam3, 0);
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
		}
	}
}

void func_343(var uParam0, struct<98> Param1)//Position - 0x6EAA7
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*uParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*uParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
		}
	}
	if (__LIB_17__::func_246(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
			}
		}
	}
	__LIB_0__::func_670(uParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Param1.f_96);
}

bool func_344(int iParam0)//Position - 0x70A19
{
	__LIB_17__::func_256();
	return iParam0 == Global_113386.f_2363.f_539.f_4321;
}

int func_345()//Position - 0x1F8EB
{
	__LIB_17__::func_256();
	switch (Global_113386.f_2363.f_539.f_4321)
	{
		case 0:
			return 1;
			break;
		case 1:
			return 2;
			break;
		case 2:
			return 4;
			break;
	}
	return 0;
}

void func_346(int iParam0)//Position - 0x21439
{
	bool bVar0;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[bVar0] = __LIB_11__::func_762();
	}
}

void func_347(int iParam0, bool bParam1, bool bParam2)//Position - 0x68E7C
{
	bool bVar0;
	int iVar1;
	int iVar2;
	bVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		__LIB_0__::func_672(iParam0, &(Global_113386.f_2363.f_539.f_298[bVar0 /*477*/]), bParam1);
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			HUD::HUD_SET_WEAPON_WHEEL_TOP_SLOT(Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0]);
			if (bParam2)
			{
				if (iVar1 == Global_113386.f_2363.f_539.f_1763 || (Global_113386.f_2363.f_539.f_1763 == -1 && iVar1 == 4))
				{
					if (Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0] != 0 && Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0] != joaat("WEAPON_MOLOTOV"))
					{
						if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0], false))
						{
							WEAPON::SET_CURRENT_PED_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][bVar0], true);
						}
					}
				}
			}
			iVar1++;
		}
		if (bVar0 == 0)
		{
			STATS::STAT_GET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (bVar0 == 1)
		{
			STATS::STAT_GET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (bVar0 == 2)
		{
			STATS::STAT_GET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), iVar2);
	}
}

int func_348(int iParam0, int iParam1)//Position - 0x7A8A6
{
	var uVar0;
	var uVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	if (!__LIB_3__::func_423(iParam0))
	{
		return 0;
	}
	__LIB_17__::func_257(iParam0, &uVar0, &uVar1, &iVar2, &iVar3, &iVar4, &iVar5);
	if (((iVar5 > 0 || iVar4 > 0) || iVar3 > 0) || iVar2 >= iParam1)
	{
		return 1;
	}
	return 0;
}

int func_349(int iParam0, int iParam1, char* sParam2, var uParam3, float fParam4)//Position - 0x121CE
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	switch (iParam1)
	{
		case 16:
			if (*uParam3 == 0)
			{
				STREAMING::REQUEST_PTFX_ASSET();
				if (!STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					STREAMING::REQUEST_PTFX_ASSET();
				}
				else if (!MISC::ARE_STRINGS_EQUAL(sParam2, "scr_fam_door_smoke"))
				{
					if (ENTITY::IS_ENTITY_A_PED(iParam0))
					{
					}
					else
					{
						if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
						{
							return 0;
						}
						Var0 = { 0f, 0f, 0.05f };
						Var1 = { 0f, 0f, 0f };
						*uParam3 = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(sParam2, iParam0, Var0, Var1, 1f, false, false, false);
					}
				}
				else
				{
					Var0 = { -806.8f, 174f, 76.9f };
					Var1 = { 0f, 0f, 0f };
					*uParam3 = GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD(sParam2, Var0, Var1, 1f, false, false, false, false);
				}
				return 0;
			}
			else
			{
				if (GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(*uParam3))
				{
				}
				return 1;
			}
			break;
			return 0;
			break;
		case 91:
			if (*uParam3 == 0)
			{
				STREAMING::REQUEST_PTFX_ASSET();
				if (!STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					STREAMING::REQUEST_PTFX_ASSET();
				}
				else
				{
					Var2 = { 0f, 0f, 0f };
					Var3 = { 0f, 0f, 0f };
					*uParam3 = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_PED_BONE(sParam2, ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam0), Var2, Var3, 60309, 1f, false, false, false);
					return 1;
				}
			}
			return 0;
			break;
		case 120:
			if (*uParam3 == 0)
			{
				STREAMING::REQUEST_PTFX_ASSET();
				if (!STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					STREAMING::REQUEST_PTFX_ASSET();
				}
				else
				{
					if (!ENTITY::DOES_ENTITY_EXIST(iParam0))
					{
						return 0;
					}
					Var4 = { 0f, 0f, 0f };
					Var5 = { 0f, 0f, 0f };
					*uParam3 = GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(sParam2, iParam0, Var4, Var5, 1f, false, false, false);
					return 1;
				}
			}
			return 0;
			break;
	}
	fParam4 = fParam4;
	*uParam3 = 0;
	return 0;
}

int func_350(int iParam0)//Position - 0x12CA6
{
	if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("v_ilev_m_sofa") || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("v_ilev_m_dinechair"))
	{
		return 0;
	}
	return 1;
}

int func_351(int iParam0, char* sParam1, char* sParam2, var uParam3)//Position - 0x16FD1
{
	return __LIB_17__::func_301(iParam0, sParam1, "AMB@WORLD_HUMAN_SMOKING@MALE@MALE_A@BASE", sParam2, "BASE", uParam3);
}

void func_352(int iParam0, var uParam1, var uParam2, int iParam3, struct<3> Param4, struct<3> Param5, char* sParam6, char* sParam7, float fParam8, float fParam9, int iParam10, int iParam11, float fParam12, int iParam13, int iParam14)//Position - 0x17564
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	struct<16> Var4;
	struct<16> Var5;
	iVar0 = iParam3;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam6) && !MISC::IS_STRING_NULL_OR_EMPTY(sParam7))
	{
		iVar1 = 0;
		while (iVar1 < iParam3 + 1)
		{
			if (MISC::ARE_STRINGS_EQUAL(sParam6, uParam1[iVar1 /*16*/]) && MISC::ARE_STRINGS_EQUAL(sParam7, uParam2[iVar1 /*16*/]))
			{
				if (iVar1 != 0)
				{
					iVar2 = iVar1;
					while (iVar2 <= (*uParam1 - 1))
					{
						if (iVar2 + 1 < *uParam1)
						{
							*(uParam1[iVar2 /*16*/]) = { *(uParam1[iVar2 + 1 /*16*/]) };
							*(uParam2[iVar2 /*16*/]) = { *(uParam2[iVar2 + 1 /*16*/]) };
						}
						else
						{
							StringCopy(uParam1[iVar2 /*16*/], "", 64);
							StringCopy(uParam2[iVar2 /*16*/], "", 64);
						}
						iVar2++;
					}
					iVar0 = (iVar0 - 1);
				}
			}
			iVar1++;
		}
	}
	iVar3 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar0 + 1);
	Var4 = { *(uParam1[iVar3 /*16*/]) };
	Var5 = { *(uParam2[iVar3 /*16*/]) };
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var4))
	{
		STREAMING::REQUEST_ANIM_DICT(&Var4);
		if (!STREAMING::HAS_ANIM_DICT_LOADED(&Var4))
		{
			STREAMING::REQUEST_ANIM_DICT(&Var4);
		}
		else
		{
			if (__LIB_1__::func_490(iParam11, 1))
			{
				__LIB_17__::func_302(&iParam11, 1);
			}
			if (__LIB_1__::func_490(iParam11, 2))
			{
			}
			else
			{
				__LIB_1__::func_489(&iParam11, 2);
			}
			if (__LIB_1__::func_490(iParam11, 262144))
			{
				PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 16);
				PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			}
			TASK::TASK_PLAY_ANIM_ADVANCED(iParam0, &Var4, &Var5, Param4, Param5, fParam8, fParam9, iParam10, iParam11, fParam12, iParam13, iParam14);
			PED::SET_FORCE_FOOTSTEP_UPDATE(iParam0, true);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			*sParam6 = { Var4 };
			*sParam7 = { Var5 };
		}
	}
}

int func_353(int iParam0, int iParam1, char* sParam2, var uParam3, var uParam4)//Position - 0x1780B
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	switch (iParam1)
	{
		case 16:
			if (!*uParam3)
			{
				STREAMING::REQUEST_PTFX_ASSET();
				if (!STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					STREAMING::REQUEST_PTFX_ASSET();
				}
				else if (!MISC::ARE_STRINGS_EQUAL(sParam2, "scr_fam_door_smoke"))
				{
					if (ENTITY::IS_ENTITY_A_PED(iParam0))
					{
						Var0 = { 0f, 0f, 0f };
						Var1 = { 0f, 0f, 0f };
						if (GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(sParam2, ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam0), Var0, Var1, 31086, 1f, false, false, false))
						{
							*uParam3 = 1;
						}
					}
				}
				return 0;
			}
			else
			{
				return 1;
			}
			break;
		case 38:
			if (!*uParam3)
			{
				STREAMING::REQUEST_PTFX_ASSET();
				if (!STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					STREAMING::REQUEST_PTFX_ASSET();
				}
				else
				{
					Var2 = { 0f, 0f, 0f };
					Var3 = { 0f, 0f, 0f };
					fVar4 = 1f;
					if (GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(sParam2, ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam0), Var2, Var3, 31086, fVar4, false, false, false))
					{
						*uParam3 = 1;
						return 1;
					}
				}
			}
			return 0;
			break;
	}
	uParam4 = uParam4;
	return 0;
}

int func_354(char* sParam0, char* sParam1, char* sParam2, var* uParam3, var* uParam4)//Position - 0x178F3
{
	if (ENTITY::FIND_ANIM_EVENT_PHASE(sParam0, sParam1, sParam2, uParam3, uParam4))
	{
		return 1;
	}
	if (MISC::ARE_STRINGS_EQUAL(sParam2, "exhale"))
	{
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "TIMETABLE@TRACY@IG_7@BASE") && MISC::ARE_STRINGS_EQUAL(sParam1, "BASE"))
		{
			*uParam3 = -1f;
			*uParam4 = -1f;
			return 0;
		}
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "TIMETABLE@TRACY@IG_7@IDLE_A") && MISC::ARE_STRINGS_EQUAL(sParam1, "IDLE_A"))
		{
			*uParam3 = 0.058f;
			*uParam4 = 0.195f;
			return 1;
		}
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "TIMETABLE@TRACY@IG_7@IDLE_A") && MISC::ARE_STRINGS_EQUAL(sParam1, "IDLE_B"))
		{
			*uParam3 = 0.298f;
			*uParam4 = 0.357f;
			return 1;
		}
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "TIMETABLE@TRACY@IG_7@IDLE_A") && MISC::ARE_STRINGS_EQUAL(sParam1, "IDLE_C"))
		{
			*uParam3 = 0.298f;
			*uParam4 = 0.357f;
			return 1;
		}
		if (MISC::ARE_STRINGS_EQUAL(sParam0, "TIMETABLE@TRACY@IG_7@IDLE_B") && MISC::ARE_STRINGS_EQUAL(sParam1, "IDLE_D"))
		{
			*uParam3 = 0.298f;
			*uParam4 = 0.357f;
			return 1;
		}
	}
	return 0;
}

char* func_355(int iParam0, int iParam1, int iParam2)//Position - 0x1841C
{
	int iVar0;
	switch (iParam2)
	{
		case 5:
			switch (iParam1)
			{
				case 0:
					return "JIM_IG_2_P2_Lagging";
					break;
			}
			break;
		case 21:
			switch (iParam1)
			{
				case 0:
					return "IG_2_Exit";
					break;
			}
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			switch (iParam1)
			{
				case 0:
					return "EXIT_JIMMY";
					break;
				case 1:
					return "EXIT_TRACY";
					break;
			}
			break;
		case 56:
			switch (iParam1)
			{
				case 2:
					return "IG_2_P2_ItsNotWastingTime_AMANDA";
					break;
				case 0:
					return "IG_2_P2_ItsNotWastingTime_JIMMY";
					break;
			}
			break;
		case 57:
			switch (iParam1)
			{
				case 2:
					return "IG2_P3_ItsNotABigDeal_AMANDA";
					break;
				case 0:
					return "IG2_P3_ItsNotABigDeal_JIMMY";
					break;
			}
			break;
		case 58:
			switch (iParam1)
			{
				case 2:
					return "IG_3_WhenURPregnant_AMANDA";
					break;
				case 1:
					return "IG_3_WhenURPregnant_TRACY";
					break;
			}
			break;
		case 47:
			switch (iParam1)
			{
				case 2:
					return "IG_9_IAmOnToYou_AMANDA";
					break;
				case 3:
					return "IG_9_IAmOnToYou_MAID";
					break;
			}
			break;
		case 52:
		case 67:
			switch (iParam1)
			{
				case 2:
					return "IG_7_EXIT";
					break;
			}
			break;
		case 73:
			switch (iParam1)
			{
				case 2:
					return "Ugh_kale_Amanda";
					break;
			}
			break;
		case 129:
			switch (iParam1)
			{
				case 13:
					return "Pineapple_EXIT_LOOP_FLOYD";
					break;
			}
			break;
		case 61:
		case 63:
			switch (iParam1)
			{
				case 2:
					return "IG_6_EXIT";
					break;
			}
			break;
		case 37:
			if (iParam2 == 37)
			{
				iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
				if (iVar0 == __LIB_15__::func_957(15))
				{
					return "EXIT_TRACY";
				}
				else if (iVar0 == joaat("A_M_Y_Hipster_01"))
				{
					return "EXIT_BOY";
				}
			}
			break;
		case 102:
			switch (iParam1)
			{
				case 10:
					return "ENTER";
					break;
			}
			break;
		case 120:
			switch (iParam1)
			{
				case 10:
					return "IG_3_IDLE_A";
					break;
			}
			break;
		case 132:
		case 133:
		case 134:
			switch (iParam1)
			{
				case 13:
					return "base";
					break;
			}
			break;
		default:
			break;
	}
	iParam1 = iParam1;
	iParam2 = iParam2;
	return "null";
}

int func_356(int iParam0, int iParam1, float fParam2)//Position - 0x1A560
{
	if (!AUDIO::HAS_SOUND_FINISHED(iParam1))
	{
		switch (iParam0)
		{
			case 61:
			case 63:
				AUDIO::SET_VARIABLE_ON_SOUND(iParam1, "MichaelInRoom", fParam2);
				return 1;
				break;
			case 87:
				AUDIO::SET_VARIABLE_ON_SOUND(iParam1, "Blow", fParam2);
				return 1;
				break;
			}
	}
	return 1;
}

int func_357(var uParam0, var uParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, char* sParam6)//Position - 0x1A5B2
{
	int iVar0;
	int iVar1;
	switch (*uParam0)
	{
		case 0:
			if (*uParam1 != -1)
			{
				AUDIO::STOP_SOUND(*uParam1);
				AUDIO::RELEASE_SOUND_ID(*uParam1);
				*uParam1 = -1;
			}
			if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
			{
				if (AUDIO::REQUEST_AMBIENT_AUDIO_BANK(sParam2, false, -1))
				{
					StringCopy(sParam6, sParam2, 64);
					*uParam0 = 1;
				}
			}
			else
			{
				*uParam0 = 1;
			}
			break;
		case 1:
			if (!ENTITY::DOES_ENTITY_EXIST(iParam4))
			{
				if (MISC::IS_STRING_NULL_OR_EMPTY(sParam3))
				{
					*uParam0 = 4;
					return 0;
				}
				return 0;
			}
			switch (iParam5)
			{
				case 0:
					*uParam1 = AUDIO::GET_SOUND_ID();
					AUDIO::PLAY_SOUND_FROM_ENTITY(*uParam1, sParam3, iParam4, 0, false, 0);
					break;
				case 1:
					*uParam1 = AUDIO::GET_SOUND_ID();
					AUDIO::PLAY_SOUND_FROM_COORD(*uParam1, sParam3, ENTITY::GET_ENTITY_COORDS(iParam4, true), 0, false, 0, false);
					break;
				default:
					return 0;
					break;
			}
			*uParam0 = 2;
			break;
		case 2:
			if (*uParam1 != -1)
			{
				if (!AUDIO::HAS_SOUND_FINISHED(*uParam1))
				{
				}
				else
				{
					*uParam0 = 0;
					return 1;
				}
			}
			else
			{
				*uParam0 = 0;
				return 1;
			}
			if (iParam5 != 1)
			{
				if (ENTITY::IS_ENTITY_A_PED(iParam4))
				{
					iVar0 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam4);
					if (AUDIO::IS_ANY_SPEECH_PLAYING(iVar0))
					{
						*uParam0 = 3;
					}
				}
			}
			break;
		case 3:
			if (ENTITY::IS_ENTITY_A_PED(iParam4))
			{
				iVar1 = ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iParam4);
				if (!AUDIO::IS_ANY_SPEECH_PLAYING(iVar1))
				{
					*uParam0 = 0;
				}
			}
			break;
		case 4:
			break;
		default:
			return 0;
			break;
	}
	return 1;
}

void func_358(int iParam0, int iParam1)//Position - 0x3D427
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	var uVar4;
	iVar0 = -1;
	iVar1 = -1;
	iVar2 = -1;
	iVar3 = 0;
	if (__LIB_17__::func_280(iParam1, &uVar4, &iVar0, &iVar1, &iVar2))
	{
		PED::SET_PED_COMPONENT_VARIATION(iParam0, iVar0, iVar1, iVar2, iVar3);
	}
}

float func_359(var uParam0)//Position - 0x1724
{
	if (__LIB_1__::func_13(uParam0))
	{
		if (__LIB_2__::func_213(uParam0))
		{
			return uParam0->f_2;
		}
		else
		{
			return (__LIB_0__::func_616(BitTest(*uParam0, 4)) - uParam0->f_1);
		}
	}
	return uParam0->f_1;
}

int func_360(var uParam0, char* sParam1, char* sParam2)//Position - 0x28A7
{
	char cVar0[16];
	char* sVar1;
	int iVar2;
	int iVar3;
	char cVar4[16];
	int iVar5;
	int iVar6;
	char cVar7[16];
	int iVar8;
	int iVar9;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam2))
	{
		return 0;
	}
	StringCopy(&cVar0, sParam2, 16);
	StringConCat(&cVar0, "SL", 16);
	if (__LIB_17__::func_321(sParam1, 7))
	{
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			sVar1 = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(&cVar0);
			if (MISC::IS_STRING_NULL(sVar1))
			{
				return 0;
			}
			else
			{
				iVar2 = 0;
				iVar3 = 1;
				StringCopy(&cVar4, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sVar1, iVar2, iVar3), 16);
				iVar5 = 1;
				iVar6 = 2;
				StringCopy(&cVar7, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(sVar1, iVar5, iVar6), 16);
				if (MISC::STRING_TO_INT(&cVar4, &iVar8))
				{
					if (ENTITY::DOES_ENTITY_EXIST((*uParam0)[iVar8 /*10*/]))
					{
					}
					else
					{
						return 0;
					}
				}
				if (MISC::STRING_TO_INT(&cVar7, &iVar9))
				{
					if (ENTITY::DOES_ENTITY_EXIST((*uParam0)[iVar9 /*10*/]))
					{
					}
					else
					{
						return 0;
					}
				}
			}
		}
		else
		{
			return 0;
		}
	}
	else
	{
		return 0;
	}
	return 1;
}

int func_361(int iParam0, int iParam1)//Position - 0x5FAB
{
	int iVar0;
	char* sVar1;
	int iVar2;
	sVar1 = "";
	iVar2 = 0;
	switch (Global_95447[iParam1])
	{
		case 52:
		case 67:
		case 74:
			sVar1 = "V_Michael_G_Hall";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.6f, 179.4f, 72.2f, "v_michael");
			if (__LIB_17__::func_279(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 56:
		case 57:
			if (iParam1 == 0)
			{
				sVar1 = "V_Michael_1_Hall";
				iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.2079f, 181.3398f, 71.153f, "v_michael");
				if (__LIB_17__::func_279(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
				{
					iVar0 = 1;
				}
			}
			else
			{
				if (!Global_3)
				{
					INTERIOR::CLEAR_ROOM_FOR_ENTITY(iParam0);
				}
				iVar0 = 0;
			}
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			sVar1 = "V_Michael_1_Hall";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-812.2079f, 181.3398f, 71.153f, "v_michael");
			if (__LIB_17__::func_279(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 47:
			sVar1 = "V_Michael_G_Kitche";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-803.4384f, 182.9567f, 73.2608f, "v_michael");
			if (__LIB_17__::func_279(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		case 75:
		case 84:
			sVar1 = "V_Michael_G_Kitche";
			iVar2 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-803.4384f, 182.9567f, 73.2608f, "v_michael");
			if (__LIB_17__::func_279(iParam0, iVar2, MISC::GET_HASH_KEY(sVar1)))
			{
				iVar0 = 1;
			}
			break;
		default:
			if (!Global_3)
			{
			}
			iVar0 = 0;
			break;
	}
	return iVar0;
}

int func_362(int iParam0)//Position - 0xB05C
{
	if (Global_78583 == 52)
	{
		if (!__LIB_17__::func_298(60f))
		{
			return 1;
		}
	}
	if (__LIB_15__::func_933() == 89)
	{
		return 1;
	}
	if (iParam0 != 0)
	{
		if (Global_95447[0] == 7)
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if (Global_95447[1] == 27)
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_95447[2] == 51)
		{
			return 1;
		}
	}
	return 0;
}

void func_363(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, char* sParam5, char* sParam6, var uParam7, var uParam8, var uParam9, var uParam10, var uParam11, var uParam12, var uParam13, var uParam14, var uParam15, var uParam16, var uParam17, var uParam18, var uParam19, var uParam20, var uParam21, var uParam22, char* sParam23, float fParam24, float fParam25, int iParam26, int iParam27, float fParam28, int iParam29)//Position - 0x12DE3
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	char cVar4[64];
	int iVar5;
	int iVar6;
	int iVar7;
	char cVar8[64];
	struct<16> Var9;
	struct<16> Var10;
	iVar0 = -1;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&uParam7))
	{
		iVar1 = HUD::GET_LENGTH_OF_LITERAL_STRING(&uParam7);
		iVar2 = HUD::GET_LENGTH_OF_LITERAL_STRING(sParam23);
		iVar3 = (iVar1 - iVar2);
		StringCopy(&cVar4, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(&uParam7, 0, iVar3), 64);
		iVar5 = 0;
		while (iVar5 < iParam4 + 1)
		{
			iVar6 = iVar3;
			iVar7 = HUD::GET_LENGTH_OF_LITERAL_STRING(uParam3[iVar5 /*16*/]);
			if (iVar6 > iVar7)
			{
				iVar6 = iVar7;
			}
			StringCopy(&cVar8, HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(uParam3[iVar5 /*16*/], 0, iVar6), 64);
			if (MISC::ARE_STRINGS_EQUAL(&cVar4, &cVar8))
			{
				iVar0 = iVar5;
			}
			iVar5++;
		}
	}
	else
	{
		return;
	}
	if (iVar0 == -1)
	{
		return;
	}
	Var9 = { *(uParam2[iVar0 /*16*/]) };
	Var10 = { *(uParam3[iVar0 /*16*/]) };
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&Var9))
	{
		STREAMING::REQUEST_ANIM_DICT(&Var9);
		if (!STREAMING::HAS_ANIM_DICT_LOADED(&Var9))
		{
			STREAMING::REQUEST_ANIM_DICT(&Var9);
		}
		else
		{
			if (__LIB_1__::func_490(iParam27, 1))
			{
				PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 16);
				PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
				PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			}
			if (!__LIB_1__::func_490(iParam27, 64))
			{
				__LIB_1__::func_489(&iParam27, 64);
			}
			TASK::TASK_SYNCHRONIZED_SCENE(iParam0, iParam1, &Var9, &Var10, fParam24, fParam25, iParam26, iParam27, fParam28, iParam29);
			PED::SET_FORCE_FOOTSTEP_UPDATE(iParam0, true);
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iParam0, true);
			*sParam5 = { Var9 };
			*sParam6 = { Var10 };
		}
	}
}

int func_364(int iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x186B2
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	struct<3> Var3;
	struct<3> Var4;
	float fVar5;
	struct<7> Var6;
	struct<7> Var7;
	float fVar8;
	float fVar9;
	struct<3> Var10;
	struct<3> Var11;
	float fVar12;
	int iVar13;
	struct<3> Var14;
	int iVar15;
	int iVar16;
	char[] cVar17[8];
	int iVar18;
	float fVar19;
	struct<3> Var20;
	struct<3> Var21;
	float fVar22;
	switch (iParam1)
	{
		case 5:
			return 0;
			break;
		case 21:
			return 0;
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (15f * 15f))
				{
					return 1;
				}
			}
			else if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (7.5f * 7.5f))
			{
				return 1;
			}
			return 0;
			break;
		case 37:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (8.5f * 8.5f))
			{
				return 1;
			}
			return 0;
			break;
		case 56:
		case 57:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (5f * 5f))
			{
				return 1;
			}
			return 0;
			break;
		case 58:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (5f * 5f))
			{
				return 1;
			}
			Var0 = { -0.42f, 0.68f, 1f };
			Var1 = { 4.5f, 2.75f, 1f };
			fVar2 = -22f;
			if (__LIB_9__::func_363(PLAYER::PLAYER_PED_ID(), Param2 + Var0, Var1, (fParam3 + fVar2), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 47:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (3f * 3f))
			{
				return 1;
			}
			Var3 = { 10.8751f, 2.6168f, 1.47f };
			Var4 = { 7.5f, 3f, 1.5f };
			fVar5 = -21f;
			if (__LIB_9__::func_363(PLAYER::PLAYER_PED_ID(), Param2 + Var3, Var4, (fParam3 + fVar5), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 52:
		case 67:
		case 74:
			Var6 = { __LIB_0__::func_403(38) };
			Var7 = { __LIB_0__::func_403(39) };
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var6.f_5) || !OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var7.f_5))
			{
				return 0;
			}
			else
			{
				fVar8 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var6.f_5));
				fVar9 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var7.f_5));
				if (fVar8 >= 0.1f || fVar9 >= 0.1f)
				{
					return 0;
				}
			}
			Var10 = { -0.72f, 0.52f, 1f };
			Var11 = { 3f, 3f, 1f };
			fVar12 = -22f;
			if (__LIB_9__::func_363(PLAYER::PLAYER_PED_ID(), Param2 + Var10, Var11, (fParam3 + fVar12), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
		case 73:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 129:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 61:
		case 63:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			__LIB_17__::func_267(3, &iVar13, &Var14, &iVar15, &iVar16, &cVar17, &iVar18);
			if (iVar15 != 226)
			{
			}
			else if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(iVar16))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(iVar16, iVar13, Var14, true, true, false);
			}
			else
			{
				fVar19 = MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(iVar16));
				if (fVar19 >= 0.5f)
				{
					return 1;
				}
			}
			return 0;
			break;
		case 102:
		case 120:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 132:
		case 134:
			if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(iParam0, true)) < (4f * 4f))
			{
				return 1;
			}
			return 0;
			break;
		case 133:
			Var20 = { 0f, 0f, 1f };
			Var21 = { 2f, 2f, 1f };
			fVar22 = 0f;
			if (__LIB_9__::func_363(PLAYER::PLAYER_PED_ID(), Param2 + Var20, Var21, (fParam3 + fVar22), 0, 1, 0))
			{
				return 1;
			}
			return 0;
			break;
	}
	return 0;
}

void func_365(int iParam0, int iParam1)//Position - 0x1966D
{
	__LIB_17__::func_265(iParam0);
	Global_95447[iParam0] = iParam1;
}

int func_366(bool bParam0)//Position - 0x85330
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (Global_113386.f_7688[iVar0 /*15*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (Global_113386.f_7688.f_651[iVar0 /*14*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (Global_113386.f_7688.f_765[iVar0 /*10*/].f_6 == bParam0)
		{
			return 1;
		}
		iVar0++;
	}
	if (__LIB_0__::func_374(bParam0))
	{
		if (__LIB_17__::func_282(bParam0))
		{
			return 1;
		}
	}
	return 0;
}

int func_367(int iParam0, struct<3> Param1, int iParam2, var uParam3)//Position - 0x85495
{
	struct<3> Var0;
	float fVar1;
	float fVar2;
	int iVar3;
	int iVar4;
	if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(Param1))
	{
		if (!INTERIOR::IS_VALID_INTERIOR(*uParam3))
		{
			*uParam3 = INTERIOR::GET_INTERIOR_FROM_COLLISION(Param1);
			return 0;
		}
		else if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
			{
				if (STREAMING::GET_PLAYER_SWITCH_STATE() == 11)
				{
					return 1;
				}
			}
		}
	}
	if (iParam0 == 12)
	{
		if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)))
		{
			return 0;
		}
		return 1;
	}
	if (*uParam3 != iParam2)
	{
		if (*uParam3 == 0)
		{
		}
		else if (INTERIOR::IS_VALID_INTERIOR(*uParam3))
		{
			if (INTERIOR::IS_INTERIOR_READY(*uParam3))
			{
				Var0 = { INTERIOR::GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(*uParam3, 0f, 0f, 0f) };
				fVar1 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), Var0);
				fVar2 = SYSTEM::VDIST2(Param1, Var0);
				if (fVar1 > fVar2)
				{
					return 1;
				}
				if (!CAM::IS_SPHERE_VISIBLE(Param1, 1f))
				{
					iVar3 = 0;
					iVar4 = __LIB_17__::func_264(iParam0, &iVar3);
					if (iVar4 != 145)
					{
						if (__LIB_0__::func_374(iVar4))
						{
							iVar3 = __LIB_16__::func_512(iVar4);
						}
						else
						{
							iVar3 = __LIB_15__::func_957(iVar4);
						}
					}
					if (!ENTITY::WOULD_ENTITY_BE_OCCLUDED(iVar3, Param1, false))
					{
						return 1;
					}
				}
			}
		}
		if (SYSTEM::VDIST2(Param1, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) < 15f)
		{
			return 1;
		}
		return 0;
	}
	else if (*uParam3 == 0)
	{
	}
	else if (INTERIOR::IS_VALID_INTERIOR(*uParam3))
	{
		if (INTERIOR::IS_INTERIOR_READY(*uParam3))
		{
		}
	}
	return 1;
}

int func_368(var uParam0, int iParam1, var uParam2, int iParam3, int iParam4)//Position - 0x855F7
{
	int iVar0;
	int iVar1;
	if (Global_95447[iParam1] == 140 && Global_95463 != 141)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_100162))
		{
			iVar0 = 0;
			iVar1 = __LIB_17__::func_264(iParam1, &iVar0);
			if (iVar1 != 145)
			{
				if (__LIB_0__::func_374(iVar1))
				{
					iVar0 = __LIB_16__::func_512(iVar1);
				}
				else
				{
					iVar0 = __LIB_15__::func_957(iVar1);
				}
				if (ENTITY::GET_ENTITY_MODEL(Global_100162) == iVar0)
				{
					*uParam0 = Global_100162;
					Global_100162 = 0;
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*uParam0, true, true);
					__LIB_17__::func_265(iParam1);
					Global_95447[iParam1] = Global_95463;
					if (ENTITY::DOES_ENTITY_EXIST(Global_100163))
					{
						Global_100162 = Global_100163;
						Global_100163 = 0;
					}
					else
					{
						Global_95463 = 141;
					}
					__LIB_17__::func_274(uParam0, iParam4);
					__LIB_0__::func_222(uParam2, iParam3, *uParam0, __LIB_17__::func_249(iParam1), 0, 1);
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_369(int iParam0)//Position - 0x85F17
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = __LIB_17__::func_264(iParam0, &iVar0);
	if (iVar1 != 145)
	{
		if (__LIB_0__::func_374(iVar1))
		{
			iVar0 = __LIB_16__::func_512(iVar1);
		}
		else
		{
			iVar0 = __LIB_15__::func_957(iVar1);
		}
	}
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iVar0);
}

int func_370(char* sParam0, char* sParam1, var uParam2)//Position - 0x20EF
{
	char cVar0[16];
	char cVar1[16];
	int iVar2;
	struct<4> Var3[15];
	bool bVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	if (__LIB_17__::func_321(sParam0, 7))
	{
		cVar0 = { *sParam1 };
		StringCopy(&cVar1, "", 16);
		iVar2 = -1;
		cVar0 = { *sParam1 };
		StringConCat(&cVar0, "a", 16);
		StringConCat(&cVar0, "_", 16);
		StringConCat(&cVar0, &cVar1, 16);
		StringConCat(&cVar0, "1", 16);
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			StringCopy(&cVar1, "", 16);
		}
		else
		{
			StringCopy(&cVar1, "0", 16);
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "a", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
			}
			else
			{
				return 0;
			}
		}
		bVar4 = true;
		cVar0 = { *sParam1 };
		StringConCat(&cVar0, "a", 16);
		StringConCat(&cVar0, "_", 16);
		StringConCat(&cVar0, &cVar1, 16);
		StringConCat(&cVar0, "1", 16);
		if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
		{
			iVar2++;
			Var3[iVar2 /*4*/] = { *sParam1 };
			StringConCat(&(Var3[iVar2 /*4*/]), "a", 16);
			bVar4 = false;
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "b", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "b", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "c", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "c", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "d", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "d", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "e", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "e", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "f", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "f", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "g", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "g", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "h", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "h", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "i", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "i", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "j", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "j", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "k", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "k", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "JJJ", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "JJJ", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "m", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "m", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "n", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "n", 16);
				bVar4 = false;
			}
		}
		if (!bVar4)
		{
			bVar4 = true;
			cVar0 = { *sParam1 };
			StringConCat(&cVar0, "o", 16);
			StringConCat(&cVar0, "_", 16);
			StringConCat(&cVar0, &cVar1, 16);
			StringConCat(&cVar0, "1", 16);
			if (HUD::DOES_TEXT_LABEL_EXIST(&cVar0))
			{
				iVar2++;
				Var3[iVar2 /*4*/] = { *sParam1 };
				StringConCat(&(Var3[iVar2 /*4*/]), "o", 16);
				bVar4 = false;
			}
		}
		iVar5 = iVar2;
		iVar6 = 0;
		while (iVar6 < *uParam2)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(uParam2[iVar6 /*4*/]))
			{
				iVar7 = 0;
				while (iVar7 < Var3.f_0)
				{
					if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Var3[iVar7 /*4*/])))
					{
						if (MISC::ARE_STRINGS_EQUAL(uParam2[iVar6 /*4*/], &(Var3[iVar7 /*4*/])))
						{
							iVar8 = iVar7;
							while (iVar8 <= (Var3.f_0 - 1))
							{
								if (iVar8 + 1 < Var3.f_0)
								{
									Var3[iVar8 /*4*/] = { Var3[iVar8 + 1 /*4*/] };
								}
								else
								{
									StringCopy(&(Var3[iVar8 /*4*/]), "", 16);
								}
								iVar8++;
							}
							iVar5 = (iVar5 - 1);
						}
					}
					iVar7++;
				}
			}
			iVar6++;
		}
		iVar9 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar5 + 1);
		*sParam1 = { Var3[iVar9 /*4*/] };
		if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
		{
			return 0;
		}
		return 1;
	}
	return 0;
}

int func_371(int iParam0)//Position - 0xAE96
{
	if (iParam0 != 0)
	{
		if (__LIB_17__::func_324(0))
		{
			return 1;
		}
	}
	if (iParam0 != 1)
	{
		if (__LIB_17__::func_324(1))
		{
			return 1;
		}
	}
	if (iParam0 != 2)
	{
		if (Global_78583 == 50)
		{
			if (!__LIB_17__::func_298(60f))
			{
				return 1;
			}
		}
		if (((__LIB_17__::func_324(2) || Global_95447[2] == 59) || Global_95447[2] == 72) || Global_95447[2] == 60)
		{
			return 1;
		}
	}
	if (iParam0 != 3)
	{
		if ((__LIB_17__::func_324(3) || Global_95447[3] == 82) || Global_95447[3] == 83)
		{
			return 1;
		}
	}
	return 0;
}

int func_372(int iParam0)//Position - 0x85BBA
{
	if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	if (((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::func_540(14))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
			{
				return 0;
			}
		}
		else
		{
			return 0;
		}
	}
	if (__LIB_17__::func_263())
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
			{
				return 0;
			}
		}
		else
		{
			return 0;
		}
	}
	if (MISC::GET_MISSION_FLAG())
	{
		return 0;
	}
	if (MISC::GET_RANDOM_EVENT_FLAG() && Global_113376)
	{
		return 0;
	}
	if (!__LIB_17__::func_344(iParam0))
	{
	}
	if (!BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1))
	{
		return 0;
	}
	return 1;
}

void func_373()//Position - 0x3021
{
	if (__LIB_0__::isGlobal_43052EqualsValue(14))
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[0 /*29*/])
			{
				Global_20266 = 0;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[1 /*29*/])
			{
				Global_20266 = 1;
			}
			else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == Global_113386.f_28050[2 /*29*/])
			{
				Global_20266 = 2;
			}
			else
			{
				Global_20266 = 0;
			}
		}
	}
	else
	{
		Global_20266 = __LIB_17__::func_341();
		if (Global_20266 == 145)
		{
			Global_20266 = 3;
		}
		if (Global_78319)
		{
			Global_20266 = 3;
		}
		if (Global_20266 > 3)
		{
			Global_20266 = 3;
		}
	}
}

int func_374(int iParam0, int iParam1)//Position - 0x9F24
{
	switch (iParam0)
	{
		case 0:
			switch (iParam1)
			{
				case 20:
					if (__LIB_17__::func_341() == 0)
					{
						return 1;
					}
					else
					{
						return 0;
					}
					break;
				default:
					return 0;
					break;
			}
			break;
		case 1:
			switch (iParam1)
			{
				case 29:
				case 41:
				case 44:
				case 45:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 2:
			switch (iParam1)
			{
				case 53:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 3:
			switch (iParam1)
			{
				case 75:
				case 84:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 4:
			switch (iParam1)
			{
				case 92:
				case 93:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 6:
		case 7:
			switch (iParam1)
			{
				case 99:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 10:
			switch (iParam1)
			{
				case 106:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		case 11:
			return 0;
			break;
		case 13:
			switch (iParam1)
			{
				case 126:
					return 1;
					break;
				default:
					return 0;
					break;
			}
			break;
		default:
			return 0;
			break;
	}
	return 0;
}

int func_375()//Position - 0xE868
{
	if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0))
	{
		return 0;
	}
	switch (__LIB_17__::func_341())
	{
		case 0:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[65])
			{
				return 1;
			}
			break;
		case 1:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[66])
			{
				return 1;
			}
			break;
		case 2:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[65])
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_376(int iParam0)//Position - 0xE8E7
{
	bool bVar0;
	bVar0 = __LIB_17__::func_341();
	if (__LIB_0__::func_515(iParam0))
	{
		return 1;
	}
	if (iParam0 == 49)
	{
		if (bVar0 == 1)
		{
			if (BitTest(Global_113386.f_7229[5], 0) || BitTest(Global_113386.f_7229[6], 0))
			{
				return 0;
			}
		}
		if (__LIB_0__::func_374(bVar0))
		{
			if (BitTest(Global_95468[5], bVar0))
			{
				return 0;
			}
		}
	}
	switch (iParam0)
	{
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
			if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[0], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__::func_374(bVar0))
			{
				if (BitTest(Global_95468[0], bVar0))
				{
					if (iParam0 != 40)
					{
						return 0;
					}
					else
					{
						return 1;
					}
				}
			}
			break;
		case 47:
		case 48:
		case 49:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[5], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__::func_374(bVar0))
			{
				if (BitTest(Global_95468[5], bVar0))
				{
					return 0;
				}
			}
			break;
		case 50:
			if (bVar0 == 1)
			{
				if (BitTest(Global_113386.f_7229[6], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__::func_374(bVar0))
			{
				if (BitTest(Global_95468[6], bVar0))
				{
					return 0;
				}
			}
			break;
		case 51:
		case 52:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[2], 0))
				{
					return 0;
				}
				if (__LIB_0__::func_374(bVar0))
				{
					if (BitTest(Global_95468[2], bVar0))
					{
						return 0;
					}
				}
			}
			else if (bVar0 == 0)
			{
				if (BitTest(Global_113386.f_7229[1], 0))
				{
					return 0;
				}
				if (__LIB_0__::func_374(bVar0))
				{
					if (BitTest(Global_95468[1], bVar0))
					{
						return 0;
					}
				}
			}
			break;
		case 53:
			if (bVar0 == 2)
			{
				if (BitTest(Global_113386.f_7229[3], 0))
				{
					return 0;
				}
			}
			if (__LIB_0__::func_374(bVar0))
			{
				if (BitTest(Global_95468[3], bVar0))
				{
					return 0;
				}
			}
			break;
		default:
			return 0;
			break;
	}
	return 1;
}

void func_377(int iParam0, bool bParam1)//Position - 0x3B3C1
{
	__LIB_17__::func_346(iParam0);
	__LIB_17__::func_340(iParam0, bParam1);
	__LIB_17__::func_335(iParam0);
	__LIB_17__::func_334(iParam0);
	__LIB_17__::func_333(iParam0);
	__LIB_17__::func_332(iParam0);
	__LIB_17__::func_331(iParam0);
}

void func_378()//Position - 0x3E889
{
	struct<50> Var0;
	if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || !__LIB_0__::func_374(__LIB_17__::func_341())) || !__LIB_0__::func_438())
	{
		return;
	}
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_17__::func_342(PLAYER::PLAYER_PED_ID(), &Var0, 1, -1);
	__LIB_0__::func_408(1306, Var0[0], -1);
	__LIB_0__::func_408(1307, Var0[1], -1);
	__LIB_0__::func_408(1308, Var0[2], -1);
	__LIB_0__::func_408(1309, Var0[3], -1);
	__LIB_0__::func_408(1310, Var0[4], -1);
	__LIB_0__::func_408(1311, Var0[5], -1);
	__LIB_0__::func_408(1312, Var0[6], -1);
	__LIB_0__::func_408(1313, Var0[7], -1);
	__LIB_0__::func_408(1314, Var0[8], -1);
	__LIB_0__::func_408(1315, Var0[9], -1);
	__LIB_0__::func_408(1316, Var0[10], -1);
	__LIB_0__::func_408(1317, Var0[11], -1);
	__LIB_0__::func_408(1318, Var0.f_13[0], -1);
	__LIB_0__::func_408(1319, Var0.f_13[1], -1);
	__LIB_0__::func_408(1320, Var0.f_13[2], -1);
	__LIB_0__::func_408(1321, Var0.f_13[3], -1);
	__LIB_0__::func_408(1322, Var0.f_13[4], -1);
	__LIB_0__::func_408(1323, Var0.f_13[5], -1);
	__LIB_0__::func_408(1324, Var0.f_13[6], -1);
	__LIB_0__::func_408(1325, Var0.f_13[7], -1);
	__LIB_0__::func_408(1326, Var0.f_13[8], -1);
	__LIB_0__::func_408(1327, Var0.f_13[9], -1);
	__LIB_0__::func_408(1328, Var0.f_13[10], -1);
	__LIB_0__::func_408(1329, Var0.f_13[11], -1);
	__LIB_0__::func_408(1330, Var0.f_26[0], -1);
	__LIB_0__::func_408(1331, Var0.f_26[1], -1);
	__LIB_0__::func_408(1332, Var0.f_26[2], -1);
	__LIB_0__::func_408(1333, Var0.f_26[3], -1);
	__LIB_0__::func_408(1334, Var0.f_26[4], -1);
	__LIB_0__::func_408(1335, Var0.f_26[5], -1);
	__LIB_0__::func_408(1336, Var0.f_26[6], -1);
	__LIB_0__::func_408(1337, Var0.f_26[7], -1);
	__LIB_0__::func_408(1338, Var0.f_26[8], -1);
	__LIB_0__::func_408(1339, Var0.f_26[9], -1);
	__LIB_0__::func_408(1340, Var0.f_26[10], -1);
	__LIB_0__::func_408(1341, Var0.f_26[11], -1);
	__LIB_0__::func_408(1342, Var0.f_39[0], -1);
	__LIB_0__::func_408(1343, Var0.f_39[1], -1);
	__LIB_0__::func_408(1344, Var0.f_39[2], -1);
	__LIB_0__::func_408(1345, Var0.f_39[3], -1);
	__LIB_0__::func_408(1346, Var0.f_39[4], -1);
	__LIB_0__::func_408(1347, Var0.f_39[5], -1);
	__LIB_0__::func_408(1348, Var0.f_39[6], -1);
	__LIB_0__::func_408(1349, Var0.f_39[7], -1);
	__LIB_0__::func_408(1350, Var0.f_39[8], -1);
	__LIB_0__::func_408(1351, Var0.f_49[0], -1);
	__LIB_0__::func_408(1352, Var0.f_49[1], -1);
	__LIB_0__::func_408(1353, Var0.f_49[2], -1);
	__LIB_0__::func_408(1354, Var0.f_49[3], -1);
	__LIB_0__::func_408(1355, Var0.f_49[4], -1);
	__LIB_0__::func_408(1356, Var0.f_49[5], -1);
	__LIB_0__::func_408(1357, Var0.f_49[6], -1);
	__LIB_0__::func_408(1358, Var0.f_49[7], -1);
	__LIB_0__::func_408(1359, Var0.f_49[8], -1);
	__LIB_0__::func_408(1360, __LIB_17__::func_341(), -1);
	STATS::STAT_SET_BOOL(joaat("CLO_STORED_INITIAL"), true, true);
	Global_113386.f_2363.f_539.f_4315 = 1;
}

int func_379(int iParam0)//Position - 0x86326
{
	int iVar0;
	int iVar1;
	iVar1 = 0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (Global_113386.f_7688[iVar0 /*15*/] == iParam0)
		{
			if (Global_43599 != iVar0)
			{
				__LIB_17__::func_328(iVar0);
				__LIB_16__::func_607(iParam0);
				iVar1 = 1;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_198)
	{
		if (Global_113386.f_7688.f_137[iVar0 /*15*/] == iParam0)
		{
			__LIB_16__::func_607(iParam0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_650)
	{
		if (Global_113386.f_7688.f_199[iVar0 /*15*/] == iParam0)
		{
			__LIB_13__::func_304(iParam0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (Global_113386.f_7688.f_651[iVar0 /*14*/] == iParam0)
		{
			__LIB_17__::func_327(iVar0);
			iVar1 = 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (Global_113386.f_7688.f_765[iVar0 /*10*/] == iParam0)
		{
			__LIB_13__::func_303(iVar0);
			iVar1 = 1;
		}
		iVar0++;
	}
	return iVar1;
}

void func_380(var uParam0, var uParam1)//Position - 0xA9F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		iVar1 = __LIB_0__::func_119(iVar0);
		if (iVar1 == 145)
		{
		}
		else if (iVar1 == __LIB_17__::func_341())
		{
		}
		else if (!__LIB_0__::func_703(uParam0, __LIB_17__::func_262(iVar1)))
		{
		}
		else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("bagger"))
		{
			Global_95464 = 6;
		}
		else
		{
			Global_95464 = 4;
		}
		if (Global_95464 != 4)
		{
			iVar2 = 0;
			while (iVar2 < *uParam1)
			{
				if (iVar0 == (*uParam1)[iVar2])
				{
					iVar3 = ENTITY::GET_ENTITY_MODEL(iVar0);
					if (iVar3 == joaat("issi2"))
					{
						Global_95464 = 7;
					}
					if (iVar3 == joaat("sentinel2"))
					{
						Global_95464 = 6;
					}
				}
				iVar2++;
			}
		}
	}
}

int func_381(int iParam0)//Position - 0xB363
{
	return __LIB_17__::func_348(iParam0, 1);
}

void func_382(int* iParam0, int iParam1, int iParam2, var uParam3, var uParam4)//Position - 0x18878
{
	struct<3> Var0;
	if (iParam2 != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
		{
			if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				Var0 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
				STREAMING::REQUEST_MODEL(iParam2);
				if (STREAMING::HAS_MODEL_LOADED(iParam2))
				{
					*iParam0 = PED::CREATE_PED(4, iParam2, Var0 + *uParam3, (ENTITY::GET_ENTITY_HEADING(iParam1) + *uParam4), true, true);
					__LIB_17__::func_274(iParam0, joaat("NO_RELATIONSHIP"));
					ENTITY::SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(iParam1, true);
					if (iParam2 == joaat("S_M_Y_Cop_01"))
					{
						PED::SET_PED_HIGHLY_PERCEPTIVE(*iParam0, true);
					}
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam2);
				}
			}
		}
	}
	else if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(*iParam0, false))
		{
			if (ENTITY::IS_ENTITY_ATTACHED(*iParam0))
			{
				ENTITY::DETACH_ENTITY(*iParam0, true, true);
			}
		}
		PED::DELETE_PED(iParam0);
	}
}

float func_383(int iParam0, int iParam1)//Position - 0xD4E5
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_14__::func_791(iParam0);
	iVar1 = __LIB_14__::func_791(iParam1);
	iVar2 = __LIB_13__::func_95(iVar0, iVar1);
	if (iVar2 < 9)
	{
		if (__LIB_1__::func_13(&(Global_113386.f_18103.f_175[iVar2 /*19*/].f_5)))
		{
			return __LIB_17__::func_359(&(Global_113386.f_18103.f_175[iVar2 /*19*/].f_5));
		}
	}
	return 0f;
}

int func_384(int iParam0, var uParam1, var uParam2, char* sParam3, char* sParam4, int iParam5, char* sParam6, float fParam7)//Position - 0x15BE7
{
	switch (iParam0)
	{
		case 0:
		case 5:
		case 21:
		case 24:
		case 16:
		case 38:
		case 40:
		case 36:
		case 39:
		case 33:
		case 45:
		case 61:
		case 63:
		case 53:
		case 52:
		case 67:
		case 81:
		case 76:
		case 77:
		case 78:
		case 85:
		case 79:
		case 86:
		case 80:
		case 87:
		case 89:
		case 90:
		case 91:
		case 104:
		case 105:
		case 101:
		case 100:
		case 119:
		case 120:
		case 113:
		case 114:
		case 112:
		case 109:
		case 123:
		case 122:
		case 126:
		case 136:
			if (__LIB_17__::func_357(uParam1, uParam2, sParam3, sParam4, iParam5, 0, sParam6))
			{
				__LIB_17__::func_356(iParam0, *uParam2, fParam7);
				return 1;
			}
			return 0;
			break;
		case 6:
		case 31:
			if (__LIB_17__::func_357(uParam1, uParam2, sParam3, sParam4, iParam5, 1, sParam6))
			{
				__LIB_17__::func_356(iParam0, *uParam2, fParam7);
				return 1;
			}
			return 0;
			break;
	}
	return __LIB_17__::func_357(uParam1, uParam2, sParam3, sParam4, iParam5, 0, sParam6);
}

int func_385(var uParam0, int iParam1, struct<3> Param2, int iParam3)//Position - 0x19E8C
{
	struct<98> Var0;
	int iVar1;
	int iVar2;
	int iVar3;
	Var0.f_11 = 12;
	Var0.f_31 = 49;
	Var0.f_81 = 2;
	__LIB_17__::func_152(iParam1, &Var0, iParam3);
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (__LIB_17__::func_283(iVar1, Var0))
		{
			*uParam0 = iVar1;
			return 1;
		}
	}
	iVar2 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (__LIB_17__::func_283(iVar2, Var0))
	{
		*uParam0 = iVar2;
		return 1;
	}
	iVar3 = VEHICLE::GET_RANDOM_VEHICLE_IN_SPHERE(Param2, 20f, Var0.f_0, 6);
	if (__LIB_17__::func_283(iVar3, Var0))
	{
		*uParam0 = iVar3;
		return 1;
	}
	return 0;
}

void func_386(int iParam0, int iParam1)//Position - 0x3B18B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	var uVar12;
	if (__LIB_17__::func_315(iParam1, &iVar0, &iVar1, &iVar2, &iVar3, &iVar4, &iVar5, &iVar6, &iVar7, &iVar8, &iVar9, &iVar10, &iVar11, &uVar12))
	{
		__LIB_17__::func_358(iParam0, iVar0);
		__LIB_17__::func_358(iParam0, iVar1);
		__LIB_17__::func_358(iParam0, iVar2);
		__LIB_17__::func_358(iParam0, iVar3);
		__LIB_17__::func_358(iParam0, iVar4);
		__LIB_17__::func_358(iParam0, iVar5);
		__LIB_17__::func_358(iParam0, iVar6);
		__LIB_17__::func_358(iParam0, iVar7);
		__LIB_17__::func_358(iParam0, iVar8);
		__LIB_17__::func_358(iParam0, iVar9);
		__LIB_17__::func_358(iParam0, iVar10);
		__LIB_17__::func_358(iParam0, iVar11);
		if (__LIB_1__::func_490(uVar12, 1))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
		}
		if (__LIB_1__::func_490(uVar12, 2))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
			PED::SET_PED_PROP_INDEX(iParam0, 1, 0, 0, false);
		}
		if (__LIB_1__::func_490(uVar12, 4))
		{
			PED::CLEAR_ALL_PED_PROPS(iParam0);
			PED::SET_PED_PROP_INDEX(iParam0, 1, 1, 0, false);
		}
	}
}

int func_387(int* iParam0, float fParam1)//Position - 0x15ED
{
	if (__LIB_1__::func_13(iParam0))
	{
		if (__LIB_17__::func_359(iParam0) > fParam1)
		{
			return 1;
		}
	}
	return 0;
}

int func_388(int* iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x6B09
{
	int iVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	if (ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		return 0;
	}
	if (iParam0 == PLAYER::PLAYER_PED_ID())
	{
		return 0;
	}
	if (((iParam1 != 3 && Global_95447[iParam1] != 47) && Global_95447[iParam1] != 137) && Global_95447[iParam1] != 138)
	{
		TASK::CLEAR_PED_TASKS(iParam0);
	}
	iVar0 = 0;
	iVar1 = 0;
	iVar2 = 0;
	PED::SET_PED_RESET_FLAG(iParam0, 60, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 104, true);
	TASK::SET_PED_PATH_CAN_USE_CLIMBOVERS(iParam0, false);
	iVar0 = 1;
	PED::SET_PED_RESET_FLAG(iParam0, 62, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 294, true);
	if (Global_95447[iParam1] == 121 || Global_95447[iParam1] == 118)
	{
	}
	else
	{
		PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 2);
		iVar0 = 1;
	}
	if (Global_95447[iParam1] == 108)
	{
		PED::SET_RAGDOLL_BLOCKING_FLAGS(iParam0, 64);
		iVar0 = 1;
	}
	if (__LIB_17__::func_275(iParam1, &fVar3))
	{
		PED::SET_PED_CAPSULE(iParam0, fVar3);
		iVar1 = 1;
	}
	if (!bParam3)
	{
		if (__LIB_17__::func_361(iParam0, iParam1))
		{
			iVar2 = 1;
		}
	}
	__LIB_17__::func_274(&iParam0, iParam2);
	if (Global_95447[iParam1] == 116)
	{
		PED::SET_FORCE_STEP_TYPE(iParam0, true, 20, 0);
		iVar0 = 1;
	}
	else if (Global_95447[iParam1] == 41)
	{
	}
	else
	{
		PED::SET_FORCE_STEP_TYPE(iParam0, true, 0, 1);
		iVar0 = 1;
	}
	if (__LIB_17__::func_278(Global_95447[iParam1]))
	{
		PED::SET_FACIAL_IDLE_ANIM_OVERRIDE(iParam0, "mood_sleeping_1", 0);
		iVar0 = 1;
	}
	else
	{
		PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(iParam0);
	}
	if ((iVar0 || iVar1) || iVar2)
	{
		return 1;
	}
	return 0;
}

void func_389(int iParam0, int iParam1)//Position - 0x8D2A
{
	__LIB_17__::func_265(iParam0);
	Global_95447[iParam0] = iParam1;
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 2:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(1, iParam1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 2:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(1, iParam1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 2:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(1, iParam1);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 2:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(1, iParam1);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(2, iParam1);
					break;
				case 2:
					__LIB_17__::func_365(0, iParam1);
					__LIB_17__::func_365(1, iParam1);
					break;
			}
			break;
		case 12:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					break;
			}
			break;
		case 13:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					break;
			}
			break;
		case 14:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					break;
			}
			break;
		case 15:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					break;
			}
			break;
		case 25:
			switch (iParam0)
			{
				case 0:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(0, iParam1);
					break;
			}
			break;
		case 47:
			switch (iParam0)
			{
				case 2:
					__LIB_17__::func_365(3, iParam1);
					break;
				case 3:
					__LIB_17__::func_365(2, iParam1);
					break;
			}
			break;
		case 56:
			switch (iParam0)
			{
				case 2:
					__LIB_17__::func_365(0, iParam1);
					break;
				case 0:
					__LIB_17__::func_365(2, iParam1);
					break;
			}
			break;
		case 57:
			switch (iParam0)
			{
				case 2:
					__LIB_17__::func_365(0, iParam1);
					break;
				case 0:
					__LIB_17__::func_365(2, iParam1);
					break;
			}
			break;
		case 58:
			switch (iParam0)
			{
				case 2:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(2, iParam1);
					break;
			}
			break;
		case 74:
			switch (iParam0)
			{
				case 2:
					__LIB_17__::func_365(1, iParam1);
					break;
				case 1:
					__LIB_17__::func_365(2, iParam1);
					break;
			}
			break;
		case 99:
			switch (iParam0)
			{
				case 6:
					__LIB_17__::func_365(7, iParam1);
					break;
				case 7:
					__LIB_17__::func_365(6, iParam1);
					break;
			}
			break;
		case 116:
			switch (iParam0)
			{
				case 9:
					__LIB_17__::func_365(11, iParam1);
					break;
				case 11:
					__LIB_17__::func_365(9, iParam1);
					break;
			}
			break;
		case 117:
			switch (iParam0)
			{
				case 9:
					__LIB_17__::func_365(11, iParam1);
					break;
				case 11:
					__LIB_17__::func_365(9, iParam1);
					break;
			}
			break;
		case 124:
			switch (iParam0)
			{
				case 11:
					__LIB_17__::func_365(8, iParam1);
					break;
				case 8:
					__LIB_17__::func_365(11, iParam1);
					break;
			}
			break;
		case 136:
			switch (iParam0)
			{
				case 13:
					__LIB_17__::func_365(14, iParam1);
					break;
				case 14:
					__LIB_17__::func_365(13, iParam1);
					break;
			}
			break;
	}
}

int func_390(int iParam0, struct<3> Param1, int iParam2, var uParam3)//Position - 0x83134
{
	var uVar0;
	int iVar1;
	bool bVar2;
	int iVar3;
	float fVar4;
	if (!MISC::GET_GROUND_Z_FOR_3D_COORD(Param1, &uVar0, false, false))
	{
		if (!MISC::GET_GROUND_Z_FOR_3D_COORD(Param1 + Vector(1f, 0f, 0f), &uVar0, false, false))
		{
			return 0;
		}
	}
	if (Global_3)
	{
		if ((iParam0 == 1 || iParam0 == 2) || iParam0 == 3)
		{
			return 1;
		}
	}
	if (!__LIB_17__::func_367(iParam0, Param1, iParam2, uParam3))
	{
		return 0;
	}
	iVar1 = 0;
	bVar2 = __LIB_17__::func_264(iParam0, &iVar1);
	if (__LIB_17__::func_366(bVar2))
	{
		__LIB_17__::func_250(iParam0, 140);
		return 0;
	}
	if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		if (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 11)
			{
				return 1;
			}
		}
	}
	if (iParam0 == 12)
	{
		if (!INTERIOR::IS_COLLISION_MARKED_OUTSIDE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)))
		{
			return 0;
		}
		return 1;
	}
	if (bVar2 != 145)
	{
		if (__LIB_0__::func_374(bVar2))
		{
			iVar1 = __LIB_16__::func_512(bVar2);
		}
		else
		{
			iVar1 = __LIB_15__::func_957(bVar2);
		}
	}
	if (Global_78583 == 0)
	{
		if (bVar2 == 44 && Global_95447[5] == 96)
		{
			return 1;
		}
	}
	if (Global_78583 == 71)
	{
		if ((bVar2 == 32 && Global_95447[13] == 136) || (bVar2 == 24 && Global_95447[14] == 136))
		{
			return 1;
		}
	}
	iVar3 = 1;
	fVar4 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), Param1);
	if (ENTITY::WOULD_ENTITY_BE_OCCLUDED(iVar1, Param1, false))
	{
		if (CAM::IS_SPHERE_VISIBLE(Param1, 4f))
		{
			if (fVar4 < 100f)
			{
				iVar3 = 0;
			}
		}
	}
	else if (CAM::IS_SPHERE_VISIBLE(Param1, 1f))
	{
		if (fVar4 < 100f)
		{
			iVar3 = 0;
		}
	}
	if ((bVar2 == 14 && Global_95447[0] == 23) && !INTERIOR::IS_VALID_INTERIOR(iParam2))
	{
		if (ENTITY::WOULD_ENTITY_BE_OCCLUDED(iVar1, Param1, false))
		{
			if (CAM::IS_SPHERE_VISIBLE(Param1, 8f))
			{
				if (fVar4 < 900f)
				{
					iVar3 = 0;
				}
			}
		}
		else if (CAM::IS_SPHERE_VISIBLE(Param1, 2f))
		{
			if (fVar4 < 900f)
			{
				iVar3 = 0;
			}
		}
	}
	return iVar3;
}

int func_391(int iParam0, int iParam1)//Position - 0x9C50
{
	switch (iParam1)
	{
		case 6:
			return __LIB_17__::func_297(iParam0);
			break;
		case 31:
			return __LIB_17__::func_297(iParam0);
			break;
		case 7:
		case 22:
		case 23:
			return __LIB_17__::func_362(iParam0);
			break;
		case 27:
			return __LIB_17__::func_362(iParam0);
			break;
		case 51:
			return __LIB_17__::func_362(iParam0);
			break;
		case 36:
			return __LIB_17__::func_371(iParam0);
			break;
		case 55:
		case 71:
			return __LIB_17__::func_371(iParam0);
			break;
		case 34:
		case 35:
		case 19:
		case 25:
		case 32:
		case 33:
		case 4:
			if (__LIB_17__::func_371(iParam0) || __LIB_17__::func_296(iParam0))
			{
				return 1;
			}
			break;
		case 12:
		case 13:
		case 14:
		case 15:
			return __LIB_17__::func_295(iParam0);
			break;
		case 37:
			return __LIB_17__::func_295(iParam0);
			break;
		case 56:
			return __LIB_17__::func_295(iParam0);
			break;
		case 57:
			return __LIB_17__::func_295(iParam0);
			break;
		case 58:
			return __LIB_17__::func_295(iParam0);
			break;
		case 53:
			if (Global_95447[3] == 82 || Global_95447[3] == 83)
			{
				return 1;
			}
			break;
		case 5:
		case 21:
			return __LIB_17__::func_296(iParam0);
			break;
		case 26:
		case 46:
		case 54:
		case 70:
			return __LIB_17__::func_294(iParam0);
			break;
		case 82:
		case 83:
			return __LIB_17__::func_371(iParam0);
			break;
		case 124:
			if (Global_95447[8] == 140)
			{
				return 1;
			}
			break;
		case 119:
		case 107:
		case 110:
			return __LIB_17__::func_293(iParam0);
			break;
		case 118:
		case 121:
		case 108:
		case 114:
		case 116:
		case 123:
			return __LIB_17__::func_292(iParam0);
			break;
	}
	return 0;
}

int func_392(var uParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x18E50
{
	struct<98> Var0;
	int iVar1;
	int iVar2;
	if (!__LIB_0__::func_374(bParam1))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_17__::func_152(bParam1, &Var0, iParam5);
		if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*uParam0) != Var0.f_0)
			{
			}
			return 1;
		}
		if ((bParam1 == 17 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][0 /*98*/] == Var0.f_0) || (bParam1 == 15 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][1 /*98*/] == Var0.f_0))
		{
			if (bParam1 == 17)
			{
				iVar1 = 0;
			}
			else if (bParam1 == 15)
			{
				iVar1 = 1;
			}
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]))
			{
				*uParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*uParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*uParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*uParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*uParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*uParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*uParam0, 1250f);
				Var0.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_5, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_7, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Var0.f_2);
				iVar2 = 0;
				while (iVar2 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar2 + 1, !Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_11[iVar2]);
					iVar2++;
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
				{
					if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
					{
						if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
						{
							VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
						}
						else
						{
							VEHICLE::LOWER_CONVERTIBLE_ROOF(*uParam0, true);
						}
					}
				}
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_27));
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26);
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_84, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_85, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_93, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_94, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
						{
							if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_670(uParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Var0.f_96);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
				}
				__LIB_17__::func_153(*uParam0);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var0.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var0.f_0))
			{
				*uParam0 = VEHICLE::CREATE_VEHICLE(Var0.f_0, Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*uParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*uParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*uParam0, true);
				__LIB_17__::func_343(uParam0, Var0);
				if (bParam1 == 17 || bParam1 == 15)
				{
					__LIB_17__::func_153(*uParam0);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var0.f_0);
				}
				return 1;
			}
		}
	}
	return 0;
}

int func_393(int iParam0, struct<3> Param1, float fParam2)//Position - 0x83A3B
{
	if (!__LIB_17__::func_372(iParam0))
	{
		return 0;
	}
	if (MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), Param1, true) >= (100f * fParam2))
	{
		return 0;
	}
	if (Global_100491)
	{
		return 0;
	}
	return 1;
}

int func_394(char* sParam0, int iParam1, bool bParam2)//Position - 0x269F
{
	Global_21606 = 0;
	if (Global_21605 == 0 || Global_21607 == 2)
	{
		if (Global_21605 != 0)
		{
			if (iParam1 > Global_21607)
			{
				if (Global_21612 == 0)
				{
					AUDIO::STOP_SCRIPTED_CONVERSATION(false);
					Global_20266.f_1 = 3;
					Global_21605 = 0;
					Global_21606 = 1;
					Global_21658 = 0;
					Global_21601 = 0;
					Global_21602 = 0;
					Global_21616 = 0;
					Global_21615 = 0;
					Global_20265 = 0;
				}
				else
				{
					__LIB_0__::func_74();
					return 0;
				}
			}
			else
			{
				return 0;
			}
		}
		if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING())
		{
			return 0;
		}
		if (__LIB_0__::func_194(8, -1))
		{
			return 0;
		}
		Global_21681 = { Global_21675 };
		__LIB_0__::func_228();
		Global_20894 = { Global_21059 };
		Global_21611 = Global_21612;
		Global_21618 = Global_21619;
		Global_2883586 = Global_2883585;
		Global_21620 = { Global_21636 };
		Global_21613 = Global_21614;
		Global_22595 = Global_22596;
		Global_22603 = { Global_22609 };
		Global_22597 = Global_22598;
		Global_22599 = Global_22600;
		Global_22601 = Global_22602;
		Global_21224.f_370 = Global_22594;
		Global_21224.f_368 = Global_22592;
		Global_21224.f_369 = Global_22593;
		Global_21601 = Global_21602;
		if (Global_21611)
		{
			MISC::CLEAR_BIT(&Global_8136, 20);
			MISC::CLEAR_BIT(&Global_8137, 17);
			MISC::CLEAR_BIT(&Global_8138, 0);
			if (bParam2)
			{
				__LIB_17__::func_373();
				if (Global_8941[Global_20266 /*2811*/][0 /*281*/].f_259 == 2)
				{
					if (iParam1 == 13)
					{
					}
					else
					{
						return 0;
					}
				}
				if (Global_20266.f_1 > 3)
				{
					return 0;
				}
			}
			if (Global_20232 == 1)
			{
				return 0;
			}
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (__LIB_0__::func_227())
				{
					return 0;
				}
				if (TASK::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID()))
				{
					return 0;
				}
				if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), joaat("GADGET_PARACHUTE")))
				{
					return 0;
				}
				if (!Global_78319)
				{
					if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID()))
					{
						return 0;
					}
					if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID()))
					{
						return 0;
					}
					if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID()))
					{
						return 0;
					}
					if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID(), 0))
					{
						return 0;
					}
				}
			}
			if (__LIB_0__::func_73())
			{
				return 0;
			}
			else
			{
				switch (Global_20266.f_1)
				{
					case 7:
						return 0;
						break;
					case 8:
						return 0;
						break;
					case 9:
						break;
					case 10:
						break;
					default:
						break;
				}
				if (BitTest(Global_8136, 9))
				{
					return 0;
				}
			}
			__LIB_0__::func_226();
			Global_21615 = bParam2;
		}
		Global_21607 = iParam1;
		StringCopy(&Global_21224, sParam0, 24);
		Global_20471 = 0;
		__LIB_0__::func_225();
		__LIB_0__::func_665();
		return 1;
	}
	if (Global_21605 == 5)
	{
		return 0;
	}
	if (iParam1 < Global_21607 || iParam1 == Global_21607)
	{
		return 0;
	}
	if (iParam1 == 2)
	{
	}
	else
	{
		__LIB_0__::func_74();
	}
	return 0;
}

void func_395(int iParam0)//Position - 0xD942
{
	struct<7> Var0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	float fVar4;
	int iVar5;
	int iVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	if (!__LIB_0__::func_346())
	{
		return;
	}
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	Var0 = { __LIB_0__::func_403(iParam0) };
	if (BitTest(Var0.f_4, 2))
	{
		__LIB_13__::func_730(iParam0, &Var0);
	}
	if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
	{
		if (CUTSCENE::IS_CUTSCENE_PLAYING())
		{
			return;
		}
	}
	bVar1 = false;
	bVar2 = false;
	fVar4 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true);
	if ((BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] == 2) && fVar4 > 210f)
	{
		MISC::CLEAR_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
		Global_38430[iParam0] = 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("startup_positioning")) == 0)
	{
		if (BitTest(Global_38657[(iParam0 / 32)], (iParam0 % 32)))
		{
			if (fVar4 < 25f)
			{
				if (Global_100493.f_373 == 0)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						Global_100493.f_373 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
					}
				}
				iVar5 = Global_100493.f_373;
				iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
				if (iVar5 == iVar6 && iVar5 != 0)
				{
					MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
					Global_38884[iParam0] = 3;
					MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
				}
			}
			MISC::CLEAR_BIT(&(Global_38657[(iParam0 / 32)]), (iParam0 % 32));
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)))
	{
		iVar3 = Global_38884[iParam0];
	}
	else if (BitTest(Var0.f_4, 0))
	{
		if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive)
		{
			iVar3 = __LIB_17__::func_376(iParam0);
		}
		else
		{
			iVar3 = 0;
		}
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			iVar3 = 0;
		}
	}
	else if (BitTest(Var0.f_4, 1) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("ambient_solomon")) == 0)
	{
		if (__LIB_17__::func_375())
		{
			iVar3 = 0;
		}
		else
		{
			iVar3 = 1;
		}
	}
	else
	{
		iVar3 = Global_113386.f_7261[iParam0];
	}
	if (Global_39111[iParam0] != iVar3)
	{
		bVar1 = true;
	}
	if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
	{
		if (!BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) || (Global_38430[iParam0] == 0 && Global_38884[iParam0] != 2))
		{
			bVar1 = true;
		}
	}
	if (bVar1)
	{
		if (!Global_38411)
		{
		}
		else
		{
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(Var0.f_5, Var0.f_3, Var0, false, false, false);
			}
			switch (iVar3)
			{
				case 1:
					if (BitTest(Var0.f_4, 3))
					{
						bVar7 = true;
					}
					else if (fVar4 > 3f || MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var0.f_5)) <= 0.015f)
					{
						iVar8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
						iVar9 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
						if (iVar8 != iVar9 || iVar8 == 0)
						{
							bVar7 = true;
						}
					}
					if (bVar7)
					{
						if (Var0.f_6 != 0f)
						{
							OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
						}
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
						bVar2 = true;
					}
					break;
				case 4:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 2:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 0:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, true);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 3:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, 0, false, true);
					bVar2 = true;
					break;
				case 5:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 6:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				default:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				}
		}
		if (bVar2)
		{
			MISC::CLEAR_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			Global_39111[iParam0] = iVar3;
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] != 2)
	{
		MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
		__LIB_0__::func_401(iParam0);
		if (Global_38430[iParam0] < 2)
		{
			Global_38430[iParam0]++;
		}
	}
}

void func_396(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9)//Position - 0x83CE5
{
	int iVar0;
	struct<8> Var1;
	int iVar2;
	iVar0 = 0;
	while (iVar0 < *uParam0)
	{
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING((*uParam0)[iVar0]))
		{
			PED::DETACH_SYNCHRONIZED_SCENE((*uParam0)[iVar0]);
		}
		(*uParam0)[iVar0] = -1;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < *uParam1)
	{
		if (__LIB_17__::func_272((*uParam1)[iVar0], "familyVeh", iVar0))
		{
			VEHICLE::DELETE_VEHICLE(uParam1[iVar0]);
		}
		if (ENTITY::DOES_ENTITY_EXIST((*uParam1)[iVar0]) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT((*uParam1)[iVar0], true))
		{
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(uParam1[iVar0]);
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < *uParam2)
	{
		if (__LIB_0__::func_478(4, (*uParam2)[iVar0]))
		{
			__LIB_0__::func_483(4, (*uParam2)[iVar0], 0);
		}
		if (*uParam2)[iVar0] != PLAYER::PLAYER_PED_ID()
		{
			if (__LIB_17__::func_272((*uParam2)[iVar0], "familyPed", iVar0))
			{
				PED::DELETE_PED(uParam2[iVar0]);
			}
			__LIB_17__::func_270(uParam2[iVar0]);
		}
		if (ENTITY::DOES_ENTITY_EXIST((*uParam3)[iVar0]))
		{
			if (ENTITY::IS_ENTITY_ATTACHED((*uParam3)[iVar0]))
			{
				ENTITY::DETACH_ENTITY((*uParam3)[iVar0], true, true);
			}
		}
		if (__LIB_17__::func_272((*uParam3)[iVar0], "familyProp", iVar0))
		{
			OBJECT::DELETE_OBJECT(uParam3[iVar0]);
		}
		if (ENTITY::DOES_ENTITY_EXIST((*uParam3)[iVar0]) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT((*uParam3)[iVar0], true))
		{
			ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(uParam3[iVar0]);
		}
		if (__LIB_17__::func_272((*uParam5)[iVar0], "familyExtraPed", iVar0))
		{
			PED::DELETE_PED(uParam5[iVar0]);
		}
		if (ENTITY::DOES_ENTITY_EXIST((*uParam5)[iVar0]) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT((*uParam5)[iVar0], true))
		{
			ENTITY::SET_PED_AS_NO_LONGER_NEEDED(uParam5[iVar0]);
		}
		if ((*uParam4)[iVar0] != 0)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED((*uParam4)[iVar0]);
		}
		if ((*uParam6)[iVar0] != 0)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED((*uParam6)[iVar0]);
		}
		__LIB_17__::func_269(uParam7[iVar0], uParam8[iVar0], uParam9[iVar0 /*16*/]);
		iVar0++;
	}
	iVar2 = 0;
	while (iVar2 < 139)
	{
		StringCopy(&Var1, "", 64);
		if (__LIB_17__::func_268(iVar2, &Var1))
		{
			STREAMING::REMOVE_ANIM_DICT(&Var1);
		}
		iVar2++;
	}
	__LIB_17__::func_312();
	__LIB_17__::func_329();
	__LIB_17__::func_379(-181320640);
	__LIB_17__::func_379(1418815087);
	__LIB_17__::func_379(2087297077);
	__LIB_17__::func_379(313472619);
	__LIB_17__::func_379(2038672434);
	__LIB_17__::func_379(1666308520);
	__LIB_17__::func_379(1894462438);
	__LIB_17__::func_379(1728635625);
	__LIB_17__::func_379(975196153);
	__LIB_17__::func_379(-710274964);
	__LIB_17__::func_379(1289879258);
	__LIB_17__::func_379(1621076324);
	__LIB_17__::func_379(1005256598);
	__LIB_17__::func_379(1127548000);
	__LIB_17__::func_379(-1291788156);
	__LIB_17__::func_379(1993031175);
	Global_95464 = 8;
	Global_95465 = -1;
}

int func_397(int iParam0, var uParam1, struct<3> Param2, struct<3> Param3, var uParam4)//Position - 0xCF
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	int iVar12;
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return 0;
	}
	if (Global_95465 != -1)
	{
		return 0;
	}
	if (__LIB_0__::func_703(iParam0, __LIB_17__::func_345()))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = __LIB_0__::func_484(iVar0);
		if (!__LIB_17__::func_344(iVar1))
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_97919[iVar0]))
			{
				if (__LIB_0__::func_703(iParam0, __LIB_17__::func_262(iVar1)))
				{
					return 0;
				}
			}
		}
		iVar0++;
	}
	bVar3 = 145;
	iVar2 = 0;
	while (iVar2 < 3)
	{
		if (__LIB_0__::func_703(iParam0, __LIB_17__::func_262(iVar2)))
		{
			bVar3 = iVar2;
		}
		iVar2++;
	}
	if (!__LIB_0__::func_374(bVar3))
	{
		return 0;
	}
	if (!__LIB_0__::func_562(bVar3))
	{
		return 0;
	}
	switch (bVar3)
	{
		case 0:
			if (Global_4541526)
			{
				return 0;
			}
			break;
		case 1:
			break;
		case 2:
			break;
		default:
			return 0;
			break;
	}
	if (!__LIB_17__::func_338(bVar3, __LIB_17__::func_341()))
	{
		return 0;
	}
	switch (bVar3)
	{
		case 0:
			iVar4 = 0;
			break;
		case 1:
			iVar4 = 1;
			break;
		case 2:
			iVar4 = 2;
			break;
		default:
			return 0;
			break;
	}
	if (__LIB_17__::func_284(bVar3, iVar4) == 1)
	{
		return 0;
	}
	if (__LIB_0__::func_78(Param3, 0f, 0f, 0f, 0))
	{
		Param3 = { 50f, 50f, 50f };
	}
	Var5 = { Param2 - Param3 };
	Var6 = { Param2 + Param3 };
	__LIB_17__::func_261(Var5, Var6);
	__LIB_17__::func_260(Var5, Var6, &(uParam1->f_1));
	__LIB_17__::func_380(iParam0, uParam4);
	__LIB_17__::func_259(Var5, Var6);
	__LIB_17__::func_258(Var5, Var6, &(uParam1->f_4));
	if (Global_95464 != 8)
	{
		if (Global_95465 == -1)
		{
			iVar7 = -1;
			if (__LIB_0__::func_703(iParam0, __LIB_17__::func_345()))
			{
			}
			iVar8 = 5000;
			if (__LIB_0__::func_680())
			{
				switch (bVar3)
				{
					case 0:
						iVar7 = -181320640;
						break;
					case 1:
						iVar7 = 1418815087;
						break;
					case 2:
						iVar7 = 2087297077;
						break;
					default:
						return 0;
						break;
				}
				iVar9 = -1;
				switch (Global_95464)
				{
					case 0:
						iVar10 = 11;
						iVar9 = 3;
						break;
					case 1:
						iVar10 = 12;
						iVar9 = 3;
						break;
					case 4:
						iVar10 = 13;
						iVar8 = 10000;
						iVar9 = 3;
						break;
					case 6:
						iVar10 = 14;
						iVar8 = 10000;
						iVar9 = 3;
						break;
					case 7:
						iVar10 = 15;
						iVar8 = 10000;
						iVar9 = 3;
						break;
					case 2:
						iVar10 = 16;
						iVar9 = 3;
						break;
					case 3:
						iVar10 = 17;
						iVar9 = 3;
						break;
					case 5:
						iVar10 = 18;
						iVar9 = 3;
						break;
					default:
						return 0;
						break;
				}
				if ((iVar10 == 14 || iVar10 == 15) && !iVar7 == -181320640)
				{
					iVar10 = 13;
				}
				iVar12 = MISC::GET_RANDOM_INT_IN_RANGE(0, iVar9);
				switch (iVar12)
				{
					case 0:
						iVar11 = 19;
						break;
					case 1:
						iVar11 = 20;
						break;
					case 2:
						iVar11 = 21;
						break;
					case 3:
						iVar11 = 22;
						break;
					case 4:
						iVar11 = 23;
						break;
					default:
						return 0;
						break;
				}
				if (__LIB_17__::func_330(iVar7, iVar10, iVar11, 6, __LIB_17__::func_345(), bVar3, iVar8, 10000, -1, 0, -1, 0, 1))
				{
					Global_95465 = MISC::GET_GAME_TIMER();
					return 1;
				}
			}
			else
			{
				switch (Global_95464)
				{
					case 0:
						switch (bVar3)
						{
							case 0:
								iVar7 = 2038672434;
								break;
							case 1:
								iVar7 = 975196153;
								break;
							case 2:
								iVar7 = 1127548000;
								break;
							default:
								return 0;
								break;
						}
						break;
					case 4:
						switch (bVar3)
						{
							case 0:
								iVar7 = 1666308520;
								break;
							case 1:
								iVar7 = -710274964;
								break;
							case 2:
								iVar7 = -1291788156;
								break;
							default:
								return 0;
								break;
						}
						iVar8 = 10000;
						break;
					case 6:
						switch (bVar3)
						{
							case 1:
								iVar7 = 1289879258;
								break;
							default:
								return 0;
								break;
						}
						break;
					case 3:
						switch (bVar3)
						{
							case 0:
								iVar7 = 1894462438;
								break;
							case 1:
								iVar7 = 1621076324;
								break;
							case 2:
								iVar7 = 1993031175;
								break;
							default:
								return 0;
								break;
						}
						break;
					case 1:
					case 2:
					case 5:
					case 7:
						return 0;
						break;
					default:
						return 0;
						break;
				}
				if (__LIB_17__::func_320(iVar7, 6, __LIB_17__::func_345(), bVar3, bVar3, iVar8, 10000, -1, -1, 0, -1, 0))
				{
					Global_95465 = MISC::GET_GAME_TIMER();
					return 1;
				}
			}
		}
	}
	return 0;
}

bool func_398(int iParam0)//Position - 0xA616
{
	int iVar0;
	iVar0 = Global_113386.f_2363.f_539.f_2296[iParam0];
	return __LIB_17__::func_381(iVar0);
}

void func_399(int iParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7, var uParam8, var uParam9, var uParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16)//Position - 0x2A199
{
	Global_21602 = iParam0;
	Global_21612 = 0;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22602 = 0;
	Global_2883585 = 0;
	(*uParam1)[0] = uParam3;
	(*uParam2)[0] = uParam4;
	(*uParam1)[1] = uParam5;
	(*uParam2)[1] = uParam6;
	(*uParam1)[2] = uParam7;
	(*uParam2)[2] = uParam8;
	(*uParam1)[3] = uParam9;
	(*uParam2)[3] = uParam10;
	(*uParam1)[4] = iParam11;
	(*uParam2)[4] = iParam12;
	(*uParam1)[5] = iParam13;
	(*uParam2)[5] = iParam14;
	(*uParam1)[6] = iParam15;
	(*uParam2)[6] = iParam16;
}

int func_400(int iParam0)//Position - 0x3247D
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		if (PED::GET_PED_PROP_INDEX(iParam0, iVar0) != -1)
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_401(int iParam0, int iParam1, int iParam2)//Position - 0x31E59
{
	__LIB_14__::func_844(0, 0, iParam2, 1);
	if (iParam0 == 1)
	{
		CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
	}
	if (iParam1 == 1)
	{
		__LIB_0__::func_84(500, 0);
	}
}

void func_402(bool bParam0, int iParam1, int iParam2)//Position - 0x3298A
{
	bool bVar0;
	bVar0 = true;
	if (CUTSCENE::IS_CUTSCENE_ACTIVE())
	{
		while (bVar0)
		{
			bVar0 = CUTSCENE::IS_CUTSCENE_ACTIVE();
			if (CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				CUTSCENE::STOP_CUTSCENE(false);
			}
			if (CUTSCENE::HAS_CUTSCENE_LOADED())
			{
				CUTSCENE::REMOVE_CUTSCENE();
			}
			if (CUTSCENE::IS_CUTSCENE_ACTIVE() && !CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				bVar0 = false;
			}
			SYSTEM::WAIT(0);
		}
		if (bParam0)
		{
			__LIB_14__::func_844(iParam1, iParam2, 1, 1);
		}
	}
}

void func_403(char* sParam0, float fParam1)//Position - 0x29087
{
	sParam0 = sParam0;
	fParam1 = fParam1;
}

int func_404(var uParam0)//Position - 0x2D14C
{
	uParam0 = uParam0;
	return 14;
}

int func_405(int iParam0, var uParam1)//Position - 0x2D15A
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	float fVar5;
	float fVar6;
	float fVar7;
	float fVar8;
	fVar6 = 180f;
	fVar7 = 140f;
	fVar8 = 80f;
	Var0 = { uParam1->f_4[iParam0 /*3*/] };
	if (iParam0 + 1 == (uParam1->f_126 - 1))
	{
		Var1 = { uParam1->f_4[0 /*3*/] };
	}
	else
	{
		Var1 = { uParam1->f_4[iParam0 + 1 /*3*/] };
	}
	if ((iParam0 - 1) >= 0)
	{
		Var2 = { uParam1->f_4[(iParam0 - 1) /*3*/] };
	}
	Var3 = { Var2 - Var0 };
	Var4 = { Var1 - Var0 };
	fVar5 = MISC::GET_ANGLE_BETWEEN_2D_VECTORS(Var3.f_0, Var3.f_1, Var4.f_0, Var4.f_1);
	if (fVar5 > 180f)
	{
		fVar5 = (360f - fVar5);
	}
	if (fVar5 < fVar8)
	{
		return 8;
	}
	else if (fVar5 < fVar7)
	{
		return 7;
	}
	else if (fVar5 < fVar6)
	{
		return 6;
	}
	else
	{
		return 6;
	}
	return 6;
}

int func_406(var uParam0, int iParam1)//Position - 0x2D94F
{
	if (!ENTITY::IS_ENTITY_DEAD(uParam0->f_1, false))
	{
		if (PED::IS_PED_IN_VEHICLE(*uParam0, uParam0->f_1, false))
		{
			if (iParam1 == 4)
			{
				if (!PED::IS_PED_ON_ANY_BIKE(*uParam0))
				{
					return 0;
				}
				else
				{
					return 1;
				}
			}
			else if ((VEHICLE::IS_VEHICLE_MODEL(uParam0->f_1, joaat("fbi")) || VEHICLE::IS_VEHICLE_MODEL(uParam0->f_1, joaat("firetruk"))) || VEHICLE::IS_VEHICLE_MODEL(uParam0->f_1, joaat("police")))
			{
				return 0;
			}
			else
			{
				return 1;
			}
		}
	}
	return 0;
}

void func_407(int iParam0, int iParam1, char* sParam2, var uParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15)//Position - 0x2DCD5
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(4, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(4, iVar0);
		Global_1649593.f_3347[iVar0] = iParam0;
		Global_1649593.f_3347.f_172[iVar0] = iParam1;
		StringCopy(&(Global_1649593.f_3347.f_11[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_3347.f_183[iVar0] = uParam3;
		Global_1649593.f_3347.f_216[iVar0] = iParam5;
		Global_1649593.f_3347.f_194[iVar0] = iParam4;
		Global_1649593.f_3347.f_227[iVar0] = iParam6;
		Global_1649593.f_3347.f_270[iVar0] = iParam7;
		Global_1649593.f_3347.f_281[iVar0] = iParam8;
		Global_1649593.f_3347.f_292[iVar0] = iParam9;
		Global_1649593.f_3347.f_303[iVar0] = iParam10;
		Global_1649593.f_3347.f_314[iVar0] = iParam11;
		Global_1649593.f_3347.f_325[iVar0] = iParam13;
		Global_1649593.f_3347.f_336[iVar0] = iParam14;
		Global_1649593.f_3347.f_347[iVar0] = iParam15;
		if (((iParam0 > 9 && iParam1 > 9) && MISC::IS_PC_VERSION()) && iParam12)
		{
			Global_1649593.f_1172 = 1;
		}
	}
}

void func_408(int iParam0, var uParam1, char* sParam2, var uParam3, var uParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x2DE2F
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(5, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(5, iVar0);
		Global_1649593.f_3705[iVar0] = iParam0;
		Global_1649593.f_3705.f_172[iVar0] = uParam1;
		StringCopy(&(Global_1649593.f_3705.f_11[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_3705.f_194[iVar0] = uParam3;
		Global_1649593.f_3705.f_183[iVar0] = uParam4;
		Global_1649593.f_3705.f_216[iVar0] = iParam5;
		Global_1649593.f_3705.f_227[iVar0] = iParam6;
		Global_1649593.f_3705.f_270[iVar0] = iParam7;
		Global_1649593.f_3705.f_281[iVar0] = iParam8;
		Global_1649593.f_3705.f_292[iVar0] = iParam9;
		Global_1649593.f_3705.f_303[iVar0] = iParam10;
		Global_1649593.f_3705.f_314[iVar0] = iParam11;
		Global_1649593.f_3705.f_325[iVar0] = iParam12;
	}
}

void func_409(int iParam0, var uParam1, char* sParam2, var uParam3, var uParam4, int iParam5, float fParam6, float fParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36)//Position - 0x2DF3F
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(0, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(0, iVar0);
		Global_1649593.f_1177[iVar0] = iParam0;
		Global_1649593.f_1177.f_11[iVar0] = uParam1;
		StringCopy(&(Global_1649593.f_1177.f_22[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_1177.f_194[iVar0] = uParam3;
		Global_1649593.f_1177.f_183[iVar0] = uParam4;
		Global_1649593.f_1177.f_216[iVar0] = iParam5;
		Global_1649593.f_1177.f_227[iVar0 /*3*/] = fParam6;
		Global_1649593.f_1177.f_227[iVar0 /*3*/].f_1 = fParam7;
		Global_1649593.f_1177.f_258[iVar0] = iParam8;
		Global_1649593.f_1177.f_269[iVar0] = iParam9;
		Global_1649593.f_1177.f_312[iVar0] = iParam10;
		Global_1649593.f_1177.f_323[iVar0] = iParam11;
		Global_1649593.f_1177.f_334[iVar0] = iParam12;
		Global_1649593.f_1177.f_345[iVar0] = iParam13;
		Global_1649593.f_1172 = 1;
		Global_1649593.f_1177.f_356[iVar0] = iParam14;
		Global_1649593.f_1177.f_367[iVar0] = iParam15;
		Global_1649593.f_1177.f_378[iVar0] = iParam16;
		Global_1649593.f_1177.f_389[iVar0] = iParam17;
		Global_1649593.f_1177.f_400[iVar0] = iParam18;
		Global_1649593.f_1177.f_411[iVar0] = iParam19;
		Global_1649593.f_1177.f_422[iVar0] = iParam20;
		Global_1649593.f_1177.f_433[iVar0] = iParam21;
		Global_1649593.f_1177.f_444[iVar0] = iParam22;
		Global_1649593.f_1177.f_455[iVar0] = iParam23;
		Global_1649593.f_1177.f_466[iVar0] = iParam24;
		Global_1649593.f_1177.f_205[iVar0] = iParam25;
		Global_1649593.f_1177.f_477[iVar0] = iParam26;
		Global_1649593.f_1177.f_488[iVar0] = iParam27;
		Global_1649593.f_1177.f_499[iVar0] = iParam28;
		Global_1649593.f_1177.f_510[iVar0] = iParam29;
		Global_1649593.f_1177.f_521[iVar0] = iParam30;
		Global_1649593.f_1177.f_532[iVar0] = iParam31;
		Global_1649593.f_1177.f_543[iVar0] = iParam32;
		Global_1649593.f_1177.f_554[iVar0] = iParam33;
		Global_1649593.f_1177.f_565[iVar0] = iParam34;
		Global_1649593.f_1177.f_576[iVar0] = iParam35;
		Global_1649593.f_1177.f_587[iVar0] = iParam36;
	}
}

void func_410(var uParam0, struct<3> Param1)//Position - 0x2F65C
{
	uParam0->f_4[uParam0->f_126 /*3*/] = { Param1 };
	uParam0->f_126++;
}

void func_411()//Position - 0x3235B
{
	if (!Global_113386.f_18574.f_385)
	{
		if (PLAYER::GET_PLAYER_SPRINT_TIME_REMAINING(PLAYER::PLAYER_ID()) <= 5f)
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				__LIB_0__::func_151("AM_H_NOSTAM" /* GXT: You have run out of stamina. Pushing your body any harder will cause you to lose health. */, -1);
				Global_113386.f_18574.f_385 = 1;
			}
		}
	}
}

void func_412(var uParam0, char* sParam1, var uParam2, int iParam3, var uParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17)//Position - 0x2DB49
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(7, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(7, iVar0);
		Global_1649593.f_4659[iVar0] = uParam0;
		StringCopy(&(Global_1649593.f_4659.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4659.f_172[iVar0] = uParam2;
		Global_1649593.f_4659.f_216[iVar0] = iParam3;
		Global_1649593.f_4659.f_183[iVar0] = uParam4;
		Global_1649593.f_4659.f_194[iVar0] = iParam5;
		Global_1649593.f_4659.f_249[iVar0] = iParam6;
		Global_1649593.f_4659.f_260[iVar0] = iParam7;
		Global_1649593.f_4659.f_205[iVar0] = iParam8;
		Global_1649593.f_4659.f_314[iVar0] = iParam9;
		Global_1649593.f_4659.f_325[iVar0] = iParam10;
		Global_1649593.f_4659.f_357[iVar0] = iParam11;
		Global_1649593.f_4659.f_238[iVar0] = iParam12;
		Global_1649593.f_4659.f_271[iVar0] = iParam13;
		Global_1649593.f_4659.f_368[iVar0] = iParam14;
		Global_1649593.f_4659.f_379[iVar0] = iParam15;
		Global_1649593.f_4659.f_390[iVar0] = iParam16;
		Global_1649593.f_4659.f_227[iVar0] = iParam17;
	}
}

void func_413(int iParam0, char* sParam1, var uParam2, var uParam3, int iParam4, int iParam5, char* sParam6, int iParam7, float fParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25)//Position - 0x2E212
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(6, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(6, iVar0);
		Global_1649593.f_4041[iVar0] = iParam0;
		StringCopy(&(Global_1649593.f_4041.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4041.f_183[iVar0] = uParam3;
		Global_1649593.f_4041.f_172[iVar0] = uParam2;
		Global_1649593.f_4041.f_260[iVar0] = iParam4;
		Global_1649593.f_4041.f_271[iVar0] = iParam5;
		StringCopy(&(Global_1649593.f_4041.f_282[iVar0 /*16*/]), sParam6, 64);
		Global_1649593.f_4041.f_443[iVar0] = iParam7;
		Global_1649593.f_4041.f_454[iVar0] = fParam8;
		Global_1649593.f_4041.f_497[iVar0] = iParam9;
		Global_1649593.f_4041.f_508[iVar0] = iParam10;
		Global_1649593.f_4041.f_205[iVar0] = iParam11;
		Global_1649593.f_4041.f_216[iVar0] = iParam12;
		Global_1649593.f_4041.f_227[iVar0] = iParam13;
		Global_1649593.f_4041.f_238[iVar0] = iParam14;
		Global_1649593.f_4041.f_249[iVar0] = iParam15;
		Global_1649593.f_4041.f_519[iVar0] = iParam16;
		Global_1649593.f_4041.f_530[iVar0] = iParam17;
		Global_1649593.f_4041.f_541[iVar0] = iParam18;
		Global_1649593.f_4041.f_552[iVar0] = iParam19;
		Global_1649593.f_4041.f_563[iVar0] = iParam20;
		Global_1649593.f_4041.f_574[iVar0] = iParam21;
		Global_1649593.f_4041.f_585[iVar0] = iParam22;
		Global_1649593.f_4041.f_596[iVar0] = iParam23;
		Global_1649593.f_4041.f_607[iVar0] = iParam24;
		Global_1649593.f_4041.f_194[iVar0] = iParam25;
		if (iParam15 == 5 && __LIB_1__::func_710())
		{
			Global_1649593.f_1172 = 1;
		}
		if (MISC::IS_PC_VERSION())
		{
			iVar2 = 0;
			GRAPHICS::GET_ACTUAL_SCREEN_RESOLUTION(&iVar3, &iVar4);
			if (iVar3 == 1280 && iVar4 >= 960)
			{
				iVar2 = 1;
			}
			if (iParam0 > 99999999)
			{
				Global_1649593.f_1176 = 1;
			}
			else if (iParam0 > 9999999 || iVar2)
			{
				Global_1649593.f_1175 = 1;
			}
			else if (iParam0 > 999)
			{
				Global_1649593.f_1172 = 1;
			}
			if (__LIB_1__::func_709())
			{
				Global_1649593.f_1176 = 1;
			}
		}
	}
}

void func_414(int* iParam0, int iParam1, bool bParam2, float fParam3, int iParam4)//Position - 0x2A3DF
{
	struct<3> Var0;
	struct<3> Var1;
	if (iParam4 == 1 && !HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_0__::func_488(ENTITY::GET_ENTITY_COORDS(iParam1, true), 0);
		if (bParam2)
		{
			HUD::SET_BLIP_COLOUR(*iParam0, 3);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, "BLIP_FRIEND" /* GXT: Friend */);
		}
		else
		{
			HUD::SET_BLIP_COLOUR(*iParam0, 1);
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, "BLIP_ENEMY" /* GXT: Enemy */);
		}
		if (ENTITY::IS_ENTITY_A_PED(iParam1))
		{
			HUD::SET_BLIP_SCALE(*iParam0, 0.7f);
		}
	}
	if (HUD::DOES_BLIP_EXIST(*iParam0))
	{
		Var0 = { HUD::GET_BLIP_COORDS(*iParam0) };
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		Var0.f_0 = (Var0.f_0 + ((Var1.f_0 - Var0.f_0) / fParam3));
		Var0.f_1 = (Var0.f_1 + ((Var1.f_1 - Var0.f_1) / fParam3));
		Var0.f_2 = (Var0.f_2 + ((Var1.f_2 - Var0.f_2) / fParam3));
		HUD::SET_BLIP_COORDS(*iParam0, Var0);
	}
}

int func_415(int iParam0, float fParam1)//Position - 0x2BAC8
{
	float fVar0;
	if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()) && __LIB_0__::func_121(iParam0))
	{
		if (__LIB_14__::func_657(iParam0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), iParam0))
		{
			if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6))
			{
				fVar0 = 40f;
			}
			else
			{
				fVar0 = 3f;
			}
			if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), iParam0, fVar0, fVar0, fVar0, false, true, 0))
			{
				if (__LIB_14__::func_779(iParam0, fParam1))
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_416(int iParam0, struct<3> Param1)//Position - 0x2C8AB
{
	float fVar0;
	fVar0 = __LIB_6__::func_252(ENTITY::GET_ENTITY_COORDS(iParam0, true), Param1, 1);
	ENTITY::SET_ENTITY_HEADING(iParam0, fVar0);
}

void func_417(char* sParam0, bool bParam1)//Position - 0x3774A
{
	__LIB_17__::func_114(bParam1);
	CUTSCENE::REQUEST_CUTSCENE(sParam0, 8);
}

void func_418(int iParam0, int iParam1, int iParam2)//Position - 0x36EA0
{
	__LIB_17__::func_115(0, 0, iParam2, 1);
	if (iParam0 == 1)
	{
		CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
		CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
	}
	if (iParam1 == 1)
	{
		__LIB_0__::func_84(500, 0);
	}
}

void func_419(bool bParam0, int iParam1, int iParam2)//Position - 0x37497
{
	bool bVar0;
	bVar0 = true;
	if (CUTSCENE::IS_CUTSCENE_ACTIVE())
	{
		while (bVar0)
		{
			bVar0 = CUTSCENE::IS_CUTSCENE_ACTIVE();
			if (CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				CUTSCENE::STOP_CUTSCENE(false);
			}
			if (CUTSCENE::HAS_CUTSCENE_LOADED())
			{
				CUTSCENE::REMOVE_CUTSCENE();
			}
			if (CUTSCENE::IS_CUTSCENE_ACTIVE() && !CUTSCENE::IS_CUTSCENE_PLAYING())
			{
				bVar0 = false;
			}
			SYSTEM::WAIT(0);
		}
		if (bParam0)
		{
			__LIB_17__::func_115(iParam1, iParam2, 1, 1);
		}
	}
}

int func_420(int iParam0, var uParam1)//Position - 0x3B593
{
	int iVar0;
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (!PED::IS_PED_INJURED(*iParam0))
		{
			iVar0 = ENTITY::GET_ENTITY_HEALTH(*iParam0);
			if ((ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(*iParam0, PLAYER::PLAYER_PED_ID(), true) || iVar0 < *uParam1) || PED::IS_PED_RESPONDING_TO_EVENT(*iParam0, 17))
			{
				return 1;
			}
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

int func_421(var uParam0)//Position - 0x3E4B3
{
	if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))
	{
		*uParam0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (ENTITY::DOES_ENTITY_EXIST(*uParam0))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_422(int iParam0, struct<3> Param1, char* sParam2, char* sParam3)//Position - 0x87661
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(Param1, sParam3);
		iVar1 = INTERIOR::GET_INTERIOR_FROM_ENTITY(iParam0);
		if (!iVar0 == 0)
		{
			if (iVar0 == iVar1)
			{
				iVar2 = INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(iParam0);
				iVar3 = MISC::GET_HASH_KEY(sParam2);
				if (iVar2 != 0)
				{
					if (iVar2 == iVar3)
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_423(var uParam0, float fParam1, bool bParam2)//Position - 0x8B154
{
	if (!PED::IS_PED_INJURED(*uParam0))
	{
		if (MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(*uParam0, true), true) < fParam1)
		{
			if (PED::CAN_PED_SEE_HATED_PED(*uParam0, PLAYER::PLAYER_PED_ID()))
			{
				if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 7))
				{
					if (PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), *uParam0))
					{
						return 1;
					}
					if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), *uParam0))
					{
						return 1;
					}
				}
			}
			if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID()))
			{
				return 1;
			}
		}
		if (MISC::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(*uParam0, true), 4f, true))
		{
			return 1;
		}
		if (bParam2)
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), ENTITY::GET_ENTITY_COORDS(*uParam0, true), true) < 1.5f)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_424(int iParam0, int iParam1, float fParam2)//Position - 0x8F0FF
{
	struct<3> Var0;
	float fVar1;
	if (ENTITY::DOES_ENTITY_EXIST(iParam1))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam1, false) - ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		fVar1 = (MISC::GET_HEADING_FROM_VECTOR_2D(Var0.f_0, Var0.f_1) - ENTITY::GET_ENTITY_HEADING(iParam0));
		if (fVar1 > 180f)
		{
			fVar1 = (fVar1 - 360f);
		}
		if (fVar1 < -180f)
		{
			fVar1 = (fVar1 + 360f);
		}
		if (MISC::ABSF(fVar1) <= fParam2)
		{
			return 1;
		}
	}
	return 0;
}

void func_425(int iParam0)//Position - 0x9883B
{
	if (__LIB_0__::func_374(iParam0))
	{
		Global_113386.f_2363.f_539.f_298[iParam0 /*477*/] = { Global_113386.f_2363.f_539.f_1764 };
	}
}

void func_426(int iParam0)//Position - 0x3DFD3
{
	if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
		{
			ENTITY::SET_ENTITY_PROOFS(*iParam0, false, false, false, false, false, false, false, false);
			__LIB_17__::func_188(iParam0);
		}
	}
}

void func_427(int iParam0, bool bParam1)//Position - 0x89FD4
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_13__::func_716(iParam0);
		__LIB_0__::func_672(iParam0, &(Global_113386.f_2363.f_539.f_1764), bParam1);
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			HUD::HUD_SET_WEAPON_WHEEL_TOP_SLOT(Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0]);
			iVar1++;
		}
	}
}

void func_428(int iParam0)//Position - 0x9853B
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_13__::func_716(iParam0);
		__LIB_13__::func_814(iParam0, &(Global_113386.f_2363.f_539.f_1764));
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar1);
			iVar1++;
		}
	}
}

Vector3 func_429(int iParam0)//Position - 0x7B64D
{
	struct<3> Var0;
	Var0 = { 0.247654f, -2.8853f, 0.528659f };
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam0, false))
		{
			switch (CAM::GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL())
			{
				case 0:
					Var0 = { -0.414898f, -6.52417f, 1.48257f };
					break;
				case 1:
					Var0 = { -0.409924f, -7.87737f, 1.5684f };
					break;
				case 2:
					Var0 = { -0.403982f, -9.22678f, 1.65399f };
					break;
				case 4:
					Var0 = { -0.353964f, 1.23187f, 0.561746f };
					break;
			}
		}
		else
		{
			switch (CAM::GET_FOLLOW_PED_CAM_ZOOM_LEVEL())
			{
				case 0:
					Var0 = { 0.231316f, -1.91668f, 0.535791f };
					break;
				case 1:
					Var0 = { 0.247654f, -2.8853f, 0.528659f };
					break;
				case 2:
					Var0 = { 0.263986f, -3.85184f, 0.521533f };
					break;
				}
			}
	}
	if (Global_2667225.f_604 == 180f)
	{
		Var0.f_1 = -Var0.f_1;
	}
	return Var0;
}

void func_430(var uParam0, int iParam1, struct<3> Param2, struct<3> Param3)//Position - 0x93096
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_6));
	}
	uParam0->f_6 = OBJECT::CREATE_OBJECT(__LIB_0__::func_557(), Param2, true, true, false);
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		ENTITY::ATTACH_ENTITY_TO_ENTITY(uParam0->f_6, iParam1, 0, Param2, Param3, false, false, false, false, 2, true, 0);
	}
	else
	{
		ENTITY::SET_ENTITY_ROTATION(uParam0->f_6, Param3, 2, true);
		ENTITY::FREEZE_ENTITY_POSITION(uParam0->f_6, true);
	}
	ENTITY::SET_ENTITY_VISIBLE(uParam0->f_6, false, false);
}

void func_431(var uParam0, float fParam1, bool bParam2, bool bParam3, float fParam4, float fParam5)//Position - 0x9466F
{
	int iVar0;
	int iVar1;
	float fVar2;
	struct<3> Var3;
	__LIB_0__::func_554(uParam0);
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		if (bParam2)
		{
			iVar1 = 4;
		}
		else
		{
			iVar1 = 1;
		}
		if (fParam5 < 0f)
		{
			fVar2 = fParam1;
		}
		else
		{
			fVar2 = fParam5;
		}
		uParam0->f_5 = PHYSICS::ADD_ROPE(ENTITY::GET_ENTITY_COORDS(uParam0->f_6, true), 0f, 90f, 0f, fVar2, iVar1, fVar2, 0.5f, 0.5f, true, false, true, fParam4, false, 0);
		__LIB_0__::func_606(uParam0, fParam1);
		if (bParam3)
		{
			iVar0 = 0;
			while (iVar0 < uParam0->f_91)
			{
				PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(uParam0->f_6, 0f, 0f, -(uParam0->f_31 * IntToFloat(iVar0))));
				iVar0++;
			}
			uParam0->f_59 = 0;
		}
		else
		{
			iVar0 = 0;
			while (iVar0 < uParam0->f_91)
			{
				if (iVar0 == 0)
				{
					Var3 = { 0f, 0f, 0f };
				}
				else
				{
					if ((iVar0 % 2) == 0)
					{
						Var3.f_0 = 1f;
					}
					else
					{
						Var3.f_0 = -1f;
					}
					Var3.f_1 = 0f;
					Var3.f_2 = (IntToFloat(iVar0) * -0.02f);
				}
				PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(uParam0->f_6, Var3));
				iVar0++;
			}
			uParam0->f_59 = 1;
		}
		uParam0->f_60 = 0;
		uParam0->f_58 = 0;
		uParam0->f_57 = 1;
	}
}

void func_432(var uParam0, float fParam1, float fParam2, float fParam3, float fParam4)//Position - 0x9493F
{
	uParam0->f_93 = fParam1;
	uParam0->f_94 = fParam2;
	uParam0->f_95 = fParam3;
	uParam0->f_96 = fParam4;
}

void func_433(var uParam0)//Position - 0x95CEA
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_8));
	}
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		uParam0->f_8 = OBJECT::CREATE_OBJECT(__LIB_0__::func_556(), ENTITY::GET_ENTITY_COORDS(uParam0->f_3, true), true, true, false);
		ENTITY::ATTACH_ENTITY_TO_ENTITY(uParam0->f_8, uParam0->f_3, PED::GET_PED_BONE_INDEX(uParam0->f_3, 60309), 0f, 0f, 0f, 0f, 0f, 0f, false, false, false, false, 2, true, 0);
	}
}

void func_434(struct<3> Param0)//Position - 0x96543
{
	MISC::CLEAR_AREA(Param0, 3.2f, true, false, false, false);
}

int func_435(int iParam0, int iParam1)//Position - 0xA1F1E
{
	iParam1 = iParam1;
	switch (iParam0)
	{
		case 0:
			break;
	}
	return 0;
}

void func_436(int iParam0, bool bParam1, var uParam2, var uParam3)//Position - 0xAE28A
{
	if (!PED::IS_PED_INJURED(iParam0))
	{
		if (bParam1)
		{
			PED::SET_PED_USING_ACTION_MODE(iParam0, true, -1, "DEFAULT_ACTION");
			*uParam3 = 0;
			*uParam2 = 1;
		}
		else
		{
			PED::SET_PED_USING_ACTION_MODE(iParam0, false, -1, 0);
			*uParam3 = 0;
			*uParam2 = 0;
		}
	}
}

void func_437(var uParam0)//Position - 0xB3333
{
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_7))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_7));
	}
	__LIB_16__::func_892(uParam0, 0, joaat("WEAPON_UNARMED"), 1, 1, 1);
	__LIB_0__::func_554(uParam0);
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_6));
	}
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
	{
		OBJECT::DELETE_OBJECT(&(uParam0->f_8));
	}
}

void func_438(int iParam0)//Position - 0x6DBCA
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID() && PED::GET_PED_MAX_HEALTH(iParam0) == 200)
		{
			PED::SET_PED_MAX_HEALTH(iParam0, SYSTEM::ROUND((IntToFloat(PED::GET_PED_MAX_HEALTH(iParam0)) * Global_262145.f_106 /* Tunable: MAX_HEALTH_MULTIPLIER */)));
		}
		if (Global_113386.f_2363.f_539.f_290[iVar0] <= 0f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 100f;
		}
		else if (Global_113386.f_2363.f_539.f_290[iVar0] <= 10f)
		{
			Global_113386.f_2363.f_539.f_290[iVar0] = 10f;
		}
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((Global_113386.f_2363.f_539.f_290[iVar0] / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

void func_439(int iParam0)//Position - 0x6E0DC
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			Global_113386.f_2363.f_539.f_2328[iVar0] = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
		}
	}
}

void func_440(int iParam0)//Position - 0x6E123
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2318[iVar0 /*3*/] = { ENTITY::GET_ENTITY_VELOCITY(iParam0) };
	}
}

void func_441(int iParam0)//Position - 0x6E161
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)
		{
			if (STREAMING::GET_PLAYER_SWITCH_STATE() == 8)
			{
				return;
			}
		}
		Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		Global_113386.f_2363.f_539.f_2310[iVar0] = ENTITY::GET_ENTITY_HEADING(iParam0);
		Global_113386.f_2363.f_539.f_2314[iVar0] = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(iParam0);
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 >= 8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = 7500f;
		}
		else if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 <= -8000f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_1 = -7500f;
		}
		if (Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 >= 2500f)
		{
			Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/].f_2 = 2000f;
		}
	}
}

void func_442(int iParam0)//Position - 0x6E2EE
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_294[iVar0] = PED::GET_PED_ARMOUR(iParam0);
	}
}

void func_443(int iParam0)//Position - 0x6E32A
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_290[iVar0] = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
	}
}

int func_444(int iParam0, float fParam1, float fParam2)//Position - 0x835FD
{
	float fVar0;
	float fVar1;
	fVar0 = __LIB_17__::func_58(ENTITY::GET_ENTITY_HEADING(iParam0));
	fVar1 = (fVar0 - fParam1);
	if (fVar1 < 0f)
	{
		fVar1 = (fVar1 * -1f);
	}
	if (fVar1 <= fParam2 || fVar1 >= (360f - fParam2))
	{
		return 1;
	}
	return 0;
}

void func_445(var uParam0, bool bParam1, int iParam2, int iParam3, bool bParam4, float fParam5, bool bParam6)//Position - 0x93AB2
{
	float fVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	float fVar6;
	float fVar7;
	struct<3> Var8;
	struct<3> Var9;
	struct<3> Var10;
	struct<3> Var11;
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		ENTITY::PROCESS_ENTITY_ATTACHMENTS(uParam0->f_3);
		fVar0 = MISC::GET_FRAME_TIME();
		fVar1 = ENTITY::GET_ENTITY_HEADING(uParam0->f_3);
		if (fVar1 < 0f)
		{
			fVar1 = (fVar1 + 360f);
		}
		if (bParam4)
		{
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar2 = (uParam0->f_43 * uParam0->f_93);
				fVar3 = (uParam0->f_42 * uParam0->f_93);
				uParam0->f_37 = (uParam0->f_37 + (IntToFloat(iParam2) * uParam0->f_95));
				if (uParam0->f_37 > fVar2)
				{
					uParam0->f_37 = fVar2;
				}
				else if (uParam0->f_37 < -fVar3)
				{
					uParam0->f_37 = -fVar3;
				}
			}
			else
			{
				uParam0->f_37 = (IntToFloat(-iParam2) * uParam0->f_41);
				if (uParam0->f_37 > uParam0->f_43)
				{
					uParam0->f_37 = uParam0->f_43;
				}
				else if (uParam0->f_37 < -uParam0->f_42)
				{
					uParam0->f_37 = -uParam0->f_42;
				}
			}
			if (PAD::IS_LOOK_INVERTED() && !PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				iParam3 = (iParam3 * -1);
			}
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar4 = (uParam0->f_47 * uParam0->f_94);
				fVar5 = (uParam0->f_48 * uParam0->f_94);
				uParam0->f_35 = (uParam0->f_35 - (IntToFloat(iParam3) * uParam0->f_96));
				if (uParam0->f_35 > fVar4)
				{
					uParam0->f_35 = fVar4;
				}
				else if (uParam0->f_35 < fVar5)
				{
					uParam0->f_35 = fVar5;
				}
			}
			else
			{
				uParam0->f_35 = (IntToFloat(iParam3) * uParam0->f_46);
				if (uParam0->f_35 > uParam0->f_47)
				{
					uParam0->f_35 = uParam0->f_47;
				}
				else if (uParam0->f_35 < uParam0->f_48)
				{
					uParam0->f_35 = uParam0->f_48;
				}
			}
			if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
			{
				fVar6 = (uParam0->f_44 * 20f);
				fVar7 = (uParam0->f_49 * 5f);
				uParam0->f_50 = (uParam0->f_50 + ((uParam0->f_35 - uParam0->f_50) * (fVar7 * fVar0)));
				uParam0->f_38 = (uParam0->f_38 + ((uParam0->f_37 - uParam0->f_38) * (fVar6 * fVar0)));
			}
			else
			{
				uParam0->f_50 = (uParam0->f_50 + ((uParam0->f_35 - uParam0->f_50) * (uParam0->f_49 * fVar0)));
				uParam0->f_38 = (uParam0->f_38 + ((uParam0->f_37 - uParam0->f_38) * (uParam0->f_44 * fVar0)));
			}
		}
		uParam0->f_36 = (uParam0->f_45 + uParam0->f_50);
		if (fParam5 <= -1000f)
		{
			Var8 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_3, PED::GET_PED_BONE_COORDS(uParam0->f_3, 0, 0f, 0f, 0f)) };
			Var8.f_1 = (Var8.f_1 / 4f);
		}
		else
		{
			Var8.f_1 = fParam5;
		}
		Var9 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(uParam0->f_3, 0f, Var8.f_1, 0f) };
		Var10 = { OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Var9, ((uParam0->f_38 + uParam0->f_39) + fVar1), 0f, uParam0->f_40, 0f) };
		Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_3, Var10) };
		if (!uParam0->f_62 || bParam1)
		{
			__LIB_0__::func_608(uParam0, Var10, !bParam1, bParam6);
		}
		Var11.f_2 = uParam0->f_36;
		CAM::ATTACH_CAM_TO_ENTITY(uParam0->f_4, uParam0->f_3, Var11, true);
		CAM::POINT_CAM_AT_ENTITY(uParam0->f_4, uParam0->f_3, Vector(0.6f, Var8.f_1, 0f) + uParam0->f_52, true);
		CAM::SET_CAM_PARAMS(uParam0->f_4, Var10, 0f, 0f, 0f, uParam0->f_51, 0, 1, 1, 2);
		CAM::SET_CAM_CONTROLS_MINI_MAP_HEADING(uParam0->f_4, true);
	}
}

void func_446(var uParam0, bool bParam1, bool bParam2, bool bParam3, bool bParam4)//Position - 0x93E27
{
	int iVar0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	float fVar6;
	float fVar7;
	float fVar8;
	int iVar9;
	struct<3> Var10;
	float fVar11;
	float fVar12;
	struct<3> Var13;
	struct<3> Var14;
	struct<3> Var15;
	bool bVar16;
	struct<3> Var17;
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6))
	{
		if (!uParam0->f_59)
		{
			if (uParam0->f_58)
			{
				if ((bParam4 || !PED::IS_PED_INJURED(uParam0->f_3)) && !uParam0->f_74)
				{
					if (!bParam4)
					{
						ENTITY::PROCESS_ENTITY_ATTACHMENTS(uParam0->f_3);
					}
					if (!uParam0->f_72)
					{
						Var2 = { ENTITY::GET_ENTITY_COORDS(uParam0->f_6, true) };
					}
					else
					{
						Var2 = { uParam0->f_16 };
					}
					if (!bParam4)
					{
						if (uParam0->f_56)
						{
							Var1 = { PED::GET_PED_BONE_COORDS(uParam0->f_3, 57005, 0.1f, 0.05f, 0f) };
						}
						else
						{
							if (!bParam1)
							{
								iVar9 = 60309;
							}
							else
							{
								iVar9 = 28422;
							}
							Var1 = { PED::GET_PED_BONE_COORDS(uParam0->f_3, iVar9, 0f, 0f, 0f) };
						}
						uParam0->f_19 = { Var1 };
					}
					else
					{
						Var1 = { uParam0->f_19 };
						if (Var1.f_0 < Var2.f_0)
						{
							Var1.f_0 = (Var1.f_0 + (0.05f * SYSTEM::TIMESTEP()));
							if (Var1.f_0 > Var2.f_0)
							{
								Var1.f_0 = Var2.f_0;
							}
						}
						else if (Var1.f_0 > Var2.f_0)
						{
							Var1.f_0 = (Var1.f_0 - (0.05f * SYSTEM::TIMESTEP()));
							if (Var1.f_0 < Var2.f_0)
							{
								Var1.f_0 = Var2.f_0;
							}
						}
						if (Var1.f_1 < Var2.f_1)
						{
							Var1.f_1 = (Var1.f_1 + (0.05f * SYSTEM::TIMESTEP()));
							if (Var1.f_1 > Var2.f_1)
							{
								Var1.f_1 = Var2.f_1;
							}
						}
						else if (Var1.f_1 > Var2.f_1)
						{
							Var1.f_1 = (Var1.f_1 - (0.05f * SYSTEM::TIMESTEP()));
							if (Var1.f_1 < Var2.f_1)
							{
								Var1.f_1 = Var2.f_1;
							}
						}
						uParam0->f_19 = { Var1 };
					}
					if (bParam2)
					{
						Var1 = { uParam0->f_13 };
					}
					fVar6 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var2, Var1, true);
					if (!bParam3 && !bParam4)
					{
						if (uParam0->f_90 < (uParam0->f_91 - 1))
						{
							fVar7 = (uParam0->f_31 * IntToFloat(uParam0->f_90));
							if (fVar6 > fVar7)
							{
								uParam0->f_89++;
								uParam0->f_90++;
								uParam0->f_61 = 0;
							}
						}
					}
					iVar0 = 0;
					while (iVar0 < uParam0->f_91)
					{
						if (iVar0 == 0)
						{
							PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, Var2);
						}
						else if (iVar0 <= uParam0->f_90 + 1)
						{
							fVar8 = (uParam0->f_31 * IntToFloat(iVar0));
							Var3 = { Var1 - Var2 / Vector(fVar6, fVar6, fVar6) };
							Var4 = { (Var2.f_0 + (fVar8 * Var3.f_0)), (Var2.f_1 + (fVar8 * Var3.f_1)), (Var2.f_2 + (fVar8 * Var3.f_2)) };
							if ((iVar0 != uParam0->f_90 + 1 || uParam0->f_61) || bParam3)
							{
								PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, Var4);
							}
							else
							{
								Var10 = { PHYSICS::GET_ROPE_VERTEX_COORD(uParam0->f_5, iVar0) };
								fVar11 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var4, Var10, true);
								if (fVar11 <= 0.02f)
								{
									uParam0->f_61 = 1;
									PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, Var4);
								}
								else
								{
									fVar12 = (fVar11 * 7.5f);
									if (Var4.f_0 >= Var10.f_0)
									{
										Var5.f_0 = (Var10.f_0 + (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_0 > Var4.f_0)
										{
											Var5.f_0 = Var4.f_0;
										}
									}
									else if (Var4.f_0 <= Var10.f_0)
									{
										Var5.f_0 = (Var10.f_0 - (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_0 < Var4.f_0)
										{
											Var5.f_0 = Var4.f_0;
										}
									}
									if (Var4.f_1 >= Var10.f_1)
									{
										Var5.f_1 = (Var10.f_1 + (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_1 > Var4.f_1)
										{
											Var5.f_1 = Var4.f_1;
										}
									}
									else if (Var4.f_1 <= Var10.f_1)
									{
										Var5.f_1 = (Var10.f_1 - (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_1 < Var4.f_1)
										{
											Var5.f_1 = Var4.f_1;
										}
									}
									if (Var4.f_2 >= Var10.f_2)
									{
										Var5.f_2 = (Var10.f_2 + (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_2 > Var4.f_2)
										{
											Var5.f_2 = Var4.f_2;
										}
									}
									else if (Var4.f_2 <= Var10.f_2)
									{
										Var5.f_2 = (Var10.f_2 - (fVar12 * SYSTEM::TIMESTEP()));
										if (Var5.f_2 < Var4.f_2)
										{
											Var5.f_2 = Var4.f_2;
										}
									}
									PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, Var5);
								}
							}
						}
						else if (!bParam3 && !bParam4)
						{
							if (iVar0 == (uParam0->f_91 - 1))
							{
								if (!uParam0->f_71)
								{
									PHYSICS::UNPIN_ROPE_VERTEX(uParam0->f_5, iVar0);
									if (MISC::GET_GAME_TIMER() >= uParam0->f_92)
									{
										Var13 = { PHYSICS::GET_ROPE_VERTEX_COORD(uParam0->f_5, iVar0) };
										Var14 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_3, Var13) };
										if (Var14.f_1 > 0.68f)
										{
											PHYSICS::PIN_ROPE_VERTEX(uParam0->f_5, iVar0, ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(uParam0->f_3, Var14.f_0, 0.68f, Var14.f_2));
											uParam0->f_92 = MISC::GET_GAME_TIMER() + 50;
											uParam0->f_71 = 1;
										}
									}
								}
								else if (MISC::GET_GAME_TIMER() >= uParam0->f_92)
								{
									PHYSICS::UNPIN_ROPE_VERTEX(uParam0->f_5, iVar0);
									uParam0->f_92 = MISC::GET_GAME_TIMER() + 1000;
									uParam0->f_71 = 0;
								}
							}
							else
							{
								PHYSICS::UNPIN_ROPE_VERTEX(uParam0->f_5, iVar0);
							}
						}
						iVar0++;
					}
				}
			}
			else
			{
				uParam0->f_58 = 1;
			}
		}
		else if (!uParam0->f_58)
		{
			__LIB_0__::func_555(uParam0);
			uParam0->f_7 = OBJECT::CREATE_OBJECT_NO_OFFSET(__LIB_0__::func_557(), PHYSICS::GET_ROPE_VERTEX_COORD(uParam0->f_5, (uParam0->f_91 - 1)), true, true, false);
			OBJECT::SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(uParam0->f_7, true);
			ENTITY::SET_ENTITY_VISIBLE(uParam0->f_7, false, false);
			uParam0->f_58 = 1;
		}
		else
		{
			if (!uParam0->f_60)
			{
				if (ENTITY::DOES_ENTITY_HAVE_PHYSICS(uParam0->f_7))
				{
					PHYSICS::UNPIN_ROPE_VERTEX(uParam0->f_5, 0);
					ENTITY::APPLY_FORCE_TO_ENTITY(uParam0->f_7, 3, 0f, 0f, -1f, 0f, 0f, 0f, 0, true, true, true, false, true);
					PHYSICS::ATTACH_ENTITIES_TO_ROPE(uParam0->f_5, uParam0->f_6, uParam0->f_7, ENTITY::GET_ENTITY_COORDS(uParam0->f_6, true), ENTITY::GET_ENTITY_COORDS(uParam0->f_7, true), uParam0->f_30, false, false, 0, 0);
					uParam0->f_60 = 1;
				}
			}
			Var15 = { ENTITY::GET_ENTITY_COORDS(uParam0->f_6, true) };
			bVar16 = true;
			iVar0 = 1;
			while (iVar0 <= 5)
			{
				Var17 = { PHYSICS::GET_ROPE_VERTEX_COORD(uParam0->f_5, iVar0) };
				if (Var15.f_2 - Var17.f_2) <= ((uParam0->f_31 * IntToFloat(iVar0)) * 0.7f)
				{
					bVar16 = false;
				}
				else if (MISC::GET_DISTANCE_BETWEEN_COORDS(Var15, Var17, false) >= 1f)
				{
					bVar16 = false;
				}
				iVar0++;
			}
			if (bVar16)
			{
				uParam0->f_59 = 0;
			}
		}
	}
}

void func_447(var uParam0, int iParam1, bool bParam2, bool bParam3, bool bParam4, float fParam5, bool bParam6)//Position - 0x958FC
{
	char* sVar0;
	char* sVar1;
	float fVar2;
	float fVar3;
	int iVar4;
	if ((*uParam0 == iParam1 && !bParam3) && !bParam2)
	{
		return;
	}
	if (!PED::IS_PED_INJURED(uParam0->f_3))
	{
		if (bParam4)
		{
			fVar2 = 8f;
			fVar3 = -8f;
			if (bParam2)
			{
				fVar2 = 1000f;
			}
			if (bParam6)
			{
				fVar2 = 2f;
			}
			switch (iParam1)
			{
				case 0:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					if (uParam0->f_56)
					{
						sVar0 = "Rope_Idle";
					}
					else
					{
						sVar0 = "Rappel_Idle";
						sVar1 = "Rappel_Idle_prop";
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), sVar0, fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					uParam0->f_22 = 0f;
					if (!uParam0->f_56)
					{
						if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
						{
							if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
							{
								ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, sVar1, __LIB_0__::func_558(), fVar2, true, false, false, 0f, 0);
							}
						}
					}
					break;
				case 1:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Walk", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, "Rappel_Walk_prop", __LIB_0__::func_558(), fVar2, true, false, false, 0f, 0);
						}
					}
					break;
				case 2:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Jump_a", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, "Rappel_Jump_a_prop", __LIB_0__::func_558(), fVar2, false, true, false, 0f, 0);
						}
					}
					__LIB_0__::func_642(uParam0);
					uParam0->f_78 = 0;
					uParam0->f_24 = 0f;
					uParam0->f_26 = -1f;
					uParam0->f_25 = 24f;
					break;
				case 3:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					if (uParam0->f_69)
					{
						if (!uParam0->f_79)
						{
							sVar0 = "rappel_jump_c";
							sVar1 = "Rappel_Jump_c_Prop";
						}
						else
						{
							sVar0 = "rappel_jump_a";
							sVar1 = "Rappel_Jump_a_Prop";
						}
					}
					else
					{
						sVar0 = "Rappel_Jump_a";
						sVar1 = "Rappel_Jump_a_prop";
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), sVar0, fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
					{
						if (ENTITY::DOES_ENTITY_HAVE_DRAWABLE(uParam0->f_8))
						{
							ENTITY::PLAY_ENTITY_ANIM(uParam0->f_8, sVar1, __LIB_0__::func_558(), fVar2, false, true, false, 0f, 0);
						}
					}
					__LIB_0__::func_642(uParam0);
					uParam0->f_78 = 0;
					uParam0->f_24 = 0f;
					uParam0->f_26 = -1f;
					uParam0->f_25 = 24f;
					uParam0->f_87 = MISC::GET_GAME_TIMER();
					break;
				case 4:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					__LIB_0__::func_642(uParam0);
					uParam0->f_78 = 0;
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Walk", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 5:
					if (bParam2)
					{
						iVar4 = 131073;
					}
					else
					{
						iVar4 = 1;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rope_Slide", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 6:
					if (bParam2)
					{
						iVar4 = 131074;
					}
					else
					{
						iVar4 = 2;
					}
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "rappel_to_free_rope", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				case 7:
					if (bParam2)
					{
						iVar4 = 131072;
					}
					else
					{
						iVar4 = 0;
					}
					ENTITY::DETACH_ENTITY(uParam0->f_3, true, true);
					TASK::TASK_PLAY_ANIM(uParam0->f_3, __LIB_0__::func_558(), "land_action", fVar2, fVar3, -1, iVar4, fParam5, false, false, false);
					break;
				}
		}
		if (bParam2)
		{
			PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(uParam0->f_3, false, false);
		}
	}
	uParam0->f_88 = MISC::GET_GAME_TIMER();
	*uParam0 = iParam1;
}

void func_448(int iParam0)//Position - 0x9BB1F
{
	int iVar0;
	int iVar1;
	bool bVar2;
	struct<6> Var3;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::CLEAR_PED_DECORATIONS(iParam0);
		iVar1 = 0;
		while (iVar1 < 4)
		{
			bVar2 = false;
			while (bVar2 < 32)
			{
				if (BitTest(Global_113386.f_2363.f_493[iVar0 /*15*/].f_10[iVar1], bVar2))
				{
					if (__LIB_0__::func_445(&Var3, __LIB_0__::func_416(iVar1, bVar2), __LIB_13__::func_805(iVar0), iParam0, -1))
					{
						PED::ADD_PED_DECORATION_FROM_HASHES(iParam0, Var3.f_4, Var3.f_5);
					}
				}
				bVar2++;
			}
			iVar1++;
		}
	}
}

void func_449(int iParam0)//Position - 0x9BC1A
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[iVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

void func_450(bool bParam0, bool bParam1, bool bParam2, bool bParam3)//Position - 0x1579
{
	if (bParam0)
	{
		__LIB_0__::func_325();
	}
	if (bParam1)
	{
		if (!__LIB_0__::func_75() || (bParam0 && !bParam3))
		{
			HUD::CLEAR_PRINTS();
		}
		HUD::CLEAR_REMINDER_MESSAGE();
	}
	if (bParam2)
	{
		HUD::CLEAR_HELP(true);
	}
}

void func_451(var uParam0, struct<98> Param1)//Position - 0xA1668
{
	int iVar0;
	int iVar1;
	var uVar2;
	if (Param1.f_9)
	{
		VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(*uParam0, Param1.f_4);
	}
	else
	{
		VEHICLE::SET_VEHICLE_COLOURS(*uParam0, Param1.f_5, Param1.f_6);
	}
	if (Param1.f_10)
	{
		VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*uParam0, Param1.f_7, Param1.f_8);
	}
	VEHICLE::SET_VEHICLE_DIRT_LEVEL(*uParam0, Param1.f_2);
	ENTITY::SET_ENTITY_HEALTH(*uParam0, Param1.f_3, 0);
	iVar0 = 0;
	while (iVar0 < 12)
	{
		VEHICLE::SET_VEHICLE_EXTRA(*uParam0, iVar0 + 1, !Param1.f_11[iVar0]);
		iVar0++;
	}
	if (Param1.f_24)
	{
		if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*uParam0, false))
		{
			VEHICLE::RAISE_CONVERTIBLE_ROOF(*uParam0, true);
		}
	}
	if (__LIB_0__::func_312(&uVar2, &iVar1) && Param1.f_97)
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &uVar2);
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, iVar1);
	}
	else if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Param1.f_27)))
	{
		VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*uParam0, &(Param1.f_27));
		if (Param1.f_26 >= 0 && Param1.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
		{
			VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*uParam0, Param1.f_26);
		}
	}
	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*uParam0, Param1.f_84, Param1.f_85, Param1.f_86);
	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*uParam0, Param1.f_88);
	VEHICLE::SET_VEHICLE_WINDOW_TINT(*uParam0, Param1.f_87);
	VEHICLE::SET_VEHICLE_NEON_COLOUR(*uParam0, Param1.f_93, Param1.f_94, Param1.f_95);
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 2, BitTest(Param1.f_92, 28));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 3, BitTest(Param1.f_92, 29));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 0, BitTest(Param1.f_92, 30));
	VEHICLE::SET_VEHICLE_NEON_ENABLED(*uParam0, 1, BitTest(Param1.f_92, 31));
	if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*uParam0) > 1 && Param1.f_89 >= 0)
	{
		VEHICLE::SET_VEHICLE_LIVERY(*uParam0, Param1.f_89);
	}
	if (Param1.f_90 > -1)
	{
		if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
		{
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*uParam0)))
			{
				if (Param1.f_90 == 6)
				{
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
				}
			}
			else
			{
				VEHICLE::SET_VEHICLE_WHEEL_TYPE(*uParam0, Param1.f_90);
			}
		}
	}
	__LIB_0__::func_372(uParam0, &(Param1.f_31), &(Param1.f_81));
	VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*uParam0, Param1.f_96);
}

void func_452(int iParam0, bool bParam1)//Position - 0x6E387
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_0__::func_528(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

void func_453(int iParam0)//Position - 0x6F541
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[iVar0] = __LIB_11__::func_762();
	}
}

void func_454(struct<3> Param0, float fParam1, bool bParam2)//Position - 0x87C87
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 68)
	{
		if (__LIB_16__::func_841(&(Global_77137.f_555[0 /*21*/]), iVar0))
		{
			if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Global_77137.f_555[0 /*21*/], bParam2) <= fParam1)
			{
				__LIB_16__::func_935(iVar0);
			}
		}
		iVar0++;
	}
}

void func_455(var uParam0, bool bParam1, bool bParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7)//Position - 0x965AA
{
	int iVar0;
	if (iParam4 == 1)
	{
		PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()), 64);
	}
	if (!CUTSCENE::IS_CUTSCENE_PLAYING())
	{
		PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), !bParam1, 0);
	}
	if (bParam7)
	{
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			PED::REMOVE_PED_HELMET(PLAYER::PLAYER_PED_ID(), true);
		}
	}
	if (!bParam1 && iParam6)
	{
		CAM::STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(false, 0f, 3, 0);
	}
	else
	{
		CAM::RENDER_SCRIPT_CAMS(bParam1, bParam2, iParam3, true, false, 0);
	}
	if (bParam1)
	{
		HUD::CLEAR_HELP(true);
	}
	else
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_4))
		{
			if (CAM::IS_CAM_ACTIVE(uParam0->f_4))
			{
				CAM::SET_CAM_ACTIVE(uParam0->f_4, false);
			}
			CAM::DESTROY_CAM(uParam0->f_4, true);
		}
		if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
		{
			ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
		}
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			ENTITY::SET_ENTITY_VISIBLE(iVar0, true, false);
		}
		AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
		if (AUDIO::IS_AUDIO_SCENE_ACTIVE("TOD_SHIFT_SCENE"))
		{
			AUDIO::STOP_SOUND(uParam0->f_10);
			AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
			AUDIO::STOP_AUDIO_SCENE("TOD_SHIFT_SCENE");
		}
	}
	__LIB_1__::func_373(bParam1, 1, 0, 0, 0, 0, 0);
	__LIB_13__::func_788();
	if (!bParam1 && iParam5)
	{
		if (uParam0->f_5)
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_7, 0, 0);
		}
		else
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_8, 0, 0);
		}
	}
	if (!bParam1)
	{
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			CAM::DO_SCREEN_FADE_IN(250);
		}
	}
	if (!bParam1)
	{
		if (Global_113386.f_32749.f_4801 != -15)
		{
			Global_113386.f_32749.f_4801 = __LIB_11__::func_762();
		}
	}
}

void func_456(int iParam0, bool bParam1, bool bParam2)//Position - 0x9BC5D
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		__LIB_0__::func_672(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]), bParam1);
		iVar1 = 0;
		while (iVar1 <= (8 - 1))
		{
			HUD::HUD_SET_WEAPON_WHEEL_TOP_SLOT(Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0]);
			if (bParam2)
			{
				if (iVar1 == Global_113386.f_2363.f_539.f_1763 || (Global_113386.f_2363.f_539.f_1763 == -1 && iVar1 == 4))
				{
					if (Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] != 0 && Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0] != joaat("WEAPON_MOLOTOV"))
					{
						if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0], false))
						{
							WEAPON::SET_CURRENT_PED_WEAPON(iParam0, Global_113386.f_2363.f_539.f_1730[iVar1 /*4*/][iVar0], true);
						}
					}
				}
			}
			iVar1++;
		}
		if (iVar0 == 0)
		{
			STATS::STAT_GET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (iVar0 == 1)
		{
			STATS::STAT_GET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		else if (iVar0 == 2)
		{
			STATS::STAT_GET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), &iVar2, -1);
		}
		PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), iVar2);
	}
}

void func_457(int iParam0, int iParam1)//Position - 0x6833B
{
	int iVar0;
	if (iParam0 != 226)
	{
		if (Global_78319)
		{
			iVar0 = Global_42586[iParam0];
		}
		else
		{
			iVar0 = Global_113386.f_7261[iParam0];
		}
		if (iVar0 != iParam1 || BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
		{
			if ((((iParam1 == 4 || iParam1 == 3) || iParam1 == 5) || iParam1 == 6) || iParam1 == 2)
			{
				MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
				Global_38884[iParam0] = iParam1;
			}
			else if (Global_78319)
			{
				Global_42586[iParam0] = iParam1;
			}
			else
			{
				Global_113386.f_7261[iParam0] = iParam1;
			}
			MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			__LIB_17__::func_395(iParam0);
			if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
			{
				__LIB_0__::func_401(iParam0);
			}
		}
	}
}

void func_458(float fParam0)//Position - 0x2ACCB
{
	if (fParam0 != 0f)
	{
	}
}

void func_459(var uParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x2FA18
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (CUTSCENE::IS_CUTSCENE_PLAYING())
	{
	}
	else
	{
		iVar1 = -1;
		iVar0 = 0;
		while (iVar0 < *uParam0)
		{
			if (MISC::IS_STRING_NULL_OR_EMPTY(uParam0[iVar0 /*82*/]))
			{
				if (iVar1 == -1)
				{
					iVar1 = iVar0;
				}
			}
			else if (MISC::ARE_STRINGS_EQUAL(sParam1, uParam0[iVar0 /*82*/]) && iParam5 == (uParam0[iVar0 /*82*/])->f_16)
			{
				if ((uParam0[iVar0 /*82*/])->f_17.f_39[iParam2] != iParam3 || (uParam0[iVar0 /*82*/])->f_17.f_49[iParam2] != iParam4)
				{
					if ((uParam0[iVar0 /*82*/])->f_17.f_39[iParam2] == -1 && (uParam0[iVar0 /*82*/])->f_17.f_49[iParam2] == -1)
					{
					}
					(uParam0[iVar0 /*82*/])->f_17.f_39[iParam2] = iParam3;
					(uParam0[iVar0 /*82*/])->f_17.f_49[iParam2] = iParam4;
				}
				return;
			}
			iVar0++;
		}
		if (iVar1 != -1)
		{
			StringCopy(uParam0[iVar1 /*82*/], sParam1, 64);
			(uParam0[iVar1 /*82*/])->f_16 = iParam5;
			iVar2 = 0;
			while (iVar2 < 12)
			{
				(uParam0[iVar1 /*82*/])->f_17.f_13[iVar2] = -1;
				(uParam0[iVar1 /*82*/])->f_17[iVar2] = -1;
				iVar2++;
			}
			iVar3 = 0;
			while (iVar3 < 9)
			{
				(uParam0[iVar1 /*82*/])->f_17.f_39[iVar3] = -1;
				(uParam0[iVar1 /*82*/])->f_17.f_49[iVar3] = -1;
				iVar3++;
			}
			(uParam0[iVar1 /*82*/])->f_17.f_39[iParam2] = iParam3;
			(uParam0[iVar1 /*82*/])->f_17.f_49[iParam2] = iParam4;
		}
	}
}

void func_460(var uParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x2FB93
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (CUTSCENE::IS_CUTSCENE_PLAYING())
	{
	}
	else
	{
		iVar1 = -1;
		iVar0 = 0;
		while (iVar0 < *uParam0)
		{
			if (MISC::IS_STRING_NULL_OR_EMPTY(uParam0[iVar0 /*82*/]))
			{
				if (iVar1 == -1)
				{
					iVar1 = iVar0;
				}
			}
			else if (MISC::ARE_STRINGS_EQUAL(sParam1, uParam0[iVar0 /*82*/]) && iParam5 == (uParam0[iVar0 /*82*/])->f_16)
			{
				if ((uParam0[iVar0 /*82*/])->f_17.f_13[iParam2] != iParam3 || (uParam0[iVar0 /*82*/])->f_17[iParam2] != iParam4)
				{
					if ((uParam0[iVar0 /*82*/])->f_17.f_13[iParam2] == -1 && (uParam0[iVar0 /*82*/])->f_17[iParam2] == -1)
					{
					}
					(uParam0[iVar0 /*82*/])->f_17.f_13[iParam2] = iParam3;
					(uParam0[iVar0 /*82*/])->f_17[iParam2] = iParam4;
				}
				return;
			}
			iVar0++;
		}
		if (iVar1 != -1)
		{
			StringCopy(uParam0[iVar1 /*82*/], sParam1, 64);
			(uParam0[iVar1 /*82*/])->f_16 = iParam5;
			iVar2 = 0;
			while (iVar2 < 12)
			{
				(uParam0[iVar1 /*82*/])->f_17.f_13[iVar2] = -1;
				(uParam0[iVar1 /*82*/])->f_17[iVar2] = -1;
				iVar2++;
			}
			iVar3 = 0;
			while (iVar3 < 9)
			{
				(uParam0[iVar1 /*82*/])->f_17.f_39[iVar3] = -1;
				(uParam0[iVar1 /*82*/])->f_17.f_49[iVar3] = -1;
				iVar3++;
			}
			(uParam0[iVar1 /*82*/])->f_17.f_13[iParam2] = iParam3;
			(uParam0[iVar1 /*82*/])->f_17[iParam2] = iParam4;
		}
	}
}

void func_461(int iParam0, int iParam1, int iParam2, int iParam3, bool bParam4)//Position - 0x3B49A
{
	*iParam0 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 218 /*INPUT_SCRIPT_LEFT_AXIS_X*/) * 127f));
	*iParam1 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 219 /*INPUT_SCRIPT_LEFT_AXIS_Y*/) * 127f));
	*iParam2 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 220 /*INPUT_SCRIPT_RIGHT_AXIS_X*/) * 127f));
	*iParam3 = SYSTEM::FLOOR((PAD::GET_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 221 /*INPUT_SCRIPT_RIGHT_AXIS_Y*/) * 127f));
	if (bParam4)
	{
		if (IntToFloat(*iParam0) == 0f && IntToFloat(*iParam1) == 0f)
		{
			*iParam0 = SYSTEM::FLOOR((PAD::GET_DISABLED_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 218 /*INPUT_SCRIPT_LEFT_AXIS_X*/) * 127f));
			*iParam1 = SYSTEM::FLOOR((PAD::GET_DISABLED_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 219 /*INPUT_SCRIPT_LEFT_AXIS_Y*/) * 127f));
		}
		if (IntToFloat(*iParam2) == 0f && IntToFloat(*iParam3) == 0f)
		{
			*iParam2 = SYSTEM::FLOOR((PAD::GET_DISABLED_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 220 /*INPUT_SCRIPT_RIGHT_AXIS_X*/) * 127f));
			*iParam3 = SYSTEM::FLOOR((PAD::GET_DISABLED_CONTROL_NORMAL(2 /*FRONTEND_CONTROL*/, 221 /*INPUT_SCRIPT_RIGHT_AXIS_Y*/) * 127f));
		}
	}
}

void func_462(int iParam0, int iParam1, int iParam2)//Position - 0x41633
{
	if ((iParam1 != iParam1 && iParam2 != iParam2) && iParam0->f_23)
	{
	}
}

int func_463(var uParam0, char* sParam1, int* iParam2, bool bParam3)//Position - 0x4AFC4
{
	int iVar0;
	int iVar1;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	iVar1 = -1;
	iVar0 = 0;
	while (iVar0 < uParam0->f_656)
	{
		if (uParam0->f_656[iVar0 /*6*/])
		{
			if (MISC::ARE_STRINGS_EQUAL(uParam0->f_656[iVar0 /*6*/].f_4, sParam1))
			{
				uParam0->f_656[iVar0 /*6*/].f_2 = 0;
				*iParam2 = uParam0->f_656[iVar0 /*6*/].f_5;
				if (!uParam0->f_656[iVar0 /*6*/].f_1)
				{
					uParam0->f_1007 = 1;
					return 1;
				}
				else
				{
					return 1;
				}
			}
		}
		else if (iVar1 == -1)
		{
			iVar1 = iVar0;
		}
		iVar0++;
	}
	if (iVar1 >= 0)
	{
		if (bParam3)
		{
			*iParam2 = GRAPHICS::REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED(sParam1);
		}
		else
		{
			*iParam2 = GRAPHICS::REQUEST_SCALEFORM_MOVIE(sParam1);
		}
		uParam0->f_656[iVar1 /*6*/] = 1;
		uParam0->f_656[iVar1 /*6*/].f_3 = MISC::GET_GAME_TIMER();
		uParam0->f_656[iVar1 /*6*/].f_4 = sParam1;
		uParam0->f_656[iVar1 /*6*/].f_5 = *iParam2;
		uParam0->f_1007 = 1;
		return 1;
	}
	return 0;
}

int func_464(struct<3> Param0, float fParam1, float fParam2, float fParam3, float fParam4)//Position - 0x4BE43
{
	float fVar0;
	float fVar1;
	GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(Param0, &fVar0, &fVar1);
	if (fVar0 >= fParam1 && fVar0 <= fParam3)
	{
		if (fVar1 >= fParam2 && fVar1 <= fParam4)
		{
			return 1;
		}
	}
	return 0;
}

int func_465(var uParam0, struct<3> Param1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x9856D
{
	if (__LIB_0__::func_86(Param1) || __LIB_0__::func_86(Param2))
	{
		return 0;
	}
	if (uParam0->f_893)
	{
		if ((__LIB_0__::func_78(uParam0->f_893.f_4, Param1, 0) && __LIB_0__::func_78(uParam0->f_893.f_7, Param2, 0)) && uParam0->f_893.f_10 == fParam3)
		{
			uParam0->f_893.f_2 = 0;
			if (!uParam0->f_893.f_1)
			{
				uParam0->f_1007 = 1;
				return 1;
			}
			else
			{
				return 1;
			}
		}
		else
		{
			return 0;
		}
	}
	else
	{
		STREAMING::NEW_LOAD_SCENE_START(Param1, Param2, fParam3, iParam4);
		uParam0->f_893 = 1;
		uParam0->f_893.f_3 = MISC::GET_GAME_TIMER();
		uParam0->f_893.f_4 = { Param1 };
		uParam0->f_893.f_7 = { Param2 };
		uParam0->f_893.f_10 = fParam3;
		uParam0->f_1007 = 1;
		return 1;
	}
	return 0;
}

void func_466()//Position - 0x9C6AF
{
	Global_97725 = 1;
}

void func_467()//Position - 0xA1E36
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 18)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938.f_9[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938.f_9[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938.f_9[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 8)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96938.f_28[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(Global_96938.f_28[iVar0], false))
			{
				ENTITY::SET_ENTITY_PROOFS(Global_96938.f_28[iVar0], false, false, false, false, false, false, false, false);
			}
		}
		iVar0++;
	}
	__LIB_13__::func_789();
	Global_97361 = 0;
}

void func_468(bool bParam0)//Position - 0xA1F51
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
	{
		ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), true, true, true, true, true, false, false, false);
		PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 157, false);
		ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), true);
		PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), false, 0);
		if (bParam0)
		{
			WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), joaat("WEAPON_UNARMED"), false);
		}
		PED::REMOVE_PED_HELMET(PLAYER::PLAYER_PED_ID(), false);
	}
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		PLAYER::CLEAR_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
	}
	PLAYER::SET_MAX_WANTED_LEVEL(0);
	PLAYER::SET_WANTED_LEVEL_MULTIPLIER(0f);
}

int func_469(var uParam0)//Position - 0xA4B43
{
	bool bVar0;
	int iVar1;
	int iVar2;
	if (uParam0->f_1007)
	{
		bVar0 = true;
		iVar1 = 0;
		while (iVar1 < 30)
		{
			if ((*uParam0)[iVar1 /*5*/])
			{
				if (!(uParam0[iVar1 /*5*/])->f_1)
				{
					if (STREAMING::HAS_MODEL_LOADED((uParam0[iVar1 /*5*/])->f_4))
					{
						(uParam0[iVar1 /*5*/])->f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if ((uParam0[iVar1 /*5*/])->f_2)
				{
					if ((uParam0[iVar1 /*5*/])->f_1)
					{
						STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED((uParam0[iVar1 /*5*/])->f_4);
						__LIB_16__::func_856(uParam0[iVar1 /*5*/]);
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 20)
		{
			if (uParam0->f_273[iVar1 /*5*/])
			{
				if (!uParam0->f_273[iVar1 /*5*/].f_1)
				{
					if (STREAMING::HAS_ANIM_DICT_LOADED(uParam0->f_273[iVar1 /*5*/].f_4))
					{
						uParam0->f_273[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_273[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_273[iVar1 /*5*/].f_1)
					{
						STREAMING::REMOVE_ANIM_DICT(uParam0->f_273[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_273[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 20)
		{
			if (uParam0->f_374[iVar1 /*5*/])
			{
				if (!uParam0->f_374[iVar1 /*5*/].f_1)
				{
					if (TASK::GET_IS_WAYPOINT_RECORDING_LOADED(uParam0->f_374[iVar1 /*5*/].f_4))
					{
						uParam0->f_374[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_374[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_374[iVar1 /*5*/].f_1)
					{
						TASK::REMOVE_WAYPOINT_RECORDING(uParam0->f_374[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_374[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 5)
		{
			if (uParam0->f_656[iVar1 /*6*/])
			{
				if (!uParam0->f_656[iVar1 /*6*/].f_1)
				{
					if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(uParam0->f_656[iVar1 /*6*/].f_5))
					{
						uParam0->f_656[iVar1 /*6*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_656[iVar1 /*6*/].f_2)
				{
					if (uParam0->f_656[iVar1 /*6*/].f_1)
					{
						GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&(uParam0->f_656[iVar1 /*6*/].f_5));
						__LIB_16__::func_856(&(uParam0->f_656[iVar1 /*6*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 30)
		{
			if (uParam0->f_475[iVar1 /*6*/])
			{
				if (!uParam0->f_475[iVar1 /*6*/].f_1)
				{
					if (VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(uParam0->f_475[iVar1 /*6*/].f_5, uParam0->f_475[iVar1 /*6*/].f_4))
					{
						uParam0->f_475[iVar1 /*6*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_475[iVar1 /*6*/].f_2)
				{
					if (uParam0->f_475[iVar1 /*6*/].f_1)
					{
						VEHICLE::REMOVE_VEHICLE_RECORDING(uParam0->f_475[iVar1 /*6*/].f_5, uParam0->f_475[iVar1 /*6*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_475[iVar1 /*6*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 10)
		{
			if (uParam0->f_202[iVar1 /*7*/])
			{
				if (!uParam0->f_202[iVar1 /*7*/].f_1)
				{
					if (WEAPON::HAS_WEAPON_ASSET_LOADED(uParam0->f_202[iVar1 /*7*/].f_4))
					{
						uParam0->f_202[iVar1 /*7*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_202[iVar1 /*7*/].f_2)
				{
					if (uParam0->f_202[iVar1 /*7*/].f_1)
					{
						WEAPON::REMOVE_WEAPON_ASSET(uParam0->f_202[iVar1 /*7*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_202[iVar1 /*7*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 10)
		{
			if (uParam0->f_151[iVar1 /*5*/])
			{
				if (!uParam0->f_151[iVar1 /*5*/].f_1)
				{
					if (VEHICLE::HAS_VEHICLE_ASSET_LOADED(uParam0->f_151[iVar1 /*5*/].f_4))
					{
						uParam0->f_151[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_151[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_151[iVar1 /*5*/].f_1)
					{
						VEHICLE::REMOVE_VEHICLE_ASSET(uParam0->f_151[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_151[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 5)
		{
			if (uParam0->f_737[iVar1 /*5*/])
			{
				if (!uParam0->f_737[iVar1 /*5*/].f_1)
				{
					if (AUDIO::REQUEST_SCRIPT_AUDIO_BANK(uParam0->f_737[iVar1 /*5*/].f_4, false, -1))
					{
						uParam0->f_737[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_737[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_737[iVar1 /*5*/].f_1)
					{
						AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(uParam0->f_737[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_737[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 3)
		{
			if (uParam0->f_763[iVar1 /*5*/])
			{
				if (!uParam0->f_763[iVar1 /*5*/].f_1)
				{
					if (INTERIOR::IS_INTERIOR_READY(uParam0->f_763[iVar1 /*5*/].f_4))
					{
						uParam0->f_763[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_763[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_763[iVar1 /*5*/].f_1)
					{
						INTERIOR::UNPIN_INTERIOR(uParam0->f_763[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_763[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 7)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(uParam0->f_687[iVar1 /*7*/].f_4))
			{
				if (uParam0->f_687[iVar1 /*7*/])
				{
					iVar2 = GRAPHICS::QUERY_MOVIE_MESH_SET_STATE(uParam0->f_687[iVar1 /*7*/].f_5);
					if (!uParam0->f_687[iVar1 /*7*/].f_1)
					{
						switch (iVar2)
						{
							case 1:
							case 2:
								uParam0->f_687[iVar1 /*7*/].f_1 = 1;
								break;
							case 0:
								uParam0->f_687[iVar1 /*7*/].f_1 = 0;
								bVar0 = false;
								break;
							case 3:
								uParam0->f_687[iVar1 /*7*/].f_1 = 0;
								__LIB_16__::func_856(&(uParam0->f_687[iVar1 /*7*/]));
								break;
							case -1:
								uParam0->f_687[iVar1 /*7*/].f_1 = 0;
								GRAPHICS::RELEASE_MOVIE_MESH_SET(uParam0->f_687[iVar1 /*7*/].f_5);
								uParam0->f_687[iVar1 /*7*/] = 0;
								bVar0 = false;
								break;
							}
					}
				}
				else if (INTERIOR::IS_INTERIOR_READY(uParam0->f_687[iVar1 /*7*/].f_6))
				{
					uParam0->f_687[iVar1 /*7*/].f_5 = GRAPHICS::LOAD_MOVIE_MESH_SET(uParam0->f_687[iVar1 /*7*/].f_4);
					uParam0->f_687[iVar1 /*7*/].f_3 = MISC::GET_GAME_TIMER();
					uParam0->f_687[iVar1 /*7*/] = 1;
				}
				else
				{
					bVar0 = false;
				}
				if (uParam0->f_687[iVar1 /*7*/].f_2)
				{
					if (uParam0->f_687[iVar1 /*7*/])
					{
						if (uParam0->f_687[iVar1 /*7*/].f_1)
						{
							GRAPHICS::RELEASE_MOVIE_MESH_SET(uParam0->f_687[iVar1 /*7*/].f_5);
							__LIB_16__::func_856(&(uParam0->f_687[iVar1 /*7*/]));
							uParam0->f_687[iVar1 /*7*/].f_4 = "";
						}
						else
						{
							bVar0 = false;
						}
					}
					else
					{
						__LIB_16__::func_856(&(uParam0->f_687[iVar1 /*7*/]));
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 10)
		{
			if (uParam0->f_904[iVar1 /*5*/])
			{
				if (!uParam0->f_904[iVar1 /*5*/].f_1)
				{
					if (TASK::ASSISTED_MOVEMENT_IS_ROUTE_LOADED(uParam0->f_904[iVar1 /*5*/].f_4))
					{
						uParam0->f_904[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_904[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_904[iVar1 /*5*/].f_1)
					{
						TASK::ASSISTED_MOVEMENT_REMOVE_ROUTE(uParam0->f_904[iVar1 /*5*/].f_4);
						__LIB_16__::func_856(&(uParam0->f_904[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 5)
		{
			if (uParam0->f_955[iVar1 /*5*/])
			{
				if (!uParam0->f_955[iVar1 /*5*/].f_1)
				{
					if (AUDIO::PREPARE_ALARM(uParam0->f_955[iVar1 /*5*/].f_4))
					{
						uParam0->f_955[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_955[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_955[iVar1 /*5*/].f_1)
					{
						__LIB_16__::func_856(&(uParam0->f_955[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < uParam0->f_779)
		{
			if (uParam0->f_779[iVar1 /*5*/])
			{
				if (!uParam0->f_779[iVar1 /*5*/].f_1)
				{
					if (HUD::HAS_ADDITIONAL_TEXT_LOADED(iVar1))
					{
						uParam0->f_779[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_779[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_779[iVar1 /*5*/].f_1)
					{
						HUD::CLEAR_ADDITIONAL_TEXT(iVar1, true);
						__LIB_16__::func_856(&(uParam0->f_779[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		if (uParam0->f_885)
		{
			if (!uParam0->f_885.f_1)
			{
				if (STREAMING::HAS_PTFX_ASSET_LOADED())
				{
					uParam0->f_885.f_1 = 1;
				}
				else
				{
					bVar0 = false;
				}
			}
			if (uParam0->f_885.f_2)
			{
				if (uParam0->f_885.f_1)
				{
					STREAMING::REMOVE_PTFX_ASSET();
					__LIB_16__::func_856(&(uParam0->f_885));
				}
				else
				{
					bVar0 = false;
				}
			}
		}
		if (uParam0->f_889)
		{
			if (!uParam0->f_889.f_1)
			{
				if (PHYSICS::ROPE_ARE_TEXTURES_LOADED())
				{
					uParam0->f_889.f_1 = 1;
				}
				else
				{
					bVar0 = false;
				}
			}
			if (uParam0->f_889.f_2)
			{
				if (uParam0->f_889.f_1)
				{
					PHYSICS::ROPE_UNLOAD_TEXTURES();
					__LIB_16__::func_856(&(uParam0->f_889));
				}
				else
				{
					bVar0 = false;
				}
			}
		}
		if (uParam0->f_893 && STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
		{
			if (!uParam0->f_893.f_1)
			{
				if (STREAMING::IS_NEW_LOAD_SCENE_LOADED())
				{
					uParam0->f_893.f_1 = 1;
					if (uParam0->f_1008)
					{
						ENTITY::FREEZE_ENTITY_POSITION(PLAYER::PLAYER_PED_ID(), false);
						__LIB_16__::func_904(uParam0);
						uParam0->f_1008 = 0;
					}
				}
				else
				{
					bVar0 = false;
				}
			}
			if (uParam0->f_893.f_2)
			{
				STREAMING::NEW_LOAD_SCENE_STOP();
				__LIB_16__::func_856(&(uParam0->f_893));
			}
		}
		iVar1 = 0;
		while (iVar1 < 5)
		{
			if (uParam0->f_981[iVar1 /*5*/])
			{
				if (!uParam0->f_981[iVar1 /*5*/].f_1)
				{
					if (GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(uParam0->f_981[iVar1 /*5*/].f_4))
					{
						uParam0->f_981[iVar1 /*5*/].f_1 = 1;
					}
					else
					{
						bVar0 = false;
					}
				}
				if (uParam0->f_981[iVar1 /*5*/].f_2)
				{
					if (uParam0->f_981[iVar1 /*5*/].f_1)
					{
						__LIB_16__::func_856(&(uParam0->f_981[iVar1 /*5*/]));
					}
					else
					{
						bVar0 = false;
					}
				}
			}
			iVar1++;
		}
		if (bVar0)
		{
			uParam0->f_1007 = 0;
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

void func_470(var uParam0, char* sParam1)//Position - 0x4405
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_737)
	{
		if (uParam0->f_737[iVar0 /*5*/])
		{
			if (MISC::ARE_STRINGS_EQUAL(uParam0->f_737[iVar0 /*5*/].f_4, sParam1))
			{
				if (uParam0->f_737[iVar0 /*5*/].f_1)
				{
					AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(sParam1);
					__LIB_16__::func_856(&(uParam0->f_737[iVar0 /*5*/]));
					return;
				}
				else
				{
					uParam0->f_737[iVar0 /*5*/].f_2 = 1;
					uParam0->f_1007 = 1;
					return;
				}
			}
		}
		iVar0++;
	}
}

void func_471(int iParam0, bool bParam1)//Position - 0x2F05
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_13__::func_716(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_0__::func_528(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

int func_472(int iParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x94B16
{
	struct<98> Var0;
	int iVar1;
	int iVar2;
	if (!__LIB_0__::func_374(bParam1))
	{
		Var0.f_11 = 12;
		Var0.f_31 = 49;
		Var0.f_81 = 2;
		__LIB_17__::func_152(bParam1, &Var0, iParam5);
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var0.f_0)
			{
			}
			return 1;
		}
		if ((bParam1 == 17 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][0 /*98*/] == Var0.f_0) || (bParam1 == 15 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][1 /*98*/] == Var0.f_0))
		{
			if (bParam1 == 17)
			{
				iVar1 = 0;
			}
			else if (bParam1 == 15)
			{
				iVar1 = 1;
			}
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var0.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_5, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_7, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var0.f_2);
				iVar2 = 0;
				while (iVar2 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar2 + 1, !Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_11[iVar2]);
					iVar2++;
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
				{
					if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(*iParam0, false))
					{
						if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_24)
						{
							VEHICLE::RAISE_CONVERTIBLE_ROOF(*iParam0, true);
						}
						else
						{
							VEHICLE::LOWER_CONVERTIBLE_ROOF(*iParam0, true);
						}
					}
				}
				VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_27));
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_26);
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_84, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_85, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_93, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_94, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var0.f_96);
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_3618[0 /*197*/][iVar1 /*98*/]);
				}
				__LIB_17__::func_153(*iParam0);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var0.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var0.f_0))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var0.f_0, Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				__LIB_17__::func_197(iParam0, Var0);
				if (bParam1 == 17 || bParam1 == 15)
				{
					__LIB_17__::func_153(*iParam0);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var0.f_0);
				}
				return 1;
			}
		}
	}
	return 0;
}

void func_473(int iParam0)//Position - 0x9F64C
{
	__LIB_17__::func_67(&(Global_106934.f_2890), &Global_106934, iParam0, 1);
}

bool func_474(int iParam0, bool bParam1, int iParam2)//Position - 0x2816C
{
	int iVar0;
	int iVar1;
	int iVar2;
	var uVar3;
	var uVar4;
	bool bVar5;
	bool bVar6;
	bool bVar7;
	bool bVar8;
	bool bVar9;
	int iVar10;
	int iVar11;
	bool bVar12;
	bool bVar13;
	bool bVar14;
	bool bVar15;
	bVar5 = false;
	bVar6 = PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID());
	bVar7 = ((bVar6 && Global_78319) && __LIB_0__::func_81());
	bVar8 = __LIB_13__::func_749(bParam1);
	iParam0->f_6 = __LIB_0__::func_682(__LIB_14__::func_466());
	Global_23011.f_12 = !iParam0->f_23;
	Global_23011.f_121 = bParam1;
	Global_23011.f_122 = iParam2;
	Global_23011.f_123 = bVar7;
	Global_23011.f_3 = Global_23011.f_2;
	Global_23011.f_70 = 0;
	bVar9 = ((Global_23011.f_104 == 4 || Global_23011.f_104 == 1) || Global_23011.f_104 == 3);
	iVar0 = 0;
	while (iVar0 <= (4 - 1))
	{
		__LIB_16__::func_869(iParam0, iVar0, 1, &iVar1, &iVar2, &uVar3, &uVar4);
		Global_23011.f_71[iVar0] = -1;
		Global_23011.f_76[iVar0] = -1;
		Global_23011.f_94[iVar0] = -1;
		Global_23011.f_99[iVar0] = -1;
		Global_23011.f_54[iVar0] = 0;
		Global_23011.f_59[iVar0] = 0;
		Global_23011.f_81[iVar0 /*3*/] = { 0f, 0f, 0f };
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			iVar10 = iVar0;
			if (iVar10 == 3)
			{
				Global_23011.f_70 = 1;
			}
			else if ((__LIB_15__::func_971(iVar10) && __LIB_15__::func_975(iVar10)) && iVar10 == __LIB_0__::func_682(Global_113386.f_2363.f_539.f_4323))
			{
				Global_23011.f_70 = 1;
			}
			else
			{
				Global_23011.f_70 = 0;
			}
		}
		else if (Global_23011.f_12)
		{
			if (!Global_23011.f_70)
			{
				if ((((!PED::IS_PED_INJURED((*iParam0)[iVar0]) && !iParam0->f_18[iVar0]) && (*iParam0)[iVar0] != PLAYER::PLAYER_PED_ID()) || iParam0->f_34[iVar0] == 2) || iParam0->f_24[iVar0] != 0)
				{
					Global_23011.f_70 = 1;
				}
			}
			if (iParam0->f_34[iVar0] == 3)
			{
				bVar5 = true;
			}
			else if (iParam0->f_6 == iVar0)
			{
				if (iParam0->f_34[iVar0] == 1 || iParam0->f_34[iVar0] == 2)
				{
					bVar5 = true;
				}
			}
			if (iParam0->f_8[iVar0])
			{
				if (iParam0->f_39 && iParam0->f_7 == iVar0)
				{
					iParam0->f_8[iVar0] = 0;
				}
				else if ((iParam0->f_6 == iVar0 && !bVar5) || iParam0->f_34[iVar0] == 3)
				{
					iParam0->f_8[iVar0] = 0;
				}
				else if ((PED::IS_PED_INJURED((*iParam0)[iVar0]) && !iParam0->f_23) && !iParam0->f_34[iVar0] == 2)
				{
					iParam0->f_8[iVar0] = 0;
				}
			}
			Global_23011.f_49[iVar0] = iParam0->f_8[iVar0];
			Global_23011.f_64[iVar0] = uVar3;
			if ((ENTITY::DOES_ENTITY_EXIST((*iParam0)[iVar0]) && !PED::IS_PED_INJURED((*iParam0)[iVar0])) && (*iParam0)[iVar0] != PLAYER::PLAYER_PED_ID())
			{
				Global_23011.f_71[iVar0] = SYSTEM::FLOOR((((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH((*iParam0)[iVar0])) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH((*iParam0)[iVar0])) - 100f)) * 100f));
			}
			if ((Global_23011.f_71[iVar0] != -1 && IntToFloat(Global_23011.f_71[iVar0]) < 25f) || iParam0->f_13[iVar0])
			{
				if (iParam0->f_6 != iVar0)
				{
					Global_23011.f_54[iVar0] = 1;
					Global_23011.f_59[iVar0] = iParam0->f_13[iVar0];
				}
			}
		}
		else
		{
			Global_23011.f_49[iVar0] = iParam0->f_8[iVar0];
			Global_23011.f_64[iVar0] = uVar3;
		}
		if (Global_23011.f_124)
		{
			Global_23011.f_19[iVar2] = iVar1;
			Global_23011.f_24[iVar2] = uVar3;
			Global_23011.f_29[iVar2] = uVar4;
			Global_23011.f_34[iVar0] = 0;
			Global_23011.f_44[iVar0] = 0;
			Global_23011.f_39[iVar0] = 0;
			if (bVar9)
			{
				if (Global_23011.f_12)
				{
					if (ENTITY::DOES_ENTITY_EXIST((*iParam0)[iVar0]) && !PED::IS_PED_INJURED((*iParam0)[iVar0]))
					{
						Global_23011.f_76[iVar0] = PED::GET_PED_ARMOUR((*iParam0)[iVar0]);
						if (iVar0 == 0)
						{
							STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY"), &(Global_23011.f_94[iVar0]), -1);
							STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY_UNLOCKED"), &(Global_23011.f_99[iVar0]), -1);
						}
						else if (iVar0 == 1)
						{
							STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY"), &(Global_23011.f_94[iVar0]), -1);
							STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY_UNLOCKED"), &(Global_23011.f_99[iVar0]), -1);
						}
						else if (iVar0 == 2)
						{
							STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY"), &(Global_23011.f_94[iVar0]), -1);
							STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY_UNLOCKED"), &(Global_23011.f_99[iVar0]), -1);
						}
						Global_23011.f_81[iVar0 /*3*/] = { ENTITY::GET_ENTITY_COORDS((*iParam0)[iVar0], true) };
					}
				}
				else if ((iVar0 < 3 && iVar1 != 3) && (!__LIB_13__::func_94() || __LIB_0__::isGlobal_43052EqualsValue(14)))
				{
					Global_23011.f_34[iVar0] = Global_97754[iVar0];
					Global_23011.f_44[iVar0] = 0;
					Global_23011.f_34[iVar0] = (Global_23011.f_34[iVar0] + Global_97766[iVar0]);
					Global_23011.f_39[iVar0] = 0;
					Global_23011.f_34[iVar0] = (Global_23011.f_34[iVar0] + Global_97762[iVar0]);
				}
			}
		}
		if (((Global_23011.f_69 == -1 || !Global_23011.f_14) && Global_23011.f_69 != iVar2) && !__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			if ((iParam0->f_6 == iVar0 && !bVar5) || iParam0->f_34[iVar0] == 3)
			{
				Global_23011.f_69 = iVar2;
				Global_23011.f_14 = 1;
			}
		}
		iVar0++;
	}
	if (bVar8)
	{
		if ((((((Global_23011.f_124 && (!Global_23011.f_9 || Global_23011.f_10)) && ((!__LIB_0__::func_540(0) || Global_23011.f_12) || __LIB_0__::isGlobal_43052EqualsValue(14))) && ((!__LIB_0__::func_540(3) || Global_23011.f_12) || __LIB_0__::isGlobal_43052EqualsValue(14))) && ((!__LIB_0__::func_540(2) || Global_23011.f_12) || __LIB_0__::isGlobal_43052EqualsValue(14))) && ((!__LIB_0__::func_540(9) || Global_23011.f_12) || __LIB_0__::isGlobal_43052EqualsValue(14))) && ((!__LIB_0__::func_540(10) || Global_23011.f_12) || __LIB_0__::isGlobal_43052EqualsValue(14)))
		{
			if (Global_23011.f_104 == 4)
			{
				if (__LIB_0__::isGlobal_43052EqualsValue(14))
				{
					if (Global_23011.f_69 == 0)
					{
						Global_23011.f_11 = __LIB_16__::func_14(iParam0, 1);
					}
					else if (Global_23011.f_69 == 1)
					{
						Global_23011.f_11 = __LIB_16__::func_14(iParam0, 2);
					}
					else if (Global_23011.f_69 == 2)
					{
						Global_23011.f_11 = __LIB_16__::func_14(iParam0, 3);
					}
					else if (Global_23011.f_69 == 3)
					{
						Global_23011.f_11 = __LIB_16__::func_14(iParam0, 0);
					}
				}
				else if (Global_23011.f_69 == 0)
				{
					Global_23011.f_11 = __LIB_16__::func_896(iParam0, 1);
				}
				else if (Global_23011.f_69 == 1)
				{
					Global_23011.f_11 = __LIB_16__::func_896(iParam0, 2);
				}
				else if (Global_23011.f_69 == 2)
				{
					Global_23011.f_11 = __LIB_16__::func_30(iParam0);
				}
				else if (Global_23011.f_69 == 3)
				{
					Global_23011.f_11 = __LIB_16__::func_896(iParam0, 0);
				}
			}
			else if (Global_23011.f_104 == 3 || (Global_23011.f_9 && Global_23011.f_10))
			{
				if ((((!Global_23011.f_11 && Global_23011.f_12) && Global_23011.f_70) && !NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && !(__LIB_1__::func_732(PLAYER::PLAYER_PED_ID()) && (PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 25 /*INPUT_AIM*/) || PAD::IS_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/))))
				{
					if (iParam0->f_34[0] == 3)
					{
						iVar11 = 0;
					}
					else if (iParam0->f_34[1] == 3)
					{
						iVar11 = 1;
					}
					else if (iParam0->f_34[2] == 3)
					{
						iVar11 = 2;
					}
					else
					{
						iVar11 = __LIB_14__::func_466();
					}
					switch (iVar11)
					{
						case 0:
							if (iParam0->f_13[1] && !Global_23011.f_16)
							{
								bVar12 = true;
							}
							else if (iParam0->f_13[2] && !Global_23011.f_16)
							{
								bVar12 = 2;
							}
							else if (iParam0->f_43)
							{
								bVar12 = iParam0->f_40;
								bVar13 = iParam0->f_41;
								bVar14 = iParam0->f_42;
							}
							else
							{
								bVar12 = true;
								bVar13 = 2;
							}
							break;
						case 1:
							if (iParam0->f_13[2] && !Global_23011.f_16)
							{
								bVar12 = 2;
							}
							else if (iParam0->f_13[0] && !Global_23011.f_16)
							{
								bVar12 = false;
							}
							else if (iParam0->f_43)
							{
								bVar12 = iParam0->f_40;
								bVar13 = iParam0->f_41;
								bVar14 = iParam0->f_42;
							}
							else
							{
								bVar12 = 2;
								bVar13 = false;
							}
							break;
						case 2:
							if (iParam0->f_13[0] && !Global_23011.f_16)
							{
								bVar12 = false;
							}
							else if (iParam0->f_13[1] && !Global_23011.f_16)
							{
								bVar12 = true;
							}
							else if (iParam0->f_43)
							{
								bVar12 = iParam0->f_40;
								bVar13 = iParam0->f_41;
								bVar14 = iParam0->f_42;
							}
							else
							{
								bVar12 = false;
								bVar13 = true;
							}
							break;
					}
					bVar15 = true;
					if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
					{
						if (!PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 19 /*INPUT_CHARACTER_WHEEL*/))
						{
							if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 166 /*INPUT_SELECT_CHARACTER_MICHAEL*/))
							{
								bVar15 = false;
								if (iVar11 != 0)
								{
									if (__LIB_16__::func_896(iParam0, 0))
									{
										Global_23011.f_11 = 1;
									}
								}
							}
							else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 167 /*INPUT_SELECT_CHARACTER_FRANKLIN*/))
							{
								bVar15 = false;
								if (iVar11 != 1)
								{
									if (__LIB_16__::func_896(iParam0, 1))
									{
										Global_23011.f_11 = 1;
									}
								}
							}
							else if (PAD::IS_CONTROL_JUST_RELEASED(0 /*PLAYER_CONTROL*/, 168 /*INPUT_SELECT_CHARACTER_TREVOR*/))
							{
								bVar15 = false;
								if (iVar11 != 2)
								{
									if (__LIB_16__::func_896(iParam0, 2))
									{
										Global_23011.f_11 = 1;
									}
								}
							}
						}
					}
					if (bVar15)
					{
						if (__LIB_16__::func_896(iParam0, bVar12))
						{
							Global_23011.f_11 = 1;
						}
						else if (__LIB_16__::func_896(iParam0, bVar13))
						{
							Global_23011.f_11 = 1;
						}
						else if (__LIB_16__::func_896(iParam0, bVar14))
						{
							Global_23011.f_11 = 1;
						}
					}
				}
			}
		}
	}
	if (Global_23011.f_11)
	{
		Global_23011.f_125 = 1;
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(6);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(8);
		HUD::HIDE_HUD_COMPONENT_THIS_FRAME(9);
	}
	return Global_23011.f_11;
}

void func_475(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x312CC
{
	int iVar0;
	if (iParam2 == 0)
	{
		iParam2 = PLAYER::PLAYER_PED_ID();
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam2))
	{
		uParam1->f_5 = __LIB_13__::func_716(iParam2);
	}
	if (__LIB_16__::func_5(iParam2, &iVar0, iParam3, iParam5))
	{
		__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("skylift")) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
			{
				__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
			}
		}
	}
}

int func_476(var uParam0, struct<3> Param1, float fParam2, bool bParam3)//Position - 0x9532D
{
	int iVar0;
	struct<3> Var1;
	bool bVar2;
	var uVar3;
	int iVar4;
	if (__LIB_13__::func_797(uParam0))
	{
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { *uParam0 };
			fParam2 = uParam0->f_6;
		}
		if (uParam0->f_12.f_66 == joaat("monster") || uParam0->f_12.f_66 == joaat("marshall"))
		{
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param1, -816.87164f, 185.62384f, 71.40275f, -807.48944f, 189.3762f, 75.27323f, 6.5f, false, true))
			{
				Param1 = { -850.93f, 158.82f, 65.7f };
				fParam2 = 89.5f;
			}
		}
		if (__LIB_13__::func_825(uParam0))
		{
			MISC::CLEAR_AREA(Param1, 5f, true, false, false, false);
			__LIB_17__::func_241(Param1, 5f, 0);
			iVar0 = VEHICLE::CREATE_VEHICLE(uParam0->f_12.f_66, Param1, fParam2, true, true, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar0))
			{
				Var1 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if (SYSTEM::VDIST2(Var1, -1151.15f, -1530.32f, 7.48925f) <= 3f)
				{
					ENTITY::SET_ENTITY_COORDS_NO_OFFSET(iVar0, Param1, false, false, true);
				}
				__LIB_1__::func_569(iVar0, &(uParam0->f_12), 0, 1);
				bVar2 = true;
				if (VEHICLE::IS_THIS_MODEL_A_BOAT(uParam0->f_12.f_66) || VEHICLE::IS_THIS_MODEL_A_JETSKI(uParam0->f_12.f_66))
				{
					if (!WATER::TEST_PROBE_AGAINST_WATER(Param1.f_0, Param1.f_1, (Param1.f_2 + 30f), Param1.f_0, Param1.f_1, (Param1.f_2 - 30f), &uVar3))
					{
						bVar2 = false;
					}
				}
				if (bVar2)
				{
					VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
				}
				if (uParam0->f_7 == 1)
				{
					if (bParam3)
					{
						if (VEHICLE::IS_THIS_MODEL_A_CAR(ENTITY::GET_ENTITY_MODEL(iVar0)))
						{
							__LIB_15__::func_942(uParam0->f_11, 1);
						}
						else if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(iVar0)))
						{
							__LIB_15__::func_942(uParam0->f_11, 2);
						}
					}
					VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(iVar0, false);
					VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(iVar0, false);
					VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(iVar0, true);
					__LIB_0__::func_397(iVar0, uParam0->f_11);
				}
				else if ((!__LIB_17__::func_240(iVar0, uParam0->f_3, uParam0->f_8) && uParam0->f_10) && MISC::ARE_STRINGS_EQUAL(SCRIPT::GET_THIS_SCRIPT_NAME(), "startup_positioning"))
				{
					iVar4 = __LIB_0__::func_489(iVar0);
					if (iVar4 == -1)
					{
						uParam0->f_10 = 0;
					}
					else
					{
						__LIB_17__::func_68(iVar4);
					}
				}
				if (((Global_100441 != 13 && Global_100441 != 10) && Global_100441 != 11) && Global_100441 != 12)
				{
					if (MISC::GET_HASH_KEY(&(Global_100441.f_3)) == Global_78125)
					{
						if (uParam0->f_12.f_66 == Global_113386.f_32749.f_69[21 /*78*/].f_66)
						{
							__LIB_0__::func_364(24, 0);
							__LIB_17__::func_68(24);
						}
					}
				}
				if (uParam0->f_9 == 1)
				{
					__LIB_13__::func_828(iVar0, uParam0->f_11);
				}
				STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(uParam0->f_12.f_66);
				Var1 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
			}
			return iVar0;
		}
	}
	return iVar0;
}

void func_477(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0xA0717
{
	struct<60> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam3 != 24 && iParam3 != 25)
		{
			return;
		}
		if (iParam3 == 24)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[25]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[25], false))
			{
				if (Global_77137.f_484[25] == iParam0)
				{
					return;
				}
			}
		}
		if (!bParam4)
		{
			if ((VEHICLE::IS_BIG_VEHICLE(iParam0) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bus")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("tourbus"))
			{
				return;
			}
		}
		__LIB_17__::func_106(iParam3);
		Var0.f_9 = 49;
		Var0.f_59 = 2;
		__LIB_0__::func_209(iParam0, &Var0);
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			fParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
		if (iParam3 == 24)
		{
			if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != joaat("vehicle_gen_controller"))
			{
				Global_78125 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
			}
		}
		__LIB_17__::func_110(iParam3, &Var0, Param1, fParam2, __LIB_0__::func_119(iParam0));
		__LIB_17__::func_185(iParam3, iParam0, 0);
	}
}

int func_478(int iParam0, bool bParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x424DE
{
	int iVar0;
	var uVar1;
	struct<97> Var2;
	int iVar3;
	int iVar4;
	bool bVar5;
	char cVar6[16];
	int iVar7;
	if (__LIB_0__::func_374(bParam1))
	{
		Var2.f_11 = 12;
		Var2.f_31 = 49;
		Var2.f_81 = 2;
		__LIB_0__::func_378(bParam1, &Var2, iParam5);
		if (Var2.f_0 == 0)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var2.f_0)
			{
			}
			return 1;
		}
		if ((bParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131])
		{
			Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/] = 0;
		}
		if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar3 = 0;
				while (iVar3 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar3 + 1, !Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_11[iVar3]);
					iVar3++;
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][bParam1 /*98*/]);
				}
				__LIB_0__::func_397(*iParam0, bParam1);
				return 1;
			}
		}
		else if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar4 = 0;
				while (iVar4 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar4 + 1, !Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_11[iVar4]);
					iVar4++;
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][bParam1 /*98*/]);
				}
				__LIB_0__::func_397(*iParam0, bParam1);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var2.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var2.f_0))
			{
				bVar5 = true;
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var2.f_0, Param2, fParam3, true, true, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				StringCopy(&cVar6, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0), 16);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Var2.f_5, Var2.f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Var2.f_7, Var2.f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar7 = 0;
				while (iVar7 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar7 + 1, !Var2.f_11[iVar7]);
					iVar7++;
				}
				if (Var2.f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Var2.f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Var2.f_27));
					if (Var2.f_26 >= 0 && Var2.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Var2.f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Var2.f_84, Var2.f_85, Var2.f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Var2.f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Var2.f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Var2.f_93, Var2.f_94, Var2.f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Var2.f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Var2.f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Var2.f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Var2.f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Var2.f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Var2.f_89);
				}
				if (Var2.f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Var2.f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Var2.f_31), &(Var2.f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (bParam1 == 1)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bagger") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[118])
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &cVar6);
						bVar5 = false;
					}
				}
				else if (bParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_522(iParam0);
					}
				}
				else if (((bParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131]) && ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("tailgater"))
				{
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 6, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 14, 7, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 11, 2, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 2, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 7, 5, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 0, 0, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 3, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 13, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 4, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 12, 2, false);
					VEHICLE::TOGGLE_VEHICLE_MOD(*iParam0, 22, true);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, 2);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 23, 11, false);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, 2);
					Global_113386.f_2363.f_539.f_4316 = 1;
					__LIB_16__::func_875(bParam1, iParam0, 0, 1);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var2.f_0);
				}
				if (bVar5)
				{
					__LIB_0__::func_397(*iParam0, bParam1);
				}
				return 1;
			}
		}
	}
	return 0;
}

void func_479(int iParam0, int iParam1)//Position - 0x77BAD
{
	float fVar0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		fVar0 = (((SYSTEM::TO_FLOAT(ENTITY::GET_ENTITY_HEALTH(iParam0)) - 100f) / (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) * 100f);
		PED::SET_PED_MAX_HEALTH(iParam0, iParam1);
		ENTITY::SET_ENTITY_HEALTH(iParam0, SYSTEM::ROUND((((fVar0 / 100f) * (SYSTEM::TO_FLOAT(PED::GET_PED_MAX_HEALTH(iParam0)) - 100f)) + 100f)), 0);
	}
}

float func_480(int iParam0)//Position - 0x81849
{
	float fVar0;
	VEHICLE::REQUEST_VEHICLE_RECORDING(iParam0, &cLocal_142);
	while (!VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(iParam0, &cLocal_142))
	{
		SYSTEM::WAIT(0);
	}
	fVar0 = VEHICLE::GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(iParam0, &cLocal_142);
	VEHICLE::REMOVE_VEHICLE_RECORDING(iParam0, &cLocal_142);
	return fVar0;
}

int func_481(int iParam0, int iParam1, float fParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6, bool bParam7)//Position - 0x81885
{
	float fVar0;
	if (iParam1 > 0)
	{
		VEHICLE::REQUEST_VEHICLE_RECORDING(iParam1, &cLocal_142);
		if (VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(iParam1, &cLocal_142))
		{
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(*iParam0, false))
			{
				if (!VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(*iParam0))
				{
					ENTITY::FREEZE_ENTITY_POSITION(*iParam0, false);
					if (bParam4)
					{
						VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_USING_AI(*iParam0, iParam1, &cLocal_142, 10f, 786603);
					}
					else
					{
						if (iParam1 != iLocal_120 && iParam1 != iLocal_121)
						{
							if (bParam7)
							{
								VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(*iParam0, iParam1, &cLocal_142, 2 | 4, 0, 786603);
							}
							else if (bParam6)
							{
								VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(*iParam0, iParam1, &cLocal_142, 1 | 4, 0, 786603);
							}
							else
							{
								VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(*iParam0, iParam1, &cLocal_142, true);
							}
						}
						else
						{
							VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(*iParam0, iParam1, &cLocal_142, true);
						}
						VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(*iParam0, fParam2);
						if (bParam5)
						{
							VEHICLE::FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(*iParam0, true);
						}
						return 1;
					}
				}
				else if (VEHICLE::GET_CURRENT_PLAYBACK_FOR_VEHICLE(*iParam0) == VEHICLE::GET_VEHICLE_RECORDING_ID(iParam1, &cLocal_142))
				{
					fVar0 = VEHICLE::GET_TIME_POSITION_IN_RECORDING(*iParam0);
					VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(*iParam0, (fParam2 - fVar0));
					if (!bParam3)
					{
						VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(*iParam0);
						VEHICLE::REQUEST_VEHICLE_RECORDING(iParam1, &cLocal_142);
					}
					if (bParam5)
					{
						VEHICLE::FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(*iParam0, true);
					}
					return 1;
				}
				else
				{
					VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(*iParam0);
					ENTITY::FREEZE_ENTITY_POSITION(*iParam0, false);
					if (bParam4)
					{
						VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_USING_AI(*iParam0, iParam1, &cLocal_142, 10f, 786603);
					}
					else if (iParam1 != iLocal_120 && iParam1 != iLocal_121)
					{
						if (bParam7)
						{
							VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(*iParam0, iParam1, &cLocal_142, 2 | 4, 0, 786603);
						}
						else if (bParam6)
						{
							VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(*iParam0, iParam1, &cLocal_142, 1 | 4, 0, 786603);
						}
						else
						{
							VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(*iParam0, iParam1, &cLocal_142, true);
						}
					}
					else
					{
						VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(*iParam0, iParam1, &cLocal_142, true);
					}
					VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(*iParam0, fParam2);
					if (bParam5)
					{
						VEHICLE::FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(*iParam0, true);
					}
					return 1;
				}
			}
		}
	}
	return 0;
}

void func_482()//Position - 0x81A6B
{
	iLocal_42 = 1;
}

void func_483()//Position - 0x81F4E
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iLocal_160[iVar0]))
		{
			if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iLocal_160[iVar0]))
			{
				VEHICLE::DELETE_VEHICLE(&(iLocal_160[iVar0]));
			}
		}
		iLocal_108[iVar0] = 0;
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (!iLocal_153[iVar0] == 0)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iLocal_153[iVar0]);
		}
		iVar0++;
	}
	iLocal_114 = 0;
	iLocal_111 = 0;
}

void func_484(int iParam0)//Position - 0x82D8A
{
	float fVar0;
	int iVar1;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!PED::IS_PED_INJURED(iVar1))
		{
			if (!iVar1 == PLAYER::PLAYER_PED_ID())
			{
				fVar0 = ENTITY::GET_ENTITY_SPEED(iParam0);
				if (fVar0 < 8f)
				{
					fVar0 = 8f;
				}
				if (fVar0 > 62.9f)
				{
					fVar0 = 62.9f;
				}
				TASK::TASK_VEHICLE_MISSION(iVar1, iParam0, 0, 1, fVar0, 786603, 5f, 5f, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 8192, true);
				if (bLocal_61)
				{
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 65536, true);
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 2, false);
				}
				PED::SET_PED_COMBAT_ATTRIBUTES(iVar1, 6, false);
			}
		}
	}
}

void func_485(int iParam0)//Position - 0x830F3
{
	int iVar0;
	int iVar1;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 12);
	if (iLocal_156 >= -1 && iLocal_157 >= -1)
	{
		while (iVar0 == iLocal_156 || iVar0 == iLocal_157)
		{
			iVar0++;
		}
	}
	else if (iLocal_156 >= -1)
	{
		if (iVar0 == iLocal_156)
		{
			iVar0++;
		}
	}
	iVar1 = iVar0;
	switch (iVar1)
	{
		case 0:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 0, 0);
			break;
		case 1:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 2, 2);
			break;
		case 2:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 4, 4);
			break;
		case 3:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 27, 27);
			break;
		case 4:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 7, 7);
			break;
		case 5:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 73, 73);
			break;
		case 6:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 68, 68);
			break;
		case 7:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 62, 62);
			break;
		case 8:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 132, 132);
			break;
		case 9:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 117, 0);
			break;
		case 10:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 52, 52);
			break;
		case 11:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 88, 88);
			break;
		case 12:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 1, 1);
			break;
		case 13:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 36, 36);
			break;
		case 14:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 95, 95);
			break;
		default:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 73, 73);
			break;
	}
}

int func_486(struct<3> Param0, struct<3> Param1, float fParam2, float fParam3)//Position - 0x832DF
{
	if (!CAM::IS_SCREEN_FADED_OUT())
	{
		if (!bLocal_41)
		{
			if (!iLocal_28)
			{
				if (SYSTEM::VMAG2(Param1 - Param0) - fParam2) < (fParam3 * fParam3)
				{
					if (CAM::IS_SPHERE_VISIBLE(Param0, fParam2))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

int func_487()//Position - 0x83326
{
	if (iLocal_155 == 0)
	{
		return joaat("A_M_Y_Business_01");
	}
	return iLocal_155;
}

void func_488()//Position - 0x836C0
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (ENTITY::DOES_ENTITY_EXIST(iLocal_160[iVar0]))
		{
			if (!ENTITY::IS_ENTITY_DEAD(iLocal_160[iVar0], false))
			{
				ENTITY::SET_ENTITY_COLLISION(iLocal_160[iVar0], true, false);
			}
			__LIB_15__::func_908(iLocal_160[iVar0]);
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 4)
	{
		if (!iLocal_153[iVar0] == 0)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iLocal_153[iVar0]);
		}
		iVar0++;
	}
	iLocal_114 = 0;
	iLocal_111 = 0;
}

void func_489(int iParam0, float fParam1)//Position - 0x843E0
{
	int iVar0;
	if (!iLocal_152[iParam0] == 0)
	{
		STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iLocal_152[iParam0]);
	}
	if (!ENTITY::IS_ENTITY_DEAD(iLocal_158[iParam0], false))
	{
		ENTITY::SET_ENTITY_COLLISION(iLocal_158[iParam0], true, false);
		ENTITY::FREEZE_ENTITY_POSITION(iLocal_158[iParam0], false);
		iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iLocal_158[iParam0], -1, false);
		if (!PED::IS_PED_INJURED(iVar0) && iVar0 != PLAYER::PLAYER_PED_ID())
		{
			PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(iVar0, false);
			if (fParam1 < 8f)
			{
				fParam1 = 8f;
			}
			if (fParam1 > 62.9f)
			{
				fParam1 = 62.9f;
			}
			TASK::TASK_VEHICLE_MISSION(iVar0, iLocal_158[iParam0], 0, 1, fParam1, 786603, 5f, 5f, true);
			PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 8192, true);
			if (bLocal_61)
			{
				PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 65536, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar0, 2, false);
			}
			PED::SET_PED_COMBAT_ATTRIBUTES(iVar0, 6, false);
			TASK::SET_DRIVE_TASK_CRUISE_SPEED(iVar0, fParam1);
		}
	}
	if (!bLocal_30)
	{
		if (!bLocal_58)
		{
			__LIB_15__::func_895(iVar0);
			__LIB_15__::func_908(iLocal_158[iParam0]);
		}
	}
	else
	{
		if (ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			PED::DELETE_PED(&iVar0);
		}
		if (ENTITY::DOES_ENTITY_EXIST(iLocal_158[iParam0]))
		{
			VEHICLE::DELETE_VEHICLE(&(iLocal_158[iParam0]));
		}
	}
	if (!bLocal_40 && !bLocal_53)
	{
		if (iLocal_102[iParam0] > 0)
		{
			VEHICLE::REMOVE_VEHICLE_RECORDING(iLocal_102[iParam0], &cLocal_142);
		}
	}
	iLocal_103[iParam0] = 99;
}

void func_490(int iParam0, float fParam1)//Position - 0x845BE
{
	if (!bLocal_41)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) > (fParam1 * fParam1))
				{
					STREAMING::SET_VEHICLE_POPULATION_BUDGET(1);
				}
				else
				{
					STREAMING::SET_VEHICLE_POPULATION_BUDGET(0);
				}
			}
		}
	}
}

void func_491(int iParam0, float fParam1)//Position - 0x8460C
{
	if (!bLocal_41)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
			{
				if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) > (fParam1 * fParam1))
				{
					VEHICLE::SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(1f);
				}
				else
				{
					VEHICLE::SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(0f);
				}
			}
		}
	}
}

void func_492(int iParam0, float fParam1)//Position - 0x8465A
{
	int iVar0;
	float fVar1;
	float fVar2;
	float fVar3;
	bool bVar4;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false) && VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(iParam0))
	{
		fVar1 = (fLocal_97 + 2000f);
		fVar2 = (fLocal_98 + 2000f);
		bVar4 = false;
		if (fVar1 < (fParam1 + 25000f))
		{
			iVar0 = VEHICLE::GET_CURRENT_PLAYBACK_FOR_VEHICLE(iParam0);
			if (fVar1 <= VEHICLE::GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(iVar0))
			{
				if (iLocal_119 == 0)
				{
					Local_138 = { VEHICLE::GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(iVar0, fLocal_97) };
					iLocal_119++;
				}
				else if (iLocal_119 == 1)
				{
					Local_139 = { VEHICLE::GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(iVar0, fVar1) };
					iLocal_119++;
				}
				else if (!bLocal_59)
				{
					if (Local_138.f_0 > Local_139.f_0)
					{
						fVar3 = Local_138.f_0;
						Local_138.f_0 = Local_139.f_0;
						Local_139.f_0 = fVar3;
					}
					if (Local_138.f_1 > Local_139.f_1)
					{
						fVar3 = Local_138.f_1;
						Local_138.f_1 = Local_139.f_1;
						Local_139.f_1 = fVar3;
					}
					if (Local_138.f_2 > Local_139.f_2)
					{
						fVar3 = Local_138.f_2;
						Local_138.f_2 = Local_139.f_2;
						Local_139.f_2 = fVar3;
					}
					Local_138 = { Local_138 - Vector(fLocal_101, fLocal_101, fLocal_101) };
					Local_139 = { Local_139 + Vector(fLocal_101, fLocal_101, fLocal_101) };
					PATHFIND::SET_ROADS_IN_AREA(Local_138, Local_139, false, false);
					fLocal_97 = fVar1;
					iLocal_119 = 0;
				}
			}
		}
		if (fVar2 < (fParam1 - 8000f))
		{
			iVar0 = VEHICLE::GET_CURRENT_PLAYBACK_FOR_VEHICLE(iParam0);
			if (iLocal_122 == 0)
			{
				Local_140 = { VEHICLE::GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(iVar0, fLocal_98) };
				iLocal_122++;
			}
			else if (iLocal_122 == 1)
			{
				Local_141 = { VEHICLE::GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(iVar0, fVar2) };
				iLocal_122++;
			}
			else if (!bLocal_59 && !bVar4)
			{
				if (Local_140.f_0 > Local_141.f_0)
				{
					fVar3 = Local_140.f_0;
					Local_140.f_0 = Local_141.f_0;
					Local_141.f_0 = fVar3;
				}
				if (Local_140.f_1 > Local_141.f_1)
				{
					fVar3 = Local_140.f_1;
					Local_140.f_1 = Local_141.f_1;
					Local_141.f_1 = fVar3;
				}
				if (Local_140.f_2 > Local_141.f_2)
				{
					fVar3 = Local_140.f_2;
					Local_140.f_2 = Local_141.f_2;
					Local_141.f_2 = fVar3;
				}
				Local_140 = { Local_140 - Vector(fLocal_101, fLocal_101, fLocal_101) };
				Local_141 = { Local_141 + Vector(fLocal_101, fLocal_101, fLocal_101) };
				PATHFIND::SET_ROADS_BACK_TO_ORIGINAL(Local_140, Local_141, 1);
				fLocal_98 = fVar2;
				iLocal_122 = 0;
			}
		}
	}
}

int func_493(int iParam0)//Position - 0x94CA0
{
	if (iParam0->f_39)
	{
		if (iParam0->f_7 != 4 && iParam0->f_7 != 3)
		{
			return 1;
		}
	}
	return 0;
}

void func_494(int iParam0, int iParam1, int iParam2)//Position - 0x953DE
{
	if (iParam1 != 4)
	{
		iParam0->f_13[iParam1] = iParam2;
	}
}

int func_495(int iParam0, struct<3> Param1, float fParam2, bool bParam3)//Position - 0x96448
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	float fVar3;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
		fVar2 = SYSTEM::VDIST(Var1, Param1);
		fVar3 = SYSTEM::VDIST(Var0, Param1);
		if (fVar2 < fParam2)
		{
			if (fVar3 < fVar2 && ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, 1f, 1f, 2f, false, true, 0))
			{
				if (bParam3)
				{
					if (PED::IS_PED_IN_COVER(PLAYER::PLAYER_PED_ID(), false))
					{
						return 1;
					}
				}
				else
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

float func_496(int iParam0, int iParam1)//Position - 0xA0544
{
	struct<2> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	int iVar5;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		Var0.f_0 = ENTITY::GET_ENTITY_FORWARD_X(iParam0);
		Var0.f_1 = ENTITY::GET_ENTITY_FORWARD_Y(iParam0);
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam1, false))
		{
			iVar5 = PED::GET_VEHICLE_PED_IS_IN(iParam1, false);
			Var3.f_0 = ENTITY::GET_ENTITY_FORWARD_X(iVar5);
			Var3.f_1 = ENTITY::GET_ENTITY_FORWARD_Y(iVar5);
		}
		else
		{
			Var2 = { ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(iParam1, 0f, 5f, 0f) };
			Var3 = { Var2 - Var1 };
		}
	}
	fVar4 = MISC::GET_ANGLE_BETWEEN_2D_VECTORS(Var0.f_0, Var0.f_1, Var3.f_0, Var3.f_1);
	return fVar4;
}

float func_497(int iParam0, int iParam1)//Position - 0xA05D5
{
	struct<3> Var0;
	struct<3> Var1;
	struct<3> Var2;
	float fVar3;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
	}
	Var2 = { Var1 - Var0 };
	Var2.f_2 = 0f;
	fVar3 = SYSTEM::VMAG(Var2);
	return fVar3;
}

float func_498(int iParam0, int iParam1)//Position - 0xA0627
{
	struct<2> Var0;
	struct<3> Var1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		Var0.f_0 = ENTITY::GET_ENTITY_FORWARD_X(iParam0);
		Var0.f_1 = ENTITY::GET_ENTITY_FORWARD_Y(iParam0);
		Var2 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
	{
		Var3 = { ENTITY::GET_ENTITY_COORDS(iParam1, true) };
	}
	Var1 = { Var3 - Var2 };
	fVar4 = MISC::GET_ANGLE_BETWEEN_2D_VECTORS(Var1.f_0, Var1.f_1, Var0.f_0, Var0.f_1);
	fVar4 = (fVar4 + -90f);
	if (fVar4 < 0f)
	{
		fVar4 = (fVar4 * -1f);
	}
	Var1.f_2 = 0f;
	return (SYSTEM::VMAG(Var1) * SYSTEM::SIN(fVar4));
}

int func_499(int iParam0)//Position - 0xA919D
{
	if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), iParam0, false))
	{
		if (WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), iParam0) < 1)
		{
			return 1;
		}
	}
	else
	{
		return 1;
	}
	return 0;
}

void func_500()//Position - 0x7BAAC
{
	if (Global_97753)
	{
		__LIB_17__::func_256();
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(Global_113386.f_2363.f_539.f_4321));
	}
	else
	{
		GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
	}
}

void func_501()//Position - 0x80363
{
	int iVar0;
	int iVar1;
	__LIB_17__::func_256();
	iVar0 = HUD::GET_MAIN_PLAYER_BLIP_ID();
	if (HUD::DOES_BLIP_EXIST(iVar0))
	{
		iVar1 = Global_113386.f_2363.f_539.f_4321;
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			iVar1 = __LIB_17__::func_107(PLAYER::PLAYER_PED_ID());
		}
		if (iVar1 == 0)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_MICHAEL" /* GXT: Michael */);
		}
		else if (iVar1 == 1)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_FRANKLIN" /* GXT: Franklin */);
		}
		else if (iVar1 == 2)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_TREV" /* GXT: Trevor */);
		}
		else
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(iVar0, "BLIP_PLAYER" /* GXT: Player */);
		}
	}
}

int func_502(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x6E49A
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_0__::func_363(*uParam1, __LIB_17__::func_341(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_503(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x88EE7
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__::func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_0__::func_527(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_0__::func_363(iVar0, __LIB_17__::func_341(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__::func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_504()//Position - 0xA5E34
{
	if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
	{
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			__LIB_17__::func_192();
		}
		return;
	}
	if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
	{
		__LIB_17__::func_192();
		return;
	}
	__LIB_17__::func_194();
	if (Global_100164 > 0)
	{
		return;
	}
	STREAMING::ALLOW_PLAYER_SWITCH_OUTRO();
}

void func_505()//Position - 0xA83F8
{
	Global_100476 = 1;
	if (PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), true))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_17__::func_341())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MARRE" /* GXT: ~s~Michael was arrested. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FARRE" /* GXT: ~s~Franklin was arrested. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TARRE" /* GXT: ~s~Trevor was arrested. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
	}
	else if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&Global_78551))
		{
			switch (__LIB_17__::func_341())
			{
				case 0:
					StringCopy(&Global_78551, "CMN_MDIED" /* GXT: ~s~Michael died. */, 16);
					break;
				case 1:
					StringCopy(&Global_78551, "CMN_FDIED" /* GXT: ~s~Franklin died. */, 16);
					break;
				case 2:
					StringCopy(&Global_78551, "CMN_TDIED" /* GXT: ~s~Trevor died. */, 16);
					break;
			}
			StringCopy(&Global_78555, "", 16);
		}
		Global_100476 = 0;
		MISC::SET_BIT(&(Global_100441.f_20), 25);
	}
}

bool func_506(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x91302
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam4, iParam5, iParam6);
	if (iParam3 > 7)
	{
		if (iParam3 < 12)
		{
			iParam3 = 7;
		}
	}
	Global_21612 = 0;
	Global_21614 = 0;
	Global_21619 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_2883585 = 0;
	return __LIB_17__::func_394(sParam2, iParam3, 0);
}

bool func_507(var uParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6)//Position - 0xA36C8
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam5, iParam6, 0);
	if (iParam4 > 7)
	{
		if (iParam4 < 12)
		{
			iParam4 = 7;
		}
	}
	Global_21612 = 0;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 1;
	Global_22598 = 0;
	Global_22602 = 0;
	StringCopy(&Global_22609, sParam3, 24);
	Global_2883585 = 0;
	return __LIB_17__::func_394(sParam2, iParam4, 0);
}

bool func_508(var uParam0, int iParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6, int iParam7, bool bParam8)//Position - 0x8F65A
{
	__LIB_0__::func_487(uParam0, iParam1, sParam2, iParam6, iParam7, 0);
	Global_21653 = 0;
	Global_21612 = 1;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_21610 = 0;
	Global_21657 = 0;
	Global_21659 = 0;
	if (iParam5 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	Global_2883585 = 0;
	return __LIB_17__::func_394(sParam3, iParam4, bParam8);
}

void func_509(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0x889FE
{
	struct<60> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam3 != 24 && iParam3 != 25)
		{
			return;
		}
		if (iParam3 == 24)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[25]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[25], false))
			{
				if (Global_77137.f_484[25] == iParam0)
				{
					return;
				}
			}
		}
		if (!bParam4)
		{
			if ((VEHICLE::IS_BIG_VEHICLE(iParam0) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bus")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("tourbus"))
			{
				return;
			}
		}
		__LIB_17__::func_89(iParam3);
		Var0.f_9 = 49;
		Var0.f_59 = 2;
		__LIB_0__::func_209(iParam0, &Var0);
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			fParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
		if (iParam3 == 24)
		{
			if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != joaat("vehicle_gen_controller"))
			{
				Global_78125 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
			}
		}
		__LIB_17__::func_92(iParam3, &Var0, Param1, fParam2, __LIB_0__::func_119(iParam0));
		__LIB_16__::func_323(iParam3, iParam0, 0);
	}
}

void func_510(var uParam0, int iParam1)//Position - 0x70478
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	*uParam0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	uParam0->f_3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
	uParam0->f_5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		uParam0->f_4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
	}
	if (SYSTEM::VDIST(*uParam0, 320.9934f, 265.2515f, 82.1221f) < 10f)
	{
		*uParam0 = { 301.2162f, 202.1357f, 103.3797f };
		uParam0->f_3 = 156.5144f;
	}
	else if (SYSTEM::VDIST(*uParam0, 377.153f, -717.567f, 10.0536f) < 10f)
	{
		*uParam0 = { 394.2567f, -713.5439f, 28.2853f };
		uParam0->f_3 = 276.6273f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1425.5645f, -244.3f, 15.8053f) < 10f)
	{
		*uParam0 = { -1423.4724f, -214.2539f, 45.5004f };
		uParam0->f_3 = 353.8757f;
	}
	else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("finale_choice")) > 0)
	{
		*uParam0 = { 4.2587f, 525.0214f, 173.6281f };
		uParam0->f_3 = 203.6746f;
	}
	else if (BitTest(Global_78567, 4))
	{
		*uParam0 = { 452.0255f, 5571.85f, 780.1859f };
		uParam0->f_3 = 78.9858f;
	}
	else if (BitTest(Global_78567, 5))
	{
		*uParam0 = { -745.4462f, 5595.1465f, 40.6594f };
		uParam0->f_3 = 261.747f;
	}
	else if (BitTest(Global_78567, 6))
	{
		*uParam0 = { -1675.5215f, -1125.5901f, 12.091f };
		uParam0->f_3 = 271.8208f;
	}
	else if (BitTest(Global_78567, 7))
	{
		*uParam0 = { -1631.2192f, -1112.8052f, 12.0212f };
		uParam0->f_3 = 316.8879f;
	}
	else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(1272.6588f, -1715.4669f, 53.7715f, "v_lesters"))
	{
		*uParam0 = { 1276.9564f, -1725.1892f, 53.6551f };
		uParam0->f_3 = 204.1703f;
	}
	else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646f, 2068.2886f, 113.30017f, -564.9516f, 1884.7025f, 134.04034f, 258.75f, false, true, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4706f, 2089.921f, 125.41275f, -581.21344f, 2036.2561f, 136.28363f, 9.5f, false, true, 0))
	{
		*uParam0 = { -601.59f, 2099.1973f, 128.8928f };
		uParam0->f_3 = 204.7498f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1007.39264f, -477.95844f, 52.5357f) < 8f)
	{
		*uParam0 = { -1018.3756f, -483.9436f, 36.0964f };
		uParam0->f_3 = 114.7664f;
	}
	else if (SYSTEM::VDIST(*uParam0, 480.6662f, -1317.8085f, 28.20303f) < 15f)
	{
		*uParam0 = { 497.7238f, -1310.9323f, 28.2372f };
		uParam0->f_3 = 289.3663f;
	}
	else if (SYSTEM::VDIST(*uParam0, 2329.5266f, 2571.3113f, 45.6779f) < 5f)
	{
		*uParam0 = { 2316.9304f, 2594.1528f, 45.7199f };
		uParam0->f_3 = 348.1325f;
	}
	if (iParam1 == 1)
	{
		if (__LIB_13__::func_781(&iVar0))
		{
			if (__LIB_0__::func_388(iVar0, &Var1, &uVar2))
			{
				Var1.f_2 = (Var1.f_2 + 1f);
				*uParam0 = { Var1 };
				uParam0->f_3 = uVar2;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43358f, -1019.7954f, -100.47276f, 189.93378f, -1019.6235f, -95.56883f, 17.1875f, false, true, 0))
		{
			iVar3 = __LIB_17__::func_341();
			if (iVar3 == 0)
			{
				*uParam0 = { -65.1234f, 81.2517f, 70.5644f };
				uParam0->f_3 = 71.6237f;
			}
			else if (iVar3 == 1)
			{
				*uParam0 = { -68.5531f, -1824.3774f, 25.9424f };
				uParam0->f_3 = 215.8295f;
			}
			else if (iVar3 == 2)
			{
				*uParam0 = { -220.8189f, -1162.3016f, 22.0242f };
				uParam0->f_3 = 70.2711f;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71747f, -1326.6299f, 28.2135f, 474.96436f, -1307.9983f, 34.494976f, 12f, false, true, 0))
		{
			*uParam0 = { 495.4108f, -1306.0801f, 29.2883f };
			uParam0->f_3 = 213.6273f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77f, -1534.22f, 3.37f, -1158.4525f, -1517.7496f, 6.374244f, 13f, false, true, 0))
		{
			*uParam0 = { -1160.0951f, -1515.407f, 3.1496f };
			uParam0->f_3 = 305.6424f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315f, -996.97687f, 24.88307f, 428.29355f, -997.0192f, 28.574581f, 8.5f, false, true, 0))
		{
			*uParam0 = { 431.8853f, -1013.133f, 28.7907f };
			uParam0->f_3 = 186.6814f;
		}
		else if (__LIB_0__::func_387(*uParam0, "v_hospital", 307.3065f, -589.9595f, 43.302f))
		{
			*uParam0 = { 279.4137f, -585.8815f, 43.2502f };
			uParam0->f_3 = 48.8028f;
		}
	}
}

void func_511(int iParam0)//Position - 0x7AB9C
{
	if (iParam0 == -1)
	{
		return;
	}
	if (__LIB_16__::func_841(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_139[iParam0]))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Global_77137.f_139[iParam0], true, true);
			ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&(Global_77137.f_139[iParam0]));
			Global_77137.f_139[iParam0] = 0;
		}
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 13))
		{
			__LIB_0__::func_364(iParam0, 0);
		}
	}
}

int func_512(var uParam0, bool bParam1)//Position - 0x13824
{
	bool bVar0;
	bool bVar1;
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = uParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_682(__LIB_14__::func_466()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || uParam0->f_24[bParam1] != 0) || ((__LIB_15__::func_971(bParam1) && __LIB_17__::func_65(bParam1)) && !uParam0->f_18[bParam1]))
			{
				if (!uParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*uParam0)[bParam1]) || bVar0)
					{
						if (uParam0->f_34[bParam1] != 1 && uParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (uParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				uParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	uParam0->f_39 = 0;
	return 0;
}

void func_513(bool bParam0)//Position - 0x2286
{
	AUDIO::STOP_SCRIPTED_CONVERSATION(bParam0);
	if (bParam0)
	{
	}
}

int func_514(float fParam0, int iParam1)//Position - 0x3621
{
	int iVar0;
	if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		return 1;
	}
	iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
	{
		if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) == PLAYER::PLAYER_PED_ID())
		{
			if (!VEHICLE::IS_VEHICLE_STOPPED(iVar0))
			{
				VEHICLE::BRING_VEHICLE_TO_HALT(iVar0, fParam0, iParam1, false);
				return 0;
			}
		}
		else
		{
			return 1;
		}
	}
	if (PED::IS_PED_STOPPED(PLAYER::PLAYER_PED_ID()))
	{
		return 1;
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
	{
		if (VEHICLE::IS_VEHICLE_STOPPED(iVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_515(int iParam0)//Position - 0x5B0D
{
	if (iParam0 == 0)
	{
		return 1;
	}
	return 0;
}

int func_516()//Position - 0x5FED
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Local_38.f_0)
	{
		if ((Local_38[iVar0 /*4*/] == 0 && Local_38[iVar0 /*4*/].f_1 == 0) && Local_38[iVar0 /*4*/].f_2 == 0)
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

int func_517(int iParam0, int iParam1)//Position - 0x60E3
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Local_38.f_0)
	{
		if (Local_38[iVar0 /*4*/].f_1 == iParam0 && Local_38[iVar0 /*4*/].f_2 == iParam1)
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

void func_518(bool bParam0)//Position - 0x8BCC
{
	MISC::ENABLE_DISPATCH_SERVICE(1, bParam0);
	MISC::ENABLE_DISPATCH_SERVICE(2, bParam0);
	MISC::ENABLE_DISPATCH_SERVICE(3, bParam0);
	MISC::ENABLE_DISPATCH_SERVICE(4, bParam0);
	MISC::ENABLE_DISPATCH_SERVICE(5, bParam0);
	if (bParam0)
	{
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(1f);
		PLAYER::SET_MAX_WANTED_LEVEL(5);
	}
	else
	{
		PLAYER::SET_MAX_WANTED_LEVEL(0);
		PLAYER::SET_WANTED_LEVEL_MULTIPLIER(0f);
	}
}

int func_519()//Position - 0x305E
{
	if ((__LIB_0__::func_178(41) && __LIB_0__::func_178(3)) && __LIB_0__::func_178(21))
	{
		return 1;
	}
	return 0;
}

void func_520(int iParam0, struct<3> Param1, float fParam2)//Position - 0x3BA6
{
	if (__LIB_0__::func_692(iParam0))
	{
		TASK::CLEAR_PED_TASKS(iParam0);
	}
	__LIB_14__::func_659(iParam0, Param1, fParam2, 0, 1);
}

int func_521(var uParam0, struct<3> Param1, int iParam2, var uParam3, int iParam4, int iParam5)//Position - 0x5DFC
{
	var uVar0;
	struct<3> Var1;
	var uVar2;
	int iVar3;
	int iVar4;
	iVar3 = 0;
	if (!__LIB_0__::func_121(iParam2))
	{
		*uParam0 = 0;
		return 0;
	}
	if (*uParam0 == 0)
	{
		Var1 = { __LIB_14__::func_653(iParam2, iParam5) };
		*uParam0 = SHAPETEST::START_SHAPE_TEST_LOS_PROBE(Param1, Var1 + Var1 - Param1 * Vector(0.1f, 0.1f, 0.1f), 511, iParam4, 7);
		return 0;
	}
	iVar4 = SHAPETEST::GET_SHAPE_TEST_RESULT(*uParam0, &uVar0, &Var1, &uVar2, &iVar3);
	if (iVar4 == 0)
	{
		*uParam0 = 0;
		return 0;
	}
	else if (iVar4 == 1)
	{
		return 0;
	}
	*uParam0 = 0;
	if (ENTITY::IS_ENTITY_A_PED(iVar3))
	{
		__LIB_0__::func_121(iVar3);
		if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(iVar3) == iParam2)
		{
			if (bLocal_39)
			{
				GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
			}
			*uParam3 = MISC::GET_GAME_TIMER();
			return 1;
		}
		return 0;
	}
	if (ENTITY::IS_ENTITY_A_VEHICLE(iVar3))
	{
		__LIB_0__::func_121(iVar3);
		if (PED::IS_PED_IN_ANY_VEHICLE(iParam2, false))
		{
			if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar3) == PED::GET_VEHICLE_PED_IS_IN(iParam2, false))
			{
				if (bLocal_39)
				{
					GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(Param1, ENTITY::GET_ENTITY_COORDS(iParam2, true), 255, 0, 0, 255, 0, 0, 255, 255);
				}
				*uParam3 = MISC::GET_GAME_TIMER();
				return 1;
			}
		}
		return 0;
	}
	return 0;
}

void func_522(var uParam0, var uParam1, float fParam2)//Position - 0x11F79
{
	int iVar0;
	int iVar1;
	int iVar2;
	struct<3> Var3;
	struct<3> Var4;
	struct<3> Var5;
	if (uParam1->f_46 < 3)
	{
	}
	iVar0 = (uParam1->f_46 - 1);
	iVar1 = 0;
	iVar2 = 1;
	uParam0->f_46 = uParam1->f_46;
	while (iVar1 < uParam1->f_46)
	{
		Var3 = { *(uParam1[iVar1 /*3*/]) - *(uParam1[iVar0 /*3*/]) };
		Var4 = { *(uParam1[iVar2 /*3*/]) - *(uParam1[iVar1 /*3*/]) };
		Var3 = { Var3 / FtoV(SYSTEM::SQRT(((Var3.f_0 * Var3.f_0) + (Var3.f_1 * Var3.f_1)))) };
		Var4 = { Var4 / FtoV(SYSTEM::SQRT(((Var4.f_0 * Var4.f_0) + (Var4.f_1 * Var4.f_1)))) };
		Var5 = { Var3 - Var4 };
		Var5 = { Var5 / FtoV(SYSTEM::SQRT(((Var5.f_0 * Var5.f_0) + (Var5.f_1 * Var5.f_1)))) };
		if (__LIB_16__::func_328(uParam1, *(uParam1[iVar1 /*3*/]) + Var5))
		{
			Var5 = { -Var5 };
		}
		*(uParam0[iVar1 /*3*/]) = { *(uParam1[iVar1 /*3*/]) + Var5 * Vector(fParam2, fParam2, fParam2) };
		iVar0 = iVar1;
		iVar1++;
		iVar2 = (iVar2 + 1 % uParam1->f_46);
	}
}

struct<4> func_523(bool bParam0)//Position - 0x267F
{
	struct<4> Var0;
	if (bParam0)
	{
		switch (__LIB_0__::func_683())
		{
			case 1:
				StringCopy(&Var0, "FBI4_ISAGO", 16);
				break;
			case 2:
				StringCopy(&Var0, "FBI4_ISAGO", 16);
				break;
		}
	}
	else
	{
		switch (__LIB_0__::func_683())
		{
			case 1:
				StringCopy(&Var0, "FBI4_THATSIT", 16);
				break;
			case 2:
				StringCopy(&Var0, "FBI4_THATSIT", 16);
				break;
			}
	}
	return Var0;
}

int func_524(int iParam0, int iParam1)//Position - 0x25BA
{
	bool bVar0;
	return 0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_0__::func_216(iParam0);
		if (bVar0 > 3)
		{
			return 0;
		}
		if (__LIB_16__::func_914(bVar0) != iParam0)
		{
			return 0;
		}
		if (iParam1 == 0)
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				return 0;
			}
		}
		if (BitTest(Global_96294, bVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_525(bool bParam0)//Position - 0x1AD3
{
	if (bParam0 == 1)
	{
		return 9;
	}
	return 8;
}

int func_526(int iParam0, int iParam1, bool bParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10)//Position - 0x2049
{
	struct<15> Var0;
	int iVar1;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam5 < 0)
	{
		return 0;
	}
	if (iParam6 < 0)
	{
		return 0;
	}
	if (iParam7 == 76)
	{
		return 0;
	}
	if (iParam8 == 235)
	{
		return 0;
	}
	if (iParam3 == bParam2)
	{
		return 0;
	}
	if (((bParam2 != 144 && bParam2 != 0) && bParam2 != 1) && bParam2 != 2)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__::func_713(iParam1);
		Var0.f_5 = iParam6;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam5);
		Var0.f_1 = iParam10;
		iVar1 = 0;
		MISC::SET_BIT(&iVar1, bParam2);
		Var0.f_2 = iVar1;
		Var0.f_6 = iParam3;
		Var0.f_14 = iParam4;
		Var0.f_10 = -1;
		Var0.f_11 = -1;
		Var0.f_7 = iParam7;
		Var0.f_8 = iParam8;
		Var0.f_9 = iParam9;
		MISC::SET_BIT(&(Var0.f_1), 0);
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		if (iParam1 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		__LIB_0__::func_688(bParam2);
		return 1;
	}
	return 0;
}

void func_527(int iParam0)//Position - 0x304C
{
	switch (iParam0)
	{
		case 0:
			break;
	}
}

char* func_528(int iParam0)//Position - 0x3241
{
	char* sVar0;
	switch (iParam0)
	{
		case 33:
			sVar0 = "PRA_RETVEH";
			break;
		case 34:
			sVar0 = "PRB_RETVEH";
			break;
		case 78:
			sVar0 = "PR_RETVEH";
			break;
		case 80:
		case 81:
		case 82:
			sVar0 = "PRF_RETVEH";
			break;
	}
	return sVar0;
}

char* func_529(int iParam0, bool bParam1)//Position - 0x329A
{
	char* sVar0;
	switch (iParam0)
	{
		case 33:
			sVar0 = "PRA_TAKBACK";
			break;
		case 34:
			sVar0 = "PRB_TAKBACK";
			break;
		case 78:
			sVar0 = "PR_TAKBACK" /* GXT: Titanium Infinity Exhaust */;
			break;
		case 80:
		case 81:
		case 82:
			if (!bParam1)
			{
				sVar0 = "PRF_TAKBACK";
			}
			else
			{
				sVar0 = "PRF_GARAGE";
			}
			break;
	}
	return sVar0;
}

char* func_530(int iParam0)//Position - 0x33D5
{
	char* sVar0;
	switch (iParam0)
	{
		case 33:
			sVar0 = "PRA_LEVVEH";
			break;
		case 34:
			sVar0 = "PRB_LEVVEH";
			break;
		case 78:
			sVar0 = "PR_LEVVEH";
			break;
		case 80:
		case 81:
		case 82:
			sVar0 = "PRF_LEAVE";
			break;
	}
	return sVar0;
}

void func_531(char* sParam0, int iParam1)//Position - 0x350E
{
	if (!*iParam1)
	{
		__LIB_0__::func_229(sParam0, 7500, 0);
		*iParam1 = 1;
	}
}

void func_532(int iParam0, bool bParam1)//Position - 0x3FBF
{
	if (bParam1)
	{
		if (STREAMING::HAS_MODEL_LOADED(iParam0))
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam0);
		}
	}
	else
	{
		STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(iParam0);
	}
}

int func_533(int iParam0, char* sParam1, int iParam2)//Position - 0x3FE4
{
	STREAMING::REQUEST_MODEL(iParam0);
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam1) && iParam2 != -1)
	{
	}
	if (STREAMING::HAS_MODEL_LOADED(iParam0))
	{
		return 1;
	}
	return 0;
}

int func_534(int iParam0)//Position - 0x448C
{
	int iVar0;
	switch (iParam0)
	{
		case 33:
			iVar0 = joaat("trash");
			break;
		case 34:
			iVar0 = joaat("towtruck");
			break;
		case 78:
			iVar0 = 0;
			break;
		case 80:
		case 81:
		case 82:
			iVar0 = joaat("gauntlet");
			break;
	}
	return iVar0;
}

int func_535(int iParam0)//Position - 0x89A3
{
	if (Global_22720 == 0)
	{
		return 0;
	}
	if (Global_117[iParam0 /*10*/].f_8 != 166)
	{
		if (Global_20266.f_1 == 10)
		{
			if (Global_7451 == iParam0)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

int func_536(int iParam0)//Position - 0x2E011
{
	if (__LIB_0__::func_695(iParam0))
	{
		if (((VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(iParam0, 0, 7000) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(iParam0, 3, 30000)) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(iParam0, 2, 30000)) || VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(iParam0, 1, 40000))
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

struct<6> func_537(struct<3> Param0, float fParam1, int iParam2)//Position - 0x2EF3A
{
	struct<6> Var0;
	Var0.f_1 = { Param0 };
	Var0.f_4 = fParam1;
	Var0.f_5 = iParam2;
	return Var0;
}

int func_538(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, bool bParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12)//Position - 0x184E
{
	struct<15> Var0;
	int iVar1;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (iParam8 < 0)
	{
		return 0;
	}
	if (iParam9 < 0)
	{
		return 0;
	}
	if (iParam10 == 76)
	{
		return 0;
	}
	if (iParam11 == 235)
	{
		return 0;
	}
	if (iParam6 == bParam5)
	{
		return 0;
	}
	if (((bParam5 != 144 && bParam5 != 0) && bParam5 != 1) && bParam5 != 2)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_136 < 9)
	{
		Var0.f_0 = uParam0;
		Var0.f_10 = iParam1;
		Var0.f_11 = iParam2;
		Var0.f_9 = iParam3;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_3 = __LIB_0__::func_713(iParam4);
		Var0.f_5 = iParam9;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam8);
		Var0.f_1 = iParam12;
		iVar1 = 0;
		MISC::SET_BIT(&iVar1, bParam5);
		Var0.f_2 = iVar1;
		Var0.f_6 = iParam6;
		Var0.f_14 = iParam7;
		Var0.f_7 = iParam10;
		Var0.f_8 = iParam11;
		MISC::SET_BIT(&(Var0.f_1), 0);
		MISC::SET_BIT(&(Var0.f_1), 13);
		MISC::CLEAR_BIT(&(Var0.f_1), 1);
		if (iParam4 == 0)
		{
			MISC::SET_BIT(&(Var0.f_1), 10);
		}
		Global_113386.f_7688[Global_113386.f_7688.f_136 /*15*/] = { Var0 };
		Global_113386.f_7688.f_136++;
		__LIB_0__::func_688(bParam5);
		return 1;
	}
	return 0;
}

int func_539()//Position - 0x2D7F
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = 33;
	while (iVar1 <= 37)
	{
		if (__LIB_0__::func_178(iVar1))
		{
			iVar0++;
		}
		iVar1++;
	}
	if (__LIB_0__::func_425(45))
	{
		iVar0++;
	}
	if (iVar0 == 4)
	{
		return 1;
	}
	return 0;
}

void func_540(int* iParam0, struct<3> Param1, bool bParam2)//Position - 0x3386
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_14__::func_704(Param1, 5, bParam2);
	}
}

void func_541(int* iParam0, int iParam1, bool bParam2)//Position - 0x3AE2
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_14__::func_866(iParam1, bParam2, 5);
	}
}

int func_542(int iParam0, float fParam1, float fParam2)//Position - 0x8435
{
	if (__LIB_0__::func_121(iParam0))
	{
		if (MISC::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(iParam0, true), fParam1, false))
		{
			return 1;
		}
		if (__LIB_14__::func_778(iParam0, fParam2, 0, 0))
		{
			return 1;
		}
	}
	return 0;
}

void func_543()//Position - 0x2EFA7
{
	__LIB_17__::func_154(21, 1, 0);
}

void func_544()//Position - 0x2E0DF
{
	if (!__LIB_0__::func_178(36))
	{
		__LIB_17__::func_154(21, 0, 0);
	}
}

int func_545()//Position - 0x219A
{
	switch (__LIB_13__::func_102())
	{
		case 33:
			switch (__LIB_0__::func_683())
			{
				case 0:
					return -1847734803;
					break;
				case 1:
					return -714760066;
					break;
				case 2:
					return -1198055521;
					break;
			}
			break;
		case 34:
			switch (__LIB_0__::func_683())
			{
				case 0:
					return 1374342572;
					break;
				case 1:
					return 530956160;
					break;
				case 2:
					return 240475766;
					break;
			}
			break;
		case 36:
			switch (__LIB_0__::func_683())
			{
				case 0:
					return 580731697;
					break;
				case 1:
					return 728176806;
					break;
				case 2:
					return 910240872;
					break;
			}
			break;
		case 37:
			switch (__LIB_0__::func_683())
			{
				case 0:
					return 74540475;
					break;
				case 1:
					return -1200353264;
					break;
				case 2:
					return 801340541;
					break;
			}
			break;
	}
	return -1;
}

char* func_546()//Position - 0x2ADE
{
	char* sVar0;
	switch (__LIB_13__::func_102())
	{
		case 33:
			switch (__LIB_0__::func_683())
			{
				case 0:
					sVar0 = "FBIP1_MENDC";
					break;
				case 1:
					sVar0 = "FBIP1_FENDC";
					break;
				case 2:
					sVar0 = "FBIP1_TENDC";
					break;
			}
			break;
		case 34:
			switch (__LIB_0__::func_683())
			{
				case 0:
					sVar0 = "FBIP2_MENDC";
					break;
				case 1:
					sVar0 = "FBIP2_FENDC";
					break;
				case 2:
					sVar0 = "FBIP2_TENDC";
					break;
			}
			break;
		case 36:
			switch (__LIB_0__::func_683())
			{
				case 0:
					sVar0 = "FBIP4_MENDC";
					break;
				case 1:
					sVar0 = "FBIP4_FENDC";
					break;
				case 2:
					sVar0 = "FBIP4_TENDC";
					break;
			}
			break;
		case 37:
			switch (__LIB_0__::func_683())
			{
				case 0:
					sVar0 = "FBIP5_MENDC";
					break;
				case 1:
					sVar0 = "FBIP5_FENDC";
					break;
				case 2:
					sVar0 = "FBIP5_TENDC";
					break;
			}
			break;
	}
	return sVar0;
}

int func_547()//Position - 0x2BE3
{
	int iVar0;
	switch (__LIB_0__::func_683())
	{
		case 0:
			iVar0 = 5;
			break;
		case 1:
			iVar0 = 9;
			break;
		case 2:
			iVar0 = 8;
			break;
	}
	return iVar0;
}

void func_548(var uParam0)//Position - 0x3B55
{
	int iVar0;
	char* sVar1;
	switch (__LIB_0__::func_683())
	{
		case 0:
			iVar0 = 0;
			sVar1 = "MICHAEL";
			break;
		case 1:
			iVar0 = 1;
			sVar1 = "FRANKLIN";
			break;
		case 2:
			iVar0 = 2;
			sVar1 = "TREVOR";
			break;
	}
	__LIB_0__::func_222(uParam0, iVar0, PLAYER::PLAYER_PED_ID(), sVar1, 0, 1);
}

int func_549(int iParam0)//Position - 0x4785
{
	bool bVar0;
	return 0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_0__::func_216(iParam0);
		if (bVar0 > 3)
		{
			return 0;
		}
		if (__LIB_16__::func_914(bVar0) != iParam0)
		{
			return 0;
		}
		if (!BitTest(Global_96295, bVar0))
		{
			return 0;
		}
		MISC::CLEAR_BIT(&Global_96295, bVar0);
		return 1;
	}
	return 0;
}

int func_550(int iParam0)//Position - 0x47DA
{
	bool bVar0;
	return 0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_0__::func_216(iParam0);
		if (bVar0 > 3)
		{
			return 0;
		}
		if (__LIB_16__::func_914(bVar0) != iParam0)
		{
			return 0;
		}
		if (BitTest(Global_96295, bVar0))
		{
			return 1;
		}
	}
	return 0;
}

int func_551(int iParam0, int iParam1)//Position - 0x4D26
{
	bool bVar0;
	return 0;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		bVar0 = __LIB_0__::func_216(iParam0);
		if (bVar0 > 3)
		{
			return 0;
		}
		if (__LIB_16__::func_914(bVar0) != iParam0)
		{
			return 0;
		}
		if (BitTest(Global_96295, bVar0))
		{
			return 0;
		}
		if (iParam1 == 0)
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				return 0;
			}
		}
		if (BitTest(Global_96294, bVar0))
		{
			WEAPON::SET_PED_INFINITE_AMMO(iParam0, false, 0);
			ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(iParam0, false, 1);
			MISC::SET_BIT(&Global_96295, bVar0);
			return 1;
		}
	}
	return 0;
}

bool func_552(var uParam0, int iParam1, bool bParam2, char* sParam3, char* sParam4, int iParam5, int iParam6, int iParam7, int iParam8, bool bParam9)//Position - 0x23F7
{
	__LIB_0__::func_487(uParam0, iParam1, sParam3, iParam7, iParam8, 0);
	Global_7454 = bParam2;
	Global_21653 = 0;
	Global_21612 = 1;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_21619 = 0;
	Global_21610 = 1;
	Global_21657 = 0;
	Global_21659 = 0;
	if (iParam6 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	Global_2883585 = 0;
	return __LIB_0__::func_711(sParam4, iParam5, bParam9);
}

void func_553()//Position - 0x2771E
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			__LIB_14__::func_775(iVar0, ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 24, 0);
		}
	}
}

void func_554(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x126E
{
	int iVar0;
	iVar0 = PLAYER::GET_PLAYER_INDEX();
	PLAYER::SET_EVERYONE_IGNORE_PLAYER(iVar0, false);
	PLAYER::SET_PLAYER_CONTROL(iVar0, bParam3, 0);
	__LIB_0__::func_532(0, 1, 0, 0, 0, 0, 0);
	if (iParam2 == 1)
	{
		HUD::DISPLAY_RADAR(true);
		HUD::DISPLAY_HUD(true);
	}
	HUD::CLEAR_HELP(true);
	if (iParam0 == 1)
	{
		CAM::SET_WIDESCREEN_BORDERS(false, 0);
	}
	if (iParam1 == 1)
	{
		if ((iLocal_36 != 0 && iLocal_36 != joaat("OBJECT")) && iLocal_36 != joaat("GADGET_PARACHUTE"))
		{
			if (__LIB_0__::func_121(PLAYER::PLAYER_PED_ID()))
			{
				if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_36, false))
				{
					WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), iLocal_36, false);
				}
			}
		}
	}
	if (__LIB_0__::func_692(PLAYER::PLAYER_PED_ID()))
	{
		PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), false, 0);
	}
}

var func_555(bool bParam0)//Position - 0x261
{
	return sLocal_45[bParam0];
}

int func_556(int iParam0)//Position - 0x28F
{
	int iVar0;
	if (iParam0 < 32)
	{
		iVar0 = 0;
	}
	else
	{
		iVar0 = 1;
	}
	return iVar0;
}

int func_557(int iParam0)//Position - 0x2A9
{
	if (iParam0 > 31)
	{
		return (iParam0 - 32);
	}
	return iParam0;
}

int func_558()//Position - 0x7D25
{
	if (iLocal_42 == 0)
	{
		return 45;
	}
	else if (iLocal_42 == 1)
	{
		return 12;
	}
	else if (iLocal_42 == 2)
	{
		return 34;
	}
	return -1;
}

bool func_559()//Position - 0x8680
{
	return SCRIPT::IS_THREAD_ACTIVE(Global_113386.f_18103.f_395);
}

int func_560()//Position - 0x877C
{
	if (iLocal_42 == 0)
	{
		return 38;
	}
	else if (iLocal_42 == 1)
	{
		return 69;
	}
	else if (iLocal_42 == 2)
	{
		return 85;
	}
	return -1;
}

void func_561(int iParam0, struct<3> Param1)//Position - 0x88A1
{
	int iVar0;
	if (HUD::DOES_BLIP_EXIST(Global_32338[iParam0 /*23*/].f_19))
	{
		HUD::SET_BLIP_COORDS(Global_32338[iParam0 /*23*/].f_19, Param1);
	}
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 <= 2)
	{
		Global_32338[iParam0 /*23*/][iVar0 /*3*/] = { Param1 };
		iVar0++;
	}
}

void func_562(int iParam0)//Position - 0x94EC
{
	if (!MISC::IS_STRING_NULL_OR_EMPTY(Local_44.f_6))
	{
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "SanAnd" /* GXT: San Andreas */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M77";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F78";
			}
			else
			{
				Local_44.f_7 = "LOC_T78";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Alamo" /* GXT: Alamo Sea */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M101";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F1";
			}
			else
			{
				Local_44.f_7 = "LOC_T1";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Alta" /* GXT: Alta */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M1";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F2";
			}
			else
			{
				Local_44.f_7 = "LOC_T2";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Airp" /* GXT: Los Santos International Airport */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M48";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F49";
			}
			else
			{
				Local_44.f_7 = "LOC_T49";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ArmyB" /* GXT: Fort Zancudo */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M28";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F29";
			}
			else
			{
				Local_44.f_7 = "LOC_T29";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "BhamCa" /* GXT: Banham Canyon */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M2";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F3";
			}
			else
			{
				Local_44.f_7 = "LOC_T3";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Banning" /* GXT: Banning */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M3";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F4";
			}
			else
			{
				Local_44.f_7 = "LOC_T4";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Baytre" /* GXT: Baytree Canyon */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M4";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F5";
			}
			else
			{
				Local_44.f_7 = "LOC_T5";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Beach" /* GXT: Vespucci Beach */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M93";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F94";
			}
			else
			{
				Local_44.f_7 = "LOC_T94";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "BradT" /* GXT: Braddock Tunnel */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M7";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F8";
			}
			else
			{
				Local_44.f_7 = "LOC_T8";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "BradP" /* GXT: Braddock Pass */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M6";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F7";
			}
			else
			{
				Local_44.f_7 = "LOC_T7";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Burton" /* GXT: Burton */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M8";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F9";
			}
			else
			{
				Local_44.f_7 = "LOC_T9";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CANNY" /* GXT: Raton Canyon */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M70";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F71";
			}
			else
			{
				Local_44.f_7 = "LOC_T71";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CCreak" /* GXT: Cassidy Creek */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M10";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F11";
			}
			else
			{
				Local_44.f_7 = "LOC_T11";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CalafB" /* GXT: Calafia Bridge */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M9";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F10";
			}
			else
			{
				Local_44.f_7 = "LOC_T10";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ChamH" /* GXT: Chamberlain Hills */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M11";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F12";
			}
			else
			{
				Local_44.f_7 = "LOC_T12";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CHU" /* GXT: Chumash */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M13";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F14";
			}
			else
			{
				Local_44.f_7 = "LOC_T14";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CHIL" /* GXT: Vinewood Hills */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M96";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F97";
			}
			else
			{
				Local_44.f_7 = "LOC_T97";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "COSI" /* GXT: Countryside */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M14";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F15";
			}
			else
			{
				Local_44.f_7 = "LOC_T15";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "CMSW" /* GXT: Chiliad Mountain State Wilderness */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M12";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F13";
			}
			else
			{
				Local_44.f_7 = "LOC_T13";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Cypre" /* GXT: Cypress Flats */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M15";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F16";
			}
			else
			{
				Local_44.f_7 = "LOC_T16";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Davis" /* GXT: Davis */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M16";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F17";
			}
			else
			{
				Local_44.f_7 = "LOC_T17";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Desrt" /* GXT: Grand Senora Desert */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M32";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F33";
			}
			else
			{
				Local_44.f_7 = "LOC_T33";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "DelBe" /* GXT: Del Perro Beach */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M19";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F20";
			}
			else
			{
				Local_44.f_7 = "LOC_T20";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "DelPe" /* GXT: Del Perro */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M18";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F19";
			}
			else
			{
				Local_44.f_7 = "LOC_T19";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "DelSol" /* GXT: La Puerta */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M41";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F42";
			}
			else
			{
				Local_44.f_7 = "LOC_T42";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Downt" /* GXT: Downtown */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M20";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F21";
			}
			else
			{
				Local_44.f_7 = "LOC_T21";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "DTVine" /* GXT: Downtown Vinewood */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M21";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F22";
			}
			else
			{
				Local_44.f_7 = "LOC_T22";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Eclips" /* GXT: Eclipse */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M24";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F25";
			}
			else
			{
				Local_44.f_7 = "LOC_T25";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ELSant" /* GXT: East Los Santos */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M22";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F23";
			}
			else
			{
				Local_44.f_7 = "LOC_T23";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "EBuro" /* GXT: El Burro Heights */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M25";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F26";
			}
			else
			{
				Local_44.f_7 = "LOC_T26";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ELGorl" /* GXT: El Gordo Lighthouse */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M26";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F27";
			}
			else
			{
				Local_44.f_7 = "LOC_T27";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Elysian" /* GXT: Elysian Island */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M27";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F28";
			}
			else
			{
				Local_44.f_7 = "LOC_T28";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Galli" /* GXT: Galileo Park */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M31";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F32";
			}
			else
			{
				Local_44.f_7 = "LOC_T32";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Galfish" /* GXT: Galilee */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M29";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F30";
			}
			else
			{
				Local_44.f_7 = "LOC_T30";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Greatc" /* GXT: Great Chaparral */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M34";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F35";
			}
			else
			{
				Local_44.f_7 = "LOC_T35";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Golf" /* GXT: GWC and Golfing Society */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M35";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F36";
			}
			else
			{
				Local_44.f_7 = "LOC_T36";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "GrapeS" /* GXT: Grapeseed */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M33";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F34";
			}
			else
			{
				Local_44.f_7 = "LOC_T34";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Hawick" /* GXT: Hawick */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M37";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F38";
			}
			else
			{
				Local_44.f_7 = "LOC_T38";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Harmo" /* GXT: Harmony */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M36";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F37";
			}
			else
			{
				Local_44.f_7 = "LOC_T37";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Heart" /* GXT: Heart Attacks Beach */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M38";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F39";
			}
			else
			{
				Local_44.f_7 = "LOC_T39";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "HumLab" /* GXT: Humane Labs and Research */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M39";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F40";
			}
			else
			{
				Local_44.f_7 = "LOC_T40";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "HORS" /* GXT: Vinewood Racetrack */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M97";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F98";
			}
			else
			{
				Local_44.f_7 = "LOC_T98";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Koreat" /* GXT: Little Seoul */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M46";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F47";
			}
			else
			{
				Local_44.f_7 = "LOC_T47";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Jail" /* GXT: Bolingbroke Penitentiary */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M5";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F6";
			}
			else
			{
				Local_44.f_7 = "LOC_T6";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LAct" /* GXT: Land Act Reservoir */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M45";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F46";
			}
			else
			{
				Local_44.f_7 = "LOC_T46";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LDam" /* GXT: Land Act Dam */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M44";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F45";
			}
			else
			{
				Local_44.f_7 = "LOC_T45";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Lago" /* GXT: Lago Zancudo */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M43";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F44";
			}
			else
			{
				Local_44.f_7 = "LOC_T44";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LegSqu" /* GXT: Legion Square */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F";
			}
			else
			{
				Local_44.f_7 = "LOC_T";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LosSF" /* GXT: Los Santos Freeway */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M47";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F48";
			}
			else
			{
				Local_44.f_7 = "LOC_T48";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LMesa" /* GXT: La Mesa */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M40";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F41";
			}
			else
			{
				Local_44.f_7 = "LOC_T41";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LosPuer" /* GXT: La Puerta */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M41";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F42";
			}
			else
			{
				Local_44.f_7 = "LOC_T42";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LosPFy" /* GXT: La Puerta Fwy */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M42";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F43";
			}
			else
			{
				Local_44.f_7 = "LOC_T43";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "LOSTMC" /* GXT: Lost MC */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F";
			}
			else
			{
				Local_44.f_7 = "LOC_T";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Mirr" /* GXT: Mirror Park */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M50";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F51";
			}
			else
			{
				Local_44.f_7 = "LOC_T51";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Morn" /* GXT: Morningwood */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M52";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F53";
			}
			else
			{
				Local_44.f_7 = "LOC_T53";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Murri" /* GXT: Murrieta Heights */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M56";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F57";
			}
			else
			{
				Local_44.f_7 = "LOC_T57";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "MTChil" /* GXT: Mount Chiliad */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M53";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F54";
			}
			else
			{
				Local_44.f_7 = "LOC_T54";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "MTJose" /* GXT: Mount Josiah */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M55";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F56";
			}
			else
			{
				Local_44.f_7 = "LOC_T56";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "MTGordo" /* GXT: Mount Gordo */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M54";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F55";
			}
			else
			{
				Local_44.f_7 = "LOC_T55";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Movie" /* GXT: Richards Majestic */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M72";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F73";
			}
			else
			{
				Local_44.f_7 = "LOC_T73";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "NCHU" /* GXT: North Chumash */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M57";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F58";
			}
			else
			{
				Local_44.f_7 = "LOC_T58";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Noose" /* GXT: N.O.O.S.E */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M84";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F85";
			}
			else
			{
				Local_44.f_7 = "LOC_T85";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Oceana" /* GXT: Pacific Ocean */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M60";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F61";
			}
			else
			{
				Local_44.f_7 = "LOC_T61";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Observ" /* GXT: Galileo Observatory */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M30";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F31";
			}
			else
			{
				Local_44.f_7 = "LOC_T31";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Palmpow" /* GXT: Palmer-Taylor Power Station */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M64";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F65";
			}
			else
			{
				Local_44.f_7 = "LOC_T65";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "PBOX" /* GXT: Pillbox Hill */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M66";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F67";
			}
			else
			{
				Local_44.f_7 = "LOC_T67";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "PBluff" /* GXT: Pacific Bluffs */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M59";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F60";
			}
			else
			{
				Local_44.f_7 = "LOC_T60";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Paleto" /* GXT: Paleto Bay */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M61";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F62";
			}
			else
			{
				Local_44.f_7 = "LOC_T62";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "PalCov" /* GXT: Paleto Cove */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M62";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F63";
			}
			else
			{
				Local_44.f_7 = "LOC_T63";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "PalFor" /* GXT: Paleto Forest */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M63";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F64";
			}
			else
			{
				Local_44.f_7 = "LOC_T64";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "PalHigh" /* GXT: Palomino Highlands */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M65";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F66";
			}
			else
			{
				Local_44.f_7 = "LOC_T66";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ProcoB" /* GXT: Procopio Beach */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M68";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F69";
			}
			else
			{
				Local_44.f_7 = "LOC_T69";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Prol" /* GXT: North Yankton */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M58";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F59";
			}
			else
			{
				Local_44.f_7 = "LOC_T59";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "RTRAK" /* GXT: Redwood Lights Track */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M71";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F72";
			}
			else
			{
				Local_44.f_7 = "LOC_T72";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Rancho" /* GXT: Rancho */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M69";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F70";
			}
			else
			{
				Local_44.f_7 = "LOC_T70";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "RGLEN" /* GXT: Richman Glen */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M74";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F75";
			}
			else
			{
				Local_44.f_7 = "LOC_T75";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Richm" /* GXT: Richman */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M73";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F74";
			}
			else
			{
				Local_44.f_7 = "LOC_T74";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Rockf" /* GXT: Rockford Hills */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M75";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F76";
			}
			else
			{
				Local_44.f_7 = "LOC_T76";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "SANDY" /* GXT: Sandy Shores */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M79";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F80";
			}
			else
			{
				Local_44.f_7 = "LOC_T80";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "TongvaH" /* GXT: Tongva Hills */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M87";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F88";
			}
			else
			{
				Local_44.f_7 = "LOC_T88";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "TongvaV" /* GXT: Tongva Valley */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M88";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F89";
			}
			else
			{
				Local_44.f_7 = "LOC_T89";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "East_V" /* GXT: East Vinewood */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M23";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F24";
			}
			else
			{
				Local_44.f_7 = "LOC_T24";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Zenora" /* GXT: Senora Freeway */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M80";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F81";
			}
			else
			{
				Local_44.f_7 = "LOC_T81";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Slab" /* GXT: Stab City */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M81";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F82";
			}
			else
			{
				Local_44.f_7 = "LOC_T82";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "SKID" /* GXT: Mission Row */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M51";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F52";
			}
			else
			{
				Local_44.f_7 = "LOC_T52";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "SLSant" /* GXT: South Los Santos */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M82";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F83";
			}
			else
			{
				Local_44.f_7 = "LOC_T83";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Stad" /* GXT: Maze Bank Arena */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M49";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F50";
			}
			else
			{
				Local_44.f_7 = "LOC_T50";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Tatamo" /* GXT: Tataviam Mountains */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M84";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F85";
			}
			else
			{
				Local_44.f_7 = "LOC_T85";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Termina" /* GXT: Terminal */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M85";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F86";
			}
			else
			{
				Local_44.f_7 = "LOC_T86";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "TEXTI" /* GXT: Textile City */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M86";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F87";
			}
			else
			{
				Local_44.f_7 = "LOC_T87";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "WVine" /* GXT: West Vinewood */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M99";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F100";
			}
			else
			{
				Local_44.f_7 = "LOC_T100";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "UtopiaG" /* GXT: Utopia Gardens */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M89";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F90";
			}
			else
			{
				Local_44.f_7 = "LOC_T90";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Vesp" /* GXT: Vespucci */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M92";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F93";
			}
			else
			{
				Local_44.f_7 = "LOC_T93";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "VCana" /* GXT: Vespucci Canals */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M94";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F95";
			}
			else
			{
				Local_44.f_7 = "LOC_T95";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Vine" /* GXT: Vinewood */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M95";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F96";
			}
			else
			{
				Local_44.f_7 = "LOC_T96";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "WMirror" /* GXT: West Mirror Drive */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M98";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F99";
			}
			else
			{
				Local_44.f_7 = "LOC_T99";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "WindF" /* GXT: Ron Alternates Wind Farm */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M76";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F77";
			}
			else
			{
				Local_44.f_7 = "LOC_T77";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "Zancudo" /* GXT: Zancudo River */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M100";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F101";
			}
			else
			{
				Local_44.f_7 = "LOC_T101";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "SanChia" /* GXT: San Chianski Mountain Range */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M78";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F79";
			}
			else
			{
				Local_44.f_7 = "LOC_T79";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "STRAW" /* GXT: Strawberry */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M83";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F84";
			}
			else
			{
				Local_44.f_7 = "LOC_T84";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "zQ_UAR" /* GXT: Davis Quartz */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M17";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F18";
			}
			else
			{
				Local_44.f_7 = "LOC_T18";
			}
			return;
		}
		if (MISC::ARE_STRINGS_EQUAL(Local_44.f_6, "ZP_ORT" /* GXT: Port of South Los Santos */))
		{
			if (iParam0 == 0)
			{
				Local_44.f_7 = "LOC_M67";
			}
			else if (iParam0 == 1)
			{
				Local_44.f_7 = "LOC_F68";
			}
			else
			{
				Local_44.f_7 = "LOC_T68";
			}
			return;
		}
		if (iParam0 == 0)
		{
			Local_44.f_7 = "LOC_M";
		}
		else if (iParam0 == 1)
		{
			Local_44.f_7 = "LOC_M";
		}
		else
		{
			Local_44.f_7 = "LOC_M";
		}
	}
	else if (iParam0 == 0)
	{
		Local_44.f_7 = "LOC_M";
	}
	else if (iParam0 == 1)
	{
		Local_44.f_7 = "LOC_F";
	}
	else
	{
		Local_44.f_7 = "LOC_T";
	}
}

char* func_563(bool bParam0)//Position - 0xAD7B
{
	char* sVar0;
	if (!BitTest(uLocal_49, 10))
	{
		if (iLocal_42 == 0)
		{
			sLocal_79 = "FBIPRAU";
		}
		else if (iLocal_42 == 1)
		{
			sLocal_79 = "AHFAUD";
		}
		else if (iLocal_42 == 2)
		{
			sLocal_79 = "FHFAUD";
		}
		if (iLocal_42 == 0)
		{
			if (bParam0 == 0)
			{
				sVar0 = "FBI_3_MDRPC";
			}
			else if (bParam0 == 1)
			{
				sVar0 = "FBI_3_FDRPC";
			}
			else if (bParam0 == 2)
			{
				sVar0 = "FBI_3_TDRPC";
			}
		}
		else if (iLocal_42 == 1)
		{
			if (bParam0 == 0)
			{
				sVar0 = "AH_MDRPC";
			}
			else if (bParam0 == 1)
			{
				sVar0 = "AH_FDRPC";
			}
			else if (bParam0 == 2)
			{
				sVar0 = "AH_TDRPC";
			}
		}
		else if (iLocal_42 == 2)
		{
			if (bParam0 == 0)
			{
				sVar0 = "FHP_PICKCM";
			}
			else if (bParam0 == 1)
			{
				sVar0 = "FHP_PICKCF";
			}
			else if (bParam0 == 2)
			{
				sVar0 = "FHP_PICKCT";
			}
		}
	}
	else
	{
		sLocal_79 = "FHFAUD";
		if (bParam0 == 0)
		{
			sVar0 = "FHP_MOVEM";
		}
		else if (bParam0 == 1)
		{
			sVar0 = "FHP_MOVEF";
		}
		else if (bParam0 == 2)
		{
			sVar0 = "FHP_MOVET";
		}
	}
	return sVar0;
}

void func_564()//Position - 0xB2A8
{
	MISC::CLEAR_BIT(&uLocal_49, 0);
	MISC::CLEAR_BIT(&uLocal_49, 8);
	MISC::CLEAR_BIT(&uLocal_49, 7);
}

int func_565(struct<3> Param0, bool bParam1)//Position - 0xB6D1
{
	int iVar0;
	float fVar1;
	float fVar2;
	int iVar3;
	fVar2 = 1000000f;
	iVar3 = 7;
	iVar0 = 0;
	while (iVar0 <= (7 - 1))
	{
		if (Global_95580[iVar0 /*9*/].f_7 != 263)
		{
			if (!bParam1 || BitTest(Global_113386.f_7229.f_17[iVar0], 0))
			{
				fVar1 = MISC::GET_DISTANCE_BETWEEN_COORDS(Param0, Global_95580[iVar0 /*9*/].f_3, true);
				if (fVar1 < fVar2)
				{
					fVar2 = fVar1;
					iVar3 = iVar0;
				}
			}
		}
		iVar0++;
	}
	return iVar3;
}

int func_566(struct<3> Param0, struct<3> Param1)//Position - 0xB883
{
	float fVar0;
	fVar0 = MISC::ABSF((Param0.f_2 - Param1.f_2));
	if (fVar0 <= 5f)
	{
		return 1;
	}
	return 0;
}

Vector3 func_567(int iParam0)//Position - 0xBF41
{
	struct<3> Var0;
	if (iParam0 == 0)
	{
		Var0 = { -1604.668f, 5239.1f, 3.01f };
	}
	else if (iParam0 == 1)
	{
		Var0 = { -1592.84f, 5214.04f, 3.01f };
	}
	else if (iParam0 == 2)
	{
		Var0 = { 190.26f, -956.35f, 29.63f };
	}
	else if (iParam0 == 3)
	{
		Var0 = { 190.26f, -956.35f, 29.63f };
	}
	else if (iParam0 == 4)
	{
		Var0 = { 414f, -761f, 29f };
	}
	else if (iParam0 == 5)
	{
		Var0 = { 1199.27f, -1255.63f, 34.23f };
	}
	else if (iParam0 == 6)
	{
		Var0 = { -468.9f, -1713.06f, 18.21f };
	}
	else if (iParam0 == 7)
	{
		Var0 = { 237.65f, -385.41f, 44.4f };
	}
	else if (iParam0 == 8)
	{
		Var0 = { -1458.97f, 485.99f, 115.38f };
	}
	else if (iParam0 == 9)
	{
		Var0 = { -1622.89f, 4204.87f, 83.3f };
	}
	else if (iParam0 == 10)
	{
		Var0 = { 242.7f, 362.7f, 104.74f };
	}
	else if (iParam0 == 11)
	{
		Var0 = { 1835.53f, 4705.86f, 38.1f };
	}
	else if (iParam0 == 12)
	{
		Var0 = { 1826.13f, 4698.88f, 38.92f };
	}
	else if (iParam0 == 13)
	{
		Var0 = { 637.02f, 119.7093f, 89.5f };
	}
	else if (iParam0 == 14)
	{
		Var0 = { -2892.93f, 3192.37f, 11.66f };
	}
	else if (iParam0 == 15)
	{
		Var0 = { 524.43f, 3079.82f, 39.48f };
	}
	else if (iParam0 == 16)
	{
		Var0 = { -697.75f, 45.38f, 43.03f };
	}
	else if (iParam0 == 17)
	{
		Var0 = { -188.22f, 1296.1f, 302.86f };
	}
	else if (iParam0 == 18)
	{
		Var0 = { -954.19f, -2760.05f, 14.64f };
	}
	else if (iParam0 == 19)
	{
		Var0 = { -63.8f, -809.5f, 321.8f };
	}
	else if (iParam0 == 20)
	{
		Var0 = { 1731.41f, 96.96f, 170.39f };
	}
	else if (iParam0 == 21)
	{
		Var0 = { -1877.82f, -440.649f, 45.05f };
	}
	else if (iParam0 == 22)
	{
		Var0 = { 809.66f, 1279.76f, 360.49f };
	}
	else if (iParam0 == 23)
	{
		Var0 = { -915.6f, 6139.2f, 5.5f };
	}
	else if (iParam0 == 24)
	{
		Var0 = { -72.29f, -1260.63f, 28.14f };
	}
	else if (iParam0 == 25)
	{
		Var0 = { 1804.32f, 3931.33f, 32.82f };
	}
	else if (iParam0 == 26)
	{
		Var0 = { -684.17f, 5839.16f, 16.09f };
	}
	else if (iParam0 == 27)
	{
		Var0 = { -1104.93f, 291.25f, 64.3f };
	}
	else if (iParam0 == 28)
	{
		Var0 = { 565.39f, -1772.88f, 29.77f };
	}
	else if (iParam0 == 29)
	{
		Var0 = { 565.39f, -1772.88f, 29.77f };
	}
	else if (iParam0 == 30)
	{
		Var0 = { -1104.93f, 291.25f, 64.3f };
	}
	else if (iParam0 == 31)
	{
		Var0 = { 2726.1f, 4145f, 44.3f };
	}
	else if (iParam0 == 32)
	{
		Var0 = { 327.85f, 3405.7f, 35.73f };
	}
	else if (iParam0 == 33)
	{
		Var0 = { 18f, 4527f, 105f };
	}
	else if (iParam0 == 34)
	{
		Var0 = { -303.82f, 6211.29f, 31.05f };
	}
	else if (iParam0 == 35)
	{
		Var0 = { 1972.59f, 3816.43f, 32.42f };
	}
	else if (iParam0 == 36)
	{
		Var0 = { 0f, 0f, 0f };
	}
	else if (iParam0 == 37)
	{
		Var0 = { -1097.16f, 790.01f, 164.52f };
	}
	else if (iParam0 == 38)
	{
		Var0 = { -558.65f, 284.49f, 90.86f };
	}
	else if (iParam0 == 39)
	{
		Var0 = { -1034.15f, 366.08f, 80.11f };
	}
	else if (iParam0 == 40)
	{
		Var0 = { -623.91f, -266.17f, 37.76f };
	}
	else if (iParam0 == 41)
	{
		Var0 = { -1096.85f, 67.68f, 52.95f };
	}
	else if (iParam0 == 42)
	{
		Var0 = { -1310.7f, -640.22f, 26.54f };
	}
	else if (iParam0 == 43)
	{
		Var0 = { -44.75f, -1288.67f, 28.21f };
	}
	else if (iParam0 == 44)
	{
		Var0 = { 2468.51f, 3437.39f, 49.9f };
	}
	else if (iParam0 == 45)
	{
		Var0 = { 2319.44f, 2583.58f, 46.76f };
	}
	else if (iParam0 == 46)
	{
		Var0 = { -149.75f, 285.81f, 93.67f };
	}
	else if (iParam0 == 47)
	{
		Var0 = { -70.71f, 301.43f, 106.79f };
	}
	else if (iParam0 == 48)
	{
		Var0 = { -257.22f, 292.85f, 90.63f };
	}
	else if (iParam0 == 49)
	{
		Var0 = { 305.52f, 157.19f, 102.94f };
	}
	else if (iParam0 == 50)
	{
		Var0 = { 1040.96f, -534.42f, 60.17f };
	}
	else if (iParam0 == 51)
	{
		Var0 = { -484.2f, 229.68f, 82.21f };
	}
	else if (iParam0 == 52)
	{
		Var0 = { 908f, 3643.7f, 32.2f };
	}
	else if (iParam0 == 54)
	{
		Var0 = { 465.1f, -1849.3f, 27.8f };
	}
	else if (iParam0 == 55)
	{
		Var0 = { -161f, -1669.7f, 33f };
	}
	else if (iParam0 == 56)
	{
		Var0 = { -1298.2f, 2504.14f, 21.09f };
	}
	else if (iParam0 == 53)
	{
		Var0 = { 1181.5f, -400.1f, 67.5f };
	}
	else if (iParam0 == 57)
	{
		Var0 = { -1298.98f, 4640.16f, 105.67f };
	}
	else if ((iParam0 == 58 || iParam0 == 59) || iParam0 == 62)
	{
		Var0 = { -14.39f, -1472.69f, 29.58f };
	}
	else if (iParam0 == 60)
	{
		Var0 = { 0f, 0f, 0f };
	}
	else if (iParam0 == 61)
	{
		Var0 = { 0f, 0f, 0f };
	}
	return Var0;
}

int func_568(var uParam0)//Position - 0xC7A3
{
	if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), uParam0->f_1, uParam0->f_4, uParam0->f_7, false, true, 0))
	{
		return 1;
	}
	return 0;
}

int func_569(char* sParam0)//Position - 0xC7CE
{
	int iVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 <= 12)
	{
		if (!MISC::IS_STRING_NULL(sLocal_69[iVar0]))
		{
			if (MISC::ARE_STRINGS_EQUAL(sLocal_69[iVar0], sParam0))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

int func_570(int iParam0)//Position - 0xCDEC
{
	if (DECORATOR::DECOR_EXIST_ON(iParam0, "GetawayVehicleValid"))
	{
		if (DECORATOR::DECOR_GET_BOOL(iParam0, "GetawayVehicleValid"))
		{
			return 1;
		}
	}
	return 0;
}

int func_571()//Position - 0xCE11
{
	if (PED::IS_PED_IN_ANY_TAXI(PLAYER::PLAYER_PED_ID()))
	{
		if ((VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0, false) == PLAYER::PLAYER_PED_ID() || VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1, false) == PLAYER::PLAYER_PED_ID()) || VEHICLE::GET_PED_IN_VEHICLE_SEAT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 2, false) == PLAYER::PLAYER_PED_ID())
		{
			return 1;
		}
	}
	return 0;
}

int func_572(int iParam0)//Position - 0xD01B
{
	if (DECORATOR::DECOR_EXIST_ON(iParam0, "GetawayVehicleValid"))
	{
		return 1;
	}
	return 0;
}

void func_573()//Position - 0xD10F
{
	switch (iLocal_67)
	{
		case 0:
			if (BitTest(uLocal_49, 0))
			{
				if ((MISC::GET_GAME_TIMER() - iLocal_73) > 500)
				{
					sLocal_70 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
					iLocal_67 = 1;
				}
				else if (iLocal_73 == -1)
				{
					iLocal_73 = MISC::GET_GAME_TIMER();
				}
			}
			break;
		case 1:
			if ((MISC::GET_GAME_TIMER() - Local_68[iLocal_72 /*261*/].f_259) > 500)
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(sLocal_70) && !MISC::IS_STRING_NULL_OR_EMPTY(Local_68[iLocal_72 /*261*/][iLocal_71 /*8*/]))
				{
					if (MISC::ARE_STRINGS_EQUAL(sLocal_70, Local_68[iLocal_72 /*261*/][iLocal_71 /*8*/]))
					{
						MISC::SET_BIT(&(Local_68[iLocal_72 /*261*/].f_258), iLocal_71);
					}
					else
					{
						MISC::CLEAR_BIT(&(Local_68[iLocal_72 /*261*/].f_258), iLocal_71);
					}
				}
				else
				{
					sLocal_70 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
				}
				iLocal_71++;
				if (iLocal_71 >= (Local_68[iLocal_72 /*261*/].f_257 - 1))
				{
					iLocal_71 = 0;
					Local_68[iLocal_72 /*261*/].f_259 = MISC::GET_GAME_TIMER();
					iLocal_72++;
					if (iLocal_72 >= 4)
					{
						iLocal_72 = 0;
						iLocal_73 = MISC::GET_GAME_TIMER();
						iLocal_67 = 0;
					}
				}
			}
			break;
	}
}

int func_574(bool bParam0)//Position - 0xD54A
{
	int iVar0;
	if (!__LIB_0__::func_43(bParam0))
	{
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (BitTest(Global_113386.f_7688[iVar0 /*15*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_764)
	{
		if (BitTest(Global_113386.f_7688.f_651[iVar0 /*14*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_866)
	{
		if (BitTest(Global_113386.f_7688.f_765[iVar0 /*10*/].f_2, bParam0))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

void func_575()//Position - 0xDAA5
{
	if (!HUD::IS_STREAMING_ADDITIONAL_TEXT(5))
	{
		MISC::SET_BIT(&uLocal_49, 4);
	}
	else
	{
		MISC::CLEAR_BIT(&uLocal_49, 4);
	}
}

char* func_576(int iParam0)//Position - 0xE3DF
{
	char* sVar0;
	if (iLocal_42 == 0)
	{
		if (iParam0 == 17)
		{
			sVar0 = "PRC_USEFT";
		}
		else if (iParam0 == 18)
		{
			sVar0 = "PRC_USEM";
		}
		else if (iParam0 == 10)
		{
			sVar0 = "PRC_PICKCARTF";
		}
		else if (iParam0 == 11)
		{
			sVar0 = "PRC_PICKCARM";
		}
		else if (iParam0 == 13)
		{
			sVar0 = "PRC_PICKNEWM";
		}
		else if (iParam0 == 12)
		{
			sVar0 = "PRC_PICKNEWTF";
		}
		else if (iParam0 == 7)
		{
			sVar0 = "PRC_LOCSUITFT";
		}
		else if (iParam0 == 8)
		{
			sVar0 = "PRC_LOCSUITM";
		}
		else if (iParam0 == 20)
		{
			sVar0 = "PRC_INACC";
		}
	}
	else if (iLocal_42 == 1)
	{
		if (iParam0 == 17)
		{
			sVar0 = "PRC_USEFL";
		}
		else if (iParam0 == 18)
		{
			sVar0 = "PRC_USEML";
		}
		else if (iParam0 == 10)
		{
			sVar0 = "PRC_PICKCRFL";
		}
		else if (iParam0 == 11)
		{
			sVar0 = "PRC_PICKCRML";
		}
		else if (iParam0 == 13)
		{
			sVar0 = "PRC_PICKNEWML";
		}
		else if (iParam0 == 12)
		{
			sVar0 = "PRC_PICKNEWFL";
		}
		else if (iParam0 == 7)
		{
			sVar0 = "PRC_LOCSUITFL";
		}
		else if (iParam0 == 8)
		{
			sVar0 = "PRC_LOCSUITML";
		}
		else if (iParam0 == 20)
		{
			sVar0 = "PRC_INACCF";
		}
	}
	else if (iLocal_42 == 2)
	{
		if (iParam0 == 17)
		{
			sVar0 = "PRC_USEL";
		}
		else if (iParam0 == 18)
		{
			sVar0 = "PRC_USEL";
		}
		else if (iParam0 == 10)
		{
			sVar0 = "PRC_PICKCARL";
		}
		else if (iParam0 == 11)
		{
			sVar0 = "PRC_PICKCARL";
		}
		else if (iParam0 == 13)
		{
			sVar0 = "PRC_PICKNEWL";
		}
		else if (iParam0 == 12)
		{
			sVar0 = "PRC_PICKNEWL";
		}
		else if (iParam0 == 7)
		{
			sVar0 = "PRC_LOCSUITFT";
		}
		else if (iParam0 == 8)
		{
			sVar0 = "PRC_LOCSUITM";
		}
		else if (iParam0 == 20)
		{
			sVar0 = "PRC_INACCF";
		}
	}
	return sVar0;
}

struct<8> func_577(char* sParam0, struct<3> Param1, struct<3> Param2, float fParam3)//Position - 0xF8DF
{
	struct<8> Var0;
	Var0.f_0 = sParam0;
	Var0.f_1 = { Param1 };
	Var0.f_4 = { Param2 };
	Var0.f_7 = fParam3;
	return Var0;
}

void func_578()//Position - 0xFA53
{
	StringCopy(&(Global_7974[3 /*16*/].f_8), "CELL_SFUN_NULL" /* GXT: This is a dummy and should not be displayed but is referenced by script. Please leave. */, 32);
}

void func_579()//Position - 0xFA69
{
	StringCopy(&(Global_7974[2 /*16*/].f_8), "CELL_SFUN_NULL" /* GXT: This is a dummy and should not be displayed but is referenced by script. Please leave. */, 32);
}

void func_580()//Position - 0xFA7F
{
	StringCopy(&(Global_7974[1 /*16*/].f_8), "CELL_SFUN_NULL" /* GXT: This is a dummy and should not be displayed but is referenced by script. Please leave. */, 32);
}

void func_581()//Position - 0xFA95
{
	StringCopy(&(Global_7974[0 /*16*/].f_8), "CELL_SFUN_NULL" /* GXT: This is a dummy and should not be displayed but is referenced by script. Please leave. */, 32);
}

void func_582(char* sParam0)//Position - 0xFAAB
{
	StringCopy(&(Global_7974[0 /*16*/].f_8), sParam0, 32);
}

void func_583(char* sParam0)//Position - 0xFABF
{
	StringCopy(&(Global_7974[2 /*16*/].f_8), sParam0, 32);
}

void func_584(char* sParam0)//Position - 0xFAD3
{
	StringCopy(&(Global_7974[1 /*16*/].f_8), sParam0, 32);
}

void func_585(char* sParam0)//Position - 0xFAE7
{
	StringCopy(&(Global_7974[3 /*16*/].f_8), sParam0, 32);
}

int func_586()//Position - 0x33B
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	iVar2 = 0;
	iVar3 = 145;
	if (Global_78319)
	{
		iVar3 = 145;
	}
	else if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 1)
	{
		if (__LIB_0__::func_686())
		{
			if (__LIB_0__::func_685())
			{
				iVar6 = 0;
				GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(Global_20247, "GET_CURRENT_SELECTION");
				iVar0 = GRAPHICS::END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE();
				iVar4 = MISC::GET_GAME_TIMER();
				while ((!GRAPHICS::IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(iVar0) && iVar6 == 0) && GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 1)
				{
					SYSTEM::WAIT(0);
					iVar5 = MISC::GET_GAME_TIMER();
					if ((iVar5 - iVar4) > 1500)
					{
						iVar6 = 1;
					}
				}
				iVar1 = GRAPHICS::GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(iVar0);
				if (iVar1 > __LIB_0__::func_684() || iVar1 < 0)
				{
					iVar1 = __LIB_0__::func_684();
				}
				iVar2 = Global_20272[iVar1];
				iVar3 = iVar2;
				if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(Global_20247) == 0)
				{
					iVar3 = 145;
				}
				if (iVar6 == 1)
				{
					iVar3 = 145;
				}
			}
			else
			{
				iVar3 = 145;
			}
		}
		else
		{
			iVar3 = 145;
		}
	}
	else
	{
		iVar3 = 145;
	}
	return iVar3;
}

int func_587()//Position - 0x4EE
{
	if (__LIB_0__::func_77(0) && __LIB_0__::func_686())
	{
		return 1;
	}
	return 0;
}

int func_588()//Position - 0x7D55
{
	if (__LIB_0__::func_178(68))
	{
		return 1;
	}
	return 0;
}

int func_589()//Position - 0xB5A7
{
	var uVar0[5];
	int iVar1;
	PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &uVar0, -1);
	iVar1 = 0;
	while (iVar1 <= 4)
	{
		if (__LIB_0__::func_692(uVar0[iVar1]) && uVar0[iVar1] != PLAYER::PLAYER_PED_ID())
		{
			if (SYSTEM::VDIST2(Local_50, ENTITY::GET_ENTITY_COORDS(uVar0[iVar1], true)) <= 16f)
			{
				return 1;
			}
		}
		iVar1++;
	}
	return 0;
}

int func_590(int iParam0)//Position - 0xCF59
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 9)
	{
		if (iLocal_66[iVar0] == iParam0)
		{
			if (iVar0 == 0 && !__LIB_0__::func_178(33))
			{
				MISC::SET_BIT(&uLocal_49, 3);
			}
			else if (iVar0 == 1 && !__LIB_0__::func_178(34))
			{
				MISC::SET_BIT(&uLocal_49, 3);
			}
			else
			{
				MISC::CLEAR_BIT(&uLocal_49, 3);
			}
			return 1;
		}
		iVar0++;
	}
	return 0;
}

int func_591(var uParam0)//Position - 0xD07E
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (__LIB_0__::func_692(PLAYER::PLAYER_PED_ID()) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
		if (__LIB_0__::func_695(iVar0))
		{
			iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
			if ((iVar1 == joaat("cargobob") || iVar1 == joaat("cargobob2")) || iVar1 == joaat("cargobob3"))
			{
				if (VEHICLE::DOES_CARGOBOB_HAVE_PICK_UP_ROPE(iVar0))
				{
					iVar2 = VEHICLE::GET_VEHICLE_ATTACHED_TO_CARGOBOB(iVar0);
					if (ENTITY::DOES_ENTITY_EXIST(iVar2))
					{
						*uParam0 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar2);
						if (__LIB_0__::func_695(*uParam0))
						{
							return 1;
						}
					}
				}
			}
		}
	}
	return 0;
}

void func_592(int iParam0, bool bParam1)//Position - 0xF90A
{
	if (__LIB_0__::func_695(iLocal_51))
	{
		__LIB_0__::func_106(&iLocal_51);
	}
	if (!bParam1)
	{
		__LIB_0__::func_693(iParam0);
	}
	SCRIPT::TERMINATE_THIS_THREAD();
}

void func_593(int iParam0, bool bParam1)//Position - 0x7205
{
	Global_113386.f_10049.f_128 = iParam0;
	iLocal_37 = iParam0;
	if (bParam1)
	{
		return;
	}
	__LIB_0__::func_210();
}

void func_594(bool bParam0)//Position - 0x7F4B
{
	if (bParam0)
	{
		__LIB_17__::func_526(1527885205, 0, __LIB_0__::func_683(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
	else if (!__LIB_0__::func_178(3))
	{
		__LIB_17__::func_526(-224691627, 0, __LIB_0__::func_683(), 23, 3, 6000, 6000, -1, 50, -1, 0);
	}
	else
	{
		__LIB_17__::func_526(-224691627, 0, __LIB_0__::func_683(), 23, 3, 6000, 6000, -1, 0, -1, 0);
	}
}

struct<4> func_595(bool bParam0)//Position - 0x83E6
{
	struct<4> Var0;
	if (bParam0)
	{
		switch (__LIB_0__::func_683())
		{
			case 1:
				StringCopy(&Var0, "AHF_C8", 16);
				break;
			case 0:
				StringCopy(&Var0, "AHF_C5", 16);
				break;
		}
	}
	else
	{
		switch (__LIB_0__::func_683())
		{
			case 1:
				StringCopy(&Var0, "AHF_C9", 16);
				break;
			case 0:
				StringCopy(&Var0, "AHF_C6", 16);
				break;
			}
	}
	return Var0;
}

Vector3 func_596(int iParam0)//Position - 0xFB7C
{
	if (iParam0 == -1)
	{
		return 0f, 0f, 0f;
	}
	if (!__LIB_14__::func_527(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return 0f, 0f, 0f;
	}
	return Global_77137.f_555[0 /*21*/];
}

bool func_597(var uParam0, var uParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6, int iParam7, bool bParam8)//Position - 0x88F0
{
	__LIB_0__::func_770(uParam0, uParam1, sParam2, iParam6, iParam7, 0);
	Global_21653 = 0;
	Global_21612 = 1;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_21610 = 0;
	Global_21657 = 0;
	Global_21659 = 0;
	if (iParam5 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	Global_2883585 = 0;
	return __LIB_0__::func_711(sParam3, iParam4, bParam8);
}

bool func_598(int iParam0)//Position - 0x1002F
{
	return __LIB_0__::func_431(iParam0, 1, 1);
}

void func_599()//Position - 0x1D4B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = __LIB_16__::func_914(iVar0);
		if (!PED::IS_PED_INJURED(iVar1))
		{
			if (__LIB_17__::func_524(iVar1, 0))
			{
				return;
			}
		}
		iVar0++;
	}
	__LIB_17__::func_526(__LIB_17__::func_545(), 0, __LIB_0__::func_683(), __LIB_17__::func_547(), 9, 6000, 6000, -1, 0, -1, 0);
}

void func_600()//Position - 0x11802
{
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 31, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 32, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 33, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 34, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 35, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 36, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 37, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 38, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 39, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 40, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 41, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 42, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 43, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 14, 44, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 9, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 10, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 11, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 12, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 13, 1);
	__LIB_15__::func_950(joaat("Player_Zero"), 9, 14, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 26, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 27, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 28, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 29, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 30, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 31, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 32, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 33, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 34, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 35, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 36, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 37, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 38, 1);
	__LIB_15__::func_950(joaat("Player_One"), 14, 39, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 5, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 6, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 7, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 8, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 9, 1);
	__LIB_15__::func_950(joaat("Player_One"), 9, 10, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 49, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 50, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 51, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 52, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 53, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 54, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 55, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 56, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 57, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 58, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 59, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 14, 60, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 9, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 10, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 11, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 12, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 13, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 14, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 15, 1);
	__LIB_15__::func_950(joaat("Player_Two"), 9, 16, 1);
}

void func_601(char* sParam0, char* sParam1, char* sParam2)//Position - 0x104F5
{
	if (__LIB_0__::func_501(sParam1, 0, 0) || __LIB_0__::func_501(sParam2, 0, 0))
	{
		HUD::CLEAR_PRINTS();
	}
	if (!__LIB_0__::func_501(sParam0, 0, 0))
	{
		__LIB_0__::func_229(sParam0, 60000, 0);
	}
}

void func_602(int* iParam0, struct<3> Param1, bool bParam2, bool bParam3, char* sParam4)//Position - 0x3862
{
	if (!HUD::DOES_BLIP_EXIST(*iParam0))
	{
		*iParam0 = __LIB_14__::func_704(Param1, 5, bParam2);
		if (bParam3)
		{
			HUD::SET_BLIP_NAME_FROM_TEXT_FILE(*iParam0, sParam4);
		}
	}
}

int func_603(int iParam0, int iParam1)//Position - 0x10262
{
	int iVar0;
	iVar0 = (__LIB_15__::func_806(iParam0) - iParam1);
	return iVar0;
}

bool func_604(struct<3> Param0, int iParam1)//Position - 0x10065
{
	return __LIB_14__::func_660(Global_106934.f_2890.f_12.f_66, Param0, iParam1);
}

bool func_605(var uParam0, var uParam1, bool bParam2, char* sParam3, char* sParam4, int iParam5, int iParam6, int iParam7, int iParam8, bool bParam9)//Position - 0x211E
{
	__LIB_0__::func_770(uParam0, uParam1, sParam3, iParam7, iParam8, 0);
	Global_7454 = bParam2;
	Global_21653 = 0;
	Global_21612 = 1;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 0;
	Global_21619 = 0;
	Global_21610 = 1;
	Global_21657 = 0;
	Global_21659 = 0;
	if (iParam6 == 1)
	{
		Global_21617 = 1;
	}
	else
	{
		Global_21617 = 0;
	}
	Global_2883585 = 0;
	return __LIB_0__::func_711(sParam4, iParam5, bParam9);
}

int func_606(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x668BD
{
	int iVar0;
	iVar0 = TASK::GET_SCRIPT_TASK_STATUS(iParam0, iParam1);
	if (bParam3)
	{
		if ((iVar0 == 7 || iVar0 == 2) || TASK::GET_SEQUENCE_PROGRESS(iParam0) == iParam2)
		{
			return 1;
		}
	}
	else if (iVar0 == 7 || iVar0 == 2)
	{
		return 1;
	}
	return 0;
}

void func_607(var uParam0)//Position - 0x8004B
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < uParam0->f_10)
	{
		CAM::DESTROY_CAM(uParam0->f_10[iVar0 /*57*/].f_1, false);
		iVar0++;
	}
	if (CAM::DOES_CAM_EXIST(uParam0->f_1))
	{
		CAM::DESTROY_CAM(uParam0->f_1, false);
	}
}

int func_608(var uParam0)//Position - 0x8008B
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	if (CAM::DOES_CAM_EXIST(uParam0->f_1))
	{
		iVar0 = 1;
	}
	iVar1 = 0;
	while (iVar1 < uParam0->f_10)
	{
		CAM::DOES_CAM_EXIST(uParam0->f_10[iVar1 /*57*/].f_1);
		iVar0 = 1;
		iVar1++;
	}
	return iVar0;
}

void func_609(int iParam0, bool bParam1)//Position - 0x8CAD5
{
	PED::SET_PED_DIES_WHEN_INJURED(iParam0, false);
	PED::SET_PED_CAN_BE_TARGETTED(iParam0, false);
	PED::SET_PED_SUFFERS_CRITICAL_HITS(iParam0, false);
	PED::SET_PED_CAN_EVASIVE_DIVE(iParam0, false);
	ENTITY::SET_ENTITY_IS_TARGET_PRIORITY(iParam0, false, 0f);
	PED::SET_PED_CAN_RAGDOLL(iParam0, false);
	PED::SET_PED_SEEING_RANGE(iParam0, 250f);
	PED::SET_PED_HEARING_RANGE(iParam0, 250f);
	PED::SET_PED_ID_RANGE(iParam0, 250f);
	PED::SET_PED_CONFIG_FLAG(iParam0, 132, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 32, false);
	PED::SET_PED_CONFIG_FLAG(iParam0, 118, false);
	PED::SET_PED_CONFIG_FLAG(iParam0, 208, true);
	PED::SET_PED_CONFIG_FLAG(iParam0, 188, true);
	if (bParam1)
	{
		PED::SET_PED_CONFIG_FLAG(iParam0, 174, true);
		PED::SET_PED_CONFIG_FLAG(iParam0, 169, true);
	}
}

void func_610()//Position - 0x93EBD
{
	if (!CAM::IS_SCREEN_FADED_OUT())
	{
		CAM::DO_SCREEN_FADE_OUT(500);
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			SYSTEM::WAIT(0);
		}
	}
}

int func_611(int iParam0, int iParam1, bool bParam2, float fParam3)//Position - 0x972D2
{
	float fVar0;
	float fVar1;
	if (OBJECT::DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(iParam0) && OBJECT::DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(iParam1))
	{
		fVar0 = OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(iParam0);
		fVar1 = OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(iParam1);
		if (bParam2)
		{
			fVar0 = (fVar0 - (MISC::GET_FRAME_TIME() * fParam3));
			if (fVar0 <= -1f)
			{
				fVar0 = -1f;
			}
			fVar1 = (fVar1 + (MISC::GET_FRAME_TIME() * fParam3));
			if (fVar1 >= 1f)
			{
				fVar1 = 1f;
			}
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iParam0, fVar0, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iParam0, 4, false, true);
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iParam1, fVar1, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iParam1, 4, false, true);
			if (fVar0 == -1f && fVar1 == 1f)
			{
				return 1;
			}
		}
		else
		{
			fVar0 = (fVar0 + (MISC::GET_FRAME_TIME() * fParam3));
			if (fVar0 >= 0f)
			{
				fVar0 = 0f;
			}
			fVar1 = (fVar1 - (MISC::GET_FRAME_TIME() * fParam3));
			if (fVar1 <= 0f)
			{
				fVar1 = 0f;
			}
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iParam0, fVar0, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iParam0, 4, false, true);
			OBJECT::DOOR_SYSTEM_SET_OPEN_RATIO(iParam1, fVar1, false, false);
			OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(iParam1, 4, false, true);
			if (fVar0 == 0f && fVar1 == 0f)
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_612(int iParam0, int iParam1)//Position - 0xACE03
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
		{
			if (!ENTITY::IS_ENTITY_IN_WATER(iParam0))
			{
				if (__LIB_0__::func_611(iParam1, 10000))
				{
					return 1;
				}
			}
			else
			{
				*iParam1 = MISC::GET_GAME_TIMER();
			}
		}
	}
	return 0;
}

void func_613(var uParam0, var uParam1, char* sParam2, var uParam3, var uParam4, var uParam5, float fParam6, float fParam7, int iParam8, var uParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17, int iParam18, int iParam19, int iParam20, int iParam21, int iParam22, int iParam23, int iParam24, int iParam25, int iParam26, int iParam27, int iParam28, int iParam29, int iParam30, int iParam31, int iParam32, int iParam33, int iParam34, int iParam35, int iParam36)//Position - 0x63A5E
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(0, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(0, iVar0);
		Global_1649593.f_1177[iVar0] = uParam0;
		Global_1649593.f_1177.f_11[iVar0] = uParam1;
		StringCopy(&(Global_1649593.f_1177.f_22[iVar0 /*16*/]), sParam2, 64);
		Global_1649593.f_1177.f_194[iVar0] = uParam3;
		Global_1649593.f_1177.f_183[iVar0] = uParam4;
		Global_1649593.f_1177.f_216[iVar0] = uParam5;
		Global_1649593.f_1177.f_227[iVar0 /*3*/] = fParam6;
		Global_1649593.f_1177.f_227[iVar0 /*3*/].f_1 = fParam7;
		Global_1649593.f_1177.f_258[iVar0] = iParam8;
		Global_1649593.f_1177.f_269[iVar0] = uParam9;
		Global_1649593.f_1177.f_312[iVar0] = iParam10;
		Global_1649593.f_1177.f_323[iVar0] = iParam11;
		Global_1649593.f_1177.f_334[iVar0] = iParam12;
		Global_1649593.f_1177.f_345[iVar0] = iParam13;
		Global_1649593.f_1172 = 1;
		Global_1649593.f_1177.f_356[iVar0] = iParam14;
		Global_1649593.f_1177.f_367[iVar0] = iParam15;
		Global_1649593.f_1177.f_378[iVar0] = iParam16;
		Global_1649593.f_1177.f_389[iVar0] = iParam17;
		Global_1649593.f_1177.f_400[iVar0] = iParam18;
		Global_1649593.f_1177.f_411[iVar0] = iParam19;
		Global_1649593.f_1177.f_422[iVar0] = iParam20;
		Global_1649593.f_1177.f_433[iVar0] = iParam21;
		Global_1649593.f_1177.f_444[iVar0] = iParam22;
		Global_1649593.f_1177.f_455[iVar0] = iParam23;
		Global_1649593.f_1177.f_466[iVar0] = iParam24;
		Global_1649593.f_1177.f_205[iVar0] = iParam25;
		Global_1649593.f_1177.f_477[iVar0] = iParam26;
		Global_1649593.f_1177.f_488[iVar0] = iParam27;
		Global_1649593.f_1177.f_499[iVar0] = iParam28;
		Global_1649593.f_1177.f_510[iVar0] = iParam29;
		Global_1649593.f_1177.f_521[iVar0] = iParam30;
		Global_1649593.f_1177.f_532[iVar0] = iParam31;
		Global_1649593.f_1177.f_543[iVar0] = iParam32;
		Global_1649593.f_1177.f_554[iVar0] = iParam33;
		Global_1649593.f_1177.f_565[iVar0] = iParam34;
		Global_1649593.f_1177.f_576[iVar0] = iParam35;
		Global_1649593.f_1177.f_587[iVar0] = iParam36;
	}
}

void func_614(int iParam0, int iParam1, var uParam2, var uParam3, int iParam4, bool bParam5)//Position - 0x6E2E1
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_PROP_INDEX(iParam0, iParam1);
		*uParam3 = PED::GET_PED_PROP_TEXTURE_INDEX(iParam0, iParam1);
	}
	else
	{
		iVar0 = bParam5;
	}
	if (iParam4 == 0)
	{
		return;
	}
	if (iParam1 == 0)
	{
		if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
		{
			if (iParam0 != 0)
			{
				if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0) != -1)
				{
					*uParam2 = PED::GET_PED_HELMET_STORED_HAT_PROP_INDEX(iParam0);
					*uParam3 = PED::GET_PED_HELMET_STORED_HAT_TEX_INDEX(iParam0);
				}
			}
		}
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 0)
			{
				if (*uParam2 == 7)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 28)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 14 && *uParam2 <= 20)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			else if (iParam1 == 1)
			{
				if (*uParam2 == 1)
				{
					if (iParam4 & 2 != 0 || iParam4 & 64 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 0)
			{
				if (*uParam2 == 2)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 4)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 16 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 6)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 17)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 20)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 >= 8 && *uParam2 <= 14)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 0)
			{
				if (*uParam2 == 9)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 11)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 12)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 21)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 23)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if (*uParam2 == 27)
				{
					if ((iParam4 & 1 != 0 || iParam4 & 2 != 0) || iParam4 & 8 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
				else if ((*uParam2 >= 14 && *uParam2 <= 20) || *uParam2 == 2)
				{
					if (iParam4 & 2 != 0 || iParam4 & 4 != 0)
					{
						*uParam2 = -1;
						*uParam3 = -1;
					}
				}
			}
			break;
	}
}

void func_615(int iParam0, int iParam1, var uParam2, var uParam3, var uParam4, int iParam5, bool bParam6)//Position - 0x6E829
{
	int iVar0;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (iParam0 != 0)
	{
		*uParam2 = PED::GET_PED_DRAWABLE_VARIATION(iParam0, iParam1);
		*uParam3 = PED::GET_PED_TEXTURE_VARIATION(iParam0, iParam1);
		*uParam4 = PED::GET_PED_PALETTE_VARIATION(iParam0, iParam1);
	}
	else
	{
		iVar0 = bParam6;
	}
	if (iParam5 == 0)
	{
		return;
	}
	switch (iVar0)
	{
		case 0:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 15)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 3 || *uParam2 == 22)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 8)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 1:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 1 || *uParam2 == 10)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
				if (iParam5 & 2 != 0 || iParam5 & 64 != 0)
				{
					if (*uParam2 == 19)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
				{
					if (*uParam2 == 5)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
		case 2:
			if (iParam1 == 8)
			{
				if ((iParam5 & 1 != 0 || iParam5 & 2 != 0) || iParam5 & 32 != 0)
				{
					if (*uParam2 == 3)
					{
						*uParam2 = 14;
						*uParam3 = 0;
					}
				}
			}
			else if (iParam1 == 9)
			{
				if (*uParam2 >= 5 && *uParam2 <= 7)
				{
					if (iParam5 & 2 != 0 || iParam5 & 4 != 0)
					{
						*uParam2 = 0;
						*uParam3 = 0;
					}
				}
			}
			break;
	}
}

int func_616(int iParam0, int iParam1, int iParam2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8)//Position - 0x91347
{
	bool bVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	struct<3> Var5;
	bool bVar6;
	int iVar7;
	bool bVar8;
	bVar0 = false;
	iVar2 = iParam1;
	if (!WEAPON::HAS_PED_GOT_WEAPON(iParam0, iParam1, false))
	{
		bVar0 = true;
	}
	if (iVar2 == joaat("WEAPON_UNARMED"))
	{
		return 0;
	}
	iVar3 = 0;
	if (iParam2 == 1)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			iVar3 = WEAPON::GET_AMMO_IN_PED_WEAPON(iParam0, iVar2);
		}
		if (iVar3 == -1)
		{
			iVar4 = WEAPON::GET_WEAPON_CLIP_SIZE(iVar2);
			if (iVar4 > 0)
			{
				iVar3 = iVar4;
			}
			else
			{
				WEAPON::GET_MAX_AMMO(iParam0, iVar2, &iVar3);
			}
		}
	}
	Var5 = { ENTITY::GET_ENTITY_COORDS(iParam0, false) - Vector(10f, 0f, 0f) };
	if (bParam3)
	{
		Var5 = { iParam4, iParam5, iParam6 };
	}
	while (__LIB_0__::func_430(iVar2, bVar6) != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, iVar2, __LIB_0__::func_430(iVar2, bVar6)))
			{
				if (__LIB_0__::func_705(__LIB_0__::func_430(iVar2, bVar6)))
				{
					iVar7 = WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(__LIB_0__::func_430(iVar2, bVar6));
				}
			}
		}
		bVar6++;
	}
	iVar1 = WEAPON::CREATE_WEAPON_OBJECT(iVar2, iVar3, Var5, bVar0, 1f, iVar7, iParam7, iParam8);
	while (__LIB_0__::func_430(iVar2, bVar8) != 0)
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
		{
			if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(iParam0, iVar2, __LIB_0__::func_430(iVar2, bVar8)))
			{
				WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(iVar1, __LIB_0__::func_430(iVar2, bVar8));
				__LIB_0__::func_707(iVar1, __LIB_0__::func_430(iVar2, bVar8));
			}
		}
		bVar8++;
	}
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (WEAPON::HAS_PED_GOT_WEAPON(iParam0, iVar2, false))
		{
			WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(iVar1, WEAPON::GET_PED_WEAPON_TINT_INDEX(iParam0, iVar2));
		}
	}
	return iVar1;
}

int func_617()//Position - 0x9E515
{
	int iVar0;
	iVar0 = __LIB_0__::func_365(SCRIPT::GET_THIS_SCRIPT_NAME(), 1);
	if (iVar0 == -1)
	{
		return -1;
	}
	return __LIB_15__::func_963(iVar0);
}

int func_618(var uParam0)//Position - 0x81197
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_48 = __LIB_0__::func_504(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_48 = __LIB_15__::func_924(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_48 = __LIB_15__::func_923(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_48 = __LIB_15__::func_940(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_48);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_15__::func_922(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_15__::func_958(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_15__::func_958(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_15__::func_921(), ""))
				{
					__LIB_15__::func_958(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_15__::func_920(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_15__::func_920(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_15__::func_919(0, 0, 1, 1);
	}
	else
	{
		__LIB_15__::func_919(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_15__::func_918(uParam0);
	return iVar0;
}

void func_619(int iParam0, bool bParam1)//Position - 0x6F72F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_17__::func_107(iParam0);
	if (__LIB_0__::func_374(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (iParam0 == PLAYER::PLAYER_PED_ID())
		{
			__LIB_13__::func_814(iParam0, &(Global_113386.f_2363.f_539.f_298[iVar0 /*477*/]));
			iVar2 = 0;
			while (iVar2 <= (8 - 1))
			{
				Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] = HUD::HUD_GET_WEAPON_WHEEL_TOP_SLOT(iVar2);
				if (bParam1)
				{
					iVar1 = HUD::HUD_GET_WEAPON_WHEEL_CURRENTLY_HIGHLIGHTED();
					if (Global_113386.f_2363.f_539.f_1730[iVar2 /*4*/][iVar0] == iVar1)
					{
						Global_113386.f_2363.f_539.f_1763 = iVar2;
					}
				}
				iVar2++;
			}
			PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &iVar3);
			if (iVar0 == 0)
			{
				STATS::STAT_SET_INT(joaat("SP0_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 1)
			{
				STATS::STAT_SET_INT(joaat("SP1_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
			else if (iVar0 == 2)
			{
				STATS::STAT_SET_INT(joaat("SP2_PARACHUTE_CURRENT_TINT"), iVar3, true);
			}
		}
	}
}

bool func_620(var uParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6)//Position - 0x78157
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam5, iParam6, 0);
	if (iParam4 > 7)
	{
		if (iParam4 < 12)
		{
			iParam4 = 7;
		}
	}
	Global_21612 = 0;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 0;
	Global_22598 = 0;
	Global_22602 = 1;
	StringCopy(&Global_22609, sParam3, 24);
	Global_2883585 = 0;
	return __LIB_17__::func_394(sParam2, iParam4, 0);
}

void func_621(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0xAA2A1
{
	__LIB_17__::func_503(Param0, Param1, fParam2, Param3, fParam4, Param5, bParam6, bParam7, bParam8, bParam9, bParam10);
}

void func_622(int iParam0, int iParam1, int iParam2)//Position - 0xA8534
{
	struct<14> Var0;
	if (iParam1 == 12 || iParam1 == 13)
	{
		return;
	}
	Var0 = { __LIB_13__::func_798(ENTITY::GET_ENTITY_MODEL(iParam0), iParam1, iParam2, -1) };
	if (iParam1 == 14)
	{
		if (Var0.f_3 != -1 && Var0.f_3 != 255)
		{
			PED::SET_PED_PRELOAD_PROP_DATA(iParam0, Var0.f_12, Var0.f_3, Var0.f_4);
		}
	}
	else if (Var0.f_3 != -1 && Var0.f_4 != -1)
	{
		PED::SET_PED_PRELOAD_VARIATION_DATA(iParam0, __LIB_0__::func_33(iParam1), Var0.f_3, Var0.f_4);
	}
}

void func_623(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0xA9EAE
{
	struct<60> Var0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (iParam3 != 24 && iParam3 != 25)
		{
			return;
		}
		if (iParam3 == 24)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[25]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[25], false))
			{
				if (Global_77137.f_484[25] == iParam0)
				{
					return;
				}
			}
		}
		if (!bParam4)
		{
			if ((VEHICLE::IS_BIG_VEHICLE(iParam0) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("bus")) || ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("tourbus"))
			{
				return;
			}
		}
		__LIB_17__::func_106(iParam3);
		Var0.f_9 = 49;
		Var0.f_59 = 2;
		__LIB_0__::func_209(iParam0, &Var0);
		if (__LIB_0__::func_78(Param1, 0f, 0f, 0f, 0))
		{
			Param1 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
			fParam2 = ENTITY::GET_ENTITY_HEADING(iParam0);
		}
		if (iParam3 == 24)
		{
			if (MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) != joaat("vehicle_gen_controller"))
			{
				Global_78125 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
			}
		}
		__LIB_17__::func_110(iParam3, &Var0, Param1, fParam2, __LIB_0__::func_119(iParam0));
		__LIB_17__::func_242(iParam3, iParam0, 0);
	}
}

int func_624(char* sParam0, bool bParam1)//Position - 0xAAE87
{
	var uVar0;
	struct<14> Var1;
	int iVar2;
	int iVar3;
	var uVar4;
	struct<14> Var5;
	int iVar6;
	int iVar7;
	var uVar8;
	var uVar9;
	struct<14> Var10;
	struct<14> Var11;
	int iVar12;
	int iVar13;
	if (__LIB_13__::func_804(bParam1))
	{
		uVar0 = 15;
		uVar0 = { __LIB_0__::func_459(__LIB_16__::func_512(bParam1), 0) };
		iVar2 = 0;
		while (iVar2 < 15)
		{
			if (uVar0[iVar2] != -99)
			{
				Var1 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), iVar2, uVar0[iVar2], -1) };
				if (iVar2 == 14)
				{
					iVar3 = 0;
					while (iVar3 < 9)
					{
						CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar3, -1, 0, __LIB_16__::func_512(bParam1));
						iVar3++;
					}
				}
				else if (iVar2 != 12 && iVar2 != 13)
				{
					CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar2), Var1.f_3, Var1.f_4, __LIB_16__::func_512(bParam1));
				}
			}
			iVar2++;
		}
		__LIB_0__::func_472(bParam1, 0);
		return 1;
	}
	switch (bParam1)
	{
		case 0:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[120] && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[122])
			{
				uVar4 = 15;
				uVar4 = { __LIB_0__::func_459(__LIB_16__::func_512(bParam1), 0) };
				iVar6 = 0;
				while (iVar6 < 15)
				{
					if (uVar4[iVar6] != -99)
					{
						Var5 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), iVar6, uVar4[iVar6], -1) };
						if (iVar6 == 14)
						{
							iVar7 = 0;
							while (iVar7 < 9)
							{
								CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar7, -1, 0, __LIB_16__::func_512(bParam1));
								iVar7++;
							}
						}
						else if (iVar6 != 12 && iVar6 != 13)
						{
							CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar6), Var5.f_3, Var5.f_4, __LIB_16__::func_512(bParam1));
						}
					}
					iVar6++;
				}
				Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[121] = 1;
			}
			break;
		case 2:
			uVar8 = 15;
			uVar9 = 15;
			Var10 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), 3, 71, -1) };
			if (Global_113386.f_2363.f_539[bParam1 /*65*/].f_13[3] == Var10.f_3)
			{
			}
			else
			{
				uVar8 = { __LIB_0__::func_459(__LIB_16__::func_512(bParam1), 10) };
				uVar9 = { __LIB_0__::func_459(__LIB_16__::func_512(bParam1), 0) };
				iVar12 = 0;
				while (iVar12 < 15)
				{
					if (uVar8[iVar12] != -99)
					{
						if (iVar12 == 14)
						{
							iVar13 = 0;
							while (iVar13 < 9)
							{
								CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar13, -1, 0, __LIB_16__::func_512(bParam1));
								iVar13++;
							}
						}
						else if (iVar12 != 12 && iVar12 != 13)
						{
							if (iVar12 == 3 || iVar12 == 4)
							{
								Var10 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), iVar12, uVar8[iVar12], -1) };
								if (Var10.f_3 == Global_113386.f_2363.f_539[bParam1 /*65*/].f_13[iVar12] && Var10.f_4 == Global_113386.f_2363.f_539[bParam1 /*65*/][iVar12])
								{
									Var11 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), iVar12, uVar9[iVar12], -1) };
									Global_113386.f_2363.f_539[bParam1 /*65*/].f_13[iVar12] = Var11.f_3;
									Global_113386.f_2363.f_539[bParam1 /*65*/][iVar12] = Var11.f_4;
									CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar12), Var11.f_3, Var11.f_4, __LIB_16__::func_512(bParam1));
									if (iVar12 == 4)
									{
										Var11 = { __LIB_13__::func_798(__LIB_16__::func_512(bParam1), 6, uVar9[6], -1) };
										Global_113386.f_2363.f_539[bParam1 /*65*/].f_13[6] = Var11.f_3;
										Global_113386.f_2363.f_539[bParam1 /*65*/][6] = Var11.f_4;
										CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(6), Var11.f_3, Var11.f_4, __LIB_16__::func_512(bParam1));
									}
								}
							}
						}
					}
					iVar12++;
				}
			}
			break;
	}
	return 0;
}

void func_625(int iParam0)//Position - 0x695BA
{
	if (iParam0 == 10)
	{
		return;
	}
	switch (iParam0)
	{
		case 0:
			MISC::SET_BIT(&(Global_38412[(38 / 32)]), (38 % 32));
			__LIB_17__::func_457(38, 0);
			MISC::SET_BIT(&(Global_38412[(41 / 32)]), (41 % 32));
			__LIB_17__::func_457(41, 0);
			MISC::SET_BIT(&(Global_38412[(43 / 32)]), (43 % 32));
			__LIB_17__::func_457(43, 0);
			MISC::SET_BIT(&(Global_38412[(42 / 32)]), (42 % 32));
			__LIB_17__::func_457(42, 0);
			MISC::SET_BIT(&(Global_38412[(44 / 32)]), (44 % 32));
			__LIB_17__::func_457(44, 0);
			break;
		case 1:
			MISC::SET_BIT(&(Global_38412[(51 / 32)]), (51 % 32));
			__LIB_17__::func_457(51, 0);
			break;
		case 2:
			MISC::SET_BIT(&(Global_38412[(51 / 32)]), (51 % 32));
			__LIB_17__::func_457(51, 0);
			break;
		case 3:
			MISC::SET_BIT(&(Global_38412[(53 / 32)]), (53 % 32));
			__LIB_17__::func_457(53, 0);
			break;
		case 4:
			MISC::SET_BIT(&(Global_38412[(81 / 32)]), (81 % 32));
			__LIB_17__::func_457(81, 0);
			MISC::SET_BIT(&(Global_38412[(82 / 32)]), (82 % 32));
			__LIB_17__::func_457(82, 0);
			break;
		case 5:
			MISC::SET_BIT(&(Global_38412[(47 / 32)]), (47 % 32));
			__LIB_17__::func_457(47, 0);
			MISC::SET_BIT(&(Global_38412[(50 / 32)]), (50 % 32));
			__LIB_17__::func_457(50, 0);
			break;
		case 6:
			MISC::SET_BIT(&(Global_38412[(50 / 32)]), (50 % 32));
			__LIB_17__::func_457(50, 0);
			break;
	}
}

int func_626(var uParam0, int iParam1, int iParam2, var uParam3, float fParam4, float fParam5, bool bParam6, bool bParam7, char* sParam8, int iParam9, bool bParam10, bool bParam11, int iParam12)//Position - 0x809FD
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	float fVar5;
	int iVar6;
	int iVar7;
	iVar0 = uParam3;
	if (!uParam0->f_16)
	{
		if (STREAMING::IS_SAFE_TO_START_PLAYER_SWITCH())
		{
			if (!bParam10)
			{
				uParam0->f_13 = PLAYER::PLAYER_PED_ID();
			}
			if ((!PED::IS_PED_INJURED(uParam0->f_13) || bParam10) && !PED::IS_PED_INJURED(uParam0->f_12))
			{
				uParam0->f_27 = 0;
				Global_97360 = 1;
				if (!bParam10)
				{
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_13))
					{
						iVar1 = PED::GET_VEHICLE_PED_IS_IN(uParam0->f_13, false);
						__LIB_15__::func_892(iVar1, 0);
					}
					PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), false, 0);
					ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, true);
					ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, true);
				}
				uParam0->f_21 = __LIB_1__::func_861();
				__LIB_0__::func_671(1);
				if (bParam6)
				{
					iVar0 |= 4;
				}
				if (bParam7)
				{
					iVar0 |= 8;
				}
				if (CAM::DOES_CAM_EXIST(iParam1) || !MISC::IS_STRING_NULL_OR_EMPTY(sParam8))
				{
					iVar0 |= 2;
				}
				if (__LIB_0__::func_629())
				{
					iVar0 |= 1;
				}
				if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
				{
					STREAMING::START_PLAYER_SWITCH(uParam0->f_13, uParam0->f_12, iVar0, iParam2);
					if (bParam11)
					{
						STREAMING::SET_PLAYER_SHORT_SWITCH_STYLE(iParam12);
					}
					switch (__LIB_17__::func_107(uParam0->f_13))
					{
						case 0:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDMichaelOut");
							break;
						case 1:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDMichaelOut");
							break;
						case 2:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDTrevorOut");
							break;
					}
					GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDOut");
				}
				else if (STREAMING::IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED())
				{
					STREAMING::SWITCH_TO_MULTI_SECONDPART(uParam0->f_12);
					__LIB_0__::func_986(0);
				}
				else
				{
					return 0;
				}
				if (CAM::DOES_CAM_EXIST(iParam1))
				{
					if (STREAMING::GET_IDEAL_PLAYER_SWITCH_TYPE(ENTITY::GET_ENTITY_COORDS(uParam0->f_13, true), ENTITY::GET_ENTITY_COORDS(uParam0->f_12, true)) != 3)
					{
						STREAMING::SET_PLAYER_SWITCH_OUTRO(CAM::GET_CAM_COORD(iParam1), CAM::GET_CAM_ROT(iParam1, iParam9), CAM::GET_CAM_FOV(iParam1), CAM::GET_CAM_FAR_CLIP(iParam1), iParam9);
					}
				}
				if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam8))
				{
					STREAMING::SET_PLAYER_SWITCH_ESTABLISHING_SHOT(sParam8);
				}
				if (!Global_23011.f_111)
				{
					AUDIO::PLAY_SOUND(-1, "CHARACTER_CHANGE_UP_MASTER", 0, false, 0, true);
					if (STREAMING::GET_IDEAL_PLAYER_SWITCH_TYPE(ENTITY::GET_ENTITY_COORDS(uParam0->f_13, true), ENTITY::GET_ENTITY_COORDS(uParam0->f_12, true)) == 3)
					{
						AUDIO::PLAY_SOUND(-1, "slow", "SHORT_PLAYER_SWITCH_SOUND_SET", false, 0, true);
					}
					if (Global_23011.f_109 == -1)
					{
						Global_23011.f_109 = AUDIO::GET_SOUND_ID();
					}
					Global_23011.f_110 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
					AUDIO::PLAY_SOUND(Global_23011.f_109, "CHARACTER_CHANGE_SKY_MASTER", 0, false, 0, true);
					AUDIO::START_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
					if (AUDIO::IS_AUDIO_SCENE_ACTIVE("CHARACTER_CHANGE_IN_SKY_SCENE"))
					{
					}
				}
				if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
				{
					AUDIO::STOP_SOUND(Global_23011.f_109);
					AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
					Global_23011.f_109 = -1;
					Global_23011.f_110 = 0;
				}
				uParam0->f_25 = MISC::GET_GAME_TIMER();
				uParam0->f_16 = 1;
				__LIB_7__::func_703(1);
				HUD::SET_MINIMAP_IN_SPECTATOR_MODE(true, uParam0->f_13);
				if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() == 3)
				{
					CAM::SET_FOLLOW_PED_CAM_VIEW_MODE(1);
				}
				if (CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 3)
				{
					CAM::SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(1);
				}
				if (!bParam10)
				{
					if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(0))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(0));
					}
					else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(2))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(2));
					}
					else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(1))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(1));
					}
					else
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
					}
					GRAPHICS::SET_PLAYER_TCMODIFIER_TRANSITION(0f);
				}
			}
			else
			{
				uParam0->f_17 = 1;
			}
		}
		else
		{
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_16)
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (!Global_23011.f_111)
			{
			}
			if (__LIB_0__::func_703(uParam3, 512))
			{
				if (!STREAMING::IS_SWITCH_READY_FOR_DESCENT())
				{
				}
				else if (Global_100164 == 0)
				{
					STREAMING::ALLOW_PLAYER_SWITCH_DESCENT();
				}
			}
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
			{
				switch (STREAMING::GET_PLAYER_SHORT_SWITCH_STATE())
				{
					case 0:
						break;
					case 1:
						break;
					}
			}
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
			{
				if (STREAMING::GET_PLAYER_SHORT_SWITCH_STATE() >= 1)
				{
					if (!uParam0->f_18)
					{
						__LIB_13__::func_788();
						uParam0->f_18 = 1;
					}
					if (!uParam0->f_22)
					{
						__LIB_16__::func_876(0, 1);
						uParam0->f_22 = 1;
					}
				}
			}
			else
			{
				if (STREAMING::GET_PLAYER_SWITCH_STATE() >= 8)
				{
					if (!uParam0->f_18)
					{
						__LIB_13__::func_788();
						uParam0->f_18 = 1;
					}
				}
				if (!uParam0->f_18)
				{
					if (STREAMING::IS_SWITCH_SKIPPING_DESCENT() && STREAMING::GET_PLAYER_SWITCH_STATE() == 3)
					{
						Var2 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
						Var3 = { CAM::GET_FINAL_RENDERED_CAM_COORD() };
						fVar4 = 20f;
						fVar5 = SYSTEM::VDIST2(Var2, Var3);
						if (fVar5 < (fVar4 * fVar4))
						{
							__LIB_13__::func_788();
							uParam0->f_18 = 1;
						}
					}
				}
				if (!uParam0->f_22)
				{
					if (STREAMING::GET_PLAYER_SWITCH_STATE() > 2)
					{
						__LIB_16__::func_876(0, 1);
						uParam0->f_22 = 1;
					}
				}
				if (!uParam0->f_23)
				{
					if (STREAMING::GET_PLAYER_SWITCH_STATE() >= 3)
					{
						GRAPHICS::CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE("CSM_ST_BOX3x3");
						uParam0->f_23 = 1;
					}
				}
			}
		}
		else
		{
			if (!uParam0->f_18)
			{
				uParam0->f_18 = 1;
				__LIB_13__::func_788();
			}
			if (!uParam0->f_22)
			{
				__LIB_16__::func_876(0, 1);
				uParam0->f_22 = 1;
			}
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_17)
	{
		iVar6 = __LIB_15__::func_933();
		if (((iVar6 != 8 && iVar6 != 9) && iVar6 != 10) && iVar6 != 55)
		{
			__LIB_0__::func_671(uParam0->f_21);
		}
		if (uParam0->f_23)
		{
			GRAPHICS::CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE();
			uParam0->f_23 = 0;
		}
		uParam0->f_16 = 0;
		uParam0->f_17 = 0;
		uParam0->f_18 = 0;
		uParam0->f_19 = 0;
		uParam0->f_20 = 0;
		uParam0->f_24 = 0;
		uParam0->f_27 = 0;
		if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_109);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
			Global_23011.f_109 = -1;
			Global_23011.f_110 = 0;
		}
		if (AUDIO::IS_AUDIO_SCENE_ACTIVE("CHARACTER_CHANGE_IN_SKY_SCENE"))
		{
			AUDIO::STOP_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
		}
		if (Global_23011.f_107 != -1 && Global_23011.f_108 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_107);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_107);
			Global_23011.f_107 = -1;
			Global_23011.f_108 = 0;
		}
		if (fParam5 <= 360f && fParam5 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam5);
		}
		if (fParam4 <= 360f && fParam4 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam4, 1f);
		}
		if (!Global_44203)
		{
			CAM::STOP_GAMEPLAY_CAM_SHAKING(true);
			CAM::SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(0f);
			CAM::SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(0f);
		}
		if (!bParam10)
		{
			if (!PED::IS_PED_INJURED(uParam0->f_13))
			{
				ENTITY::SET_ENTITY_VISIBLE(uParam0->f_13, true, false);
				PED::SET_PED_CAN_BE_TARGETTED(uParam0->f_13, true);
				if (!PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_13, false))
				{
					ENTITY::SET_ENTITY_COLLISION(uParam0->f_13, true, false);
				}
				if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_13))
				{
					iVar7 = PED::GET_VEHICLE_PED_IS_IN(uParam0->f_13, false);
					__LIB_15__::func_892(iVar7, 1);
				}
			}
		}
		__LIB_0__::func_986(0);
		if (!bParam10)
		{
			if (!PED::IS_PED_INJURED(uParam0->f_13) || bParam10)
			{
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, false);
			}
			if (!PED::IS_PED_INJURED(uParam0->f_12))
			{
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, false);
			}
			PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
			__LIB_15__::func_890();
			GRAPHICS::SET_CURRENT_PLAYER_TCMODIFIER(__LIB_16__::func_12(__LIB_17__::func_341()));
		}
		__LIB_7__::func_703(0);
		HUD::SET_MINIMAP_IN_SPECTATOR_MODE(false, 0);
		return 0;
	}
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	return 1;
}

int func_627(var uParam0, float fParam1, float fParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x70924
{
	bool bVar0;
	int iVar1;
	int iVar2;
	float fVar3;
	float fVar4;
	float fVar5;
	bool bVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	struct<3> Var10;
	struct<3> Var11;
	struct<3> Var12;
	struct<3> Var13;
	struct<3> Var14;
	float fVar15;
	float fVar16;
	bool bVar17;
	float fVar18;
	int iVar19;
	struct<3> Var20;
	struct<3> Var21;
	if (!uParam0->f_15)
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_INJURED(uParam0->f_12))
		{
			uParam0->f_27 = 0;
			Var13 = { ENTITY::GET_ENTITY_COORDS(uParam0->f_12, true) };
			Var14 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
			fVar15 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var14, Var13, false);
			fVar16 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var14, Var13, true);
			if (iParam3 == 0)
			{
				if (fVar16 < 8f)
				{
					uParam0->f_14 = 1;
				}
				else if (fVar15 < 30f)
				{
					uParam0->f_14 = 2;
				}
				else
				{
					uParam0->f_14 = 3;
				}
			}
			else
			{
				uParam0->f_14 = iParam3;
			}
			if (!CAM::DOES_CAM_EXIST(uParam0->f_9))
			{
				uParam0->f_9 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
			}
			iVar1 = 0;
			while (iVar1 <= 7)
			{
				if (CAM::DOES_CAM_EXIST((*uParam0)[iVar1]))
				{
					CAM::DESTROY_CAM((*uParam0)[iVar1], false);
				}
				iVar1++;
			}
			switch (uParam0->f_14)
			{
				case 1:
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						iVar8 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						bVar6 = true;
					}
					if (PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_12, false))
					{
						iVar9 = PED::GET_VEHICLE_PED_IS_USING(uParam0->f_12);
						bVar7 = true;
						fVar5 = ENTITY::GET_ENTITY_HEADING(iVar9);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					else
					{
						fVar5 = ENTITY::GET_ENTITY_HEADING(uParam0->f_12);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					Var10 = { CAM::GET_FINAL_RENDERED_CAM_ROT(2) };
					uParam0->f_24 = 0;
					CAM::SET_CAM_FOV(uParam0->f_9, CAM::GET_FINAL_RENDERED_CAM_FOV());
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar8, CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Var11, true);
					}
					else
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), Var11, true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], Var10, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 0, 1);
					uParam0->f_24++;
					uParam0->f_27 = uParam0->f_27;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, __LIB_17__::func_429(uParam0->f_12), true);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, __LIB_17__::func_429(uParam0->f_12), true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -0.951428f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], iParam6, 1);
					uParam0->f_24++;
					uParam0->f_27 = (uParam0->f_27 + iParam6);
					uParam0->f_15 = 1;
					break;
				case 2:
					if (Var14.f_2 > Var13.f_2)
					{
						fVar4 = __LIB_3__::func_480((Var14.f_2 + 5f), (Var13.f_2 + fVar15));
					}
					else
					{
						fVar4 = __LIB_3__::func_480((Var13.f_2 + 5f), (Var14.f_2 + fVar15));
					}
					fVar3 = 10f;
					Var12 = { Var13 - Var14 };
					Var12.f_2 = 0f;
					Var12 = { __LIB_0__::func_952(Var12, __LIB_1__::func_712((fVar4 * MISC::TAN(fVar3)), (fVar15 / 3f))) };
					iVar2 = SYSTEM::ROUND(((fVar16 / ((30f - 7.5f) / (800f - 200f))) + 500f));
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						iVar8 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						bVar6 = true;
					}
					if (PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_12, false))
					{
						iVar9 = PED::GET_VEHICLE_PED_IS_USING(uParam0->f_12);
						bVar7 = true;
						fVar5 = ENTITY::GET_ENTITY_HEADING(iVar9);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					else
					{
						fVar5 = ENTITY::GET_ENTITY_HEADING(uParam0->f_12);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					Var10 = { CAM::GET_FINAL_RENDERED_CAM_ROT(2) };
					uParam0->f_24 = 0;
					CAM::SET_CAM_FOV(uParam0->f_9, CAM::GET_FINAL_RENDERED_CAM_FOV());
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar8, CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Var11, true);
					}
					else
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), Var11, true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], Var10, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 0, 1);
					uParam0->f_24++;
					uParam0->f_27 = uParam0->f_27;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar8, CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Var11 + Vector(15f, 0f, 0f), true);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), 0f, 0f, 5f, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, Var10.f_2, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Vector(fVar4, 0f, 0f) + Var12, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), Vector(fVar4, 0f, 0f) + Var12, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, Var10.f_2, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, Vector(fVar4, 0f, 0f) - Var12, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, Vector(fVar4, 0f, 0f) - Var12, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], iVar2, 1);
					uParam0->f_24++;
					uParam0->f_27 = (uParam0->f_27 + iVar2);
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, 0f, 0f, 15f, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, 0f, 0f, 5f, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, __LIB_17__::func_429(uParam0->f_12), true);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, __LIB_17__::func_429(uParam0->f_12), true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -0.951428f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					uParam0->f_15 = 1;
					break;
				case 3:
					fVar4 = 450f;
					if (Var14.f_2 > Var13.f_2)
					{
						fVar4 = __LIB_3__::func_480(fVar4, (Var14.f_2 + 25f));
					}
					else
					{
						fVar4 = __LIB_3__::func_480(fVar4, (Var13.f_2 + 25f));
					}
					fVar3 = 20f;
					Var12 = { Var13 - Var14 };
					Var12.f_2 = 0f;
					Var12 = { __LIB_0__::func_952(Var12, __LIB_1__::func_712((fVar4 * MISC::TAN(fVar3)), (fVar15 / 3f))) };
					fVar16 = __LIB_0__::func_331(fVar16, 50f, 4000f);
					iVar2 = SYSTEM::ROUND(((fVar16 / ((4000f - 50f) / (2000f - 1000f))) + 1000f));
					if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
					{
						iVar8 = PED::GET_VEHICLE_PED_IS_USING(PLAYER::PLAYER_PED_ID());
						bVar6 = true;
					}
					if (PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_12, false))
					{
						iVar9 = PED::GET_VEHICLE_PED_IS_USING(uParam0->f_12);
						bVar7 = true;
						fVar5 = ENTITY::GET_ENTITY_HEADING(iVar9);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					else
					{
						fVar5 = ENTITY::GET_ENTITY_HEADING(uParam0->f_12);
						if (fVar5 > 180f)
						{
							fVar5 = (fVar5 - 360f);
						}
					}
					Var10 = { CAM::GET_FINAL_RENDERED_CAM_ROT(2) };
					uParam0->f_24 = 0;
					CAM::SET_CAM_FOV(uParam0->f_9, CAM::GET_FINAL_RENDERED_CAM_FOV());
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar8, CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Var11, true);
					}
					else
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), Var11, true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], Var10, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 0, 1);
					uParam0->f_24++;
					uParam0->f_27 = uParam0->f_27;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						Var11 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar8, CAM::GET_FINAL_RENDERED_CAM_COORD()) };
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Var11 + Vector(15f, 0f, 0f), true);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), 0f, 0f, 5f, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, Var10.f_2, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar6)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar8, Vector(fVar4, 0f, 0f) + Var12, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], PLAYER::PLAYER_PED_ID(), Vector(fVar4, 0f, 0f) + Var12, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, Var10.f_2, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 800, 1);
					uParam0->f_24++;
					uParam0->f_27 += 800;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, Vector(fVar4, 0f, 0f) - Var12, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, Vector(fVar4, 0f, 0f) - Var12, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], iVar2, 1);
					uParam0->f_24++;
					uParam0->f_27 = (uParam0->f_27 + iVar2);
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, 0f, 0f, 15f, false);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, 0f, 0f, 5f, false);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -87.5f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 800, 1);
					uParam0->f_24++;
					uParam0->f_27 += 800;
					if (!CAM::DOES_CAM_EXIST((*uParam0)[uParam0->f_24]))
					{
						(*uParam0)[uParam0->f_24] = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", false);
					}
					if (bVar7)
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], iVar9, __LIB_17__::func_429(uParam0->f_12), true);
					}
					else
					{
						CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[uParam0->f_24], uParam0->f_12, __LIB_17__::func_429(uParam0->f_12), true);
					}
					CAM::SET_CAM_ROT((*uParam0)[uParam0->f_24], -0.951428f, 0f, fVar5, 2);
					CAM::SET_CAM_FOV((*uParam0)[uParam0->f_24], CAM::GET_FINAL_RENDERED_CAM_FOV());
					CAM::ADD_CAM_SPLINE_NODE_USING_CAMERA(uParam0->f_9, (*uParam0)[uParam0->f_24], 400, 1);
					uParam0->f_24++;
					uParam0->f_27 += 400;
					uParam0->f_15 = 1;
					break;
			}
		}
		else
		{
			if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
			{
			}
			else if (PED::IS_PED_INJURED(uParam0->f_12))
			{
			}
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_15 && !uParam0->f_16)
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_9))
		{
			if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !PED::IS_PED_INJURED(uParam0->f_12))
			{
				uParam0->f_13 = PLAYER::PLAYER_PED_ID();
				PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), false, 0);
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, true);
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, true);
				uParam0->f_21 = __LIB_1__::func_861();
				__LIB_0__::func_671(1);
				if (uParam0->f_24 > 0)
				{
					iVar1 = 0;
					while (iVar1 <= (uParam0->f_24 - 1))
					{
						CAM::SET_CAM_ACTIVE((*uParam0)[iVar1], true);
						iVar1++;
					}
				}
				__LIB_16__::func_876(0, 1);
				CAM::SET_CAM_ACTIVE(uParam0->f_9, true);
				if (iParam5 == 0)
				{
					CAM::RENDER_SCRIPT_CAMS(true, false, 3000, true, false, 0);
				}
				else if (iParam5 > 0)
				{
					CAM::RENDER_SCRIPT_CAMS(true, true, iParam5, true, false, 0);
				}
				if (!Global_23011.f_111)
				{
					if (uParam0->f_14 == 3)
					{
						AUDIO::PLAY_SOUND(-1, "CHARACTER_CHANGE_UP_MASTER", 0, false, 0, true);
						if (Global_23011.f_109 == -1)
						{
							Global_23011.f_109 = AUDIO::GET_SOUND_ID();
							Global_23011.f_110 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
						}
						AUDIO::PLAY_SOUND(Global_23011.f_109, "CHARACTER_CHANGE_SKY_MASTER", 0, false, 0, true);
						AUDIO::START_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
						if (AUDIO::IS_AUDIO_SCENE_ACTIVE("CHARACTER_CHANGE_IN_SKY_SCENE"))
						{
						}
					}
					else if (uParam0->f_14 == 2)
					{
						if (Global_23011.f_109 == -1)
						{
							Global_23011.f_109 = AUDIO::GET_SOUND_ID();
							Global_23011.f_110 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
						}
						AUDIO::PLAY_SOUND(Global_23011.f_109, "All", "SHORT_PLAYER_SWITCH_SOUND_SET", false, 0, true);
					}
				}
				uParam0->f_28 = __LIB_16__::func_862(uParam0->f_9);
				uParam0->f_25 = MISC::GET_GAME_TIMER();
				uParam0->f_16 = 1;
				__LIB_7__::func_703(1);
				if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(0))
				{
					GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(0));
				}
				else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(2))
				{
					GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(2));
				}
				else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_16__::func_512(1))
				{
					GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_16__::func_12(1));
				}
				else
				{
					GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
				}
				GRAPHICS::SET_PLAYER_TCMODIFIER_TRANSITION(0f);
			}
			else
			{
				uParam0->f_17 = 1;
			}
		}
		else
		{
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_16)
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_9))
		{
			GRAPHICS::SET_PLAYER_TCMODIFIER_TRANSITION(CAM::GET_CAM_SPLINE_PHASE(uParam0->f_9));
			bVar17 = true;
			if (uParam0->f_24 > 0)
			{
				iVar1 = 0;
				while (iVar1 <= (uParam0->f_24 - 1))
				{
					if (!CAM::DOES_CAM_EXIST((*uParam0)[iVar1]))
					{
						bVar17 = false;
					}
					iVar1++;
				}
			}
			if (bVar17)
			{
				if (CAM::IS_CAM_INTERPOLATING(uParam0->f_9))
				{
					if (!Global_23011.f_111)
					{
						if (uParam0->f_14 == 3)
						{
							fVar18 = __LIB_16__::func_862(uParam0->f_9);
							if (fVar18 > uParam0->f_28)
							{
								uParam0->f_28 = fVar18;
							}
							else if (uParam0->f_28 > (fVar18 + 1f))
							{
								if (Global_23011.f_107 == -1)
								{
									Global_23011.f_107 = AUDIO::GET_SOUND_ID();
									Global_23011.f_108 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
									AUDIO::PLAY_SOUND(Global_23011.f_107, "CHARACTER_CHANGE_DOWN_MASTER", 0, false, 0, true);
								}
								if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
								{
									AUDIO::STOP_SOUND(Global_23011.f_109);
									AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
									Global_23011.f_109 = -1;
									Global_23011.f_110 = 0;
									AUDIO::STOP_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
								}
							}
						}
					}
					if (CAM::GET_CAM_SPLINE_PHASE(uParam0->f_9) > 0.5f && CAM::IS_CAM_RENDERING(uParam0->f_9))
					{
						uParam0->f_18 = 1;
					}
					if (uParam0->f_18)
					{
						if (PLAYER::PLAYER_PED_ID() == uParam0->f_12)
						{
							if (!PED::IS_PED_INJURED(uParam0->f_12))
							{
								if (uParam0->f_24 >= 1)
								{
									if (CAM::DOES_CAM_EXIST((*uParam0)[(uParam0->f_24 - 1)]))
									{
										if (PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_12, false))
										{
											iVar19 = PED::GET_VEHICLE_PED_IS_USING(uParam0->f_12);
											Var20 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(iVar19, CAM::GET_GAMEPLAY_CAM_COORD()) };
											CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[(uParam0->f_24 - 1)], iVar19, Var20, true);
										}
										else
										{
											Var21 = { ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(uParam0->f_12, CAM::GET_GAMEPLAY_CAM_COORD()) };
											CAM::ATTACH_CAM_TO_ENTITY((*uParam0)[(uParam0->f_24 - 1)], uParam0->f_12, Var21, true);
										}
										CAM::SET_CAM_ROT((*uParam0)[(uParam0->f_24 - 1)], CAM::GET_GAMEPLAY_CAM_ROT(2), 2);
										CAM::SET_CAM_FOV((*uParam0)[(uParam0->f_24 - 1)], CAM::GET_GAMEPLAY_CAM_FOV());
										bVar0 = true;
									}
								}
							}
						}
					}
				}
				else if (!uParam0->f_18)
				{
					uParam0->f_18 = 1;
				}
				else
				{
					uParam0->f_17 = 1;
				}
			}
		}
		else
		{
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_17)
	{
		if (CAM::DOES_CAM_EXIST(uParam0->f_9))
		{
			CAM::DESTROY_CAM(uParam0->f_9, false);
		}
		if (uParam0->f_24 > 0)
		{
			iVar1 = 0;
			while (iVar1 <= (uParam0->f_24 - 1))
			{
				if (CAM::DOES_CAM_EXIST((*uParam0)[iVar1]))
				{
					CAM::DESTROY_CAM((*uParam0)[iVar1], false);
				}
				iVar1++;
			}
		}
		__LIB_0__::func_671(uParam0->f_21);
		uParam0->f_15 = 0;
		uParam0->f_16 = 0;
		uParam0->f_17 = 0;
		uParam0->f_18 = 0;
		uParam0->f_19 = 0;
		uParam0->f_20 = 0;
		uParam0->f_24 = 0;
		uParam0->f_27 = 0;
		if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_109);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
			Global_23011.f_109 = -1;
			Global_23011.f_110 = 0;
		}
		if (Global_23011.f_107 != -1 && Global_23011.f_108 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_107);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_107);
			Global_23011.f_107 = -1;
			Global_23011.f_108 = 0;
		}
		if (fParam2 <= 360f && fParam2 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam2);
		}
		if (fParam1 <= 360f && fParam1 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam1, 1f);
		}
		if (!Global_44203)
		{
			CAM::STOP_GAMEPLAY_CAM_SHAKING(true);
			CAM::SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(0f);
			CAM::SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(0f);
		}
		if (iParam4 == -1)
		{
			if (bVar0)
			{
				CAM::RENDER_SCRIPT_CAMS(false, true, 100, true, false, 0);
			}
			else
			{
				CAM::RENDER_SCRIPT_CAMS(false, true, 1000, true, false, 0);
			}
		}
		else if (iParam4 == 0)
		{
			CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
		}
		else
		{
			CAM::RENDER_SCRIPT_CAMS(false, true, iParam4, true, false, 0);
		}
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
			ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), true, false);
			PED::SET_PED_CAN_BE_TARGETTED(PLAYER::PLAYER_PED_ID(), true);
			if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
			{
				ENTITY::SET_ENTITY_COLLISION(PLAYER::PLAYER_PED_ID(), true, false);
			}
		}
		__LIB_0__::func_986(0);
		if (!PED::IS_PED_INJURED(uParam0->f_13))
		{
			ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, false);
		}
		if (!PED::IS_PED_INJURED(uParam0->f_12))
		{
			ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, false);
		}
		GRAPHICS::SET_CURRENT_PLAYER_TCMODIFIER(__LIB_16__::func_12(__LIB_17__::func_341()));
		__LIB_7__::func_703(0);
		return 0;
	}
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	return 1;
}

void func_628(int iParam0, int iParam1)//Position - 0x15AFD
{
	if (!__LIB_0__::func_43(iParam0))
	{
		return;
	}
	Global_113386.f_2363.f_539.f_2332[iParam0] = iParam1;
}

void func_629(int iParam0)//Position - 0x34D62
{
	float fVar0;
	int iVar1;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!PED::IS_PED_INJURED(iVar1))
		{
			if (!iVar1 == PLAYER::PLAYER_PED_ID())
			{
				fVar0 = ENTITY::GET_ENTITY_SPEED(iParam0);
				if (fVar0 < 8f)
				{
					fVar0 = 8f;
				}
				if (fVar0 > 62.9f)
				{
					fVar0 = 62.9f;
				}
				TASK::TASK_VEHICLE_MISSION(iVar1, iParam0, 0, 1, fVar0, 786603, 5f, 5f, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 8192, true);
				if (bLocal_82)
				{
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 65536, true);
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 2, false);
				}
				PED::SET_PED_COMBAT_ATTRIBUTES(iVar1, 6, false);
			}
		}
	}
}

void func_630(var uParam0)//Position - 0x8A22D
{
	__LIB_17__::func_469(uParam0);
}

void func_631(int iParam0)//Position - 0x85C4A
{
	int iVar0;
	iVar0 = __LIB_0__::func_216(iParam0);
	if (__LIB_0__::func_43(iVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		PED::ADD_ARMOUR_TO_PED(iParam0, (Global_113386.f_2363.f_539.f_294[iVar0] - PED::GET_PED_ARMOUR(iParam0)));
	}
}

int func_632(var uParam0)//Position - 0x88ED5
{
	if (__LIB_17__::func_469(uParam0))
	{
		return 1;
	}
	return 0;
}

bool func_633(var uParam0, char* sParam1, char* sParam2, char* sParam3, char* sParam4, char* sParam5, int iParam6, int iParam7, int iParam8)//Position - 0x1462F
{
	var uVar0;
	var uVar1;
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam7, iParam8, 0);
	if (iParam6 > 7)
	{
		if (iParam6 < 12)
		{
			iParam6 = 7;
		}
	}
	uVar0 = 10;
	uVar1 = 10;
	__LIB_16__::func_906(2, &uVar0, &uVar1, sParam2, sParam3, sParam4, sParam5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	return __LIB_16__::func_610(&uVar0, &uVar1, iParam6, 0);
}

int func_634(var uParam0, var uParam1, bool bParam2, bool bParam3, bool bParam4, bool bParam5, bool bParam6)//Position - 0x8A948
{
	int iVar0;
	float fVar1;
	int iVar2;
	float fVar3;
	int iVar4;
	float fVar5;
	uParam0->f_7 = *uParam1;
	uParam0->f_8 = uParam1->f_1;
	if ((__LIB_0__::func_2(0) && !bParam2) && !bParam4)
	{
		if (uParam0->f_5)
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_7, 0, 0);
		}
		else
		{
			CLOCK::SET_CLOCK_TIME(uParam0->f_8, 0, 0);
		}
		return 1;
	}
	if (uParam0->f_2 == 0)
	{
		if (uParam0->f_7 != -1 && uParam0->f_8 != -1)
		{
			if (bParam2 || !__LIB_13__::func_692(uParam0->f_8, uParam0->f_7))
			{
				if (AUDIO::REQUEST_AMBIENT_AUDIO_BANK("TIME_LAPSE", false, -1))
				{
					uParam0->f_6 = 0;
					uParam0->f_2 = 1;
				}
			}
			else
			{
				uParam0->f_2 = -1;
				return 1;
			}
		}
		else
		{
			uParam0->f_2 = -1;
			return 1;
		}
	}
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
	PED::SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(0f);
	if (uParam0->f_2 == 1)
	{
		if (bParam2)
		{
			CAM::DESTROY_CAM(uParam0->f_4, false);
			uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
			CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			if (uParam1->f_17 < 0)
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
			}
			else
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			}
			CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
			CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
			if (!bParam6)
			{
				if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
				{
					ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
				}
				iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
					}
					ENTITY::SET_ENTITY_VISIBLE(iVar0, false, false);
				}
			}
			fVar1 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
			INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
			MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar1, 0);
			GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar1);
			GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar1);
			if (bParam3)
			{
				MISC::CLEAR_AREA(uParam1->f_2, 5000f, true, true, false, false);
			}
			__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 0, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
			__LIB_17__::func_455(uParam0, 1, 0, 2000, 1, 1, 0, 1);
			uParam0->f_2 = 2;
		}
		else if (!__LIB_13__::func_692(uParam0->f_7, uParam0->f_8))
		{
			if (uParam0->f_5)
			{
				CAM::DESTROY_CAM(uParam0->f_4, false);
				uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				if (uParam1->f_17 < 0)
				{
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
				}
				else
				{
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				}
				CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
				CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
				if (!bParam6)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
					}
					iVar2 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
					if (ENTITY::DOES_ENTITY_EXIST(iVar2))
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar2))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar2, true, false);
						}
						ENTITY::SET_ENTITY_VISIBLE(iVar2, false, false);
					}
				}
				fVar3 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
				INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
				MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar3, 0);
				GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar3);
				GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar3);
				if (bParam3)
				{
					MISC::CLEAR_AREA(uParam1->f_2, 5000f, true, true, false, false);
				}
				__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 8, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
				__LIB_17__::func_455(uParam0, 1, 0, 2000, 1, 1, 0, 1);
				uParam0->f_2 = 2;
			}
			else
			{
				AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
				uParam0->f_2 = -1;
				return 1;
			}
		}
		else if (!uParam0->f_5)
		{
			CAM::DESTROY_CAM(uParam0->f_4, false);
			uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
			CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			if (uParam1->f_17 < 0)
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
			}
			else
			{
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
			}
			CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
			CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
			CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
			if (!bParam6)
			{
				if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
				{
					ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), false, false);
				}
				iVar4 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
				if (ENTITY::DOES_ENTITY_EXIST(iVar4))
				{
					if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar4))
					{
						ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar4, true, false);
					}
					ENTITY::SET_ENTITY_VISIBLE(iVar4, false, false);
				}
			}
			fVar5 = CAM::GET_CAM_FAR_CLIP(uParam0->f_4);
			INTERIOR::CLEAR_ROOM_FOR_GAME_VIEWPORT();
			MISC::CLEAR_AREA_OF_COPS(uParam1->f_2, fVar5, 0);
			GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(uParam1->f_2, fVar5);
			GRAPHICS::REMOVE_DECALS_IN_RANGE(uParam1->f_2, fVar5);
			if (bParam3)
			{
				MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
			}
			__LIB_8__::func_909(&(uParam0->f_1), 0, 0, 0, CLOCK::GET_CLOCK_DAY_OF_MONTH(), CLOCK::GET_CLOCK_MONTH(), CLOCK::GET_CLOCK_YEAR());
			__LIB_17__::func_455(uParam0, 1, 0, 2000, 1, 1, 0, 1);
			uParam0->f_2 = 2;
		}
		else
		{
			AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK("TIME_LAPSE");
			uParam0->f_2 = -1;
			return 1;
		}
	}
	if (uParam0->f_2 == 2)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (!uParam0->f_5)
		{
			if (__LIB_16__::func_624(uParam0->f_8, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, -1082130432, 0, 1, 1065353216))
			{
				if (uParam1->f_17 < 0)
				{
					uParam0->f_9 = MISC::GET_GAME_TIMER();
					uParam0->f_2 = 3;
				}
				else
				{
					uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
					CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
					CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
					CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
					CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
					uParam0->f_9 = MISC::GET_GAME_TIMER();
					uParam0->f_2 = 22;
				}
			}
		}
		else if (__LIB_16__::func_624(uParam0->f_7, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, -1082130432, 0, 1, 1065353216))
		{
			if (uParam1->f_17 < 0)
			{
				uParam0->f_9 = MISC::GET_GAME_TIMER();
				uParam0->f_2 = 3;
			}
			else
			{
				uParam0->f_4 = CAM::CREATE_CAM("DEFAULT_SPLINE_CAMERA", false);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_2, uParam1->f_5, uParam1->f_15, 3, 2);
				CAM::ADD_CAM_SPLINE_NODE(uParam0->f_4, uParam1->f_8, uParam1->f_11, uParam1->f_15, 3, 2);
				CAM::SET_CAM_FOV(uParam0->f_4, uParam1->f_14);
				CAM::SET_CAM_SPLINE_SMOOTHING_STYLE(uParam0->f_4, 3);
				CAM::SET_CAM_ACTIVE(uParam0->f_4, true);
				uParam0->f_9 = MISC::GET_GAME_TIMER();
				uParam0->f_2 = 22;
			}
		}
		if (!bParam5)
		{
			if (__LIB_0__::func_645(1000) || uParam0->f_6)
			{
				uParam0->f_6 = 1;
				if (!CAM::IS_SCREEN_FADING_OUT())
				{
					CAM::DO_SCREEN_FADE_OUT(250);
				}
				if (!CAM::IS_SCREEN_FADED_OUT())
				{
					HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
					return 0;
				}
				if (uParam0->f_3 != 0)
				{
					__LIB_16__::func_624(uParam0->f_7, 0, &(uParam1->f_18), &(uParam1->f_22), uParam0, 1f, 0, 1, 1065353216);
				}
				uParam0->f_2 = 4;
			}
		}
	}
	if (uParam0->f_2 == 22)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (CAM::DOES_CAM_EXIST(uParam0->f_4) && CAM::IS_CAM_INTERPOLATING(uParam0->f_4))
		{
		}
		else
		{
			uParam0->f_9 = MISC::GET_GAME_TIMER();
			uParam0->f_2 = 3;
		}
		if (!bParam5)
		{
			if (__LIB_0__::func_645(1000) || uParam0->f_6)
			{
				uParam0->f_6 = 1;
				if (!CAM::IS_SCREEN_FADING_OUT())
				{
					CAM::DO_SCREEN_FADE_OUT(250);
				}
				if (!CAM::IS_SCREEN_FADED_OUT())
				{
					HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
					HUD::HIDE_HUD_COMPONENT_THIS_FRAME(7);
					return 0;
				}
				uParam0->f_2 = 4;
			}
		}
	}
	if (uParam0->f_2 == 3)
	{
		if (bParam3)
		{
			MISC::CLEAR_AREA(uParam1->f_2, 5000f, false, true, false, false);
		}
		if (uParam0->f_9 + 1000 > MISC::GET_GAME_TIMER())
		{
			uParam0->f_2 = 4;
		}
	}
	if (uParam0->f_2 == 4)
	{
		uParam0->f_6 = 0;
		uParam0->f_2 = -1;
		return 1;
	}
	if (uParam0->f_2 == -1)
	{
		return 1;
	}
	return 0;
}

void func_635(struct<3> Param0, float fParam1, int iParam2, int iParam3)//Position - 0x3A9A4
{
	struct<3> Var0;
	var uVar1;
	if (ENTITY::DOES_ENTITY_EXIST(Global_103950.f_4))
	{
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(Global_103950.f_4, false))
		{
			if (__LIB_0__::func_343(24) != Global_103950.f_4)
			{
				if (iParam2 == 1)
				{
					if (__LIB_14__::func_665(ENTITY::GET_ENTITY_COORDS(Global_103950.f_4, true), iParam3, &Var0, &uVar1))
					{
						Param0 = { Var0 };
						fParam1 = uVar1;
					}
				}
				__LIB_17__::func_224(Global_103950.f_4, Param0, fParam1, 24, 0);
			}
		}
	}
}

void func_636(var uParam0, char* sParam1, var uParam2, var uParam3, int iParam4, int iParam5)//Position - 0xA57D
{
	int iVar0;
	int iVar1;
	*uParam0 = __LIB_0__::func_683();
	uParam0->f_1 = __LIB_11__::func_762();
	MISC::GET_CURR_WEATHER_STATE(&(uParam0->f_6), &(uParam0->f_7), &(uParam0->f_8));
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		__LIB_14__::func_572(&(uParam0->f_2884), 0);
		__LIB_0__::func_780(PLAYER::PLAYER_PED_ID());
		__LIB_17__::func_222(PLAYER::PLAYER_PED_ID(), 0);
		WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &(uParam0->f_2), true);
		if (uParam0->f_2 == 0 || uParam0->f_2 == joaat("OBJECT"))
		{
			uParam0->f_2 = joaat("WEAPON_UNARMED");
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		uParam0->f_17[iVar1] = Global_113386.f_2363.f_539.f_294[iVar1];
		if (iVar1 == __LIB_0__::func_683())
		{
			__LIB_14__::func_529(PLAYER::PLAYER_PED_ID(), &(uParam0->f_616[iVar1 /*65*/]), 1, -1);
		}
		else
		{
			iVar0 = 0;
			while (iVar0 < 12)
			{
				uParam0->f_616[iVar1 /*65*/][iVar0] = Global_100166[iVar1 /*65*/][iVar0];
				uParam0->f_616[iVar1 /*65*/].f_13[iVar0] = Global_100166[iVar1 /*65*/].f_13[iVar0];
				iVar0++;
			}
			uParam0->f_616[iVar1 /*65*/].f_59 = Global_100166[iVar1 /*65*/].f_59;
			uParam0->f_616[iVar1 /*65*/].f_60 = Global_100166[iVar1 /*65*/].f_60;
			uParam0->f_616[iVar1 /*65*/].f_61 = Global_100166[iVar1 /*65*/].f_61;
			uParam0->f_616[iVar1 /*65*/].f_62 = Global_100166[iVar1 /*65*/].f_62;
			uParam0->f_616[iVar1 /*65*/].f_63 = Global_100166[iVar1 /*65*/].f_63;
			uParam0->f_616[iVar1 /*65*/].f_64 = Global_100166[iVar1 /*65*/].f_64;
			iVar0 = 0;
			while (iVar0 < 9)
			{
				uParam0->f_616[iVar1 /*65*/].f_39[iVar0] = Global_100166[iVar1 /*65*/].f_39[iVar0];
				uParam0->f_616[iVar1 /*65*/].f_49[iVar0] = Global_100166[iVar1 /*65*/].f_49[iVar0];
				iVar0++;
			}
		}
		iVar0 = 0;
		while (iVar0 < 44)
		{
			uParam0->f_812[iVar1 /*477*/][iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/][iVar0 /*5*/] };
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 < 51)
		{
			uParam0->f_812[iVar1 /*477*/].f_221[iVar0 /*5*/] = { Global_113386.f_2363.f_539.f_298[iVar1 /*477*/].f_221[iVar0 /*5*/] };
			iVar0++;
		}
		switch (iVar1)
		{
			case 0:
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP0_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 1:
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP1_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
			case 2:
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/][0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/][1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_5[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_5[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_5[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_5[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_5[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_0"), &(uParam0->f_2244[iVar1 /*32*/].f_16[0]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_1"), &(uParam0->f_2244[iVar1 /*32*/].f_16[1]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_2"), &(uParam0->f_2244[iVar1 /*32*/].f_16[2]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_3"), &(uParam0->f_2244[iVar1 /*32*/].f_16[3]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_4"), &(uParam0->f_2244[iVar1 /*32*/].f_16[4]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_5"), &(uParam0->f_2244[iVar1 /*32*/].f_16[5]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_6"), &(uParam0->f_2244[iVar1 /*32*/].f_16[6]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_7"), &(uParam0->f_2244[iVar1 /*32*/].f_16[7]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_8"), &(uParam0->f_2244[iVar1 /*32*/].f_16[8]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_9"), &(uParam0->f_2244[iVar1 /*32*/].f_16[9]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_10"), &(uParam0->f_2244[iVar1 /*32*/].f_16[10]), -1);
				STATS::STAT_GET_INT(joaat("SP2_WEAP_TINT_PURCH_11"), &(uParam0->f_2244[iVar1 /*32*/].f_16[11]), -1);
				break;
		}
		uParam0->f_9[iVar1] = Global_113386.f_20564.f_233[iVar1 /*69*/].f_1;
		uParam0->f_13[iVar1] = Global_60328_SPN_TOTAL_CASH[iVar1];
		uParam0->f_25[0 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[0 /*295*/][iVar1 /*98*/] };
		uParam0->f_25[1 /*295*/][iVar1 /*98*/] = { Global_113386.f_2363.f_539.f_2407[1 /*295*/][iVar1 /*98*/] };
		iVar0 = 0;
		while (iVar0 <= 3)
		{
			uParam0->f_2838[iVar1 /*15*/][iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/][iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_5[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_5[iVar0];
			uParam0->f_2838[iVar1 /*15*/].f_10[iVar0] = Global_113386.f_2363.f_493[iVar1 /*15*/].f_10[iVar0];
			iVar0++;
		}
		iVar0 = 0;
		while (iVar0 <= 2)
		{
			uParam0->f_2345[iVar1 /*164*/][iVar0] = Global_113386.f_2363[iVar1 /*164*/][iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_4[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_4[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_8[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_8[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_12[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_12[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_16[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_16[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_20[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_20[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_24[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_24[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_28[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_28[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_32[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_32[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_36[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_36[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_40[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_40[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_44[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_44[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_48[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_48[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_52[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_52[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_56[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_56[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_60[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_60[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_64[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_64[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_68[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_68[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_72[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_72[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_76[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_76[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_80[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_80[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_84[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_84[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_88[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_88[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_92[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_92[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_96[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_96[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_100[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_100[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_104[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_104[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_108[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_108[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_112[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_112[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_116[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_116[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_120[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_120[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_124[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_124[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_128[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_128[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_132[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_132[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_136[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_136[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_140[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_140[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_144[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_144[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_148[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_148[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_152[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_152[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_156[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_156[iVar0];
			uParam0->f_2345[iVar1 /*164*/].f_160[iVar0] = Global_113386.f_2363[iVar1 /*164*/].f_160[iVar0];
			iVar0++;
		}
		iVar1++;
	}
	STATS::STAT_GET_INT(joaat("SP0_SPECIAL_ABILITY"), &(uParam0->f_2341[0]), -1);
	STATS::STAT_GET_INT(joaat("SP1_SPECIAL_ABILITY"), &(uParam0->f_2341[1]), -1);
	STATS::STAT_GET_INT(joaat("SP2_SPECIAL_ABILITY"), &(uParam0->f_2341[2]), -1);
	uParam0->f_5 = 145;
	if (iParam4 == 1)
	{
		__LIB_14__::func_591(&(uParam0->f_2890), uParam0, iParam5, 1, 1, 0);
	}
	__LIB_0__::func_384(&(uParam0->f_2980));
	uParam3 = uParam3;
	uParam2 = uParam2;
}

float func_637(int iParam0)//Position - 0xDC0D
{
	struct<3> Var0;
	float fVar1;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) - ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	fVar1 = (MISC::GET_HEADING_FROM_VECTOR_2D(Var0.f_0, Var0.f_1) - ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID()));
	if (fVar1 > 180f)
	{
		fVar1 = (fVar1 - 360f);
	}
	if (fVar1 < -180f)
	{
		fVar1 = (fVar1 + 360f);
	}
	return fVar1;
}

float func_638(int iParam0)//Position - 0xDB92
{
	struct<3> Var0;
	struct<3> Var1;
	Var0 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) - ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	Var1 = { __LIB_0__::func_79(Var0) };
	return MISC::ATAN2(Var1.f_2, SYSTEM::VMAG(Var1.f_0, Var1.f_1, 0f));
}

void func_639(int iParam0)//Position - 0x72592
{
	int iVar0;
	int iVar1;
	var uVar2;
	int iVar3;
	int iVar4;
	if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), iParam0) == 1)
	{
		iVar4 = 28;
		__LIB_0__::func_603(&iVar0, &iVar1, &uVar2, &iVar3, 0);
		if (!PAD::IS_LOOK_INVERTED())
		{
			iVar3 = (iVar3 * -1);
		}
		if (((iVar1 > iVar4 || iVar1 < (iVar4 * -1)) || iVar0 > iVar4) || iVar0 < (iVar4 * -1))
		{
			TASK::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
		}
	}
}

void func_640(int iParam0)//Position - 0x738
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < 16)
	{
		if (Global_113386.f_24904[iVar0 /*4*/] == iParam0)
		{
			Global_113386.f_24904[iVar0 /*4*/] = 145;
			__LIB_1__::func_330(&(Global_113386.f_24904[iVar0 /*4*/].f_2), 4);
		}
		iVar0++;
	}
}

void func_641()//Position - 0x8256D
{
	if (__LIB_0__::func_324())
	{
		__LIB_0__::func_433(0, -1, 1);
	}
	else
	{
		ENTITY::FREEZE_ENTITY_POSITION(PLAYER::PLAYER_PED_ID(), false);
	}
}

void func_642(int iParam0, var uParam1)//Position - 0x873F9
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_0__::func_683())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_0__::func_683())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_0__::func_683() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

int func_643(char* sParam0, int iParam1)//Position - 0x81C66
{
	var uVar0;
	struct<14> Var1;
	int iVar2;
	int iVar3;
	var uVar4;
	struct<14> Var5;
	int iVar6;
	int iVar7;
	var uVar8;
	var uVar9;
	struct<14> Var10;
	struct<14> Var11;
	int iVar12;
	int iVar13;
	if (__LIB_17__::func_125(iParam1))
	{
		uVar0 = 15;
		uVar0 = { __LIB_0__::func_459(__LIB_0__::func_154(iParam1), 0) };
		iVar2 = 0;
		while (iVar2 < 15)
		{
			if (uVar0[iVar2] != -99)
			{
				Var1 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), iVar2, uVar0[iVar2], -1) };
				if (iVar2 == 14)
				{
					iVar3 = 0;
					while (iVar3 < 9)
					{
						CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar3, -1, 0, __LIB_0__::func_154(iParam1));
						iVar3++;
					}
				}
				else if (iVar2 != 12 && iVar2 != 13)
				{
					CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar2), Var1.f_3, Var1.f_4, __LIB_0__::func_154(iParam1));
				}
			}
			iVar2++;
		}
		__LIB_17__::func_628(iParam1, 0);
		return 1;
	}
	switch (iParam1)
	{
		case 0:
			if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[120] && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[122])
			{
				uVar4 = 15;
				uVar4 = { __LIB_0__::func_459(__LIB_0__::func_154(iParam1), 0) };
				iVar6 = 0;
				while (iVar6 < 15)
				{
					if (uVar4[iVar6] != -99)
					{
						Var5 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), iVar6, uVar4[iVar6], -1) };
						if (iVar6 == 14)
						{
							iVar7 = 0;
							while (iVar7 < 9)
							{
								CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar7, -1, 0, __LIB_0__::func_154(iParam1));
								iVar7++;
							}
						}
						else if (iVar6 != 12 && iVar6 != 13)
						{
							CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar6), Var5.f_3, Var5.f_4, __LIB_0__::func_154(iParam1));
						}
					}
					iVar6++;
				}
				Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[121] = 1;
			}
			break;
		case 2:
			uVar8 = 15;
			uVar9 = 15;
			Var10 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), 3, 71, -1) };
			if (Global_113386.f_2363.f_539[iParam1 /*65*/].f_13[3] == Var10.f_3)
			{
			}
			else
			{
				uVar8 = { __LIB_0__::func_459(__LIB_0__::func_154(iParam1), 10) };
				uVar9 = { __LIB_0__::func_459(__LIB_0__::func_154(iParam1), 0) };
				iVar12 = 0;
				while (iVar12 < 15)
				{
					if (uVar8[iVar12] != -99)
					{
						if (iVar12 == 14)
						{
							iVar13 = 0;
							while (iVar13 < 9)
							{
								CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar13, -1, 0, __LIB_0__::func_154(iParam1));
								iVar13++;
							}
						}
						else if (iVar12 != 12 && iVar12 != 13)
						{
							if (iVar12 == 3 || iVar12 == 4)
							{
								Var10 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), iVar12, uVar8[iVar12], -1) };
								if (Var10.f_3 == Global_113386.f_2363.f_539[iParam1 /*65*/].f_13[iVar12] && Var10.f_4 == Global_113386.f_2363.f_539[iParam1 /*65*/][iVar12])
								{
									Var11 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), iVar12, uVar9[iVar12], -1) };
									Global_113386.f_2363.f_539[iParam1 /*65*/].f_13[iVar12] = Var11.f_3;
									Global_113386.f_2363.f_539[iParam1 /*65*/][iVar12] = Var11.f_4;
									CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(iVar12), Var11.f_3, Var11.f_4, __LIB_0__::func_154(iParam1));
									if (iVar12 == 4)
									{
										Var11 = { __LIB_13__::func_798(__LIB_0__::func_154(iParam1), 6, uVar9[6], -1) };
										Global_113386.f_2363.f_539[iParam1 /*65*/].f_13[6] = Var11.f_3;
										Global_113386.f_2363.f_539[iParam1 /*65*/][6] = Var11.f_4;
										CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, __LIB_0__::func_33(6), Var11.f_3, Var11.f_4, __LIB_0__::func_154(iParam1));
									}
								}
							}
						}
					}
					iVar12++;
				}
			}
			break;
	}
	return 0;
}

int func_644(int iParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x75D9F
{
	int iVar0;
	var uVar1;
	struct<97> Var2;
	int iVar3;
	int iVar4;
	bool bVar5;
	char cVar6[16];
	int iVar7;
	if (__LIB_0__::func_43(iParam1))
	{
		Var2.f_11 = 12;
		Var2.f_31 = 49;
		Var2.f_81 = 2;
		__LIB_0__::func_120(iParam1, &Var2, iParam5);
		if (Var2.f_0 == 0)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var2.f_0)
			{
			}
			return 1;
		}
		if ((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131])
		{
			Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] = 0;
		}
		if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar3 = 0;
				while (iVar3 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar3 + 1, !Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_11[iVar3]);
					iVar3++;
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar4 = 0;
				while (iVar4 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar4 + 1, !Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_11[iVar4]);
					iVar4++;
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var2.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var2.f_0))
			{
				bVar5 = true;
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var2.f_0, Param2, fParam3, true, true, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				StringCopy(&cVar6, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0), 16);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Var2.f_5, Var2.f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Var2.f_7, Var2.f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar7 = 0;
				while (iVar7 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar7 + 1, !Var2.f_11[iVar7]);
					iVar7++;
				}
				if (Var2.f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Var2.f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Var2.f_27));
					if (Var2.f_26 >= 0 && Var2.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Var2.f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Var2.f_84, Var2.f_85, Var2.f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Var2.f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Var2.f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Var2.f_93, Var2.f_94, Var2.f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Var2.f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Var2.f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Var2.f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Var2.f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Var2.f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Var2.f_89);
				}
				if (Var2.f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Var2.f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
						}
					}
				}
				__LIB_0__::func_372(iParam0, &(Var2.f_31), &(Var2.f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 1)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bagger") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[118])
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &cVar6);
						bVar5 = false;
					}
				}
				else if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				else if (((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131]) && ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("tailgater"))
				{
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 6, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 14, 7, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 11, 2, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 2, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 7, 5, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 0, 0, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 3, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 13, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 4, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 12, 2, false);
					VEHICLE::TOGGLE_VEHICLE_MOD(*iParam0, 22, true);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, 2);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 23, 11, false);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, 2);
					Global_113386.f_2363.f_539.f_4316 = 1;
					__LIB_14__::func_774(iParam1, iParam0, 0, 1);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var2.f_0);
				}
				if (bVar5)
				{
					__LIB_14__::func_525(*iParam0, iParam1);
				}
				return 1;
			}
		}
	}
	return 0;
}

void func_645(var uParam0)//Position - 0x976EC
{
	uParam0->f_43 = 0;
}

void func_646(int iParam0)//Position - 0x14AD0
{
	if (iParam0 != 24 && iParam0 != 25)
	{
	}
	__LIB_17__::func_511(iParam0);
	__LIB_0__::func_364(iParam0, 0);
}

float func_647(var uParam0)//Position - 0x80DFB
{
	if (__LIB_1__::func_13(uParam0))
	{
		if (__LIB_0__::func_701(uParam0))
		{
			return uParam0->f_2;
		}
		else
		{
			return (__LIB_0__::func_616(BitTest(*uParam0, 4)) - uParam0->f_1);
		}
	}
	return uParam0->f_1;
}

void func_648(int iParam0, var uParam1, struct<3> Param2, float fParam3, int iParam4)//Position - 0x14795
{
	if (__LIB_16__::func_841(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			__LIB_17__::func_511(iParam0);
			__LIB_0__::func_313(uParam1, &(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]));
			if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 11))
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param2 };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam3;
			}
			else
			{
				Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { 0f, 0f, 0f };
				Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = -1f;
			}
			Global_113386.f_32749.f_1958[Global_77137.f_555[0 /*21*/].f_14] = iParam4 + 1;
			__LIB_0__::func_364(iParam0, 1);
		}
	}
}

int func_649(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x17355
{
	char* sVar0;
	if (ENTITY::DOES_ENTITY_EXIST(iParam0))
	{
		if (!PED::IS_PED_INJURED(iParam0))
		{
			if (iParam0 == PLAYER::PLAYER_PED_ID())
			{
				*uParam1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
			}
			else
			{
				*uParam1 = PED::GET_VEHICLE_PED_IS_IN(iParam0, true);
			}
			if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
			{
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam1, false))
				{
					if (iParam2 == 0 || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(*uParam1, true), ENTITY::GET_ENTITY_COORDS(iParam0, true), true) < 100f)
					{
						if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("taxi")))
						{
							if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != iParam0 && VEHICLE::GET_PED_IN_VEHICLE_SEAT(*uParam1, -1, false) != 0)
							{
								return 0;
							}
						}
						if (__LIB_0__::func_641(*uParam1, __LIB_15__::func_944(), 1))
						{
							sVar0 = SCRIPT::GET_THIS_SCRIPT_NAME();
							if (!MISC::ARE_STRINGS_EQUAL(sVar0, "save_anywhere"))
							{
								return 0;
							}
							else if (!PED::IS_PED_IN_ANY_VEHICLE(iParam0, true))
							{
								return 0;
							}
						}
						if (iParam3 == 1)
						{
							if (DECORATOR::DECOR_EXIST_ON(*uParam1, "IgnoredByQuickSave"))
							{
								if (DECORATOR::DECOR_GET_BOOL(*uParam1, "IgnoredByQuickSave"))
								{
									return 0;
								}
							}
						}
						else if (VEHICLE::IS_VEHICLE_MODEL(*uParam1, joaat("blimp")))
						{
							return 0;
						}
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_650(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0x92946
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__::func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_0__::func_527(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_0__::func_641(iVar0, __LIB_15__::func_944(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__::func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_651(int iParam0)//Position - 0x12B39
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[bVar0] = __LIB_0__::func_464();
	}
}

int func_652(int iParam0, struct<3> Param1, bool bParam2)//Position - 0x836E5
{
	int iVar0;
	var uVar1[3];
	int iVar2;
	int iVar3;
	iVar0 = ENTITY::GET_ENTITY_MODEL(iParam0);
	switch (iVar0)
	{
		case joaat("cargobob"):
			if (__LIB_0__::func_491(iParam0, Global_77137.f_139[38], 0))
			{
				__LIB_16__::func_935(38);
				return 1;
			}
			break;
		case joaat("firetruk"):
			if (__LIB_0__::func_491(iParam0, Global_77137.f_139[43], 1))
			{
				__LIB_16__::func_935(43);
				return 1;
			}
			break;
		case joaat("cuban800"):
			iVar2 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &uVar1);
			iVar3 = 0;
			while (iVar3 <= (iVar2 - 1))
			{
				if (__LIB_0__::func_491(iParam0, uVar1[iVar3], 1) && __LIB_0__::func_490(ENTITY::GET_ENTITY_COORDS(uVar1[iVar3], true), 2136.133f, 4780.5635f, 39.9702f, 5f, 0))
				{
					if ((!bParam2 || __LIB_0__::func_78(Param1, 0f, 0f, 0f, 0)) || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(iParam0, true), ENTITY::GET_ENTITY_COORDS(uVar1[iVar3], true), true) < 10f)
					{
						VEHICLE::DELETE_VEHICLE(&iParam0);
						return 1;
					}
					else
					{
						return 0;
					}
				}
				iVar3++;
			}
			break;
		case joaat("luxor2"):
			if ((ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[14]) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[14], false))
			{
				if (ENTITY::GET_ENTITY_MODEL(Global_77137.f_484[14]) == joaat("luxor2") && VEHICLE::GET_VEHICLE_LIVERY(iParam0) == VEHICLE::GET_VEHICLE_LIVERY(Global_77137.f_484[14]))
				{
					__LIB_16__::func_935(14);
					return 1;
				}
			}
			break;
		case joaat("swift2"):
			if ((ENTITY::DOES_ENTITY_EXIST(Global_77137.f_484[20]) && VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false)) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_77137.f_484[20], false))
			{
				if (ENTITY::GET_ENTITY_MODEL(Global_77137.f_484[20]) == joaat("swift2") && VEHICLE::GET_VEHICLE_LIVERY(iParam0) == VEHICLE::GET_VEHICLE_LIVERY(Global_77137.f_484[20]))
				{
					__LIB_16__::func_935(20);
					return 1;
				}
			}
			break;
	}
	return 0;
}

void func_653()//Position - 0xFEB4
{
	struct<50> Var0;
	if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || !__LIB_0__::func_374(__LIB_15__::func_944())) || !__LIB_0__::func_438())
	{
		return;
	}
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_17__::func_236(PLAYER::PLAYER_PED_ID(), &Var0, 1, -1);
	__LIB_0__::func_408(1306, Var0[0], -1);
	__LIB_0__::func_408(1307, Var0[1], -1);
	__LIB_0__::func_408(1308, Var0[2], -1);
	__LIB_0__::func_408(1309, Var0[3], -1);
	__LIB_0__::func_408(1310, Var0[4], -1);
	__LIB_0__::func_408(1311, Var0[5], -1);
	__LIB_0__::func_408(1312, Var0[6], -1);
	__LIB_0__::func_408(1313, Var0[7], -1);
	__LIB_0__::func_408(1314, Var0[8], -1);
	__LIB_0__::func_408(1315, Var0[9], -1);
	__LIB_0__::func_408(1316, Var0[10], -1);
	__LIB_0__::func_408(1317, Var0[11], -1);
	__LIB_0__::func_408(1318, Var0.f_13[0], -1);
	__LIB_0__::func_408(1319, Var0.f_13[1], -1);
	__LIB_0__::func_408(1320, Var0.f_13[2], -1);
	__LIB_0__::func_408(1321, Var0.f_13[3], -1);
	__LIB_0__::func_408(1322, Var0.f_13[4], -1);
	__LIB_0__::func_408(1323, Var0.f_13[5], -1);
	__LIB_0__::func_408(1324, Var0.f_13[6], -1);
	__LIB_0__::func_408(1325, Var0.f_13[7], -1);
	__LIB_0__::func_408(1326, Var0.f_13[8], -1);
	__LIB_0__::func_408(1327, Var0.f_13[9], -1);
	__LIB_0__::func_408(1328, Var0.f_13[10], -1);
	__LIB_0__::func_408(1329, Var0.f_13[11], -1);
	__LIB_0__::func_408(1330, Var0.f_26[0], -1);
	__LIB_0__::func_408(1331, Var0.f_26[1], -1);
	__LIB_0__::func_408(1332, Var0.f_26[2], -1);
	__LIB_0__::func_408(1333, Var0.f_26[3], -1);
	__LIB_0__::func_408(1334, Var0.f_26[4], -1);
	__LIB_0__::func_408(1335, Var0.f_26[5], -1);
	__LIB_0__::func_408(1336, Var0.f_26[6], -1);
	__LIB_0__::func_408(1337, Var0.f_26[7], -1);
	__LIB_0__::func_408(1338, Var0.f_26[8], -1);
	__LIB_0__::func_408(1339, Var0.f_26[9], -1);
	__LIB_0__::func_408(1340, Var0.f_26[10], -1);
	__LIB_0__::func_408(1341, Var0.f_26[11], -1);
	__LIB_0__::func_408(1342, Var0.f_39[0], -1);
	__LIB_0__::func_408(1343, Var0.f_39[1], -1);
	__LIB_0__::func_408(1344, Var0.f_39[2], -1);
	__LIB_0__::func_408(1345, Var0.f_39[3], -1);
	__LIB_0__::func_408(1346, Var0.f_39[4], -1);
	__LIB_0__::func_408(1347, Var0.f_39[5], -1);
	__LIB_0__::func_408(1348, Var0.f_39[6], -1);
	__LIB_0__::func_408(1349, Var0.f_39[7], -1);
	__LIB_0__::func_408(1350, Var0.f_39[8], -1);
	__LIB_0__::func_408(1351, Var0.f_49[0], -1);
	__LIB_0__::func_408(1352, Var0.f_49[1], -1);
	__LIB_0__::func_408(1353, Var0.f_49[2], -1);
	__LIB_0__::func_408(1354, Var0.f_49[3], -1);
	__LIB_0__::func_408(1355, Var0.f_49[4], -1);
	__LIB_0__::func_408(1356, Var0.f_49[5], -1);
	__LIB_0__::func_408(1357, Var0.f_49[6], -1);
	__LIB_0__::func_408(1358, Var0.f_49[7], -1);
	__LIB_0__::func_408(1359, Var0.f_49[8], -1);
	__LIB_0__::func_408(1360, __LIB_15__::func_944(), -1);
	STATS::STAT_SET_BOOL(joaat("CLO_STORED_INITIAL"), true, true);
	Global_113386.f_2363.f_539.f_4315 = 1;
}

int func_654(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, int iParam5, int iParam6, char* sParam7, char* sParam8, char* sParam9, char* sParam10, char* sParam11, bool bParam12, bool bParam13, bool bParam14, int iParam15)//Position - 0x93ACD
{
	return __LIB_15__::func_982(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 1, iParam4, iParam5, iParam6, 0, sParam7, sParam8, sParam9, sParam10, sParam11, __LIB_0__::func_591(), bParam12, bParam13, __LIB_0__::func_591(), 0, 0, bParam14, iParam15, 0, 0, 0, 1, 1065353216);
}

void func_655(int iParam0, bool bParam1)//Position - 0x5B68
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!__LIB_15__::func_949(iParam0))
	{
		return;
	}
	if ((bParam1 != 0 && bParam1 != 1) && bParam1 != 2)
	{
		iVar0 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!ENTITY::DOES_ENTITY_EXIST(iVar0))
		{
			iVar0 = VEHICLE::GET_LAST_PED_IN_VEHICLE_SEAT(iParam0, -1);
		}
		if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !PED::IS_PED_INJURED(iVar0))
		{
			if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Zero"))
			{
				bParam1 = false;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_One"))
			{
				bParam1 = true;
			}
			else if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("Player_Two"))
			{
				bParam1 = 2;
			}
		}
		if ((bParam1 != 0 && bParam1 != 1) && bParam1 != 2)
		{
			bParam1 = Global_113386.f_2363.f_539.f_4321;
		}
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		iVar2 = 0;
		while (iVar2 < 2)
		{
			if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66)
			{
				if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
				{
					if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_1)))
					{
						Global_113386.f_32749.f_5038[iVar1 /*157*/][iVar2 /*78*/].f_66 = 0;
						Global_113386.f_32749.f_5592[iVar1] = iVar2;
					}
				}
			}
			iVar2++;
		}
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 3)
	{
		if (ENTITY::GET_ENTITY_MODEL(iParam0) == Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66)
		{
			if (!MISC::IS_STRING_NULL_OR_EMPTY(&(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
			{
				if (MISC::ARE_STRINGS_EQUAL(VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(iParam0), &(Global_113386.f_32749.f_5600[iVar1 /*78*/].f_1)))
				{
					Global_113386.f_32749.f_5600[iVar1 /*78*/].f_66 = 0;
				}
			}
		}
		iVar1++;
	}
	Global_113386.f_32749.f_5590 = bParam1;
	Global_78042 = iParam0;
	Global_113386.f_32749.f_5588 = 1;
	__LIB_0__::func_209(iParam0, &(Global_113386.f_32749.f_5510));
}

void func_656(int iParam0, int iParam1)//Position - 0xB806
{
	int iVar0;
	if (iParam0 != 226)
	{
		if (Global_78319)
		{
			iVar0 = Global_42586[iParam0];
		}
		else
		{
			iVar0 = Global_113386.f_7261[iParam0];
		}
		if (iVar0 != iParam1 || BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
		{
			if ((((iParam1 == 4 || iParam1 == 3) || iParam1 == 5) || iParam1 == 6) || iParam1 == 2)
			{
				MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
				Global_38884[iParam0] = iParam1;
			}
			else if (Global_78319)
			{
				Global_42586[iParam0] = iParam1;
			}
			else
			{
				Global_113386.f_7261[iParam0] = iParam1;
			}
			MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			__LIB_17__::func_184(iParam0);
			if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
			{
				__LIB_0__::func_401(iParam0);
			}
		}
	}
}

void func_657(var uParam0, int iParam1)//Position - 0x1749D
{
	int iVar0;
	struct<3> Var1;
	var uVar2;
	bool bVar3;
	*uParam0 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
	uParam0->f_3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
	uParam0->f_5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
	if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID()))
	{
		uParam0->f_4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
	}
	if (SYSTEM::VDIST(*uParam0, 320.9934f, 265.2515f, 82.1221f) < 10f)
	{
		*uParam0 = { 301.2162f, 202.1357f, 103.3797f };
		uParam0->f_3 = 156.5144f;
	}
	else if (SYSTEM::VDIST(*uParam0, 377.153f, -717.567f, 10.0536f) < 10f)
	{
		*uParam0 = { 394.2567f, -713.5439f, 28.2853f };
		uParam0->f_3 = 276.6273f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1425.5645f, -244.3f, 15.8053f) < 10f)
	{
		*uParam0 = { -1423.4724f, -214.2539f, 45.5004f };
		uParam0->f_3 = 353.8757f;
	}
	else if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("finale_choice")) > 0)
	{
		*uParam0 = { 4.2587f, 525.0214f, 173.6281f };
		uParam0->f_3 = 203.6746f;
	}
	else if (BitTest(Global_78567, 4))
	{
		*uParam0 = { 452.0255f, 5571.85f, 780.1859f };
		uParam0->f_3 = 78.9858f;
	}
	else if (BitTest(Global_78567, 5))
	{
		*uParam0 = { -745.4462f, 5595.1465f, 40.6594f };
		uParam0->f_3 = 261.747f;
	}
	else if (BitTest(Global_78567, 6))
	{
		*uParam0 = { -1675.5215f, -1125.5901f, 12.091f };
		uParam0->f_3 = 271.8208f;
	}
	else if (BitTest(Global_78567, 7))
	{
		*uParam0 = { -1631.2192f, -1112.8052f, 12.0212f };
		uParam0->f_3 = 316.8879f;
	}
	else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(1272.6588f, -1715.4669f, 53.7715f, "v_lesters"))
	{
		*uParam0 = { 1276.9564f, -1725.1892f, 53.6551f };
		uParam0->f_3 = 204.1703f;
	}
	else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646f, 2068.2886f, 113.30017f, -564.9516f, 1884.7025f, 134.04034f, 258.75f, false, true, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4706f, 2089.921f, 125.41275f, -581.21344f, 2036.2561f, 136.28363f, 9.5f, false, true, 0))
	{
		*uParam0 = { -601.59f, 2099.1973f, 128.8928f };
		uParam0->f_3 = 204.7498f;
	}
	else if (SYSTEM::VDIST(*uParam0, -1007.39264f, -477.95844f, 52.5357f) < 8f)
	{
		*uParam0 = { -1018.3756f, -483.9436f, 36.0964f };
		uParam0->f_3 = 114.7664f;
	}
	else if (SYSTEM::VDIST(*uParam0, 480.6662f, -1317.8085f, 28.20303f) < 15f)
	{
		*uParam0 = { 497.7238f, -1310.9323f, 28.2372f };
		uParam0->f_3 = 289.3663f;
	}
	else if (SYSTEM::VDIST(*uParam0, 2329.5266f, 2571.3113f, 45.6779f) < 5f)
	{
		*uParam0 = { 2316.9304f, 2594.1528f, 45.7199f };
		uParam0->f_3 = 348.1325f;
	}
	if (iParam1 == 1)
	{
		if (__LIB_13__::func_781(&iVar0))
		{
			if (__LIB_0__::func_388(iVar0, &Var1, &uVar2))
			{
				Var1.f_2 = (Var1.f_2 + 1f);
				*uParam0 = { Var1 };
				uParam0->f_3 = uVar2;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43358f, -1019.7954f, -100.47276f, 189.93378f, -1019.6235f, -95.56883f, 17.1875f, false, true, 0))
		{
			bVar3 = __LIB_15__::func_944();
			if (bVar3 == 0)
			{
				*uParam0 = { -65.1234f, 81.2517f, 70.5644f };
				uParam0->f_3 = 71.6237f;
			}
			else if (bVar3 == 1)
			{
				*uParam0 = { -68.5531f, -1824.3774f, 25.9424f };
				uParam0->f_3 = 215.8295f;
			}
			else if (bVar3 == 2)
			{
				*uParam0 = { -220.8189f, -1162.3016f, 22.0242f };
				uParam0->f_3 = 70.2711f;
			}
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71747f, -1326.6299f, 28.2135f, 474.96436f, -1307.9983f, 34.494976f, 12f, false, true, 0))
		{
			*uParam0 = { 495.4108f, -1306.0801f, 29.2883f };
			uParam0->f_3 = 213.6273f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77f, -1534.22f, 3.37f, -1158.4525f, -1517.7496f, 6.374244f, 13f, false, true, 0))
		{
			*uParam0 = { -1160.0951f, -1515.407f, 3.1496f };
			uParam0->f_3 = 305.6424f;
		}
		else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315f, -996.97687f, 24.88307f, 428.29355f, -997.0192f, 28.574581f, 8.5f, false, true, 0))
		{
			*uParam0 = { 431.8853f, -1013.133f, 28.7907f };
			uParam0->f_3 = 186.6814f;
		}
		else if (__LIB_0__::func_387(*uParam0, "v_hospital", 307.3065f, -589.9595f, 43.302f))
		{
			*uParam0 = { 279.4137f, -585.8815f, 43.2502f };
			uParam0->f_3 = 48.8028f;
		}
	}
}

int func_658(var uParam0, int iParam1, int iParam2, var uParam3, float fParam4, float fParam5, bool bParam6, bool bParam7, char* sParam8, int iParam9, bool bParam10, bool bParam11, int iParam12)//Position - 0x8C8E5
{
	int iVar0;
	int iVar1;
	struct<3> Var2;
	struct<3> Var3;
	float fVar4;
	float fVar5;
	int iVar6;
	int iVar7;
	iVar0 = uParam3;
	if (!uParam0->f_16)
	{
		if (STREAMING::IS_SAFE_TO_START_PLAYER_SWITCH())
		{
			if (!bParam10)
			{
				uParam0->f_13 = PLAYER::PLAYER_PED_ID();
			}
			if ((!PED::IS_PED_INJURED(uParam0->f_13) || bParam10) && !PED::IS_PED_INJURED(uParam0->f_12))
			{
				uParam0->f_27 = 0;
				Global_97360 = 1;
				if (!bParam10)
				{
					if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_13))
					{
						iVar1 = PED::GET_VEHICLE_PED_IS_IN(uParam0->f_13, false);
						__LIB_15__::func_892(iVar1, 0);
					}
					PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), false, 0);
					ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, true);
					ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, true);
				}
				uParam0->f_21 = __LIB_1__::func_861();
				__LIB_0__::func_671(1);
				if (bParam6)
				{
					iVar0 |= 4;
				}
				if (bParam7)
				{
					iVar0 |= 8;
				}
				if (CAM::DOES_CAM_EXIST(iParam1) || !MISC::IS_STRING_NULL_OR_EMPTY(sParam8))
				{
					iVar0 |= 2;
				}
				if (__LIB_0__::func_629())
				{
					iVar0 |= 1;
				}
				if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
				{
					STREAMING::START_PLAYER_SWITCH(uParam0->f_13, uParam0->f_12, iVar0, iParam2);
					if (bParam11)
					{
						STREAMING::SET_PLAYER_SHORT_SWITCH_STYLE(iParam12);
					}
					switch (__LIB_0__::func_650(uParam0->f_13))
					{
						case 0:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDMichaelOut");
							break;
						case 1:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDMichaelOut");
							break;
						case 2:
							GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDTrevorOut");
							break;
					}
					GRAPHICS::ANIMPOSTFX_STOP_AND_FLUSH_REQUESTS("SwitchHUDOut");
				}
				else if (STREAMING::IS_SWITCH_TO_MULTI_FIRSTPART_FINISHED())
				{
					STREAMING::SWITCH_TO_MULTI_SECONDPART(uParam0->f_12);
					__LIB_0__::func_986(0);
				}
				else
				{
					return 0;
				}
				if (CAM::DOES_CAM_EXIST(iParam1))
				{
					if (STREAMING::GET_IDEAL_PLAYER_SWITCH_TYPE(ENTITY::GET_ENTITY_COORDS(uParam0->f_13, true), ENTITY::GET_ENTITY_COORDS(uParam0->f_12, true)) != 3)
					{
						STREAMING::SET_PLAYER_SWITCH_OUTRO(CAM::GET_CAM_COORD(iParam1), CAM::GET_CAM_ROT(iParam1, iParam9), CAM::GET_CAM_FOV(iParam1), CAM::GET_CAM_FAR_CLIP(iParam1), iParam9);
					}
				}
				if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam8))
				{
					STREAMING::SET_PLAYER_SWITCH_ESTABLISHING_SHOT(sParam8);
				}
				if (!Global_23011.f_111)
				{
					AUDIO::PLAY_SOUND(-1, "CHARACTER_CHANGE_UP_MASTER", 0, false, 0, true);
					if (STREAMING::GET_IDEAL_PLAYER_SWITCH_TYPE(ENTITY::GET_ENTITY_COORDS(uParam0->f_13, true), ENTITY::GET_ENTITY_COORDS(uParam0->f_12, true)) == 3)
					{
						AUDIO::PLAY_SOUND(-1, "slow", "SHORT_PLAYER_SWITCH_SOUND_SET", false, 0, true);
					}
					if (Global_23011.f_109 == -1)
					{
						Global_23011.f_109 = AUDIO::GET_SOUND_ID();
					}
					Global_23011.f_110 = MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
					AUDIO::PLAY_SOUND(Global_23011.f_109, "CHARACTER_CHANGE_SKY_MASTER", 0, false, 0, true);
					AUDIO::START_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
					if (AUDIO::IS_AUDIO_SCENE_ACTIVE("CHARACTER_CHANGE_IN_SKY_SCENE"))
					{
					}
				}
				if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
				{
					AUDIO::STOP_SOUND(Global_23011.f_109);
					AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
					Global_23011.f_109 = -1;
					Global_23011.f_110 = 0;
				}
				uParam0->f_25 = MISC::GET_GAME_TIMER();
				uParam0->f_16 = 1;
				__LIB_7__::func_703(1);
				HUD::SET_MINIMAP_IN_SPECTATOR_MODE(true, uParam0->f_13);
				if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() == 3)
				{
					CAM::SET_FOLLOW_PED_CAM_VIEW_MODE(1);
				}
				if (CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() == 3)
				{
					CAM::SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(1);
				}
				if (!bParam10)
				{
					if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_0__::func_518(0))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_15__::func_891(0));
					}
					else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_0__::func_518(2))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_15__::func_891(2));
					}
					else if (ENTITY::GET_ENTITY_MODEL(uParam0->f_12) == __LIB_0__::func_518(1))
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER(__LIB_15__::func_891(1));
					}
					else
					{
						GRAPHICS::SET_NEXT_PLAYER_TCMODIFIER("");
					}
					GRAPHICS::SET_PLAYER_TCMODIFIER_TRANSITION(0f);
				}
			}
			else
			{
				uParam0->f_17 = 1;
			}
		}
		else
		{
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_16)
	{
		if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS())
		{
			if (!Global_23011.f_111)
			{
			}
			if (__LIB_0__::func_703(uParam3, 512))
			{
				if (!STREAMING::IS_SWITCH_READY_FOR_DESCENT())
				{
				}
				else if (Global_100164 == 0)
				{
					STREAMING::ALLOW_PLAYER_SWITCH_DESCENT();
				}
			}
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
			{
				switch (STREAMING::GET_PLAYER_SHORT_SWITCH_STATE())
				{
					case 0:
						break;
					case 1:
						break;
					}
			}
			if (STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
			{
				if (STREAMING::GET_PLAYER_SHORT_SWITCH_STATE() >= 1)
				{
					if (!uParam0->f_18)
					{
						__LIB_13__::func_788();
						uParam0->f_18 = 1;
					}
					if (!uParam0->f_22)
					{
						__LIB_16__::func_876(0, 1);
						uParam0->f_22 = 1;
					}
				}
			}
			else
			{
				if (STREAMING::GET_PLAYER_SWITCH_STATE() >= 8)
				{
					if (!uParam0->f_18)
					{
						__LIB_13__::func_788();
						uParam0->f_18 = 1;
					}
				}
				if (!uParam0->f_18)
				{
					if (STREAMING::IS_SWITCH_SKIPPING_DESCENT() && STREAMING::GET_PLAYER_SWITCH_STATE() == 3)
					{
						Var2 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true) };
						Var3 = { CAM::GET_FINAL_RENDERED_CAM_COORD() };
						fVar4 = 20f;
						fVar5 = SYSTEM::VDIST2(Var2, Var3);
						if (fVar5 < (fVar4 * fVar4))
						{
							__LIB_13__::func_788();
							uParam0->f_18 = 1;
						}
					}
				}
				if (!uParam0->f_22)
				{
					if (STREAMING::GET_PLAYER_SWITCH_STATE() > 2)
					{
						__LIB_16__::func_876(0, 1);
						uParam0->f_22 = 1;
					}
				}
				if (!uParam0->f_23)
				{
					if (STREAMING::GET_PLAYER_SWITCH_STATE() >= 3)
					{
						GRAPHICS::CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE("CSM_ST_BOX3x3");
						uParam0->f_23 = 1;
					}
				}
			}
		}
		else
		{
			if (!uParam0->f_18)
			{
				uParam0->f_18 = 1;
				__LIB_13__::func_788();
			}
			if (!uParam0->f_22)
			{
				__LIB_16__::func_876(0, 1);
				uParam0->f_22 = 1;
			}
			uParam0->f_17 = 1;
		}
	}
	if (uParam0->f_17)
	{
		iVar6 = __LIB_15__::func_933();
		if (((iVar6 != 8 && iVar6 != 9) && iVar6 != 10) && iVar6 != 55)
		{
			__LIB_0__::func_671(uParam0->f_21);
		}
		if (uParam0->f_23)
		{
			GRAPHICS::CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE();
			uParam0->f_23 = 0;
		}
		uParam0->f_16 = 0;
		uParam0->f_17 = 0;
		uParam0->f_18 = 0;
		uParam0->f_19 = 0;
		uParam0->f_20 = 0;
		uParam0->f_24 = 0;
		uParam0->f_27 = 0;
		if (Global_23011.f_109 != -1 && Global_23011.f_110 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_109);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_109);
			Global_23011.f_109 = -1;
			Global_23011.f_110 = 0;
		}
		if (AUDIO::IS_AUDIO_SCENE_ACTIVE("CHARACTER_CHANGE_IN_SKY_SCENE"))
		{
			AUDIO::STOP_AUDIO_SCENE("CHARACTER_CHANGE_IN_SKY_SCENE");
		}
		if (Global_23011.f_107 != -1 && Global_23011.f_108 == MISC::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
			AUDIO::STOP_SOUND(Global_23011.f_107);
			AUDIO::RELEASE_SOUND_ID(Global_23011.f_107);
			Global_23011.f_107 = -1;
			Global_23011.f_108 = 0;
		}
		if (fParam5 <= 360f && fParam5 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam5);
		}
		if (fParam4 <= 360f && fParam4 >= -360f)
		{
			CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam4, 1f);
		}
		if (!Global_44203)
		{
			CAM::STOP_GAMEPLAY_CAM_SHAKING(true);
			CAM::SET_GAMEPLAY_CAM_MOTION_BLUR_SCALING_THIS_UPDATE(0f);
			CAM::SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE(0f);
		}
		if (!bParam10)
		{
			if (!PED::IS_PED_INJURED(uParam0->f_13))
			{
				ENTITY::SET_ENTITY_VISIBLE(uParam0->f_13, true, false);
				PED::SET_PED_CAN_BE_TARGETTED(uParam0->f_13, true);
				if (!PED::IS_PED_IN_ANY_VEHICLE(uParam0->f_13, false))
				{
					ENTITY::SET_ENTITY_COLLISION(uParam0->f_13, true, false);
				}
				if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(uParam0->f_13))
				{
					iVar7 = PED::GET_VEHICLE_PED_IS_IN(uParam0->f_13, false);
					__LIB_15__::func_892(iVar7, 1);
				}
			}
		}
		__LIB_0__::func_986(0);
		if (!bParam10)
		{
			if (!PED::IS_PED_INJURED(uParam0->f_13) || bParam10)
			{
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_13, false);
			}
			if (!PED::IS_PED_INJURED(uParam0->f_12))
			{
				ENTITY::SET_ENTITY_INVINCIBLE(uParam0->f_12, false);
			}
			PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), true, 0);
			__LIB_15__::func_890();
			GRAPHICS::SET_CURRENT_PLAYER_TCMODIFIER(__LIB_15__::func_891(__LIB_15__::func_944()));
		}
		__LIB_7__::func_703(0);
		HUD::SET_MINIMAP_IN_SPECTATOR_MODE(false, 0);
		return 0;
	}
	HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
	return 1;
}

void func_659()//Position - 0x246C6
{
	PLAYER::SET_WANTED_LEVEL_MULTIPLIER(0f);
	PLAYER::SET_MAX_WANTED_LEVEL(0);
	PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
	PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), false);
}

int func_660(int iParam0)//Position - 0x2F7F5
{
	switch (iParam0)
	{
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
			return 1;
			break;
	}
	return 0;
}

void func_661(var uParam0)//Position - 0x7C6CB
{
	uParam0->f_9 = 1000;
}

void func_662(bool bParam0)//Position - 0x7CA3E
{
	HUD::REQUEST_ADDITIONAL_TEXT("FINC", 0);
	if (bParam0)
	{
		while (!HUD::HAS_ADDITIONAL_TEXT_LOADED(0))
		{
			SYSTEM::WAIT(0);
		}
	}
}

char* func_663()//Position - 0x80361
{
	return "finalec";
}

void func_664(var uParam0, float fParam1, float fParam2)//Position - 0x99279
{
	if (*uParam0 < fParam1)
	{
		*uParam0 = (*uParam0 + (fParam2 * SYSTEM::TIMESTEP()));
		if (*uParam0 > fParam1)
		{
			*uParam0 = fParam1;
		}
	}
	else if (*uParam0 > fParam1)
	{
		*uParam0 = (*uParam0 - (fParam2 * SYSTEM::TIMESTEP()));
		if (*uParam0 < fParam1)
		{
			*uParam0 = fParam1;
		}
	}
}

void func_665(int iParam0, var uParam1, int iParam2, int iParam3)//Position - 0x28C18
{
	int iVar0;
	int iVar1;
	if (!PED::IS_PED_INJURED(iParam0))
	{
		iVar0 = __LIB_17__::func_107(iParam0);
		iVar1 = 0;
		while (iVar1 < 12)
		{
			__LIB_17__::func_255(iParam0, iVar1, &(uParam1->f_13[iVar1]), uParam1[iVar1], &(uParam1->f_26[iVar1]), iParam2, 145);
			iVar1++;
		}
		iVar1 = 0;
		while (iVar1 < 9)
		{
			__LIB_17__::func_254(iParam0, iVar1, &(uParam1->f_39[iVar1]), &(uParam1->f_49[iVar1]), iParam2, 145);
			iVar1++;
		}
		if (__LIB_0__::func_374(iVar0))
		{
			uParam1->f_59 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_59;
			uParam1->f_60 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_60;
			uParam1->f_61 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_61;
			uParam1->f_62 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_62;
			uParam1->f_63 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_63;
			uParam1->f_64 = Global_113386.f_2363.f_539[iVar0 /*65*/].f_64;
		}
		else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::GET_ENTITY_MODEL(iParam0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
			uParam1->f_60 = __LIB_0__::func_369(754, iParam3, 0);
			uParam1->f_61 = __LIB_0__::func_369(755, iParam3, 0);
		}
		if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && iParam0 == PLAYER::PLAYER_PED_ID())
		{
			if (__LIB_0__::func_351(161, iParam3))
			{
				uParam1->f_59 = __LIB_0__::func_369(2053, iParam3, 0);
			}
			else
			{
				uParam1->f_59 = __LIB_0__::func_369(753, iParam3, 0);
			}
		}
	}
}

void func_666(int iParam0, var uParam1)//Position - 0x22FD6
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_17__::func_341())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_17__::func_341())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_17__::func_341() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

void func_667(int iParam0, int iParam1, bool bParam2, bool bParam3, int iParam4)//Position - 0xA08C4
{
	if (iParam0 != 198)
	{
		if (Global_78319)
		{
			Global_42586.f_227[iParam0] = iParam1;
		}
		else
		{
			Global_113386.f_7261.f_227[iParam0] = iParam1;
		}
		Global_39592[iParam0] = bParam2;
		Global_39791[iParam0] = 1;
		__LIB_0__::func_456(iParam0, bParam3, iParam4, 0);
		__LIB_0__::func_367(iParam0, iParam1);
	}
}

void func_668(var uParam0, var uParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x2807E
{
	int iVar0;
	if (iParam2 == 0)
	{
		iParam2 = PLAYER::PLAYER_PED_ID();
	}
	if (ENTITY::DOES_ENTITY_EXIST(iParam2))
	{
		uParam1->f_5 = __LIB_17__::func_107(iParam2);
	}
	if (__LIB_17__::func_502(iParam2, &iVar0, iParam3, iParam5))
	{
		__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
	}
	else if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iVar0, false))
		{
			if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("skylift")) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
			{
				__LIB_17__::func_67(uParam0, uParam1, iVar0, iParam4);
			}
		}
	}
}

void func_669(int iParam0, bool bParam1)//Position - 0x7BF5B
{
	__LIB_17__::func_453(iParam0);
	__LIB_17__::func_619(iParam0, bParam1);
	__LIB_17__::func_443(iParam0);
	__LIB_17__::func_442(iParam0);
	__LIB_17__::func_441(iParam0);
	__LIB_17__::func_440(iParam0);
	__LIB_17__::func_439(iParam0);
}

int func_670(struct<3> Param0, float fParam1)//Position - 0x88C36
{
	return __LIB_17__::func_476(&(Global_106934.f_2890), Param0, fParam1, 0);
}

int func_671(var uParam0, int iParam1, int iParam2, float fParam3, float fParam4, bool bParam5, bool bParam6, char* sParam7, bool bParam8, int iParam9)//Position - 0x956C7
{
	return __LIB_17__::func_626(uParam0, 0, iParam1, iParam2, fParam3, fParam4, bParam5, bParam6, sParam7, 2, 0, bParam8, iParam9);
	return 1;
}

int func_672()//Position - 0x74C
{
	return Global_113386.f_7688.f_911;
}

int func_673(int iParam0, int iParam1, bool bParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x14C3
{
	struct<15> Var0;
	if (__LIB_0__::func_2(0))
	{
		return 0;
	}
	if (bParam2 < 3)
	{
		if (BitTest(iParam1, bParam2))
		{
			return 0;
		}
	}
	if (iParam1 < 1 || iParam1 > 7)
	{
		return 0;
	}
	if (iParam4 <= 0)
	{
		return 0;
	}
	if (Global_113386.f_7688.f_650 < 30)
	{
		Var0.f_0 = iParam0;
		if (Global_113386.f_7688.f_911 == Var0.f_0)
		{
			Global_113386.f_7688.f_911 = -1;
		}
		Var0.f_1 = 0;
		Var0.f_6 = bParam2;
		Var0.f_2 = iParam1;
		Var0.f_14 = iParam3;
		Var0.f_3 = iParam6;
		Var0.f_7 = -1;
		Var0.f_8 = 0;
		Var0.f_9 = -1;
		Var0.f_4 = (MISC::GET_GAME_TIMER() + iParam4);
		Var0.f_9 = iParam5;
		Var0.f_10 = -1;
		Var0.f_11 = -1;
		MISC::SET_BIT(&(Var0.f_1), 0);
		MISC::SET_BIT(&(Var0.f_1), 6);
		Global_113386.f_7688.f_199[Global_113386.f_7688.f_650 /*15*/] = { Var0 };
		Global_113386.f_7688.f_650++;
		return 1;
	}
	return 0;
}

void func_674(char* sParam0)//Position - 0xADB
{
	if (!MISC::IS_STRING_NULL_OR_EMPTY(sParam0))
	{
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("FB_TITLE" /* GXT: Uploading Facebook Post.~n~~a~ */);
		HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(sParam0);
		HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT("CHAR_FACEBOOK", "CHAR_FACEBOOK", true, 0, "", 0);
	}
}

void func_675(int iParam0, char* sParam1, char* sParam2, char* sParam3)//Position - 0x76C9B
{
	StringCopy(sParam1, "AMB@WORLD_HUMAN_SMOKING@MALE@MALE_A@IDLE_A", 64);
	StringCopy(sParam2, "IDLE_A", 64);
	StringCopy(sParam3, "IDLE_A", 64);
}

struct<4> func_676(char* sParam0, int iParam1)//Position - 0x799AB
{
	struct<4> Var0;
	StringCopy(&Var0, sParam0, 16);
	switch (MISC::GET_RANDOM_INT_IN_RANGE(0, iParam1))
	{
		case 0:
			StringConCat(&Var0, "a", 16);
			break;
		case 1:
			StringConCat(&Var0, "b", 16);
			break;
		case 2:
			StringConCat(&Var0, "c", 16);
			break;
		default:
			StringConCat(&Var0, "X", 16);
			break;
	}
	return Var0;
}

void func_677(var uParam0, int iParam1, int iParam2, int iParam3, struct<3> Param4, float fParam5)//Position - 0x7D108
{
	uParam0->f_111 = iParam1;
	uParam0->f_116 = iParam2;
	uParam0->f_117 = iParam3;
	uParam0->f_112 = { Param4 };
	uParam0->f_115 = fParam5;
}

int func_678(int iParam0)//Position - 0x7D150
{
	if ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((Global_113386.f_18533[iParam0] == 11 || Global_113386.f_18533[iParam0] == 8) || Global_113386.f_18533[iParam0] == 9) || Global_113386.f_18533[iParam0] == 10) || Global_113386.f_18533[iParam0] == 13) || Global_113386.f_18533[iParam0] == 14) || Global_113386.f_18533[iParam0] == 15) || Global_113386.f_18533[iParam0] == 12) || Global_113386.f_18533[iParam0] == 16) || Global_113386.f_18533[iParam0] == 17) || Global_113386.f_18533[iParam0] == 21) || Global_113386.f_18533[iParam0] == 18) || Global_113386.f_18533[iParam0] == 19) || Global_113386.f_18533[iParam0] == 20) || Global_113386.f_18533[iParam0] == 22) || Global_113386.f_18533[iParam0] == 23) || Global_113386.f_18533[iParam0] == 24) || Global_113386.f_18533[iParam0] == 67) || Global_113386.f_18533[iParam0] == 25) || Global_113386.f_18533[iParam0] == 26) || Global_113386.f_18533[iParam0] == 27) || Global_113386.f_18533[iParam0] == 28) || Global_113386.f_18533[iParam0] == 29) || Global_113386.f_18533[iParam0] == 30) || Global_113386.f_18533[iParam0] == 31) || Global_113386.f_18533[iParam0] == 32) || Global_113386.f_18533[iParam0] == 33) || Global_113386.f_18533[iParam0] == 34) || Global_113386.f_18533[iParam0] == 35) || Global_113386.f_18533[iParam0] == 36) || Global_113386.f_18533[iParam0] == 37) || Global_113386.f_18533[iParam0] == 58) || Global_113386.f_18533[iParam0] == 59) || Global_113386.f_18533[iParam0] == 60) || Global_113386.f_18533[iParam0] == 38) || Global_113386.f_18533[iParam0] == 39) || Global_113386.f_18533[iParam0] == 40) || Global_113386.f_18533[iParam0] == 41) || Global_113386.f_18533[iParam0] == 42) || Global_113386.f_18533[iParam0] == 43) || Global_113386.f_18533[iParam0] == 44) || Global_113386.f_18533[iParam0] == 45) || Global_113386.f_18533[iParam0] == 46) || Global_113386.f_18533[iParam0] == 47) || Global_113386.f_18533[iParam0] == 49) || Global_113386.f_18533[iParam0] == 48) || Global_113386.f_18533[iParam0] == 50) || Global_113386.f_18533[iParam0] == 51) || Global_113386.f_18533[iParam0] == 52) || Global_113386.f_18533[iParam0] == 66) || Global_113386.f_18533[iParam0] == 53) || Global_113386.f_18533[iParam0] == 54) || Global_113386.f_18533[iParam0] == 55) || Global_113386.f_18533[iParam0] == 56) || Global_113386.f_18533[iParam0] == 57) || Global_113386.f_18533[iParam0] == 61) || Global_113386.f_18533[iParam0] == 62) || Global_113386.f_18533[iParam0] == 63) || Global_113386.f_18533[iParam0] == 68) || Global_113386.f_18533[iParam0] == 69) || Global_113386.f_18533[iParam0] == 64) || Global_113386.f_18533[iParam0] == 65) || Global_113386.f_18533[iParam0] == 70) || Global_113386.f_18533[iParam0] == 71) || Global_113386.f_18533[iParam0] == 72) || Global_113386.f_18533[iParam0] == 73) || Global_113386.f_18533[iParam0] == 74)
	{
		if (iParam0 == 0 && Global_113386.f_18533[0] == 36)
		{
			if (Global_113386.f_18533[1] == 37)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 37)
		{
			if (Global_113386.f_18533[0] == 36)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 58)
		{
			if (Global_113386.f_18533[2] == 59)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 59)
		{
			if (Global_113386.f_18533[0] == 58)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 46)
		{
			if (Global_113386.f_18533[1] == 47)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 47)
		{
			if (Global_113386.f_18533[0] == 46)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 1 && Global_113386.f_18533[1] == 25)
		{
			if (Global_113386.f_18533[2] == 26)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 26)
		{
			if (Global_113386.f_18533[1] == 25)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 1 && (((Global_113386.f_18533[1] == 42 || Global_113386.f_18533[1] == 43) || Global_113386.f_18533[1] == 44) || Global_113386.f_18533[1] == 45))
		{
			if (((Global_113386.f_18533[2] == 42 || Global_113386.f_18533[2] == 43) || Global_113386.f_18533[2] == 44) || Global_113386.f_18533[2] == 45)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && (((Global_113386.f_18533[2] == 42 || Global_113386.f_18533[2] == 43) || Global_113386.f_18533[2] == 44) || Global_113386.f_18533[2] == 45))
		{
			if (((Global_113386.f_18533[1] == 42 || Global_113386.f_18533[1] == 43) || Global_113386.f_18533[1] == 44) || Global_113386.f_18533[1] == 45)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 1 && Global_113386.f_18533[1] == 16)
		{
			if (Global_113386.f_18533[0] == 17)
			{
				Global_113386.f_18533[0] = 318;
			}
		}
		else if (iParam0 == 0 && Global_113386.f_18533[0] == 17)
		{
			if (Global_113386.f_18533[1] == 16)
			{
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 2 && Global_113386.f_18533[2] == 30)
		{
			if (Global_113386.f_18533[1] == 19)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 19)
		{
			if (Global_113386.f_18533[2] == 30)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 21)
		{
			if (Global_113386.f_18533[1] == 20)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 20)
		{
			if (Global_113386.f_18533[0] == 21)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 1 && Global_113386.f_18533[1] == 38)
		{
			if (Global_113386.f_18533[2] == 39)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 39)
		{
			if (Global_113386.f_18533[1] == 38)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 1 && Global_113386.f_18533[1] == 29)
		{
			if (Global_113386.f_18533[2] == 15)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 15)
		{
			if (Global_113386.f_18533[1] == 29)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 1 && Global_113386.f_18533[1] == 56)
		{
			if (Global_113386.f_18533[2] == 57)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 57)
		{
			if (Global_113386.f_18533[1] == 56)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 68)
		{
			if (Global_113386.f_18533[2] == 69)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 69)
		{
			if (Global_113386.f_18533[0] == 68)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 64)
		{
			if (Global_113386.f_18533[2] == 65)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 65)
		{
			if (Global_113386.f_18533[0] == 64)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 72)
		{
			if (Global_113386.f_18533[1] == 73)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 73)
		{
			if (Global_113386.f_18533[0] == 72)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 2 && Global_113386.f_18533[2] == 51)
		{
			if (Global_113386.f_18533[1] == 50)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 50)
		{
			if (Global_113386.f_18533[2] == 51)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 52)
		{
			if (Global_113386.f_18533[1] == 66)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 66)
		{
			if (Global_113386.f_18533[0] == 52)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 61)
		{
			if (Global_113386.f_18533[1] == 31)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 31)
		{
			if (Global_113386.f_18533[0] == 61)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
		}
		if (iParam0 == 0 && Global_113386.f_18533[0] == 62)
		{
			if (Global_113386.f_18533[1] == 53)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
			if (Global_113386.f_18533[2] == 54)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 1 && Global_113386.f_18533[1] == 53)
		{
			if (Global_113386.f_18533[0] == 62)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
			if (Global_113386.f_18533[2] == 54)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[2]));
				Global_113386.f_18533[2] = 318;
			}
		}
		else if (iParam0 == 2 && Global_113386.f_18533[2] == 54)
		{
			if (Global_113386.f_18533[0] == 62)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[0]));
				Global_113386.f_18533[0] = 318;
			}
			if (Global_113386.f_18533[1] == 53)
			{
				__LIB_0__::func_17(&(Global_113386.f_2363.f_539.f_2296[1]));
				Global_113386.f_18533[1] = 318;
			}
		}
		Global_99832 = -1;
		Global_113386.f_18533[iParam0] = 318;
		return 1;
	}
	Global_99832 = -1;
	return 0;
}

int func_679(int iParam0, var uParam1)//Position - 0x7E32D
{
	switch (iParam0)
	{
		case 114:
			*uParam1 = 1;
			return 1;
			break;
		case 108:
			*uParam1 = 2;
			return 1;
			break;
		case 109:
			*uParam1 = 3;
			return 1;
			break;
		case 110:
			*uParam1 = 4;
			return 1;
			break;
		case 218:
			*uParam1 = 5;
			return 1;
			break;
		case 221:
			*uParam1 = 6;
			return 1;
			break;
		case 187:
			*uParam1 = 7;
			return 1;
			break;
		case 196:
			*uParam1 = 8;
			return 1;
			break;
		case 197:
			*uParam1 = 9;
			return 1;
			break;
		case 246:
			*uParam1 = 10;
			return 1;
			break;
		case 283:
			*uParam1 = 11;
			return 1;
			break;
		case 124:
			*uParam1 = 12;
			return 1;
			break;
		case 8:
			*uParam1 = 13;
			return 1;
			break;
		case 9:
			*uParam1 = 13;
			return 1;
			break;
		case 10:
			*uParam1 = 13;
			return 1;
			break;
	}
	*uParam1 = -1;
	return 0;
}

int func_680()//Position - 0x7E52B
{
	if (!STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() || STREAMING::GET_PLAYER_SWITCH_TYPE() == 3)
	{
		return 0;
	}
	if (STREAMING::GET_PLAYER_SWITCH_STATE() > 8)
	{
		if (STREAMING::GET_PLAYER_SWITCH_STATE() != 11)
		{
			return 0;
		}
		if (STREAMING::GET_PLAYER_SWITCH_STATE() == 11)
		{
			if (STREAMING::GET_PLAYER_SWITCH_INTERP_OUT_DURATION() > 0)
			{
				if (STREAMING::GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME() > 100)
				{
					return 0;
				}
			}
		}
	}
	return 1;
}

void func_681(var uParam0)//Position - 0x7E92F
{
	if (!PED::IS_PED_INJURED((*uParam0)[uParam0->f_5]))
	{
		PED::SET_PED_CAN_BE_TARGETTED((*uParam0)[uParam0->f_5], false);
		PED::SET_PED_RELATIONSHIP_GROUP_HASH((*uParam0)[uParam0->f_5], joaat("PLAYER"));
	}
}

int func_682()//Position - 0x7EBE8
{
	int iVar0;
	int iVar1;
	var uVar2;
	MISC::GET_CURR_WEATHER_STATE(&iVar0, &iVar1, &uVar2);
	switch (iVar0)
	{
		case joaat("snow"):
		case joaat("SNOWLIGHT"):
		case joaat("Neutral"):
		case joaat("BLIZZARD"):
			return 0;
			break;
	}
	switch (iVar1)
	{
		case joaat("snow"):
		case joaat("SNOWLIGHT"):
		case joaat("Neutral"):
		case joaat("BLIZZARD"):
			return 0;
			break;
	}
	return 1;
}

void func_683(int iParam0)//Position - 0x81639
{
	if (Global_97365 == -1)
	{
		Global_97365 = iParam0;
	}
}

int func_684(var uParam0)//Position - 0x8165F
{
	char* sVar0;
	if (uParam0->f_16 != 0)
	{
		switch (uParam0->f_2)
		{
			case 187:
			case default:
		}
		sVar0 = "";
		return 0;
		INTERIOR::FORCE_ROOM_FOR_ENTITY(uParam0->f_17[uParam0->f_61], uParam0->f_16, MISC::GET_HASH_KEY(sVar0));
		return 1;
	}
	return 0;
}

Vector3 func_685(struct<3> Param0, float fParam1, int iParam2)//Position - 0x8228F
{
	float fVar0;
	if (iParam2 <= 1)
	{
		fVar0 = 0f;
	}
	else
	{
		fVar0 = 2.8f;
	}
	return OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(Param0, fParam1, fVar0, 0f, 0f);
}

int func_686(int iParam0, var uParam1, var uParam2)//Position - 0x822B8
{
	struct<3> Var0[20];
	float fVar1[20];
	int iVar2;
	struct<3> Var3;
	float fVar4;
	int iVar5;
	float fVar6;
	iVar2 = 0;
	Var0[iVar2 /*3*/] = { -988.0314f, -937.3164f, 247.4575f };
	fVar1[iVar2] = 21.7565f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -1190.6515f, -1442.3416f, 274.3851f };
	fVar1[iVar2] = 4.3914f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -1552.3132f, 384.6868f, 103.5778f };
	fVar1[iVar2] = 313.7197f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -1807.507f, 2422.1606f, 238.0954f };
	fVar1[iVar2] = 266.1874f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -676.9284f, 4432.508f, 360.724f };
	fVar1[iVar2] = 272.4361f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 2049.124f, 6062.8164f, 294.5194f };
	fVar1[iVar2] = 225.8041f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 2043.3855f, 3475.935f, 42.2975f };
	fVar1[iVar2] = 116.8867f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 2634.4377f, 2338.4937f, 254.4784f };
	fVar1[iVar2] = 142.5168f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 1590.3884f, 1001.1693f, 287.6988f };
	fVar1[iVar2] = 134.4989f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 2056.5725f, -632.6298f, 94.2403f };
	fVar1[iVar2] = 124.6985f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 1558.5808f, -2094.0803f, 302.2927f };
	fVar1[iVar2] = 97.0006f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 1135.8334f, -3115.1716f, 4.8009f };
	fVar1[iVar2] = 42.7435f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -428.0257f, -2891.29f, 181.5473f };
	fVar1[iVar2] = 2.7579f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -86.4255f, -1548.1797f, 272.6201f };
	fVar1[iVar2] = 335.0247f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 282.3189f, 210.1434f, 212.441f };
	fVar1[iVar2] = 349.689f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 824.9931f, 2404.9763f, 239.2513f };
	fVar1[iVar2] = 355.0965f;
	iVar2++;
	Var0[iVar2 /*3*/] = { 1190.4857f, 4000.3528f, 235.3204f };
	fVar1[iVar2] = 328.8051f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -3013.5188f, 1294.3378f, 31.2512f };
	fVar1[iVar2] = 244.3188f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -205.1947f, 1965.1676f, 181.5578f };
	fVar1[iVar2] = 295.9389f;
	iVar2++;
	Var0[iVar2 /*3*/] = { -457.0207f, 6013.293f, 35.6048f };
	fVar1[iVar2] = 313.8458f;
	iVar2++;
	Var3 = { ENTITY::GET_ENTITY_COORDS(iParam0, true) };
	fVar4 = 10000000f;
	iVar5 = -1;
	iVar2 = 0;
	iVar2 = 0;
	while (iVar2 <= 19)
	{
		fVar6 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var3, Var0[iVar2 /*3*/], true);
		if (fVar6 < fVar4)
		{
			fVar4 = fVar6;
			iVar5 = iVar2;
		}
		iVar2++;
	}
	if (iVar5 >= 0 && iVar5 < 20)
	{
		*uParam1 = { Var0[iVar5 /*3*/] };
		*uParam2 = fVar1[iVar5];
		return 1;
	}
	*uParam1 = { 0f, 0f, 0f };
	*uParam2 = 0f;
	return 0;
}

int func_687(int iParam0)//Position - 0x82676
{
	var uVar0;
	if (ENTITY::GET_ENTITY_MODEL(iParam0) == joaat("blimp"))
	{
		return 0;
	}
	if (!ENTITY::IS_ENTITY_IN_AIR(iParam0))
	{
		return 0;
	}
	if (MISC::GET_GROUND_Z_FOR_3D_COORD(ENTITY::GET_ENTITY_COORDS(iParam0, true), &uVar0, false, false))
	{
	}
	else
	{
		return 0;
	}
	return 1;
}

void func_688(int iParam0, bool bParam1)//Position - 0x826B8
{
	bool bVar0;
	bool bVar1;
	bVar0 = PED::IS_USING_PED_SCUBA_GEAR_VARIATION(iParam0);
	bVar1 = ENTITY::IS_ENTITY_IN_WATER(iParam0);
	if (bVar0 && bVar1)
	{
		Global_97831[bParam1 /*29*/].f_16 = 1;
	}
	else
	{
		Global_97831[bParam1 /*29*/].f_16 = 0;
	}
}

void func_689()//Position - 0x837C5
{
	__LIB_17__::func_86(Global_100164 + 1);
}

int func_690(int iParam0, char* sParam1)//Position - 0x837D7
{
	switch (iParam0)
	{
		case 42:
			StringCopy(sParam1, "v_PRFTa_FRANKLIN1a", 24);
			return 1;
			break;
		case 43:
			StringCopy(sParam1, "v_PRFTa_FRANKLIN1c", 24);
			return 1;
			break;
		case 44:
			StringCopy(sParam1, "v_PRFTa_FRANKLIN1d", 24);
			return 1;
			break;
		case 45:
			StringCopy(sParam1, "v_PRFTa_FRANKLIN1e", 24);
			return 1;
			break;
		case 80:
			StringCopy(sParam1, "v_PRM2_SAVEHOUSE1_b", 24);
			return 1;
			break;
		case 261:
			StringCopy(sParam1, "v_PRT_FIGHTCASINO", 24);
			return 1;
			break;
		case 304:
			StringCopy(sParam1, "v_PRT6_SMOKECRYSTAL", 24);
			return 1;
			break;
		case 305:
			StringCopy(sParam1, "v_PRT6_METHLAB", 24);
			return 1;
			break;
		case 99:
			StringCopy(sParam1, "v_PRM2_DROPOFFDAU_a", 24);
			return 1;
			break;
		case 101:
			StringCopy(sParam1, "v_PRM2_DROPOFFSON_a", 24);
			return 1;
			break;
		case 102:
			StringCopy(sParam1, "v_PRM2_DROPOFFSON_b", 24);
			return 1;
			break;
		case 100:
			StringCopy(sParam1, "v_PRM2_DROPOFFDAU_b", 24);
			return 1;
			break;
		case 130:
			StringCopy(sParam1, "v_PRM6_DRINKINGBEER", 24);
			return 1;
			break;
		case 128:
			StringCopy(sParam1, "v_PRM6_HOUSETV_a", 24);
			return 1;
			break;
		case 126:
			StringCopy(sParam1, "v_PRM6_MORNING_a", 24);
			return 1;
			break;
		case 132:
			StringCopy(sParam1, "v_PRM6_DEPRESSED", 24);
			return 1;
			break;
		case 131:
			StringCopy(sParam1, "v_PRM6_ONPHONE", 24);
			return 1;
			break;
		case 96:
			StringCopy(sParam1, "v_PRM4_LUNCH_b", 24);
			return 1;
			break;
		case 79:
			StringCopy(sParam1, "v_PRM2_SAVEHOUSE1_a", 24);
			return 1;
			break;
		case 174:
			StringCopy(sParam1, "v_PRM_S_FAMILY4", 24);
			return 1;
			break;
		case 260:
			StringCopy(sParam1, "v_PRT_FIGHTYAUCLUB_b", 24);
			return 1;
			break;
		case 256:
			StringCopy(sParam1, "v_PRT_FIGHTBAR_a", 24);
			return 1;
			break;
		case 257:
			StringCopy(sParam1, "v_PRT_FIGHTBAR_b", 24);
			return 1;
			break;
		case 258:
			StringCopy(sParam1, "v_PRT_FIGHTBAR_c", 24);
			return 1;
			break;
		case 309:
			StringCopy(sParam1, "v_PRT6_TRAF_AIR", 24);
			return 1;
			break;
		case 313:
			StringCopy(sParam1, "v_PRT6_LAKE", 24);
			return 1;
			break;
		case 307:
			StringCopy(sParam1, "v_PRT6_HUNTING2", 24);
			return 1;
			break;
		case 306:
			StringCopy(sParam1, "v_PRT6_HUNTING1", 24);
			return 1;
			break;
		case 308:
			StringCopy(sParam1, "v_PRT6_HUNTING3", 24);
			return 1;
			break;
		case 312:
			StringCopy(sParam1, "v_PRT_CN_PIER", 24);
			return 1;
			break;
		case 268:
			StringCopy(sParam1, "v_PRT_CN_WAKETRAIN", 24);
			return 1;
			break;
		case 110:
			StringCopy(sParam1, "v_PRM_BENCHCALL_a", 24);
			return 1;
			break;
		case 111:
			StringCopy(sParam1, "v_PRM_BENCHCALL_b", 24);
			return 1;
			break;
		case 265:
			StringCopy(sParam1, "v_PRT_CN_WAKETRASH_b", 24);
			return 1;
			break;
		case 272:
			StringCopy(sParam1, "v_PRT_SC_ALLEYDRUNK", 24);
			return 1;
			break;
		case 279:
			StringCopy(sParam1, "v_PRT_NAKED_GARDEN", 24);
			return 1;
			break;
		case 240:
			StringCopy(sParam1, "v_PRT_CN_CHATEAU_b", 24);
			return 1;
			break;
		case 241:
			StringCopy(sParam1, "v_PRT_CN_CHATEAU_c", 24);
			return 1;
			break;
		case 242:
			StringCopy(sParam1, "v_PRT_CR_CHATEAU_d", 24);
			return 1;
			break;
		case 266:
			StringCopy(sParam1, "v_PRT_CR_WAKEBEACH", 24);
			return 1;
			break;
		case 267:
			StringCopy(sParam1, "v_PRT_CN_WAKEBARN", 24);
			return 1;
			break;
		case 269:
			StringCopy(sParam1, "v_PRT_CR_WAKEROOFTOP", 24);
			return 1;
			break;
		case 270:
			StringCopy(sParam1, "v_PRT_CN_WAKEMOUNTAIN", 24);
			return 1;
			break;
		case 194:
			StringCopy(sParam1, "v_PRF_KUSH_DOC_b", 24);
			return 1;
			break;
		case 195:
			StringCopy(sParam1, "v_PRF_KUSH_DOC_c", 24);
			return 1;
			break;
	}
	StringCopy(sParam1, "null", 24);
	return 0;
}

int func_691(int iParam0, char* sParam1, var uParam2, var uParam3, var uParam4, var uParam5, var uParam6, var uParam7)//Position - 0x83BCE
{
	switch (iParam0)
	{
		case 231:
			StringCopy(sParam1, "lkexcile2_chase", 16);
			*uParam2 = 100;
			*uParam3 = 6500f;
			*uParam4 = 12700f;
			*uParam5 = (5000f + 12700f);
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
		case 75:
			StringCopy(sParam1, "scene_m_fbi2_", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 6200f;
			*uParam5 = (5000f + 6200f);
			*uParam6 = 0.4f;
			*uParam7 = 0.8f;
			return 1;
			break;
		case 76:
			StringCopy(sParam1, "scene_f_fra2_", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam5 = 8500f;
			*uParam4 = 4750f;
			*uParam6 = 0.4f;
			*uParam7 = 0.7f;
			return 1;
			break;
		case 173:
			StringCopy(sParam1, "scene_m_biking", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 5000f;
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
		case 281:
			StringCopy(sParam1, "scene_t_chaseA", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 7500f;
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
		case 282:
			StringCopy(sParam1, "scene_t_chaseB", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 1500f;
			*uParam5 = 10000f;
			*uParam6 = 0.5f;
			*uParam7 = 0.75f;
			return 1;
			break;
		case 283:
			StringCopy(sParam1, "scene_t_chaseC", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 1500f;
			*uParam5 = 10000f;
			*uParam6 = 0.9f;
			*uParam7 = 1.1f;
			return 1;
			break;
		case 284:
			StringCopy(sParam1, "scene_t_chaseD", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 5000f;
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
		case 275:
			StringCopy(sParam1, "scene_t_policeA", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 10000f;
			*uParam6 = 0.5f;
			*uParam7 = 0.75f;
			return 1;
			break;
		case 276:
			StringCopy(sParam1, "scene_t_policeB", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 5000f;
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
		case 277:
			StringCopy(sParam1, "scene_t_policeC", 16);
			*uParam2 = 1;
			*uParam3 = 1000f;
			*uParam4 = 2000f;
			*uParam5 = 5000f;
			*uParam6 = 1f;
			*uParam7 = 1f;
			return 1;
			break;
	}
	StringCopy(sParam1, "", 16);
	*uParam2 = -1;
	*uParam3 = -1f;
	*uParam4 = -1f;
	*uParam5 = -1f;
	*uParam6 = 0f;
	*uParam7 = 0f;
	return 0;
}

int func_692(struct<3> Param0, var uParam1, var uParam2, var uParam3)//Position - 0x8C29F
{
	struct<3> Var0;
	struct<3> Var1;
	float fVar2;
	struct<3> Var3;
	int iVar4;
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -254.8389f, -2026.9094f, 29.0359f, -394.2681f, -1909.8342f, 48.946f, 122.5f, false, true))
	{
		Var0 = { -254.8389f, -2026.9094f, 29.0359f };
		Var1 = { -394.2681f, -1909.8342f, 48.946f };
		fVar2 = 122.5f;
		Var3 = { Var0 * Vector(1f, 1f, 1f) + Var1 * Vector(1f, 1f, 1f) / Vector(2f, 2f, 2f) };
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Var0, Var3.f_0, Var3.f_1, Var1.f_2, fVar2, false, true, 0))
		{
			*uParam1 = { -231.1906f, -1995.7928f, 28.946f };
			*uParam2 = 256.7039f;
			*uParam3 = 6;
			return 1;
		}
		if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), Var3.f_0, Var3.f_1, Var0.f_2, Var1, fVar2, false, true, 0))
		{
			*uParam1 = { -342.98f, -1879.652f, 28.9463f };
			*uParam2 = 353.8719f;
			*uParam3 = 7;
			return 1;
		}
		*uParam1 = { -342.98f, -1879.652f, 28.9463f };
		*uParam2 = 353.8719f;
		*uParam3 = 6;
		return 1;
	}
	iVar4 = INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
	switch (iVar4)
	{
		case joaat("strp3mainrm"):
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 127.1808f, -1277.3215f, 28.330606f, 120.22255f, -1281.5446f, 31.23053f, 4f, false, true))
			{
				*uParam1 = { 118.3254f, -1284.7686f, 27.2739f };
				*uParam2 = 16.7668f;
				*uParam3 = 0;
				return 1;
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 132.83696f, -1287.9364f, 28.269539f, 127.83243f, -1279.5791f, 31.019539f, 4f, false, true))
			{
				*uParam1 = { 127.1327f, -1283.6587f, 28.2788f };
				*uParam2 = 255.9372f;
				*uParam3 = 1;
				return 1;
			}
			break;
		case joaat("GtaMloRoom001"):
		case joaat("GtaMloRoom002"):
		case joaat("GtaMloRoom003"):
		case joaat("GtaMloRoom004"):
		case joaat("GtaMloRoom005"):
		case joaat("GtaMloRoom006"):
		case joaat("GtaMloRoom007"):
		case joaat("GtaMloRoom008"):
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -415.43646f, 2068.2886f, 113.30017f, -564.9516f, 1884.7025f, 134.04034f, 258.75f, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -596.4706f, 2089.921f, 125.41275f, -581.21344f, 2036.2561f, 136.28363f, 9.5f, false, true))
			{
				*uParam1 = { -598.9213f, 2096.5286f, 129.814f };
				*uParam2 = 25.7278f;
				*uParam3 = 3;
				return 1;
			}
			break;
		case joaat("BedRoom"):
		case joaat("JanitorRoom"):
		case joaat("v_janitor"):
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -112.71304f, -14.207236f, 69.51959f, -109.52924f, -5.697598f, 72.421684f, 6f, false, true))
			{
				*uParam1 = { -105.0006f, -8.013f, 69.5234f };
				*uParam2 = 247.4701f;
				*uParam3 = 5;
				return 1;
			}
			break;
		case joaat("V_57_porchRM"):
		case joaat("v_hospital"):
		case joaat("V_40_Room1"):
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 357.0317f, -590.5166f, 27.89807f, 300.43195f, -569.35443f, 51.65972f, 28.5f, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 299.7401f, -584.8319f, 27.89807f, 328.3058f, -595.8621f, 51.65972f, 28.5f, false, true))
			{
				*uParam1 = { 360.4663f, -585.134f, 27.8231f };
				*uParam2 = 254.2763f;
				*uParam3 = 4;
				return 1;
			}
			break;
		case 0:
		case 2:
			if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 428.29285f, -996.6834f, 24.488642f, 439.54382f, -996.71136f, 28.103334f, 8.6875f, false, true))
			{
				*uParam1 = { 433.8454f, -1011.9464f, 27.7057f };
				*uParam2 = 196.3176f;
				*uParam3 = 2;
				return 1;
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 2331.6475f, 2575.777f, 45.66767f, 2326.4521f, 2564.806f, 49.703575f, 5f, false, true))
			{
				*uParam1 = { 2332.6953f, 2577.6816f, 45.6677f };
				*uParam2 = 321.4395f;
				*uParam3 = 8;
				return 1;
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -415.43646f, 2068.2886f, 113.30017f, -564.9516f, 1884.7025f, 134.04034f, 258.75f, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -596.4706f, 2089.921f, 125.41275f, -581.21344f, 2036.2561f, 136.28363f, 9.5f, false, true))
			{
				*uParam1 = { -598.9213f, 2096.5286f, 129.814f };
				*uParam2 = 25.7278f;
				*uParam3 = 3;
				return 1;
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 357.0317f, -590.5166f, 27.89807f, 300.43195f, -569.35443f, 51.65972f, 28.5f, false, true) || OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, 299.7401f, -584.8319f, 27.89807f, 328.3058f, -595.8621f, 51.65972f, 28.5f, false, true))
			{
				*uParam1 = { 360.4663f, -585.134f, 27.8231f };
				*uParam2 = 254.2763f;
				*uParam3 = 4;
				return 1;
			}
			else if (OBJECT::IS_POINT_IN_ANGLED_AREA(Param0, -112.71304f, -14.207236f, 69.51959f, -109.52924f, -5.697598f, 72.421684f, 6f, false, true))
			{
				*uParam1 = { -105.0006f, -8.013f, 69.5234f };
				*uParam2 = 247.4701f;
				*uParam3 = 5;
				return 1;
			}
			else
			{
				*uParam3 = -1;
				return 0;
			}
			break;
		default:
			*uParam3 = -1;
			return 0;
			break;
	}
	*uParam3 = -1;
	return 0;
}

bool func_693(var uParam0)//Position - 0x8CC87
{
	int iVar0;
	struct<3> Var1;
	float fVar2;
	int iVar3;
	struct<3> Var4;
	float fVar5;
	iVar0 = Global_113386.f_2363.f_539.f_4323;
	Var1 = { Global_113386.f_2363.f_539.f_2300[iVar0 /*3*/] };
	if (__LIB_0__::func_78(Var1, 0f, 0f, 0f, 0))
	{
		Var1 = { ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false) };
	}
	*uParam0 = 5;
	fVar2 = 9999999f;
	iVar3 = 0;
	while (iVar3 < 5)
	{
		if (BitTest(Global_113386.f_7229.f_11[iVar3], 0))
		{
			Var4 = { Global_95644[iVar3 /*9*/].f_3 };
			fVar5 = SYSTEM::VDIST(Var1, Var4);
			if (fVar5 > 150f)
			{
				if (fVar5 < fVar2)
				{
					*uParam0 = iVar3;
					fVar2 = fVar5;
				}
			}
		}
		iVar3++;
	}
	return *uParam0 != 5;
}

char* func_694(int iParam0)//Position - 0x911EC
{
	switch (iParam0)
	{
		case joaat("v_chopshop"):
			return "v_chopshop";
			break;
		case joaat("v_franklins"):
			return "v_franklins";
			break;
		case joaat("v_franklinshouse"):
			return "v_franklinshouse";
			break;
		case joaat("v_methlab"):
			return "v_methlab";
			break;
		case joaat("v_michael"):
			return "v_michael";
			break;
		case joaat("v_strip3"):
			return "v_strip3";
			break;
		case joaat("v_trailer"):
			return "v_trailer";
			break;
		case joaat("v_trevors"):
			return "v_Trevors";
			break;
	}
	return "";
}

int func_695(int iParam0, var uParam1)//Position - 0x93047
{
	switch (iParam0)
	{
		case 0:
			*uParam1 = Global_97919.f_45;
			return 0;
			break;
		case 1:
			*uParam1 = 3;
			return 1;
			break;
		case 42:
		case 43:
		case 44:
		case 45:
			*uParam1 = 3;
			return 1;
			break;
		case 5:
		case 2:
		case 12:
		case 41:
		case 124:
		case 46:
		case 48:
		case 52:
		case 61:
		case 62:
		case 68:
		case 72:
		case 64:
		case 58:
		case 60:
		case 36:
		case 18:
		case 17:
		case 21:
		case 75:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
		case 103:
		case 104:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 140:
		case 141:
		case 94:
		case 95:
		case 96:
		case 97:
		case 110:
		case 111:
		case 89:
		case 90:
		case 91:
		case 92:
		case 93:
		case 108:
		case 109:
		case 112:
		case 113:
		case 135:
		case 136:
		case 137:
		case 138:
		case 139:
		case 142:
		case 143:
		case 144:
		case 145:
		case 146:
		case 147:
		case 148:
		case 149:
		case 150:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 125:
		case 115:
		case 116:
		case 117:
		case 114:
		case 105:
		case 106:
		case 107:
		case 126:
		case 127:
		case 128:
		case 129:
		case 130:
		case 131:
		case 132:
		case 133:
		case 134:
		case 151:
		case 152:
		case 153:
		case 154:
		case 155:
		case 156:
		case 157:
		case 158:
		case 159:
		case 160:
		case 161:
		case 162:
		case 163:
		case 164:
		case 165:
		case 166:
		case 167:
		case 168:
		case 169:
		case 170:
		case 171:
		case 173:
		case 174:
		case 172:
			*uParam1 = 0;
			return 1;
			break;
	}
	switch (iParam0)
	{
		case 6:
		case 3:
		case 8:
		case 9:
		case 10:
		case 11:
		case 47:
		case 49:
		case 13:
		case 25:
		case 14:
		case 16:
		case 19:
		case 20:
		case 23:
		case 24:
		case 35:
		case 67:
		case 56:
		case 38:
		case 50:
		case 66:
		case 53:
		case 37:
		case 63:
		case 27:
		case 70:
		case 71:
		case 73:
		case 76:
		case 175:
		case 176:
		case 177:
		case 178:
		case 179:
		case 180:
		case 181:
		case 182:
		case 183:
		case 193:
		case 192:
		case 194:
		case 195:
		case 198:
		case 199:
		case 200:
		case 201:
		case 202:
		case 203:
		case 204:
		case 196:
		case 197:
		case 206:
		case 207:
		case 205:
		case 208:
		case 209:
		case 210:
		case 211:
		case 212:
		case 213:
		case 214:
		case 215:
		case 216:
		case 217:
		case 221:
		case 222:
		case 223:
		case 224:
		case 226:
		case 227:
		case 228:
		case 229:
		case 230:
		case 218:
		case 219:
		case 220:
		case 225:
		case 184:
		case 185:
		case 186:
		case 187:
		case 188:
		case 189:
		case 190:
		case 191:
		case 232:
		case 233:
		case 231:
			*uParam1 = 1;
			return 1;
			break;
		case 7:
		case 4:
		case 26:
		case 28:
		case 22:
		case 74:
		case 15:
		case 39:
		case 40:
		case 54:
		case 55:
		case 57:
		case 51:
		case 59:
		case 69:
		case 65:
		case 235:
		case 236:
		case 237:
		case 238:
		case 239:
		case 240:
		case 241:
		case 242:
		case 243:
		case 244:
		case 234:
		case 316:
		case 315:
		case 245:
		case 246:
		case 247:
		case 248:
		case 249:
		case 250:
		case 251:
		case 252:
		case 253:
		case 254:
		case 255:
		case 264:
		case 265:
		case 266:
		case 267:
		case 268:
		case 269:
		case 270:
		case 271:
		case 272:
		case 273:
		case 274:
		case 275:
		case 276:
		case 277:
		case 278:
		case 279:
		case 280:
		case 281:
		case 282:
		case 283:
		case 284:
		case 285:
		case 256:
		case 257:
		case 258:
		case 259:
		case 260:
		case 261:
		case 286:
		case 287:
		case 288:
		case 262:
		case 263:
		case 289:
		case 290:
		case 291:
		case 292:
		case 293:
		case 294:
		case 295:
		case 299:
		case 300:
		case 301:
		case 302:
		case 303:
		case 296:
		case 297:
		case 298:
		case 304:
		case 305:
		case 306:
		case 307:
		case 308:
		case 309:
		case 310:
		case 311:
		case 312:
		case 313:
		case 314:
			*uParam1 = 2;
			return 1;
			break;
	}
	*uParam1 = __LIB_0__::func_484(Global_97919.f_7);
	return 0;
}

void func_696(struct<3> Param0, float fParam1, int iParam2, float fParam3, bool bParam4)//Position - 0x937FC
{
	int iVar0;
	if (bParam4)
	{
		if (!CAM::IS_SCREEN_FADED_OUT())
		{
			if (!CAM::IS_SCREEN_FADING_OUT())
			{
				CAM::DO_SCREEN_FADE_OUT(800);
			}
		}
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			SYSTEM::WAIT(0);
		}
	}
	MISC::CLEAR_AREA(Param0, 5f, true, false, false, false);
	if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
	{
		if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
		{
			ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), Param0, true, false, false, true);
			if (fParam1 != -1f)
			{
				ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), fParam1);
			}
			CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
			CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
			AUDIO::RESET_PED_AUDIO_FLAGS(PLAYER::PLAYER_PED_ID());
		}
	}
	SYSTEM::WAIT(0);
	MISC::SET_GAME_PAUSED(true);
	STREAMING::NEW_LOAD_SCENE_START_SPHERE(Param0, fParam3, 0);
	iVar0 = 0;
	while (!STREAMING::IS_NEW_LOAD_SCENE_LOADED() && iVar0 < iParam2)
	{
		iVar0++;
		SYSTEM::WAIT(0);
	}
	STREAMING::NEW_LOAD_SCENE_STOP();
	MISC::CLEAR_AREA(Param0, 5f, true, false, false, false);
	CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0f, 1f);
	CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0f);
	MISC::SET_GAME_PAUSED(false);
	if (bParam4)
	{
		CAM::DO_SCREEN_FADE_IN(800);
	}
}

int func_697(int* iParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5, int iParam6)//Position - 0x94FBC
{
	int iVar0;
	int iVar1;
	if (*iParam0 == 0)
	{
		return 0;
	}
	iVar0 = 0;
	if (iParam5 == 1)
	{
		iVar0 = 1;
	}
	iVar1 = iParam0->f_123;
	if (iVar1 < 8)
	{
		iParam0->f_2[iVar1 /*15*/] = sParam1;
		iParam0->f_2[iVar1 /*15*/].f_1 = iVar0;
		iParam0->f_2[iVar1 /*15*/].f_2 = iParam6;
		iParam0->f_2[iVar1 /*15*/].f_12 = 0;
		iParam0->f_2[iVar1 /*15*/].f_13 = 0;
		iParam0->f_2[iVar1 /*15*/].f_14 = 0;
		iParam0->f_2[iVar1 /*15*/].f_3[0 /*2*/] = iParam2;
		iParam0->f_2[iVar1 /*15*/].f_3[0 /*2*/].f_1 = iParam3;
		if (iParam4 == 1)
		{
			MISC::SET_BIT(&(iParam0->f_2[iVar1 /*15*/].f_13), 0);
		}
		iParam0->f_2[iVar1 /*15*/].f_14++;
		iParam0->f_123++;
		return 1;
	}
	return 0;
}

int func_698(int iParam0, int iParam1)//Position - 0x955F7
{
	if (Global_113386.f_10194[iParam0 /*12*/].f_5 == 1)
	{
		if (iParam1 == 1)
		{
		}
		return 1;
	}
	return 0;
}

int func_699()//Position - 0x81D19
{
	if (__LIB_3__::func_423(Global_1574629))
	{
		return __LIB_0__::func_199(Global_1574629);
	}
	return CLOCK::GET_CLOCK_HOURS();
}

int func_700()//Position - 0x7E580
{
	__LIB_9__::func_766(PLAYER::PLAYER_PED_ID());
	__LIB_12__::func_915(1);
	return 1;
}

void func_701(bool bParam0)//Position - 0x9440D
{
	__LIB_15__::func_950(joaat("Player_Zero"), 12, 20, bParam0);
	__LIB_15__::func_950(joaat("Player_Zero"), 12, 21, bParam0);
	__LIB_15__::func_950(joaat("Player_Zero"), 12, 22, bParam0);
	__LIB_15__::func_950(joaat("Player_One"), 12, 13, bParam0);
	__LIB_15__::func_950(joaat("Player_One"), 12, 14, bParam0);
	__LIB_15__::func_950(joaat("Player_One"), 12, 15, bParam0);
	__LIB_15__::func_950(joaat("Player_Two"), 12, 17, bParam0);
	__LIB_15__::func_950(joaat("Player_Two"), 12, 18, bParam0);
	__LIB_15__::func_950(joaat("Player_Two"), 12, 19, bParam0);
}

void func_702(bool bParam0, int iParam1, bool bParam2)//Position - 0xC5E0
{
	if (__LIB_0__::func_374(bParam0))
	{
		if (bParam2)
		{
			MISC::SET_BIT(&(Global_95468[iParam1]), bParam0);
		}
		else
		{
			MISC::CLEAR_BIT(&(Global_95468[iParam1]), bParam0);
		}
	}
}

int func_703()//Position - 0x1D552
{
	if (iLocal_175 == 0)
	{
		return joaat("A_M_Y_Business_01");
	}
	return iLocal_175;
}

void func_704(int iParam0)//Position - 0x1E9CE
{
	int iVar0;
	int iVar1;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 12);
	if (iLocal_176 >= -1 && iLocal_177 >= -1)
	{
		while (iVar0 == iLocal_176 || iVar0 == iLocal_177)
		{
			iVar0++;
		}
	}
	else if (iLocal_176 >= -1)
	{
		if (iVar0 == iLocal_176)
		{
			iVar0++;
		}
	}
	iVar1 = iVar0;
	switch (iVar1)
	{
		case 0:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 0, 0);
			break;
		case 1:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 2, 2);
			break;
		case 2:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 4, 4);
			break;
		case 3:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 27, 27);
			break;
		case 4:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 7, 7);
			break;
		case 5:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 73, 73);
			break;
		case 6:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 68, 68);
			break;
		case 7:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 62, 62);
			break;
		case 8:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 132, 132);
			break;
		case 9:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 117, 0);
			break;
		case 10:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 52, 52);
			break;
		case 11:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 88, 88);
			break;
		case 12:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 1, 1);
			break;
		case 13:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 36, 36);
			break;
		case 14:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 95, 95);
			break;
		default:
			VEHICLE::SET_VEHICLE_COLOURS(iParam0, 73, 73);
			break;
	}
}

float func_705(int iParam0)//Position - 0x1EC01
{
	float fVar0;
	VEHICLE::REQUEST_VEHICLE_RECORDING(iParam0, &cLocal_162);
	while (!VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(iParam0, &cLocal_162))
	{
		SYSTEM::WAIT(0);
	}
	fVar0 = VEHICLE::GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(iParam0, &cLocal_162);
	VEHICLE::REMOVE_VEHICLE_RECORDING(iParam0, &cLocal_162);
	return fVar0;
}

int func_706(int iParam0)//Position - 0x243E
{
	if (__LIB_0__::func_374(iParam0))
	{
		return __LIB_0__::func_375(iParam0);
	}
	else if (iParam0 != 145)
	{
	}
	return 0;
}

int func_707(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, int iParam5, int iParam6, char* sParam7, char* sParam8, char* sParam9, char* sParam10, char* sParam11, bool bParam12, bool bParam13, bool bParam14, int iParam15)//Position - 0x49104
{
	return __LIB_17__::func_239(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 1, iParam4, iParam5, iParam6, 0, sParam7, sParam8, sParam9, sParam10, sParam11, __LIB_0__::func_591(), bParam12, bParam13, __LIB_0__::func_591(), 0, 0, bParam14, iParam15, 0, 0, 0, 1, 1065353216);
}

void func_708(bool bParam0)//Position - 0x12BD
{
	if (!CAM::IS_SCREEN_FADED_OUT())
	{
		if (!CAM::IS_SCREEN_FADING_OUT())
		{
			CAM::DO_SCREEN_FADE_OUT(800);
		}
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			if (bParam0)
			{
				HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
			}
			SYSTEM::WAIT(0);
		}
	}
}

void func_709(bool bParam0, int iParam1)//Position - 0xADA8
{
	if (__LIB_0__::func_374(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_13__::func_741(bParam0, iParam1));
	}
	else if (bParam0 != 145)
	{
	}
}

void func_710(int iParam0, float fParam1)//Position - 0x7C351
{
	if (!ENTITY::IS_ENTITY_DEAD(*iParam0, false))
	{
		if (VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(*iParam0))
		{
			VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(*iParam0, (fParam1 - VEHICLE::GET_TIME_POSITION_IN_RECORDING(*iParam0)));
		}
	}
}

void func_711(int iParam0)//Position - 0x8B5E5
{
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		if (VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(iParam0))
		{
			VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(iParam0);
		}
	}
}

void func_712(struct<3> Param0, float fParam1, int iParam2, int iParam3)//Position - 0x9169A
{
	int iVar0;
	iVar0 = MISC::GET_GAME_TIMER();
	while ((MISC::GET_GAME_TIMER() - iVar0) < iParam3)
	{
		if (!STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
		{
			STREAMING::NEW_LOAD_SCENE_START_SPHERE(Param0, fParam1, iParam2);
		}
		else if (STREAMING::IS_NEW_LOAD_SCENE_LOADED())
		{
			iVar0 = 0;
		}
		SYSTEM::WAIT(0);
	}
	STREAMING::NEW_LOAD_SCENE_STOP();
}

void func_713(var uParam0, var uParam1, int iParam2, float fParam3, int iParam4, int iParam5, int iParam6, int iParam7, float fParam8)//Position - 0xA0E5E
{
	uParam0->f_5 = uParam1;
	uParam0->f_6 = iParam2;
	uParam0->f_12 = fParam3;
	uParam0->f_14 = iParam4;
	uParam0->f_15 = iParam5;
	uParam0->f_16 = iParam6;
	uParam0->f_17 = iParam7;
	uParam0->f_13 = fParam8;
}

void func_714(var uParam0, char* sParam1, int iParam2, var uParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, int iParam10, int iParam11, int iParam12, int iParam13, int iParam14, int iParam15, int iParam16, int iParam17)//Position - 0xB86ED
{
	int iVar0;
	int iVar1;
	iVar0 = -1;
	iVar1 = 0;
	while (iVar1 <= 9)
	{
		if (iVar0 == -1)
		{
			if (__LIB_0__::func_929(7, iVar1) == 0)
			{
				iVar0 = iVar1;
			}
		}
		iVar1++;
	}
	if (iVar0 > -1)
	{
		Global_1649593.f_1 = 1;
		__LIB_0__::func_928(7, iVar0);
		Global_1649593.f_4659[iVar0] = uParam0;
		StringCopy(&(Global_1649593.f_4659.f_11[iVar0 /*16*/]), sParam1, 64);
		Global_1649593.f_4659.f_172[iVar0] = iParam2;
		Global_1649593.f_4659.f_216[iVar0] = uParam3;
		Global_1649593.f_4659.f_183[iVar0] = iParam4;
		Global_1649593.f_4659.f_194[iVar0] = iParam5;
		Global_1649593.f_4659.f_249[iVar0] = iParam6;
		Global_1649593.f_4659.f_260[iVar0] = iParam7;
		Global_1649593.f_4659.f_205[iVar0] = iParam8;
		Global_1649593.f_4659.f_314[iVar0] = iParam9;
		Global_1649593.f_4659.f_325[iVar0] = iParam10;
		Global_1649593.f_4659.f_357[iVar0] = iParam11;
		Global_1649593.f_4659.f_238[iVar0] = iParam12;
		Global_1649593.f_4659.f_271[iVar0] = iParam13;
		Global_1649593.f_4659.f_368[iVar0] = iParam14;
		Global_1649593.f_4659.f_379[iVar0] = iParam15;
		Global_1649593.f_4659.f_390[iVar0] = iParam16;
		Global_1649593.f_4659.f_227[iVar0] = iParam17;
	}
}

int func_715()//Position - 0xBDDC9
{
	return 2110;
}

void func_716(int* iParam0, bool bParam1)//Position - 0xBE07F
{
	if (bParam1)
	{
		MISC::SET_BIT(&(iParam0->f_13), 22);
	}
	else
	{
		MISC::CLEAR_BIT(&(iParam0->f_13), 22);
	}
}

void func_717()//Position - 0xCB7D3
{
	Global_112410 = 1;
}

void func_718()//Position - 0xD017F
{
	Global_112410 = 0;
}

int func_719(bool bParam0, int iParam1)//Position - 0xAD3B
{
	if (__LIB_0__::func_374(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_13__::func_741(bParam0, iParam1));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

int func_720(bool bParam0)//Position - 0x29B9C
{
	if (!__LIB_0__::func_374(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_0__::func_493(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_721(bool bParam0)//Position - 0x29BC6
{
	if (!__LIB_0__::func_374(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_0__::func_493(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
}

void func_722(int iParam0, int iParam1)//Position - 0x83DDB
{
	int iVar0;
	char cVar1[24];
	bool bVar2;
	if (iParam1 != 0)
	{
		StringCopy(&cVar1, "FEED_CREW_S" /* GXT: ~a~ - Skills +25% */, 24);
		StringIntConCat(&cVar1, iParam1, 24);
		HUD::BEGIN_TEXT_COMMAND_THEFEED_POST(&cVar1);
		iVar0 = 0;
		while (iVar0 < Global_96470[iParam0 /*19*/])
		{
			bVar2 = Global_113386.f_1.f_12[iParam0 /*6*/][iVar0];
			if (!BitTest(Global_113386.f_1.f_118, bVar2))
			{
				HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(__LIB_0__::func_593(bVar2));
			}
			iVar0++;
		}
		HUD::END_TEXT_COMMAND_THEFEED_POST_TICKER(false, true);
		if (!__LIB_0__::func_67(56))
		{
			if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
			{
				__LIB_0__::func_151("AM_H_CRWLVL" /* GXT: Crew gain experience with each heist you take them on. Their skill will improve with each job completed. */, -1);
				__LIB_0__::func_592(56);
			}
		}
	}
}

void func_723(int iParam0, int iParam1)//Position - 0x83FF5
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_596(iParam1, Global_96453[iParam0 /*3*/].f_1, Global_96453[iParam0 /*3*/].f_2);
	iVar1 = __LIB_0__::func_595(iParam1);
	if (iVar0 < iVar1)
	{
		iVar2 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) * 0.25f));
		iVar3 = (iVar0 + iVar2);
		if (iVar3 > iVar1)
		{
			__LIB_0__::func_594(iParam1, iVar1, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
		else
		{
			__LIB_0__::func_594(iParam1, iVar3, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
	}
}

void func_724(int iParam0, int iParam1)//Position - 0x84286
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar0 = __LIB_0__::func_596(iParam1, Global_96453[iParam0 /*3*/].f_1, Global_96453[iParam0 /*3*/].f_2);
	iVar1 = __LIB_0__::func_597(iParam1);
	if (iVar0 < iVar1)
	{
		iVar2 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar1) * 0.25f));
		iVar3 = (iVar0 + iVar2);
		if (iVar3 > iVar1)
		{
			__LIB_0__::func_594(iParam1, iVar1, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
		else
		{
			__LIB_0__::func_594(iParam1, iVar3, &(Global_96453[iParam0 /*3*/].f_1), &(Global_96453[iParam0 /*3*/].f_2));
		}
	}
}

int func_725(int iParam0, int iParam1)//Position - 0x86BD0
{
	if (__LIB_0__::func_617(iParam0) != 1)
	{
		return -1;
	}
	return __LIB_16__::func_836(iParam0, iParam1);
}

void func_726(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x86C18
{
	__LIB_16__::func_837(iParam0, "", iParam1, iParam2, bParam3);
}

int func_727(int iParam0, bool bParam1)//Position - 0x92724
{
	bool bVar0;
	bool bVar1;
	if (!iParam0->f_39)
	{
		iParam0->f_7 = 4;
		iParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = iParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_482(__LIB_15__::func_944()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || iParam0->f_24[bParam1] != 0) || ((__LIB_13__::func_765(bParam1) && __LIB_13__::func_764(bParam1)) && !iParam0->f_18[bParam1]))
			{
				if (!iParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*iParam0)[bParam1]) || bVar0)
					{
						if (iParam0->f_34[bParam1] != 1 && iParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (iParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				iParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	iParam0->f_39 = 0;
	return 0;
}

void func_728(var uParam0, int iParam1, bool bParam2, var uParam3, var uParam4, var uParam5, var uParam6)//Position - 0x9B087
{
	int iVar0;
	iVar0 = 0;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == 3)
		{
			iVar0 = 1;
		}
	}
	else if (__LIB_0__::func_563() == __LIB_0__::func_484(iParam1))
	{
		iVar0 = 1;
	}
	switch (iParam1)
	{
		case 0:
			*uParam4 = 3;
			*uParam6 = 0;
			if (!__LIB_13__::func_765(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_13__::func_764(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 1:
			*uParam4 = 0;
			*uParam6 = 0;
			if (!__LIB_13__::func_765(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_13__::func_764(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 2:
			*uParam4 = 1;
			*uParam6 = 0;
			if (!__LIB_13__::func_765(iParam1))
			{
				*uParam3 = 3;
			}
			else if (!__LIB_13__::func_764(iParam1))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if ((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))) || __LIB_0__::func_2(0)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
		case 3:
			*uParam4 = 2;
			*uParam6 = 0;
			if ((((((!uParam0->f_23 || Global_3) || (uParam0->f_23 && ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10)))) || (uParam0->f_23 && __LIB_0__::func_2(0))) || (uParam0->f_23 && Global_43018)) || !__LIB_13__::func_748()) || !__LIB_15__::func_970(0))
			{
				*uParam3 = 2;
			}
			else
			{
				*uParam3 = 1;
			}
			if (uParam0->f_23 && *uParam3 == 1)
			{
				if (((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10)) || Global_43018)
				{
					*uParam3 = 2;
				}
			}
			break;
	}
	if (iParam1 != 3)
	{
		if (iVar0 || uParam0->f_34[iParam1] == 2)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_34[iParam1] == 1 || uParam0->f_18[iParam1]) || ((!uParam0->f_23 && PED::IS_PED_INJURED((*uParam0)[iParam1])) && *uParam3 == 1)) || (uParam0->f_23 && BitTest(Global_97919.f_47, iParam1)))
		{
			if (*uParam3 == 1)
			{
				*uParam3 = 2;
			}
		}
		else if (uParam0->f_24[iParam1] != 0)
		{
			*uParam3 = 1;
		}
		else if (((uParam0->f_23 && !BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1)) && !Global_3) && !__LIB_0__::func_2(0))
		{
			if ((((__LIB_0__::func_540(0) || __LIB_0__::func_540(3)) || __LIB_0__::func_540(2)) || __LIB_0__::isGlobal_43052EqualsValue(9)) || __LIB_0__::isGlobal_43052EqualsValue(10))
			{
			}
			else
			{
				*uParam3 = 1;
			}
		}
	}
	else
	{
		*uParam3 = 3;
	}
	if ((iVar0 && uParam0->f_34[iParam1] == 0) || uParam0->f_34[iParam1] == 3)
	{
		if (!__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			*uParam6 = 1;
		}
	}
	if (bParam2)
	{
		__LIB_13__::func_766(uParam0, iParam1, uParam5);
	}
}

void func_729(int iParam0)//Position - 0x76F53
{
	bool bVar0;
	bVar0 = __LIB_0__::func_650(iParam0);
	if (__LIB_0__::func_374(bVar0) && !PED::IS_PED_INJURED(iParam0))
	{
		Global_113386.f_2363.f_539.f_2296[bVar0] = __LIB_11__::func_762();
	}
}

bool func_730(var uParam0, char* sParam1, char* sParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7)//Position - 0x868B9
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam4, iParam5, iParam6);
	if (iParam3 > 7)
	{
		if (iParam3 < 12)
		{
			iParam3 = 7;
		}
	}
	Global_21612 = 0;
	Global_21614 = 0;
	Global_21619 = 0;
	Global_22596 = 0;
	Global_22598 = 1;
	Global_22602 = 0;
	Global_22600 = iParam7;
	Global_2883585 = 0;
	return __LIB_17__::func_183(sParam2, iParam3, 0);
}

bool func_731(var uParam0, char* sParam1, char* sParam2, char* sParam3, int iParam4, int iParam5, int iParam6)//Position - 0xAA410
{
	__LIB_0__::func_487(uParam0, 145, sParam1, iParam5, iParam6, 0);
	if (iParam4 > 7)
	{
		if (iParam4 < 12)
		{
			iParam4 = 7;
		}
	}
	Global_21612 = 0;
	Global_21619 = 0;
	Global_21614 = 0;
	Global_22596 = 1;
	Global_22598 = 0;
	Global_22602 = 0;
	StringCopy(&Global_22609, sParam3, 24);
	Global_2883585 = 0;
	return __LIB_17__::func_183(sParam2, iParam4, 0);
}

int func_732(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, var uParam4, int iParam5, int iParam6, int iParam7, char* sParam8, char* sParam9, char* sParam10, char* sParam11, char* sParam12, char* sParam13, char* sParam14, bool bParam15, bool bParam16, bool bParam17, int iParam18)//Position - 0xAE9B8
{
	return __LIB_17__::func_223(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 5, uParam4, iParam5, iParam6, iParam7, sParam8, sParam9, sParam10, sParam11, sParam12, sParam13, bParam15, bParam16, sParam14, 0, 0, bParam17, iParam18, 0, 0, 0, 1, 1065353216);
}

int func_733(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, char* sParam5, char* sParam6, char* sParam7, bool bParam8, int iParam9, bool bParam10, int iParam11)//Position - 0xAEA02
{
	return __LIB_17__::func_223(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 5, 0, 0, 0, iParam4, sParam5, __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), sParam6, 0, bParam8, sParam7, 0, iParam9, bParam10, iParam11, 0, 0, 0, 1, 1065353216);
}

void func_734(int iParam0)//Position - 0x25651
{
	struct<7> Var0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	float fVar4;
	int iVar5;
	int iVar6;
	bool bVar7;
	int iVar8;
	int iVar9;
	if (!__LIB_0__::func_346())
	{
		return;
	}
	if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		return;
	}
	Var0 = { __LIB_0__::func_403(iParam0) };
	if (BitTest(Var0.f_4, 2))
	{
		__LIB_13__::func_730(iParam0, &Var0);
	}
	if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
	{
		if (CUTSCENE::IS_CUTSCENE_PLAYING())
		{
			return;
		}
	}
	bVar1 = false;
	bVar2 = false;
	fVar4 = MISC::GET_DISTANCE_BETWEEN_COORDS(Var0, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), true);
	if ((BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] == 2) && fVar4 > 210f)
	{
		MISC::CLEAR_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
		Global_38430[iParam0] = 0;
	}
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("startup_positioning")) == 0)
	{
		if (BitTest(Global_38657[(iParam0 / 32)], (iParam0 % 32)))
		{
			if (fVar4 < 25f)
			{
				if (Global_100493.f_373 == 0)
				{
					if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false))
					{
						Global_100493.f_373 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
					}
				}
				iVar5 = Global_100493.f_373;
				iVar6 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
				if (iVar5 == iVar6 && iVar5 != 0)
				{
					MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
					Global_38884[iParam0] = 3;
					MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
				}
			}
			MISC::CLEAR_BIT(&(Global_38657[(iParam0 / 32)]), (iParam0 % 32));
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)))
	{
		iVar3 = Global_38884[iParam0];
	}
	else if (BitTest(Var0.f_4, 0))
	{
		if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive)
		{
			iVar3 = __LIB_16__::func_37(iParam0);
		}
		else
		{
			iVar3 = 0;
		}
		if (__LIB_0__::isGlobal_43052EqualsValue(14))
		{
			iVar3 = 0;
		}
	}
	else if (BitTest(Var0.f_4, 1) && SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("ambient_solomon")) == 0)
	{
		if (__LIB_16__::func_36())
		{
			iVar3 = 0;
		}
		else
		{
			iVar3 = 1;
		}
	}
	else
	{
		iVar3 = Global_113386.f_7261[iParam0];
	}
	if (Global_39111[iParam0] != iVar3)
	{
		bVar1 = true;
	}
	if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
	{
		if (!BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) || (Global_38430[iParam0] == 0 && Global_38884[iParam0] != 2))
		{
			bVar1 = true;
		}
	}
	if (bVar1)
	{
		if (!Global_38411)
		{
		}
		else
		{
			if (!OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(Var0.f_5))
			{
				OBJECT::ADD_DOOR_TO_SYSTEM(Var0.f_5, Var0.f_3, Var0, false, false, false);
			}
			switch (iVar3)
			{
				case 1:
					if (BitTest(Var0.f_4, 3))
					{
						bVar7 = true;
					}
					else if (fVar4 > 3f || MISC::ABSF(OBJECT::DOOR_SYSTEM_GET_OPEN_RATIO(Var0.f_5)) <= 0.015f)
					{
						iVar8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
						iVar9 = INTERIOR::GET_INTERIOR_AT_COORDS(Var0);
						if (iVar8 != iVar9 || iVar8 == 0)
						{
							bVar7 = true;
						}
					}
					if (bVar7)
					{
						if (Var0.f_6 != 0f)
						{
							OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
						}
						OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
						bVar2 = true;
					}
					break;
				case 4:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 2:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 0:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, true);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 3:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, 0, false, true);
					bVar2 = true;
					break;
				case 5:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				case 6:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				default:
					if (Var0.f_6 != 0f)
					{
						OBJECT::DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Var0.f_5, Var0.f_6, false, false);
					}
					OBJECT::DOOR_SYSTEM_SET_DOOR_STATE(Var0.f_5, iVar3, false, true);
					bVar2 = true;
					break;
				}
		}
		if (bVar2)
		{
			MISC::CLEAR_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			Global_39111[iParam0] = iVar3;
		}
	}
	if (BitTest(Global_38421[(iParam0 / 32)], (iParam0 % 32)) && Global_38884[iParam0] != 2)
	{
		MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
		__LIB_0__::func_401(iParam0);
		if (Global_38430[iParam0] < 2)
		{
			Global_38430[iParam0]++;
		}
	}
}

void func_735(int iParam0, var uParam1, int iParam2)//Position - 0xBF7B
{
	int iVar0;
	int iVar1;
	struct<50> Var2;
	struct<14> Var3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	Var2 = 12;
	Var2.f_13 = 12;
	Var2.f_26 = 12;
	Var2.f_39 = 9;
	Var2.f_49 = 9;
	iVar4 = ENTITY::GET_ENTITY_MODEL(iParam0);
	__LIB_17__::func_236(iParam0, &Var2, 0, -1);
	__LIB_17__::func_236(iParam0, uParam1, iParam2, -1);
	iVar5 = 0;
	iVar6 = 0;
	iVar0 = 0;
	while (iVar0 < 12)
	{
		if (uParam1->f_13[iVar0] != Var2.f_13[iVar0] || (*uParam1)[iVar0] != Var2[iVar0])
		{
			if (__LIB_0__::func_230(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_0__::func_231(iVar4, __LIB_0__::func_33(iVar0), __LIB_0__::func_206(iParam0, Var2.f_13[iVar0], Var2[iVar0], __LIB_0__::func_33(iVar0)), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	iVar0 = 0;
	while (iVar0 < 9)
	{
		if (uParam1->f_39[iVar0] != Var2.f_39[iVar0] || uParam1->f_49[iVar0] != Var2.f_49[iVar0])
		{
			if (__LIB_0__::func_230(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 2, uParam1->f_59, -1) };
				uParam1->f_13[2] = Var3.f_3;
				(*uParam1)[2] = Var3.f_4;
				iVar5 = 1;
			}
			if (__LIB_0__::func_231(iVar4, 14, __LIB_0__::func_349(iParam0, Var2.f_39[iVar0], Var2.f_49[iVar0], iVar0), &iVar1))
			{
				Var3 = { __LIB_13__::func_798(iVar4, 1, uParam1->f_62, -1) };
				uParam1->f_13[1] = Var3.f_3;
				(*uParam1)[1] = Var3.f_4;
				iVar6 = 1;
			}
		}
		iVar0++;
	}
	if (iVar6 || iVar5)
	{
		iVar7 = __LIB_0__::func_206(iParam0, uParam1->f_13[1], (*uParam1)[1], 1);
		iVar8 = __LIB_0__::func_206(iParam0, uParam1->f_13[2], (*uParam1)[2], 2);
		iVar9 = __LIB_0__::func_24(iVar4, iVar8, iVar7);
		if (iVar9 != -99)
		{
			Var3 = { __LIB_13__::func_798(iVar4, 0, iVar9, -1) };
			uParam1->f_13[0] = Var3.f_3;
			(*uParam1)[0] = Var3.f_4;
		}
	}
}

int func_736(var uParam0, int iParam1, int iParam2, float fParam3, float fParam4, bool bParam5, bool bParam6, char* sParam7, bool bParam8, int iParam9)//Position - 0x98F21
{
	return __LIB_17__::func_658(uParam0, 0, iParam1, iParam2, fParam3, fParam4, bParam5, bParam6, sParam7, 2, 0, bParam8, iParam9);
	return 1;
}

void func_737()//Position - 0x1A5F
{
	if (!CAM::IS_SCREEN_FADED_OUT())
	{
		if (!CAM::IS_SCREEN_FADING_OUT())
		{
			CAM::DO_SCREEN_FADE_OUT(800);
		}
		while (!CAM::IS_SCREEN_FADED_OUT())
		{
			SYSTEM::WAIT(0);
		}
	}
}

void func_738(int iParam0, int iParam1, int iParam2)//Position - 0x2023
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	if (iParam2 == 0)
	{
		return;
	}
	iVar0 = iParam2;
	if (iVar0 < 0)
	{
		iVar0 = (iVar0 * -1);
	}
	bVar1 = false;
	if (Global_96671[iParam0 /*38*/].f_37 == 5)
	{
		bVar1 = true;
	}
	iVar2 = Global_96671[iParam0 /*38*/].f_37;
	iVar3 = 0;
	iVar3 = 0;
	while (iVar3 < iVar2)
	{
		if (Global_96671[iParam0 /*38*/].f_25[iVar3] == iParam1)
		{
			Global_96671[iParam0 /*38*/].f_25[iVar3] = iParam1;
			Global_96671[iParam0 /*38*/].f_31[iVar3] = iVar0;
			return;
		}
		iVar3++;
	}
	if (bVar1)
	{
		return;
	}
	switch (iParam1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("HCS_PENALTY_JEWEL_DROP_MONEY"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("HCS_PENALTY_PALETO_DROP_MONEY"), iParam2, true);
					break;
				case 4:
					STATS::STAT_SET_INT(joaat("HCS_PENALTY_BIGS_DROP_MONEY"), iParam2, true);
					break;
			}
			break;
		case 1:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_JEWEL_DROP_MONEY"), iParam2, true);
			break;
		case 2:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_JEWEL_MADR_HOUSE"), iParam2, true);
			break;
		case 4:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_DOCKS_UNSELL_WPN"), iParam2, true);
			break;
		case 3:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_PALETO_AGENT_CUT"), iParam2, true);
			break;
		case 5:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_BIGS_SLOW_LOADING"), iParam2, true);
			break;
		case 6:
			STATS::STAT_SET_INT(joaat("HCS_PENALTY_BIGS_HOSTAGE_GIFT"), iParam2, true);
			break;
	}
	Global_96671[iParam0 /*38*/].f_25[Global_96671[iParam0 /*38*/].f_37] = iParam1;
	Global_96671[iParam0 /*38*/].f_31[Global_96671[iParam0 /*38*/].f_37] = iVar0;
	Global_96671[iParam0 /*38*/].f_37++;
}

void func_739(int iParam0)//Position - 0x2A3F5
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_0__::func_566(__LIB_0__::func_567(iParam0));
	iVar2 = 0;
	while (iVar2 < Global_96470[iVar1 /*19*/])
	{
		iVar0 = __LIB_16__::func_594(iParam0, iVar2);
		if (iVar0 != 0 || iVar0 != 15)
		{
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_96316[iVar0 /*5*/].f_4);
		}
		iVar2++;
	}
}

void func_740(var uParam0, int iParam1, int iParam2, int iParam3, int iParam4, int iParam5, struct<3> Param6, float fParam7)//Position - 0x2A44C
{
	if (!PED::IS_PED_INJURED(*uParam0))
	{
		PED::SET_PED_COMBAT_MOVEMENT(*uParam0, iParam2);
		PED::SET_PED_COMBAT_ABILITY(*uParam0, iParam3);
		PED::SET_PED_COMBAT_RANGE(*uParam0, iParam4);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, 0, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, 1, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, 2, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, 3, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, 14, false);
		PED::SET_PED_COMBAT_ATTRIBUTES(*uParam0, iParam5, true);
		PED::SET_PED_ACCURACY(*uParam0, iParam1);
		if (fParam7 != 0f)
		{
			PED::SET_PED_SPHERE_DEFENSIVE_AREA(*uParam0, Param6, fParam7, false, false);
		}
	}
}

int func_741(int iParam0)//Position - 0x2A66F
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	iVar1 = 1;
	iVar2 = __LIB_0__::func_566(__LIB_0__::func_567(iParam0));
	iVar3 = 0;
	while (iVar3 < Global_96470[iVar2 /*19*/])
	{
		iVar0 = __LIB_16__::func_594(iParam0, iVar3);
		if (iVar0 != 0 || iVar0 != 15)
		{
			if (!STREAMING::HAS_MODEL_LOADED(Global_96316[iVar0 /*5*/].f_4))
			{
				iVar1 = 0;
			}
		}
		iVar3++;
	}
	return iVar1;
}

void func_742(int iParam0)//Position - 0x2A6D2
{
	int iVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_0__::func_566(__LIB_0__::func_567(iParam0));
	iVar2 = 0;
	while (iVar2 < Global_96470[iVar1 /*19*/])
	{
		iVar0 = __LIB_16__::func_594(iParam0, iVar2);
		if (iVar0 != 0 || iVar0 != 15)
		{
			STREAMING::REQUEST_MODEL(Global_96316[iVar0 /*5*/].f_4);
		}
		iVar2++;
	}
}

void func_743()//Position - 0x70D4F
{
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 71 /*INPUT_VEH_ACCELERATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 72 /*INPUT_VEH_BRAKE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 69 /*INPUT_VEH_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 70 /*INPUT_VEH_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 68 /*INPUT_VEH_AIM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 80 /*INPUT_VEH_CIN_CAM*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 97 /*INPUT_VEH_CINEMATIC_DOWN_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 98 /*INPUT_VEH_CINEMATIC_LR*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 95 /*INPUT_VEH_CINEMATIC_UD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 96 /*INPUT_VEH_CINEMATIC_UP_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 76 /*INPUT_VEH_HANDBRAKE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 73 /*INPUT_VEH_DUCK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 74 /*INPUT_VEH_HEADLIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 86 /*INPUT_VEH_HORN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 79 /*INPUT_VEH_LOOK_BEHIND*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 286 /*INPUT_VEH_LOOK_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 287 /*INPUT_VEH_LOOK_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 281 /*INPUT_VEH_MOVE_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 62 /*INPUT_VEH_MOVE_DOWN_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 278 /*INPUT_VEH_MOVE_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 63 /*INPUT_VEH_MOVE_LEFT_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 59 /*INPUT_VEH_MOVE_LR*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 279 /*INPUT_VEH_MOVE_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 64 /*INPUT_VEH_MOVE_RIGHT_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 60 /*INPUT_VEH_MOVE_UD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 280 /*INPUT_VEH_MOVE_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 61 /*INPUT_VEH_MOVE_UP_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 81 /*INPUT_VEH_NEXT_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 82 /*INPUT_VEH_PREV_RADIO*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 85 /*INPUT_VEH_RADIO_WHEEL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 99 /*INPUT_VEH_SELECT_NEXT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 100 /*INPUT_VEH_SELECT_PREV_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 65 /*INPUT_VEH_SPECIAL*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 93 /*INPUT_VEH_SPECIAL_ABILITY_FRANKLIN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 22 /*INPUT_JUMP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 37 /*INPUT_SELECT_WEAPON*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 172 /*INPUT_CELLPHONE_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 24 /*INPUT_ATTACK*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 257 /*INPUT_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 142 /*INPUT_MELEE_ATTACK_ALTERNATE*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 263 /*INPUT_MELEE_ATTACK1*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 264 /*INPUT_MELEE_ATTACK2*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 141 /*INPUT_MELEE_ATTACK_HEAVY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 140 /*INPUT_MELEE_ATTACK_LIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 26 /*INPUT_LOOK_BEHIND*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 273 /*INPUT_LOOK_DOWN*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 4 /*INPUT_LOOK_DOWN_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 270 /*INPUT_LOOK_LEFT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 5 /*INPUT_LOOK_LEFT_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 1 /*INPUT_LOOK_LR*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 271 /*INPUT_LOOK_RIGHT*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 6 /*INPUT_LOOK_RIGHT_ONLY*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 2 /*INPUT_LOOK_UD*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 272 /*INPUT_LOOK_UP*/, true);
	PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 3 /*INPUT_LOOK_UP_ONLY*/, true);
}

void func_744(float fParam0, float fParam1, float fParam2, bool bParam3)//Position - 0x7A357
{
	float fVar0;
	if (*fParam0 != fParam1)
	{
		fVar0 = fParam2;
		if (bParam3)
		{
			fVar0 = (0f + ((fParam2 * 30f) * SYSTEM::TIMESTEP()));
		}
		if ((*fParam0 - fParam1) > fVar0)
		{
			*fParam0 = (*fParam0 - fVar0);
		}
		else if ((*fParam0 - fParam1) < -fVar0)
		{
			*fParam0 = (*fParam0 + fVar0);
		}
		else
		{
			*fParam0 = fParam1;
		}
	}
}

int func_745(int iParam0)//Position - 0x9265C
{
	int iVar0;
	int iVar1;
	if ((((!PED::IS_PED_RAGDOLL(iParam0) && !TASK::IS_PED_GETTING_UP(iParam0)) && !PED::IS_PED_IN_COMBAT(iParam0, 0)) && !PED::IS_PED_RELOADING(iParam0)) && WEAPON::IS_PED_WEAPON_READY_TO_SHOOT(iParam0))
	{
		WEAPON::GET_CURRENT_PED_WEAPON(iParam0, &iVar0, true);
		iVar1 = WEAPON::GET_WEAPONTYPE_GROUP(iVar0);
		if (iVar1 != joaat("GROUP_MELEE") && iVar1 != 0)
		{
			return 1;
		}
	}
	return 0;
}

int func_746()//Position - 0x9C78E
{
	if (STREAMING::HAS_MODEL_LOADED(__LIB_0__::func_556()))
	{
		return 1;
	}
	return 0;
}

int func_747()//Position - 0x9C7A6
{
	if (STREAMING::HAS_MODEL_LOADED(__LIB_0__::func_557()))
	{
		return 1;
	}
	return 0;
}

int func_748()//Position - 0x9C7BE
{
	if (STREAMING::HAS_ANIM_DICT_LOADED(__LIB_0__::func_558()))
	{
		return 1;
	}
	return 0;
}

var func_749(int iParam0)//Position - 0xC1985
{
	return __LIB_0__::func_593(iParam0);
}

void func_750(int iParam0)//Position - 0xC2808
{
	float fVar0;
	int iVar1;
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		iVar1 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iParam0, -1, false);
		if (!PED::IS_PED_INJURED(iVar1))
		{
			if (!iVar1 == PLAYER::PLAYER_PED_ID())
			{
				fVar0 = ENTITY::GET_ENTITY_SPEED(iParam0);
				if (fVar0 < 8f)
				{
					fVar0 = 8f;
				}
				if (fVar0 > 62.9f)
				{
					fVar0 = 62.9f;
				}
				TASK::TASK_VEHICLE_MISSION(iVar1, iParam0, 0, 1, fVar0, 786603, 5f, 5f, true);
				PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 8192, true);
				if (bLocal_83)
				{
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 65536, true);
					PED::SET_PED_FLEE_ATTRIBUTES(iVar1, 2, false);
				}
				PED::SET_PED_COMBAT_ATTRIBUTES(iVar1, 6, false);
			}
		}
	}
}

int func_751(bool bParam0)//Position - 0x70127
{
	if (__LIB_0__::func_374(bParam0))
	{
		return STREAMING::HAS_MODEL_LOADED(__LIB_0__::func_518(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
	return 0;
}

void func_752(bool bParam0)//Position - 0x70150
{
	if (__LIB_0__::func_374(bParam0))
	{
		STREAMING::REQUEST_MODEL(__LIB_0__::func_518(bParam0));
	}
	else if (bParam0 != 145)
	{
	}
}

void func_753(bool bParam0)//Position - 0x9838C
{
	STREAMING::REMOVE_ANIM_DICT(__LIB_0__::func_558());
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_0__::func_557());
	STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(__LIB_0__::func_556());
	if (bParam0)
	{
		PHYSICS::ROPE_UNLOAD_TEXTURES();
	}
}

int func_754(int iParam0)//Position - 0xA5659
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if ((iParam0 == 0 || iParam0 == 14) || iParam0 == 15)
	{
		return 0;
	}
	iVar0 = 0;
	iVar1 = 0;
	while (iVar1 < 10)
	{
		iVar2 = 0;
		while (iVar2 < Global_96470[iVar1 /*19*/])
		{
			iVar3 = 0;
			switch (iVar1)
			{
				case 1:
				case 2:
					iVar3 = __LIB_0__::func_178(90);
					break;
				case 3:
					iVar3 = __LIB_0__::func_178(74);
					break;
				case 4:
					iVar3 = __LIB_0__::func_178(75);
					break;
				case 5:
					iVar3 = __LIB_0__::func_178(93);
					break;
				case 6:
					iVar3 = __LIB_0__::func_178(69);
					break;
				case 7:
					iVar3 = __LIB_0__::func_178(70);
					break;
				case 8:
					iVar3 = __LIB_0__::func_178(84);
					break;
				case 9:
					iVar3 = __LIB_0__::func_178(85);
					break;
			}
			if (iVar3 && Global_113386.f_1.f_12[iVar1 /*6*/][iVar2] == iParam0)
			{
				iVar0++;
			}
			iVar2++;
		}
		iVar1++;
	}
	return iVar0;
}

void func_755(int iParam0)//Position - 0xC1954
{
	__LIB_0__::clearF_1Prop(&(Global_1649593.f_86[iParam0 /*2*/]));
	__LIB_0__::clearF_1Prop(&(Global_1649593.f_107[iParam0 /*2*/]));
}

void func_756(int iParam0, bool bParam1)//Position - 0x7515E
{
	int iVar0;
	int iVar1;
	int iVar2;
	bool bVar3;
	int iVar4;
	if (!__LIB_0__::func_2(0))
	{
		iVar0 = __LIB_0__::func_566(__LIB_0__::func_598(iParam0));
		iVar2 = 0;
		iVar1 = 0;
		while (iVar1 < Global_96470[iVar0 /*19*/])
		{
			bVar3 = Global_113386.f_1.f_12[iVar0 /*6*/][iVar1];
			if (!BitTest(Global_113386.f_1.f_118, bVar3))
			{
				iVar2++;
				if (!Global_96453[iVar1 /*3*/])
				{
					switch (Global_96316[bVar3 /*5*/])
					{
						case 1:
							iVar4 = 0;
							while (iVar4 < 4)
							{
								__LIB_17__::func_724(iVar1, iVar4);
								iVar4++;
							}
							break;
						case 3:
							iVar4 = 0;
							while (iVar4 < 3)
							{
								__LIB_17__::func_723(iVar1, iVar4);
								iVar4++;
							}
							break;
						case 2:
							iVar4 = 0;
							while (iVar4 < 3)
							{
								__LIB_17__::func_723(iVar1, iVar4);
								iVar4++;
							}
							break;
					}
					Global_96453[iVar1 /*3*/] = 1;
				}
			}
			iVar1++;
		}
		if (bParam1)
		{
			__LIB_17__::func_722(iVar0, iVar2);
		}
	}
}

void func_757(var uParam0, bool bParam1, bool bParam2, int iParam3, bool bParam4, bool bParam5)//Position - 0x9B141
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	float fVar4;
	bool bVar5;
	bool bVar6;
	bool bVar7;
	int iVar8;
	float fVar9;
	float fVar10;
	bool bVar11;
	bool bVar12;
	int iVar13;
	int iVar14;
	bool bVar15;
	struct<3> Var16;
	struct<3> Var17;
	float fVar18;
	if (uParam0->f_3 == PLAYER::PLAYER_PED_ID())
	{
		PAD::ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(0 /*PLAYER_CONTROL*/);
		PAD::ALLOW_ALTERNATIVE_SCRIPT_CONTROLS_LAYOUT(2 /*FRONTEND_CONTROL*/);
	}
	if (!bParam1 || bParam2)
	{
		__LIB_0__::func_603(&iVar0, &iVar1, &iVar2, &iVar3, 0);
		if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2 /*FRONTEND_CONTROL*/))
		{
			iVar2 = SYSTEM::FLOOR((PAD::GET_CONTROL_UNBOUND_NORMAL(2 /*FRONTEND_CONTROL*/, 290 /*INPUT_SCALED_LOOK_LR*/) * 127f));
			iVar3 = SYSTEM::FLOOR((PAD::GET_CONTROL_UNBOUND_NORMAL(2 /*FRONTEND_CONTROL*/, 291 /*INPUT_SCALED_LOOK_UD*/) * 127f));
		}
	}
	if (bParam2)
	{
		__LIB_17__::func_445(uParam0, 0, iVar2, iVar3, 1, -998637568, 1);
	}
	bVar5 = false;
	if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_6) && !PED::IS_PED_INJURED(uParam0->f_3))
	{
		switch (*uParam0)
		{
			case 0:
				if (!uParam0->f_59)
				{
					if (!uParam0->f_56)
					{
						if (bParam1)
						{
							if (uParam0->f_1 == 1)
							{
								bVar5 = true;
							}
						}
						else if (iVar1 > 100)
						{
							bVar5 = true;
						}
						if (bVar5)
						{
							if (uParam0->f_10.f_2 > uParam0->f_27)
							{
								__LIB_17__::func_447(uParam0, 1, 0, 0, 1, 0, 0);
							}
						}
					}
					else
					{
						if (bParam1)
						{
							if (uParam0->f_1 == 2)
							{
								bVar5 = true;
							}
						}
						else if (PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_602()) || (PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()) && uParam0->f_68))
						{
							bVar5 = true;
						}
						if (bVar5)
						{
							if (!__LIB_0__::func_600(uParam0, 0) || uParam0->f_3 == PLAYER::PLAYER_PED_ID())
							{
								__LIB_17__::func_447(uParam0, 5, 0, 0, 1, 0, 0);
							}
						}
					}
				}
				break;
			case 1:
				if (bParam1)
				{
					if (uParam0->f_1 != 1)
					{
						bVar5 = true;
					}
				}
				else if (iVar1 < 100)
				{
					bVar5 = true;
				}
				bVar6 = false;
				if (uParam0->f_10.f_2 <= uParam0->f_27)
				{
					bVar5 = true;
					bVar6 = true;
				}
				if (bVar5)
				{
					if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Walk", 3))
					{
						fVar4 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Walk");
						if (fVar4 >= 0.96f && fVar4 <= 1f)
						{
							ENTITY::SET_ENTITY_ANIM_SPEED(uParam0->f_3, __LIB_0__::func_558(), "rappel_walk", 0.5f);
							__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
						}
						else if (bVar6)
						{
							__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0f, 1);
						}
					}
					else
					{
						__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
					}
				}
				break;
			case 4:
				if (uParam0->f_70)
				{
					uParam0->f_23 = (uParam0->f_23 - (3f * SYSTEM::TIMESTEP()));
				}
				else
				{
					uParam0->f_23 = (uParam0->f_23 + (3f * SYSTEM::TIMESTEP()));
				}
				uParam0->f_10 = (uParam0->f_10 + (uParam0->f_23 * SYSTEM::TIMESTEP()));
				if (uParam0->f_70)
				{
					if (uParam0->f_10 < 0f)
					{
						uParam0->f_10 = 0f;
						__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
					}
				}
				else if (uParam0->f_10 > 0f)
				{
					uParam0->f_10 = 0f;
					__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
				}
				break;
			case 2:
			case 3:
				bVar7 = false;
				if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Jump_a", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "rappel_jump_c", 3))
				{
					if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "rappel_jump_c", 3))
					{
						ENTITY::SET_ENTITY_ANIM_SPEED(uParam0->f_3, __LIB_0__::func_558(), "rappel_jump_c", uParam0->f_33);
						fVar4 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "rappel_jump_c");
						if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
						{
							if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_c_Prop", 3))
							{
								if (fVar4 >= 0f && fVar4 <= 1f)
								{
									ENTITY::SET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_c_Prop", fVar4);
									ENTITY::SET_ENTITY_ANIM_SPEED(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_c_Prop", uParam0->f_33);
								}
							}
						}
						if (!uParam0->f_77)
						{
							if (uParam0->f_3 == PLAYER::PLAYER_PED_ID())
							{
								if (!uParam0->f_78)
								{
									if (fVar4 >= 0.82f)
									{
										if (!__LIB_0__::func_75())
										{
											if (MISC::GET_RANDOM_INT_IN_RANGE(0, 4) == 0)
											{
												AUDIO::PLAY_PAIN(PLAYER::PLAYER_PED_ID(), 23, 0f, 0);
											}
										}
										uParam0->f_78 = 1;
									}
								}
							}
						}
					}
					else if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Jump_a", 3))
					{
						ENTITY::SET_ENTITY_ANIM_SPEED(uParam0->f_3, __LIB_0__::func_558(), "rappel_jump_a", uParam0->f_34);
						fVar4 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "Rappel_Jump_a");
						if (ENTITY::DOES_ENTITY_EXIST(uParam0->f_8))
						{
							if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_A_Prop", 3))
							{
								if (fVar4 >= 0f && fVar4 <= 1f)
								{
									ENTITY::SET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_A_Prop", fVar4);
									ENTITY::SET_ENTITY_ANIM_SPEED(uParam0->f_8, __LIB_0__::func_558(), "Rappel_Jump_A_Prop", uParam0->f_34);
								}
							}
						}
						if (!uParam0->f_77)
						{
							if (uParam0->f_3 == PLAYER::PLAYER_PED_ID())
							{
								if (!uParam0->f_78)
								{
									if (fVar4 >= 0.74f)
									{
										if (MISC::GET_RANDOM_INT_IN_RANGE(0, 4) == 0)
										{
											AUDIO::PLAY_PAIN(PLAYER::PLAYER_PED_ID(), 23, 0f, 0);
										}
										uParam0->f_78 = 1;
									}
								}
							}
						}
					}
				}
				else if (MISC::GET_GAME_TIMER() >= uParam0->f_87 + 300 && iParam3)
				{
					bVar7 = true;
				}
				if (!bVar7)
				{
					if (fVar4 >= 0.99f)
					{
						bVar7 = true;
					}
					else
					{
						iVar8 = 0;
						if ((bParam1 && uParam0->f_1 != 0) || bParam5)
						{
							iVar8 = 1;
						}
						else if (uParam0->f_69)
						{
							if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()))
							{
								iVar8 = 1;
							}
						}
						else if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_602()) || (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()) && uParam0->f_68))
						{
							iVar8 = 1;
						}
						else if (uParam0->f_67)
						{
							if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()))
							{
								iVar8 = 1;
							}
						}
						if ((iVar8 && fVar4 < 0.3f) && !(bParam1 && fVar4 > uParam0->f_32))
						{
							uParam0->f_24 = (fVar4 / 0.3f);
							if (uParam0->f_24 > 1f)
							{
								uParam0->f_24 = 1f;
							}
							else if (uParam0->f_24 < 0f)
							{
								uParam0->f_24 = 0f;
							}
						}
						else if (uParam0->f_26 < 0f)
						{
							if (iVar8 && !(bParam1 && fVar4 > uParam0->f_32))
							{
								uParam0->f_24 = 1f;
							}
							if (!uParam0->f_69)
							{
								uParam0->f_26 = (0.3f + ((0.65f - 0.3f) * uParam0->f_24));
								uParam0->f_25 = (4f + ((24f - 4f) * uParam0->f_24));
							}
							else
							{
								uParam0->f_26 = (0.3f + ((0.61f - 0.3f) * uParam0->f_24));
								uParam0->f_25 = (15f + ((30f - 15f) * uParam0->f_24));
							}
						}
						if (__LIB_0__::func_599(*uParam0, fVar4))
						{
							if (fVar4 <= uParam0->f_26 || (iVar8 && uParam0->f_26 < 0f))
							{
								if (uParam0->f_69)
								{
									uParam0->f_22 = (uParam0->f_22 + (25f * SYSTEM::TIMESTEP()));
								}
								else
								{
									uParam0->f_22 = (uParam0->f_22 + (8.5f * SYSTEM::TIMESTEP()));
								}
							}
							else
							{
								uParam0->f_22 = (uParam0->f_22 - (uParam0->f_25 * SYSTEM::TIMESTEP()));
							}
							if (!uParam0->f_69)
							{
								if (fVar4 <= uParam0->f_26 || uParam0->f_26 >= 0.65f)
								{
									fVar9 = 9f;
								}
								else
								{
									fVar9 = 4f;
								}
							}
							else
							{
								fVar9 = 13f;
							}
							if (uParam0->f_22 > fVar9)
							{
								uParam0->f_22 = fVar9;
							}
							else if (uParam0->f_22 < 0f)
							{
								uParam0->f_22 = 0f;
							}
							if (bParam5)
							{
								uParam0->f_22 = (uParam0->f_22 / 1.75f);
							}
						}
						else
						{
							uParam0->f_22 = 0f;
						}
					}
				}
				if (bVar7)
				{
					__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
				}
				else if (*uParam0 == 2)
				{
					if (fVar4 <= 0.2f)
					{
						if (bParam1)
						{
							if (uParam0->f_1 == 2)
							{
								bVar5 = true;
							}
						}
						else if (iVar1 > 100)
						{
							bVar5 = true;
						}
						if (bVar5)
						{
							__LIB_17__::func_447(uParam0, 3, 0, 0, 0, 0, 0);
						}
					}
				}
				break;
			case 5:
				if (bParam1)
				{
					if (uParam0->f_1 == 2)
					{
						bVar5 = true;
					}
				}
				else
				{
					bVar5 = true;
				}
				if (__LIB_0__::func_600(uParam0, 0))
				{
					bVar5 = false;
				}
				if (bVar5)
				{
					if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_602()) || bParam1)
					{
						uParam0->f_22 = (uParam0->f_22 + (2f * SYSTEM::TIMESTEP()));
						if (uParam0->f_22 >= 6f)
						{
							uParam0->f_22 = 6f;
						}
					}
					else
					{
						fVar10 = uParam0->f_22;
						if (fVar10 < uParam0->f_29)
						{
							fVar10 = uParam0->f_29;
						}
						uParam0->f_22 = (uParam0->f_22 + (2f * SYSTEM::TIMESTEP()));
						if (uParam0->f_22 >= fVar10)
						{
							uParam0->f_22 = fVar10;
						}
					}
				}
				else
				{
					uParam0->f_22 = (uParam0->f_22 - (5f * SYSTEM::TIMESTEP()));
					if (uParam0->f_22 <= 0f)
					{
						uParam0->f_22 = 0f;
						__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
					}
				}
				break;
			case 6:
				bVar11 = false;
				if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "rappel_to_free_rope", 3))
				{
					fVar4 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "rappel_to_free_rope");
					if (fVar4 <= 0.74f && fVar4 >= 0.38f)
					{
						uParam0->f_22 = (uParam0->f_22 + ((2f * 2f) * SYSTEM::TIMESTEP()));
						if (uParam0->f_22 >= uParam0->f_29)
						{
							uParam0->f_22 = uParam0->f_29;
						}
					}
					else
					{
						uParam0->f_22 = (uParam0->f_22 - (5f * SYSTEM::TIMESTEP()));
						if (uParam0->f_22 <= 0f)
						{
							uParam0->f_22 = 0f;
						}
					}
					if (fVar4 >= 0.98f)
					{
						bVar11 = true;
					}
				}
				if (bVar11)
				{
					uParam0->f_56 = 1;
					__LIB_17__::func_447(uParam0, 0, 0, 0, 1, 0, 0);
				}
				break;
			case 7:
				bVar12 = false;
				if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "land_action", 3))
				{
					if (ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "land_action") >= 0.64f)
					{
						bVar12 = true;
					}
				}
				else if (MISC::GET_GAME_TIMER() >= uParam0->f_88 + 500)
				{
					bVar12 = true;
				}
				if (bVar12)
				{
					__LIB_16__::func_892(uParam0, 0, uParam0->f_9, 1, 0, 1);
					uParam0->f_74 = 1;
				}
				break;
		}
		bVar5 = false;
		if (!uParam0->f_56)
		{
			iVar13 = 0;
			iVar14 = 0;
			if (bParam1)
			{
				if (uParam0->f_1 == 2)
				{
					bVar5 = true;
					iVar13 = uParam0->f_65;
				}
				else if (uParam0->f_1 == 3 || uParam0->f_1 == 4)
				{
					bVar5 = true;
					iVar14 = uParam0->f_66;
				}
			}
			else if (PAD::IS_DISABLED_CONTROL_JUST_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_602()) || (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()) && uParam0->f_68))
			{
				bVar5 = true;
			}
			else if (PAD::IS_DISABLED_CONTROL_PRESSED(0 /*PLAYER_CONTROL*/, __LIB_0__::func_601()) && uParam0->f_65)
			{
				bVar5 = true;
				iVar13 = 1;
			}
			if (bVar5)
			{
				bVar15 = false;
				if (*uParam0 <= 1)
				{
					bVar15 = true;
				}
				else if (fVar4 > 0.76f)
				{
					if (bParam4)
					{
						bVar15 = true;
					}
				}
				if (bVar15)
				{
					if (((iVar1 > 100 || (bParam1 && uParam0->f_1 == 2)) || iVar13) || bParam5)
					{
						if (uParam0->f_64 || iVar13)
						{
							uParam0->f_69 = iVar13;
							if (uParam0->f_67)
							{
								uParam0->f_69 = 0;
							}
							__LIB_17__::func_447(uParam0, 3, 0, 1, 1, 0, 0);
						}
					}
					else if ((iVar0 > 100 || iVar0 < -100) || iVar14)
					{
						if (uParam0->f_66)
						{
							__LIB_17__::func_447(uParam0, 4, 0, 1, 1, 0, 0);
							if (iVar0 > 0 || uParam0->f_1 == 4)
							{
								uParam0->f_70 = 1;
								uParam0->f_23 = 2.8f;
							}
							else if (iVar0 < 0 || uParam0->f_1 == 3)
							{
								uParam0->f_70 = 0;
								uParam0->f_23 = -2.5f;
							}
						}
					}
					else
					{
						__LIB_17__::func_447(uParam0, 2, 0, 1, 1, 0, 0);
					}
				}
			}
		}
		if (uParam0->f_10.f_2 > uParam0->f_27)
		{
			if (*uParam0 != 1)
			{
				if (uParam0->f_10.f_2 <= (uParam0->f_27 + uParam0->f_28))
				{
					uParam0->f_22 = (uParam0->f_22 - (40f * SYSTEM::TIMESTEP()));
					if (uParam0->f_22 < 0f)
					{
						uParam0->f_22 = 0f;
					}
				}
				uParam0->f_10.f_2 = (uParam0->f_10.f_2 - (uParam0->f_22 * SYSTEM::TIMESTEP()));
			}
			else
			{
				Var16 = { PED::GET_PED_EXTRACTED_DISPLACEMENT(uParam0->f_3, false) };
				uParam0->f_10.f_2 = (uParam0->f_10.f_2 + Var16.f_2);
			}
		}
		Var17 = { 0f, 0f, 0f };
		if (uParam0->f_56)
		{
			fVar18 = 1f;
		}
		else if (*uParam0 != 6)
		{
			fVar18 = 0f;
		}
		else if (ENTITY::IS_ENTITY_PLAYING_ANIM(uParam0->f_3, __LIB_0__::func_558(), "rappel_to_free_rope", 3))
		{
			fVar18 = ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(uParam0->f_3, __LIB_0__::func_558(), "rappel_to_free_rope");
		}
		if (fVar18 < 0f)
		{
			fVar18 = 0f;
		}
		Var17.f_0 = (-0.0141535f + (-0.0004206f * fVar18));
		Var17.f_1 = (-0.385494f + (0.224849f * fVar18));
		if (*uParam0 != 7)
		{
			ENTITY::ATTACH_ENTITY_TO_ENTITY(uParam0->f_3, uParam0->f_6, 0, uParam0->f_10 + Var17, 0f, 0f, 0f, true, false, false, false, 2, true, 0);
		}
		if (!bParam1)
		{
			if (!uParam0->f_63)
			{
				if (!uParam0->f_56)
				{
					__LIB_0__::func_151("RAPPEL_HELP" /* GXT: Use ~INPUT_MOVE_DOWN_ONLY~ to rappel.~n~Jump by pressing ~INPUT_SCRIPT_RDOWN~ to descend faster.~n~Hold ~INPUT_SCRIPT_RDOWN~ after jumping for a longer jump. */, -1);
				}
				else
				{
					__LIB_0__::func_151("FREEROPE_HELP" /* GXT: Hold ~INPUT_SCRIPT_RDOWN~ to fast-rope down. */, -1);
				}
				uParam0->f_63 = 1;
			}
		}
	}
	else
	{
		__LIB_16__::func_892(uParam0, 0, joaat("WEAPON_UNARMED"), 1, 1, 1);
	}
}

int func_758(var uParam0)//Position - 0xA57AA
{
	int iVar0;
	int iVar1;
	char* sVar2;
	char* sVar3;
	char* sVar4;
	bool bVar5;
	iVar0 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1);
	iVar1 = CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1;
	if (iVar1 > uParam0->f_1217)
	{
		iVar1 = uParam0->f_1217;
	}
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		switch (uParam0->f_10[iVar1 /*57*/].f_34)
		{
			case 0:
				fLocal_49 = __LIB_0__::func_504(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1));
				break;
			case 1:
				fLocal_49 = __LIB_15__::func_924(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 2:
				fLocal_49 = __LIB_15__::func_923(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
			case 3:
				fLocal_49 = __LIB_15__::func_940(uParam0->f_10[iVar1 /*57*/].f_33, uParam0->f_10[iVar1 + 1 /*57*/].f_33, __LIB_0__::func_331((CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) * (1f / uParam0->f_10[iVar1 /*57*/].f_35)), 0f, 1f));
				break;
		}
		MISC::SET_TIME_SCALE(fLocal_49);
	}
	else
	{
		MISC::SET_TIME_SCALE(1f);
	}
	if (uParam0->f_10[iVar0 /*57*/].f_2 == 8)
	{
		__LIB_15__::func_922(uParam0, iVar0, 0);
	}
	if (!uParam0->f_10[iVar1 /*57*/].f_56)
	{
		if (uParam0->f_10[iVar1 /*57*/].f_50 != 0)
		{
			if (!uParam0->f_1231 || (iVar1 > 1 && uParam0->f_10[iVar0 /*57*/].f_50 != uParam0->f_10[iVar1 /*57*/].f_50))
			{
				if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
				{
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
							sVar2 = "switch_cam_2";
							break;
						case 2:
							sVar2 = "switch_cam_1";
							break;
						case 3:
							sVar2 = "SwitchHUDIn";
							break;
					}
					switch (uParam0->f_10[iVar1 /*57*/].f_50)
					{
						case 1:
						case 2:
							__LIB_15__::func_958(uParam0, iVar1);
							if (uParam0->f_10[iVar1 /*57*/].f_51 > 0f)
							{
								GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(sVar2, uParam0->f_10[iVar1 /*57*/].f_51);
							}
							else
							{
								GRAPHICS::SET_TIMECYCLE_MODIFIER(sVar2);
							}
							break;
						case 3:
							__LIB_15__::func_958(uParam0, iVar1);
							GRAPHICS::ANIMPOSTFX_PLAY(sVar2, SYSTEM::FLOOR((1000f * uParam0->f_10[iVar1 /*57*/].f_51)), false);
							break;
					}
					uParam0->f_1231 = 1;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
		else if (uParam0->f_1231)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_52)
			{
				if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
				{
					GRAPHICS::SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER(uParam0->f_10[iVar1 /*57*/].f_51);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
				else if (!MISC::ARE_STRINGS_EQUAL(__LIB_15__::func_921(), ""))
				{
					__LIB_15__::func_958(uParam0, iVar1);
					uParam0->f_1231 = 0;
					uParam0->f_10[iVar1 /*57*/].f_56 = 1;
				}
			}
		}
	}
	if (uParam0->f_10[iVar1 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_44)
		{
			if (CAM::GET_CAM_SPLINE_NODE_PHASE(uParam0->f_1) >= uParam0->f_10[iVar1 /*57*/].f_38)
			{
				__LIB_15__::func_920(uParam0, iVar1);
				uParam0->f_10[iVar1 /*57*/].f_44 = 1;
			}
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_36)
	{
		if (!uParam0->f_10[iVar0 /*57*/].f_44)
		{
			__LIB_15__::func_920(uParam0, iVar0);
			uParam0->f_10[iVar0 /*57*/].f_44 = 1;
		}
	}
	GRAPHICS::RESET_ADAPTATION(6);
	if (iVar1 < (uParam0->f_1217 - 1))
	{
		if (!uParam0->f_10[iVar1 /*57*/].f_55)
		{
			if (uParam0->f_10[iVar1 /*57*/].f_54)
			{
				CAM::STOP_CAM_SHAKING(uParam0->f_10[iVar1 /*57*/].f_1, true);
			}
			if (uParam0->f_10[iVar1 /*57*/].f_53 != 0)
			{
				sVar4 = "shake_cam_all@";
				if (uParam0->f_10[iVar1 /*57*/].f_53 == 1)
				{
					sVar3 = "light";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 2)
				{
					sVar3 = "medium";
				}
				else if (uParam0->f_10[iVar1 /*57*/].f_53 == 3)
				{
					sVar3 = "heavy";
				}
				CAM::ANIMATED_SHAKE_CAM(uParam0->f_10[iVar1 /*57*/].f_1, sVar4, sVar3, "", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			else
			{
				CAM::SHAKE_CAM(uParam0->f_1, "SKY_DIVING_SHAKE", uParam0->f_10[iVar1 /*57*/].f_23);
			}
			uParam0->f_10[iVar1 /*57*/].f_55 = 1;
		}
	}
	if (uParam0->f_10[iVar0 /*57*/].f_45)
	{
		__LIB_15__::func_919(0, 0, 1, 1);
	}
	else
	{
		__LIB_15__::func_919(3, 3, 0, 0);
	}
	if (CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) < uParam0->f_1217)
	{
		if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) + 1 /*57*/].f_46)
		{
			bVar5 = true;
		}
	}
	if (uParam0->f_10[CAM::GET_CAM_SPLINE_NODE_INDEX(uParam0->f_1) /*57*/].f_46)
	{
		bVar5 = true;
	}
	if (bVar5)
	{
		CAM::SET_USE_HI_DOF();
	}
	__LIB_15__::func_918(uParam0);
	return iVar0;
}

int func_759(int iParam0, struct<3> Param1, float fParam2, int iParam3, bool bParam4)//Position - 0x2A531
{
	int iVar0;
	iVar0 = PED::CREATE_PED(26, Global_96316[iParam0 /*5*/].f_4, Param1, fParam2, true, true);
	__LIB_17__::func_726(iVar0, iParam0, iParam3, bParam4);
	ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
	PED::SET_PED_SUFFERS_CRITICAL_HITS(iVar0, false);
	if (__LIB_0__::func_617(iParam0) == 1)
	{
		PED::SET_PED_MAX_HEALTH(iVar0, __LIB_17__::func_725(iParam0, 0));
		PED::SET_PED_ACCURACY(iVar0, __LIB_17__::func_725(iParam0, 1));
		PED::SET_PED_SHOOT_RATE(iVar0, __LIB_17__::func_725(iParam0, 2));
	}
	else
	{
		PED::SET_PED_MAX_HEALTH(iVar0, 100);
		PED::SET_PED_ACCURACY(iVar0, 25);
		PED::SET_PED_SHOOT_RATE(iVar0, 40);
	}
	return iVar0;
}

int func_760(int iParam0, bool bParam1)//Position - 0xA3A8
{
	bool bVar0;
	bool bVar1;
	if (!iParam0->f_39)
	{
		iParam0->f_7 = 4;
		iParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = iParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_682(__LIB_15__::func_944()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || iParam0->f_24[bParam1] != 0) || ((__LIB_15__::func_971(bParam1) && __LIB_17__::func_65(bParam1)) && !iParam0->f_18[bParam1]))
			{
				if (!iParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*iParam0)[bParam1]) || bVar0)
					{
						if (iParam0->f_34[bParam1] != 1 && iParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (iParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				iParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	iParam0->f_39 = 0;
	return 0;
}

bool func_761(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, int iParam4, int iParam5, int iParam6, int iParam7, char* sParam8, char* sParam9, char* sParam10, char* sParam11, char* sParam12, char* sParam13, char* sParam14, bool bParam15, bool bParam16, bool bParam17, int iParam18)//Position - 0x72151
{
	return __LIB_17__::func_223(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 5, iParam4, iParam5, iParam6, iParam7, sParam8, sParam9, sParam10, sParam11, sParam12, sParam13, bParam15, bParam16, sParam14, 0, 0, bParam17, iParam18, 0, 0, 0, 1, 1065353216);
}

void func_762(int iParam0, var uParam1)//Position - 0xB3646
{
	uParam1->f_17 = -1;
	switch (iParam0)
	{
		case 1:
		case 2:
			uParam1->f_2 = { -58.1338f, -1115.6534f, 25.8856f };
			uParam1->f_5 = { 18.4907f, 0f, 3.566f };
			uParam1->f_8 = { -58.3857f, -1115.0834f, 26.0824f };
			uParam1->f_11 = { 18.4907f, 0f, 2.0628f };
			uParam1->f_14 = 40.0256f;
			uParam1->f_15 = 4000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 17:
		case 18:
			uParam1->f_2 = { -830.1f, 171.4f, 71.5f };
			uParam1->f_5 = { 17.5f, 0f, -76f };
			uParam1->f_8 = { -829.5f, 171.6f, 71.7f };
			uParam1->f_11 = { 17.9f, 0f, -75.4f };
			uParam1->f_14 = 47.9931f;
			uParam1->f_15 = 6600;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 21:
		case 22:
			uParam1->f_2 = { -776.5807f, 181.1033f, 72.2059f };
			uParam1->f_5 = { 11.8135f, 0f, 95.7275f };
			uParam1->f_8 = { -776.8288f, 181.0926f, 72.2551f };
			uParam1->f_11 = { 11.8134f, 0f, 95.7284f };
			uParam1->f_14 = 46.7255f;
			uParam1->f_15 = 5500;
			uParam1->f_16 = 0;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			break;
		case 20:
			switch (__LIB_15__::func_944())
			{
				case 0:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
				case 2:
					uParam1->f_2 = { -846.3013f, 186.777f, 72.0316f };
					uParam1->f_5 = { 4.202026f, 0f, -111.28817f };
					uParam1->f_8 = { -846.1907f, 186.7339f, 72.0403f };
					uParam1->f_11 = { 4.202f, 0f, -111.2882f };
					uParam1->f_14 = 47f;
					uParam1->f_15 = 5500;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 40:
			uParam1->f_2 = { -8.0845f, -1450.3672f, 36.8585f };
			uParam1->f_5 = { 13.3776f, 0f, 4.513f };
			uParam1->f_8 = { -9.0519f, -1450.4437f, 36.8585f };
			uParam1->f_11 = { 13.3776f, 0f, 4.513f };
			uParam1->f_14 = 39.9659f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 27:
			uParam1->f_2 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_5 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_8 = { -1576.1322f, 5160.8877f, 24.1175f };
			uParam1->f_11 = { 4.8389f, -0.011f, 92.1057f };
			uParam1->f_14 = 40f;
			uParam1->f_15 = 7200;
			uParam1->f_16 = 0;
			break;
		case 43:
			uParam1->f_2 = { -7.205f, -1471.6555f, 31.1614f };
			uParam1->f_5 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_8 = { -7.2909f, -1471.2322f, 31.2546f };
			uParam1->f_11 = { 9.3776f, 0f, 11.4737f };
			uParam1->f_14 = 38.5265f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 61:
			uParam1->f_2 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_5 = { 5.6441f, 0f, -138.7474f };
			uParam1->f_8 = { -1060.6584f, -464.0052f, 44.994f };
			uParam1->f_11 = { 4.8242f, 0f, -118.3167f };
			uParam1->f_14 = 37f;
			uParam1->f_15 = 5000;
			uParam1->f_16 = 0;
			break;
		case 91:
		case 93:
			uParam1->f_2 = { 1406.1116f, 3590.2307f, 34.4113f };
			uParam1->f_5 = { 17.5005f, 0f, 55.9579f };
			uParam1->f_8 = { 1405.6732f, 3590.5247f, 34.4113f };
			uParam1->f_11 = { 18.4979f, 0f, 55.9579f };
			uParam1->f_14 = 56.3199f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 69:
		case 86:
		case 90:
			uParam1->f_2 = { 739.1493f, -990.3961f, 29.851938f };
			uParam1->f_5 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_8 = { 738.4197f, -989.64624f, 30.175814f };
			uParam1->f_11 = { 17.19917f, 0f, 44.21184f };
			uParam1->f_14 = 47.563618f;
			uParam1->f_15 = 6000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 0;
			break;
		case 70:
			uParam1->f_2 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_5 = { -0.2f, 0f, -169.6f };
			uParam1->f_8 = { 2503.9f, -288.8f, 112.8f };
			uParam1->f_11 = { -0.2f, 0f, -169.6f };
			uParam1->f_14 = 47.6f;
			uParam1->f_15 = 5000;
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
			uParam1->f_16 = 1;
			break;
		case 45:
			uParam1->f_2 = { -458.56662f, 1010.09717f, 316.3736f };
			uParam1->f_5 = { 14.471864f, 0f, -18.288841f };
			uParam1->f_8 = { -457.3f, 1011.6f, 316.9f };
			uParam1->f_11 = { 14.5f, 0f, -18.5f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 49:
			uParam1->f_2 = { -723.9982f, -155.71844f, 38.123623f };
			uParam1->f_5 = { 30.120478f, 0f, -99.11243f };
			uParam1->f_8 = { -722.4385f, -155.7817f, 37.4443f };
			uParam1->f_11 = { 2.0429f, 0f, -101.5132f };
			uParam1->f_14 = 45f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 9:
			switch (__LIB_15__::func_944())
			{
				case 2:
					uParam1->f_2 = { 416.3221f, -960.2586f, 30.6696f };
					uParam1->f_5 = { 21.5747f, 0f, -135.2969f };
					uParam1->f_8 = { 416.8894f, -960.832f, 30.9887f };
					uParam1->f_11 = { 21.9916f, 0f, -135.2969f };
					uParam1->f_14 = 47.1057f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
				case 1:
					uParam1->f_2 = { 1393.3628f, -2052.5813f, 65.4054f };
					uParam1->f_5 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_8 = { 1393.4564f, -2052.6562f, 68.146f };
					uParam1->f_11 = { 2.5107f, 0f, 51.1167f };
					uParam1->f_14 = 35.9859f;
					uParam1->f_15 = 6000;
					uParam1->f_16 = 0;
					break;
			}
			break;
		case 30:
			uParam1->f_2 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_5 = { 61.9f, 0f, -63.8f };
			uParam1->f_8 = { 59.3f, -751.7f, 46.8f };
			uParam1->f_11 = { 61.9f, 0f, -63.8f };
			uParam1->f_14 = 46.6f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 39:
			uParam1->f_2 = { 3841.9304f, 4464.658f, 2.6587f };
			uParam1->f_5 = { 8.4859f, 0.0024f, 143.0775f };
			uParam1->f_8 = { 3842.5398f, 4464.184f, 2.6587f };
			uParam1->f_11 = { 8.4859f, 0.0024f, 142.0089f };
			uParam1->f_14 = 34.1544f;
			uParam1->f_15 = 3000;
			uParam1->f_16 = 0;
			break;
		case 71:
			uParam1->f_2 = { -1193.1f, -1525.3f, 4.4f };
			uParam1->f_5 = { 9.4f, 0f, -78.8f };
			uParam1->f_8 = { -1192.2f, -1525.1f, 4.4f };
			uParam1->f_11 = { 9.4f, 0f, -78.5f };
			uParam1->f_14 = 30.4f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 74:
			uParam1->f_2 = { -24.2f, -2417.6f, 7.8f };
			uParam1->f_5 = { 10.4f, 0f, 80.4f };
			uParam1->f_8 = { -23.8f, -2414.8f, 7.8f };
			uParam1->f_11 = { 10.4f, 0f, 81.4f };
			uParam1->f_14 = 48.1095f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 84:
		case 85:
		case 65:
			uParam1->f_2 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_5 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_8 = { 146.97333f, -1310.6444f, 30.851767f };
			uParam1->f_11 = { 16.268848f, -2.1E-05f, 45.00475f };
			uParam1->f_14 = 39.4027f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 62:
		case 15:
		case 16:
			uParam1->f_2 = { 1998.215f, 3816.9827f, 33.0117f };
			uParam1->f_5 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_8 = { 1997.1537f, 3817.0042f, 33.1215f };
			uParam1->f_11 = { 5.9088f, 0f, 89.1989f };
			uParam1->f_14 = 36.8186f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			if (iParam0 == 62)
			{
				if (__LIB_15__::func_944() != 2)
				{
					uParam1->f_2 = { 0f, 0f, 0f };
					uParam1->f_5 = { 0f, 0f, 0f };
					uParam1->f_8 = { 0f, 0f, 0f };
					uParam1->f_11 = { 0f, 0f, 0f };
					uParam1->f_14 = -1f;
					uParam1->f_15 = -1;
					uParam1->f_16 = 0;
				}
			}
			break;
		case 63:
			uParam1->f_2 = { 1576f, 3363.9f, 55.5f };
			uParam1->f_5 = { 0.5f, 0f, -123.8f };
			uParam1->f_8 = { 1575.2f, 3364.4f, 49.2f };
			uParam1->f_11 = { -4.3f, 0f, -124.1f };
			uParam1->f_14 = 50f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 64:
			uParam1->f_2 = { 1566f, 3378.8f, 42.8f };
			uParam1->f_5 = { -2.4f, 0f, -126.3f };
			uParam1->f_8 = { 1567.6f, 3376.9f, 45f };
			uParam1->f_11 = { 1.6f, 0f, -124.6f };
			uParam1->f_14 = 34.7f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 24:
			uParam1->f_2 = { 1339.5729f, -2550.8728f, 56.282543f };
			uParam1->f_5 = { -2.348373f, -2.1E-05f, 159.736f };
			uParam1->f_8 = { 1334.4908f, -2549.3455f, 47.69109f };
			uParam1->f_11 = { 2.789334f, -2.1E-05f, -156.43968f };
			uParam1->f_14 = 25.660002f;
			uParam1->f_15 = 8000;
			uParam1->f_16 = 0;
			break;
		case 25:
			uParam1->f_2 = { 2383.6511f, 2624.787f, 46.9527f };
			uParam1->f_5 = { 14.6191f, 0f, 64.366f };
			uParam1->f_8 = { 2383.9292f, 2622.8015f, 47.2707f };
			uParam1->f_11 = { 33.177135f, -0.13073f, 12.314363f };
			uParam1->f_14 = 35.31843f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 26:
			uParam1->f_2 = { 1755.5189f, -1474.9811f, 126.1743f };
			uParam1->f_5 = { 4.5341f, 0f, 89.6405f };
			uParam1->f_8 = { 1772.2605f, -1475.0853f, 125.9465f };
			uParam1->f_11 = { 5.8327f, 0f, 89.6405f };
			uParam1->f_14 = 32.7f;
			uParam1->f_15 = 6500;
			uParam1->f_16 = 0;
			break;
		case 3:
			uParam1->f_2 = { -1514.2566f, -947.7281f, 15.0253f };
			uParam1->f_5 = { -3.5807f, -0.0001f, -46.3209f };
			uParam1->f_8 = { -1512.6014f, -949.2796f, 14.8827f };
			uParam1->f_11 = { -4.7682f, -0.0001f, -34.1393f };
			uParam1->f_14 = 29.9555f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 4:
			uParam1->f_2 = { -698.2578f, -934.4238f, 31.6909f };
			uParam1->f_5 = { -22.0467f, 0f, 32.1888f };
			uParam1->f_8 = { -697.8695f, -935.0406f, 31.9861f };
			uParam1->f_11 = { -20.6093f, 0f, 32.1888f };
			uParam1->f_14 = 30f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 5:
			uParam1->f_2 = { 221.8613f, -830.6434f, 45.3154f };
			uParam1->f_5 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_8 = { 227.5233f, -832.8285f, 45.3154f };
			uParam1->f_11 = { -13.9263f, 0f, 140.7092f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 6:
			uParam1->f_2 = { -23.3747f, -120.3161f, 64.139f };
			uParam1->f_5 = { -5.7232f, 0f, 5.1015f };
			uParam1->f_8 = { -22.5824f, -122.52f, 64.139f };
			uParam1->f_11 = { -5.7232f, 0f, 6.6362f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		case 7:
			uParam1->f_2 = { 803.5977f, -1075.8688f, 37.1981f };
			uParam1->f_5 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_8 = { 803.5977f, -1075.8688f, 32.7981f };
			uParam1->f_11 = { -10.7685f, 0f, -38.1705f };
			uParam1->f_14 = 35f;
			uParam1->f_15 = 6000;
			uParam1->f_16 = 0;
			break;
		default:
			uParam1->f_2 = { 0f, 0f, 0f };
			uParam1->f_5 = { 0f, 0f, 0f };
			uParam1->f_8 = { 0f, 0f, 0f };
			uParam1->f_11 = { 0f, 0f, 0f };
			uParam1->f_14 = -1f;
			uParam1->f_15 = -1;
			uParam1->f_16 = 0;
			break;
	}
	if (MISC::GET_HASH_KEY("RAIN") == MISC::GET_PREV_WEATHER_TYPE_HASH_NAME())
	{
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_18)))
		{
			StringCopy(&(uParam1->f_18), "EXTRASUNNY", 16);
		}
		if (MISC::IS_STRING_NULL_OR_EMPTY(&(uParam1->f_22)))
		{
			StringCopy(&(uParam1->f_22), "cirrocumulus", 16);
		}
	}
}

void func_763(struct<3> Param0, struct<3> Param1, float fParam2, struct<3> Param3, float fParam4, struct<3> Param5, bool bParam6, bool bParam7, bool bParam8, bool bParam9, bool bParam10)//Position - 0xB4611
{
	int iVar0;
	bool bVar1;
	bool bVar2;
	int iVar3;
	struct<3> Var4;
	struct<3> Var5;
	struct<3> Var6;
	int iVar7;
	int iVar8;
	int iVar9;
	if (bParam7)
	{
		bParam7 = false;
	}
	bVar2 = true;
	iVar3 = 0;
	iVar0 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
	if (ENTITY::DOES_ENTITY_EXIST(iVar0))
	{
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			iVar3 = 1;
		}
		if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
		{
			if (bParam10)
			{
				__LIB_0__::func_89(iVar0);
			}
			if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(iVar0, Param0, Param1, fParam2, false, true, 0))
			{
				bVar1 = true;
			}
			else
			{
				Var6 = { ENTITY::GET_ENTITY_COORDS(iVar0, true) };
				if ((Var6.f_2 > Param0.f_2 && Var6.f_2 < Param1.f_2) || (Var6.f_2 > Param1.f_2 && Var6.f_2 < Param0.f_2))
				{
					if (__LIB_0__::func_527(iVar0, Param0, Param1, fParam2))
					{
						bVar1 = true;
					}
				}
			}
			if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
			{
				if (VEHICLE::IS_VEHICLE_MODEL(iVar0, joaat("taxi")))
				{
					if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != PLAYER::PLAYER_PED_ID() && VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false) != 0)
					{
						if (MISC::GET_DISTANCE_BETWEEN_COORDS(Param0 + Param1 / Vector(2f, 2f, 2f), ENTITY::GET_ENTITY_COORDS(iVar0, true), true) < 20f)
						{
							bVar1 = true;
							bVar2 = false;
						}
					}
				}
			}
			if (bParam8)
			{
				if (__LIB_0__::func_363(iVar0, __LIB_15__::func_944(), 1))
				{
					bVar1 = false;
				}
			}
			if (bVar1)
			{
				if (!__LIB_0__::func_86(Param5))
				{
					if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
					{
						iVar7 = ENTITY::GET_ENTITY_MODEL(iVar0);
						VEHICLE::GET_VEHICLE_SIZE(iVar0, &Var4, &Var5);
						if (VEHICLE::IS_THIS_MODEL_A_HELI(iVar7))
						{
							Param5.f_0 = (Param5.f_0 + 3f);
							Param5.f_1 = (Param5.f_1 + 3f);
						}
						if (((iVar7 == joaat("zentorno") || iVar7 == joaat("btype")) || iVar7 == joaat("dubsta3")) || iVar7 == joaat("monster"))
						{
							Param5 = { Param5 * Vector(1.1f, 1.1f, 1.1f) };
						}
						else if (iVar7 == joaat("t20") || iVar7 == joaat("virgo"))
						{
							Param5 = { Param5 * Vector(1.2f, 1.2f, 1.2f) };
						}
						if ((Var5.f_0 - Var4.f_0) > Param5.f_0)
						{
							bVar2 = false;
						}
						else if ((Var5.f_1 - Var4.f_1) > Param5.f_1)
						{
							bVar2 = false;
						}
						else if ((Var5.f_2 - Var4.f_2) > Param5.f_2)
						{
							bVar2 = false;
						}
					}
				}
				if (VEHICLE::IS_VEHICLE_DRIVEABLE(iVar0, false))
				{
					if (bVar2)
					{
						MISC::CLEAR_AREA_OF_VEHICLES(Param3, 5f, false, false, false, false, false, false, 0);
						ENTITY::SET_ENTITY_HEADING(iVar0, fParam4);
						ENTITY::SET_ENTITY_COORDS(iVar0, Param3, true, false, false, true);
						VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(iVar0, 5f);
						if (bParam9)
						{
							VEHICLE::SET_VEHICLE_ENGINE_ON(iVar0, false, true, false);
							VEHICLE::SET_VEHICLE_DOORS_SHUT(iVar0, true);
						}
					}
					else
					{
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0) || !ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(iVar0, true))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, true);
						}
						if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), iVar0, false))
						{
							ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(iVar0, true), true, false, false, true);
						}
						VEHICLE::DELETE_VEHICLE(&iVar0);
					}
				}
			}
			if (bParam6)
			{
				MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(Param0, Param1, fParam2, false, false, false, false, false, 0, 0);
			}
			if (iVar3 == 1)
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0))
				{
					if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
					{
						ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&iVar0);
					}
				}
			}
		}
		else
		{
			if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(iVar0))
			{
				ENTITY::SET_ENTITY_AS_MISSION_ENTITY(iVar0, true, false);
			}
			iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, -1, false);
			if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
			{
				ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
			}
			iVar9 = VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(ENTITY::GET_ENTITY_MODEL(iVar0));
			if (iVar9 <= 2)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 0, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			if (iVar9 <= 4)
			{
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 1, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
				iVar8 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar0, 2, false);
				if (ENTITY::DOES_ENTITY_EXIST(iVar8) && !PED::IS_PED_INJURED(iVar8))
				{
					ENTITY::SET_ENTITY_COORDS(iVar8, ENTITY::GET_ENTITY_COORDS(iVar8, true), true, false, false, true);
				}
			}
			VEHICLE::DELETE_VEHICLE(&iVar0);
		}
	}
}

void func_764(int iParam0, int iParam1)//Position - 0x306D
{
	int iVar0;
	if (iParam0 != 226)
	{
		if (Global_78319)
		{
			iVar0 = Global_42586[iParam0];
		}
		else
		{
			iVar0 = Global_113386.f_7261[iParam0];
		}
		if (iVar0 != iParam1 || BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
		{
			if ((((iParam1 == 4 || iParam1 == 3) || iParam1 == 5) || iParam1 == 6) || iParam1 == 2)
			{
				MISC::SET_BIT(&(Global_38421[(iParam0 / 32)]), (iParam0 % 32));
				Global_38884[iParam0] = iParam1;
			}
			else if (Global_78319)
			{
				Global_42586[iParam0] = iParam1;
			}
			else
			{
				Global_113386.f_7261[iParam0] = iParam1;
			}
			MISC::SET_BIT(&(Global_38412[(iParam0 / 32)]), (iParam0 % 32));
			__LIB_17__::func_734(iParam0);
			if (BitTest(Global_38412[(iParam0 / 32)], (iParam0 % 32)))
			{
				__LIB_0__::func_401(iParam0);
			}
		}
	}
}

int func_765(int iParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4)//Position - 0x2EAE
{
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0))
	{
		if (__LIB_17__::func_533(iParam1, "Loading", 0))
		{
			*iParam0 = VEHICLE::CREATE_VEHICLE(iParam1, Param2, fParam3, true, true, false);
			if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
			{
				if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
				{
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, false);
				}
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				if (bParam4)
				{
					__LIB_17__::func_532(iParam1, 1);
				}
				return 1;
			}
		}
	}
	else
	{
		if (__LIB_0__::func_695(*iParam0))
		{
			ENTITY::SET_ENTITY_COORDS(*iParam0, Param2, true, false, false, true);
			ENTITY::SET_ENTITY_HEADING(*iParam0, fParam3);
		}
		if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
		{
			ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, false);
			return 1;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

void func_766(char* sParam0, bool bParam1)//Position - 0x2A09D
{
	if (!*bParam1)
	{
		__LIB_0__::func_229(sParam0, 7500, 0);
		*bParam1 = 1;
	}
}

void func_767(int* iParam0, struct<3> Param1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x221E
{
	switch (*iParam2)
	{
		case 0:
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)
			{
				*iParam2 = 1;
			}
			break;
		case 1:
			__LIB_0__::func_714(iParam0);
			if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
			{
				HUD::CLEAR_PRINTS();
				__LIB_0__::func_229("LOSE_WANTED" /* GXT: Lose the Cops. */, 7500, 0);
				*iParam2 = 2;
			}
			break;
		case 2:
			if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)
			{
				HUD::CLEAR_PRINTS();
				if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
				{
					__LIB_17__::func_531(__LIB_17__::func_529(__LIB_13__::func_102(), 0), iParam4);
					__LIB_17__::func_540(iParam0, Param1, 1);
				}
				else if (iParam3 == 0 && !*iParam5)
				{
					__LIB_0__::func_229(__LIB_17__::func_528(__LIB_13__::func_102()), 7500, 0);
					*iParam5 = 1;
				}
				*iParam2 = 0;
			}
			break;
	}
}

void func_768(int* iParam0, var uParam1)//Position - 0x31A4
{
	int iVar0;
	int iVar1;
	int iVar2;
	if (!bLocal_28)
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
		{
			iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
			if (iVar0 != *iParam0)
			{
				if (__LIB_0__::func_695(iVar0))
				{
					iVar1 = ENTITY::GET_ENTITY_MODEL(iVar0);
					if (iVar1 == joaat("trash"))
					{
						*uParam1 = *iParam0;
						__LIB_0__::func_106(iParam0);
						*iParam0 = iVar0;
						__LIB_0__::func_679(*iParam0, 1);
						__LIB_0__::func_679(*uParam1, 3);
						if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
						{
							ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
						}
					}
					else if (iVar1 == joaat("towtruck"))
					{
						iVar2 = VEHICLE::GET_ENTITY_ATTACHED_TO_TOW_TRUCK(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false));
						if (__LIB_0__::func_121(iVar2))
						{
							iVar0 = ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(iVar2);
							if (ENTITY::GET_ENTITY_MODEL(iVar0) == joaat("trash"))
							{
								*uParam1 = *iParam0;
								__LIB_0__::func_106(iParam0);
								*iParam0 = iVar0;
								__LIB_0__::func_679(*iParam0, 1);
								__LIB_0__::func_679(*uParam1, 3);
								if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(*iParam0))
								{
									ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
								}
							}
						}
					}
				}
			}
		}
	}
}

void func_769(int* iParam0)//Position - 0x32C9
{
	int iVar0;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar0 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		if (iVar0 != *iParam0)
		{
			if (__LIB_0__::func_695(iVar0))
			{
				if (ENTITY::GET_ENTITY_MODEL(iVar0) == __LIB_17__::func_534(__LIB_13__::func_102()))
				{
					__LIB_0__::func_106(iParam0);
					*iParam0 = iVar0;
					__LIB_0__::func_679(*iParam0, 1);
					ENTITY::SET_ENTITY_AS_MISSION_ENTITY(*iParam0, true, true);
				}
			}
		}
	}
}

int func_770(int iParam0, struct<3> Param1, int* iParam2, int iParam3, int iParam4, int iParam5, int iParam6, bool bParam7, bool bParam8, float fParam9)//Position - 0x3659
{
	if ((iParam4 == 1 || iParam4 == 2) || iParam4 == 3)
	{
		if (iParam3 == 0)
		{
			__LIB_17__::func_540(iParam2, Param1, 1);
			if (!bParam8)
			{
				if (__LIB_0__::func_695(iParam0))
				{
					if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, fParam9, fParam9, 2f, true, true, 0))
					{
						return 1;
					}
				}
			}
			else if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam9, fParam9, 2f, true, true, 2))
			{
				return 1;
			}
			if (__LIB_0__::func_501(__LIB_17__::func_528(__LIB_13__::func_102()), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_17__::func_528(__LIB_13__::func_102()));
			}
			if (!__LIB_0__::func_329())
			{
				__LIB_17__::func_531(__LIB_17__::func_529(__LIB_13__::func_102(), bParam7), iParam5);
			}
		}
	}
	else if (iParam3 == 0)
	{
		if (!*iParam6)
		{
			if (__LIB_0__::func_501(__LIB_17__::func_529(__LIB_13__::func_102(), 0), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_17__::func_529(__LIB_13__::func_102(), 0));
			}
			__LIB_0__::func_229(__LIB_17__::func_528(__LIB_13__::func_102()), 7500, 0);
			*iParam6 = 1;
		}
	}
	return 0;
}

bool func_771(int iParam0, int iParam1, float fParam2, int iParam3, int iParam4, int iParam5)//Position - 0x54B2
{
	var uVar0;
	struct<3> Var1;
	int iVar2;
	iVar2 = __LIB_17__::func_517(iParam0, iParam1);
	if (!__LIB_0__::func_121(iParam0) || !__LIB_0__::func_121(iParam1))
	{
		if (iVar2 != -1)
		{
			__LIB_13__::func_439(&(Local_38[iVar2 /*4*/]));
		}
		return 0;
	}
	if (!__LIB_14__::func_736(iParam0, iParam1, fParam2, iParam3))
	{
		return 0;
	}
	if (iVar2 == -1)
	{
		iVar2 = __LIB_17__::func_516();
		if (iVar2 == -1)
		{
			return 0;
		}
		Local_38[iVar2 /*4*/].f_1 = iParam0;
		Local_38[iVar2 /*4*/].f_2 = iParam1;
	}
	Var1 = { PED::GET_PED_BONE_COORDS(iParam0, 31086, 0f, 0f, 0f) };
	uVar0 = __LIB_17__::func_521(&(Local_38[iVar2 /*4*/]), Var1, iParam1, &(Local_38[iVar2 /*4*/].f_3), iParam0, iParam5);
	return (uVar0 || (MISC::GET_GAME_TIMER() - Local_38[iVar2 /*4*/].f_3) < iParam4);
}

void func_772()//Position - 0x2AC5E
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 3)
	{
		iVar1 = __LIB_16__::func_914(iVar0);
		if (!PED::IS_PED_INJURED(iVar1))
		{
			if (__LIB_17__::func_550(iVar1))
			{
				__LIB_17__::func_549(iVar1);
			}
		}
		iVar0++;
	}
}

int func_773(int iParam0, int iParam1)//Position - 0x11FEE
{
	if (ENTITY::DOES_ENTITY_EXIST(iParam0) && !PED::IS_PED_INJURED(iParam0))
	{
		if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), iParam1))
		{
			if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), iParam0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), iParam0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_774(struct<3> Param0, float fParam1)//Position - 0x1E7C
{
	return __LIB_14__::func_606(&(Global_103950.f_2890), Param0, fParam1, 0);
}

void func_775(int iParam0)//Position - 0x1961
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < Global_75249)
	{
		if (Global_63379[Global_75250[iVar0 /*9*/] /*13*/] == 12)
		{
			Global_75250[iVar0 /*9*/].f_1 = (Global_75250[iVar0 /*9*/].f_1 + iParam0);
		}
		iVar0++;
	}
}

int func_776()//Position - 0x2FF68
{
	return Global_100493.f_481;
}

int func_777(int iParam0, struct<3> Param1, int* iParam2, int iParam3, int iParam4, int iParam5, int iParam6, int iParam7, int iParam8, int iParam9, float fParam10)//Position - 0x1C8F
{
	float fVar0;
	if ((iParam3 == 1 || iParam3 == 2) || iParam3 == 3)
	{
		if (iParam4 == 0)
		{
			if (__LIB_0__::func_695(iParam0))
			{
				if (!ENTITY::IS_ENTITY_UPSIDEDOWN(iParam0))
				{
					__LIB_17__::func_531(__LIB_17__::func_530(__LIB_13__::func_102()), iParam9);
				}
			}
			if (!ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam10, fParam10, 2f, false, true, 2))
			{
				ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), Param1, fParam10, fParam10, 2f, true, true, 2);
				if (__LIB_0__::func_501(__LIB_17__::func_530(__LIB_13__::func_102()), 0, 0))
				{
					HUD::CLEAR_THIS_PRINT(__LIB_17__::func_530(__LIB_13__::func_102()));
				}
				*iParam5 = 1;
				__LIB_17__::func_540(iParam2, Param1, 1);
			}
			else
			{
				if (*iParam5)
				{
					fVar0 = (fParam10 / 2f);
					if (__LIB_0__::func_725(PLAYER::PLAYER_PED_ID(), Param1, fVar0, 1))
					{
						*iParam5 = 0;
						__LIB_17__::func_514(1077936128, 1);
					}
				}
				__LIB_0__::func_714(iParam2);
			}
		}
	}
	else if (ENTITY::IS_ENTITY_AT_COORD(iParam0, Param1, fParam10, fParam10, 2f, false, true, 2))
	{
		if (*iParam7 == -1)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 2);
			return 1;
		}
		if (!*iParam8)
		{
			if (__LIB_0__::func_501(__LIB_17__::func_530(__LIB_13__::func_102()), 0, 0))
			{
				HUD::CLEAR_PRINTS();
			}
			*iParam7 = MISC::GET_GAME_TIMER();
			*iParam8 = 1;
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 2);
		}
		else if ((MISC::GET_GAME_TIMER() - *iParam7) > 3000)
		{
			return 1;
		}
	}
	else
	{
		if (VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(iParam0) == 2)
		{
			VEHICLE::SET_VEHICLE_DOORS_LOCKED(iParam0, 1);
		}
		if (!*iParam6)
		{
			if (__LIB_0__::func_501(__LIB_17__::func_529(__LIB_13__::func_102(), 0), 0, 0))
			{
				HUD::CLEAR_THIS_PRINT(__LIB_17__::func_529(__LIB_13__::func_102(), 0));
			}
			if (!__LIB_0__::func_501(__LIB_17__::func_528(__LIB_13__::func_102()), 0, 0))
			{
				__LIB_0__::func_229(__LIB_17__::func_528(__LIB_13__::func_102()), 7500, 0);
				*iParam6 = 1;
			}
		}
		*iParam5 = 1;
	}
	return 0;
}

int func_778()//Position - 0x1020D
{
	if (((((__LIB_0__::func_921(39) || __LIB_0__::func_921(40)) || __LIB_0__::func_921(41)) || __LIB_0__::func_921(42)) || __LIB_0__::func_921(43)) || __LIB_0__::func_921(44))
	{
		return 1;
	}
	return 0;
}

int func_779(bool bParam0, int iParam1)//Position - 0x2FF07
{
	int iVar0;
	if (!bParam0)
	{
		switch (__LIB_0__::func_683())
		{
			case 0:
				iVar0 = 0;
				break;
			case 1:
				iVar0 = 1;
				break;
			case 2:
				iVar0 = 2;
				break;
		}
		if (__LIB_17__::func_603(iVar0, iParam1) < 0)
		{
			return 0;
		}
	}
	return 1;
}

bool func_780(int iParam0)//Position - 0x758E
{
	return STREAMING::HAS_MODEL_LOADED(Global_96316[iParam0 /*5*/].f_4);
}

void func_781(int iParam0)//Position - 0x78B5
{
	STREAMING::REQUEST_MODEL(Global_96316[iParam0 /*5*/].f_4);
}

void func_782(float fParam0)//Position - 0x19D40
{
	CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(fParam0);
	CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(fParam0, 1f);
}

int func_783(int iParam0, int iParam1)//Position - 0x839B3
{
	int iVar0;
	if (!ENTITY::IS_ENTITY_DEAD(iParam0, false))
	{
		if (!ENTITY::IS_ENTITY_DEAD(iParam1, false))
		{
			if (WEAPON::GET_CURRENT_PED_WEAPON(iParam1, &iVar0, true))
			{
				if (iVar0 == joaat("WEAPON_STUNGUN"))
				{
					if (WEAPON::HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(iParam0, joaat("WEAPON_STUNGUN"), 0) && ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(iParam0, iParam1, true))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_784(int iParam0, int iParam1)//Position - 0x897B7
{
	if (iParam0 == 13 || iParam0 == -1)
	{
		return;
	}
	if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[iParam0] == iParam1)
	{
		return;
	}
	Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[iParam0] = iParam1;
}

void func_785(int iParam0, struct<3> Param1, float fParam2)//Position - 0x8969C
{
	if (__LIB_16__::func_31(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		if (BitTest(Global_77137.f_555[0 /*21*/].f_9, 10))
		{
			Global_113386.f_32749.f_1864[Global_77137.f_555[0 /*21*/].f_14 /*3*/] = { Param1 };
			Global_113386.f_32749.f_1934[Global_77137.f_555[0 /*21*/].f_14] = fParam2;
		}
	}
}

bool func_786(int* iParam0, struct<3> Param1, struct<3> Param2, bool bParam3, char* sParam4, bool bParam5, bool bParam6, int iParam7, bool bParam8)//Position - 0x82F98
{
	return __LIB_15__::func_982(iParam0, Param1, Param2, __LIB_0__::func_613(), __LIB_0__::func_613(), bParam3, 3, 0, 0, 0, 0, sParam4, __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), 0, bParam5, __LIB_0__::func_591(), 0, 0, bParam6, iParam7, __LIB_0__::func_591(), __LIB_0__::func_591(), __LIB_0__::func_591(), bParam8, 1065353216);
}

int func_787(int iParam0, int iParam1, struct<3> Param2, float fParam3, int iParam4, bool bParam5)//Position - 0x65A4
{
	int iVar0;
	if (iParam0 < 0)
	{
		return 0;
	}
	if (iParam0 >= 5)
	{
		return 0;
	}
	iVar0 = __LIB_16__::func_594(iParam0, iParam1);
	if ((iVar0 == 0 || iVar0 == 15) || iVar0 == 14)
	{
		return 0;
	}
	return __LIB_17__::func_759(iVar0, Param2, fParam3, iParam4, bParam5);
}

int func_788(var uParam0, bool bParam1)//Position - 0x17F79
{
	bool bVar0;
	bool bVar1;
	if (!uParam0->f_39)
	{
		uParam0->f_7 = 4;
		uParam0->f_39 = 1;
	}
	if ((bParam1 != 0 && bParam1 != 2) && bParam1 != 1)
	{
	}
	else
	{
		bVar0 = uParam0->f_34[bParam1] == 2;
		if (__LIB_0__::func_682(__LIB_14__::func_466()) != bParam1 || bVar0)
		{
			bVar1 = false;
			if ((bVar0 || uParam0->f_24[bParam1] != 0) || ((__LIB_15__::func_971(bParam1) && __LIB_15__::func_975(bParam1)) && !uParam0->f_18[bParam1]))
			{
				if (!uParam0->f_23)
				{
					if (!PED::IS_PED_INJURED((*uParam0)[bParam1]) || bVar0)
					{
						if (uParam0->f_34[bParam1] != 1 && uParam0->f_34[bParam1] != 3)
						{
							bVar1 = true;
						}
					}
				}
				else if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0)) && !BitTest(Global_97919.f_47, bParam1))
				{
					bVar1 = true;
				}
			}
			else if (!((BitTest(Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_2_MF_STRANDS_ARRAY[27 /*3*/], 1) && !Global_3) && !__LIB_0__::func_2(0)))
			{
				if (uParam0->f_23)
				{
					bVar1 = true;
				}
			}
			if (bVar1)
			{
				uParam0->f_7 = bParam1;
				return 1;
			}
		}
	}
	uParam0->f_39 = 0;
	return 0;
}

void func_789(int iParam0, char* sParam1, int iParam2, int iParam3, int iParam4, int iParam5)//Position - 0x78CB
{
	int iVar0;
	int iVar1;
	int iVar2;
	char[] cVar3[8];
	int iVar4;
	var uVar5;
	int iVar6;
	if (iParam3 == 1)
	{
		if (!MISC::ARE_STRINGS_EQUAL("FinaleC2", SCRIPT::GET_THIS_SCRIPT_NAME()))
		{
		}
	}
	iVar0 = 0;
	if (iParam3 == 1)
	{
		if (iParam0 != Global_100478)
		{
			iVar0 = 1;
		}
	}
	else if (iParam0 > Global_100478)
	{
		iVar0 = 1;
	}
	if (iVar0 == 1)
	{
		__LIB_0__::func_179(1);
		if (iParam0 <= Global_100478)
		{
		}
		iVar1 = __LIB_0__::func_365(SCRIPT::GET_THIS_SCRIPT_NAME(), 1);
		if (iVar1 != -1 && iVar1 != 94)
		{
			Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[iVar1 /*6*/].f_1 = 0;
			iVar2 = __LIB_0__::func_510(iVar1);
			cVar3 = { Global_91229[iVar1 /*34*/].f_8 };
			if (iVar1 == 90)
			{
				switch (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[7])
				{
					case 1:
						StringConCat(&cVar3, "A", 8);
						break;
					case 2:
						StringConCat(&cVar3, "B", 8);
						break;
					}
			}
			STATS::PLAYSTATS_MISSION_CHECKPOINT(&cVar3, iVar2, Global_100478, iParam0);
		}
		else
		{
			iVar4 = __LIB_0__::func_531(SCRIPT::GET_THIS_SCRIPT_NAME(), 1);
			if (iVar4 != -1)
			{
				Global_113386.f_18574[iVar4 /*6*/].f_4 = 0;
				MemCopy(&uVar5, {__LIB_0__::func_45(iVar4)}, 4);
				STATS::PLAYSTATS_MISSION_CHECKPOINT(&uVar5, 0, Global_100478, iParam0);
			}
			else
			{
				iVar6 = __LIB_0__::func_125(&(Global_100441.f_3));
				if (iVar6 > -1)
				{
					Global_113386.f_24986.f_4[iVar6] = 0;
				}
			}
		}
		Global_94619 = iParam2;
		Global_100478 = iParam0;
		__LIB_17__::func_204(iParam0, sParam1, iParam4, iParam5);
		if (MISC::ARE_STRINGS_EQUAL(sParam1, ""))
		{
		}
	}
	else if (iParam0 < Global_100478)
	{
	}
}

void func_790(int iParam0)//Position - 0x70FE
{
	int iVar0;
	iVar0 = __LIB_17__::func_557(iParam0);
	MISC::SET_BIT(&(uLocal_47[__LIB_17__::func_556(iParam0)]), iVar0);
}

int func_791(float fParam0)//Position - 0xC87B
{
	if (iLocal_42 == 1)
	{
		if (__LIB_0__::func_725(PLAYER::PLAYER_PED_ID(), Global_96387[1 /*15*/], fParam0, 1))
		{
			return 1;
		}
	}
	else if (iLocal_42 == 2)
	{
		if (__LIB_0__::func_725(PLAYER::PLAYER_PED_ID(), Global_96387[0 /*15*/], fParam0, 1))
		{
			return 1;
		}
	}
	else if (iLocal_42 == 0)
	{
		if (__LIB_0__::func_725(PLAYER::PLAYER_PED_ID(), Global_96387[3 /*15*/], fParam0, 1))
		{
			return 1;
		}
	}
	return 0;
}

void func_792(bool bParam0)//Position - 0x2B3
{
	int iVar0;
	iVar0 = __LIB_17__::func_557(bParam0);
	MISC::CLEAR_BIT(&(uLocal_47[__LIB_17__::func_556(bParam0)]), iVar0);
}

int func_793()//Position - 0x7D11
{
	if ((__LIB_0__::func_178(79) && __LIB_0__::func_178(83)) && __LIB_0__::func_425(__LIB_17__::func_558()))
	{
		return 1;
	}
	return 0;
}

int func_794(int iParam0, int iParam1)//Position - 0x7DCA
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	iVar1 = iParam0;
	while (iVar1 <= iParam1)
	{
		if (__LIB_0__::func_178(iVar1))
		{
			iVar0++;
		}
		iVar1++;
	}
	if (__LIB_0__::func_425(__LIB_17__::func_558()))
	{
		iVar0++;
	}
	return iVar0;
}

int func_795()//Position - 0x854E
{
	if (iLocal_42 == 0)
	{
		if ((__LIB_0__::func_178(74) || __LIB_0__::func_178(74)) && __LIB_17__::func_519())
		{
			return 1;
		}
	}
	else if (iLocal_42 == 1)
	{
		if (__LIB_0__::func_178(68))
		{
			return 1;
		}
	}
	return 0;
}

void func_796(int iParam0)//Position - 0xA0F8
{
	Local_44.f_6 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
	__LIB_17__::func_562(iParam0);
}

int func_797(bool bParam0)//Position - 0xC212
{
	int iVar0;
	if (__LIB_0__::func_43(bParam0))
	{
		if (__LIB_17__::func_574(bParam0))
		{
			iVar0 = 0;
			while (iVar0 < Global_113386.f_7688.f_136)
			{
				if (Global_113386.f_7688[iVar0 /*15*/].f_3 == 5)
				{
					return 1;
				}
				iVar0++;
			}
		}
	}
	return 0;
}

void func_798()//Position - 0xD262
{
	sLocal_45[0] = "AM_H_FBIC1A" /* GXT: This area is unsuitable for the getaway vehicle. Find a more discreet location. */;
	sLocal_45[1] = "AM_H_FBIC1B" /* GXT: The getaway vehicle cannot be placed while meeting a friend. */;
	sLocal_45[2] = "AM_H_FBIC1C" /* GXT: The getaway vehicle cannot be placed while on a taxi job. */;
	sLocal_45[3] = "PRC_WANT";
	sLocal_45[4] = "PRC_DROPOFF";
	sLocal_45[5] = "PRC_INVALVEH";
	sLocal_45[6] = "PRC_HEALTH";
	sLocal_45[7] = __LIB_17__::func_576(7);
	sLocal_45[8] = __LIB_17__::func_576(8);
	sLocal_45[9] = "PRC_USEFIRST";
	sLocal_45[10] = __LIB_17__::func_576(10);
	sLocal_45[11] = __LIB_17__::func_576(11);
	sLocal_45[13] = __LIB_17__::func_576(13);
	sLocal_45[12] = __LIB_17__::func_576(12);
	sLocal_45[14] = "PRC_UNUSE";
	sLocal_45[15] = "PRC_SEATS";
	sLocal_45[16] = "PRC_CBOBVAL";
	sLocal_45[17] = __LIB_17__::func_576(17);
	sLocal_45[18] = __LIB_17__::func_576(18);
	sLocal_45[20] = __LIB_17__::func_576(20);
	sLocal_45[21] = "PRC_PUBAREA";
	sLocal_45[22] = "PRC_LAWAREA";
	sLocal_45[23] = "PRC_RESAREA";
	sLocal_45[24] = "PRC_STOP";
	sLocal_45[25] = "PRC_OWNEDM";
	sLocal_45[26] = "PRC_OWNEDF";
	sLocal_45[27] = "PRC_OWNEDT";
	sLocal_45[28] = "PRC_SECROUTE";
	sLocal_45[29] = "PRC_CLOSELOT";
	sLocal_45[30] = "PRC_CLOSELES";
	sLocal_45[31] = "PRC_CLSAGNT";
	sLocal_45[32] = "PRC_CLOSESAFE_M";
	sLocal_45[33] = "PRC_CLOSESAFE_F";
	sLocal_45[34] = "PRC_CLOSESAFE_T";
	sLocal_45[35] = "PRC_PEDS";
	sLocal_45[36] = "PRC_WATER";
	sLocal_45[37] = "PRC_OBST";
	sLocal_45[38] = "PRC_OBSTVEH";
	sLocal_45[39] = "PRC_UPDWN";
	sLocal_45[40] = "PRC_NEARROAD";
	sLocal_45[41] = "PRC_ONROAD";
	sLocal_45[19] = "PRC_PLAN";
	sLocal_45[42] = "PRC_TOOSTEEP";
	sLocal_45[43] = "PRC_UNEVEN";
	sLocal_45[44] = "PRC_REMIND";
	sLocal_45[45] = "PRC_REMINDA";
}

void func_799()//Position - 0xD605
{
	sLocal_69[0] = "ARMYB" /* GXT: Fort Zancudo */;
	sLocal_69[1] = "AIRP" /* GXT: Los Santos International Airport */;
	sLocal_69[2] = "STAD" /* GXT: Maze Bank Arena */;
	sLocal_69[3] = "TERMINA" /* GXT: Terminal */;
	sLocal_69[4] = "MOVIE" /* GXT: Richards Majestic */;
	sLocal_69[5] = "JAIL" /* GXT: Bolingbroke Penitentiary */;
	sLocal_69[6] = "OCEANA" /* GXT: Pacific Ocean */;
	sLocal_69[7] = "GOLF" /* GXT: GWC and Golfing Society */;
	sLocal_69[8] = "HORS" /* GXT: Vinewood Racetrack */;
	sLocal_69[9] = "MTCHIL" /* GXT: Mount Chiliad */;
	sLocal_69[10] = "MTGORDO" /* GXT: Mount Gordo */;
	sLocal_69[11] = "SANCHIA" /* GXT: San Chianski Mountain Range */;
	sLocal_69[12] = "TATAMO" /* GXT: Tataviam Mountains */;
	Local_68[0 /*261*/][0 /*8*/] = { __LIB_17__::func_577("DELBE" /* GXT: Del Perro Beach */, -1615.2574f, -952.59436f, 20.01716f, -2160.7058f, -423f, -1.28679f, 327.8f) };
	Local_68[0 /*261*/][1 /*8*/] = { __LIB_17__::func_577("DELBE" /* GXT: Del Perro Beach */, -1521.7163f, -914.56757f, 20.17247f, -1855.7148f, -1325.784f, -44.79295f, 254.8f) };
	Local_68[0 /*261*/][2 /*8*/] = { __LIB_17__::func_577("BEACH" /* GXT: Vespucci Beach */, -1162.3699f, -1815.0084f, 15.33822f, -1553.2072f, -1098.6849f, 0.46467f, 253.91f) };
	Local_68[0 /*261*/][3 /*8*/] = { __LIB_17__::func_577("BEACH" /* GXT: Vespucci Beach */, -1464.2185f, -1136.7828f, 0.32167f, -2241.5664f, -358.88486f, 20.32481f, 282.21f) };
	Local_68[0 /*261*/][4 /*8*/] = { __LIB_17__::func_577("PBOX" /* GXT: Pillbox Hill */, 156.41087f, -1042.6412f, 22.31273f, 238.63815f, -821.1217f, 35.10069f, 176.96f) };
	Local_68[0 /*261*/][5 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, 883.1121f, 534.72833f, 115.72503f, 559.7425f, 644.602f, 150.59714f, 301.08f) };
	Local_68[0 /*261*/][6 /*8*/] = { __LIB_17__::func_577("EAST_V" /* GXT: East Vinewood */, 941.45306f, -329.4256f, 60.77003f, 727.76514f, -200.95193f, 75.59085f, 88.89f) };
	Local_68[0 /*261*/][7 /*8*/] = { __LIB_17__::func_577("EAST_V" /* GXT: East Vinewood */, 689.1177f, -273.14056f, 60.21559f, 834.7326f, -352.1655f, 50.92442f, 81.23f) };
	Local_68[0 /*261*/][8 /*8*/] = { __LIB_17__::func_577("MIRR" /* GXT: Mirror Park */, 1048.4985f, -357.0332f, 60.92149f, 1401.5808f, -783.8975f, 75.7477f, 325.93f) };
	Local_68[0 /*261*/][9 /*8*/] = { __LIB_17__::func_577("MIRR" /* GXT: Mirror Park */, 892.28357f, -461.57523f, 70.86029f, 1161.3007f, -829.8299f, 45.90131f, 184.12f) };
	Local_68[0 /*261*/][10 /*8*/] = { __LIB_17__::func_577("VCANA" /* GXT: Vespucci Canals */, -1161.3606f, -1143.7163f, -5.71593f, -864.9714f, -981.12573f, 21.09691f, 328.65f) };
	Local_68[0 /*261*/][11 /*8*/] = { __LIB_17__::func_577("BAYTRE" /* GXT: Baytree Canyon */, 251.40108f, 1068.3472f, 280.6663f, 189.60123f, 1272.3522f, 143.80351f, 160.32f) };
	Local_68[0 /*261*/][13 /*8*/] = { __LIB_17__::func_577("OBSERV" /* GXT: Galileo Observatory */, -450.98346f, 1048.4084f, 252.94498f, -389.56403f, 1244.5039f, 370.24692f, 199.93f) };
	Local_68[0 /*261*/][14 /*8*/] = { __LIB_17__::func_577("AIRP" /* GXT: Los Santos International Airport */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][15 /*8*/] = { __LIB_17__::func_577("TERMINA" /* GXT: Terminal */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][16 /*8*/] = { __LIB_17__::func_577("STAD" /* GXT: Maze Bank Arena */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][17 /*8*/] = { __LIB_17__::func_577("MOVIE" /* GXT: Richards Majestic */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][18 /*8*/] = { __LIB_17__::func_577("GOLF" /* GXT: GWC and Golfing Society */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][19 /*8*/] = { __LIB_17__::func_577("HORS" /* GXT: Vinewood Racetrack */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[0 /*261*/][20 /*8*/] = { __LIB_17__::func_577("PBOX" /* GXT: Pillbox Hill */, -28.39781f, -1071.2449f, 50.21438f, -49.8352f, -1131.2766f, 20.02555f, 55.12f) };
	Local_68[0 /*261*/][21 /*8*/] = { __LIB_17__::func_577("LOSSF" /* GXT: Los Santos Freeway */, 843.19617f, 25.93548f, 65.16061f, 1138.6865f, 363.05872f, 105.41279f, 61.11f) };
	Local_68[0 /*261*/][22 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -992.56384f, -199.7673f, 30.74956f, -687.9904f, -43.23445f, 80.93306f, 80.53f) };
	Local_68[0 /*261*/][23 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -251.8548f, -446.2141f, 29.5887f, -362.685f, -434.7425f, 90.931f, 50f) };
	Local_68[0 /*261*/][24 /*8*/] = { __LIB_17__::func_577("ALTA" /* GXT: Alta */, 180.2637f, -404.9771f, 40.1713f, 289.9432f, -445.1485f, 124.3793f, 100f) };
	Local_68[0 /*261*/][25 /*8*/] = { __LIB_17__::func_577("ALTA" /* GXT: Alta */, 343.8481f, -323.1273f, 80.7749f, 427.08f, -361.0469f, 45.3411f, 85f) };
	Local_68[0 /*261*/][26 /*8*/] = { __LIB_17__::func_577("RANCHO" /* GXT: Rancho */, 414.5057f, -2092.0999f, 19.8533f, 350.8093f, -2158.395f, 12.3916f, 55f) };
	Local_68[0 /*261*/][27 /*8*/] = { __LIB_17__::func_577("RANCHO" /* GXT: Rancho */, 283.7474f, -2103.9177f, 12.9242f, 391.8871f, -1983.2037f, 33.0042f, 100f) };
	Local_68[0 /*261*/][28 /*8*/] = { __LIB_17__::func_577("PBOX" /* GXT: Pillbox Hill */, 85.038f, -670.3274f, 42.8642f, 227.8234f, -722.2458f, 274f, 175f) };
	Local_68[0 /*261*/][29 /*8*/] = { __LIB_17__::func_577("PBOX" /* GXT: Pillbox Hill */, -107.2516f, -906.36f, 28.2051f, -49.9007f, -752.925f, 330f, 125f) };
	Local_68[0 /*261*/][30 /*8*/] = { __LIB_17__::func_577("TEXTI" /* GXT: Textile City */, 456.8563f, -683.8335f, 32.2903f, 457.5504f, -819.4669f, 25.9553f, 14.4f) };
	Local_68[0 /*261*/][31 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -699.7205f, -227.3646f, 67.818f, -645.1068f, -332.5107f, 30.9132f, 127.1f) };
	Local_68[0 /*261*/].f_260 = 0;
	Local_68[0 /*261*/].f_257 = 32;
	Local_68[2 /*261*/][0 /*8*/] = { __LIB_17__::func_577("PBOX" /* GXT: Pillbox Hill */, -25.50944f, -932.38464f, 20.41711f, 119.94056f, -523.43976f, 33.07988f, 363.4f) };
	Local_68[2 /*261*/][1 /*8*/] = { __LIB_17__::func_577("DOWNT" /* GXT: Downtown */, -25.50944f, -932.38464f, 20.41711f, 119.94056f, -523.43976f, 33.07988f, 363.4f) };
	Local_68[2 /*261*/][2 /*8*/] = { __LIB_17__::func_577("COSI" /* GXT: Countryside */, 1426.9344f, 1225.1151f, 90.76305f, 1429.9823f, 1006.8307f, 120.66425f, 259.89f) };
	Local_68[2 /*261*/][3 /*8*/] = { __LIB_17__::func_577("COSI" /* GXT: Countryside */, 3503.5603f, 3546.4026f, 20.18748f, 3513.9546f, 3875.7952f, 72.94806f, 393.78f) };
	Local_68[2 /*261*/][4 /*8*/] = { __LIB_17__::func_577("SKID" /* GXT: Mission Row */, 403.54044f, -864.46936f, 20.33799f, 396.34406f, -1127.3247f, 35.49262f, 325.93f) };
	Local_68[2 /*261*/][5 /*8*/] = { __LIB_17__::func_577("JAIL" /* GXT: Bolingbroke Penitentiary */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[2 /*261*/][6 /*8*/] = { __LIB_17__::func_577("ARMYB" /* GXT: Fort Zancudo */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[2 /*261*/].f_260 = 2;
	Local_68[2 /*261*/].f_257 = 7;
	Local_68[1 /*261*/][0 /*8*/] = { __LIB_17__::func_577("PALETO" /* GXT: Paleto Bay */, -422.86185f, 6068.399f, 20.34662f, -282.74524f, 6206.324f, 50.46586f, 196.61f) };
	Local_68[1 /*261*/][1 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -755.2506f, 147.4266f, 75.41048f, -1079.0332f, 169.38055f, 50.46801f, 179.12f) };
	Local_68[1 /*261*/][2 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -752.36743f, 90.76733f, 65.5171f, -938.79803f, -15.91457f, 35.48347f, 205.78f) };
	Local_68[1 /*261*/][3 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -890.4999f, 431.1449f, 90.29848f, -875.3576f, 232.3266f, 60.20724f, 263.82f) };
	Local_68[1 /*261*/][4 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -752.36743f, 90.76733f, 65.5171f, -938.79803f, -15.91457f, 35.48347f, 205.78f) };
	Local_68[1 /*261*/][5 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -1198.1826f, 638.63666f, 115.10664f, -444.509f, 750.9377f, 198.29713f, 473.88f) };
	Local_68[1 /*261*/][6 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -844.40753f, 400.9413f, 80.433f, -109.53111f, 420.5014f, 120.2088f, 256.03f) };
	Local_68[1 /*261*/][7 /*8*/] = { __LIB_17__::func_577("ROCKF" /* GXT: Rockford Hills */, -518.62134f, 648.82654f, 130.93524f, -64.0709f, 582.45044f, 215.30841f, 162.72f) };
	Local_68[1 /*261*/][8 /*8*/] = { __LIB_17__::func_577("RICHM" /* GXT: Richman */, -934.98016f, 349.61014f, 85.77298f, -1432.4509f, 269.98038f, 50.7303f, 185.03f) };
	Local_68[1 /*261*/][9 /*8*/] = { __LIB_17__::func_577("RICHM" /* GXT: Richman */, -1633.8134f, -69.53224f, 65.10236f, -1446.8229f, 69.71544f, 48.23926f, 214.92f) };
	Local_68[1 /*261*/][10 /*8*/] = { __LIB_17__::func_577("RICHM" /* GXT: Richman */, -1732.258f, 444.13525f, 130.12581f, -2065.6904f, 412.21207f, 98.09863f, 175.17f) };
	Local_68[1 /*261*/][11 /*8*/] = { __LIB_17__::func_577("RICHM" /* GXT: Richman */, -1618.0363f, 50.95197f, 70.95364f, -1396.5143f, 221.1004f, 50.84464f, 161.61f) };
	Local_68[1 /*261*/][12 /*8*/] = { __LIB_17__::func_577("RICHM" /* GXT: Richman */, -1801.285f, 106.8786f, 72.12892f, -1541.7401f, 263.37378f, 50.44112f, 155.88f) };
	Local_68[1 /*261*/][13 /*8*/] = { __LIB_17__::func_577("PELUFF", -2208.5627f, 146.41006f, 150.93246f, -2350.1223f, 486.60657f, 200.5952f, 299.18f) };
	Local_68[1 /*261*/][14 /*8*/] = { __LIB_17__::func_577("PELUFF", -1852.3263f, 134.41718f, 70.06226f, -1994.3872f, 299.62833f, 100.96516f, 182.04f) };
	Local_68[1 /*261*/][15 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, -1982.6697f, 505.9648f, 100.93644f, -1918.8427f, 713.6382f, 150.73953f, 168.9f) };
	Local_68[1 /*261*/][16 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, -1455.7506f, 887.3351f, 191.97572f, -1663.2073f, 767.3684f, 160.81076f, 239.65f) };
	Local_68[1 /*261*/][17 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, -1570.2218f, 508.20563f, 140.38838f, -808.95325f, 526.43335f, 90.18556f, 238.43f) };
	Local_68[1 /*261*/][18 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, 242.62039f, 583.59045f, 159.40428f, 268.04242f, 827.4494f, 201.69531f, 105.09f) };
	Local_68[1 /*261*/][19 /*8*/] = { __LIB_17__::func_577("CHIL" /* GXT: Vinewood Hills */, -21.10285f, 706.8648f, 150.72626f, -210.43822f, 1056.2755f, 280.31824f, 290.15f) };
	Local_68[1 /*261*/][20 /*8*/] = { __LIB_17__::func_577("RGLEN" /* GXT: Richman Glen */, -1837.5383f, 774.2984f, 120.56287f, -1765.8419f, 831.0044f, 160.35838f, 68.09f) };
	Local_68[1 /*261*/][21 /*8*/] = { __LIB_17__::func_577("DIVINE", -372.0849f, 372.71826f, 100.60433f, 390.2198f, 532.5167f, 180.53801f, 305.88f) };
	Local_68[1 /*261*/].f_260 = 1;
	Local_68[1 /*261*/].f_257 = 22;
	Local_68[3 /*261*/][0 /*8*/] = { __LIB_17__::func_577("MTCHIL" /* GXT: Mount Chiliad */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][1 /*8*/] = { __LIB_17__::func_577("MTGORDO" /* GXT: Mount Gordo */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][2 /*8*/] = { __LIB_17__::func_577("SANCHIA" /* GXT: San Chianski Mountain Range */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][3 /*8*/] = { __LIB_17__::func_577("TATAMO" /* GXT: Tataviam Mountains */, 0f, 0f, 0f, 0f, 0f, 0f, 0f) };
	Local_68[3 /*261*/][4 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 531.2397f, -3019.2666f, 50f, 530.1656f, -3393.6226f, -22.4165f, 210f) };
	Local_68[3 /*261*/][5 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 569.1023f, -2913.018f, 15.891f, 420.8226f, -2912.775f, -15.0372f, 25f) };
	Local_68[3 /*261*/][6 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 495.1012f, -2833.1753f, 5.164f, 460.1983f, -2813.5283f, 0.4269f, 12f) };
	Local_68[3 /*261*/][7 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 675.2973f, -2747.4504f, 4.952f, 689.2358f, -2747.3955f, 10.9001f, 4.3f) };
	Local_68[3 /*261*/][8 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 533.437f, -2693.2793f, 17.4952f, 588.6345f, -2693.4624f, 5.3007f, 15f) };
	Local_68[3 /*261*/][9 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 534.9656f, -2699.1365f, 4.9004f, 560.1779f, -2662.1921f, 9.0007f, 15f) };
	Local_68[3 /*261*/][10 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 583.903f, -2689.2068f, 16.9771f, 549.8469f, -2665.3176f, 3.9007f, 17.3f) };
	Local_68[3 /*261*/][11 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 683.428f, -2635.1343f, 9.3367f, 694.4725f, -2679.6597f, 4.7815f, 10f) };
	Local_68[3 /*261*/][12 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 695.2171f, -2694.7688f, 5.9815f, 695.5035f, -2679.1677f, 4.8365f, 10f) };
	Local_68[3 /*261*/][13 /*8*/] = { __LIB_17__::func_577("CYPRE" /* GXT: Cypress Flats */, 731.7991f, -2659.5796f, 4.7713f, 732.5307f, -2678.4001f, 10.5065f, 25f) };
	Local_68[3 /*261*/][14 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 86.1885f, -2430.6963f, -0.1888f, 119.1515f, -2453.121f, 2.8614f, 13f) };
	Local_68[3 /*261*/][15 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 260.3166f, -2426.7773f, 21.2819f, 313.7871f, -2433.6558f, 6.5609f, 20.5f) };
	Local_68[3 /*261*/][16 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 260.3166f, -2426.7773f, 21.2819f, 313.7871f, -2433.6558f, 6.5609f, 20.5f) };
	Local_68[3 /*261*/][17 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 283.1514f, -2456.7773f, 19.4609f, 290.2325f, -2403.6113f, 4.2465f, 20.5f) };
	Local_68[3 /*261*/][18 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 266.0341f, -2446.724f, 19.4623f, 308.3783f, -2414.5442f, 4.5423f, 20.5f) };
	Local_68[3 /*261*/][19 /*8*/] = { __LIB_17__::func_577("ELYSIAN" /* GXT: Elysian Island */, 303.5269f, -2451.4456f, 19.4091f, 270.9798f, -2409.4517f, 4.4609f, 20.5f) };
	Local_68[3 /*261*/][20 /*8*/] = { __LIB_17__::func_577("RANCHO" /* GXT: Rancho */, 515.026f, -1653.5404f, 37.2615f, 582.571f, -1577.8248f, 26.3365f, 100f) };
	Local_68[3 /*261*/][21 /*8*/] = { __LIB_17__::func_577("BURTON" /* GXT: Burton */, -150.7403f, -419.0541f, 28.6163f, -52.8669f, -453.5552f, 39.4051f, 100f) };
	Local_68[3 /*261*/][22 /*8*/] = { __LIB_17__::func_577("SanAnd" /* GXT: San Andreas */, 50.2035f, -470.7132f, 36.9003f, 102.0394f, -322.0089f, 115f, 130f) };
	Local_68[3 /*261*/][23 /*8*/] = { __LIB_17__::func_577("ALTA" /* GXT: Alta */, 499.1769f, -241.2495f, 47.3462f, 393.5317f, -205.7358f, 79.3132f, 120f) };
	Local_68[3 /*261*/][24 /*8*/] = { __LIB_17__::func_577("DTVINE" /* GXT: Downtown Vinewood */, 422.3247f, 62.118f, 113.2905f, 478.494f, 43.322f, 83.4541f, 80f) };
	Local_68[3 /*261*/][25 /*8*/] = { __LIB_17__::func_577("DTVINE" /* GXT: Downtown Vinewood */, 385.4908f, 56.1423f, 159.58f, 332.458f, -87.6805f, 63.3657f, 80f) };
	Local_68[3 /*261*/][26 /*8*/] = { __LIB_17__::func_577("DTVINE" /* GXT: Downtown Vinewood */, 213.6192f, 90.2228f, 98.9357f, 203.3067f, 61.8088f, 86.9197f, 60f) };
	Local_68[3 /*261*/][27 /*8*/] = { __LIB_17__::func_577("DTVINE" /* GXT: Downtown Vinewood */, 192.813f, -14.9451f, 85.3158f, 149.2689f, 0.6803f, 67.0343f, 40f) };
	Local_68[3 /*261*/][28 /*8*/] = { __LIB_17__::func_577("WVINE" /* GXT: West Vinewood */, 16.1659f, 61.8685f, 70.8467f, -17.1751f, 74.3771f, 76.88f, 4.5f) };
	Local_68[3 /*261*/][29 /*8*/] = { __LIB_17__::func_577("WVINE" /* GXT: West Vinewood */, -86.5425f, 84.8701f, 80.2147f, -50.4826f, 67.7335f, 70.297f, 20f) };
	Local_68[3 /*261*/][30 /*8*/] = { __LIB_17__::func_577("ELGORL" /* GXT: El Gordo Lighthouse */, 3449.839f, 5173.9814f, 0.0662f, 3412.309f, 5166.8896f, 14.8342f, 33.7f) };
	Local_68[3 /*261*/].f_260 = 3;
	Local_68[3 /*261*/].f_257 = 31;
	if (__LIB_0__::func_692(PLAYER::PLAYER_PED_ID()))
	{
		sLocal_70 = ZONE::GET_NAME_OF_ZONE(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
	}
}

void func_800()//Position - 0x306
{
	if (((BitTest(uLocal_49, 0) && !BitTest(uLocal_49, 1)) && !BitTest(uLocal_49, 14)) && __LIB_17__::func_587())
	{
		if (__LIB_13__::func_85(0, 172, 0) || __LIB_13__::func_85(0, 173, 0))
		{
			iLocal_78 = MISC::GET_GAME_TIMER();
		}
		if (iLocal_78 != -1)
		{
			if ((MISC::GET_GAME_TIMER() - iLocal_78) < 200)
			{
				iLocal_43 = __LIB_17__::func_586();
			}
			else
			{
				iLocal_78 = -1;
			}
		}
	}
	else
	{
		iLocal_43 = 145;
		iLocal_78 = -1;
	}
}

void func_801(bool bParam0)//Position - 0xEA0F
{
	char* sVar0;
	if (bParam0)
	{
		sVar0 = "PRC_MARK";
		if (iLocal_42 == 2)
		{
			sVar0 = "PRC_MARKVEH";
			__LIB_17__::func_585(sVar0);
		}
		else if (iLocal_42 == 0)
		{
			if (__LIB_0__::func_683() == 0)
			{
				__LIB_17__::func_584(sVar0);
				__LIB_17__::func_583(sVar0);
			}
			else if (__LIB_0__::func_683() == 1)
			{
				__LIB_17__::func_582(sVar0);
			}
			else
			{
				__LIB_17__::func_582(sVar0);
			}
		}
		else if (iLocal_42 == 1)
		{
			if (__LIB_0__::func_683() == 0)
			{
				__LIB_17__::func_584(sVar0);
				__LIB_17__::func_585(sVar0);
			}
			else if (__LIB_0__::func_683() == 1)
			{
				__LIB_17__::func_582(sVar0);
				__LIB_17__::func_585(sVar0);
			}
			else
			{
				__LIB_17__::func_582(sVar0);
				__LIB_17__::func_585(sVar0);
			}
		}
		MISC::SET_BIT(&uLocal_49, 11);
	}
	else if (BitTest(uLocal_49, 11))
	{
		__LIB_17__::func_581();
		__LIB_17__::func_580();
		__LIB_17__::func_579();
		__LIB_17__::func_578();
		MISC::CLEAR_BIT(&uLocal_49, 11);
	}
}

int func_802(var uParam0, int iParam1)//Position - 0xED73
{
	if (iParam1 == -1)
	{
		return 0;
	}
	if (!__LIB_14__::func_527(&(Global_77137.f_555[0 /*21*/]), iParam1))
	{
		return 0;
	}
	else
	{
		__LIB_0__::func_313(&(Global_113386.f_32749.f_69[Global_77137.f_555[0 /*21*/].f_14 /*78*/]), uParam0);
	}
	return 1;
}

float func_803(int iParam0)//Position - 0xEDBE
{
	if (iParam0 == -1)
	{
		return 0f;
	}
	if (!__LIB_14__::func_527(&(Global_77137.f_555[0 /*21*/]), iParam0))
	{
		return 0f;
	}
	return Global_77137.f_555[0 /*21*/].f_3;
}

void func_804()//Position - 0x765E
{
	if (iLocal_42 == 0)
	{
		__LIB_0__::func_716(23, 0, 0);
	}
	else if (iLocal_42 == 1)
	{
	}
	else if (iLocal_42 == 2)
	{
	}
}

void func_805(var uParam0, var uParam1, var uParam2, var uParam3, var uParam4, var uParam5, bool bParam6)//Position - 0x83BD
{
	struct<4> Var0;
	if (!MISC::IS_STRING_NULL_OR_EMPTY(&uParam0))
	{
		if (MISC::ARE_STRINGS_EQUAL(&uParam0, Local_44.f_7))
		{
			if (AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE() >= 0)
			{
				if (iLocal_42 == 0)
				{
					Var0 = { __LIB_17__::func_523(bParam6) };
					__LIB_0__::func_681(46, 1);
					__LIB_16__::func_598(sLocal_79, &Var0);
					__LIB_17__::func_513(1);
				}
				else if (iLocal_42 == 1)
				{
					Var0 = { __LIB_17__::func_595(bParam6) };
					__LIB_16__::func_598(sLocal_79, &Var0);
					__LIB_17__::func_513(1);
				}
				iLocal_40 = 3;
			}
		}
	}
}

int func_806()//Position - 0x94B9
{
	if (__LIB_17__::func_597(&uLocal_80, Local_44.f_8, sLocal_79, Local_44.f_4, 9, 1, 0, 0, 0))
	{
		iLocal_40 = 1;
		__LIB_17__::func_561(192, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true));
		return 1;
	}
	return 0;
}

void func_807()//Position - 0x895A
{
	if (!BitTest(uLocal_49, 6))
	{
		if (__LIB_0__::func_695(iLocal_51))
		{
			Local_52 = { ENTITY::GET_ENTITY_COORDS(iLocal_51, true) };
			fLocal_53 = ENTITY::GET_ENTITY_HEADING(iLocal_51);
			MISC::SET_BIT(&uLocal_49, 6);
			MISC::SET_BIT(&uLocal_49, 2);
			__LIB_0__::func_209(iLocal_51, &Local_54);
			__LIB_14__::func_775(iLocal_51, Local_52, fLocal_53, 25, 1);
			MISC::SET_BIT(&uLocal_49, 14);
			__LIB_16__::func_858(iLocal_51);
		}
	}
}

int func_808(int iParam0, int iParam1, struct<3> Param2, float fParam3)//Position - 0x9967
{
	int iVar0;
	struct<82> Var1;
	int iVar2;
	if (!__LIB_0__::func_43(iParam0))
	{
		return 0;
	}
	Var1.f_11 = 12;
	Var1.f_31 = 49;
	Var1.f_81 = 2;
	iVar2 = 0;
	__LIB_0__::func_120(iParam0, &Var1, iParam1);
	iVar2 = Var1.f_0;
	if (iVar2 != 0)
	{
		iVar0 = 0;
		while (iVar0 < 9)
		{
			if (ENTITY::DOES_ENTITY_EXIST(Global_97772[iVar0]) && VEHICLE::IS_VEHICLE_DRIVEABLE(Global_97772[iVar0], false))
			{
				if (ENTITY::GET_ENTITY_MODEL(Global_97772[iVar0]) == iVar2 && Global_97782[iVar0] == iParam0)
				{
					if (fParam3 == -1f || MISC::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(Global_97772[iVar0], false), Param2, true) <= fParam3)
					{
						return 1;
					}
				}
			}
			iVar0++;
		}
	}
	return 0;
}

int func_809(int iParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, int iParam5)//Position - 0x4B6
{
	int iVar0;
	var uVar1;
	struct<97> Var2;
	int iVar3;
	int iVar4;
	bool bVar5;
	char cVar6[16];
	int iVar7;
	if (__LIB_0__::func_43(iParam1))
	{
		Var2.f_11 = 12;
		Var2.f_31 = 49;
		Var2.f_81 = 2;
		__LIB_0__::func_120(iParam1, &Var2, iParam5);
		if (Var2.f_0 == 0)
		{
			return 1;
		}
		if (ENTITY::DOES_ENTITY_EXIST(*iParam0))
		{
			if (ENTITY::GET_ENTITY_MODEL(*iParam0) != Var2.f_0)
			{
			}
			return 1;
		}
		if ((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131])
		{
			Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] = 0;
		}
		if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar3 = 0;
				while (iVar3 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar3 + 1, !Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_11[iVar3]);
					iVar3++;
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_670(iParam0, &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[0 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/] == Var2.f_0)
		{
			STREAMING::REQUEST_MODEL(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
			if (STREAMING::HAS_MODEL_LOADED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]))
			{
				*iParam0 = VEHICLE::CREATE_VEHICLE(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/], Param2, fParam3, false, false, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_5, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_7, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar4 = 0;
				while (iVar4 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar4 + 1, !Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_11[iVar4]);
					iVar4++;
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_27));
					if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 >= 0 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_84, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_85, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_93, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_94, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_89);
				}
				if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_90);
						}
					}
				}
				__LIB_0__::func_670(iParam0, &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_31), &(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/].f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Global_113386.f_2363.f_539.f_2407[1 /*295*/][iParam1 /*98*/]);
				}
				__LIB_14__::func_525(*iParam0, iParam1);
				return 1;
			}
		}
		else
		{
			STREAMING::REQUEST_MODEL(Var2.f_0);
			if (STREAMING::HAS_MODEL_LOADED(Var2.f_0))
			{
				bVar5 = true;
				*iParam0 = VEHICLE::CREATE_VEHICLE(Var2.f_0, Param2, fParam3, true, true, false);
				VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*iParam0, 5f);
				VEHICLE::SET_VEHICLE_NOT_STEALABLE_AMBIENTLY(*iParam0, false);
				VEHICLE::SET_VEHICLE_CAN_SAVE_IN_GARAGE(*iParam0, false);
				VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(*iParam0, true);
				StringCopy(&cVar6, VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0), 16);
				ENTITY::SET_ENTITY_HEALTH(*iParam0, 1250, 0);
				VEHICLE::SET_VEHICLE_ENGINE_HEALTH(*iParam0, 1250f);
				VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(*iParam0, 1250f);
				Var2.f_3 = 1250;
				VEHICLE::SET_VEHICLE_COLOURS(*iParam0, Var2.f_5, Var2.f_6);
				VEHICLE::SET_VEHICLE_EXTRA_COLOURS(*iParam0, Var2.f_7, Var2.f_8);
				VEHICLE::SET_VEHICLE_DIRT_LEVEL(*iParam0, Var2.f_2);
				iVar7 = 0;
				while (iVar7 < 12)
				{
					VEHICLE::SET_VEHICLE_EXTRA(*iParam0, iVar7 + 1, !Var2.f_11[iVar7]);
					iVar7++;
				}
				if (Var2.f_24)
				{
					VEHICLE::SET_CONVERTIBLE_ROOF(*iParam0, Var2.f_24);
				}
				if (__LIB_0__::func_312(&uVar1, &iVar0))
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &uVar1);
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, iVar0);
				}
				else
				{
					VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &(Var2.f_27));
					if (Var2.f_26 >= 0 && Var2.f_26 < VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES())
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(*iParam0, Var2.f_26);
					}
				}
				VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(*iParam0, Var2.f_84, Var2.f_85, Var2.f_86);
				VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(*iParam0, Var2.f_88);
				VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, Var2.f_87);
				VEHICLE::SET_VEHICLE_NEON_COLOUR(*iParam0, Var2.f_93, Var2.f_94, Var2.f_95);
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 2, BitTest(Var2.f_92, 28));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 3, BitTest(Var2.f_92, 29));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 0, BitTest(Var2.f_92, 30));
				VEHICLE::SET_VEHICLE_NEON_ENABLED(*iParam0, 1, BitTest(Var2.f_92, 31));
				if (VEHICLE::GET_VEHICLE_LIVERY_COUNT(*iParam0) > 1 && Var2.f_89 >= 0)
				{
					VEHICLE::SET_VEHICLE_LIVERY(*iParam0, Var2.f_89);
				}
				if (Var2.f_90 > -1)
				{
					if (!VEHICLE::IS_THIS_MODEL_A_BICYCLE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
					{
						if (VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(*iParam0)))
						{
							if (Var2.f_90 == 6)
							{
								VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
							}
						}
						else
						{
							VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, Var2.f_90);
						}
					}
				}
				__LIB_0__::func_670(iParam0, &(Var2.f_31), &(Var2.f_81));
				VEHICLE::SET_VEHICLE_ENVEFF_SCALE(*iParam0, Var2.f_96);
				if (iParam1 == 1)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bagger") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[118])
					{
						VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(*iParam0, &cVar6);
						bVar5 = false;
					}
				}
				else if (iParam1 == 2)
				{
					if (ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("bodhi2"))
					{
						__LIB_0__::func_647(iParam0);
					}
				}
				else if (((iParam1 == 0 && !Global_113386.f_2363.f_539.f_4316) && Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[131]) && ENTITY::GET_ENTITY_MODEL(*iParam0) == joaat("tailgater"))
				{
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 6, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 14, 7, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 11, 2, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 2, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 7, 5, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 0, 0, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 3, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 13, 1, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 4, 3, false);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 12, 2, false);
					VEHICLE::TOGGLE_VEHICLE_MOD(*iParam0, 22, true);
					VEHICLE::SET_VEHICLE_WHEEL_TYPE(*iParam0, 2);
					VEHICLE::SET_VEHICLE_MOD(*iParam0, 23, 11, false);
					VEHICLE::SET_VEHICLE_WINDOW_TINT(*iParam0, 2);
					Global_113386.f_2363.f_539.f_4316 = 1;
					__LIB_14__::func_774(iParam1, iParam0, 0, 1);
				}
				if (bParam4)
				{
					STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Var2.f_0);
				}
				if (bVar5)
				{
					__LIB_14__::func_525(*iParam0, iParam1);
				}
				return 1;
			}
		}
	}
	return 0;
}

void func_810(char* sParam0, int iParam1, int iParam2, int iParam3)//Position - 0xC128
{
	struct<50> Var0;
	int iVar1;
	Var0 = 12;
	Var0.f_13 = 12;
	Var0.f_26 = 12;
	Var0.f_39 = 9;
	Var0.f_49 = 9;
	__LIB_17__::func_6(iParam1, &Var0, iParam3);
	iVar1 = 0;
	while (iVar1 < 12)
	{
		CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sParam0, iVar1, Var0.f_13[iVar1], Var0[iVar1], iParam2);
		iVar1++;
	}
	iVar1 = 0;
	while (iVar1 < 9)
	{
		if (Var0.f_39[iVar1] == -1 || Var0.f_39[iVar1] == 255)
		{
			CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar1, -1, 0, iParam2);
		}
		else
		{
			CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(sParam0, iVar1, Var0.f_39[iVar1], Var0.f_49[iVar1], iParam2);
		}
		iVar1++;
	}
}

int func_811(int iParam0)//Position - 0x184526
{
	if (__LIB_14__::func_325())
	{
		switch (__LIB_15__::func_729(iParam0))
		{
			case 31:
				if (__LIB_15__::func_833(31))
				{
					return 0;
				}
				break;
			case 33:
			case 38:
			case 10:
			case 86:
			case 55:
				if (iParam0 != Local_124.f_116.f_1 || __LIB_15__::func_833(__LIB_15__::func_729(iParam0)))
				{
					return 0;
				}
				break;
		}
	}
	else if (__LIB_7__::func_93() || __LIB_7__::func_92())
	{
		switch (__LIB_15__::func_729(iParam0))
		{
			case 33:
				if (!__LIB_16__::func_114())
				{
					return 0;
				}
				break;
			case 38:
				if (!__LIB_15__::func_833(31))
				{
					return 0;
				}
				break;
			case 89:
				if (!__LIB_15__::func_833(38))
				{
					return 0;
				}
				break;
			case 86:
				if (!__LIB_15__::func_833(89))
				{
					return 0;
				}
				break;
			case 55:
				if (!__LIB_15__::func_833(86))
				{
					return 0;
				}
				break;
			}
	}
	return 1;
}

int func_812(int iParam0)//Position - 0x107657
{
	if (!__LIB_16__::func_111(iParam0))
	{
		return 0;
	}
	return 18;
}

int func_813(int iParam0)//Position - 0x101D6A
{
	if (!__LIB_16__::func_116(iParam0))
	{
		return 0;
	}
	return 18;
}

void func_814(int iParam0, char* sParam1, bool bParam2, bool bParam3, int iParam4)//Position - 0x139CC8
{
	var uVar0;
	bool bVar1;
	uVar0 = (bParam3 && __LIB_16__::func_132(Local_124.f_406, sParam1, Local_124.f_443, Local_124.f_444, Local_124.f_116.f_5, "DISPLAY_ITEM_WITH_STAR", iParam0, Local_124.f_0, Local_124.f_675));
	bVar1 = __LIB_15__::func_45(Local_124.f_406);
	if (__LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		if ((((Local_124.f_443 == 38 || ((Local_124.f_443 == 56 && (!MISC::ARE_STRINGS_EQUAL(sParam1, "CMOD_WHE1_11") && __LIB_14__::func_30())) && !MISC::ARE_STRINGS_EQUAL(sParam1, "CMOD_WHE1_12"))) || Local_124.f_443 == 57) || Local_124.f_443 == 58) || (Local_124.f_443 == 56 && VEHICLE::IS_THIS_MODEL_A_BIKE(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))))
		{
			if ((Local_124.f_603 == 11 && Local_124.f_443 == 56) && __LIB_14__::func_30())
			{
			}
			else if (Local_124.f_603 == 12)
			{
			}
			else
			{
				bParam2 = false;
			}
		}
	}
	if ((((bParam2 && !__LIB_14__::func_325()) && !bVar1) && !__LIB_7__::func_93()) && !__LIB_7__::func_92())
	{
		__LIB_3__::func_572(iParam0, sParam1, iParam4 + 1, 1, 0, 0, 0);
		__LIB_14__::func_431(2, 0);
	}
	else if ((((uVar0 && !__LIB_14__::func_325()) && !bVar1) && !__LIB_7__::func_93()) && !__LIB_7__::func_92())
	{
		__LIB_3__::func_572(iParam0, sParam1, iParam4 + 1, 1, 0, 0, 0);
		__LIB_14__::func_431(51, 0);
		if (iParam0 == Local_124.f_116.f_1)
		{
			iLocal_428 = 1;
			iLocal_526 = 1;
		}
	}
	else
	{
		__LIB_3__::func_572(iParam0, sParam1, iParam4, 1, 0, 0, 0);
	}
	if (iParam0 == Local_124.f_116.f_1)
	{
		if ((((uVar0 && !__LIB_14__::func_325()) && !bVar1) && !__LIB_7__::func_93()) && !__LIB_7__::func_92())
		{
			iLocal_528 = 1;
		}
		else
		{
			iLocal_528 = 0;
		}
	}
}

int func_815(int iParam0)//Position - 0x149984
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_13__::func_995(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		return 0;
	}
	iVar3 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	iVar2 = -1;
	iVar1 = VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, 1) + 1;
	if (iParam0 == 0 || iParam0 == 1)
	{
		if (iVar1 > 1)
		{
			iVar0 = 0;
			while (iVar0 < iVar1)
			{
				iVar2 = __LIB_14__::func_21(iVar0, 1, Local_124.f_406);
				if (iVar2 != -1 || __LIB_13__::func_994(iVar3))
				{
					if (!__LIB_16__::func_129(iVar3, iVar2, "", iVar0, 1, 8, __LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) && __LIB_14__::func_985(iVar0, 1))
					{
						if (__LIB_15__::func_864(iVar2, Local_124.f_0, Local_124.f_406, Local_124.f_675))
						{
							return 1;
						}
					}
				}
				iVar0++;
			}
		}
	}
	iVar2 = -1;
	iVar1 = VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, 2) + 1;
	if (iParam0 == 0 || iParam0 == 2)
	{
		if (iVar1 > 1)
		{
			iVar0 = 0;
			while (iVar0 < iVar1)
			{
				iVar2 = __LIB_14__::func_21(iVar0, 2, Local_124.f_406);
				if (iVar2 != -1 || __LIB_13__::func_994(iVar3))
				{
					if (!__LIB_16__::func_129(iVar3, iVar2, "", iVar0, 2, 8, __LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))) && __LIB_14__::func_985(iVar0, 2))
					{
						if (__LIB_15__::func_864(iVar2, Local_124.f_0, Local_124.f_406, Local_124.f_675))
						{
							return 1;
						}
					}
				}
				iVar0++;
			}
		}
	}
	return 0;
}

int func_816()//Position - 0x14AD59
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (__LIB_13__::func_995(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		return 0;
	}
	iVar3 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("dominator3"))
	{
		iVar2 = -1;
		iVar1 = VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, 8) + 1;
		if (iVar1 > 1)
		{
			iVar0 = 0;
			while (iVar0 < iVar1)
			{
				iVar2 = __LIB_14__::func_21(iVar0, 8, Local_124.f_406);
				if (iVar2 != -1 || __LIB_13__::func_994(iVar3))
				{
					if (!__LIB_16__::func_129(iVar3, iVar2, "", iVar0, 0, 15, __LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))))
					{
						if (__LIB_15__::func_864(iVar2, Local_124.f_0, Local_124.f_406, Local_124.f_675))
						{
							return 1;
						}
					}
				}
				iVar0++;
			}
		}
	}
	if (ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("cheetah2") && ENTITY::GET_ENTITY_MODEL(Local_124.f_406) != joaat("z190"))
	{
		iVar2 = -1;
		iVar1 = VEHICLE::GET_NUM_VEHICLE_MODS(Local_124.f_406, 9) + 1;
		if (__LIB_14__::func_66(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
		{
			iVar4 = 0;
		}
		else
		{
			iVar4 = 1;
		}
		if (iVar1 > 1)
		{
			iVar0 = 0;
			while (iVar0 < iVar1)
			{
				iVar2 = __LIB_14__::func_21(iVar0, 9, Local_124.f_406);
				if (iVar2 != -1 || __LIB_13__::func_994(iVar3))
				{
					if (!__LIB_16__::func_129(iVar3, iVar2, "", iVar0, iVar4, 15, __LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406))))
					{
						if (__LIB_15__::func_864(iVar2, Local_124.f_0, Local_124.f_406, Local_124.f_675))
						{
							return 1;
						}
					}
				}
				iVar0++;
			}
		}
	}
	return 0;
}

int func_817(int iParam0)//Position - 0x14B5B4
{
	int iVar0;
	var uVar1;
	int iVar2;
	if (__LIB_13__::func_995(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		return 0;
	}
	iVar2 = __LIB_14__::func_69(iParam0);
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return 0;
	}
	if (__LIB_13__::func_994(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
	{
		if (iParam0 == 11 && __LIB_14__::func_30())
		{
		}
		else if (iParam0 == 12)
		{
		}
		else
		{
			return 0;
		}
	}
	if (bLocal_496)
	{
		return 0;
	}
	iVar0 = 0;
	while (iVar0 < iVar2)
	{
		if (__LIB_16__::func_131(iParam0, iVar0, &uVar1, Local_124.f_406))
		{
			if (!__LIB_14__::func_907(&Local_124, iParam0, iVar0))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

char* func_818(int iParam0)//Position - 0x157C5F
{
	int iVar0;
	iVar0 = ENTITY::GET_ENTITY_MODEL(Local_124.f_406);
	switch (iParam0)
	{
		case 3:
			if (!__LIB_13__::func_956() && !__LIB_13__::func_955())
			{
				return "CMOD_MOD_0_D" /* GXT: Full body repair and engine service. */;
			}
			else if (__LIB_13__::func_955())
			{
				return "SVM_VS_TRUCK_D" /* GXT: Customize your Mobile Operations Center. */;
			}
			else
			{
				return "SVM_VS_CAB_D" /* GXT: Customize the cab of your Mobile Operations Center. */;
			}
			break;
		case 4:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "CMOD_MOD_B1_D" /* GXT: Protect your bike with military spec composite body panels. */;
				break;
			}
			else if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0) || VEHICLE::IS_THIS_MODEL_A_HELI(iVar0))
			{
				return "CMOD_MOD_A1_D" /* GXT: Protect your aircraft with military spec composite body panels. */;
				break;
			}
			else
			{
				return "CMOD_MOD_1_D" /* GXT: Protect your car's occupants with military spec composite body panels. */;
				break;
			}
			break;
		case 5:
			if (__LIB_14__::func_272() || (__LIB_14__::func_278() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger"))))
			{
				return "CMOD_SUS_0_D" /* GXT: Choose your aircraft's handling to fit your flying style. */;
			}
			else
			{
				return "CMOD_MOD_3_D" /* GXT: Increase stopping power and eliminate brake fade. */;
			}
			break;
		case 8:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_7__::func_94(Local_124.f_406) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (__LIB_13__::func_953(Local_124.f_406))
			{
				if (__LIB_2__::func_622(iVar0))
				{
					return "CMOD_FWIN_D";
				}
				else
				{
					return "CMOD_FBUM_D";
				}
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (joaat("TOP_SHIELD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMM_FRSH_D" /* GXT: Custom front shields. */;
			}
			else if (((iVar0 == joaat("slamvan4") || iVar0 == joaat("cerberus")) || iVar0 == joaat("cerberus2")) || iVar0 == joaat("cerberus3"))
			{
				return "MNU_CUSBR" /* GXT: Custom rear bumpers. */;
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_MOD_22_D" /* GXT: Increase downforce. */;
			}
			else if (iVar0 == joaat("bruiser2"))
			{
				return "CMOD_LEC_D";
			}
			else
			{
				return "CMOD_MOD_4_D" /* GXT: Custom front and rear bumpers. */;
			}
			break;
		case 100:
			return "CMOD_MOD_71_D" /* GXT: Customize the look of your bumpers. */;
			break;
		case 99:
			if (__LIB_13__::func_943(Local_124.f_406))
			{
				return "CMOD_WEAPO_D";
			}
			else if (__LIB_13__::func_621(Local_124.f_406))
			{
				return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
			}
			else
			{
				return "CMOD_MOD_4_D" /* GXT: Custom front and rear bumpers. */;
			}
			break;
		case 9:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_BADGES" /* GXT: A selection of hood badges. */;
			}
			else if (__LIB_7__::func_94(Local_124.f_406) || iVar0 == joaat("oppressor"))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_COVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("picador"))
			{
				return "CMOD_R_COV_D";
			}
			else if (joaat("TOP_RUFSPOILER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_R_SPO_D";
			}
			else if (iVar0 == joaat("gp1"))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_ARM_PLAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				if ((VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("pounder2")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("mule4"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("speedo4")))
				{
					return "CMOD_ARMPSPD";
				}
				else
				{
					return "CMOD_ARMPL_D";
				}
			}
			else if (joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || joaat("TOP_DEFLEC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_DEFEC_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_WINP_D";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("rogue"))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_RTURR_D";
				}
				else
				{
					return "CMOD_SEWEAP_D";
				}
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (__LIB_14__::func_272())
			{
				return "CMOD_MHAN_5_D" /* GXT: The internal framework of the aircraft. */;
			}
			else if (iVar0 == joaat("flashgt"))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_RWING" /* GXT: Window Spoilers */;
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_MOD_BRB_D" /* GXT: Custom brace bars. */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_LID_D";
			}
			else if (joaat("CMOD_VORT_M") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_VORT_D";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else if (joaat("TOP_TAILFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_TAFI_D" /* GXT: Custom tail fins. */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (joaat("TOP_GRIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMM_GRIP_D" /* GXT: Custom heel grips. */;
			}
			else if (joaat("TOP_ROOFPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)) || iVar0 == joaat("ruiner4"))
			{
				if (iVar0 == joaat("zhaba"))
				{
					return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
				}
				else
				{
					return "CMM_ROPAN_D" /* GXT: Custom roof panels. */;
				}
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (iVar0 == joaat("thrax"))
			{
				return "SMOD_CHASS_3" /* GXT: Additional bodywork panels. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_D";
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMOD_SEAT_D";
			}
			else
			{
				return "CMOD_MOD_5_D" /* GXT: The internal framework of the vehicle. */;
			}
			break;
		case 38:
			if (!bLocal_496)
			{
				if (__LIB_13__::func_376(7))
				{
					return "CMOD_MOD_6c_D" /* GXT: Transforms vehicle appearance. ~n~Your next respray purchase will be free with your coupon. */;
				}
			}
			if (__LIB_14__::func_325())
			{
				return "IE_RS_DT1" /* GXT: Transform the color of the vehicle. */;
			}
			else if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				return "TUN_SPR_D" /* GXT: Apply the customer's requested paint color. */;
			}
			else if (__LIB_14__::func_272() || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger")))
			{
				return "CMOD_MHAN_6_D" /* GXT: Transforms your aircraft's appearance. */;
			}
			else
			{
				return "CMOD_MOD_6_D" /* GXT: Transforms vehicle appearance. */;
			}
			break;
		case 10:
			if (Local_124.f_0 == 44)
			{
				if (__LIB_0__::func_176(iVar0, 0))
				{
					return "SMOD_ENGINE_4" /* GXT: Increases horsepower. */;
				}
				else
				{
					return "CMOD_MOD_7_D" /* GXT: Increases brake horsepower. */;
				}
			}
			else if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_PE_DT1" /* GXT: Max out the vehicle's performance. */;
			}
			else if (__LIB_14__::func_272() || (__LIB_14__::func_278() && VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger"))))
			{
				return "SMUG_ENGINE_D" /* GXT: Optimize your aircraft's engine for increased air speed. */;
			}
			else
			{
				return "CMOD_MOD_7_D" /* GXT: Increases brake horsepower. */;
			}
			break;
		case 13:
			return "CMOD_MOD_8_D" /* GXT: Rig your vehicle with timed or ignition explosives. */;
			break;
		case 21:
			return "CMOD_MOD_34_D" /* GXT: Prepare vehicle for gold heist. */;
			break;
		case 22:
			return "CMOD_MOD_34_D" /* GXT: Prepare vehicle for gold heist. */;
			break;
		case 23:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if ((__LIB_7__::func_94(Local_124.f_406) && iVar0 != joaat("avarus")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_HAND_D" /* GXT: Custom handlebars. */;
			}
			else if (iVar0 == joaat("avarus"))
			{
				return "CMOD_MOD_OT_D" /* GXT: Custom oil tanks. */;
			}
			else if (iVar0 == joaat("blazer4") || iVar0 == joaat("penetrator"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOODC_D";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || iVar0 == joaat("picador"))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RPAN_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
				{
					return "CMOD_SWEAP_OD";
				}
				else
				{
					return "CMOD_SWEAP_VE";
				}
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWSH_D";
			}
			else if (joaat("TOP_BPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_BPLAT_D";
			}
			else if (joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_CU_WIND_0" /* GXT: Custom Windshields */;
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_CANA_D";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_NOPAN_D" /* GXT: Custom nose panels. */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HOLI_D";
			}
			else if (joaat("TOP_VENTBRAC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_VENTBRA_D" /* GXT: Custom Vent Braces */;
			}
			else if (joaat("TOP_RSPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_RSPLI_D" /* GXT: Custom rear splitters. */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMM_MOD_S41D";
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "CMOD_PEDAL_D";
			}
			else if (iVar0 == joaat("weevil"))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HECFOG_D";
			}
			else
			{
				return "CMOD_MOD_11_D" /* GXT: Improved engine cooling. */;
			}
			break;
		case 26:
		case 101:
			if (joaat("TOP_SEAT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
				{
					return "CMOD_MOD_SE_D" /* GXT: Custom seats. */;
				}
				else
				{
					return "CMOD_SEAT_D";
				}
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 7)))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
				break;
			}
			else if (iVar0 == joaat("greenwood"))
			{
				return "CMOD_AFI_1" /* GXT: Custom Air Filter */;
			}
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_7__::func_94(Local_124.f_406))
			{
				return "CMOD_MOD_SE_D" /* GXT: Custom seats. */;
			}
			else if (iVar0 == joaat("swinger") || (iVar0 == joaat("gauntlet5") && iParam0 == 101))
			{
				return "CMOD_BON_D" /* GXT: Custom Hoods. */;
			}
			else
			{
				return "CMOD_MOD_13_D" /* GXT: Enhance car engine cooling. */;
			}
			break;
		case 27:
			return "CMOD_MOD_14_D" /* GXT: Custom air horns. */;
			break;
		case 31:
			if (__LIB_14__::func_325())
			{
				return "IE_RT_DT1" /* GXT: The tracker must be removed so it cannot be traced by the original owner. */;
			}
			else if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				return "TUN_SER_D" /* GXT: Service and repair the customer's vehicle before installing the requested modifications on the checklist. */;
			}
			else
			{
				return "CMOD_MOD_90_D" /* GXT: Insurance and Tracker options. */;
			}
			break;
		case 28:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_15__::func_719(Local_124.f_406))
			{
				return "CMOD_MOD_15ND" /* GXT: Improved night time visibility. */;
			}
			else
			{
				return "CMOD_MOD_15_D" /* GXT: Improved night time visibility and decorative lighting. */;
			}
			break;
		case 12:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_THRUST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_ROCKB_D";
			}
			else if (joaat("TOP_PROPELLER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_PROPELL_D";
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 4)))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else
			{
				return "CMOD_MOD_16_D" /* GXT: Customized sports exhausts. */;
			}
			break;
		case 33:
			if (__LIB_14__::func_325())
			{
				return "IE_PL_DT1" /* GXT: The plate must be changed so it cannot be tracked by the cops. */;
			}
			else if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				if (__LIB_16__::func_114())
				{
					return "PERSO_MOD_CLCOS" /* GXT: Confirm service cost of $~1~. The customer will reimburse this cost and you will receive an additional payment of up to $~1~ upon delivery. */;
				}
			}
			else
			{
				return "CMOD_MOD_18_D" /* GXT: Customize license plate. */;
			}
			break;
		case 40:
		case 102:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (joaat("TOP_PANN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_PANN_D" /* GXT: Custom panniers. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_SPOT1" /* GXT: Custom side spot lights. */;
			}
			else if (iVar0 == joaat("feltzer3"))
			{
				return "CMOD_R_SPO_D";
			}
			else if (iVar0 == joaat("tornado5"))
			{
				return "CMOD_MOD_66_D" /* GXT: A selection of lavish roof styles. */;
			}
			else if ((__LIB_7__::func_94(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_FUT_D" /* GXT: Custom fuel tanks. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ANTENNAR_D" /* GXT: Custom rear antennas */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("penetrator"))
			{
				return "CMOD_VCOV_D";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)) || iVar0 == joaat("dune3"))
			{
				if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_D";
				}
				else if (iVar0 != joaat("tampa3") && !__LIB_14__::func_272())
				{
					return "CMOD_WEAPO_D";
				}
				else if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_D";
				}
				else if (__LIB_14__::func_272())
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else
				{
					return "CMOD_MINIG_D";
				}
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				if (iVar0 == joaat("bombushka"))
				{
					return "CMOD_NTURR_D";
				}
				else if (iVar0 == joaat("molotok"))
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else if (iVar0 == joaat("hunter"))
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
				else if (iVar0 == joaat("barrage"))
				{
					return "CMOD_TTURR_D";
				}
				else if (((iVar0 == joaat("khanjali") || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("pounder2"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("speedo4"))) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("oppressor2")))
				{
					return "CMOD_PWEAP_D";
				}
				else if (iVar0 == joaat("mule4"))
				{
					return "CMOD_SEWEAP_D";
				}
				else
				{
					return "SMUG_WEAPON_D" /* GXT: Change your aircraft's weapon loadout. */;
				}
			}
			else if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_SNORKEL_D";
			}
			else if (iVar0 == joaat("riot2"))
			{
				return "CMOD_WATER_D";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("zr3802"))
			{
				return "CMOD_RWHE_D";
			}
			else if (iVar0 == joaat("drafter"))
			{
				return "SMOD_CHASS_3b" /* GXT: Additional roof scoops. */;
			}
			else if ((((iVar0 == joaat("hellion") || iVar0 == joaat("zhaba")) || iVar0 == joaat("landstalker2")) || iVar0 == joaat("squaddie")) || iVar0 == joaat("previon"))
			{
				return "CMOD_ROF_3" /* GXT: Custom roofs. */;
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
			}
			break;
		case 42:
			if (__LIB_14__::func_272())
			{
				if (__LIB_13__::func_872(iVar0))
				{
					return "CMOD_MOD_78_D" /* GXT: Remove this aircraft from your Hangar. */;
				}
				else
				{
					return "CMOD_MOD_77_D" /* GXT: Sell your aircraft. */;
				}
			}
			else
			{
				return "CMOD_MOD_35_D" /* GXT: Sell your vehicle. */;
			}
			break;
		case 54:
			if ((ENTITY::DOES_ENTITY_EXIST(Local_124.f_406) && VEHICLE::IS_VEHICLE_DRIVEABLE(Local_124.f_406, false)) && (VEHICLE::IS_VEHICLE_STOLEN(Local_124.f_406) || (__LIB_0__::func_872(Local_124.f_406, 1) && !__LIB_15__::func_856(Local_124.f_406))))
			{
				return "CMOD_MOD_36_D1" /* GXT: The Vehicle Identification Number is a unique code used to identify individual vehicles. This has already been removed from the vehicle. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "CMOD_MOD_36_D" /* GXT: The Vehicle Identification Number is a unique code used to identify individual vehicles. Remove this to prevent the stolen vehicle from being traced. */;
			}
			break;
		case 44:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "CMOD_MOD_SP_D" /* GXT: Enhance your vehicle's look with custom step plates. */;
			}
			else if (VEHICLE::IS_THIS_MODEL_A_PLANE(iVar0))
			{
				return "CMOD_DROP_D" /* GXT: Enhance your aircraft's look with drop tanks. */;
			}
			else if ((__LIB_7__::func_94(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (joaat("TOP_TURRET_B") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("barrage")))
			{
				return "CMOD_TBRACK_D";
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("michelli"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_VCOV_D";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_SIDEP_D";
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (joaat("TOP_SSTEP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "TOP_SSTEP" /* GXT: Side Step */;
			}
			else if (iVar0 == joaat("zhaba") || iVar0 == joaat("club"))
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
			}
			else if (iVar0 == joaat("draugur"))
			{
				return "CMOD_DOOR_D";
			}
			else
			{
				return "CMOD_MOD_21_D" /* GXT: Enhance your vehicle's look with custom side skirts. */;
			}
			break;
		case 46:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RTURR_D";
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("mule4"))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (iVar0 == joaat("mule4"))
			{
				return "CMOD_PWEAP_D";
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VISO_D";
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_VCOV_D";
			}
			else if (iVar0 == joaat("pounder2") || iVar0 == joaat("granger2"))
			{
				return "CMOD_ROF_3" /* GXT: Custom roofs. */;
			}
			else if (iVar0 == joaat("toros"))
			{
				return "CMOD_FBUM_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_WINP_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_REAR_DOOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_RDOOR_D" /* GXT: Custom trunk doors. */;
			}
			else if (joaat("TOP_HOODLIP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_HOLI_D";
			}
			else if (joaat("TOP_STORAGEBOX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_STORBO_D" /* GXT: Custom top box. */;
			}
			else if (joaat("TOP_BONNET") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (joaat("TOP_BACKREST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)))
			{
				return "CMOD_BKRE_D" /* GXT: Custom Backrests */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "BTYPE3_REAR1" /* GXT: Rear wheel options. */;
			}
			else if ((__LIB_7__::func_94(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_BEC_D" /* GXT: Custom belt drive covers. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_ANTENNA_D" /* GXT: Custom front antennas */;
			}
			else
			{
				return "CMOD_MOD_22_D" /* GXT: Increase downforce. */;
			}
			break;
		case 47:
			return "CMOD_MOD_24_D" /* GXT: Upgrade to a sports oriented suspension setup. */;
			break;
		case 58:
			if (((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92()) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("rcbandito")))
			{
				return "CMOD_IE_25_D" /* GXT: Tire design and custom burnout smoke. */;
			}
			else
			{
				return "CMOD_MOD_25_D" /* GXT: Bulletproof tires and custom burnout smoke. */;
			}
			break;
		case 57:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_59_D" /* GXT: Custom wheel colors. */;
			}
			break;
		case 48:
			return "CMOD_MOD_61_D" /* GXT: Customize the look of your tailgate. */;
			break;
		case 50:
			return "CMOD_MOD_26_D" /* GXT: Improved acceleration with close ratio transmission. */;
			break;
		case 53:
			return "CMOD_MOD_27_D" /* GXT: Reduced lag turbocharger. */;
			break;
		case 55:
			if (__LIB_14__::func_325())
			{
				return "IE_WH_DT1" /* GXT: Change the wheel rims to complete the modifications. */;
			}
			else if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				return "TUN_WHE_D" /* GXT: Install the customer's requested wheels. */;
			}
			else
			{
				return "CMOD_MOD_60_D" /* GXT: Custom rims, tires and colors. */;
			}
			break;
		case 56:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			else
			{
				return "IE_WH_DS1" /* GXT: Select your choice of wheel rims and color then confirm when ready. */;
			}
			break;
		case 60:
			return "CMOD_MOD_29_D" /* GXT: A selection of tinted windows. */;
			break;
		case 15:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_7__::func_94(Local_124.f_406))
			{
				return "CMOD_MOD_SIS_D" /* GXT: Custom sissy bars. */;
			}
			else if (((joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) && iVar0 != joaat("impaler2")) && iVar0 != joaat("impaler3")) && iVar0 != joaat("impaler4"))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RDIF_D";
			}
			else if (joaat("TOP_ROOFRAIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_R_RAI_D";
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) && iVar0 != joaat("dominator8"))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_MINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_PROMI_D";
			}
			else if (joaat("TOP_PBOMBS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_BOMB_D";
			}
			else if (joaat("TOP_DPLT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_DPLA_D";
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_DOORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_DOOR_D";
			}
			else if (joaat("TOP_BRACE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_MOD_BRB_D" /* GXT: Custom brace bars. */;
			}
			else if (joaat("TOP_ARCHCOVER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_ARCHCO_0" /* GXT: Custom arch covers. */;
			}
			else if (iVar0 == joaat("gb200"))
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			else if (joaat("TOP_BUMPEX") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_BUMX_D";
			}
			else if (__LIB_13__::func_952(iVar0))
			{
				return "CMOD_WNG_FD" /* GXT: Custom front fender. */;
			}
			else if (joaat("TOP_SWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SEWEAP_D";
			}
			else if (iVar0 == joaat("club"))
			{
				return "IE_BO_DT1" /* GXT: Customize the vehicle's bodywork to improve the appearance. */;
			}
			else if (iVar0 == joaat("veto") || iVar0 == joaat("veto2"))
			{
				return "SMOD_IN_STEER" /* GXT: Customize the link between you and your vehicle. */;
			}
			else
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
			}
			break;
		case 95:
			if ((iVar0 == joaat("faggio3") || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_WINDSH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3)))
			{
				return "CMOD_CU_WIND_0" /* GXT: Custom Windshields */;
			}
			else if (joaat("CMOD_SLOU_N") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLOU_D";
			}
			else if ((((iVar0 == joaat("blazer4") || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2))) || iVar0 == joaat("ruiner4"))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (joaat("TOP_BTRIM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || iVar0 == joaat("greenwood"))
			{
				return "CMOD_MOD_75_D" /* GXT: Custom body trims. */;
			}
			else if (iVar0 == joaat("bruiser") || iVar0 == joaat("bruiser3"))
			{
				return "CMOD_BULLH_D";
			}
			else if (iVar0 == joaat("fcr2"))
			{
				return "CMOD_MOD_SWI_D" /* GXT: Custom swingarm. */;
				break;
			}
			else if (joaat("TOP_RDIFF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) && iVar0 != joaat("xa21"))
			{
				return "CMOD_RDIF_D";
				break;
			}
			else if (iVar0 == joaat("xa21"))
			{
				return "CMOD_ENCOV_D";
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SLIGHT_D";
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("cheetah2") || __LIB_7__::func_95(Local_124.f_406))
			{
				return "CMOD_MOD_9_D" /* GXT: Enhance body paneling with custom fenders. */;
				break;
			}
			else if (joaat("TOP_WEAPONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_WEAPO_D";
				break;
			}
			else if (joaat("TOP_ENGD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_MOD_ENG_D" /* GXT: Custom engine detail. */;
				break;
			}
			else if (iVar0 == joaat("comet4"))
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
				break;
			}
			else if ((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45))) || iVar0 == joaat("kanjo"))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_SSHADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SUNSS_D";
			}
			else if (joaat("TOP_ENGINE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			else if (iVar0 == joaat("rcbandito"))
			{
				return "CMOD_RCDETONAD" /* GXT: Rig your RC Bandito with explosive. */;
			}
			else if (joaat("TOP_VISORS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_VISO_D";
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_D";
			}
			else if ((joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35))) || joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_HOODC_D";
			}
			else if (iVar0 == joaat("gauntlet3"))
			{
				return "CMOD_WNG_RD" /* GXT: Custom rear fender. */;
			}
			else if (joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)) || joaat("TOP_RWING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_WINSP_D" /* GXT: Custom window spoilers. */;
			}
			else if (joaat("TOP_ROOF_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_RMLIGHT_D";
			}
			else if (iVar0 == joaat("ruiner4"))
			{
				return "CMM_MOD_ST35";
			}
			else
			{
				return "CMOD_MOD_SHI_D" /* GXT: Custom shifters. */;
			}
			break;
		case 6:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (Local_124.f_0 == 44)
			{
				if (__LIB_0__::func_176(iVar0, 0))
				{
					return "SMOD_CHASS_6" /* GXT: Vehicle body stylings. */;
				}
				else
				{
					return "CMOD_MOD_37_D" /* GXT: Change the look and aerodynamics of your vehicle. */;
				}
			}
			else
			{
				return "CMOD_MOD_37_D" /* GXT: Change the look and aerodynamics of your vehicle. */;
			}
			break;
		case 7:
			return "CMOD_MOD_38_D" /* GXT: Customize your bullbars. */;
			break;
		case 11:
			return "CMOD_MOD_39_D" /* GXT: Custom engine. */;
			break;
		case 14:
			if (iVar0 == joaat("diablous2"))
			{
				return "CMOD_MOD_74_D" /* GXT: Customize the headlight cover. */;
			}
			else if (joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)) || joaat("TOP_FOGLIGHTS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HECFOG_D";
			}
			else if ((((joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_HL_CV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEC_D";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6)))
			{
				return "CMOD_HEFG_D";
			}
			else
			{
				return "CMOD_MOD_40_D" /* GXT: Customize the fairing. */;
			}
			break;
		case 16:
			return "CMOD_MOD_41_D" /* GXT: A selection of vehicle frames. */;
			break;
		case 17:
			return "CMOD_MOD_42_D" /* GXT: Front suspension, affects cornering. */;
			break;
		case 18:
			if (__LIB_13__::func_918())
			{
				return "MNU_CUSBF" /* GXT: Custom front bumpers. */;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MISIL_D";
			}
			else if (joaat("TOP_HDLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_HEPR_D";
			}
			else if (joaat("TOP_COUNTERM") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)) && iVar0 != joaat("tula"))
			{
				return "CMOD_SWEAP_D";
			}
			else if (iVar0 == joaat("tula"))
			{
				return "CMOD_SWEAP_TU";
			}
			else if (joaat("TOP_BUM_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_BUMPA_D";
			}
			else if (joaat("TOP_WARMOR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 1)))
			{
				return "CMOD_WARMOR_D";
			}
			else
			{
				return "CMOD_MOD_43_D" /* GXT: Keep mud away from your engine. */;
			}
			break;
		case 19:
			if (VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0))
			{
				return "CMOD_MOD_44_D" /* GXT: Customize your front seat. */;
			}
			else
			{
				return "CMOD_MOD_C44_D" /* GXT: Customize your front seats. */;
			}
			break;
		case 20:
			return "CMOD_MOD_45_D" /* GXT: Alters the style of your fuel tank. */;
			break;
		case 24:
			if (joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 0)) || joaat("TOP_LADDER") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 5)))
			{
				return "CMOD_LADDER_D";
			}
			else
			{
				return "CMOD_MOD_46_D" /* GXT: Change the look of your Handlebars. */;
			}
			break;
		case 25:
			return "CMOD_MOD_47_D" /* GXT: Customize your headlights. */;
			break;
		case 32:
			return "CMOD_MOD_48_D" /* GXT: Custom mirrors. */;
			break;
		case 34:
			if (joaat("TOP_LSPOIL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMM_LSPO_D" /* GXT: Custom lip spoiler. */;
			}
			else
			{
				return "CMOD_MOD_49_D" /* GXT: Plate holder options. */;
			}
			break;
		case 35:
			return "CMOD_MOD_50_D" /* GXT: Custom pushbar. */;
			break;
		case 37:
			return "CMOD_MOD_51_D" /* GXT: Customize your rear seat. */;
			break;
		case 36:
			if ((__LIB_7__::func_96(Local_124.f_406) && iVar0 != joaat("faggio3")) && iVar0 != joaat("blazer4"))
			{
				return "CMOD_MOD_OT_D" /* GXT: Custom oil tanks. */;
			}
			else if (iVar0 == joaat("faggio3"))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (iVar0 == joaat("blazer4"))
			{
				return "CMOD_BKRE_D" /* GXT: Custom Backrests */;
			}
			else if (__LIB_13__::func_918())
			{
				return "MNU_CUSBR" /* GXT: Custom rear bumpers. */;
			}
			else if (iVar0 == joaat("tampa3"))
			{
				return "CMOD_MORTA_D";
			}
			else if (iVar0 == joaat("astron"))
			{
				return "TOP_SUNST" /* GXT: Sunstrips */;
			}
			else if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_REPR_D";
			}
			else if (joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_SIDE_PAN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMOD_SIDEP_D";
			}
			else if ((((((joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 3))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44))) || joaat("TOP_LOUV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_LOU_D";
			}
			else if (joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)) || joaat("TOP_RPNL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_RPAN_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 10)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_UPLATING") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 2)))
			{
				return "CMOD_UPLAT_D";
			}
			else if (iVar0 == joaat("seminole2"))
			{
				return "SMOD_CHASS_2" /* GXT: A selection of radio antenna options. */;
			}
			else
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			break;
		case 39:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_53_D" /* GXT: Stiffen your chassis with a roll cage. */;
			}
			break;
		case 41:
			if (iVar0 == joaat("verus"))
			{
				return "CMOD_MOD_54_QD" /* GXT: Add saddle bags to your quad bike. */;
			}
			return "CMOD_MOD_54_D" /* GXT: Add saddle bags to your bike. */;
			break;
		case 43:
			if (VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("youga3")) || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("seminole2")))
			{
				return "CMOD_MOD_555_D" /* GXT: Attach side steps to your vehicle. */;
			}
			else
			{
				return "CMOD_MOD_55_D" /* GXT: Attach side steps to your truck. */;
			}
			break;
		case 45:
			if (__LIB_14__::func_272())
			{
				return "CMOD_MOD_SM_D" /* GXT: Get yourself a custom smoke color */;
			}
			else if (((((joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 6))) || joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8))) || iVar0 == joaat("weevil2")) || iVar0 == joaat("ruiner4")) || iVar0 == joaat("picador"))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "CMOD_MOD_56_D" /* GXT: Get yourself out of a jam with a spare wheel */;
			}
			break;
		case 51:
			return "CMOD_MOD_57_D" /* GXT: Alter your truck bed. */;
			break;
		case 59:
			return "CMOD_MOD_58_D" /* GXT: Custom wheelie bar. */;
			break;
		case 52:
			if (1621664729 == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 25)))
			{
				return "CMOD_RUNKC_D";
			}
			else
			{
				return "CMOD_MOD_62_D" /* GXT: Custom trunk options. */;
			}
			break;
		case 93:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_7__::func_279(Local_124.f_406))
			{
				return "CMOD_DEFEC_D1";
			}
			else
			{
				return "CMOD_MOD_63_D" /* GXT: Custom deflector options. */;
			}
			break;
		case 94:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else
			{
				return "CMOD_MOD_64_D" /* GXT: Custom ornaments. */;
			}
			break;
		case 61:
		case 103:
			if (Local_124.f_0 == 44)
			{
				if ((((((((((((((((iVar0 == joaat("banshee") || iVar0 == joaat("sultan")) || iVar0 == joaat("comet2")) || iVar0 == joaat("diablous")) || iVar0 == joaat("elegy2")) || iVar0 == joaat("fcr")) || iVar0 == joaat("italigtb")) || iVar0 == joaat("nero")) || iVar0 == joaat("fcr")) || iVar0 == joaat("specter")) || iVar0 == joaat("ratloader")) || iVar0 == joaat("ratloader2")) || iVar0 == joaat("glendale")) || iVar0 == joaat("impaler")) || iVar0 == joaat("gargoyle")) || iVar0 == joaat("vamos")) || iVar0 == joaat("issi3"))
				{
					return "CMOD_MOD_100_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications exclusive to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
				}
				else
				{
					return "CMOD_MOD_99_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications unique to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
				}
			}
			else if (__LIB_14__::func_274() || __LIB_13__::func_835())
			{
				return "GR_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to new weapons, armor, camo liveries, and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
			}
			else if (__LIB_14__::func_355() || __LIB_14__::func_354())
			{
				switch (iVar0)
				{
					case joaat("ratloader"):
					case joaat("ratloader2"):
					case joaat("deveste"):
					case joaat("issi3"):
					case joaat("gargoyle"):
					case joaat("impaler"):
					case joaat("dominator"):
						return "ARENA_UPGRAD_H1" /* GXT: Upgrade this vehicle to an Arena Contender and gain access to unique modifications suitable to the Arena War Series. */;
						break;
					case joaat("slamvan"):
					case joaat("glendale"):
						if (iParam0 == 61)
						{
							return "IE_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						else
						{
							return "ARENA_UPGRAD_H1" /* GXT: Upgrade this vehicle to an Arena Contender and gain access to unique modifications suitable to the Arena War Series. */;
						}
						break;
					case joaat("banshee"):
					case joaat("sultan"):
					case joaat("comet2"):
					case joaat("diablous"):
					case joaat("elegy2"):
					case joaat("fcr"):
					case joaat("italigtb"):
					case joaat("nero"):
					case joaat("specter"):
						return "IE_OFF_UPD2" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						break;
					default:
						if (__LIB_14__::func_281(Local_124.f_406, 0))
						{
							return "ARENA_UPGRAD_H2" /* GXT: Transform this Arena Contender to another style suitable for the Arena War Series: Apocalypse, Future Shock or Nightmare. */;
						}
						else if ((((((((((((((((iVar0 == joaat("banshee") || iVar0 == joaat("sultan")) || iVar0 == joaat("comet2")) || iVar0 == joaat("diablous")) || iVar0 == joaat("elegy2")) || iVar0 == joaat("fcr")) || iVar0 == joaat("italigtb")) || iVar0 == joaat("nero")) || iVar0 == joaat("fcr")) || iVar0 == joaat("specter")) || iVar0 == joaat("ratloader")) || iVar0 == joaat("ratloader2")) || iVar0 == joaat("glendale")) || iVar0 == joaat("impaler")) || iVar0 == joaat("gargoyle")) || iVar0 == joaat("vamos")) || iVar0 == joaat("issi3"))
						{
							return "IE_OFF_UPD2" /* GXT: Upgrade this vehicle to a custom variant and gain access to unique modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						else
						{
							return "IE_OFF_UPD" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications. This upgrade also installs a Tracker to make this your Personal Vehicle. */;
						}
						break;
				}
			}
			else if (!__LIB_13__::func_956() && !__LIB_13__::func_955())
			{
				return "CMOD_MOD_99_D" /* GXT: Upgrade this vehicle to a custom variant and gain access to liveries, hydraulics and other modifications unique to Benny's Original Motor Works. This upgrade also installs a Tracker to make this your personal vehicle. */;
			}
			else if (__LIB_13__::func_955())
			{
				if (__LIB_13__::func_954())
				{
					return "SVM_VS_AAT_D" /* GXT: Customize your Anti-Aircraft Trailer. */;
				}
				return "SVM_VS_TRUCK_D" /* GXT: Customize your Mobile Operations Center. */;
			}
			else
			{
				return "SVM_VS_TRI_D" /* GXT: Customize the trailer of your Mobile Operations Center. */;
			}
			break;
		case 86:
			if (__LIB_14__::func_325())
			{
				return "IE_BO_DT1" /* GXT: Customize the vehicle's bodywork to improve the appearance. */;
			}
			else if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				return "TUN_BOD_D" /* GXT: Install the customer's requested bodywork modifications. */;
			}
			else
			{
				return "CMOD_SMOD_1_D" /* GXT: Framework customization. */;
			}
			break;
		case 89:
			if (__LIB_7__::func_93() || __LIB_7__::func_92())
			{
				return "TUN_PER_D" /* GXT: Install the customer's requested performance upgrades. */;
			}
			return "CMOD_SMOD_2_D" /* GXT: Tune and install engine components. */;
			break;
		case 87:
			return "CMOD_SMOD_3_D" /* GXT: Products for maximum style and comfort. */;
			break;
		case 88:
			return "CMOD_SMOD_4_D" /* GXT: Decorative identification. */;
			break;
		case 75:
			return "CMOD_SMOD_5_D" /* GXT: Lift kits to control the height of your vehicle. Extreme use may cause minor vehicle damage. */;
			break;
		case 85:
			if ((((iVar0 == joaat("tampa3") || iVar0 == joaat("nightshark")) || iVar0 == joaat("apc")) || iVar0 == joaat("dune3")) || iVar0 == joaat("halftrack"))
			{
				return "CMOD_LGR_D" /* GXT: A selection of vinyl wraps for your vehicle. */;
			}
			else if (__LIB_14__::func_272() || VEHICLE::IS_VEHICLE_MODEL(Local_124.f_406, joaat("avenger")))
			{
				return "CMOD_SHAN_6_D" /* GXT: Choose a livery for your aircraft. */;
			}
			else
			{
				return "CMOD_SMOD_6_D" /* GXT: A selection of decals for your vehicle. */;
			}
			break;
		case 74:
			return "CMOD_SMOD_7_D" /* GXT: Customize your main storage. */;
			break;
		case 91:
			if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 27)))
			{
				return "CMOD_SUNS_D";
			}
			return "SMOD_IN_1" /* GXT: A selection of interior designs. */;
			break;
		case 65:
			if (joaat("TOP_INTERTYPE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 28)))
			{
				return "CMOD_INTTYPE_D" /* GXT: Custom Interior Type */;
			}
			return "SMOD_IN_2" /* GXT: Add decorative items to your dash. */;
			break;
		case 66:
			if (joaat("TOP_RLP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 29)))
			{
				return "CMOD_REPR_D";
			}
			else if (iVar0 == joaat("issi5"))
			{
				return "CMOD_MOD_19_D" /* GXT: Lower your center of gravity with lightweight roof panels. */;
			}
			else
			{
				return "SMOD_IN_3" /* GXT: Custom control panel designs. */;
			}
			break;
		case 67:
			return "SMOD_IN_4" /* GXT: Customize the look of your dials. */;
			break;
		case 90:
			return "SMOD_IN_4" /* GXT: Customize the look of your dials. */;
			break;
		case 68:
			if (((iVar0 == joaat("sultanrs") || iVar0 == joaat("banshee2")) || iVar0 == joaat("gauntlet5")) || __LIB_13__::func_915())
			{
				return "SMOD_IN_5b" /* GXT: Install door card upgrades. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 31)))
			{
				return "CMOD_SUNS_D";
			}
			else
			{
				return "SMOD_IN_5" /* GXT: Install speaker upgrade kits. */;
			}
			break;
		case 69:
			return "SMOD_IN_SEAT" /* GXT: Options where style meets comfort. */;
			break;
		case 70:
			return "SMOD_IN_STEER" /* GXT: Customize the link between you and your vehicle. */;
			break;
		case 71:
			if (iVar0 == joaat("weevil2"))
			{
				return "CMOD_MOD_SHI_D" /* GXT: Custom shifters. */;
			}
			return "SMOD_IN_KNOB" /* GXT: Custom lever handle styles. */;
			break;
		case 72:
			if (joaat("TOP_DECORATIONS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_DECOR_D";
			}
			else if (joaat("TOP_TWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 35)))
			{
				return "CMOD_TWIBBL_D";
			}
			else
			{
				return "SMOD_IN_PLAQUE" /* GXT: Make a statement with additional signage. */;
			}
			break;
		case 63:
			if (joaat("TOP_RWIBBLE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_RWIBBL_D";
			}
			else if (joaat("TOP_WINP") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_WINP_D";
			}
			else if ((joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9))) || iVar0 == joaat("lm87"))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_CANARDS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_CANA_D";
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "CMOD_VENT_D" /* GXT: Custom Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 26)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			break;
		case 73:
			return "SMOD_IN_ICE" /* GXT: Parcel shelf customization. */;
			break;
		case 79:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_SCOOPS") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SCOOP_D";
			}
			else if (joaat("TOP_FOGL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_HEFG_D";
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)) || iVar0 == joaat("tenf"))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "CMOD_RDIF_D";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 42)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 9)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (__LIB_13__::func_948(Local_124.f_406))
			{
				return "SMOD_CHASS_1b" /* GXT: Custom headlight trim. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_1c" /* GXT: Custom arch covers. */;
			}
			else
			{
				return "SMOD_CHASS_1" /* GXT: Custom rear wheel covers. */;
			}
			break;
		case 80:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_13__::func_918())
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_2c" /* GXT: A selection of side hood grille options. */;
			}
			else if (joaat("TOP_SPIKE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_SPIKE_D";
			}
			else if (joaat("TOP_SKID") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)) || iVar0 == joaat("draugur"))
			{
				return "CMOD_SKIDPL_D" /* GXT: Custom skid plate. */;
			}
			else if (joaat("TOP_HOOD_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_MOD_AHOD";
			}
			else if (joaat("TOP_CATCH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMOD_HOODC_D";
			}
			else if (__LIB_13__::func_947(Local_124.f_406))
			{
				return "SMOD_CHASS_2b" /* GXT: A selection of foglights options. */;
			}
			else
			{
				return "SMOD_CHASS_2" /* GXT: A selection of radio antenna options. */;
			}
			break;
		case 81:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (__LIB_13__::func_918())
			{
			}
			else if (iVar0 == joaat("cypher") || joaat("TOP_ROOFFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMM_ROFI_D" /* GXT: Custom roof fins. */;
				return "CMOD_MOD_73_D" /* GXT: Customize the look of your roof. */;
			}
			else if (joaat("TOP_BLADES") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_BLADE_D";
			}
			else if (joaat("CMOD_ROOF_ACC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_ROF_4" /* GXT: Custom roof accessories. */;
			}
			else if (joaat("TOP_SEC_LIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_SLIGHT_D";
			}
			else if (__LIB_13__::func_946(Local_124.f_406))
			{
				return "SMOD_CHASS_3b" /* GXT: Additional roof scoops. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_3c" /* GXT: Front vehicle detailing. */;
			}
			else if (joaat("TOP_ROOFSC") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_MOD_SC_D" /* GXT: Custom roof scoops. */;
			}
			else if (joaat("TOP_IMANI_TECH") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 44)))
			{
				return "CMOD_REMOTE_D" /* GXT: Imani's custom modifications. */;
			}
			else
			{
				return "SMOD_CHASS_3" /* GXT: Additional bodywork panels. */;
			}
			break;
		case 82:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_PWEAPON") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_PWEAP_D";
			}
			else if (joaat("TOP_RACK") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_RACK_D" /* GXT: Custom Racks. */;
			}
			else if (joaat("TOP_SUNST") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SUNS_D";
			}
			else if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_NOSEFIN") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOFI_D" /* GXT: Custom nose fins. */;
			}
			else if (joaat("TOP_INTERCOOL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_MOD_S41D";
			}
			else if (joaat("TOP_NOSE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMM_NOPAN_D" /* GXT: Custom nose panels. */;
			}
			else if (joaat("TOP_MUD") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 45)))
			{
				return "CMOD_MOD_52_D" /* GXT: Custom mudguards. */;
			}
			else if (iVar0 == joaat("cypher"))
			{
				return "SMOD_CHASS_1c" /* GXT: Custom arch covers. */;
			}
			else if (__LIB_13__::func_918())
			{
				return "MNU_BUMF7" /* GXT: Custom Splitter & Intercooler */;
			}
			else if (__LIB_13__::func_945())
			{
				return "CMOD_MOD_FUT_D" /* GXT: Custom fuel tanks. */;
			}
			else if (iVar0 == joaat("slamvan3"))
			{
				return "SMOD_ROLLCAGE_1" /* GXT: Custom roll cage designs. */;
			}
			else if (iVar0 == joaat("yosemite3"))
			{
				return "CMOD_MOD_72_D" /* GXT: Customize the look of your hood. */;
			}
			else
			{
				return "SMOD_CHASS_4" /* GXT: Custom gas tank designs. */;
			}
			break;
		case 84:
			if (joaat("TOP_SNORKEL") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "CMOD_SNORKEL_D";
			}
			else if (iVar0 == joaat("dominator7"))
			{
				return "SMOD_ENGINE_3b" /* GXT: A selection of support struts. */;
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
			}
			else if (joaat("TOP_VENT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_VENT_D" /* GXT: Custom Vents */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 47)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else
			{
				return "SMOD_CHASS_5" /* GXT: Side door detailing. */;
			}
			break;
		case 83:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
			}
			else if (joaat("TOP_WIND_DF") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "CMOD_WINDDF_D";
			}
			else if (joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)) || joaat("TOP_TALIGHT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 43)))
			{
				return "CMM_TLIG_D" /* GXT: Custom tail lights. */;
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 46)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (iVar0 == joaat("btype3"))
			{
				return "SMOD_CHASS_5b" /* GXT: Side wheel options. */;
			}
			else
			{
				return "SMOD_CHASS_5" /* GXT: Side door detailing. */;
			}
			break;
		case 76:
			if (joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)) || joaat("TOP_SPLIT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 8)))
			{
				return "CMOD_SPLIT_D";
			}
			else if (joaat("TOP_AIR") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (joaat("TOP_VALVE") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 39)))
			{
				return "CMOD_VCOV_D";
			}
			else if (iVar0 == joaat("kanjosj"))
			{
				return "CMOD_ENCOV_D";
			}
			else
			{
				return "SMOD_ENGINE_1" /* GXT: Custom engine block casings. */;
			}
			break;
		case 77:
			if (joaat("TOP_RAILCOV") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMM_RCOV_D" /* GXT: Custom rail covers. */;
			}
			else if (joaat("TOP_BOOT") == MISC::GET_HASH_KEY(VEHICLE::GET_MOD_SLOT_NAME(Local_124.f_406, 40)))
			{
				return "CMOD_ENCOV_D";
			}
			else if (iVar0 == joaat("greenwood"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else if (__LIB_13__::func_949(iVar0))
			{
				return "SMOD_ENGINE_2b" /* GXT: Optional cam covers. */;
			}
			else if (__LIB_13__::func_922())
			{
				return "CMM_MOD_DBOS" /* GXT: Custom boost options. */;
			}
			else
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			break;
		case 78:
			if (__LIB_14__::func_890(iVar0))
			{
				return "SMOD_ENGINE_3b" /* GXT: A selection of support struts. */;
			}
			else if (__LIB_13__::func_921())
			{
				return "CMM_MOD_DUMP" /* GXT: Custom vertical jumps. */;
			}
			else if (iVar0 == joaat("previon"))
			{
				return "SMOD_ENGINE_2" /* GXT: Enhanced filtration systems. */;
			}
			else
			{
				return "SMOD_ENGINE_3" /* GXT: Additional engine components. */;
			}
			break;
		case 92:
			if ((__LIB_14__::func_325() || __LIB_7__::func_93()) || __LIB_7__::func_92())
			{
				return "IE_BO_DS1" /* GXT: Select your choice of body modifications then confirm when ready. */;
				break;
			}
			if ((iVar0 == joaat("sultanrs") || iVar0 == joaat("banshee2")) || iVar0 == joaat("gauntlet5"))
			{
				return "SMOD_LIGHT_COLb" /* GXT: A selection of colors for dials. */;
			}
			else
			{
				return "SMOD_LIGHT_COL" /* GXT: A selection of colors for dials, neon plaques and neon speaker highlights. */;
			}
			break;
	}
	return "";
}

void func_819(int iParam0)//Position - 0x163102
{
	char cVar0[64];
	char cVar1[64];
	int iVar2;
	var uVar3;
	int iVar4;
	StringCopy(&cVar0, " ", 64);
	StringCopy(&cVar1, " ", 64);
	iVar4 = __LIB_14__::func_69(iParam0);
	iVar2 = 0;
	while (iVar2 < iVar4)
	{
		if (__LIB_16__::func_131(iParam0, iVar2, &uVar3, Local_124.f_406))
		{
			StringConCat(&cVar0, "1", 64);
		}
		else
		{
			StringConCat(&cVar0, "0", 64);
		}
		if (__LIB_14__::func_907(&Local_124, iParam0, iVar2))
		{
			StringConCat(&cVar1, "1", 64);
		}
		else
		{
			StringConCat(&cVar1, "0", 64);
		}
		iVar2++;
	}
}

bool func_820(int iParam0, int iParam1)//Position - 0x18BE11
{
	int iVar0;
	if (__LIB_16__::func_130(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), iParam0, iParam1, &iVar0))
	{
		return __LIB_15__::func_65(iVar0);
	}
	return (iParam1 == -1 || iParam1 == 0);
}

void func_821(int iParam0)//Position - 0x18D5AA
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_0__::func_253(__LIB_13__::func_623(), -1) != 0)
	{
		return;
	}
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, VEHICLE::GET_NUM_MOD_COLORS(1, true));
	while (Global_2789625.f_5 == __LIB_13__::func_937(iVar0))
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, VEHICLE::GET_NUM_MOD_COLORS(1, true));
	}
	__LIB_1__::func_379(__LIB_13__::func_623(), iVar0 + 1, -1);
	iVar1 = 0;
	iVar2 = 1;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		Local_183[iVar1] = __LIB_16__::func_122(iParam0);
		__LIB_1__::func_379(__LIB_13__::func_622(iVar1), __LIB_14__::func_194(Local_183[iVar1]), -1);
		if (Local_183[iVar1] == 2)
		{
			__LIB_1__::func_379(__LIB_13__::func_957(iVar1), 1, -1);
		}
		else
		{
			iVar2 = 1;
			if (Local_183[iVar1] == 0)
			{
				iVar2 = 2;
			}
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(iVar2, __LIB_14__::func_193(iParam0, __LIB_14__::func_194(Local_183[iVar1])));
			__LIB_1__::func_379(__LIB_13__::func_957(iVar1), iVar0, -1);
		}
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		Local_183.f_4[iVar1] = __LIB_15__::func_737(iParam0);
		__LIB_1__::func_379(__LIB_13__::func_620(iVar1), __LIB_14__::func_191(Local_183.f_4[iVar1]), -1);
		if (Local_183.f_4[iVar1] != -1)
		{
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, (__LIB_14__::func_193(iParam0, __LIB_14__::func_191(Local_183.f_4[iVar1])) - 1));
		}
		__LIB_1__::func_379(__LIB_13__::func_941(iVar1), iVar0, -1);
		iVar1++;
	}
	if (!VEHICLE::IS_THIS_MODEL_A_BIKE(__LIB_13__::func_618()))
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 9);
		__LIB_1__::func_379(__LIB_13__::func_619(), __LIB_14__::func_190(iVar0), -1);
		iVar3 = __LIB_0__::func_253(__LIB_13__::func_619(), -1);
		if (iVar3 == 4)
		{
			if (__LIB_0__::func_680())
			{
				iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, 9);
			}
			else
			{
				iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(21, 33);
			}
		}
		else
		{
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, __LIB_14__::func_69(iVar3));
		}
	}
	else if (__LIB_0__::func_680())
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, 14);
	}
	else
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(27, 50);
	}
	__LIB_1__::func_379(__LIB_13__::func_934(), (iVar0 - 1), -1);
}

void func_822(int iParam0, int iParam1)//Position - 0x18DC48
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (__LIB_0__::func_253(__LIB_13__::func_627(iParam1), -1) != 0)
	{
		return;
	}
	if (Local_124.f_676 == 0 || Local_124.f_676 > 2)
	{
		return;
	}
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, VEHICLE::GET_NUM_MOD_COLORS(1, true));
	while (Global_2789412[(Local_124.f_676 - 1) /*106*/].f_5 == __LIB_13__::func_937(iVar0))
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, VEHICLE::GET_NUM_MOD_COLORS(1, true));
	}
	__LIB_1__::func_379(__LIB_13__::func_627(iParam1), iVar0 + 1, -1);
	iVar1 = 0;
	iVar2 = 1;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		Local_177[iVar1] = __LIB_16__::func_123(iParam0, iParam1);
		__LIB_1__::func_379(__LIB_13__::func_626(iParam1, iVar1), __LIB_14__::func_194(Local_177[iVar1]), -1);
		if (Local_177[iVar1] == 2)
		{
			__LIB_1__::func_379(__LIB_13__::func_962(iParam1, iVar1), 1, -1);
		}
		else
		{
			iVar2 = 1;
			if (Local_177[iVar1] == 0)
			{
				iVar2 = 2;
			}
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(iVar2, __LIB_14__::func_193(iParam0, __LIB_14__::func_194(Local_177[iVar1])));
			__LIB_1__::func_379(__LIB_13__::func_962(iParam1, iVar1), iVar0, -1);
		}
		iVar1++;
	}
	iVar1 = 0;
	iVar1 = 0;
	while (iVar1 <= 2)
	{
		Local_177.f_4[iVar1] = __LIB_15__::func_738(iParam0, iParam1);
		__LIB_1__::func_379(__LIB_13__::func_625(iParam1, iVar1), __LIB_14__::func_196(Local_177.f_4[iVar1]), -1);
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, (__LIB_14__::func_193(iParam0, __LIB_14__::func_196(Local_177.f_4[iVar1])) - 1));
		__LIB_1__::func_379(__LIB_13__::func_961(iParam1, iVar1), iVar0, -1);
		iVar1++;
	}
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 9);
	__LIB_1__::func_379(__LIB_13__::func_624(iParam1), __LIB_14__::func_190(iVar0), -1);
	iVar3 = __LIB_0__::func_253(__LIB_13__::func_624(iParam1), -1);
	if (iVar3 == 4)
	{
		if (__LIB_0__::func_680())
		{
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, 9);
		}
		else
		{
			iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(21, 33);
		}
	}
	else
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(1, __LIB_14__::func_69(iVar3));
	}
	__LIB_1__::func_379(__LIB_13__::func_960(iParam1), (iVar0 - 1), -1);
}

void func_823()//Position - 0x1A2F90
{
	int iVar0;
	bool bVar1;
	int iVar2;
	int iVar3;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	if (bLocal_494)
	{
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			if (__LIB_16__::func_130(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), 11, iVar0, &iVar2))
			{
				if (__LIB_14__::func_218(iVar2, &iVar3))
				{
					bVar1 = __LIB_15__::func_752(iVar3, -1);
					if (__LIB_15__::func_760(iVar2))
					{
						if (!bVar1)
						{
							__LIB_15__::func_855(iVar3, 1, 0, 0, -1);
						}
					}
				}
			}
		}
		iVar0++;
	}
	if (bLocal_494)
	{
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			if (__LIB_16__::func_130(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), 12, iVar0, &iVar2))
			{
				if (__LIB_14__::func_218(iVar2, &iVar3))
				{
					bVar1 = __LIB_15__::func_752(iVar3, -1);
					if (__LIB_15__::func_760(iVar2))
					{
						if (!bVar1)
						{
							__LIB_15__::func_855(iVar3, 1, 0, 0, -1);
						}
					}
				}
			}
		}
		iVar0++;
	}
	if (bLocal_494)
	{
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			if (__LIB_16__::func_130(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), 13, iVar0, &iVar2))
			{
				if (__LIB_14__::func_218(iVar2, &iVar3))
				{
					bVar1 = __LIB_15__::func_752(iVar3, -1);
					if (__LIB_15__::func_760(iVar2))
					{
						if (!bVar1)
						{
							__LIB_15__::func_855(iVar3, 1, 0, 0, -1);
						}
					}
				}
			}
		}
		iVar0++;
	}
	if (bLocal_494)
	{
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Local_124.f_406))
		{
			if (__LIB_16__::func_130(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), 18, iVar0, &iVar2))
			{
				if (__LIB_14__::func_218(iVar2, &iVar3))
				{
					bVar1 = __LIB_15__::func_752(iVar3, -1);
					if (__LIB_15__::func_760(iVar2))
					{
						if (!bVar1)
						{
							__LIB_15__::func_855(iVar3, 1, 0, 0, -1);
						}
					}
				}
			}
		}
		iVar0++;
	}
}

void func_824(var uParam0, int iParam1)//Position - 0x1A48B0
{
	int iVar0;
	var uVar1;
	var uVar2;
	bool bVar3;
	*uParam0 = -1;
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_4__::func_868(__LIB_15__::func_751(), &uVar1) && __LIB_15__::func_856(Local_124.f_406))
		{
			uVar2 = __LIB_14__::func_177(&(Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_28));
			if (((((((((Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_36 && !Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_35) && Global_2359296[__LIB_0__::func_155() /*5567*/].f_593 == iParam1) && Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_62 == __LIB_15__::func_751()) && (uVar2 || !Global_110085)) && (uVar2 || __LIB_14__::func_919(&(Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_28)) <= Global_262145.f_20227 /* Tunable: 1722442562 */)) && !__LIB_16__::func_127(Local_124.f_406, __LIB_15__::func_53(0), &iVar0)) && !bLocal_170) && !__LIB_16__::func_117(Global_2359296[__LIB_0__::func_155() /*5567*/].f_593.f_28, Global_2359296[__LIB_0__::func_155() /*5567*/].f_593, __LIB_15__::func_53(0))) && !__LIB_14__::func_121())
			{
				*uParam0 = 0;
				return;
			}
		}
	}
	else
	{
		bVar3 = __LIB_14__::func_466();
		if (__LIB_0__::func_374(bVar3))
		{
			if ((Global_113386.f_20118.f_130[bVar3 /*41*/].f_36 && !Global_113386.f_20118.f_130[bVar3 /*41*/].f_35) && (__LIB_14__::func_177(&(Global_113386.f_20118.f_130[bVar3 /*41*/].f_28)) || !Global_110085))
			{
				if (Global_113386.f_20118.f_130[bVar3 /*41*/] == iParam1)
				{
					*uParam0 = 0;
					return;
				}
			}
		}
	}
}

int func_825(int iParam0, int iParam1, char* sParam2, int iParam3, int iParam4, int iParam5)//Position - 0x12E222
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	if (__LIB_13__::func_995(iParam0))
	{
		return 0;
	}
	if (__LIB_13__::func_994(iParam0) && __LIB_15__::func_864(iParam1, -1, 0, -1))
	{
		if (iParam5 == 8 && iParam4 == 2)
		{
			iParam3 = (iParam3 - 20);
		}
		if ((iParam5 == 15 && iParam3 > 21) && !__LIB_13__::func_988(iParam0))
		{
			iParam3 = (iParam3 - 21);
		}
		if (iParam0 == joaat("oppressor2"))
		{
			if (iParam5 == 23)
			{
				if (iParam3 > 2)
				{
					iParam3 = (iParam3 - 26);
				}
			}
		}
		else if (iParam0 == joaat("strikeforce"))
		{
			if (iParam5 == 18)
			{
				if (iParam3 > 2)
				{
					iParam3 = (iParam3 - 26);
				}
			}
		}
	}
	if (iParam1 != -1 && !__LIB_13__::func_994(iParam0))
	{
		if (__LIB_15__::func_864(iParam1, -1, 0, -1) && !__LIB_16__::func_129(iParam0, iParam1, "", 0, 0, 2, __LIB_13__::func_994(iParam0)))
		{
			return 1;
		}
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (iParam1 == -1 && !__LIB_13__::func_994(iParam0))
		{
			iVar0 = __LIB_13__::func_986(iParam0);
			if (iVar0 != -1)
			{
				iVar1 = iVar0 * 3;
				iVar2 = __LIB_13__::func_987(MISC::GET_HASH_KEY(sParam2));
				if (iVar2 != -1)
				{
					return !BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_2690[(iVar1 + (iVar2 / 32))], (iVar2 % 32));
				}
			}
			iVar3 = __LIB_13__::func_985(iParam0, iParam3, iParam4, iParam5);
			if (iVar3 > 0)
			{
				return !BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_3609[(iVar3 / 32)], (iVar3 % 32));
			}
		}
	}
	if (__LIB_13__::func_994(iParam0) && (__LIB_15__::func_864(iParam1, -1, 0, -1) || iParam1 == -1))
	{
		iVar4 = __LIB_13__::func_985(iParam0, iParam3, iParam4, iParam5);
		if (iVar4 > 0)
		{
			if (!BitTest(Global_2359296[__LIB_0__::func_155() /*5567*/].f_681.f_3609[(iVar4 / 32)], (iVar4 % 32)))
			{
				return 1;
			}
		}
		if (iParam5 == 58 && iParam4 == 2)
		{
			if (MISC::ARE_STRINGS_EQUAL(sParam2, "CMOD_TYR_LG" /* GXT: Low Grip Tires */))
			{
				if (__LIB_2__::func_628(iParam0) && __LIB_2__::func_904(PLAYER::PLAYER_ID()))
				{
					if (!__LIB_0__::func_137(31778, -1))
					{
						return 1;
					}
				}
			}
		}
	}
	return 0;
}

void func_826()//Position - 0x140DB4
{
	int iVar0;
	int iVar1;
	iVar0 = 0;
	while (iVar0 < 123)
	{
		if (!__LIB_13__::func_849(iVar0) && !MISC::IS_STRING_NULL_OR_EMPTY(&(Global_100493.f_484[iVar0 /*4*/])))
		{
			iVar1 = __LIB_14__::func_973(iVar0);
			if (iVar1 != -1)
			{
				__LIB_16__::func_136(ENTITY::GET_ENTITY_MODEL(Local_124.f_406), iVar1, "", 0, 0, 2);
			}
		}
		iVar0++;
	}
}

int func_827(int iParam0, bool bParam1)//Position - 0xD9DC3
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	struct<4> Var4;
	bool bVar5;
	int iVar6;
	int iVar7;
	var uVar8[4];
	int iVar9;
	int iVar10;
	int iVar11;
	var uVar12[4];
	int iVar13;
	int iVar14;
	var uVar15;
	int iVar16;
	int iVar17;
	__LIB_13__::func_910(iParam0, Local_124.f_0, Local_124.f_675);
	__LIB_15__::func_766(&Var4, ENTITY::GET_ENTITY_MODEL(iParam0), __LIB_13__::func_612(iParam0), -1);
	iVar0 = Var4.f_3;
	bVar5 = false;
	if (__LIB_15__::func_751() != -1)
	{
		bVar5 = BitTest(Global_1585857[__LIB_15__::func_751() /*142*/].f_103, 13);
	}
	if ((__LIB_15__::func_856(iParam0) && __LIB_15__::func_751() >= 0) && BitTest(Global_1585857[__LIB_15__::func_751() /*142*/].f_103, 15))
	{
		if (Global_1585857[__LIB_15__::func_751() /*142*/].f_140 == 0 && !BitTest(Global_1585857[__LIB_15__::func_751() /*142*/].f_103, 13))
		{
			if (__LIB_1__::func_587(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				iVar0 = SYSTEM::FLOOR((IntToFloat(Var4.f_0) * Global_262145.f_4774 /* Tunable: PURCHASED_AIRCRAFT_SALE_DEPRECIATION */));
			}
			else
			{
				iVar0 = SYSTEM::FLOOR((IntToFloat(Var4.f_0) * Global_262145.f_4771 /* Tunable: PURCHASED_CAR_SALE_DEPRECIATION */));
			}
		}
		else
		{
			iVar0 = Global_1585857[__LIB_15__::func_751() /*142*/].f_140;
			if (__LIB_1__::func_587(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				iVar0 = SYSTEM::FLOOR((IntToFloat(iVar0) * Global_262145.f_4774 /* Tunable: PURCHASED_AIRCRAFT_SALE_DEPRECIATION */));
			}
			else
			{
				iVar0 = SYSTEM::FLOOR((IntToFloat(iVar0) * Global_262145.f_4771 /* Tunable: PURCHASED_CAR_SALE_DEPRECIATION */));
			}
			if (BitTest(Global_1585857[__LIB_15__::func_751() /*142*/].f_103, 13) && iVar0 > 0)
			{
				iVar0 = 0;
			}
			if (__LIB_0__::func_176(ENTITY::GET_ENTITY_MODEL(iParam0), 0))
			{
				iVar6 = -1;
				iVar7 = ENTITY::GET_ENTITY_MODEL(iParam0);
				iVar9 = 0;
				while (iVar9 <= 3)
				{
					uVar8[iVar9] = __LIB_3__::func_703(iVar7, iVar9);
					if (__LIB_14__::func_443(uVar8[iVar9], iVar9) == iVar7)
					{
						iVar6 = iVar9;
					}
					iVar9++;
				}
				if (iVar6 != -1)
				{
					iVar0 = (iVar0 + SYSTEM::FLOOR((IntToFloat(__LIB_15__::func_767(61, iVar6, 0, 0, 0, 0)) * Global_262145.f_4771 /* Tunable: PURCHASED_CAR_SALE_DEPRECIATION */)));
				}
			}
		}
	}
	else if (__LIB_0__::func_176(ENTITY::GET_ENTITY_MODEL(iParam0), 0))
	{
		iVar10 = -1;
		iVar11 = ENTITY::GET_ENTITY_MODEL(iParam0);
		iVar13 = 0;
		while (iVar13 <= 3)
		{
			uVar12[iVar13] = __LIB_3__::func_703(iVar11, iVar13);
			if (__LIB_14__::func_443(uVar12[iVar13], iVar13) == iVar11)
			{
				iVar10 = iVar13;
			}
			iVar13++;
		}
		if (iVar10 == -1)
		{
		}
		if (iVar10 != -1)
		{
			if (__LIB_14__::func_383(ENTITY::GET_ENTITY_MODEL(iParam0)))
			{
				iVar0 = 0;
			}
			else
			{
				iVar0 = (iVar0 - SYSTEM::FLOOR((IntToFloat(__LIB_15__::func_767(61, iVar10, 0, 0, 0, 0)) * 0.1f)));
			}
			iVar0 = (iVar0 + SYSTEM::FLOOR((IntToFloat(__LIB_15__::func_767(61, iVar10, 0, 0, 0, 0)) * Global_262145.f_4771 /* Tunable: PURCHASED_CAR_SALE_DEPRECIATION */)));
		}
	}
	iVar1 = __LIB_15__::func_869(iParam0, Local_124.f_0, Local_124.f_675, BitTest(iLocal_201, 28), bVar5, 0);
	if (bParam1)
	{
		iVar2 = __LIB_13__::func_704(iParam0, 0);
	}
	else
	{
		iVar2 = 0;
	}
	iVar3 = ((iVar0 + iVar1) - iVar2);
	if (iVar3 < 0)
	{
		iVar3 = 0;
	}
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		if (__LIB_15__::func_856(iParam0))
		{
			if (__LIB_15__::func_751() >= 0 && BitTest(Global_1585857[__LIB_15__::func_751() /*142*/].f_103, 15))
			{
				if (__LIB_16__::func_139(ENTITY::GET_ENTITY_MODEL(iParam0), &iVar14, &uVar15))
				{
					if (IntToFloat(iVar14) > 0f)
					{
						if (iVar3 > iVar14)
						{
							iVar3 = iVar14;
						}
					}
				}
			}
			else if (IntToFloat(Global_262145.f_7076 /* Tunable: SELLING_STOLEN_PERSONAL_VEHICLE_CAP */) > 0f)
			{
				if (iVar3 > Global_262145.f_7076 /* Tunable: SELLING_STOLEN_PERSONAL_VEHICLE_CAP */)
				{
					iVar3 = Global_262145.f_7076 /* Tunable: SELLING_STOLEN_PERSONAL_VEHICLE_CAP */;
				}
			}
		}
		else if (IntToFloat(Global_262145.f_7075 /* Tunable: SELLING_STOLEN_VEHICLE_CAP */) > 0f)
		{
			if (iVar3 > Global_262145.f_7075 /* Tunable: SELLING_STOLEN_VEHICLE_CAP */)
			{
				iVar3 = Global_262145.f_7075 /* Tunable: SELLING_STOLEN_VEHICLE_CAP */;
			}
		}
		if (__LIB_14__::func_272())
		{
			if (__LIB_13__::func_872(ENTITY::GET_ENTITY_MODEL(Local_124.f_406)))
			{
				iVar3 = 0;
				if (Global_262145.f_21920 /* Tunable: PEGASUS_SELL_VALUE */ > -1)
				{
					iVar3 = Global_262145.f_21920 /* Tunable: PEGASUS_SELL_VALUE */;
				}
			}
		}
	}
	if (Global_262145.f_20214 /* Tunable: 702030301 */ && !Global_1585299)
	{
		iVar16 = 0;
		if (__LIB_16__::func_127(iParam0, __LIB_15__::func_53(0), &iVar16))
		{
			iVar17 = __LIB_15__::func_670(iParam0);
			iVar3 = SYSTEM::ROUND((SYSTEM::TO_FLOAT(iVar3) * __LIB_13__::func_909(iVar17)));
		}
	}
	return iVar3;
}

void func_828()//Position - 0x1C6E42
{
	int iVar0;
	if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		return;
	}
	__LIB_16__::func_125();
	if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT())
	{
		if (BitTest(Local_103.f_10[iLocal_114], 0))
		{
			if (BitTest(Global_2689235[Local_103.f_15[iLocal_114] /*453*/].f_197, 9))
			{
				iVar0 = PLAYER::INT_TO_PLAYERINDEX(Local_103.f_15[iLocal_114]);
			}
			if (__LIB_0__::func_156(iVar0, 1, 1) && NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(iVar0, SCRIPT::GET_THIS_SCRIPT_NAME(), Global_1945918))
			{
				if (Local_104[iVar0 /*17*/].f_8 == iLocal_114)
				{
					Local_103.f_31[iLocal_114] = iVar0;
					__LIB_15__::func_82();
					__LIB_15__::func_747(iLocal_114);
				}
			}
		}
		else
		{
			if (BitTest(Local_103.f_10[iLocal_114], 2))
			{
				MISC::CLEAR_BIT(&(Local_103.f_10[iLocal_114]), 2);
			}
			if (BitTest(Local_103.f_8, 3))
			{
				MISC::CLEAR_BIT(&(Local_103.f_8), 3);
			}
			__LIB_15__::func_746(Local_103.f_26[iLocal_114], iLocal_114);
		}
		__LIB_14__::func_314();
		if (__LIB_14__::func_332())
		{
			__LIB_15__::func_830();
		}
		if (BitTest(Local_103.f_8, 2))
		{
			if (__LIB_14__::func_208())
			{
				if (BitTest(Local_103.f_8, 1))
				{
					MISC::CLEAR_BIT(&(Local_103.f_8), 1);
				}
				if (BitTest(Local_103.f_8, 2))
				{
					MISC::CLEAR_BIT(&(Local_103.f_8), 2);
				}
			}
		}
	}
	__LIB_15__::func_843(iLocal_114);
	if (!__LIB_14__::func_325())
	{
		__LIB_15__::func_860();
	}
	__LIB_15__::func_875();
	__LIB_15__::func_829();
	__LIB_15__::func_858();
	__LIB_14__::func_320();
	__LIB_15__::func_828();
	__LIB_15__::func_842();
	__LIB_15__::func_745();
	if ((((__LIB_15__::func_684(0) && Local_103.f_31[iLocal_114] != __LIB_0__::getMinusOneOrNull()) && __LIB_13__::func_670(Local_103.f_31[iLocal_114])) && !__LIB_11__::func_768(Local_103.f_31[iLocal_114])) && !__LIB_6__::func_185(Local_103.f_31[iLocal_114]))
	{
		if (__LIB_0__::func_156(Local_103.f_31[iLocal_114], 1, 1))
		{
			if (NETWORK::NETWORK_IS_PLAYER_CONCEALED(Local_103.f_31[iLocal_114]))
			{
				NETWORK::NETWORK_CONCEAL_PLAYER(Local_103.f_31[iLocal_114], false, false);
			}
		}
	}
	if (((__LIB_14__::func_355() || __LIB_14__::func_333()) || __LIB_14__::func_354()) || __LIB_14__::func_202())
	{
		__LIB_15__::func_859();
	}
	if (__LIB_14__::func_355())
	{
		__LIB_15__::func_866();
		__LIB_15__::func_764();
		__LIB_15__::func_83();
	}
	else if (__LIB_14__::func_354())
	{
		__LIB_15__::func_764();
	}
	else if (__LIB_13__::func_830() || __LIB_14__::func_282())
	{
		__LIB_15__::func_866();
	}
	if (__LIB_14__::func_274())
	{
		__LIB_14__::func_412();
	}
	__LIB_15__::func_32();
	__LIB_14__::func_449();
	if (((((__LIB_14__::func_272() || __LIB_14__::func_278()) || __LIB_13__::func_835()) || __LIB_14__::func_276()) || __LIB_14__::func_354()) || __LIB_14__::func_202())
	{
		__LIB_15__::func_791();
	}
	if (__LIB_14__::func_278())
	{
		if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_416, 0))
		{
			STREAMING::REMOVE_ANIM_DICT(sLocal_411);
			STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(joaat("MP_M_WeapExp_01"));
		}
	}
	if ((((((__LIB_14__::func_278() || __LIB_13__::func_835()) || __LIB_14__::func_277()) || __LIB_14__::func_276()) || __LIB_14__::func_354()) || (__LIB_14__::func_282() && __LIB_1__::func_874(PLAYER::PLAYER_ID()) != PLAYER::PLAYER_ID())) || __LIB_14__::func_202())
	{
		if (CAM::IS_SCREEN_FADED_OUT())
		{
			if ((((__LIB_4__::func_520(PLAYER::PLAYER_ID()) || __LIB_4__::func_470(PLAYER::PLAYER_ID())) || __LIB_3__::func_962(PLAYER::PLAYER_ID())) || __LIB_4__::func_268(PLAYER::PLAYER_ID())) || __LIB_3__::func_634(PLAYER::PLAYER_ID()))
			{
				CAM::RENDER_SCRIPT_CAMS(false, false, 3000, true, false, 0);
				if (CAM::DOES_CAM_EXIST(Local_124.f_377.f_10))
				{
					CAM::DESTROY_CAM(Local_124.f_377.f_10, false);
				}
			}
		}
	}
	__LIB_15__::func_31();
	__LIB_15__::func_30();
}

void func_829(int iParam0, int iParam1, int iParam2, int iParam3, float fParam4)//Position - 0xB4691
{
	int iVar0;
	if (!__LIB_9__::func_18(iParam0))
	{
		return;
	}
	iVar0 = __LIB_9__::func_17(iParam0, iParam1, iParam2);
	if (iVar0 == -1)
	{
		return;
	}
	switch (iParam0)
	{
		case 0:
			if (!__LIB_0__::func_137(32249, -1))
			{
				__LIB_0__::func_186(32249, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 1:
			if (!__LIB_0__::func_137(32250, -1))
			{
				__LIB_0__::func_186(32250, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 2:
			if (!__LIB_0__::func_137(32251, -1))
			{
				__LIB_0__::func_186(32251, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 3:
			if (!__LIB_0__::func_137(32252, -1))
			{
				__LIB_0__::func_186(32252, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 4:
			if (!__LIB_0__::func_137(32253, -1))
			{
				__LIB_0__::func_186(32253, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 5:
			if (!__LIB_0__::func_137(32254, -1))
			{
				__LIB_0__::func_186(32254, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 6:
			if (!__LIB_0__::func_137(32255, -1))
			{
				__LIB_0__::func_186(32255, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 7:
			if (!__LIB_0__::func_137(32256, -1))
			{
				__LIB_0__::func_186(32256, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 8:
			if (!__LIB_0__::func_137(32257, -1))
			{
				__LIB_0__::func_186(32257, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 9:
			if (!__LIB_0__::func_137(32258, -1))
			{
				__LIB_0__::func_186(32258, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 10:
			if (__LIB_0__::func_137(32249, -1))
			{
				if (!__LIB_0__::func_137(32259, -1))
				{
					__LIB_0__::func_186(32259, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 11:
			if (__LIB_0__::func_137(32250, -1))
			{
				if (!__LIB_0__::func_137(32260, -1))
				{
					__LIB_0__::func_186(32260, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 12:
			if (__LIB_0__::func_137(32251, -1))
			{
				if (!__LIB_0__::func_137(32261, -1))
				{
					__LIB_0__::func_186(32261, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 13:
			if (__LIB_0__::func_137(32252, -1))
			{
				if (!__LIB_0__::func_137(32262, -1))
				{
					__LIB_0__::func_186(32262, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 14:
			if (__LIB_0__::func_137(32253, -1))
			{
				if (!__LIB_0__::func_137(32263, -1))
				{
					__LIB_0__::func_186(32263, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 15:
			if (!__LIB_0__::func_137(32264, -1))
			{
				__LIB_0__::func_186(32264, 1, -1);
				__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			}
			break;
		case 16:
			if (__LIB_0__::func_137(32254, -1))
			{
				if (!__LIB_0__::func_137(32265, -1))
				{
					__LIB_0__::func_186(32265, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 17:
			if (__LIB_0__::func_137(32255, -1))
			{
				if (!__LIB_0__::func_137(32266, -1))
				{
					__LIB_0__::func_186(32266, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 18:
			if (__LIB_0__::func_137(32256, -1))
			{
				if (!__LIB_0__::func_137(32267, -1))
				{
					__LIB_0__::func_186(32267, 1, -1);
					__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
				}
			}
			break;
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
			__LIB_16__::func_145(iVar0, iParam0, iParam3, fParam4);
			break;
		case 24:
		case 25:
		case 26:
			__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			break;
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
			__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			break;
		case 32:
		case 33:
		case 34:
		case 35:
			__LIB_16__::func_145(iVar0, iParam0, iParam3, 1065353216);
			break;
	}
}

Vector3 func_830()//Position - 0x3D71
{
	return 1f, -0.5f, 2f;
}

Vector3 func_831()//Position - 0x3E03
{
	return -1f, -0.5f, 0f;
}

void func_832(var uParam0)//Position - 0x3064
{
	int iVar0;
	__LIB_3__::func_122(&(uParam0->f_6));
	__LIB_14__::func_652(uParam0);
	if (uParam0->f_13 > 2)
	{
		__LIB_5__::func_848(-1);
		iVar0 = NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(uParam0->f_8);
		if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(iVar0))
		{
			NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(uParam0->f_8);
		}
		if (!__LIB_0__::func_629() && !STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())
		{
			__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
		}
	}
	MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_4), 15);
}

int func_833(var uParam0, int iParam1, struct<3> Param2, float fParam3, bool bParam4, bool bParam5)//Position - 0x32FFC
{
	int iVar0;
	int iVar1;
	__LIB_0__::func_873(&Global_1966234);
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(iParam1, false))
	{
		iVar0 = ENTITY::GET_ENTITY_MODEL(iParam1);
		__LIB_9__::func_494(iParam1, &Global_1966234);
	}
	if (!VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
	{
		*uParam0 = VEHICLE::CREATE_VEHICLE(iVar0, Param2, fParam3, bParam4, bParam5, false);
		__LIB_16__::func_190(*uParam0, &Global_1966234, 1, 1, 0);
		if (((!VEHICLE::IS_THIS_MODEL_A_BIKE(iVar0) && !VEHICLE::IS_THIS_MODEL_A_BOAT(iVar0)) && iVar0 != joaat("kosatka")) && iVar0 != joaat("avisa"))
		{
			iVar1 = 0;
			while (iVar1 <= 5)
			{
				if (VEHICLE::IS_VEHICLE_DOOR_DAMAGED(iParam1, iVar1))
				{
					VEHICLE::SET_VEHICLE_DOOR_BROKEN(*uParam0, iVar1, true);
				}
				iVar1++;
			}
			iVar1 = 0;
			while (iVar1 <= 3)
			{
				if (!VEHICLE::IS_VEHICLE_WINDOW_INTACT(iParam1, iVar1))
				{
					VEHICLE::REMOVE_VEHICLE_WINDOW(*uParam0, iVar1);
				}
				iVar1++;
			}
		}
		if ((!VEHICLE::IS_THIS_MODEL_A_BOAT(iVar0) && iVar0 != joaat("kosatka")) && iVar0 != joaat("avisa"))
		{
			iVar1 = 0;
			while (iVar1 <= 7)
			{
				if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam1, iVar1, true))
				{
					VEHICLE::SET_VEHICLE_TYRE_BURST(*uParam0, iVar1, true, 1000f);
				}
				else if (VEHICLE::IS_VEHICLE_TYRE_BURST(iParam1, iVar1, false))
				{
					VEHICLE::SET_VEHICLE_TYRE_BURST(*uParam0, iVar1, false, 1000f);
				}
				iVar1++;
			}
		}
		VEHICLE::COPY_VEHICLE_DAMAGES(iParam1, *uParam0);
		if ((iVar0 == joaat("dominator4") || iVar0 == joaat("dominator5")) || iVar0 == joaat("dominator6"))
		{
			if (!VEHICLE::GET_DOES_VEHICLE_HAVE_TOMBSTONE(iParam1))
			{
				VEHICLE::HIDE_TOMBSTONE(*uParam0, true);
			}
		}
	}
	if (VEHICLE::IS_VEHICLE_DRIVEABLE(*uParam0, false))
	{
		return 1;
	}
	return 0;
}

int func_834(int iParam0, var uParam1, int iParam2, struct<3> Param3)//Position - 0x112D1C
{
	struct<101> Var0;
	int iVar1;
	int iVar2;
	if (!ENTITY::DOES_ENTITY_EXIST(*iParam0) || ENTITY::IS_ENTITY_DEAD(*iParam0, false))
	{
		return 0;
	}
	if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
	{
		if (__LIB_0__::func_703(iParam2, 1))
		{
			ENTITY::FREEZE_ENTITY_POSITION(*uParam1, true);
		}
		if (!ENTITY::IS_ENTITY_DEAD(*uParam1, false))
		{
			ENTITY::SET_ENTITY_COORDS_NO_OFFSET(*uParam1, ENTITY::GET_ENTITY_COORDS(*iParam0, true), false, false, true);
			ENTITY::SET_ENTITY_ROTATION(*uParam1, ENTITY::GET_ENTITY_ROTATION(*iParam0, 2), 2, true);
		}
		if (__LIB_0__::func_703(iParam2, 2))
		{
			VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(*uParam1, 5f);
		}
		return 1;
	}
	else
	{
		*uParam1 = VEHICLE::CREATE_VEHICLE(__LIB_4__::func_445(), Param3, ENTITY::GET_ENTITY_HEADING(*iParam0), false, false, false);
		if (ENTITY::DOES_ENTITY_EXIST(*uParam1))
		{
			Var0.f_9 = 49;
			Var0.f_59 = 2;
			Var0.f_78 = -1;
			Var0.f_79 = -1;
			Var0.f_96 = -1;
			Var0.f_97 = 1;
			Var0.f_99 = 132;
			Var0.f_100 = -1;
			__LIB_9__::func_494(*iParam0, &Var0);
			__LIB_16__::func_190(*uParam1, &Var0, 1, 1, 0);
			ENTITY::SET_ENTITY_COLLISION(*uParam1, false, false);
			ENTITY::SET_ENTITY_VISIBLE(*uParam1, false, false);
			ENTITY::SET_ENTITY_INVINCIBLE(*uParam1, true);
			VEHICLE::SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(*uParam1, false);
			ENTITY::SET_ENTITY_PROOFS(*uParam1, true, true, true, true, true, true, true, true);
			VEHICLE::SET_VEHICLE_CAN_BREAK(*uParam1, false);
			VEHICLE::GET_VEHICLE_LIGHTS_STATE(*iParam0, &iVar1, &iVar2);
			if (iVar1 != 0)
			{
				VEHICLE::SET_VEHICLE_LIGHTS(*uParam1, 2);
			}
			if (iVar2 != 0)
			{
				VEHICLE::SET_VEHICLE_FULLBEAM(*uParam1, true);
			}
		}
	}
	return 0;
}

int func_835(var uParam0, var uParam1, var uParam2)//Position - 0x14B956
{
	int iVar0;
	int iVar1;
	bool bVar2;
	char* sVar3;
	var uVar4;
	*uParam2 = 1;
	if (__LIB_3__::func_965() || __LIB_4__::func_671())
	{
		return 0;
	}
	if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
	{
		if (__LIB_0__::func_1("HELP_APC_TUR" /* GXT: Hold ~INPUT_VEH_SHUFFLE~ to move between the passenger turret and the driver seat while stationary. */))
		{
			return 0;
		}
		if (__LIB_11__::func_994() != PLAYER::PLAYER_ID())
		{
			return 0;
		}
	}
	if (Global_262145.f_21612 /* Tunable: 311722703 */ && __LIB_0__::func_389(PLAYER::PLAYER_ID()))
	{
		return 0;
	}
	iVar0 = __LIB_10__::func_11();
	if ((!__LIB_0__::func_893() || __LIB_3__::func_558()) || HUD::IS_PAUSE_MENU_ACTIVE())
	{
		__LIB_9__::func_287(uParam1, 1);
	}
	if (__LIB_1__::func_693(PLAYER::PLAYER_ID(), 1, 1))
	{
		if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) || TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_122(&(uParam1->f_22.f_94));
			}
			__LIB_9__::func_287(uParam1, 1);
		}
	}
	if (__LIB_3__::func_717(uParam0))
	{
		if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false) && !TASK::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
		{
			if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
			{
				if (ENTITY::DOES_ENTITY_EXIST(iVar0) && !ENTITY::IS_ENTITY_DEAD(iVar0, false))
				{
					if (__LIB_4__::func_306(PLAYER::PLAYER_ID()))
					{
						__LIB_3__::func_122(&(uParam1->f_22.f_94));
					}
					if (((((__LIB_5__::func_757(iVar0) && __LIB_4__::func_680(OBJECT::GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(ENTITY::GET_ENTITY_COORDS(iVar0, true), ENTITY::GET_ENTITY_HEADING(iVar0), 0f, -1f, 0f))) && !PED::GET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 373)) && __LIB_12__::func_81(uParam1, PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), iVar0, 1)) && !__LIB_12__::func_285(*uParam0)) || ((__LIB_4__::func_661() && !__LIB_12__::func_285(*uParam0)) && __LIB_1__::func_659(PLAYER::PLAYER_ID())))
					{
						if (MISC::IS_PC_VERSION())
						{
							if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
							{
								if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("voltic2")) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("oppressor")))
								{
									if ((__LIB_3__::func_363(uParam1->f_22.f_94, 0) || __LIB_3__::func_56("GR_ENTERTRUCK" /* GXT: Press ~a~ to modify this vehicle in your Mobile Operations Center. */, "STRING")) || __LIB_3__::func_56("GR_STORETRUCK" /* GXT: Press ~a~ to store this vehicle in your Mobile Operations Center. */, "STRING"))
									{
										PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
									}
								}
								if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), joaat("scramjet")))
								{
									if ((__LIB_3__::func_363(uParam1->f_22.f_94, 0) || __LIB_3__::func_56("GR_ENTERTRUCK" /* GXT: Press ~a~ to modify this vehicle in your Mobile Operations Center. */, "STRING")) || __LIB_3__::func_56("GR_STORETRUCK" /* GXT: Press ~a~ to store this vehicle in your Mobile Operations Center. */, "STRING"))
									{
										PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 350 /*INPUT_VEH_CAR_JUMP*/, true);
									}
								}
							}
						}
						__LIB_4__::func_563(1);
						PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
						if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 5))
						{
							if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)) || ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
							{
								if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
								{
									if (__LIB_0__::func_389(PLAYER::PLAYER_ID()))
									{
										bVar2 = false;
										if (VEHICLE::GET_VEHICLE_TRAILER_VEHICLE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), &iVar1))
										{
											if (ENTITY::GET_ENTITY_MODEL(iVar1) == joaat("trailersmall2"))
											{
												bVar2 = true;
												HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFA_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. The Anti-Aircraft Trailer can only be modified in the Bunker. */, false);
											}
										}
										if (!bVar2)
										{
											HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFE_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. */, false);
										}
									}
									else if (__LIB_4__::func_633(PLAYER::PLAYER_ID()))
									{
										HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFS_TRAIL" /* GXT: You cannot store this vehicle while a trailer is attached. */, false);
									}
								}
								return 0;
							}
							if (__LIB_1__::func_587(ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false))))
							{
								if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
								{
									if (__LIB_0__::func_389(PLAYER::PLAYER_ID()))
									{
										HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFE_AIR" /* GXT: You cannot modify this aircraft in your Mobile Operations Center. */, false);
									}
									else if (__LIB_4__::func_633(PLAYER::PLAYER_ID()))
									{
										HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFS_AIR" /* GXT: You cannot store this aircraft in your Mobile Operations Center. */, false);
									}
								}
								return 0;
							}
							if (__LIB_4__::func_633(PLAYER::PLAYER_ID()) && __LIB_0__::func_541(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0))
							{
								if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
								{
									HUD::DISPLAY_HELP_TEXT_THIS_FRAME("MP_TRUCK_PEG" /* GXT: You cannot store a Pegasus vehicle in your Mobile Operations Center. */, false);
								}
								return 0;
							}
							if (__LIB_0__::func_389(PLAYER::PLAYER_ID()) && !__LIB_7__::func_833(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
							{
								if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
								{
									HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFE_NOTV" /* GXT: You cannot modify this vehicle in your Mobile Operations Center. */, false);
								}
								return 0;
							}
							if (__LIB_0__::func_389(PLAYER::PLAYER_ID()) && (__LIB_4__::func_679(PLAYER::PLAYER_ID()) || __LIB_4__::func_678(PLAYER::PLAYER_ID())))
							{
								if ((!HUD::IS_PAUSE_MENU_ACTIVE() && !__LIB_0__::func_194(8, -1)) && !__LIB_0__::func_193())
								{
									if (!HUD::IS_HELP_MESSAGE_BEING_DISPLAYED())
									{
										HUD::DISPLAY_HELP_TEXT_THIS_FRAME("GR_ETFE_VEHIN" /* GXT: You must remove the vehicle currently inside your Mobile Operations Center to modify this vehicle. */, false);
									}
								}
								return 0;
							}
							if (__LIB_0__::func_389(PLAYER::PLAYER_ID()))
							{
								sVar3 = "GR_ENTERTRUCK" /* GXT: Press ~a~ to modify this vehicle in your Mobile Operations Center. */;
							}
							else if (__LIB_4__::func_633(PLAYER::PLAYER_ID()))
							{
								sVar3 = "GR_STORETRUCK" /* GXT: Press ~a~ to store this vehicle in your Mobile Operations Center. */;
							}
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 351 /*INPUT_VEH_ROCKET_BOOST*/, true);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 357 /*INPUT_VEH_TRANSFORM*/, true);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 350 /*INPUT_VEH_CAR_JUMP*/, true);
							if (uParam1->f_22.f_94 == -1 && __LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
							{
								__LIB_5__::func_569(&(uParam1->f_22.f_94), 5, sVar3, 0, 0, 0, 0);
								if (__LIB_2__::func_754(PLAYER::PLAYER_ID()))
								{
									__LIB_4__::func_530(0);
								}
							}
							if (__LIB_0__::func_77(0))
							{
								__LIB_3__::func_122(&(uParam1->f_22.f_94));
							}
							if ((__LIB_3__::func_113(uParam1->f_22.f_94, 1) && !HUD::IS_WARNING_MESSAGE_ACTIVE()) || BitTest(uParam1->f_22, 1))
							{
								__LIB_9__::func_287(uParam1, 0);
								if (!__LIB_4__::func_633(PLAYER::PLAYER_ID()) || __LIB_12__::func_79(uParam1, uParam0))
								{
									if (__LIB_12__::func_72(&(uParam1->f_22), PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false)))
									{
										__LIB_3__::func_122(&(uParam1->f_22.f_94));
										if (BitTest(uParam1->f_22, 1))
										{
											MISC::CLEAR_BIT(&(uParam1->f_22), 1);
										}
										if (__LIB_5__::func_651(3, &uVar4))
										{
											MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 16);
										}
										else if (__LIB_5__::func_651(7, &uVar4))
										{
											MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 17);
										}
										if (__LIB_2__::func_754(PLAYER::PLAYER_ID()))
										{
											__LIB_4__::func_527(1);
											VEHICLE::MODIFY_VEHICLE_TOP_SPEED(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0f);
											VEHICLE::SET_VEHICLE_MAX_SPEED(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), -1f);
											VEHICLE::STOP_BRINGING_VEHICLE_TO_HALT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false));
										}
										if (!BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318, 19))
										{
											__LIB_6__::func_844(1, 0);
											MISC::SET_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318), 19);
										}
										__LIB_5__::func_435(1, 81);
										__LIB_4__::func_528(1);
									}
								}
							}
						}
						else
						{
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 104 /*INPUT_VEH_SHUFFLE*/, true);
							__LIB_1__::func_33(0);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 75 /*INPUT_VEH_EXIT*/, true);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 23 /*INPUT_ENTER*/, true);
							PAD::SET_INPUT_EXCLUSIVE(0 /*PLAYER_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/);
							PAD::SET_INPUT_EXCLUSIVE(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/);
							PAD::DISABLE_CONTROL_ACTION(0 /*PLAYER_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
							PAD::DISABLE_CONTROL_ACTION(2 /*FRONTEND_CONTROL*/, 200 /*INPUT_FRONTEND_PAUSE_ALTERNATE*/, true);
							HUD::DISABLE_FRONTEND_THIS_FRAME();
							HUD::SUPPRESS_FRONTEND_RENDERING_THIS_FRAME();
							VEHICLE::BRING_VEHICLE_TO_HALT(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1f, 1, false);
							if (__LIB_5__::func_356() && __LIB_5__::func_629())
							{
								if (__LIB_2__::func_754(PLAYER::PLAYER_ID()))
								{
									__LIB_4__::func_669(1);
									__LIB_4__::func_663(1);
								}
								__LIB_5__::func_457(1);
								__LIB_11__::func_992(81, uParam1, 0, 0);
								__LIB_1__::func_376(PLAYER::PLAYER_ID(), 0, 0, 0);
								if (__LIB_0__::func_541(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 0))
								{
									__LIB_4__::func_553(PLAYER::PLAYER_ID(), 81, 2);
								}
								else if (__LIB_0__::func_872(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false), 1))
								{
									__LIB_4__::func_956(PLAYER::PLAYER_ID(), 81, 2);
								}
								__LIB_4__::func_562(__LIB_1__::func_694(PLAYER::PLAYER_ID()), 25f, 0);
								__LIB_4__::func_563(0);
								return 1;
							}
						}
					}
					else
					{
						__LIB_4__::func_563(0);
						if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
						{
							HUD::CLEAR_HELP(true);
							__LIB_3__::func_122(&(uParam1->f_22.f_94));
						}
						__LIB_9__::func_287(uParam1, 1);
					}
				}
				else
				{
					if (__LIB_5__::func_187(PLAYER::PLAYER_ID(), -1))
					{
						if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
						{
							HUD::CLEAR_HELP(true);
							__LIB_3__::func_122(&(uParam1->f_22.f_94));
						}
					}
					__LIB_9__::func_287(uParam1, 1);
				}
			}
			else
			{
				__LIB_16__::func_192(*uParam0);
				if (__LIB_3__::func_950(PLAYER::PLAYER_ID()))
				{
					if (!__LIB_0__::func_864(&(uParam1->f_22.f_101)))
					{
						__LIB_0__::func_795(&(uParam1->f_22.f_101), 0, 0);
					}
					else if (__LIB_0__::func_937(&(uParam1->f_22.f_101), 10000, 0))
					{
						if (CAM::IS_SCREEN_FADED_OUT())
						{
							if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
							{
								TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
							}
							if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
							{
								NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
							}
							CAM::DO_SCREEN_FADE_IN(500);
							__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
							__LIB_4__::func_664(0);
							__LIB_4__::func_534(0);
							__LIB_4__::func_668(0);
							__LIB_0__::clearF_1Prop(&(uParam1->f_22.f_101));
						}
					}
					if (__LIB_1__::func_693(Global_1946250.f_3630, 1, 1))
					{
					}
					if (!__LIB_5__::func_301(Global_1946250.f_3630) && __LIB_2__::func_730(Global_1946250.f_3630))
					{
						PED::SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(PLAYER::PLAYER_PED_ID(), 1);
						__LIB_1__::func_33(0);
						__LIB_3__::func_669(Global_1946250.f_3630);
						MISC::SET_BIT(&(Global_1946250.f_506), 1);
						Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_9 = PLAYER::INT_TO_PLAYERINDEX(Global_1946250.f_3280);
						__LIB_4__::func_561(1);
						__LIB_5__::func_435(1, 81);
						PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 184, true);
						Global_1853185 = PLAYER::INT_TO_PLAYERINDEX(Global_1946250.f_3280);
						__LIB_0__::clearF_1Prop(&(uParam1->f_22.f_101));
					}
					if (__LIB_5__::func_301(Global_1946250.f_3630) || __LIB_2__::func_730(Global_1946250.f_3630))
					{
						if (__LIB_2__::func_754(PLAYER::PLAYER_ID()))
						{
							__LIB_4__::func_527(1);
							__LIB_4__::func_669(1);
							__LIB_4__::func_663(1);
						}
						return 1;
					}
				}
				else if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1, 7))
				{
					if (__LIB_5__::func_196(Global_1946250.f_3630) != 81 && !__LIB_2__::func_730(PLAYER::PLAYER_ID()))
					{
						if (CAM::IS_SCREEN_FADED_OUT())
						{
							if (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 1 && TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), joaat("SCRIPT_TASK_LEAVE_ANY_VEHICLE")) != 0)
							{
								TASK::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
							}
							if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE())
							{
								NETWORK::NETWORK_SET_IN_MP_CUTSCENE(false, false);
							}
							CAM::DO_SCREEN_FADE_IN(500);
							__LIB_1__::func_376(PLAYER::PLAYER_ID(), 1, 0, 0);
							__LIB_4__::func_664(0);
							__LIB_4__::func_534(0);
							__LIB_4__::func_668(0);
							MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_318.f_1), 7);
							__LIB_0__::clearF_1Prop(&(uParam1->f_22.f_101));
						}
					}
				}
			}
		}
		else
		{
			if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
			{
				HUD::CLEAR_HELP(true);
				__LIB_3__::func_122(&(uParam1->f_22.f_94));
			}
			__LIB_9__::func_287(uParam1, 1);
		}
	}
	else if (__LIB_3__::func_363(uParam1->f_22.f_94, 0))
	{
		HUD::CLEAR_HELP(true);
		__LIB_3__::func_122(&(uParam1->f_22.f_94));
	}
	if (((__LIB_0__::func_1("GR_ETFE_NOTV" /* GXT: You cannot modify this vehicle in your Mobile Operations Center. */) || __LIB_0__::func_1("GR_ETFE_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. */)) || __LIB_0__::func_1("GR_ETFS_TRAIL" /* GXT: You cannot store this vehicle while a trailer is attached. */)) || __LIB_0__::func_1("GR_ETFA_TRAIL" /* GXT: You cannot modify this vehicle while a trailer is attached. The Anti-Aircraft Trailer can only be modified in the Bunker. */))
	{
		HUD::CLEAR_HELP(true);
	}
	return 0;
}

int func_836(int iParam0)//Position - 0x1BCF99
{
	switch (iParam0)
	{
		case 1:
			return 1;
		case 2:
			return 0;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		default:
	}
	return 0;
}

int func_837(var uParam0, int iParam1)//Position - 0x1BCFDB
{
	if (uParam0->f_16[iParam1 /*14*/].f_13 == 5)
	{
		return 1;
	}
	return 0;
}

float func_838(int iParam0, float fParam1)//Position - 0x1BDA53
{
	switch (iParam0)
	{
		case 1:
		case 2:
		case 5:
			return fParam1;
		case 4:
		case 3:
			return (fParam1 - 180f);
		default:
	}
	return fParam1;
}

int func_839(var uParam0, int iParam1, int iParam2, int iParam3)//Position - 0x1BB8FE
{
	if (uParam0->f_9 == iParam1 && __LIB_16__::func_243(uParam0, iParam2, iParam3))
	{
		return 1;
	}
	return 0;
}

int func_840(int iParam0)//Position - 0x1BC1A1
{
	switch (iParam0)
	{
		case 0:
			return 3;
		case 1:
			return __LIB_0__::func_138(__LIB_1__::func_394(), 4, 5);
		case 2:
			return 5;
		case 3:
			return 3;
		case 4:
			return 1;
		default:
	}
	return 0;
}

void func_841(var uParam0, char* sParam1)//Position - 0x1BCB61
{
	switch (uParam0->f_1.f_1)
	{
		case 0:
			StringCopy(sParam1, "ANIM@AMB@CLUBHOUSE@SEATING", 64);
			break;
		case 1:
			StringCopy(sParam1, "ANIM@AMB@OFFICE@SEATING", 64);
			break;
		case 2:
			StringCopy(sParam1, "ANIM@AMB@FACILITY@BRIEFING_ROOM@SEATING", 64);
			break;
		case 3:
			StringCopy(sParam1, "ANIM@AMB@YACHT@JACUZZI@SEATED", 64);
			break;
		case 4:
			StringCopy(sParam1, "anim@scripted@player@fix_agy_ig7_railing", 64);
			break;
	}
	if (uParam0->f_1.f_1 == 4 && __LIB_1__::func_365(PLAYER::PLAYER_PED_ID()))
	{
		StringConCat(sParam1, "@HEELED", 64);
	}
	else if (__LIB_1__::func_394())
	{
		StringConCat(sParam1, "@FEMALE", 64);
	}
	else
	{
		StringConCat(sParam1, "@MALE", 64);
	}
	switch (uParam0->f_1.f_1)
	{
		case 1:
			if (__LIB_1__::func_394())
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
				}
			}
			else
			{
				switch (uParam0->f_1.f_2)
				{
					case 0:
						StringConCat(sParam1, "@VAR_A@BASE@", 64);
						break;
					case 1:
						StringConCat(sParam1, "@VAR_B@BASE@", 64);
						break;
					case 2:
						StringConCat(sParam1, "@VAR_C@BASE@", 64);
						break;
					case 3:
						StringConCat(sParam1, "@VAR_D@BASE@", 64);
						break;
					case 4:
						StringConCat(sParam1, "@VAR_E@BASE@", 64);
						break;
					}
			}
			break;
		case 0:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@BASE@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@BASE@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@BASE@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@BASE@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@BASE@", 64);
					break;
			}
			break;
		case 2:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VAR_A@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VAR_B@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VAR_C@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VAR_D@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VAR_E@", 64);
					break;
			}
			break;
		case 3:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@VARIATION_01@", 64);
					break;
				case 1:
					StringConCat(sParam1, "@VARIATION_02@", 64);
					break;
				case 2:
					StringConCat(sParam1, "@VARIATION_03@", 64);
					break;
				case 3:
					StringConCat(sParam1, "@VARIATION_04@", 64);
					break;
				case 4:
					StringConCat(sParam1, "@VARIATION_05@", 64);
					break;
			}
			break;
		case 4:
			switch (uParam0->f_1.f_2)
			{
				case 0:
					StringConCat(sParam1, "@", 64);
					break;
			}
			break;
	}
}

void func_842(var uParam0, int iParam1)//Position - 0x159FD6
{
	switch (iParam1)
	{
		case 0:
			*uParam0 = 1459148/*__LIB_5__::func_926*/;
			break;
		case 1:
			uParam0->f_30 = 1456830/*__LIB_6__::func_11*/;
			break;
		case 2:
			uParam0->f_31 = 1456767/*__LIB_5__::func_669*/;
			break;
		case 3:
			uParam0->f_34 = 1456711/*__LIB_4__::func_758*/;
			break;
		case 4:
			uParam0->f_12 = 1455996/*__LIB_4__::func_757*/;
			break;
		case 6:
			uParam0->f_32 = 1455988/*__LIB_0__::func_467*/;
			break;
		case 111:
			uParam0->f_35 = 1455979/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 79:
			*uParam0 = 1455955/*__LIB_5__::func_265*/;
			break;
		case 11:
			uParam0->f_11 = 1455946/*__LIB_0__::func_109*/;
			break;
		case 12:
			uParam0->f_33 = 1454118/*__LIB_5__::func_668*/;
			break;
		case 14:
			uParam0->f_11 = 1454109/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 109:
			uParam0->f_56 = 1454101/*__LIB_0__::func_467*/;
			break;
		case 13:
			uParam0->f_2 = 1454092/*__LIB_0__::func_109*/;
			break;
		case 15:
			uParam0->f_2 = 1454083/*__LIB_0__::func_109*/;
			break;
		case 75:
			uParam0->f_4 = 1454074/*__LIB_0__::func_114*/;
			break;
		case 16:
			uParam0->f_5 = 1454065/*__LIB_0__::func_114*/;
			break;
		case 108:
			uParam0->f_55 = 1454056/*__LIB_0__::func_114*/;
			break;
		case 17:
			uParam0->f_17 = 1454031/*__LIB_5__::func_322*/;
			break;
		case 19:
			uParam0->f_17 = 1454020/*__LIB_3__::func_860*/;
			break;
		case 20:
			uParam0->f_3 = 1454011/*__LIB_0__::func_114*/;
			break;
		case 21:
			uParam0->f_3 = 1454002/*__LIB_0__::func_114*/;
			break;
		case 74:
			uParam0->f_53 = 1453993/*__LIB_0__::func_114*/;
			break;
		case 22:
			uParam0->f_24 = 1453985/*__LIB_0__::func_467*/;
			break;
		case 25:
			uParam0->f_23 = 1453977/*__LIB_0__::func_467*/;
			break;
		case 30:
			uParam0->f_8 = 1452816/*__LIB_5__::func_667*/;
			break;
		case 31:
			uParam0->f_39 = 1452805/*__LIB_3__::func_860*/;
			break;
		case 33:
			uParam0->f_40 = 1452777/*__LIB_4__::func_755*/;
			break;
		case 34:
			uParam0->f_41 = 1452768/*__LIB_0__::func_114*/;
			break;
		case 36:
			uParam0->f_58 = 1452723/*__LIB_3__::func_667*/;
			break;
		case 35:
			uParam0->f_42 = 1419037/*__LIB_5__::func_666*/;
			break;
		case 45:
			uParam0->f_14 = 1419028/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 46:
			uParam0->f_14 = 1419019/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 110:
			uParam0->f_57 = 1419011/*__LIB_0__::func_467*/;
			break;
		case 77:
			uParam0->f_13 = 1419000/*__LIB_3__::func_554*/;
			break;
		case 47:
			uParam0->f_43 = 1418992/*__LIB_0__::func_467*/;
			break;
		case 49:
			uParam0->f_8 = 1418983/*__LIB_0__::func_114*/;
			break;
		case 50:
			*uParam0 = 1418684/*__LIB_7__::func_34*/;
			break;
		case 51:
			*uParam0 = 1418655/*__LIB_4__::func_751*/;
			break;
		case 52:
			uParam0->f_15 = 1418624/*__LIB_4__::func_750*/;
			break;
		case 53:
			uParam0->f_13 = 1418590/*__LIB_5__::func_373*/;
			break;
		case 54:
			uParam0->f_45 = 1418546/*__LIB_4__::func_749*/;
			break;
		case 56:
			uParam0->f_46 = 1418517/*__LIB_4__::func_748*/;
			break;
		case 57:
			uParam0->f_11 = 1418508/*__LIB_0__::func_114*/;
			break;
		case 58:
			uParam0->f_13 = 1418451/*__LIB_5__::func_373*/;
			break;
		case 64:
			uParam0->f_47 = 1418443/*__LIB_0__::func_467*/;
			break;
		case 65:
			uParam0->f_21 = 1418435/*__LIB_0__::func_467*/;
			break;
		case 66:
			uParam0->f_21 = 1418427/*__LIB_0__::func_467*/;
			break;
		case 67:
			uParam0->f_21 = 1418419/*__LIB_0__::func_467*/;
			break;
		case 68:
			*uParam0 = 1418393/*__LIB_4__::func_746*/;
			break;
		case 69:
			*uParam0 = 1418367/*__LIB_4__::func_746*/;
			break;
		case 70:
			uParam0->f_48 = 1418355/*__LIB_3__::func_635*/;
			break;
		case 71:
			uParam0->f_49 = 1418346/*__LIB_0__::func_114*/;
			break;
		case 107:
			uParam0->f_50 = 1418334/*__LIB_3__::func_635*/;
			break;
		case 80:
			uParam0->f_7 = 1418325/*__LIB_0__::func_114*/;
			break;
		case 78:
			uParam0->f_59 = 1418317/*__LIB_0__::func_467*/;
			break;
		case 126:
			*uParam0 = 1418134/*__LIB_7__::func_855*/;
			break;
	}
}

void func_843(var uParam0, int iParam1)//Position - 0xB6044
{
	switch (iParam1)
	{
		case 0:
			*uParam0 = 753833/*__LIB_0__::func_109*/;
			break;
		case 111:
			uParam0->f_35 = 753824/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 1:
			uParam0->f_30 = 753753/*__LIB_5__::func_511*/;
			break;
		case 2:
			uParam0->f_31 = 753516/*__LIB_5__::func_510*/;
			break;
		case 3:
			uParam0->f_34 = 753465/*__LIB_4__::func_25*/;
			break;
		case 4:
			uParam0->f_12 = 753453/*__LIB_4__::func_24*/;
			break;
		case 6:
			uParam0->f_32 = 753389/*__LIB_4__::func_23*/;
			break;
		case 11:
			uParam0->f_11 = 753380/*__LIB_1__::func_806*/;
			break;
		case 12:
			uParam0->f_33 = 752940/*__LIB_5__::func_509*/;
			break;
		case 14:
			uParam0->f_11 = 752931/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 109:
			uParam0->f_56 = 752263/*__LIB_5__::func_508*/;
			break;
		case 8:
			uParam0->f_37 = 752255/*__LIB_0__::func_467*/;
			break;
		case 7:
			uParam0->f_36 = 752246/*__LIB_0__::func_114*/;
			break;
		case 79:
			*uParam0 = 752237/*__LIB_0__::func_114*/;
			break;
		case 13:
			uParam0->f_2 = 752175/*__LIB_9__::func_783*/;
			break;
		case 15:
			uParam0->f_2 = 752095/*__LIB_9__::func_788*/;
			break;
		case 16:
			uParam0->f_5 = 751726/*__LIB_6__::func_952*/;
			break;
		case 108:
			uParam0->f_55 = 751717/*__LIB_0__::func_114*/;
			break;
		case 17:
			uParam0->f_17 = 751706/*__LIB_3__::func_860*/;
			break;
		case 19:
			uParam0->f_17 = 751695/*__LIB_3__::func_860*/;
			break;
		case 20:
			uParam0->f_3 = 751686/*__LIB_0__::func_114*/;
			break;
		case 21:
			uParam0->f_3 = 751677/*__LIB_0__::func_114*/;
			break;
		case 74:
			uParam0->f_53 = 751655/*__LIB_4__::func_18*/;
			break;
		case 75:
			uParam0->f_4 = 751646/*__LIB_0__::func_114*/;
			break;
		case 22:
			uParam0->f_24 = 751634/*__LIB_4__::func_17*/;
			break;
		case 23:
			uParam0->f_26 = 751626/*__LIB_0__::func_467*/;
			break;
		case 26:
			uParam0->f_38 = 751618/*__LIB_0__::func_467*/;
			break;
		case 25:
			uParam0->f_23 = 751610/*__LIB_0__::func_467*/;
			break;
		case 27:
			uParam0->f_25 = 751602/*__LIB_0__::func_467*/;
			break;
		case 28:
			uParam0->f_24 = 751594/*__LIB_0__::func_467*/;
			break;
		case 30:
			uParam0->f_8 = 751559/*__LIB_5__::func_226*/;
			break;
		case 31:
			uParam0->f_39 = 751531/*__LIB_3__::func_775*/;
			break;
		case 33:
			uParam0->f_40 = 751461/*__LIB_6__::func_881*/;
			break;
		case 76:
			uParam0->f_13 = 751438/*__LIB_4__::func_16*/;
			break;
		case 34:
			uParam0->f_41 = 751342/*__LIB_4__::func_15*/;
			break;
		case 36:
			uParam0->f_58 = 751297/*__LIB_3__::func_667*/;
			break;
		case 35:
			uParam0->f_42 = 748784/*__LIB_5__::func_507*/;
			break;
		case 45:
			uParam0->f_14 = 748775/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 46:
			uParam0->f_14 = 748766/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 110:
			uParam0->f_57 = 748758/*__LIB_0__::func_467*/;
			break;
		case 77:
			uParam0->f_13 = 748747/*__LIB_3__::func_554*/;
			break;
		case 47:
			uParam0->f_43 = 748707/*__LIB_4__::func_13*/;
			break;
		case 48:
			uParam0->f_60 = 1;
			uParam0->f_44 = 748599/*__LIB_5__::func_802*/;
			break;
		case 49:
			uParam0->f_8 = 748590/*__LIB_0__::func_114*/;
			break;
		case 50:
			*uParam0 = 748387/*__LIB_6__::func_951*/;
			break;
		case 51:
			*uParam0 = 748378/*__LIB_0__::func_109*/;
			break;
		case 52:
			uParam0->f_15 = 748367/*__LIB_4__::func_12*/;
			break;
		case 53:
			uParam0->f_13 = 748344/*__LIB_4__::func_11*/;
			break;
		case 54:
			uParam0->f_45 = 748336/*__LIB_0__::func_467*/;
			break;
		case 56:
			uParam0->f_46 = 748327/*__LIB_3__::func_939*/;
			break;
		case 57:
			uParam0->f_11 = 748314/*__LIB_4__::func_10*/;
			break;
		case 58:
			uParam0->f_13 = 748272/*__LIB_4__::func_9*/;
			break;
		case 59:
			*uParam0 = 748263/*__LIB_0__::func_114*/;
			break;
		case 60:
			*uParam0 = 748254/*__LIB_0__::func_109*/;
			break;
		case 61:
			uParam0->f_15 = 748243/*__LIB_3__::func_647*/;
			break;
		case 62:
			uParam0->f_13 = 748232/*__LIB_3__::func_554*/;
			break;
		case 63:
			uParam0->f_11 = 748223/*__LIB_1__::func_804*/;
			break;
		case 64:
			uParam0->f_47 = 748215/*__LIB_0__::func_467*/;
			break;
		case 65:
			uParam0->f_21 = 748207/*__LIB_0__::func_467*/;
			break;
		case 66:
			uParam0->f_21 = 747974/*__LIB_4__::func_8*/;
			break;
		case 67:
			uParam0->f_21 = 747904/*__LIB_3__::func_757*/;
			break;
		case 68:
			*uParam0 = 747215/*__LIB_5__::func_215*/;
			break;
		case 69:
			*uParam0 = 747206/*__LIB_0__::func_114*/;
			break;
		case 70:
			uParam0->f_48 = 747194/*__LIB_3__::func_635*/;
			break;
		case 71:
			uParam0->f_49 = 747185/*__LIB_0__::func_114*/;
			break;
		case 107:
			uParam0->f_50 = 747173/*__LIB_3__::func_635*/;
			break;
		case 80:
			uParam0->f_7 = 747164/*__LIB_0__::func_114*/;
			break;
		case 84:
			uParam0->f_1 = 747155/*__LIB_0__::func_109*/;
			break;
		case 85:
			uParam0->f_1 = 747146/*__LIB_0__::func_109*/;
			break;
		case 87:
			uParam0->f_1 = 747137/*__LIB_0__::func_109*/;
			break;
		case 88:
			uParam0->f_1 = 747128/*__LIB_0__::func_109*/;
			break;
		case 89:
			uParam0->f_54 = 747120/*__LIB_0__::func_467*/;
			break;
		case 96:
			uParam0->f_1 = 747111/*__LIB_0__::func_114*/;
			break;
		case 97:
			uParam0->f_1 = 747102/*__LIB_0__::func_109*/;
			break;
		case 98:
			uParam0->f_1 = 747093/*__LIB_0__::func_109*/;
			break;
		case 100:
			uParam0->f_22 = 747085/*__LIB_0__::func_467*/;
			break;
		case 101:
			uParam0->f_22 = 747077/*__LIB_0__::func_467*/;
			break;
		case 112:
			uParam0->f_13 = 747065/*__LIB_5__::func_214*/;
			break;
		case 113:
			uParam0->f_3 = 747056/*__LIB_0__::func_114*/;
			break;
		case 114:
			uParam0->f_16 = 338712/*__LIB_5__::func_451*/;
			break;
		case 115:
			uParam0->f_3 = 747047/*__LIB_0__::func_114*/;
			break;
		case 116:
			*uParam0 = 747038/*__LIB_0__::func_114*/;
			break;
		case 117:
			uParam0->f_16 = 392737/*__LIB_3__::func_800*/;
			break;
		case 78:
			uParam0->f_59 = 747030/*__LIB_0__::func_467*/;
			break;
		case 124:
			uParam0->f_1 = 747021/*__LIB_0__::func_109*/;
			break;
		case 125:
			uParam0->f_19 = 747013/*__LIB_0__::func_467*/;
			break;
	}
}

void func_844(var uParam0, int iParam1)//Position - 0x1777C7
{
	switch (iParam1)
	{
		case 0:
			*uParam0 = 1565819/*__LIB_0__::func_109*/;
			break;
		case 1:
			uParam0->f_30 = 1565673/*__LIB_5__::func_822*/;
			break;
		case 2:
			uParam0->f_31 = 1560485/*__LIB_6__::func_348*/;
			break;
		case 3:
			uParam0->f_34 = 1560456/*__LIB_4__::func_780*/;
			break;
		case 4:
			uParam0->f_12 = 1560046/*__LIB_5__::func_692*/;
			break;
		case 6:
			uParam0->f_32 = 1559876/*__LIB_5__::func_821*/;
			break;
		case 111:
			uParam0->f_35 = 1559481/*__LIB_5__::func_691*/;
			break;
		case 79:
			*uParam0 = 1559457/*__LIB_5__::func_265*/;
			break;
		case 11:
			uParam0->f_11 = 1559448/*__LIB_0__::func_109*/;
			break;
		case 12:
			uParam0->f_33 = 1559353/*__LIB_5__::func_690*/;
			break;
		case 14:
			uParam0->f_11 = 1559344/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 109:
			uParam0->f_56 = 1559336/*__LIB_0__::func_467*/;
			break;
		case 13:
			uParam0->f_2 = 1559327/*__LIB_0__::func_114*/;
			break;
		case 15:
			uParam0->f_2 = 1559042/*__LIB_10__::func_63*/;
			break;
		case 75:
			uParam0->f_4 = 1559033/*__LIB_0__::func_114*/;
			break;
		case 16:
			uParam0->f_5 = 1558945/*__LIB_7__::func_42*/;
			break;
		case 108:
			uParam0->f_55 = 1558936/*__LIB_0__::func_114*/;
			break;
		case 17:
			uParam0->f_17 = 1558683/*__LIB_7__::func_825*/;
			break;
		case 19:
			uParam0->f_17 = 1558657/*__LIB_6__::func_22*/;
			break;
		case 20:
			uParam0->f_3 = 1558648/*__LIB_0__::func_114*/;
			break;
		case 21:
			uParam0->f_3 = 1558639/*__LIB_0__::func_114*/;
			break;
		case 74:
			uParam0->f_53 = 1558630/*__LIB_0__::func_114*/;
			break;
		case 22:
			uParam0->f_24 = 1558622/*__LIB_0__::func_467*/;
			break;
		case 25:
			uParam0->f_23 = 1558614/*__LIB_0__::func_467*/;
			break;
		case 30:
			uParam0->f_8 = 1558491/*__LIB_7__::func_863*/;
			break;
		case 31:
			uParam0->f_39 = 1558245/*__LIB_7__::func_824*/;
			break;
		case 33:
			uParam0->f_40 = 1557989/*__LIB_6__::func_347*/;
			break;
		case 34:
			uParam0->f_41 = 1555835/*__LIB_5__::func_936*/;
			break;
		case 36:
			uParam0->f_58 = 1555790/*__LIB_3__::func_667*/;
			break;
		case 35:
			uParam0->f_42 = 1541342/*__LIB_4__::func_838*/;
			break;
		case 45:
			uParam0->f_14 = 1541333/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 46:
			uParam0->f_14 = 1541324/*__LIB_0__::getMinusOneOrNull*/;
			break;
		case 110:
			uParam0->f_57 = 1541316/*__LIB_0__::func_467*/;
			break;
		case 77:
			uParam0->f_13 = 1541305/*__LIB_3__::func_554*/;
			break;
		case 47:
			uParam0->f_43 = 1541253/*__LIB_4__::func_837*/;
			break;
		case 49:
			uParam0->f_8 = 1541221/*__LIB_4__::func_771*/;
			break;
		case 50:
			*uParam0 = 1541092/*__LIB_7__::func_41*/;
			break;
		case 51:
			*uParam0 = 1541068/*__LIB_6__::func_899*/;
			break;
		case 52:
			uParam0->f_15 = 1541057/*__LIB_4__::func_270*/;
			break;
		case 53:
			uParam0->f_13 = 1540406/*__LIB_5__::func_689*/;
			break;
		case 54:
			uParam0->f_45 = 1539721/*__LIB_7__::func_862*/;
			break;
		case 56:
			uParam0->f_46 = 1539712/*__LIB_3__::func_939*/;
			break;
		case 57:
			uParam0->f_11 = 1539645/*__LIB_6__::func_779*/;
			break;
		case 58:
			uParam0->f_13 = 1539631/*__LIB_6__::func_21*/;
			break;
		case 64:
			uParam0->f_47 = 1539252/*__LIB_5__::func_387*/;
			break;
		case 65:
			uParam0->f_21 = 1539177/*__LIB_5__::func_687*/;
			break;
		case 66:
			uParam0->f_21 = 1539126/*__LIB_4__::func_835*/;
			break;
		case 67:
			uParam0->f_21 = 1539108/*__LIB_4__::func_766*/;
			break;
		case 68:
			*uParam0 = 1539099/*__LIB_0__::func_109*/;
			break;
		case 69:
			*uParam0 = 1539090/*__LIB_0__::func_109*/;
			break;
		case 70:
			uParam0->f_48 = 1538973/*__LIB_4__::func_834*/;
			break;
		case 71:
			uParam0->f_49 = 1538964/*__LIB_0__::func_114*/;
			break;
		case 107:
			uParam0->f_50 = 1538952/*__LIB_3__::func_635*/;
			break;
		case 80:
			uParam0->f_7 = 1538943/*__LIB_0__::func_114*/;
			break;
		case 78:
			uParam0->f_59 = 1538935/*__LIB_0__::func_467*/;
			break;
	}
}

void func_845(bool bParam0, bool bParam1)//Position - 0x18CC99
{
	if (bParam1)
	{
		MISC::CLEAR_BIT(&(Global_1941652.f_1), 13);
		__LIB_10__::func_963(bParam0, 0);
	}
	__LIB_10__::func_844(0);
	__LIB_16__::func_246(66);
}

int func_846(var uParam0)//Position - 0x1937C3
{
	if (__LIB_10__::func_250(uParam0))
	{
		__LIB_16__::func_247(uParam0);
	}
	return 0;
}

int func_847(var uParam0)//Position - 0x1938CC
{
	if (BitTest(uParam0->f_47, 2))
	{
	}
	else if (__LIB_10__::func_250(uParam0))
	{
		__LIB_16__::func_248(uParam0);
	}
	__LIB_10__::func_923(&(uParam0->f_47));
	return 0;
}

int func_848(var uParam0, int iParam1, var uParam2, bool bParam3, bool bParam4, bool bParam5)//Position - 0x19A0E5
{
	int iVar0;
	var uVar1;
	int iVar2;
	int iVar3;
	iVar2 = -1;
	iVar3 = -1;
	if (bParam5)
	{
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_4()))
		{
			if (__LIB_11__::func_782(&(uParam0->f_47), &iVar2, &iVar0, __LIB_1__::func_4()))
			{
				if (__LIB_16__::func_249(uParam0, iVar2, &uVar1, bParam3, bParam4))
				{
					*iParam1 = iVar2;
					*uParam2 = uVar1;
					return 1;
				}
			}
		}
		if (ENTITY::DOES_ENTITY_EXIST(__LIB_1__::func_711()))
		{
			if (__LIB_11__::func_782(&(uParam0->f_47), &iVar3, &iVar0, __LIB_1__::func_711()))
			{
				if (__LIB_16__::func_249(uParam0, iVar3, &uVar1, bParam3, bParam4))
				{
					*iParam1 = iVar3;
					*uParam2 = uVar1;
					return 1;
				}
			}
		}
	}
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (iVar0 != iVar2 && iVar0 != iVar3)
		{
			if (__LIB_16__::func_249(uParam0, iVar0, &uVar1, bParam3, bParam4))
			{
				*iParam1 = iVar0;
				*uParam2 = uVar1;
				return 1;
			}
		}
		iVar0++;
	}
	if ((__LIB_1__::func_838(PLAYER::PLAYER_ID(), 2) || __LIB_1__::func_838(PLAYER::PLAYER_ID(), 8)) || (__LIB_1__::func_838(PLAYER::PLAYER_ID(), 0) && __LIB_13__::func_570()))
	{
		if (!__LIB_0__::func_864(&(uParam0->f_2249)))
		{
			__LIB_0__::func_795(&(uParam0->f_2249), 0, 0);
			return 1;
		}
		else if (__LIB_0__::func_937(&(uParam0->f_2249), 5000, 0))
		{
			return 0;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}

void func_849(var uParam0)//Position - 0x1B3635
{
	struct<14> Var0;
	__LIB_16__::func_250(uParam0);
	__LIB_9__::func_819(&(uParam0->f_1), 0);
	__LIB_7__::func_694(&(uParam0->f_1), 2);
	NETWORK::NETWORK_SET_IN_FREE_CAM_MODE(true);
	if (!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
	{
		if (uParam0->f_1.f_35 == 3)
		{
		}
		else if (__LIB_1__::func_826(PLAYER::PLAYER_ID()) || BitTest(Global_2815059.f_4660, 31))
		{
			NETWORK::NETWORK_SET_NO_SPECTATOR_CHAT(false);
		}
		else if (__LIB_1__::func_448(PLAYER::PLAYER_ID()) == 3 || Global_1574962)
		{
			NETWORK::NETWORK_SET_IGNORE_SPECTATOR_CHAT_LIMITS_SAME_TEAM(true);
		}
	}
	__LIB_10__::func_352(&(uParam0->f_1.f_7), 0);
	__LIB_10__::func_545();
	if ((((!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) && uParam0->f_1.f_35 != 3) && uParam0->f_1.f_35 != 5) && uParam0->f_1.f_35 != 4) && (!__LIB_1__::func_826(PLAYER::PLAYER_ID()) || __LIB_1__::func_201(PLAYER::PLAYER_ID())))
	{
		if ((__LIB_1__::func_448(PLAYER::PLAYER_ID()) != 3 || PLAYER::IS_PLAYER_DEAD(PLAYER::PLAYER_ID())) || __LIB_1__::func_201(PLAYER::PLAYER_ID()))
		{
			Var0.f_2 = -2131157870;
			__LIB_1__::func_634(Var0, __LIB_4__::func_970(0));
		}
	}
	MISC::SET_BIT(&(uParam0->f_47), 2);
	HUD::CLEAR_GPS_PLAYER_WAYPOINT();
	HUD::DELETE_WAYPOINTS_FROM_THIS_PLAYER();
	HUD::SET_WAYPOINT_OFF();
	HUD::SET_MINIMAP_BLOCK_WAYPOINT(true);
	MISC::CLEAR_BIT(&Global_2621446, 6);
	MISC::CLEAR_BIT(&Global_2621446, 14);
	__LIB_10__::func_369(&(uParam0->f_1));
	MISC::CLEAR_BIT(&Global_2621446, 13);
	__LIB_10__::func_205();
	if (__LIB_2__::func_660())
	{
		if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
		{
			NETWORK::NETWORK_SET_NO_SPECTATOR_CHAT(true);
			NETWORK::NETWORK_SET_TALKER_PROXIMITY(0f);
		}
	}
	else if (!__LIB_10__::func_337())
	{
		if (!(__LIB_1__::func_826(PLAYER::PLAYER_ID()) || BitTest(Global_2815059.f_4660, 31)) || __LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
		{
			NETWORK::NETWORK_SET_NO_SPECTATOR_CHAT(true);
			NETWORK::NETWORK_SET_TALKER_PROXIMITY(0f);
		}
	}
	Global_1836146 = 1;
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) && !__LIB_10__::func_227())
	{
		PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 0, false);
	}
	if (!__LIB_10__::func_227())
	{
		PLAYER::SET_MAX_WANTED_LEVEL(0);
		PLAYER::SET_PLAYER_LEAVE_PED_BEHIND(PLAYER::PLAYER_ID(), false);
	}
	MISC::SET_BIT(&(uParam0->f_1), 1);
}

void func_850(var uParam0, int iParam1)//Position - 0x17E484
{
	switch (iParam1)
	{
		case 96:
			uParam0->f_1 = 1566286/*__LIB_0__::func_114*/;
			break;
		case 97:
			uParam0->f_1 = 1566277/*__LIB_0__::func_109*/;
			break;
		case 98:
			uParam0->f_1 = 1566268/*__LIB_0__::func_109*/;
			break;
		case 99:
			uParam0->f_1 = 1566108/*__LIB_5__::func_390*/;
			break;
		case 100:
			uParam0->f_22 = 1566100/*__LIB_0__::func_467*/;
			break;
		case 101:
			uParam0->f_22 = 1565945/*__LIB_8__::func_991*/;
			break;
	}
}

void func_851(var uParam0, int iParam1)//Position - 0x17E657
{
	switch (iParam1)
	{
		case 90:
			uParam0->f_1 = 1566503/*__LIB_0__::func_114*/;
			break;
		case 91:
			uParam0->f_1 = 1566494/*__LIB_0__::func_109*/;
			break;
		case 92:
			uParam0->f_1 = 1566485/*__LIB_0__::func_109*/;
			break;
		case 93:
			uParam0->f_1 = 1566108/*__LIB_5__::func_390*/;
			break;
		case 94:
			uParam0->f_1 = 1566476/*__LIB_0__::func_109*/;
			break;
		case 95:
			uParam0->f_22 = 1566412/*__LIB_8__::func_991*/;
			break;
	}
}

void func_852(var uParam0, int iParam1)//Position - 0x17E730
{
	switch (iParam1)
	{
		case 84:
			uParam0->f_1 = 1566730/*__LIB_0__::func_109*/;
			break;
		case 85:
			uParam0->f_1 = 1566721/*__LIB_0__::func_109*/;
			break;
		case 86:
			uParam0->f_1 = 1566108/*__LIB_5__::func_390*/;
			break;
		case 87:
			uParam0->f_1 = 1566712/*__LIB_0__::func_109*/;
			break;
		case 89:
			uParam0->f_54 = 1566612/*__LIB_8__::func_992*/;
			break;
	}
}

void func_853(var uParam0, int iParam1, struct<3> Param2, int iParam3)//Position - 0x18C632
{
	bool bVar0;
	struct<3> Var1;
	if (__LIB_10__::func_328(Param2.f_0))
	{
		bVar0 = true;
	}
	else if (iParam1 != 0)
	{
		switch (iParam1)
		{
			case 1:
				uParam0->f_47.f_1063[iParam3 /*3*/] = { Var1 };
				break;
			case 2:
				uParam0->f_47.f_1160[iParam3 /*3*/] = { Var1 };
				break;
			case 3:
				uParam0->f_47.f_1257[iParam3 /*3*/] = { Var1 };
				break;
			case 4:
				uParam0->f_47.f_1354[iParam3 /*3*/] = { Var1 };
				break;
			}
	}
	if (ENTITY::DOES_ENTITY_EXIST(Param2.f_0))
	{
		if (!__LIB_10__::func_220() && PED::IS_PED_A_PLAYER(Param2.f_0))
		{
			if (__LIB_10__::func_219(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(Param2.f_0)))
			{
				bVar0 = false;
			}
		}
		if (!__LIB_10__::func_218() && ENTITY::IS_ENTITY_DEAD(Param2.f_0, false))
		{
			bVar0 = false;
		}
	}
	if (bVar0)
	{
		__LIB_16__::func_251(uParam0, iParam1, Param2);
	}
}

int func_854(var uParam0)//Position - 0x192DC2
{
	if (__LIB_10__::func_250(uParam0))
	{
		__LIB_16__::func_253(uParam0);
	}
	if (BitTest(uParam0->f_47, 13))
	{
		if (BitTest(uParam0->f_47, 14))
		{
			MISC::SET_BIT(&(uParam0->f_47), 6);
			__LIB_10__::func_265(&(uParam0->f_47), uParam0->f_47.f_1456);
			MISC::CLEAR_BIT(&(uParam0->f_47), 13);
			MISC::CLEAR_BIT(&(uParam0->f_47), 14);
		}
	}
	return 0;
}

int func_855(var uParam0, int iParam1, var uParam2)//Position - 0x5D8
{
	int iVar0;
	switch (iParam1)
	{
		case 0:
		case 1:
		case 2:
			if ((((((Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 0 || __LIB_7__::func_685(uParam2->f_31)) || __LIB_6__::func_846(PLAYER::PLAYER_ID())) || __LIB_4__::func_955(PLAYER::PLAYER_ID())) || uParam0->f_2481) || uParam0->f_2482) || uParam0->f_2483)
			{
				return 0;
			}
			iVar0 = iParam1;
			if (iVar0 < 3)
			{
				if (uParam2->f_38[iVar0 /*27*/].f_26 != 0)
				{
					if ((uParam2->f_1922[iVar0 /*9*/] != 0f && uParam2->f_1922[iVar0 /*9*/].f_1 != 0f) && uParam2->f_1922[iVar0 /*9*/].f_2 != 0f)
					{
						return 1;
					}
				}
			}
			break;
		case 3:
			if (((((((Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 0 || __LIB_7__::func_685(uParam2->f_31)) || __LIB_0__::func_845(uParam2->f_31, -1)) || __LIB_6__::func_846(PLAYER::PLAYER_ID())) || __LIB_4__::func_955(PLAYER::PLAYER_ID())) || uParam0->f_2481) || uParam0->f_2482) || uParam0->f_2483)
			{
				return 0;
			}
			if (uParam2->f_33 != 0)
			{
				return 1;
			}
			break;
		case 4:
			if (uParam0->f_2481 && !BitTest(*uParam0, 31))
			{
				return 0;
			}
			if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 0)
			{
				return 0;
			}
			if (__LIB_16__::func_254(5))
			{
				return 1;
			}
			break;
		case 5:
			if (uParam0->f_2481 && !BitTest(*uParam0, 31))
			{
				return 0;
			}
			if (Global_1853348[PLAYER::PLAYER_ID() /*834*/] == 0)
			{
				return 0;
			}
			if (!__LIB_16__::func_254(3))
			{
				return 0;
			}
			if (Global_1835502.f_385)
			{
				return 1;
			}
			break;
		case 6:
		case 7:
			return 1;
		case 8:
			if (uParam0->f_2482)
			{
				return 1;
			}
			break;
	}
	return 0;
}

int func_856(var uParam0)//Position - 0x1BCE7D
{
	int iVar0;
	iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, __LIB_17__::func_840(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 1)
	{
		if (__LIB_1__::func_394())
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
		else if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	if (uParam0->f_1.f_1 == 3)
	{
		if (uParam0->f_9 >= 118 && uParam0->f_9 <= 122)
		{
			iVar0 = 2;
		}
	}
	if (uParam0->f_1.f_1 == 2)
	{
		iVar0 = MISC::GET_RANDOM_INT_IN_RANGE(0, 4);
		if (iVar0 >= 1)
		{
			iVar0++;
		}
	}
	return iVar0;
}

int func_857(var uParam0)//Position - 0x1BC096
{
	int iVar0;
	iVar0 = (uParam0->f_1.f_2 + 1 % __LIB_17__::func_840(uParam0->f_1.f_1));
	if (uParam0->f_1.f_1 == 2 || uParam0->f_1.f_1 == 3)
	{
		return uParam0->f_1.f_2;
	}
	if (__LIB_1__::func_394())
	{
		if (uParam0->f_1.f_1 == 1)
		{
			if (iVar0 == 0 || iVar0 == 4)
			{
				iVar0 = 1;
			}
		}
	}
	else if (uParam0->f_1.f_1 == 1)
	{
		if (iVar0 == 1 || iVar0 == 2)
		{
			iVar0 = 3;
		}
	}
	return iVar0;
}

void func_858(var uParam0)//Position - 0x1BC5D3
{
	char* sVar0;
	uParam0->f_8 = NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(__LIB_14__::func_636(uParam0), __LIB_14__::func_648(uParam0), 2, true, false, 1f, 0f, 1.12f);
	__LIB_17__::func_841(uParam0, &sVar0);
	NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(PLAYER::PLAYER_PED_ID(), uParam0->f_8, &sVar0, "exit", 4f, -4f, 9, 0, 1000f, 0);
	NETWORK::NETWORK_START_SYNCHRONISED_SCENE(uParam0->f_8);
	__LIB_3__::func_122(&(uParam0->f_6));
	__LIB_14__::func_644(uParam0, 8);
}

void func_859(var uParam0, int iParam1)//Position - 0x18CB92
{
	MISC::CLEAR_BIT(&(uParam0->f_1), 4);
	MISC::CLEAR_BIT(&Global_2621446, 3);
	if (BitTest(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197, 28))
	{
		MISC::CLEAR_BIT(&(Global_2689235[PLAYER::PLAYER_ID() /*453*/].f_197), 28);
	}
	NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(false);
	__LIB_11__::func_777();
	if (GRAPHICS::GET_USINGNIGHTVISION() && !__LIB_2__::func_311(Global_4718592.f_116524))
	{
		GRAPHICS::SET_NIGHTVISION(false);
		__LIB_10__::func_845(0);
	}
	if (((!__LIB_4__::func_976(PLAYER::PLAYER_ID(), 1) || uParam0->f_1.f_35 == 3) || uParam0->f_1.f_35 == 5) || uParam0->f_1.f_35 == 4)
	{
		__LIB_2__::func_346(PLAYER::PLAYER_ID(), 0);
	}
	uParam0->f_1.f_2 = iParam1;
	if (BitTest(uParam0->f_1.f_2, 6))
	{
		__LIB_2__::func_592(0, 0);
	}
	if (BitTest(uParam0->f_1.f_2, 4))
	{
		__LIB_10__::func_892(uParam0, 1);
	}
	__LIB_2__::func_329(0);
	if (!__LIB_10__::func_201())
	{
		__LIB_10__::func_200();
	}
	GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("GTAOlogo");
	__LIB_10__::func_199(0);
	if (__LIB_0__::func_628() == 65)
	{
		__LIB_17__::func_845(0, 0);
	}
}

void func_860(var uParam0, var uParam1, var uParam2, bool bParam3)//Position - 0x2168
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (bParam3)
	{
		iVar0 = uParam1->f_21;
	}
	else
	{
		iVar0 = uParam1->f_20;
	}
	iVar1 = iVar0;
	iVar2 = -1;
	iVar3 = 0;
	while (iVar3 == 0)
	{
		iVar1++;
		if (iVar1 >= 9)
		{
			iVar1 = 0;
		}
		if (iVar1 == iVar0)
		{
			iVar3 = 1;
		}
		else if (__LIB_17__::func_855(uParam0, iVar1, uParam2))
		{
			iVar2 = iVar1;
			iVar3 = 1;
		}
	}
	if (iVar2 != -1)
	{
		__LIB_10__::func_764(uParam1, iVar2, bParam3);
	}
}

void func_861(var uParam0, int iParam1)//Position - 0x18BDAD
{
	int iVar0;
	struct<3> Var1;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 5)
	{
		if (iParam1 <= 0 && iVar0 <= 0)
		{
			__LIB_11__::func_776(uParam0);
		}
		switch (iVar0)
		{
			case 0:
				if (__LIB_1__::func_693(PLAYER::INT_TO_PLAYERINDEX(iParam1), 0, 1))
				{
					if (__LIB_10__::func_332())
					{
						if (__LIB_16__::func_220(PLAYER::PLAYER_ID()))
						{
							if (__LIB_13__::func_558(PLAYER::INT_TO_PLAYERINDEX(iParam1)))
							{
								if (__LIB_2__::func_50())
								{
									if (__LIB_2__::func_759(PLAYER::INT_TO_PLAYERINDEX(iParam1), PLAYER::PLAYER_ID(), 0))
									{
										Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
										__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
									}
								}
								else if (__LIB_2__::func_759(PLAYER::INT_TO_PLAYERINDEX(iParam1), __LIB_0__::func_797(), 1))
								{
									if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
									{
										Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
										__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
									}
								}
							}
						}
						else if (__LIB_1__::func_17(PLAYER::PLAYER_ID()))
						{
							if (__LIB_1__::func_386(PLAYER::INT_TO_PLAYERINDEX(iParam1), __LIB_1__::func_592(PLAYER::PLAYER_ID())))
							{
								if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
								{
									Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
									__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
								}
							}
						}
						else if (PLAYER::PLAYER_ID() != PLAYER::INT_TO_PLAYERINDEX(iParam1))
						{
							Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
							__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
						}
					}
					else
					{
						Var1.f_0 = PLAYER::GET_PLAYER_PED(PLAYER::INT_TO_PLAYERINDEX(iParam1));
						__LIB_17__::func_853(uParam0, iVar0, Var1, iParam1);
					}
				}
				break;
			case 1:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1063[iParam1 /*3*/], iParam1);
				break;
			case 2:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1160[iParam1 /*3*/], iParam1);
				break;
			case 3:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1257[iParam1 /*3*/], iParam1);
				break;
			case 4:
				__LIB_17__::func_853(uParam0, iVar0, uParam0->f_47.f_1354[iParam1 /*3*/], iParam1);
				break;
		}
		if (iParam1 >= 31 && iVar0 >= 4)
		{
			__LIB_13__::func_565(uParam0);
		}
		iVar0++;
	}
}

void func_862(var uParam0)//Position - 0x1902BD
{
	if ((((!__LIB_0__::func_194(8, -1) && !HUD::IS_PAUSE_MENU_ACTIVE()) && !STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) && !__LIB_10__::func_298()) && !__LIB_0__::func_983())
	{
		if (BitTest(uParam0->f_47, 0) || __LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
		{
			if (uParam0->f_1.f_36 != 6)
			{
				__LIB_15__::func_500(uParam0);
				__LIB_10__::func_857(&(uParam0->f_47));
				__LIB_15__::func_182(uParam0);
			}
		}
		if (BitTest(uParam0->f_47, 0) || __LIB_0__::func_361(PLAYER::PLAYER_ID(), 0))
		{
			if (!__LIB_10__::func_271() && __LIB_10__::func_270())
			{
				__LIB_10__::func_269(1);
			}
			if (!__LIB_10__::func_207())
			{
				__LIB_1__::func_733();
			}
			HUD::DISPLAY_AMMO_THIS_FRAME(false);
			HUD::HUD_FORCE_WEAPON_WHEEL(false);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(19);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(2);
			HUD::HIDE_HUD_COMPONENT_THIS_FRAME(10);
			__LIB_15__::func_167(uParam0);
			__LIB_0__::func_189();
			HUD::THEFEED_SET_SCRIPTED_MENU_HEIGHT(0.466664f);
			if ((__LIB_5__::func_839(&(uParam0->f_1)) != 3 && __LIB_5__::func_839(&(uParam0->f_1)) != 5) && __LIB_5__::func_839(&(uParam0->f_1)) != 4)
			{
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(3);
				HUD::HIDE_HUD_COMPONENT_THIS_FRAME(4);
				__LIB_1__::func_33(0);
			}
			HUD::DISPLAY_HUD_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME();
			if ((!__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || __LIB_10__::func_388() == 1) || __LIB_10__::func_388() == 2)
			{
				if (__LIB_10__::func_268(&(uParam0->f_47)) != 5)
				{
					if (__LIB_10__::func_268(&(uParam0->f_47)) != 3)
					{
						uParam0->f_47.f_1456 = __LIB_10__::func_268(&(uParam0->f_47));
					}
					uParam0->f_47.f_1457 = __LIB_10__::func_268(&(uParam0->f_47));
				}
				if (__LIB_10__::func_268(&(uParam0->f_47)) == 0)
				{
					if (__LIB_7__::func_715(0, &(uParam0->f_47.f_1473), 1))
					{
						if (__LIB_16__::func_223(uParam0))
						{
							if (__LIB_10__::func_267(&(uParam0->f_47)) >= uParam0->f_47.f_1460 || __LIB_10__::func_267(&(uParam0->f_47)) > uParam0->f_47.f_1461)
							{
								__LIB_10__::func_266(&(uParam0->f_47), 0);
							}
							__LIB_10__::func_265(&(uParam0->f_47), 1);
						}
					}
				}
				else if ((Global_2824886 || Global_4718592 != 0) || !NETWORK::NETWORK_IS_ACTIVITY_SESSION())
				{
					if (BitTest(uParam0->f_47, 0) || (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) && (__LIB_10__::func_388() == 2 || __LIB_10__::func_388() == 1)))
					{
						if (!__LIB_13__::func_578())
						{
							__LIB_15__::func_195(uParam0, __LIB_10__::func_268(&(uParam0->f_47)));
						}
						switch (__LIB_10__::func_268(&(uParam0->f_47)))
						{
							case 1:
							case 4:
								if (__LIB_15__::func_172())
								{
									__LIB_10__::func_265(&(uParam0->f_47), 6);
								}
								__LIB_17__::func_847(uParam0);
								break;
							case 2:
								__LIB_17__::func_846(uParam0);
								break;
							case 3:
								__LIB_17__::func_854(uParam0);
								break;
							case 5:
								__LIB_16__::func_252(uParam0);
								break;
							case 6:
								if (__LIB_15__::func_172())
								{
									__LIB_10__::func_265(&(uParam0->f_47), 1);
								}
								if (!__LIB_13__::func_577())
								{
									__LIB_10__::func_265(&(uParam0->f_47), 1);
								}
								break;
						}
						__LIB_10__::func_245(__LIB_10__::func_268(&(uParam0->f_47)) == 6);
						if ((uParam0->f_1.f_4 || uParam0->f_1.f_3 > 2) && !BitTest(Global_2621446, 28))
						{
							__LIB_16__::func_221(uParam0, __LIB_10__::func_268(&(uParam0->f_47)));
						}
						if (BitTest(uParam0->f_47, 15))
						{
							if (BitTest(Global_1965451, 1) || !__LIB_0__::func_625())
							{
								if (__LIB_0__::func_937(&(uParam0->f_47.f_2186), 500, 0))
								{
									if (!CAM::IS_SCREEN_FADED_IN() && !CAM::IS_SCREEN_FADING_IN())
									{
										if (__LIB_0__::func_361(PLAYER::PLAYER_ID(), 0) || !__LIB_0__::func_625())
										{
											CAM::DO_SCREEN_FADE_IN(250);
										}
										GRAPHICS::ANIMPOSTFX_STOP_ALL();
										__LIB_2__::func_66(1);
									}
									MISC::CLEAR_BIT(&(uParam0->f_47), 15);
								}
							}
						}
					}
				}
				__LIB_10__::func_915(uParam0);
			}
		}
	}
	else
	{
		if (__LIB_10__::func_298())
		{
			HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
		}
		if (uParam0->f_47.f_1469 > 0 && uParam0->f_47.f_1469 < 99)
		{
			__LIB_15__::func_500(uParam0);
		}
	}
}

void func_863(var uParam0, int* iParam1, var uParam2, bool bParam3)//Position - 0x5A0
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (bParam3)
	{
		iVar0 = iParam1->f_21;
	}
	else
	{
		iVar0 = iParam1->f_20;
	}
	iVar1 = iVar0;
	iVar2 = -1;
	iVar3 = 0;
	while (iVar3 == 0)
	{
		iVar1 = (iVar1 - 1);
		if (iVar1 < 0)
		{
			iVar1 = 8;
		}
		if (iVar1 == iVar0)
		{
			iVar3 = 1;
		}
		else if (__LIB_17__::func_855(uParam0, iVar1, uParam2))
		{
			iVar2 = iVar1;
			iVar3 = 1;
		}
	}
	if (iVar2 != -1)
	{
		__LIB_10__::func_764(iParam1, iVar2, bParam3);
	}
}

void func_864()//Position - 0x13B
{
	Global_100480 = 1;
}

void func_865(int iParam0, char* sParam1)//Position - 0x1112
{
	char cVar0[64];
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	IntToString(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/], 64);
	StringIntConCat(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_1, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_2, 64);
	StringIntConCat(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_3, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_4, 64);
	StringIntConCat(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_5, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_6, 64);
	StringIntConCat(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_7, 64);
	StringIntConCat(&cVar0, Global_78588.f_4824[Global_78588.f_6825[iParam0 /*3*/].f_2 /*11*/].f_8, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
}

void func_866(int iParam0, char* sParam1)//Position - 0x1255
{
	char cVar0[64];
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	MemCopy(&cVar0, {Global_78588.f_4160[Global_78588.f_6825[iParam0 /*3*/].f_2 /*12*/]}, 16);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_4160[Global_78588.f_6825[iParam0 /*3*/].f_2 /*12*/].f_8, 64);
	StringIntConCat(&cVar0, Global_78588.f_4160[Global_78588.f_6825[iParam0 /*3*/].f_2 /*12*/].f_9, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_4160[Global_78588.f_6825[iParam0 /*3*/].f_2 /*12*/].f_10, 64);
	StringIntConCat(&cVar0, Global_78588.f_4160[Global_78588.f_6825[iParam0 /*3*/].f_2 /*12*/].f_11, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
}

void func_867(int iParam0, char* sParam1)//Position - 0x1323
{
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	StringConCat(sParam1, &(Global_78588.f_4151[Global_78588.f_6825[iParam0 /*3*/].f_2 /*8*/]), 64);
}

void func_868(int iParam0, char* sParam1)//Position - 0x135E
{
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	StringIntConCat(sParam1, Global_78588.f_3590[Global_78588.f_6825[iParam0 /*3*/].f_2 /*2*/], 64);
	StringIntConCat(sParam1, Global_78588.f_3590[Global_78588.f_6825[iParam0 /*3*/].f_2 /*2*/].f_1, 64);
}

void func_869(int iParam0, char* sParam1)//Position - 0x13B5
{
	char cVar0[64];
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	IntToString(&cVar0, Global_78588.f_109[Global_78588.f_6825[iParam0 /*3*/].f_2 /*4*/], 64);
	StringIntConCat(&cVar0, Global_78588.f_109[Global_78588.f_6825[iParam0 /*3*/].f_2 /*4*/].f_1, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_109[Global_78588.f_6825[iParam0 /*3*/].f_2 /*4*/].f_2, 64);
	StringIntConCat(&cVar0, Global_78588.f_109[Global_78588.f_6825[iParam0 /*3*/].f_2 /*4*/].f_3, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
}

void func_870(int iParam0, char* sParam1)//Position - 0x1454
{
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	StringIntConCat(sParam1, Global_78588.f_6825[iParam0 /*3*/].f_2, 64);
}

void func_871(int iParam0, char* sParam1)//Position - 0x1486
{
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
}

int func_872(int iParam0)//Position - 0x1BF0F
{
	switch (iParam0)
	{
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
		case 14:
		case 17:
		case 22:
		case 21:
		case 113:
		case 162:
		case 163:
		case 177:
		case 188:
		case 199:
		case 200:
		case 215:
		case 257:
		case 253:
			return 1;
		case 20:
		case 19:
		case 15:
		case 16:
		case 164:
		case 185:
		case 187:
		case 217:
		case 243:
		case 244:
		case 254:
			return 3;
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
		case 32:
		case 102:
		case 173:
		case 201:
		case 224:
		case 258:
		case 533:
		case 525:
			return 2;
		default:
	}
	return 0;
}

void func_873(int iParam0, int iParam1)//Position - 0x1C5A0
{
	if (iParam1 < 0 || iParam1 > 24)
	{
		return;
	}
	*iParam0 = (*iParam0 - *iParam0 & 15872);
	*iParam0 = (*iParam0 || SYSTEM::SHIFT_LEFT(iParam1, 9));
}

void func_874(int iParam0, int iParam1)//Position - 0x1C5DA
{
	if (iParam1 < 0 || iParam1 >= 60)
	{
		return;
	}
	*iParam0 = (*iParam0 - *iParam0 & 1032192);
	*iParam0 = (*iParam0 || SYSTEM::SHIFT_LEFT(iParam1, 14));
}

void func_875(int iParam0, int iParam1)//Position - 0x1C615
{
	if (iParam1 < 0 || iParam1 >= 60)
	{
		return;
	}
	*iParam0 = (*iParam0 - *iParam0 & 66060288);
	*iParam0 = (*iParam0 || SYSTEM::SHIFT_LEFT(iParam1, 20));
}

int func_876(int iParam0)//Position - 0x2A529
{
	switch (iParam0)
	{
		case joaat("benson"):
		case joaat("bobcatxl"):
		case joaat("bullet"):
		case joaat("dominator"):
		case joaat("minivan"):
		case joaat("peyote"):
		case joaat("radi"):
		case joaat("sadler"):
		case joaat("sadler2"):
		case joaat("sandking"):
		case joaat("sandking2"):
		case joaat("speedo"):
		case joaat("speedo2"):
		case joaat("stanier"):
			return 3;
			break;
		case joaat("boxville"):
		case joaat("camper"):
		case joaat("pony"):
		case joaat("pony2"):
		case joaat("stockade"):
		case joaat("stockade3"):
		case joaat("tiptruck"):
			return 2;
			break;
		case joaat("fusilade"):
			return 6;
			break;
		case joaat("mule"):
		case joaat("mule2"):
		case joaat("penumbra"):
		case joaat("sanchez"):
		case joaat("sanchez2"):
			return 1;
			break;
		case joaat("bfinjection"):
		case joaat("dune"):
		case joaat("surfer"):
		case joaat("surfer2"):
			return 4;
			break;
		case joaat("barracks2"):
		case joaat("biff"):
		case joaat("bulldozer"):
		case joaat("cutter"):
		case joaat("dump"):
		case joaat("forklift"):
		case joaat("mixer"):
		case joaat("mixer2"):
			return 0;
			break;
		case joaat("oracle"):
		case joaat("oracle2"):
		case joaat("sentinel"):
		case joaat("sentinel2"):
		case joaat("zion"):
		case joaat("zion2"):
			return 7;
			break;
	}
	return 8;
}

int func_877()//Position - 0x2AF39
{
	int iVar0;
	iVar0 = (5 - 3);
	if (iVar0 >= 0 && iVar0 < 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96275[iVar0]))
		{
			return 0;
		}
	}
	return 1;
}

int func_878()//Position - 0x2AF6A
{
	int iVar0;
	iVar0 = (4 - 3);
	if (iVar0 >= 0 && iVar0 < 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96275[iVar0]))
		{
			return 0;
		}
	}
	return 1;
}

int func_879()//Position - 0x2AF9B
{
	int iVar0;
	iVar0 = (3 - 3);
	if (iVar0 >= 0 && iVar0 < 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96275[iVar0]))
		{
			return 0;
		}
	}
	return 1;
}

int func_880()//Position - 0x2AFCC
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[2]))
	{
		return 0;
	}
	return 1;
}

int func_881()//Position - 0x2AFE7
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[1]))
	{
		return 0;
	}
	return 1;
}

int func_882()//Position - 0x2B002
{
	if (ENTITY::DOES_ENTITY_EXIST(Global_97919[0]))
	{
		return 0;
	}
	return 1;
}

int func_883()//Position - 0x2B3F7
{
	int iVar0;
	if (SCRIPT::IS_THREAD_ACTIVE(Global_113386.f_18103.f_395))
	{
		return 0;
	}
	iVar0 = (3 - 3);
	if (iVar0 < 3)
	{
		if (ENTITY::DOES_ENTITY_EXIST(Global_96275[iVar0]))
		{
			return 0;
		}
	}
	return 1;
}

int func_884()//Position - 0x2B433
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 < Global_113386.f_7688.f_136)
	{
		if (Global_113386.f_7688[iVar0 /*15*/] == joaat("CALL_PATRICIA_1"))
		{
			return 0;
		}
		iVar0++;
	}
	return 1;
}

var func_885()//Position - 0x2B46D
{
	return BitTest(Global_113386.f_18574[26 /*6*/], 3);
}

var func_886()//Position - 0x2B562
{
	return Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[71 /*6*/];
}

int func_887()//Position - 0x2B578
{
	if (Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_205[8] == 4)
	{
		return 1;
	}
	return 0;
}

bool func_888()//Position - 0x2B598
{
	return !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[77];
}

var func_889()//Position - 0x2B5B0
{
	return Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[77];
}

bool func_890()//Position - 0x2B655
{
	return !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[12];
}

var func_891()//Position - 0x2B66D
{
	return Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[12];
}

bool func_892()//Position - 0x2B684
{
	return !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[34];
}

int func_893()//Position - 0x2B69C
{
	if (!__LIB_0__::func_178(40))
	{
		return 0;
	}
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (SYSTEM::VDIST2(__LIB_15__::func_964(181, 0), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true)) > 40000f)
		{
			return 1;
		}
	}
	if (Global_95443 == -1)
	{
		Global_95443 = MISC::GET_GAME_TIMER();
	}
	if ((MISC::GET_GAME_TIMER() - Global_95443) > 30000)
	{
		Global_95443 = -1;
		return 1;
	}
	return 0;
}

int func_894()//Position - 0x2B708
{
	int iVar0;
	int iVar1;
	bool bVar2;
	iVar0 = 0;
	while (iVar0 < 10)
	{
		iVar1 = 0;
		while (iVar1 < Global_96470[iVar0 /*19*/])
		{
			bVar2 = false;
			switch (iVar0)
			{
				case 1:
				case 2:
					bVar2 = __LIB_0__::func_178(90);
					break;
				case 3:
					bVar2 = __LIB_0__::func_178(74);
					break;
				case 4:
					bVar2 = __LIB_0__::func_178(75);
					break;
				case 5:
					bVar2 = __LIB_0__::func_178(93);
					break;
				case 6:
					bVar2 = __LIB_0__::func_178(69);
					break;
				case 7:
					bVar2 = __LIB_0__::func_178(70);
					break;
				case 8:
					bVar2 = __LIB_0__::func_178(84);
					break;
				case 9:
					bVar2 = __LIB_0__::func_178(85);
					break;
			}
			if (bVar2 && Global_113386.f_1.f_12[iVar0 /*6*/][iVar1] == 12)
			{
				return 1;
			}
			iVar1++;
		}
		iVar0++;
	}
	return 0;
}

bool func_895()//Position - 0x2B7F6
{
	return !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[45];
}

var func_896()//Position - 0x2B80E
{
	return Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_99_MF_CONTROLS_STRUCT.f_58[45];
}

void func_897(int iParam0)//Position - 0x2FD76
{
	Global_23011.f_16 = iParam0;
}

int func_898(int iParam0)//Position - 0x3B10A
{
	if (Global_99845[iParam0 /*98*/] == joaat("blimp") || Global_99845[iParam0 /*98*/] == joaat("blimp2"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("submersible") || Global_99845[iParam0 /*98*/] == joaat("submersible2"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("freight"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("packer"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("asea2"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("burrito2") || Global_99845[iParam0 /*98*/] == joaat("fbi2"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("entityxf") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[8 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("cheetah") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[8 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("policeb") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[8 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("ztype") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[9 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("polmav") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[9 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("jb700") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[10 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("monroe") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[11 /*6*/])
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("firetruk"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("handler"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("monroe"))
	{
		return 1;
	}
	if (Global_99845[iParam0 /*98*/] == joaat("phantom"))
	{
		return 1;
	}
	if (((Global_99845[iParam0 /*98*/] == joaat("gauntlet") && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[80 /*6*/]) && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[81 /*6*/]) && !Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[82 /*6*/])
	{
		return 1;
	}
	return 0;
}

void func_899(int iParam0)//Position - 0x8BBB5
{
	if (iParam0 >= 94)
	{
		return;
	}
	if (Global_96288 != -1)
	{
		if (Global_96288 != iParam0)
		{
			return;
		}
		Global_96288 = -1;
		Global_96287 = 0;
		Global_96289 = 0;
	}
}

int func_900(int iParam0)//Position - 0x8BD8B
{
	int iVar0;
	iVar0 = 0;
	iVar0 = 0;
	while (iVar0 < 7)
	{
		if (Global_91193[iVar0 /*5*/] == iParam0)
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

void func_901(int iParam0, bool bParam1)//Position - 0x902EC
{
	if (iParam0 == 10)
	{
		return;
	}
	if (bParam1)
	{
		MISC::SET_BIT(&(Global_113386.f_7229[iParam0]), 1);
	}
	else
	{
		MISC::CLEAR_BIT(&(Global_113386.f_7229[iParam0]), 1);
	}
	if (Global_95479[iParam0 /*10*/].f_7 != 263)
	{
		__LIB_16__::func_587(Global_95479[iParam0 /*10*/].f_7, BitTest(Global_113386.f_7229[iParam0], 1), 0);
	}
}

int func_902(int iParam0)//Position - 0x98B70
{
	switch (iParam0)
	{
		case 8:
			return 30;
		case 3:
			return 30;
		case 5:
			return 30;
		case 10:
			return 30;
		case 1:
			return 28;
		default:
	}
	return 31;
	return 0;
}

void func_903()//Position - 0x98C0A
{
	Global_97531 = 0;
	Global_97532 = 0;
	Global_97709 = CLOCK::GET_CLOCK_HOURS();
	Global_97710 = CLOCK::GET_CLOCK_DAY_OF_MONTH();
	Global_97711 = CLOCK::GET_CLOCK_MONTH();
}

void func_904(int iParam0, int iParam1)//Position - 0x9AFE7
{
	if (iParam0 < 9)
	{
		Global_96297[iParam0 /*2*/] = iParam1;
		if (iParam1 == 0)
		{
			Global_96297[iParam0 /*2*/].f_1 = 0;
		}
	}
}

void func_905(int iParam0, char* sParam1)//Position - 0xEFC
{
	char cVar0[64];
	IntToString(sParam1, Global_78588.f_6825[iParam0 /*3*/], 64);
	StringIntConCat(sParam1, __LIB_15__::func_212(iParam0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/], 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_1, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_2, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_3, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_4, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_5, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_6, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_7, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_8, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
	IntToString(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_9, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_10, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_11, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_12, 64);
	StringIntConCat(&cVar0, Global_78588.f_6684[Global_78588.f_6825[iParam0 /*3*/].f_2 /*14*/].f_13, 64);
	StringIntConCat(sParam1, MISC::GET_HASH_KEY(&cVar0), 64);
}

int func_906()//Position - 0x2B482
{
	return __LIB_0__::func_178(15);
}

int func_907()//Position - 0x2B4BC
{
	float fVar0;
	if (Global_95443 == -1)
	{
		Global_95443 = MISC::GET_GAME_TIMER();
	}
	if ((MISC::GET_GAME_TIMER() - Global_95443) > 240000)
	{
		Global_95443 = -1;
		return 1;
	}
	if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		fVar0 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true), __LIB_15__::func_964(212, 0));
		if (fVar0 > 22500f)
		{
			Global_95443 = -1;
			return 1;
		}
	}
	return 0;
}

int func_908()//Position - 0x2B5C7
{
	if (__LIB_0__::func_178(88))
	{
		return 1;
	}
	else if (__LIB_11__::func_283(88))
	{
		return 1;
	}
	return 0;
}

int func_909(int iParam0, int iParam1, bool bParam2)//Position - 0x33F33
{
	int iVar0;
	char* sVar1;
	int iVar2;
	if (!ENTITY::DOES_ENTITY_EXIST(iParam0) || !VEHICLE::IS_VEHICLE_DRIVEABLE(iParam0, false))
	{
		return 0;
	}
	iVar0 = 0;
	while (__LIB_14__::func_621(iParam1, iVar0, &sVar1, &iVar2))
	{
		if (!bParam2 || BitTest(Global_113386.f_7229[iVar2], 0))
		{
			if (VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(&sVar1, iParam0))
			{
				return 1;
			}
		}
		iVar0++;
	}
	return 0;
}

void func_910(int iParam0, int iParam1, int iParam2)//Position - 0x3BF6C
{
	if (iParam2 == 0)
	{
		__LIB_0__::func_59(iParam0, 0);
	}
	Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[iParam0 /*6*/].f_3 = __LIB_0__::func_58();
	Global_113386.f_10016.f_21++;
	if (iParam2 == 0)
	{
		if (!BitTest(Global_91229[iParam0 /*34*/].f_15, 7))
		{
			if (iParam1 != joaat("CITIES_PASSED"))
			{
				STATS::STAT_SET_INT(iParam1, Global_113386.f_10016.f_21, true);
				if (!Global_78588)
				{
					STATS::PRESENCE_EVENT_UPDATESTAT_INT(iParam1, Global_113386.f_9085_FLOW_STRUCT_isGameflowActive.f_330_MF_MISSION_ARRAY[iParam0 /*6*/].f_4, 0);
				}
			}
		}
	}
}

void func_911(int iParam0)//Position - 0x3F588
{
	Global_63147 = 1;
	Global_63150 = 1;
	if (Global_75249 > 15)
	{
		return;
	}
	__LIB_0__::func_748(Global_75249);
	Global_75250[Global_75249 /*9*/] = iParam0;
	Global_75249++;
	if (Global_63379[iParam0 /*13*/] == 16)
	{
		Global_75401 = 1;
	}
}

void func_912()//Position - 0x3F730
{
	Global_63173 = 0;
	Global_63177 = __LIB_0__::func_752(joaat("SP0_SHOTS"));
	Global_63176 = __LIB_0__::func_752(joaat("SP0_HITS"));
	Global_63179 = __LIB_0__::func_752(joaat("SP1_SHOTS"));
	Global_63178 = __LIB_0__::func_752(joaat("SP1_HITS"));
	Global_63181 = __LIB_0__::func_752(joaat("SP2_SHOTS"));
	Global_63180 = __LIB_0__::func_752(joaat("SP2_HITS"));
}

void func_913()//Position - 0x8A949
{
	if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("mission_stat_watcher")) > 0)
	{
		if (__LIB_0__::func_755())
		{
			if (Global_63149 && !Global_63148)
			{
				Global_63149 = 0;
				MISC::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
			}
		}
		else
		{
			MISC::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
		}
	}
}

bool func_914(var uParam0, int iParam1)//Position - 0x8ADCC
{
	switch (iParam1)
	{
		case 19:
			return __LIB_0__::func_703(uParam0, 8);
			break;
		case 14:
			return __LIB_0__::func_703(uParam0, 16);
			break;
		case 17:
			return __LIB_0__::func_703(uParam0, 32);
			break;
	}
	return __LIB_16__::func_603(uParam0, iParam1);
}

struct<4> func_915(int iParam0, var uParam1, var uParam2, bool bParam3)//Position - 0x8BF5D
{
	struct<4> Var0;
	if (__LIB_0__::func_178(59) && !__LIB_0__::func_178(45))
	{
		if (iParam0 == 2)
		{
			StringCopy(&Var0, "DRF_SOL1", 16);
			*uParam1 = 0;
			*uParam2 = 19;
			if (bParam3)
			{
				__LIB_16__::func_993(&(Global_113386.f_19961), 6);
			}
		}
	}
	else if (__LIB_0__::func_178(14) && !__LIB_0__::func_178(16))
	{
		StringCopy(&Var0, "DRF_EXILE", 16);
		*uParam1 = 0;
		*uParam2 = 9;
		if (bParam3)
		{
			__LIB_16__::func_993(&(Global_113386.f_19961), 7);
		}
	}
	else if (__LIB_0__::func_178(16) && !__LIB_0__::func_178(39))
	{
		StringCopy(&Var0, "DRF_EXILE", 16);
		*uParam1 = 9;
		*uParam2 = 10;
		if (bParam3)
		{
			__LIB_16__::func_993(&(Global_113386.f_19961), 8);
		}
	}
	else if ((__LIB_0__::func_178(39) && !__LIB_0__::func_178(47)) && !__LIB_16__::func_982(518202687))
	{
		StringCopy(&Var0, "DRF_SOL2", 16);
		*uParam1 = 0;
		*uParam2 = 15;
		if (bParam3)
		{
			__LIB_16__::func_993(&(Global_113386.f_19961), 9);
		}
	}
	else if (__LIB_0__::func_178(47) && !__LIB_0__::func_178(22))
	{
		StringCopy(&Var0, "DRF_MIC2", 16);
		*uParam1 = 0;
		*uParam2 = 13;
		if (bParam3)
		{
			__LIB_16__::func_993(&(Global_113386.f_19961), 10);
		}
	}
	return Var0;
}

var func_916(int iParam0, int iParam1, int iParam2)//Position - 0x8FEEC
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_6__::func_350(iParam2, iParam1);
	iVar2 = __LIB_0__::func_161(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_2"), &uVar0, -1);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_3"), &uVar0, -1);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_4"), &uVar0, -1);
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_5"), &uVar0, -1);
					break;
			}
			break;
		case 6:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_6"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

var func_917(int iParam0, int iParam1)//Position - 0x9BDD4
{
	var uVar0;
	int iVar1;
	int iVar2;
	iVar1 = __LIB_3__::func_371(iParam1);
	iVar2 = __LIB_0__::func_161(iVar1);
	switch (iVar2)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_0"), &uVar0, -1);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_1"), &uVar0, -1);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_GET_INT(joaat("SP0_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 1:
					STATS::STAT_GET_INT(joaat("SP1_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
				case 2:
					STATS::STAT_GET_INT(joaat("SP2_WEAP_UNLOCK_2"), &uVar0, -1);
					break;
			}
			break;
		default:
			break;
	}
	return uVar0;
}

void func_918(int iParam0, int iParam1, int iParam2, int iParam3)//Position - 0x8D956
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_6__::func_350(iParam2, iParam1);
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_0"), iParam3, true);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_1"), iParam3, true);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_2"), iParam3, true);
					break;
			}
			break;
		case 3:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_3"), iParam3, true);
					break;
			}
			break;
		case 4:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_4"), iParam3, true);
					break;
			}
			break;
		case 5:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_5"), iParam3, true);
					break;
			}
			break;
		case 6:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_ADDON_UNLOCK_6"), iParam3, true);
					break;
			}
			break;
		default:
			break;
	}
}

void func_919(int iParam0, int iParam1)//Position - 0x95275
{
	int iVar0;
	float fVar1;
	int iVar2;
	int iVar3;
	if (((iParam0 != 0 || iParam0 != 1) || iParam0 != 2) || iParam0 != 3)
	{
		return;
	}
	__LIB_0__::func_479(iParam0, iParam1, &iVar2, &iVar3);
	if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS())
	{
		iVar0 = __LIB_1__::func_360(iVar3, -1, 0);
	}
	else
	{
		STATS::STAT_GET_INT(iVar2, &iVar0, -1);
	}
	switch (iParam1)
	{
		case 2:
			fVar1 = (0.8f + (0.4f * (SYSTEM::TO_FLOAT(iVar0) / 100f)));
			PLAYER::SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(PLAYER::PLAYER_ID(), fVar1, true);
			break;
		case 7:
			if (SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("armenian3")) != 0 || SCRIPT::GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(joaat("trevor3")) != 0)
			{
				Global_97724 = 1;
			}
			else
			{
				fVar1 = (1f - (SYSTEM::TO_FLOAT(iVar0) / 100f));
				PLAYER::SET_PLAYER_NOISE_MULTIPLIER(PLAYER::PLAYER_ID(), fVar1);
				PLAYER::SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(PLAYER::PLAYER_ID(), fVar1);
				PLAYER::SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(PLAYER::PLAYER_ID(), fVar1);
			}
			break;
	}
}

void func_920(int iParam0, int iParam1, int iParam2)//Position - 0x9B6CE
{
	int iVar0;
	int iVar1;
	iVar0 = __LIB_3__::func_371(iParam1);
	iVar1 = __LIB_0__::func_161(iVar0);
	switch (iVar1)
	{
		case 0:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_0"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_0"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_0"), iParam2, true);
					break;
			}
			break;
		case 1:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_1"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_1"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_1"), iParam2, true);
					break;
			}
			break;
		case 2:
			switch (iParam0)
			{
				case 0:
					STATS::STAT_SET_INT(joaat("SP0_WEAP_UNLOCK_2"), iParam2, true);
					break;
				case 1:
					STATS::STAT_SET_INT(joaat("SP1_WEAP_UNLOCK_2"), iParam2, true);
					break;
				case 2:
					STATS::STAT_SET_INT(joaat("SP2_WEAP_UNLOCK_2"), iParam2, true);
					break;
			}
			break;
		default:
			break;
	}
}

void func_921(int iParam0, bool bParam1)//Position - 0x2FDB5
{
	if (bParam1)
	{
		if (!__LIB_1__::func_686(iParam0, 2, 1))
		{
			__LIB_2__::func_911(iParam0, 2, 1);
		}
	}
	else if (__LIB_1__::func_686(iParam0, 2, 1))
	{
		__LIB_2__::func_943(iParam0, 2, 1);
	}
}

int func_922(int iParam0, int iParam1, int iParam2)//Position - 0x22381
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	int iVar4;
	int iVar5;
	int iVar6;
	int iVar7;
	int iVar8;
	int iVar9;
	int iVar10;
	int iVar11;
	iVar0 = __LIB_1__::func_344(iParam0, -1);
	if (iParam0 == 164)
	{
		if (iParam2 == 2)
		{
			return 1;
		}
		return 0;
	}
	if (iParam0 == 276)
	{
		if (iParam2 == 2)
		{
			return 1;
		}
		return 0;
	}
	if (iParam0 == 95)
	{
		if (NETWORK::NETWORK_HAS_SOCIAL_CLUB_ACCOUNT())
		{
			return 1;
		}
		return 0;
	}
	else if ((iParam0 == 96 || iParam0 == 97) || iParam0 == 98)
	{
		if (__LIB_0__::func_116() && __LIB_0__::func_163())
		{
			return 1;
		}
		return 0;
	}
	if ((((iParam0 == 206 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || (iParam0 == 207 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) || (iParam0 == 208 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) || (iParam0 == 209 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
	{
		if (__LIB_0__::func_116())
		{
			return 1;
		}
		return 0;
	}
	if ((((iParam0 == 170 || iParam0 == 120) || iParam0 == 119) || iParam0 == 117) || iParam0 == 166)
	{
		return 1;
	}
	if (iParam0 == 221 || iParam0 == 135)
	{
		if (iParam1 == 26)
		{
			return 1;
		}
		return 0;
	}
	if (__LIB_1__::func_185(iParam0))
	{
		if (Global_77052)
		{
			return 1;
		}
		return 0;
	}
	iVar1 = __LIB_1__::func_184(iVar0);
	if (iVar1 != -1)
	{
		if (__LIB_1__::func_890(__LIB_1__::func_183(iVar0)))
		{
			return 1;
		}
		return 0;
	}
	if (__LIB_1__::func_182(iParam0))
	{
		if (__LIB_0__::func_116())
		{
			if ((iParam0 == 205 && Global_262145.f_20268 /* Tunable: ENABLE_RETURNING_CONTENT_DOD */) || (iParam0 != 205 && Global_262145.f_20267 /* Tunable: ENABLE_RETURNING_CONTENT_VEHICLE */))
			{
				return 1;
			}
			return 0;
		}
		return 0;
	}
	if (__LIB_1__::func_181(iParam0))
	{
		if (__LIB_7__::func_367(iParam0))
		{
			return 0;
		}
		return 1;
	}
	iVar2 = __LIB_1__::func_180(iVar0);
	if (iVar2 != -1)
	{
		if (__LIB_1__::func_889(__LIB_1__::func_179(iVar0)))
		{
			return 1;
		}
		return 0;
	}
	iVar3 = __LIB_1__::func_178(iVar0);
	if (iVar3 > 0)
	{
		if (__LIB_2__::func_461(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar4 = __LIB_1__::func_177(iVar0);
	if (iVar4 != -1)
	{
		if (__LIB_2__::func_437(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar5 = __LIB_1__::func_175(iVar0);
	if (iVar5 != -1)
	{
		if (__LIB_1__::func_887(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar6 = __LIB_1__::func_173(iVar0);
	if (iVar6 != -1)
	{
		if (__LIB_2__::func_436(iVar0))
		{
			return 1;
		}
		return 0;
	}
	if ((iVar0 == joaat("firetruk") || iVar0 == joaat("boxville")) || iVar0 == joaat("stockade"))
	{
		if (__LIB_1__::func_885(iVar0))
		{
			return 0;
		}
		return 1;
	}
	iVar7 = __LIB_1__::func_171(iVar0);
	if (iVar7 != -1)
	{
		if (__LIB_1__::func_885(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar8 = __LIB_1__::func_170(iVar0);
	if (iVar8 != -1)
	{
		if (__LIB_2__::func_460(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar9 = __LIB_1__::func_165(iVar0);
	if (iVar9 != -1)
	{
		if (__LIB_2__::func_459(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar10 = __LIB_1__::func_164(iVar0);
	if (iVar10 != -1)
	{
		if (__LIB_2__::func_458(iVar0))
		{
			return 1;
		}
		return 0;
	}
	iVar11 = __LIB_1__::func_160(iVar0);
	if (iVar11 != -1)
	{
		if (__LIB_2__::func_457(iVar0))
		{
			return 1;
		}
		return 0;
	}
	return 0;
}

int func_923(var uParam0)//Position - 0x4476D
{
	if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID(), false) && !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))
	{
		if (__LIB_0__::func_329())
		{
			*uParam0 = __LIB_3__::func_309(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), false), 6, -1, 0, 1, -1);
			if (__LIB_3__::func_509(*uParam0) && !__LIB_13__::func_725(*uParam0))
			{
				return 1;
			}
		}
	}
	return 0;
}

int func_924(int iParam0, int iParam1, int iParam2, bool bParam3)//Position - 0x9799D
{
	Global_78130[1 /*14*/] = { __LIB_12__::func_14(iParam0, iParam1, iParam2, -1) };
	if (BitTest(Global_78130[1 /*14*/].f_6, 0) && !BitTest(Global_78130[1 /*14*/].f_6, 6))
	{
		if (bParam3)
		{
			__LIB_0__::func_31(iParam1, Global_78130[1 /*14*/].f_5, Global_78130[1 /*14*/].f_2, 2, Global_78130[1 /*14*/].f_1, 0, 1);
		}
		else
		{
			__LIB_0__::func_31(iParam1, Global_78130[1 /*14*/].f_5, Global_78130[1 /*14*/].f_2, 2, Global_78130[1 /*14*/].f_1, 1, 0);
		}
		return 1;
	}
	return 0;
}

void func_925(int iParam0)//Position - 0x1075
{
	Global_1575010 = iParam0;
}

bool func_926()//Position - 0x1EDE
{
	return Global_2715699.f_6313;
}

bool func_927()//Position - 0x1EED
{
	return Global_2714762.f_746;
}

void func_928()//Position - 0x1F0E
{
	Global_2714762.f_847 = 0;
}

bool func_929()//Position - 0x1F1E
{
	return Global_2714762.f_847;
}

int func_930(int iParam0)//Position - 0x27A2
{
	return Global_1659759[__LIB_1__::func_27(iParam0)];
}

void func_931(int iParam0, int iParam1)//Position - 0x2818
{
	int iVar0;
	iVar0 = iParam1;
	if (iVar0 == -1)
	{
		iVar0 = __LIB_0__::getGlobal_1574918();
	}
	Global_1575038[iVar0] = iParam0;
}

bool func_932()//Position - 0x2890
{
	return Global_1575054;
}

int func_933(int iParam0, bool bParam1, bool bParam2, int* iParam3)//Position - 0x999AE
{
	int iVar0;
	int iVar1;
	var uVar2;
	int iVar3;
	*iParam3 = -1;
	iVar0 = FILES::GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(iParam0);
	iVar1 = 0;
	while (iVar1 < iVar0)
	{
		FILES::GET_VARIANT_COMPONENT(iParam0, iVar1, iParam3, &uVar2, &iVar3);
		if ((((iVar3 == 11 && *iParam3 != 0) && *iParam3 != joaat("0")) && bParam1 == FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(*iParam3, joaat("HOOD_UP"), 0)) && bParam2 == FILES::DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(*iParam3, joaat("HOOD_TUCKED"), 0))
		{
			return 1;
		}
		iVar1++;
	}
	return 0;
}

int func_934(bool bParam0, int iParam1)//Position - 0xA4CE1
{
	if (iParam1 != __LIB_0__::getMinusOneOrNull())
	{
		if (Global_1892703[bParam0 /*599*/].f_10.f_26 != __LIB_0__::getMinusOneOrNull())
		{
			return iParam1 == Global_1892703[bParam0 /*599*/].f_10.f_26;
		}
	}
	return 0;
}

int func_935(bool bParam0)//Position - 0xD62CF
{
	if (__LIB_3__::func_131(bParam0))
	{
		return 1;
	}
	if (__LIB_2__::func_125(bParam0))
	{
		return 1;
	}
	return 0;
}

void func_936()//Position - 0x13BF9C
{
	int iVar0;
	int iVar1;
	int iVar2;
	int iVar3;
	if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), false))
	{
		iVar3 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), false);
		iVar0 = 0;
		while (iVar0 <= 8)
		{
			iVar1 = iVar0;
			iVar2 = VEHICLE::GET_PED_IN_VEHICLE_SEAT(iVar3, iVar1, false);
			if ((ENTITY::DOES_ENTITY_EXIST(iVar2) && PED::IS_PED_A_PLAYER(iVar2)) && !VEHICLE::IS_TURRET_SEAT(iVar3, iVar1))
			{
				NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(iVar2, true, false);
			}
			iVar0 = (iVar0 + 1);
		}
	}
}

void func_937()//Position - 0x17B71D
{
	Global_1048576.f_10 = 0;
}

void func_938(var uParam0, var uParam1)//Position - 0x17D36F
{
	uParam0->f_30 = 0;
	if (uParam1->f_8 > uParam1->f_9)
	{
		uParam0->f_30 = 1;
	}
}

Vector3 func_939(int iParam0)//Position - 0x17D8FF
{
	struct<3> Var0;
	if (iParam0 == 0)
	{
		return 0f, 0f, 0f;
	}
	Var0 = { __LIB_16__::func_646(iParam0, "start") };
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Var0, -2233.327f, 2436.1338f, -14.65155f, -2229.5598f, 2399.5764f, 11.997612f, 24f, false, true))
	{
		Var0 = { -2303.54f, 2428.09f, 2.02f };
	}
	if (OBJECT::IS_POINT_IN_ANGLED_AREA(Var0, 603.6218f, 5573.0464f, 694.484f, 594.23785f, 5542.7915f, 727.479f, 33.5f, false, true))
	{
		Var0 = { 502.6f, 5537.06f, 777.05f };
	}
	return Var0;
}

int func_940(var uParam0, char* sParam1, int iParam2, int iParam3)//Position - 0x17D9AC
{
	switch (uParam0->f_1)
	{
		case 0:
			if (*uParam0 != 0)
			{
				NETWORK::TEXTURE_DOWNLOAD_RELEASE(*uParam0);
			}
			GRAPHICS::FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO();
			uParam0->f_1 = 1;
			break;
		case 1:
			if (GRAPHICS::LOAD_MISSION_CREATOR_PHOTO(sParam1, iParam3, iParam2, 0))
			{
				uParam0->f_1 = 2;
			}
			break;
		case 2:
			switch (GRAPHICS::GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(NETWORK::UGC_GET_CONTENT_PATH(0, iParam3)))
			{
				case 1:
					return 0;
				case 0:
					uParam0->f_3 = 1;
					return 1;
				case 2:
					uParam0->f_2++;
					if (uParam0->f_2 > 200)
					{
						if (*uParam0 != 0)
						{
							NETWORK::TEXTURE_DOWNLOAD_RELEASE(*uParam0);
							*uParam0 = 0;
						}
						uParam0->f_3 = 0;
						return 1;
					}
					break;
			}
			break;
	}
	return 0;
}

Vector3 func_941(int iParam0, int iParam1)//Position - 0x17E406
{
	struct<3> Var0;
	switch (iParam0)
	{
		case 1:
			if (iParam1 == 1 || iParam1 == 2)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 70;
				Var0.f_2 = 255;
			}
			else if (iParam1 == 3)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 255;
				Var0.f_2 = 70;
			}
			break;
		case 2:
		case 31:
			Var0.f_0 = 255;
			Var0.f_1 = 70;
			Var0.f_2 = 70;
			break;
		case 35:
			Var0.f_0 = 70;
			Var0.f_1 = 70;
			Var0.f_2 = 255;
			break;
		case 32:
			Var0.f_0 = 255;
			Var0.f_1 = 70;
			Var0.f_2 = 70;
			break;
		case 3:
			if (iParam1 == 1 || iParam1 == 2)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 70;
				Var0.f_2 = 255;
			}
			else if (iParam1 == 3)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 255;
				Var0.f_2 = 70;
			}
			break;
		case 4:
			if (iParam1 == 1 || iParam1 == 2)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 70;
				Var0.f_2 = 255;
			}
			else if (iParam1 == 3)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 255;
				Var0.f_2 = 70;
			}
			else if (iParam1 == 4)
			{
				Var0.f_0 = 200;
				Var0.f_1 = 200;
				Var0.f_2 = 50;
			}
			break;
		case 5:
			Var0.f_0 = 200;
			Var0.f_1 = 200;
			Var0.f_2 = 50;
			break;
		case 11:
			if (iParam1 == 1 || iParam1 == 2)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 70;
				Var0.f_2 = 255;
			}
			else if (iParam1 == 3)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 255;
				Var0.f_2 = 70;
			}
			break;
		case 12:
			if (iParam1 == 1 || iParam1 == 2)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 70;
				Var0.f_2 = 255;
			}
			else if (iParam1 == 3)
			{
				Var0.f_0 = 70;
				Var0.f_1 = 255;
				Var0.f_2 = 70;
			}
			break;
		case 13:
			Var0.f_0 = 70;
			Var0.f_1 = 255;
			Var0.f_2 = 70;
			break;
		default:
			Var0.f_0 = 255;
			Var0.f_1 = 255;
			Var0.f_2 = 255;
			break;
	}
	return Var0;
}

int func_942(int iParam0, int iParam1, int iParam2)//Position - 0x17E617
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= (iParam2 - 1))
	{
		if ((*iParam0)[iVar0] == iParam1)
		{
			return iVar0;
		}
		iVar0++;
	}
	return -1;
}

void func_943(var uParam0, bool bParam1)//Position - 0x17E645
{
	var uVar0;
	var uVar1;
	var uVar2;
	var uVar3;
	struct<6> Var4;
	struct<8> Var5;
	struct<16> Var6;
	if (*uParam0 != 0)
	{
		NETWORK::TEXTURE_DOWNLOAD_RELEASE(*uParam0);
		*uParam0 = 0;
	}
	*uParam0 = uVar0;
	uParam0->f_1 = uVar1;
	uParam0->f_2 = uVar2;
	uParam0->f_3 = uVar3;
	MemCopy(&(uParam0->f_4), {Var4}, 16);
	if (bParam1)
	{
		MemCopy(&(uParam0->f_20), {Var5}, 16);
		uParam0->f_36 = { Var6 };
	}
}

void func_944()//Position - 0x17EC3A
{
	MISC::SET_BIT(&(Global_2714762.f_43.f_4), 7);
}

int func_945()//Position - 0x17EC4F
{
	if (((Global_4718592 != 2 && Global_4718592 != 0) && Global_4718592 != 1) && Global_4718592 != 3)
	{
		return 1;
	}
	if (Global_4718592 == 0)
	{
		if (Global_4718592.f_168757 != 0)
		{
			return 1;
		}
		if (Global_4718592.f_2 == 4)
		{
			return 1;
		}
		if (Global_4718592.f_2 != 5 && ((((Global_4718592.f_2 != 6 && !BitTest(Global_4718592.f_4, 20)) && !BitTest(Global_4718592.f_4, 21)) && !BitTest(Global_4718592.f_4, 22)) && !BitTest(Global_4718592.f_4, 23)))
		{
			return 1;
		}
	}
	if (Global_4718592 == 2)
	{
		if (Global_4718592.f_107227 == 8 || Global_4718592.f_107227 == 9)
		{
			return 1;
		}
	}
	return 0;
}

int func_946()//Position - 0x17ED59
{
	int iVar0;
	iVar0 = 0;
	while (iVar0 <= 3)
	{
		if ((((((((((((Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar") || Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar2")) || Global_4718592.f_110280[iVar0] == -1894510521) || Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar3")) || Global_4718592.f_110280[iVar0] == -1562909828) || Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar4")) || Global_4718592.f_110280[iVar0] == 338623111) || Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar5")) || Global_4718592.f_110280[iVar0] == joaat("prop_rail_boxcar5_d")) || Global_4718592.f_110280[iVar0] == -1529940538) || Global_4718592.f_110280[iVar0] == 1152304222) || Global_4718592.f_110280[iVar0] == joaat("freight")) || Global_4718592.f_110280[iVar0] == joaat("metrotrain"))
		{
			return 1;
		}
		iVar0++;
	}
	return 0;
}

Vector3 func_947()//Position - 0x17F401
{
	return 188.0411f, -682.9102f, 42.1409f;
}

Vector3 func_948(bool bParam0)//Position - 0x17F45F
{
	if (bParam0)
	{
		return 819.6473f, -3031.2603f, 4.7421f;
	}
	return 809.6473f, -3034.2603f, 4.7421f;
}

Vector3 func_949()//Position - 0x17F4D0
{
	return -1066.5455f, -74.8318f, -90.1999f;
}

Vector3 func_950()//Position - 0x17F528
{
	return -1351.713f, 156.2222f, -100.1943f;
}

Vector3 func_951()//Position - 0x17F53F
{
	return 1561.0537f, 385.9017f, -50.6854f;
}

Vector3 func_952()//Position - 0x17F586
{
	return 2713.297f, -369.5003f, -55.7809f;
}

Vector3 func_953()//Position - 0x17F59D
{
	return 349.7179f, 4870.692f, -61.4014f;
}

void func_954(int iParam0, struct<16> Param1)//Position - 0x17F5F0
{
	if (iParam0 == 0)
	{
		StringCopy(&Global_2727852, "", 64);
	}
	else
	{
		Global_2727852 = { Param1 };
	}
	Global_2727851 = iParam0;
}

int func_955(var uParam0, char* sParam1)//Position - 0x17F642
{
	var uVar0;
	if (MISC::IS_STRING_NULL_OR_EMPTY(sParam1))
	{
		return 0;
	}
	NETWORK::NETWORK_HANDLE_FROM_MEMBER_ID(sParam1, &uVar0, 13);
	if (NETWORK::NETWORK_IS_HANDLE_VALID(&uVar0, 13) && NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(&uVar0))
	{
		*uParam0 = NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&uVar0);
		if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(*uParam0))
		{
			return 1;
		}
	}
	return 0;
}

void func_956(var uParam0)//Position - 0x17F955
{
	if (uParam0->f_16)
	{
		Global_1050140.f_8 = 0;
		Global_1050140.f_9 = 32;
	}
	else
	{
		Global_1048576.f_8 = 0;
		Global_1048576.f_9 = 32;
	}
}

void func_957()//Position - 0x1802A9
{
	if (Global_262145.f_31710[2] != Global_4718592.f_116524)
	{
		return;
	}
	MISC::SET_BIT(&(Global_4718592.f_658[0 /*22957*/].f_7983[3]), 23);
}

bool func_958(int iParam0)//Position - 0x1803F2
{
	return iParam0 == 88;
}

void func_959(int iParam0)//Position - 0x1830EE
{
	int iVar0;
	var* uVar1;
	int iVar2;
	var* uVar3;
	uVar1 = DATAFILE::DATADICT_GET_DICT(iParam0, "fsp");
	iVar2 = DATAFILE::DATADICT_GET_ARRAY(uVar1, "loc");
	uVar3 = DATAFILE::DATADICT_GET_ARRAY(uVar1, "head");
	iVar0 = 0;
	while (iVar0 < 60)
	{
		if (iVar2 != 0 && DATAFILE::DATAARRAY_GET_TYPE(iVar2, iVar0) == 5)
		{
			Global_4980736.f_195632[iVar0 /*5*/] = { DATAFILE::DATAARRAY_GET_VECTOR(iVar2, iVar0) };
			Global_4980736.f_195632[iVar0 /*5*/].f_3 = DATAFILE::DATAARRAY_GET_FLOAT(uVar3, iVar0);
		}
		else
		{
			Global_4980736.f_195632[iVar0 /*5*/] = { 0f, 0f, 0f };
			Global_4980736.f_195632[iVar0 /*5*/].f_3 = 0f;
		}
		iVar0++;
	}
}

void func_960(int iParam0, bool bParam1)//Position - 0x18498D
{
	switch (iParam0)
	{
		case 3:
			if (Global_4980736.f_94390[bParam1 /*1004*/].f_648 != 0f)
			{
				Global_4980736.f_94390[bParam1 /*1004*/].f_856.f_10 = Global_4980736.f_94390[bParam1 /*1004*/].f_648;
			}
			break;
		case 7:
			if (IntToFloat(Global_4718592.f_168971) != 0f)
			{
				Global_4980736.f_69361[bParam1 /*151*/].f_106.f_10 = SYSTEM::TO_FLOAT(Global_4718592.f_168971);
			}
			break;
	}
}

void func_961(int iParam0, bool bParam1)//Position - 0x184A17
{
	switch (iParam0)
	{
		case 4:
			if (BitTest(Global_4980736.f_78578[bParam1 /*450*/].f_107, 15))
			{
				MISC::SET_BIT(&(Global_4980736.f_78578[bParam1 /*450*/].f_137), 8);
				MISC::CLEAR_BIT(&(Global_4980736.f_78578[bParam1 /*450*/].f_107), 15);
			}
			break;
		case 7:
			if (BitTest(Global_4980736.f_69361[bParam1 /*151*/].f_8, 15))
			{
				MISC::SET_BIT(&(Global_4980736.f_69361[bParam1 /*151*/].f_106), 8);
				MISC::CLEAR_BIT(&(Global_4980736.f_69361[bParam1 /*151*/].f_8), 15);
			}
			break;
		case 3:
			if (BitTest(Global_4980736.f_94390[bParam1 /*1004*/].f_530, 7))
			{
				MISC::SET_BIT(&(Global_4980736.f_94390[bParam1 /*1004*/].f_856), 8);
				MISC::CLEAR_BIT(&(Global_4980736.f_94390[bParam1 /*1004*/].f_530), 7);
			}
			break;
		case 6:
			if (BitTest(Global_4980736.f_5[bParam1 /*273*/].f_88, 0))
			{
				MISC::SET_BIT(&(Global_4980736.f_5[bParam1 /*273*/].f_20), 8);
				MISC::CLEAR_BIT(&(Global_4980736.f_5[bParam1 /*273*/].f_88), 0);
			}
			break;
		case 5:
			if (BitTest(Global_4980736.f_63312[bParam1 /*183*/].f_19, 10))
			{
				MISC::CLEAR_BIT(&(Global_4980736.f_63312[bParam1 /*183*/].f_46), 8);
				MISC::CLEAR_BIT(&(Global_4980736.f_63312[bParam1 /*183*/].f_19), 10);
			}
			break;
	}
}

float func_962(int iParam0)//Position - 0x184B8D
{
	switch (iParam0)
	{
		case 4:
		case 9:
			return 1.2f;
		case 7:
			return 1.2f;
		case 1:
			return 0.8f;
		case 3:
			return 0.7f;
		case 2:
			return 0.8f;
		default:
	}
	return 1f;
}

int func_963(var uParam0, var uParam1, int iParam2)//Position - 0x185C64
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 22);
			case 1:
				return BitTest(uParam0, 23);
			case 2:
				return BitTest(uParam0, 24);
			case 3:
				return BitTest(uParam0, 25);
			case 4:
				return BitTest(uParam0, 26);
			case 5:
				return BitTest(uParam0, 27);
			case 6:
				return BitTest(uParam0, 28);
			case 7:
				return BitTest(uParam0, 29);
			case 8:
				return BitTest(*uParam1, 0);
			case 9:
				return BitTest(*uParam1, 1);
			case 10:
				return BitTest(*uParam1, 2);
			case 11:
				return BitTest(*uParam1, 3);
			}
		default:
	}
	return 0;
}

int func_964(var uParam0, var uParam1, int iParam2)//Position - 0x185D2D
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 14);
			case 1:
				return BitTest(uParam0, 15);
			case 2:
				return BitTest(uParam0, 16);
			case 3:
				return BitTest(uParam0, 17);
			case 4:
				return BitTest(uParam0, 18);
			case 5:
				return BitTest(uParam0, 19);
			case 6:
				return BitTest(uParam0, 20);
			case 7:
				return BitTest(uParam0, 21);
			case 8:
				return BitTest(*uParam1, 4);
			case 9:
				return BitTest(*uParam1, 5);
			case 10:
				return BitTest(*uParam1, 6);
			case 11:
				return BitTest(*uParam1, 7);
			}
		default:
	}
	return 0;
}

int func_965(var uParam0, int iParam1)//Position - 0x185DF6
{
	if (iParam1 < 12 && iParam1 >= 0)
	{
		switch (iParam1)
		{
			case 0:
				return BitTest(*uParam0, 0);
			case 1:
				return BitTest(*uParam0, 1);
			case 2:
				return BitTest(*uParam0, 2);
			case 3:
				return BitTest(*uParam0, 3);
			case 4:
				return BitTest(*uParam0, 4);
			case 5:
				return BitTest(*uParam0, 5);
			case 6:
				return BitTest(*uParam0, 6);
			case 7:
				return BitTest(*uParam0, 7);
			case 8:
				return BitTest(*uParam0, 8);
			case 9:
				return BitTest(*uParam0, 9);
			case 10:
				return BitTest(*uParam0, 10);
			case 11:
				return BitTest(*uParam0, 11);
			}
		default:
	}
	return 0;
}

int func_966(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x185EC3
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 28);
			case 1:
				return BitTest(uParam0, 29);
			case 2:
				return BitTest(uParam0, 30);
			case 3:
				return BitTest(uParam0, 31);
			case 4:
				return BitTest(uParam1, 0);
			case 5:
				return BitTest(uParam1, 1);
			case 6:
				return BitTest(uParam1, 2);
			case 7:
				return BitTest(uParam1, 3);
			case 8:
				return BitTest(*uParam2, 8);
			case 9:
				return BitTest(*uParam2, 9);
			case 10:
				return BitTest(*uParam2, 10);
			case 11:
				return BitTest(*uParam2, 11);
			}
		default:
	}
	return 0;
}

int func_967(var uParam0, var uParam1, int iParam2)//Position - 0x185F8C
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 8);
			case 1:
				return BitTest(uParam0, 9);
			case 2:
				return BitTest(uParam0, 10);
			case 3:
				return BitTest(uParam0, 11);
			case 4:
				return BitTest(uParam0, 12);
			case 5:
				return BitTest(uParam0, 13);
			case 6:
				return BitTest(uParam0, 14);
			case 7:
				return BitTest(uParam0, 15);
			case 8:
				return BitTest(*uParam1, 12);
			case 9:
				return BitTest(*uParam1, 13);
			case 10:
				return BitTest(*uParam1, 14);
			case 11:
				return BitTest(*uParam1, 15);
			}
		default:
	}
	return 0;
}

int func_968(var uParam0, var uParam1, int iParam2)//Position - 0x186059
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 0);
			case 1:
				return BitTest(uParam0, 1);
			case 2:
				return BitTest(uParam0, 2);
			case 3:
				return BitTest(uParam0, 3);
			case 4:
				return BitTest(uParam0, 4);
			case 5:
				return BitTest(uParam0, 5);
			case 6:
				return BitTest(uParam0, 6);
			case 7:
				return BitTest(uParam0, 7);
			case 8:
				return BitTest(*uParam1, 16);
			case 9:
				return BitTest(*uParam1, 17);
			case 10:
				return BitTest(*uParam1, 18);
			case 11:
				return BitTest(*uParam1, 19);
			}
		default:
	}
	return 0;
}

int func_969(var uParam0, var uParam1, int iParam2)//Position - 0x18611E
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 17);
			case 1:
				return BitTest(uParam0, 18);
			case 2:
				return BitTest(uParam0, 19);
			case 3:
				return BitTest(uParam0, 20);
			case 4:
				return BitTest(uParam0, 21);
			case 5:
				return BitTest(uParam0, 22);
			case 6:
				return BitTest(uParam0, 23);
			case 7:
				return BitTest(uParam0, 24);
			case 8:
				return BitTest(*uParam1, 20);
			case 9:
				return BitTest(*uParam1, 21);
			case 10:
				return BitTest(*uParam1, 22);
			case 11:
				return BitTest(*uParam1, 23);
			}
		default:
	}
	return 0;
}

int func_970(var uParam0, var uParam1, int iParam2)//Position - 0x1861EB
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(uParam0, 15);
			case 1:
				return BitTest(uParam0, 16);
			case 2:
				return BitTest(uParam0, 17);
			case 3:
				return BitTest(uParam0, 18);
			case 4:
				return BitTest(uParam0, 19);
			case 5:
				return BitTest(uParam0, 20);
			case 6:
				return BitTest(uParam0, 21);
			case 7:
				return BitTest(uParam0, 22);
			case 8:
				return BitTest(*uParam1, 24);
			case 9:
				return BitTest(*uParam1, 25);
			case 10:
				return BitTest(*uParam1, 26);
			case 11:
				return BitTest(*uParam1, 27);
			}
		default:
	}
	return 0;
}

int func_971(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x1862B8
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 25);
			case 1:
				return BitTest(uParam0, 26);
			case 2:
				return BitTest(uParam0, 27);
			case 3:
				return BitTest(uParam0, 28);
			case 4:
				return BitTest(uParam0, 29);
			case 5:
				return BitTest(uParam0, 30);
			case 6:
				return BitTest(uParam0, 31);
			case 7:
				return BitTest(uParam1, 0);
			case 8:
				return BitTest(*uParam2, 28);
			case 9:
				return BitTest(*uParam2, 29);
			case 10:
				return BitTest(*uParam2, 30);
			case 11:
				return BitTest(*uParam2, 31);
			}
		default:
	}
	return 0;
}

int func_972(var uParam0, var uParam1, int iParam2)//Position - 0x186384
{
	if (iParam2 < 12 && iParam2 >= 0)
	{
		switch (iParam2)
		{
			case 0:
				return BitTest(*uParam0, 0);
			case 1:
				return BitTest(*uParam0, 1);
			case 2:
				return BitTest(*uParam0, 2);
			case 3:
				return BitTest(*uParam0, 3);
			case 4:
				return BitTest(*uParam0, 4);
			case 5:
				return BitTest(*uParam0, 5);
			case 6:
				return BitTest(*uParam0, 6);
			case 7:
				return BitTest(*uParam0, 7);
			case 8:
				return BitTest(*uParam1, 0);
			case 9:
				return BitTest(*uParam1, 1);
			case 10:
				return BitTest(*uParam1, 2);
			case 11:
				return BitTest(*uParam1, 3);
			}
		default:
	}
	return 0;
}

int func_973(int iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x18644D
{
	if (iParam0 != -1)
	{
		if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_530, 14))
		{
			return 1;
		}
	}
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(*uParam1, 9);
			case 1:
				return BitTest(*uParam1, 10);
			case 2:
				return BitTest(*uParam1, 11);
			case 3:
				return BitTest(*uParam1, 12);
			case 4:
				return BitTest(*uParam1, 13);
			case 5:
				return BitTest(*uParam1, 14);
			case 6:
				return BitTest(*uParam1, 15);
			case 7:
				return BitTest(*uParam1, 16);
			case 8:
				return BitTest(*uParam2, 4);
			case 9:
				return BitTest(*uParam2, 5);
			case 10:
				return BitTest(*uParam2, 6);
			case 11:
				return BitTest(*uParam2, 7);
			}
		default:
	}
	return 0;
}

int func_974(int iParam0, var uParam1, var uParam2, int iParam3)//Position - 0x18653F
{
	if (iParam0 != -1)
	{
		if (BitTest(Global_4980736.f_94390[iParam0 /*1004*/].f_530, 13))
		{
			return 1;
		}
	}
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(*uParam1, 1);
			case 1:
				return BitTest(*uParam1, 2);
			case 2:
				return BitTest(*uParam1, 3);
			case 3:
				return BitTest(*uParam1, 4);
			case 4:
				return BitTest(*uParam1, 5);
			case 5:
				return BitTest(*uParam1, 6);
			case 6:
				return BitTest(*uParam1, 7);
			case 7:
				return BitTest(*uParam1, 8);
			case 8:
				return BitTest(*uParam2, 8);
			case 9:
				return BitTest(*uParam2, 9);
			case 10:
				return BitTest(*uParam2, 10);
			case 11:
				return BitTest(*uParam2, 11);
			}
		default:
	}
	return 0;
}

int func_975(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x18662E
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 20);
			case 1:
				return BitTest(uParam0, 21);
			case 2:
				return BitTest(uParam0, 22);
			case 3:
				return BitTest(uParam0, 23);
			case 4:
				return BitTest(uParam0, 24);
			case 5:
				return BitTest(uParam1, 25);
			case 6:
				return BitTest(uParam1, 26);
			case 7:
				return BitTest(uParam1, 27);
			case 8:
				return BitTest(*uParam2, 12);
			case 9:
				return BitTest(*uParam2, 13);
			case 10:
				return BitTest(*uParam2, 14);
			case 11:
				return BitTest(*uParam2, 15);
			}
		default:
	}
	return 0;
}

int func_976(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x1866FB
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 11);
			case 1:
				return BitTest(uParam0, 12);
			case 2:
				return BitTest(uParam0, 13);
			case 3:
				return BitTest(uParam0, 14);
			case 4:
				return BitTest(uParam0, 15);
			case 5:
				return BitTest(uParam1, 22);
			case 6:
				return BitTest(uParam1, 23);
			case 7:
				return BitTest(uParam1, 24);
			case 8:
				return BitTest(*uParam2, 16);
			case 9:
				return BitTest(*uParam2, 17);
			case 10:
				return BitTest(*uParam2, 18);
			case 11:
				return BitTest(*uParam2, 19);
			}
		default:
	}
	return 0;
}

int func_977(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x1867C8
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 0);
			case 1:
				return BitTest(uParam0, 1);
			case 2:
				return BitTest(uParam0, 2);
			case 3:
				return BitTest(uParam0, 3);
			case 4:
				return BitTest(uParam0, 4);
			case 5:
				return BitTest(uParam1, 19);
			case 6:
				return BitTest(uParam1, 20);
			case 7:
				return BitTest(uParam1, 21);
			case 8:
				return BitTest(*uParam2, 20);
			case 9:
				return BitTest(*uParam2, 21);
			case 10:
				return BitTest(*uParam2, 22);
			case 11:
				return BitTest(*uParam2, 23);
			}
		default:
	}
	return 0;
}

int func_978(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x186890
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 22);
			case 1:
				return BitTest(uParam0, 23);
			case 2:
				return BitTest(uParam0, 24);
			case 3:
				return BitTest(uParam0, 25);
			case 4:
				return BitTest(uParam0, 26);
			case 5:
				return BitTest(uParam1, 16);
			case 6:
				return BitTest(uParam1, 17);
			case 7:
				return BitTest(uParam1, 18);
			case 8:
				return BitTest(*uParam2, 24);
			case 9:
				return BitTest(*uParam2, 25);
			case 10:
				return BitTest(*uParam2, 26);
			case 11:
				return BitTest(*uParam2, 27);
			}
		default:
	}
	return 0;
}

int func_979(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x18695D
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 17);
			case 1:
				return BitTest(uParam0, 18);
			case 2:
				return BitTest(uParam0, 19);
			case 3:
				return BitTest(uParam0, 20);
			case 4:
				return BitTest(uParam0, 21);
			case 5:
				return BitTest(uParam1, 13);
			case 6:
				return BitTest(uParam1, 14);
			case 7:
				return BitTest(uParam1, 15);
			case 8:
				return BitTest(*uParam2, 28);
			case 9:
				return BitTest(*uParam2, 29);
			case 10:
				return BitTest(*uParam2, 30);
			case 11:
				return BitTest(*uParam2, 31);
			}
		default:
	}
	return 0;
}

int func_980(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x186A2A
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 10);
			case 1:
				return BitTest(uParam0, 11);
			case 2:
				return BitTest(uParam0, 12);
			case 3:
				return BitTest(uParam0, 13);
			case 4:
				return BitTest(uParam0, 14);
			case 5:
				return BitTest(uParam1, 10);
			case 6:
				return BitTest(uParam1, 11);
			case 7:
				return BitTest(uParam1, 12);
			case 8:
				return BitTest(*uParam2, 0);
				break;
			case 9:
				return BitTest(*uParam2, 1);
				break;
			case 10:
				return BitTest(*uParam2, 2);
				break;
			case 11:
				return BitTest(*uParam2, 3);
				break;
			}
	}
	return 0;
}

int func_981(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x186AFF
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 5);
			case 1:
				return BitTest(uParam0, 6);
			case 2:
				return BitTest(uParam0, 7);
			case 3:
				return BitTest(uParam0, 8);
			case 4:
				return BitTest(uParam0, 9);
			case 5:
				return BitTest(uParam1, 7);
			case 6:
				return BitTest(uParam1, 8);
			case 7:
				return BitTest(uParam1, 9);
			case 8:
				return BitTest(*uParam2, 4);
			case 9:
				return BitTest(*uParam2, 5);
			case 10:
				return BitTest(*uParam2, 6);
			case 11:
				return BitTest(*uParam2, 7);
			}
		default:
	}
	return 0;
}

int func_982(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x186BC4
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 0);
			case 1:
				return BitTest(uParam0, 1);
			case 2:
				return BitTest(uParam0, 2);
			case 3:
				return BitTest(uParam0, 3);
			case 4:
				return BitTest(uParam0, 4);
			case 5:
				return BitTest(uParam1, 4);
			case 6:
				return BitTest(uParam1, 5);
			case 7:
				return BitTest(uParam1, 6);
			case 8:
				return BitTest(*uParam2, 8);
				break;
			case 9:
				return BitTest(*uParam2, 9);
				break;
			case 10:
				return BitTest(*uParam2, 10);
				break;
			case 11:
				return BitTest(*uParam2, 11);
				break;
			}
	}
	return 0;
}

int func_983(var uParam0, var uParam1, var uParam2, int iParam3)//Position - 0x186C95
{
	if (iParam3 < 12 && iParam3 >= 0)
	{
		switch (iParam3)
		{
			case 0:
				return BitTest(uParam0, 25);
			case 1:
				return BitTest(uParam0, 26);
			case 2:
				return BitTest(uParam0, 27);
			case 3:
				return BitTest(uParam0, 28);
			case 4:
				return BitTest(uParam0, 29);
			case 5:
				return BitTest(uParam1, 1);
			case 6:
				return BitTest(uParam1, 2);
			case 7:
				return BitTest(uParam1, 3);
			case 8:
				return BitTest(*uParam2, 12);
			case 9:
				return BitTest(*uParam2, 13);
			case 10:
				return BitTest(*uParam2, 14);
			case 11:
				return BitTest(*uParam2, 15);
			}
		default:
	}
	return 0;
}

void func_984(var uParam0, int iParam1, int iParam2)//Position - 0x186D5F
{
	if (iParam1 > 12 || iParam1 <= -1)
	{
		return;
	}
	MISC::SET_BIT(&(uParam0->f_7[iParam1 /*27*/][(iParam2 / 32)]), (iParam2 % 32));
}

int func_985(var uParam0, var uParam1, var uParam2, var uParam3, int iParam4)//Position - 0x186D94
{
	if (iParam4 < 12 && iParam4 >= 0)
	{
		switch (iParam4)
		{
			case 0:
				return BitTest(uParam0, 6);
			case 1:
				return BitTest(uParam0, 16);
			case 2:
				return BitTest(uParam0, 17);
			case 3:
				return BitTest(uParam0, 18);
			case 4:
				return BitTest(uParam0, 19);
			case 5:
				return BitTest(uParam1, 30);
			case 6:
				return BitTest(uParam1, 31);
			case 7:
				return BitTest(uParam2, 0);
			case 8:
				return BitTest(*uParam3, 12);
			case 9:
				return BitTest(*uParam3, 13);
			case 10:
				return BitTest(*uParam3, 14);
			case 11:
				return BitTest(*uParam3, 15);
			}
		default:
	}
	return 0;
}

int func_986(int iParam0)//Position - 0x18C3B0
{
	if (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((iParam0 == joaat("WEAPON_PISTOL") || iParam0 == joaat("WEAPON_MICROSMG")) || iParam0 == joaat("WEAPON_SMG")) || iParam0 == joaat("WEAPON_ASSAULTRIFLE")) || iParam0 == joaat("WEAPON_ADVANCEDRIFLE")) || iParam0 == joaat("WEAPON_MG")) || iParam0 == joaat("WEAPON_COMBATMG")) || iParam0 == joaat("WEAPON_PUMPSHOTGUN")) || iParam0 == joaat("WEAPON_SAWNOFFSHOTGUN")) || iParam0 == joaat("WEAPON_SNIPERRIFLE")) || iParam0 == joaat("WEAPON_HEAVYSNIPER")) || iParam0 == joaat("WEAPON_GRENADELAUNCHER")) || iParam0 == joaat("WEAPON_RPG")) || iParam0 == joaat("WEAPON_MINIGUN")) || iParam0 == joaat("WEAPON_KNIFE")) || iParam0 == joaat("WEAPON_BAT")) || iParam0 == joaat("WEAPON_UNARMED")) || iParam0 == joaat("WEAPON_MACHINEPISTOL")) || iParam0 == joaat("WEAPON_GRENADE")) || iParam0 == joaat("WEAPON_STICKYBOMB")) || iParam0 == joaat("WEAPON_MOLOTOV")) || iParam0 == joaat("WEAPON_PIPEBOMB")) || iParam0 == joaat("WEAPON_CARBINERIFLE")) || iParam0 == joaat("WEAPON_CROWBAR")) || iParam0 == joaat("WEAPON_HAMMER")) || iParam0 == joaat("WEAPON_WRENCH")) || iParam0 == joaat("WEAPON_SPECIALCARBINE")) || iParam0 == joaat("WEAPON_BULLPUPRIFLE")) || iParam0 == joaat("WEAPON_HEAVYSHOTGUN")) || iParam0 == joaat("WEAPON_BULLPUPSHOTGUN")) || iParam0 == joaat("WEAPON_ASSAULTSHOTGUN")) || iParam0 == joaat("WEAPON_ASSAULTSMG")) || iParam0 == joaat("WEAPON_COMBATPDW")) || iParam0 == joaat("WEAPON_SPECIALCARBINE_MK2")) || iParam0 == joaat("WEAPON_PISTOL_MK2")) || iParam0 == joaat("WEAPON_MILITARYRIFLE")) || iParam0 == joaat("WEAPON_ASSAULTRIFLE_MK2")) || iParam0 == joaat("WEAPON_COMPACTRIFLE")) || iParam0 == joaat("WEAPON_MINISMG")) || iParam0 == joaat("WEAPON_SNSPISTOL")) || iParam0 == joaat("WEAPON_VINTAGEPISTOL")) || iParam0 == joaat("WEAPON_DBSHOTGUN")) || iParam0 == joaat("WEAPON_MUSKET")) || iParam0 == joaat("WEAPON_NAVYREVOLVER")) || iParam0 == joaat("WEAPON_BOTTLE")) || iParam0 == joaat("WEAPON_DAGGER")) || iParam0 == joaat("WEAPON_HATCHET")) || iParam0 == joaat("WEAPON_COMBATPISTOL")) || iParam0 == joaat("WEAPON_PISTOL50")) || iParam0 == joaat("WEAPON_SNSPISTOL")) || iParam0 == joaat("WEAPON_SNSPISTOL_MK2")) || iParam0 == joaat("WEAPON_HEAVYPISTOL")) || iParam0 == joaat("WEAPON_VINTAGEPISTOL")) || iParam0 == joaat("WEAPON_CERAMICPISTOL")) || iParam0 == joaat("WEAPON_VINTAGEPISTOL")) || iParam0 == joaat("WEAPON_MARKSMANRIFLE")) || iParam0 == joaat("WEAPON_REVOLVER")) || iParam0 == joaat("WEAPON_REVOLVER_MK2")) || iParam0 == joaat("WEAPON_DOUBLEACTION")) || iParam0 == joaat("WEAPON_NAVYREVOLVER")) || iParam0 == joaat("WEAPON_STUNGUN")) || iParam0 == joaat("WEAPON_FLAREGUN")) || iParam0 == joaat("WEAPON_RAYPISTOL")) || iParam0 == joaat("WEAPON_PUMPSHOTGUN_MK2")) || iParam0 == joaat("WEAPON_MUSKET")) || iParam0 == joaat("WEAPON_DBSHOTGUN")) || iParam0 == joaat("WEAPON_AUTOSHOTGUN")) || iParam0 == joaat("WEAPON_ASSAULTRIFLE_MK2")) || iParam0 == joaat("WEAPON_CARBINERIFLE_MK2")) || iParam0 == joaat("WEAPON_BULLPUPRIFLE_MK2")) || iParam0 == joaat("WEAPON_COMPACTRIFLE")) || iParam0 == joaat("WEAPON_MINISMG")) || iParam0 == joaat("WEAPON_SMG_MK2")) || iParam0 == joaat("WEAPON_COMBATMG_MK2")) || iParam0 == joaat("WEAPON_GUSENBERG")) || iParam0 == joaat("WEAPON_RAYCARBINE")) || iParam0 == joaat("WEAPON_FIREWORK")) || iParam0 == joaat("WEAPON_HOMINGLAUNCHER")) || iParam0 == joaat("WEAPON_COMPACTLAUNCHER")) || iParam0 == joaat("WEAPON_RAYMINIGUN")) || iParam0 == joaat("WEAPON_HEAVYSNIPER_MK2")) || iParam0 == joaat("WEAPON_MARKSMANRIFLE")) || iParam0 == joaat("WEAPON_MARKSMANRIFLE_MK2")) || iParam0 == joaat("WEAPON_STONE_HATCHET")) || iParam0 == joaat("WEAPON_POOLCUE")) || iParam0 == joaat("WEAPON_BATTLEAXE")) || iParam0 == joaat("WEAPON_NIGHTSTICK")) || iParam0 == joaat("WEAPON_SWITCHBLADE")) || iParam0 == joaat("WEAPON_FLASHLIGHT")) || iParam0 == joaat("WEAPON_KNUCKLE")) || iParam0 == joaat("WEAPON_GOLFCLUB")) || iParam0 == joaat("WEAPON_STUNGUN_MP")) || iParam0 == joaat("WEAPON_EMPLAUNCHER")) || iParam0 == joaat("WEAPON_TACTICALRIFLE")) || iParam0 == joaat("WEAPON_PRECISIONRIFLE")) || iParam0 == joaat("WEAPON_HEAVYRIFLE"))
	{
		return 1;
	}
	return 0;
}

void func_987(var uParam0, bool bParam1, var* uParam2, var* uParam3, var* uParam4, var* uParam5, var* uParam6, var* uParam7, var* uParam8, var* uParam9, var* uParam10)//Position - 0x18DDA7
{
	struct<9> Var0;
	Var0.f_2 = 1065353216;
	Var0.f_3 = 1077936128;
	Var0.f_4 = 1082130432;
	Var0.f_5 = 1077936128;
	Var0.f_6 = -1;
	Var0.f_7 = -1;
	Var0.f_8 = -1;
	*uParam0 = { Var0 };
	if (*uParam2 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam2, bParam1) == 2)
	{
		*uParam0 = DATAFILE::DATAARRAY_GET_INT(*uParam2, bParam1);
	}
	if (*uParam3 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam3, bParam1) == 3)
	{
		uParam0->f_1 = DATAFILE::DATAARRAY_GET_FLOAT(*uParam3, bParam1);
	}
	if (*uParam4 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam4, bParam1) == 3)
	{
		uParam0->f_2 = DATAFILE::DATAARRAY_GET_FLOAT(*uParam4, bParam1);
	}
	if (*uParam5 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam5, bParam1) == 3)
	{
		uParam0->f_3 = DATAFILE::DATAARRAY_GET_FLOAT(*uParam5, bParam1);
	}
	if (*uParam6 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam6, bParam1) == 3)
	{
		uParam0->f_4 = DATAFILE::DATAARRAY_GET_FLOAT(*uParam6, bParam1);
	}
	if (*uParam7 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam7, bParam1) == 3)
	{
		uParam0->f_5 = DATAFILE::DATAARRAY_GET_FLOAT(*uParam7, bParam1);
	}
	if (*uParam8 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam8, bParam1) == 2)
	{
		uParam0->f_6 = DATAFILE::DATAARRAY_GET_INT(*uParam8, bParam1);
	}
	if (*uParam9 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam9, bParam1) == 2)
	{
		uParam0->f_7 = DATAFILE::DATAARRAY_GET_INT(*uParam9, bParam1);
	}
	if (*uParam10 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam10, bParam1) == 2)
	{
		uParam0->f_8 = DATAFILE::DATAARRAY_GET_INT(*uParam10, bParam1);
	}
}

void func_988(var uParam0, bool bParam1, var* uParam2, var* uParam3)//Position - 0x18DF42
{
	if (*uParam2 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam2, bParam1) == 2)
	{
		*uParam0 = DATAFILE::DATAARRAY_GET_INT(*uParam2, bParam1);
	}
	if (*uParam3 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam3, bParam1) == 2)
	{
		uParam0->f_1 = DATAFILE::DATAARRAY_GET_INT(*uParam3, bParam1);
	}
}

void func_989(int iParam0)//Position - 0x18E1C5
{
	if (*iParam0 == -1861812544)
	{
		*iParam0 = joaat("sum_prop_ac_rock_01a");
	}
	else if (*iParam0 == -1851129850)
	{
		*iParam0 = joaat("sum_prop_ac_rock_01b");
	}
	else if (*iParam0 == -1533303319)
	{
		*iParam0 = joaat("sum_prop_ac_rock_01c");
	}
	else if (*iParam0 == -1186607299)
	{
		*iParam0 = joaat("sum_prop_ac_rock_01d");
	}
	else if (*iParam0 == -943821778)
	{
		*iParam0 = joaat("sum_prop_ac_rock_01e");
	}
	else if (*iParam0 == -1868489442)
	{
		*iParam0 = joaat("sum_prop_ac_pit_sign_left");
	}
	else if (*iParam0 == 1308353333)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_01");
	}
	else if (*iParam0 == 1456915955)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_0l1");
	}
	else if (*iParam0 == 1907350248)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_0r1");
	}
	else if (*iParam0 == 599363249)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_02");
	}
	else if (*iParam0 == 92066360)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_04");
	}
	else if (*iParam0 == 828910094)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_03");
	}
	else if (*iParam0 == 357986795)
	{
		*iParam0 = joaat("sum_prop_ac_wall_sign_05");
	}
	else if (*iParam0 == -1652280004)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_lit_01");
	}
	else if (*iParam0 == -1805969005)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_lit_0r1");
	}
	else if (*iParam0 == 337086132)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_lit_0l1");
	}
	else if (*iParam0 == -19979547)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_pit_l");
	}
	else if (*iParam0 == -1862711501)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_pit_r");
	}
	else if (*iParam0 == 1372569558)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_u_l");
	}
	else if (*iParam0 == -1994641814)
	{
		*iParam0 = joaat("sum_prop_ac_tyre_wall_u_r");
	}
	else if (*iParam0 == 261612790)
	{
		*iParam0 = joaat("sum_prop_archway_01");
	}
	else if (*iParam0 == -894411992)
	{
		*iParam0 = joaat("sum_prop_archway_02");
	}
	else if (*iParam0 == 2075999603)
	{
		*iParam0 = joaat("sum_prop_archway_03");
	}
	else if (*iParam0 == 1881752441)
	{
		*iParam0 = joaat("sum_prop_ac_pit_sign_r_01a");
	}
	else if (*iParam0 == -24901620)
	{
		*iParam0 = joaat("sum_prop_ac_pit_sign_l_01a");
	}
	else if (*iParam0 == 262055884)
	{
		*iParam0 = joaat("sum_prop_ac_track_pit_stop_16l");
	}
	else if (*iParam0 == -677595155)
	{
		*iParam0 = joaat("sum_prop_ac_track_pit_stop_16r");
	}
	else if (*iParam0 == 320802763)
	{
		*iParam0 = joaat("sum_prop_ac_track_pit_stop_30l");
	}
	else if (*iParam0 == 82867054)
	{
		*iParam0 = joaat("sum_prop_ac_track_pit_stop_30r");
	}
	else if (*iParam0 == -147296475)
	{
		*iParam0 = joaat("sum_prop_ac_track_pit_stop_01");
	}
	else if (*iParam0 == 1993724063)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_45");
	}
	else if (*iParam0 == -1707006199)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_lc");
	}
	else if (*iParam0 == -322856868)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_135");
	}
	else if (*iParam0 == 810174293)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_180d");
	}
	else if (*iParam0 == -764155579)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_45");
	}
	else if (*iParam0 == -1016370941)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_135");
	}
	else if (*iParam0 == 1007762428)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_180d");
	}
	else if (*iParam0 == -810402164)
	{
		*iParam0 = joaat("sum_prop_race_barrier_01_sec");
	}
	else if (*iParam0 == 1054513951)
	{
		*iParam0 = joaat("sum_prop_race_barrier_02_sec");
	}
	else if (*iParam0 == -1927050814)
	{
		*iParam0 = joaat("sum_prop_race_barrier_04_sec");
	}
	else if (*iParam0 == -471725193)
	{
		*iParam0 = joaat("sum_prop_race_barrier_08_sec");
	}
	else if (*iParam0 == -155668237)
	{
		*iParam0 = joaat("sum_prop_race_barrier_16_sec");
	}
	else if (*iParam0 == -724464858)
	{
		*iParam0 = joaat("sum_prop_ac_short_barrier_05d");
	}
	else if (*iParam0 == 2228859)
	{
		*iParam0 = joaat("sum_prop_ac_short_barrier_15d");
	}
	else if (*iParam0 == 1802255136)
	{
		*iParam0 = joaat("sum_prop_ac_short_barrier_30d");
	}
	else if (*iParam0 == -214062967)
	{
		*iParam0 = joaat("sum_prop_ac_short_barrier_45d");
	}
	else if (*iParam0 == 631255219)
	{
		*iParam0 = joaat("sum_prop_ac_short_barrier_90d");
	}
	else if (*iParam0 == 1069667067)
	{
		*iParam0 = joaat("sum_prop_ac_long_barrier_05d");
	}
	else if (*iParam0 == 1900578634)
	{
		*iParam0 = joaat("sum_prop_ac_long_barrier_15d");
	}
	else if (*iParam0 == 1484108471)
	{
		*iParam0 = joaat("sum_prop_ac_long_barrier_30d");
	}
	else if (*iParam0 == 921491744)
	{
		*iParam0 = joaat("sum_prop_ac_long_barrier_45d");
	}
	else if (*iParam0 == -1818585231)
	{
		*iParam0 = joaat("sum_prop_ac_long_barrier_90d");
	}
	else if (*iParam0 == -210764767)
	{
		*iParam0 = joaat("sum_prop_barrier_ac_bend_05d");
	}
	else if (*iParam0 == 1211651983)
	{
		*iParam0 = joaat("sum_prop_barrier_ac_bend_15d");
	}
	else if (*iParam0 == -1974539354)
	{
		*iParam0 = joaat("sum_prop_barrier_ac_bend_30d");
	}
	else if (*iParam0 == -832013963)
	{
		*iParam0 = joaat("sum_prop_barrier_ac_bend_45d");
	}
	else if (*iParam0 == 118315381)
	{
		*iParam0 = joaat("sum_prop_barrier_ac_bend_90d");
	}
	else if (*iParam0 == -8734659)
	{
		*iParam0 = joaat("sum_prop_track_ac_straight_bar_s_s");
	}
	else if (*iParam0 == 2067905173)
	{
		*iParam0 = joaat("sum_prop_track_ac_straight_bar_s");
	}
	else if (*iParam0 == -334932667)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_m_out");
	}
	else if (*iParam0 == 2070963532)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_m_in");
	}
	else if (*iParam0 == -687271813)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_l_out");
	}
	else if (*iParam0 == 696455424)
	{
		*iParam0 = joaat("sum_prop_track_ac_bend_bar_l_b");
	}
	else if (*iParam0 == -425898182)
	{
		*iParam0 = joaat("sum_prop_ac_track_paddock_01");
	}
	else if (*iParam0 == -458535644)
	{
		*iParam0 = joaat("sum_prop_track_pit_garage_05a");
	}
	else if (*iParam0 == -937127205)
	{
		*iParam0 = joaat("sum_prop_track_pit_garage_04a");
	}
	else if (*iParam0 == 1470014629)
	{
		*iParam0 = joaat("sum_prop_track_pit_garage_03a");
	}
	else if (*iParam0 == -1878093276)
	{
		*iParam0 = joaat("sum_prop_track_pit_garage_02a");
	}
	else if (*iParam0 == 479937070)
	{
		*iParam0 = joaat("sum_prop_ac_pit_garage_01a");
	}
	else if (*iParam0 == 913119601)
	{
		*iParam0 = joaat("sum_prop_ac_grandstand_01a");
	}
	else if (*iParam0 == 912618411)
	{
		*iParam0 = joaat("sum_prop_ac_barge_01");
	}
	else if (*iParam0 == -695492201)
	{
		*iParam0 = joaat("sum_prop_ac_ind_light_02a");
	}
	else if (*iParam0 == 1477685997)
	{
		*iParam0 = joaat("sum_prop_ac_ind_light_03c");
	}
	else if (*iParam0 == -1233037607)
	{
		*iParam0 = joaat("sum_prop_ac_ind_light_04");
	}
	else if (*iParam0 == -1020580875)
	{
		*iParam0 = joaat("sum_prop_ac_wall_light_09a");
	}
}

int func_990(int iParam0)//Position - 0x19007F
{
	switch (iParam0)
	{
		case 0:
			return 0;
		case 1:
			return 5000;
		case 2:
			return 10000;
		case 3:
			return 20000;
		case 4:
			return 30000;
		case 5:
			return 45000;
		case 6:
			return 60000;
		default:
	}
	return 0;
}

int func_991(int iParam0)//Position - 0x1900E3
{
	if (((iParam0 == joaat("ch_prop_track_paddock_01") || iParam0 == joaat("sum_prop_ac_track_paddock_01")) || iParam0 == joaat("ch_prop_track_pit_garage_01a")) || iParam0 == joaat("sum_prop_ac_grandstand_01a"))
	{
		return 1;
	}
	return 0;
}

bool func_992()//Position - 0x190125
{
	return Global_4718592 == 2;
}

int func_993(int iParam0)//Position - 0x190133
{
	if ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((iParam0 == joaat("prop_sec_gate_01d") || iParam0 == joaat("prop_vault_shutter")) || iParam0 == joaat("gr_prop_gr_bunkeddoor")) || iParam0 == joaat("prop_worklight_01a")) || iParam0 == joaat("prop_worklight_02a")) || iParam0 == joaat("prop_worklight_03a")) || iParam0 == joaat("prop_worklight_03b")) || iParam0 == joaat("prop_worklight_04b")) || iParam0 == joaat("prop_worklight_04d")) || iParam0 == joaat("prop_ind_coalcar_02")) || iParam0 == joaat("xm_prop_x17_osphatch_27m")) || iParam0 == joaat("imp_prop_impexp_boxpile_01")) || iParam0 == joaat("hei_prop_carrier_cargo_01a")) || iParam0 == joaat("sr_prop_sr_boxpile_02")) || iParam0 == joaat("sr_prop_sr_boxpile_03")) || iParam0 == joaat("prop_water_ramp_01")) || iParam0 == joaat("prop_water_ramp_02")) || iParam0 == joaat("prop_water_ramp_03")) || iParam0 == joaat("stt_prop_track_bend_l")) || iParam0 == joaat("stt_prop_track_bend2_l")) || iParam0 == joaat("stt_prop_track_bend_bar_l")) || iParam0 == joaat("stt_prop_track_bend2_bar_l")) || iParam0 == joaat("prop_ld_alarm_01")) || iParam0 == joaat("ind_prop_dlc_flag_02")) || iParam0 == joaat("prop_flare_01")) || iParam0 == joaat("hei_prop_bank_plug")) || iParam0 == joaat("hei_prop_wall_alarm_on")) || iParam0 == joaat("hei_prop_wall_alarm_off")) || iParam0 == joaat("hei_prop_hei_cash_trolly_03")) || iParam0 == joaat("hei_prop_carrier_docklight_01")) || iParam0 == joaat("hei_prop_carrier_docklight_02")) || iParam0 == joaat("hei_prop_wall_light_10a_cr")) || iParam0 == joaat("hei_prop_heist_apecrate")) || iParam0 == joaat("hei_prop_cc_metalcover_01")) || iParam0 == joaat("hei_prop_bank_alarm_01")) || iParam0 == joaat("prop_road_memorial_02")) || iParam0 == joaat("prop_boombox_01")) || iParam0 == joaat("prop_ghettoblast_02")) || iParam0 == joaat("prop_tapeplayer_01")) || iParam0 == joaat("prop_radio_01")) || iParam0 == joaat("prop_shamal_crash")) || iParam0 == joaat("apa_mp_apa_crashed_usaf_01a")) || iParam0 == joaat("ind_prop_firework_01")) || iParam0 == -1305574636) || iParam0 == joaat("ba_prop_battle_mast_01a")) || iParam0 == joaat("sr_prop_spec_target_s_01a")) || iParam0 == joaat("sr_prop_spec_target_m_01a")) || iParam0 == joaat("sr_prop_spec_target_b_01a")) || iParam0 == joaat("w_ar_railgun")) || iParam0 == joaat("prop_cs_heist_bag_01")) || iParam0 == joaat("prop_bikerset")) || iParam0 == joaat("prop_champset")) || iParam0 == joaat("xm_prop_x17_desk_cover_01a")) || iParam0 == joaat("xm_prop_x17_tool_draw_01a")) || iParam0 == joaat("xm_prop_x17_filecab_01a")) || iParam0 == joaat("xm_prop_x17_labvats")) || iParam0 == joaat("xm_prop_x17_seat_cover_01a")) || iParam0 == joaat("xm_prop_x17_tv_stand_01a")) || iParam0 == joaat("xm_prop_x17_bag_01a")) || iParam0 == joaat("xm_prop_x17_bag_med_01a")) || iParam0 == joaat("xm_prop_x17_sub")) || iParam0 == joaat("xm_prop_base_cabinet_door_01")) || iParam0 == joaat("U_F_Y_corpse_01")) || iParam0 == joaat("U_F_Y_corpse_02")) || iParam0 == joaat("xm_prop_x17_corpse_01")) || iParam0 == joaat("xm_prop_x17_corpse_02")) || iParam0 == joaat("xm_prop_x17_corpse_03")) || iParam0 == joaat("xm_prop_x17_shovel_01b")) || iParam0 == joaat("xm_prop_x17_shovel_01a")) || iParam0 == joaat("xm_prop_x17_note_paper_01a")) || iParam0 == joaat("xm_prop_x17_chest_closed")) || iParam0 == joaat("xm_prop_x17_chest_open")) || iParam0 == joaat("gr_prop_gr_crates_pistols_01a")) || iParam0 == joaat("gr_prop_gr_crates_rifles_01a")) || iParam0 == joaat("gr_prop_gr_crates_rifles_02a")) || iParam0 == joaat("gr_prop_gr_crates_rifles_03a")) || iParam0 == joaat("gr_prop_gr_crates_rifles_04a")) || iParam0 == joaat("gr_prop_gr_crates_sam_01a")) || iParam0 == joaat("gr_prop_gr_crates_weapon_mix_01a")) || iParam0 == joaat("gr_prop_gr_gunsmithsupl_01a")) || iParam0 == joaat("gr_prop_gr_gunsmithsupl_02a")) || iParam0 == joaat("gr_prop_gr_gunsmithsupl_03a")) || iParam0 == joaat("gr_prop_gr_rsply_crate01a")) || iParam0 == joaat("gr_prop_gr_rsply_crate02a")) || iParam0 == joaat("gr_prop_gr_rsply_crate03a")) || iParam0 == joaat("hei_heist_apart2_door")) || iParam0 == joaat("prop_target_ora_purp_01")) || iParam0 == joaat("gr_prop_gr_target_01a")) || iParam0 == joaat("gr_prop_gr_target_01b")) || iParam0 == joaat("gr_prop_gr_target_02a")) || iParam0 == joaat("gr_prop_gr_target_02b")) || iParam0 == joaat("gr_prop_gr_bench_01a")) || iParam0 == joaat("gr_prop_gr_bench_01b")) || iParam0 == joaat("gr_prop_gr_bench_02a")) || iParam0 == joaat("gr_prop_gr_bench_02b")) || iParam0 == joaat("gr_prop_gr_speeddrill_01a")) || iParam0 == joaat("gr_prop_gr_vertmill_01a")) || iParam0 == joaat("gr_prop_gr_cratespile_01a")) || iParam0 == joaat("imp_prop_covered_vehicle_01a")) || iParam0 == joaat("imp_prop_covered_vehicle_04a")) || iParam0 == joaat("imp_prop_covered_vehicle_02a")) || iParam0 == joaat("imp_prop_covered_vehicle_05a")) || iParam0 == joaat("imp_prop_covered_vehicle_03a")) || iParam0 == joaat("imp_prop_covered_vehicle_06a")) || iParam0 == joaat("gr_prop_gr_target_1_01a")) || iParam0 == joaat("gr_prop_gr_target_1_01b")) || iParam0 == joaat("gr_prop_gr_target_2_04a")) || iParam0 == joaat("gr_prop_gr_target_2_04b")) || iParam0 == joaat("gr_prop_gr_target_3_03a")) || iParam0 == joaat("gr_prop_gr_target_3_03b")) || iParam0 == joaat("gr_prop_gr_target_4_01a")) || iParam0 == joaat("gr_prop_gr_target_4_01b")) || iParam0 == joaat("gr_prop_gr_target_5_01a")) || iParam0 == joaat("gr_prop_gr_target_5_01b")) || iParam0 == joaat("gr_prop_gr_target_small_01a")) || iParam0 == joaat("gr_prop_gr_target_small_01b")) || iParam0 == joaat("gr_prop_gr_target_small_03a")) || iParam0 == joaat("gr_prop_gr_target_small_02a")) || iParam0 == joaat("gr_prop_gr_target_small_06a")) || iParam0 == joaat("gr_prop_gr_target_small_07a")) || iParam0 == joaat("gr_prop_gr_target_small_04a")) || iParam0 == joaat("gr_prop_gr_target_small_05a")) || iParam0 == joaat("gr_prop_gr_target_long_01a")) || iParam0 == joaat("gr_prop_gr_target_large_01a")) || iParam0 == joaat("gr_prop_gr_target_large_01b")) || iParam0 == joaat("gr_prop_gr_target_trap_01a")) || iParam0 == joaat("gr_prop_gr_target_trap_02a")) || iParam0 == joaat("ar_prop_ar_tube_crn")) || iParam0 == joaat("ar_prop_ar_tube_fork")) || iParam0 == joaat("ar_prop_ar_tube_cross")) || iParam0 == joaat("ar_prop_ar_tube_2x_crn")) || iParam0 == joaat("ar_prop_ar_tube_2x_crn2")) || iParam0 == joaat("ar_prop_ar_tube_2x_crn_30d")) || iParam0 == joaat("ar_prop_ar_tube_2x_crn_15d")) || iParam0 == joaat("ar_prop_ar_tube_4x_crn")) || iParam0 == joaat("ar_prop_ar_tube_4x_crn2")) || iParam0 == joaat("ar_prop_ar_tube_4x_crn_30d")) || iParam0 == joaat("ar_prop_ar_tube_4x_crn_15d")) || iParam0 == joaat("ar_prop_ar_stunt_block_01a")) || iParam0 == joaat("ar_prop_ar_stunt_block_01b")) || iParam0 == joaat("ar_prop_ar_tube_4x_speed")) || iParam0 == joaat("gr_prop_damship_01a")) || iParam0 == joaat("xm_prop_base_jet_01")) || iParam0 == joaat("xm_prop_base_jet_02")) || iParam0 == joaat("bkr_prop_mast_01a")) || iParam0 == joaat("xm_prop_gr_console_01")) || iParam0 == joaat("prop_cabinet_01b")) || iParam0 == joaat("ch_prop_ch_casino_shutter01x")) || iParam0 == joaat("ch_prop_stunt_landing_zone_01a")) || iParam0 == joaat("ch_prop_track_ch_bend_45")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_45d")) || iParam0 == joaat("ch_prop_ch_tunnel_door01a")) || iParam0 == joaat("ch_prop_track_pit_stop_01")) || iParam0 == joaat("ch_prop_ch_room_trolly_01a")) || iParam0 == joaat("prop_bikerset")) || iParam0 == joaat("ch_prop_track_pit_garage_01a")) || iParam0 == joaat("ch_prop_track_paddock_01")) || iParam0 == joaat("sum_prop_ac_rock_01a")) || iParam0 == joaat("sum_prop_ac_rock_01b")) || iParam0 == joaat("sum_prop_ac_rock_01c")) || iParam0 == joaat("sum_prop_ac_rock_01d")) || iParam0 == joaat("sum_prop_ac_rock_01e")) || iParam0 == joaat("sum_prop_ac_ind_light_02a")) || iParam0 == joaat("sum_prop_ac_ind_light_03c")) || iParam0 == joaat("sum_prop_ac_ind_light_04")) || iParam0 == joaat("sum_prop_ac_wall_light_09a")) || iParam0 == joaat("ch_prop_track_ch_straight_bar_s_s")) || iParam0 == joaat("ch_prop_track_ch_straight_bar_s")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_l_out")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_l_b")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_m_out")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_m_in")) || iParam0 == joaat("ch_prop_track_ch_bend_180d")) || iParam0 == joaat("ch_prop_track_ch_bend_135")) || iParam0 == joaat("ch_prop_track_ch_bend_bar_135")) || iParam0 == joaat("h4_prop_h4_boxpile_01a")) || iParam0 == joaat("h4_prop_h4_tannoy_01a")) || iParam0 == joaat("h4_prop_h4_sign_cctv_01a")) || iParam0 == joaat("h4_prop_h4_sub_kos")) || iParam0 == joaat("h4_prop_h4_fence_seg_x1_01a")) || iParam0 == joaat("h4_prop_h4_fence_seg_x3_01a")) || iParam0 == joaat("h4_prop_h4_fence_seg_x5_01a")) || iParam0 == joaat("h4_prop_h4_fence_arches_x2_01a")) || iParam0 == joaat("h4_prop_h4_fence_arches_x3_01a")) || iParam0 == joaat("h4_prop_office_desk_01")) || iParam0 == joaat("h4_prop_h4_sec_cabinet_dum")) || iParam0 == joaat("h4_prop_h4_loch_monster")) || iParam0 == joaat("prop_box_wood02a_pu")) || iParam0 == joaat("h4_prop_h4_cctv_pole_04")) || iParam0 == joaat("h4_prop_h4_t_bottle_02a")) || iParam0 == joaat("h4_prop_h4_neck_disp_01a")) || iParam0 == joaat("h4_prop_h4_necklace_01a")) || iParam0 == joaat("h4_prop_h4_art_pant_01a")) || iParam0 == joaat("h4_prop_h4_diamond_disp_01a")) || iParam0 == joaat("h4_prop_h4_diamond_01a")) || iParam0 == joaat("gr_prop_inttruck_door_01")) || iParam0 == joaat("gr_prop_gr_trailer_tv")) || iParam0 == joaat("gr_prop_gr_trailer_tv_02")) || iParam0 == joaat("gr_prop_gr_trailer_monitor_01")) || iParam0 == joaat("gr_prop_gr_trailer_monitor_02")) || iParam0 == joaat("gr_prop_gr_trailer_monitor_03")) || iParam0 == joaat("tr_prop_tr_ramp_01a")) || iParam0 == joaat("tr_prop_tr_crates_sam_01a"))
	{
		return 1;
	}
	return 0;
}

int func_994(int iParam0)//Position - 0x190C84
{
	if (iParam0 == joaat("v_corp_conftable2"))
	{
		return 1;
	}
	return 0;
}

void func_995(bool bParam0, var* uParam1, var uParam2, int iParam3)//Position - 0x195A28
{
	int iVar0;
	iVar0 = Global_4980736.f_78578[bParam0 /*450*/].f_393;
	if (iVar0 < 0)
	{
		return;
	}
	if (*uParam1 != 0 && DATAFILE::DATAARRAY_GET_TYPE(*uParam1, iVar0) == 2)
	{
		*uParam2 = DATAFILE::DATAARRAY_GET_INT(*uParam1, iVar0);
	}
	else
	{
		*uParam2 = iParam3;
	}
}

int func_996(int iParam0)//Position - 0x195ABC
{
	if (!__LIB_0__::func_261())
	{
		if ((((((((((((((((((((((((((((((((((((((((((((iParam0 == joaat("trash2") || iParam0 == joaat("emperor2")) || iParam0 == joaat("emperor3")) || iParam0 == joaat("barracks3")) || iParam0 == joaat("slamvan2")) || iParam0 == joaat("boxville3")) || iParam0 == joaat("boxville4")) || iParam0 == joaat("picador")) || iParam0 == joaat("peyote")) || iParam0 == joaat("tornado")) || iParam0 == joaat("tr2")) || iParam0 == joaat("lurcher")) || iParam0 == joaat("btype2")) || iParam0 == joaat("limo2")) || iParam0 == joaat("dune4")) || iParam0 == joaat("ruiner3")) || iParam0 == joaat("cargoplane")) || iParam0 == joaat("trailerlarge")) || iParam0 == joaat("phantom3")) || iParam0 == joaat("hauler2")) || iParam0 == joaat("submersible2")) || iParam0 == joaat("policet")) || iParam0 == joaat("terbyte")) || iParam0 == joaat("blimp3")) || iParam0 == joaat("rcbandito")) || iParam0 == joaat("cargobob4")) || iParam0 == joaat("minitank")) || iParam0 == joaat("bison3")) || iParam0 == joaat("boxville")) || iParam0 == joaat("burrito")) || iParam0 == joaat("burrito2")) || iParam0 == joaat("pony")) || iParam0 == joaat("rancherxl")) || iParam0 == joaat("rebel2")) || iParam0 == joaat("seashark3")) || iParam0 == joaat("forklift")) || iParam0 == joaat("dloader")) || iParam0 == joaat("kosatka")) || iParam0 == joaat("avisa")) || iParam0 == joaat("seasparrow2")) || iParam0 == joaat("boattrailer")) || iParam0 == joaat("youga4")) || iParam0 == joaat("mule5")) || iParam0 == joaat("airbus")) || iParam0 == joaat("rentalbus"))
		{
			return 1;
		}
	}
	return 0;
}

int func_997(int iParam0)//Position - 0x19A1C4
{
	switch (iParam0)
	{
		case 0:
			return joaat("WEAPON_PISTOL");
			break;
		case 1:
			return joaat("WEAPON_COMBATPISTOL");
			break;
		case 2:
			return joaat("WEAPON_APPISTOL");
			break;
		case 29:
			return joaat("WEAPON_SNSPISTOL");
			break;
		case 30:
			return joaat("WEAPON_HEAVYPISTOL");
			break;
		case 37:
			return joaat("WEAPON_VINTAGEPISTOL");
			break;
		case 35:
			return joaat("WEAPON_PISTOL50");
			break;
		case 69:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_PISTOL_MK2");
			}
			break;
		case 75:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_REVOLVER_MK2");
			}
			break;
		case 3:
			return joaat("WEAPON_PUMPSHOTGUN");
			break;
		case 4:
			return joaat("WEAPON_SAWNOFFSHOTGUN");
			break;
		case 5:
			return joaat("WEAPON_ASSAULTSHOTGUN");
			break;
		case 40:
			return joaat("WEAPON_HEAVYSHOTGUN");
			break;
		case 76:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_PUMPSHOTGUN_MK2");
			}
			break;
		case 6:
			return joaat("WEAPON_MICROSMG");
			break;
		case 7:
			return joaat("WEAPON_SMG");
			break;
		case 8:
			return joaat("WEAPON_MG");
			break;
		case 9:
			return joaat("WEAPON_COMBATMG");
			break;
		case 31:
			return joaat("WEAPON_GUSENBERG");
			break;
		case 70:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_SMG_MK2");
			}
			break;
		case 71:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_COMBATMG_MK2");
			}
			break;
		case 10:
			return joaat("WEAPON_ASSAULTRIFLE");
			break;
		case 11:
			return joaat("WEAPON_CARBINERIFLE");
			break;
		case 12:
			return joaat("WEAPON_ADVANCEDRIFLE");
			break;
		case 32:
			return joaat("WEAPON_SPECIALCARBINE");
			break;
		case 33:
			return joaat("WEAPON_BULLPUPRIFLE");
			break;
		case 39:
			return joaat("WEAPON_MUSKET");
			break;
		case 72:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_ASSAULTRIFLE_MK2");
			}
			break;
		case 73:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_CARBINERIFLE_MK2");
			}
			break;
		case 77:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_BULLPUPRIFLE_MK2");
			}
			break;
		case 78:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_SPECIALCARBINE_MK2");
			}
			break;
		case 13:
			return joaat("WEAPON_SNIPERRIFLE");
			break;
		case 14:
			return joaat("WEAPON_HEAVYSNIPER");
			break;
		case 41:
			return joaat("WEAPON_MARKSMANRIFLE");
			break;
		case 79:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_HEAVYSNIPER_MK2");
			}
			break;
		case 15:
			return joaat("WEAPON_GRENADELAUNCHER");
			break;
		case 16:
			return joaat("WEAPON_RPG");
			break;
		case 17:
			return joaat("WEAPON_MINIGUN");
			break;
		case 38:
			return joaat("WEAPON_FIREWORK");
			break;
		case 43:
			return joaat("WEAPON_HOMINGLAUNCHER");
			break;
		case 55:
			return joaat("WEAPON_RAILGUN");
			break;
		case 18:
			return joaat("WEAPON_GRENADE");
			break;
		case 19:
			return joaat("WEAPON_STICKYBOMB");
			break;
		case 20:
			return joaat("WEAPON_SMOKEGRENADE");
			break;
		case 21:
			return joaat("WEAPON_MOLOTOV");
			break;
		case 22:
			return joaat("WEAPON_PETROLCAN");
			break;
		case 44:
			return joaat("WEAPON_PROXMINE");
			break;
		case 23:
			return joaat("WEAPON_KNIFE");
			break;
		case 24:
			return joaat("WEAPON_NIGHTSTICK");
			break;
		case 25:
			return joaat("WEAPON_BAT");
			break;
		case 26:
			return joaat("WEAPON_CROWBAR");
			break;
		case 27:
			return joaat("WEAPON_GOLFCLUB");
			break;
		case 34:
			return joaat("WEAPON_BOTTLE");
			break;
		case 36:
			return joaat("WEAPON_DAGGER");
			break;
		case 28:
			return joaat("WEAPON_UNARMED");
			break;
		case 42:
			return joaat("WEAPON_FLAREGUN");
			break;
		case 45:
			return joaat("WEAPON_KNUCKLE");
			break;
		case 46:
			return joaat("WEAPON_COMBATPDW");
			break;
		case 47:
			return joaat("WEAPON_MARKSMANPISTOL");
			break;
		case 53:
			return joaat("WEAPON_HATCHET");
			break;
		case 48:
			return joaat("WEAPON_MACHETE");
			break;
		case 51:
			return joaat("WEAPON_MACHINEPISTOL");
			break;
		case 54:
			return joaat("WEAPON_ASSAULTSMG");
			break;
		case 49:
			return joaat("WEAPON_DBSHOTGUN");
			break;
		case 50:
			return joaat("WEAPON_COMPACTRIFLE");
			break;
		case 52:
			return joaat("WEAPON_FLASHLIGHT");
			break;
		case 56:
			return joaat("WEAPON_REVOLVER");
			break;
		case 57:
			return joaat("WEAPON_SWITCHBLADE");
			break;
		case 58:
			return joaat("WEAPON_GUSENBERG");
			break;
		case 59:
			return joaat("WEAPON_AUTOSHOTGUN");
			break;
		case 60:
			return joaat("WEAPON_MINISMG");
			break;
		case 61:
			return joaat("WEAPON_COMPACTLAUNCHER");
			break;
		case 62:
			return joaat("WEAPON_PIPEBOMB");
			break;
		case 63:
			return joaat("WEAPON_POOLCUE");
			break;
		case 64:
			return joaat("WEAPON_BATTLEAXE");
			break;
		case 65:
			return joaat("WEAPON_WRENCH");
			break;
		case 66:
			return joaat("WEAPON_BULLPUPSHOTGUN");
			break;
		case 67:
			return joaat("WEAPON_HAMMER");
			break;
		case 68:
			return joaat("WEAPON_DOUBLEACTION");
			break;
		case 80:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_MARKSMANRIFLE_MK2");
			}
			break;
		case 81:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_SNSPISTOL_MK2");
			}
			break;
		case 82:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_REVOLVER_MK2");
			}
			break;
		case 83:
			if (__LIB_0__::func_261())
			{
				return joaat("WEAPON_STONE_HATCHET");
			}
			break;
	}
	return joaat("WEAPON_PISTOL");
}

int func_998(int iParam0)//Position - 0x19A7BD
{
	switch (iParam0)
	{
		case joaat("PICKUP_HEALTH_STANDARD"):
		case joaat("PICKUP_ARMOUR_STANDARD"):
		case joaat("PICKUP_HEALTH_SNACK"):
		case joaat("PICKUP_MONEY_VARIABLE"):
		case joaat("PICKUP_MONEY_CASE"):
		case joaat("PICKUP_MONEY_WALLET"):
		case joaat("PICKUP_MONEY_PURSE"):
		case joaat("PICKUP_MONEY_DEP_BAG"):
		case joaat("PICKUP_MONEY_MED_BAG"):
		case joaat("PICKUP_MONEY_PAPER_BAG"):
		case joaat("PICKUP_MONEY_SECURITY_CASE"):
		case joaat("PICKUP_GANG_ATTACK_MONEY"):
		case joaat("PICKUP_WEAPON_PISTOL"):
		case joaat("PICKUP_WEAPON_COMBATPISTOL"):
		case joaat("PICKUP_WEAPON_PISTOL50"):
		case joaat("PICKUP_WEAPON_APPISTOL"):
		case joaat("PICKUP_WEAPON_MICROSMG"):
		case joaat("PICKUP_WEAPON_SMG"):
		case joaat("PICKUP_WEAPON_ASSAULTSMG"):
		case joaat("PICKUP_WEAPON_ASSAULTRIFLE"):
		case joaat("PICKUP_WEAPON_CARBINERIFLE"):
		case joaat("PICKUP_WEAPON_HEAVYRIFLE"):
		case joaat("PICKUP_WEAPON_ADVANCEDRIFLE"):
		case joaat("PICKUP_WEAPON_MG"):
		case joaat("PICKUP_WEAPON_COMBATMG"):
		case joaat("PICKUP_WEAPON_ASSAULTMG"):
		case joaat("PICKUP_WEAPON_PUMPSHOTGUN"):
		case joaat("PICKUP_WEAPON_SAWNOFFSHOTGUN"):
		case joaat("PICKUP_WEAPON_ASSAULTSHOTGUN"):
		case joaat("PICKUP_WEAPON_SNIPERRIFLE"):
		case joaat("PICKUP_WEAPON_ASSAULTSNIPER"):
		case joaat("PICKUP_WEAPON_HEAVYSNIPER"):
		case joaat("PICKUP_WEAPON_GRENADELAUNCHER"):
		case joaat("PICKUP_WEAPON_RPG"):
		case joaat("PICKUP_WEAPON_MINIGUN"):
		case joaat("PICKUP_WEAPON_GRENADE"):
		case joaat("PICKUP_WEAPON_SMOKEGRENADE"):
		case joaat("PICKUP_WEAPON_STICKYBOMB"):
		case joaat("PICKUP_WEAPON_MOLOTOV"):
		case joaat("PICKUP_WEAPON_STUNGUN"):
		case joaat("PICKUP_WEAPON_RUBBERGUN"):
		case joaat("PICKUP_WEAPON_PROGRAMMABLEAR"):
		case joaat("PICKUP_WEAPON_FIREEXTINGUISHER"):
		case joaat("PICKUP_WEAPON_PETROLCAN"):
		case joaat("PICKUP_WEAPON_LOUDHAILER"):
		case joaat("PICKUP_WEAPON_KNIFE"):
		case joaat("PICKUP_WEAPON_NIGHTSTICK"):
		case joaat("PICKUP_WEAPON_HAMMER"):
		case joaat("PICKUP_WEAPON_BAT"):
		case joaat("PICKUP_WEAPON_CROWBAR"):
		case joaat("PICKUP_WEAPON_GOLFCLUB"):
		case joaat("PICKUP_AMMO_BULLET_MP"):
		case joaat("PICKUP_AMMO_MISSILE_MP"):
		case joaat("PICKUP_AMMO_GRENADELAUNCHER_MP"):
		case joaat("PICKUP_AMMO_PISTOL"):
		case joaat("PICKUP_AMMO_SMG"):
		case joaat("PICKUP_AMMO_RIFLE"):
		case joaat("PICKUP_AMMO_MG"):
		case joaat("PICKUP_AMMO_SHOTGUN"):
			return 1;
		default:
	}
	switch (iParam0)
	{
		case joaat("PICKUP_AMMO_SNIPER"):
		case joaat("PICKUP_AMMO_GRENADELAUNCHER"):
		case joaat("PICKUP_AMMO_RPG"):
		case joaat("PICKUP_AMMO_MINIGUN"):
		case joaat("PICKUP_AMMO_RUBBERGUN"):
		case joaat("PICKUP_AMMO_HARPOON"):
		case joaat("PICKUP_AMMO_FLAREGUN"):
		case joaat("PICKUP_AMMO_FIREWORK"):
		case joaat("PICKUP_AMMO_AMRIFLE"):
		case joaat("PICKUP_AMMO_CROSSBOW"):
		case joaat("PICKUP_VEHICLE_HEALTH_STANDARD"):
		case joaat("PICKUP_VEHICLE_HEALTH_STANDARD_LOW_GLOW"):
		case joaat("PICKUP_VEHICLE_ARMOUR_STANDARD"):
		case joaat("PICKUP_VEHICLE_WEAPON_PISTOL"):
		case joaat("PICKUP_VEHICLE_WEAPON_COMBATPISTOL"):
		case joaat("PICKUP_VEHICLE_WEAPON_PISTOL50"):
		case joaat("PICKUP_VEHICLE_WEAPON_APPISTOL"):
		case joaat("PICKUP_VEHICLE_WEAPON_MICROSMG"):
		case joaat("PICKUP_VEHICLE_WEAPON_SMG"):
		case joaat("PICKUP_VEHICLE_WEAPON_SAWNOFF"):
		case joaat("PICKUP_VEHICLE_WEAPON_ASSAULTSMG"):
		case joaat("PICKUP_VEHICLE_WEAPON_GRENADE"):
		case joaat("PICKUP_VEHICLE_WEAPON_SMOKEGRENADE"):
		case joaat("PICKUP_VEHICLE_WEAPON_STICKYBOMB"):
		case joaat("PICKUP_VEHICLE_WEAPON_MOLOTOV"):
		case joaat("PICKUP_VEHICLE_CUSTOM_SCRIPT"):
		case joaat("PICKUP_VEHICLE_CUSTOM_SCRIPT_LOW_GLOW"):
		case joaat("PICKUP_VEHICLE_MONEY_VARIABLE"):
		case joaat("PICKUP_PORTABLE_CRATE_UNFIXED"):
		case joaat("PICKUP_PORTABLE_CRATE_UNFIXED_LOW_GLOW"):
		case joaat("PICKUP_PORTABLE_PACKAGE"):
		case joaat("PICKUP_PORTABLE_DLC_VEHICLE_PACKAGE"):
		case joaat("PICKUP_SUBMARINE"):
		case joaat("PICKUP_PARACHUTE"):
		case joaat("PICKUP_CUSTOM_SCRIPT"):
		case joaat("PICKUP_HANDCUFF_KEY"):
		case joaat("PICKUP_CAMERA"):
		case joaat("PICKUP_WEAPON_BOTTLE"):
		case joaat("PICKUP_WEAPON_SPECIALCARBINE"):
		case joaat("PICKUP_WEAPON_SNSPISTOL"):
		case joaat("PICKUP_WEAPON_BULLPUPRIFLE"):
		case joaat("PICKUP_WEAPON_HEAVYPISTOL"):
		case joaat("PICKUP_WEAPON_DAGGER"):
		case joaat("PICKUP_WEAPON_VINTAGEPISTOL"):
		case joaat("PICKUP_WEAPON_GUSENBERG"):
		case joaat("PICKUP_WEAPON_FIREWORK"):
		case joaat("PICKUP_WEAPON_MUSKET"):
		case joaat("PICKUP_WEAPON_HOMINGLAUNCHER"):
		case joaat("PICKUP_WEAPON_PROXMINE"):
		case joaat("PICKUP_WEAPON_HATCHET"):
		case joaat("PICKUP_WEAPON_RAILGUN"):
		case joaat("PICKUP_WEAPON_FLAREGUN"):
		case joaat("PICKUP_WEAPON_BULLPUPSHOTGUN"):
		case joaat("PICKUP_WEAPON_MACHINEPISTOL"):
		case joaat("PICKUP_WEAPON_MARKSMANPISTOL"):
		case joaat("PICKUP_WEAPON_HEAVYSHOTGUN"):
		case joaat("PICKUP_WEAPON_MARKSMANRIFLE"):
		case joaat("PICKUP_WEAPON_COMPACTRIFLE"):
		case joaat("PICKUP_WEAPON_DBSHOTGUN"):
		case joaat("PICKUP_WEAPON_MACHETE"):
		case joaat("PICKUP_WEAPON_FLASHLIGHT"):
		case joaat("PICKUP_WEAPON_KNUCKLE"):
		case joaat("PICKUP_WEAPON_COMBATPDW"):
		case joaat("PICKUP_WEAPON_SWITCHBLADE"):
		case joaat("PICKUP_WEAPON_REVOLVER"):
		case joaat("PICKUP_WEAPON_AUTOSHOTGUN"):
		case joaat("PICKUP_WEAPON_MINISMG"):
		case joaat("PICKUP_WEAPON_COMPACTLAUNCHER"):
		case joaat("PICKUP_WEAPON_PIPEBOMB"):
		case joaat("PICKUP_WEAPON_POOLCUE"):
		case joaat("PICKUP_WEAPON_BATTLEAXE"):
		case joaat("PICKUP_WEAPON_WRENCH"):
		case joaat("PICKUP_WEAPON_ASSAULTRIFLE_MK2"):
		case joaat("PICKUP_WEAPON_CARBINERIFLE_MK2"):
		case joaat("PICKUP_WEAPON_COMBATMG_MK2"):
		case joaat("PICKUP_WEAPON_HEAVYSNIPER_MK2"):
		case joaat("PICKUP_WEAPON_PISTOL_MK2"):
		case joaat("PICKUP_WEAPON_SMG_MK2"):
		case joaat("PICKUP_WEAPON_SNSPISTOL_MK2"):
		case joaat("PICKUP_WEAPON_REVOLVER_MK2"):
		case joaat("PICKUP_WEAPON_BULLPUPRIFLE_MK2"):
		case joaat("PICKUP_WEAPON_SPECIALCARBINE_MK2"):
		case joaat("PICKUP_WEAPON_PUMPSHOTGUN_MK2"):
		case joaat("PICKUP_WEAPON_MARKSMANRIFLE_MK2"):
		case joaat("PICKUP_WEAPON_DOUBLEACTION"):
		case joaat("PICKUP_WEAPON_STONE_HATCHET"):
		case joaat("PICKUP_WEAPON_NAVYREVOLVER"):
		case joaat("PICKUP_WEAPON_POLICERIFLE"):
		case joaat("PICKUP_WEAPON_COMBATSHOTGUN"):
		case joaat("PICKUP_WEAPON_RAYCARBINE"):
		case joaat("PICKUP_WEAPON_RAYMINIGUN"):
		case joaat("PICKUP_WEAPON_RAYPISTOL"):
		case joaat("PICKUP_WEAPON_GADGETPISTOL"):
		case joaat("PICKUP_WEAPON_STUNGUN_MP"):
		case joaat("PICKUP_WEAPON_HEAVYRIFLE"):
		case joaat("PICKUP_WEAPON_EMPLAUNCHER"):
		case joaat("PICKUP_WEAPON_CERAMICPISTOL"):
		case joaat("PICKUP_WEAPON_MILITARYRIFLE"):
		case joaat("PICKUP_WEAPON_TACTICALRIFLE"):
		case joaat("PICKUP_WEAPON_PRECISIONRIFLE"):
		case joaat("PICKUP_PORTABLE_PACKAGE_LARGE_RADIUS"):
			return 1;
		default:
	}
	if (__LIB_0__::func_274())
	{
		switch (iParam0)
		{
			case joaat("PICKUP_WEAPON_FERTILIZERCAN"):
				return 1;
			}
		default:
	}
	return 0;
}

void func_999(int iParam0)//Position - 0x19ABB4
{
	int iVar0;
	int iVar1;
	char[] cVar2[8];
	var* uVar3;
	var* uVar4[10];
	var* uVar5[10];
	var* uVar6[10];
	var* uVar7[10];
	if (DATAFILE::DATADICT_GET_DICT(iParam0, "ptemp") == 0)
	{
		return;
	}
	uVar3 = DATAFILE::DATADICT_GET_DICT(iParam0, "ptemp");
	Global_4718592.f_168703 = DATAFILE::DATADICT_GET_INT(uVar3, "no");
	iVar0 = 0;
	while (iVar0 <= (Global_4718592.f_168703 - 1))
	{
		StringCopy(&cVar2, "pto", 8);
		StringIntConCat(&cVar2, iVar0, 8);
		uVar4[iVar0] = DATAFILE::DATADICT_GET_ARRAY(uVar3, &cVar2);
		StringCopy(&cVar2, "ptr", 8);
		StringIntConCat(&cVar2, iVar0, 8);
		uVar5[iVar0] = DATAFILE::DATADICT_GET_ARRAY(uVar3, &cVar2);
		StringCopy(&cVar2, "ptm", 8);
		StringIntConCat(&cVar2, iVar0, 8);
		uVar6[iVar0] = DATAFILE::DATADICT_GET_ARRAY(uVar3, &cVar2);
		StringCopy(&cVar2, "ptc", 8);
		StringIntConCat(&cVar2, iVar0, 8);
		uVar7[iVar0] = DATAFILE::DATADICT_GET_ARRAY(uVar3, &cVar2);
		iVar1 = 0;
		while (iVar1 <= 29)
		{
			if (uVar4[iVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar4[iVar0], iVar1) == 5)
			{
				Global_4718592.f_166222[iVar0 /*248*/][iVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar4[iVar0], iVar1) };
			}
			else
			{
				Global_4718592.f_166222[iVar0 /*248*/][iVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar5[iVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar5[iVar0], iVar1) == 5)
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_91[iVar1 /*3*/] = { DATAFILE::DATAARRAY_GET_VECTOR(uVar5[iVar0], iVar1) };
			}
			else
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_91[iVar1 /*3*/] = { 0f, 0f, 0f };
			}
			if (uVar6[iVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar6[iVar0], iVar1) == 2)
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_182[iVar1] = DATAFILE::DATAARRAY_GET_INT(uVar6[iVar0], iVar1);
			}
			else
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_182[iVar1] = 0;
			}
			if (uVar7[iVar0] != 0 && DATAFILE::DATAARRAY_GET_TYPE(uVar7[iVar0], iVar1) == 2)
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_213[iVar1] = DATAFILE::DATAARRAY_GET_INT(uVar7[iVar0], iVar1);
			}
			else
			{
				Global_4718592.f_166222[iVar0 /*248*/].f_213[iVar1] = 0;
			}
			iVar1++;
		}
		iVar0++;
	}
}
